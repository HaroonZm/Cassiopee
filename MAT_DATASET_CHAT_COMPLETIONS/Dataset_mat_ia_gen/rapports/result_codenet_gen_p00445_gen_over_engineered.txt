================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:59:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import List, Tuple, Iterator

class StringSource(ABC):
    @abstractmethod
    def __iter__(self) -> Iterator[str]:
        pass

class StdInStringSource(StringSource):
    def __iter__(self) -> Iterator[str]:
        import sys
        for line in sys.stdin:
            line = line.strip()
            if line:
                yield line

class PatternMatcher(ABC):
    @abstractmethod
    def count_patterns(self, s: str) -> Tuple[int, int]:
        pass

class JOIIOIPatternMatcher(PatternMatcher):
    def __init__(self, patterns: List[str] = ["JOI", "IOI"]):
        self.patterns = patterns

    def count_patterns(self, s: str) -> Tuple[int, int]:
        counts = {pattern: 0 for pattern in self.patterns}
        length = len(s)
        for i in range(length - 2):
            substring = s[i:i+3]
            if substring in counts:
                counts[substring] += 1
        return counts["JOI"], counts["IOI"]

class Processor:
    def __init__(self, source: StringSource, matcher: PatternMatcher):
        self.source = source
        self.matcher = matcher

    def process(self) -> List[Tuple[int, int]]:
        results = []
        for line in self._limited_datasets(self.source, limit=5):
            joi_count, ioi_count = self.matcher.count_patterns(line)
            results.append((joi_count, ioi_count))
        return results

    @staticmethod
    def _limited_datasets(source: StringSource, limit: int) -> Iterator[str]:
        count = 0
        for line in source:
            if count >= limit:
                break
            yield line
            count += 1

class OutputRenderer:
    def __init__(self, results: List[Tuple[int, int]]):
        self.results = results

    def render(self):
        for joi_count, ioi_count in self.results:
            print(joi_count)
            print(ioi_count)

def main():
    source = StdInStringSource()
    matcher = JOIIOIPatternMatcher()
    processor = Processor(source, matcher)
    results = processor.process()
    renderer = OutputRenderer(results)
    renderer.render()

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.1604270040988922
    2. 'ABC' → logprob: -1.9104269742965698
    3. ' A' → logprob: -9.53542709350586
    4. 'AB' → logprob: -9.53542709350586
    5. 'A' → logprob: -11.03542709350586
    6. 'ABCDE' → logprob: -11.16042709350586
    7. 'abc' → logprob: -11.28542709350586
    8. 'abstract' → logprob: -12.41042709350586
    9. ' ' → logprob: -13.16042709350586
    10. '_AB' → logprob: -13.41042709350586

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.28183513879776
    2. ',' → logprob: -1.4068350791931152
    3. 'import' → logprob: -8.156835556030273
    4. '```' → logprob: -9.406835556030273
    5. ' ,' → logprob: -9.906835556030273
    6. '' → logprob: -10.156835556030273
    7. ' ' → logprob: -10.281835556030273
    8. ',
' → logprob: -10.281835556030273
    9. ':' → logprob: -10.406835556030273
    10. ' .' → logprob: -10.781835556030273

Token 5: ' abstract' (ID: 13004)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.5760498642921448
    2. ' abstract' → logprob: -0.8260498642921448
    3. 'Abstract' → logprob: -9.2010498046875
    4. ' ' → logprob: -12.5760498046875
    5. '.abstract' → logprob: -13.2010498046875
    6. ' Abstract' → logprob: -13.4510498046875
    7. ' ABC' → logprob: -14.5760498046875
    8. 'abc' → logprob: -14.8260498046875
    9. ' A' → logprob: -14.9510498046875
    10. '123' → logprob: -15.2010498046875

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00019889144459739327
    2. 'classmethod' → logprob: -9.000199317932129
    3. 'm' → logprob: -10.000199317932129
    4. '_method' → logprob: -11.250199317932129
    5. 'staticmethod' → logprob: -11.750199317932129
    6. 'meth' → logprob: -12.375199317932129
    7. ' method' → logprob: -13.750199317932129
    8. '```' → logprob: -13.875199317932129
    9. 'ethod' → logprob: -14.125199317932129
    10. 'abstract' → logprob: -14.375199317932129

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1904592216014862
    2. '```' → logprob: -2.3154592514038086
    3. 'class' → logprob: -3.4404592514038086
    4. '

' → logprob: -4.315459251403809
    5. '' → logprob: -4.565459251403809
    6. '
' → logprob: -5.065459251403809
    7. '\n' → logprob: -5.315459251403809
    8. '``' → logprob: -6.440459251403809
    9. '\' → logprob: -6.690459251403809
    10. ' 

' → logprob: -7.190459251403809

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08535076677799225
    2. '

' → logprob: -3.460350751876831
    3. 'class' → logprob: -3.710350751876831
    4. '```' → logprob: -4.83535099029541
    5. '
' → logprob: -4.96035099029541
    6. '' → logprob: -5.08535099029541
    7. '\n' → logprob: -6.21035099029541
    8. ' 

' → logprob: -7.58535099029541
    9. ' 
' → logprob: -7.58535099029541
    10. '``' → logprob: -8.21035099029541

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.07908674329519272
    2. ' collections' → logprob: -2.8290867805480957
    3. ' dat' → logprob: -5.579086780548096
    4. ' os' → logprob: -5.954086780548096
    5. ' io' → logprob: -6.329086780548096
    6. 'typing' → logprob: -6.329086780548096
    7. ' abc' → logprob: -6.454086780548096
    8. ' sys' → logprob: -6.954086780548096
    9. ' datetime' → logprob: -7.204086780548096
    10. ' math' → logprob: -7.454086780548096

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5059148073196411
    2. 'import' → logprob: -1.2559148073196411
    3. '.' → logprob: -2.2559146881103516
    4. '.import' → logprob: -6.005914688110352
    5. '<|end|>' → logprob: -6.755914688110352
    6. ' ' → logprob: -7.005914688110352
    7. '```' → logprob: -7.380914688110352
    8. '[' → logprob: -7.505914688110352
    9. ' .' → logprob: -8.130914688110352
    10. '.space' → logprob: -8.505914688110352

Token 11: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.5475577116012573
    2. ' Union' → logprob: -1.6725577116012573
    3. ' List' → logprob: -2.047557830810547
    4. 'Any' → logprob: -2.547557830810547
    5. ' Optional' → logprob: -5.047557830810547
    6. ' Callable' → logprob: -5.172557830810547
    7. 'Union' → logprob: -5.797557830810547
    8. 'List' → logprob: -5.797557830810547
    9. ' Protocol' → logprob: -6.047557830810547
    10. ' ' → logprob: -6.047557830810547

Token 12: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9252783060073853
    2. '

' → logprob: -1.0502783060073853
    3. 'class' → logprob: -1.4252783060073853
    4. '```' → logprob: -4.675278186798096
    5. '
' → logprob: -6.800278186798096
    6. '\n' → logprob: -7.050278186798096
    7. '


' → logprob: -7.425278186798096
    8. '``' → logprob: -7.675278186798096
    9. ' class' → logprob: -8.175278663635254
    10. '<|end|>' → logprob: -8.925278663635254

Token 13: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -1.4373971223831177
    2. 'Optional' → logprob: -1.5623971223831177
    3. ' Union' → logprob: -1.6873971223831177
    4. 'Any' → logprob: -1.6873971223831177
    5. ' Any' → logprob: -2.437397003173828
    6. 'Union' → logprob: -3.312397003173828
    7. ' Callable' → logprob: -3.437397003173828
    8. 'Callable' → logprob: -4.812397003173828
    9. 'Tuple' → logprob: -5.062397003173828
    10. 'Iterable' → logprob: -5.437397003173828

Token 14: ',' (ID: 11)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.46902546286582947
    2. '

' → logprob: -1.5940254926681519
    3. '
' → logprob: -1.8440254926681519
    4. '```' → logprob: -4.719025611877441
    5. '\n' → logprob: -5.844025611877441
    6. '``' → logprob: -7.844025611877441
    7. ' class' → logprob: -7.969025611877441
    8. '


' → logprob: -8.469025611877441
    9. '
' → logprob: -9.219025611877441
    10. '<class' → logprob: -9.469025611877441

Token 15: ' Iterator' (ID: 41994)
  Prédit: 'Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Any' → logprob: -1.4378143548965454
    2. ' Union' → logprob: -1.4378143548965454
    3. 'Optional' → logprob: -2.187814235687256
    4. 'Union' → logprob: -2.187814235687256
    5. ' Optional' → logprob: -2.312814235687256
    6. ' Any' → logprob: -2.562814235687256
    7. ' Callable' → logprob: -2.812814235687256
    8. 'Callable' → logprob: -3.187814235687256
    9. 'Iterable' → logprob: -5.187814235687256
    10. 'Dict' → logprob: -5.187814235687256

Token 16: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5918073058128357
    2. 'class' → logprob: -1.3418073654174805
    3. '
' → logprob: -1.7168073654174805
    4. '```' → logprob: -5.5918073654174805
    5. '


' → logprob: -6.8418073654174805
    6. '
' → logprob: -8.46680736541748
    7. '``' → logprob: -8.46680736541748
    8. '\n' → logprob: -9.09180736541748
    9. ' class' → logprob: -9.09180736541748
    10. '<class' → logprob: -9.71680736541748

Token 17: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.004400444217026234
    2. '
' → logprob: -5.754400253295898
    3. '```' → logprob: -6.754400253295898
    4. '\n' → logprob: -10.754400253295898
    5. '``' → logprob: -11.254400253295898
    6. '

' → logprob: -12.129400253295898
    7. '<class' → logprob: -12.129400253295898
    8. ' class' → logprob: -12.254400253295898
    9. '"class' → logprob: -13.254400253295898
    10. '
' → logprob: -14.129400253295898

Token 18: ' String' (ID: 1189)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.038245294243097305
    2. ' Abstract' → logprob: -3.78824520111084
    3. ' Shape' → logprob: -5.53824520111084
    4. ' Iterable' → logprob: -6.28824520111084
    5. ' My' → logprob: -6.41324520111084
    6. ' ABC' → logprob: -6.91324520111084
    7. ' Space' → logprob: -6.91324520111084
    8. ' Serializer' → logprob: -7.16324520111084
    9. ' Base' → logprob: -7.28824520111084
    10. ' Parser' → logprob: -7.66324520111084

Token 19: 'Source' (ID: 4823)
  Prédit: 'Processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -0.6896182298660278
    2. '(' → logprob: -0.8146182298660278
    3. 'Handler' → logprob: -3.8146181106567383
    4. 'Iterator' → logprob: -4.064618110656738
    5. 'Iterable' → logprob: -5.314618110656738
    6. 'Manipulator' → logprob: -5.939618110656738
    7. 'Enumerator' → logprob: -6.814618110656738
    8. ' (' → logprob: -7.064618110656738
    9. ':' → logprob: -7.189618110656738
    10. '(Abstract' → logprob: -7.814618110656738

Token 20: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25438857078552246
    2. ':' → logprob: -1.5043885707855225
    3. '(Abstract' → logprob: -6.254388809204102
    4. '():' → logprob: -8.129388809204102
    5. '(:' → logprob: -8.754388809204102
    6. '```' → logprob: -11.004388809204102
    7. ' :' → logprob: -11.879388809204102
    8. '):' → logprob: -12.004388809204102
    9. '(Exception' → logprob: -12.004388809204102
    10. '(S' → logprob: -12.004388809204102

Token 21: 'ABC' (ID: 44197)
  Prédit: ' ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.2813584804534912
    2. 'ABC' → logprob: -1.4063584804534912
    3. ')' → logprob: -9.53135871887207
    4. 'abc' → logprob: -10.40635871887207
    5. 'Iterable' → logprob: -11.03135871887207
    6. ' abc' → logprob: -11.40635871887207
    7. ' ' → logprob: -11.53135871887207
    8. 'Iterator' → logprob: -11.78135871887207
    9. ' str' → logprob: -11.78135871887207
    10. ' Iterable' → logprob: -11.78135871887207

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016332860104739666
    2. ')' → logprob: -6.501633167266846
    3. ':' → logprob: -9.001633644104004
    4. '):
' → logprob: -12.376633644104004
    5. ',' → logprob: -13.376633644104004
    6. ' ):' → logprob: -13.876633644104004
    7. '):

' → logprob: -15.376633644104004
    8. ']:' → logprob: -16.376632690429688
    9. ':)' → logprob: -16.501632690429688
    10. '```' → logprob: -16.501632690429688

Token 23: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026702912524342537
    2. '   ' → logprob: -3.651702880859375
    3. ' :' → logprob: -8.651702880859375
    4. '):' → logprob: -9.401702880859375
    5. ':
' → logprob: -10.526702880859375
    6. '```' → logprob: -10.651702880859375
    7. '<|end|>' → logprob: -10.776702880859375
    8. '  ' → logprob: -11.026702880859375
    9. ')' → logprob: -11.776702880859375
    10. '    ' → logprob: -11.901702880859375

Token 24: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4189343750476837
    2. ':' → logprob: -1.9189343452453613
    3. '    
' → logprob: -2.7939343452453613
    4. '
' → logprob: -2.9189343452453613
    5. 'def' → logprob: -3.9189343452453613
    6. '<|end|>' → logprob: -4.293934345245361
    7. ' 
' → logprob: -4.793934345245361
    8. '  
' → logprob: -5.293934345245361
    9. '' → logprob: -5.418934345245361
    10. '```' → logprob: -5.418934345245361

Token 25: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -1.1472419600977446e-06
    2. 'property' → logprob: -14.000000953674316
    3. 'abc' → logprob: -16.750001907348633
    4. 'ab' → logprob: -17.000001907348633
    5. 'staticmethod' → logprob: -17.250001907348633
    6. 'abs' → logprob: -18.500001907348633
    7. ' abstract' → logprob: -18.625001907348633
    8. 'classmethod' → logprob: -18.875001907348633
    9. '.abstract' → logprob: -20.000001907348633
    10. 'a' → logprob: -22.250001907348633

Token 26: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.00011427151912357658
    2. '_method' → logprob: -9.125114440917969
    3. 'classmethod' → logprob: -12.875114440917969
    4. 'meth' → logprob: -13.250114440917969
    5. 'm' → logprob: -15.000114440917969
    6. 'ethod' → logprob: -15.250114440917969
    7. 'staticmethod' → logprob: -15.625114440917969
    8. 'Method' → logprob: -16.62511444091797
    9. '	method' → logprob: -16.87511444091797
    10. 'property' → logprob: -17.12511444091797

Token 27: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07245539128780365
    2. '(' → logprob: -3.447455406188965
    3. ' def' → logprob: -4.447455406188965
    4. '
' → logprob: -4.947455406188965
    5. '<|end|>' → logprob: -5.197455406188965
    6. '\' → logprob: -5.697455406188965
    7. '(def' → logprob: -6.322455406188965
    8. '('' → logprob: -6.572455406188965
    9. ')' → logprob: -6.947455406188965
    10. ' ' → logprob: -7.447455406188965

Token 28: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23832355439662933
    2. '(' → logprob: -1.6133235692977905
    3. ' def' → logprob: -5.11332368850708
    4. 'method' → logprob: -6.61332368850708
    5. ')' → logprob: -6.86332368850708
    6. '(
' → logprob: -7.23832368850708
    7. '
' → logprob: -7.73832368850708
    8. '('' → logprob: -7.73832368850708
    9. '(def' → logprob: -7.73832368850708
    10. '<|end|>' → logprob: -7.86332368850708

Token 29: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004389528650790453
    2. ' def' → logprob: -5.629389762878418
    3. 'method' → logprob: -7.379389762878418
    4. '
' → logprob: -9.004389762878418
    5. ' ' → logprob: -10.629389762878418
    6. 'classmethod' → logprob: -13.004389762878418
    7. 'iterator' → logprob: -13.129389762878418
    8. '   ' → logprob: -13.504389762878418
    9. 'token' → logprob: -13.504389762878418
    10. '```' → logprob: -13.629389762878418

Token 30: ' __' (ID: 2516)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.6196584105491638
    2. ' read' → logprob: -1.1196584701538086
    3. ' iterate' → logprob: -2.2446584701538086
    4. ' strings' → logprob: -4.619658470153809
    5. ' source' → logprob: -5.119658470153809
    6. ' iter' → logprob: -5.119658470153809
    7. ' generate' → logprob: -5.994658470153809
    8. ' fetch' → logprob: -6.744658470153809
    9. ' next' → logprob: -7.119658470153809
    10. ' def' → logprob: -7.869658470153809

Token 31: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.0026026491541415453
    2. 'next' → logprob: -6.002602577209473
    3. 'init' → logprob: -9.502602577209473
    4. 'ait' → logprob: -10.252602577209473
    5. 'call' → logprob: -11.377602577209473
    6. 'getitem' → logprob: -12.627602577209473
    7. 'str' → logprob: -13.252602577209473
    8. 'len' → logprob: -15.002602577209473
    9. ' next' → logprob: -15.502602577209473
    10. 'it' → logprob: -16.37760353088379

Token 32: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06224428489804268
    2. '__' → logprob: -2.812244176864624
    3. '__(
' → logprob: -8.562244415283203
    4. '__('' → logprob: -10.187244415283203
    5. '__((' → logprob: -10.312244415283203
    6. '___' → logprob: -12.062244415283203
    7. '__(*' → logprob: -12.812244415283203
    8. '____' → logprob: -13.062244415283203
    9. '__("' → logprob: -13.937244415283203
    10. '_' → logprob: -13.937244415283203

Token 33: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2200749754119897e-06
    2. ' self' → logprob: -13.500001907348633
    3. ')' → logprob: -14.125001907348633
    4. 's' → logprob: -18.375001907348633
    5. '       ' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.875001907348633
    7. '
' → logprob: -19.250001907348633
    8. '(self' → logprob: -19.250001907348633
    9. '_self' → logprob: -19.250001907348633
    10. '```' → logprob: -19.750001907348633

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014663703739643097
    2. 'self' → logprob: -4.5146636962890625
    3. '):' → logprob: -5.6396636962890625
    4. ',' → logprob: -10.639663696289062
    5. ')->' → logprob: -11.264663696289062
    6. '   ' → logprob: -12.389663696289062
    7. '       ' → logprob: -12.764663696289062
    8. '(self' → logprob: -12.889663696289062
    9. '):
' → logprob: -13.139663696289062
    10. '```' → logprob: -13.639663696289062

Token 35: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011107707396149635
    2. '(' → logprob: -5.011107921600342
    3. ' ->' → logprob: -6.261107921600342
    4. '->' → logprob: -7.011107921600342
    5. 'self' → logprob: -7.386107921600342
    6. '       ' → logprob: -7.886107921600342
    7. ')' → logprob: -8.261107444763184
    8. '```' → logprob: -9.136107444763184
    9. '   ' → logprob: -9.386107444763184
    10. '(s' → logprob: -10.261107444763184

Token 36: ' Iterator' (ID: 41994)
  Prédit: ' Iterator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Iterator' → logprob: -0.5240075588226318
    2. 'Iterator' → logprob: -0.8990075588226318
    3. ' str' → logprob: -8.024007797241211
    4. '	Iterator' → logprob: -8.024007797241211
    5. 'str' → logprob: -8.899007797241211
    6. ' ' → logprob: -10.149007797241211
    7. 'Iterable' → logprob: -10.524007797241211
    8. '   ' → logprob: -11.649007797241211
    9. ' Iterable' → logprob: -12.774007797241211
    10. '.Iterator' → logprob: -12.899007797241211

Token 37: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -5.919942486798391e-05
    2. '[' → logprob: -9.750059127807617
    3. '[List' → logprob: -14.750059127807617
    4. 'str' → logprob: -16.250059127807617
    5. '[[' → logprob: -16.375059127807617
    6. '[int' → logprob: -16.500059127807617
    7. '```' → logprob: -17.000059127807617
    8. '[
' → logprob: -18.000059127807617
    9. ' [' → logprob: -18.125059127807617
    10. '[String' → logprob: -19.000059127807617

Token 38: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0002600245934445411
    2. '):' → logprob: -8.625260353088379
    3. ']):' → logprob: -10.000260353088379
    4. ']' → logprob: -10.500260353088379
    5. ']>' → logprob: -12.875260353088379
    6. '>:' → logprob: -13.625260353088379
    7. '"]:' → logprob: -13.875260353088379
    8. ':' → logprob: -14.125260353088379
    9. '']:' → logprob: -14.375260353088379
    10. ']:
' → logprob: -14.500260353088379

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08469095826148987
    2. '<|end|>' → logprob: -2.709691047668457
    3. '
' → logprob: -4.959691047668457
    4. '\n' → logprob: -5.459691047668457
    5. '...' → logprob: -7.084691047668457
    6. ':' → logprob: -7.334691047668457
    7. '\' → logprob: -7.709691047668457
    8. '   ' → logprob: -8.084691047668457
    9. ' 
' → logprob: -8.709691047668457
    10. '        
' → logprob: -8.959691047668457

Token 40: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010397746227681637
    2. 'pass' (adapté à ' pass') → logprob: -4.885397911071777
    3. '...' → logprob: -6.135397911071777
    4. ' pass' → logprob: -8.010397911071777
    5. '           ' → logprob: -9.010397911071777
    6. 'yield' → logprob: -9.635397911071777
    7. '   ' → logprob: -9.760397911071777
    8. ' ...' → logprob: -11.010397911071777
    9. 'raise' → logprob: -11.760397911071777
    10. '     ' → logprob: -12.260397911071777

Token 41: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05801214277744293
    2. '

' → logprob: -3.3080122470855713
    3. 'class' → logprob: -4.183012008666992
    4. '<|end|>' → logprob: -5.933012008666992
    5. '\n' → logprob: -7.933012008666992
    6. '    
' → logprob: -7.933012008666992
    7. '


' → logprob: -8.308012008666992
    8. '   ' → logprob: -8.433012008666992
    9. ' class' → logprob: -8.933012008666992
    10. '' → logprob: -9.308012008666992

Token 42: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4750666916370392
    2. '
' → logprob: -0.9750666618347168
    3. '

' → logprob: -7.725066661834717
    4. ' class' → logprob: -8.850067138671875
    5. '<|end|>' → logprob: -9.100067138671875
    6. '    
' → logprob: -9.475067138671875
    7. '\n' → logprob: -9.600067138671875
    8. '  
' → logprob: -10.600067138671875
    9. ' 
' → logprob: -10.725067138671875
    10. '```' → logprob: -10.850067138671875

Token 43: ' Std' (ID: 74505)
  Prédit: ' String'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' String' → logprob: -0.41051894426345825
    2. ' ' → logprob: -1.1605188846588135
    3. ' Concrete' → logprob: -4.785519123077393
    4. ' Basic' → logprob: -6.160519123077393
    5. ' ' → logprob: -6.535519123077393
    6. 'String' → logprob: -6.785519123077393
    7. ' My' → logprob: -6.785519123077393
    8. ' Single' → logprob: -6.910519123077393
    9. ' Csv' → logprob: -7.160519123077393
    10. ' Simple' → logprob: -7.285519123077393

Token 44: 'In' (ID: 637)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.05374133586883545
    2. 'out' → logprob: -3.053741455078125
    3. 'In' → logprob: -5.678741455078125
    4. 'lib' → logprob: -6.803741455078125
    5. 'Input' → logprob: -8.303741455078125
    6. 'io' → logprob: -9.303741455078125
    7. 'String' → logprob: -9.428741455078125
    8. 'input' → logprob: -9.553741455078125
    9. 'Stream' → logprob: -10.053741455078125
    10. 'Lib' → logprob: -10.803741455078125

Token 45: 'String' (ID: 916)
  Prédit: 'String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -0.3728087842464447
    2. 'Source' → logprob: -1.247808814048767
    3. 'Reader' → logprob: -4.372808933258057
    4. 'put' → logprob: -5.122808933258057
    5. 'Iterator' → logprob: -5.747808933258057
    6. 'ource' → logprob: -7.247808933258057
    7. 'Put' → logprob: -7.747808933258057
    8. 'Stream' → logprob: -8.372808456420898
    9. ' String' → logprob: -8.372808456420898
    10. 'Line' → logprob: -8.997808456420898

Token 46: 'Source' (ID: 4823)
  Prédit: 'Source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Source' → logprob: -0.00011725161311915144
    2. 'Reader' → logprob: -10.000117301940918
    3. 'Iterator' → logprob: -10.250117301940918
    4. 'ource' → logprob: -11.250117301940918
    5. 'source' → logprob: -12.125117301940918
    6. 'Provider' → logprob: -12.625117301940918
    7. 'er' → logprob: -12.875117301940918
    8. 'Stream' → logprob: -12.875117301940918
    9. 'S' → logprob: -13.000117301940918
    10. ':' → logprob: -13.125117301940918

Token 47: '(String' (ID: 2930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0037036393769085407
    2. '():' → logprob: -6.253703594207764
    3. '(' → logprob: -6.628703594207764
    4. ' :' → logprob: -7.878703594207764
    5. '(:' → logprob: -10.628704071044922
    6. '):' → logprob: -10.753704071044922
    7. '(":' → logprob: -12.003704071044922
    8. '<|end|>' → logprob: -12.878704071044922
    9. '```' → logprob: -13.003704071044922
    10. '(S' → logprob: -13.253704071044922

Token 48: 'Source' (ID: 4823)
  Prédit: 'In'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'In' → logprob: -0.00021343429398257285
    2. 'I' → logprob: -8.500213623046875
    3. 'Input' → logprob: -11.625213623046875
    4. 'Iter' → logprob: -15.125213623046875
    5. '```' → logprob: -15.500213623046875
    6. 'It' → logprob: -16.000213623046875
    7. 'Inp' → logprob: -16.125213623046875
    8. 'in' → logprob: -16.375213623046875
    9. 'i' → logprob: -16.500213623046875
    10. '   ' → logprob: -16.875213623046875

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003763343847822398
    2. ')' → logprob: -8.00037670135498
    3. '):
' → logprob: -10.62537670135498
    4. ':' → logprob: -11.12537670135498
    5. '():' → logprob: -14.50037670135498
    6. ' ):' → logprob: -14.50037670135498
    7. '   ' → logprob: -14.87537670135498
    8. ']:' → logprob: -16.500375747680664
    9. '):
' → logprob: -16.750375747680664
    10. '):

' → logprob: -16.875375747680664

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028266172856092453
    2. '
' → logprob: -4.403265953063965
    3. '    
' → logprob: -5.028265953063965
    4. '    ' → logprob: -6.278265953063965
    5. '\n' → logprob: -6.278265953063965
    6. ' def' → logprob: -6.278265953063965
    7. 'def' → logprob: -6.903265953063965
    8. '```' → logprob: -7.153265953063965
    9. ' 
' → logprob: -7.403265953063965
    10. ' ' → logprob: -8.403265953063965

Token 51: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.20626837015151978
    2. 'def' (adapté à ' def') → logprob: -1.706268310546875
    3. '   ' → logprob: -5.331268310546875
    4. '	def' → logprob: -12.706268310546875
    5. ' ' → logprob: -13.956268310546875
    6. '    ' → logprob: -14.081268310546875
    7. '    
' → logprob: -15.206268310546875
    8. '  ' → logprob: -15.831268310546875
    9. '
' → logprob: -15.831268310546875
    10. 'de' → logprob: -16.331268310546875

Token 52: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0024807697627693415
    2. '__' → logprob: -6.002480983734131
    3. ' ' → logprob: -13.252480506896973
    4. ' iter' → logprob: -13.377480506896973
    5. '_iter' → logprob: -14.127480506896973
    6. ' ' → logprob: -14.502480506896973
    7. ' _' → logprob: -15.002480506896973
    8. ' def' → logprob: -16.50248146057129
    9. 'iter' → logprob: -16.62748146057129
    10. ' ___' → logprob: -17.50248146057129

Token 53: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.0015041481237858534
    2. 'init' → logprob: -6.501503944396973
    3. 'it' → logprob: -13.251503944396973
    4. 'next' → logprob: -17.75150489807129
    5. '_iter' → logprob: -18.25150489807129
    6. '```' → logprob: -18.37650489807129
    7. 'er' → logprob: -20.00150489807129
    8. 'call' → logprob: -20.37650489807129
    9. 'ter' → logprob: -20.37650489807129
    10. '``' → logprob: -20.37650489807129

Token 54: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.005972762126475573
    2. '__' → logprob: -5.130972862243652
    3. '__(
' → logprob: -10.255972862243652
    4. '__('' → logprob: -12.630972862243652
    5. '__((' → logprob: -13.005972862243652
    6. '(self' → logprob: -13.880972862243652
    7. '___' → logprob: -14.255972862243652
    8. '__(*' → logprob: -14.630972862243652
    9. '_(' → logprob: -14.880972862243652
    10. '__("' → logprob: -15.005972862243652

Token 55: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0280383548888494e-06
    2. ' self' → logprob: -14.750000953674316
    3. ')' → logprob: -15.125000953674316
    4. '       ' → logprob: -15.375000953674316
    5. '   ' → logprob: -16.750001907348633
    6. 's' → logprob: -17.625001907348633
    7. '           ' → logprob: -18.750001907348633
    8. 'se' → logprob: -18.875001907348633
    9. '(self' → logprob: -19.375001907348633
    10. 'elf' → logprob: -19.750001907348633

Token 56: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.034621287137269974
    2. 'self' → logprob: -4.034621238708496
    3. ')' → logprob: -4.159621238708496
    4. ',' → logprob: -7.784621238708496
    5. '):
' → logprob: -9.034621238708496
    6. '       ' → logprob: -9.534621238708496
    7. '   ' → logprob: -9.659621238708496
    8. ':' → logprob: -10.909621238708496
    9. '(self' → logprob: -11.534621238708496
    10. ' self' → logprob: -12.159621238708496

Token 57: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01735980436205864
    2. '(self' → logprob: -4.642359733581543
    3. '):' → logprob: -5.517359733581543
    4. 'self' → logprob: -6.517359733581543
    5. '       ' → logprob: -6.892359733581543
    6. '   ' → logprob: -7.892359733581543
    7. ':self' → logprob: -8.267359733581543
    8. ')' → logprob: -9.267359733581543
    9. '():' → logprob: -9.267359733581543
    10. ' :' → logprob: -9.892359733581543

Token 58: ' Iterator' (ID: 41994)
  Prédit: ' Iterator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Iterator' → logprob: -0.12701399624347687
    2. 'Iterator' → logprob: -2.127013921737671
    3. ' str' → logprob: -10.12701416015625
    4. 'str' → logprob: -10.87701416015625
    5. '	Iterator' → logprob: -10.87701416015625
    6. ' ' → logprob: -12.12701416015625
    7. '   ' → logprob: -13.75201416015625
    8. 'Iterable' → logprob: -14.62701416015625
    9. '_iterator' → logprob: -14.87701416015625
    10. ' Iterable' → logprob: -15.62701416015625

Token 59: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: 0.0
    2. '[' → logprob: -17.0
    3. 'str' → logprob: -18.625
    4. ':str' → logprob: -20.125
    5. '[[' → logprob: -21.125
    6. ':' → logprob: -21.5
    7. '```' → logprob: -21.75
    8. '[s' → logprob: -22.0
    9. '[
' → logprob: -22.125
    10. ' [' → logprob: -22.5

Token 60: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0034638175275176764
    2. ']:' → logprob: -6.3784637451171875
    3. ':' → logprob: -6.5034637451171875
    4. '>:' → logprob: -9.628463745117188
    5. '):
' → logprob: -9.753463745117188
    6. '   ' → logprob: -9.878463745117188
    7. ')' → logprob: -10.753463745117188
    8. ' ):' → logprob: -11.128463745117188
    9. '       ' → logprob: -11.128463745117188
    10. '}:' → logprob: -11.253463745117188

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8550976164988242e-05
    2. ' while' → logprob: -12.250018119812012
    3. '      ' → logprob: -12.375018119812012
    4. '           ' → logprob: -13.500018119812012
    5. '    ' → logprob: -13.625018119812012
    6. '        ' → logprob: -13.625018119812012
    7. '   ' → logprob: -13.875018119812012
    8. '        
' → logprob: -13.875018119812012
    9. ':' → logprob: -14.000018119812012
    10. ' for' → logprob: -14.125018119812012

Token 62: ' import' (ID: 1588)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.077782154083252
    2. 'while' → logprob: -1.202782154083252
    3. ' while' → logprob: -1.202782154083252
    4. 'for' → logprob: -3.452782154083252
    5. ' for' → logprob: -3.702782154083252
    6. '   ' → logprob: -6.577782154083252
    7. 'import' (adapté à ' import') → logprob: -7.452782154083252
    8. '    ' → logprob: -8.702781677246094
    9. '           ' → logprob: -8.827781677246094
    10. '        ' → logprob: -9.077781677246094

Token 63: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -6.182190554682165e-05
    2. 'sys' → logprob: -9.750061988830566
    3. '	sys' → logprob: -12.625061988830566
    4. '=sys' → logprob: -15.750061988830566
    5. ' ' → logprob: -18.37506103515625
    6. ' built' → logprob: -19.25006103515625
    7. '_sys' → logprob: -19.62506103515625
    8. '(sys' → logprob: -20.37506103515625
    9. '.sys' → logprob: -20.87506103515625
    10. ' ' → logprob: -20.87506103515625

Token 64: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6445289850234985
    2. '       ' → logprob: -0.7695289850234985
    3. '        
' → logprob: -4.644528865814209
    4. ' 
' → logprob: -7.894528865814209
    5. '
' → logprob: -8.144529342651367
    6. '  
' → logprob: -8.269529342651367
    7. '\n' → logprob: -8.769529342651367
    8. '    
' → logprob: -8.894529342651367
    9. 'for' → logprob: -8.894529342651367
    10. ':
' → logprob: -8.894529342651367

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3518715798854828
    2. '
' → logprob: -1.2268716096878052
    3. '        
' → logprob: -5.851871490478516
    4. ' for' → logprob: -8.851871490478516
    5. 'for' → logprob: -9.226871490478516
    6. '
' → logprob: -9.726871490478516
    7. ' 
' → logprob: -9.851871490478516
    8. 'while' → logprob: -10.601871490478516
    9. ' while' → logprob: -10.726871490478516
    10. '        ' → logprob: -10.851871490478516

Token 66: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5542067885398865
    2. 'for' (adapté à ' for') → logprob: -0.9292067885398865
    3. '       ' → logprob: -3.6792068481445312
    4. '        
' → logprob: -6.429206848144531
    5. ' while' → logprob: -6.929206848144531
    6. 'while' → logprob: -6.929206848144531
    7. 'yield' → logprob: -7.679206848144531
    8. '
' → logprob: -7.804206848144531
    9. ':' → logprob: -8.929206848144531
    10. ' 
' → logprob: -9.054206848144531

Token 67: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -6.694766489090398e-05
    2. 'line' → logprob: -10.000066757202148
    3. '	line' → logprob: -10.875066757202148
    4. ' ' → logprob: -13.000066757202148
    5. ' lin' → logprob: -16.12506675720215
    6. '_line' → logprob: -16.12506675720215
    7. ' ' → logprob: -16.75006675720215
    8. ' _' → logprob: -17.00006675720215
    9. ' ligne' → logprob: -17.62506675720215
    10. ' linha' → logprob: -17.75006675720215

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008322591311298311
    2. 'in' → logprob: -7.1258320808410645
    3. ' ' → logprob: -11.375832557678223
    4. ',' → logprob: -12.875832557678223
    5. '	in' → logprob: -12.875832557678223
    6. '_in' → logprob: -13.000832557678223
    7. '_' → logprob: -13.125832557678223
    8. 's' → logprob: -13.750832557678223
    9. 'import' → logprob: -14.375832557678223
    10. ' ' → logprob: -14.500832557678223

Token 69: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1269388198852539
    2. 'sys' → logprob: -2.126938819885254
    3. '	sys' → logprob: -11.626938819885254
    4. '=sys' → logprob: -13.626938819885254
    5. '(sys' → logprob: -15.251938819885254
    6. ' ' → logprob: -15.376938819885254
    7. ' iter' → logprob: -17.126937866210938
    8. '_sys' → logprob: -17.751937866210938
    9. '.sys' → logprob: -17.751937866210938
    10. '   ' → logprob: -18.126937866210938

Token 70: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.011548420414328575
    2. '.' → logprob: -4.5115485191345215
    3. '.stdout' → logprob: -8.136548042297363
    4. '.readline' → logprob: -8.886548042297363
    5. ' .' → logprob: -10.136548042297363
    6. 'stdin' → logprob: -10.886548042297363
    7. '.stderr' → logprob: -12.886548042297363
    8. '.argv' → logprob: -12.886548042297363
    9. ' stdin' → logprob: -13.011548042297363
    10. '.readlines' → logprob: -13.886548042297363

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008205440826714039
    2. '.readline' → logprob: -4.883205413818359
    3. ' :' → logprob: -8.25820541381836
    4. ':
' → logprob: -8.50820541381836
    5. ' readline' → logprob: -9.88320541381836
    6. '.readlines' → logprob: -10.38320541381836
    7. '.' → logprob: -10.63320541381836
    8. '):' → logprob: -12.00820541381836
    9. ' in' → logprob: -12.88320541381836
    10. ':**' → logprob: -13.00820541381836

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011533799581229687
    2. ' yield' → logprob: -4.886533737182617
    3. 'yield' → logprob: -5.761533737182617
    4. '            
' → logprob: -7.761533737182617
    5. '            ' → logprob: -8.511533737182617
    6. '          ' → logprob: -10.261533737182617
    7. '	yield' → logprob: -10.511533737182617
    8. '        ' → logprob: -10.636533737182617
    9. 'Yield' → logprob: -11.511533737182617
    10. '         ' → logprob: -12.136533737182617

Token 73: ' line' (ID: 2543)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.39099937677383423
    2. ' yield' → logprob: -1.1409993171691895
    3. '           ' → logprob: -5.8909993171691895
    4. '               ' → logprob: -6.8909993171691895
    5. '	yield' → logprob: -8.015999794006348
    6. 'Yield' → logprob: -12.015999794006348
    7. '       ' → logprob: -13.640999794006348
    8. '   ' → logprob: -14.640999794006348
    9. '```' → logprob: -15.390999794006348
    10. '
' → logprob: -15.765999794006348

Token 74: ' =' (ID: 314)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.09360530227422714
    2. '=' → logprob: -3.5936052799224854
    3. '	yield' → logprob: -3.8436052799224854
    4. '.rstrip' → logprob: -4.3436055183410645
    5. '.strip' → logprob: -4.4686055183410645
    6. ' yield' → logprob: -4.5936055183410645
    7. 'Yield' → logprob: -6.2186055183410645
    8. '.' → logprob: -6.4686055183410645
    9. '           ' → logprob: -7.0936055183410645
    10. 'rstrip' → logprob: -7.4686055183410645

Token 75: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.16022655367851257
    2. ' line' → logprob: -1.910226583480835
    3. '=line' → logprob: -13.410226821899414
    4. '#line' → logprob: -14.785226821899414
    5. '	line' → logprob: -14.910226821899414
    6. '(line' → logprob: -15.910226821899414
    7. '[line' → logprob: -17.410226821899414
    8. '           ' → logprob: -17.910226821899414
    9. ',line' → logprob: -18.910226821899414
    10. 'rstrip' → logprob: -18.910226821899414

Token 76: '.strip' (ID: 40613)
  Prédit: '.rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rstrip' → logprob: -0.004165183752775192
    2. '.strip' → logprob: -5.504165172576904
    3. 'rstrip' → logprob: -9.629165649414062
    4. '.' → logprob: -10.879165649414062
    5. '[:-' → logprob: -13.254165649414062
    6. '.l' → logprob: -15.754165649414062
    7. 'strip' → logprob: -16.129165649414062
    8. ' .' → logprob: -16.629165649414062
    9. '.chomp' → logprob: -17.879165649414062
    10. '.r' → logprob: -17.879165649414062

Token 77: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.1318875446449965e-05
    2. '()
' → logprob: -10.500041007995605
    3. '()\' → logprob: -11.750041007995605
    4. '()`' → logprob: -13.125041007995605
    5. '(' → logprob: -13.250041007995605
    6. '()

' → logprob: -14.125041007995605
    7. '()"' → logprob: -14.875041007995605
    8. '()
' → logprob: -15.375041007995605
    9. ' ()' → logprob: -15.500041007995605
    10. '())' → logprob: -15.750041007995605

Token 78: '           ' (ID: 352)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' → logprob: -0.4307233393192291
    2. '           ' → logprob: -1.5557233095169067
    3. ' yield' → logprob: -2.0557234287261963
    4. ' if' → logprob: -4.930723190307617
    5. 'if' → logprob: -6.305723190307617
    6. '	yield' → logprob: -7.055723190307617
    7. '            ' → logprob: -7.555723190307617
    8. '            
' → logprob: -8.930723190307617
    9. '```' → logprob: -8.930723190307617
    10. '
' → logprob: -9.180723190307617

Token 79: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.23041951656341553
    2. 'yield' → logprob: -1.7304195165634155
    3. ' if' → logprob: -3.730419635772705
    4. ' yield' → logprob: -5.730419635772705
    5. '           ' → logprob: -6.605419635772705
    6. '	yield' → logprob: -12.230419158935547
    7. '```' → logprob: -13.730419158935547
    8. '            ' → logprob: -14.230419158935547
    9. '               ' → logprob: -14.230419158935547
    10. 'Yield' → logprob: -14.980419158935547

Token 80: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.37081488966941833
    2. ' not' → logprob: -1.2458149194717407
    3. 'line' → logprob: -3.995814800262451
    4. 'not' → logprob: -5.620814800262451
    5. ' len' → logprob: -9.49581527709961
    6. ' ' → logprob: -11.12081527709961
    7. 'len' → logprob: -11.74581527709961
    8. ' no' → logprob: -13.12081527709961
    9. '	line' → logprob: -13.49581527709961
    10. ' ' → logprob: -13.62081527709961

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018401013687253
    2. ' !=' → logprob: -4.518401145935059
    3. '<|end|>' → logprob: -5.643401145935059
    4. ' ==' → logprob: -6.643401145935059
    5. '==' → logprob: -7.393401145935059
    6. '!=' → logprob: -7.643401145935059
    7. '<|end|>' → logprob: -7.643401145935059
    8. ' and' → logprob: -8.518401145935059
    9. '.startswith' → logprob: -9.268401145935059
    10. ':return' → logprob: -9.393401145935059

Token 82: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07386825233697891
    2. 'yield' → logprob: -3.0738682746887207
    3. ' yield' → logprob: -3.6988682746887207
    4. '	yield' → logprob: -9.073867797851562
    5. '           ' → logprob: -9.698867797851562
    6. 'Yield' → logprob: -10.948867797851562
    7. '```' → logprob: -11.323867797851562
    8. '                
' → logprob: -12.698867797851562
    9. '                ' → logprob: -14.073867797851562
    10. '
' → logprob: -14.323867797851562

Token 83: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.13076627254486084
    2. ' yield' → logprob: -2.1307663917541504
    3. '                   ' → logprob: -5.63076639175415
    4. '	yield' → logprob: -8.505765914916992
    5. '               ' → logprob: -10.130765914916992
    6. 'Yield' → logprob: -14.255765914916992
    7. '           ' → logprob: -14.380765914916992
    8. '                ' → logprob: -14.380765914916992
    9. '```' → logprob: -14.505765914916992
    10. '   ' → logprob: -15.005765914916992

Token 84: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3868711292743683
    2. 'line' → logprob: -1.136871099472046
    3. '	line' → logprob: -17.136871337890625
    4. '               ' → logprob: -17.511871337890625
    5. '#line' → logprob: -17.886871337890625
    6. '(line' → logprob: -18.011871337890625
    7. '           ' → logprob: -18.261871337890625
    8. '[line' → logprob: -19.011871337890625
    9. '                   ' → logprob: -19.136871337890625
    10. '=line' → logprob: -19.136871337890625

Token 85: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.8740623593330383
    2. '
' → logprob: -1.2490622997283936
    3. '<|end|>' → logprob: -1.3740622997283936
    4. '#' → logprob: -4.249062538146973
    5. '

' → logprob: -4.499062538146973
    6. '```' → logprob: -4.999062538146973
    7. 'c' → logprob: -6.124062538146973
    8. '<|end|>' → logprob: -6.249062538146973
    9. '\n' → logprob: -6.624062538146973
    10. ' class' → logprob: -6.749062538146973

Token 87: ' Pattern' (ID: 29731)
  Prédit: ' File'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' File' → logprob: -0.45636096596717834
    2. ' ' → logprob: -1.581360936164856
    3. ' List' → logprob: -2.2063610553741455
    4. ' String' → logprob: -4.081360816955566
    5. ' Memory' → logprob: -4.206360816955566
    6. ' Static' → logprob: -5.331360816955566
    7. ' Random' → logprob: -6.081360816955566
    8. ' Constant' → logprob: -6.456360816955566
    9. ' Space' → logprob: -6.456360816955566
    10. ' Tuple' → logprob: -6.581360816955566

Token 88: 'Matcher' (ID: 43593)
  Prédit: 'String'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -0.2006872594356537
    2. 'Matcher' → logprob: -1.950687289237976
    3. 'Source' → logprob: -3.4506871700286865
    4. 'Matching' → logprob: -5.575687408447266
    5. 'Match' → logprob: -5.825687408447266
    6. 'Finder' → logprob: -7.825687408447266
    7. 'Searcher' → logprob: -8.950687408447266
    8. 'Based' → logprob: -9.075687408447266
    9. 'List' → logprob: -9.200687408447266
    10. 'Splitter' → logprob: -9.325687408447266

Token 89: '(' (ID: 7)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.258334219455719
    2. '(String' → logprob: -2.133334159851074
    3. '(' → logprob: -2.258334159851074
    4. ':String' → logprob: -6.383334159851074
    5. '(Abstract' → logprob: -6.633334159851074
    6. '(S' → logprob: -7.008334159851074
    7. ' :' → logprob: -8.258334159851074
    8. '():' → logprob: -9.633334159851074
    9. ':
' → logprob: -9.758334159851074
    10. '(object' → logprob: -10.133334159851074

Token 90: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.39252525568008423
    2. 'String' → logprob: -1.1425251960754395
    3. ' ABC' → logprob: -6.2675251960754395
    4. 'string' → logprob: -7.0175251960754395
    5. ')' → logprob: -7.2675251960754395
    6. '):' → logprob: -7.3925251960754395
    7. ' String' → logprob: -7.5175251960754395
    8. '   ' → logprob: -8.267525672912598
    9. 'Str' → logprob: -8.892525672912598
    10. 'Abstract' → logprob: -9.017525672912598

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016653041820973158
    2. ':' → logprob: -6.626665115356445
    3. '):
' → logprob: -8.501665115356445
    4. ')' → logprob: -9.001665115356445
    5. ',' → logprob: -12.376665115356445
    6. ' ):' → logprob: -12.376665115356445
    7. '):
' → logprob: -13.501665115356445
    8. ']:' → logprob: -14.251665115356445
    9. '[' → logprob: -14.501665115356445
    10. '   ' → logprob: -15.001665115356445

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020616286201402545
    2. ':' → logprob: -9.375205993652344
    3. ' def' → logprob: -10.500205993652344
    4. '    
' → logprob: -10.875205993652344
    5. '   ' → logprob: -11.000205993652344
    6. 'def' → logprob: -11.500205993652344
    7. '   ' → logprob: -12.000205993652344
    8. '    ' → logprob: -12.375205993652344
    9. '<|end|>' → logprob: -12.375205993652344
    10. '@' → logprob: -12.375205993652344

Token 93: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004743991419672966
    2. '    ' → logprob: -6.379744052886963
    3. ' def' → logprob: -7.129744052886963
    4. ' @' → logprob: -7.379744052886963
    5. '    
' → logprob: -7.379744052886963
    6. '@' (adapté à ' @') → logprob: -7.879744052886963
    7. ' 
' → logprob: -8.129743576049805
    8. ' ' → logprob: -8.754743576049805
    9. '
' → logprob: -9.754743576049805
    10. 'def' → logprob: -10.629743576049805

Token 94: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -5.080963092041202e-06
    2. 'property' → logprob: -12.500004768371582
    3. 'abc' → logprob: -14.125004768371582
    4. 'staticmethod' → logprob: -15.125004768371582
    5. 'classmethod' → logprob: -15.625004768371582
    6. ' abstract' → logprob: -16.7500057220459
    7. 'ab' → logprob: -18.5000057220459
    8. 'abs' → logprob: -19.1250057220459
    9. 'stract' → logprob: -19.1250057220459
    10. '```' → logprob: -19.3750057220459

Token 95: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -0.0017728772945702076
    2. '_method' → logprob: -6.376772880554199
    3. 'def' → logprob: -9.6267728805542
    4. 'classmethod' → logprob: -12.8767728805542
    5. 'ethod' → logprob: -14.5017728805542
    6. 'staticmethod' → logprob: -14.5017728805542
    7. 'meth' → logprob: -14.5017728805542
    8. '_token' → logprob: -15.7517728805542
    9. 'token' → logprob: -16.126771926879883
    10. '__' → logprob: -16.126771926879883

Token 96: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26710057258605957
    2. ' def' → logprob: -1.6421005725860596
    3. '
' → logprob: -3.2671005725860596
    4. '   ' → logprob: -6.0171003341674805
    5. '    
' → logprob: -9.26710033416748
    6. '	def' → logprob: -9.51710033416748
    7. ' 
' → logprob: -10.26710033416748
    8. '```' → logprob: -11.51710033416748
    9. '(def' → logprob: -11.64210033416748
    10. '<|end|>' → logprob: -11.64210033416748

Token 97: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05114014446735382
    2. '
' → logprob: -3.051140069961548
    3. '   ' → logprob: -6.676140308380127
    4. ' def' → logprob: -6.801140308380127
    5. '```' → logprob: -9.176139831542969
    6. 'method' → logprob: -9.926139831542969
    7. '    
' → logprob: -11.676139831542969
    8. 'classmethod' → logprob: -12.301139831542969
    9. '
' → logprob: -13.051139831542969
    10. 'class' → logprob: -13.301139831542969

Token 98: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.553032628493384e-05
    2. ' def' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.625075340270996
    4. 'class' → logprob: -16.875076293945312
    5. '
' → logprob: -17.000076293945312
    6. '```' → logprob: -17.125076293945312
    7. 'method' → logprob: -17.250076293945312
    8. 'classmethod' → logprob: -17.625076293945312
    9. 'property' → logprob: -19.000076293945312
    10. '    
' → logprob: -19.375076293945312

Token 99: ' count' (ID: 3605)
  Prédit: ' match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.049742694944143295
    2. 'match' → logprob: -3.2997426986694336
    3. ' def' → logprob: -4.799742698669434
    4. 'def' → logprob: -6.549742698669434
    5. ' find' → logprob: -6.924742698669434
    6. ' search' → logprob: -7.549742698669434
    7. 'search' → logprob: -8.549742698669434
    8. ' matches' → logprob: -8.674742698669434
    9. 'matches' → logprob: -10.174742698669434
    10. 'find' → logprob: -11.049742698669434

Token 100: '_patterns' (ID: 161400)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5164833068847656
    2. '_matches' → logprob: -1.2664833068847656
    3. '(self' → logprob: -2.2664833068847656
    4. '_occ' → logprob: -4.391483306884766
    5. '_patterns' → logprob: -6.141483306884766
    6. '_' → logprob: -6.766483306884766
    7. '_matching' → logprob: -7.016483306884766
    8. '_match' → logprob: -7.891483306884766
    9. '(
' → logprob: -8.141483306884766
    10. '_pattern' → logprob: -8.391483306884766

Token 101: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16674284636974335
    2. '(' → logprob: -1.9167428016662598
    3. ' (' → logprob: -5.04174280166626
    4. '(
' → logprob: -10.791743278503418
    5. ' ' → logprob: -11.791743278503418
    6. '(

' → logprob: -13.291743278503418
    7. ' (
' → logprob: -14.416743278503418
    8. ')' → logprob: -14.541743278503418
    9. '   ' → logprob: -14.541743278503418
    10. '<|end|>' → logprob: -14.541743278503418

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00874233152717352
    2. ' ,' → logprob: -5.008742332458496
    3. 'self' → logprob: -7.008742332458496
    4. ')' → logprob: -7.133742332458496
    5. '):' → logprob: -9.633742332458496
    6. ',self' → logprob: -9.758742332458496
    7. ',s' → logprob: -10.508742332458496
    8. ',
' → logprob: -10.508742332458496
    9. ' ' → logprob: -10.758742332458496
    10. ',line' → logprob: -10.883742332458496

Token 103: ' s' (ID: 265)
  Prédit: ' strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' strings' → logprob: -1.1208901405334473
    2. ' self' → logprob: -1.2458901405334473
    3. 'self' → logprob: -1.9958901405334473
    4. ' source' → logprob: -2.2458901405334473
    5. ' text' → logprob: -3.1208901405334473
    6. 'strings' → logprob: -3.2458901405334473
    7. 'source' → logprob: -4.245890140533447
    8. ' lines' → logprob: -4.245890140533447
    9. 'text' → logprob: -4.370890140533447
    10. ')' → logprob: -5.745890140533447

Token 104: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08570905774831772
    2. 'tring' → logprob: -3.0857090950012207
    3. 'tr' → logprob: -3.3357090950012207
    4. ':str' → logprob: -7.210709095001221
    5. ')' → logprob: -10.960708618164062
    6. 't' → logprob: -11.085708618164062
    7. ' :' → logprob: -11.085708618164062
    8. 'e' → logprob: -11.335708618164062
    9. 'ource' → logprob: -11.460708618164062
    10. 's' → logprob: -11.835708618164062

Token 105: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.2821039855480194
    2. ' str' → logprob: -1.4071040153503418
    3. ')' → logprob: -7.157104015350342
    4. 'List' → logprob: -9.657103538513184
    5. '[str' → logprob: -10.657103538513184
    6. ' ' → logprob: -11.032103538513184
    7. ' List' → logprob: -11.157103538513184
    8. ' )' → logprob: -11.532103538513184
    9. ':str' → logprob: -11.532103538513184
    10. '
' → logprob: -11.907103538513184

Token 106: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00307551771402359
    2. ',' → logprob: -5.87807559967041
    3. '   ' → logprob: -8.62807559967041
    4. ' )' → logprob: -9.50307559967041
    5. ')->' → logprob: -11.50307559967041
    6. '       ' → logprob: -13.50307559967041
    7. ',)' → logprob: -13.62807559967041
    8. ' ,' → logprob: -14.00307559967041
    9. '`)' → logprob: -14.12807559967041
    10. '")' → logprob: -14.50307559967041

Token 107: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.6212267875671387
    2. '->' → logprob: -0.8712267875671387
    3. ')' → logprob: -3.1212267875671387
    4. ')->' → logprob: -8.996227264404297
    5. '-' → logprob: -10.496227264404297
    6. ' )' → logprob: -11.246227264404297
    7. '   ' → logprob: -12.246227264404297
    8. ' )->' → logprob: -13.621227264404297
    9. ' -' → logprob: -13.871227264404297
    10. ' ' → logprob: -13.871227264404297

Token 108: ' Tuple' (ID: 50841)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002684564096853137
    2. ' int' → logprob: -6.127684593200684
    3. 'List' → logprob: -7.627684593200684
    4. 'dict' → logprob: -12.127684593200684
    5. 'Tuple' → logprob: -13.127684593200684
    6. ' List' → logprob: -13.252684593200684
    7. '[int' → logprob: -13.627684593200684
    8. 'Iterator' → logprob: -14.627684593200684
    9. '	int' → logprob: -14.752684593200684
    10. 'None' → logprob: -14.752684593200684

Token 109: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.248469718324486e-05
    2. '[List' → logprob: -11.000022888183594
    3. '[str' → logprob: -13.250022888183594
    4. '[' → logprob: -13.500022888183594
    5. '[
' → logprob: -13.500022888183594
    6. 'int' → logprob: -13.750022888183594
    7. '(int' → logprob: -16.750022888183594
    8. '[Int' → logprob: -17.500022888183594
    9. '[i' → logprob: -18.250022888183594
    10. '<int' → logprob: -18.375022888183594

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004272123333066702
    2. ',int' → logprob: -7.87542724609375
    3. ' ,' → logprob: -10.12542724609375
    4. '[int' → logprob: -12.37542724609375
    5. ']int' → logprob: -14.00042724609375
    6. ',List' → logprob: -14.62542724609375
    7. ']' → logprob: -14.75042724609375
    8. ',float' → logprob: -15.37542724609375
    9. ',bool' → logprob: -15.50042724609375
    10. '[' → logprob: -16.12542724609375

Token 111: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023845715448260307
    2. 'List' → logprob: -4.398845672607422
    3. ' int' → logprob: -4.898845672607422
    4. '...' → logprob: -6.023845672607422
    5. '...]' → logprob: -7.898845672607422
    6. ' List' → logprob: -8.273845672607422
    7. ' ...' → logprob: -8.398845672607422
    8. 'str' → logprob: -8.773845672607422
    9. 'float' → logprob: -9.648845672607422
    10. 'bool' → logprob: -9.648845672607422

Token 112: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.036146026104688644
    2. ']:' → logprob: -3.4111459255218506
    3. ')' → logprob: -6.41114616394043
    4. ',' → logprob: -7.66114616394043
    5. ':' → logprob: -8.41114616394043
    6. '):
' → logprob: -9.66114616394043
    7. ']' → logprob: -9.66114616394043
    8. ']):' → logprob: -11.41114616394043
    9. ' ):' → logprob: -12.41114616394043
    10. '):
' → logprob: -12.91114616394043

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7054384350776672
    2. '<|end|>' → logprob: -0.7054384350776672
    3. '   ' → logprob: -4.580438613891602
    4. ')' → logprob: -7.830438613891602
    5. '<|end|>' → logprob: -7.955438613891602
    6. '    ' → logprob: -8.455438613891602
    7. '
' → logprob: -8.955438613891602
    8. ' ' → logprob: -8.955438613891602
    9. '  ' → logprob: -9.080438613891602
    10. ':' → logprob: -9.580438613891602

Token 114: ' pass' (ID: 1853)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012408516369760036
    2. ' pass' → logprob: -4.76240873336792
    3. 'pass' (adapté à ' pass') → logprob: -6.01240873336792
    4. '   ' → logprob: -7.26240873336792
    5. '...' → logprob: -7.88740873336792
    6. '<|end|>' → logprob: -8.762408256530762
    7. ' ' → logprob: -10.512408256530762
    8. '      ' → logprob: -11.137408256530762
    9. '    ' → logprob: -11.262408256530762
    10. '	pass' → logprob: -11.512408256530762

Token 115: '

' (ID: 279)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.31663936376571655
    2. '
' → logprob: -1.3166394233703613
    3. '<|end|>' → logprob: -6.816639423370361
    4. '

' → logprob: -7.066639423370361
    5. ' 
' → logprob: -7.441639423370361
    6. ' class' → logprob: -7.816639423370361
    7. '   ' → logprob: -8.816638946533203
    8. '    
' → logprob: -9.066638946533203
    9. '  
' → logprob: -9.816638946533203
    10. '```' → logprob: -10.566638946533203

Token 116: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00018506382184568793
    2. '
' → logprob: -8.750185012817383
    3. ' class' → logprob: -11.250185012817383
    4. 'import' → logprob: -12.375185012817383
    5. '  
' → logprob: -13.125185012817383
    6. '```' → logprob: -13.125185012817383
    7. ' 
' → logprob: -13.750185012817383
    8. '    
' → logprob: -13.875185012817383
    9. 'from' → logprob: -13.875185012817383
    10. '

' → logprob: -14.000185012817383

Token 117: ' JO' (ID: 72685)
  Prédit: 'Na'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Na' → logprob: -0.9753190875053406
    2. 'K' → logprob: -1.7253191471099854
    3. ' Na' → logprob: -2.2253191471099854
    4. 'Simple' → logprob: -2.2253191471099854
    5. 'Exact' → logprob: -2.7253191471099854
    6. ' K' → logprob: -3.2253191471099854
    7. 'Regex' → logprob: -3.8503191471099854
    8. 'Br' → logprob: -4.100318908691406
    9. 'Prefix' → logprob: -4.350318908691406
    10. ' Simple' → logprob: -4.475318908691406

Token 118: 'I' (ID: 40)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8030240535736084
    2. 'IN' → logprob: -1.6780240535736084
    3. 'JO' → logprob: -1.6780240535736084
    4. 'I' → logprob: -2.8030240535736084
    5. 'HN' → logprob: -3.5530240535736084
    6. 'H' → logprob: -4.0530242919921875
    7. 'Pattern' → logprob: -4.5530242919921875
    8. 'BS' → logprob: -4.9280242919921875
    9. 'O' → logprob: -5.1780242919921875
    10. 'INT' → logprob: -5.4905242919921875

Token 119: 'IO' (ID: 3982)
  Prédit: 'Pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -0.05886837840080261
    2. 'Matcher' → logprob: -3.933868408203125
    3. 'String' → logprob: -4.308868408203125
    4. '_P' → logprob: -5.308868408203125
    5. 'Regex' → logprob: -5.433868408203125
    6. 'JO' → logprob: -6.808868408203125
    7. 'Recognizer' → logprob: -6.808868408203125
    8. 'Problem' → logprob: -6.933868408203125
    9. 'Finder' → logprob: -7.308868408203125
    10. '()' → logprob: -7.683868408203125

Token 120: 'IP' (ID: 3799)
  Prédit: 'Pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -0.1104096919298172
    2. 'P' → logprob: -2.860409736633301
    3. 'Matcher' → logprob: -4.735409736633301
    4. 'String' → logprob: -4.985409736633301
    5. 'J' → logprob: -5.110409736633301
    6. 'Pat' → logprob: -5.360409736633301
    7. 'PAT' → logprob: -5.860409736633301
    8. 'I' → logprob: -6.235409736633301
    9. 'Match' → logprob: -6.735409736633301
    10. 'U' → logprob: -7.110409736633301

Token 121: 'attern' (ID: 20946)
  Prédit: 'Pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -0.609711766242981
    2. 'attern' → logprob: -0.859711766242981
    3. 'Matcher' → logprob: -4.234711647033691
    4. 'P' → logprob: -4.734711647033691
    5. '(P' → logprob: -6.484711647033691
    6. 'at' → logprob: -6.734711647033691
    7. 'Pat' → logprob: -7.484711647033691
    8. 'atter' → logprob: -7.484711647033691
    9. '_P' → logprob: -7.859711647033691
    10. 'Match' → logprob: -7.984711647033691

Token 122: 'Matcher' (ID: 43593)
  Prédit: 'Matcher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Matcher' → logprob: -0.0004265044699423015
    2. 'Pattern' → logprob: -8.625426292419434
    3. 'matcher' → logprob: -9.125426292419434
    4. '(P' → logprob: -9.625426292419434
    5. 'Counter' → logprob: -11.125426292419434
    6. 'attern' → logprob: -11.375426292419434
    7. 'er' → logprob: -11.375426292419434
    8. 'Match' → logprob: -12.125426292419434
    9. 'Recognizer' → logprob: -12.500426292419434
    10. '(M' → logprob: -12.875426292419434

Token 123: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.03147421032190323
    2. ':' → logprob: -3.7814741134643555
    3. '(' → logprob: -4.9064741134643555
    4. '(Abstract' → logprob: -7.7814741134643555
    5. '(String' → logprob: -8.031474113464355
    6. '():' → logprob: -10.656474113464355
    7. '(S' → logprob: -11.781474113464355
    8. ' :' → logprob: -12.281474113464355
    9. '(pattern' → logprob: -12.656474113464355
    10. '(Standard' → logprob: -13.031474113464355

Token 124: 'attern' (ID: 20946)
  Prédit: 'attern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attern' → logprob: -0.003768493188545108
    2. 'atter' → logprob: -6.003768444061279
    3. 'att' → logprob: -7.128768444061279
    4. 'at' → logprob: -8.878768920898438
    5. 'atte' → logprob: -9.378768920898438
    6. '(P' → logprob: -9.628768920898438
    7. 'AT' → logprob: -9.628768920898438
    8. '(' → logprob: -9.878768920898438
    9. 'a' → logprob: -10.628768920898438
    10. 'At' → logprob: -11.253768920898438

Token 125: 'Matcher' (ID: 43593)
  Prédit: 'Matcher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Matcher' → logprob: -2.856408536899835e-05
    2. 'matcher' → logprob: -10.875028610229492
    3. '.Matcher' → logprob: -12.875028610229492
    4. ' Matcher' → logprob: -13.000028610229492
    5. 'Match' → logprob: -13.875028610229492
    6. 'Mat' → logprob: -14.000028610229492
    7. ')' → logprob: -14.500028610229492
    8. 'Pattern' → logprob: -14.875028610229492
    9. 'Maker' → logprob: -15.125028610229492
    10. '(M' → logprob: -15.375028610229492

Token 126: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00288772932253778
    2. '):
' → logprob: -5.877887725830078
    3. ')' → logprob: -9.502887725830078
    4. ':' → logprob: -12.127887725830078
    5. '):

' → logprob: -13.877887725830078
    6. '   ' → logprob: -13.877887725830078
    7. ' ):' → logprob: -14.877887725830078
    8. '):
' → logprob: -15.252887725830078
    9. '():' → logprob: -15.752887725830078
    10. ']:' → logprob: -16.627887725830078

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035443592350929976
    2. ' def' → logprob: -5.878544330596924
    3. 'def' → logprob: -7.253544330596924
    4. '    
' → logprob: -11.128544807434082
    5. '    ' → logprob: -12.128544807434082
    6. ':' → logprob: -12.878544807434082
    7. '
' → logprob: -12.878544807434082
    8. ')' → logprob: -13.628544807434082
    9. ' indentation' → logprob: -13.628544807434082
    10. '	def' → logprob: -14.253544807434082

Token 128: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4747466444969177
    2. 'def' (adapté à ' def') → logprob: -0.9747466444969177
    3. '   ' → logprob: -7.5997467041015625
    4. 'pattern' → logprob: -10.349746704101562
    5. ' ' → logprob: -10.724746704101562
    6. 'patterns' → logprob: -10.849746704101562
    7. ' pattern' → logprob: -10.974746704101562
    8. ' patterns' → logprob: -11.099746704101562
    9. '    ' → logprob: -11.349746704101562
    10. ' PAT' → logprob: -11.599746704101562

Token 129: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3330846130847931
    2. 'f' → logprob: -1.5830845832824707
    3. 'def' → logprob: -3.2080845832824707
    4. ' count' → logprob: -4.333084583282471
    5. ' ' → logprob: -4.583084583282471
    6. ' __' → logprob: -4.958084583282471
    7. 'count' → logprob: -6.083084583282471
    8. ' f' → logprob: -6.458084583282471
    9. ' _' → logprob: -6.708084583282471
    10. 'init' → logprob: -7.458084583282471

Token 130: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0026219089049845934
    2. 'iter' → logprob: -6.002622127532959
    3. 'def' → logprob: -9.1276216506958
    4. 'i' → logprob: -11.0026216506958
    5. '_init' → logprob: -11.6276216506958
    6. '_' → logprob: -12.0026216506958
    7. 'in' → logprob: -13.3776216506958
    8. '_iter' → logprob: -13.6276216506958
    9. '_i' → logprob: -14.2526216506958
    10. 'ini' → logprob: -14.7526216506958

Token 131: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0003160393098369241
    2. '(self' → logprob: -8.25031566619873
    3. '__' → logprob: -10.25031566619873
    4. '__(
' → logprob: -11.00031566619873
    5. '_(' → logprob: -13.12531566619873
    6. '(' → logprob: -15.37531566619873
    7. 'self' → logprob: -15.87531566619873
    8. '__('' → logprob: -15.87531566619873
    9. ')(' → logprob: -16.000316619873047
    10. '__((' → logprob: -16.375316619873047

Token 132: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00047988566802814603
    2. ')' → logprob: -8.000479698181152
    3. ' self' → logprob: -9.500479698181152
    4. '
' → logprob: -9.875479698181152
    5. '):
' → logprob: -11.125479698181152
    6. ')
' → logprob: -13.250479698181152
    7. '   ' → logprob: -14.500479698181152
    8. ')(' → logprob: -15.375479698181152
    9. '       ' → logprob: -15.625479698181152
    10. ' ' → logprob: -15.750479698181152

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09180782735347748
    2. 'self' → logprob: -2.4668078422546387
    3. '):' → logprob: -6.841807842254639
    4. '):
' → logprob: -7.216807842254639
    5. '(self' → logprob: -7.466807842254639
    6. ' ,' → logprob: -8.84180736541748
    7. ' self' → logprob: -8.96680736541748
    8. ')' → logprob: -9.46680736541748
    9. '   ' → logprob: -9.46680736541748
    10. ',self' → logprob: -10.21680736541748

Token 134: ' patterns' (ID: 18587)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.5572913289070129
    2. 'self' → logprob: -1.3072912693023682
    3. ' pattern' → logprob: -2.682291269302368
    4. ' self' → logprob: -3.182291269302368
    5. 'patterns' → logprob: -3.682291269302368
    6. ' patterns' → logprob: -4.557291507720947
    7. ')' → logprob: -5.057291507720947
    8. ' ' → logprob: -7.057291507720947
    9. 'pat' → logprob: -7.182291507720947
    10. 's' → logprob: -7.682291507720947

Token 135: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038682064041495323
    2. '):' → logprob: -8.000387191772461
    3. ')' → logprob: -11.000387191772461
    4. '=' → logprob: -11.375387191772461
    5. ' :' → logprob: -11.875387191772461
    6. '):
' → logprob: -12.250387191772461
    7. '_:' → logprob: -13.000387191772461
    8. ' ):' → logprob: -13.250387191772461
    9. 'self' → logprob: -13.625387191772461
    10. ':str' → logprob: -13.625387191772461

Token 136: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.5231585502624512
    2. 'List' → logprob: -0.8981585502624512
    3. ' ' → logprob: -11.52315902709961
    4. '	List' → logprob: -11.89815902709961
    5. '[List' → logprob: -12.14815902709961
    6. '   ' → logprob: -12.27315902709961
    7. ' Tuple' → logprob: -13.64815902709961
    8. '       ' → logprob: -13.77315902709961
    9. '    ' → logprob: -13.77315902709961
    10. 'Tuple' → logprob: -13.89815902709961

Token 137: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -5.319370302458992e-06
    2. '[int' → logprob: -12.500005722045898
    3. '[' → logprob: -13.375005722045898
    4. '[
' → logprob: -17.0000057220459
    5. '<|end|>' → logprob: -17.5000057220459
    6. ')' → logprob: -18.0000057220459
    7. '[List' → logprob: -18.5000057220459
    8. ' [' → logprob: -18.6250057220459
    9. '[String' → logprob: -18.8750057220459
    10. ':str' → logprob: -19.5000057220459

Token 138: ']' (ID: 60)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38929250836372375
    2. ']):' → logprob: -1.3892924785614014
    3. ')' → logprob: -3.1392924785614014
    4. '])' → logprob: -4.1392927169799805
    5. ']' → logprob: -4.8892927169799805
    6. ']:' → logprob: -5.2642927169799805
    7. ':' → logprob: -7.5142927169799805
    8. ']):
' → logprob: -7.7642927169799805
    9. '):
' → logprob: -9.26429271697998
    10. ' ):' → logprob: -9.38929271697998

Token 139: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010337218642234802
    2. ')' → logprob: -4.8853373527526855
    3. ':' → logprob: -6.0103373527526855
    4. '):
' → logprob: -8.510336875915527
    5. ',' → logprob: -10.010336875915527
    6. ' ):' → logprob: -11.135336875915527
    7. '=' → logprob: -11.885336875915527
    8. ' =' → logprob: -13.385336875915527
    9. '   ' → logprob: -13.635336875915527
    10. ']:' → logprob: -13.885336875915527

Token 140: ' ["' (ID: 9129)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '["' → logprob: -0.2848672866821289
    2. 'None' → logprob: -2.284867286682129
    3. '['' → logprob: -2.409867286682129
    4. ' ["' → logprob: -3.284867286682129
    5. ' None' → logprob: -4.284867286682129
    6. ' ['' → logprob: -5.534867286682129
    7. '   ' → logprob: -7.159867286682129
    8. '[' → logprob: -9.284867286682129
    9. ' ' → logprob: -9.409867286682129
    10. '[
' → logprob: -9.534867286682129

Token 141: 'JO' (ID: 39543)
  Prédit: 'JO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'JO' → logprob: -0.00307456380687654
    2. '"' → logprob: -6.003074645996094
    3. 'J' → logprob: -8.628074645996094
    4. ''' → logprob: -8.878074645996094
    5. 'j' → logprob: -9.253074645996094
    6. ' JO' → logprob: -10.003074645996094
    7. 'JOIN' → logprob: -10.003074645996094
    8. 'JOY' → logprob: -11.003074645996094
    9. '```' → logprob: -11.253074645996094
    10. 'IO' → logprob: -11.503074645996094

Token 142: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.02238648012280464
    2. 'II' → logprob: -3.8973865509033203
    3. 'IO' → logprob: -6.52238655090332
    4. 'IP' → logprob: -9.14738655090332
    5. 'JI' → logprob: -10.02238655090332
    6. 'IJ' → logprob: -10.39738655090332
    7. 'III' → logprob: -10.39738655090332
    8. 'JO' → logprob: -10.77238655090332
    9. '[I' → logprob: -11.27238655090332
    10. 'IID' → logprob: -11.39738655090332

Token 143: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.03940551355481148
    2. '","' → logprob: -3.664405584335327
    3. 'IO' → logprob: -4.789405345916748
    4. 'I' → logprob: -5.914405345916748
    5. 'JO' → logprob: -7.039405345916748
    6. 'O' → logprob: -7.414405345916748
    7. '"' → logprob: -8.414405822753906
    8. 'IP' → logprob: -9.664405822753906
    9. '",'' → logprob: -10.289405822753906
    10. '"],' → logprob: -10.664405822753906

Token 144: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.48964229226112366
    2. ' "' → logprob: -0.9896422624588013
    3. '"O' → logprob: -4.364642143249512
    4. '"I' → logprob: -6.614642143249512
    5. '"io' → logprob: -6.739642143249512
    6. ' ' → logprob: -9.739642143249512
    7. 'IO' → logprob: -11.114642143249512
    8. '  ' → logprob: -11.364642143249512
    9. '   ' → logprob: -11.489642143249512
    10. ''' → logprob: -11.489642143249512

Token 145: 'IO' (ID: 3982)
  Prédit: 'IO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IO' → logprob: -0.0005688794772140682
    2. 'O' → logprob: -8.125569343566895
    3. 'I' → logprob: -8.250569343566895
    4. 'OI' → logprob: -12.000569343566895
    5. 'JO' → logprob: -13.000569343566895
    6. '"' → logprob: -13.625569343566895
    7. 'IP' → logprob: -14.125569343566895
    8. '(IO' → logprob: -14.750569343566895
    9. 'J' → logprob: -15.125569343566895
    10. ' IO' → logprob: -15.500569343566895

Token 146: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.022202637046575546
    2. 'P' → logprob: -4.397202491760254
    3. 'IP' → logprob: -4.647202491760254
    4. 'PI' → logprob: -10.397202491760254
    5. 'IO' → logprob: -12.397202491760254
    6. '"' → logprob: -12.397202491760254
    7. ' I' → logprob: -13.147202491760254
    8. 'IPI' → logprob: -13.272202491760254
    9. '])' → logprob: -13.772202491760254
    10. 'Ip' → logprob: -13.772202491760254

Token 147: '"]' (ID: 2601)
  Prédit: '"]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.0009521945030428469
    2. '']):
' → logprob: -7.750952243804932
    3. '"])' → logprob: -8.125951766967773
    4. '",' → logprob: -9.125951766967773
    5. ']):
' → logprob: -10.125951766967773
    6. ']):' → logprob: -11.250951766967773
    7. '"' → logprob: -11.500951766967773
    8. '   ' → logprob: -11.750951766967773
    9. '"])
' → logprob: -12.125951766967773
    10. ' "]' → logprob: -12.125951766967773

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004498573543969542
    2. ')' → logprob: -8.000450134277344
    3. '):
' → logprob: -9.875450134277344
    4. ':' → logprob: -10.000450134277344
    5. ' ):' → logprob: -11.125450134277344
    6. '   ' → logprob: -13.625450134277344
    7. ',' → logprob: -15.000450134277344
    8. '       ' → logprob: -15.125450134277344
    9. '):
' → logprob: -15.125450134277344
    10. ']):' → logprob: -15.125450134277344

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011974901426583529
    2. 'self' → logprob: -6.876197338104248
    3. ' self' → logprob: -8.751197814941406
    4. '   ' → logprob: -12.126197814941406
    5. '      ' → logprob: -14.751197814941406
    6. ':' → logprob: -16.501197814941406
    7. '           ' → logprob: -16.501197814941406
    8. '     ' → logprob: -16.626197814941406
    9. '	self' → logprob: -16.626197814941406
    10. ' ' → logprob: -16.751197814941406

Token 150: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1504337191581726
    2. 'self' (adapté à ' self') → logprob: -2.4004337787628174
    3. '       ' → logprob: -3.0254337787628174
    4. ' super' → logprob: -7.900433540344238
    5. 'super' → logprob: -9.650433540344238
    6. ' ' → logprob: -11.775433540344238
    7. '        ' → logprob: -12.775433540344238
    8. '   ' → logprob: -13.525433540344238
    9. '	self' → logprob: -13.650433540344238
    10. '      ' → logprob: -14.400433540344238

Token 151: '.pattern' (ID: 76901)
  Prédit: '.pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -0.030079742893576622
    2. '.' → logprob: -3.5300798416137695
    3. ' .' → logprob: -8.40507984161377
    4. '.p' → logprob: -9.53007984161377
    5. 'patterns' → logprob: -10.53007984161377
    6. '._' → logprob: -12.90507984161377
    7. '.period' → logprob: -14.53007984161377
    8. '.protocol' → logprob: -15.40507984161377
    9. '.tokens' → logprob: -15.40507984161377
    10. '.str' → logprob: -15.78007984161377

Token 152: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00011248346709180623
    2. '=' → logprob: -9.500112533569336
    3. ' s' → logprob: -10.875112533569336
    4. ' =' → logprob: -11.125112533569336
    5. '   ' → logprob: -14.375112533569336
    6. 'patterns' → logprob: -14.375112533569336
    7. ' ' → logprob: -14.750112533569336
    8. '=s' → logprob: -15.000112533569336
    9. 'es' → logprob: -15.625112533569336
    10. '       ' → logprob: -15.625112533569336

Token 153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889705896377563
    2. ' =' → logprob: -2.578896999359131
    3. ':' → logprob: -12.578897476196289
    4. ')' → logprob: -13.328897476196289
    5. '=[]' → logprob: -13.828897476196289
    6. '<|end|>' → logprob: -15.703897476196289
    7. ' ' → logprob: -15.828897476196289
    8. '.' → logprob: -15.828897476196289
    9. '[:]' → logprob: -15.828897476196289
    10. ',' → logprob: -15.953897476196289

Token 154: ' patterns' (ID: 18587)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.20144276320934296
    2. ' patterns' → logprob: -1.7014427185058594
    3. 'pattern' → logprob: -10.57644271850586
    4. '["' → logprob: -12.95144271850586
    5. '[' → logprob: -14.32644271850586
    6. ' ["' → logprob: -15.20144271850586
    7. ' [' → logprob: -15.95144271850586
    8. 'pat' → logprob: -16.07644271850586
    9. ' pattern' → logprob: -16.32644271850586
    10. '[
' → logprob: -16.32644271850586

Token 155: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1630203127861023
    2. '<|end|>' → logprob: -1.913020372390747
    3. '<|end|>' → logprob: -6.663020133972168
    4. '   ' → logprob: -7.288020133972168
    5. 'def' → logprob: -7.913020133972168
    6. '    
' → logprob: -8.288020133972168
    7. '

' → logprob: -10.038020133972168
    8. ' 
' → logprob: -10.413020133972168
    9. 'newline' → logprob: -10.538020133972168
    10. '  
' → logprob: -10.788020133972168

Token 156: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -15.625
    3. '   ' → logprob: -21.125
    4. 'from' → logprob: -21.5
    5. '@' → logprob: -23.0
    6. 'de' → logprob: -24.0
    7. '
' → logprob: -24.375
    8. '```' → logprob: -24.5
    9. 'class' → logprob: -24.75
    10. ')' → logprob: -25.125

Token 158: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03804194927215576
    2. ' count' → logprob: -3.2880420684814453
    3. 'counter' → logprob: -15.788042068481445
    4. '_count' → logprob: -16.163042068481445
    5. 'def' → logprob: -16.288042068481445
    6. ' ' → logprob: -16.663042068481445
    7. 'c' → logprob: -17.038042068481445
    8. '	count' → logprob: -17.288042068481445
    9. 'counts' → logprob: -17.663042068481445
    10. '.count' → logprob: -18.163042068481445

Token 159: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -3.7697225252486533e-06
    2. '_pat' → logprob: -13.500003814697266
    3. '_' → logprob: -13.750003814697266
    4. '_pattern' → logprob: -14.500003814697266
    5. ' _' → logprob: -14.750003814697266
    6. '_p' → logprob: -15.500003814697266
    7. '```' → logprob: -16.875003814697266
    8. '"_' → logprob: -17.750003814697266
    9. '
' → logprob: -17.875003814697266
    10. '_counts' → logprob: -18.000003814697266

Token 160: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002636006975080818
    2. '(' → logprob: -8.250263214111328
    3. '(s' → logprob: -13.500263214111328
    4. '(
' → logprob: -14.250263214111328
    5. ' (' → logprob: -15.750263214111328
    6. 'self' → logprob: -16.750263214111328
    7. '(sel' → logprob: -17.750263214111328
    8. '   ' → logprob: -19.125263214111328
    9. '(Self' → logprob: -19.125263214111328
    10. ' self' → logprob: -19.375263214111328

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030865666922181845
    2. 'self' → logprob: -6.503086566925049
    3. ' ,' → logprob: -6.628086566925049
    4. 's' → logprob: -9.00308609008789
    5. ',s' → logprob: -9.25308609008789
    6. ' self' → logprob: -11.37808609008789
    7. ',self' → logprob: -11.37808609008789
    8. ' s' → logprob: -11.62808609008789
    9. '   ' → logprob: -12.62808609008789
    10. ')' → logprob: -12.87808609008789

Token 162: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.38406410813331604
    2. ' self' → logprob: -1.3840640783309937
    3. 'self' → logprob: -3.259064197540283
    4. 's' → logprob: -3.509064197540283
    5. '       ' → logprob: -13.384063720703125
    6. ' ' → logprob: -13.634063720703125
    7. ' ' → logprob: -14.509063720703125
    8. '(self' → logprob: -14.634063720703125
    9. '   ' → logprob: -14.759063720703125
    10. '	self' → logprob: -15.759063720703125

Token 163: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00039373442996293306
    2. ' :' → logprob: -8.500393867492676
    3. '):' → logprob: -9.125393867492676
    4. ':str' → logprob: -9.500393867492676
    5. ')' → logprob: -12.375393867492676
    6. ' ):' → logprob: -13.500393867492676
    7. '   ' → logprob: -14.875393867492676
    8. '):
' → logprob: -15.000393867492676
    9. ' ' → logprob: -15.875393867492676
    10. '_:' → logprob: -17.25039291381836

Token 164: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.12694479525089264
    2. 'str' → logprob: -2.1269447803497314
    3. ')' → logprob: -11.876944541931152
    4. 's' → logprob: -12.126944541931152
    5. ' s' → logprob: -13.251944541931152
    6. ':str' → logprob: -13.626944541931152
    7. ' ' → logprob: -14.376944541931152
    8. '[str' → logprob: -15.751944541931152
    9. '   ' → logprob: -15.876944541931152
    10. '(str' → logprob: -15.876944541931152

Token 165: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -13.750000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '`)' → logprob: -17.000001907348633
    5. ':' → logprob: -17.375001907348633
    6. '):' → logprob: -17.625001907348633
    7. ')->' → logprob: -17.875001907348633
    8. '")' → logprob: -18.000001907348633
    9. '):
' → logprob: -19.625001907348633
    10. '')' → logprob: -20.125001907348633

Token 166: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.23673301935195923
    2. '->' → logprob: -2.2367329597473145
    3. ')' → logprob: -2.8617329597473145
    4. ':' → logprob: -3.1117329597473145
    5. '   ' → logprob: -6.6117329597473145
    6. ')->' → logprob: -7.1117329597473145
    7. '       ' → logprob: -9.861733436584473
    8. '>' → logprob: -10.361733436584473
    9. ' ' → logprob: -11.111733436584473
    10. ' :' → logprob: -11.611733436584473

Token 167: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.07890234887599945
    2. ' Tuple' → logprob: -2.578902244567871
    3. ' ' → logprob: -11.828902244567871
    4. '   ' → logprob: -13.453902244567871
    5. '  ' → logprob: -13.828902244567871
    6. 'Tu' → logprob: -13.828902244567871
    7. ' tuple' → logprob: -14.453902244567871
    8. 'tuple' → logprob: -14.578902244567871
    9. 'List' → logprob: -15.078902244567871
    10. 'int' → logprob: -15.328902244567871

Token 168: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.896309739408025e-07
    2. '(int' → logprob: -14.375000953674316
    3. '[' → logprob: -16.5
    4. '[
' → logprob: -16.625
    5. '[Int' → logprob: -18.875
    6. '[in' → logprob: -19.125
    7. 'int' → logprob: -19.125
    8. ' [' → logprob: -19.875
    9. '<int' → logprob: -20.25
    10. ',int' → logprob: -21.0

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035536551149562
    2. ',int' → logprob: -8.00035572052002
    3. ' ,' → logprob: -11.12535572052002
    4. ',
' → logprob: -13.00035572052002
    5. ',uint' → logprob: -14.87535572052002
    6. ',float' → logprob: -15.00035572052002
    7. 'int' → logprob: -15.00035572052002
    8. '`,' → logprob: -15.12535572052002
    9. ',num' → logprob: -15.37535572052002
    10. ',bool' → logprob: -15.75035572052002

Token 170: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0002036595979006961
    2. ' int' → logprob: -8.500204086303711
    3. '[int' → logprob: -16.87520408630371
    4. '0' → logprob: -17.37520408630371
    5. ']int' → logprob: -17.87520408630371
    6. '```' → logprob: -18.62520408630371
    7. '   ' → logprob: -18.62520408630371
    8. '...' → logprob: -18.75020408630371
    9. '<int' → logprob: -18.75020408630371
    10. ' ' → logprob: -19.00020408630371

Token 171: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09228634089231491
    2. '):
' → logprob: -2.5922863483428955
    3. ')' → logprob: -4.342286109924316
    4. ':' → logprob: -9.092286109924316
    5. '   ' → logprob: -9.467286109924316
    6. '):
' → logprob: -9.717286109924316
    7. '       ' → logprob: -10.217286109924316
    8. ' ):' → logprob: -11.967286109924316
    9. ']:' → logprob: -13.342286109924316
    10. '):

' → logprob: -13.592286109924316

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9027791495318525e-05
    2. 'count' → logprob: -12.000019073486328
    3. 'j' → logprob: -12.250019073486328
    4. '   ' → logprob: -13.250019073486328
    5. '      ' → logprob: -13.375019073486328
    6. 'n' → logprob: -14.000019073486328
    7. 'i' → logprob: -14.000019073486328
    8. 'counts' → logprob: -14.125019073486328
    9. 'jo' → logprob: -14.750019073486328
    10. '```' → logprob: -15.125019073486328

Token 173: ' counts' (ID: 28991)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6881062984466553
    2. 'counts' (adapté à ' counts') → logprob: -0.8131062984466553
    3. 'j' → logprob: -3.5631062984466553
    4. ' counts' → logprob: -4.063106536865234
    5. '       ' → logprob: -5.688106536865234
    6. ' count' → logprob: -6.563106536865234
    7. ' joi' → logprob: -6.813106536865234
    8. 'cnt' → logprob: -6.938106536865234
    9. 'results' → logprob: -7.688106536865234
    10. 'result' → logprob: -8.188106536865234

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029773514717817307
    2. '=' → logprob: -3.529773473739624
    3. ' ' → logprob: -11.029773712158203
    4. '0' → logprob: -13.154773712158203
    5. 'JO' → logprob: -13.154773712158203
    6. '_' → logprob: -14.404773712158203
    7. ' =[' → logprob: -14.529773712158203
    8. '1' → logprob: -14.529773712158203
    9. ':' → logprob: -14.654773712158203
    10. 's' → logprob: -15.154773712158203

Token 175: ' {' (ID: 354)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023299753665924072
    2. ' [' → logprob: -4.148299694061279
    3. '[]' → logprob: -5.023299694061279
    4. '{' → logprob: -7.898299694061279
    5. '[]
' → logprob: -9.523300170898438
    6. ' []' → logprob: -9.648300170898438
    7. '[s' → logprob: -9.648300170898438
    8. '(' → logprob: -10.273300170898438
    9. '0' → logprob: -11.398300170898438
    10. '[len' → logprob: -11.648300170898438

Token 176: 'pattern' (ID: 29563)
  Prédit: 'pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.28366348147392273
    2. 'p' → logprob: -1.5336635112762451
    3. '"' → logprob: -4.408663272857666
    4. 'pat' → logprob: -4.783663272857666
    5. ''' → logprob: -5.158663272857666
    6. ''p' → logprob: -5.408663272857666
    7. 'key' → logprob: -8.658663749694824
    8. ' p' → logprob: -8.783663749694824
    9. ' pattern' → logprob: -9.658663749694824
    10. '   ' → logprob: -10.533663749694824

Token 177: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006274910410866141
    2. ' :' → logprob: -7.375627517700195
    3. '0' → logprob: -14.125627517700195
    4. '=' → logprob: -16.500627517700195
    5. '   ' → logprob: -17.375627517700195
    6. '1' → logprob: -18.750627517700195
    7. '    ' → logprob: -18.750627517700195
    8. ':
' → logprob: -19.000627517700195
    9. ':i' → logprob: -19.125627517700195
    10. '：' → logprob: -19.250627517700195

Token 178: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015220592729747295
    2. ' ' → logprob: -4.265220642089844
    3. 's' → logprob: -7.015220642089844
    4. ' s' → logprob: -8.765220642089844
    5. '   ' → logprob: -14.265220642089844
    6. '}' → logprob: -15.140220642089844
    7. '}s' → logprob: -15.390220642089844
    8. '
' → logprob: -15.952720642089844
    9. ' ' → logprob: -16.015220642089844
    10. '(s' → logprob: -16.202720642089844

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025638877414166927
    2. 's' → logprob: -6.002563953399658
    3. ' ' → logprob: -9.3775634765625
    4. ' s' → logprob: -12.6275634765625
    5. '}' → logprob: -16.5650634765625
    6. '
' → logprob: -17.2525634765625
    7. '(s' → logprob: -17.2525634765625
    8. '}s' → logprob: -17.3150634765625
    9. '۰' → logprob: -17.5025634765625
    10. 'len' → logprob: -17.5650634765625

Token 180: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.005759791936725378
    2. 'for' → logprob: -5.5057597160339355
    3. ',' → logprob: -6.5057597160339355
    4. '}' → logprob: -9.505760192871094
    5. '       ' → logprob: -10.255760192871094
    6. '        ' → logprob: -10.755760192871094
    7. '           ' → logprob: -11.630760192871094
    8. ' ' → logprob: -11.630760192871094
    9. ' }' → logprob: -11.630760192871094
    10. '   ' → logprob: -11.630760192871094

Token 181: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.7216091156005859
    2. 'pattern' → logprob: -0.7216091156005859
    3. 'self' → logprob: -4.096609115600586
    4. ' self' → logprob: -4.471609115600586
    5. 'pat' → logprob: -13.596609115600586
    6. '(pattern' → logprob: -14.471609115600586
    7. '.pattern' → logprob: -15.471609115600586
    8. '```' → logprob: -15.721609115600586
    9. ' ' → logprob: -15.846609115600586
    10. '_pattern' → logprob: -15.846609115600586

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16026200354099274
    2. 'in' → logprob: -1.9102619886398315
    3. 'self' → logprob: -10.535262107849121
    4. 'pattern' → logprob: -12.160262107849121
    5. '       ' → logprob: -13.410262107849121
    6. 's' → logprob: -14.160262107849121
    7. ' ' → logprob: -14.535262107849121
    8. '        ' → logprob: -14.785262107849121
    9. ' self' → logprob: -14.910262107849121
    10. ')' → logprob: -15.160262107849121

Token 183: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012513887137174606
    2. ' self' → logprob: -4.387514114379883
    3. '       ' → logprob: -13.637514114379883
    4. '(self' → logprob: -13.762514114379883
    5. '[self' → logprob: -14.137514114379883
    6. '	self' → logprob: -15.137514114379883
    7. '           ' → logprob: -15.387514114379883
    8. '   ' → logprob: -15.387514114379883
    9. '
' → logprob: -15.637514114379883
    10. '        ' → logprob: -17.012514114379883

Token 184: '.pattern' (ID: 76901)
  Prédit: '.pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -2.45848218582978e-06
    2. 'patterns' → logprob: -13.37500286102295
    3. ' .' → logprob: -14.75000286102295
    4. '.' → logprob: -14.87500286102295
    5. '.p' → logprob: -17.750001907348633
    6. '.period' → logprob: -17.750001907348633
    7. '.Pattern' → logprob: -19.750001907348633
    8. '.protocol' → logprob: -20.375001907348633
    9. 'pattern' → logprob: -20.875001907348633
    10. '.properties' → logprob: -21.125001907348633

Token 185: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.107425062713446e-06
    2. 'patterns' → logprob: -12.375006675720215
    3. 'self' → logprob: -13.875006675720215
    4. ' s' → logprob: -14.125006675720215
    5. '}s' → logprob: -14.375006675720215
    6. '       ' → logprob: -15.875006675720215
    7. '           ' → logprob: -16.12500762939453
    8. '   ' → logprob: -17.37500762939453
    9. ')' → logprob: -17.50000762939453
    10. '```' → logprob: -17.50000762939453

Token 186: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.04380904138088226
    2. '}
' → logprob: -3.293808937072754
    3. '       ' → logprob: -5.168808937072754
    4. ' }' → logprob: -10.168808937072754
    5. '}
' → logprob: -11.543808937072754
    6. ' }
' → logprob: -12.043808937072754
    7. ',' → logprob: -12.793808937072754
    8. '   ' → logprob: -13.168808937072754
    9. '}

' → logprob: -14.793808937072754
    10. '}\' → logprob: -15.543808937072754

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023183392360806465
    2. 'for' → logprob: -4.023183345794678
    3. '   ' → logprob: -5.523183345794678
    4. ' for' → logprob: -7.148183345794678
    5. 'i' → logprob: -8.523183822631836
    6. 'n' → logprob: -10.773183822631836
    7. ' i' → logprob: -11.398183822631836
    8. 'index' → logprob: -12.148183822631836
    9. '      ' → logprob: -13.648183822631836
    10. 'idx' → logprob: -14.273183822631836

Token 188: ' length' (ID: 5517)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004127911292016506
    2. '       ' → logprob: -6.0041279792785645
    3. 'i' → logprob: -7.2541279792785645
    4. 'n' → logprob: -7.6291279792785645
    5. 'index' → logprob: -7.8791279792785645
    6. ' for' → logprob: -10.129127502441406
    7. 'length' (adapté à ' length') → logprob: -11.129127502441406
    8. 'idx' → logprob: -11.129127502441406
    9. 'start' → logprob: -12.379127502441406
    10. '```' → logprob: -12.754127502441406

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00468727620318532
    2. '=' → logprob: -5.379687309265137
    3. 's' → logprob: -10.754687309265137
    4. '   ' → logprob: -11.004687309265137
    5. '       ' → logprob: -11.129687309265137
    6. ' ' → logprob: -12.254687309265137
    7. '_s' → logprob: -13.004687309265137
    8. 'for' → logprob: -13.129687309265137
    9. ' s' → logprob: -13.754687309265137
    10. '_' → logprob: -14.504687309265137

Token 190: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.12692999839782715
    2. 'len' → logprob: -2.126929998397827
    3. '(len' → logprob: -13.376930236816406
    4. '=len' → logprob: -15.876930236816406
    5. '[len' → logprob: -16.001930236816406
    6. '   ' → logprob: -16.251930236816406
    7. '	len' → logprob: -17.376930236816406
    8. ',len' → logprob: -18.001930236816406
    9. ' ' → logprob: -18.001930236816406
    10. '       ' → logprob: -18.501930236816406

Token 191: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00027468299958854914
    2. '(' → logprob: -8.250274658203125
    3. 's' → logprob: -11.250274658203125
    4. ' (' → logprob: -15.625274658203125
    5. '(
' → logprob: -16.250274658203125
    6. ' s' → logprob: -16.375274658203125
    7. '(S' → logprob: -19.250274658203125
    8. '(self' → logprob: -20.000274658203125
    9. ',' → logprob: -20.375274658203125
    10. '(t' → logprob: -20.500274658203125

Token 192: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6343162059783936
    2. ')
' → logprob: -0.7593162059783936
    3. '       ' → logprob: -6.634316444396973
    4. ' )' → logprob: -9.009316444396973
    5. ' )
' → logprob: -9.259316444396973
    6. '-' → logprob: -9.509316444396973
    7. ' -' → logprob: -9.759316444396973
    8. '   ' → logprob: -10.634316444396973
    9. ')
' → logprob: -11.384316444396973
    10. '
' → logprob: -12.259316444396973

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033478207886219025
    2. ' for' → logprob: -3.783478260040283
    3. 'for' → logprob: -4.658478260040283
    4. ' i' → logprob: -7.908478260040283
    5. '   ' → logprob: -8.158477783203125
    6. 'i' → logprob: -10.158477783203125
    7. ' ' → logprob: -13.158477783203125
    8. '        
' → logprob: -13.408477783203125
    9. '      ' → logprob: -14.158477783203125
    10. '  ' → logprob: -14.658477783203125

Token 194: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002030230825766921
    2. '       ' → logprob: -6.252030372619629
    3. ' for' → logprob: -9.377030372619629
    4. 'i' → logprob: -11.502030372619629
    5. '```' → logprob: -12.502030372619629
    6. '   ' → logprob: -12.877030372619629
    7. '
' → logprob: -15.627030372619629
    8. '``' → logprob: -15.877030372619629
    9. '	for' → logprob: -16.002029418945312
    10. '        
' → logprob: -17.127029418945312

Token 195: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10020904988050461
    2. ' i' → logprob: -2.3502089977264404
    3. 'index' → logprob: -14.60020923614502
    4. 'idx' → logprob: -14.72520923614502
    5. ' ' → logprob: -14.85020923614502
    6. ' idx' → logprob: -14.97520923614502
    7. '```' → logprob: -15.35020923614502
    8. ' index' → logprob: -15.47520923614502
    9. '	i' → logprob: -15.47520923614502
    10. '   ' → logprob: -15.85020923614502

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012623838149011135
    2. 'in' → logprob: -4.3876237869262695
    3. ' ' → logprob: -9.13762378692627
    4. '	in' → logprob: -13.38762378692627
    5. '  ' → logprob: -13.76262378692627
    6. ',' → logprob: -13.76262378692627
    7. ' i' → logprob: -15.01262378692627
    8. 'n' → logprob: -15.13762378692627
    9. '   ' → logprob: -15.26262378692627
    10. '0' → logprob: -15.26262378692627

Token 197: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25192928314208984
    2. 'range' → logprob: -1.5019292831420898
    3. '	range' → logprob: -15.87692928314209
    4. ' ' → logprob: -16.376930236816406
    5. '(range' → logprob: -17.626930236816406
    6. ' xrange' → logprob: -18.626930236816406
    7. '   ' → logprob: -19.376930236816406
    8. '  ' → logprob: -19.501930236816406
    9. ' rang' → logprob: -19.626930236816406
    10. 'rang' → logprob: -19.751930236816406

Token 198: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.0009771942859515548
    2. '(len' → logprob: -7.000977039337158
    3. '(' → logprob: -9.750977516174316
    4. 'length' → logprob: -12.000977516174316
    5. ' length' → logprob: -14.250977516174316
    6. '(l' → logprob: -15.500977516174316
    7. '[length' → logprob: -16.0009765625
    8. ',length' → logprob: -16.3759765625
    9. '(
' → logprob: -16.6259765625
    10. '	length' → logprob: -16.6259765625

Token 199: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02874826267361641
    2. '-' → logprob: -3.6537482738494873
    3. '):' → logprob: -6.778748035430908
    4. '):
' → logprob: -7.528748035430908
    5. '   ' → logprob: -8.028748512268066
    6. ' ' → logprob: -8.153748512268066
    7. ' ):' → logprob: -9.528748512268066
    8. ' ):
' → logprob: -10.778748512268066
    9. ')' → logprob: -11.028748512268066
    10. '  ' → logprob: -11.278748512268066

Token 200: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0063045150600373745
    2. ' ' → logprob: -5.506304740905762
    3. '1' → logprob: -6.256304740905762
    4. 'len' → logprob: -8.256304740905762
    5. ' len' → logprob: -11.131304740905762
    6. 'min' → logprob: -11.506304740905762
    7. '3' → logprob: -11.631304740905762
    8. 'max' → logprob: -12.506304740905762
    9. '   ' → logprob: -13.318804740905762
    10. '
' → logprob: -13.568804740905762

Token 201: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00107389607001096
    2. '1' → logprob: -7.751073837280273
    3. '3' → logprob: -8.251073837280273
    4. 'len' → logprob: -8.501073837280273
    5. ' ' → logprob: -8.876073837280273
    6. 'max' → logprob: -11.126073837280273
    7. 'min' → logprob: -11.126073837280273
    8. '   ' → logprob: -13.438573837280273
    9. ' len' → logprob: -13.438573837280273
    10. '```' → logprob: -14.063573837280273

Token 202: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6943017840385437
    2. '):' → logprob: -0.6943017840385437
    3. ' ):' → logprob: -7.694301605224609
    4. ' ):
' → logprob: -8.06930160522461
    5. '):
' → logprob: -8.81930160522461
    6. '   ' → logprob: -9.44430160522461
    7. '+' → logprob: -9.69430160522461
    8. ':' → logprob: -9.81930160522461
    9. ')' → logprob: -10.56930160522461
    10. ' ' → logprob: -12.44430160522461

Token 203: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007956892368383706
    2. '       ' → logprob: -7.500795841217041
    3. ' if' → logprob: -8.750795364379883
    4. '3' → logprob: -10.875795364379883
    5. '            
' → logprob: -11.250795364379883
    6. '               ' → logprob: -11.500795364379883
    7. 'if' → logprob: -11.500795364379883
    8. ',' → logprob: -11.750795364379883
    9. '	       ' → logprob: -12.500795364379883
    10. '```' → logprob: -12.625795364379883

Token 204: ' substring' (ID: 89494)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2342593669891357
    2. 'substr' → logprob: -1.4842593669891357
    3. 'substring' (adapté à ' substring') → logprob: -1.6092593669891357
    4. ' substring' → logprob: -2.2342593669891357
    5. 'sub' → logprob: -2.7342593669891357
    6. 'segment' → logprob: -3.8592593669891357
    7. '               ' → logprob: -4.109259605407715
    8. ' substr' → logprob: -4.109259605407715
    9. ' snippet' → logprob: -4.109259605407715
    10. 'if' → logprob: -4.484259605407715

Token 205: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890146225690842
    2. '=' → logprob: -2.578901529312134
    3. 's' → logprob: -12.203901290893555
    4. '=s' → logprob: -12.328901290893555
    5. ' =
' → logprob: -14.328901290893555
    6. ' s' → logprob: -14.453901290893555
    7. ' ' → logprob: -15.078901290893555
    8. '           ' → logprob: -15.328901290893555
    9. '=
' → logprob: -16.203901290893555
    10. '   ' → logprob: -16.328901290893555

Token 206: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.01815006136894226
    2. 's' → logprob: -4.0181498527526855
    3. '	s' → logprob: -16.643150329589844
    4. ' ' → logprob: -16.643150329589844
    5. '(s' → logprob: -17.643150329589844
    6. '           ' → logprob: -17.768150329589844
    7. '            ' → logprob: -18.268150329589844
    8. '        ' → logprob: -18.643150329589844
    9. '`s' → logprob: -18.768150329589844
    10. ' ' → logprob: -18.893150329589844

Token 207: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.000000953674316
    3. '[
' → logprob: -16.125001907348633
    4. 'i' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.750001907348633
    6. ' [' → logprob: -16.875001907348633
    7. '(i' → logprob: -18.875001907348633
    8. ' ' → logprob: -19.000001907348633
    9. '[I' → logprob: -19.375001907348633
    10. ' i' → logprob: -19.500001907348633

Token 208: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.00018768629524856806
    2. ':' → logprob: -8.625187873840332
    3. ' :' → logprob: -12.000187873840332
    4. 'i' → logprob: -13.250187873840332
    5. ' ' → logprob: -16.750186920166016
    6. '[i' → logprob: -17.250186920166016
    7. ' i' → logprob: -18.000186920166016
    8. '3' → logprob: -18.125186920166016
    9. '   ' → logprob: -18.375186920166016
    10. '```' → logprob: -19.250186920166016

Token 209: '+' (ID: 10)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0263105146586895
    2. '+' → logprob: -3.651310443878174
    3. ' +' → logprob: -12.151310920715332
    4. ' ' → logprob: -12.526310920715332
    5. '   ' → logprob: -15.026310920715332
    6. '(' → logprob: -15.026310920715332
    7. '[' → logprob: -15.276310920715332
    8. 'i' → logprob: -15.776310920715332
    9. '```' → logprob: -16.651309967041016
    10. '           ' → logprob: -16.776309967041016

Token 210: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -19.500001907348633
    4. '۳' → logprob: -19.500001907348633
    5. '３' → logprob: -19.687501907348633
    6. 'len' → logprob: -19.812501907348633
    7. '```' → logprob: -19.875001907348633
    8. '  ' → logprob: -20.437501907348633
    9. ']' → logprob: -20.625001907348633
    10. '৩' → logprob: -20.812501907348633

Token 211: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.22576776146888733
    2. ']
' → logprob: -1.600767731666565
    3. '           ' → logprob: -8.975768089294434
    4. ')' → logprob: -9.475768089294434
    5. ')
' → logprob: -9.975768089294434
    6. '       ' → logprob: -9.975768089294434
    7. ']
' → logprob: -10.225768089294434
    8. ']

' → logprob: -11.600768089294434
    9. ' ]' → logprob: -12.350768089294434
    10. ']==' → logprob: -13.100768089294434

Token 212: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001713590754661709
    2. '            
' → logprob: -9.875171661376953
    3. '<|end|>' → logprob: -10.000171661376953
    4. '       ' → logprob: -10.250171661376953
    5. '               ' → logprob: -11.625171661376953
    6. ' if' → logprob: -11.875171661376953
    7. '            ' → logprob: -12.375171661376953
    8. '          ' → logprob: -12.750171661376953
    9. ' ' → logprob: -12.875171661376953
    10. '=' → logprob: -13.125171661376953

Token 213: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.22037094831466675
    2. '           ' → logprob: -1.7203710079193115
    3. 'for' → logprob: -4.470370769500732
    4. ' if' → logprob: -4.970370769500732
    5. ' for' → logprob: -8.72037124633789
    6. '       ' → logprob: -8.84537124633789
    7. '   ' → logprob: -10.09537124633789
    8. '               ' → logprob: -10.22037124633789
    9. ' ' → logprob: -11.84537124633789
    10. '                   ' → logprob: -14.59537124633789

Token 214: ' substring' (ID: 89494)
  Prédit: ' substring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' substring' → logprob: -0.12692958116531372
    2. 'substring' → logprob: -2.126929521560669
    3. 'sub' → logprob: -14.25192928314209
    4. 'substr' → logprob: -14.25192928314209
    5. 'Substring' → logprob: -16.126930236816406
    6. ' substr' → logprob: -16.501930236816406
    7. '	sub' → logprob: -17.751930236816406
    8. ' ' → logprob: -17.876930236816406
    9. ' subclass' → logprob: -18.626930236816406
    10. '.substring' → logprob: -18.876930236816406

Token 215: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07923862338066101
    2. 'in' → logprob: -2.5792386531829834
    3. '==' → logprob: -8.579238891601562
    4. ' ==' → logprob: -8.829238891601562
    5. ' ' → logprob: -11.704238891601562
    6. ')' → logprob: -13.079238891601562
    7. ']' → logprob: -13.329238891601562
    8. 'In' → logprob: -14.454238891601562
    9. '```' → logprob: -14.829238891601562
    10. ']==' → logprob: -15.079238891601562

Token 216: ' counts' (ID: 28991)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.14487683773040771
    2. ' self' → logprob: -2.2698769569396973
    3. 'counts' → logprob: -3.7698769569396973
    4. ' counts' → logprob: -4.769876956939697
    5. 'count' → logprob: -12.019876480102539
    6. '(self' → logprob: -14.019876480102539
    7. '           ' → logprob: -14.269876480102539
    8. ' ' → logprob: -14.519876480102539
    9. '[self' → logprob: -14.644876480102539
    10. '	self' → logprob: -14.894876480102539

Token 217: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028259195387363434
    2. ':
' → logprob: -5.877825736999512
    3. '           ' → logprob: -11.627825736999512
    4. ' :' → logprob: -12.127825736999512
    5. '               ' → logprob: -12.627825736999512
    6. '):' → logprob: -13.752825736999512
    7. ']:' → logprob: -14.252825736999512
    8. ':
' → logprob: -14.377825736999512
    9. ' and' → logprob: -15.252825736999512
    10. '):
' → logprob: -15.627825736999512

Token 218: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2537040114402771
    2. 'counts' → logprob: -2.128704071044922
    3. ' counts' → logprob: -2.253704071044922
    4. '                   ' → logprob: -10.378704071044922
    5. '_counts' → logprob: -10.753704071044922
    6. '           ' → logprob: -11.128704071044922
    7. '   ' → logprob: -13.003704071044922
    8. '                
' → logprob: -13.378704071044922
    9. '[count' → logprob: -13.628704071044922
    10. '                       ' → logprob: -13.628704071044922

Token 219: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' (adapté à ' counts') → logprob: -0.5805832147598267
    2. ' counts' → logprob: -0.8305832147598267
    3. '               ' → logprob: -5.455583095550537
    4. '                   ' → logprob: -7.955583095550537
    5. '           ' → logprob: -12.705583572387695
    6. 'count' → logprob: -12.955583572387695
    7. '   ' → logprob: -13.455583572387695
    8. '                       ' → logprob: -13.705583572387695
    9. '_counts' → logprob: -13.705583572387695
    10. ' ' → logprob: -15.455583572387695

Token 220: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '[sub' → logprob: -15.000000953674316
    3. 'substring' → logprob: -16.375
    4. '[
' → logprob: -17.875
    5. '[...]' → logprob: -18.0
    6. ' [' → logprob: -18.0
    7. '```' → logprob: -20.125
    8. '['' → logprob: -20.875
    9. '   ' → logprob: -20.875
    10. '["' → logprob: -21.25

Token 221: 'substring' (ID: 61719)
  Prédit: 'substring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'substring' → logprob: -6.611323624383658e-05
    2. ' substring' → logprob: -9.625065803527832
    3. 'substr' → logprob: -17.00006675720215
    4. '.substring' → logprob: -18.37506675720215
    5. 'Substring' → logprob: -18.87506675720215
    6. '```' → logprob: -19.87506675720215
    7. 'subtotal' → logprob: -20.25006675720215
    8. ' ' → logprob: -20.37506675720215
    9. 'ub' → logprob: -20.37506675720215
    10. '[' → logprob: -20.75006675720215

Token 222: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007113756611943245
    2. ']+=' → logprob: -5.007113933563232
    3. ' ]' → logprob: -7.882113933563232
    4. ' +=' → logprob: -11.382113456726074
    5. '"]' → logprob: -12.632113456726074
    6. '']' → logprob: -12.632113456726074
    7. '+=' → logprob: -12.882113456726074
    8. ']+' → logprob: -15.507113456726074
    9. '`]' → logprob: -16.75711441040039
    10. ')' → logprob: -16.75711441040039

Token 223: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.47408992052078247
    2. ' +=' → logprob: -0.9740899205207825
    3. ']+=' → logprob: -11.349089622497559
    4. '=' → logprob: -14.474089622497559
    5. '+' → logprob: -15.349089622497559
    6. '[' → logprob: -16.349090576171875
    7. ']' → logprob: -16.349090576171875
    8. '```' → logprob: -16.724090576171875
    9. '           ' → logprob: -16.849090576171875
    10. '   ' → logprob: -16.974090576171875

Token 224: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '   ' → logprob: -18.750158309936523
    4. '```' → logprob: -19.000158309936523
    5. '１' → logprob: -20.500158309936523
    6. '
' → logprob: -20.500158309936523
    7. ' ' → logprob: -20.625158309936523
    8. '  ' → logprob: -21.750158309936523
    9. '۱' → logprob: -21.750158309936523
    10. '           ' → logprob: -21.750158309936523

Token 225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -19.625001907348633
    4. '１' → logprob: -20.250001907348633
    5. '۱' → logprob: -20.875001907348633
    6. '१' → logprob: -22.375001907348633
    7. '   ' → logprob: -22.437501907348633
    8. '
' → logprob: -22.500001907348633
    9. '100' → logprob: -23.125001907348633
    10. '' → logprob: -23.250001907348633

Token 226: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03016487881541252
    2. '
' → logprob: -3.530164957046509
    3. 'return' → logprob: -8.03016471862793
    4. ' return' → logprob: -9.90516471862793
    5. '        
' → logprob: -11.40516471862793
    6. '
' → logprob: -11.53016471862793
    7. '```' → logprob: -12.78016471862793
    8. '   ' → logprob: -12.78016471862793
    9. '    
' → logprob: -13.03016471862793
    10. '  
' → logprob: -13.03016471862793

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014546815305948257
    2. 'return' → logprob: -4.264546871185303
    3. ' return' → logprob: -7.889546871185303
    4. '
' → logprob: -11.889546394348145
    5. '   ' → logprob: -13.514546394348145
    6. '      ' → logprob: -16.01454734802246
    7. '	return' → logprob: -16.26454734802246
    8. ' ' → logprob: -16.88954734802246
    9. '     ' → logprob: -17.26454734802246
    10. '```' → logprob: -17.63954734802246

Token 228: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.39247214794158936
    2. '       ' → logprob: -1.1424721479415894
    3. '
' → logprob: -5.517472267150879
    4. ' return' → logprob: -6.642472267150879
    5. '        
' → logprob: -9.517472267150879
    6. 'ret' → logprob: -9.642472267150879
    7. 'r' → logprob: -9.642472267150879
    8. '   ' → logprob: -10.267472267150879
    9. ' ' → logprob: -11.767472267150879
    10. 're' → logprob: -12.767472267150879

Token 229: ' counts' (ID: 28991)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.017048943787813187
    2. 'counts' → logprob: -4.7670488357543945
    3. ' (' → logprob: -5.2670488357543945
    4. ' counts' → logprob: -5.7670488357543945
    5. 'count' → logprob: -9.142048835754395
    6. '(
' → logprob: -13.517048835754395
    7. '(' → logprob: -14.142048835754395
    8. ' count' → logprob: -14.267048835754395
    9. '(tuple' → logprob: -14.642048835754395
    10. '[count' → logprob: -14.767048835754395

Token 230: '["' (ID: 2272)
  Prédit: '["'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '["' → logprob: -0.0009554093703627586
    2. '['' → logprob: -7.000955581665039
    3. '"' → logprob: -10.875955581665039
    4. '[' → logprob: -11.000955581665039
    5. '("' → logprob: -11.875955581665039
    6. '.values' → logprob: -14.250955581665039
    7. '[self' → logprob: -14.625955581665039
    8. ',' → logprob: -16.87595558166504
    9. ' "' → logprob: -17.12595558166504
    10. ' ["' → logprob: -17.12595558166504

Token 231: 'JO' (ID: 39543)
  Prédit: 'JO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'JO' → logprob: -3.128163257315464e-07
    2. 'IO' → logprob: -16.125
    3. '"' → logprob: -16.625
    4. 'JOY' → logprob: -17.5
    5. 'J' → logprob: -18.25
    6. ' JO' → logprob: -20.0
    7. 'YO' → logprob: -20.625
    8. 'jo' → logprob: -21.375
    9. ''' → logprob: -21.5
    10. 'OI' → logprob: -22.0

Token 232: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -2.45848218582978e-06
    2. 'O' → logprob: -13.37500286102295
    3. 'IO' → logprob: -14.12500286102295
    4. '"I' → logprob: -16.750001907348633
    5. 'OI' → logprob: -16.750001907348633
    6. ' I' → logprob: -17.125001907348633
    7. '
' → logprob: -17.250001907348633
    8. '"' → logprob: -18.250001907348633
    9. '```' → logprob: -18.375001907348633
    10. '

' → logprob: -18.625001907348633

Token 233: '"],' (ID: 17695)
  Prédit: '"],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"],' → logprob: -7.958325295476243e-05
    2. '"]' → logprob: -9.500079154968262
    3. '"' → logprob: -12.500079154968262
    4. '"],
' → logprob: -15.125079154968262
    5. ''],' → logprob: -15.250079154968262
    6. '],' → logprob: -15.500079154968262
    7. '"]
' → logprob: -16.500080108642578
    8. '"),' → logprob: -17.125080108642578
    9. '"},' → logprob: -18.375080108642578
    10. '"].' → logprob: -18.750080108642578

Token 234: ' counts' (ID: 28991)
  Prédit: 'counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'counts' → logprob: -0.07889121770858765
    2. ' counts' → logprob: -2.5788912773132324
    3. 'count' → logprob: -13.453890800476074
    4. '_counts' → logprob: -20.45389175415039
    5. 'Counts' → logprob: -21.57889175415039
    6. ' count' → logprob: -21.57889175415039
    7. '   ' → logprob: -21.70389175415039
    8. ' ' → logprob: -21.95389175415039
    9. 'c' → logprob: -22.20389175415039
    10. 'cnt' → logprob: -22.82889175415039

Token 235: '["' (ID: 2272)
  Prédit: '["'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '["' → logprob: -3.650518920039758e-06
    2. '"' → logprob: -13.000003814697266
    3. '['' → logprob: -14.250003814697266
    4. '[' → logprob: -14.250003814697266
    5. '[
' → logprob: -17.375003814697266
    6. '{"' → logprob: -17.500003814697266
    7. '   ' → logprob: -17.500003814697266
    8. ' ["' → logprob: -18.500003814697266
    9. '       ' → logprob: -18.625003814697266
    10. '	' → logprob: -18.875003814697266

Token 236: 'IO' (ID: 3982)
  Prédit: 'IO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IO' → logprob: -2.641841820150148e-05
    2. '"' → logprob: -10.62502670288086
    3. ' IO' → logprob: -14.00002670288086
    4. 'JO' → logprob: -14.87502670288086
    5. 'io' → logprob: -14.87502670288086
    6. '"io' → logprob: -16.00002670288086
    7. 'OI' → logprob: -16.62502670288086
    8. 'I' → logprob: -16.87502670288086
    9. '_IO' → logprob: -17.25002670288086
    10. '(IO' → logprob: -17.25002670288086

Token 237: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -6.392202976712724e-06
    2. '"I' → logprob: -12.875006675720215
    3. '"' → logprob: -14.000006675720215
    4. 'O' → logprob: -14.625006675720215
    5. ' I' → logprob: -15.000006675720215
    6. '"]' → logprob: -15.375006675720215
    7. '```' → logprob: -15.437506675720215
    8. ']' → logprob: -15.500006675720215
    9. '1' → logprob: -15.500006675720215
    10. 'IP' → logprob: -15.812506675720215

Token 238: '"]

' (ID: 57728)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"]' → logprob: -5.9153885558771435e-06
    2. '"]
' → logprob: -13.000005722045898
    3. ']' → logprob: -13.375005722045898
    4. '"])' → logprob: -14.375005722045898
    5. ' "]' → logprob: -14.500005722045898
    6. '")' → logprob: -15.250005722045898
    7. '']' → logprob: -15.375005722045898
    8. ')' → logprob: -15.875005722045898
    9. '"' → logprob: -16.1250057220459
    10. '"]]' → logprob: -16.2500057220459

Token 239: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01436316967010498
    2. 'class' → logprob: -4.7643632888793945
    3. 'if' → logprob: -5.7643632888793945
    4. '<|end|>' → logprob: -6.8893632888793945
    5. '#' → logprob: -7.1393632888793945
    6. 'from' → logprob: -7.3893632888793945
    7. '```' → logprob: -9.264363288879395
    8. '<|end|>' → logprob: -10.514363288879395
    9. 'for' → logprob: -11.764363288879395
    10. 'import' → logprob: -11.889363288879395

Token 240: ' Processor' (ID: 82937)
  Prédit: 'Pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -0.8347934484481812
    2. 'Solution' → logprob: -2.0847935676574707
    3. 'JO' → logprob: -2.2097935676574707
    4. 'String' → logprob: -2.5847935676574707
    5. 'Main' → logprob: -2.7097935676574707
    6. ' Pattern' → logprob: -2.8347935676574707
    7. 'Test' → logprob: -3.8347935676574707
    8. 'Simple' → logprob: -4.584793567657471
    9. ' Solution' → logprob: -4.584793567657471
    10. 'def' → logprob: -4.584793567657471

Token 241: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015628745779395103
    2. ':
' → logprob: -4.765628814697266
    3. '(String' → logprob: -5.515628814697266
    4. '(' → logprob: -6.515628814697266
    5. ':String' → logprob: -6.640628814697266
    6. ' :' → logprob: -9.515628814697266
    7. '(S' → logprob: -11.140628814697266
    8. '[String' → logprob: -11.140628814697266
    9. '):' → logprob: -11.390628814697266
    10. '():' → logprob: -11.390628814697266

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013104787794873118
    2. ' def' → logprob: -6.751310348510742
    3. 'def' → logprob: -8.876310348510742
    4. '	def' → logprob: -15.376310348510742
    5. '    
' → logprob: -15.376310348510742
    6. '   ' → logprob: -16.501310348510742
    7. '```' → logprob: -16.751310348510742
    8. ',' → logprob: -17.501310348510742
    9. ')' → logprob: -17.626310348510742
    10. '    ' → logprob: -17.626310348510742

Token 243: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20343804359436035
    2. ' def' → logprob: -1.7034380435943604
    3. '   ' → logprob: -6.203437805175781
    4. '	def' → logprob: -16.32843780517578
    5. ' ' → logprob: -16.45343780517578
    6. '    ' → logprob: -17.07843780517578
    7. 'class' → logprob: -17.82843780517578
    8. '  ' → logprob: -17.95343780517578
    9. '@' → logprob: -18.82843780517578
    10. ':def' → logprob: -18.95343780517578

Token 244: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.22937306761741638
    2. 'init' → logprob: -1.7293730974197388
    3. '__' → logprob: -4.104372978210449
    4. ' init' → logprob: -5.354372978210449
    5. ' def' → logprob: -5.979372978210449
    6. 'process' → logprob: -6.479372978210449
    7. 'def' → logprob: -6.729372978210449
    8. ' process' → logprob: -6.854372978210449
    9. '_init' → logprob: -10.97937297821045
    10. 'iter' → logprob: -12.85437297821045

Token 245: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00044056313345208764
    2. 'iter' → logprob: -7.75044059753418
    3. '   ' → logprob: -12.12544059753418
    4. 'def' → logprob: -13.25044059753418
    5. '```' → logprob: -14.00044059753418
    6. ' init' → logprob: -14.12544059753418
    7. ' ' → logprob: -15.37544059753418
    8. '  ' → logprob: -15.75044059753418
    9. 'call' → logprob: -15.87544059753418
    10. '_init' → logprob: -16.00044059753418

Token 246: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.01659283973276615
    2. '(self' → logprob: -4.141592979431152
    3. '__' → logprob: -8.141592979431152
    4. '__(
' → logprob: -8.891592979431152
    5. ' (' → logprob: -9.641592979431152
    6. '(' → logprob: -10.016592979431152
    7. '_(' → logprob: -11.516592979431152
    8. ')(' → logprob: -12.391592979431152
    9. ' ' → logprob: -13.641592979431152
    10. '   ' → logprob: -14.016592979431152

Token 247: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2948405128554441e-05
    2. ' self' → logprob: -12.12501335144043
    3. '
' → logprob: -12.87501335144043
    4. '       ' → logprob: -13.00001335144043
    5. '(self' → logprob: -14.00001335144043
    6. '   ' → logprob: -14.25001335144043
    7. 'source' → logprob: -15.12501335144043
    8. ')' → logprob: -15.37501335144043
    9. 'string' → logprob: -15.62501335144043
    10. ',' → logprob: -15.75001335144043

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010545044642640278
    2. 'self' → logprob: -9.250105857849121
    3. ' ,' → logprob: -12.875105857849121
    4. ',self' → logprob: -13.000105857849121
    5. ',
' → logprob: -13.250105857849121
    6. '       ' → logprob: -13.750105857849121
    7. '(self' → logprob: -14.000105857849121
    8. '   ' → logprob: -14.625105857849121
    9. ' self' → logprob: -16.250104904174805
    10. '
' → logprob: -16.625104904174805

Token 249: ' source' (ID: 4256)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.5000438094139099
    2. 'source' → logprob: -1.0000438690185547
    3. 'self' → logprob: -3.7500438690185547
    4. 'pattern' → logprob: -6.875043869018555
    5. ' source' → logprob: -7.875043869018555
    6. ' string' → logprob: -8.000043869018555
    7. 'input' → logprob: -8.125043869018555
    8. 'strings' → logprob: -11.000043869018555
    9. '   ' → logprob: -11.125043869018555
    10. ' self' → logprob: -11.250043869018555

Token 250: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.816093228830141e-06
    2. '):' → logprob: -13.50000286102295
    3. ' :' → logprob: -13.75000286102295
    4. ':str' → logprob: -16.375001907348633
    5. ')' → logprob: -16.625001907348633
    6. '_:' → logprob: -17.250001907348633
    7. ' ):' → logprob: -18.125001907348633
    8. '：' → logprob: -19.000001907348633
    9. '}:' → logprob: -19.125001907348633
    10. '__:' → logprob: -20.000001907348633

Token 251: ' String' (ID: 1189)
  Prédit: 'String'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -0.1269284337759018
    2. ' String' → logprob: -2.1269283294677734
    3. ' ' → logprob: -14.751928329467773
    4. '_String' → logprob: -17.251928329467773
    5. '	String' → logprob: -17.751928329467773
    6. 'Str' → logprob: -18.626928329467773
    7. 'Source' → logprob: -19.001928329467773
    8. 'Iterator' → logprob: -19.251928329467773
    9. 'List' → logprob: -19.626928329467773
    10. '[String' → logprob: -19.751928329467773

Token 252: 'Source' (ID: 4823)
  Prédit: 'Source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Source' → logprob: 0.0
    2. 'source' → logprob: -17.625
    3. ' Source' → logprob: -18.375
    4. '_source' → logprob: -19.875
    5. ' source' → logprob: -20.25
    6. 'ource' → logprob: -20.625
    7. 'S' → logprob: -21.0
    8. ')' → logprob: -21.125
    9. '.Source' → logprob: -22.125
    10. '_SOURCE' → logprob: -22.25

Token 253: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6691709160804749
    2. '):' → logprob: -0.9191709160804749
    3. '):
' → logprob: -2.41917085647583
    4. ':' → logprob: -11.919171333312988
    5. '   ' → logprob: -11.919171333312988
    6. '):
' → logprob: -12.419171333312988
    7. ',' → logprob: -12.919171333312988
    8. ' )' → logprob: -14.544171333312988
    9. ' ):' → logprob: -14.669171333312988
    10. ')->' → logprob: -14.919171333312988

Token 254: ' matcher' (ID: 63436)
  Prédit: 'matcher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matcher' → logprob: -0.6404477953910828
    2. ' matcher' → logprob: -0.7654477953910828
    3. 'pattern' → logprob: -5.515447616577148
    4. ' pattern' → logprob: -5.640447616577148
    5. '   ' → logprob: -8.890447616577148
    6. ' ' → logprob: -10.140447616577148
    7. '       ' → logprob: -11.140447616577148
    8. '  ' → logprob: -11.640447616577148
    9. 'match' → logprob: -11.890447616577148
    10. '    ' → logprob: -12.015447616577148

Token 255: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.2603901015827432e-05
    2. '):' → logprob: -10.750022888183594
    3. ')' → logprob: -14.625022888183594
    4. '):
' → logprob: -14.875022888183594
    5. ' :' → logprob: -16.000022888183594
    6. 'pattern' → logprob: -17.375022888183594
    7. ' ):' → logprob: -17.875022888183594
    8. '   ' → logprob: -18.375022888183594
    9. '```' → logprob: -18.375022888183594
    10. '}:' → logprob: -18.500022888183594

Token 256: ' Pattern' (ID: 29731)
  Prédit: 'Pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pattern' → logprob: -0.575942873954773
    2. ' Pattern' → logprob: -0.825942873954773
    3. ' ' → logprob: -12.950942993164062
    4. 'Pat' → logprob: -14.825942993164062
    5. 'PAT' → logprob: -15.575942993164062
    6. 'pattern' → logprob: -15.950942993164062
    7. '.Pattern' → logprob: -16.450942993164062
    8. '   ' → logprob: -16.575942993164062
    9. 'JO' → logprob: -16.575942993164062
    10. ' pattern' → logprob: -16.700942993164062

Token 257: 'Matcher' (ID: 43593)
  Prédit: 'Matcher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Matcher' → logprob: -7.226628895296017e-06
    2. '.Matcher' → logprob: -12.750007629394531
    3. ')' → logprob: -13.625007629394531
    4. ' Matcher' → logprob: -13.625007629394531
    5. 'matcher' → logprob: -15.250007629394531
    6. ']' → logprob: -15.250007629394531
    7. 'Match' → logprob: -15.375007629394531
    8. 'Maker' → logprob: -15.750007629394531
    9. 'Mapper' → logprob: -15.875007629394531
    10. 'Matchers' → logprob: -16.00000762939453

Token 258: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008877267129719257
    2. '):
' → logprob: -4.758877277374268
    3. ')' → logprob: -8.25887680053711
    4. '):
' → logprob: -13.38387680053711
    5. '   ' → logprob: -13.75887680053711
    6. ':' → logprob: -14.25887680053711
    7. ' ):' → logprob: -15.00887680053711
    8. ' ' → logprob: -15.88387680053711
    9. '):

' → logprob: -16.50887680053711
    10. '       ' → logprob: -18.13387680053711

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001761272142175585
    2. 'self' → logprob: -8.750176429748535
    3. ' self' → logprob: -11.125176429748535
    4. '   ' → logprob: -13.500176429748535
    5. ',' → logprob: -14.750176429748535
    6. '):
' → logprob: -15.375176429748535
    7. ')' → logprob: -15.500176429748535
    8. 'def' → logprob: -15.875176429748535
    9. ':' → logprob: -16.37517547607422
    10. '(self' → logprob: -16.37517547607422

Token 260: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.012658794410526752
    2. ' self' → logprob: -4.762658596038818
    3. '       ' → logprob: -5.512658596038818
    4. '   ' → logprob: -14.762659072875977
    5. ' ' → logprob: -16.137659072875977
    6. '	self' → logprob: -16.262659072875977
    7. '
' → logprob: -17.887659072875977
    8. '      ' → logprob: -18.262659072875977
    9. '     ' → logprob: -18.387659072875977
    10. '(self' → logprob: -19.012659072875977

Token 261: '.source' (ID: 27872)
  Prédit: '.source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.source' → logprob: -0.004089204594492912
    2. '.' → logprob: -5.50408935546875
    3. 'source' → logprob: -11.62908935546875
    4. ' .' → logprob: -13.87908935546875
    5. '.s' → logprob: -14.87908935546875
    6. ' source' → logprob: -15.50408935546875
    7. '.user' → logprob: -16.25408935546875
    8. '.src' → logprob: -16.62908935546875
    9. '.input' → logprob: -16.87908935546875
    10. '	source' → logprob: -17.50408935546875

Token 262: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692926824092865
    2. ' =' → logprob: -2.12692928314209
    3. '   ' → logprob: -14.50192928314209
    4. ',' → logprob: -15.25192928314209
    5. '=self' → logprob: -15.87692928314209
    6. '=
' → logprob: -15.87692928314209
    7. ':' → logprob: -16.626928329467773
    8. ' =
' → logprob: -16.626928329467773
    9. '.' → logprob: -16.876928329467773
    10. ' ' → logprob: -17.376928329467773

Token 263: ' source' (ID: 4256)
  Prédit: ' source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' source' → logprob: -0.16022463142871857
    2. 'source' → logprob: -1.9102246761322021
    3. '	source' → logprob: -15.035224914550781
    4. '_source' → logprob: -16.28522491455078
    5. '(source' → logprob: -16.91022491455078
    6. '[source' → logprob: -18.28522491455078
    7. '.source' → logprob: -19.53522491455078
    8. 'Source' → logprob: -20.03522491455078
    9. '
' → logprob: -20.16022491455078
    10. ' ' → logprob: -20.28522491455078

Token 264: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007099286303855479
    2. '
' → logprob: -7.3757100105285645
    3. 'self' → logprob: -9.750709533691406
    4. ' self' → logprob: -10.750709533691406
    5. '   ' → logprob: -13.000709533691406
    6. '	self' → logprob: -14.250709533691406
    7. '<|end|>' → logprob: -15.375709533691406
    8. ',' → logprob: -16.000709533691406
    9. '      ' → logprob: -16.625709533691406
    10. 'def' → logprob: -16.875709533691406

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.9728669738397e-05
    2. 'self' → logprob: -9.375100135803223
    3. ' self' → logprob: -11.125100135803223
    4. '   ' → logprob: -15.750100135803223
    5. '	self' → logprob: -17.250099182128906
    6. '      ' → logprob: -18.250099182128906
    7. '
' → logprob: -19.000099182128906
    8. 'def' → logprob: -19.625099182128906
    9. '           ' → logprob: -19.750099182128906
    10. '	' → logprob: -20.125099182128906

Token 266: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0006124787032604218
    2. ' self' → logprob: -7.625612258911133
    3. '       ' → logprob: -9.000612258911133
    4. '   ' → logprob: -14.000612258911133
    5. ' ' → logprob: -16.375612258911133
    6. '      ' → logprob: -17.250612258911133
    7. '     ' → logprob: -17.375612258911133
    8. '  ' → logprob: -17.500612258911133
    9. '    ' → logprob: -17.875612258911133
    10. '	self' → logprob: -18.000612258911133

Token 267: '.matcher' (ID: 83801)
  Prédit: '.matcher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matcher' → logprob: -0.0012880940921604633
    2. '.' → logprob: -6.876287937164307
    3. '.match' → logprob: -8.876288414001465
    4. 'matcher' → logprob: -9.876288414001465
    5. '.Matcher' → logprob: -10.126288414001465
    6. '.processor' → logprob: -12.501288414001465
    7. '.pattern' → logprob: -12.501288414001465
    8. '   ' → logprob: -12.626288414001465
    9. ' .' → logprob: -12.626288414001465
    10. '.matches' → logprob: -13.001288414001465

Token 268: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6820847988128662
    2. ',' → logprob: -0.9320847988128662
    3. '.count' → logprob: -2.432084798812866
    4. '=' → logprob: -5.057085037231445
    5. ')' → logprob: -5.807085037231445
    6. '_count' → logprob: -7.432085037231445
    7. 'count' → logprob: -7.682085037231445
    8. '<|end|>' → logprob: -8.182085037231445
    9. ',count' → logprob: -8.557085037231445
    10. '   ' → logprob: -8.557085037231445

Token 269: ' matcher' (ID: 63436)
  Prédit: ' matcher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matcher' → logprob: -0.10021097958087921
    2. 'matcher' → logprob: -2.3502109050750732
    3. '.matcher' → logprob: -12.725211143493652
    4. ' match' → logprob: -14.725211143493652
    5. 'match' → logprob: -14.725211143493652
    6. ' source' → logprob: -15.975211143493652
    7. ' ' → logprob: -15.975211143493652
    8. 'Matcher' → logprob: -17.100210189819336
    9. ' ' → logprob: -17.100210189819336
    10. 'source' → logprob: -17.100210189819336

Token 270: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1291493922472
    2. '
' → logprob: -2.1291494369506836
    3. '    
' → logprob: -6.504149436950684
    4. 'def' → logprob: -7.504149436950684
    5. '<|end|>' → logprob: -9.004149436950684
    6. ' def' → logprob: -10.879149436950684
    7. '<|end|>' → logprob: -11.879149436950684
    8. '  
' → logprob: -12.129149436950684
    9. '

' → logprob: -12.129149436950684
    10. '        
' → logprob: -12.629149436950684

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06200386956334114
    2. 'def' → logprob: -2.8120038509368896
    3. ' def' → logprob: -10.687004089355469
    4. '
' → logprob: -11.437004089355469
    5. '    
' → logprob: -13.062004089355469
    6. '	def' → logprob: -14.937004089355469
    7. '        
' → logprob: -16.06200408935547
    8. '<|end|>' → logprob: -17.31200408935547
    9. '

' → logprob: -18.31200408935547
    10. ' ' → logprob: -18.31200408935547

Token 272: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.7697225252486533e-06
    2. ' def' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.500003814697266
    4. '	def' → logprob: -23.125003814697266
    5. '    
' → logprob: -25.500003814697266
    6. '
' → logprob: -25.500003814697266
    7. ' ' → logprob: -25.500003814697266
    8. ':def' → logprob: -27.750003814697266
    9. '```' → logprob: -27.875003814697266
    10. 'from' → logprob: -27.875003814697266

Token 273: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.16333554685115814
    2. ' process' → logprob: -1.9133355617523193
    3. 'def' → logprob: -6.41333532333374
    4. 'run' → logprob: -7.16333532333374
    5. ' run' → logprob: -7.66333532333374
    6. ' def' → logprob: -8.413335800170898
    7. 'execute' → logprob: -14.413335800170898
    8. '	process' → logprob: -15.788335800170898
    9. ' proces' → logprob: -16.1633358001709
    10. '.process' → logprob: -16.4133358001709

Token 274: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002342912630410865
    2. '(' → logprob: -8.375234603881836
    3. 'self' → logprob: -13.000234603881836
    4. '(s' → logprob: -14.125234603881836
    5. '(
' → logprob: -15.375234603881836
    6. ' (' → logprob: -15.375234603881836
    7. '   ' → logprob: -15.875234603881836
    8. '()' → logprob: -16.875234603881836
    9. '
' → logprob: -17.000234603881836
    10. '(sel' → logprob: -17.000234603881836

Token 275: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10519286245107651
    2. '):' → logprob: -2.4801928997039795
    3. '):
' → logprob: -4.2301926612854
    4. 'self' → logprob: -6.6051926612854
    5. '   ' → logprob: -9.355193138122559
    6. ')->' → logprob: -10.230193138122559
    7. ',' → logprob: -10.355193138122559
    8. ' )' → logprob: -10.355193138122559
    9. ' ):' → logprob: -11.730193138122559
    10. '       ' → logprob: -12.105193138122559

Token 276: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011481947731226683
    2. '(' → logprob: -7.376148223876953
    3. ' ->' → logprob: -8.126148223876953
    4. ':' → logprob: -9.376148223876953
    5. '->' → logprob: -10.001148223876953
    6. '       ' → logprob: -10.376148223876953
    7. '   ' → logprob: -10.501148223876953
    8. 'self' → logprob: -11.126148223876953
    9. '():' → logprob: -11.251148223876953
    10. ' (' → logprob: -12.751148223876953

Token 277: ' List' (ID: 2655)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.002747815568000078
    2. 'List' → logprob: -6.252748012542725
    3. ' None' → logprob: -7.127748012542725
    4. 'Tuple' → logprob: -11.502747535705566
    5. 'Iterator' → logprob: -12.127747535705566
    6. ' List' → logprob: -15.252747535705566
    7. 'none' → logprob: -15.377747535705566
    8. 'int' → logprob: -15.377747535705566
    9. '   ' → logprob: -16.127748489379883
    10. '```' → logprob: -17.752748489379883

Token 278: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '[str' → logprob: -16.75
    3. '[
' → logprob: -16.875
    4. '[int' → logprob: -17.375
    5. '```' → logprob: -18.75
    6. '[List' → logprob: -18.875
    7. '   ' → logprob: -19.625
    8. '
' → logprob: -20.625
    9. '[(' → logprob: -20.875
    10. 'Tuple' → logprob: -21.375

Token 279: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -5.319370302458992e-06
    2. ' Tuple' → logprob: -12.500005722045898
    3. 'str' → logprob: -13.875005722045898
    4. 'int' → logprob: -15.250005722045898
    5. '   ' → logprob: -15.625005722045898
    6. 'tuple' → logprob: -16.1250057220459
    7. 'Tu' → logprob: -16.7500057220459
    8. '[' → logprob: -18.2500057220459
    9. '       ' → logprob: -18.6250057220459
    10. '.Tuple' → logprob: -18.7500057220459

Token 280: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.5094070477061905e-05
    2. '[str' → logprob: -11.500015258789062
    3. 'int' → logprob: -12.875015258789062
    4. '   ' → logprob: -13.375015258789062
    5. ',int' → logprob: -14.625015258789062
    6. '[' → logprob: -16.000015258789062
    7. '(int' → logprob: -17.250015258789062
    8. ' int' → logprob: -17.375015258789062
    9. '<int' → logprob: -17.500015258789062
    10. '       ' → logprob: -18.000015258789062

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023276694118976593
    2. ',int' → logprob: -3.7732768058776855
    3. 'int' → logprob: -11.023276329040527
    4. ' ,' → logprob: -11.273276329040527
    5. '[int' → logprob: -14.273276329040527
    6. '   ' → logprob: -15.023276329040527
    7. ' int' → logprob: -15.148276329040527
    8. ',Integer' → logprob: -15.523276329040527
    9. ',
' → logprob: -15.898276329040527
    10. ']int' → logprob: -16.023277282714844

Token 282: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.5597102396423e-05
    2. ' int' → logprob: -10.250035285949707
    3. '[int' → logprob: -15.750035285949707
    4. '   ' → logprob: -17.500036239624023
    5. '	int' → logprob: -17.625036239624023
    6. ']int' → logprob: -18.000036239624023
    7. '<int' → logprob: -19.125036239624023
    8. ' ' → logprob: -19.625036239624023
    9. '    ' → logprob: -20.000036239624023
    10. '```' → logprob: -20.500036239624023

Token 283: ']]:
' (ID: 183340)
  Prédit: ']]:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.0034442150499671698
    2. ']]' → logprob: -5.753444194793701
    3. ']' → logprob: -8.75344467163086
    4. ')]' → logprob: -9.87844467163086
    5. ']:' → logprob: -10.75344467163086
    6. ']:
' → logprob: -11.00344467163086
    7. '>' → logprob: -11.87844467163086
    8. ')' → logprob: -12.25344467163086
    9. ']>' → logprob: -12.87844467163086
    10. '   ' → logprob: -13.37844467163086

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022809267102275044
    2. 'result' → logprob: -9.250227928161621
    3. 'results' → logprob: -9.750227928161621
    4. ' results' → logprob: -10.625227928161621
    5. '
' → logprob: -10.750227928161621
    6. '```' → logprob: -11.375227928161621
    7. '        
' → logprob: -11.500227928161621
    8. ' result' → logprob: -13.125227928161621
    9. '    
' → logprob: -13.750227928161621
    10. '[' → logprob: -13.875227928161621

Token 285: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.00815115962177515
    2. ' results' → logprob: -5.508151054382324
    3. 'result' → logprob: -5.758151054382324
    4. '       ' → logprob: -7.008151054382324
    5. ' result' → logprob: -12.758151054382324
    6. 'counts' → logprob: -16.13315200805664
    7. '	results' → logprob: -17.00815200805664
    8. '   ' → logprob: -18.25815200805664
    9. '_results' → logprob: -19.63315200805664
    10. 'Results' → logprob: -19.75815200805664

Token 286: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038043100386857986
    2. '=' → logprob: -3.2880430221557617
    3. '=[]' → logprob: -13.663043022155762
    4. '=[]
' → logprob: -14.913043022155762
    5. ':' → logprob: -16.288043975830078
    6. ' ' → logprob: -16.913043975830078
    7. '.append' → logprob: -17.538043975830078
    8. '   ' → logprob: -17.788043975830078
    9. '[]' → logprob: -17.788043975830078
    10. '=[]
' → logprob: -19.163043975830078

Token 287: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02592018060386181
    2. '[]
' → logprob: -3.7759201526641846
    3. ' []' → logprob: -6.025920391082764
    4. ' []
' → logprob: -8.275919914245605
    5. '[]

' → logprob: -13.900919914245605
    6. '[' → logprob: -15.150919914245605
    7. '[]"' → logprob: -17.775920867919922
    8. 'list' → logprob: -18.275920867919922
    9. ' []
' → logprob: -18.400920867919922
    10. '[]>' → logprob: -18.400920867919922

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00552793126553297
    2. ' for' → logprob: -5.630527973175049
    3. 'for' → logprob: -6.255527973175049
    4. '	' → logprob: -12.88052749633789
    5. '   ' → logprob: -13.63052749633789
    6. '	for' → logprob: -13.63052749633789
    7. '
' → logprob: -15.00552749633789
    8. '        
' → logprob: -15.13052749633789
    9. '' → logprob: -16.13052749633789
    10. ' ' → logprob: -16.13052749633789

Token 289: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0025718524120748043
    2. '       ' → logprob: -6.002572059631348
    3. ' for' → logprob: -9.252572059631348
    4. '   ' → logprob: -15.752572059631348
    5. '```' → logprob: -16.37757110595703
    6. '	for' → logprob: -16.50257110595703
    7. ' ' → logprob: -19.12757110595703
    8. '        
' → logprob: -19.62757110595703
    9. '
' → logprob: -19.75257110595703
    10. '           ' → logprob: -19.87757110595703

Token 290: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.050312042236328125
    2. 's' → logprob: -3.550312042236328
    3. 'string' → logprob: -4.550312042236328
    4. ' line' → logprob: -4.675312042236328
    5. ' s' → logprob: -8.050312042236328
    6. 'text' → logprob: -9.425312042236328
    7. ' string' → logprob: -10.175312042236328
    8. 'input' → logprob: -11.175312042236328
    9. 'item' → logprob: -12.550312042236328
    10. 'pattern' → logprob: -12.925312042236328

Token 291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013265528250485659
    2. 'in' → logprob: -6.626326560974121
    3. '	in' → logprob: -15.126326560974121
    4. ' ' → logprob: -16.626325607299805
    5. 's' → logprob: -16.626325607299805
    6. '        ' → logprob: -16.876325607299805
    7. 'line' → logprob: -17.001325607299805
    8. '    ' → logprob: -17.251325607299805
    9. '       ' → logprob: -18.251325607299805
    10. '   ' → logprob: -18.251325607299805

Token 292: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019289902411401272
    2. ' self' → logprob: -6.251928806304932
    3. 'iter' → logprob: -15.50192928314209
    4. '(self' → logprob: -16.126928329467773
    5. '	self' → logprob: -16.751928329467773
    6. '   ' → logprob: -17.501928329467773
    7. ' ' → logprob: -18.626928329467773
    8. '=self' → logprob: -19.751928329467773
    9. 'this' → logprob: -20.126928329467773
    10. '    ' → logprob: -20.251928329467773

Token 293: '._' (ID: 2697)
  Prédit: '.source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.source' → logprob: -0.0013355977134779096
    2. 'source' → logprob: -6.626335620880127
    3. '.' → logprob: -12.001335144042969
    4. '	source' → logprob: -13.626335144042969
    5. ' source' → logprob: -14.001335144042969
    6. 'ource' → logprob: -14.376335144042969
    7. ' .' → logprob: -15.876335144042969
    8. 's' → logprob: -15.876335144042969
    9. '.s' → logprob: -16.12633514404297
    10. 'in' → logprob: -16.12633514404297

Token 294: 'limited' (ID: 23070)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'source' → logprob: -0.3547051250934601
    2. 'iter' → logprob: -1.2297050952911377
    3. 'iterate' → logprob: -6.604705333709717
    4. 'lines' → logprob: -6.979705333709717
    5. 'get' → logprob: -7.354705333709717
    6. 'input' → logprob: -7.604705333709717
    7. 'string' → logprob: -7.979705333709717
    8. 'line' → logprob: -8.104704856872559
    9. 'iterator' → logprob: -8.229704856872559
    10. '_iter' → logprob: -8.354704856872559

Token 295: '_d' (ID: 1565)
  Prédit: '_iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.6887769103050232
    2. 'iter' → logprob: -1.938776969909668
    3. '_lines' → logprob: -2.063776969909668
    4. 'lines' → logprob: -2.313776969909668
    5. 'source' → logprob: -3.438776969909668
    6. '_iterator' → logprob: -3.813776969909668
    7. '_source' → logprob: -3.938776969909668
    8. '()' → logprob: -5.063776969909668
    9. ':' → logprob: -5.438776969909668
    10. '(' → logprob: -5.438776969909668

Token 296: 'atasets' (ID: 105003)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.7237738966941833
    2. 'ata' → logprob: -0.9737738966941833
    3. 'ict' → logprob: -2.598773956298828
    4. 'efs' → logprob: -4.598773956298828
    5. 'iter' → logprob: -4.723773956298828
    6. '__' → logprob: -5.723773956298828
    7. 'evice' → logprob: -5.848773956298828
    8. 'ep' → logprob: -5.973773956298828
    9. 'im' → logprob: -6.098773956298828
    10. '   ' → logprob: -6.348773956298828

Token 297: '(self' (ID: 2402)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03498683497309685
    2. '():
' → logprob: -4.159986972808838
    3. '(' → logprob: -4.409986972808838
    4. '()' → logprob: -5.909986972808838
    5. ':' → logprob: -6.034986972808838
    6. '(self' → logprob: -7.034986972808838
    7. ' ():' → logprob: -8.65998649597168
    8. '(),' → logprob: -9.65998649597168
    9. '(len' → logprob: -9.78498649597168
    10. '(source' → logprob: -10.03498649597168

Token 298: '.source' (ID: 27872)
  Prédit: '.source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.source' → logprob: -0.00029589756741188467
    2. 'source' → logprob: -8.625295639038086
    3. ',' → logprob: -9.875295639038086
    4. '().' → logprob: -11.250295639038086
    5. '.' → logprob: -11.250295639038086
    6. '(' → logprob: -11.375295639038086
    7. '):
' → logprob: -11.875295639038086
    8. ' ' → logprob: -12.375295639038086
    9. '(source' → logprob: -12.500295639038086
    10. 'ource' → logprob: -12.875295639038086

Token 299: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2973864674568176
    2. '):' → logprob: -1.4223864078521729
    3. ',' → logprob: -4.797386646270752
    4. '()):
' → logprob: -4.922386646270752
    5. '()' → logprob: -8.547386169433594
    6. '(),' → logprob: -8.672386169433594
    7. '):
' → logprob: -9.922386169433594
    8. ')' → logprob: -10.172386169433594
    9. '):

' → logprob: -10.922386169433594
    10. ' ):
' → logprob: -10.922386169433594

Token 300: ' limit' (ID: 5967)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.9727942943572998
    2. '1' → logprob: -1.5977942943572998
    3. '5' → logprob: -1.5977942943572998
    4. '2' → logprob: -2.4727942943573
    5. '10' → logprob: -2.5977942943573
    6. ' ' → logprob: -3.5977942943573
    7. '100' → logprob: -3.5977942943573
    8. '50' → logprob: -6.972794532775879
    9. '20' → logprob: -7.097794532775879
    10. '   ' → logprob: -7.347794532775879

Token 301: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.885492621222511e-05
    2. '(' → logprob: -9.625068664550781
    3. ' =' → logprob: -13.500068664550781
    4. '1' → logprob: -14.625068664550781
    5. ')' → logprob: -15.000068664550781
    6. ')=' → logprob: -15.625068664550781
    7. '=(' → logprob: -15.875068664550781
    8. ':=' → logprob: -16.37506866455078
    9. '=
' → logprob: -17.00006866455078
    10. ':' → logprob: -17.00006866455078

Token 302: '5' (ID: 20)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9749869108200073
    2. '100' → logprob: -0.9749869108200073
    3. '3' → logprob: -2.224987030029297
    4. '1' → logprob: -2.974987030029297
    5. '5' → logprob: -2.974987030029297
    6. ' ' → logprob: -3.974987030029297
    7. '2' → logprob: -4.724987030029297
    8. '50' → logprob: -5.724987030029297
    9. '20' → logprob: -6.349987030029297
    10. 'int' → logprob: -7.349987030029297

Token 303: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6933515071868896
    2. '):' → logprob: -0.6933515071868896
    3. '):
' → logprob: -8.693351745605469
    4. '   ' → logprob: -10.943351745605469
    5. ')' → logprob: -11.818351745605469
    6. '       ' → logprob: -12.568351745605469
    7. ' ):' → logprob: -12.943351745605469
    8. ' ):
' → logprob: -13.443351745605469
    9. '):

' → logprob: -13.693351745605469
    10. ',' → logprob: -14.068351745605469

Token 304: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008659131824970245
    2. ':' → logprob: -5.258659362792969
    3. ':
' → logprob: -5.883659362792969
    4. '):
' → logprob: -8.508659362792969
    5. '):' → logprob: -9.008659362792969
    6. ',' → logprob: -9.508659362792969
    7. '            
' → logprob: -10.258659362792969
    8. '          ' → logprob: -10.508659362792969
    9. ' :' → logprob: -10.508659362792969
    10. '       ' → logprob: -10.633659362792969

Token 305: ' joi' (ID: 193529)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.153891921043396
    2. 'results' → logprob: -1.403891921043396
    3. 'counts' → logprob: -1.403891921043396
    4. '           ' → logprob: -2.2788920402526855
    5. 'count' → logprob: -2.7788920402526855
    6. ' counts' → logprob: -4.5288920402526855
    7. ' result' → logprob: -5.1538920402526855
    8. ' results' → logprob: -5.5288920402526855
    9. '               ' → logprob: -5.5288920402526855
    10. 'j' → logprob: -6.1538920402526855

Token 306: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0019501789938658476
    2. ',' → logprob: -6.751950263977051
    3. '_counts' → logprob: -7.376950263977051
    4. 'count' → logprob: -9.25195026397705
    5. '_,' → logprob: -10.87695026397705
    6. ',count' → logprob: -11.25195026397705
    7. '_cnt' → logprob: -11.37695026397705
    8. ',j' → logprob: -12.00195026397705
    9. '_j' → logprob: -13.00195026397705
    10. '_c' → logprob: -13.00195026397705

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.975612187583465e-05
    2. ',j' → logprob: -10.625029563903809
    3. ' ,' → logprob: -12.375029563903809
    4. ',
' → logprob: -14.375029563903809
    5. 'j' → logprob: -14.875029563903809
    6. '‌,' → logprob: -16.375030517578125
    7. '<|end|>' → logprob: -17.125030517578125
    8. '_,' → logprob: -17.625030517578125
    9. ',i' → logprob: -17.625030517578125
    10. '<|end|>' → logprob: -18.125030517578125

Token 308: ' i' (ID: 575)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' → logprob: -0.1876370757818222
    2. ' io' → logprob: -1.8126370906829834
    3. ' i' → logprob: -5.562636852264404
    4. '	io' → logprob: -7.312636852264404
    5. ' ioh' → logprob: -7.437636852264404
    6. 'oi' → logprob: -7.562636852264404
    7. '_io' → logprob: -7.937636852264404
    8. '/io' → logprob: -8.187637329101562
    9. ' ioe' → logprob: -8.187637329101562
    10. 'i' → logprob: -8.937637329101562

Token 309: 'oi' (ID: 3412)
  Prédit: 'oi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oi' → logprob: -0.016191085800528526
    2. 'o' → logprob: -4.141191005706787
    3. ' oi' → logprob: -9.141191482543945
    4. '_count' → logprob: -12.016191482543945
    5. 'OI' → logprob: -12.391191482543945
    6. ' o' → logprob: -12.391191482543945
    7. '
' → logprob: -12.641191482543945
    8. 'i' → logprob: -12.641191482543945
    9. ' =' → logprob: -12.766191482543945
    10. '   ' → logprob: -13.016191482543945

Token 310: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9027791495318525e-05
    2. ' =' → logprob: -12.125019073486328
    3. '=' → logprob: -12.375019073486328
    4. '_' → logprob: -12.875019073486328
    5. 'count' → logprob: -12.875019073486328
    6. 'o' → logprob: -13.000019073486328
    7. ' _' → logprob: -14.375019073486328
    8. '_counts' → logprob: -14.375019073486328
    9. '=_' → logprob: -15.125019073486328
    10. 'ount' → logprob: -16.000019073486328

Token 311: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011047814972698689
    2. '=' → logprob: -4.511047840118408
    3. '            ' → logprob: -17.38604736328125
    4. '           ' → logprob: -18.26104736328125
    5. '	' → logprob: -18.51104736328125
    6. '=line' → logprob: -18.88604736328125
    7. '        ' → logprob: -19.01104736328125
    8. ' ' → logprob: -19.01104736328125
    9. '    ' → logprob: -19.26104736328125
    10. ' =
' → logprob: -19.38604736328125

Token 312: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889363914728165
    2. ' self' → logprob: -2.5788936614990234
    3. '           ' → logprob: -12.703893661499023
    4. '(self' → logprob: -14.828893661499023
    5. '               ' → logprob: -15.703893661499023
    6. '=self' → logprob: -15.828893661499023
    7. '	self' → logprob: -16.328893661499023
    8. 'Self' → logprob: -17.578893661499023
    9. '[self' → logprob: -17.703893661499023
    10. '                   ' → logprob: -17.953893661499023

Token 313: '.matcher' (ID: 83801)
  Prédit: '.matcher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.matcher' → logprob: -7.3458322731312364e-06
    2. 'matcher' → logprob: -12.125007629394531
    3. '.Matcher' → logprob: -13.750007629394531
    4. '.match' → logprob: -14.750007629394531
    5. '.' → logprob: -15.125007629394531
    6. '.processor' → logprob: -16.37500762939453
    7. '.s' → logprob: -17.50000762939453
    8. '.matches' → logprob: -18.75000762939453
    9. '.m' → logprob: -18.75000762939453
    10. '.pattern' → logprob: -19.00000762939453

Token 314: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -3.3451433409936726e-05
    2. '.' → logprob: -10.375033378601074
    3. 'count' → logprob: -13.375033378601074
    4. ' .' → logprob: -14.375033378601074
    5. '	count' → logprob: -18.12503433227539
    6. ').' → logprob: -18.62503433227539
    7. ' count' → logprob: -18.87503433227539
    8. '.process' → logprob: -19.12503433227539
    9. '.
' → logprob: -19.25003433227539
    10. '   ' → logprob: -19.25003433227539

Token 315: '_patterns' (ID: 161400)
  Prédit: '_patterns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_patterns' → logprob: -9.088346359931165e-07
    2. 'patterns' → logprob: -14.875000953674316
    3. '_' → logprob: -15.625000953674316
    4. '_pattern' → logprob: -16.5
    5. '```' → logprob: -17.0
    6. '_pat' → logprob: -17.25
    7. '(line' → logprob: -17.75
    8. '_p' → logprob: -18.125
    9. ' patterns' → logprob: -18.5
    10. '
' → logprob: -19.25

Token 316: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.9266199160483666e-05
    2. '(' → logprob: -10.875019073486328
    3. '(
' → logprob: -15.500019073486328
    4. '(l' → logprob: -18.750019073486328
    5. '[line' → logprob: -18.875019073486328
    6. ' (' → logprob: -19.250019073486328
    7. '=line' → logprob: -19.250019073486328
    8. '(s' → logprob: -19.375019073486328
    9. '(li' → logprob: -19.500019073486328
    10. '(lines' → logprob: -19.625019073486328

Token 317: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24132922291755676
    2. ')
' → logprob: -1.7413291931152344
    3. '           ' → logprob: -3.2413291931152344
    4. ')
' → logprob: -11.741329193115234
    5. '               ' → logprob: -11.866329193115234
    6. ')

' → logprob: -13.866329193115234
    7. '       ' → logprob: -14.366329193115234
    8. ' )' → logprob: -14.991329193115234
    9. ' )
' → logprob: -15.116329193115234
    10. '          ' → logprob: -15.491329193115234

Token 318: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.480199954239652e-05
    2. 'results' → logprob: -10.000064849853516
    3. ' results' → logprob: -10.875064849853516
    4. '       ' → logprob: -15.750064849853516
    5. '   ' → logprob: -16.375064849853516
    6. '
' → logprob: -16.375064849853516
    7. '```' → logprob: -16.875064849853516
    8. '(results' → logprob: -17.125064849853516
    9. '		' → logprob: -17.625064849853516
    10. '               ' → logprob: -17.625064849853516

Token 319: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.3519946336746216
    2. ' results' → logprob: -1.6019946336746216
    3. '           ' → logprob: -2.351994514465332
    4. '       ' → logprob: -11.226994514465332
    5. '	results' → logprob: -11.226994514465332
    6. '
' → logprob: -11.726994514465332
    7. '   ' → logprob: -12.476994514465332
    8. '_results' → logprob: -13.726994514465332
    9. 'result' → logprob: -13.851994514465332
    10. '.results' → logprob: -14.101994514465332

Token 320: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00012403888104017824
    2. '.' → logprob: -9.000123977661133
    3. '.ap' → logprob: -15.375123977661133
    4. '.app' → logprob: -15.750123977661133
    5. '.extend' → logprob: -16.375123977661133
    6. '.Append' → logprob: -17.125123977661133
    7. 'append' → logprob: -17.500123977661133
    8. '.push' → logprob: -18.125123977661133
    9. '.add' → logprob: -18.375123977661133
    10. ').' → logprob: -18.500123977661133

Token 321: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.005318901035934687
    2. '(' → logprob: -5.255319118499756
    3. '(j' → logprob: -9.505318641662598
    4. ' (' → logprob: -11.755318641662598
    5. ' ((' → logprob: -13.130318641662598
    6. '(
' → logprob: -14.130318641662598
    7. ' ' → logprob: -17.005319595336914
    8. '   ' → logprob: -18.255319595336914
    9. '(tuple' → logprob: -19.130319595336914
    10. '  ' → logprob: -19.380319595336914

Token 322: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.935296834039036e-06
    2. ' joi' → logprob: -12.87500286102295
    3. 'jo' → logprob: -15.62500286102295
    4. '   ' → logprob: -16.000003814697266
    5. '	j' → logprob: -18.000003814697266
    6. '       ' → logprob: -18.250003814697266
    7. 'jai' → logprob: -19.125003814697266
    8. '$j' → logprob: -19.125003814697266
    9. '```' → logprob: -19.250003814697266
    10. '    ' → logprob: -19.500003814697266

Token 323: 'oi' (ID: 3412)
  Prédit: 'oi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oi' → logprob: -0.0008868030272424221
    2. 'o' → logprob: -7.875886917114258
    3. 'i' → logprob: -8.000886917114258
    4. '_count' → logprob: -9.875886917114258
    5. '   ' → logprob: -10.625886917114258
    6. 'oint' → logprob: -11.000886917114258
    7. 'j' → logprob: -11.000886917114258
    8. ' oi' → logprob: -11.125886917114258
    9. ',' → logprob: -11.625886917114258
    10. 'oin' → logprob: -11.875886917114258

Token 324: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -8.65707261255011e-06
    2. ',' → logprob: -12.375008583068848
    3. ' _' → logprob: -13.375008583068848
    4. ',_' → logprob: -14.250008583068848
    5. '_' → logprob: -14.500008583068848
    6. '_,' → logprob: -14.750008583068848
    7. '_counts' → logprob: -14.875008583068848
    8. ')_' → logprob: -15.375008583068848
    9. 'count' → logprob: -16.000009536743164
    10. '_c' → logprob: -16.250009536743164

Token 325: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8074162653647363e-05
    2. ',
' → logprob: -11.250018119812012
    3. ',i' → logprob: -12.625018119812012
    4. ' ,' → logprob: -13.375018119812012
    5. ',

' → logprob: -17.000017166137695
    6. '<|end|>' → logprob: -17.250017166137695
    7. '‌,' → logprob: -18.000017166137695
    8. ',int' → logprob: -18.000017166137695
    9. '
' → logprob: -18.125017166137695
    10. ',user' → logprob: -18.875017166137695

Token 326: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6938491463661194
    2. 'io' → logprob: -0.6938491463661194
    3. ' io' → logprob: -7.318849086761475
    4. 'i' → logprob: -11.193849563598633
    5. 'oi' → logprob: -12.443849563598633
    6. ' ' → logprob: -12.568849563598633
    7. 'iox' → logprob: -12.818849563598633
    8. '	io' → logprob: -13.068849563598633
    9. ' ' → logprob: -13.193849563598633
    10. 'IO' → logprob: -13.318849563598633

Token 327: 'oi' (ID: 3412)
  Prédit: 'oi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oi' → logprob: -0.14290612936019897
    2. 'o' → logprob: -2.0179061889648438
    3. 'io' → logprob: -9.142906188964844
    4. 'i' → logprob: -9.517906188964844
    5. '
' → logprob: -11.517906188964844
    6. ')' → logprob: -12.267906188964844
    7. '   ' → logprob: -12.267906188964844
    8. 'oc' → logprob: -12.642906188964844
    9. '_count' → logprob: -13.142906188964844
    10. ')
' → logprob: -13.142906188964844

Token 328: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.030176807194948196
    2. 'o' → logprob: -3.530176877975464
    3. 'io' → logprob: -8.780177116394043
    4. 'oi' → logprob: -9.280177116394043
    5. 'i' → logprob: -9.405177116394043
    6. 'count' → logprob: -10.405177116394043
    7. 'os' → logprob: -11.030177116394043
    8. ')' → logprob: -11.655177116394043
    9. 'O' → logprob: -11.905177116394043
    10. 'on' → logprob: -12.405177116394043

Token 329: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.5767842531204224
    2. '))' → logprob: -0.8267842531204224
    3. ')' → logprob: -7.201784133911133
    4. ')
' → logprob: -9.701784133911133
    5. '       ' → logprob: -10.326784133911133
    6. '))

' → logprob: -12.826784133911133
    7. '))
' → logprob: -13.201784133911133
    8. '   ' → logprob: -14.826784133911133
    9. ' ))
' → logprob: -16.076784133911133
    10. '           ' → logprob: -16.076784133911133

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008607231429778039
    2. 'return' → logprob: -7.375860691070557
    3. '
' → logprob: -8.875861167907715
    4. ' return' → logprob: -9.500861167907715
    5. '   ' → logprob: -11.625861167907715
    6. '	' → logprob: -12.375861167907715
    7. '	return' → logprob: -12.875861167907715
    8. '        
' → logprob: -13.125861167907715
    9. '      ' → logprob: -14.500861167907715
    10. '```' → logprob: -15.250861167907715

Token 331: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5781158804893494
    2. 'return' (adapté à ' return') → logprob: -0.8281158804893494
    3. ' return' → logprob: -6.828115940093994
    4. '   ' → logprob: -6.828115940093994
    5. '	return' → logprob: -12.078115463256836
    6. ' ' → logprob: -13.953115463256836
    7. '
' → logprob: -14.703115463256836
    8. '```' → logprob: -14.953115463256836
    9. '      ' → logprob: -15.328115463256836
    10. '           ' → logprob: -15.453115463256836

Token 332: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.47407716512680054
    2. 'results' → logprob: -0.9740771651268005
    3. '	results' → logprob: -15.599077224731445
    4. 'result' → logprob: -17.849077224731445
    5. '(results' → logprob: -18.099077224731445
    6. 'Results' → logprob: -19.599077224731445
    7. '.results' → logprob: -19.599077224731445
    8. '_results' → logprob: -20.849077224731445
    9. ' ' → logprob: -21.474077224731445
    10. ' resultados' → logprob: -21.974077224731445

Token 333: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007702016155235469
    2. '
' → logprob: -7.875770092010498
    3. '@' → logprob: -9.000770568847656
    4. '    
' → logprob: -9.000770568847656
    5. '```' → logprob: -9.375770568847656
    6. 'def' → logprob: -10.000770568847656
    7. 'staticmethod' → logprob: -12.375770568847656
    8. 'from' → logprob: -12.625770568847656
    9. 'import' → logprob: -13.000770568847656
    10. '        
' → logprob: -13.875770568847656

Token 334: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04090673476457596
    2. '@' → logprob: -3.4159066677093506
    3. 'def' → logprob: -5.16590690612793
    4. '
' → logprob: -6.79090690612793
    5. '```' → logprob: -9.04090690612793
    6. ' def' → logprob: -9.41590690612793
    7. '    
' → logprob: -9.41590690612793
    8. 'staticmethod' → logprob: -10.04090690612793
    9. ' @' → logprob: -10.16590690612793
    10. 'import' → logprob: -11.29090690612793

Token 335: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.07987969368696213
    2. 'def' → logprob: -2.5798797607421875
    3. '   ' → logprob: -6.9548797607421875
    4. ' def' → logprob: -10.954879760742188
    5. ' @' → logprob: -11.954879760742188
    6. '
' → logprob: -12.329879760742188
    7. 'staticmethod' → logprob: -12.954879760742188
    8. 'from' → logprob: -13.079879760742188
    9. '```' → logprob: -13.204879760742188
    10. '    
' → logprob: -15.079879760742188

Token 336: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -5.512236498361744e-07
    2. 'classmethod' → logprob: -15.000000953674316
    3. 'static' → logprob: -16.0
    4. 'property' → logprob: -22.625
    5. '@' → logprob: -25.0
    6. ' static' → logprob: -25.125
    7. '_static' → logprob: -25.375
    8. 'Static' → logprob: -25.75
    9. 'st' → logprob: -26.0
    10. 'dat' → logprob: -26.375

Token 337: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6864389181137085
    2. '   ' → logprob: -1.1864389181137085
    3. '
' → logprob: -1.9364389181137085
    4. ' def' → logprob: -3.061439037322998
    5. '    
' → logprob: -8.68643856048584
    6. '	def' → logprob: -9.81143856048584
    7. ' ' → logprob: -10.68643856048584
    8. '  
' → logprob: -10.93643856048584
    9. '  ' → logprob: -11.43643856048584
    10. ' 
' → logprob: -12.18643856048584

Token 338: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004268696531653404
    2. '   ' → logprob: -6.004268646240234
    3. ' def' → logprob: -6.754268646240234
    4. '
' → logprob: -7.379268646240234
    5. '	def' → logprob: -13.754268646240234
    6. '    
' → logprob: -15.504268646240234
    7. ' ' → logprob: -16.129268646240234
    8. '  ' → logprob: -16.129268646240234
    9. '```' → logprob: -17.879268646240234
    10. '  
' → logprob: -18.004268646240234

Token 339: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.935296834039036e-06
    2. ' def' → logprob: -12.75000286102295
    3. '
' → logprob: -19.000003814697266
    4. '   ' → logprob: -19.250003814697266
    5. '	def' → logprob: -20.125003814697266
    6. '_def' → logprob: -21.375003814697266
    7. ' ' → logprob: -21.875003814697266
    8. '    
' → logprob: -22.125003814697266
    9. 'from' → logprob: -22.250003814697266
    10. '```' → logprob: -23.375003814697266

Token 340: ' _' (ID: 1175)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.00010568885772954673
    2. '_lim' → logprob: -10.000105857849121
    3. '_limit' → logprob: -10.250105857849121
    4. 'def' → logprob: -11.125105857849121
    5. '_' → logprob: -12.250105857849121
    6. ' _' → logprob: -13.875105857849121
    7. '_limits' → logprob: -14.125105857849121
    8. '_def' → logprob: -14.375105857849121
    9. 'limited' → logprob: -14.500105857849121
    10. '_filtered' → logprob: -14.625105857849121

Token 341: 'limited' (ID: 23070)
  Prédit: 'limited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limited' → logprob: -1.6240566083070007e-06
    2. ' limited' → logprob: -13.500001907348633
    3. 'imited' → logprob: -16.375001907348633
    4. 'lim' → logprob: -17.875001907348633
    5. 'limit' → logprob: -17.875001907348633
    6. 'Limited' → logprob: -18.750001907348633
    7. 'iter' → logprob: -19.750001907348633
    8. '_l' → logprob: -19.875001907348633
    9. 'filtered' → logprob: -19.875001907348633
    10. 'bounded' → logprob: -20.000001907348633

Token 342: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0018953178077936172
    2. 'def' → logprob: -6.376895427703857
    3. 'datasets' → logprob: -8.6268949508667
    4. '_def' → logprob: -12.6268949508667
    5. '   ' → logprob: -12.7518949508667
    6. ' def' → logprob: -13.2518949508667
    7. '_data' → logprob: -13.5018949508667
    8. 'atasets' → logprob: -13.6268949508667
    9. ' datasets' → logprob: -14.0018949508667
    10. '_dataset' → logprob: -14.5018949508667

Token 343: 'atasets' (ID: 105003)
  Prédit: 'atasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atasets' → logprob: -2.558399319241289e-05
    2. 'ataset' → logprob: -11.125025749206543
    3. 'atas' → logprob: -12.000025749206543
    4. 'datasets' → logprob: -12.750025749206543
    5. 'ata' → logprob: -14.000025749206543
    6. 'at' → logprob: -14.625025749206543
    7. 'sets' → logprob: -14.750025749206543
    8. 'ats' → logprob: -16.375024795532227
    9. ' datasets' → logprob: -17.000024795532227
    10. 's' → logprob: -18.625024795532227

Token 344: '(source' (ID: 23614)
  Prédit: '(source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(source' → logprob: -2.47495681833243e-05
    2. '(s' → logprob: -11.375024795532227
    3. '(strings' → logprob: -11.875024795532227
    4. '(iter' → logprob: -13.500024795532227
    5. '(cls' → logprob: -13.500024795532227
    6. 'source' → logprob: -13.875024795532227
    7. '(' → logprob: -14.000024795532227
    8. '(src' → logprob: -14.000024795532227
    9. '(data' → logprob: -15.500024795532227
    10. '(string' → logprob: -15.750024795532227

Token 345: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014561474381480366
    2. ':' → logprob: -8.87514591217041
    3. ' ,' → logprob: -12.50014591217041
    4. '   ' → logprob: -13.25014591217041
    5. '(source' → logprob: -16.125144958496094
    6. '       ' → logprob: -16.125144958496094
    7. 'source' → logprob: -17.000144958496094
    8. ' :' → logprob: -17.125144958496094
    9. ')' → logprob: -17.625144958496094
    10. '[source' → logprob: -18.750144958496094

Token 346: ' String' (ID: 1189)
  Prédit: 'String'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -0.052180755883455276
    2. ' String' → logprob: -3.302180767059326
    3. 'source' → logprob: -5.052180767059326
    4. ',' → logprob: -5.802180767059326
    5. 'Source' → logprob: -5.802180767059326
    6. ' source' → logprob: -7.052180767059326
    7. ')' → logprob: -8.177180290222168
    8. '   ' → logprob: -8.927180290222168
    9. ',String' → logprob: -9.302180290222168
    10. 'Iterable' → logprob: -9.677180290222168

Token 347: 'Source' (ID: 4823)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020818933262489736
    2. 'Source' → logprob: -9.250207901000977
    3. '   ' → logprob: -9.875207901000977
    4. 'source' → logprob: -10.250207901000977
    5. ' ,' → logprob: -11.625207901000977
    6. '],' → logprob: -12.625207901000977
    7. '       ' → logprob: -12.875207901000977
    8. '[],' → logprob: -12.875207901000977
    9. ' ' → logprob: -13.500207901000977
    10. ')' → logprob: -13.500207901000977

Token 348: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.674858301877975e-05
    2. ' ,' → logprob: -9.250096321105957
    3. '   ' → logprob: -14.750096321105957
    4. '‌,' → logprob: -16.500097274780273
    5. ')' → logprob: -17.375097274780273
    6. ',int' → logprob: -17.625097274780273
    7. ',n' → logprob: -17.875097274780273
    8. '`,' → logprob: -18.125097274780273
    9. '```' → logprob: -18.250097274780273
    10. ',
' → logprob: -18.375097274780273

Token 349: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.04858805239200592
    2. ' limit' → logprob: -3.0485880374908447
    3. '   ' → logprob: -15.048587799072266
    4. 'lim' → logprob: -15.298587799072266
    5. '    ' → logprob: -16.173587799072266
    6. '(limit' → logprob: -16.673587799072266
    7. '.limit' → logprob: -18.548587799072266
    8. '5' → logprob: -18.673587799072266
    9. '       ' → logprob: -18.673587799072266
    10. ' ' → logprob: -18.798587799072266

Token 350: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6945933699607849
    2. '=' → logprob: -0.6945933699607849
    3. '):' → logprob: -6.81959342956543
    4. ':int' → logprob: -8.44459342956543
    5. ')' → logprob: -9.06959342956543
    6. '=int' → logprob: -11.19459342956543
    7. ' =' → logprob: -12.94459342956543
    8. ')=' → logprob: -13.06959342956543
    9. ' :' → logprob: -13.56959342956543
    10. '):
' → logprob: -13.69459342956543

Token 351: ' int' (ID: 677)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0009242036612704396
    2. ' ' → logprob: -7.000924110412598
    3. ')' → logprob: -11.500924110412598
    4. '   ' → logprob: -13.125924110412598
    5. 'int' → logprob: -15.625924110412598
    6. '):
' → logprob: -15.625924110412598
    7. '=' → logprob: -16.250925064086914
    8. '  ' → logprob: -16.375925064086914
    9. '    ' → logprob: -17.375925064086914
    10. '```' → logprob: -17.500925064086914

Token 352: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007299474673345685
    2. '):' → logprob: -7.250730037689209
    3. ' )' → logprob: -11.25072956085205
    4. '):
' → logprob: -12.12572956085205
    5. '   ' → logprob: -13.87572956085205
    6. ')->' → logprob: -15.75072956085205
    7. ':' → logprob: -15.87572956085205
    8. '=' → logprob: -15.87572956085205
    9. ' ):' → logprob: -16.625730514526367
    10. ' ' → logprob: -17.000730514526367

Token 353: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.47075334191322327
    2. '->' → logprob: -1.5957533121109009
    3. ':' → logprob: -1.9707533121109009
    4. ')' → logprob: -3.4707534313201904
    5. '   ' → logprob: -6.720753192901611
    6. ':
' → logprob: -7.720753192901611
    7. ')->' → logprob: -8.59575366973877
    8. '()' → logprob: -8.84575366973877
    9. '       ' → logprob: -9.22075366973877
    10. '(' → logprob: -10.34575366973877

Token 354: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.005466047674417496
    2. 'List' → logprob: -6.130465984344482
    3. ' Iterator' → logprob: -6.255465984344482
    4. 'list' → logprob: -6.755465984344482
    5. 'iter' → logprob: -9.00546646118164
    6. 'iterator' → logprob: -11.00546646118164
    7. '_iterator' → logprob: -11.13046646118164
    8. ' list' → logprob: -12.00546646118164
    9. 'is' → logprob: -12.13046646118164
    10. '	Iterator' → logprob: -12.25546646118164

Token 355: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: 0.0
    2. 'str' → logprob: -17.375
    3. '[' → logprob: -17.75
    4. '[
' → logprob: -19.5
    5. ':' → logprob: -19.5
    6. ':str' → logprob: -19.5
    7. '[int' → logprob: -20.0
    8. '```' → logprob: -20.25
    9. '   ' → logprob: -21.25
    10. ' [' → logprob: -21.25

Token 356: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31358253955841064
    2. '):' → logprob: -1.3135825395584106
    3. ')' → logprob: -8.813582420349121
    4. '):
' → logprob: -9.313582420349121
    5. '   ' → logprob: -9.938582420349121
    6. ':' → logprob: -10.688582420349121
    7. ':
' → logprob: -11.938582420349121
    8. '       ' → logprob: -13.313582420349121
    9. '):

' → logprob: -14.188582420349121
    10. '():
' → logprob: -14.813582420349121

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007087402627803385
    2. 'for' → logprob: -7.87570858001709
    3. ' for' → logprob: -8.12570858001709
    4. 'count' → logprob: -11.00070858001709
    5. '   ' → logprob: -11.62570858001709
    6. 'iter' → logprob: -13.12570858001709
    7. '           ' → logprob: -14.00070858001709
    8. ' count' → logprob: -14.25070858001709
    9. '```' → logprob: -14.37570858001709
    10. 'it' → logprob: -14.50070858001709

Token 358: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2806176543235779
    2. 'count' (adapté à ' count') → logprob: -1.6556177139282227
    3. '       ' → logprob: -3.0306177139282227
    4. 'yield' → logprob: -6.280617713928223
    5. 'from' → logprob: -6.655617713928223
    6. 'import' → logprob: -7.155617713928223
    7. 'counter' → logprob: -7.780617713928223
    8. ' for' → logprob: -8.155617713928223
    9. 'it' → logprob: -8.405617713928223
    10. '_count' → logprob: -8.655617713928223

Token 359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11284956336021423
    2. '=' → logprob: -2.237849473953247
    3. ' ' → logprob: -10.862849235534668
    4. '_' → logprob: -12.737849235534668
    5. ',' → logprob: -12.987849235534668
    6. '_=' → logprob: -14.237849235534668
    7. '  ' → logprob: -14.612849235534668
    8. ' =
' → logprob: -14.862849235534668
    9. '   ' → logprob: -15.487849235534668
    10. '<|end|>' → logprob: -15.612849235534668

Token 360: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0024756586644798517
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.87747573852539
    4. '       ' → logprob: -18.75247573852539
    5. '1' → logprob: -20.62747573852539
    6. '    ' → logprob: -21.00247573852539
    7. '۰' → logprob: -21.50247573852539
    8. '  ' → logprob: -21.62747573852539
    9. '<|end|>' → logprob: -22.37747573852539
    10. ' ' → logprob: -22.50247573852539

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -20.375001907348633
    4. '   ' → logprob: -21.875001907348633
    5. '０' → logprob: -22.000001907348633
    6. '=' → logprob: -22.375001907348633
    7. '000' → logprob: -23.125001907348633
    8. '1' → logprob: -23.250001907348633
    9. '00' → logprob: -23.500001907348633
    10. '```' → logprob: -23.500001907348633

Token 362: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5890814065933228
    2. '       ' → logprob: -0.8390814065933228
    3. '        
' → logprob: -5.214081287384033
    4. ' for' → logprob: -5.464081287384033
    5. '<|end|>' → logprob: -6.464081287384033
    6. '  
' → logprob: -7.839081287384033
    7. ' 
' → logprob: -7.964081287384033
    8. 'for' → logprob: -7.964081287384033
    9. '    
' → logprob: -8.464081764221191
    10. '
' → logprob: -9.589081764221191

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0074674892239272594
    2. ' for' → logprob: -5.007467269897461
    3. 'for' → logprob: -7.632467269897461
    4. '
' → logprob: -9.007467269897461
    5. '        
' → logprob: -9.257467269897461
    6. '   ' → logprob: -10.507467269897461
    7. ' 
' → logprob: -12.507467269897461
    8. '    
' → logprob: -12.882467269897461
    9. '           ' → logprob: -12.882467269897461
    10. '<|end|>' → logprob: -12.882467269897461

Token 364: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0017226649215444922
    2. '       ' → logprob: -6.751722812652588
    3. ' for' → logprob: -7.501722812652588
    4. '   ' → logprob: -16.00172233581543
    5. '        
' → logprob: -17.25172233581543
    6. '```' → logprob: -17.87672233581543
    7. '	for' → logprob: -18.00172233581543
    8. 'try' → logprob: -18.37672233581543
    9. '           ' → logprob: -18.50172233581543
    10. 'yield' → logprob: -19.12672233581543

Token 365: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.006421663332730532
    2. 'item' → logprob: -5.5064215660095215
    3. ' line' → logprob: -6.2564215660095215
    4. 'data' → logprob: -8.25642204284668
    5. 's' → logprob: -9.25642204284668
    6. 'dataset' → logprob: -10.25642204284668
    7. 'string' → logprob: -11.50642204284668
    8. ' item' → logprob: -11.50642204284668
    9. 'entry' → logprob: -12.13142204284668
    10. ' s' → logprob: -13.50642204284668

Token 366: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00018006093159783632
    2. 'in' → logprob: -8.6251802444458
    3. '	in' → logprob: -15.2501802444458
    4. '        ' → logprob: -16.750179290771484
    5. ',' → logprob: -16.750179290771484
    6. '       ' → logprob: -17.000179290771484
    7. 'import' → logprob: -17.125179290771484
    8. ' ' → logprob: -17.375179290771484
    9. '           ' → logprob: -17.375179290771484
    10. '   ' → logprob: -17.875179290771484

Token 367: ' source' (ID: 4256)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'source' → logprob: -0.04858794063329697
    2. ' source' → logprob: -3.0485880374908447
    3. '	source' → logprob: -15.048587799072266
    4. '(source' → logprob: -15.673587799072266
    5. 'iter' → logprob: -17.298587799072266
    6. '   ' → logprob: -18.173587799072266
    7. '_source' → logprob: -18.173587799072266
    8. '[source' → logprob: -18.673587799072266
    9. 'src' → logprob: -18.798587799072266
    10. ' ' → logprob: -19.173587799072266

Token 368: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1800851821899414
    2. ':
' → logprob: -1.8050851821899414
    3. '       ' → logprob: -8.930085182189941
    4. '):
' → logprob: -9.180085182189941
    5. '           ' → logprob: -9.930085182189941
    6. '():
' → logprob: -11.430085182189941
    7. '):' → logprob: -11.555085182189941
    8. '<|end|>' → logprob: -11.680085182189941
    9. '   ' → logprob: -12.180085182189941
    10. ' :' → logprob: -12.930085182189941

Token 369: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.841743303695694e-05
    2. ' if' → logprob: -9.87509822845459
    3. '            
' → logprob: -10.50009822845459
    4. 'if' → logprob: -11.75009822845459
    5. '```' → logprob: -12.50009822845459
    6. '            ' → logprob: -12.75009822845459
    7. '          ' → logprob: -13.12509822845459
    8. '       ' → logprob: -14.50009822845459
    9. '
' → logprob: -14.62509822845459
    10. '<|end|>' → logprob: -14.75009822845459

Token 370: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13685137033462524
    2. ' if' → logprob: -2.1368513107299805
    3. 'if' (adapté à ' if') → logprob: -4.6368513107299805
    4. '               ' → logprob: -8.88685131072998
    5. '```' → logprob: -10.76185131072998
    6. 'yield' → logprob: -11.76185131072998
    7. ' yield' → logprob: -12.01185131072998
    8. '   ' → logprob: -12.38685131072998
    9. '            ' → logprob: -12.88685131072998
    10. '       ' → logprob: -12.88685131072998

Token 371: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.061967797577381134
    2. ' count' → logprob: -2.8119678497314453
    3. '	count' → logprob: -15.561967849731445
    4. '(count' → logprob: -19.436967849731445
    5. '=count' → logprob: -19.686967849731445
    6. '   ' → logprob: -19.936967849731445
    7. 'not' → logprob: -19.936967849731445
    8. '$count' → logprob: -20.311967849731445
    9. '           ' → logprob: -20.436967849731445
    10. ' ' → logprob: -20.436967849731445

Token 372: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5766811370849609
    2. ' >=' → logprob: -0.8266811370849609
    3. '==' → logprob: -7.701681137084961
    4. ' ==' → logprob: -8.201681137084961
    5. '   ' → logprob: -11.951681137084961
    6. '    ' → logprob: -12.326681137084961
    7. ' ' → logprob: -12.951681137084961
    8. ' <' → logprob: -14.826681137084961
    9. '≥' → logprob: -15.076681137084961
    10. ')>=' → logprob: -15.326681137084961

Token 373: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.5759403109550476
    2. ' limit' → logprob: -0.8259403109550476
    3. '5' → logprob: -14.575940132141113
    4. '(limit' → logprob: -15.200940132141113
    5. 'lim' → logprob: -16.70094108581543
    6. '    ' → logprob: -17.45094108581543
    7. '.limit' → logprob: -17.70094108581543
    8. '_limit' → logprob: -17.70094108581543
    9. '   ' → logprob: -18.07594108581543
    10. '```' → logprob: -18.32594108581543

Token 374: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.577629566192627
    2. ':
' → logprob: -0.827629566192627
    3. '               ' → logprob: -6.952629566192627
    4. '           ' → logprob: -7.452629566192627
    5. ':return' → logprob: -8.827629089355469
    6. ':
' → logprob: -13.077629089355469
    7. ' :
' → logprob: -14.327629089355469
    8. '):
' → logprob: -14.327629089355469
    9. ':

' → logprob: -14.452629089355469
    10. ' :' → logprob: -14.702629089355469

Token 375: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010748496279120445
    2. 'break' → logprob: -7.00107479095459
    3. ' break' → logprob: -9.12607479095459
    4. '           ' → logprob: -9.87607479095459
    5. 'return' → logprob: -13.12607479095459
    6. '                
' → logprob: -15.00107479095459
    7. ' return' → logprob: -15.62607479095459
    8. '```' → logprob: -15.62607479095459
    9. '              ' → logprob: -16.001075744628906
    10. '_break' → logprob: -16.376075744628906

Token 376: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.05073785036802292
    2. '               ' → logprob: -3.0507378578186035
    3. ' break' → logprob: -6.3007378578186035
    4. '           ' → logprob: -8.550737380981445
    5. 'return' → logprob: -9.050737380981445
    6. '	break' → logprob: -13.300737380981445
    7. '_break' → logprob: -15.050737380981445
    8. ' return' → logprob: -15.425737380981445
    9. '                   ' → logprob: -16.425737380981445
    10. '```' → logprob: -16.925737380981445

Token 377: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006326317321509123
    2. '
' → logprob: -5.131326198577881
    3. '            
' → logprob: -8.131326675415039
    4. '               ' → logprob: -9.506326675415039
    5. '                
' → logprob: -12.256326675415039
    6. '    
' → logprob: -12.381326675415039
    7. '  
' → logprob: -12.756326675415039
    8. '\n' → logprob: -12.881326675415039
    9. '```' → logprob: -13.131326675415039
    10. '
' → logprob: -13.506326675415039

Token 378: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013619766104966402
    2. ' yield' → logprob: -10.000136375427246
    3. 'yield' → logprob: -10.375136375427246
    4. '               ' → logprob: -10.625136375427246
    5. '            
' → logprob: -11.000136375427246
    6. 'count' → logprob: -11.875136375427246
    7. '
' → logprob: -12.125136375427246
    8. '```' → logprob: -13.000136375427246
    9. '       ' → logprob: -13.750136375427246
    10. '          ' → logprob: -14.125136375427246

Token 379: ' yield' (ID: 14376)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7830060124397278
    2. 'yield' (adapté à ' yield') → logprob: -1.033005952835083
    3. 'count' → logprob: -2.158005952835083
    4. ' yield' → logprob: -2.658005952835083
    5. ' count' → logprob: -6.783006191253662
    6. '               ' → logprob: -8.783005714416504
    7. '
' → logprob: -9.783005714416504
    8. '            
' → logprob: -10.908005714416504
    9. '	yield' → logprob: -11.408005714416504
    10. '```' → logprob: -12.283005714416504

Token 380: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.061967797577381134
    2. 'line' → logprob: -2.8119678497314453
    3. '(line' → logprob: -15.936967849731445
    4. '	line' → logprob: -16.811967849731445
    5. '=line' → logprob: -17.936967849731445
    6. '#line' → logprob: -18.936967849731445
    7. '[line' → logprob: -19.061967849731445
    8. ' ' → logprob: -19.561967849731445
    9. ' ' → logprob: -21.061967849731445
    10. 'space' → logprob: -22.311967849731445

Token 381: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.6047699318733066e-05
    2. '<|end|>' → logprob: -11.500016212463379
    3. '               ' → logprob: -13.500016212463379
    4. '		' → logprob: -13.500016212463379
    5. '            
' → logprob: -14.250016212463379
    6. ',' → logprob: -14.500016212463379
    7. '       ' → logprob: -14.500016212463379
    8. '<|end|>' → logprob: -14.625016212463379
    9. '	       ' → logprob: -14.875016212463379
    10. '
' → logprob: -15.250016212463379

Token 382: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.869017852295656e-06
    2. '            
' → logprob: -13.000006675720215
    3. '		' → logprob: -13.375006675720215
    4. '               ' → logprob: -13.875006675720215
    5. '<|end|>' → logprob: -14.125006675720215
    6. '       ' → logprob: -14.500006675720215
    7. '```' → logprob: -15.625006675720215
    8. '	       ' → logprob: -15.750006675720215
    9. '
' → logprob: -16.12500762939453
    10. '          ' → logprob: -16.62500762939453

Token 383: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0015784210991114378
    2. '           ' → logprob: -6.501578330993652
    3. ' count' → logprob: -9.501578330993652
    4. '	count' → logprob: -14.001578330993652
    5. '   ' → logprob: -15.001578330993652
    6. '       ' → logprob: -15.626578330993652
    7. '[count' → logprob: -17.12657928466797
    8. '               ' → logprob: -17.37657928466797
    9. '.count' → logprob: -18.12657928466797
    10. ' ' → logprob: -18.50157928466797

Token 384: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06196824833750725
    2. ' +=' → logprob: -2.8119683265686035
    3. '+' → logprob: -15.311967849731445
    4. ']+=' → logprob: -15.436967849731445
    5. '=' → logprob: -15.561967849731445
    6. '   ' → logprob: -17.436967849731445
    7. '    ' → logprob: -18.311967849731445
    8. '+="' → logprob: -18.561967849731445
    9. '```' → logprob: -19.186967849731445
    10. '+='' → logprob: -19.186967849731445

Token 385: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -23.12500762939453
    4. '   ' → logprob: -23.50000762939453
    5. '１' → logprob: -23.62500762939453
    6. '۱' → logprob: -25.12500762939453
    7. '0' → logprob: -26.12500762939453
    8. ' ' → logprob: -26.12500762939453
    9. '`' → logprob: -26.25000762939453
    10. '
' → logprob: -26.50000762939453

Token 386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '```' → logprob: -22.5
    4. '   ' → logprob: -24.25
    5. '１' → logprob: -24.375
    6. '
' → logprob: -24.625
    7. '۱' → logprob: -25.125
    8. '0' → logprob: -26.375
    9. '१' → logprob: -27.0
    10. '`' → logprob: -27.3125

Token 387: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 388: 'class' (ID: 1444)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019381757825613022
    2. 'def' → logprob: -4.644381523132324
    3. '```' → logprob: -5.144381523132324
    4. '#' → logprob: -5.644381523132324
    5. ' if' → logprob: -9.519381523132324
    6. '<|end|>' → logprob: -9.644381523132324
    7. 'from' → logprob: -10.144381523132324
    8. 'import' → logprob: -10.769381523132324
    9. 'for' → logprob: -12.769381523132324
    10. '
' → logprob: -13.769381523132324

Token 389: ' Output' (ID: 18315)
  Prédit: 'Test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Test' → logprob: -0.6666228771209717
    2. ' Test' → logprob: -2.0416228771209717
    3. 'Main' → logprob: -2.7916228771209717
    4. 'Solution' → logprob: -2.7916228771209717
    5. 'Processor' → logprob: -3.1666228771209717
    6. 'Runner' → logprob: -3.2916228771209717
    7. ' Solution' → logprob: -3.2916228771209717
    8. ' Main' → logprob: -4.291623115539551
    9. 'JO' → logprob: -4.541623115539551
    10. ' Runner' → logprob: -4.666623115539551

Token 390: 'Renderer' (ID: 16687)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.29719892144203186
    2. 'ter' → logprob: -2.172199010848999
    3. 'Handler' → logprob: -2.172199010848999
    4. 'Formatter' → logprob: -4.29719877243042
    5. ':
' → logprob: -5.29719877243042
    6. ':' → logprob: -5.42219877243042
    7. 'Manager' → logprob: -6.04719877243042
    8. 'Helper' → logprob: -6.67219877243042
    9. 'Generator' → logprob: -6.92219877243042
    10. 'er' → logprob: -7.79719877243042

Token 391: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10023157298564911
    2. ':
' → logprob: -2.350231647491455
    3. ' :' → logprob: -12.350231170654297
    4. ':

' → logprob: -12.725231170654297
    5. '):
' → logprob: -12.850231170654297
    6. '   ' → logprob: -13.225231170654297
    7. '(object' → logprob: -13.225231170654297
    8. ' :
' → logprob: -13.350231170654297
    9. '):' → logprob: -13.350231170654297
    10. '<|end|>' → logprob: -13.475231170654297

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004399671161081642
    2. ' def' → logprob: -7.7504401206970215
    3. 'def' → logprob: -11.625439643859863
    4. '   ' → logprob: -15.750439643859863
    5. ',' → logprob: -17.00044059753418
    6. ':' → logprob: -17.12544059753418
    7. ' class' → logprob: -17.12544059753418
    8. ')' → logprob: -17.25044059753418
    9. '```' → logprob: -17.75044059753418
    10. 'class' → logprob: -17.87544059753418

Token 393: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.007914643734693527
    2. '@' → logprob: -5.0079145431518555
    3. ' def' → logprob: -6.7579145431518555
    4. '   ' → logprob: -10.257914543151855
    5. ' @' → logprob: -13.257914543151855
    6. '	def' → logprob: -19.257915496826172
    7. 'staticmethod' → logprob: -19.757915496826172
    8. ' ' → logprob: -21.257915496826172
    9. '
' → logprob: -22.257915496826172
    10. '@dat' → logprob: -22.257915496826172

Token 394: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6365352869033813
    2. 'def' → logprob: -0.7615352869033813
    3. 'staticmethod' → logprob: -6.011535167694092
    4. ' __' → logprob: -7.261535167694092
    5. 'render' → logprob: -8.76153564453125
    6. '__' → logprob: -9.01153564453125
    7. 'process' → logprob: -9.13653564453125
    8. 'format' → logprob: -9.51153564453125
    9. 'static' → logprob: -10.01153564453125
    10. 'init' → logprob: -10.01153564453125

Token 395: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.718606891809031e-05
    2. 'iter' → logprob: -10.000066757202148
    3. 'call' → logprob: -10.750066757202148
    4. 'staticmethod' → logprob: -15.125066757202148
    5. ' init' → logprob: -17.37506675720215
    6. 'static' → logprob: -18.25006675720215
    7. 'next' → logprob: -18.62506675720215
    8. 'new' → logprob: -18.62506675720215
    9. 'def' → logprob: -19.37506675720215
    10. '```' → logprob: -19.75006675720215

Token 396: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.20326167345046997
    2. '__(' → logprob: -1.7032616138458252
    3. ' (' → logprob: -6.578261852264404
    4. '(' → logprob: -8.703261375427246
    5. '__(
' → logprob: -9.203261375427246
    6. '__' → logprob: -9.328261375427246
    7. 'self' → logprob: -9.578261375427246
    8. ')(' → logprob: -11.828261375427246
    9. ',' → logprob: -12.078261375427246
    10. '   ' → logprob: -12.703261375427246

Token 397: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.268254896393046e-05
    2. ')' → logprob: -9.750082969665527
    3. ' self' → logprob: -10.875082969665527
    4. '):
' → logprob: -12.375082969665527
    5. '):' → logprob: -15.500082969665527
    6. 'results' → logprob: -15.625082969665527
    7. '       ' → logprob: -15.750082969665527
    8. '
' → logprob: -15.750082969665527
    9. '   ' → logprob: -15.875082969665527
    10. '),' → logprob: -16.12508201599121

Token 398: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.554343366995454e-05
    2. 'self' → logprob: -9.625085830688477
    3. '):' → logprob: -11.625085830688477
    4. ',self' → logprob: -12.000085830688477
    5. ' ,' → logprob: -12.875085830688477
    6. ')' → logprob: -14.000085830688477
    7. '):
' → logprob: -15.125085830688477
    8. ',
' → logprob: -15.500085830688477
    9. '(self' → logprob: -15.625085830688477
    10. '   ' → logprob: -15.875085830688477

Token 399: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.07563485205173492
    2. ' results' → logprob: -3.2006349563598633
    3. 'output' → logprob: -3.5756349563598633
    4. 'outputs' → logprob: -6.075634956359863
    5. ' output' → logprob: -6.950634956359863
    6. 'processor' → logprob: -7.575634956359863
    7. ' outputs' → logprob: -8.575634956359863
    8. ' processor' → logprob: -10.325634956359863
    9. 'result' → logprob: -10.450634956359863
    10. 'out' → logprob: -10.950634956359863

Token 400: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.383526149671525e-05
    2. '):' → logprob: -9.875053405761719
    3. '):
' → logprob: -13.500053405761719
    4. ')' → logprob: -14.500053405761719
    5. '   ' → logprob: -15.250053405761719
    6. ' :' → logprob: -16.12505340576172
    7. ' ):' → logprob: -16.62505340576172
    8. '```' → logprob: -17.62505340576172
    9. ':list' → logprob: -18.37505340576172
    10. '  ' → logprob: -18.50005340576172

Token 401: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0002614550176076591
    2. ' List' → logprob: -8.250261306762695
    3. '[List' → logprob: -16.125261306762695
    4. 'list' → logprob: -16.625261306762695
    5. '   ' → logprob: -17.875261306762695
    6. ')' → logprob: -18.500261306762695
    7. '	List' → logprob: -20.000261306762695
    8. '       ' → logprob: -21.125261306762695
    9. ' list' → logprob: -21.750261306762695
    10. ',List' → logprob: -22.500261306762695

Token 402: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -16.0
    3. '[
' → logprob: -16.0
    4. 'Tuple' → logprob: -17.25
    5. '[int' → logprob: -17.625
    6. '```' → logprob: -17.875
    7. '<Tuple' → logprob: -18.25
    8. ' ' → logprob: -18.5
    9. '):
' → logprob: -18.5
    10. '  ' → logprob: -18.875

Token 403: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -5.200166469876422e-06
    2. ' Tuple' → logprob: -12.750004768371582
    3. '[' → logprob: -13.500004768371582
    4. 'tuple' → logprob: -14.625004768371582
    5. '.Tuple' → logprob: -15.750004768371582
    6. ' ' → logprob: -17.0000057220459
    7. ')' → logprob: -17.1250057220459
    8. 'Tu' → logprob: -17.1250057220459
    9. '<Tuple' → logprob: -17.2500057220459
    10. '   ' → logprob: -17.3750057220459

Token 404: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.8889261304575484e-06
    2. 'int' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.625003814697266
    4. '<int' → logprob: -17.875003814697266
    5. '[
' → logprob: -18.375003814697266
    6. '(int' → logprob: -19.125003814697266
    7. '[' → logprob: -19.500003814697266
    8. '
' → logprob: -19.500003814697266
    9. '```' → logprob: -19.750003814697266
    10. ',int' → logprob: -20.000003814697266

Token 405: ',' (ID: 11)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0005638765869662166
    2. ',int' → logprob: -7.750564098358154
    3. ',' → logprob: -9.000563621520996
    4. 'int' → logprob: -11.625563621520996
    5. ' ,' → logprob: -15.125563621520996
    6. '[' → logprob: -15.375563621520996
    7. '<int' → logprob: -15.875563621520996
    8. '   ' → logprob: -16.375564575195312
    9. '(int' → logprob: -16.875564575195312
    10. ']int' → logprob: -17.250564575195312

Token 406: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.2378600735682994e-05
    2. ' int' → logprob: -10.375032424926758
    3. '[int' → logprob: -14.250032424926758
    4. '   ' → logprob: -15.875032424926758
    5. '```' → logprob: -16.125032424926758
    6. '<int' → logprob: -16.375032424926758
    7. ']int' → logprob: -16.500032424926758
    8. '...' → logprob: -17.125032424926758
    9. '	int' → logprob: -17.750032424926758
    10. ' ' → logprob: -18.000032424926758

Token 407: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.00040993880247697234
    2. ']])' → logprob: -7.875410079956055
    3. ']],' → logprob: -10.750410079956055
    4. ']]:
' → logprob: -12.375410079956055
    5. ')]' → logprob: -13.000410079956055
    6. ']])
' → logprob: -14.125410079956055
    7. ']' → logprob: -14.500410079956055
    8. '```' → logprob: -15.750410079956055
    9. ']]);
' → logprob: -15.875410079956055
    10. ']):
' → logprob: -16.250410079956055

Token 408: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5793439745903015
    2. '):' → logprob: -0.8293439745903015
    3. ')' → logprob: -5.704343795776367
    4. '):
' → logprob: -9.954343795776367
    5. '   ' → logprob: -11.204343795776367
    6. ':' → logprob: -12.579343795776367
    7. '       ' → logprob: -13.704343795776367
    8. '):

' → logprob: -14.579343795776367
    9. ' ):
' → logprob: -15.204343795776367
    10. ' ' → logprob: -15.454343795776367

Token 409: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002526376338209957
    2. 'def' → logprob: -8.375252723693848
    3. ' def' → logprob: -11.375252723693848
    4. '       ' → logprob: -12.000252723693848
    5. '
' → logprob: -13.625252723693848
    6. ')' → logprob: -13.875252723693848
    7. '    
' → logprob: -14.250252723693848
    8. '):
' → logprob: -14.375252723693848
    9. '	def' → logprob: -14.875252723693848
    10. '<|end|>' → logprob: -15.375252723693848

Token 410: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00263784546405077
    2. ' self' → logprob: -6.25263786315918
    3. '       ' → logprob: -7.25263786315918
    4. '	self' → logprob: -14.75263786315918
    5. '   ' → logprob: -15.12763786315918
    6. '(self' → logprob: -18.00263786315918
    7. ' ' → logprob: -18.12763786315918
    8. 'def' → logprob: -18.25263786315918
    9. '[self' → logprob: -19.37763786315918
    10. 'class' → logprob: -19.50263786315918

Token 411: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.000841907283756882
    2. '.' → logprob: -7.250842094421387
    3. 'results' → logprob: -9.125842094421387
    4. ' .' → logprob: -10.750842094421387
    5. '.result' → logprob: -14.750842094421387
    6. ' results' → logprob: -15.000842094421387
    7. '   ' → logprob: -15.375842094421387
    8. '.outputs' → logprob: -15.500842094421387
    9. '	results' → logprob: -15.625842094421387
    10. '._' → logprob: -15.625842094421387

Token 412: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5282605290412903
    2. ' =' → logprob: -0.9032605290412903
    3. '   ' → logprob: -5.403260707855225
    4. ':' → logprob: -7.528260707855225
    5. '.' → logprob: -10.528260231018066
    6. 'def' → logprob: -10.778260231018066
    7. '       ' → logprob: -11.528260231018066
    8. ' def' → logprob: -11.778260231018066
    9. ')' → logprob: -12.403260231018066
    10. ' ' → logprob: -12.653260231018066

Token 413: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0015023599844425917
    2. ' results' → logprob: -6.501502513885498
    3. '	results' → logprob: -20.126502990722656
    4. '(results' → logprob: -20.876502990722656
    5. '.results' → logprob: -22.376502990722656
    6. 'result' → logprob: -22.501502990722656
    7. ' ' → logprob: -23.126502990722656
    8. 'Results' → logprob: -24.376502990722656
    9. '_results' → logprob: -24.501502990722656
    10. '   ' → logprob: -24.876502990722656

Token 414: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003542926860973239
    2. '
' → logprob: -8.125354766845703
    3. 'def' → logprob: -10.125354766845703
    4. '    
' → logprob: -11.000354766845703
    5. ' def' → logprob: -14.250354766845703
    6. '  
' → logprob: -15.000354766845703
    7. '        
' → logprob: -15.625354766845703
    8. '<|end|>' → logprob: -16.500354766845703
    9. ' 
' → logprob: -16.750354766845703
    10. '   
' → logprob: -17.000354766845703

Token 415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016041524708271027
    2. 'def' → logprob: -4.1410417556762695
    3. ' def' → logprob: -12.01604175567627
    4. '
' → logprob: -14.14104175567627
    5. '    
' → logprob: -15.26604175567627
    6. '	def' → logprob: -15.76604175567627
    7. ' ' → logprob: -16.266040802001953
    8. 'from' → logprob: -18.016040802001953
    9. '```' → logprob: -18.016040802001953
    10. '  ' → logprob: -18.266040802001953

Token 416: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.842555426876061e-06
    2. ' def' → logprob: -12.250004768371582
    3. '
' → logprob: -20.6250057220459
    4. '   ' → logprob: -20.8750057220459
    5. '	def' → logprob: -22.3750057220459
    6. 'de' → logprob: -22.8750057220459
    7. ' ' → logprob: -23.5000057220459
    8. '    
' → logprob: -23.7500057220459
    9. 'class' → logprob: -24.2500057220459
    10. '```' → logprob: -24.5000057220459

Token 417: ' render' (ID: 5898)
  Prédit: 'render'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'render' → logprob: -0.001515576965175569
    2. ' render' → logprob: -6.5015153884887695
    3. 'display' → logprob: -11.50151538848877
    4. 'print' → logprob: -13.00151538848877
    5. 'def' → logprob: -14.87651538848877
    6. '.render' → logprob: -15.12651538848877
    7. '_render' → logprob: -16.126516342163086
    8. '__' → logprob: -16.876516342163086
    9. 'output' → logprob: -16.876516342163086
    10. '	render' → logprob: -17.251516342163086

Token 418: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.1888679839321412e-05
    2. '()' → logprob: -10.875021934509277
    3. '(' → logprob: -13.250021934509277
    4. '():' → logprob: -14.125021934509277
    5. 'self' → logprob: -15.250021934509277
    6. '(
' → logprob: -16.50002098083496
    7. '   ' → logprob: -17.25002098083496
    8. '():
' → logprob: -17.75002098083496
    9. ' (' → logprob: -18.00002098083496
    10. '_output' → logprob: -18.00002098083496

Token 419: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.639096970204264e-05
    2. ')->' → logprob: -9.750096321105957
    3. 'self' → logprob: -11.000096321105957
    4. '):
' → logprob: -11.250096321105957
    5. '):' → logprob: -12.625096321105957
    6. '   ' → logprob: -12.875096321105957
    7. ' )' → logprob: -13.375096321105957
    8. '(self' → logprob: -15.250096321105957
    9. '       ' → logprob: -15.625096321105957
    10. '->' → logprob: -16.375097274780273

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002638676203787327
    2. 'for' → logprob: -6.252638816833496
    3. ' for' → logprob: -7.252638816833496
    4. '   ' → logprob: -14.002638816833496
    5. '	for' → logprob: -15.002638816833496
    6. '```' → logprob: -15.252638816833496
    7. '	' → logprob: -16.37763786315918
    8. '           ' → logprob: -16.87763786315918
    9. '	   ' → logprob: -17.12763786315918
    10. 'self' → logprob: -17.12763786315918

Token 421: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00977686420083046
    2. ' for' → logprob: -4.759777069091797
    3. '       ' → logprob: -6.759777069091797
    4. '   ' → logprob: -13.384777069091797
    5. '	for' → logprob: -14.384777069091797
    6. '```' → logprob: -17.634777069091797
    7. ' ' → logprob: -18.759777069091797
    8. '           ' → logprob: -19.634777069091797
    9. '	' → logprob: -19.884777069091797
    10. 'import' → logprob: -21.384777069091797

Token 422: ' joi' (ID: 193529)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0033829149324446917
    2. 'count' → logprob: -6.128382682800293
    3. ' joi' → logprob: -7.253382682800293
    4. 'result' → logprob: -7.753382682800293
    5. '   ' → logprob: -10.628382682800293
    6. '(' → logprob: -11.878382682800293
    7. 'counts' → logprob: -12.128382682800293
    8. '(j' → logprob: -12.253382682800293
    9. ' count' → logprob: -12.378382682800293
    10. ' ' → logprob: -12.753382682800293

Token 423: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -6.301394023466855e-05
    2. ',' → logprob: -9.875062942504883
    3. ',_' → logprob: -12.000062942504883
    4. '_,' → logprob: -12.500062942504883
    5. ',count' → logprob: -13.750062942504883
    6. '_cnt' → logprob: -15.625062942504883
    7. '_result' → logprob: -16.375062942504883
    8. '_c' → logprob: -16.625062942504883
    9. 'count' → logprob: -17.375062942504883
    10. '_' → logprob: -17.375062942504883

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.096126576769166e-05
    2. ',i' → logprob: -10.375041007995605
    3. ',j' → logprob: -11.750041007995605
    4. ' ,' → logprob: -13.375041007995605
    5. ',
' → logprob: -15.875041007995605
    6. ',int' → logprob: -16.12504005432129
    7. '‌,' → logprob: -17.75004005432129
    8. ',in' → logprob: -18.37504005432129
    9. ',\
' → logprob: -18.62504005432129
    10. ',

' → logprob: -18.87504005432129

Token 425: ' i' (ID: 575)
  Prédit: 'io'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'io' → logprob: -0.08983346819877625
    2. ' i' → logprob: -2.4648334980010986
    3. 'i' → logprob: -7.3398332595825195
    4. ' io' → logprob: -8.58983325958252
    5. 'oi' → logprob: -11.83983325958252
    6. 'IO' → logprob: -11.83983325958252
    7. ' ' → logprob: -11.83983325958252
    8. 'iox' → logprob: -12.08983325958252
    9. 'ios' → logprob: -12.21483325958252
    10. 'iou' → logprob: -12.46483325958252

Token 426: 'oi' (ID: 3412)
  Prédit: 'oi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oi' → logprob: -0.4745405316352844
    2. 'o' → logprob: -0.9745405316352844
    3. 'i' → logprob: -8.974540710449219
    4. ',' → logprob: -9.349540710449219
    5. '
' → logprob: -9.974540710449219
    6. '   ' → logprob: -10.224540710449219
    7. 'oc' → logprob: -10.599540710449219
    8. '_count' → logprob: -11.224540710449219
    9. 'io' → logprob: -11.349540710449219
    10. '```' → logprob: -11.474540710449219

Token 427: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.9650025428272784e-05
    2. 'count' → logprob: -10.250040054321289
    3. ' _' → logprob: -13.625040054321289
    4. '_' → logprob: -13.750040054321289
    5. 'ount' → logprob: -13.875040054321289
    6. ' in' → logprob: -14.750040054321289
    7. 'in' → logprob: -15.750040054321289
    8. '_counter' → logprob: -16.50004005432129
    9. 'n' → logprob: -16.62504005432129
    10. ',_' → logprob: -17.00004005432129

Token 428: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0003662020608317107
    2. 'in' → logprob: -8.3753662109375
    3. '       ' → logprob: -9.2503662109375
    4. ',' → logprob: -11.2503662109375
    5. ':
' → logprob: -11.6253662109375
    6. '           ' → logprob: -11.8753662109375
    7. '   ' → logprob: -12.2503662109375
    8. ':' → logprob: -12.3753662109375
    9. '):
' → logprob: -15.1253662109375
    10. '	in' → logprob: -15.1253662109375

Token 429: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004079708829522133
    2. ' self' → logprob: -5.504079818725586
    3. '
' → logprob: -14.379079818725586
    4. '   ' → logprob: -15.004079818725586
    5. '(self' → logprob: -15.254079818725586
    6. '	self' → logprob: -16.504079818725586
    7. '       ' → logprob: -16.879079818725586
    8. ' ' → logprob: -17.879079818725586
    9. '[self' → logprob: -18.129079818725586
    10. '    ' → logprob: -18.254079818725586

Token 430: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -0.0002128382766386494
    2. 'results' → logprob: -8.500212669372559
    3. ' .' → logprob: -12.625212669372559
    4. 's' → logprob: -13.500212669372559
    5. '_results' → logprob: -14.000212669372559
    6. '	results' → logprob: -14.250212669372559
    7. '.result' → logprob: -14.375212669372559
    8. '.' → logprob: -14.375212669372559
    9. '   ' → logprob: -15.000212669372559
    10. ' ' → logprob: -15.250212669372559

Token 431: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5850614309310913
    2. ':' → logprob: -0.9600614309310913
    3. '           ' → logprob: -2.835061550140381
    4. '):
' → logprob: -7.085061550140381
    5. ',' → logprob: -8.460061073303223
    6. '():
' → logprob: -9.210061073303223
    7. '       ' → logprob: -9.335061073303223
    8. 'print' → logprob: -10.460061073303223
    9. '<|end|>' → logprob: -10.710061073303223
    10. ',
' → logprob: -11.085061073303223

Token 432: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004683237988501787
    2. 'print' → logprob: -5.379683017730713
    3. ' print' → logprob: -10.379683494567871
    4. '       ' → logprob: -10.379683494567871
    5. '```' → logprob: -14.379683494567871
    6. '          ' → logprob: -16.379682540893555
    7. '		' → logprob: -16.754682540893555
    8. '               ' → logprob: -16.879682540893555
    9. '	       ' → logprob: -17.629682540893555
    10. '
' → logprob: -17.879682540893555

Token 433: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0004387750814203173
    2. ' print' → logprob: -7.750438690185547
    3. '           ' → logprob: -11.750438690185547
    4. '               ' → logprob: -15.500438690185547
    5. '   ' → logprob: -17.125438690185547
    6. '	print' → logprob: -20.125438690185547
    7. '       ' → logprob: -20.375438690185547
    8. '```' → logprob: -22.125438690185547
    9. ' ' → logprob: -22.250438690185547
    10. '.print' → logprob: -23.375438690185547

Token 434: '(j' (ID: 4997)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.5760009288787842
    2. '(j' → logprob: -0.8260009288787842
    3. '(' → logprob: -9.951001167297363
    4. 'f' → logprob: -11.326001167297363
    5. 'j' → logprob: -13.576001167297363
    6. '("{}' → logprob: -15.701001167297363
    7. '(i' → logprob: -15.951001167297363
    8. '((' → logprob: -16.576000213623047
    9. '(J' → logprob: -16.576000213623047
    10. '(
' → logprob: -17.076000213623047

Token 435: 'oi' (ID: 3412)
  Prédit: 'oi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oi' → logprob: -9.849109119386412e-06
    2. 'o' → logprob: -11.875009536743164
    3. 'OI' → logprob: -13.500009536743164
    4. '   ' → logprob: -14.750009536743164
    5. ' oi' → logprob: -14.750009536743164
    6. 'oin' → logprob: -15.625009536743164
    7. '       ' → logprob: -16.500009536743164
    8. 'ói' → logprob: -17.250009536743164
    9. '  ' → logprob: -17.250009536743164
    10. '"' → logprob: -17.375009536743164

Token 436: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -9.014684110297821e-06
    2. ',' → logprob: -13.125008583068848
    3. '_counts' → logprob: -13.625008583068848
    4. ')' → logprob: -13.750008583068848
    5. ' _' → logprob: -14.000008583068848
    6. 'count' → logprob: -14.375008583068848
    7. '_' → logprob: -14.500008583068848
    8. ',_' → logprob: -14.625008583068848
    9. ')_' → logprob: -14.625008583068848
    10. '_cnt' → logprob: -15.125008583068848

Token 437: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003705777460709214
    2. ',i' → logprob: -5.628705978393555
    3. ' ,' → logprob: -9.378705978393555
    4. ',j' → logprob: -11.128705978393555
    5. ',
' → logprob: -12.628705978393555
    6. ' i' → logprob: -13.378705978393555
    7. ',end' → logprob: -14.253705978393555
    8. '   ' → logprob: -15.253705978393555
    9. ',int' → logprob: -15.753705978393555
    10. 'i' → logprob: -16.003705978393555

Token 438: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014169031754136086
    2. 'print' → logprob: -4.264169216156006
    3. ' print' → logprob: -12.764168739318848
    4. '          ' → logprob: -14.139168739318848
    5. '		' → logprob: -14.764168739318848
    6. '            
' → logprob: -15.014168739318848
    7. '   ' → logprob: -15.139168739318848
    8. '       ' → logprob: -15.264168739318848
    9. 'i' → logprob: -15.389168739318848
    10. 'io' → logprob: -15.764168739318848

Token 439: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005660186288878322
    2. '           ' → logprob: -7.500566005706787
    3. ' print' → logprob: -11.250566482543945
    4. '```' → logprob: -19.750566482543945
    5. 'println' → logprob: -20.000566482543945
    6. '   ' → logprob: -20.375566482543945
    7. '          ' → logprob: -21.125566482543945
    8. '	print' → logprob: -21.250566482543945
    9. 'printf' → logprob: -21.250566482543945
    10. '.print' → logprob: -21.375566482543945

Token 440: '(io' (ID: 83879)
  Prédit: '(io'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(io' → logprob: -1.1279553291387856e-05
    2. '(i' → logprob: -12.000011444091797
    3. '(' → logprob: -12.625011444091797
    4. '(IO' → logprob: -14.125011444091797
    5. 'io' → logprob: -14.500011444091797
    6. '/io' → logprob: -15.500011444091797
    7. '(ii' → logprob: -16.625011444091797
    8. '	io' → logprob: -16.875011444091797
    9. '"io' → logprob: -17.000011444091797
    10. ' (' → logprob: -17.625011444091797

Token 441: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.8921695047756657e-05
    2. 'io' → logprob: -10.625028610229492
    3. '_count' → logprob: -12.375028610229492
    4. '_i' → logprob: -15.625028610229492
    5. ' i' → logprob: -16.125028610229492
    6. 'count' → logprob: -17.000028610229492
    7. '
' → logprob: -18.375028610229492
    8. 'ic' → logprob: -18.750028610229492
    9. 'oi' → logprob: -19.000028610229492
    10. '_counts' → logprob: -19.250028610229492

Token 442: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0007825878565199673
    2. 'o' → logprob: -7.750782489776611
    3. 'i' → logprob: -8.00078296661377
    4. '_counts' → logprob: -12.00078296661377
    5. 'oi' → logprob: -12.12578296661377
    6. '_i' → logprob: -13.12578296661377
    7. '_o' → logprob: -13.50078296661377
    8. 'count' → logprob: -14.25078296661377
    9. '_cnt' → logprob: -14.62578296661377
    10. 'io' → logprob: -15.00078296661377

Token 443: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.703443770878948e-06
    2. ')
' → logprob: -12.000007629394531
    3. '<|end|>' → logprob: -13.625007629394531
    4. '       ' → logprob: -16.25000762939453
    5. ' )' → logprob: -16.75000762939453
    6. '           ' → logprob: -16.75000762939453
    7. '```' → logprob: -17.62500762939453
    8. '),' → logprob: -18.50000762939453
    9. '`)' → logprob: -18.75000762939453
    10. '())' → logprob: -18.87500762939453

Token 444: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00035906085395254195
    2. 'def' → logprob: -8.000359535217285
    3. ' if' → logprob: -11.375359535217285
    4. '```' → logprob: -11.625359535217285
    5. '#' → logprob: -12.750359535217285
    6. '<|end|>' → logprob: -15.875359535217285
    7. '
' → logprob: -16.62535858154297
    8. 'from' → logprob: -16.62535858154297
    9. '#if' → logprob: -17.50035858154297
    10. 'import' → logprob: -18.00035858154297

Token 445: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0024821963161230087
    2. 'main' → logprob: -6.0024824142456055
    3. ' run' → logprob: -12.252482414245605
    4. '_main' → logprob: -13.252482414245605
    5. 'run' → logprob: -17.50248146057129
    6. '	main' → logprob: -17.75248146057129
    7. '_run' → logprob: -19.87748146057129
    8. ' solve' → logprob: -21.12748146057129
    9. '
' → logprob: -21.50248146057129
    10. ' create' → logprob: -22.12748146057129

Token 446: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.723352049040841e-06
    2. '():
' → logprob: -12.500004768371582
    3. ' ():' → logprob: -14.250004768371582
    4. '()' → logprob: -15.000004768371582
    5. '():
' → logprob: -18.375003814697266
    6. '()>' → logprob: -18.750003814697266
    7. '():

' → logprob: -19.125003814697266
    8. ':' → logprob: -19.875003814697266
    9. '()">' → logprob: -20.125003814697266
    10. '()->' → logprob: -20.500003814697266

Token 447: '   ' (ID: 271)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'source' → logprob: -0.10572989284992218
    2. '   ' → logprob: -2.355729818344116
    3. ' source' → logprob: -5.230730056762695
    4. 'stdin' → logprob: -9.480730056762695
    5. 'import' → logprob: -10.480730056762695
    6. '	source' → logprob: -10.855730056762695
    7. 'input' → logprob: -11.480730056762695
    8. 'src' → logprob: -11.480730056762695
    9. '       ' → logprob: -12.355730056762695
    10. '_source' → logprob: -12.980730056762695

Token 448: ' source' (ID: 4256)
  Prédit: 'source'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'source' (adapté à ' source') → logprob: -0.04868796840310097
    2. ' source' → logprob: -3.0486879348754883
    3. '   ' → logprob: -10.173687934875488
    4. 'src' → logprob: -10.173687934875488
    5. 'stdin' → logprob: -10.923687934875488
    6. 'import' → logprob: -12.923687934875488
    7. 'input' → logprob: -13.423687934875488
    8. ' stdin' → logprob: -14.298687934875488
    9. '	source' → logprob: -14.673687934875488
    10. ' src' → logprob: -14.923687934875488

Token 449: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889000326395035
    2. '=' → logprob: -2.578890085220337
    3. ' =
' → logprob: -16.203889846801758
    4. '=
' → logprob: -16.578889846801758
    5. '   ' → logprob: -17.703889846801758
    6. ' ' → logprob: -18.203889846801758
    7. ' ' → logprob: -18.453889846801758
    8. '  ' → logprob: -18.578889846801758
    9. ':' → logprob: -18.703889846801758
    10. '=

' → logprob: -18.828889846801758

Token 450: ' Std' (ID: 74505)
  Prédit: 'Std'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Std' → logprob: -0.0011742709903046489
    2. ' Std' → logprob: -6.751174449920654
    3. '   ' → logprob: -13.501173973083496
    4. 'Standard' → logprob: -13.751173973083496
    5. ' ' → logprob: -14.751173973083496
    6. 'std' → logprob: -15.251173973083496
    7. 'Sys' → logprob: -15.626173973083496
    8. 'STD' → logprob: -15.876173973083496
    9. '  ' → logprob: -16.001174926757812
    10. 'St' → logprob: -16.001174926757812

Token 451: 'In' (ID: 637)
  Prédit: 'In'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'In' → logprob: -5.512236498361744e-07
    2. 'in' → logprob: -14.500000953674316
    3. ' In' → logprob: -17.375
    4. 'n' → logprob: -18.625
    5. '   ' → logprob: -18.625
    6. 'IN' → logprob: -19.0
    7. '_in' → logprob: -19.625
    8. 'I' → logprob: -20.125
    9. 'Input' → logprob: -20.75
    10. 'St' → logprob: -21.5

Token 452: 'String' (ID: 916)
  Prédit: 'String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -5.512236498361744e-07
    2. 'string' → logprob: -14.625000953674316
    3. 'Source' → logprob: -17.375
    4. '```' → logprob: -18.0
    5. 'tring' → logprob: -18.625
    6. 'source' → logprob: -18.875
    7. ' String' → logprob: -19.125
    8. 'In' → logprob: -19.375
    9. '_string' → logprob: -19.375
    10. 'Strings' → logprob: -19.625

Token 453: 'Source' (ID: 4823)
  Prédit: 'Source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Source' → logprob: -1.735893965815194e-05
    2. 'source' → logprob: -11.000017166137695
    3. 'String' → logprob: -14.750017166137695
    4. '_source' → logprob: -16.000017166137695
    5. 'ource' → logprob: -16.375017166137695
    6. 'Sou' → logprob: -17.125017166137695
    7. ' source' → logprob: -18.125017166137695
    8. 'SOURCE' → logprob: -18.375017166137695
    9. '_SOURCE' → logprob: -18.625017166137695
    10. ' Source' → logprob: -19.000017166137695

Token 454: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2818202078342438
    2. '()' → logprob: -1.5318201780319214
    3. '()
' → logprob: -3.531820297241211
    4. ')' → logprob: -9.656820297241211
    5. '
' → logprob: -10.406820297241211
    6. 'matcher' → logprob: -10.906820297241211
    7. '  ' → logprob: -11.156820297241211
    8. ' ' → logprob: -11.156820297241211
    9. '    
' → logprob: -11.656820297241211
    10. '())' → logprob: -11.781820297241211

Token 455: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16139410436153412
    2. ' matcher' → logprob: -2.5363941192626953
    3. 'matcher' → logprob: -2.6613941192626953
    4. '.matcher' → logprob: -11.786394119262695
    5. '```' → logprob: -11.786394119262695
    6. 'pattern' → logprob: -11.911394119262695
    7. '
' → logprob: -12.411394119262695
    8. '   ' → logprob: -12.661394119262695
    9. 'match' → logprob: -12.786394119262695
    10. 'm' → logprob: -13.036394119262695

Token 456: ' matcher' (ID: 63436)
  Prédit: 'matcher'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matcher' (adapté à ' matcher') → logprob: -0.036265019327402115
    2. ' matcher' → logprob: -3.9112651348114014
    3. '   ' → logprob: -4.161264896392822
    4. 'pattern' → logprob: -12.28626537322998
    5. 'match' → logprob: -12.91126537322998
    6. ' ' → logprob: -13.16126537322998
    7. '  ' → logprob: -13.91126537322998
    8. '.matcher' → logprob: -14.03626537322998
    9. '```' → logprob: -14.28626537322998
    10. 'm' → logprob: -15.03626537322998

Token 457: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132617771625519
    2. '=' → logprob: -1.3132617473602295
    3. '   ' → logprob: -17.063261032104492
    4. ' ' → logprob: -17.313261032104492
    5. 'JO' → logprob: -18.438261032104492
    6. '(' → logprob: -19.188261032104492
    7. ' =
' → logprob: -19.313261032104492
    8. '＝' → logprob: -19.313261032104492
    9. '=}' → logprob: -19.438261032104492
    10. 'pattern' → logprob: -19.563261032104492

Token 458: ' JO' (ID: 72685)
  Prédit: 'JO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'JO' → logprob: -0.014164329506456852
    2. ' JO' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.639163970947266
    4. 'JOY' → logprob: -15.514163970947266
    5. '   ' → logprob: -16.014163970947266
    6. 'J' → logprob: -17.264163970947266
    7. '```' → logprob: -17.764163970947266
    8. ' ' → logprob: -18.139163970947266
    9. 'YO' → logprob: -18.389163970947266
    10. '  ' → logprob: -18.389163970947266

Token 459: 'I' (ID: 40)
  Prédit: 'I'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.011062555946409702
    2. 'IO' → logprob: -4.5110626220703125
    3. 'O' → logprob: -12.636062622070312
    4. 'II' → logprob: -12.761062622070312
    5. '
' → logprob: -13.261062622070312
    6. 'IP' → logprob: -13.386062622070312
    7. '```' → logprob: -14.323562622070312
    8. ' I' → logprob: -14.386062622070312
    9. '

' → logprob: -14.511062622070312
    10. 'IODevice' → logprob: -15.198562622070312

Token 460: 'IO' (ID: 3982)
  Prédit: 'IO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IO' → logprob: -4.1557283111615106e-05
    2. 'O' → logprob: -10.250041961669922
    3. 'IP' → logprob: -13.000041961669922
    4. 'OP' → logprob: -13.500041961669922
    5. 'I' → logprob: -13.750041961669922
    6. 'Pattern' → logprob: -14.125041961669922
    7. 'io' → logprob: -14.875041961669922
    8. 'JO' → logprob: -16.500041961669922
    9. '(IO' → logprob: -17.000041961669922
    10. 'IODevice' → logprob: -17.000041961669922

Token 461: 'IP' (ID: 3799)
  Prédit: 'IP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IP' → logprob: -0.004101077560335398
    2. 'OP' → logprob: -6.004101276397705
    3. 'P' → logprob: -6.629101276397705
    4. 'Pattern' → logprob: -8.379100799560547
    5. 'PAT' → logprob: -10.879100799560547
    6. 'I' → logprob: -11.254100799560547
    7. 'PP' → logprob: -11.629100799560547
    8. 'O' → logprob: -12.129100799560547
    9. 'IO' → logprob: -12.254100799560547
    10. 'ip' → logprob: -12.379100799560547

Token 462: 'attern' (ID: 20946)
  Prédit: 'attern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attern' → logprob: -0.12704339623451233
    2. 'Pattern' → logprob: -2.1270434856414795
    3. 'atter' → logprob: -9.502043724060059
    4. 'pattern' → logprob: -10.252043724060059
    5. 'P' → logprob: -12.877043724060059
    6. 'att' → logprob: -14.002043724060059
    7. '(P' → logprob: -14.252043724060059
    8. 'at' → logprob: -15.252043724060059
    9. '.Pattern' → logprob: -15.252043724060059
    10. 'At' → logprob: -15.377043724060059

Token 463: 'Matcher' (ID: 43593)
  Prédit: 'Matcher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Matcher' → logprob: -4.727905979962088e-05
    2. 'atcher' → logprob: -10.50004768371582
    3. 'matcher' → logprob: -10.87504768371582
    4. '.Matcher' → logprob: -14.62504768371582
    5. ' Matcher' → logprob: -15.50004768371582
    6. ' matcher' → logprob: -16.75004768371582
    7. 'Matchers' → logprob: -17.25004768371582
    8. '.matcher' → logprob: -17.37504768371582
    9. 'Match' → logprob: -18.37504768371582
    10. 'Matching' → logprob: -18.75004768371582

Token 464: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2562217712402344
    2. '()' → logprob: -1.6312217712402344
    3. '()
' → logprob: -3.5062217712402344
    4. ')' → logprob: -8.631221771240234
    5. '(' → logprob: -10.381221771240234
    6. '(process' → logprob: -10.506221771240234
    7. '(
' → logprob: -11.006221771240234
    8. 'processor' → logprob: -11.131221771240234
    9. 'Processor' → logprob: -11.256221771240234
    10. ')
' → logprob: -11.631221771240234

Token 465: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028770342469215393
    2. 'processor' → logprob: -6.377877235412598
    3. ' processor' → logprob: -6.752877235412598
    4. '    
' → logprob: -13.377877235412598
    5. 'process' → logprob: -13.877877235412598
    6. '_processor' → logprob: -13.877877235412598
    7. ' process' → logprob: -14.252877235412598
    8. '
' → logprob: -14.252877235412598
    9. '(process' → logprob: -14.752877235412598
    10. '```' → logprob: -14.877877235412598

Token 466: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' (adapté à ' processor') → logprob: -0.06258676201105118
    2. ' processor' → logprob: -2.812586784362793
    3. '   ' → logprob: -7.437586784362793
    4. 'process' → logprob: -10.937586784362793
    5. 'proc' → logprob: -11.937586784362793
    6. '_processor' → logprob: -13.687586784362793
    7. '.processor' → logprob: -13.812586784362793
    8. 'Processor' → logprob: -13.812586784362793
    9. 'p' → logprob: -14.437586784362793
    10. '
' → logprob: -14.562586784362793

Token 467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022545099258423
    2. '=' → logprob: -1.9102253913879395
    3. '(process' → logprob: -14.285225868225098
    4. '(' → logprob: -15.410225868225098
    5. '   ' → logprob: -15.785225868225098
    6. '.process' → logprob: -16.03522491455078
    7. ' =
' → logprob: -16.03522491455078
    8. ' ' → logprob: -16.53522491455078
    9. ')' → logprob: -17.03522491455078
    10. '.' → logprob: -17.16022491455078

Token 468: ' Processor' (ID: 82937)
  Prédit: 'Processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -0.38687121868133545
    2. ' Processor' → logprob: -1.1368712186813354
    3. '   ' → logprob: -16.636871337890625
    4. ' Process' → logprob: -17.011871337890625
    5. ' processor' → logprob: -17.386871337890625
    6. 'Process' → logprob: -18.136871337890625
    7. 'Processing' → logprob: -18.761871337890625
    8. '_processor' → logprob: -19.136871337890625
    9. ' Processing' → logprob: -20.511871337890625
    10. 'processor' → logprob: -21.886871337890625

Token 469: '(source' (ID: 23614)
  Prédit: '(source'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(source' → logprob: -0.00013083349040243775
    2. '(' → logprob: -9.000130653381348
    3. '(
' → logprob: -12.000130653381348
    4. 'source' → logprob: -14.000130653381348
    5. '   ' → logprob: -14.875130653381348
    6. '(src' → logprob: -18.375131607055664
    7. '(Source' → logprob: -18.625131607055664
    8. '[source' → logprob: -18.625131607055664
    9. '(
' → logprob: -18.875131607055664
    10. ' (' → logprob: -18.875131607055664

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ',
' → logprob: -13.000003814697266
    3. ',m' → logprob: -14.000003814697266
    4. ' ,' → logprob: -15.125003814697266
    5. ')' → logprob: -16.875003814697266
    6. 'm' → logprob: -17.375003814697266
    7. ',

' → logprob: -17.500003814697266
    8. '   ' → logprob: -18.375003814697266
    9. '‌,' → logprob: -18.625003814697266
    10. 'matcher' → logprob: -18.750003814697266

Token 471: ' matcher' (ID: 63436)
  Prédit: 'matcher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matcher' → logprob: -0.003180563682690263
    2. ' matcher' → logprob: -5.753180503845215
    3. '   ' → logprob: -13.503180503845215
    4. ' ' → logprob: -14.628180503845215
    5. 'match' → logprob: -14.878180503845215
    6. '.matcher' → logprob: -15.503180503845215
    7. 'm' → logprob: -15.753180503845215
    8. '  ' → logprob: -16.25318145751953
    9. '
' → logprob: -16.75318145751953
    10. '       ' → logprob: -17.12818145751953

Token 472: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.767062246799469
    2. '   ' → logprob: -0.767062246799469
    3. ')
' → logprob: -2.642062187194824
    4. '    
' → logprob: -11.017062187194824
    5. ')
' → logprob: -12.767062187194824
    6. '
' → logprob: -12.767062187194824
    7. '(process' → logprob: -13.017062187194824
    8. 'process' → logprob: -13.642062187194824
    9. ' ' → logprob: -13.892062187194824
    10. ').' → logprob: -13.892062187194824

Token 473: '   ' (ID: 271)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.13463638722896576
    2. '   ' → logprob: -2.134636402130127
    3. ' results' → logprob: -4.884636402130127
    4. 'result' → logprob: -9.509635925292969
    5. '```' → logprob: -10.509635925292969
    6. '	results' → logprob: -11.634635925292969
    7. 'for' → logprob: -12.634635925292969
    8. '    
' → logprob: -13.384635925292969
    9. '
' → logprob: -14.134635925292969
    10. '``' → logprob: -15.634635925292969

Token 474: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0019470835104584694
    2. ' results' → logprob: -6.251946926116943
    3. '   ' → logprob: -11.001947402954102
    4. 'result' → logprob: -13.376947402954102
    5. '	results' → logprob: -16.0019474029541
    6. '```' → logprob: -16.8769474029541
    7. '    
' → logprob: -18.8769474029541
    8. '
' → logprob: -19.1269474029541
    9. 'for' → logprob: -19.1269474029541
    10. 'outputs' → logprob: -19.3769474029541

Token 475: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324594371020794
    2. '=' → logprob: -3.7732460498809814
    3. ' =
' → logprob: -15.773245811462402
    4. '.' → logprob: -15.898245811462402
    5. ' =)' → logprob: -16.39824676513672
    6. '   ' → logprob: -17.14824676513672
    7. '	' → logprob: -17.52324676513672
    8. '＝' → logprob: -17.89824676513672
    9. ' ' → logprob: -18.02324676513672
    10. ' =
' → logprob: -18.14824676513672

Token 476: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.10020720958709717
    2. ' processor' → logprob: -2.3502073287963867
    3. '   ' → logprob: -14.850207328796387
    4. '.processor' → logprob: -16.10020637512207
    5. 'process' → logprob: -16.47520637512207
    6. 'Processor' → logprob: -17.22520637512207
    7. '_processor' → logprob: -17.97520637512207
    8. 'processors' → logprob: -18.22520637512207
    9. '(process' → logprob: -18.60020637512207
    10. 'producer' → logprob: -19.35020637512207

Token 477: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -2.1008713702030946e-06
    2. '.' → logprob: -13.250001907348633
    3. 'process' → logprob: -15.250001907348633
    4. ' .' → logprob: -18.250001907348633
    5. '.perform' → logprob: -21.375001907348633
    6. '.run' → logprob: -22.375001907348633
    7. ' process' → logprob: -22.625001907348633
    8. '(process' → logprob: -22.875001907348633
    9. '	process' → logprob: -23.000001907348633
    10. '.pro' → logprob: -23.125001907348633

Token 478: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16156014800071716
    2. '
' → logprob: -1.9115601778030396
    3. '    
' → logprob: -6.66156005859375
    4. '<|end|>' → logprob: -11.28656005859375
    5. '```' → logprob: -11.28656005859375
    6. '  
' → logprob: -11.78656005859375
    7. 'Output' → logprob: -12.28656005859375
    8. ' 
' → logprob: -12.41156005859375
    9. '
' → logprob: -12.66156005859375
    10. '   
' → logprob: -13.28656005859375

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019400229677557945
    2. 'renderer' → logprob: -4.269400119781494
    3. 'output' → logprob: -5.894400119781494
    4. ' renderer' → logprob: -6.894400119781494
    5. ' output' → logprob: -7.269400119781494
    6. 'Output' → logprob: -7.394400119781494
    7. ' Output' → logprob: -9.769400596618652
    8. '
' → logprob: -10.519400596618652
    9. '```' → logprob: -10.769400596618652
    10. 'Renderer' → logprob: -11.644400596618652

Token 480: ' renderer' (ID: 42807)
  Prédit: 'renderer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'renderer' (adapté à ' renderer') → logprob: -0.01875954493880272
    2. 'Output' → logprob: -4.268759727478027
    3. 'output' → logprob: -5.768759727478027
    4. ' renderer' → logprob: -6.643759727478027
    5. ' Output' → logprob: -9.643759727478027
    6. '   ' → logprob: -10.143759727478027
    7. '
' → logprob: -10.893759727478027
    8. 'render' → logprob: -11.143759727478027
    9. ' output' → logprob: -11.643759727478027
    10. 'Renderer' → logprob: -12.143759727478027

Token 481: ' =' (ID: 314)
  Prédit: '.render'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.render' → logprob: -0.17371754348278046
    2. ' =' → logprob: -1.9237174987792969
    3. '=' → logprob: -4.798717498779297
    4. '.' → logprob: -5.673717498779297
    5. '.Render' → logprob: -6.548717498779297
    6. '(render' → logprob: -9.798717498779297
    7. '.=' → logprob: -9.923717498779297
    8. '.output' → logprob: -10.173717498779297
    9. '(Render' → logprob: -10.173717498779297
    10. '.Output' → logprob: -10.548717498779297

Token 482: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.3132617771625519
    2. ' Output' → logprob: -1.3132617473602295
    3. '	Output' → logprob: -18.188261032104492
    4. '_Output' → logprob: -20.938261032104492
    5. ' output' → logprob: -21.313261032104492
    6. 'Input' → logprob: -21.688261032104492
    7. '(Output' → logprob: -22.063261032104492
    8. '   ' → logprob: -23.063261032104492
    9. '_output' → logprob: -23.188261032104492
    10. '.Output' → logprob: -23.688261032104492

Token 483: 'Renderer' (ID: 16687)
  Prédit: 'Renderer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Renderer' → logprob: -1.0280383548888494e-06
    2. 'Render' → logprob: -13.875000953674316
    3. 'renderer' → logprob: -17.750001907348633
    4. '(Render' → logprob: -18.500001907348633
    5. 'Output' → logprob: -18.875001907348633
    6. '_renderer' → logprob: -19.125001907348633
    7. 'Runner' → logprob: -20.250001907348633
    8. ' Renderer' → logprob: -20.750001907348633
    9. '_Render' → logprob: -20.875001907348633
    10. '.Render' → logprob: -21.500001907348633

Token 484: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -3.7697225252486533e-06
    2. 'results' → logprob: -12.750003814697266
    3. '(' → logprob: -14.625003814697266
    4. ' (' → logprob: -15.500003814697266
    5. '(
' → logprob: -15.750003814697266
    6. '(result' → logprob: -16.750003814697266
    7. ' results' → logprob: -16.875003814697266
    8. '(res' → logprob: -20.000003814697266
    9. '	results' → logprob: -20.500003814697266
    10. '(render' → logprob: -20.750003814697266

Token 485: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062164414674043655
    2. ')
' → logprob: -2.812164306640625
    3. '   ' → logprob: -8.562164306640625
    4. ')
' → logprob: -12.687164306640625
    5. '()' → logprob: -14.062164306640625
    6. ' )' → logprob: -14.437164306640625
    7. ' ' → logprob: -14.687164306640625
    8. ' )
' → logprob: -15.437164306640625
    9. '())
' → logprob: -16.687164306640625
    10. ')

' → logprob: -16.687164306640625

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08017417043447495
    2. 'renderer' → logprob: -2.580174207687378
    3. ' renderer' → logprob: -6.955173969268799
    4. '
' → logprob: -8.580174446105957
    5. '	render' → logprob: -10.080174446105957
    6. 'render' → logprob: -10.455174446105957
    7. '(renderer' → logprob: -10.580174446105957
    8. '_renderer' → logprob: -10.705174446105957
    9. '    
' → logprob: -11.455174446105957
    10. '.renderer' → logprob: -11.830174446105957

Token 487: ' renderer' (ID: 42807)
  Prédit: 'renderer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'renderer' (adapté à ' renderer') → logprob: -0.0038183683063834906
    2. '   ' → logprob: -6.003818511962891
    3. ' renderer' → logprob: -6.628818511962891
    4. 'render' → logprob: -11.00381851196289
    5. '
' → logprob: -13.37881851196289
    6. '.renderer' → logprob: -14.62881851196289
    7. '    
' → logprob: -14.87881851196289
    8. '	render' → logprob: -14.87881851196289
    9. '  ' → logprob: -15.25381851196289
    10. '(renderer' → logprob: -15.25381851196289

Token 488: '.render' (ID: 15112)
  Prédit: '.render'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.render' → logprob: -0.00015955790877342224
    2. '.' → logprob: -8.75015926361084
    3. '.run' → logprob: -15.00015926361084
    4. '.print' → logprob: -15.00015926361084
    5. '.
' → logprob: -15.25015926361084
    6. '.Render' → logprob: -16.875160217285156
    7. 'render' → logprob: -17.500160217285156
    8. '.draw' → logprob: -17.750160217285156
    9. ' .' → logprob: -17.875160217285156
    10. '.process' → logprob: -19.125160217285156

Token 489: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23457373678684235
    2. '()
' → logprob: -1.9845737218856812
    3. 'if' → logprob: -3.2345738410949707
    4. '
' → logprob: -3.9845738410949707
    5. '()

' → logprob: -5.109573841094971
    6. '<|end|>' → logprob: -5.109573841094971
    7. '(
' → logprob: -6.859573841094971
    8. '```' → logprob: -7.984573841094971
    9. '(' → logprob: -9.984573364257812
    10. '

' → logprob: -10.484573364257812

Token 490: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.610702363715973e-06
    2. '
' → logprob: -12.000009536743164
    3. ' if' → logprob: -13.000009536743164
    4. '```' → logprob: -13.750009536743164
    5. '\n' → logprob: -17.125009536743164
    6. 'main' → logprob: -17.250009536743164
    7. '  
' → logprob: -17.625009536743164
    8. '    
' → logprob: -18.250009536743164
    9. '\' → logprob: -18.250009536743164
    10. '\
' → logprob: -18.375009536743164

Token 491: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.12695005536079407
    2. '__' → logprob: -2.1269500255584717
    3. '_name' → logprob: -11.37695026397705
    4. ' name' → logprob: -12.75195026397705
    5. 'name' → logprob: -12.87695026397705
    6. ' ' → logprob: -13.00195026397705
    7. '_' → logprob: -13.37695026397705
    8. ' _' → logprob: -15.50195026397705
    9. '___' → logprob: -15.50195026397705
    10. '/__' → logprob: -15.50195026397705

Token 492: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5119591355323792
    2. ' ==' → logprob: -1.0119590759277344
    3. ' __' → logprob: -4.011959075927734
    4. '==' → logprob: -4.511959075927734
    5. '.__' → logprob: -5.261959075927734
    6. 'name' → logprob: -6.386959075927734
    7. '.name' → logprob: -7.511959075927734
    8. '__.__' → logprob: -8.886959075927734
    9. '=="' → logprob: -9.011959075927734
    10. 'if' → logprob: -9.136959075927734

Token 493: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.246537173457909e-06
    2. '==' → logprob: -12.500003814697266
    3. '__.__' → logprob: -15.750003814697266
    4. ' ==' → logprob: -16.250003814697266
    5. '__
' → logprob: -16.250003814697266
    6. '___' → logprob: -16.625003814697266
    7. '____' → logprob: -17.000003814697266
    8. '=="' → logprob: -17.250003814697266
    9. '_' → logprob: -18.000003814697266
    10. '__

' → logprob: -18.375003814697266

Token 494: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.607100248336792
    2. '__' → logprob: -1.107100248336792
    3. ' ==' → logprob: -2.107100248336792
    4. '=="' → logprob: -5.857100486755371
    5. '=='' → logprob: -9.857100486755371
    6. '=' → logprob: -10.232100486755371
    7. '===' → logprob: -12.232100486755371
    8. '"' → logprob: -12.357100486755371
    9. '___' → logprob: -13.232100486755371
    10. '==
' → logprob: -13.607100486755371

Token 495: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005248937290161848
    2. ''' → logprob: -5.2552490234375
    3. ' "__' → logprob: -11.1302490234375
    4. '__' → logprob: -15.2552490234375
    5. ' '__' → logprob: -16.0052490234375
    6. ''"' → logprob: -17.0052490234375
    7. '"_' → logprob: -17.3802490234375
    8. '"'' → logprob: -18.1302490234375
    9. '("__' → logprob: -18.5052490234375
    10. '   ' → logprob: -18.6302490234375

Token 496: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.011193772777915001
    2. '__' → logprob: -4.511193752288818
    3. 'name' → logprob: -9.386194229125977
    4. '"' → logprob: -9.886194229125977
    5. '_main' → logprob: -11.886194229125977
    6. ''' → logprob: -13.886194229125977
    7. '-main' → logprob: -14.511194229125977
    8. ' main' → logprob: -14.636194229125977
    9. '__":
' → logprob: -14.636194229125977
    10. '```' → logprob: -15.136194229125977

Token 497: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.02985728532075882
    2. '__' → logprob: -3.5298573970794678
    3. '__':
' → logprob: -9.154857635498047
    4. '_' → logprob: -14.404857635498047
    5. '__["' → logprob: -15.529857635498047
    6. '__
' → logprob: -16.154857635498047
    7. '__.' → logprob: -16.404857635498047
    8. '__.__' → logprob: -16.779857635498047
    9. '__
' → logprob: -17.154857635498047
    10. '```' → logprob: -17.654857635498047

Token 498: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004138599149882793
    2. ''' → logprob: -5.754138469696045
    3. '__' → logprob: -7.004138469696045
    4. 'main' → logprob: -9.879138946533203
    5. '   ' → logprob: -14.379138946533203
    6. ' "__' → logprob: -15.254138946533203
    7. ' ' → logprob: -15.629138946533203
    8. ' main' → logprob: -16.504138946533203
    9. '_main' → logprob: -17.379138946533203
    10. '___' → logprob: -17.629138946533203

Token 499: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -16.75
    3. '	main' → logprob: -22.125
    4. '   ' → logprob: -24.75
    5. '
' → logprob: -24.875
    6. '.main' → logprob: -25.625
    7. '(main' → logprob: -26.375
    8. 'mai' → logprob: -27.25
    9. '_main' → logprob: -27.375
    10. '```' → logprob: -27.5

Token 500: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009175319573841989
    2. '()
' → logprob: -7.000917434692383
    3. '(' → logprob: -13.000917434692383
    4. ' ()' → logprob: -13.625917434692383
    5. '()

' → logprob: -14.000917434692383
    6. '()\' → logprob: -14.250917434692383
    7. '()`' → logprob: -14.875917434692383
    8. '()<' → logprob: -14.875917434692383
    9. '()"' → logprob: -15.875917434692383
    10. '(
' → logprob: -16.125917434692383


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 498
Tokens correctement prédits (1ère position, stricte): 265
Tokens correctement prédits (1ère position, avec adaptation): 299
Tokens correctement prédits (top 10): 447
Précision stricte (1ère position): 53.21%
Précision adaptée (1ère position): 60.04%
Précision (top 10): 89.76%
================================================================================
