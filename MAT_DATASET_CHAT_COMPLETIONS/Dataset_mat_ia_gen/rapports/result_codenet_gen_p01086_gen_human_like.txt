================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    import sys
    target_pattern = [5, 7, 5, 7, 7]
    lines = sys.stdin.read().splitlines()
    idx = 0
    while True:
        if idx >= len(lines):
            break
        n_line = lines[idx].strip()
        idx += 1
        if n_line == '0':
            break
        n = int(n_line)
        words = lines[idx:idx+n]
        idx += n
        # Precompute length of each word
        lengths = [len(w) for w in words]
        # Try all possible starting positions s
        # For each s, try to find 5 segments with letter counts matching target_pattern
        for s in range(n):
            pos = s
            matched = True
            for segment_len in target_pattern:
                count_letters = 0
                # collect words until count_letters == segment_len or exceed
                while pos < n and count_letters < segment_len:
                    count_letters += lengths[pos]
                    pos += 1
                if count_letters != segment_len:
                    matched = False
                    break
            if matched:
                print(s+1)
                break

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.26634421944618225
    2. '\n' → logprob: -1.7663441896438599
    3. '    ' → logprob: -4.51634407043457
    4. '   ' → logprob: -4.51634407043457
    5. '    
' → logprob: -4.64134407043457
    6. ' 
' → logprob: -5.01634407043457
    7. ''' → logprob: -5.14134407043457
    8. '(' → logprob: -5.51634407043457
    9. ' ' → logprob: -5.89134407043457
    10. '\r' → logprob: -6.26634407043457

Token 4: ' import' (ID: 1588)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4218117594718933
    2. '   ' → logprob: -1.671811819076538
    3. 'pass' → logprob: -2.421811819076538
    4. 'p' → logprob: -3.671811819076538
    5. 'return' → logprob: -4.171811580657959
    6. 'r' → logprob: -4.421811580657959
    7. '#' → logprob: -5.171811580657959
    8. '    ' → logprob: -6.171811580657959
    9. 'a' → logprob: -6.296811580657959
    10. 'n' → logprob: -6.796811580657959

Token 5: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.026744691655039787
    2. ' sys' → logprob: -4.276744842529297
    3. ' ' → logprob: -4.901744842529297
    4. ' math' → logprob: -5.651744842529297
    5. ' numpy' → logprob: -7.401744842529297
    6. ' json' → logprob: -7.901744842529297
    7. ' tensorflow' → logprob: -9.276744842529297
    8. ' space' → logprob: -9.526744842529297
    9. ' random' → logprob: -9.776744842529297
    10. ' pandas' → logprob: -10.026744842529297

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2184634655714035
    2. '\n' → logprob: -3.34346342086792
    3. 'newline' → logprob: -3.46846342086792
    4. '\' → logprob: -3.71846342086792
    5. '<|end|>' → logprob: -3.84346342086792
    6. '.readline' → logprob: -4.21846342086792
    7. 'import' → logprob: -4.34346342086792
    8. '```' → logprob: -4.59346342086792
    9. '   ' → logprob: -4.71846342086792
    10. '[' → logprob: -5.46846342086792

Token 7: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.14075028896331787
    2. '   ' → logprob: -3.2657504081726074
    3. '[' → logprob: -4.140750408172607
    4. 'newline' → logprob: -4.515750408172607
    5. '\n' → logprob: -4.515750408172607
    6. '.readline' → logprob: -4.890750408172607
    7. 'print' → logprob: -5.265750408172607
    8. 'import' → logprob: -5.515750408172607
    9. '.stdout' → logprob: -5.515750408172607
    10. '    
' → logprob: -5.515750408172607

Token 8: ' target' (ID: 3783)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34727635979652405
    2. ' ' → logprob: -2.347276449203491
    3. '    ' → logprob: -2.347276449203491
    4. '\n' → logprob: -3.722276449203491
    5. '\' → logprob: -4.222276210784912
    6. '.' → logprob: -4.722276210784912
    7. '[' → logprob: -4.722276210784912
    8. 'import' → logprob: -4.847276210784912
    9. 'newline' → logprob: -5.222276210784912
    10. '  ' → logprob: -5.347276210784912

Token 9: '_pattern' (ID: 50002)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6612535119056702
    2. '_' → logprob: -0.7862535119056702
    3. ' =' → logprob: -4.786253452301025
    4. '_target' → logprob: -5.661253452301025
    5. '=' → logprob: -5.786253452301025
    6. ')' → logprob: -6.036253452301025
    7. '_path' → logprob: -6.286253452301025
    8. '[' → logprob: -6.286253452301025
    9. ' .' → logprob: -6.911253452301025
    10. '_url' → logprob: -7.286253452301025

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27714982628822327
    2. '=' → logprob: -1.5271497964859009
    3. '_' → logprob: -3.9021499156951904
    4. 's' → logprob: -5.527149677276611
    5. ')' → logprob: -8.52715015411377
    6. '_space' → logprob: -9.15215015411377
    7. ' ' → logprob: -9.65215015411377
    8. '.' → logprob: -9.77715015411377
    9. ',' → logprob: -10.27715015411377
    10. '(' → logprob: -10.40215015411377

Token 11: ' [' (ID: 723)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.38283759355545044
    2. ' '' → logprob: -2.2578375339508057
    3. '"' → logprob: -2.6328375339508057
    4. ' r' → logprob: -3.0078375339508057
    5. 'r' → logprob: -3.3828375339508057
    6. ' ' → logprob: -3.8828375339508057
    7. ' sys' → logprob: -4.007837772369385
    8. ''' → logprob: -4.382837772369385
    9. '   ' → logprob: -6.132837772369385
    10. 'sys' → logprob: -7.132837772369385

Token 12: '5' (ID: 20)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.39969971776008606
    2. '"' → logprob: -2.5246996879577637
    3. '0' → logprob: -2.8996996879577637
    4. ''t' → logprob: -3.0246996879577637
    5. '']' → logprob: -3.6496996879577637
    6. ''"' → logprob: -4.399699687957764
    7. ''a' → logprob: -4.524699687957764
    8. ''*' → logprob: -4.649699687957764
    9. ']' → logprob: -5.024699687957764
    10. ''r' → logprob: -5.149699687957764

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031857939902693033
    2. ']' → logprob: -5.878185749053955
    3. ' ,' → logprob: -8.503186225891113
    4. '0' → logprob: -9.253186225891113
    5. ',
' → logprob: -10.003186225891113
    6. ' ]' → logprob: -11.378186225891113
    7. '6' → logprob: -12.503186225891113
    8. '   ' → logprob: -12.628186225891113
    9. ' ' → logprob: -12.628186225891113
    10. '1' → logprob: -13.003186225891113

Token 14: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02850116416811943
    2. '0' → logprob: -5.153501033782959
    3. '4' → logprob: -5.403501033782959
    4. '6' → logprob: -5.528501033782959
    5. '1' → logprob: -5.778501033782959
    6. '2' → logprob: -6.153501033782959
    7. '3' → logprob: -6.403501033782959
    8. '7' → logprob: -6.653501033782959
    9. '9' → logprob: -6.653501033782959
    10. ''' → logprob: -7.028501033782959

Token 15: '7' (ID: 22)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.741907000541687
    2. '7' → logprob: -1.866907000541687
    3. '6' → logprob: -2.3669071197509766
    4. '10' → logprob: -2.7419071197509766
    5. '9' → logprob: -2.8669071197509766
    6. '3' → logprob: -2.9919071197509766
    7. '1' → logprob: -3.7419071197509766
    8. '4' → logprob: -3.8669071197509766
    9. '2' → logprob: -3.9919071197509766
    10. '8' → logprob: -3.9919071197509766

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10028290003538132
    2. ']' → logprob: -2.350282907485962
    3. ',
' → logprob: -10.600282669067383
    4. '   ' → logprob: -11.350282669067383
    5. '0' → logprob: -11.850282669067383
    6. ' ,' → logprob: -12.100282669067383
    7. ' ]' → logprob: -12.225282669067383
    8. ')' → logprob: -12.600282669067383
    9. '7' → logprob: -12.600282669067383
    10. '9' → logprob: -13.475282669067383

Token 17: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14722120761871338
    2. '9' → logprob: -2.397221088409424
    3. '10' → logprob: -3.772221088409424
    4. '11' → logprob: -5.022221088409424
    5. '1' → logprob: -5.522221088409424
    6. '4' → logprob: -6.022221088409424
    7. '3' → logprob: -6.397221088409424
    8. '13' → logprob: -6.647221088409424
    9. '8' → logprob: -6.772221088409424
    10. '2' → logprob: -6.772221088409424

Token 18: '5' (ID: 20)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '11' → logprob: -0.6203778982162476
    2. '9' → logprob: -1.2453778982162476
    3. '10' → logprob: -2.620378017425537
    4. ' ' → logprob: -2.870378017425537
    5. '3' → logprob: -4.495378017425537
    6. '8' → logprob: -4.745378017425537
    7. '2' → logprob: -4.870378017425537
    8. '4' → logprob: -5.495378017425537
    9. '12' → logprob: -5.620378017425537
    10. '5' → logprob: -5.745378017425537

Token 19: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002483626827597618
    2. ',' → logprob: -6.00248384475708
    3. ' ]' → logprob: -12.627483367919922
    4. '   ' → logprob: -13.627483367919922
    5. ')' → logprob: -13.752483367919922
    6. '']' → logprob: -14.377483367919922
    7. '],' → logprob: -14.877483367919922
    8. '])' → logprob: -15.252483367919922
    9. '`]' → logprob: -15.627483367919922
    10. '0' → logprob: -15.877483367919922

Token 20: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5951532125473022
    2. ' ' → logprob: -0.9701532125473022
    3. ']' → logprob: -3.470153331756592
    4. ' ]' → logprob: -3.720153331756592
    5. '3' → logprob: -5.470153331756592
    6. '5' → logprob: -5.595153331756592
    7. '7' → logprob: -6.345153331756592
    8. '1' → logprob: -6.720153331756592
    9. '2' → logprob: -6.720153331756592
    10. '6' → logprob: -6.845153331756592

Token 21: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.38660821318626404
    2. ']' → logprob: -1.2616082429885864
    3. '3' → logprob: -4.136608123779297
    4. '5' → logprob: -4.136608123779297
    5. '])' → logprob: -5.761608123779297
    6. '4' → logprob: -6.636608123779297
    7. '2' → logprob: -7.636608123779297
    8. '6' → logprob: -8.761608123779297
    9. '1' → logprob: -9.136608123779297
    10. '0' → logprob: -9.511608123779297

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012609132565557957
    2. ']' → logprob: -4.387609004974365
    3. ' ,' → logprob: -9.887609481811523
    4. '   ' → logprob: -11.137609481811523
    5. '5' → logprob: -11.762609481811523
    6. ',
' → logprob: -12.137609481811523
    7. ' ]' → logprob: -12.262609481811523
    8. '7' → logprob: -12.387609481811523
    9. '4' → logprob: -12.887609481811523
    10. ' ' → logprob: -13.262609481811523

Token 23: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6850171089172363
    2. ' ' → logprob: -0.9350171089172363
    3. '4' → logprob: -2.6850171089172363
    4. '7' → logprob: -4.060017108917236
    5. '9' → logprob: -5.060017108917236
    6. '6' → logprob: -5.310017108917236
    7. '3' → logprob: -5.560017108917236
    8. '10' → logprob: -6.310017108917236
    9. '8' → logprob: -8.060016632080078
    10. '1' → logprob: -8.810016632080078

Token 24: '7' (ID: 22)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5762888193130493
    2. '7' → logprob: -0.8262888193130493
    3. '0' → logprob: -9.451289176940918
    4. ']' → logprob: -9.576289176940918
    5. '8' → logprob: -10.576289176940918
    6. '1' → logprob: -10.826289176940918
    7. ')' → logprob: -10.826289176940918
    8. '9' → logprob: -10.951289176940918
    9. '}' → logprob: -10.951289176940918
    10. ' ' → logprob: -11.076289176940918

Token 25: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.245724504580721e-05
    2. ',' → logprob: -9.375092506408691
    3. '   ' → logprob: -12.875092506408691
    4. ']
' → logprob: -13.375092506408691
    5. ' ]' → logprob: -13.375092506408691
    6. ')' → logprob: -13.875092506408691
    7. '']' → logprob: -14.875092506408691
    8. '],' → logprob: -15.750092506408691
    9. ']

' → logprob: -15.875092506408691
    10. ',
' → logprob: -16.375091552734375

Token 26: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4016951620578766
    2. '   ' → logprob: -1.1516951322555542
    3. '    
' → logprob: -6.026695251464844
    4. ',' → logprob: -6.151695251464844
    5. '\n' → logprob: -6.776695251464844
    6. '```' → logprob: -6.776695251464844
    7. ':' → logprob: -6.901695251464844
    8. ',
' → logprob: -6.901695251464844
    9. 'newline' → logprob: -7.026695251464844
    10. ' ' → logprob: -7.401695251464844

Token 27: ' lines' (ID: 8698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2514508366584778
    2. '   ' → logprob: -2.126450777053833
    3. '\n' → logprob: -4.501451015472412
    4. 'n' → logprob: -4.626451015472412
    5. ' lines' → logprob: -4.876451015472412
    6. ' ' → logprob: -4.876451015472412
    7. ' for' → logprob: -5.126451015472412
    8. ' 
' → logprob: -5.126451015472412
    9. '\' → logprob: -5.376451015472412
    10. '    
' → logprob: -5.376451015472412

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05046495050191879
    2. '=' → logprob: -3.0504648685455322
    3. '_' → logprob: -7.300465106964111
    4. '.' → logprob: -8.050464630126953
    5. '=[]' → logprob: -8.300464630126953
    6. '[' → logprob: -8.300464630126953
    7. '[:]' → logprob: -8.800464630126953
    8. ' ' → logprob: -10.050464630126953
    9. '_count' → logprob: -10.300464630126953
    10. '.append' → logprob: -10.675464630126953

Token 29: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.07351744920015335
    2. 'sys' → logprob: -3.0735175609588623
    3. ' []' → logprob: -3.8235175609588623
    4. '[]' → logprob: -6.073517322540283
    5. ' [' → logprob: -8.823517799377441
    6. ' ' → logprob: -9.073517799377441
    7. ' list' → logprob: -9.948517799377441
    8. '   ' → logprob: -10.073517799377441
    9. '[' → logprob: -10.448517799377441
    10. 'list' → logprob: -11.073517799377441

Token 30: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.23931938409805298
    2. '.' → logprob: -2.114319324493408
    3. '.argv' → logprob: -2.489319324493408
    4. '.stdout' → logprob: -4.864319324493408
    5. '.exit' → logprob: -7.989319324493408
    6. ' .' → logprob: -8.239319801330566
    7. '.readline' → logprob: -8.239319801330566
    8. '.std' → logprob: -8.864319801330566
    9. '.stderr' → logprob: -8.989319801330566
    10. '.version' → logprob: -9.989319801330566

Token 31: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.04962563514709473
    2. '.readlines' → logprob: -3.2996256351470947
    3. '.' → logprob: -4.549625396728516
    4. '.read' → logprob: -7.049625396728516
    5. 'read' → logprob: -10.924625396728516
    6. ' readline' → logprob: -11.049625396728516
    7. '```' → logprob: -11.549625396728516
    8. '.strip' → logprob: -11.674625396728516
    9. '.write' → logprob: -11.924625396728516
    10. ')' → logprob: -12.424625396728516

Token 32: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009875434450805187
    2. '().' → logprob: -4.759875297546387
    3. '(' → logprob: -6.759875297546387
    4. 'line' → logprob: -10.759875297546387
    5. ' ()' → logprob: -10.884875297546387
    6. '())' → logprob: -12.009875297546387
    7. 'lines' → logprob: -12.009875297546387
    8. '()]' → logprob: -12.009875297546387
    9. '_lines' → logprob: -12.134875297546387
    10. '()

' → logprob: -12.259875297546387

Token 33: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20144248008728027
    2. 'strip' → logprob: -1.7014424800872803
    3. 'rstrip' → logprob: -10.45144271850586
    4. ' split' → logprob: -16.20144271850586
    5. 'replace' → logprob: -16.57644271850586
    6. '```' → logprob: -17.20144271850586
    7. '(split' → logprob: -18.32644271850586
    8. 'decode' → logprob: -18.57644271850586
    9. 'str' → logprob: -19.45144271850586
    10. 'spl' → logprob: -19.57644271850586

Token 34: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5541045665740967
    2. '('' → logprob: -1.4291045665740967
    3. '('\' → logprob: -1.8041045665740967
    4. '(' → logprob: -4.554104804992676
    5. '()' → logprob: -4.804104804992676
    6. '("("' → logprob: -6.429104804992676
    7. '("\' → logprob: -7.679104804992676
    8. 'line' → logprob: -8.179104804992676
    9. '("' → logprob: -9.429104804992676
    10. '```' → logprob: -11.054104804992676

Token 35: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.432518421206623e-05
    2. '(' → logprob: -10.0000638961792
    3. ' ()' → logprob: -12.3750638961792
    4. '()`' → logprob: -12.6250638961792
    5. '()]' → logprob: -12.7500638961792
    6. '`()' → logprob: -12.8750638961792
    7. '())' → logprob: -13.7500638961792
    8. '()
' → logprob: -14.3750638961792
    9. '(),' → logprob: -14.3750638961792
    10. '()(' → logprob: -14.5000638961792

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06019527465105057
    2. '
' → logprob: -3.435195207595825
    3. '    
' → logprob: -4.435195446014404
    4. ' for' → logprob: -5.435195446014404
    5. '<|end|>' → logprob: -5.810195446014404
    6. 'for' → logprob: -6.310195446014404
    7. ' ' → logprob: -6.935195446014404
    8. '  
' → logprob: -7.310195446014404
    9. '```' → logprob: -7.310195446014404
    10. ',' → logprob: -7.810195446014404

Token 37: ' idx' (ID: 14016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11414788663387299
    2. ' for' → logprob: -2.864147901535034
    3. 'for' → logprob: -3.489147901535034
    4. '    
' → logprob: -4.864147663116455
    5. 'result' → logprob: -5.864147663116455
    6. '```' → logprob: -6.364147663116455
    7. ' lines' → logprob: -6.864147663116455
    8. 'n' → logprob: -7.239147663116455
    9. ' ' → logprob: -7.239147663116455
    10. '[' → logprob: -7.614147663116455

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01708315871655941
    2. '=' → logprob: -4.142083168029785
    3. '_' → logprob: -7.392083168029785
    4. ' +=' → logprob: -8.392083168029785
    5. ' ' → logprob: -9.267083168029785
    6. ')' → logprob: -10.142083168029785
    7. '+' → logprob: -10.642083168029785
    8. ' =)' → logprob: -11.392083168029785
    9. '<|end|>' → logprob: -11.767083168029785
    10. '  ' → logprob: -12.767083168029785

Token 39: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '1' → logprob: -16.000709533691406
    4. '   ' → logprob: -17.625709533691406
    5. '۰' → logprob: -18.875709533691406
    6. '[' → logprob: -19.000709533691406
    7. '```' → logprob: -19.375709533691406
    8. '2' → logprob: -19.500709533691406
    9. '<|end|>' → logprob: -19.625709533691406
    10. '`' → logprob: -20.063209533691406

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'len' → logprob: -16.250009536743164
    4. '1' → logprob: -16.500009536743164
    5. '```' → logprob: -17.500009536743164
    6. '-' → logprob: -18.437509536743164
    7. '   ' → logprob: -18.562509536743164
    8. '[' → logprob: -18.562509536743164
    9. '2' → logprob: -19.187509536743164
    10. '`' → logprob: -19.562509536743164

Token 41: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8382430076599121
    2. '```' → logprob: -1.088243007659912
    3. '<|end|>' → logprob: -2.463243007659912
    4. ' while' → logprob: -2.963243007659912
    5. 'while' → logprob: -3.838243007659912
    6. '   ' → logprob: -4.213243007659912
    7. '    
' → logprob: -4.463243007659912
    8. ':' → logprob: -4.588243007659912
    9. ',' → logprob: -4.838243007659912
    10. ' 
' → logprob: -5.213243007659912

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25343963503837585
    2. '```' → logprob: -2.1284396648406982
    3. ' while' → logprob: -2.8784396648406982
    4. 'while' → logprob: -3.5034396648406982
    5. '
' → logprob: -5.128439426422119
    6. ' ' → logprob: -5.753439426422119
    7. ',' → logprob: -6.628439426422119
    8. '    
' → logprob: -6.628439426422119
    9. '``' → logprob: -6.753439426422119
    10. '    ' → logprob: -7.003439426422119

Token 43: ' while' (ID: 2049)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.8919851779937744
    2. 'while' (adapté à ' while') → logprob: -1.2669851779937744
    3. '   ' → logprob: -1.8919851779937744
    4. ' while' → logprob: -2.7669851779937744
    5. '```' → logprob: -2.8919851779937744
    6. 'n' → logprob: -4.141984939575195
    7. ',' → logprob: -4.891984939575195
    8. '
' → logprob: -5.891984939575195
    9. ' ' → logprob: -5.891984939575195
    10. '`' → logprob: -5.891984939575195

Token 44: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.0004331725067459047
    2. 'idx' → logprob: -7.750432968139648
    3. '	idx' → logprob: -14.125432968139648
    4. ' ' → logprob: -14.375432968139648
    5. '(idx' → logprob: -14.500432968139648
    6. ' len' → logprob: -15.250432968139648
    7. ' True' → logprob: -15.875432968139648
    8. '_idx' → logprob: -16.00043296813965
    9. 'Idx' → logprob: -17.25043296813965
    10. '[idx' → logprob: -17.37543296813965

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.339776832144707e-05
    2. ':
' → logprob: -10.000082969665527
    3. '   ' → logprob: -10.625082969665527
    4. '       ' → logprob: -12.000082969665527
    5. '):' → logprob: -12.750082969665527
    6. ':**' → logprob: -13.250082969665527
    7. '():' → logprob: -13.750082969665527
    8. ' :' → logprob: -14.125082969665527
    9. '    ' → logprob: -15.625082969665527
    10. ' and' → logprob: -16.000083923339844

Token 46: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027083540335297585
    2. '   ' → logprob: -4.527083396911621
    3. '    ' → logprob: -4.527083396911621
    4. ' ' → logprob: -5.527083396911621
    5. '<|end|>' → logprob: -8.152083396911621
    6. '  ' → logprob: -8.777083396911621
    7. '```' → logprob: -9.027083396911621
    8. '     ' → logprob: -9.527083396911621
    9. 'if' → logprob: -9.652083396911621
    10. '        
' → logprob: -10.152083396911621

Token 47: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4090738594532013
    2. ' ' → logprob: -1.784073829650879
    3. ' if' → logprob: -2.284073829650879
    4. ' i' → logprob: -3.909073829650879
    5. 'if' (adapté à ' if') → logprob: -4.034073829650879
    6. '   ' → logprob: -4.409073829650879
    7. '    ' → logprob: -5.159073829650879
    8. 't' → logprob: -5.534073829650879
    9. 'n' → logprob: -5.659073829650879
    10. '       ' → logprob: -7.284073829650879

Token 48: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.0005002511315979064
    2. 'idx' → logprob: -7.625500202178955
    3. ' not' → logprob: -12.375500679016113
    4. '	idx' → logprob: -12.875500679016113
    5. ' len' → logprob: -13.375500679016113
    6. '(idx' → logprob: -13.875500679016113
    7. '[idx' → logprob: -14.000500679016113
    8. '_idx' → logprob: -14.125500679016113
    9. ' lines' → logprob: -14.750500679016113
    10. ' index' → logprob: -15.125500679016113

Token 49: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.015432731248438358
    2. '>=' → logprob: -4.265432834625244
    3. ' ' → logprob: -7.515432834625244
    4. '+' → logprob: -7.890432834625244
    5. ' <' → logprob: -8.515432357788086
    6. ' ==' → logprob: -9.390432357788086
    7. ' >' → logprob: -11.015432357788086
    8. ' +' → logprob: -11.140432357788086
    9. '==' → logprob: -11.140432357788086
    10. ']>=' → logprob: -12.265432357788086

Token 50: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20141392946243286
    2. ' len' → logprob: -1.701413869857788
    3. '(len' → logprob: -15.201414108276367
    4. '<len' → logprob: -16.076414108276367
    5. '   ' → logprob: -16.201414108276367
    6. '=len' → logprob: -16.576414108276367
    7. '	len' → logprob: -16.701414108276367
    8. '[len' → logprob: -17.576414108276367
    9. ',len' → logprob: -17.701414108276367
    10. 'length' → logprob: -18.201414108276367

Token 51: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.000204851632588543
    2. '(' → logprob: -8.500205039978027
    3. ' lines' → logprob: -14.125205039978027
    4. '(line' → logprob: -15.250205039978027
    5. '(
' → logprob: -16.00020408630371
    6. 'lines' → logprob: -16.50020408630371
    7. ' (' → logprob: -17.00020408630371
    8. '	lines' → logprob: -17.37520408630371
    9. '(

' → logprob: -18.12520408630371
    10. '(rows' → logprob: -18.25020408630371

Token 52: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6722831130027771
    2. ' or' → logprob: -1.0472831726074219
    3. ')' → logprob: -2.047283172607422
    4. ':' → logprob: -5.672283172607422
    5. '):
' → logprob: -5.672283172607422
    6. ' ):' → logprob: -6.797283172607422
    7. 'or' → logprob: -7.422283172607422
    8. ' )' → logprob: -8.172283172607422
    9. ' and' → logprob: -8.422283172607422
    10. '   ' → logprob: -8.547283172607422

Token 53: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14281271398067474
    2. '       ' → logprob: -2.017812728881836
    3. ':' → logprob: -9.767812728881836
    4. '   ' → logprob: -10.517812728881836
    5. '10' → logprob: -12.267812728881836
    6. ' break' → logprob: -12.267812728881836
    7. '          ' → logprob: -12.392812728881836
    8. '               ' → logprob: -12.767812728881836
    9. ':
' → logprob: -12.767812728881836
    10. '```' → logprob: -12.767812728881836

Token 54: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43380245566368103
    2. '       ' → logprob: -1.1838024854660034
    3. ' break' → logprob: -3.433802366256714
    4. 'break' (adapté à ' break') → logprob: -4.558802604675293
    5. ' return' → logprob: -6.433802604675293
    6. 'return' → logprob: -7.308802604675293
    7. '   ' → logprob: -7.808802604675293
    8. '               ' → logprob: -8.558802604675293
    9. '```' → logprob: -9.308802604675293
    10. '	break' → logprob: -9.683802604675293

Token 55: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6842624545097351
    2. '
' → logprob: -1.0592625141143799
    3. '        
' → logprob: -3.30926251411438
    4. '\n' → logprob: -3.30926251411438
    5. '    
' → logprob: -3.30926251411438
    6. '   ' → logprob: -4.434262275695801
    7. '  
' → logprob: -5.309262275695801
    8. '\' → logprob: -5.434262275695801
    9. '    ' → logprob: -5.684262275695801
    10. '<|end|>' → logprob: -5.684262275695801

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2779761552810669
    2. '
' → logprob: -1.902976155281067
    3. '```' → logprob: -3.7779760360717773
    4. ':' → logprob: -4.277976036071777
    5. '    
' → logprob: -4.402976036071777
    6. '\n' → logprob: -4.777976036071777
    7. '   ' → logprob: -4.777976036071777
    8. '        
' → logprob: -5.027976036071777
    9. '\' → logprob: -5.402976036071777
    10. ':
' → logprob: -5.527976036071777

Token 57: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018070686608552933
    2. '   ' → logprob: -5.393070697784424
    3. ' line' → logprob: -5.393070697784424
    4. 'line' → logprob: -6.018070697784424
    5. 'n' (adapté à ' n') → logprob: -6.393070697784424
    6. '
' → logprob: -6.643070697784424
    7. '```' → logprob: -6.893070697784424
    8. '        
' → logprob: -8.268070220947266
    9. 'sentence' → logprob: -8.518070220947266
    10. 's' → logprob: -8.643070220947266

Token 58: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06999679654836655
    2. '_' → logprob: -3.8199968338012695
    3. 'um' → logprob: -3.8199968338012695
    4. '=' → logprob: -4.3199968338012695
    5. ' ' → logprob: -5.5699968338012695
    6. '   ' → logprob: -5.5699968338012695
    7. 'umber' → logprob: -6.6949968338012695
    8. '_lines' → logprob: -7.8199968338012695
    9. '_line' → logprob: -7.9449968338012695
    10. '    ' → logprob: -8.56999683380127

Token 59: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03642768785357475
    2. ' =' → logprob: -3.5364277362823486
    3. '=' → logprob: -5.6614274978637695
    4. '_len' → logprob: -5.9114274978637695
    5. '_length' → logprob: -8.28642749786377
    6. '_' → logprob: -9.53642749786377
    7. ' ' → logprob: -10.78642749786377
    8. '_size' → logprob: -10.78642749786377
    9. '   ' → logprob: -11.16142749786377
    10. '_s' → logprob: -11.41142749786377

Token 60: ' lines' (ID: 8698)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2616352438926697
    2. ' lines' → logprob: -1.5116353034973145
    3. 'int' → logprob: -4.7616353034973145
    4. 'lines' → logprob: -7.0116353034973145
    5. ' len' → logprob: -8.761634826660156
    6. ' ' → logprob: -10.511634826660156
    7. 'len' → logprob: -12.011634826660156
    8. '    ' → logprob: -12.886634826660156
    9. '=int' → logprob: -13.261634826660156
    10. ' n' → logprob: -13.511634826660156

Token 61: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.018183540552854538
    2. '[' → logprob: -4.018183708190918
    3. ' [' → logprob: -11.643183708190918
    4. '   ' → logprob: -11.643183708190918
    5. '```' → logprob: -11.893183708190918
    6. '[token' → logprob: -13.393183708190918
    7. '       ' → logprob: -13.518183708190918
    8. '[id' → logprob: -13.518183708190918
    9. '[
' → logprob: -13.893183708190918
    10. '\[' → logprob: -14.143183708190918

Token 62: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00024715426843613386
    2. ' ]' → logprob: -9.12524700164795
    3. '])' → logprob: -9.25024700164795
    4. ']
' → logprob: -10.37524700164795
    5. '].' → logprob: -11.75024700164795
    6. ']+' → logprob: -14.00024700164795
    7. '][' → logprob: -14.12524700164795
    8. ')' → logprob: -14.37524700164795
    9. '[' → logprob: -15.75024700164795
    10. ' ])' → logprob: -15.87524700164795

Token 63: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.318681188422488e-05
    2. 'split' → logprob: -11.50001335144043
    3. 'rstrip' → logprob: -12.75001335144043
    4. 'isdigit' → logprob: -17.50001335144043
    5. 'startswith' → logprob: -18.62501335144043
    6. 'str' → logprob: -19.25001335144043
    7. '```' → logprob: -20.50001335144043
    8. ' strip' → logprob: -20.62501335144043
    9. 'l' → logprob: -20.62501335144043
    10. '.strip' → logprob: -20.75001335144043

Token 64: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.126521035796031e-05
    2. '(' → logprob: -9.750091552734375
    3. '()
' → logprob: -10.875091552734375
    4. '()==' → logprob: -12.625091552734375
    5. '().' → logprob: -13.000091552734375
    6. '('' → logprob: -13.125091552734375
    7. '()`' → logprob: -14.000091552734375
    8. '())' → logprob: -14.000091552734375
    9. ')' → logprob: -14.375091552734375
    10. ' ()' → logprob: -14.625091552734375

Token 65: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5573921203613281
    2. ' if' → logprob: -1.3073921203613281
    3. '       ' → logprob: -2.057392120361328
    4. '<|end|>' → logprob: -4.807392120361328
    5. '   ' → logprob: -5.557392120361328
    6. ' ' → logprob: -5.682392120361328
    7. '    ' → logprob: -6.057392120361328
    8. '\' → logprob: -6.182392120361328
    9. '
' → logprob: -6.557392120361328
    10. '        
' → logprob: -6.682392120361328

Token 67: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5985996723175049
    2. '+' → logprob: -0.8485996723175049
    3. '+=' → logprob: -3.848599672317505
    4. ' +' → logprob: -6.848599433898926
    5. '++' → logprob: -10.723599433898926
    6. ' ' → logprob: -12.223599433898926
    7. '+++' → logprob: -12.723599433898926
    8. ' =' → logprob: -13.723599433898926
    9. ')' → logprob: -14.473599433898926
    10. '+='' → logprob: -14.473599433898926

Token 68: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078401252627373
    2. ' ' → logprob: -5.504078388214111
    3. '```' → logprob: -17.879077911376953
    4. '`' → logprob: -19.379077911376953
    5. '0' → logprob: -19.379077911376953
    6. ' ' → logprob: -20.066577911376953
    7. '１' → logprob: -20.254077911376953
    8. '2' → logprob: -20.691577911376953
    9. '+' → logprob: -21.191577911376953
    10. '   ' → logprob: -21.254077911376953

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -18.125003814697266
    4. '0' → logprob: -18.875003814697266
    5. '１' → logprob: -19.062503814697266
    6. '۱' → logprob: -20.062503814697266
    7. '`' → logprob: -20.187503814697266
    8. 'len' → logprob: -20.312503814697266
    9. '' → logprob: -20.500003814697266
    10. '-' → logprob: -20.750003814697266

Token 70: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026592059060931206
    2. '<|end|>' → logprob: -4.026592254638672
    3. '
' → logprob: -5.901592254638672
    4. '        
' → logprob: -6.526592254638672
    5. ' if' → logprob: -6.651592254638672
    6. 'if' → logprob: -7.026592254638672
    7. '```' → logprob: -7.276592254638672
    8. '   ' → logprob: -7.276592254638672
    9. '<|end|>' → logprob: -9.026592254638672
    10. '  
' → logprob: -9.401592254638672

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0064768604934215546
    2. ' if' → logprob: -5.881476879119873
    3. 'if' → logprob: -5.881476879119873
    4. '   ' → logprob: -7.256476879119873
    5. '<|end|>' → logprob: -9.131476402282715
    6. '```' → logprob: -11.631476402282715
    7. '     ' → logprob: -11.881476402282715
    8. '           ' → logprob: -11.881476402282715
    9. '	if' → logprob: -12.131476402282715
    10. '        
' → logprob: -12.131476402282715

Token 72: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10273813456296921
    2. ' if' → logprob: -2.35273814201355
    3. '       ' → logprob: -6.102737903594971
    4. 'i' → logprob: -8.852738380432129
    5. 'n' → logprob: -9.477738380432129
    6. 'try' → logprob: -10.727738380432129
    7. '```' → logprob: -10.977738380432129
    8. ' i' → logprob: -11.227738380432129
    9. '        
' → logprob: -12.102738380432129
    10. '
' → logprob: -12.352738380432129

Token 73: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1471744030714035
    2. ' n' → logprob: -2.02217435836792
    3. 'not' → logprob: -5.77217435836792
    4. 'n' → logprob: -6.77217435836792
    5. ' ' → logprob: -8.397174835205078
    6. ' ' → logprob: -12.772174835205078
    7. 'n't' → logprob: -13.772174835205078
    8. '	not' → logprob: -15.022174835205078
    9. '	n' → logprob: -15.147174835205078
    10. ' len' → logprob: -15.522174835205078

Token 74: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.004446020815521479
    2. '_' → logprob: -5.879446029663086
    3. 'ine' → logprob: -6.504446029663086
    4. '_lin' → logprob: -9.504446029663086
    5. 'line' → logprob: -11.504446029663086
    6. '_l' → logprob: -11.754446029663086
    7. '==' → logprob: -12.004446029663086
    8. '_LINE' → logprob: -12.004446029663086
    9. 'o' → logprob: -12.004446029663086
    10. '_lines' → logprob: -12.254446029663086

Token 75: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011061619967222214
    2. '==' → logprob: -4.511061668395996
    3. ' ' → logprob: -12.386061668395996
    4. '.is' → logprob: -12.636061668395996
    5. ' =' → logprob: -13.136061668395996
    6. '=' → logprob: -13.386061668395996
    7. '.strip' → logprob: -14.886061668395996
    8. ' ===' → logprob: -15.136061668395996
    9. '.' → logprob: -15.136061668395996
    10. 'is' → logprob: -15.636061668395996

Token 76: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04653412476181984
    2. '"' → logprob: -3.2965340614318848
    3. '''' → logprob: -4.921534061431885
    4. ' '' → logprob: -7.546534061431885
    5. '""' → logprob: -7.921534061431885
    6. ''end' → logprob: -9.546534538269043
    7. ''q' → logprob: -10.171534538269043
    8. ''a' → logprob: -10.421534538269043
    9. ''s' → logprob: -10.671534538269043
    10. '0' → logprob: -10.796534538269043

Token 77: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4295923709869385
    2. '0' → logprob: -1.0545923709869385
    3. '"' → logprob: -7.304592132568359
    4. '''' → logprob: -8.67959213256836
    5. ' '' → logprob: -11.80459213256836
    6. '':' → logprob: -11.92959213256836
    7. ''''' → logprob: -12.05459213256836
    8. '#' → logprob: -12.17959213256836
    9. ' ' → logprob: -12.17959213256836
    10. '```' → logprob: -12.92959213256836

Token 78: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.4812067151069641
    2. '<|end|>' → logprob: -1.3562066555023193
    3. ':' → logprob: -3.2312066555023193
    4. '\n' → logprob: -3.3562066555023193
    5. '<|end|>' → logprob: -3.8562066555023193
    6. ''' → logprob: -4.231206893920898
    7. '
' → logprob: -5.106206893920898
    8. '':
' → logprob: -5.731206893920898
    9. ':
' → logprob: -6.481206893920898
    10. '":' → logprob: -7.106206893920898

Token 79: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009706161916255951
    2. ':' → logprob: -4.884706020355225
    3. '       ' → logprob: -6.259706020355225
    4. ':
' → logprob: -9.009706497192383
    5. '<|end|>' → logprob: -10.634706497192383
    6. '          ' → logprob: -11.134706497192383
    7. '	       ' → logprob: -12.009706497192383
    8. '   ' → logprob: -12.509706497192383
    9. '		' → logprob: -12.884706497192383
    10. '<|end|>' → logprob: -12.884706497192383

Token 80: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06262483447790146
    2. '       ' → logprob: -2.937624931335449
    3. ' break' → logprob: -5.187624931335449
    4. '   ' → logprob: -7.187624931335449
    5. '<|end|>' → logprob: -8.06262493133545
    6. '\n' → logprob: -8.18762493133545
    7. '               ' → logprob: -8.81262493133545
    8. ' ' → logprob: -9.06262493133545
    9. '        ' → logprob: -9.06262493133545
    10. '	break' → logprob: -9.68762493133545

Token 81: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8240647315979004
    2. '       ' → logprob: -0.8240647315979004
    3. '<|end|>' → logprob: -2.1990647315979004
    4. '        
' → logprob: -4.5740647315979
    5. '<|end|>' → logprob: -7.0740647315979
    6. '```' → logprob: -8.449064254760742
    7. '\n' → logprob: -9.574064254760742
    8. '
' → logprob: -10.074064254760742
    9. '  
' → logprob: -10.199064254760742
    10. '    
' → logprob: -10.199064254760742

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007439678534865379
    2. '        
' → logprob: -5.507439613342285
    3. '
' → logprob: -6.382439613342285
    4. '<|end|>' → logprob: -6.632439613342285
    5. '```' → logprob: -8.757439613342285
    6. '  
' → logprob: -10.007439613342285
    7. '    
' → logprob: -10.757439613342285
    8. '   ' → logprob: -11.132439613342285
    9. '        ' → logprob: -11.382439613342285
    10. '<|end|>' → logprob: -11.382439613342285

Token 83: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.17619143426418304
    2. 'n' (adapté à ' n') → logprob: -1.9261914491653442
    3. '       ' → logprob: -4.176191329956055
    4. '   ' → logprob: -9.176191329956055
    5. ' count' → logprob: -9.176191329956055
    6. ' num' → logprob: -9.801191329956055
    7. ' length' → logprob: -10.301191329956055
    8. 'count' → logprob: -10.426191329956055
    9. 'num' → logprob: -10.801191329956055
    10. ' number' → logprob: -10.926191329956055

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04886406287550926
    2. '=' → logprob: -3.0488641262054443
    3. '=int' → logprob: -8.423864364624023
    4. '_' → logprob: -10.423864364624023
    5. ' ' → logprob: -11.423864364624023
    6. '_count' → logprob: -12.673864364624023
    7. '_lines' → logprob: -12.798864364624023
    8. '<|end|>' → logprob: -13.048864364624023
    9. 's' → logprob: -13.423864364624023
    10. '<|end|>' → logprob: -13.798864364624023

Token 85: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.029771320521831512
    2. 'int' → logprob: -3.529771327972412
    3. '[int' → logprob: -11.279770851135254
    4. ' ' → logprob: -12.654770851135254
    5. '=int' → logprob: -13.154770851135254
    6. '(int' → logprob: -13.904770851135254
    7. ']int' → logprob: -14.154770851135254
    8. '<int' → logprob: -14.529770851135254
    9. ' ' → logprob: -15.279770851135254
    10. '	int' → logprob: -15.529770851135254

Token 86: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.029751179739832878
    2. '(' → logprob: -3.5297510623931885
    3. ' (' → logprob: -14.40475082397461
    4. '(
' → logprob: -16.27975082397461
    5. '(

' → logprob: -17.52975082397461
    6. '(s' → logprob: -17.77975082397461
    7. '('' → logprob: -18.77975082397461
    8. 'n' → logprob: -18.77975082397461
    9. '((' → logprob: -18.90475082397461
    10. '(x' → logprob: -19.15475082397461

Token 87: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0011170001234859228
    2. ')' → logprob: -6.87611722946167
    3. 'line' → logprob: -10.001116752624512
    4. '_' → logprob: -11.376116752624512
    5. ' )' → logprob: -11.876116752624512
    6. '_LINE' → logprob: -12.251116752624512
    7. 'Line' → logprob: -12.751116752624512
    8. '_)' → logprob: -13.001116752624512
    9. ' line' → logprob: -13.501116752624512
    10. '[line' → logprob: -13.501116752624512

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.881560041918419e-05
    2. ' )' → logprob: -11.000039100646973
    3. ')
' → logprob: -11.125039100646973
    4. '       ' → logprob: -12.375039100646973
    5. '<|end|>' → logprob: -14.125039100646973
    6. '   ' → logprob: -14.250039100646973
    7. '`)' → logprob: -14.625039100646973
    8. ')`' → logprob: -15.750039100646973
    9. ')
' → logprob: -16.250038146972656
    10. '))' → logprob: -16.250038146972656

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033314721658825874
    2. '        
' → logprob: -6.128331661224365
    3. '<|end|>' → logprob: -7.503331661224365
    4. '   ' → logprob: -8.628331184387207
    5. ' lines' → logprob: -9.378331184387207
    6. ' ' → logprob: -9.503331184387207
    7. '        ' → logprob: -10.253331184387207
    8. ',' → logprob: -10.878331184387207
    9. 's' → logprob: -11.128331184387207
    10. '```' → logprob: -11.253331184387207

Token 90: ' words' (ID: 6391)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.8190857172012329
    2. '       ' → logprob: -1.444085717201233
    3. ' poem' → logprob: -2.5690855979919434
    4. ' text' → logprob: -3.5690855979919434
    5. ' words' → logprob: -3.8190855979919434
    6. 'count' → logprob: -4.069085597991943
    7. 'lines' → logprob: -4.319085597991943
    8. ' current' → logprob: -4.569085597991943
    9. 'text' → logprob: -4.694085597991943
    10. ' counts' → logprob: -4.694085597991943

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021776235662400723
    2. '=' → logprob: -6.502177715301514
    3. '_count' → logprob: -8.002177238464355
    4. '_lengths' → logprob: -9.627177238464355
    5. '_counts' → logprob: -9.877177238464355
    6. 's' → logprob: -9.877177238464355
    7. '_' → logprob: -10.002177238464355
    8. ' ' → logprob: -10.377177238464355
    9. '   ' → logprob: -10.502177238464355
    10. '_line' → logprob: -11.002177238464355

Token 92: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.13279926776885986
    2. ' []' → logprob: -2.7577991485595703
    3. ' [' → logprob: -3.0077991485595703
    4. 'lines' → logprob: -5.13279914855957
    5. '[]' → logprob: -5.75779914855957
    6. ' ' → logprob: -6.75779914855957
    7. ' list' → logprob: -7.38279914855957
    8. '[' → logprob: -8.63279914855957
    9. '	lines' → logprob: -9.13279914855957
    10. '(lines' → logprob: -9.63279914855957

Token 93: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.00016671013145241886
    2. '[' → logprob: -8.750166893005371
    3. '```' → logprob: -13.250166893005371
    4. '       ' → logprob: -13.625166893005371
    5. ' [' → logprob: -13.625166893005371
    6. ' idx' → logprob: -13.750166893005371
    7. '[index' → logprob: -14.500166893005371
    8. 'idx' → logprob: -14.875166893005371
    9. '[id' → logprob: -15.125166893005371
    10. '   ' → logprob: -15.375166893005371

Token 94: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13356232643127441
    2. '].' → logprob: -2.2585623264312744
    3. ' :' → logprob: -4.008562088012695
    4. ']' → logprob: -6.883562088012695
    5. '][' → logprob: -7.633562088012695
    6. '   ' → logprob: -8.008562088012695
    7. '][:' → logprob: -8.258562088012695
    8. ':].' → logprob: -9.508562088012695
    9. ' ].' → logprob: -9.758562088012695
    10. ' ' → logprob: -9.758562088012695

Token 95: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.023254677653312683
    2. ' idx' → logprob: -3.773254632949829
    3. '	idx' → logprob: -12.39825439453125
    4. '[idx' → logprob: -13.02325439453125
    5. '   ' → logprob: -13.14825439453125
    6. '(idx' → logprob: -14.27325439453125
    7. ' ' → logprob: -15.14825439453125
    8. '       ' → logprob: -17.02325439453125
    9. '  ' → logprob: -17.89825439453125
    10. 'index' → logprob: -18.14825439453125

Token 96: '+n' (ID: 87683)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5802850127220154
    2. '+n' → logprob: -0.8302850127220154
    3. ' +' → logprob: -5.45528507232666
    4. 'idx' → logprob: -10.45528507232666
    5. '   ' → logprob: -10.95528507232666
    6. ' idx' → logprob: -12.83028507232666
    7. '[idx' → logprob: -13.08028507232666
    8. ']+' → logprob: -13.20528507232666
    9. '+i' → logprob: -13.33028507232666
    10. 'n' → logprob: -13.58028507232666

Token 97: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011117587564513087
    2. ']
' → logprob: -6.87611198425293
    3. ' ]' → logprob: -9.62611198425293
    4. '       ' → logprob: -12.37611198425293
    5. ']
' → logprob: -12.37611198425293
    6. '   ' → logprob: -13.50111198425293
    7. ']

' → logprob: -14.00111198425293
    8. ')' → logprob: -14.25111198425293
    9. '].' → logprob: -15.25111198425293
    10. '<|end|>' → logprob: -15.25111198425293

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024855460971593857
    2. '
' → logprob: -4.399855613708496
    3. '<|end|>' → logprob: -4.649855613708496
    4. '        
' → logprob: -6.649855613708496
    5. '   ' → logprob: -8.149855613708496
    6. '<|end|>' → logprob: -8.399855613708496
    7. '[idx' → logprob: -8.524855613708496
    8. '```' → logprob: -8.524855613708496
    9. '  
' → logprob: -9.524855613708496
    10. ' 
' → logprob: -9.899855613708496

Token 99: ' idx' (ID: 14016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060684964060783386
    2. ' idx' → logprob: -3.5606849193573
    3. '
' → logprob: -3.9356849193573
    4. 'idx' (adapté à ' idx') → logprob: -4.560685157775879
    5. '   ' → logprob: -8.685685157775879
    6. '	idx' → logprob: -8.935685157775879
    7. '[idx' → logprob: -9.810685157775879
    8. '        
' → logprob: -10.060685157775879
    9. '```' → logprob: -10.310685157775879
    10. ' 
' → logprob: -11.435685157775879

Token 100: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03038543276488781
    2. '+=' → logprob: -3.5303854942321777
    3. '+' → logprob: -7.405385494232178
    4. ' +' → logprob: -10.90538501739502
    5. ' ' → logprob: -13.53038501739502
    6. '    ' → logprob: -13.53038501739502
    7. '```' → logprob: -13.53038501739502
    8. ']+=' → logprob: -14.15538501739502
    9. ' =' → logprob: -14.15538501739502
    10. '   ' → logprob: -14.15538501739502

Token 101: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006715728435665369
    2. ' n' → logprob: -5.006715774536133
    3. '	n' → logprob: -14.756715774536133
    4. '   ' → logprob: -18.756715774536133
    5. '$n' → logprob: -19.256715774536133
    6. '+n' → logprob: -19.631715774536133
    7. ')n' → logprob: -20.256715774536133
    8. '    ' → logprob: -20.756715774536133
    9. '_n' → logprob: -21.631715774536133
    10. '*n' → logprob: -21.881715774536133

Token 102: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24608442187309265
    2. '   ' → logprob: -1.871084451675415
    3. '
' → logprob: -3.871084451675415
    4. '        
' → logprob: -3.871084451675415
    5. '    
' → logprob: -4.871084213256836
    6. '<|end|>' → logprob: -4.871084213256836
    7. '  
' → logprob: -5.996084213256836
    8. '    ' → logprob: -7.371084213256836
    9. '```' → logprob: -7.371084213256836
    10. 'count' → logprob: -7.746084213256836

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07305371761322021
    2. '   ' → logprob: -2.6980538368225098
    3. 'count' → logprob: -7.07305383682251
    4. ' counts' → logprob: -7.82305383682251
    5. '        
' → logprob: -7.82305383682251
    6. 'counts' → logprob: -8.448053359985352
    7. ' count' → logprob: -8.573053359985352
    8. '<|end|>' → logprob: -8.823053359985352
    9. 's' → logprob: -9.198053359985352
    10. ' lines' → logprob: -9.198053359985352

Token 104: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.052729845046997
    2. 'counts' → logprob: -1.677729845046997
    3. ' counts' → logprob: -1.677729845046997
    4. 'count' → logprob: -2.677729845046997
    5. 's' → logprob: -3.302729845046997
    6. ' syll' → logprob: -3.427729845046997
    7. 'sy' → logprob: -3.552729845046997
    8. ' lengths' → logprob: -4.052729606628418
    9. '   ' → logprob: -4.552729606628418
    10. 'word' → logprob: -4.677729606628418

Token 105: ' Pre' (ID: 4659)
  Prédit: ' counts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counts' → logprob: -1.450498104095459
    2. ' syll' → logprob: -1.575498104095459
    3. 'count' → logprob: -2.200498104095459
    4. ' count' → logprob: -2.450498104095459
    5. 'sy' → logprob: -3.075498104095459
    6. ' line' → logprob: -3.075498104095459
    7. '       ' → logprob: -3.075498104095459
    8. 's' → logprob: -3.200498104095459
    9. 'counts' → logprob: -3.325498104095459
    10. ' word' → logprob: -3.450498104095459

Token 106: 'compute' (ID: 54521)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6670406460762024
    2. '       ' → logprob: -2.2920405864715576
    3. 'fix' → logprob: -2.4170405864715576
    4. 's' → logprob: -2.5420405864715576
    5. 'sum' → logprob: -2.9170405864715576
    6. 'vious' → logprob: -3.0420405864715576
    7. 'process' → logprob: -3.6670405864715576
    8. '   ' → logprob: -3.7920405864715576
    9. 'count' → logprob: -3.9170405864715576
    10. 'sent' → logprob: -4.917040824890137

Token 107: ' length' (ID: 5517)
  Prédit: ' lengths'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lengths' → logprob: -0.7278769016265869
    2. ' syll' → logprob: -1.102876901626587
    3. ' line' → logprob: -3.227876901626587
    4. ' word' → logprob: -3.227876901626587
    5. ' counts' → logprob: -3.352876901626587
    6. 'counts' → logprob: -4.227876663208008
    7. 'length' → logprob: -4.477876663208008
    8. 'sy' → logprob: -4.602876663208008
    9. ' length' → logprob: -4.727876663208008
    10. 'line' → logprob: -5.227876663208008

Token 108: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008012881153263152
    2. ' s' → logprob: -8.125801086425781
    3. ' of' → logprob: -9.000801086425781
    4. '       ' → logprob: -9.500801086425781
    5. '   ' → logprob: -9.625801086425781
    6. '<|end|>' → logprob: -10.500801086425781
    7. 'of' → logprob: -10.750801086425781
    8. ' ' → logprob: -10.875801086425781
    9. ' for' → logprob: -11.500801086425781
    10. 'words' → logprob: -11.500801086425781

Token 109: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.14224550127983093
    2. ' each' → logprob: -2.2672455310821533
    3. 'words' → logprob: -3.6422455310821533
    4. ' words' → logprob: -6.267245292663574
    5. 'word' → logprob: -7.517245292663574
    6. '[word' → logprob: -9.017245292663574
    7. ' word' → logprob: -9.767245292663574
    8. 'lines' → logprob: -10.017245292663574
    9. '[' → logprob: -10.642245292663574
    10. ' lines' → logprob: -10.767245292663574

Token 110: ' word' (ID: 2195)
  Prédit: 'word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'word' → logprob: -0.5789766907691956
    2. ' word' → logprob: -0.8289766907691956
    3. 'line' → logprob: -6.203976631164551
    4. ' line' → logprob: -7.203976631164551
    5. '[word' → logprob: -9.32897663116455
    6. '(word' → logprob: -10.20397663116455
    7. '       ' → logprob: -10.20397663116455
    8. 'words' → logprob: -10.20397663116455
    9. '	word' → logprob: -10.45397663116455
    10. ' words' → logprob: -11.57897663116455

Token 111: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05552314594388008
    2. 's' → logprob: -3.305523157119751
    3. '_lengths' → logprob: -5.180522918701172
    4. ' lengths' → logprob: -5.305522918701172
    5. 'length' → logprob: -6.680522918701172
    6. 'words' → logprob: -6.805522918701172
    7. 'word' → logprob: -6.930522918701172
    8. ' word' → logprob: -6.930522918701172
    9. '<|end|>' → logprob: -8.055522918701172
    10. ' words' → logprob: -8.055522918701172

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004502281080931425
    2. 's' → logprob: -5.629502296447754
    3. '<|end|>' → logprob: -8.379502296447754
    4. '   ' → logprob: -9.004502296447754
    5. '_lengths' → logprob: -9.379502296447754
    6. '        ' → logprob: -9.879502296447754
    7. ',' → logprob: -9.879502296447754
    8. ' lengths' → logprob: -10.004502296447754
    9. '        
' → logprob: -10.004502296447754
    10. '```' → logprob: -10.504502296447754

Token 113: ' lengths' (ID: 51957)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.8949815034866333
    2. ' lengths' → logprob: -1.2699815034866333
    3. 'word' → logprob: -1.7699815034866333
    4. '       ' → logprob: -2.3949813842773438
    5. 'length' → logprob: -3.5199813842773438
    6. 'words' → logprob: -5.144981384277344
    7. ' words' → logprob: -5.644981384277344
    8. ' length' → logprob: -5.894981384277344
    9. '_lengths' → logprob: -5.894981384277344
    10. 'len' → logprob: -6.644981384277344

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011050296947360039
    2. '=' → logprob: -4.511050224304199
    3. 's' → logprob: -14.1360502243042
    4. '   ' → logprob: -14.5110502243042
    5. ' ' → logprob: -15.2610502243042
    6. '_' → logprob: -15.6360502243042
    7. ' =[' → logprob: -15.7610502243042
    8. '_lengths' → logprob: -15.8860502243042
    9. '    ' → logprob: -16.261051177978516
    10. '<|end|>' → logprob: -16.261051177978516

Token 115: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.007553623989224434
    2. '[' → logprob: -5.007553577423096
    3. '[len' → logprob: -7.757553577423096
    4. '[list' → logprob: -8.132554054260254
    5. ' list' → logprob: -10.007554054260254
    6. '[word' → logprob: -10.132554054260254
    7. '[length' → logprob: -11.632554054260254
    8. '[i' → logprob: -12.757554054260254
    9. '[s' → logprob: -12.757554054260254
    10. '[line' → logprob: -12.882554054260254

Token 116: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.018153570592403412
    2. ' len' → logprob: -4.018153667449951
    3. '(len' → logprob: -13.143153190612793
    4. '       ' → logprob: -14.268153190612793
    5. '   ' → logprob: -14.393153190612793
    6. '           ' → logprob: -15.518153190612793
    7. '[len' → logprob: -16.39315414428711
    8. '=len' → logprob: -16.89315414428711
    9. '	len' → logprob: -17.14315414428711
    10. ',len' → logprob: -17.51815414428711

Token 117: '(w' (ID: 7420)
  Prédit: '(word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -0.017808876931667328
    2. '(w' → logprob: -4.26780891418457
    3. '(' → logprob: -5.64280891418457
    4. ' (' → logprob: -9.76780891418457
    5. 'word' → logprob: -11.14280891418457
    6. 'w' → logprob: -11.76780891418457
    7. '(words' → logprob: -11.89280891418457
    8. ' word' → logprob: -12.39280891418457
    9. ')' → logprob: -13.51780891418457
    10. '(s' → logprob: -13.89280891418457

Token 118: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012395139783620834
    2. '.strip' → logprob: -7.37623929977417
    3. ' )' → logprob: -8.126239776611328
    4. '.split' → logprob: -8.751239776611328
    5. '.replace' → logprob: -9.501239776611328
    6. '())' → logprob: -10.876239776611328
    7. 'w' → logprob: -11.126239776611328
    8. ')]' → logprob: -11.251239776611328
    9. '.rstrip' → logprob: -11.751239776611328
    10. '   ' → logprob: -11.876239776611328

Token 119: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14648549258708954
    2. ')' → logprob: -2.1464855670928955
    3. 'for' → logprob: -4.146485328674316
    4. '()' → logprob: -6.271485328674316
    5. '.replace' → logprob: -8.021485328674316
    6. '	for' → logprob: -8.521485328674316
    7. '.split' → logprob: -8.646485328674316
    8. '       ' → logprob: -8.771485328674316
    9. ']' → logprob: -9.021485328674316
    10. '.rstrip' → logprob: -9.021485328674316

Token 120: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.05488476902246475
    2. 'w' → logprob: -2.929884672164917
    3. ' ' → logprob: -13.804884910583496
    4. '<|end|>' → logprob: -15.304884910583496
    5. '_' → logprob: -15.429884910583496
    6. ' in' → logprob: -15.554884910583496
    7. '	w' → logprob: -15.554884910583496
    8. ' _' → logprob: -15.554884910583496
    9. '<|end|>' → logprob: -15.554884910583496
    10. '_w' → logprob: -16.05488395690918

Token 121: ' in' (ID: 306)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.2427968531847
    2. 'w' → logprob: -1.7427968978881836
    3. ' in' → logprob: -3.2427968978881836
    4. 'in' → logprob: -7.367796897888184
    5. ' words' → logprob: -7.492796897888184
    6. 'words' → logprob: -8.992796897888184
    7. ' ' → logprob: -9.867796897888184
    8. '        ' → logprob: -10.867796897888184
    9. '       ' → logprob: -10.992796897888184
    10. '   ' → logprob: -11.117796897888184

Token 122: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.11284519731998444
    2. ' words' → logprob: -2.2378451824188232
    3. '(words' → logprob: -11.487845420837402
    4. '   ' → logprob: -12.112845420837402
    5. ' ' → logprob: -12.862845420837402
    6. '       ' → logprob: -13.737845420837402
    7. '.words' → logprob: -14.362845420837402
    8. 'word' → logprob: -14.362845420837402
    9. '
' → logprob: -14.612845420837402
    10. '_words' → logprob: -14.987845420837402

Token 123: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012928384239785373
    2. ' ]' → logprob: -9.625129699707031
    3. '       ' → logprob: -10.625129699707031
    4. ']
' → logprob: -11.250129699707031
    5. ')]' → logprob: -11.375129699707031
    6. ')' → logprob: -12.125129699707031
    7. '<|end|>' → logprob: -12.125129699707031
    8. '()]' → logprob: -13.125129699707031
    9. '`]' → logprob: -15.250129699707031
    10. '<|end|>' → logprob: -15.375129699707031

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03540356829762459
    2. '   ' → logprob: -3.7854034900665283
    3. '
' → logprob: -5.285403728485107
    4. '        
' → logprob: -5.535403728485107
    5. '<|end|>' → logprob: -6.285403728485107
    6. '    
' → logprob: -7.285403728485107
    7. '  
' → logprob: -8.78540325164795
    8. '<|end|>' → logprob: -9.41040325164795
    9. ' if' → logprob: -9.53540325164795
    10. '```' → logprob: -10.03540325164795

Token 125: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5102370977401733
    2. ' if' → logprob: -2.385237216949463
    3. 'if' → logprob: -2.635237216949463
    4. 'count' → logprob: -3.010237216949463
    5. 's' → logprob: -3.635237216949463
    6. ' counts' → logprob: -3.635237216949463
    7. 'counts' → logprob: -3.760237216949463
    8. ' syll' → logprob: -4.010237216949463
    9. '        
' → logprob: -4.260237216949463
    10. 'result' → logprob: -4.635237216949463

Token 126: ' Try' (ID: 14720)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9163763523101807
    2. ' if' → logprob: -2.1663763523101807
    3. 'valid' → logprob: -2.7913763523101807
    4. 'count' → logprob: -2.7913763523101807
    5. '#' → logprob: -2.9163763523101807
    6. 'for' → logprob: -3.4163763523101807
    7. 'pattern' → logprob: -3.7913763523101807
    8. 'result' → logprob: -3.9163763523101807
    9. 'counts' → logprob: -3.9163763523101807
    10. 'current' → logprob: -4.041376113891602

Token 127: ' all' (ID: 722)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22959263622760773
    2. ':
' → logprob: -1.8545926809310913
    3. 'to' → logprob: -3.7295925617218018
    4. '   ' → logprob: -4.354592800140381
    5. '       ' → logprob: -5.479592800140381
    6. ' to' → logprob: -6.229592800140381
    7. 'all' → logprob: -6.479592800140381
    8. 'ing' → logprob: -7.354592800140381
    9. 'for' → logprob: -7.354592800140381
    10. ' ' → logprob: -7.729592800140381

Token 128: ' possible' (ID: 4149)
  Prédit: ' combinations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -1.4381471872329712
    2. ' i' → logprob: -1.9381471872329712
    3. ' start' → logprob: -2.1881470680236816
    4. ' possible' → logprob: -2.3131470680236816
    5. ' offsets' → logprob: -2.3131470680236816
    6. 'offset' → logprob: -2.6881470680236816
    7. 'possible' → logprob: -3.1881470680236816
    8. ' starting' → logprob: -3.1881470680236816
    9. 'start' → logprob: -3.8131470680236816
    10. 'i' → logprob: -3.9381470680236816

Token 129: ' starting' (ID: 8601)
  Prédit: ' starting'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' starting' → logprob: -0.5804629921913147
    2. ' start' → logprob: -2.20546293258667
    3. ' combinations' → logprob: -2.45546293258667
    4. 'starting' → logprob: -2.83046293258667
    5. 'start' → logprob: -2.95546293258667
    6. ' starts' → logprob: -3.70546293258667
    7. ' sequences' → logprob: -3.83046293258667
    8. 'com' → logprob: -3.83046293258667
    9. ' i' → logprob: -4.45546293258667
    10. 'starts' → logprob: -4.70546293258667

Token 130: ' positions' (ID: 15897)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.2955397963523865
    2. 'positions' → logprob: -2.0455398559570312
    3. ' points' → logprob: -2.2955398559570312
    4. 'indices' → logprob: -4.295539855957031
    5. ' positions' → logprob: -4.795539855957031
    6. ' indices' → logprob: -6.045539855957031
    7. 'indexes' → logprob: -7.295539855957031
    8. 'i' → logprob: -8.420539855957031
    9. ' ' → logprob: -9.170539855957031
    10. 'offset' → logprob: -9.295539855957031

Token 131: ' s' (ID: 265)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3612920343875885
    2. '       ' → logprob: -1.6112920045852661
    3. 'for' → logprob: -2.4862921237945557
    4. ' in' → logprob: -3.9862921237945557
    5. ',' → logprob: -7.486291885375977
    6. '   ' → logprob: -7.486291885375977
    7. ' and' → logprob: -9.111291885375977
    8. '<|end|>' → logprob: -9.236291885375977
    9. ' i' → logprob: -9.611291885375977
    10. 'in' → logprob: -9.861291885375977

Token 132: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3135453164577484
    2. ' in' → logprob: -1.8135453462600708
    3. 'for' → logprob: -3.1885452270507812
    4. ':' → logprob: -3.9385452270507812
    5. '       ' → logprob: -4.063545227050781
    6. '=' → logprob: -4.563545227050781
    7. ' =' → logprob: -5.063545227050781
    8. ',' → logprob: -5.188545227050781
    9. '   ' → logprob: -6.438545227050781
    10. ' and' → logprob: -7.188545227050781

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21973058581352234
    2. ' in' → logprob: -2.3447306156158447
    3. ':' → logprob: -2.9697306156158447
    4. ' for' → logprob: -3.3447306156158447
    5. '<|end|>' → logprob: -5.594730377197266
    6. ',' → logprob: -5.844730377197266
    7. '   ' → logprob: -6.219730377197266
    8. 'for' → logprob: -6.219730377197266
    9. ' and' → logprob: -6.969730377197266
    10. '        ' → logprob: -6.969730377197266

Token 134: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21351176500320435
    2. '       ' → logprob: -1.9635117053985596
    3. 'for' → logprob: -2.9635117053985596
    4. '   ' → logprob: -8.83851146697998
    5. ' found' → logprob: -10.46351146697998
    6. ' s' → logprob: -10.83851146697998
    7. ' possible' → logprob: -11.58851146697998
    8. '        ' → logprob: -11.71351146697998
    9. ' ' → logprob: -11.96351146697998
    10. '    ' → logprob: -12.33851146697998

Token 135: ' For' (ID: 2214)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4852735102176666
    2. 'for' → logprob: -0.9852734804153442
    3. 'found' → logprob: -5.235273361206055
    4. ' found' → logprob: -5.735273361206055
    5. '       ' → logprob: -6.860273361206055
    6. ' s' → logprob: -7.485273361206055
    7. 's' → logprob: -7.860273361206055
    8. 'possible' → logprob: -8.360273361206055
    9. ' possible' → logprob: -8.985273361206055
    10. '   ' → logprob: -9.985273361206055

Token 136: ' each' (ID: 2454)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.004124942235648632
    2. 's' → logprob: -5.504125118255615
    3. ' i' → logprob: -10.379124641418457
    4. ' ' → logprob: -12.504124641418457
    5. ' _' → logprob: -13.254124641418457
    6. ' length' → logprob: -13.379124641418457
    7. ' t' → logprob: -13.754124641418457
    8. 'i' → logprob: -13.879124641418457
    9. ' start' → logprob: -14.504124641418457
    10. ' for' → logprob: -14.504124641418457

Token 137: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.348998486995697
    2. 's' → logprob: -1.2239985466003418
    3. 'start' → logprob: -9.598998069763184
    4. ' for' → logprob: -9.973998069763184
    5. 'for' → logprob: -10.098998069763184
    6. 'i' → logprob: -10.098998069763184
    7. 'pattern' → logprob: -10.098998069763184
    8. 'target' → logprob: -10.348998069763184
    9. ' start' → logprob: -10.598998069763184
    10. ' target' → logprob: -10.598998069763184

Token 138: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02426828444004059
    2. ':' → logprob: -4.39926815032959
    3. 'in' → logprob: -5.39926815032959
    4. ',' → logprob: -5.52426815032959
    5. '       ' → logprob: -6.14926815032959
    6. ' for' → logprob: -7.52426815032959
    7. ':
' → logprob: -8.02426815032959
    8. 'for' → logprob: -10.14926815032959
    9. ' s' → logprob: -10.27426815032959
    10. ' ,' → logprob: -10.89926815032959

Token 139: ' try' (ID: 2075)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.18751968443393707
    2. ' found' → logprob: -2.9375197887420654
    3. ' valid' → logprob: -3.1875197887420654
    4. ' s' → logprob: -3.6875197887420654
    5. 'for' → logprob: -4.062519550323486
    6. ' possible' → logprob: -4.312519550323486
    7. '   ' → logprob: -5.312519550323486
    8. 'found' → logprob: -5.562519550323486
    9. 'valid' → logprob: -6.312519550323486
    10. ' match' → logprob: -6.312519550323486

Token 140: ' to' (ID: 316)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.3940069079399109
    2. 'all' → logprob: -2.2690069675445557
    3. ' s' → logprob: -2.5190069675445557
    4. 's' → logprob: -2.7690069675445557
    5. ' for' → logprob: -3.5190069675445557
    6. ' to' → logprob: -3.6440069675445557
    7. 'for' → logprob: -4.769006729125977
    8. '   ' → logprob: -5.894006729125977
    9. ':' → logprob: -6.144006729125977
    10. 'to' → logprob: -6.519006729125977

Token 141: ' find' (ID: 1646)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0489126555621624
    2. ' range' → logprob: -3.673912763595581
    3. 'find' → logprob: -4.298912525177002
    4. '   ' → logprob: -5.798912525177002
    5. 'check' → logprob: -6.548912525177002
    6. ' find' → logprob: -7.173912525177002
    7. 's' → logprob: -7.173912525177002
    8. 'for' → logprob: -7.298912525177002
    9. '```' → logprob: -7.673912525177002
    10. 'match' → logprob: -8.54891300201416

Token 142: ' ' (ID: 220)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.12092019617557526
    2. ' s' → logprob: -2.870920181274414
    3. ' an' → logprob: -4.245920181274414
    4. 'a' → logprob: -4.495920181274414
    5. ' the' → logprob: -4.495920181274414
    6. ' i' → logprob: -5.620920181274414
    7. ' ' → logprob: -5.870920181274414
    8. ' all' → logprob: -6.120920181274414
    9. 's' → logprob: -6.245920181274414
    10. ' next' → logprob: -6.245920181274414

Token 143: '5' (ID: 20)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10737801343202591
    2. ' a' → logprob: -2.8573780059814453
    3. 's' → logprob: -4.232378005981445
    4. 'the' → logprob: -4.732378005981445
    5. 'target' → logprob: -5.482378005981445
    6. ' the' → logprob: -6.107378005981445
    7. ' s' → logprob: -6.107378005981445
    8. 'i' → logprob: -6.357378005981445
    9. 'pattern' → logprob: -6.357378005981445
    10. 'an' → logprob: -6.482378005981445

Token 144: ' segments' (ID: 33749)
  Prédit: '-token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-token' → logprob: -1.471694827079773
    2. '-' → logprob: -1.721694827079773
    3. '<|end|>' → logprob: -1.971694827079773
    4. '-length' → logprob: -2.0966949462890625
    5. '-word' → logprob: -3.0966949462890625
    6. '-s' → logprob: -3.0966949462890625
    7. '<|end|>' → logprob: -3.4716949462890625
    8. 'tokens' → logprob: -3.4716949462890625
    9. 'token' → logprob: -3.9716949462890625
    10. 'possible' → logprob: -4.0966949462890625

Token 145: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37681883573532104
    2. ',' → logprob: -2.126818895339966
    3. ':' → logprob: -2.376818895339966
    4. '<|end|>' → logprob: -2.876818895339966
    5. '   ' → logprob: -4.376818656921387
    6. ' for' → logprob: -4.501818656921387
    7. ' ' → logprob: -5.501818656921387
    8. '        ' → logprob: -6.126818656921387
    9. ' that' → logprob: -6.626818656921387
    10. 'def' → logprob: -6.626818656921387

Token 146: ' letter' (ID: 10263)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.6849435567855835
    2. ' lengths' → logprob: -0.8099435567855835
    3. 'target' → logprob: -4.184943675994873
    4. 'sum' → logprob: -4.309943675994873
    5. ' length' → logprob: -4.434943675994873
    6. 'total' → logprob: -6.684943675994873
    7. 'the' → logprob: -6.684943675994873
    8. ' sum' → logprob: -7.059943675994873
    9. ' target' → logprob: -7.059943675994873
    10. ' the' → logprob: -7.559943675994873

Token 147: ' counts' (ID: 28991)
  Prédit: ' counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' counts' → logprob: -0.4325389266014099
    2. 'counts' → logprob: -1.6825389862060547
    3. 's' → logprob: -2.4325389862060547
    4. ' s' → logprob: -3.5575389862060547
    5. ' lengths' → logprob: -4.057538986206055
    6. 'count' → logprob: -4.182538986206055
    7. '_counts' → logprob: -5.057538986206055
    8. ' count' → logprob: -5.307538986206055
    9. 'length' → logprob: -5.807538986206055
    10. ' length' → logprob: -6.932538986206055

Token 148: ' matching' (ID: 20238)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.8132166266441345
    2. ',' → logprob: -1.1882166862487793
    3. '<|end|>' → logprob: -3.4382166862487793
    4. ' =' → logprob: -3.8132166862487793
    5. ' for' → logprob: -3.8132166862487793
    6. ' ' → logprob: -3.8132166862487793
    7. 's' → logprob: -3.9382166862487793
    8. 'that' → logprob: -4.063216686248779
    9. ' matching' → logprob: -4.313216686248779
    10. '=' → logprob: -4.563216686248779

Token 149: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.26959991455078125
    2. 'target' → logprob: -1.6445999145507812
    3. ' the' → logprob: -3.2695999145507812
    4. 'the' → logprob: -5.269599914550781
    5. ' ' → logprob: -11.394599914550781
    6. '[target' → logprob: -11.519599914550781
    7. ' a' → logprob: -11.894599914550781
    8. ' each' → logprob: -11.894599914550781
    9. '(target' → logprob: -12.644599914550781
    10. '[' → logprob: -12.894599914550781

Token 150: '_pattern' (ID: 50002)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3411717414855957
    2. '_pattern' → logprob: -1.3411717414855957
    3. '_lengths' → logprob: -4.466171741485596
    4. '_counts' → logprob: -5.216171741485596
    5. '<|end|>' → logprob: -5.466171741485596
    6. ' _' → logprob: -6.466171741485596
    7. '_patterns' → logprob: -6.716171741485596
    8. 's' → logprob: -7.841171741485596
    9. 'pattern' → logprob: -8.091171264648438
    10. '[' → logprob: -8.091171264648438

Token 151: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07285268604755402
    2. '
' → logprob: -3.572852611541748
    3. ' for' → logprob: -3.697852611541748
    4. '   ' → logprob: -5.447852611541748
    5. ':' → logprob: -5.697852611541748
    6. '<|end|>' → logprob: -5.947852611541748
    7. '        
' → logprob: -6.322852611541748
    8. 'for' → logprob: -6.447852611541748
    9. ' ' → logprob: -7.322852611541748
    10. ',' → logprob: -7.322852611541748

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009940358810126781
    2. ':' → logprob: -5.884940147399902
    3. '   ' → logprob: -6.134940147399902
    4. ' for' → logprob: -6.259940147399902
    5. '<|end|>' → logprob: -7.509940147399902
    6. '        
' → logprob: -7.634940147399902
    7. ',' → logprob: -7.884940147399902
    8. '
' → logprob: -8.134940147399902
    9. ' ' → logprob: -8.259940147399902
    10. '        ' → logprob: -8.759940147399902

Token 153: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20489469170570374
    2. '       ' → logprob: -1.9548946619033813
    3. 'for' (adapté à ' for') → logprob: -3.704894781112671
    4. '
' → logprob: -4.704894542694092
    5. ' 
' → logprob: -5.579894542694092
    6. ' s' → logprob: -6.329894542694092
    7. ' found' → logprob: -6.954894542694092
    8. '        
' → logprob: -7.079894542694092
    9. '        ' → logprob: -7.329894542694092
    10. 's' → logprob: -7.579894542694092

Token 154: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0024793429765850306
    2. 's' → logprob: -6.002479553222656
    3. ' ' → logprob: -13.627479553222656
    4. ' _' → logprob: -14.252479553222656
    5. ')' → logprob: -14.877479553222656
    6. ' i' → logprob: -15.127479553222656
    7. '_s' → logprob: -15.127479553222656
    8. '_' → logprob: -15.752479553222656
    9. ' ' → logprob: -15.752479553222656
    10. '```' → logprob: -15.752479553222656

Token 155: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001176893594674766
    2. 'in' → logprob: -6.751176834106445
    3. ' ' → logprob: -13.001176834106445
    4. ',' → logprob: -13.251176834106445
    5. 's' → logprob: -14.251176834106445
    6. '	in' → logprob: -14.876176834106445
    7. 'range' → logprob: -15.251176834106445
    8. ')' → logprob: -15.376176834106445
    9. '```' → logprob: -15.501176834106445
    10. '_in' → logprob: -15.688676834106445

Token 156: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048882268369198
    2. ' range' → logprob: -4.511048793792725
    3. '(range' → logprob: -14.886049270629883
    4. ' ' → logprob: -15.136049270629883
    5. '   ' → logprob: -15.886049270629883
    6. '[' → logprob: -16.136049270629883
    7. 'length' → logprob: -16.261049270629883
    8. '	range' → logprob: -16.886049270629883
    9. '  ' → logprob: -17.011049270629883
    10. 'len' → logprob: -17.386049270629883

Token 157: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6942449808120728
    2. '(len' → logprob: -0.6942449808120728
    3. '(' → logprob: -6.819244861602783
    4. 'len' → logprob: -13.819245338439941
    5. '(min' → logprob: -14.444245338439941
    6. '(l' → logprob: -14.444245338439941
    7. '((' → logprob: -14.694245338439941
    8. ' (' → logprob: -14.819245338439941
    9. '(max' → logprob: -14.944245338439941
    10. '(length' → logprob: -15.069245338439941

Token 158: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005392176564782858
    2. '):
' → logprob: -5.630392074584961
    3. ' -' → logprob: -6.630392074584961
    4. '-' → logprob: -8.005392074584961
    5. ' ):' → logprob: -9.255392074584961
    6. ':' → logprob: -11.255392074584961
    7. '-n' → logprob: -11.630392074584961
    8. '   ' → logprob: -12.005392074584961
    9. ')' → logprob: -12.505392074584961
    10. ',' → logprob: -13.005392074584961

Token 159: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4524831175804138
    2. '           ' → logprob: -1.0774831771850586
    3. ':
' → logprob: -3.9524831771850586
    4. ',' → logprob: -6.952483177185059
    5. '<|end|>' → logprob: -6.952483177185059
    6. '       ' → logprob: -7.202483177185059
    7. '   ' → logprob: -7.952483177185059
    8. ' :' → logprob: -8.077483177185059
    9. ' if' → logprob: -8.327483177185059
    10. '<|end|>' → logprob: -8.577483177185059

Token 160: ' pos' (ID: 1253)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.2128064632415771
    2. ' counts' → logprob: -1.4628064632415771
    3. 'count' → logprob: -1.9628064632415771
    4. ' length' → logprob: -2.712806463241577
    5. 'counts' → logprob: -3.337806463241577
    6. ' current' → logprob: -3.587806463241577
    7. ' found' → logprob: -3.837806463241577
    8. ' segments' → logprob: -3.837806463241577
    9. ' segment' → logprob: -4.212806701660156
    10. 'length' → logprob: -4.337806701660156

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10028419643640518
    2. '=' → logprob: -2.3502840995788574
    3. ')' → logprob: -9.975284576416016
    4. 's' → logprob: -11.600284576416016
    5. '+' → logprob: -12.225284576416016
    6. ',' → logprob: -12.850284576416016
    7. ' +=' → logprob: -12.975284576416016
    8. ' ' → logprob: -13.225284576416016
    9. '           ' → logprob: -13.350284576416016
    10. '   ' → logprob: -13.475284576416016

Token 162: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0011772511061280966
    2. ' s' → logprob: -6.7511773109436035
    3. '0' → logprob: -12.376176834106445
    4. '<|end|>' → logprob: -12.876176834106445
    5. ' ' → logprob: -15.626176834106445
    6. '_s' → logprob: -17.001176834106445
    7. '{s' → logprob: -17.001176834106445
    8. '	s' → logprob: -17.501176834106445
    9. '[s' → logprob: -18.126176834106445
    10. '   ' → logprob: -18.501176834106445

Token 163: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2133951485157013
    2. '           ' → logprob: -1.963395118713379
    3. '+' → logprob: -4.338395118713379
    4. '<|end|>' → logprob: -4.463395118713379
    5. ',' → logprob: -5.088395118713379
    6. '       ' → logprob: -5.463395118713379
    7. ' +' → logprob: -6.088395118713379
    8. ' 
' → logprob: -6.088395118713379
    9. '<|end|>' → logprob: -6.088395118713379
    10. '  
' → logprob: -6.463395118713379

Token 164: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11396931111812592
    2. ' if' → logprob: -3.363969326019287
    3. '       ' → logprob: -4.113969326019287
    4. ' and' → logprob: -4.988969326019287
    5. 'while' → logprob: -5.113969326019287
    6. '
' → logprob: -5.238969326019287
    7. '   ' → logprob: -5.238969326019287
    8. ' while' → logprob: -5.363969326019287
    9. '<|end|>' → logprob: -5.363969326019287
    10. ':' → logprob: -5.488969326019287

Token 165: ' matched' (ID: 31366)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.1057833433151245
    2. ' segments' → logprob: -1.4807833433151245
    3. '           ' → logprob: -2.355783462524414
    4. ' found' → logprob: -2.605783462524414
    5. 'found' → logprob: -3.105783462524414
    6. ' counts' → logprob: -3.605783462524414
    7. 'counts' → logprob: -3.730783462524414
    8. ' valid' → logprob: -3.730783462524414
    9. 'valid' → logprob: -3.855783462524414
    10. 'count' → logprob: -4.105783462524414

Token 166: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16028271615505219
    2. ' =' → logprob: -1.9102827310562134
    3. '=True' → logprob: -10.910283088684082
    4. '=False' → logprob: -11.035283088684082
    5. '_segments' → logprob: -12.285283088684082
    6. '_count' → logprob: -12.410283088684082
    7. '_tokens' → logprob: -12.410283088684082
    8. ':' → logprob: -13.410283088684082
    9. 'count' → logprob: -13.410283088684082
    10. ',' → logprob: -13.410283088684082

Token 167: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10843736678361893
    2. ' True' → logprob: -2.3584372997283936
    3. 'False' → logprob: -4.858437538146973
    4. ' False' → logprob: -8.358437538146973
    5. '[]' → logprob: -8.733437538146973
    6. '0' → logprob: -10.858437538146973
    7. ' ' → logprob: -11.233437538146973
    8. '[' → logprob: -13.108437538146973
    9. ' []' → logprob: -13.358437538146973
    10. '   ' → logprob: -13.358437538146973

Token 168: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025333859026432037
    2. '
' → logprob: -4.525333881378174
    3. '<|end|>' → logprob: -4.650333881378174
    4. '            
' → logprob: -6.400333881378174
    5. ' for' → logprob: -7.525333881378174
    6. ' 
' → logprob: -7.525333881378174
    7. '               ' → logprob: -8.150333404541016
    8. '            ' → logprob: -8.400333404541016
    9. '       ' → logprob: -8.525333404541016
    10. '  
' → logprob: -8.525333404541016

Token 169: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19859319925308228
    2. '<|end|>' → logprob: -2.4485931396484375
    3. '
' → logprob: -2.6985931396484375
    4. ' for' → logprob: -5.0735931396484375
    5. '       ' → logprob: -5.1985931396484375
    6. '            
' → logprob: -5.8235931396484375
    7. ' 
' → logprob: -5.9485931396484375
    8. '<|end|>' → logprob: -6.4485931396484375
    9. '   ' → logprob: -6.6985931396484375
    10. ',' → logprob: -6.9485931396484375

Token 170: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.043143175542354584
    2. 'segments' → logprob: -4.168143272399902
    3. 'counts' → logprob: -4.793143272399902
    4. 'segment' → logprob: -5.043143272399902
    5. 'pattern' → logprob: -5.168143272399902
    6. '           ' → logprob: -5.793143272399902
    7. 'length' → logprob: -7.043143272399902
    8. ' for' → logprob: -7.668143272399902
    9. 'count' → logprob: -8.293143272399902
    10. 'sequence' → logprob: -8.293143272399902

Token 171: ' segment' (ID: 14806)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.594532310962677
    2. 'length' → logprob: -1.4695322513580322
    3. 'pattern' → logprob: -1.9695322513580322
    4. 't' → logprob: -3.4695322513580322
    5. 'count' → logprob: -3.9695322513580322
    6. 'p' → logprob: -4.969532489776611
    7. 'segment' → logprob: -5.219532489776611
    8. 'target' → logprob: -5.219532489776611
    9. 'pat' → logprob: -5.844532489776611
    10. 'seg' → logprob: -6.344532489776611

Token 172: '_len' (ID: 13683)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11196936666965485
    2. 'in' → logprob: -2.486969470977783
    3. '_count' → logprob: -4.611969470977783
    4. '_length' → logprob: -5.236969470977783
    5. '_len' → logprob: -6.361969470977783
    6. '_' → logprob: -6.611969470977783
    7. '_in' → logprob: -6.611969470977783
    8. '_idx' → logprob: -6.861969470977783
    9. ' _' → logprob: -7.736969470977783
    10. 'count' → logprob: -8.111968994140625

Token 173: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018539104610681534
    2. 'in' → logprob: -4.143538951873779
    3. ' ' → logprob: -6.018538951873779
    4. ',' → logprob: -10.268539428710938
    5. ' ,' → logprob: -10.768539428710938
    6. 's' → logprob: -12.643539428710938
    7. '_in' → logprob: -13.018539428710938
    8. '<|end|>' → logprob: -13.518539428710938
    9. '  ' → logprob: -13.893539428710938
    10. '	in' → logprob: -14.268539428710938

Token 174: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.005234002135694027
    2. ' target' → logprob: -5.2552337646484375
    3. '[target' → logprob: -16.630233764648438
    4. ' ' → logprob: -17.130233764648438
    5. '[' → logprob: -17.255233764648438
    6. '	target' → logprob: -18.630233764648438
    7. '   ' → logprob: -19.380233764648438
    8. '(target' → logprob: -20.255233764648438
    9. '
' → logprob: -20.380233764648438
    10. ' [' → logprob: -20.505233764648438

Token 175: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.00012356207298580557
    2. 'pattern' → logprob: -9.000123977661133
    3. ' pattern' → logprob: -16.750123977661133
    4. '_patterns' → logprob: -17.250123977661133
    5. '_' → logprob: -17.500123977661133
    6. 'attern' → logprob: -17.875123977661133
    7. 'Pattern' → logprob: -18.000123977661133
    8. '_PATTERN' → logprob: -18.375123977661133
    9. '_p' → logprob: -18.750123977661133
    10. '_length' → logprob: -19.125123977661133

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5762714147567749
    2. ':
' → logprob: -0.8262714147567749
    3. ' :
' → logprob: -8.576271057128906
    4. ' :' → logprob: -9.701271057128906
    5. '):
' → logprob: -10.326271057128906
    6. '=' → logprob: -11.326271057128906
    7. ':

' → logprob: -11.451271057128906
    8. '           ' → logprob: -11.701271057128906
    9. ':
' → logprob: -12.451271057128906
    10. '):' → logprob: -12.701271057128906

Token 177: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.21999190747737885
    2. 'current' → logprob: -2.96999192237854
    3. 'if' → logprob: -3.21999192237854
    4. 'segment' → logprob: -3.46999192237854
    5. 'total' → logprob: -3.71999192237854
    6. 'sum' → logprob: -4.219991683959961
    7. 'length' → logprob: -4.219991683959961
    8. ' if' → logprob: -5.469991683959961
    9. 'curr' → logprob: -5.969991683959961
    10. 'cnt' → logprob: -5.969991683959961

Token 179: '_letters' (ID: 175934)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2813833951950073
    2. '=' → logprob: -1.4063833951950073
    3. 's' → logprob: -9.656383514404297
    4. ' ' → logprob: -9.781383514404297
    5. ' +=' → logprob: -10.906383514404297
    6. '_' → logprob: -11.281383514404297
    7. ':' → logprob: -11.906383514404297
    8. '_words' → logprob: -12.156383514404297
    9. '   ' → logprob: -12.406383514404297
    10. ',' → logprob: -12.406383514404297

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17976433038711548
    2. '=' → logprob: -1.8047642707824707
    3. ' ' → logprob: -11.679764747619629
    4. ' +=' → logprob: -12.679764747619629
    5. 'count' → logprob: -13.179764747619629
    6. ',' → logprob: -13.679764747619629
    7. 's' → logprob: -14.179764747619629
    8. 'while' → logprob: -14.429764747619629
    9. '   ' → logprob: -14.429764747619629
    10. '+=' → logprob: -14.554764747619629

Token 181: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019341122824698687
    2. ' ' → logprob: -6.251934051513672
    3. '               ' → logprob: -13.626934051513672
    4. '                   ' → logprob: -13.626934051513672
    5. '           ' → logprob: -13.876934051513672
    6. 'length' → logprob: -14.251934051513672
    7. 'len' → logprob: -15.251934051513672
    8. '   ' → logprob: -15.251934051513672
    9. 'sum' → logprob: -15.251934051513672
    10. ' lengths' → logprob: -15.814434051513672

Token 182: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.64839569455944e-05
    2. ' ' → logprob: -9.500076293945312
    3. 'sum' → logprob: -14.375076293945312
    4. '   ' → logprob: -15.000076293945312
    5. 'length' → logprob: -15.250076293945312
    6. 'len' → logprob: -15.500076293945312
    7. '           ' → logprob: -16.750076293945312
    8. '1' → logprob: -17.312576293945312
    9. 'words' → logprob: -17.375076293945312
    10. '
' → logprob: -17.500076293945312

Token 183: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010296515189111233
    2. '<|end|>' → logprob: -5.26029634475708
    3. '                
' → logprob: -6.38529634475708
    4. '                ' → logprob: -7.13529634475708
    5. '
' → logprob: -7.38529634475708
    6. ' while' → logprob: -7.88529634475708
    7. '           ' → logprob: -8.135296821594238
    8. '<|end|>' → logprob: -8.385296821594238
    9. ',' → logprob: -8.635296821594238
    10. ' 
' → logprob: -8.635296821594238

Token 184: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16616128385066986
    2. ' while' → logprob: -2.916161298751831
    3. '<|end|>' → logprob: -3.166161298751831
    4. 'while' → logprob: -3.291161298751831
    5. '           ' → logprob: -5.666161060333252
    6. '+' → logprob: -5.666161060333252
    7. '                ' → logprob: -6.041161060333252
    8. '                
' → logprob: -6.166161060333252
    9. '<|end|>' → logprob: -6.166161060333252
    10. '
' → logprob: -6.916161060333252

Token 185: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.47508475184440613
    2. ' while' → logprob: -0.9750847816467285
    3. '               ' → logprob: -7.1000847816467285
    4. '                   ' → logprob: -9.85008430480957
    5. '                ' → logprob: -10.10008430480957
    6. '<|end|>' → logprob: -10.72508430480957
    7. '	while' → logprob: -10.85008430480957
    8. '           ' → logprob: -11.22508430480957
    9. 'While' → logprob: -11.85008430480957
    10. '<|end|>' → logprob: -11.97508430480957

Token 186: ' collect' (ID: 7916)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00039111197111196816
    2. ' while' → logprob: -8.000391006469727
    3. '               ' → logprob: -10.250391006469727
    4. '           ' → logprob: -12.125391006469727
    5. 'for' → logprob: -12.125391006469727
    6. 'While' → logprob: -12.250391006469727
    7. '                   ' → logprob: -13.250391006469727
    8. '   ' → logprob: -13.625391006469727
    9. '```' → logprob: -14.625391006469727
    10. 'if' → logprob: -14.625391006469727

Token 187: ' words' (ID: 6391)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.012734250165522099
    2. ' while' → logprob: -4.387734413146973
    3. '               ' → logprob: -9.012734413146973
    4. '                   ' → logprob: -9.387734413146973
    5. '           ' → logprob: -12.137734413146973
    6. 'words' → logprob: -12.387734413146973
    7. '   ' → logprob: -13.762734413146973
    8. '                ' → logprob: -13.887734413146973
    9. '<|end|>' → logprob: -13.887734413146973
    10. '<|end|>' → logprob: -14.012734413146973

Token 188: ' until' (ID: 4609)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9146015048027039
    2. ' while' → logprob: -1.0396015644073486
    3. '               ' → logprob: -1.6646015644073486
    4. '                   ' → logprob: -3.4146015644073486
    5. '[pos' → logprob: -4.2896013259887695
    6. ':' → logprob: -6.7896013259887695
    7. 'and' → logprob: -6.9146013259887695
    8. ' and' → logprob: -6.9146013259887695
    9. ' at' → logprob: -6.9146013259887695
    10. '[count' → logprob: -7.0396013259887695

Token 189: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.029755238443613052
    2. ' count' → logprob: -3.5297553539276123
    3. '(count' → logprob: -12.404755592346191
    4. '<count' → logprob: -15.779755592346191
    5. 'pos' → logprob: -16.029754638671875
    6. '_count' → logprob: -16.654754638671875
    7. '               ' → logprob: -16.779754638671875
    8. '[count' → logprob: -17.029754638671875
    9. '$count' → logprob: -17.029754638671875
    10. '	count' → logprob: -17.279754638671875

Token 190: '_letters' (ID: 175934)
  Prédit: '_letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letters' → logprob: -0.0002905334113165736
    2. ' >=' → logprob: -9.500290870666504
    3. '>' → logprob: -9.875290870666504
    4. ' ' → logprob: -10.500290870666504
    5. ' >' → logprob: -10.625290870666504
    6. 'letters' → logprob: -10.625290870666504
    7. '>=' → logprob: -11.125290870666504
    8. '_words' → logprob: -11.125290870666504
    9. 'Letters' → logprob: -11.375290870666504
    10. '_' → logprob: -11.500290870666504

Token 191: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.14916618168354034
    2. ' <' → logprob: -2.2741661071777344
    3. '>=' → logprob: -3.5241661071777344
    4. ' >' → logprob: -6.024166107177734
    5. '<' → logprob: -6.024166107177734
    6. '>' → logprob: -7.524166107177734
    7. ' <=' → logprob: -7.649166107177734
    8. ' ' → logprob: -8.899166107177734
    9. '<=' → logprob: -10.524166107177734
    10. '+' → logprob: -10.524166107177734

Token 192: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.054523829370737076
    2. ' segment' → logprob: -3.0545239448547363
    3. 'count' → logprob: -5.179523944854736
    4. ' count' → logprob: -8.179523468017578
    5. '(segment' → logprob: -12.179523468017578
    6. 'segments' → logprob: -14.054523468017578
    7. ' ' → logprob: -14.429523468017578
    8. 'target' → logprob: -15.054523468017578
    9. 'space' → logprob: -15.804523468017578
    10. '               ' → logprob: -16.304523468017578

Token 193: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.00044616201194003224
    2. '_letters' → logprob: -7.875446319580078
    3. 'len' → logprob: -10.125446319580078
    4. 'letters' → logprob: -11.000446319580078
    5. '_' → logprob: -12.125446319580078
    6. '_le' → logprob: -14.500446319580078
    7. '```' → logprob: -15.000446319580078
    8. 'Len' → logprob: -15.000446319580078
    9. '_LEN' → logprob: -15.250446319580078
    10. ' _' → logprob: -15.750446319580078

Token 194: ' or' (ID: 503)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09296862781047821
    2. ' or' → logprob: -3.092968702316284
    3. ' and' → logprob: -3.217968702316284
    4. ':' → logprob: -6.842968463897705
    5. ',' → logprob: -7.842968463897705
    6. ':
' → logprob: -8.092968940734863
    7. '                   ' → logprob: -8.092968940734863
    8. '                
' → logprob: -8.467968940734863
    9. ' while' → logprob: -8.592968940734863
    10. '                ' → logprob: -8.717968940734863

Token 195: ' exceed' (ID: 23275)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1993250846862793
    2. ' count' → logprob: -2.1993250846862793
    3. 'pos' → logprob: -2.8243250846862793
    4. '>' → logprob: -4.949325084686279
    5. ' pos' → logprob: -6.074325084686279
    6. 'ex' → logprob: -8.074325561523438
    7. '(count' → logprob: -8.574325561523438
    8. 'break' → logprob: -9.449325561523438
    9. ' >' → logprob: -9.824325561523438
    10. ' (' → logprob: -10.074325561523438

Token 196: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3443918526172638
    2. 'd' → logprob: -2.0943918228149414
    3. 'count' → logprob: -2.4693918228149414
    4. ' count' → logprob: -2.5943918228149414
    5. ' ' → logprob: -5.844391822814941
    6. ' s' → logprob: -6.094391822814941
    7. '=' → logprob: -6.719391822814941
    8. ' d' → logprob: -7.594391822814941
    9. '<|end|>' → logprob: -7.969391822814941
    10. '_count' → logprob: -8.219391822814941

Token 197: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002334258984774351
    2. ' and' → logprob: -7.377334117889404
    3. ' or' → logprob: -7.377334117889404
    4. '                   ' → logprob: -8.002334594726562
    5. ':' → logprob: -8.252334594726562
    6. ',' → logprob: -9.127334594726562
    7. ':
' → logprob: -9.252334594726562
    8. '                ' → logprob: -9.752334594726562
    9. '           ' → logprob: -10.002334594726562
    10. '                
' → logprob: -10.377334594726562

Token 198: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.27119362354278564
    2. 'while' (adapté à ' while') → logprob: -1.6461936235427856
    3. '               ' → logprob: -3.146193504333496
    4. '                   ' → logprob: -6.896193504333496
    5. '           ' → logprob: -8.021193504333496
    6. '   ' → logprob: -9.146193504333496
    7. ' for' → logprob: -9.521193504333496
    8. '
' → logprob: -9.896193504333496
    9. 'for' → logprob: -10.771193504333496
    10. '                
' → logprob: -10.896193504333496

Token 199: ' pos' (ID: 1253)
  Prédit: ' pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.5905041694641113
    2. 'pos' → logprob: -0.8405041694641113
    3. ' count' → logprob: -4.840504169464111
    4. 'count' → logprob: -5.090504169464111
    5. '(pos' → logprob: -8.965503692626953
    6. '   ' → logprob: -9.965503692626953
    7. '                   ' → logprob: -10.340503692626953
    8. '	pos' → logprob: -10.340503692626953
    9. ' (' → logprob: -10.465503692626953
    10. '           ' → logprob: -10.903003692626953

Token 200: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.019404442980885506
    2. '<' → logprob: -4.019404411315918
    3. '<n' → logprob: -7.019404411315918
    4. '<len' → logprob: -8.019404411315918
    5. '<|end|>' → logprob: -11.019404411315918
    6. '<num' → logprob: -12.269404411315918
    7. '<size' → logprob: -12.769404411315918
    8. '<int' → logprob: -14.019404411315918
    9. '[' → logprob: -14.144404411315918
    10. '<count' → logprob: -14.519404411315918

Token 201: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0027604142669588327
    2. ' n' → logprob: -6.127760410308838
    3. 'len' → logprob: -7.627760410308838
    4. 's' → logprob: -9.877760887145996
    5. ' len' → logprob: -11.252760887145996
    6. '   ' → logprob: -11.752760887145996
    7. '           ' → logprob: -12.377760887145996
    8. '               ' → logprob: -12.377760887145996
    9. ' ' → logprob: -13.377760887145996
    10. '                   ' → logprob: -13.752760887145996

Token 202: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1269354522228241
    2. 'and' → logprob: -2.1269354820251465
    3. '           ' → logprob: -12.626935005187988
    4. '	and' → logprob: -14.001935005187988
    5. ' ' → logprob: -14.126935005187988
    6. '               ' → logprob: -14.251935005187988
    7. ':
' → logprob: -14.626935005187988
    8. '                   ' → logprob: -14.876935005187988
    9. '   ' → logprob: -15.001935005187988
    10. '       ' → logprob: -15.876935005187988

Token 203: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.31326815485954285
    2. ' count' → logprob: -1.3132681846618652
    3. '(count' → logprob: -12.063267707824707
    4. '	count' → logprob: -15.063267707824707
    5. ' ' → logprob: -16.313268661499023
    6. '[count' → logprob: -16.688268661499023
    7. '<count' → logprob: -17.188268661499023
    8. '   ' → logprob: -17.438268661499023
    9. '.count' → logprob: -17.563268661499023
    10. ' counts' → logprob: -17.688268661499023

Token 204: '_letters' (ID: 175934)
  Prédit: '_letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letters' → logprob: -0.0007781773456372321
    2. '_words' → logprob: -7.3757781982421875
    3. '_' → logprob: -8.875778198242188
    4. 'Letters' → logprob: -13.125778198242188
    5. 'letters' → logprob: -13.250778198242188
    6. '_tokens' → logprob: -13.375778198242188
    7. ' _' → logprob: -13.625778198242188
    8. '```' → logprob: -14.750778198242188
    9. '   ' → logprob: -15.000778198242188
    10. '=' → logprob: -15.000778198242188

Token 205: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06916870921850204
    2. '<' → logprob: -2.81916880607605
    3. '+' → logprob: -5.694168567657471
    4. ' +' → logprob: -6.069168567657471
    5. ' <=' → logprob: -6.694168567657471
    6. '<=' → logprob: -8.694169044494629
    7. ' ' → logprob: -10.069169044494629
    8. ' +=' → logprob: -11.569169044494629
    9. '[' → logprob: -11.694169044494629
    10. '<class' → logprob: -12.319169044494629

Token 206: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.0017073206836357713
    2. ' segment' → logprob: -6.376707553863525
    3. '(segment' → logprob: -12.751707077026367
    4. 'count' → logprob: -13.751707077026367
    5. 'target' → logprob: -14.501707077026367
    6. '   ' → logprob: -16.376707077026367
    7. 'segments' → logprob: -16.376707077026367
    8. 'length' → logprob: -16.501707077026367
    9. ' ' → logprob: -16.626707077026367
    10. '.segment' → logprob: -16.626707077026367

Token 207: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.00028421927709132433
    2. '_letters' → logprob: -8.250284194946289
    3. '_' → logprob: -11.250284194946289
    4. ' _' → logprob: -12.875284194946289
    5. 'len' → logprob: -13.125284194946289
    6. 'en' → logprob: -14.125284194946289
    7. '_words' → logprob: -14.125284194946289
    8. 'letters' → logprob: -14.125284194946289
    9. '   ' → logprob: -14.625284194946289
    10. 'Len' → logprob: -15.000284194946289

Token 208: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1983867734670639
    2. ':' → logprob: -2.1983866691589355
    3. ' and' → logprob: -3.1983866691589355
    4. '                   ' → logprob: -3.6983866691589355
    5. 'and' → logprob: -6.3233866691589355
    6. '               ' → logprob: -7.3233866691589355
    7. '                       ' → logprob: -7.5733866691589355
    8. ':

' → logprob: -9.323387145996094
    9. '                           ' → logprob: -9.823387145996094
    10. '):
' → logprob: -9.948387145996094

Token 209: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.023892970755696297
    2. ' count' → logprob: -4.648892879486084
    3. 'count' → logprob: -5.023892879486084
    4. ' if' → logprob: -6.148892879486084
    5. '                    
' → logprob: -6.773892879486084
    6. '               ' → logprob: -7.648892879486084
    7. ' word' → logprob: -7.773892879486084
    8. '   ' → logprob: -8.273893356323242
    9. ' and' → logprob: -8.273893356323242
    10. ' ' → logprob: -8.398893356323242

Token 210: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6983783841133118
    2. 'count' (adapté à ' count') → logprob: -0.6983783841133118
    3. '                   ' → logprob: -6.573378562927246
    4. ' word' → logprob: -6.573378562927246
    5. '                       ' → logprob: -7.198378562927246
    6. ' if' → logprob: -7.198378562927246
    7. 'word' → logprob: -8.698378562927246
    8. '[count' → logprob: -8.823378562927246
    9. '	count' → logprob: -9.073378562927246
    10. 'if' → logprob: -9.573378562927246

Token 211: '_letters' (ID: 175934)
  Prédit: '_letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letters' → logprob: -0.0007067138212732971
    2. '_' → logprob: -7.750706672668457
    3. '_words' → logprob: -8.250706672668457
    4. 'letters' → logprob: -12.125706672668457
    5. '_tokens' → logprob: -13.625706672668457
    6. 'Letters' → logprob: -13.625706672668457
    7. ' _' → logprob: -13.875706672668457
    8. '_chars' → logprob: -14.375706672668457
    9. '+' → logprob: -14.500706672668457
    10. '_le' → logprob: -14.625706672668457

Token 212: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16141805052757263
    2. '+=' → logprob: -1.911418080329895
    3. '+' → logprob: -6.9114179611206055
    4. '   ' → logprob: -9.286417961120605
    5. ' +' → logprob: -10.411417961120605
    6. '    ' → logprob: -10.661417961120605
    7. '                   ' → logprob: -11.411417961120605
    8. '       ' → logprob: -11.536417961120605
    9. '           ' → logprob: -12.036417961120605
    10. '=' → logprob: -12.286417961120605

Token 213: ' lengths' (ID: 51957)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.5450721383094788
    2. 'len' → logprob: -0.9200721383094788
    3. ' len' → logprob: -4.170072078704834
    4. ' lengths' → logprob: -5.170072078704834
    5. ' length' → logprob: -7.920072078704834
    6. 'sum' → logprob: -9.420072555541992
    7. 'leng' → logprob: -10.170072555541992
    8. '   ' → logprob: -11.170072555541992
    9. ' sum' → logprob: -11.420072555541992
    10. '(len' → logprob: -11.545072555541992

Token 214: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -7.278864359250292e-05
    2. '[' → logprob: -9.625072479248047
    3. ' [' → logprob: -12.125072479248047
    4. '[position' → logprob: -14.875072479248047
    5. '[
' → logprob: -15.375072479248047
    6. '[word' → logprob: -15.875072479248047
    7. '```' → logprob: -16.250072479248047
    8. '][' → logprob: -16.500072479248047
    9. '                   ' → logprob: -16.750072479248047
    10. '[token' → logprob: -17.000072479248047

Token 215: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010303596965968609
    2. '])' → logprob: -5.260303497314453
    3. ']+' → logprob: -6.385303497314453
    4. ']
' → logprob: -6.510303497314453
    5. '[pos' → logprob: -7.510303497314453
    6. '<|end|>' → logprob: -7.885303497314453
    7. ' ]' → logprob: -8.135303497314453
    8. ')]' → logprob: -8.385303497314453
    9. ')' → logprob: -9.760303497314453
    10. ']==' → logprob: -10.010303497314453

Token 216: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0020279695745557547
    2. '
' → logprob: -7.627027988433838
    3. '               ' → logprob: -7.627027988433838
    4. '<|end|>' → logprob: -7.627027988433838
    5. '           ' → logprob: -8.75202751159668
    6. '<|end|>' → logprob: -8.87702751159668
    7. '                    
' → logprob: -9.25202751159668
    8. '   ' → logprob: -10.25202751159668
    9. '```' → logprob: -10.75202751159668
    10. '                       ' → logprob: -11.00202751159668

Token 217: ' pos' (ID: 1253)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4596168100833893
    2. 'pos' (adapté à ' pos') → logprob: -1.334616780281067
    3. ' pos' → logprob: -2.9596168994903564
    4. ' if' → logprob: -3.4596168994903564
    5. 'if' → logprob: -4.084616661071777
    6. '                    
' → logprob: -6.834616661071777
    7. '               ' → logprob: -6.959616661071777
    8. '   ' → logprob: -7.209616661071777
    9. '           ' → logprob: -7.959616661071777
    10. '                    ' → logprob: -8.084616661071777

Token 218: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.28634780645370483
    2. ' +=' → logprob: -1.4113478660583496
    3. '+' → logprob: -5.28634786605835
    4. '++' → logprob: -10.036347389221191
    5. '<|end|>' → logprob: -10.786347389221191
    6. ' +' → logprob: -10.911347389221191
    7. '```' → logprob: -11.161347389221191
    8. ']+=' → logprob: -11.536347389221191
    9. ')' → logprob: -12.161347389221191
    10. '   ' → logprob: -12.911347389221191

Token 219: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001170225441455841
    2. ' ' → logprob: -6.7511701583862305
    3. '```' → logprob: -18.376171112060547
    4. '   ' → logprob: -19.751171112060547
    5. '１' → logprob: -20.001171112060547
    6. '۱' → logprob: -20.126171112060547
    7. '0' → logprob: -20.376171112060547
    8. '<|end|>' → logprob: -20.938671112060547
    9. ' ' → logprob: -21.063671112060547
    10. '+' → logprob: -21.438671112060547

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -18.375003814697266
    4. '   ' → logprob: -19.187503814697266
    5. '１' → logprob: -19.250003814697266
    6. '۱' → logprob: -20.000003814697266
    7. '0' → logprob: -20.937503814697266
    8. '१' → logprob: -21.000003814697266
    9. '১' → logprob: -21.312503814697266
    10. '
' → logprob: -21.437503814697266

Token 221: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07619195431470871
    2. '
' → logprob: -2.9511919021606445
    3. '                   ' → logprob: -4.5761919021606445
    4. '<|end|>' → logprob: -5.7011919021606445
    5. ' 
' → logprob: -6.3261919021606445
    6. '           ' → logprob: -6.3261919021606445
    7. '                ' → logprob: -6.9511919021606445
    8. '                
' → logprob: -7.5761919021606445
    9. ' if' → logprob: -7.7011919021606445
    10. '       ' → logprob: -7.9511919021606445

Token 222: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03519792854785919
    2. '                   ' → logprob: -3.4101979732513428
    3. '           ' → logprob: -7.410197734832764
    4. '<|end|>' → logprob: -8.410198211669922
    5. '```' → logprob: -8.535198211669922
    6. '                
' → logprob: -9.285198211669922
    7. '                ' → logprob: -9.410198211669922
    8. '
' → logprob: -9.910198211669922
    9. '                    
' → logprob: -10.035198211669922
    10. '       ' → logprob: -10.160198211669922

Token 223: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004143099766224623
    2. ' if' → logprob: -5.629143238067627
    3. '           ' → logprob: -7.754143238067627
    4. 'if' (adapté à ' if') → logprob: -10.504142761230469
    5. ' ' → logprob: -11.129142761230469
    6. '```' → logprob: -11.254142761230469
    7. '                   ' → logprob: -11.254142761230469
    8. '       ' → logprob: -11.879142761230469
    9. '<|end|>' → logprob: -11.879142761230469
    10. '                ' → logprob: -12.004142761230469

Token 224: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.47407862544059753
    2. 'count' → logprob: -0.9740786552429199
    3. ' ' → logprob: -13.849078178405762
    4. ' not' → logprob: -14.849078178405762
    5. '	count' → logprob: -16.099079132080078
    6. '   ' → logprob: -16.349079132080078
    7. '(count' → logprob: -16.474079132080078
    8. ' counts' → logprob: -17.474079132080078
    9. 'counts' → logprob: -18.224079132080078
    10. 'not' → logprob: -19.349079132080078

Token 225: '_letters' (ID: 175934)
  Prédit: '_letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letters' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -13.125003814697266
    3. '_le' → logprob: -14.625003814697266
    4. ' _' → logprob: -14.875003814697266
    5. '_tokens' → logprob: -14.875003814697266
    6. '_less' → logprob: -16.125003814697266
    7. '```' → logprob: -16.500003814697266
    8. '_letter' → logprob: -17.500003814697266
    9. '_LE' → logprob: -17.500003814697266
    10. '>' → logprob: -18.000003814697266

Token 226: ' !=' (ID: 1666)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16190747916698456
    2. '>' → logprob: -1.911907434463501
    3. ' <' → logprob: -6.78690767288208
    4. ' !=' → logprob: -8.161907196044922
    5. '<' → logprob: -8.536907196044922
    6. '!=' → logprob: -10.411907196044922
    7. ' ==' → logprob: -10.536907196044922
    8. '==' → logprob: -11.786907196044922
    9. ' ' → logprob: -12.536907196044922
    10. '   ' → logprob: -13.911907196044922

Token 227: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.4740791916847229
    2. 'segment' → logprob: -0.9740791916847229
    3. '(segment' → logprob: -13.099079132080078
    4. ' ' → logprob: -17.349079132080078
    5. '.segment' → logprob: -18.099079132080078
    6. '   ' → logprob: -18.224079132080078
    7. '```' → logprob: -19.224079132080078
    8. ' segmento' → logprob: -19.349079132080078
    9. ' ' → logprob: -19.599079132080078
    10. 'egment' → logprob: -19.849079132080078

Token 228: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -14.375000953674316
    3. '_LEN' → logprob: -16.625
    4. 'len' → logprob: -17.5
    5. 'en' → logprob: -17.75
    6. ' _' → logprob: -18.0
    7. 'Len' → logprob: -18.0
    8. '_le' → logprob: -18.875
    9. 'et' → logprob: -19.0
    10. '_l' → logprob: -19.875

Token 229: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8784225583076477
    2. ':
' → logprob: -0.8784225583076477
    3. '               ' → logprob: -2.503422498703003
    4. '                   ' → logprob: -2.503422498703003
    5. '           ' → logprob: -5.753422737121582
    6. ' or' → logprob: -6.753422737121582
    7. '                       ' → logprob: -7.378422737121582
    8. ' and' → logprob: -8.628422737121582
    9. '                           ' → logprob: -9.253422737121582
    10. ',' → logprob: -9.503422737121582

Token 230: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0012172595597803593
    2. '               ' → logprob: -6.751217365264893
    3. '                       ' → logprob: -10.251216888427734
    4. '           ' → logprob: -12.126216888427734
    5. '                           ' → logprob: -13.126216888427734
    6. '		           ' → logprob: -13.751216888427734
    7. ',' → logprob: -13.751216888427734
    8. ':
' → logprob: -14.751216888427734
    9. '	               ' → logprob: -14.751216888427734
    10. '                  ' → logprob: -15.251216888427734

Token 231: ' matched' (ID: 31366)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.026704423129558563
    2. '               ' → logprob: -3.6517043113708496
    3. '           ' → logprob: -8.651704788208008
    4. '   ' → logprob: -8.901704788208008
    5. '                       ' → logprob: -9.651704788208008
    6. ' matched' → logprob: -11.276704788208008
    7. '       ' → logprob: -12.276704788208008
    8. '
' → logprob: -12.651704788208008
    9. 'matched' (adapté à ' matched') → logprob: -13.401704788208008
    10. ' break' → logprob: -13.526704788208008

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47113755345344543
    2. '=' → logprob: -1.096137523651123
    3. '=False' → logprob: -3.221137523651123
    4. ':' → logprob: -7.596137523651123
    5. '=True' → logprob: -7.596137523651123
    6. '               ' → logprob: -8.971138000488281
    7. '==' → logprob: -9.221138000488281
    8. '           ' → logprob: -9.221138000488281
    9. ':
' → logprob: -9.471138000488281
    10. 'False' → logprob: -9.596138000488281

Token 233: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.006715370807796717
    2. ' False' → logprob: -5.006715297698975
    3. '(False' → logprob: -18.881715774536133
    4. '=False' → logprob: -21.131715774536133
    5. 'false' → logprob: -23.006715774536133
    6. '   ' → logprob: -23.256715774536133
    7. '.False' → logprob: -23.631715774536133
    8. 'True' → logprob: -24.131715774536133
    9. '
' → logprob: -24.131715774536133
    10. 'F' → logprob: -24.256715774536133

Token 234: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004879915213678032
    2. '               ' → logprob: -8.37548828125
    3. '           ' → logprob: -8.75048828125
    4. '                       ' → logprob: -9.75048828125
    5. '       ' → logprob: -11.12548828125
    6. '<|end|>' → logprob: -12.00048828125
    7. '		           ' → logprob: -12.25048828125
    8. '   ' → logprob: -12.37548828125
    9. '                           ' → logprob: -12.50048828125
    10. '	               ' → logprob: -13.50048828125

Token 235: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.001709328847937286
    2. '               ' → logprob: -6.876709461212158
    3. '           ' → logprob: -7.751709461212158
    4. '                       ' → logprob: -9.501708984375
    5. '       ' → logprob: -9.876708984375
    6. '   ' → logprob: -10.501708984375
    7. '                           ' → logprob: -10.626708984375
    8. '```' → logprob: -10.876708984375
    9. '		           ' → logprob: -11.251708984375
    10. '<|end|>' → logprob: -11.251708984375

Token 236: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.448158323764801
    2. 'break' (adapté à ' break') → logprob: -1.4481582641601562
    3. '               ' → logprob: -2.4481582641601562
    4. ' break' → logprob: -3.6981582641601562
    5. '           ' → logprob: -4.323158264160156
    6. '                       ' → logprob: -6.698158264160156
    7. '                           ' → logprob: -8.823158264160156
    8. '	break' → logprob: -9.323158264160156
    9. '```' → logprob: -9.573158264160156
    10. '   ' → logprob: -9.823158264160156

Token 237: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014773311093449593
    2. '               ' → logprob: -4.264773368835449
    3. '<|end|>' → logprob: -7.889773368835449
    4. '       ' → logprob: -8.88977336883545
    5. ',' → logprob: -10.26477336883545
    6. '```' → logprob: -11.63977336883545
    7. '	       ' → logprob: -11.76477336883545
    8. '
' → logprob: -12.13977336883545
    9. ')' → logprob: -12.26477336883545
    10. ' else' → logprob: -12.26477336883545

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23980654776096344
    2. '               ' → logprob: -1.8648065328598022
    3. '       ' → logprob: -3.114806652069092
    4. '<|end|>' → logprob: -4.489806652069092
    5. '```' → logprob: -7.239806652069092
    6. ',' → logprob: -8.239806175231934
    7. '            
' → logprob: -8.614806175231934
    8. ')' → logprob: -8.739806175231934
    9. '            ' → logprob: -8.864806175231934
    10. '                   ' → logprob: -8.864806175231934

Token 239: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15321418642997742
    2. ' if' → logprob: -2.6532142162323
    3. '           ' → logprob: -2.9032142162323
    4. 'if' (adapté à ' if') → logprob: -4.903213977813721
    5. '<|end|>' → logprob: -5.028213977813721
    6. '   ' → logprob: -6.278213977813721
    7. ' ' → logprob: -8.403214454650879
    8. '	if' → logprob: -9.028214454650879
    9. '        ' → logprob: -9.403214454650879
    10. ')' → logprob: -9.528214454650879

Token 240: ' matched' (ID: 31366)
  Prédit: ' matched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matched' → logprob: -0.00042114028474316
    2. 'matched' → logprob: -8.000421524047852
    3. ' not' → logprob: -9.375421524047852
    4. 'not' → logprob: -14.750421524047852
    5. 'Matched' → logprob: -15.875421524047852
    6. ' ' → logprob: -15.875421524047852
    7. ' ' → logprob: -16.75042152404785
    8. ' found' → logprob: -17.62542152404785
    9. ' merged' → logprob: -19.62542152404785
    10. ' mat' → logprob: -19.75042152404785

Token 241: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1218583881855011
    2. ':
' → logprob: -2.7468583583831787
    3. '               ' → logprob: -2.9968583583831787
    4. ' and' → logprob: -7.996858596801758
    5. '           ' → logprob: -8.371858596801758
    6. ',' → logprob: -11.121858596801758
    7. '                       ' → logprob: -11.246858596801758
    8. '       ' → logprob: -11.496858596801758
    9. ':

' → logprob: -11.746858596801758
    10. '                   ' → logprob: -11.871858596801758

Token 242: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1205059215426445
    2. '           ' → logprob: -2.4955058097839355
    3. ' print' → logprob: -3.8705058097839355
    4. 'print' → logprob: -5.3705058097839355
    5. ' return' → logprob: -5.4955058097839355
    6. '       ' → logprob: -6.9955058097839355
    7. '   ' → logprob: -8.745506286621094
    8. 'return' → logprob: -8.995506286621094
    9. '```' → logprob: -9.245506286621094
    10. '                   ' → logprob: -9.745506286621094

Token 243: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.611262857913971
    2. 'print' (adapté à ' print') → logprob: -0.986262857913971
    3. '               ' → logprob: -2.486262798309326
    4. '   ' → logprob: -7.861262798309326
    5. '       ' → logprob: -8.361263275146484
    6. ' for' → logprob: -8.361263275146484
    7. '           ' → logprob: -9.111263275146484
    8. 'for' → logprob: -9.986263275146484
    9. ' return' → logprob: -10.236263275146484
    10. '                   ' → logprob: -10.611263275146484

Token 244: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.27072441577911377
    2. '("' → logprob: -1.7707244157791138
    3. '(words' → logprob: -3.520724296569824
    4. '('' → logprob: -3.895724296569824
    5. 's' → logprob: -4.895724296569824
    6. '(f' → logprob: -5.395724296569824
    7. '(' → logprob: -6.145724296569824
    8. '(lines' → logprob: -6.770724296569824
    9. 'words' → logprob: -7.145724296569824
    10. '(pos' → logprob: -8.395724296569824

Token 245: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009881501318886876
    2. '+' → logprob: -7.750988006591797
    3. ' )' → logprob: -8.250988006591797
    4. ',' → logprob: -8.375988006591797
    5. ')
' → logprob: -10.250988006591797
    6. ' +' → logprob: -10.875988006591797
    7. ',end' → logprob: -13.250988006591797
    8. ' ,' → logprob: -13.375988006591797
    9. '+)' → logprob: -13.625988006591797
    10. ')`' → logprob: -14.125988006591797

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.500027656555176
    3. ')' → logprob: -16.250028610229492
    4. '```' → logprob: -17.125028610229492
    5. '0' → logprob: -17.250028610229492
    6. '   ' → logprob: -17.375028610229492
    7. ',' → logprob: -18.125028610229492
    8. '=' → logprob: -18.625028610229492
    9. '
' → logprob: -18.875028610229492
    10. '+' → logprob: -19.125028610229492

Token 247: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.125210297293961e-05
    2. ')
' → logprob: -9.875081062316895
    3. ',' → logprob: -10.500081062316895
    4. ' )' → logprob: -14.125081062316895
    5. '),' → logprob: -15.250081062316895
    6. '))' → logprob: -15.375081062316895
    7. ')}' → logprob: -16.00008201599121
    8. ')`' → logprob: -16.00008201599121
    9. '<|end|>' → logprob: -16.12508201599121
    10. ')return' → logprob: -16.12508201599121

Token 248: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 249: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008608191274106503
    2. '               ' → logprob: -5.258608341217041
    3. 'break' (adapté à ' break') → logprob: -6.008608341217041
    4. ' return' → logprob: -7.008608341217041
    5. ' break' → logprob: -12.133607864379883
    6. '           ' → logprob: -13.508607864379883
    7. '       ' → logprob: -16.008607864379883
    8. '```' → logprob: -17.008607864379883
    9. '	return' → logprob: -17.133607864379883
    10. 'continue' → logprob: -17.133607864379883

Token 250: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 252: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04858975484967232
    2. '__' → logprob: -3.0485897064208984
    3. ' ' → logprob: -13.798589706420898
    4. 'name' → logprob: -14.548589706420898
    5. '_name' → logprob: -15.048589706420898
    6. ' ' → logprob: -15.298589706420898
    7. '  ' → logprob: -16.2985897064209
    8. '_' → logprob: -16.9235897064209
    9. '/__' → logprob: -17.1735897064209
    10. ' name' → logprob: -18.2985897064209

Token 253: 'name' (ID: 897)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.42048728466033936
    2. '__' → logprob: -1.4204872846603394
    3. '==' → logprob: -2.295487403869629
    4. '=="' → logprob: -7.920487403869629
    5. ' __' → logprob: -8.170487403869629
    6. '=='' → logprob: -8.795487403869629
    7. '[' → logprob: -10.545487403869629
    8. '__.__' → logprob: -10.670487403869629
    9. '_' → logprob: -10.920487403869629
    10. '=' → logprob: -10.920487403869629

Token 254: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003800296690315008
    2. '==' → logprob: -8.25037956237793
    3. '__.__' → logprob: -9.25037956237793
    4. ' ==' → logprob: -11.12537956237793
    5. '__.' → logprob: -12.12537956237793
    6. '=="' → logprob: -13.62537956237793
    7. '.__' → logprob: -15.00037956237793
    8. '=='' → logprob: -15.62537956237793
    9. '__["' → logprob: -15.75037956237793
    10. '_' → logprob: -16.37537956237793

Token 255: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.30699869990348816
    2. '==' → logprob: -1.6819987297058105
    3. '__' → logprob: -2.5569987297058105
    4. '=="' → logprob: -8.431998252868652
    5. '"' → logprob: -8.556998252868652
    6. '=='' → logprob: -9.181998252868652
    7. '.' → logprob: -9.681998252868652
    8. ''' → logprob: -9.931998252868652
    9. '=' → logprob: -10.056998252868652
    10. ' ' → logprob: -10.806998252868652

Token 256: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4741372764110565
    2. ''' → logprob: -0.9741373062133789
    3. '__' → logprob: -10.349137306213379
    4. ' "__' → logprob: -10.849137306213379
    5. ' '__' → logprob: -12.474137306213379
    6. ''"' → logprob: -12.599137306213379
    7. '"'' → logprob: -13.974137306213379
    8. ''name' → logprob: -15.599137306213379
    9. '"name' → logprob: -15.724137306213379
    10. '"user' → logprob: -16.849136352539062

Token 257: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -5.800739018013701e-05
    2. 'name' → logprob: -10.0000581741333
    3. '__' → logprob: -11.3750581741333
    4. ''' → logprob: -14.0000581741333
    5. ' main' → logprob: -16.250057220458984
    6. '_main' → logprob: -16.375057220458984
    7. ' '__' → logprob: -17.375057220458984
    8. ''m' → logprob: -17.375057220458984
    9. ''name' → logprob: -17.375057220458984
    10. 'm' → logprob: -17.750057220458984

Token 258: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.0025014597922563553
    2. '__' → logprob: -6.002501487731934
    3. '__":
' → logprob: -10.627501487731934
    4. '()' → logprob: -14.252501487731934
    5. '':
' → logprob: -14.752501487731934
    6. '_' → logprob: -15.627501487731934
    7. '():
' → logprob: -16.377500534057617
    8. '__:' → logprob: -16.502500534057617
    9. '__.' → logprob: -16.627500534057617
    10. '```' → logprob: -16.877500534057617

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01839340478181839
    2. ' main' → logprob: -4.518393516540527
    3. 'main' → logprob: -5.393393516540527
    4. '	main' → logprob: -5.893393516540527
    5. '```' → logprob: -12.143393516540527
    6. '    
' → logprob: -12.643393516540527
    7. '   ' → logprob: -13.393393516540527
    8. '_main' → logprob: -13.643393516540527
    9. ' ' → logprob: -14.143393516540527
    10. '  ' → logprob: -14.643393516540527

Token 260: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -15.75
    3. 'import' → logprob: -19.5
    4. '	main' → logprob: -21.0
    5. '   ' → logprob: -21.875
    6. '(main' → logprob: -25.375
    7. '.main' → logprob: -26.375
    8. '_main' → logprob: -27.0
    9. '```' → logprob: -27.625
    10. 'from' → logprob: -27.875

Token 261: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 259
Tokens correctement prédits (1ère position, stricte): 112
Tokens correctement prédits (1ère position, avec adaptation): 116
Tokens correctement prédits (top 10): 215
Précision stricte (1ère position): 43.24%
Précision adaptée (1ère position): 44.79%
Précision (top 10): 83.01%
================================================================================
