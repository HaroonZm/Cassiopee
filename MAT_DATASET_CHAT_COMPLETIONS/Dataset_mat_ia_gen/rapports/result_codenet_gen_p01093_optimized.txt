================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

while True:
    n = int(input())
    if n == 0:
        break
    scores = list(map(int, input().split()))
    scores.sort()
    min_diff = min(scores[i+1] - scores[i] for i in range(n-1))
    print(min_diff)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005573217757046223
    2. '.' → logprob: -5.255573272705078
    3. ' (' → logprob: -9.380573272705078
    4. '(
' → logprob: -9.505573272705078
    5. ')' → logprob: -9.880573272705078
    6. '()' → logprob: -10.130573272705078
    7. '[' → logprob: -11.130573272705078
    8. '('' → logprob: -11.255573272705078
    9. '=' → logprob: -11.755573272705078
    10. ' ' → logprob: -11.755573272705078

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.12724284827709198
    2. 'sys' → logprob: -2.1272428035736084
    3. ' input' → logprob: -8.752243041992188
    4. 'input' → logprob: -8.877243041992188
    5. '	sys' → logprob: -11.877243041992188
    6. '=sys' → logprob: -12.127243041992188
    7. '(sys' → logprob: -12.877243041992188
    8. ' ' → logprob: -13.502243041992188
    9. ' system' → logprob: -15.002243041992188
    10. '_sys' → logprob: -15.627243041992188

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0013695230009034276
    2. ' .' → logprob: -7.376369476318359
    3. '.stdin' → logprob: -7.751369476318359
    4. '.import' → logprob: -9.25136947631836
    5. '.readline' → logprob: -9.50136947631836
    6. '.
' → logprob: -10.12636947631836
    7. '.argv' → logprob: -10.37636947631836
    8. '.stdout' → logprob: -11.37636947631836
    9. '.input' → logprob: -11.50136947631836
    10. '.exit' → logprob: -12.00136947631836

Token 7: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4887215197086334
    2. '.readline' → logprob: -0.988721489906311
    3. '.read' → logprob: -4.2387213706970215
    4. '```' → logprob: -10.61372184753418
    5. '.readlines' → logprob: -10.98872184753418
    6. 'read' → logprob: -10.98872184753418
    7. '.Read' → logprob: -11.11372184753418
    8. ' .' → logprob: -12.23872184753418
    9. ')' → logprob: -12.48872184753418
    10. '.write' → logprob: -12.61372184753418

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1419765055179596
    2. '(' → logprob: -2.2669765949249268
    3. '()
' → logprob: -4.266976356506348
    4. '(
' → logprob: -4.766976356506348
    5. '().' → logprob: -6.516976356506348
    6. '
' → logprob: -6.516976356506348
    7. '()\' → logprob: -7.016976356506348
    8. '()

' → logprob: -7.391976356506348
    9. '\' → logprob: -7.516976356506348
    10. '\n' → logprob: -7.641976356506348

Token 9: 'while' (ID: 7032)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18130798637866974
    2. '(' → logprob: -1.8063080310821533
    3. '().' → logprob: -6.806307792663574
    4. '()
' → logprob: -8.806307792663574
    5. '(
' → logprob: -9.931307792663574
    6. '()

' → logprob: -10.306307792663574
    7. ')' → logprob: -10.431307792663574
    8. '#' → logprob: -10.431307792663574
    9. 'def' → logprob: -10.681307792663574
    10. 'a' → logprob: -10.681307792663574

Token 10: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001505578518845141
    2. ' True' → logprob: -7.126505374908447
    3. '  ' → logprob: -7.626505374908447
    4. ' (' → logprob: -9.376505851745605
    5. ' )' → logprob: -10.501505851745605
    6. ' not' → logprob: -10.626505851745605
    7. '(' → logprob: -11.251505851745605
    8. ''' → logprob: -11.251505851745605
    9. '"' → logprob: -11.376505851745605
    10. '    ' → logprob: -11.626505851745605

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015460490249097347
    2. '():' → logprob: -6.6265459060668945
    3. ' :' → logprob: -8.876545906066895
    4. ':**' → logprob: -10.126545906066895
    5. '):' → logprob: -11.376545906066895
    6. '(:' → logprob: -12.501545906066895
    7. '':'' → logprob: -12.626545906066895
    8. '":"' → logprob: -12.626545906066895
    9. ':
' → logprob: -12.751545906066895
    10. ':return' → logprob: -13.001545906066895

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061137761920690536
    2. '    
' → logprob: -3.0611376762390137
    3. '    ' → logprob: -4.811137676239014
    4. '  
' → logprob: -6.686137676239014
    5. ' 
' → logprob: -7.561137676239014
    6. ':' → logprob: -7.936137676239014
    7. '     
' → logprob: -7.936137676239014
    8. '    
    
' → logprob: -8.061138153076172
    9. '(' → logprob: -8.186138153076172
    10. ' ' → logprob: -8.561138153076172

Token 13: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5407147407531738
    2. ' line' → logprob: -1.5407147407531738
    3. 'user' → logprob: -2.415714740753174
    4. '   ' → logprob: -2.540714740753174
    5. 'data' → logprob: -4.665714740753174
    6. ' user' → logprob: -4.790714740753174
    7. '    ' → logprob: -4.790714740753174
    8. 'text' → logprob: -5.915714740753174
    9. ' ' → logprob: -6.290714740753174
    10. 'inp' → logprob: -7.165714740753174

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11508874595165253
    2. '=' → logprob: -2.615088701248169
    3. ' ==' → logprob: -3.615088701248169
    4. ' ' → logprob: -4.990088939666748
    5. ' :=' → logprob: -7.240088939666748
    6. '==' → logprob: -7.865088939666748
    7. '=int' → logprob: -8.74008846282959
    8. '=input' → logprob: -9.24008846282959
    9. ' >' → logprob: -9.74008846282959
    10. '.' → logprob: -9.74008846282959

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.1448471546173096
    2. ' input' → logprob: -1.1448471546173096
    3. 'int' → logprob: -1.6448471546173096
    4. 'input' → logprob: -1.7698471546173096
    5. ' ' → logprob: -10.39484691619873
    6. '=int' → logprob: -11.64484691619873
    7. '=input' → logprob: -12.51984691619873
    8. '   ' → logprob: -12.76984691619873
    9. 'in' → logprob: -13.76984691619873
    10. '(int' → logprob: -14.39484691619873

Token 16: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02975963056087494
    2. '(' → logprob: -3.529759645462036
    3. 'input' → logprob: -12.029759407043457
    4. '(
' → logprob: -13.904759407043457
    5. '(in' → logprob: -14.154759407043457
    6. '()' → logprob: -14.154759407043457
    7. '(sys' → logprob: -15.029759407043457
    8. ' (' → logprob: -15.779759407043457
    9. '(

' → logprob: -16.154760360717773
    10. '(inp' → logprob: -16.529760360717773

Token 17: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03491085022687912
    2. '()))' → logprob: -3.9099109172821045
    3. ')' → logprob: -4.534910678863525
    4. '()' → logprob: -5.909910678863525
    5. '))' → logprob: -7.159910678863525
    6. '(' → logprob: -11.034911155700684
    7. '().' → logprob: -11.284911155700684
    8. ' ())' → logprob: -11.409911155700684
    9. '())
' → logprob: -12.909911155700684
    10. '()),' → logprob: -14.034911155700684

Token 18: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 19: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28776705265045166
    2. '<|end|>' → logprob: -2.412766933441162
    3. '   ' → logprob: -3.162766933441162
    4. ')' → logprob: -3.162766933441162
    5. '    ' → logprob: -3.162766933441162
    6. '  ' → logprob: -4.037766933441162
    7. ' if' → logprob: -4.912766933441162
    8. ' )' → logprob: -6.412766933441162
    9. '<|end|>' → logprob: -6.912766933441162
    10. ' 
' → logprob: -6.912766933441162

Token 20: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.006164951249957085
    2. ' not' → logprob: -5.131165027618408
    3. 'n' → logprob: -8.38116455078125
    4. ' ' → logprob: -12.63116455078125
    5. 'not' → logprob: -12.63116455078125
    6. '	n' → logprob: -14.88116455078125
    7. ' ' → logprob: -15.63116455078125
    8. ' н' → logprob: -17.75616455078125
    9. '  ' → logprob: -19.00616455078125
    10. '	not' → logprob: -19.00616455078125

Token 21: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.006471175234764814
    2. '==' → logprob: -5.256471157073975
    3. ' <=' → logprob: -7.006471157073975
    4. ' <' → logprob: -8.131471633911133
    5. ' ' → logprob: -11.506471633911133
    6. '<=' → logprob: -11.756471633911133
    7. ' >' → logprob: -12.256471633911133
    8. '<' → logprob: -12.631471633911133
    9. ')' → logprob: -12.631471633911133
    10. '   ' → logprob: -13.006471633911133

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023245712742209435
    2. '0' → logprob: -3.7732458114624023
    3. ' ' → logprob: -16.023244857788086
    4. '  ' → logprob: -16.148244857788086
    5. ' EOF' → logprob: -17.835744857788086
    6. '   ' → logprob: -17.898244857788086
    7. '    ' → logprob: -18.273244857788086
    8. ' a' → logprob: -18.523244857788086
    9. '_' → logprob: -18.648244857788086
    10. '=' → logprob: -18.710744857788086

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007101670489646494
    2. ' ' → logprob: -7.2507100105285645
    3. '-' → logprob: -16.750709533691406
    4. '```' → logprob: -17.000709533691406
    5. '   ' → logprob: -17.375709533691406
    6. '  ' → logprob: -17.563209533691406
    7. '1' → logprob: -17.750709533691406
    8. ''' → logprob: -18.313209533691406
    9. ')' → logprob: -18.438209533691406
    10. '    ' → logprob: -18.500709533691406

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016742534353397787
    2. ':
' → logprob: -8.875167846679688
    3. ':return' → logprob: -11.250167846679688
    4. ' :' → logprob: -11.750167846679688
    5. '   ' → logprob: -12.250167846679688
    6. '       ' → logprob: -15.125167846679688
    7. ' break' → logprob: -15.125167846679688
    8. '	break' → logprob: -15.250167846679688
    9. '):' → logprob: -15.625167846679688
    10. '<|end|>' → logprob: -15.875167846679688

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001628956088097766
    2. '   ' → logprob: -8.875163078308105
    3. ' break' → logprob: -12.125163078308105
    4. '    ' → logprob: -12.500163078308105
    5. '      ' → logprob: -12.625163078308105
    6. '     ' → logprob: -12.875163078308105
    7. '	break' → logprob: -13.000163078308105
    8. '\n' → logprob: -13.375163078308105
    9. ':' → logprob: -13.875163078308105
    10. '<|end|>' → logprob: -14.750163078308105

Token 26: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.24161677062511444
    2. '       ' → logprob: -1.6166167259216309
    3. 'break' (adapté à ' break') → logprob: -4.616616725921631
    4. '   ' → logprob: -5.241616725921631
    5. '	break' → logprob: -7.241616725921631
    6. '    ' → logprob: -9.866617202758789
    7. '\n' → logprob: -10.491617202758789
    8. '_break' → logprob: -10.991617202758789
    9. '```' → logprob: -11.116617202758789
    10. '     ' → logprob: -11.241617202758789

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057575590908527374
    2. '    
' → logprob: -3.5575757026672363
    3. '\n' → logprob: -4.307575702667236
    4. '<|end|>' → logprob: -5.932575702667236
    5. ' ' → logprob: -6.182575702667236
    6. '\' → logprob: -6.307575702667236
    7. ')' → logprob: -6.432575702667236
    8. '  ' → logprob: -6.557575702667236
    9. '    ' → logprob: -6.682575702667236
    10. '  
' → logprob: -7.307575702667236

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07284392416477203
    2. '    
' → logprob: -2.6978440284729004
    3. '<|end|>' → logprob: -7.1978440284729
    4. '    ' → logprob: -7.3228440284729
    5. '```' → logprob: -8.322843551635742
    6. '\n' → logprob: -8.322843551635742
    7. '\' → logprob: -8.447843551635742
    8. '  ' → logprob: -8.697843551635742
    9. '  
' → logprob: -8.822843551635742
    10. '   
' → logprob: -9.072843551635742

Token 29: ' scores' (ID: 18923)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27094724774360657
    2. ' ' → logprob: -1.6459472179412842
    3. '    ' → logprob: -4.270947456359863
    4. ':' → logprob: -5.270947456359863
    5. '<|end|>' → logprob: -5.270947456359863
    6. ')' → logprob: -5.395947456359863
    7. '    
' → logprob: -5.645947456359863
    8. 'print' → logprob: -5.895947456359863
    9. '  ' → logprob: -6.020947456359863
    10. '#' → logprob: -6.770947456359863

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019483009353280067
    2. '=' → logprob: -4.0194830894470215
    3. '.' → logprob: -6.8944830894470215
    4. '[' → logprob: -8.894482612609863
    5. '[:]' → logprob: -9.519482612609863
    6. '.append' → logprob: -9.644482612609863
    7. ' ' → logprob: -11.519482612609863
    8. ' =[' → logprob: -12.144482612609863
    9. ' +=' → logprob: -12.269482612609863
    10. '_' → logprob: -12.394482612609863

Token 31: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.46813708543777466
    2. 'list' → logprob: -1.3431370258331299
    3. '[]' → logprob: -2.84313702583313
    4. '[' → logprob: -3.84313702583313
    5. ' []' → logprob: -3.84313702583313
    6. '[list' → logprob: -5.093137264251709
    7. ' [' → logprob: -5.218137264251709
    8. '[input' → logprob: -9.71813678741455
    9. '[len' → logprob: -11.09313678741455
    10. ' ' → logprob: -11.34313678741455

Token 32: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.12719392776489258
    2. '(' → logprob: -2.1271939277648926
    3. '(int' → logprob: -8.877193450927734
    4. '(input' → logprob: -9.627193450927734
    5. '(range' → logprob: -10.377193450927734
    6. '()' → logprob: -11.002193450927734
    7. '(scores' → logprob: -12.127193450927734
    8. '(eval' → logprob: -13.877193450927734
    9. 'map' → logprob: -14.002193450927734
    10. '(
' → logprob: -14.252193450927734

Token 33: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001970031065866351
    2. '(' → logprob: -6.251969814300537
    3. '(str' → logprob: -11.251970291137695
    4. 'int' → logprob: -11.876970291137695
    5. '(input' → logprob: -11.876970291137695
    6. ' (' → logprob: -11.876970291137695
    7. '(lambda' → logprob: -12.501970291137695
    8. ' int' → logprob: -14.251970291137695
    9. '<int' → logprob: -14.251970291137695
    10. '(
' → logprob: -14.376970291137695

Token 34: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1515115648508072
    2. ',input' → logprob: -2.1515116691589355
    3. '(' → logprob: -4.1515116691589355
    4. ',' → logprob: -4.7765116691589355
    5. 'input' → logprob: -9.526511192321777
    6. ' (' → logprob: -11.276511192321777
    7. ' ,' → logprob: -11.651511192321777
    8. ')' → logprob: -11.651511192321777
    9. ' input' → logprob: -12.151511192321777
    10. '=input' → logprob: -12.651511192321777

Token 35: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519400119781494
    2. ' input' → logprob: -1.5019400119781494
    3. '(input' → logprob: -12.25193977355957
    4. ',input' → logprob: -12.75193977355957
    5. '	input' → logprob: -13.50193977355957
    6. '=input' → logprob: -14.00193977355957
    7. '<input' → logprob: -15.37693977355957
    8. '[input' → logprob: -15.50193977355957
    9. '_input' → logprob: -15.87693977355957
    10. ')' → logprob: -15.87693977355957

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0206720617134124e-05
    2. '()' → logprob: -11.62501049041748
    3. ' ().' → logprob: -14.00001049041748
    4. '()))' → logprob: -15.75001049041748
    5. '())' → logprob: -16.000009536743164
    6. '(' → logprob: -16.750009536743164
    7. '()
' → logprob: -16.875009536743164
    8. '())))' → logprob: -17.625009536743164
    9. '()));' → logprob: -17.875009536743164
    10. ')' → logprob: -18.375009536743164

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0500195249915123
    2. 'strip' → logprob: -3.0500195026397705
    3. 'rstrip' → logprob: -6.55001974105835
    4. ' split' → logprob: -14.425019264221191
    5. '(split' → logprob: -15.675019264221191
    6. 'read' → logprob: -15.675019264221191
    7. 'rs' → logprob: -16.300020217895508
    8. 'spl' → logprob: -16.425020217895508
    9. ' strip' → logprob: -17.550020217895508
    10. ')' → logprob: -18.175020217895508

Token 38: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03372926265001297
    2. '())' → logprob: -4.158729076385498
    3. '))' → logprob: -4.283729076385498
    4. '()' → logprob: -5.783729076385498
    5. '(' → logprob: -7.658729076385498
    6. ')' → logprob: -8.783729553222656
    7. '()))
' → logprob: -10.533729553222656
    8. '())))' → logprob: -12.033729553222656
    9. '()));' → logprob: -13.158729553222656
    10. '   ' → logprob: -13.408729553222656

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.735481321811676
    2. ' sum' → logprob: -2.7354812622070312
    3. ' count' → logprob: -2.8604812622070312
    4. ' avg' → logprob: -2.8604812622070312
    5. ' average' → logprob: -3.1104812622070312
    6. 'avg' → logprob: -3.3604812622070312
    7. 'sum' → logprob: -3.3604812622070312
    8. 'average' → logprob: -3.4854812622070312
    9. 'count' → logprob: -3.6104812622070312
    10. ' total' → logprob: -3.6104812622070312

Token 40: ' scores' (ID: 18923)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9341901540756226
    2. 'avg' → logprob: -1.6841901540756226
    3. 'average' → logprob: -2.184190273284912
    4. 'mean' → logprob: -3.059190273284912
    5. ' avg' → logprob: -3.309190273284912
    6. ' mean' → logprob: -3.309190273284912
    7. 'count' → logprob: -3.559190273284912
    8. ' average' → logprob: -3.559190273284912
    9. ' count' → logprob: -3.809190273284912
    10. 'sum' → logprob: -4.059190273284912

Token 41: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.275554358959198
    2. '.' → logprob: -1.5255544185638428
    3. '.count' → logprob: -3.9005544185638428
    4. '_count' → logprob: -7.025554180145264
    5. '.append' → logprob: -7.400554180145264
    6. '_sum' → logprob: -8.275554656982422
    7. '_sorted' → logprob: -8.275554656982422
    8. '=' → logprob: -8.400554656982422
    9. '.remove' → logprob: -9.150554656982422
    10. ')' → logprob: -9.275554656982422

Token 42: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0021064826287329197
    2. '(' → logprob: -6.377106666564941
    3. '(reverse' → logprob: -7.877106666564941
    4. '())' → logprob: -11.627106666564941
    5. ')' → logprob: -12.002106666564941
    6. '()
' → logprob: -13.002106666564941
    7. ' ()' → logprob: -13.127106666564941
    8. '()`' → logprob: -14.002106666564941
    9. 'reverse' → logprob: -14.252106666564941
    10. '()>' → logprob: -14.377106666564941

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06904366612434387
    2. '    
' → logprob: -3.4440436363220215
    3. ' 
' → logprob: -4.6940436363220215
    4. '    ' → logprob: -5.3190436363220215
    5. ' ' → logprob: -5.5690436363220215
    6. '[' → logprob: -5.8190436363220215
    7. '   
' → logprob: -6.3190436363220215
    8. '
' → logprob: -6.4440436363220215
    9. '     
' → logprob: -6.4440436363220215
    10. '```' → logprob: -6.6940436363220215

Token 44: ' min' (ID: 1349)
  Prédit: ' median'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' median' → logprob: -1.6754306554794312
    2. 'median' → logprob: -1.6754306554794312
    3. ' if' → logprob: -2.1754307746887207
    4. '   ' → logprob: -2.6754307746887207
    5. 'if' → logprob: -2.9254307746887207
    6. ' mid' → logprob: -3.1754307746887207
    7. ' middle' → logprob: -3.3004307746887207
    8. 'count' → logprob: -3.4254307746887207
    9. 'middle' → logprob: -3.5504307746887207
    10. ' low' → logprob: -3.5504307746887207

Token 45: '_diff' (ID: 41047)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17536936700344086
    2. '_score' → logprob: -2.0503692626953125
    3. '_val' → logprob: -3.8003692626953125
    4. '_diff' → logprob: -4.9253692626953125
    5. '_gap' → logprob: -6.9253692626953125
    6. '_value' → logprob: -7.9253692626953125
    7. '_s' → logprob: -7.9253692626953125
    8. '_scores' → logprob: -8.175369262695312
    9. '_=' → logprob: -9.550369262695312
    10. '_difference' → logprob: -9.675369262695312

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005243833642452955
    2. '=' → logprob: -5.25524377822876
    3. '_' → logprob: -12.005244255065918
    4. ' ' → logprob: -12.755244255065918
    5. 's' → logprob: -14.630244255065918
    6. ' =
' → logprob: -15.130244255065918
    7. ',' → logprob: -16.0052433013916
    8. ' _' → logprob: -16.1302433013916
    9. '   ' → logprob: -16.7552433013916
    10. '  ' → logprob: -17.5052433013916

Token 47: ' min' (ID: 1349)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.7477171421051025
    2. ' scores' → logprob: -1.3727171421051025
    3. 'scores' → logprob: -2.1227171421051025
    4. 'float' → logprob: -2.6227171421051025
    5. ' sys' → logprob: -3.4977171421051025
    6. '10' → logprob: -3.6227171421051025
    7. ' ' → logprob: -4.872716903686523
    8. ' abs' → logprob: -5.247716903686523
    9. '100' → logprob: -5.247716903686523
    10. 'sys' → logprob: -5.997716903686523

Token 48: '(scores' (ID: 154090)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38318920135498047
    2. '(scores' → logprob: -1.6331892013549805
    3. '(abs' → logprob: -2.1331892013549805
    4. '([' → logprob: -6.2581892013549805
    5. 's' → logprob: -7.3831892013549805
    6. '(len' → logprob: -8.00818920135498
    7. '(
' → logprob: -8.13318920135498
    8. '()' → logprob: -8.13318920135498
    9. 'scores' → logprob: -8.13318920135498
    10. 'abs' → logprob: -8.50818920135498

Token 49: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5279572606086731
    2. '[i' → logprob: -0.9029572606086731
    3. ')' → logprob: -5.777957439422607
    4. '[j' → logprob: -6.902957439422607
    5. '[-' → logprob: -8.65295696258545
    6. '[n' → logprob: -8.77795696258545
    7. '[k' → logprob: -8.90295696258545
    8. 's' → logprob: -9.90295696258545
    9. '[s' → logprob: -10.15295696258545
    10. '[
' → logprob: -10.77795696258545

Token 50: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008627458591945469
    2. ']' → logprob: -7.5008625984191895
    3. ' +' → logprob: -8.500863075256348
    4. ' -' → logprob: -10.000863075256348
    5. '-' → logprob: -11.250863075256348
    6. ')' → logprob: -11.375863075256348
    7. '1' → logprob: -11.625863075256348
    8. '+]' → logprob: -11.625863075256348
    9. ' ]' → logprob: -12.500863075256348
    10. '[' → logprob: -12.625863075256348

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000181372175575234
    2. ' ' → logprob: -8.625181198120117
    3. '   ' → logprob: -14.312681198120117
    4. '2' → logprob: -15.125181198120117
    5. '  ' → logprob: -15.437681198120117
    6. '```' → logprob: -16.187681198120117
    7. '0' → logprob: -16.312681198120117
    8. '+' → logprob: -17.000181198120117
    9. '`' → logprob: -17.562681198120117
    10. '3' → logprob: -17.625181198120117

Token 52: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5220661163330078
    2. '-' → logprob: -1.0220661163330078
    3. ']' → logprob: -3.522066116333008
    4. ')' → logprob: -4.272066116333008
    5. ' ' → logprob: -6.147066116333008
    6. '   ' → logprob: -7.522066116333008
    7. 's' → logprob: -9.147066116333008
    8. '  ' → logprob: -9.272066116333008
    9. '```' → logprob: -9.272066116333008
    10. '	' → logprob: -9.647066116333008

Token 53: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05499523505568504
    2. '-' → logprob: -2.92999529838562
    3. ' ' → logprob: -9.1799955368042
    4. '   ' → logprob: -12.3049955368042
    5. '-score' → logprob: -13.5549955368042
    6. '  ' → logprob: -13.6799955368042
    7. ')' → logprob: -14.3049955368042
    8. '-s' → logprob: -14.3049955368042
    9. ' ' → logprob: -14.6799955368042
    10. '    ' → logprob: -15.0549955368042

Token 54: ' scores' (ID: 18923)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.34848523139953613
    2. ' scores' → logprob: -1.2234852313995361
    3. 's' → logprob: -10.723484992980957
    4. '(scores' → logprob: -11.473484992980957
    5. 'score' → logprob: -12.598484992980957
    6. '_scores' → logprob: -13.348484992980957
    7. '<|end|>' → logprob: -13.348484992980957
    8. ' ' → logprob: -14.348484992980957
    9. '  ' → logprob: -15.223484992980957
    10. ')' → logprob: -15.598484992980957

Token 55: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013679367839358747
    2. '[' → logprob: -9.000136375427246
    3. '[s' → logprob: -12.250136375427246
    4. 'for' → logprob: -13.125136375427246
    5. ' for' → logprob: -13.500136375427246
    6. ' [' → logprob: -13.625136375427246
    7. ')' → logprob: -13.750136375427246
    8. ']' → logprob: -14.375136375427246
    9. ' ' → logprob: -14.375136375427246
    10. 's' → logprob: -14.500136375427246

Token 56: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0829821527004242
    2. 'for' → logprob: -3.082982063293457
    3. ')' → logprob: -3.457982063293457
    4. ' ' → logprob: -6.207982063293457
    5. '	for' → logprob: -9.332982063293457
    6. '   ' → logprob: -9.457982063293457
    7. ']' → logprob: -9.457982063293457
    8. ' )' → logprob: -10.207982063293457
    9. '  ' → logprob: -11.832982063293457
    10. '    ' → logprob: -12.707982063293457

Token 57: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0033254071604460478
    2. 'for' → logprob: -5.753325462341309
    3. ' ' → logprob: -9.253325462341309
    4. '	for' → logprob: -10.378325462341309
    5. ')' → logprob: -11.253325462341309
    6. '   ' → logprob: -12.628325462341309
    7. ' i' → logprob: -13.253325462341309
    8. '    ' → logprob: -13.628325462341309
    9. ' )' → logprob: -14.253325462341309
    10. '  ' → logprob: -15.003325462341309

Token 58: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00978347659111023
    2. 'i' → logprob: -4.6347832679748535
    3. ' ' → logprob: -11.134783744812012
    4. '	i' → logprob: -11.384783744812012
    5. '  ' → logprob: -14.009783744812012
    6. '   ' → logprob: -15.259783744812012
    7. '<|end|>' → logprob: -15.509783744812012
    8. ' ' → logprob: -15.634783744812012
    9. ' range' → logprob: -16.634782791137695
    10. '```' → logprob: -17.509782791137695

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.000824156915768981
    2. 'in' → logprob: -7.250823974609375
    3. ' ' → logprob: -9.625823974609375
    4. 'range' → logprob: -10.750823974609375
    5. ' range' → logprob: -10.750823974609375
    6. '<|end|>' → logprob: -12.375823974609375
    7. '  ' → logprob: -14.375823974609375
    8. ' i' → logprob: -15.750823974609375
    9. ' xrange' → logprob: -16.500823974609375
    10. '	in' → logprob: -16.750823974609375

Token 60: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759406685829163
    2. ' range' → logprob: -0.8259406685829163
    3. '(range' → logprob: -14.45094108581543
    4. '	range' → logprob: -15.07594108581543
    5. ' ' → logprob: -15.20094108581543
    6. ' xrange' → logprob: -15.57594108581543
    7. '  ' → logprob: -18.45094108581543
    8. '   ' → logprob: -18.45094108581543
    9. '.range' → logprob: -19.70094108581543
    10. 'ange' → logprob: -19.82594108581543

Token 61: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03017055243253708
    2. '(len' → logprob: -3.530170440673828
    3. '(' → logprob: -7.780170440673828
    4. 'len' → logprob: -13.530170440673828
    5. ' n' → logprob: -15.655170440673828
    6. 'n' → logprob: -15.655170440673828
    7. ' len' → logprob: -15.780170440673828
    8. ' (' → logprob: -16.155170440673828
    9. '   ' → logprob: -17.030170440673828
    10. '(
' → logprob: -17.780170440673828

Token 62: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03804275393486023
    2. ' -' → logprob: -3.2880427837371826
    3. ')' → logprob: -13.913043022155762
    4. '1' → logprob: -15.038043022155762
    5. ' ' → logprob: -16.163042068481445
    6. '))' → logprob: -17.913042068481445
    7. '   ' → logprob: -17.913042068481445
    8. '-)' → logprob: -18.038042068481445
    9. '<|end|>' → logprob: -18.413042068481445
    10. ' )' → logprob: -19.288042068481445

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012523093027994037
    2. ' ' → logprob: -9.00012493133545
    3. ')' → logprob: -14.12512493133545
    4. '<|end|>' → logprob: -15.75012493133545
    5. '```' → logprob: -15.81262493133545
    6. '   ' → logprob: -15.87512493133545
    7. '  ' → logprob: -16.187625885009766
    8. '2' → logprob: -16.812625885009766
    9. '۱' → logprob: -17.187625885009766
    10. '১' → logprob: -17.250125885009766

Token 64: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006161740166135132
    2. '))' → logprob: -7.500616073608398
    3. '   ' → logprob: -10.375616073608398
    4. ')
' → logprob: -11.125616073608398
    5. ' )' → logprob: -11.250616073608398
    6. ')))' → logprob: -12.750616073608398
    7. ')**' → logprob: -15.250616073608398
    8. ')`' → logprob: -15.750616073608398
    9. ')>' → logprob: -16.0006160736084
    10. ' ' → logprob: -16.2506160736084

Token 65: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.351503849029541
    2. '   ' → logprob: -1.351503849029541
    3. '    
' → logprob: -3.726503849029541
    4. 'print' → logprob: -4.476503849029541
    5. '<|end|>' → logprob: -7.601503849029541
    6. '\n' → logprob: -7.851503849029541
    7. 'for' → logprob: -8.101503372192383
    8. '```' → logprob: -8.226503372192383
    9. '  
' → logprob: -8.726503372192383
    10. '
' → logprob: -9.101503372192383

Token 66: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0892067402601242
    2. '
' → logprob: -2.7142066955566406
    3. 'print' (adapté à ' print') → logprob: -4.339206695556641
    4. '    
' → logprob: -5.214206695556641
    5. ' print' → logprob: -8.71420669555664
    6. 'for' → logprob: -9.33920669555664
    7. '```' → logprob: -9.58920669555664
    8. '\n' → logprob: -9.96420669555664
    9. '<|end|>' → logprob: -9.96420669555664
    10. ')' → logprob: -10.33920669555664

Token 67: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.16044315695762634
    2. '(' → logprob: -1.9104431867599487
    3. '(f' → logprob: -9.410443305969238
    4. '(scores' → logprob: -9.535443305969238
    5. '('' → logprob: -11.160443305969238
    6. '(abs' → logprob: -11.410443305969238
    7. 'min' → logprob: -11.910443305969238
    8. '()' → logprob: -12.035443305969238
    9. '(m' → logprob: -12.035443305969238
    10. '((' → logprob: -12.160443305969238

Token 68: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -14.000001907348633
    3. ' _' → logprob: -15.750001907348633
    4. '_d' → logprob: -15.875001907348633
    5. '_DIFF' → logprob: -16.000001907348633
    6. 'diff' → logprob: -16.375001907348633
    7. '_dist' → logprob: -16.750001907348633
    8. '_min' → logprob: -17.000001907348633
    9. ')_' → logprob: -17.375001907348633
    10. '_difference' → logprob: -17.750001907348633

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.375000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '))' → logprob: -16.750001907348633
    5. '`)' → logprob: -18.500001907348633
    6. ')`' → logprob: -18.500001907348633
    7. '')' → logprob: -19.750001907348633
    8. '）' → logprob: -20.000001907348633
    9. '}' → logprob: -20.250001907348633
    10. '   ' → logprob: -20.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 67
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 55
Précision stricte (1ère position): 52.24%
Précision adaptée (1ère position): 52.24%
Précision (top 10): 82.09%
================================================================================
