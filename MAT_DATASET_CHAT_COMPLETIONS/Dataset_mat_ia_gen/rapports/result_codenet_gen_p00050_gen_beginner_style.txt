================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:09:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
s = s.replace("apple", "TEMP")
s = s.replace("peach", "apple")
s = s.replace("TEMP", "peach")
print(s)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0039759352803230286
    2. ''' → logprob: -6.753975868225098
    3. '()' → logprob: -7.128975868225098
    4. '('' → logprob: -7.128975868225098
    5. '`' → logprob: -7.253975868225098
    6. '"' → logprob: -8.878975868225098
    7. '```' → logprob: -8.878975868225098
    8. '("("' → logprob: -9.378975868225098
    9. '(
' → logprob: -9.753975868225098
    10. '(`' → logprob: -10.753975868225098

Token 4: 's' (ID: 82)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.30454960465431213
    2. 'if' → logprob: -2.0545496940612793
    3. '[' → logprob: -3.1795496940612793
    4. '+' → logprob: -3.4295496940612793
    5. '[::-' → logprob: -4.179549694061279
    6. 'print' → logprob: -4.804549694061279
    7. '=' → logprob: -5.304549694061279
    8. '_' → logprob: -5.304549694061279
    9. '```' → logprob: -5.304549694061279
    10. ''' → logprob: -5.554549694061279

Token 5: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0271673202514648
    2. '\n' → logprob: -1.5271673202514648
    3. '[' → logprob: -1.9021673202514648
    4. '```' → logprob: -2.652167320251465
    5. '<|end|>' → logprob: -2.902167320251465
    6. '
' → logprob: -3.402167320251465
    7. '+' → logprob: -3.527167320251465
    8. '#' → logprob: -3.777167320251465
    9. ''' → logprob: -4.527167320251465
    10. '\' → logprob: -4.527167320251465

Token 6: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.28318941593170166
    2. 's' → logprob: -1.4081894159317017
    3. ' input' → logprob: -7.533189296722412
    4. ' ' → logprob: -8.28318977355957
    5. ''' → logprob: -8.28318977355957
    6. '"' → logprob: -8.28318977355957
    7. 'input' → logprob: -8.53318977355957
    8. ' "' → logprob: -8.78318977355957
    9. ''s' → logprob: -8.78318977355957
    10. ' '' → logprob: -9.65818977355957

Token 7: '.replace' (ID: 12804)
  Prédit: '.lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lower' → logprob: -1.1288493871688843
    2. '.strip' → logprob: -1.6288493871688843
    3. '[::-' → logprob: -1.7538493871688843
    4. '+' → logprob: -2.378849506378174
    5. '.upper' → logprob: -2.503849506378174
    6. '.' → logprob: -2.503849506378174
    7. '.replace' → logprob: -3.878849506378174
    8. '.capitalize' → logprob: -4.128849506378174
    9. ' +' → logprob: -5.003849506378174
    10. '.rstrip' → logprob: -6.378849506378174

Token 8: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06917472183704376
    2. '('' → logprob: -3.4441747665405273
    3. '("("' → logprob: -3.9441747665405273
    4. '("' → logprob: -4.194174766540527
    5. '("(' → logprob: -8.194174766540527
    6. '("""' → logprob: -10.069174766540527
    7. '('(' → logprob: -10.569174766540527
    8. '(`' → logprob: -10.944174766540527
    9. '((' → logprob: -11.069174766540527
    10. '("="' → logprob: -11.194174766540527

Token 9: 'apple' (ID: 34058)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8052634000778198
    2. '"' → logprob: -0.9302634000778198
    3. '(' → logprob: -2.5552635192871094
    4. ' ' → logprob: -3.9302635192871094
    5. 'a' → logprob: -5.305263519287109
    6. '_' → logprob: -5.430263519287109
    7. '.' → logprob: -5.555263519287109
    8. '#' → logprob: -5.555263519287109
    9. ',' → logprob: -5.805263519287109
    10. '+' → logprob: -5.930263519287109

Token 10: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.5879462957382202
    2. '","' → logprob: -1.3379462957382202
    3. 's' → logprob: -1.9629462957382202
    4. '"' → logprob: -3.3379464149475098
    5. '")' → logprob: -6.33794641494751
    6. ''s' → logprob: -6.83794641494751
    7. ' ",' → logprob: -6.83794641494751
    8. ' ","' → logprob: -6.83794641494751
    9. '"s' → logprob: -7.96294641494751
    10. ',' → logprob: -8.087945938110352

Token 11: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0038714506663382053
    2. ''' → logprob: -6.128871440887451
    3. ''"' → logprob: -7.128871440887451
    4. '""' → logprob: -7.503871440887451
    5. ' "")' → logprob: -9.12887191772461
    6. ' "' → logprob: -9.75387191772461
    7. '"'' → logprob: -10.50387191772461
    8. '"",' → logprob: -10.62887191772461
    9. '"""' → logprob: -11.00387191772461
    10. ')' → logprob: -11.00387191772461

Token 12: 'TEMP' (ID: 161363)
  Prédit: 'orange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orange' → logprob: -0.8665775656700134
    2. '")' → logprob: -1.2415776252746582
    3. 'banana' → logprob: -1.3665776252746582
    4. '"' → logprob: -4.741577625274658
    5. 'pear' → logprob: -4.991577625274658
    6. 'fruit' → logprob: -5.741577625274658
    7. ' banana' → logprob: -5.866577625274658
    8. ' orange' → logprob: -5.991577625274658
    9. 'apple' → logprob: -5.991577625274658
    10. ' ")' → logprob: -6.366577625274658

Token 13: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.02908342145383358
    2. '_APP' → logprob: -4.654083251953125
    3. 'APPLE' → logprob: -4.904083251953125
    4. '_' → logprob: -6.279083251953125
    5. 'BAN' → logprob: -6.654083251953125
    6. 'OR' → logprob: -6.904083251953125
    7. '___' → logprob: -7.029083251953125
    8. '_FR' → logprob: -7.029083251953125
    9. 'TOKEN' → logprob: -7.154083251953125
    10. '__' → logprob: -7.154083251953125

Token 14: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010585784912109375
    2. ')' → logprob: -5.135585784912109
    3. ' s' → logprob: -6.010585784912109
    4. '.' → logprob: -6.885585784912109
    5. '.replace' → logprob: -8.51058578491211
    6. '<|end|>' → logprob: -8.51058578491211
    7. ' ' → logprob: -8.63558578491211
    8. '.s' → logprob: -8.63558578491211
    9. ' 
' → logprob: -8.88558578491211
    10. '```' → logprob: -10.26058578491211

Token 15: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09820980578660965
    2. '<|end|>' → logprob: -2.848209857940674
    3. '.replace' → logprob: -3.473209857940674
    4. '```' → logprob: -6.348209857940674
    5. '.split' → logprob: -7.598209857940674
    6. '<|end|>' → logprob: -7.598209857940674
    7. '.strip' → logprob: -7.848209857940674
    8. ')' → logprob: -7.973209857940674
    9. '.lower' → logprob: -8.848209381103516
    10. '[' → logprob: -9.348209381103516

Token 16: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2519300878047943
    2. 's' → logprob: -1.5019301176071167
    3. '_s' → logprob: -14.501930236816406
    4. ' ' → logprob: -15.251930236816406
    5. '(s' → logprob: -16.876930236816406
    6. '	s' → logprob: -17.001930236816406
    7. '.s' → logprob: -17.251930236816406
    8. '"s' → logprob: -17.376930236816406
    9. ''s' → logprob: -17.626930236816406
    10. '"' → logprob: -18.376930236816406

Token 17: '.replace' (ID: 12804)
  Prédit: '.replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.replace' → logprob: -0.00998060405254364
    2. '.' → logprob: -4.63498067855835
    3. '.lower' → logprob: -8.759980201721191
    4. '.split' → logprob: -10.884980201721191
    5. '<|end|>' → logprob: -11.509980201721191
    6. '.strip' → logprob: -11.884980201721191
    7. ' .' → logprob: -12.259980201721191
    8. '.Replace' → logprob: -12.384980201721191
    9. '.startswith' → logprob: -12.384980201721191
    10. 'replace' → logprob: -12.759980201721191

Token 18: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.2526134252548218
    2. '(' → logprob: -1.5026134252548218
    3. '("("' → logprob: -7.377613544464111
    4. '("(' → logprob: -10.502613067626953
    5. '('' → logprob: -10.627613067626953
    6. '("_' → logprob: -13.502613067626953
    7. '(
' → logprob: -13.627613067626953
    8. '("""' → logprob: -13.752613067626953
    9. '"' → logprob: -14.127613067626953
    10. '(",' → logprob: -14.752613067626953

Token 19: 'pe' (ID: 424)
  Prédit: 'banana'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'banana' → logprob: -0.5570787191390991
    2. 'orange' → logprob: -1.5570787191390991
    3. 'apple' → logprob: -1.9320787191390991
    4. '"' → logprob: -3.5570788383483887
    5. 'pear' → logprob: -4.432078838348389
    6. 'pie' → logprob: -5.432078838348389
    7. 'a' → logprob: -5.682078838348389
    8. 'pine' → logprob: -6.182078838348389
    9. 'ap' → logprob: -6.182078838348389
    10. 'APPLE' → logprob: -6.307078838348389

Token 20: 'ach' (ID: 678)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.6611623764038086
    2. 'ach' → logprob: -0.7861623764038086
    3. 'n' → logprob: -4.911162376403809
    4. 'a' → logprob: -5.536162376403809
    5. 'pper' → logprob: -5.536162376403809
    6. 'r' → logprob: -5.661162376403809
    7. 'arl' → logprob: -5.786162376403809
    8. '```' → logprob: -6.911162376403809
    9. 'rch' → logprob: -7.286162376403809
    10. 'pp' → logprob: -7.411162376403809

Token 21: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.005044475197792053
    2. '","' → logprob: -6.130044460296631
    3. 's' → logprob: -6.255044460296631
    4. '"' → logprob: -7.380044460296631
    5. '")' → logprob: -9.005044937133789
    6. 'apple' → logprob: -9.880044937133789
    7. ' ",' → logprob: -10.130044937133789
    8. ',' → logprob: -10.130044937133789
    9. '"s' → logprob: -11.005044937133789
    10. 'a' → logprob: -11.630044937133789

Token 22: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0025125236716121435
    2. ' "' → logprob: -6.002512454986572
    3. '"T' → logprob: -11.12751293182373
    4. ''' → logprob: -11.25251293182373
    5. ')' → logprob: -12.25251293182373
    6. '""' → logprob: -14.12751293182373
    7. '"""' → logprob: -14.12751293182373
    8. ' ' → logprob: -14.25251293182373
    9. '")' → logprob: -14.37751293182373
    10. ' "")' → logprob: -14.62751293182373

Token 23: 'apple' (ID: 34058)
  Prédit: 'TEMP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TEMP' → logprob: -0.03397265449166298
    2. '"' → logprob: -5.03397274017334
    3. 'BAN' → logprob: -5.40897274017334
    4. 'APPLE' → logprob: -5.65897274017334
    5. 'apple' → logprob: -5.78397274017334
    6. '")' → logprob: -5.90897274017334
    7. 'orange' → logprob: -6.03397274017334
    8. 'OR' → logprob: -6.15897274017334
    9. 'TEM' → logprob: -6.28397274017334
    10. ' TEMP' → logprob: -6.40897274017334

Token 24: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.000287795381154865
    2. '")
' → logprob: -8.250288009643555
    3. 's' → logprob: -11.250288009643555
    4. ' ")' → logprob: -11.750288009643555
    5. '"' → logprob: -13.250288009643555
    6. 'TEMP' → logprob: -13.750288009643555
    7. ')' → logprob: -14.000288009643555
    8. '")

' → logprob: -14.750288009643555
    9. '")
' → logprob: -15.125288009643555
    10. '`)' → logprob: -15.250288009643555

Token 25: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002489214763045311
    2. ' s' → logprob: -6.00248908996582
    3. '<|end|>' → logprob: -11.87748908996582
    4. '```' → logprob: -12.75248908996582
    5. '(s' → logprob: -13.75248908996582
    6. ' 
' → logprob: -14.12748908996582
    7. '`s' → logprob: -14.37748908996582
    8. '  
' → logprob: -15.62748908996582
    9. '``' → logprob: -15.75248908996582
    10. ''s' → logprob: -15.75248908996582

Token 26: ' =' (ID: 314)
  Prédit: '.replace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.replace' → logprob: -0.04887882247567177
    2. 's' → logprob: -3.0488789081573486
    3. '.s' → logprob: -9.17387866973877
    4. '.' → logprob: -9.42387866973877
    5. '.split' → logprob: -10.79887866973877
    6. '<|end|>' → logprob: -10.92387866973877
    7. ' .' → logprob: -11.29887866973877
    8. ' s' → logprob: -11.29887866973877
    9. '```' → logprob: -12.29887866973877
    10. '.write' → logprob: -12.54887866973877

Token 27: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00861468818038702
    2. ' s' → logprob: -4.758614540100098
    3. '	s' → logprob: -16.633615493774414
    4. '(s' → logprob: -16.758615493774414
    5. '_s' → logprob: -17.383615493774414
    6. ' ' → logprob: -17.633615493774414
    7. '"s' → logprob: -17.883615493774414
    8. ''s' → logprob: -18.008615493774414
    9. '<|end|>' → logprob: -18.258615493774414
    10. '`s' → logprob: -18.758615493774414

Token 28: '.replace' (ID: 12804)
  Prédit: '.replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.replace' → logprob: -3.1424973713001236e-05
    2. 'replace' → logprob: -10.750031471252441
    3. '.' → logprob: -11.750031471252441
    4. 's' → logprob: -13.375031471252441
    5. ' .' → logprob: -15.125031471252441
    6. '.Replace' → logprob: -16.250030517578125
    7. '.rstrip' → logprob: -18.250030517578125
    8. '.re' → logprob: -19.125030517578125
    9. '.gsub' → logprob: -19.125030517578125
    10. '.reshape' → logprob: -19.125030517578125

Token 29: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06197518855333328
    2. '("' → logprob: -2.8119752407073975
    3. '(
' → logprob: -12.186975479125977
    4. '("("' → logprob: -13.561975479125977
    5. '"' → logprob: -14.061975479125977
    6. '('' → logprob: -15.686975479125977
    7. '(

' → logprob: -16.811975479125977
    8. '("(' → logprob: -16.936975479125977
    9. '()' → logprob: -17.186975479125977
    10. '("""' → logprob: -17.561975479125977

Token 30: 'TEMP' (ID: 161363)
  Prédit: 'TEMP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TEMP' → logprob: -8.661626634420827e-05
    2. '"' → logprob: -9.625086784362793
    3. ' TEMP' → logprob: -11.625086784362793
    4. 'TMP' → logprob: -11.875086784362793
    5. 'TEM' → logprob: -12.875086784362793
    6. '"T' → logprob: -13.875086784362793
    7. '_TEMP' → logprob: -14.000086784362793
    8. 'temp' → logprob: -15.375086784362793
    9. 'Temp' → logprob: -18.750085830688477
    10. ''T' → logprob: -19.000085830688477

Token 31: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.00017636561824474484
    2. '","' → logprob: -9.000176429748535
    3. '"' → logprob: -10.000176429748535
    4. ',' → logprob: -12.750176429748535
    5. '")' → logprob: -13.125176429748535
    6. 'apple' → logprob: -13.750176429748535
    7. 's' → logprob: -14.750176429748535
    8. '',' → logprob: -14.875176429748535
    9. ' ",' → logprob: -15.000176429748535
    10. ',"' → logprob: -16.37517547607422

Token 32: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.011054890230298042
    2. ' "' → logprob: -4.511054992675781
    3. '"user' → logprob: -13.011054992675781
    4. '"value' → logprob: -13.261054992675781
    5. '"s' → logprob: -13.761054992675781
    6. '")' → logprob: -14.386054992675781
    7. ')' → logprob: -14.386054992675781
    8. ''' → logprob: -15.886054992675781
    9. '"a' → logprob: -16.38605499267578
    10. '"group' → logprob: -16.51105499267578

Token 33: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.0002314303710591048
    2. 'apple' → logprob: -8.375231742858887
    3. 'pea' → logprob: -14.375231742858887
    4. ' peach' → logprob: -15.875231742858887
    5. 'pear' → logprob: -15.875231742858887
    6. 'pee' → logprob: -17.62523078918457
    7. 'ape' → logprob: -18.00023078918457
    8. 'p' → logprob: -18.00023078918457
    9. 'banana' → logprob: -18.62523078918457
    10. 'ap' → logprob: -18.62523078918457

Token 34: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -3.650518920039758e-06
    2. 'a' → logprob: -13.250003814697266
    3. 'ar' → logprob: -14.625003814697266
    4. 'arch' → logprob: -14.625003814697266
    5. 'achu' → logprob: -15.750003814697266
    6. 'apple' → logprob: -16.500003814697266
    7. 'ap' → logprob: -16.750003814697266
    8. 'achal' → logprob: -17.000003814697266
    9. 'ache' → logprob: -17.125003814697266
    10. 'achs' → logprob: -17.125003814697266

Token 35: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -6.392202976712724e-06
    2. '")
' → logprob: -12.500006675720215
    3. ')' → logprob: -13.375006675720215
    4. '"' → logprob: -14.250006675720215
    5. 's' → logprob: -15.750006675720215
    6. '')' → logprob: -16.7500057220459
    7. '")
' → logprob: -17.5000057220459
    8. '”)' → logprob: -17.8750057220459
    9. ' ")' → logprob: -17.8750057220459
    10. ')")' → logprob: -17.8750057220459

Token 36: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001527717337012291
    2. '(s' → logprob: -6.501527786254883
    3. '()' → logprob: -11.251527786254883
    4. '("("' → logprob: -11.876527786254883
    5. '('' → logprob: -13.001527786254883
    6. 's' → logprob: -13.001527786254883
    7. '((' → logprob: -15.251527786254883
    8. '("")' → logprob: -16.126527786254883
    9. '(`' → logprob: -16.376527786254883
    10. ' (' → logprob: -16.501527786254883

Token 38: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. '))' → logprob: -13.125001907348633
    3. ' )' → logprob: -16.125001907348633
    4. '')' → logprob: -17.000001907348633
    5. '")' → logprob: -17.375001907348633
    6. '()' → logprob: -17.875001907348633
    7. '`)' → logprob: -17.875001907348633
    8. ')`' → logprob: -18.500001907348633
    9. ')
' → logprob: -19.375001907348633
    10. ')))' → logprob: -20.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 36
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 14
Tokens correctement prédits (top 10): 26
Précision stricte (1ère position): 38.89%
Précision adaptée (1ère position): 38.89%
Précision (top 10): 72.22%
================================================================================
