================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:07:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
input = sys.stdin.readline

N = int(input())
t = [int(input()) for _ in range(N)]
max_t = max(t)
freq = [0]*(max_t+1)
for x in t:
    freq[x] += 1

# Pré-calcul des fréquences cumulées des multiples pour chaque k
cumulative = [0]*(max_t+1)
for k in range(1, max_t+1):
    s = 0
    for multiple in range(k, max_t+1, k):
        s += freq[multiple]
    cumulative[k] = s

min_sum = float('inf')
for k in range(1, max_t+1):
    if cumulative[k] == N:
        total_inc = 0
        for x in t:
            rem = (x + k -1)//k * k - x
            total_inc += rem
            if total_inc >= min_sum:
                break
        if total_inc < min_sum:
            min_sum = total_inc
print(min_sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06966528296470642
    2. '\n' → logprob: -3.6946651935577393
    3. '\' → logprob: -4.444665431976318
    4. 'import' → logprob: -4.694665431976318
    5. '
' → logprob: -4.819665431976318
    6. '<|end|>' → logprob: -5.444665431976318
    7. '```' → logprob: -5.444665431976318
    8. '

' → logprob: -6.444665431976318
    9. ',' → logprob: -7.319665431976318
    10. '<|end|>' → logprob: -7.444665431976318

Token 6: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.458339810371399
    2. '\n' → logprob: -1.458339810371399
    3. '.' → logprob: -1.583339810371399
    4. 'import' → logprob: -2.2083396911621094
    5. '

' → logprob: -2.3333396911621094
    6. '\' → logprob: -2.9583396911621094
    7. '```' → logprob: -3.2083396911621094
    8. '<|end|>' → logprob: -5.083339691162109
    9. ',' → logprob: -5.458339691162109
    10. '' → logprob: -5.583339691162109

Token 7: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00872199796140194
    2. '.' → logprob: -4.758721828460693
    3. '(
' → logprob: -10.383722305297852
    4. ' (' → logprob: -10.633722305297852
    5. '()' → logprob: -11.383722305297852
    6. ')' → logprob: -12.008722305297852
    7. '(

' → logprob: -12.133722305297852
    8. '```' → logprob: -12.383722305297852
    9. '('' → logprob: -12.508722305297852
    10. ',' → logprob: -12.508722305297852

Token 8: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.19399262964725494
    2. ' sys' → logprob: -1.9439926147460938
    3. 'input' → logprob: -3.4439926147460938
    4. ' input' → logprob: -6.693992614746094
    5. '(sys' → logprob: -11.568992614746094
    6. '=sys' → logprob: -11.693992614746094
    7. '	sys' → logprob: -11.818992614746094
    8. 'raw' → logprob: -13.193992614746094
    9. 'lambda' → logprob: -14.318992614746094
    10. 'math' → logprob: -14.693992614746094

Token 9: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0516139455139637
    2. '.stdin' → logprob: -3.0516140460968018
    3. '.readline' → logprob: -6.551613807678223
    4. ' .' → logprob: -7.051613807678223
    5. '.argv' → logprob: -8.426613807678223
    6. '.input' → logprob: -8.676613807678223
    7. '.stdout' → logprob: -8.926613807678223
    8. '.import' → logprob: -9.926613807678223
    9. '.exit' → logprob: -10.176613807678223
    10. '.setdefault' → logprob: -10.801613807678223

Token 10: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.4009524881839752
    2. '.' → logprob: -1.1509524583816528
    3. '.read' → logprob: -4.275952339172363
    4. '.readlines' → logprob: -10.150952339172363
    5. '.Read' → logprob: -11.025952339172363
    6. 'read' → logprob: -12.275952339172363
    7. '.write' → logprob: -12.525952339172363
    8. '```' → logprob: -12.900952339172363
    9. '.buffer' → logprob: -13.150952339172363
    10. '.\' → logprob: -13.275952339172363

Token 11: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.331758588552475
    2. '(' → logprob: -1.3317586183547974
    3. '(
' → logprob: -4.581758499145508
    4. '()
' → logprob: -5.331758499145508
    5. '()

' → logprob: -7.331758499145508
    6. '\n' → logprob: -7.581758499145508
    7. '
' → logprob: -7.831758499145508
    8. '(

' → logprob: -7.956758499145508
    9. '()\' → logprob: -8.581758499145508
    10. '\(' → logprob: -8.706758499145508

Token 12: 'N' (ID: 45)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5236950516700745
    2. '(' → logprob: -0.8986950516700745
    3. '()
' → logprob: -8.52369499206543
    4. '().' → logprob: -9.02369499206543
    5. '(
' → logprob: -9.14869499206543
    6. ')' → logprob: -10.77369499206543
    7. '()

' → logprob: -10.77369499206543
    8. '.' → logprob: -10.89869499206543
    9. '\(' → logprob: -11.64869499206543
    10. ',' → logprob: -11.89869499206543

Token 13: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4064977765083313
    2. ' =' → logprob: -2.2814977169036865
    3. ')' → logprob: -2.6564977169036865
    4. '=' → logprob: -2.6564977169036865
    5. '[' → logprob: -2.7814977169036865
    6. '<|end|>' → logprob: -4.406497955322266
    7. ',' → logprob: -5.406497955322266
    8. ' )' → logprob: -6.156497955322266
    9. '  ' → logprob: -6.406497955322266
    10. '_' → logprob: -6.406497955322266

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.006738699972629547
    2. 'int' → logprob: -5.006738662719727
    3. ' ' → logprob: -11.006738662719727
    4. '=int' → logprob: -13.006738662719727
    5. ' input' → logprob: -13.631738662719727
    6. ' map' → logprob: -14.381738662719727
    7. '10' → logprob: -14.506738662719727
    8. '5' → logprob: -14.756738662719727
    9. '(int' → logprob: -14.756738662719727
    10. '<int' → logprob: -15.506738662719727

Token 15: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00026300468016415834
    2. '(N' → logprob: -8.625263214111328
    3. '(input' → logprob: -9.750263214111328
    4. '()' → logprob: -11.500263214111328
    5. '('' → logprob: -11.750263214111328
    6. ' (' → logprob: -12.875263214111328
    7. '(`' → logprob: -13.000263214111328
    8. '(
' → logprob: -14.375263214111328
    9. '(n' → logprob: -15.875263214111328
    10. '(

' → logprob: -15.875263214111328

Token 16: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08450441807508469
    2. '()' → logprob: -2.5845043659210205
    3. ')' → logprob: -5.2095046043396
    4. '(' → logprob: -9.209504127502441
    5. ' ())' → logprob: -10.834504127502441
    6. '()))' → logprob: -12.834504127502441
    7. '`)' → logprob: -13.084504127502441
    8. '().' → logprob: -13.209504127502441
    9. '();)' → logprob: -13.709504127502441
    10. '()`' → logprob: -13.834504127502441

Token 17: 't' (ID: 83)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6462997198104858
    2. ')' → logprob: -1.7712997198104858
    3. 'data' → logprob: -1.8962997198104858
    4. 'a' → logprob: -2.2712998390197754
    5. 'for' → logprob: -2.3962998390197754
    6. 'A' → logprob: -3.0212998390197754
    7. 'result' → logprob: -3.3962998390197754
    8. 'factor' → logprob: -3.7712998390197754
    9. ' ' → logprob: -3.8962998390197754
    10. 'arr' → logprob: -4.271299839019775

Token 18: ' =' (ID: 314)
  Prédit: 'imes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.5078878402709961
    2. 'ime' → logprob: -1.132887840270996
    3. 'i' → logprob: -3.382887840270996
    4. ' =' → logprob: -5.132887840270996
    5. 'a' → logprob: -5.507887840270996
    6. 'im' → logprob: -5.632887840270996
    7. '[i' → logprob: -5.882887840270996
    8. 'arget' → logprob: -6.007887840270996
    9. '[' → logprob: -6.132887840270996
    10. ' ' → logprob: -6.257887840270996

Token 19: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5048292279243469
    2. 'list' → logprob: -1.8798291683197021
    3. ' [' → logprob: -2.379829168319702
    4. '[int' → logprob: -2.629829168319702
    5. '[input' → logprob: -3.754829168319702
    6. '[' → logprob: -4.254829406738281
    7. ' input' → logprob: -4.504829406738281
    8. 'input' → logprob: -4.504829406738281
    9. ' []' → logprob: -4.754829406738281
    10. '[]' → logprob: -4.754829406738281

Token 20: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0030822865664958954
    2. '(int' → logprob: -6.253082275390625
    3. ' int' → logprob: -7.378082275390625
    4. '0' → logprob: -8.253082275390625
    5. ']int' → logprob: -8.503082275390625
    6. ']' → logprob: -10.503082275390625
    7. 'float' → logprob: -11.503082275390625
    8. '*' → logprob: -12.378082275390625
    9. 'map' → logprob: -12.503082275390625
    10. ',int' → logprob: -12.753082275390625

Token 21: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5919045209884644
    2. '(input' → logprob: -0.8419045209884644
    3. '(x' → logprob: -4.341904640197754
    4. '()]' → logprob: -6.341904640197754
    5. '()' → logprob: -7.216904640197754
    6. '(i' → logprob: -8.466904640197754
    7. ']' → logprob: -9.591904640197754
    8. '(
' → logprob: -10.966904640197754
    9. 'input' → logprob: -12.216904640197754
    10. '(a' → logprob: -12.341904640197754

Token 22: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00013655527436640114
    2. '()' → logprob: -9.625136375427246
    3. '()]' → logprob: -10.625136375427246
    4. '()),' → logprob: -10.750136375427246
    5. '().' → logprob: -11.125136375427246
    6. '()))' → logprob: -12.375136375427246
    7. '())
' → logprob: -12.500136375427246
    8. ' ())' → logprob: -14.375136375427246
    9. ')' → logprob: -14.875136375427246
    10. '())

' → logprob: -15.000136375427246

Token 23: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.057646606117486954
    2. '()' → logprob: -3.8076465129852295
    3. ']' → logprob: -4.057646751403809
    4. ')]' → logprob: -4.932646751403809
    5. '()]' → logprob: -5.932646751403809
    6. '[i' → logprob: -5.932646751403809
    7. ' for' → logprob: -6.182646751403809
    8. 'for' → logprob: -6.682646751403809
    9. '[' → logprob: -8.182646751403809
    10. '())' → logprob: -8.807646751403809

Token 24: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43836385011672974
    2. ' _' → logprob: -1.313363790512085
    3. ' range' → logprob: -2.688363790512085
    4. ' ' → logprob: -4.063364028930664
    5. ' i' → logprob: -8.063364028930664
    6. ' in' → logprob: -8.313364028930664
    7. '_range' → logprob: -8.938364028930664
    8. 'range' → logprob: -9.438364028930664
    9. '	range' → logprob: -11.438364028930664
    10. ' ' → logprob: -11.813364028930664

Token 25: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.024485258385539055
    2. 'in' → logprob: -4.524485111236572
    3. ' range' → logprob: -4.524485111236572
    4. ' in' → logprob: -6.024485111236572
    5. '(range' → logprob: -10.39948558807373
    6. '	range' → logprob: -10.52448558807373
    7. '_' → logprob: -11.39948558807373
    8. 'i' → logprob: -12.27448558807373
    9. ' ' → logprob: -12.64948558807373
    10. 'ange' → logprob: -13.14948558807373

Token 26: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006717863027006388
    2. ' range' → logprob: -5.006717681884766
    3. '(range' → logprob: -13.131717681884766
    4. ')' → logprob: -15.631717681884766
    5. 'r' → logprob: -16.631717681884766
    6. 'rang' → logprob: -16.756717681884766
    7. '	range' → logprob: -17.006717681884766
    8. ' ' → logprob: -17.131717681884766
    9. 'N' → logprob: -17.256717681884766
    10. '(' → logprob: -17.631717681884766

Token 27: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0009202735964208841
    2. '(' → logprob: -7.000920295715332
    3. 'N' → logprob: -12.125920295715332
    4. '(n' → logprob: -12.750920295715332
    5. '(
' → logprob: -15.750920295715332
    6. ' (' → logprob: -15.875920295715332
    7. ' N' → logprob: -17.125919342041016
    8. '()' → logprob: -17.250919342041016
    9. '(

' → logprob: -17.250919342041016
    10. ')' → logprob: -17.750919342041016

Token 28: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0018877071561291814
    2. ')' → logprob: -6.501887798309326
    3. ']' → logprob: -7.876887798309326
    4. ')])' → logprob: -13.501887321472168
    5. '])]' → logprob: -13.626887321472168
    6. '])' → logprob: -13.751887321472168
    7. ')]
' → logprob: -14.376887321472168
    8. '')]' → logprob: -14.876887321472168
    9. '))' → logprob: -15.251887321472168
    10. ')
' → logprob: -15.626887321472168

Token 29: 'max' (ID: 3228)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.40755149722099304
    2. 't' → logprob: -1.7825515270233154
    3. '
' → logprob: -3.0325515270233154
    4. 'm' → logprob: -4.282551288604736
    5. 'max' → logprob: -4.407551288604736
    6. 'd' → logprob: -4.532551288604736
    7. 'result' → logprob: -4.532551288604736
    8. ' 
' → logprob: -4.782551288604736
    9. 'l' → logprob: -4.782551288604736
    10. 'a' → logprob: -4.782551288604736

Token 30: '_t' (ID: 838)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6917956471443176
    2. '_t' → logprob: -0.8167956471443176
    3. '_time' → logprob: -3.066795587539673
    4. '_val' → logprob: -5.066795825958252
    5. '_len' → logprob: -6.316795825958252
    6. '(t' → logprob: -7.191795825958252
    7. '_value' → logprob: -7.441795825958252
    8. '(' → logprob: -7.566795825958252
    9. '_length' → logprob: -8.566795349121094
    10. 't' → logprob: -9.316795349121094

Token 31: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24623532593250275
    2. ' =' → logprob: -2.3712353706359863
    3. '_' → logprob: -2.7462353706359863
    4. '=' → logprob: -2.8712353706359863
    5. '(t' → logprob: -6.246235370635986
    6. '(max' → logprob: -7.371235370635986
    7. '(_)' → logprob: -8.371234893798828
    8. ',' → logprob: -8.621234893798828
    9. ' ' → logprob: -8.746234893798828
    10. ' (' → logprob: -9.246234893798828

Token 32: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.16075249016284943
    2. 'max' → logprob: -1.910752534866333
    3. ' t' → logprob: -8.285752296447754
    4. ' ' → logprob: -9.410752296447754
    5. '0' → logprob: -9.785752296447754
    6. 't' → logprob: -9.785752296447754
    7. ' math' → logprob: -10.160752296447754
    8. 'math' → logprob: -11.160752296447754
    9. '(max' → logprob: -11.535752296447754
    10. '100' → logprob: -12.660752296447754

Token 33: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.062228716909885406
    2. '(' → logprob: -2.8122286796569824
    3. '(max' → logprob: -8.31222915649414
    4. ' (' → logprob: -11.93722915649414
    5. '(s' → logprob: -12.93722915649414
    6. '(_' → logprob: -13.56222915649414
    7. '_t' → logprob: -13.56222915649414
    8. '(
' → logprob: -14.06222915649414
    9. 't' → logprob: -14.18722915649414
    10. '(

' → logprob: -15.06222915649414

Token 34: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.182190554682165e-05
    2. ')t' → logprob: -10.375061988830566
    3. ')
' → logprob: -11.000061988830566
    4. ')+' → logprob: -12.500061988830566
    5. '))' → logprob: -12.750061988830566
    6. ' )' → logprob: -12.875061988830566
    7. ']' → logprob: -14.125061988830566
    8. '[' → logprob: -14.250061988830566
    9. 't' → logprob: -14.250061988830566
    10. '+' → logprob: -14.750061988830566

Token 35: 'freq' (ID: 71759)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3563194274902344
    2. '
' → logprob: -1.4813194274902344
    3. ' 
' → logprob: -2.2313194274902344
    4. 'g' → logprob: -2.3563194274902344
    5. 'max' → logprob: -2.3563194274902344
    6. ' ans' → logprob: -2.9813194274902344
    7. ' ' → logprob: -3.7313194274902344
    8. '=' → logprob: -3.7313194274902344
    9. 'for' → logprob: -4.106319427490234
    10. 'dp' → logprob: -4.356319427490234

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.676398754119873
    2. '=' → logprob: -0.801398754119873
    3. '_' → logprob: -3.301398754119873
    4. '(' → logprob: -5.551398754119873
    5. 's' → logprob: -7.176398754119873
    6. '[' → logprob: -7.301398754119873
    7. ' ' → logprob: -8.551399230957031
    8. '_freq' → logprob: -9.176399230957031
    9. '_counts' → logprob: -9.426399230957031
    10. '.' → logprob: -9.801399230957031

Token 37: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.34459567070007324
    2. '{}' → logprob: -1.8445956707000732
    3. '[t' → logprob: -2.0945956707000732
    4. '{' → logprob: -4.719595909118652
    5. ' [' → logprob: -7.094595909118652
    6. 't' → logprob: -8.469595909118652
    7. '[len' → logprob: -8.719595909118652
    8. '[max' → logprob: -9.469595909118652
    9. '[int' → logprob: -10.844595909118652
    10. ' {}' → logprob: -11.469595909118652

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.096126576769166e-05
    2. ' ' → logprob: -10.125041007995605
    3. 'max' → logprob: -14.125041007995605
    4. ' max' → logprob: -16.75004005432129
    5. ']' → logprob: -17.25004005432129
    6. '(' → logprob: -17.87504005432129
    7. 'math' → logprob: -18.00004005432129
    8. 'False' → logprob: -18.18754005432129
    9. '(max' → logprob: -18.50004005432129
    10. ')' → logprob: -19.12504005432129

Token 39: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022138727828860283
    2. ' for' → logprob: -4.522138595581055
    3. ']*(' → logprob: -4.897138595581055
    4. ']*' → logprob: -5.772138595581055
    5. ' ]' → logprob: -8.272138595581055
    6. 'for' → logprob: -8.647138595581055
    7. ' ' → logprob: -11.647138595581055
    8. ')' → logprob: -12.647138595581055
    9. ',' → logprob: -13.647138595581055
    10. ' *' → logprob: -13.897138595581055

Token 40: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0002639582962729037
    2. '(max' → logprob: -8.250264167785645
    3. ' max' → logprob: -12.875264167785645
    4. '[max' → logprob: -16.625263214111328
    5. '100' → logprob: -17.750263214111328
    6. '(' → logprob: -18.250263214111328
    7. '=max' → logprob: -18.750263214111328
    8. '101' → logprob: -19.625263214111328
    9. ',max' → logprob: -19.875263214111328
    10. ':max' → logprob: -20.125263214111328

Token 41: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.5451681974809617e-05
    2. 't' → logprob: -11.625015258789062
    3. '+' → logprob: -12.125015258789062
    4. 'max' → logprob: -14.750015258789062
    5. '_' → logprob: -15.625015258789062
    6. '+t' → logprob: -15.750015258789062
    7. '(max' → logprob: -16.250015258789062
    8. '_max' → logprob: -16.750015258789062
    9. ')' → logprob: -17.625015258789062
    10. '(t' → logprob: -18.000015258789062

Token 42: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002615742268972099
    2. ' +' → logprob: -8.250261306762695
    3. ')+' → logprob: -16.500261306762695
    4. '+
' → logprob: -16.625261306762695
    5. ')' → logprob: -17.125261306762695
    6. '+)' → logprob: -17.375261306762695
    7. '+t' → logprob: -17.500261306762695
    8. '1' → logprob: -18.625261306762695
    9. '＋' → logprob: -18.875261306762695
    10. ' plus' → logprob: -19.000261306762695

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015681622608099133
    2. '2' → logprob: -8.87515640258789
    3. ' ' → logprob: -11.00015640258789
    4. '10' → logprob: -16.00015640258789
    5. '11' → logprob: -16.12515640258789
    6. '100' → logprob: -17.68765640258789
    7. '１' → logprob: -17.75015640258789
    8. '101' → logprob: -17.87515640258789
    9. '5' → logprob: -18.00015640258789
    10. '  ' → logprob: -18.43765640258789

Token 44: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. ')
' → logprob: -12.625006675720215
    3. ' )' → logprob: -12.750006675720215
    4. '+' → logprob: -16.5000057220459
    5. ')

' → logprob: -16.6250057220459
    6. ']' → logprob: -16.8750057220459
    7. ')
' → logprob: -17.3750057220459
    8. '`)' → logprob: -17.6250057220459
    9. '))' → logprob: -18.0000057220459
    10. ')#' → logprob: -18.1250057220459

Token 45: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.558399319241289e-05
    2. ' for' → logprob: -10.625025749206543
    3. '<|end|>' → logprob: -14.375025749206543
    4. '```' → logprob: -14.875025749206543
    5. '
' → logprob: -17.125024795532227
    6. ')' → logprob: -17.250024795532227
    7. '	for' → logprob: -17.750024795532227
    8. 't' → logprob: -17.875024795532227
    9. 'For' → logprob: -18.125024795532227
    10. '' → logprob: -18.375024795532227

Token 46: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7013775110244751
    2. 'time' → logprob: -1.576377511024475
    3. 'i' → logprob: -1.826377511024475
    4. ' time' → logprob: -2.9513773918151855
    5. ' x' → logprob: -3.3263773918151855
    6. ' i' → logprob: -4.0763773918151855
    7. 'ti' → logprob: -4.0763773918151855
    8. 'num' → logprob: -5.3263773918151855
    9. ' ti' → logprob: -5.8263773918151855
    10. 'v' → logprob: -6.0763773918151855

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026378102600574493
    2. 'in' → logprob: -3.6513781547546387
    3. ' ' → logprob: -9.52637767791748
    4. '	in' → logprob: -13.65137767791748
    5. '  ' → logprob: -14.15137767791748
    6. 'n' → logprob: -14.40137767791748
    7. 'i' → logprob: -14.90137767791748
    8. 'import' → logprob: -15.02637767791748
    9. 'In' → logprob: -15.15137767791748
    10. ' ' → logprob: -15.27637767791748

Token 48: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.029751762747764587
    2. ' t' → logprob: -3.529751777648926
    3. ' ' → logprob: -14.654751777648926
    4. 'range' → logprob: -14.904751777648926
    5. ' range' → logprob: -15.279751777648926
    6. '`t' → logprob: -15.404751777648926
    7. '(t' → logprob: -16.77975082397461
    8. ')' → logprob: -18.02975082397461
    9. ')t' → logprob: -18.02975082397461
    10. '	t' → logprob: -18.77975082397461

Token 49: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012139255413785577
    2. ':
' → logprob: -6.751214027404785
    3. ' :' → logprob: -10.126214027404785
    4. '):' → logprob: -13.626214027404785
    5. ':
' → logprob: -14.626214027404785
    6. '[' → logprob: -14.876214027404785
    7. ']:' → logprob: -15.501214027404785
    8. ' :
' → logprob: -15.626214027404785
    9. ':**' → logprob: -15.876214027404785
    10. '+:' → logprob: -16.12621307373047

Token 50: '   ' (ID: 271)
  Prédit: ' freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' freq' → logprob: -0.10076437145471573
    2. 'freq' → logprob: -2.350764274597168
    3. '   ' → logprob: -8.100764274597168
    4. '```' → logprob: -9.850764274597168
    5. '_freq' → logprob: -9.975764274597168
    6. ' 
' → logprob: -10.350764274597168
    7. ' ' → logprob: -10.475764274597168
    8. ' ```' → logprob: -10.850764274597168
    9. '(freq' → logprob: -10.850764274597168
    10. ' ' → logprob: -11.225764274597168

Token 51: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' (adapté à ' freq') → logprob: -0.014165159314870834
    2. ' freq' → logprob: -4.264164924621582
    3. 'frequency' → logprob: -14.389164924621582
    4. '(freq' → logprob: -14.639164924621582
    5. '_freq' → logprob: -15.014164924621582
    6. '   ' → logprob: -15.889164924621582
    7. '.freq' → logprob: -16.2641658782959
    8. 'fre' → logprob: -16.7641658782959
    9. 'fq' → logprob: -17.0141658782959
    10. ' ' → logprob: -17.0141658782959

Token 52: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.011076119728386402
    2. '[' → logprob: -4.761075973510742
    3. '[f' → logprob: -6.011075973510742
    4. ' [' → logprob: -12.386075973510742
    5. '```' → logprob: -14.261075973510742
    6. '[F' → logprob: -14.761075973510742
    7. 'x' → logprob: -14.761075973510742
    8. '[temp' → logprob: -15.261075973510742
    9. '[int' → logprob: -15.761075973510742
    10. '[data' → logprob: -16.011075973510742

Token 53: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12705987691879272
    2. ']+=' → logprob: -2.1270599365234375
    3. '+=' → logprob: -9.127059936523438
    4. ' ]' → logprob: -11.127059936523438
    5. ')' → logprob: -12.877059936523438
    6. '+' → logprob: -13.252059936523438
    7. '+]' → logprob: -13.752059936523438
    8. '']' → logprob: -14.127059936523438
    9. ' +=' → logprob: -14.252059936523438
    10. ')]' → logprob: -14.377059936523438

Token 54: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0006585848750546575
    2. ' +=' → logprob: -7.6256585121154785
    3. ']+=' → logprob: -8.750658988952637
    4. '+' → logprob: -11.750658988952637
    5. '=' → logprob: -12.750658988952637
    6. '+='' → logprob: -14.500658988952637
    7. '+=(' → logprob: -15.125658988952637
    8. '```' → logprob: -15.125658988952637
    9. '+="' → logprob: -16.00065803527832
    10. '++' → logprob: -16.12565803527832

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '１' → logprob: -19.25004005432129
    4. '<|end|>' → logprob: -19.87504005432129
    5. ' ' → logprob: -20.50004005432129
    6. '```' → logprob: -20.62504005432129
    7. '   ' → logprob: -21.25004005432129
    8. '۱' → logprob: -21.37504005432129
    9. '+' → logprob: -21.93754005432129
    10. '१' → logprob: -22.12504005432129

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '１' → logprob: -20.625
    4. '<|end|>' → logprob: -21.125
    5. '```' → logprob: -22.125
    6. '۱' → logprob: -22.625
    7. '१' → logprob: -23.125
    8. '   ' → logprob: -23.375
    9. ' ' → logprob: -23.5
    10. '১' → logprob: -23.6875

Token 57: '

' (ID: 279)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8659047484397888
    2. 'dp' → logprob: -1.7409048080444336
    3. 'answer' → logprob: -2.3659048080444336
    4. 'for' → logprob: -2.4909048080444336
    5. 'result' → logprob: -2.9909048080444336
    6. 'res' → logprob: -3.3659048080444336
    7. 'ans' → logprob: -3.3659048080444336
    8. 'total' → logprob: -3.7409048080444336
    9. 'count' → logprob: -4.615904808044434
    10. 'c' → logprob: -4.740904808044434

Token 58: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5073480010032654
    2. 'max' → logprob: -1.6323480606079102
    3. 'for' → logprob: -2.75734806060791
    4. 'result' → logprob: -3.13234806060791
    5. 'answer' → logprob: -4.00734806060791
    6. 'g' → logprob: -4.13234806060791
    7. 'ans' → logprob: -4.13234806060791
    8. 'res' → logprob: -4.50734806060791
    9. 'total' → logprob: -4.63234806060791
    10. 'count' → logprob: -6.00734806060791

Token 59: ' Pré' (ID: 86400)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.0433826446533203
    2. 'for' → logprob: -1.1683826446533203
    3. 'max' → logprob: -2.6683826446533203
    4. ' for' → logprob: -2.9183826446533203
    5. ' dp' → logprob: -3.2933826446533203
    6. 'ans' → logprob: -3.5433826446533203
    7. ' ans' → logprob: -3.9183826446533203
    8. ' max' → logprob: -4.16838264465332
    9. 'l' → logprob: -4.16838264465332
    10. 'result' → logprob: -4.16838264465332

Token 60: '-cal' (ID: 84920)
  Prédit: 'paration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paration' → logprob: -0.9674549102783203
    2. 'fix' → logprob: -1.0924549102783203
    3. 'c' → logprob: -2.8424549102783203
    4. 'trait' → logprob: -2.9674549102783203
    5. 'cision' → logprob: -3.0924549102783203
    6. 'sum' → logprob: -3.7174549102783203
    7. 'processing' → logprob: -3.7174549102783203
    8. 'f' → logprob: -4.59245491027832
    9. 'cis' → logprob: -4.71745491027832
    10. '-tr' → logprob: -5.09245491027832

Token 61: 'cul' (ID: 2885)
  Prédit: 'ul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -0.10768590867519379
    2. 'u' → logprob: -3.7326858043670654
    3. 'cul' → logprob: -3.7326858043670654
    4. 'c' → logprob: -4.3576860427856445
    5. 'cule' → logprob: -4.7326860427856445
    6. 'ulation' → logprob: -5.1076860427856445
    7. 'om' → logprob: -5.2326860427856445
    8. '**' → logprob: -5.9826860427856445
    9. '

' → logprob: -5.9826860427856445
    10. '*' → logprob: -6.2326860427856445

Token 62: ' des' (ID: 731)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.295876145362854
    2. 's' → logprob: -1.795876145362854
    3. 'e' → logprob: -2.2958760261535645
    4. 'max' → logprob: -2.6708760261535645
    5. 'sum' → logprob: -3.0458760261535645
    6. 'm' → logprob: -3.1708760261535645
    7. 'for' → logprob: -3.2958760261535645
    8. ' of' → logprob: -3.4208760261535645
    9. ':' → logprob: -3.4208760261535645
    10. ' max' → logprob: -3.7958760261535645

Token 63: ' fré' (ID: 52465)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.5645244717597961
    2. ' fact' → logprob: -2.1895244121551514
    3. 'factor' → logprob: -2.1895244121551514
    4. 'div' → logprob: -2.3145244121551514
    5. 's' → logprob: -3.5645244121551514
    6. 'f' → logprob: -3.8145244121551514
    7. ' facto' → logprob: -4.5645246505737305
    8. '```' → logprob: -5.1895246505737305
    9. 'multip' → logprob: -5.4395246505737305
    10. 'p' → logprob: -5.5645246505737305

Token 64: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.014849294908344746
    2. 'q' → logprob: -4.7648491859436035
    3. 'qu' → logprob: -5.1398491859436035
    4. 'quence' → logprob: -8.889849662780762
    5. '-' → logprob: -9.264849662780762
    6. 'quen' → logprob: -9.389849662780762
    7. '
' → logprob: -11.764849662780762
    8. '

' → logprob: -12.139849662780762
    9. 'que' → logprob: -12.514849662780762
    10. 'quec' → logprob: -12.764849662780762

Token 65: ' cumul' (ID: 163119)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7032832503318787
    2. 'c' → logprob: -1.7032833099365234
    3. ' for' → logprob: -1.8282833099365234
    4. 's' → logprob: -2.9532833099365234
    5. 'cum' → logprob: -3.4532833099365234
    6. 'prefix' → logprob: -4.078283309936523
    7. 'f' → logprob: -4.453283309936523
    8. 'max' → logprob: -5.078283309936523
    9. ' ' → logprob: -5.078283309936523
    10. ',' → logprob: -5.203283309936523

Token 66: 'ées' (ID: 5161)
  Prédit: 'atives'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atives' → logprob: -0.01540396548807621
    2. 'ées' → logprob: -4.890403747558594
    3. 'ul' → logprob: -6.140403747558594
    4. 't' → logprob: -6.515403747558594
    5. 'ative' → logprob: -7.015403747558594
    6. 'es' → logprob: -7.890403747558594
    7. 'at' → logprob: -7.890403747558594
    8. 'atif' → logprob: -7.890403747558594
    9. 'l' → logprob: -8.015403747558594
    10. 'a' → logprob: -8.265403747558594

Token 67: ' des' (ID: 731)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7039316892623901
    2. 'cum' → logprob: -0.7039316892623901
    3. 'for' → logprob: -6.07893180847168
    4. 'freq' → logprob: -6.45393180847168
    5. 'prefix' → logprob: -6.45393180847168
    6. ' cum' → logprob: -6.70393180847168
    7. 'acc' → logprob: -7.20393180847168
    8. ',' → logprob: -7.32893180847168
    9. 'cs' → logprob: -7.70393180847168
    10. '
' → logprob: -7.70393180847168

Token 68: ' multiples' (ID: 70720)
  Prédit: ' temps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' temps' → logprob: -0.8734898567199707
    2. 'dur' → logprob: -1.6234898567199707
    3. 'temps' → logprob: -1.9984898567199707
    4. ' dur' → logprob: -3.1234898567199707
    5. 'val' → logprob: -3.2484898567199707
    6. ' valeurs' → logprob: -3.3734898567199707
    7. ' jours' → logprob: -3.7484898567199707
    8. 't' → logprob: -3.7484898567199707
    9. ' fré' → logprob: -3.7484898567199707
    10. 'i' → logprob: -4.123489856719971

Token 69: ' pour' (ID: 1930)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.45600226521492004
    2. 'c' → logprob: -2.2060022354125977
    3. 'for' → logprob: -2.3310022354125977
    4. 's' → logprob: -2.5810022354125977
    5. 'freq' → logprob: -3.7060022354125977
    6. ':' → logprob: -3.9560022354125977
    7. ' for' → logprob: -4.206002235412598
    8. 'm' → logprob: -5.081002235412598
    9. 'd' → logprob: -5.831002235412598
    10. 'multip' → logprob: -6.081002235412598

Token 70: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5985533595085144
    2. 'i' → logprob: -1.3485534191131592
    3. ' d' → logprob: -2.348553419113159
    4. ' m' → logprob: -3.473553419113159
    5. 'd' → logprob: -3.473553419113159
    6. 'm' → logprob: -4.34855318069458
    7. 'x' → logprob: -5.22355318069458
    8. ' x' → logprob: -5.47355318069458
    9. ' k' → logprob: -6.22355318069458
    10. ' y' → logprob: -6.47355318069458

Token 71: ' k' (ID: 372)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020139480009675026
    2. 'd' → logprob: -4.520139694213867
    3. 'div' → logprob: -5.645139694213867
    4. ' i' → logprob: -6.145139694213867
    5. 'k' → logprob: -6.520139694213867
    6. 'x' → logprob: -7.645139694213867
    7. 'j' → logprob: -8.145139694213867
    8. 'val' → logprob: -8.145139694213867
    9. 'nombre' → logprob: -8.770139694213867
    10. 'y' → logprob: -9.020139694213867

Token 72: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17485907673835754
    2. 'k' → logprob: -2.424859046936035
    3. ' for' → logprob: -2.799859046936035
    4. '
' → logprob: -5.799859046936035
    5. '```' → logprob: -6.424859046936035
    6. ' k' → logprob: -6.549859046936035
    7. ':' → logprob: -6.674859046936035
    8. ',' → logprob: -6.924859046936035
    9. '\n' → logprob: -7.174859046936035
    10. 'f' → logprob: -7.924859046936035

Token 73: 'c' (ID: 66)
  Prédit: 'cum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cum' → logprob: -0.6839658617973328
    2. 'c' → logprob: -1.1839659214019775
    3. 'k' → logprob: -2.6839659214019775
    4. 'for' → logprob: -2.9339659214019775
    5. 'multip' → logprob: -3.8089659214019775
    6. 'max' → logprob: -4.308965682983398
    7. 'multiple' → logprob: -5.058965682983398
    8. 'prefix' → logprob: -5.433965682983398
    9. 'm' → logprob: -5.683965682983398
    10. 'div' → logprob: -6.058965682983398

Token 74: 'umulative' (ID: 97729)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8815305829048157
    2. 'um' → logprob: -0.8815305829048157
    3. 'nt' → logprob: -2.256530523300171
    4. 'ount' → logprob: -3.006530523300171
    5. 'umulative' → logprob: -5.38153076171875
    6. '=' → logprob: -6.13153076171875
    7. 'umsum' → logprob: -6.38153076171875
    8. 'umul' → logprob: -6.50653076171875
    9. 'm' → logprob: -6.50653076171875
    10. 'om' → logprob: -6.75653076171875

Token 75: ' =' (ID: 314)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.4150277078151703
    2. '_freq' → logprob: -1.5400277376174927
    3. ' =' → logprob: -2.915027618408203
    4. '_' → logprob: -3.665027618408203
    5. '_mult' → logprob: -3.915027618408203
    6. '=' → logprob: -4.665027618408203
    7. '_mul' → logprob: -5.040027618408203
    8. '_multiple' → logprob: -5.040027618408203
    9. 'freq' → logprob: -7.290027618408203
    10. 'multip' → logprob: -7.665027618408203

Token 76: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2519477307796478
    2. ' [' → logprob: -1.5019477605819702
    3. '[f' → logprob: -12.126947402954102
    4. '[max' → logprob: -12.376947402954102
    5. '[len' → logprob: -12.751947402954102
    6. '[m' → logprob: -13.876947402954102
    7. '[s' → logprob: -14.126947402954102
    8. '[n' → logprob: -14.376947402954102
    9. 'freq' → logprob: -14.501947402954102
    10. '[count' → logprob: -14.626947402954102

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007385154603980482
    2. ' ' → logprob: -7.375738620758057
    3. '[' → logprob: -9.625738143920898
    4. ' [' → logprob: -10.000738143920898
    5. ')' → logprob: -15.500738143920898
    6. '[int' → logprob: -16.1257381439209
    7. ']' → logprob: -16.3757381439209
    8. '(' → logprob: -16.7507381439209
    9. '```' → logprob: -17.2507381439209
    10. '[]' → logprob: -17.6257381439209

Token 78: ']*(' (ID: 92627)
  Prédit: ']*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.7471498847007751
    2. ']' → logprob: -0.9971498847007751
    3. ' for' → logprob: -2.37214994430542
    4. 'for' → logprob: -2.87214994430542
    5. ']*' → logprob: -5.24714994430542
    6. ' ' → logprob: -7.24714994430542
    7. '*(' → logprob: -8.122149467468262
    8. ')' → logprob: -8.247149467468262
    9. ']+' → logprob: -8.622149467468262
    10. '(max' → logprob: -8.872149467468262

Token 79: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -7.922563963802531e-05
    2. '(max' → logprob: -10.125079154968262
    3. 'len' → logprob: -10.250079154968262
    4. ' max' → logprob: -12.500079154968262
    5. '[max' → logprob: -17.250080108642578
    6. '(len' → logprob: -19.125080108642578
    7. 'm' → logprob: -19.125080108642578
    8. '=max' → logprob: -19.625080108642578
    9. '	max' → logprob: -19.875080108642578
    10. ',max' → logprob: -20.000080108642578

Token 80: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.125
    3. '(max' → logprob: -16.875
    4. 't' → logprob: -17.375
    5. '+' → logprob: -19.0
    6. '_k' → logprob: -19.375
    7. '_max' → logprob: -19.375
    8. ')' → logprob: -19.625
    9. '_T' → logprob: -19.75
    10. 'max' → logprob: -19.75

Token 81: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00023107275774236768
    2. ' +' → logprob: -8.37523078918457
    3. '+
' → logprob: -14.75023078918457
    4. '1' → logprob: -17.00023078918457
    5. '+

' → logprob: -17.87523078918457
    6. '```' → logprob: -17.87523078918457
    7. ' plus' → logprob: -18.25023078918457
    8. ')+' → logprob: -18.37523078918457
    9. '＋' → logprob: -18.37523078918457
    10. '2' → logprob: -18.62523078918457

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000217006730963476
    2. '2' → logprob: -8.87521743774414
    3. ' ' → logprob: -9.50021743774414
    4. '```' → logprob: -14.43771743774414
    5. '+' → logprob: -15.31271743774414
    6. '   ' → logprob: -15.56271743774414
    7. ')' → logprob: -15.56271743774414
    8. '

' → logprob: -15.68771743774414
    9. '１' → logprob: -16.25021743774414
    10. '0' → logprob: -16.68771743774414

Token 83: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004113780800253153
    2. ')
' → logprob: -5.504113674163818
    3. ')
' → logprob: -10.754114151000977
    4. ')

' → logprob: -11.629114151000977
    5. ' )' → logprob: -12.379114151000977
    6. ')

' → logprob: -15.254114151000977
    7. ' )
' → logprob: -15.254114151000977
    8. '
' → logprob: -16.754114151000977
    9. '```' → logprob: -16.879114151000977
    10. 'for' → logprob: -17.504114151000977

Token 84: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004252081271260977
    2. 'k' → logprob: -5.504251956939697
    3. ' for' → logprob: -8.754252433776855
    4. 'i' → logprob: -12.004252433776855
    5. '```' → logprob: -12.254252433776855
    6. ')' → logprob: -13.629252433776855
    7. '
' → logprob: -14.004252433776855
    8. 'd' → logprob: -14.504252433776855
    9. 'range' → logprob: -14.754252433776855
    10. '#' → logprob: -15.754252433776855

Token 85: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.03920253366231918
    2. ' k' → logprob: -3.2892024517059326
    3. 'i' → logprob: -7.289202690124512
    4. ' i' → logprob: -8.039202690124512
    5. 'x' → logprob: -8.914202690124512
    6. ' x' → logprob: -11.164202690124512
    7. ' ' → logprob: -13.164202690124512
    8. ' multiple' → logprob: -13.789202690124512
    9. '	k' → logprob: -14.289202690124512
    10. '```' → logprob: -14.539202690124512

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008646124973893166
    2. 'in' → logprob: -4.758646011352539
    3. ' ' → logprob: -10.883646011352539
    4. 'range' → logprob: -12.008646011352539
    5. '1' → logprob: -13.633646011352539
    6. ' i' → logprob: -14.008646011352539
    7. '	in' → logprob: -14.258646011352539
    8. 'k' → logprob: -14.508646011352539
    9. 'import' → logprob: -14.883646011352539
    10. 'In' → logprob: -14.883646011352539

Token 87: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858884960412979
    2. ' range' → logprob: -3.048588752746582
    3. ' ' → logprob: -14.423588752746582
    4. '(range' → logprob: -14.548588752746582
    5. '	range' → logprob: -14.798588752746582
    6. 'rang' → logprob: -16.9235897064209
    7. '  ' → logprob: -17.1735897064209
    8. '```' → logprob: -17.2985897064209
    9. '1' → logprob: -17.6735897064209
    10. ' xrange' → logprob: -18.0485897064209

Token 88: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01297879870980978
    2. '(max' → logprob: -4.387979030609131
    3. '1' → logprob: -8.137978553771973
    4. 'max' → logprob: -9.512978553771973
    5. ' ' → logprob: -9.887978553771973
    6. ' max' → logprob: -10.637978553771973
    7. '2' → logprob: -11.262978553771973
    8. ' (' → logprob: -11.387978553771973
    9. '(
' → logprob: -14.137978553771973
    10. '(k' → logprob: -14.262978553771973

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28263282775878906
    2. 'max' → logprob: -1.407632827758789
    3. ' max' → logprob: -7.282632827758789
    4. ' ' → logprob: -7.657632827758789
    5. '2' → logprob: -8.157632827758789
    6. 'k' → logprob: -11.282632827758789
    7. '   ' → logprob: -11.907632827758789
    8. '(max' → logprob: -12.657632827758789
    9. '[max' → logprob: -12.970132827758789
    10. 'len' → logprob: -13.470132827758789

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037680165842175484
    2. ' ,' → logprob: -5.628767967224121
    3. ',max' → logprob: -8.753767967224121
    4. 'max' → logprob: -12.128767967224121
    5. ' ' → logprob: -13.378767967224121
    6. 'k' → logprob: -14.503767967224121
    7. ',k' → logprob: -14.503767967224121
    8. ',
' → logprob: -14.753767967224121
    9. '+' → logprob: -14.753767967224121
    10. ',len' → logprob: -15.128767967224121

Token 91: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009122979827225208
    2. ' max' → logprob: -7.000912189483643
    3. 'len' → logprob: -14.7509126663208
    4. '(max' → logprob: -15.0009126663208
    5. '[max' → logprob: -16.750911712646484
    6. '	max' → logprob: -17.750911712646484
    7. ',max' → logprob: -18.125911712646484
    8. ':max' → logprob: -18.125911712646484
    9. '=max' → logprob: -18.375911712646484
    10. ' ' → logprob: -18.750911712646484

Token 92: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00016086915275081992
    2. 'max' → logprob: -9.875161170959473
    3. 't' → logprob: -10.250161170959473
    4. 'k' → logprob: -10.500161170959473
    5. '+' → logprob: -10.875161170959473
    6. '_k' → logprob: -11.000161170959473
    7. '_' → logprob: -12.625161170959473
    8. '_max' → logprob: -12.625161170959473
    9. 'a' → logprob: -14.250161170959473
    10. 's' → logprob: -14.875161170959473

Token 93: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023266909644007683
    2. ' +' → logprob: -3.7732667922973633
    3. ' ' → logprob: -11.023266792297363
    4. 'max' → logprob: -13.523266792297363
    5. ',' → logprob: -14.273266792297363
    6. '
' → logprob: -14.773266792297363
    7. '+k' → logprob: -14.773266792297363
    8. '```' → logprob: -15.023266792297363
    9. '1' → logprob: -15.148266792297363
    10. '   ' → logprob: -15.148266792297363

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008294018916785717
    2. '+' → logprob: -7.125829219818115
    3. ' ' → logprob: -10.750829696655273
    4. 'k' → logprob: -13.000829696655273
    5. '2' → logprob: -14.375829696655273
    6. ' +' → logprob: -14.625829696655273
    7. ' k' → logprob: -16.250829696655273
    8. ')' → logprob: -17.250829696655273
    9. '```' → logprob: -17.500829696655273
    10. '0' → logprob: -18.000829696655273

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05247897654771805
    2. ':' → logprob: -3.3024790287017822
    3. ')' → logprob: -4.302478790283203
    4. '):
' → logprob: -7.802478790283203
    5. ' ):' → logprob: -8.052478790283203
    6. '+' → logprob: -10.802478790283203
    7. ' )' → logprob: -11.302478790283203
    8. ',' → logprob: -11.302478790283203
    9. ' :' → logprob: -11.552478790283203
    10. '+:' → logprob: -12.427478790283203

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7975614070892334
    2. ' ' → logprob: -1.1725614070892334
    3. '<|end|>' → logprob: -1.5475614070892334
    4. ' 
' → logprob: -4.0475616455078125
    5. '  ' → logprob: -5.9225616455078125
    6. '    
' → logprob: -6.0475616455078125
    7. '
' → logprob: -6.4225616455078125
    8. '    ' → logprob: -7.2975616455078125
    9. '<|end|>' → logprob: -7.5475616455078125
    10. '  
' → logprob: -7.5475616455078125

Token 97: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7535362839698792
    2. ' for' → logprob: -1.7535362243652344
    3. '   ' → logprob: -1.8785362243652344
    4. 's' (adapté à ' s') → logprob: -2.7535362243652344
    5. 'sum' → logprob: -2.7535362243652344
    6. 'j' → logprob: -3.8785362243652344
    7. 'i' → logprob: -4.253536224365234
    8. 'count' → logprob: -4.753536224365234
    9. 'm' → logprob: -4.878536224365234
    10. ' s' → logprob: -5.253536224365234

Token 98: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2574021518230438
    2. ' =' → logprob: -1.5074021816253662
    3. 'um' → logprob: -5.257401943206787
    4. '+=' → logprob: -9.757402420043945
    5. ' ' → logprob: -10.007402420043945
    6. 'for' → logprob: -10.507402420043945
    7. ' +=' → logprob: -10.632402420043945
    8. '=sum' → logprob: -10.632402420043945
    9. '=k' → logprob: -11.257402420043945
    10. ' ' → logprob: -11.632402420043945

Token 99: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025699487887322903
    2. ' ' → logprob: -6.002570152282715
    3. 'sum' → logprob: -9.752570152282715
    4. 'freq' → logprob: -10.627570152282715
    5. 'k' → logprob: -12.127570152282715
    6. ' sum' → logprob: -12.627570152282715
    7. ' freq' → logprob: -13.627570152282715
    8. ' k' → logprob: -13.877570152282715
    9. 'frequency' → logprob: -15.752570152282715
    10. '(' → logprob: -16.2525691986084

Token 100: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001394161517964676
    2. ' ' → logprob: -9.750139236450195
    3. 'freq' → logprob: -10.000139236450195
    4. 'sum' → logprob: -10.500139236450195
    5. 'k' → logprob: -12.000139236450195
    6. 'frequency' → logprob: -15.000139236450195
    7. '(' → logprob: -15.125139236450195
    8. 'c' → logprob: -15.250139236450195
    9. ' freq' → logprob: -15.250139236450195
    10. ' sum' → logprob: -15.750139236450195

Token 101: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6481732130050659
    2. '
' → logprob: -1.398173213005066
    3. ' for' → logprob: -2.2731733322143555
    4. '<|end|>' → logprob: -2.2731733322143555
    5. '   ' → logprob: -3.7731733322143555
    6. '<|end|>' → logprob: -7.7731733322143555
    7. ' ' → logprob: -8.148173332214355
    8. '	for' → logprob: -9.273173332214355
    9. '  ' → logprob: -10.398173332214355
    10. '0' → logprob: -10.523173332214355

Token 102: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7750992774963379
    2. '   ' → logprob: -0.9000992774963379
    3. ' for' → logprob: -2.150099277496338
    4. '<|end|>' → logprob: -4.150099277496338
    5. '	for' → logprob: -8.15009880065918
    6. ' ' → logprob: -8.52509880065918
    7. '  ' → logprob: -10.02509880065918
    8. '<|end|>' → logprob: -10.65009880065918
    9. '
' → logprob: -11.52509880065918
    10. '```' → logprob: -12.77509880065918

Token 103: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.18296734988689423
    2. 'm' → logprob: -1.9329673051834106
    3. '   ' → logprob: -4.057967185974121
    4. 'j' → logprob: -5.932967185974121
    5. ' for' → logprob: -6.432967185974121
    6. 'multiple' → logprob: -7.557967185974121
    7. 'i' → logprob: -8.307967185974121
    8. 'mult' → logprob: -9.432967185974121
    9. 'mul' → logprob: -9.932967185974121
    10. ' m' → logprob: -11.182967185974121

Token 104: ' multiple' (ID: 7598)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07169871032238007
    2. 'multiple' → logprob: -2.8216986656188965
    3. 'mult' → logprob: -5.9466986656188965
    4. 'x' → logprob: -6.3216986656188965
    5. 'i' → logprob: -6.5716986656188965
    6. 'v' → logprob: -6.6966986656188965
    7. 'j' → logprob: -7.0716986656188965
    8. ' multiple' → logprob: -7.3216986656188965
    9. ' m' → logprob: -7.3216986656188965
    10. 'mul' → logprob: -8.071699142456055

Token 105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5760790109634399
    2. 'in' → logprob: -0.8260790109634399
    3. ' ' → logprob: -9.576079368591309
    4. 'of' → logprob: -10.701079368591309
    5. '_in' → logprob: -11.326079368591309
    6. '	in' → logprob: -11.326079368591309
    7. 's' → logprob: -12.576079368591309
    8. '_of' → logprob: -12.701079368591309
    9. '  ' → logprob: -13.201079368591309
    10. '```' → logprob: -13.326079368591309

Token 106: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018154388293623924
    2. ' range' → logprob: -4.018154621124268
    3. '	range' → logprob: -12.76815414428711
    4. '(range' → logprob: -14.14315414428711
    5. ' ' → logprob: -14.76815414428711
    6. '   ' → logprob: -14.89315414428711
    7. 'rang' → logprob: -16.64315414428711
    8. '```' → logprob: -17.01815414428711
    9. 'r' → logprob: -17.39315414428711
    10. '  ' → logprob: -17.51815414428711

Token 107: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.002295728772878647
    2. '(' → logprob: -6.12729549407959
    3. 'k' → logprob: -9.12729549407959
    4. '2' → logprob: -14.37729549407959
    5. ' k' → logprob: -14.62729549407959
    6. '(
' → logprob: -14.87729549407959
    7. ' (' → logprob: -15.75229549407959
    8. ',k' → logprob: -16.002296447753906
    9. '   ' → logprob: -16.627296447753906
    10. '	k' → logprob: -16.752296447753906

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005694755236618221
    2. ' ,' → logprob: -7.6255693435668945
    3. ',k' → logprob: -9.625569343566895
    4. 'k' → logprob: -11.375569343566895
    5. ',max' → logprob: -13.250569343566895
    6. '2' → logprob: -13.625569343566895
    7. '*' → logprob: -14.625569343566895
    8. ',len' → logprob: -15.875569343566895
    9. ' ' → logprob: -16.62557029724121
    10. '   ' → logprob: -16.75057029724121

Token 109: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011050177738070488
    2. ' max' → logprob: -4.511050224304199
    3. '(max' → logprob: -13.7610502243042
    4. '   ' → logprob: -13.8860502243042
    5. '	max' → logprob: -15.2610502243042
    6. ',max' → logprob: -16.011049270629883
    7. '[max' → logprob: -17.886049270629883
    8. ' ' → logprob: -18.636049270629883
    9. 'len' → logprob: -18.636049270629883
    10. '=max' → logprob: -18.886049270629883

Token 110: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -3.292907877039397e-06
    2. 't' → logprob: -12.75000286102295
    3. '+' → logprob: -15.62500286102295
    4. 'max' → logprob: -15.62500286102295
    5. 'k' → logprob: -17.750003814697266
    6. '+t' → logprob: -18.000003814697266
    7. '_k' → logprob: -18.125003814697266
    8. '(max' → logprob: -19.000003814697266
    9. '[max' → logprob: -20.375003814697266
    10. '=max' → logprob: -20.875003814697266

Token 111: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.273621405242011e-05
    2. ' +' → logprob: -10.375032424926758
    3. '+k' → logprob: -13.500032424926758
    4. '+
' → logprob: -18.250032424926758
    5. ' ' → logprob: -18.625032424926758
    6. '+m' → logprob: -19.875032424926758
    7. '＋' → logprob: -20.125032424926758
    8. 'max' → logprob: -20.250032424926758
    9. '1' → logprob: -20.375032424926758
    10. '```' → logprob: -20.375032424926758

Token 112: '1' (ID: 16)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4747348725795746
    2. '1' → logprob: -0.974734902381897
    3. 'max' → logprob: -7.474734783172607
    4. ' ' → logprob: -9.849735260009766
    5. ' +' → logprob: -10.474735260009766
    6. ' max' → logprob: -13.099735260009766
    7. '```' → logprob: -13.099735260009766
    8. '(max' → logprob: -13.974735260009766
    9. '+k' → logprob: -13.974735260009766
    10. '   ' → logprob: -14.099735260009766

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06330282241106033
    2. ',k' → logprob: -2.813302755355835
    3. ' ,' → logprob: -7.063302993774414
    4. ',m' → logprob: -7.813302993774414
    5. 'k' → logprob: -9.938302993774414
    6. ' k' → logprob: -11.438302993774414
    7. ',max' → logprob: -11.688302993774414
    8. '   ' → logprob: -12.813302993774414
    9. '+k' → logprob: -13.563302993774414
    10. 'm' → logprob: -14.688302993774414

Token 114: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00033581978641450405
    2. ' k' → logprob: -8.000335693359375
    3. '1' → logprob: -16.000335693359375
    4. '	k' → logprob: -16.125335693359375
    5. '   ' → logprob: -16.250335693359375
    6. ')' → logprob: -17.625335693359375
    7. ' ' → logprob: -18.875335693359375
    8. '{k' → logprob: -19.125335693359375
    9. '+k' → logprob: -19.625335693359375
    10. '    ' → logprob: -20.000335693359375

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5760770440101624
    2. '):
' → logprob: -0.8260770440101624
    3. ')' → logprob: -9.826077461242676
    4. ':' → logprob: -10.451077461242676
    5. '   ' → logprob: -10.576077461242676
    6. '):
' → logprob: -10.701077461242676
    7. ':
' → logprob: -12.826077461242676
    8. '       ' → logprob: -13.201077461242676
    9. ' ):
' → logprob: -14.826077461242676
    10. '):

' → logprob: -14.951077461242676

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020273735281080008
    2. 's' → logprob: -6.37702751159668
    3. ' s' → logprob: -8.25202751159668
    4. '   ' → logprob: -10.50202751159668
    5. ' ' → logprob: -11.62702751159668
    6. '        
' → logprob: -12.50202751159668
    7. '      ' → logprob: -12.87702751159668
    8. '<|end|>' → logprob: -12.87702751159668
    9. '' → logprob: -13.00202751159668
    10. '```' → logprob: -13.12702751159668

Token 117: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.2702743411064148
    2. '       ' → logprob: -1.5202744007110596
    3. ' s' → logprob: -4.0202741622924805
    4. '   ' → logprob: -8.64527416229248
    5. '           ' → logprob: -10.02027416229248
    6. '
' → logprob: -12.77027416229248
    7. ' ' → logprob: -12.89527416229248
    8. '               ' → logprob: -13.64527416229248
    9. '      ' → logprob: -14.39527416229248
    10. '	s' → logprob: -14.39527416229248

Token 118: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1273794025182724
    2. ' +=' → logprob: -2.1273794174194336
    3. '+' → logprob: -8.502379417419434
    4. ']+=' → logprob: -8.502379417419434
    5. '=' → logprob: -10.252379417419434
    6. ')' → logprob: -12.627379417419434
    7. '   ' → logprob: -12.877379417419434
    8. ' +' → logprob: -14.252379417419434
    9. ']' → logprob: -14.502379417419434
    10. ' ' → logprob: -15.002379417419434

Token 119: ' freq' (ID: 42078)
  Prédit: 'freq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'freq' → logprob: -0.0031802060548216105
    2. ' freq' → logprob: -5.753180027008057
    3. '   ' → logprob: -13.503180503845215
    4. 'frequency' → logprob: -14.128180503845215
    5. 'fre' → logprob: -15.003180503845215
    6. '(freq' → logprob: -17.1281795501709
    7. '
' → logprob: -18.0031795501709
    8. ' frequency' → logprob: -18.1281795501709
    9. '       ' → logprob: -18.3781795501709
    10. 'fq' → logprob: -18.8781795501709

Token 120: '[m' (ID: 29271)
  Prédit: '[m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -14.875
    3. ' [' → logprob: -17.125
    4. '	m' → logprob: -19.0
    5. '[
' → logprob: -19.5
    6. 'multiple' → logprob: -20.375
    7. '```' → logprob: -20.75
    8. '(m' → logprob: -21.625
    9. '\[' → logprob: -21.875
    10. '   ' → logprob: -21.875

Token 121: 'ultiple' (ID: 127107)
  Prédit: 'ultiple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ultiple' → logprob: -0.006390983704477549
    2. 'multiple' → logprob: -5.2563910484313965
    3. 'ultip' → logprob: -7.0063910484313965
    4. '[m' → logprob: -9.131390571594238
    5. 'ult' → logprob: -9.756390571594238
    6. 'ultiply' → logprob: -11.006390571594238
    7. 'uple' → logprob: -11.006390571594238
    8. 'ul' → logprob: -11.381390571594238
    9. ']' → logprob: -11.756390571594238
    10. 'm' → logprob: -12.131390571594238

Token 122: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4100295305252075
    2. ')' → logprob: -1.1600295305252075
    3. ']' → logprob: -4.410029411315918
    4. ']
' → logprob: -5.035029411315918
    5. '   ' → logprob: -5.535029411315918
    6. ')
' → logprob: -8.410029411315918
    7. ')

' → logprob: -10.535029411315918
    8. ' )
' → logprob: -12.035029411315918
    9. ')]' → logprob: -12.035029411315918
    10. '
' → logprob: -12.285029411315918

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03675372898578644
    2. '
' → logprob: -3.7867536544799805
    3. 'c' → logprob: -4.5367536544799805
    4. '	c' → logprob: -6.5367536544799805
    5. ' cumulative' → logprob: -7.2867536544799805
    6. '    
' → logprob: -8.41175365447998
    7. '
' → logprob: -8.78675365447998
    8. ' ' → logprob: -9.91175365447998
    9. '  ' → logprob: -10.41175365447998
    10. ' 
' → logprob: -10.78675365447998

Token 124: ' cumulative' (ID: 75628)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13001155853271484
    2. '   ' → logprob: -2.255011558532715
    3. '
' → logprob: -4.755011558532715
    4. ' cumulative' → logprob: -4.880011558532715
    5. '	c' → logprob: -7.630011558532715
    6. ' ' → logprob: -8.380011558532715
    7. ' c' → logprob: -10.255011558532715
    8. 'cum' → logprob: -10.505011558532715
    9. '    
' → logprob: -11.005011558532715
    10. '  ' → logprob: -11.255011558532715

Token 125: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -1.5213274309644476e-05
    2. '[' → logprob: -11.250015258789062
    3. ' [' → logprob: -14.250015258789062
    4. '\[' → logprob: -14.500015258789062
    5. '[c' → logprob: -15.000015258789062
    6. '=' → logprob: -16.250015258789062
    7. '[K' → logprob: -16.250015258789062
    8. '[key' → logprob: -16.500015258789062
    9. '[s' → logprob: -16.625015258789062
    10. '[i' → logprob: -16.750015258789062

Token 126: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003498746082186699
    2. ' ]' → logprob: -5.753498554229736
    3. ']=' → logprob: -8.628499031066895
    4. '=' → logprob: -9.003499031066895
    5. ' =' → logprob: -10.878499031066895
    6. ' ' → logprob: -16.003498077392578
    7. ')' → logprob: -16.128498077392578
    8. ']+=' → logprob: -17.378498077392578
    9. ')]' → logprob: -17.878498077392578
    10. ' ' → logprob: -18.003498077392578

Token 127: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001504982472397387
    2. ' =' → logprob: -6.501504898071289
    3. '=s' → logprob: -12.876504898071289
    4. 's' → logprob: -17.12650489807129
    5. '＝' → logprob: -17.37650489807129
    6. '+=' → logprob: -17.50150489807129
    7. '=int' → logprob: -18.00150489807129
    8. '=k' → logprob: -18.25150489807129
    9. '=
' → logprob: -18.37650489807129
    10. '.=' → logprob: -18.62650489807129

Token 128: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2014138251543045
    2. ' s' → logprob: -1.701413869857788
    3. '	s' → logprob: -15.201414108276367
    4. ' ' → logprob: -15.326414108276367
    5. ' ' → logprob: -16.201414108276367
    6. '_s' → logprob: -18.451414108276367
    7. '(s' → logprob: -18.451414108276367
    8. 'c' → logprob: -18.701414108276367
    9. '<s' → logprob: -18.951414108276367
    10. '​' → logprob: -19.576414108276367

Token 129: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5455402731895447
    2. 'answer' → logprob: -1.6705403327941895
    3. 'max' → logprob: -2.2955403327941895
    4. 'result' → logprob: -2.6705403327941895
    5. 'ans' → logprob: -3.9205403327941895
    6. 'g' → logprob: -4.5455403327941895
    7. 'div' → logprob: -4.9205403327941895
    8. 'res' → logprob: -5.1705403327941895
    9. 'count' → logprob: -5.2955403327941895
    10. 'total' → logprob: -5.5455403327941895

Token 130: 'min' (ID: 1493)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11256828159093857
    2. 'max' → logprob: -3.2375683784484863
    3. 'answer' → logprob: -3.9875683784484863
    4. 'g' → logprob: -4.112568378448486
    5. 'result' → logprob: -4.362568378448486
    6. 'ans' → logprob: -4.862568378448486
    7. 'div' → logprob: -5.737568378448486
    8. 'res' → logprob: -6.237568378448486
    9. 'best' → logprob: -6.737568378448486
    10. 'for' → logprob: -7.237568378448486

Token 131: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04191802069544792
    2. '_diff' → logprob: -5.04191780090332
    3. '_k' → logprob: -5.04191780090332
    4. '_val' → logprob: -5.16691780090332
    5. '_div' → logprob: -5.29191780090332
    6. '(' → logprob: -5.41691780090332
    7. '_value' → logprob: -5.91691780090332
    8. '_sum' → logprob: -5.91691780090332
    9. '_factor' → logprob: -7.04191780090332
    10. '_count' → logprob: -7.16691780090332

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.455863893032074
    2. '_' → logprob: -1.3308639526367188
    3. '=' → logprob: -2.5808639526367188
    4. 's' → logprob: -4.955863952636719
    5. '_k' → logprob: -5.455863952636719
    6. ',' → logprob: -5.830863952636719
    7. '(' → logprob: -6.080863952636719
    8. '_val' → logprob: -6.455863952636719
    9. '_div' → logprob: -6.580863952636719
    10. '_value' → logprob: -6.955863952636719

Token 133: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.47371384501457214
    2. 'math' → logprob: -1.8487138748168945
    3. ' float' → logprob: -2.0987138748168945
    4. ' math' → logprob: -2.8487138748168945
    5. 'sum' → logprob: -3.4737138748168945
    6. ' sum' → logprob: -5.4737138748168945
    7. '0' → logprob: -6.0987138748168945
    8. '10' → logprob: -6.8487138748168945
    9. 'max' → logprob: -8.223713874816895
    10. ' ' → logprob: -8.973713874816895

Token 134: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0038194337394088507
    2. ''' → logprob: -6.628819465637207
    3. ''in' → logprob: -6.753819465637207
    4. '(' → logprob: -7.003819465637207
    5. ''s' → logprob: -9.128819465637207
    6. ''a' → logprob: -9.378819465637207
    7. '('-' → logprob: -10.378819465637207
    8. ''i' → logprob: -11.128819465637207
    9. ''import' → logprob: -11.378819465637207
    10. ''ac' → logprob: -11.503819465637207

Token 135: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. 'info' → logprob: -17.625
    3. ''' → logprob: -17.875
    4. '_inf' → logprob: -19.0
    5. ' inf' → logprob: -19.875
    6. '.inf' → logprob: -20.25
    7. 'in' → logprob: -20.375
    8. ''in' → logprob: -20.5
    9. '-inf' → logprob: -21.625
    10. 'pos' → logprob: -21.75

Token 136: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011438826099038124
    2. ' )' → logprob: -4.636438846588135
    3. ')
' → logprob: -6.511438846588135
    4. ' )
' → logprob: -8.636438369750977
    5. ',' → logprob: -11.761438369750977
    6. ')
' → logprob: -12.761438369750977
    7. '')' → logprob: -13.011438369750977
    8. '
' → logprob: -13.886438369750977
    9. ' ' → logprob: -14.261438369750977
    10. '+' → logprob: -14.761438369750977

Token 137: 'for' (ID: 1938)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.10490503162145615
    2. 'ans' → logprob: -3.729905128479004
    3. 'g' → logprob: -3.854905128479004
    4. 'result' → logprob: -3.979905128479004
    5. 'min' → logprob: -4.354905128479004
    6. 'answer' → logprob: -4.604905128479004
    7. 'res' → logprob: -4.979905128479004
    8. 'for' → logprob: -5.979905128479004
    9. 'chosen' → logprob: -7.104905128479004
    10. 'k' → logprob: -7.479905128479004

Token 138: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5846312642097473
    2. ' k' → logprob: -0.8346312642097473
    3. ' x' → logprob: -5.709631443023682
    4. 'x' → logprob: -6.209631443023682
    5. ' d' → logprob: -6.459631443023682
    6. ' i' → logprob: -7.584631443023682
    7. 'd' → logprob: -7.584631443023682
    8. 'i' → logprob: -8.084630966186523
    9. ' candidate' → logprob: -9.459630966186523
    10. 'a' → logprob: -9.834630966186523

Token 139: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012618540786206722
    2. 'in' → logprob: -4.387618541717529
    3. ' ' → logprob: -9.387618064880371
    4. ',' → logprob: -11.387618064880371
    5. '1' → logprob: -12.512618064880371
    6. '	in' → logprob: -13.137618064880371
    7. 'range' → logprob: -13.512618064880371
    8. ' i' → logprob: -13.637618064880371
    9. ' ,' → logprob: -14.012618064880371
    10. '  ' → logprob: -14.137618064880371

Token 140: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38688698410987854
    2. ' range' → logprob: -1.1368869543075562
    3. '(range' → logprob: -11.636886596679688
    4. '	range' → logprob: -12.511886596679688
    5. ' ' → logprob: -13.261886596679688
    6. '.range' → logprob: -15.011886596679688
    7. '_range' → logprob: -15.511886596679688
    8. '  ' → logprob: -15.511886596679688
    9. '```' → logprob: -15.761886596679688
    10. '   ' → logprob: -16.011886596679688

Token 141: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.2200749754119897e-06
    2. '(
' → logprob: -13.625001907348633
    3. '1' → logprob: -14.375001907348633
    4. ' (' → logprob: -14.875001907348633
    5. '(max' → logprob: -18.750001907348633
    6. ' ' → logprob: -18.875001907348633
    7. '2' → logprob: -19.125001907348633
    8. '(

' → logprob: -19.500001907348633
    9. ',' → logprob: -20.250001907348633
    10. '(k' → logprob: -20.375001907348633

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0053152237087488174
    2. '2' → logprob: -5.63031530380249
    3. ' ' → logprob: -6.50531530380249
    4. 'max' → logprob: -8.505314826965332
    5. ' max' → logprob: -11.255314826965332
    6. '(' → logprob: -13.755314826965332
    7. '(max' → logprob: -14.505314826965332
    8. '   ' → logprob: -14.880314826965332
    9. ',max' → logprob: -15.880314826965332
    10. 'k' → logprob: -15.942814826965332

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018399098189547658
    2. ' ,' → logprob: -8.625184059143066
    3. ',max' → logprob: -12.375184059143066
    4. ',k' → logprob: -16.25018310546875
    5. ',min' → logprob: -16.75018310546875
    6. '，' → logprob: -17.87518310546875
    7. 'max' → logprob: -18.50018310546875
    8. ',len' → logprob: -18.75018310546875
    9. '‌,' → logprob: -19.00018310546875
    10. '1' → logprob: -19.25018310546875

Token 144: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1269284337759018
    2. ' max' → logprob: -2.1269283294677734
    3. 'len' → logprob: -15.626928329467773
    4. '	max' → logprob: -17.376928329467773
    5. '(max' → logprob: -17.376928329467773
    6. ' len' → logprob: -17.626928329467773
    7. ' ' → logprob: -17.626928329467773
    8. '
' → logprob: -17.751928329467773
    9. ',max' → logprob: -18.751928329467773
    10. '   ' → logprob: -19.251928329467773

Token 145: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0016525676473975182
    2. 'max' → logprob: -6.876652717590332
    3. 't' → logprob: -8.376652717590332
    4. '(max' → logprob: -8.626652717590332
    5. '+' → logprob: -8.751652717590332
    6. '_max' → logprob: -10.126652717590332
    7. '[max' → logprob: -12.501652717590332
    8. 'k' → logprob: -13.376652717590332
    9. '+t' → logprob: -13.751652717590332
    10. '_k' → logprob: -14.251652717590332

Token 146: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00023071514442563057
    2. ' +' → logprob: -8.37523078918457
    3. '+k' → logprob: -17.25023078918457
    4. '```' → logprob: -17.37523078918457
    5. '
' → logprob: -17.62523078918457
    6. '()+' → logprob: -18.00023078918457
    7. ')+' → logprob: -18.00023078918457
    8. '＋' → logprob: -18.87523078918457
    9. ' ' → logprob: -19.37523078918457
    10. '):
' → logprob: -19.50023078918457

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010459087789058685
    2. '+' → logprob: -6.8760457038879395
    3. ' ' → logprob: -11.626046180725098
    4. '```' → logprob: -13.001046180725098
    5. ' +' → logprob: -14.126046180725098
    6. '2' → logprob: -15.501046180725098
    7. '   ' → logprob: -15.626046180725098
    8. 'max' → logprob: -16.00104522705078
    9. '
' → logprob: -16.00104522705078
    10. '-' → logprob: -16.00104522705078

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10200458765029907
    2. ':' → logprob: -2.3520045280456543
    3. ')' → logprob: -6.977004528045654
    4. '):
' → logprob: -7.852004528045654
    5. ' ):' → logprob: -7.852004528045654
    6. ' :' → logprob: -9.852005004882812
    7. ':
' → logprob: -11.977005004882812
    8. ',' → logprob: -11.977005004882812
    9. '}:' → logprob: -12.102005004882812
    10. '   ' → logprob: -12.977005004882812

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2504490315914154
    2. ' s' → logprob: -2.2504489421844482
    3. 'sum' → logprob: -3.0004489421844482
    4. ' sum' → logprob: -3.3754489421844482
    5. 's' → logprob: -3.5004489421844482
    6. ' current' → logprob: -7.875449180603027
    7. '    
' → logprob: -8.125449180603027
    8. ' if' → logprob: -8.125449180603027
    9. ' total' → logprob: -8.500449180603027
    10. 'current' → logprob: -8.625449180603027

Token 150: ' if' (ID: 538)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6663703322410583
    2. '   ' → logprob: -1.6663703918457031
    3. 'sum' → logprob: -2.166370391845703
    4. 'total' → logprob: -2.666370391845703
    5. ' s' → logprob: -3.166370391845703
    6. 'current' → logprob: -3.416370391845703
    7. ' total' → logprob: -4.791370391845703
    8. ' current' → logprob: -4.916370391845703
    9. 'if' (adapté à ' if') → logprob: -4.916370391845703
    10. ' if' → logprob: -5.166370391845703

Token 151: ' cumulative' (ID: 75628)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11415320634841919
    2. ' cumulative' → logprob: -2.2391531467437744
    3. '   ' → logprob: -7.4891533851623535
    4. 'freq' → logprob: -7.6141533851623535
    5. ' freq' → logprob: -9.114152908325195
    6. ' c' → logprob: -9.239152908325195
    7. 'cum' → logprob: -10.864152908325195
    8. 'k' → logprob: -11.489152908325195
    9. ' ' → logprob: -11.864152908325195
    10. 'frequency' → logprob: -11.864152908325195

Token 152: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -2.2723104848410003e-05
    2. 'k' → logprob: -10.875022888183594
    3. '[' → logprob: -12.875022888183594
    4. ' [' → logprob: -13.875022888183594
    5. ' k' → logprob: -16.625022888183594
    6. '
' → logprob: -17.625022888183594
    7. '```' → logprob: -17.750022888183594
    8. '{k' → logprob: -17.875022888183594
    9. '[
' → logprob: -18.250022888183594
    10. '[i' → logprob: -18.250022888183594

Token 153: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5034806132316589
    2. ' >' → logprob: -2.1284806728363037
    3. ' >=' → logprob: -2.1284806728363037
    4. '>=' → logprob: -2.1284806728363037
    5. ']' → logprob: -4.378480434417725
    6. ' <' → logprob: -4.753480434417725
    7. '<' → logprob: -5.003480434417725
    8. '==' → logprob: -5.378480434417725
    9. ' ==' → logprob: -5.878480434417725
    10. ')' → logprob: -6.628480434417725

Token 154: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.223732352256775
    2. '>' → logprob: -1.348732352256775
    3. ' >' → logprob: -1.348732352256775
    4. '>=' → logprob: -1.723732352256775
    5. ' ==' → logprob: -5.7237324714660645
    6. '==' → logprob: -5.9737324714660645
    7. ' <' → logprob: -6.7237324714660645
    8. '<' → logprob: -7.2237324714660645
    9. ' ' → logprob: -8.473731994628906
    10. ' !=' → logprob: -9.223731994628906

Token 155: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9444887042045593
    2. '0' → logprob: -1.194488763809204
    3. ' ' → logprob: -1.819488763809204
    4. ' N' → logprob: -1.944488763809204
    5. '1' → logprob: -7.069488525390625
    6. 'k' → logprob: -7.319488525390625
    7. 'len' → logprob: -7.319488525390625
    8. ' len' → logprob: -7.694488525390625
    9. ' k' → logprob: -8.194488525390625
    10. '2' → logprob: -9.569488525390625

Token 156: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018139402382075787
    2. ':
' → logprob: -6.626813888549805
    3. ' :' → logprob: -8.001813888549805
    4. '):' → logprob: -9.251813888549805
    5. ' and' → logprob: -10.126813888549805
    6. ' :
' → logprob: -12.126813888549805
    7. '):
' → logprob: -12.751813888549805
    8. ')' → logprob: -12.876813888549805
    9. ' or' → logprob: -13.751813888549805
    10. ':
' → logprob: -13.876813888549805

Token 157: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31221824884414673
    2. ' s' → logprob: -2.187218189239502
    3. ' sum' → logprob: -2.562218189239502
    4. 'sum' → logprob: -2.937218189239502
    5. 's' → logprob: -3.812218189239502
    6. ' current' → logprob: -6.687218189239502
    7. '    
' → logprob: -7.437218189239502
    8. ' total' → logprob: -7.687218189239502
    9. 'current' → logprob: -8.06221866607666
    10. '       ' → logprob: -8.31221866607666

Token 158: ' total' (ID: 3609)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.8593952059745789
    2. 'current' → logprob: -0.9843952059745789
    3. 'total' (adapté à ' total') → logprob: -2.6093952655792236
    4. 's' → logprob: -2.9843952655792236
    5. 'min' → logprob: -3.6093952655792236
    6. 'curr' → logprob: -4.1093950271606445
    7. '   ' → logprob: -4.3593950271606445
    8. 'print' → logprob: -5.2343950271606445
    9. 'cur' → logprob: -5.3593950271606445
    10. 'div' → logprob: -5.6093950271606445

Token 159: '_inc' (ID: 80848)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22035498917102814
    2. '_sum' → logprob: -2.2203550338745117
    3. '=' → logprob: -2.5953550338745117
    4. '_' → logprob: -4.345355033874512
    5. 'sum' → logprob: -6.595355033874512
    6. 's' → logprob: -10.095355033874512
    7. ' ' → logprob: -10.345355033874512
    8. '_s' → logprob: -10.595355033874512
    9. '_=' → logprob: -10.595355033874512
    10. '_k' → logprob: -11.220355033874512

Token 160: ' =' (ID: 314)
  Prédit: 'rement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rement' → logprob: -0.3052031993865967
    2. 'r' → logprob: -1.8052031993865967
    3. ' =' → logprob: -2.9302031993865967
    4. 're' → logprob: -3.4302031993865967
    5. '=' → logprob: -5.180203437805176
    6. '_sum' → logprob: -5.555203437805176
    7. ' +=' → logprob: -7.180203437805176
    8. '+=' → logprob: -7.680203437805176
    9. 'sum' → logprob: -7.805203437805176
    10. '=sum' → logprob: -7.930203437805176

Token 161: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.062311939895153046
    2. ' ' → logprob: -2.812311887741089
    3. 'sum' → logprob: -8.187312126159668
    4. ' sum' → logprob: -9.687312126159668
    5. '   ' → logprob: -13.812312126159668
    6. 'k' → logprob: -14.312312126159668
    7. ' k' → logprob: -14.437312126159668
    8. '  ' → logprob: -14.687312126159668
    9. '1' → logprob: -15.062312126159668
    10. '000' → logprob: -15.437312126159668

Token 162: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003197677666321397
    2. 'sum' → logprob: -5.87819766998291
    3. ' ' → logprob: -7.87819766998291
    4. ' sum' → logprob: -11.25319766998291
    5. '   ' → logprob: -15.12819766998291
    6. 'k' → logprob: -15.62819766998291
    7. '  ' → logprob: -16.753198623657227
    8. 's' → logprob: -16.878198623657227
    9. '000' → logprob: -16.878198623657227
    10. 'max' → logprob: -17.128198623657227

Token 163: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005956529639661312
    2. '
' → logprob: -5.880956649780273
    3. '   ' → logprob: -6.505956649780273
    4. '<|end|>' → logprob: -6.880956649780273
    5. ' for' → logprob: -8.255956649780273
    6. '        
' → logprob: -9.380956649780273
    7. ' ' → logprob: -9.505956649780273
    8. ',' → logprob: -10.130956649780273
    9. '<|end|>' → logprob: -10.130956649780273
    10. '  
' → logprob: -10.755956649780273

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42772597074508667
    2. '   ' → logprob: -1.3027260303497314
    3. '
' → logprob: -2.9277260303497314
    4. ' for' → logprob: -4.427725791931152
    5. '<|end|>' → logprob: -5.302725791931152
    6. ' ' → logprob: -6.552725791931152
    7. '  
' → logprob: -7.177725791931152
    8. '    
' → logprob: -7.302725791931152
    9. 'for' → logprob: -7.302725791931152
    10. '        
' → logprob: -7.552725791931152

Token 165: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.013746888376772404
    2. '       ' → logprob: -4.388746738433838
    3. '   ' → logprob: -7.013746738433838
    4. ' for' → logprob: -8.013747215270996
    5. ' ' → logprob: -13.013747215270996
    6. '	for' → logprob: -13.013747215270996
    7. '  ' → logprob: -15.388747215270996
    8. '#' → logprob: -15.888747215270996
    9. 'while' → logprob: -15.888747215270996
    10. '           ' → logprob: -16.01374626159668

Token 166: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16193901002407074
    2. 'multiple' → logprob: -2.6619389057159424
    3. ' x' → logprob: -3.0369389057159424
    4. 'i' → logprob: -4.6619391441345215
    5. ' multiple' → logprob: -4.7869391441345215
    6. 'num' → logprob: -5.0369391441345215
    7. 'val' → logprob: -5.7869391441345215
    8. 'value' → logprob: -7.1619391441345215
    9. ' i' → logprob: -7.2869391441345215
    10. 'j' → logprob: -7.6619391441345215

Token 167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002888802206143737
    2. 'in' → logprob: -5.8778886795043945
    3. ' ' → logprob: -9.752888679504395
    4. 's' → logprob: -12.127888679504395
    5. '   ' → logprob: -12.377888679504395
    6. '  ' → logprob: -12.877888679504395
    7. 'x' → logprob: -13.002888679504395
    8. ',' → logprob: -13.252888679504395
    9. '    ' → logprob: -13.252888679504395
    10. 'import' → logprob: -14.252888679504395

Token 168: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.43457096815109253
    2. ' t' → logprob: -1.1845710277557373
    3. ' range' → logprob: -3.5595710277557373
    4. 'range' → logprob: -4.059570789337158
    5. ' ' → logprob: -8.309571266174316
    6. 'freq' → logprob: -8.684571266174316
    7. '[' → logprob: -8.934571266174316
    8. ' xrange' → logprob: -9.184571266174316
    9. 'x' → logprob: -10.184571266174316
    10. ' freq' → logprob: -10.309571266174316

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14327239990234375
    2. ':
' → logprob: -2.0182723999023438
    3. '           ' → logprob: -7.518272399902344
    4. '       ' → logprob: -11.518272399902344
    5. ' if' → logprob: -11.768272399902344
    6. ':

' → logprob: -12.268272399902344
    7. '):
' → logprob: -12.518272399902344
    8. 'if' → logprob: -12.518272399902344
    9. '<|end|>' → logprob: -12.518272399902344
    10. '):' → logprob: -13.143272399902344

Token 170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008962165447883308
    2. '            
' → logprob: -7.875896453857422
    3. '            ' → logprob: -9.125896453857422
    4. '
' → logprob: -9.375896453857422
    5. ',' → logprob: -9.750896453857422
    6. '          ' → logprob: -10.000896453857422
    7. ':' → logprob: -10.000896453857422
    8. '	       ' → logprob: -10.125896453857422
    9. ' if' → logprob: -11.000896453857422
    10. '		' → logprob: -11.250896453857422

Token 171: ' rem' (ID: 1662)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8886617422103882
    2. 'if' → logprob: -1.8886617422103882
    3. 'total' → logprob: -2.0136618614196777
    4. '               ' → logprob: -2.2636618614196777
    5. 'increment' → logprob: -3.2636618614196777
    6. ' if' → logprob: -3.3886618614196777
    7. 'rem' (adapté à ' rem') → logprob: -3.5136618614196777
    8. ' remainder' → logprob: -3.7636618614196777
    9. 'inc' → logprob: -4.138661861419678
    10. 'diff' → logprob: -4.263661861419678

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04257407784461975
    2. '=' → logprob: -3.417574167251587
    3. 'inder' → logprob: -5.292573928833008
    4. 'ainer' → logprob: -6.417573928833008
    5. 'a' → logprob: -6.792573928833008
    6. '   ' → logprob: -8.292573928833008
    7. 'aining' → logprob: -8.917573928833008
    8. 'ain' → logprob: -8.917573928833008
    9. 'ender' → logprob: -9.792573928833008
    10. '  ' → logprob: -9.917573928833008

Token 173: ' (' (ID: 350)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.6769052147865295
    2. ' (' → logprob: -1.1769051551818848
    3. 'k' → logprob: -2.6769051551818848
    4. 'x' → logprob: -2.8019051551818848
    5. '(x' → logprob: -3.8019051551818848
    6. ' x' → logprob: -4.176905155181885
    7. ' k' → logprob: -4.926905155181885
    8. '(' → logprob: -5.676905155181885
    9. '(-' → logprob: -5.801905155181885
    10. '((' → logprob: -6.301905155181885

Token 174: 'x' (ID: 87)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.012057125568389893
    2. '(k' → logprob: -5.387057304382324
    3. ' k' → logprob: -5.762057304382324
    4. 'x' → logprob: -5.887057304382324
    5. '-k' → logprob: -7.637057304382324
    6. ' (' → logprob: -7.762057304382324
    7. '(-' → logprob: -8.637057304382324
    8. '-' → logprob: -8.762057304382324
    9. ' -' → logprob: -9.387057304382324
    10. '(x' → logprob: -9.887057304382324

Token 175: ' +' (ID: 659)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6253726482391357
    2. '%' → logprob: -1.0003726482391357
    3. ' +' → logprob: -3.0003726482391357
    4. '+k' → logprob: -3.6253726482391357
    5. ' -' → logprob: -5.000372886657715
    6. '+' → logprob: -5.250372886657715
    7. '-' → logprob: -6.000372886657715
    8. ' if' → logprob: -7.000372886657715
    9. ')' → logprob: -7.000372886657715
    10. ' )' → logprob: -7.125372886657715

Token 176: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.060211654752492905
    2. '(k' → logprob: -2.935211658477783
    3. '(-' → logprob: -5.810211658477783
    4. ' k' → logprob: -6.560211658477783
    5. ' (' → logprob: -7.435211658477783
    6. '(' → logprob: -9.310211181640625
    7. '-k' → logprob: -9.310211181640625
    8. ' ' → logprob: -9.685211181640625
    9. '-' → logprob: -10.810211181640625
    10. '   ' → logprob: -11.435211181640625

Token 177: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5842348337173462
    2. '-' → logprob: -0.9592348337173462
    3. ')' → logprob: -2.8342347145080566
    4. ' )' → logprob: -7.834234714508057
    5. ')%' → logprob: -9.709235191345215
    6. '-k' → logprob: -10.709235191345215
    7. '-)' → logprob: -11.834235191345215
    8. ' ' → logprob: -11.959235191345215
    9. '   ' → logprob: -12.084235191345215
    10. 'k' → logprob: -12.334235191345215

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02369065023958683
    2. '-' → logprob: -4.773690700531006
    3. ')' → logprob: -5.273690700531006
    4. ' -' → logprob: -5.273690700531006
    5. ' ' → logprob: -6.023690700531006
    6. 'k' → logprob: -6.773690700531006
    7. ' k' → logprob: -7.773690700531006
    8. ' (' → logprob: -8.273690223693848
    9. '(-' → logprob: -9.523690223693848
    10. '           ' → logprob: -9.523690223693848

Token 179: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010060389526188374
    2. ')//' → logprob: -4.6350603103637695
    3. ' )' → logprob: -8.13506031036377
    4. ')%' → logprob: -11.63506031036377
    5. ')
' → logprob: -13.63506031036377
    6. '//' → logprob: -15.13506031036377
    7. ')#' → logprob: -15.13506031036377
    8. ' //' → logprob: -16.010061264038086
    9. '-' → logprob: -16.010061264038086
    10. ' -' → logprob: -16.135061264038086

Token 180: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.048612456768751144
    2. ' k' → logprob: -3.048612356185913
    3. '<|end|>' → logprob: -10.923612594604492
    4. '	k' → logprob: -12.173612594604492
    5. ' ' → logprob: -13.923612594604492
    6. '<|end|>' → logprob: -15.298612594604492
    7. '*k' → logprob: -15.673612594604492
    8. ' к' → logprob: -15.673612594604492
    9. ',k' → logprob: -16.298612594604492
    10. '/k' → logprob: -16.423612594604492

Token 181: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.09898871183395386
    2. '*k' → logprob: -2.9739887714385986
    3. '*' → logprob: -3.2239887714385986
    4. '           ' → logprob: -5.7239885330200195
    5. ')' → logprob: -10.72398853302002
    6. ' ' → logprob: -11.34898853302002
    7. '
' → logprob: -11.84898853302002
    8. '               ' → logprob: -12.09898853302002
    9. '       ' → logprob: -12.22398853302002
    10. '```' → logprob: -12.47398853302002

Token 182: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.12694038450717926
    2. ' k' → logprob: -2.1269404888153076
    3. ' ' → logprob: -12.501940727233887
    4. '	k' → logprob: -12.626940727233887
    5. '   ' → logprob: -13.501940727233887
    6. '*k' → logprob: -13.626940727233887
    7. '  ' → logprob: -14.251940727233887
    8. '
' → logprob: -14.501940727233887
    9. ' к' → logprob: -15.126940727233887
    10. '    ' → logprob: -15.501940727233887

Token 183: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005709539633244276
    2. '-' → logprob: -5.880709648132324
    3. '           ' → logprob: -5.880709648132324
    4. ' ' → logprob: -9.755709648132324
    5. ')' → logprob: -11.505709648132324
    6. '            ' → logprob: -12.130709648132324
    7. '          ' → logprob: -12.380709648132324
    8. '               ' → logprob: -12.505709648132324
    9. '-x' → logprob: -12.630709648132324
    10. '   ' → logprob: -12.755709648132324

Token 184: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804286941885948
    2. ' x' → logprob: -3.2880427837371826
    3. '	x' → logprob: -13.788043022155762
    4. ')x' → logprob: -15.663043022155762
    5. '(x' → logprob: -16.663042068481445
    6. ''x' → logprob: -16.663042068481445
    7. ' ' → logprob: -16.788042068481445
    8. '<|end|>' → logprob: -16.913042068481445
    9. '$x' → logprob: -17.538042068481445
    10. '"x' → logprob: -17.538042068481445

Token 185: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17426800727844238
    2. ')' → logprob: -2.7992680072784424
    3. '               ' → logprob: -3.4242680072784424
    4. '<|end|>' → logprob: -3.4242680072784424
    5. '
' → logprob: -4.549267768859863
    6. '+' → logprob: -4.924267768859863
    7. ' ' → logprob: -5.799267768859863
    8. '       ' → logprob: -5.924267768859863
    9. '          ' → logprob: -6.674267768859863
    10. ' 
' → logprob: -6.924267768859863

Token 186: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03215111047029495
    2. '
' → logprob: -3.532151222229004
    3. '<|end|>' → logprob: -6.407151222229004
    4. '<|end|>' → logprob: -9.032151222229004
    5. '            
' → logprob: -9.157151222229004
    6. ',' → logprob: -9.282151222229004
    7. '       ' → logprob: -9.407151222229004
    8. ' 
' → logprob: -9.657151222229004
    9. '
' → logprob: -10.407151222229004
    10. ' ' → logprob: -10.407151222229004

Token 187: ' total' (ID: 3609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16449099779129028
    2. 'total' (adapté à ' total') → logprob: -2.2894909381866455
    3. ' total' → logprob: -3.6644909381866455
    4. '       ' → logprob: -3.9144909381866455
    5. '   ' → logprob: -6.289491176605225
    6. '
' → logprob: -6.664491176605225
    7. ' ' → logprob: -7.914491176605225
    8. '	total' → logprob: -8.164490699768066
    9. '               ' → logprob: -8.414490699768066
    10. ')' → logprob: -9.539490699768066

Token 188: '_inc' (ID: 80848)
  Prédit: '_inc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inc' → logprob: -0.0006911090458743274
    2. '+=' → logprob: -7.375690937042236
    3. ' +=' → logprob: -10.125691413879395
    4. '_' → logprob: -11.625691413879395
    5. '_increment' → logprob: -12.000691413879395
    6. '_sum' → logprob: -13.250691413879395
    7. 'inc' → logprob: -13.500691413879395
    8. '_INC' → logprob: -13.625691413879395
    9. '+' → logprob: -14.250691413879395
    10. '=' → logprob: -14.500691413879395

Token 189: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.029808932915329933
    2. '+=' → logprob: -3.52980899810791
    3. '+' → logprob: -10.02980899810791
    4. ' ' → logprob: -12.40480899810791
    5. ' +' → logprob: -12.65480899810791
    6. ']+=' → logprob: -13.40480899810791
    7. '<|end|>' → logprob: -13.90480899810791
    8. '        ' → logprob: -14.15480899810791
    9. '           ' → logprob: -14.40480899810791
    10. '   ' → logprob: -14.40480899810791

Token 190: ' rem' (ID: 1662)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.01815052703022957
    2. ' rem' → logprob: -4.018150329589844
    3. '(rem' → logprob: -14.518150329589844
    4. '   ' → logprob: -16.518150329589844
    5. ' ' → logprob: -17.393150329589844
    6. 'reman' → logprob: -17.893150329589844
    7. 're' → logprob: -19.268150329589844
    8. '       ' → logprob: -19.393150329589844
    9. '.rem' → logprob: -19.518150329589844
    10. '_rem' → logprob: -19.768150329589844

Token 191: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.005397749599069357
    2. '       ' → logprob: -5.755397796630859
    3. '
' → logprob: -6.630397796630859
    4. '<|end|>' → logprob: -7.505397796630859
    5. '        
' → logprob: -9.13039779663086
    6. '  
' → logprob: -9.38039779663086
    7. '    
' → logprob: -9.88039779663086
    8. ' 
' → logprob: -10.50539779663086
    9. '           ' → logprob: -11.00539779663086
    10. '<|end|>' → logprob: -11.13039779663086

Token 192: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007467370480298996
    2. '       ' → logprob: -5.132467269897461
    3. '
' → logprob: -6.757467269897461
    4. '   ' → logprob: -8.882467269897461
    5. '<|end|>' → logprob: -9.132467269897461
    6. '        
' → logprob: -10.382467269897461
    7. '           ' → logprob: -10.632467269897461
    8. '  
' → logprob: -10.882467269897461
    9. ' 
' → logprob: -10.882467269897461
    10. '    
' → logprob: -11.007467269897461

Token 193: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.217351496219635
    2. '           ' → logprob: -1.9673514366149902
    3. ' if' → logprob: -3.5923514366149902
    4. '       ' → logprob: -3.5923514366149902
    5. '   ' → logprob: -7.71735143661499
    6. ' ' → logprob: -12.217351913452148
    7. '
' → logprob: -12.967351913452148
    8. '	if' → logprob: -13.217351913452148
    9. '               ' → logprob: -14.342351913452148
    10. '          ' → logprob: -14.342351913452148

Token 194: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3868847191333771
    2. 'total' → logprob: -1.1368846893310547
    3. ' ' → logprob: -11.886884689331055
    4. '	total' → logprob: -12.511884689331055
    5. ' ' → logprob: -13.761884689331055
    6. '  ' → logprob: -15.011884689331055
    7. '   ' → logprob: -15.136884689331055
    8. 'tot' → logprob: -15.386884689331055
    9. ' tot' → logprob: -15.636884689331055
    10. 'to' → logprob: -15.636884689331055

Token 195: '_inc' (ID: 80848)
  Prédit: '_inc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inc' → logprob: -2.339278580620885e-06
    2. 'inc' → logprob: -13.500001907348633
    3. '_INC' → logprob: -15.500001907348633
    4. '>' → logprob: -15.625001907348633
    5. '_' → logprob: -16.375001907348633
    6. '_sum' → logprob: -16.500001907348633
    7. ' _' → logprob: -16.500001907348633
    8. '_acc' → logprob: -17.375001907348633
    9. '_increment' → logprob: -17.375001907348633
    10. '_ind' → logprob: -17.750001907348633

Token 196: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.21302269399166107
    2. '>=' → logprob: -1.7130227088928223
    3. ' >' → logprob: -4.588022708892822
    4. '>' → logprob: -6.713022708892822
    5. ' ' → logprob: -8.963022232055664
    6. ' <' → logprob: -11.713022232055664
    7. ' ' → logprob: -12.213022232055664
    8. ' min' → logprob: -12.338022232055664
    9. '   ' → logprob: -12.963022232055664
    10. '<' → logprob: -13.713022232055664

Token 197: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.9361264946837764e-07
    2. ' min' → logprob: -16.375
    3. '_min' → logprob: -22.875
    4. '	min' → logprob: -22.875
    5. 'max' → logprob: -23.625
    6. 'm' → logprob: -23.875
    7. '
' → logprob: -24.5
    8. '```' → logprob: -24.5
    9. 'minimum' → logprob: -24.75
    10. '   ' → logprob: -24.75

Token 198: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.935296834039036e-06
    2. '_' → logprob: -12.75000286102295
    3. '__' → logprob: -17.000003814697266
    4. '_min' → logprob: -17.750003814697266
    5. '_s' → logprob: -18.625003814697266
    6. 'sum' → logprob: -18.625003814697266
    7. ' _' → logprob: -19.500003814697266
    8. '_val' → logprob: -20.250003814697266
    9. '_inc' → logprob: -21.500003814697266
    10. ')' → logprob: -22.000003814697266

Token 199: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03255089744925499
    2. '           ' → logprob: -3.907550811767578
    3. '               ' → logprob: -4.907550811767578
    4. ':
' → logprob: -5.782550811767578
    5. '       ' → logprob: -6.657550811767578
    6. 'break' → logprob: -9.532550811767578
    7. ' break' → logprob: -10.657550811767578
    8. ' :' → logprob: -10.782550811767578
    9. '   ' → logprob: -10.907550811767578
    10. '	break' → logprob: -11.157550811767578

Token 200: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004581550136208534
    2. 'break' → logprob: -5.504581451416016
    3. ' break' → logprob: -7.754581451416016
    4. '           ' → logprob: -9.629581451416016
    5. '	break' → logprob: -13.004581451416016
    6. '                
' → logprob: -13.629581451416016
    7. '                   ' → logprob: -13.879581451416016
    8. '			' → logprob: -14.254581451416016
    9. '```' → logprob: -14.254581451416016
    10. '	           ' → logprob: -14.504581451416016

Token 201: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06265753507614136
    2. ' break' → logprob: -2.812657594680786
    3. '               ' → logprob: -7.312657356262207
    4. '                   ' → logprob: -11.187657356262207
    5. '	break' → logprob: -12.187657356262207
    6. '           ' → logprob: -12.937657356262207
    7. '   ' → logprob: -14.187657356262207
    8. '_break' → logprob: -15.187657356262207
    9. '```' → logprob: -16.312658309936523
    10. '       ' → logprob: -16.437658309936523

Token 202: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00937824510037899
    2. ' 
' → logprob: -5.509378433227539
    3. '  
' → logprob: -6.259378433227539
    4. '    
' → logprob: -6.634378433227539
    5. '       ' → logprob: -7.634378433227539
    6. '\n' → logprob: -7.759378433227539
    7. '        
' → logprob: -8.009378433227539
    8. '   ' → logprob: -8.134378433227539
    9. '
' → logprob: -9.009378433227539
    10. '   
' → logprob: -9.134378433227539

Token 203: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.429614394903183
    2. '
' → logprob: -1.6796144247055054
    3. '       ' → logprob: -2.054614305496216
    4. 'else' → logprob: -4.304614543914795
    5. 'if' → logprob: -4.679614543914795
    6. ' if' → logprob: -5.804614543914795
    7. '    
' → logprob: -5.804614543914795
    8. ' else' → logprob: -6.554614543914795
    9. '        
' → logprob: -6.679614543914795
    10. '  
' → logprob: -6.804614543914795

Token 204: ' if' (ID: 538)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.607387900352478
    2. '   ' → logprob: -1.357387900352478
    3. 'if' (adapté à ' if') → logprob: -1.857387900352478
    4. ' if' → logprob: -3.9823880195617676
    5. ' else' → logprob: -3.9823880195617676
    6. '       ' → logprob: -5.482388019561768
    7. '
' → logprob: -8.73238754272461
    8. ' ' → logprob: -8.85738754272461
    9. '  ' → logprob: -10.85738754272461
    10. '    
' → logprob: -11.23238754272461

Token 205: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.12697912752628326
    2. 'total' → logprob: -2.126979112625122
    3. ' ' → logprob: -10.126978874206543
    4. '	total' → logprob: -12.376978874206543
    5. '   ' → logprob: -12.626978874206543
    6. ' ' → logprob: -14.376978874206543
    7. ' tota' → logprob: -14.376978874206543
    8. '(total' → logprob: -14.751978874206543
    9. '  ' → logprob: -14.876978874206543
    10. ' tot' → logprob: -15.251978874206543

Token 206: '_inc' (ID: 80848)
  Prédit: '_inc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inc' → logprob: -0.04305388405919075
    2. '_sum' → logprob: -3.1680538654327393
    3. 'sum' → logprob: -10.79305362701416
    4. 'inc' → logprob: -11.16805362701416
    5. '_' → logprob: -12.16805362701416
    6. '_INC' → logprob: -13.16805362701416
    7. 's' → logprob: -13.54305362701416
    8. '   ' → logprob: -13.91805362701416
    9. '<' → logprob: -14.04305362701416
    10. '_increment' → logprob: -14.29305362701416

Token 207: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06996022164821625
    2. '<' → logprob: -2.694960117340088
    3. ' ' → logprob: -11.444960594177246
    4. ' ' → logprob: -12.069960594177246
    5. 'min' → logprob: -12.694960594177246
    6. '<|end|>' → logprob: -13.694960594177246
    7. ')' → logprob: -13.944960594177246
    8. '[' → logprob: -14.694960594177246
    9. '   ' → logprob: -14.819960594177246
    10. '  ' → logprob: -15.569960594177246

Token 208: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01815006136894226
    2. ' min' → logprob: -4.0181498527526855
    3. '=min' → logprob: -16.643150329589844
    4. '_min' → logprob: -16.893150329589844
    5. '	min' → logprob: -17.393150329589844
    6. '   ' → logprob: -19.018150329589844
    7. 'm' → logprob: -19.518150329589844
    8. '.min' → logprob: -19.518150329589844
    9. '
' → logprob: -19.893150329589844
    10. '(min' → logprob: -20.018150329589844

Token 209: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.896309739408025e-07
    2. 'sum' → logprob: -14.500000953674316
    3. '_' → logprob: -15.750000953674316
    4. '_s' → logprob: -16.375
    5. '_min' → logprob: -17.25
    6. '__' → logprob: -18.875
    7. ''_' → logprob: -20.125
    8. ' sum' → logprob: -20.375
    9. ' _' → logprob: -20.5
    10. 'Sum' → logprob: -20.625

Token 210: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1129247397184372
    2. ':
' → logprob: -2.237924814224243
    3. '           ' → logprob: -9.862924575805664
    4. ':
' → logprob: -11.237924575805664
    5. '       ' → logprob: -11.362924575805664
    6. ' :
' → logprob: -11.737924575805664
    7. ':min' → logprob: -12.612924575805664
    8. '):
' → logprob: -12.612924575805664
    9. ' :' → logprob: -12.737924575805664
    10. '   ' → logprob: -13.112924575805664

Token 211: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012640443164855242
    2. ' min' → logprob: -7.0012640953063965
    3. '
' → logprob: -8.376263618469238
    4. 'min' → logprob: -9.376263618469238
    5. '	       ' → logprob: -11.626263618469238
    6. '            
' → logprob: -11.876263618469238
    7. '               ' → logprob: -12.251263618469238
    8. '       ' → logprob: -12.626263618469238
    9. '```' → logprob: -13.126263618469238
    10. '	min' → logprob: -13.501263618469238

Token 212: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.38776126503944397
    2. ' min' → logprob: -1.1377612352371216
    3. '           ' → logprob: -7.137761116027832
    4. '   ' → logprob: -9.762761116027832
    5. '	min' → logprob: -11.137761116027832
    6. '       ' → logprob: -11.887761116027832
    7. '
' → logprob: -12.137761116027832
    8. '               ' → logprob: -12.262761116027832
    9. '_min' → logprob: -12.762761116027832
    10. ',min' → logprob: -13.387761116027832

Token 213: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.320199877838604e-07
    2. 'sum' → logprob: -15.75
    3. '_s' → logprob: -16.0
    4. '_' → logprob: -17.125
    5. '_min' → logprob: -17.875
    6. '_val' → logprob: -19.375
    7. '_save' → logprob: -19.5
    8. '_set' → logprob: -19.625
    9. '_code' → logprob: -19.75
    10. '_count' → logprob: -19.875

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023245595395565033
    2. '=' → logprob: -3.7732455730438232
    3. ' ' → logprob: -16.523244857788086
    4. '＝' → logprob: -17.773244857788086
    5. ' ' → logprob: -17.773244857788086
    6. ' =
' → logprob: -18.773244857788086
    7. ' +=' → logprob: -19.648244857788086
    8. ',' → logprob: -19.773244857788086
    9. ' =
' → logprob: -20.148244857788086
    10. ' =)' → logprob: -20.148244857788086

Token 215: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.061967797577381134
    2. ' total' → logprob: -2.8119678497314453
    3. '	total' → logprob: -16.686967849731445
    4. 'tot' → logprob: -16.936967849731445
    5. '
' → logprob: -17.686967849731445
    6. ' ' → logprob: -17.811967849731445
    7. '   ' → logprob: -17.936967849731445
    8. '(total' → logprob: -18.061967849731445
    9. ' tota' → logprob: -18.936967849731445
    10. 'to' → logprob: -19.186967849731445

Token 216: '_inc' (ID: 80848)
  Prédit: '_inc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inc' → logprob: -0.008664918132126331
    2. '_sum' → logprob: -4.758665084838867
    3. 'inc' → logprob: -10.383665084838867
    4. 'sum' → logprob: -11.633665084838867
    5. '_increment' → logprob: -11.633665084838867
    6. '_in' → logprob: -14.508665084838867
    7. '-inc' → logprob: -15.258665084838867
    8. 'Inc' → logprob: -15.258665084838867
    9. '_INC' → logprob: -15.508665084838867
    10. '_ind' → logprob: -15.758665084838867

Token 217: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005774584715254605
    2. '
' → logprob: -7.500577449798584
    3. 'if' → logprob: -11.125577926635742
    4. ' print' → logprob: -12.125577926635742
    5. 'for' → logprob: -13.250577926635742
    6. '```' → logprob: -13.750577926635742
    7. 'return' → logprob: -14.500577926635742
    8. ')' → logprob: -15.375577926635742
    9. '#' → logprob: -15.750577926635742
    10. '
' → logprob: -15.875577926635742

Token 218: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016337241686414927
    2. '
' → logprob: -8.750163078308105
    3. ' print' → logprob: -12.500163078308105
    4. '```' → logprob: -14.250163078308105
    5. '
' → logprob: -15.625163078308105
    6. 'for' → logprob: -16.000164031982422
    7. 'if' → logprob: -16.750164031982422
    8. ')' → logprob: -17.000164031982422
    9. '    
' → logprob: -17.625164031982422
    10. ' 
' → logprob: -17.750164031982422

Token 219: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.008615988306701183
    2. '(' → logprob: -4.758615970611572
    3. 'min' → logprob: -14.50861644744873
    4. '('' → logprob: -14.75861644744873
    5. '(max' → logprob: -14.75861644744873
    6. ' (' → logprob: -16.633615493774414
    7. '()' → logprob: -16.883615493774414
    8. '(f' → logprob: -17.258615493774414
    9. '(m' → logprob: -17.258615493774414
    10. '(
' → logprob: -17.383615493774414

Token 220: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.2200749754119897e-06
    2. '_s' → logprob: -13.500001907348633
    3. 'sum' → logprob: -14.875001907348633
    4. '_' → logprob: -14.875001907348633
    5. ' _' → logprob: -16.750001907348633
    6. '\' → logprob: -19.000001907348633
    7. '_print' → logprob: -19.125001907348633
    8. ')' → logprob: -19.500001907348633
    9. '_str' → logprob: -20.000001907348633
    10. '_SUM' → logprob: -20.125001907348633

Token 221: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ' )' → logprob: -12.750003814697266
    3. ')
' → logprob: -14.000003814697266
    4. ')`' → logprob: -17.625003814697266
    5. '```' → logprob: -17.750003814697266
    6. '')' → logprob: -18.000003814697266
    7. ')}' → logprob: -18.500003814697266
    8. '`)' → logprob: -18.500003814697266
    9. '))' → logprob: -18.625003814697266
    10. '),' → logprob: -18.750003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 219
Tokens correctement prédits (1ère position, stricte): 91
Tokens correctement prédits (1ère position, avec adaptation): 98
Tokens correctement prédits (top 10): 196
Précision stricte (1ère position): 41.55%
Précision adaptée (1ère position): 44.75%
Précision (top 10): 89.50%
================================================================================
