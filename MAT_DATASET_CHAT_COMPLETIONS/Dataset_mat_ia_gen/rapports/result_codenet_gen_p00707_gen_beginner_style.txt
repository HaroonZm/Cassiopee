================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def find_secret_number(matrix, W, H):
    max_number = -1

    # Function to perform DFS and find numbers starting from (r, c)
    def dfs(r, c, current_num):
        nonlocal max_number
        if not (0 <= r < H) or not (0 <= c < W):
            return
        if not matrix[r][c].isdigit():
            return
        new_num = current_num + matrix[r][c]
        # Update max_number
        new_num_val = int(new_num)
        if new_num_val > max_number:
            max_number = new_num_val
        # Next steps: right or down
        if c + 1 < W and matrix[r][c+1].isdigit():
            dfs(r, c+1, new_num)
        if r + 1 < H and matrix[r+1][c].isdigit():
            dfs(r+1, c, new_num)

    for i in range(H):
        for j in range(W):
            if matrix[i][j].isdigit() and matrix[i][j] != '0':
                dfs(i, j, "")

    return str(max_number)

while True:
    line = input()
    if line.strip() == '':
        continue
    W, H = map(int, line.split())
    if W == 0 and H == 0:
        break
    matrix = []
    for _ in range(H):
        row = input()
        while len(row) < W:
            row += input()
        matrix.append(row)
    print(find_secret_number(matrix, W, H))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' find' (ID: 1646)
  → Token d'amorce (pas de prédiction)

Token 2: '_secret' (ID: 51619)
  → Token d'amorce (pas de prédiction)

Token 3: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0121070621535182
    2. '_token' → logprob: -5.137106895446777
    3. '```' → logprob: -5.637106895446777
    4. '(' → logprob: -7.012106895446777
    5. '_secret' → logprob: -7.512106895446777
    6. '_s' → logprob: -8.012106895446777
    7. '(_' → logprob: -8.637106895446777
    8. '__' → logprob: -9.387106895446777
    9. '_:' → logprob: -9.637106895446777
    10. '_space' → logprob: -9.637106895446777

Token 4: '(matrix' (ID: 57027)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16999927163124084
    2. '_' → logprob: -1.9199992418289185
    3. '():' → logprob: -5.294999122619629
    4. '(_' → logprob: -6.544999122619629
    5. '```' → logprob: -6.794999122619629
    6. '_:' → logprob: -7.169999122619629
    7. '(_:' → logprob: -7.544999122619629
    8. '(:' → logprob: -8.419999122619629
    9. '(**' → logprob: -8.794999122619629
    10. ':' → logprob: -9.669999122619629

Token 5: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16233189404010773
    2. ')' → logprob: -2.6623318195343018
    3. ',' → logprob: -3.1623318195343018
    4. '[' → logprob: -3.4123318195343018
    5. ':' → logprob: -5.787332057952881
    6. '```' → logprob: -7.662332057952881
    7. '[:,' → logprob: -8.412331581115723
    8. '(' → logprob: -9.412331581115723
    9. '**' → logprob: -9.662331581115723
    10. '`:' → logprob: -9.787331581115723

Token 6: ' W' (ID: 486)
  Prédit: ' target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.4195629358291626
    2. ' row' → logprob: -2.169562816619873
    3. ' secret' → logprob: -2.544562816619873
    4. 'target' → logprob: -3.044562816619873
    5. ' key' → logprob: -3.169562816619873
    6. 'row' → logprob: -3.669562816619873
    7. 'secret' → logprob: -4.794562816619873
    8. ' n' → logprob: -5.169562816619873
    9. ' rows' → logprob: -5.794562816619873
    10. 'key' → logprob: -5.794562816619873

Token 7: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012875244952738285
    2. ')' → logprob: -4.762875080108643
    3. ',' → logprob: -5.512875080108643
    4. 'e' → logprob: -9.7628755569458
    5. ':' → logprob: -10.6378755569458
    6. '):
' → logprob: -10.7628755569458
    7. '[' → logprob: -11.0128755569458
    8. '_' → logprob: -11.2628755569458
    9. ' ):' → logprob: -11.5128755569458
    10. '```' → logprob: -11.7628755569458

Token 8: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.42871835827827454
    2. ' H' → logprob: -1.3037183284759521
    3. 'n' → logprob: -3.803718328475952
    4. 'N' → logprob: -3.803718328475952
    5. ' N' → logprob: -5.053718566894531
    6. ' n' → logprob: -5.428718566894531
    7. ' secret' → logprob: -6.053718566894531
    8. 'L' → logprob: -6.303718566894531
    9. ' ' → logprob: -6.553718566894531
    10. ')' → logprob: -6.616218566894531

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006656399928033352
    2. ')' → logprob: -5.131656169891357
    3. ':' → logprob: -7.881656169891357
    4. ''):' → logprob: -8.881656646728516
    5. '```' → logprob: -9.506656646728516
    6. '):
' → logprob: -9.756656646728516
    7. ',' → logprob: -10.131656646728516
    8. '`:' → logprob: -11.506656646728516
    9. '`' → logprob: -12.131656646728516
    10. '`)' → logprob: -12.506656646728516

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.035633206367492676
    2. ':
' → logprob: -3.910633087158203
    3. '   ' → logprob: -4.285633087158203
    4. '```' → logprob: -7.160633087158203
    5. '    
' → logprob: -9.285633087158203
    6. '\' → logprob: -10.035633087158203
    7. '``' → logprob: -10.285633087158203
    8. '(' → logprob: -10.410633087158203
    9. '  
' → logprob: -10.660633087158203
    10. '():' → logprob: -11.160633087158203

Token 11: ' max' (ID: 2999)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.39901506900787354
    2. '   ' → logprob: -1.3990150690078735
    3. '`' → logprob: -4.024014949798584
    4. '``' → logprob: -4.149014949798584
    5. 'n' → logprob: -4.274014949798584
    6. ':' → logprob: -4.899014949798584
    7. '\' → logprob: -5.149014949798584
    8. '\n' → logprob: -5.649014949798584
    9. ''' → logprob: -5.899014949798584
    10. '
' → logprob: -6.274014949798584

Token 12: '_number' (ID: 11733)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14361858367919922
    2. '_val' → logprob: -2.393618583679199
    3. '_value' → logprob: -3.393618583679199
    4. '_sum' → logprob: -5.518618583679199
    5. '_num' → logprob: -6.018618583679199
    6. '_number' → logprob: -7.268618583679199
    7. ' _' → logprob: -8.0186185836792
    8. '_x' → logprob: -8.3936185836792
    9. '_count' → logprob: -8.5186185836792
    10. '_area' → logprob: -8.6436185836792

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8710700869560242
    2. '=' → logprob: -1.246070146560669
    3. '_' → logprob: -1.246070146560669
    4. ')' → logprob: -5.87106990814209
    5. ' ' → logprob: -6.74606990814209
    6. '_space' → logprob: -7.74606990814209
    7. 's' → logprob: -7.87106990814209
    8. '  ' → logprob: -8.24606990814209
    9. '_=' → logprob: -8.37106990814209
    10. '(' → logprob: -8.62106990814209

Token 14: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09268224984407425
    2. '0' → logprob: -2.967682361602783
    3. ' -' → logprob: -4.342682361602783
    4. ' float' → logprob: -4.342682361602783
    5. ' None' → logprob: -5.467682361602783
    6. ' matrix' → logprob: -6.092682361602783
    7. '-' → logprob: -6.217682361602783
    8. ' max' → logprob: -6.467682361602783
    9. 'float' → logprob: -7.717682361602783
    10. 'matrix' → logprob: -8.592681884765625

Token 15: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6558055281639099
    2. 'float' → logprob: -0.7808055281639099
    3. '100' → logprob: -4.405805587768555
    4. '999' → logprob: -4.905805587768555
    5. '10' → logprob: -5.905805587768555
    6. ' float' → logprob: -7.905805587768555
    7. '101' → logprob: -9.405805587768555
    8. 'inf' → logprob: -10.530805587768555
    9. 'int' → logprob: -10.905805587768555
    10. '214' → logprob: -11.030805587768555

Token 16: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4369922876358032
    2. '\' → logprob: -1.6869922876358032
    3. '```' → logprob: -2.6869921684265137
    4. '<|end|>' → logprob: -3.1869921684265137
    5. '\n' → logprob: -3.8119921684265137
    6. ':' → logprob: -4.811992168426514
    7. '  
' → logprob: -5.186992168426514
    8. '    
' → logprob: -5.186992168426514
    9. '' → logprob: -5.686992168426514
    10. 'newline' → logprob: -6.311992168426514

Token 17: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.032380107790231705
    2. '```' → logprob: -3.9073801040649414
    3. '\n' → logprob: -5.032380104064941
    4. '   ' → logprob: -6.657380104064941
    5. '<|end|>' → logprob: -6.907380104064941
    6. ' 
' → logprob: -7.407380104064941
    7. '\' → logprob: -7.532380104064941
    8. '    
' → logprob: -7.532380104064941
    9. '  
' → logprob: -8.407380104064941
    10. '   
' → logprob: -8.407380104064941

Token 18: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6477951407432556
    2. 'for' → logprob: -0.8977951407432556
    3. '\n' → logprob: -4.1477952003479
    4. ' ' → logprob: -4.2727952003479
    5. '```' → logprob: -4.2727952003479
    6. ' 
' → logprob: -4.6477952003479
    7. '
' → logprob: -5.3977952003479
    8. '\' → logprob: -5.3977952003479
    9. '   ' → logprob: -5.7727952003479
    10. '    
' → logprob: -7.0227952003479

Token 19: ' Function' (ID: 11035)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35561603307724
    2. 'for' → logprob: -1.2306160926818848
    3. ' ' → logprob: -5.230616092681885
    4. '   ' → logprob: -6.855616092681885
    5. '```' → logprob: -8.355615615844727
    6. '    ' → logprob: -8.730615615844727
    7. ' ```' → logprob: -9.730615615844727
    8. ' For' → logprob: -10.230615615844727
    9. ' possible' → logprob: -10.355615615844727
    10. '  ' → logprob: -10.480615615844727

Token 20: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6626783013343811
    2. ' to' → logprob: -1.9126782417297363
    3. '_' → logprob: -2.2876782417297363
    4. ' ' → logprob: -3.2876782417297363
    5. 's' → logprob: -3.5376782417297363
    6. ' def' → logprob: -3.5376782417297363
    7. ' tokenize' → logprob: -3.6626782417297363
    8. '   ' → logprob: -4.037678241729736
    9. ' find' → logprob: -4.162678241729736
    10. '<|end|>' → logprob: -4.537678241729736

Token 21: ' perform' (ID: 3347)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.10694577544927597
    2. ' find' → logprob: -3.106945753097534
    3. 'check' → logprob: -3.731945753097534
    4. ' search' → logprob: -5.231945991516113
    5. 'dfs' → logprob: -5.231945991516113
    6. ' dfs' → logprob: -5.356945991516113
    7. ' get' → logprob: -5.731945991516113
    8. ' explore' → logprob: -5.981945991516113
    9. 'find' → logprob: -5.981945991516113
    10. 'search' → logprob: -6.106945991516113

Token 22: ' DFS' (ID: 115767)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.33656975626945496
    2. ' a' → logprob: -1.7115697860717773
    3. ' DFS' → logprob: -3.0865697860717773
    4. 'dfs' → logprob: -3.5865697860717773
    5. ' depth' → logprob: -4.086569786071777
    6. ' the' → logprob: -5.336569786071777
    7. ' search' → logprob: -6.086569786071777
    8. ' def' → logprob: -6.586569786071777
    9. 'DFS' → logprob: -6.711569786071777
    10. ' ' → logprob: -7.211569786071777

Token 23: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09455917775630951
    2. 'def' → logprob: -3.8445591926574707
    3. '\' → logprob: -4.344559192657471
    4. ' ' → logprob: -4.469559192657471
    5. '    ' → logprob: -5.094559192657471
    6. '<|end|>' → logprob: -5.094559192657471
    7. '    
' → logprob: -5.219559192657471
    8. ')' → logprob: -5.344559192657471
    9. '_' → logprob: -5.719559192657471
    10. '\n' → logprob: -5.969559192657471

Token 24: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.2270081639289856
    2. ' explore' → logprob: -1.9770081043243408
    3. ' search' → logprob: -3.352008104324341
    4. ' check' → logprob: -4.47700834274292
    5. 'find' → logprob: -5.97700834274292
    6. ' update' → logprob: -5.97700834274292
    7. '   ' → logprob: -6.22700834274292
    8. ' continue' → logprob: -6.22700834274292
    9. ' dfs' → logprob: -6.35200834274292
    10. ' ' → logprob: -6.97700834274292

Token 25: ' numbers' (ID: 8663)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.571722686290741
    2. ' ' → logprob: -1.9467227458953857
    3. ' numbers' → logprob: -2.6967227458953857
    4. '_' → logprob: -3.0717227458953857
    5. 'the' → logprob: -3.1967227458953857
    6. ' all' → logprob: -3.6967227458953857
    7. 'max' → logprob: -4.196722507476807
    8. ' a' → logprob: -4.321722507476807
    9. '   ' → logprob: -4.696722507476807
    10. ' next' → logprob: -4.946722507476807

Token 26: ' starting' (ID: 8601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0208729300647974
    2. 'def' → logprob: -5.145873069763184
    3. ' ' → logprob: -6.020873069763184
    4. '\' → logprob: -6.270873069763184
    5. '
' → logprob: -6.395873069763184
    6. '_' → logprob: -6.395873069763184
    7. '    
' → logprob: -6.770873069763184
    8. '    ' → logprob: -6.895873069763184
    9. '```' → logprob: -7.020873069763184
    10. '       ' → logprob: -7.270873069763184

Token 27: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.20380204916000366
    2. 'from' → logprob: -1.7038021087646484
    3. ' at' → logprob: -6.578802108764648
    4. ' with' → logprob: -7.578802108764648
    5. ' ' → logprob: -8.703802108764648
    6. '_from' → logprob: -8.703802108764648
    7. '   ' → logprob: -10.328802108764648
    8. 'with' → logprob: -10.703802108764648
    9. '_' → logprob: -11.078802108764648
    10. ' a' → logprob: -11.453802108764648

Token 28: ' (' (ID: 350)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.13073384761810303
    2. ' the' → logprob: -2.5057339668273926
    3. ' each' → logprob: -4.005733966827393
    4. ' current' → logprob: -4.505733966827393
    5. ' ' → logprob: -4.755733966827393
    6. ' given' → logprob: -6.880733966827393
    7. 'a' → logprob: -7.630733966827393
    8. 'the' → logprob: -8.130733489990234
    9. ' cell' → logprob: -8.630733489990234
    10. 'each' → logprob: -8.755733489990234

Token 29: 'r' (ID: 81)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.1698790788650513
    2. 'x' → logprob: -1.4198790788650513
    3. ' i' → logprob: -1.4198790788650513
    4. 'i' → logprob: -1.9198790788650513
    5. ' y' → logprob: -3.6698789596557617
    6. ')' → logprob: -4.794878959655762
    7. ' row' → logprob: -4.794878959655762
    8. 'y' → logprob: -5.169878959655762
    9. ' r' → logprob: -5.669878959655762
    10. 'r' → logprob: -6.169878959655762

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014945832081139088
    2. ')' → logprob: -4.389945983886719
    3. ' ,' → logprob: -6.264945983886719
    4. '):' → logprob: -8.264945983886719
    5. ',)' → logprob: -9.889945983886719
    6. 'u' → logprob: -10.264945983886719
    7. ',c' → logprob: -10.764945983886719
    8. '   ' → logprob: -10.889945983886719
    9. ' ' → logprob: -11.014945983886719
    10. 'e' → logprob: -11.014945983886719

Token 31: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3133252263069153
    2. ' c' → logprob: -1.3133251667022705
    3. '	c' → logprob: -10.813324928283691
    4. ' ' → logprob: -11.063324928283691
    5. ',c' → logprob: -11.438324928283691
    6. '   ' → logprob: -11.688324928283691
    7. ')c' → logprob: -12.313324928283691
    8. '  ' → logprob: -13.563324928283691
    9. ',' → logprob: -13.813324928283691
    10. '    ' → logprob: -13.938324928283691

Token 32: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12733322381973267
    2. '):' → logprob: -2.127333164215088
    3. ',' → logprob: -8.627333641052246
    4. '   ' → logprob: -9.502333641052246
    5. ' )' → logprob: -10.252333641052246
    6. '):
' → logprob: -10.377333641052246
    7. ' ' → logprob: -10.502333641052246
    8. ':' → logprob: -11.377333641052246
    9. ' ):' → logprob: -11.502333641052246
    10. '#' → logprob: -12.002333641052246

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062422145158052444
    2. ':' → logprob: -2.937422037124634
    3. ' ' → logprob: -6.437422275543213
    4. '```' → logprob: -6.687422275543213
    5. '
' → logprob: -7.062422275543213
    6. ')' → logprob: -7.312422275543213
    7. 'def' → logprob: -7.437422275543213
    8. ',' → logprob: -7.812422275543213
    9. ' :' → logprob: -8.062421798706055
    10. '    ' → logprob: -8.187421798706055

Token 34: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4203134775161743
    2. '```' → logprob: -2.5453133583068848
    3. '    ' → logprob: -2.7953133583068848
    4. ' ' → logprob: -2.7953133583068848
    5. 'def' (adapté à ' def') → logprob: -3.1703133583068848
    6. 'd' → logprob: -3.5453133583068848
    7. '\' → logprob: -3.7953133583068848
    8. ' 
' → logprob: -4.170313358306885
    9. '    
' → logprob: -5.170313358306885
    10. '     
' → logprob: -5.295313358306885

Token 35: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.00020973898062948138
    2. 'dfs' → logprob: -8.50020980834961
    3. ' search' → logprob: -12.75020980834961
    4. ' DFS' → logprob: -13.37520980834961
    5. ' ' → logprob: -14.12520980834961
    6. ' explore' → logprob: -15.25020980834961
    7. ' find' → logprob: -15.37520980834961
    8. ' ' → logprob: -15.37520980834961
    9. '   ' → logprob: -16.00020980834961
    10. ' d' → logprob: -16.25020980834961

Token 36: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4998919665813446
    2. '(r' → logprob: -1.124891996383667
    3. ' (' → logprob: -3.124891996383667
    4. '(row' → logprob: -3.749891996383667
    5. '(node' → logprob: -7.749891757965088
    6. '(
' → logprob: -9.124892234802246
    7. '(cell' → logprob: -9.249892234802246
    8. '(root' → logprob: -9.374892234802246
    9. '(matrix' → logprob: -9.749892234802246
    10. '(s' → logprob: -9.999892234802246

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0047336723655462265
    2. ' ,' → logprob: -5.379733562469482
    3. '):' → logprob: -10.37973403930664
    4. ',c' → logprob: -10.62973403930664
    5. ',r' → logprob: -11.25473403930664
    6. ')' → logprob: -11.50473403930664
    7. '   ' → logprob: -12.12973403930664
    8. '<|end|>' → logprob: -12.50473403930664
    9. ' ' → logprob: -13.12973403930664
    10. ',
' → logprob: -13.25473403930664

Token 38: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.201423779129982
    2. ' c' → logprob: -1.7014237642288208
    3. ')c' → logprob: -12.201423645019531
    4. '   ' → logprob: -12.951423645019531
    5. '	c' → logprob: -13.326423645019531
    6. ' ' → logprob: -14.826423645019531
    7. ')' → logprob: -14.951423645019531
    8. '    ' → logprob: -15.201423645019531
    9. ',c' → logprob: -15.701423645019531
    10. '  ' → logprob: -15.951423645019531

Token 39: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42906779050827026
    2. ',' → logprob: -1.054067850112915
    3. ')' → logprob: -8.429067611694336
    4. ' ):' → logprob: -10.304067611694336
    5. ' ,' → logprob: -10.429067611694336
    6. '   ' → logprob: -10.429067611694336
    7. ':' → logprob: -10.429067611694336
    8. '):
' → logprob: -11.929067611694336
    9. '       ' → logprob: -12.429067611694336
    10. ' ' → logprob: -12.554067611694336

Token 40: ' current' (ID: 2208)
  Prédit: ' path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.7952260375022888
    2. ' visited' → logprob: -1.2952260971069336
    3. ' number' → logprob: -2.1702260971069336
    4. ' current' → logprob: -2.5452260971069336
    5. 'visited' → logprob: -3.9202260971069336
    6. ' num' → logprob: -4.295226097106934
    7. ' value' → logprob: -4.795226097106934
    8. ' matrix' → logprob: -4.920226097106934
    9. 'path' → logprob: -5.170226097106934
    10. ' ' → logprob: -5.420226097106934

Token 41: '_num' (ID: 9834)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0765228420495987
    2. '_num' → logprob: -3.2015228271484375
    3. '_value' → logprob: -3.8265228271484375
    4. '_' → logprob: -5.0765228271484375
    5. '):' → logprob: -6.2015228271484375
    6. '_val' → logprob: -7.3265228271484375
    7. '_sum' → logprob: -7.8265228271484375
    8. '_token' → logprob: -7.9515228271484375
    9. '_str' → logprob: -7.9515228271484375
    10. '_string' → logprob: -8.076522827148438

Token 42: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08833181113004684
    2. ',' → logprob: -3.088331699371338
    3. 'ber' → logprob: -3.338331699371338
    4. ')' → logprob: -6.713331699371338
    5. 'er' → logprob: -7.088331699371338
    6. '):
' → logprob: -7.463331699371338
    7. '=' → logprob: -8.338332176208496
    8. ':' → logprob: -8.588332176208496
    9. '):
' → logprob: -9.338332176208496
    10. '+' → logprob: -9.963332176208496

Token 43: '       ' (ID: 309)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22623887658119202
    2. ':' → logprob: -1.7262388467788696
    3. '       ' → logprob: -4.22623872756958
    4. ',' → logprob: -5.10123872756958
    5. '   ' → logprob: -6.47623872756958
    6. ')' → logprob: -7.10123872756958
    7. '<|end|>' → logprob: -7.47623872756958
    8. '#:' → logprob: -8.601239204406738
    9. ' :' → logprob: -8.601239204406738
    10. '():' → logprob: -9.476239204406738

Token 44: ' non' (ID: 2893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.269888699054718
    2. '):' → logprob: -2.2698886394500732
    3. '<|end|>' → logprob: -3.1448886394500732
    4. ' if' → logprob: -3.7698886394500732
    5. '   ' → logprob: -3.8948886394500732
    6. ' ' → logprob: -4.644888877868652
    7. ',' → logprob: -4.644888877868652
    8. ' :' → logprob: -4.769888877868652
    9. ')' → logprob: -4.769888877868652
    10. 'if' → logprob: -6.144888877868652

Token 45: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.38653886318206787
    2. '   ' → logprob: -1.8865388631820679
    3. ')' → logprob: -2.6365389823913574
    4. ' =' → logprob: -4.261538982391357
    5. ' )' → logprob: -4.511538982391357
    6. 'e' → logprob: -4.511538982391357
    7. '_' → logprob: -4.636538982391357
    8. '       ' → logprob: -4.886538982391357
    9. ' ' → logprob: -4.886538982391357
    10. 'space' → logprob: -5.136538982391357

Token 46: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.04088522493839264
    2. 'max' → logprob: -3.7908852100372314
    3. ' matrix' → logprob: -4.1658854484558105
    4. ' ' → logprob: -7.4158854484558105
    5. 'matrix' → logprob: -7.4158854484558105
    6. ' W' → logprob: -7.9158854484558105
    7. ' current' → logprob: -9.290884971618652
    8. 'W' → logprob: -9.540884971618652
    9. '    ' → logprob: -10.415884971618652
    10. '   ' → logprob: -10.540884971618652

Token 47: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.00048596507986076176
    2. '_' → logprob: -7.750485897064209
    3. 'umber' → logprob: -10.500486373901367
    4. 'ber' → logprob: -11.000486373901367
    5. '_num' → logprob: -12.500486373901367
    6. ' _' → logprob: -13.250486373901367
    7. 'number' → logprob: -13.500486373901367
    8. '_token' → logprob: -13.625486373901367
    9. '_numbers' → logprob: -14.500486373901367
    10. '_NUMBER' → logprob: -15.000486373901367

Token 48: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8770015835762024
    2. '):' → logprob: -0.8770015835762024
    3. ')' → logprob: -2.6270015239715576
    4. ',' → logprob: -2.8770015239715576
    5. '       ' → logprob: -4.002001762390137
    6. '):
' → logprob: -4.752001762390137
    7. '
' → logprob: -5.627001762390137
    8. '<|end|>' → logprob: -6.002001762390137
    9. '   ' → logprob: -6.127001762390137
    10. ':
' → logprob: -6.627001762390137

Token 49: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2336670607328415
    2. '):' → logprob: -2.4836671352386475
    3. '   ' → logprob: -2.9836671352386475
    4. ',' → logprob: -3.9836671352386475
    5. '       ' → logprob: -4.233666896820068
    6. '
' → logprob: -4.483666896820068
    7. ':
' → logprob: -4.608666896820068
    8. ')' → logprob: -4.858666896820068
    9. '):
' → logprob: -5.483666896820068
    10. '<|end|>' → logprob: -5.858666896820068

Token 50: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8984304666519165
    2. '   ' → logprob: -1.5234304666519165
    3. ' if' → logprob: -2.773430347442627
    4. '
' → logprob: -2.898430347442627
    5. 'if' (adapté à ' if') → logprob: -2.898430347442627
    6. ',' → logprob: -3.523430347442627
    7. ' ' → logprob: -3.648430347442627
    8. ':' → logprob: -3.773430347442627
    9. '<|end|>' → logprob: -3.773430347442627
    10. ')' → logprob: -3.898430347442627

Token 51: ' not' (ID: 625)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.0677490234375
    2. ' ' → logprob: -3.8177490234375
    3. 'r' → logprob: -3.9427490234375
    4. ' not' → logprob: -4.1927490234375
    5. ' matrix' → logprob: -5.1927490234375
    6. ' W' → logprob: -6.4427490234375
    7. '0' → logprob: -6.9427490234375
    8. 'matrix' → logprob: -8.3177490234375
    9. ' c' → logprob: -8.8177490234375
    10. 'W' → logprob: -9.1927490234375

Token 52: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2521529197692871
    2. '(' → logprob: -1.502152919769287
    3. ' ' → logprob: -9.252153396606445
    4. '0' → logprob: -9.627153396606445
    5. ' (
' → logprob: -10.627153396606445
    6. '(
' → logprob: -11.002153396606445
    7. ')' → logprob: -13.252153396606445
    8. '(r' → logprob: -13.314653396606445
    9. ' W' → logprob: -13.439653396606445
    10. ' ' → logprob: -13.502153396606445

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11650031805038452
    2. ' ' → logprob: -2.2415003776550293
    3. ' (' → logprob: -6.116500377655029
    4. '(' → logprob: -6.616500377655029
    5. ' r' → logprob: -10.491499900817871
    6. 'r' → logprob: -10.491499900817871
    7. '   ' → logprob: -10.741499900817871
    8. ')' → logprob: -10.866499900817871
    9. '  ' → logprob: -11.741499900817871
    10. ' ' → logprob: -11.991499900817871

Token 54: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.28121721744537354
    2. '<=' → logprob: -1.4062172174453735
    3. ')' → logprob: -10.531217575073242
    4. ' ' → logprob: -10.781217575073242
    5. '<' → logprob: -12.656217575073242
    6. '   ' → logprob: -12.781217575073242
    7. ' <' → logprob: -13.031217575073242
    8. ')<=' → logprob: -13.156217575073242
    9. '#' → logprob: -14.031217575073242
    10. '[' → logprob: -14.031217575073242

Token 55: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11283145844936371
    2. ' r' → logprob: -2.2378313541412354
    3. 'c' → logprob: -12.362831115722656
    4. '	r' → logprob: -13.237831115722656
    5. ' ' → logprob: -14.112831115722656
    6. ' c' → logprob: -14.112831115722656
    7. '_r' → logprob: -14.612831115722656
    8. '   ' → logprob: -15.237831115722656
    9. '```' → logprob: -15.800331115722656
    10. ' ' → logprob: -15.925331115722656

Token 56: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.47412657737731934
    2. '<' → logprob: -0.9741265773773193
    3. ' ' → logprob: -11.099126815795898
    4. ' and' → logprob: -11.599126815795898
    5. 'and' → logprob: -12.224126815795898
    6. '<|end|>' → logprob: -12.349126815795898
    7. ')' → logprob: -12.474126815795898
    8. '[' → logprob: -12.724126815795898
    9. ')<' → logprob: -13.224126815795898
    10. '<len' → logprob: -13.224126815795898

Token 57: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.20149919390678406
    2. ' H' → logprob: -1.7014992237091064
    3. ' ' → logprob: -9.951498985290527
    4. '   ' → logprob: -10.826498985290527
    5. 'W' → logprob: -11.951498985290527
    6. '	H' → logprob: -12.701498985290527
    7. ')' → logprob: -13.326498985290527
    8. ' W' → logprob: -13.326498985290527
    9. '  ' → logprob: -13.451498985290527
    10. ' ' → logprob: -13.951498985290527

Token 58: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1481822431087494
    2. ')' → logprob: -2.0231821537017822
    3. 'and' → logprob: -5.648182392120361
    4. ' )' → logprob: -6.273182392120361
    5. ' ' → logprob: -10.273181915283203
    6. '       ' → logprob: -11.273181915283203
    7. '):
' → logprob: -11.648181915283203
    8. '):' → logprob: -11.898181915283203
    9. '   ' → logprob: -12.023181915283203
    10. '):

' → logprob: -12.648181915283203

Token 59: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005517377518117428
    2. 'and' → logprob: -5.505517482757568
    3. ')' → logprob: -6.630517482757568
    4. '       ' → logprob: -9.75551700592041
    5. ' )' → logprob: -10.50551700592041
    6. ' ' → logprob: -10.63051700592041
    7. '        ' → logprob: -12.88051700592041
    8. '           ' → logprob: -13.75551700592041
    9. '<|end|>' → logprob: -13.88051700592041
    10. '   ' → logprob: -14.00551700592041

Token 60: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.10097301751375198
    2. 'not' → logprob: -2.350973129272461
    3. '       ' → logprob: -8.100973129272461
    4. '           ' → logprob: -9.100973129272461
    5. '        ' → logprob: -9.100973129272461
    6. 'matrix' → logprob: -9.850973129272461
    7. ' matrix' → logprob: -9.850973129272461
    8. '   ' → logprob: -10.600973129272461
    9. '         ' → logprob: -10.975973129272461
    10. ' ' → logprob: -11.100973129272461

Token 61: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3485248386859894
    2. '(' → logprob: -1.223524808883667
    3. '<|end|>' → logprob: -10.348525047302246
    4. ' ' → logprob: -10.473525047302246
    5. '0' → logprob: -11.723525047302246
    6. '   ' → logprob: -13.036025047302246
    7. '<|end|>' → logprob: -13.786025047302246
    8. '    ' → logprob: -13.786025047302246
    9. '  ' → logprob: -13.848525047302246
    10. '```' → logprob: -13.973525047302246

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025781244039535522
    2. 'W' → logprob: -3.9007811546325684
    3. ' ' → logprob: -5.525781154632568
    4. ' W' → logprob: -6.900781154632568
    5. '(' → logprob: -9.150781631469727
    6. '   ' → logprob: -10.150781631469727
    7. 'c' → logprob: -10.150781631469727
    8. ' (' → logprob: -11.150781631469727
    9. '  ' → logprob: -11.650781631469727
    10. ')' → logprob: -12.025781631469727

Token 63: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.00986587442457676
    2. '<=' → logprob: -4.634865760803223
    3. ' <' → logprob: -9.259865760803223
    4. '<' → logprob: -12.259865760803223
    5. ' ' → logprob: -12.759865760803223
    6. ')' → logprob: -13.134865760803223
    7. ' ≤' → logprob: -13.509865760803223
    8. 'and' → logprob: -14.509865760803223
    9. '+' → logprob: -14.634865760803223
    10. ' ' → logprob: -14.884865760803223

Token 64: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.15258784592151642
    2. ' c' → logprob: -2.027587890625
    3. 'W' → logprob: -4.902587890625
    4. ' W' → logprob: -6.277587890625
    5. '   ' → logprob: -8.027587890625
    6. ' ' → logprob: -8.902587890625
    7. '  ' → logprob: -10.402587890625
    8. 'w' → logprob: -11.027587890625
    9. ')c' → logprob: -11.152587890625
    10. '	c' → logprob: -11.277587890625

Token 65: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.023360896855592728
    2. '<' → logprob: -3.7733609676361084
    3. ' ' → logprob: -9.898361206054688
    4. '<H' → logprob: -10.523361206054688
    5. ')' → logprob: -11.023361206054688
    6. '<n' → logprob: -12.523361206054688
    7. '<len' → logprob: -12.773361206054688
    8. '<W' → logprob: -13.523361206054688
    9. '<size' → logprob: -13.648361206054688
    10. '<|end|>' → logprob: -13.648361206054688

Token 66: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0028965247329324484
    2. ' W' → logprob: -5.877896308898926
    3. ' ' → logprob: -10.377896308898926
    4. ')' → logprob: -10.502896308898926
    5. '   ' → logprob: -11.502896308898926
    6. 'len' → logprob: -12.002896308898926
    7. '  ' → logprob: -12.002896308898926
    8. '```' → logprob: -13.252896308898926
    9. '	W' → logprob: -13.252896308898926
    10. '
' → logprob: -14.377896308898926

Token 67: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14560426771640778
    2. '):' → logprob: -2.020604372024536
    3. ' )' → logprob: -6.395604133605957
    4. ' ):' → logprob: -7.520604133605957
    5. '):
' → logprob: -8.020604133605957
    6. ' and' → logprob: -8.645604133605957
    7. ':' → logprob: -9.645604133605957
    8. ' or' → logprob: -9.645604133605957
    9. '   ' → logprob: -10.270604133605957
    10. '       ' → logprob: -11.145604133605957

Token 68: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32322248816490173
    2. '       ' → logprob: -1.5732225179672241
    3. ' or' → logprob: -2.9482223987579346
    4. ':return' → logprob: -5.073222637176514
    5. ' :' → logprob: -5.698222637176514
    6. '):' → logprob: -6.198222637176514
    7. ':
' → logprob: -6.448222637176514
    8. ')' → logprob: -6.823222637176514
    9. ' and' → logprob: -7.323222637176514
    10. '   ' → logprob: -7.698222637176514

Token 69: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08399081975221634
    2. ':return' → logprob: -3.2089908123016357
    3. ':
' → logprob: -4.208991050720215
    4. ' return' → logprob: -4.833991050720215
    5. ':' → logprob: -4.958991050720215
    6. '   ' → logprob: -5.708991050720215
    7. '           ' → logprob: -6.083991050720215
    8. '\n' → logprob: -6.333991050720215
    9. 'return' (adapté à ' return') → logprob: -6.583991050720215
    10. '\' → logprob: -8.208991050720215

Token 70: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3467921018600464
    2. '\' → logprob: -2.346792221069336
    3. '       ' → logprob: -2.721792221069336
    4. ' 
' → logprob: -3.221792221069336
    5. '
' → logprob: -3.596792221069336
    6. '   ' → logprob: -3.971792221069336
    7. ' ' → logprob: -4.346792221069336
    8. '    
' → logprob: -5.596792221069336
    9. '  
' → logprob: -5.721792221069336
    10. '\t' → logprob: -5.721792221069336

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13861842453479767
    2. '\n' → logprob: -3.0136184692382812
    3. '   ' → logprob: -3.5136184692382812
    4. '\' → logprob: -4.263618469238281
    5. ' ' → logprob: -4.638618469238281
    6. '
' → logprob: -5.138618469238281
    7. '        
' → logprob: -6.013618469238281
    8. ''' → logprob: -6.013618469238281
    9. ' 
' → logprob: -6.138618469238281
    10. '    
' → logprob: -6.138618469238281

Token 72: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6620074510574341
    2. ':' → logprob: -1.162007451057434
    3. ')' → logprob: -2.9120073318481445
    4. ',' → logprob: -3.7870073318481445
    5. '<|end|>' → logprob: -3.9120073318481445
    6. '   ' → logprob: -4.2870073318481445
    7. ' :' → logprob: -4.2870073318481445
    8. ' if' → logprob: -4.4120073318481445
    9. '\' → logprob: -5.2870073318481445
    10. '.' → logprob: -5.4120073318481445

Token 73: ' not' (ID: 625)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.47739461064338684
    2. 'matrix' → logprob: -0.9773945808410645
    3. ' not' → logprob: -5.8523945808410645
    4. ' ' → logprob: -9.102395057678223
    5. '	matrix' → logprob: -9.352395057678223
    6. 'not' → logprob: -9.852395057678223
    7. '(matrix' → logprob: -10.102395057678223
    8. '   ' → logprob: -10.227395057678223
    9. 'mat' → logprob: -10.727395057678223
    10. ' current' → logprob: -11.039895057678223

Token 74: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.1671435385942459
    2. 'matrix' → logprob: -2.1671435832977295
    3. ' isinstance' → logprob: -3.4171435832977295
    4. ' (' → logprob: -5.91714334487915
    5. '(matrix' → logprob: -6.04214334487915
    6. ' str' → logprob: -7.41714334487915
    7. ' ' → logprob: -8.167143821716309
    8. '(' → logprob: -8.542143821716309
    9. '	matrix' → logprob: -9.542143821716309
    10. 'str' → logprob: -9.542143821716309

Token 75: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -9.13388703338569e-06
    2. '[' → logprob: -12.125009536743164
    3. 'r' → logprob: -13.125009536743164
    4. '[c' → logprob: -14.625009536743164
    5. '[row' → logprob: -15.375009536743164
    6. '[
' → logprob: -15.625009536743164
    7. '```' → logprob: -15.750009536743164
    8. '[s' → logprob: -16.625009536743164
    9. '[m' → logprob: -17.000009536743164
    10. '[i' → logprob: -17.000009536743164

Token 76: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12775221467018127
    2. '[c' → logprob: -2.1277523040771484
    3. '[' → logprob: -7.752752304077148
    4. ' ][' → logprob: -8.627752304077148
    5. '[r' → logprob: -9.002752304077148
    6. ']' → logprob: -11.002752304077148
    7. '```' → logprob: -11.502752304077148
    8. '[row' → logprob: -11.877752304077148
    9. '}[' → logprob: -12.127752304077148
    10. ')[' → logprob: -12.127752304077148

Token 77: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.630610641877865e-06
    2. ' c' → logprob: -12.125006675720215
    3. ')c' → logprob: -14.375006675720215
    4. '[c' → logprob: -15.750006675720215
    5. '   ' → logprob: -16.2500057220459
    6. ' ' → logprob: -16.3750057220459
    7. '][' → logprob: -17.0000057220459
    8. '	c' → logprob: -17.6250057220459
    9. '  ' → logprob: -18.2500057220459
    10. '    ' → logprob: -18.8750057220459

Token 78: '].' (ID: 1651)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.7207515239715576
    2. '):' → logprob: -1.4707515239715576
    3. 'isdigit' → logprob: -2.0957515239715576
    4. '].' → logprob: -2.8457515239715576
    5. ']:' → logprob: -2.8457515239715576
    6. ']' → logprob: -4.220751762390137
    7. ').' → logprob: -4.595751762390137
    8. ')' → logprob: -4.845751762390137
    9. ':' → logprob: -5.220751762390137
    10. '[' → logprob: -7.220751762390137

Token 79: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -0.0010567454155534506
    2. 'is' → logprob: -7.001056671142578
    3. 'isal' → logprob: -8.876056671142578
    4. 'strip' → logprob: -13.126056671142578
    5. 'startswith' → logprob: -13.376056671142578
    6. 'isas' → logprob: -14.626056671142578
    7. '.is' → logprob: -15.001056671142578
    8. 'isl' → logprob: -15.001056671142578
    9. 'digit' → logprob: -15.251056671142578
    10. ' is' → logprob: -15.376056671142578

Token 80: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.1807897537946701
    2. '()' → logprob: -1.8057897090911865
    3. '(' → logprob: -7.180789947509766
    4. '():
' → logprob: -8.430789947509766
    5. '()>' → logprob: -11.430789947509766
    6. '()==' → logprob: -11.555789947509766
    7. '():

' → logprob: -11.930789947509766
    8. ':' → logprob: -12.180789947509766
    9. ' ():' → logprob: -12.430789947509766
    10. '()(' → logprob: -12.430789947509766

Token 81: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004408990498632193
    2. '           ' → logprob: -5.754408836364746
    3. ' return' → logprob: -7.504408836364746
    4. '   ' → logprob: -8.629408836364746
    5. 'return' → logprob: -9.504408836364746
    6. ',' → logprob: -9.879408836364746
    7. '<|end|>' → logprob: -9.879408836364746
    8. '        ' → logprob: -10.004408836364746
    9. ':return' → logprob: -10.254408836364746
    10. ' ' → logprob: -10.254408836364746

Token 82: ' return' (ID: 622)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.5178175568580627
    2. ' return' → logprob: -1.892817497253418
    3. ':return' → logprob: -3.142817497253418
    4. '       ' → logprob: -3.267817497253418
    5. 'return' (adapté à ' return') → logprob: -3.267817497253418
    6. '\' → logprob: -3.392817497253418
    7. '\n' → logprob: -3.642817497253418
    8. ' ' → logprob: -3.767817497253418
    9. '    ' → logprob: -4.392817497253418
    10. '     
' → logprob: -4.642817497253418

Token 83: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5025855302810669
    2. '\' → logprob: -1.627585530281067
    3. ',' → logprob: -2.8775854110717773
    4. '\n' → logprob: -3.5025854110717773
    5. ')' → logprob: -4.127585411071777
    6. ' 
' → logprob: -4.252585411071777
    7. ' ' → logprob: -4.377585411071777
    8. '#' → logprob: -4.502585411071777
    9. '        
' → logprob: -4.752585411071777
    10. '<|end|>' → logprob: -4.752585411071777

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14011724293231964
    2. '\' → logprob: -3.2651171684265137
    3. '\n' → logprob: -3.6401171684265137
    4. '<|end|>' → logprob: -3.8901171684265137
    5. ' 
' → logprob: -4.265117168426514
    6. '        
' → logprob: -4.390117168426514
    7. ',' → logprob: -5.015117168426514
    8. ' ' → logprob: -6.390117168426514
    9. '\r' → logprob: -6.890117168426514
    10. '  
' → logprob: -6.890117168426514

Token 85: ' new' (ID: 620)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -1.4790644645690918
    2. '       ' → logprob: -1.7290644645690918
    3. ' current' → logprob: -1.7290644645690918
    4. ' if' → logprob: -1.9790644645690918
    5. 'current' → logprob: -2.479064464569092
    6. ' number' → logprob: -3.854064464569092
    7. '        
' → logprob: -3.979064464569092
    8. 'd' → logprob: -4.229064464569092
    9. 'n' → logprob: -4.354064464569092
    10. '
' → logprob: -4.354064464569092

Token 86: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0066280970349907875
    2. '_' → logprob: -5.506628036499023
    3. '_number' → logprob: -6.131628036499023
    4. '_n' → logprob: -8.131628036499023
    5. ' _' → logprob: -10.506628036499023
    6. '_val' → logprob: -11.131628036499023
    7. '_digit' → logprob: -11.881628036499023
    8. '_token' → logprob: -12.006628036499023
    9. '_value' → logprob: -12.131628036499023
    10. 'num' → logprob: -12.506628036499023

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04316463693976402
    2. '=' → logprob: -3.1681647300720215
    3. ' ' → logprob: -8.793164253234863
    4. ' +=' → logprob: -11.918164253234863
    5. 's' → logprob: -12.293164253234863
    6. '_' → logprob: -13.918164253234863
    7. ')' → logprob: -14.918164253234863
    8. '=int' → logprob: -14.918164253234863
    9. ' ' → logprob: -15.418164253234863
    10. ' *=' → logprob: -15.668164253234863

Token 88: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5777652859687805
    2. 'current' → logprob: -0.8277652859687805
    3. 'int' → logprob: -6.452765464782715
    4. ' int' → logprob: -8.327765464782715
    5. '10' → logprob: -13.077765464782715
    6. '(current' → logprob: -13.452765464782715
    7. '   ' → logprob: -13.827765464782715
    8. ' ' → logprob: -14.202765464782715
    9. 'str' → logprob: -15.452765464782715
    10. 'urrent' → logprob: -15.452765464782715

Token 89: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00041017719195224345
    2. '_' → logprob: -8.125410079956055
    3. '_n' → logprob: -9.125410079956055
    4. 'num' → logprob: -13.000410079956055
    5. '_number' → logprob: -14.125410079956055
    6. ' _' → logprob: -14.375410079956055
    7. '+' → logprob: -14.875410079956055
    8. '_str' → logprob: -15.375410079956055
    9. '```' → logprob: -15.500410079956055
    10. '_nums' → logprob: -15.750410079956055

Token 90: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.023248042911291122
    2. '*' → logprob: -3.7732479572296143
    3. ' ' → logprob: -13.398247718811035
    4. ' +' → logprob: -14.273247718811035
    5. '+' → logprob: -15.273247718811035
    6. 's' → logprob: -15.773247718811035
    7. ' ' → logprob: -17.52324867248535
    8. ')' → logprob: -18.14824867248535
    9. '*object' → logprob: -18.52324867248535
    10. ' =' → logprob: -18.77324867248535

Token 91: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.02975454181432724
    2. ' matrix' → logprob: -3.529754638671875
    3. '	matrix' → logprob: -13.279754638671875
    4. 'int' → logprob: -13.529754638671875
    5. ' ' → logprob: -14.779754638671875
    6. 'mat' → logprob: -15.529754638671875
    7. '(matrix' → logprob: -15.529754638671875
    8. 'atrix' → logprob: -16.029754638671875
    9. 'm' → logprob: -16.654754638671875
    10. '   ' → logprob: -16.779754638671875

Token 92: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -13.125003814697266
    3. 'r' → logprob: -14.375003814697266
    4. '[row' → logprob: -15.125003814697266
    5. '[
' → logprob: -15.500003814697266
    6. '\[' → logprob: -16.500003814697266
    7. '```' → logprob: -16.500003814697266
    8. '[c' → logprob: -17.000003814697266
    9. ' [' → logprob: -17.500003814697266
    10. '	r' → logprob: -17.750003814697266

Token 93: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14663057029247284
    2. '[c' → logprob: -2.0216305255889893
    3. '[r' → logprob: -5.771630764007568
    4. '[' → logprob: -7.896630764007568
    5. 'c' → logprob: -8.89663028717041
    6. ']' → logprob: -9.52163028717041
    7. '[row' → logprob: -9.64663028717041
    8. ' ][' → logprob: -10.39663028717041
    9. '[col' → logprob: -10.89663028717041
    10. ''][' → logprob: -11.14663028717041

Token 94: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.652451464906335e-05
    2. '[c' → logprob: -12.375016212463379
    3. ' c' → logprob: -12.625016212463379
    4. '<|end|>' → logprob: -12.875016212463379
    5. '][' → logprob: -13.000016212463379
    6. ']' → logprob: -13.750016212463379
    7. '[' → logprob: -14.000016212463379
    8. ' ' → logprob: -14.625016212463379
    9. '```' → logprob: -14.625016212463379
    10. '   ' → logprob: -15.250016212463379

Token 95: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01674935407936573
    2. '<|end|>' → logprob: -4.516749382019043
    3. '')' → logprob: -6.266749382019043
    4. ']' → logprob: -6.391749382019043
    5. '       ' → logprob: -7.016749382019043
    6. '<|end|>' → logprob: -7.641749382019043
    7. '']' → logprob: -8.391749382019043
    8. '")' → logprob: -9.141749382019043
    9. '[' → logprob: -9.516749382019043
    10. ')]' → logprob: -9.641749382019043

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03095460683107376
    2. '
' → logprob: -3.780954599380493
    3. ',' → logprob: -6.405954837799072
    4. '<|end|>' → logprob: -6.405954837799072
    5. '\n' → logprob: -6.655954837799072
    6. '        
' → logprob: -6.780954837799072
    7. ' 
' → logprob: -7.530954837799072
    8. '   ' → logprob: -8.155954360961914
    9. ')' → logprob: -8.530954360961914
    10. ' ' → logprob: -8.530954360961914

Token 97: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8823193311691284
    2. ' max' → logprob: -1.0073193311691284
    3. '       ' → logprob: -1.8823193311691284
    4. 'max' → logprob: -2.882319450378418
    5. 'if' → logprob: -5.382319450378418
    6. ' for' → logprob: -5.382319450378418
    7. '   ' → logprob: -6.257319450378418
    8. '
' → logprob: -7.882319450378418
    9. 'for' → logprob: -8.382319450378418
    10. '        
' → logprob: -8.382319450378418

Token 98: ' Update' (ID: 9152)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.104825735092163
    2. ' max' → logprob: -1.104825735092163
    3. 'max' → logprob: -1.854825735092163
    4. 'if' → logprob: -2.229825735092163
    5. ' for' → logprob: -3.354825735092163
    6. '       ' → logprob: -3.729825735092163
    7. 'for' → logprob: -4.729825973510742
    8. '   ' → logprob: -5.979825973510742
    9. '#' → logprob: -6.729825973510742
    10. ' #' → logprob: -7.354825973510742

Token 99: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.03889574483036995
    2. 'max' → logprob: -3.538895845413208
    3. ' if' → logprob: -4.913895606994629
    4. ' ' → logprob: -7.538895606994629
    5. '       ' → logprob: -7.663895606994629
    6. '   ' → logprob: -8.288895606994629
    7. '_max' → logprob: -8.413895606994629
    8. ' the' → logprob: -9.788895606994629
    9. ' _' → logprob: -9.788895606994629
    10. 'if' → logprob: -10.038895606994629

Token 100: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.0021939214784651995
    2. '_' → logprob: -6.127193927764893
    3. '_num' → logprob: -12.752193450927734
    4. ' _' → logprob: -13.002193450927734
    5. '_n' → logprob: -13.627193450927734
    6. '_numbers' → logprob: -14.377193450927734
    7. 'number' → logprob: -15.377193450927734
    8. '_NUMBER' → logprob: -15.502193450927734
    9. 'Number' → logprob: -15.627193450927734
    10. '```' → logprob: -15.627193450927734

Token 101: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007489496376365423
    2. ' if' → logprob: -5.8824896812438965
    3. '
' → logprob: -6.2574896812438965
    4. ' =' → logprob: -7.0074896812438965
    5. '   ' → logprob: -7.7574896812438965
    6. ',' → logprob: -8.132489204406738
    7. '<|end|>' → logprob: -8.257489204406738
    8. '\n' → logprob: -8.382489204406738
    9. '=' → logprob: -8.507489204406738
    10. '        
' → logprob: -9.507489204406738

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018415171653032303
    2. '   ' → logprob: -5.0184149742126465
    3. ' if' → logprob: -5.3934149742126465
    4. '
' → logprob: -5.6434149742126465
    5. ' =' → logprob: -7.0184149742126465
    6. '<|end|>' → logprob: -7.5184149742126465
    7. '=' → logprob: -7.7684149742126465
    8. ',' → logprob: -8.143415451049805
    9. '           ' → logprob: -8.268415451049805
    10. '\n' → logprob: -8.518415451049805

Token 103: ' new' (ID: 620)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.678966224193573
    2. 'if' → logprob: -0.928966224193573
    3. 'max' → logprob: -2.9289662837982178
    4. '       ' → logprob: -3.3039662837982178
    5. '   ' → logprob: -6.178966045379639
    6. ' max' → logprob: -6.178966045379639
    7. '=' → logprob: -6.428966045379639
    8. ' =' → logprob: -7.428966045379639
    9. '
' → logprob: -7.803966045379639
    10. '           ' → logprob: -7.803966045379639

Token 104: '_num' (ID: 9834)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.05258846655488014
    2. '_num' → logprob: -3.05258846282959
    3. '_token' → logprob: -5.67758846282959
    4. '_' → logprob: -7.67758846282959
    5. '_tokens' → logprob: -10.55258846282959
    6. ' _' → logprob: -10.92758846282959
    7. '_n' → logprob: -11.17758846282959
    8. '_numbers' → logprob: -11.55258846282959
    9. 'umber' → logprob: -12.42758846282959
    10. '_code' → logprob: -12.55258846282959

Token 105: '_val' (ID: 13694)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.19430501759052277
    2. '=' → logprob: -2.319304943084717
    3. ' =' → logprob: -3.319304943084717
    4. 'int' → logprob: -3.569304943084717
    5. '_num' → logprob: -5.444304943084717
    6. '_val' → logprob: -5.819304943084717
    7. '_value' → logprob: -5.944304943084717
    8. '>' → logprob: -6.444304943084717
    9. '=int' → logprob: -7.444304943084717
    10. ')' → logprob: -7.444304943084717

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024820810649544
    2. '=' → logprob: -6.002481937408447
    3. ' ' → logprob: -12.127482414245605
    4. ')' → logprob: -15.127482414245605
    5. '   ' → logprob: -15.377482414245605
    6. '=int' → logprob: -15.627482414245605
    7. ' ' → logprob: -17.00248146057129
    8. '  ' → logprob: -17.00248146057129
    9. ',' → logprob: -17.25248146057129
    10. 's' → logprob: -17.87748146057129

Token 107: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31326204538345337
    2. ' int' → logprob: -1.3132619857788086
    3. '(int' → logprob: -16.063262939453125
    4. '=int' → logprob: -16.813262939453125
    5. '[int' → logprob: -17.313262939453125
    6. '	int' → logprob: -17.563262939453125
    7. '<int' → logprob: -17.688262939453125
    8. '```' → logprob: -18.813262939453125
    9. ']int' → logprob: -19.063262939453125
    10. ':int' → logprob: -19.438262939453125

Token 108: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0040818434208631516
    2. '(' → logprob: -5.504081726074219
    3. ')new' → logprob: -12.879081726074219
    4. 'new' → logprob: -14.129081726074219
    5. '$new' → logprob: -16.87908172607422
    6. '(
' → logprob: -16.87908172607422
    7. ' new' → logprob: -17.37908172607422
    8. ' (' → logprob: -17.62908172607422
    9. '(n' → logprob: -17.75408172607422
    10. '```' → logprob: -18.00408172607422

Token 109: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -4.727905979962088e-05
    2. '_' → logprob: -10.50004768371582
    3. 'num' → logprob: -11.37504768371582
    4. '_token' → logprob: -13.12504768371582
    5. '_nums' → logprob: -13.37504768371582
    6. '_number' → logprob: -13.75004768371582
    7. ')' → logprob: -14.50004768371582
    8. 'w' → logprob: -14.50004768371582
    9. 'Num' → logprob: -15.00004768371582
    10. 'm' → logprob: -15.00004768371582

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011527213267982006
    2. ')
' → logprob: -4.511527061462402
    3. '       ' → logprob: -7.761527061462402
    4. ' )' → logprob: -10.261527061462402
    5. ')
' → logprob: -12.011527061462402
    6. ')

' → logprob: -12.636527061462402
    7. '   ' → logprob: -12.886527061462402
    8. ' ' → logprob: -13.261527061462402
    9. ' )
' → logprob: -13.386527061462402
    10. ',' → logprob: -13.636527061462402

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8312943577766418
    2. '\n' → logprob: -1.206294298171997
    3. '
' → logprob: -2.206294298171997
    4. '<|end|>' → logprob: -2.206294298171997
    5. ')' → logprob: -3.956294298171997
    6. ',' → logprob: -4.956294536590576
    7. '   ' → logprob: -5.706294536590576
    8. '<|end|>' → logprob: -5.831294536590576
    9. '\' → logprob: -6.081294536590576
    10. ' 
' → logprob: -6.081294536590576

Token 112: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05824452266097069
    2. ' if' → logprob: -3.058244466781616
    3. 'if' (adapté à ' if') → logprob: -5.433244705200195
    4. '<|end|>' → logprob: -5.433244705200195
    5. ')' → logprob: -8.058244705200195
    6. '
' → logprob: -8.683244705200195
    7. ',' → logprob: -8.683244705200195
    8. '   ' → logprob: -9.433244705200195
    9. '<|end|>' → logprob: -9.558244705200195
    10. '	if' → logprob: -10.683244705200195

Token 113: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.0006267757853493094
    2. 'new' → logprob: -7.375626564025879
    3. '	new' → logprob: -16.375627517700195
    4. '(new' → logprob: -17.000627517700195
    5. ' max' → logprob: -17.000627517700195
    6. '_new' → logprob: -17.500627517700195
    7. '    ' → logprob: -17.875627517700195
    8. ' ' → logprob: -18.250627517700195
    9. ' current' → logprob: -18.250627517700195
    10. ')new' → logprob: -18.375627517700195

Token 114: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -2.927930654550437e-05
    2. 'num' → logprob: -11.250029563903809
    3. 'ew' → logprob: -12.000029563903809
    4. 'w' → logprob: -12.875029563903809
    5. '_' → logprob: -13.125029563903809
    6. 'um' → logprob: -13.250029563903809
    7. '_number' → logprob: -13.875029563903809
    8. '_val' → logprob: -14.000029563903809
    9. 'm' → logprob: -14.125029563903809
    10. 'umber' → logprob: -14.875029563903809

Token 115: '_val' (ID: 13694)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6592468023300171
    2. '_val' → logprob: -0.7842468023300171
    3. '>' → logprob: -3.7842469215393066
    4. ' ' → logprob: -5.784246921539307
    5. '_' → logprob: -8.534246444702148
    6. ' _' → logprob: -9.159246444702148
    7. 'Val' → logprob: -9.659246444702148
    8. 'val' → logprob: -9.784246444702148
    9. '   ' → logprob: -10.784246444702148
    10. '  ' → logprob: -11.659246444702148

Token 116: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.001288332510739565
    2. '>' → logprob: -6.751288414001465
    3. ' ' → logprob: -9.251288414001465
    4. ' >=' → logprob: -10.876288414001465
    5. ' <=' → logprob: -13.876288414001465
    6. ' ' → logprob: -14.626288414001465
    7. '   ' → logprob: -14.626288414001465
    8. '<|end|>' → logprob: -14.626288414001465
    9. '  ' → logprob: -15.376288414001465
    10. ' >

' → logprob: -16.12628746032715

Token 117: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.018150178715586662
    2. 'max' → logprob: -4.018150329589844
    3. '(max' → logprob: -16.393150329589844
    4. '	max' → logprob: -16.518150329589844
    5. '=max' → logprob: -17.643150329589844
    6. ' ' → logprob: -18.143150329589844
    7. '[max' → logprob: -18.268150329589844
    8. ' maximum' → logprob: -18.768150329589844
    9. '_max' → logprob: -18.893150329589844
    10. ',max' → logprob: -19.018150329589844

Token 118: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -2.1008713702030946e-06
    2. '_' → logprob: -14.000001907348633
    3. 'umber' → logprob: -14.125001907348633
    4. ' _' → logprob: -15.250001907348633
    5. 'number' → logprob: -16.000001907348633
    6. '_num' → logprob: -16.375001907348633
    7. '_NUMBER' → logprob: -17.500001907348633
    8. '_value' → logprob: -17.750001907348633
    9. '_numbers' → logprob: -18.750001907348633
    10. ' ' → logprob: -19.000001907348633

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008789468556642532
    2. ':
' → logprob: -4.758789539337158
    3. '):' → logprob: -9.5087890625
    4. '       ' → logprob: -9.8837890625
    5. '):
' → logprob: -10.8837890625
    6. ',' → logprob: -11.5087890625
    7. ' and' → logprob: -11.8837890625
    8. ' :' → logprob: -12.5087890625
    9. '   ' → logprob: -12.8837890625
    10. '           ' → logprob: -13.3837890625

Token 120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047898534685373306
    2. ' max' → logprob: -4.297898769378662
    3. '
' → logprob: -4.672898769378662
    4. '       ' → logprob: -5.172898769378662
    5. '(max' → logprob: -5.547898769378662
    6. '<|end|>' → logprob: -5.547898769378662
    7. 'max' → logprob: -5.922898769378662
    8. ':' → logprob: -6.297898769378662
    9. ',' → logprob: -6.797898769378662
    10. ':
' → logprob: -7.047898769378662

Token 121: ' max' (ID: 2999)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4853493571281433
    2. '               ' → logprob: -1.110349416732788
    3. ' max' → logprob: -2.985349416732788
    4. 'max' (adapté à ' max') → logprob: -5.860349178314209
    5. '
' → logprob: -6.610349178314209
    6. '       ' → logprob: -8.860349655151367
    7. ' 
' → logprob: -9.360349655151367
    8. ' ' → logprob: -11.110349655151367
    9. '[max' → logprob: -11.110349655151367
    10. '                   ' → logprob: -11.235349655151367

Token 122: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.002837918931618333
    2. 'umber' → logprob: -5.877838134765625
    3. '_' → logprob: -10.877838134765625
    4. ' _' → logprob: -11.877838134765625
    5. '_num' → logprob: -12.877838134765625
    6. '_token' → logprob: -13.752838134765625
    7. '_NUMBER' → logprob: -14.127838134765625
    8. '_numbers' → logprob: -14.252838134765625
    9. 'umbers' → logprob: -14.627838134765625
    10. 'number' → logprob: -15.252838134765625

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03364938497543335
    2. '=' → logprob: -3.408649444580078
    3. ' ' → logprob: -12.783649444580078
    4. ' =
' → logprob: -14.908649444580078
    5. ' =
' → logprob: -16.533649444580078
    6. '<|end|>' → logprob: -16.533649444580078
    7. '_' → logprob: -16.783649444580078
    8. ' =)' → logprob: -17.158649444580078
    9. '＝' → logprob: -17.283649444580078
    10. '=max' → logprob: -17.783649444580078

Token 124: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.029751067981123924
    2. 'new' → logprob: -3.5297510623931885
    3. ' ' → logprob: -14.90475082397461
    4. '_new' → logprob: -15.77975082397461
    5. '	new' → logprob: -16.77975082397461
    6. 'n' → logprob: -17.65475082397461
    7. 'New' → logprob: -18.27975082397461
    8. '[new' → logprob: -18.52975082397461
    9. '$new' → logprob: -18.77975082397461
    10. 'newline' → logprob: -19.02975082397461

Token 125: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0011655801208689809
    2. '_' → logprob: -7.501165390014648
    3. '_val' → logprob: -8.001165390014648
    4. 'w' → logprob: -9.126165390014648
    5. 'u' → logprob: -10.251165390014648
    6. 'um' → logprob: -10.626165390014648
    7. 'umber' → logprob: -10.751165390014648
    8. ' _' → logprob: -11.126165390014648
    9. 'num' → logprob: -11.251165390014648
    10. 'm' → logprob: -11.251165390014648

Token 126: '_val' (ID: 13694)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15087299048900604
    2. '       ' → logprob: -2.0258729457855225
    3. '
' → logprob: -5.900873184204102
    4. '        
' → logprob: -6.025873184204102
    5. '' → logprob: -6.650873184204102
    6. '   ' → logprob: -7.900873184204102
    7. '    
' → logprob: -8.150873184204102
    8. ' 
' → logprob: -8.775873184204102
    9. '<|end|>' → logprob: -8.775873184204102
    10. '  
' → logprob: -9.400873184204102

Token 127: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46272143721580505
    2. '
' → logprob: -1.0877214670181274
    3. '<|end|>' → logprob: -3.712721347808838
    4. '        
' → logprob: -5.587721347808838
    5. ',' → logprob: -6.587721347808838
    6. '    
' → logprob: -6.837721347808838
    7. '   ' → logprob: -7.587721347808838
    8. '\n' → logprob: -7.712721347808838
    9. ' return' → logprob: -7.962721347808838
    10. '  
' → logprob: -7.962721347808838

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08889834582805634
    2. '
' → logprob: -2.5888984203338623
    3. '<|end|>' → logprob: -5.588898181915283
    4. '        
' → logprob: -6.338898181915283
    5. ' return' → logprob: -6.713898181915283
    6. ',' → logprob: -6.838898181915283
    7. '   ' → logprob: -7.338898181915283
    8. ' 
' → logprob: -7.963898181915283
    9. '    
' → logprob: -8.338898658752441
    10. 'return' → logprob: -8.463898658752441

Token 129: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21106958389282227
    2. 'for' → logprob: -2.0860695838928223
    3. ' for' → logprob: -3.8360695838928223
    4. 'matrix' → logprob: -4.336069583892822
    5. 'visited' → logprob: -4.461069583892822
    6. '        
' → logprob: -4.836069583892822
    7. '#' (adapté à ' #') → logprob: -5.086069583892822
    8. '   ' → logprob: -6.086069583892822
    9. 'if' → logprob: -6.836069583892822
    10. 'dire' → logprob: -7.211069583892822

Token 130: ' Next' (ID: 13886)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5095458030700684
    2. ' for' → logprob: -1.8845458030700684
    3. '#' → logprob: -2.0095458030700684
    4. 'dire' → logprob: -3.1345458030700684
    5. 'dfs' → logprob: -3.3845458030700684
    6. ' directions' → logprob: -4.009545803070068
    7. '       ' → logprob: -4.759545803070068
    8. ' dfs' → logprob: -6.384545803070068
    9. ' #' → logprob: -6.509545803070068
    10. 'return' → logprob: -6.634545803070068

Token 131: ' steps' (ID: 10331)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2505909204483032
    2. ' directions' → logprob: -1.2505909204483032
    3. '   ' → logprob: -1.6255909204483032
    4. '       ' → logprob: -2.2505908012390137
    5. ' moves' → logprob: -3.1255908012390137
    6. 'for' → logprob: -3.2505908012390137
    7. ' steps' → logprob: -4.250590801239014
    8. 'moves' → logprob: -4.375590801239014
    9. 'dire' → logprob: -5.125590801239014
    10. 'steps' → logprob: -6.125590801239014

Token 132: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5034040212631226
    2. '       ' → logprob: -1.0034040212631226
    3. '<|end|>' → logprob: -3.878404140472412
    4. '        
' → logprob: -5.503404140472412
    5. ',' → logprob: -6.878404140472412
    6. '   ' → logprob: -7.628404140472412
    7. '<|end|>' → logprob: -7.628404140472412
    8. ' 
' → logprob: -7.878404140472412
    9. '    
' → logprob: -7.878404140472412
    10. '  
' → logprob: -8.003403663635254

Token 133: ' right' (ID: 1849)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46170592308044434
    2. ' for' → logprob: -1.2117059230804443
    3. 'for' → logprob: -3.5867059230804443
    4. ' directions' → logprob: -4.211706161499023
    5. '        
' → logprob: -4.711706161499023
    6. '
' → logprob: -5.336706161499023
    7. 'dire' → logprob: -5.461706161499023
    8. '#' → logprob: -5.961706161499023
    9. 'dfs' → logprob: -6.211706161499023
    10. '   ' → logprob: -6.461706161499023

Token 134: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10374690592288971
    2. ',' → logprob: -2.4787468910217285
    3. ' and' → logprob: -5.1037468910217285
    4. 'dfs' → logprob: -5.3537468910217285
    5. '   ' → logprob: -6.8537468910217285
    6. ' ,' → logprob: -7.1037468910217285
    7. ' or' → logprob: -7.6037468910217285
    8. ' dfs' → logprob: -7.8537468910217285
    9. 'and' → logprob: -8.478747367858887
    10. 'r' → logprob: -8.853747367858887

Token 135: ' down' (ID: 1917)
  Prédit: ' down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' down' → logprob: -0.22572247684001923
    2. 'down' → logprob: -1.6007224321365356
    3. 'left' → logprob: -9.100722312927246
    4. '_down' → logprob: -9.475722312927246
    5. ' left' → logprob: -9.850722312927246
    6. ' ' → logprob: -11.475722312927246
    7. ' (' → logprob: -11.850722312927246
    8. 'r' → logprob: -11.975722312927246
    9. '1' → logprob: -12.350722312927246
    10. '.down' → logprob: -12.350722312927246

Token 136: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031793788075447083
    2. '
' → logprob: -6.378179550170898
    3. '        
' → logprob: -6.753179550170898
    4. ',' → logprob: -9.503179550170898
    5. '  
' → logprob: -10.003179550170898
    6. '   ' → logprob: -10.128179550170898
    7. 'dfs' → logprob: -10.503179550170898
    8. '    
' → logprob: -10.753179550170898
    9. '<|end|>' → logprob: -10.878179550170898
    10. '	' → logprob: -11.753179550170898

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08280878514051437
    2. '
' → logprob: -2.58280873298645
    3. '   ' → logprob: -6.957808971405029
    4. '        
' → logprob: -6.957808971405029
    5. '<|end|>' → logprob: -7.457808971405029
    6. '\n' → logprob: -7.582808971405029
    7. '    
' → logprob: -8.332808494567871
    8. ',' → logprob: -8.832808494567871
    9. '  
' → logprob: -8.832808494567871
    10. ' 
' → logprob: -9.707808494567871

Token 138: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4578617215156555
    2. 'dfs' → logprob: -1.4578616619110107
    3. ' dfs' → logprob: -2.5828616619110107
    4. '   ' → logprob: -2.9578616619110107
    5. ' if' → logprob: -6.33286190032959
    6. 'if' (adapté à ' if') → logprob: -6.58286190032959
    7. '        
' → logprob: -6.83286190032959
    8. '
' → logprob: -7.20786190032959
    9. ' ' → logprob: -7.83286190032959
    10. '    
' → logprob: -7.95786190032959

Token 139: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.10112301260232925
    2. ' r' → logprob: -2.726123094558716
    3. 'c' → logprob: -3.976123094558716
    4. 'r' → logprob: -5.851122856140137
    5. ' dfs' → logprob: -5.851122856140137
    6. ' ' → logprob: -6.726122856140137
    7. ' matrix' → logprob: -6.851122856140137
    8. ' (' → logprob: -6.851122856140137
    9. ' True' → logprob: -7.663622856140137
    10. ' new' → logprob: -7.788622856140137

Token 140: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6236981153488159
    2. ' +' → logprob: -0.8736981153488159
    3. ' <' → logprob: -3.1236982345581055
    4. '<' → logprob: -5.9986982345581055
    5. ' ' → logprob: -9.123698234558105
    6. '   ' → logprob: -11.373698234558105
    7. '<len' → logprob: -11.998698234558105
    8. '[' → logprob: -12.873698234558105
    9. '<size' → logprob: -13.186198234558105
    10. '<n' → logprob: -13.186198234558105

Token 141: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009757270105183125
    2. ' ' → logprob: -4.634757041931152
    3. '   ' → logprob: -14.134757041931152
    4. '<|end|>' → logprob: -15.009757041931152
    5. '  ' → logprob: -16.00975799560547
    6. '+' → logprob: -17.07225799560547
    7. '```' → logprob: -17.44725799560547
    8. '2' → logprob: -17.57225799560547
    9. '0' → logprob: -17.94725799560547
    10. '    ' → logprob: -18.38475799560547

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.625036239624023
    4. '<|end|>' → logprob: -17.312536239624023
    5. '```' → logprob: -18.000036239624023
    6. '+' → logprob: -18.250036239624023
    7. 'W' → logprob: -18.375036239624023
    8. '<' → logprob: -18.562536239624023
    9. '2' → logprob: -18.687536239624023
    10. '  ' → logprob: -18.750036239624023

Token 143: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.010408365167677402
    2. '<|end|>' → logprob: -5.010408401489258
    3. '<' → logprob: -5.635408401489258
    4. ')' → logprob: -9.510408401489258
    5. ' <=' → logprob: -11.135408401489258
    6. ' ' → logprob: -11.385408401489258
    7. ')<' → logprob: -12.635408401489258
    8. ' <
' → logprob: -12.760408401489258
    9. '<|end|>' → logprob: -12.885408401489258
    10. ' <",' → logprob: -13.760408401489258

Token 144: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.12693440914154053
    2. ' W' → logprob: -2.12693452835083
    3. '   ' → logprob: -12.751934051513672
    4. '	W' → logprob: -13.001934051513672
    5. ' ' → logprob: -14.376934051513672
    6. '<W' → logprob: -15.626934051513672
    7. '  ' → logprob: -15.751934051513672
    8. '=W' → logprob: -15.876934051513672
    9. '    ' → logprob: -16.251934051513672
    10. '<|end|>' → logprob: -17.376934051513672

Token 145: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23316149413585663
    2. ':
' → logprob: -1.608161449432373
    3. ' and' → logprob: -5.233161449432373
    4. '       ' → logprob: -6.358161449432373
    5. ' :' → logprob: -8.483161926269531
    6. ' :
' → logprob: -8.608161926269531
    7. ' or' → logprob: -9.483161926269531
    8. '   ' → logprob: -9.733161926269531
    9. 'and' → logprob: -10.108161926269531
    10. '):
' → logprob: -10.608161926269531

Token 146: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.04235346242785454
    2. '(matrix' → logprob: -3.792353391647339
    3. ' matrix' → logprob: -4.042353630065918
    4. '   ' → logprob: -8.042353630065918
    5. ' (' → logprob: -8.292353630065918
    6. 'dfs' → logprob: -8.417353630065918
    7. ' ' → logprob: -8.417353630065918
    8. 'isdigit' → logprob: -9.042353630065918
    9. '(d' → logprob: -9.667353630065918
    10. '(' → logprob: -9.792353630065918

Token 147: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.236549335066229e-05
    2. 'r' → logprob: -11.000021934509277
    3. '[' → logprob: -12.375021934509277
    4. '[row' → logprob: -14.125021934509277
    5. '<|end|>' → logprob: -15.125021934509277
    6. '[
' → logprob: -16.250022888183594
    7. '[s' → logprob: -16.625022888183594
    8. ' [' → logprob: -16.750022888183594
    9. '(r' → logprob: -17.125022888183594
    10. '	r' → logprob: -17.500022888183594

Token 148: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00014299227041192353
    2. '[r' → logprob: -9.375143051147461
    3. ' ][' → logprob: -10.625143051147461
    4. ']' → logprob: -11.000143051147461
    5. '[c' → logprob: -11.250143051147461
    6. '[' → logprob: -13.625143051147461
    7. 'r' → logprob: -14.000143051147461
    8. ' ' → logprob: -15.000143051147461
    9. '[row' → logprob: -15.000143051147461
    10. '   ' → logprob: -15.125143051147461

Token 149: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2233183042553719e-05
    2. ' c' → logprob: -11.625012397766113
    3. '][' → logprob: -13.625012397766113
    4. '(c' → logprob: -14.500012397766113
    5. '[c' → logprob: -14.500012397766113
    6. '   ' → logprob: -14.625012397766113
    7. ']' → logprob: -15.750012397766113
    8. ')c' → logprob: -16.125011444091797
    9. '+' → logprob: -16.750011444091797
    10. ' ' → logprob: -17.000011444091797

Token 150: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005812693270854652
    2. ' +' → logprob: -7.62558126449585
    3. '].' → logprob: -9.375581741333008
    4. ']' → logprob: -12.250581741333008
    5. '   ' → logprob: -13.625581741333008
    6. 'Next' → logprob: -14.625581741333008
    7. '+c' → logprob: -14.625581741333008
    8. '[' → logprob: -14.875581741333008
    9. ' ' → logprob: -15.500581741333008
    10. '][' → logprob: -15.750581741333008

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12196697294712067
    2. 'c' → logprob: -2.621967077255249
    3. '].' → logprob: -3.246967077255249
    4. ']' → logprob: -6.12196683883667
    5. 'isdigit' → logprob: -7.24696683883667
    6. '+' → logprob: -8.121967315673828
    7. '   ' → logprob: -11.746967315673828
    8. 'r' → logprob: -11.746967315673828
    9. ' ' → logprob: -11.871967315673828
    10. '(c' → logprob: -12.246967315673828

Token 152: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0031848405487835407
    2. ').' → logprob: -6.628184795379639
    3. ']' → logprob: -6.753184795379639
    4. 'isdigit' → logprob: -8.128185272216797
    5. '.is' → logprob: -8.628185272216797
    6. ' ].' → logprob: -10.003185272216797
    7. '.' → logprob: -10.628185272216797
    8. ')' → logprob: -10.628185272216797
    9. ' and' → logprob: -10.628185272216797
    10. '   ' → logprob: -11.003185272216797

Token 153: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -1.8624639324116288e-06
    2. ' is' → logprob: -13.625001907348633
    3. 'isd' → logprob: -15.250001907348633
    4. 'is' → logprob: -15.500001907348633
    5. 'isal' → logprob: -16.125001907348633
    6. '   ' → logprob: -18.000001907348633
    7. 'strip' → logprob: -19.125001907348633
    8. 'digit' → logprob: -19.250001907348633
    9. ' ' → logprob: -19.250001907348633
    10. '  ' → logprob: -19.500001907348633

Token 154: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01992436870932579
    2. '()' → logprob: -4.644924163818359
    3. '():
' → logprob: -4.644924163818359
    4. '):' → logprob: -8.26992416381836
    5. '(' → logprob: -9.26992416381836
    6. ':' → logprob: -9.89492416381836
    7. '()):
' → logprob: -10.51992416381836
    8. '():

' → logprob: -10.51992416381836
    9. ')' → logprob: -11.01992416381836
    10. '():
' → logprob: -11.26992416381836

Token 155: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22618713974952698
    2. '           ' → logprob: -1.7261871099472046
    3. ':
' → logprob: -4.351187229156494
    4. '
' → logprob: -5.226187229156494
    5. ':' → logprob: -5.601187229156494
    6. '):
' → logprob: -7.226187229156494
    7. ',' → logprob: -7.976187229156494
    8. 'dfs' → logprob: -8.226186752319336
    9. '        
' → logprob: -8.351186752319336
    10. ' dfs' → logprob: -8.601186752319336

Token 156: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.8840683102607727
    2. 'dfs' (adapté à ' dfs') → logprob: -1.134068250656128
    3. '       ' → logprob: -1.509068250656128
    4. '           ' → logprob: -3.884068250656128
    5. '
' → logprob: -4.509068489074707
    6. '               ' → logprob: -4.759068489074707
    7. 'd' → logprob: -6.634068489074707
    8. '        
' → logprob: -7.259068489074707
    9. '            
' → logprob: -8.009068489074707
    10. ' 
' → logprob: -8.009068489074707

Token 157: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.002479104558005929
    2. '(' → logprob: -6.002479076385498
    3. ' (' → logprob: -12.627479553222656
    4. '(
' → logprob: -15.752479553222656
    5. '(row' → logprob: -18.752479553222656
    6. 'r' → logprob: -19.002479553222656
    7. '((' → logprob: -19.252479553222656
    8. '(c' → logprob: -19.252479553222656
    9. ' ' → logprob: -19.502479553222656
    10. ')' → logprob: -20.502479553222656

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018563801422715187
    2. ' ,' → logprob: -4.643563747406006
    3. ',c' → logprob: -4.768563747406006
    4. '   ' → logprob: -9.143564224243164
    5. ' ' → logprob: -9.518564224243164
    6. '	' → logprob: -10.268564224243164
    7. ',r' → logprob: -10.268564224243164
    8. 'c' → logprob: -12.018564224243164
    9. '	c' → logprob: -12.893564224243164
    10. '  ' → logprob: -13.018564224243164

Token 159: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08894862979650497
    2. ' c' → logprob: -2.4639487266540527
    3. ' ' → logprob: -12.338948249816895
    4. '   ' → logprob: -13.088948249816895
    5. ')c' → logprob: -14.088948249816895
    6. '(c' → logprob: -14.963948249816895
    7. '    ' → logprob: -14.963948249816895
    8. '	c' → logprob: -14.963948249816895
    9. '  ' → logprob: -14.963948249816895
    10. ',c' → logprob: -15.963948249816895

Token 160: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00023166877508629113
    2. ' +' → logprob: -8.375231742858887
    3. '+
' → logprob: -14.875231742858887
    4. '+c' → logprob: -15.250231742858887
    5. '1' → logprob: -15.625231742858887
    6. ' ' → logprob: -15.875231742858887
    7. '   ' → logprob: -16.12523078918457
    8. '+)' → logprob: -17.62523078918457
    9. '＋' → logprob: -18.37523078918457
    10. ')' → logprob: -18.37523078918457

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.541112427134067e-05
    2. ' ' → logprob: -10.000075340270996
    3. '2' → logprob: -10.500075340270996
    4. '   ' → logprob: -14.312575340270996
    5. '+' → logprob: -14.625075340270996
    6. '```' → logprob: -15.187575340270996
    7. ')' → logprob: -15.812575340270996
    8. '  ' → logprob: -15.937575340270996
    9. '    ' → logprob: -16.437576293945312
    10. '۱' → logprob: -16.812576293945312

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012030890211462975
    2. ',new' → logprob: -7.0012030601501465
    3. ' ,' → logprob: -8.626203536987305
    4. 'new' → logprob: -9.251203536987305
    5. ' new' → logprob: -11.126203536987305
    6. '(new' → logprob: -15.251203536987305
    7. ')' → logprob: -15.376203536987305
    8. ',
' → logprob: -15.501203536987305
    9. '',' → logprob: -15.751203536987305
    10. '`,' → logprob: -16.501203536987305

Token 163: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.20142659544944763
    2. ' new' → logprob: -1.70142662525177
    3. '"' → logprob: -11.70142650604248
    4. ''' → logprob: -12.45142650604248
    5. ')new' → logprob: -15.07642650604248
    6. ' '' → logprob: -15.82642650604248
    7. '(new' → logprob: -15.95142650604248
    8. '	new' → logprob: -15.95142650604248
    9. ')' → logprob: -16.201427459716797
    10. ' ' → logprob: -16.326427459716797

Token 164: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.000918008794542402
    2. '_' → logprob: -7.000917911529541
    3. '_)' → logprob: -12.6259183883667
    4. 'num' → logprob: -13.5009183883667
    5. '_n' → logprob: -14.5009183883667
    6. ' _' → logprob: -14.7509183883667
    7. '_nums' → logprob: -15.5009183883667
    8. ')' → logprob: -15.6259183883667
    9. '_number' → logprob: -15.6259183883667
    10. '_val' → logprob: -16.250917434692383

Token 165: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004122803919017315
    2. ')
' → logprob: -5.504122734069824
    3. ' )' → logprob: -10.504122734069824
    4. '   ' → logprob: -11.879122734069824
    5. '       ' → logprob: -12.254122734069824
    6. ')
' → logprob: -12.629122734069824
    7. ')

' → logprob: -14.004122734069824
    8. ' )
' → logprob: -14.004122734069824
    9. ')`
' → logprob: -16.75412368774414
    10. '')' → logprob: -17.00412368774414

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.289473822107539e-05
    2. '
' → logprob: -10.500062942504883
    3. '   ' → logprob: -11.000062942504883
    4. '        
' → logprob: -11.625062942504883
    5. '    
' → logprob: -12.875062942504883
    6. '<|end|>' → logprob: -13.000062942504883
    7. ')' → logprob: -13.875062942504883
    8. '           ' → logprob: -14.125062942504883
    9. '  
' → logprob: -14.375062942504883
    10. ')
' → logprob: -15.125062942504883

Token 167: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004170171916484833
    2. ' if' → logprob: -6.129169940948486
    3. '
' → logprob: -6.879169940948486
    4. 'if' (adapté à ' if') → logprob: -7.879169940948486
    5. '   ' → logprob: -8.504170417785645
    6. '        
' → logprob: -8.879170417785645
    7. '\n' → logprob: -9.254170417785645
    8. ' ' → logprob: -10.504170417785645
    9. '  
' → logprob: -10.504170417785645
    10. ' 
' → logprob: -10.754170417785645

Token 168: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.04864595830440521
    2. 'r' → logprob: -3.0486459732055664
    3. ' ' → logprob: -10.673645973205566
    4. '(r' → logprob: -11.173645973205566
    5. ' ' → logprob: -11.798645973205566
    6. ' (' → logprob: -12.548645973205566
    7. '"' → logprob: -12.798645973205566
    8. ''' → logprob: -12.923645973205566
    9. '(' → logprob: -13.173645973205566
    10. '	r' → logprob: -14.548645973205566

Token 169: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25193148851394653
    2. '+' → logprob: -1.5019314289093018
    3. '   ' → logprob: -14.126931190490723
    4. '<|end|>' → logprob: -14.251931190490723
    5. ' ' → logprob: -14.626931190490723
    6. ',' → logprob: -15.626931190490723
    7. ' +=' → logprob: -16.50193214416504
    8. ' +
' → logprob: -16.87693214416504
    9. ' plus' → logprob: -17.00193214416504
    10. ')' → logprob: -17.12693214416504

Token 170: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10020752996206284
    2. ' ' → logprob: -2.350207567214966
    3. '```' → logprob: -15.475207328796387
    4. '<|end|>' → logprob: -15.475207328796387
    5. ' ' → logprob: -15.600207328796387
    6. '+' → logprob: -16.225208282470703
    7. '   ' → logprob: -16.975208282470703
    8. '[' → logprob: -17.412708282470703
    9. '2' → logprob: -17.475208282470703
    10. '0' → logprob: -17.725208282470703

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '<|end|>' → logprob: -17.87500762939453
    4. '   ' → logprob: -18.87500762939453
    5. '```' → logprob: -19.37500762939453
    6. '+' → logprob: -19.62500762939453
    7. '
' → logprob: -20.37500762939453
    8. '۱' → logprob: -20.93750762939453
    9. '[' → logprob: -21.37500762939453
    10. '  ' → logprob: -21.37500762939453

Token 172: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.014172795228660107
    2. '<' → logprob: -4.2641730308532715
    3. '<|end|>' → logprob: -12.389172554016113
    4. ')' → logprob: -13.389172554016113
    5. ' ' → logprob: -14.139172554016113
    6. '()<' → logprob: -14.389172554016113
    7. ',' → logprob: -14.639172554016113
    8. ')<' → logprob: -14.889172554016113
    9. '<len' → logprob: -15.139172554016113
    10. ' <
' → logprob: -15.639172554016113

Token 173: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1269298940896988
    2. ' H' → logprob: -2.126929998397827
    3. '<|end|>' → logprob: -13.751930236816406
    4. ' ' → logprob: -14.501930236816406
    5. '(H' → logprob: -16.751930236816406
    6. ',' → logprob: -16.751930236816406
    7. '   ' → logprob: -18.001930236816406
    8. ',H' → logprob: -18.251930236816406
    9. ')' → logprob: -18.501930236816406
    10. ' ' → logprob: -18.626930236816406

Token 174: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.040255747735500336
    2. ',' → logprob: -3.6652557849884033
    3. 'and' → logprob: -4.290255546569824
    4. ' ,' → logprob: -8.915255546569824
    5. ':' → logprob: -11.790255546569824
    6. '   ' → logprob: -12.415255546569824
    7. ')' → logprob: -12.540255546569824
    8. ' ' → logprob: -13.165255546569824
    9. '<|end|>' → logprob: -13.540255546569824
    10. '```' → logprob: -13.915255546569824

Token 175: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.014264107681810856
    2. 'matrix' → logprob: -4.264264106750488
    3. '(matrix' → logprob: -10.139264106750488
    4. '	matrix' → logprob: -10.514264106750488
    5. ' ' → logprob: -11.139264106750488
    6. ' matriz' → logprob: -12.639264106750488
    7. ''' → logprob: -12.889264106750488
    8. ' m' → logprob: -13.014264106750488
    9. ' ' → logprob: -13.139264106750488
    10. '.matrix' → logprob: -13.514264106750488

Token 176: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.0008311899146065116
    2. '+' → logprob: -7.125831127166748
    3. '(r' → logprob: -11.250831604003906
    4. '[' → logprob: -12.250831604003906
    5. ' [' → logprob: -13.125831604003906
    6. '][' → logprob: -13.125831604003906
    7. ' +' → logprob: -13.625831604003906
    8. '+r' → logprob: -13.750831604003906
    9. '+[' → logprob: -13.875831604003906
    10. 'r' → logprob: -14.125831604003906

Token 177: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00023333763238042593
    2. '][' → logprob: -9.00023365020752
    3. ' +' → logprob: -9.62523365020752
    4. '+r' → logprob: -10.50023365020752
    5. '+[' → logprob: -11.62523365020752
    6. ')[' → logprob: -13.12523365020752
    7. '[' → logprob: -13.25023365020752
    8. '+c' → logprob: -13.37523365020752
    9. '[r' → logprob: -13.87523365020752
    10. ']+' → logprob: -15.75023365020752

Token 178: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002314645564183593
    2. '1' → logprob: -6.127314567565918
    3. '   ' → logprob: -10.002314567565918
    4. ' c' → logprob: -10.002314567565918
    5. ' ' → logprob: -11.127314567565918
    6. '<|end|>' → logprob: -11.752314567565918
    7. ')' → logprob: -12.502314567565918
    8. ',' → logprob: -13.127314567565918
    9. ')c' → logprob: -13.127314567565918
    10. '0' → logprob: -13.252314567565918

Token 179: '][' (ID: 2696)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04023181274533272
    2. '][' → logprob: -3.290231704711914
    3. ',c' → logprob: -6.415231704711914
    4. ' ,' → logprob: -7.790231704711914
    5. '[c' → logprob: -10.290231704711914
    6. ']' → logprob: -10.540231704711914
    7. '[' → logprob: -10.665231704711914
    8. ')' → logprob: -10.790231704711914
    9. '<|end|>' → logprob: -11.790231704711914
    10. ')[' → logprob: -12.290231704711914

Token 180: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.771655115589965e-05
    2. ' c' → logprob: -11.000018119812012
    3. '<|end|>' → logprob: -14.750018119812012
    4. ' ' → logprob: -15.375018119812012
    5. '   ' → logprob: -16.375017166137695
    6. ',' → logprob: -17.000017166137695
    7. '[' → logprob: -17.250017166137695
    8. ')' → logprob: -17.250017166137695
    9. ')c' → logprob: -17.250017166137695
    10. '  ' → logprob: -17.625017166137695

Token 181: '].' (ID: 1651)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009662115946412086
    2. ' ,' → logprob: -5.00966215133667
    3. '][' → logprob: -6.75966215133667
    4. ']' → logprob: -7.63466215133667
    5. '].' → logprob: -7.63466215133667
    6. '],' → logprob: -8.134661674499512
    7. ')' → logprob: -8.759661674499512
    8. ',d' → logprob: -9.384661674499512
    9. '.' → logprob: -9.634661674499512
    10. '+' → logprob: -10.134661674499512

Token 182: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -5.466968650580384e-05
    2. ' is' → logprob: -9.875054359436035
    3. 'isd' → logprob: -13.000054359436035
    4. 'digit' → logprob: -15.000054359436035
    5. 'isal' → logprob: -15.625054359436035
    6. 'digits' → logprob: -16.12505531311035
    7. '.is' → logprob: -16.25005531311035
    8. 'is' → logprob: -16.37505531311035
    9. '   ' → logprob: -17.50005531311035
    10. 'isas' → logprob: -17.62505531311035

Token 183: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5725202560424805
    2. '():' → logprob: -0.9475202560424805
    3. '):' → logprob: -3.4475202560424805
    4. '():
' → logprob: -4.6975202560424805
    5. '()):
' → logprob: -5.5725202560424805
    6. '(' → logprob: -6.0725202560424805
    7. '):
' → logprob: -8.07252025604248
    8. '(),' → logprob: -8.32252025604248
    9. '())' → logprob: -9.44752025604248
    10. ')' → logprob: -9.57252025604248

Token 184: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4337984025478363
    2. 'dfs' → logprob: -1.8087984323501587
    3. ' dfs' → logprob: -2.058798313140869
    4. '           ' → logprob: -3.058798313140869
    5. ',' → logprob: -4.808798313140869
    6. ',d' → logprob: -6.433798313140869
    7. ')' → logprob: -7.058798313140869
    8. '(d' → logprob: -7.308798313140869
    9. ' ,' → logprob: -7.683798313140869
    10. '   ' → logprob: -7.933798313140869

Token 185: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.006720229052007198
    2. ' dfs' → logprob: -5.006720066070557
    3. 'df' → logprob: -12.631720542907715
    4. '   ' → logprob: -14.131720542907715
    5. 'def' → logprob: -15.006720542907715
    6. ' ' → logprob: -16.1317195892334
    7. '       ' → logprob: -16.3817195892334
    8. 'd' → logprob: -17.0067195892334
    9. '
' → logprob: -17.0067195892334
    10. 'dfa' → logprob: -17.3817195892334

Token 186: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.008615872822701931
    2. '(' → logprob: -4.758615970611572
    3. '(
' → logprob: -14.383615493774414
    4. 'r' → logprob: -14.758615493774414
    5. ' (' → logprob: -16.008615493774414
    6. '<|end|>' → logprob: -16.633615493774414
    7. ')' → logprob: -17.133615493774414
    8. '((' → logprob: -17.758615493774414
    9. '(

' → logprob: -18.133615493774414
    10. '\(' → logprob: -19.133615493774414

Token 187: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.347622811794281
    2. ',' → logprob: -1.3476228713989258
    3. ' +' → logprob: -3.472622871398926
    4. ' ,' → logprob: -6.222622871398926
    5. '+,' → logprob: -7.347622871398926
    6. ' r' → logprob: -10.097622871398926
    7. 'r' → logprob: -10.722622871398926
    8. ',r' → logprob: -10.972622871398926
    9. ' ' → logprob: -11.222622871398926
    10. '+
' → logprob: -12.847622871398926

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001696902181720361
    2. 'r' → logprob: -9.50016975402832
    3. 'c' → logprob: -9.75016975402832
    4. ' ' → logprob: -10.37516975402832
    5. '+' → logprob: -12.62516975402832
    6. '   ' → logprob: -14.75016975402832
    7. '2' → logprob: -14.87516975402832
    8. ',' → logprob: -14.87516975402832
    9. ' r' → logprob: -15.50016975402832
    10. ' c' → logprob: -15.62516975402832

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006668950896710157
    2. ',c' → logprob: -5.506669044494629
    3. ' ,' → logprob: -6.006669044494629
    4. 'c' → logprob: -9.131669044494629
    5. ' c' → logprob: -11.881669044494629
    6. ')' → logprob: -13.006669044494629
    7. '(' → logprob: -13.256669044494629
    8. '(c' → logprob: -13.506669044494629
    9. '`,' → logprob: -13.631669044494629
    10. ')c' → logprob: -14.381669044494629

Token 190: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.012510236352682114
    2. ' c' → logprob: -4.387510299682617
    3. ' ' → logprob: -15.262510299682617
    4. '   ' → logprob: -15.887510299682617
    5. ')c' → logprob: -16.262510299682617
    6. '	c' → logprob: -16.637510299682617
    7. ',' → logprob: -17.137510299682617
    8. ',c' → logprob: -18.012510299682617
    9. '    ' → logprob: -18.075010299682617
    10. ' ' → logprob: -18.200010299682617

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02283634804189205
    2. ',new' → logprob: -4.147836208343506
    3. ' ,' → logprob: -5.022836208343506
    4. ' new' → logprob: -9.147836685180664
    5. 'new' → logprob: -10.272836685180664
    6. ' ' → logprob: -10.772836685180664
    7. ',c' → logprob: -11.397836685180664
    8. ',current' → logprob: -12.147836685180664
    9. ')' → logprob: -12.272836685180664
    10. '[new' → logprob: -13.397836685180664

Token 192: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.47407880425453186
    2. ' new' → logprob: -0.9740787744522095
    3. ' ' → logprob: -14.849079132080078
    4. 'New' → logprob: -14.849079132080078
    5. '_new' → logprob: -15.224079132080078
    6. ')new' → logprob: -15.849079132080078
    7. ',' → logprob: -15.974079132080078
    8. ' ' → logprob: -16.099079132080078
    9. '	new' → logprob: -16.349079132080078
    10. '[new' → logprob: -16.474079132080078

Token 193: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.00012892624363303185
    2. 'num' → logprob: -9.125128746032715
    3. '_' → logprob: -11.125128746032715
    4. 'new' → logprob: -12.750128746032715
    5. '_new' → logprob: -13.750128746032715
    6. ' _' → logprob: -15.375128746032715
    7. 'm' → logprob: -15.375128746032715
    8. 'um' → logprob: -16.00012969970703
    9. '_n' → logprob: -16.00012969970703
    10. '_number' → logprob: -16.50012969970703

Token 194: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9040898880339228e-05
    2. '       ' → logprob: -10.875028610229492
    3. ')
' → logprob: -12.250028610229492
    4. ' )' → logprob: -12.875028610229492
    5. '   ' → logprob: -13.000028610229492
    6. '))' → logprob: -16.625028610229492
    7. ')#' → logprob: -16.625028610229492
    8. ')return' → logprob: -16.625028610229492
    9. ')

' → logprob: -17.250028610229492
    10. '#' → logprob: -17.750028610229492

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060046661645174026
    2. 'for' → logprob: -3.685046672821045
    3. 'return' → logprob: -3.810046672821045
    4. ' for' → logprob: -5.185046672821045
    5. ' return' → logprob: -6.185046672821045
    6. 'def' → logprob: -6.560046672821045
    7. '#' → logprob: -7.185046672821045
    8. '    
' → logprob: -7.810046672821045
    9. 'r' → logprob: -8.435046195983887
    10. '
' → logprob: -8.685046195983887

Token 196: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6390759348869324
    2. ' for' → logprob: -1.2640759944915771
    3. '   ' → logprob: -1.8890759944915771
    4. 'dfs' → logprob: -3.389075994491577
    5. ' dfs' → logprob: -5.764075756072998
    6. 'return' → logprob: -6.889075756072998
    7. ' return' → logprob: -8.264076232910156
    8. '    
' → logprob: -8.764076232910156
    9. 'def' → logprob: -9.889076232910156
    10. '#' → logprob: -10.639076232910156

Token 197: ' i' (ID: 575)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.02327343262732029
    2. 'r' → logprob: -3.773273468017578
    3. ' i' → logprob: -10.898273468017578
    4. ' ' → logprob: -11.898273468017578
    5. 'i' → logprob: -13.523273468017578
    6. ' row' → logprob: -14.523273468017578
    7. ' ' → logprob: -14.648273468017578
    8. 'row' → logprob: -15.523273468017578
    9. '	r' → logprob: -16.148273468017578
    10. ')' → logprob: -17.273273468017578

Token 198: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01145272608846426
    2. 'in' → logprob: -4.511452674865723
    3. ' ' → logprob: -7.886452674865723
    4. ' i' → logprob: -11.511452674865723
    5. '	in' → logprob: -12.261452674865723
    6. '  ' → logprob: -13.011452674865723
    7. ',' → logprob: -13.011452674865723
    8. 'n' → logprob: -13.636452674865723
    9. '<|end|>' → logprob: -13.636452674865723
    10. 'i' → logprob: -13.761452674865723

Token 199: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234121344983578
    2. ' range' → logprob: -5.255234241485596
    3. '(range' → logprob: -16.505233764648438
    4. 'ange' → logprob: -16.755233764648438
    5. 'r' → logprob: -17.005233764648438
    6. ' ' → logprob: -17.255233764648438
    7. '0' → logprob: -17.755233764648438
    8. '	range' → logprob: -17.755233764648438
    9. '   ' → logprob: -18.130233764648438
    10. 'rang' → logprob: -18.630233764648438

Token 200: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0007101670489646494
    2. '(' → logprob: -7.2507100105285645
    3. 'H' → logprob: -16.375709533691406
    4. ' (' → logprob: -17.000709533691406
    5. '(len' → logprob: -17.125709533691406
    6. '(
' → logprob: -17.500709533691406
    7. '(W' → logprob: -17.625709533691406
    8. '((' → logprob: -18.250709533691406
    9. ')' → logprob: -19.500709533691406
    10. '(h' → logprob: -20.000709533691406

Token 201: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006731592118740082
    2. '):
' → logprob: -5.0067315101623535
    3. ' ):' → logprob: -11.756731986999512
    4. '   ' → logprob: -12.506731986999512
    5. ':' → logprob: -12.631731986999512
    6. '):
' → logprob: -14.506731986999512
    7. '):

' → logprob: -15.256731986999512
    8. ')' → logprob: -15.631731986999512
    9. ',' → logprob: -16.006731033325195
    10. '}:' → logprob: -16.381731033325195

Token 202: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2152295708656311
    2. '   ' → logprob: -1.7152295112609863
    3. '       ' → logprob: -4.465229511260986
    4. 'for' → logprob: -7.340229511260986
    5. ' ' → logprob: -7.715229511260986
    6. '<|end|>' → logprob: -7.715229511260986
    7. '    ' → logprob: -8.465229988098145
    8. ':' → logprob: -8.465229988098145
    9. '	for' → logprob: -9.715229988098145
    10. '    
' → logprob: -10.090229988098145

Token 203: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06403592973947525
    2. 'for' (adapté à ' for') → logprob: -2.8140358924865723
    3. '   ' → logprob: -6.189035892486572
    4. '	for' → logprob: -11.56403636932373
    5. ' ' → logprob: -13.18903636932373
    6. '    ' → logprob: -13.31403636932373
    7. '<|end|>' → logprob: -14.43903636932373
    8. '       ' → logprob: -15.31403636932373
    9. '  ' → logprob: -15.43903636932373
    10. '_for' → logprob: -16.439035415649414

Token 204: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.028288189321756363
    2. 'j' → logprob: -3.6532881259918213
    3. ' c' → logprob: -6.4032883644104
    4. 'c' → logprob: -8.153287887573242
    5. ' ' → logprob: -10.528287887573242
    6. '   ' → logprob: -12.653287887573242
    7. ' (' → logprob: -12.903287887573242
    8. '(' → logprob: -13.528287887573242
    9. ' s' → logprob: -13.528287887573242
    10. '    ' → logprob: -13.778287887573242

Token 205: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016073551028966904
    2. 'in' → logprob: -4.141073703765869
    3. ' ' → logprob: -11.016073226928711
    4. '(' → logprob: -12.016073226928711
    5. '   ' → logprob: -12.516073226928711
    6. '    ' → logprob: -12.516073226928711
    7. '<|end|>' → logprob: -13.266073226928711
    8. '	in' → logprob: -13.766073226928711
    9. ')' → logprob: -14.141073226928711
    10. ' (' → logprob: -14.141073226928711

Token 206: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1271643340587616
    2. ' range' → logprob: -2.127164363861084
    3. 'W' → logprob: -8.877163887023926
    4. '(W' → logprob: -9.752163887023926
    5. '(range' → logprob: -10.877163887023926
    6. '(' → logprob: -11.502163887023926
    7. ' W' → logprob: -11.627163887023926
    8. ' (' → logprob: -15.377163887023926
    9. '0' → logprob: -15.877163887023926
    10. ')' → logprob: -16.502164840698242

Token 207: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.0003135360311716795
    2. '(' → logprob: -8.125313758850098
    3. '(H' → logprob: -11.000313758850098
    4. '(
' → logprob: -15.500313758850098
    5. 'W' → logprob: -15.875313758850098
    6. ' (' → logprob: -16.75031280517578
    7. '(w' → logprob: -16.75031280517578
    8. '((' → logprob: -16.87531280517578
    9. '(L' → logprob: -17.12531280517578
    10. ')' → logprob: -17.75031280517578

Token 208: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019527795957401395
    2. '):
' → logprob: -6.501952648162842
    3. ':' → logprob: -8.126953125
    4. ')' → logprob: -9.126953125
    5. ' ):' → logprob: -10.501953125
    6. '+' → logprob: -11.626953125
    7. '   ' → logprob: -12.126953125
    8. '):

' → logprob: -13.751953125
    9. '():' → logprob: -14.126953125
    10. ',' → logprob: -14.751953125

Token 209: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024969303980469704
    2. ' if' → logprob: -3.8999693393707275
    3. '           ' → logprob: -6.274969100952148
    4. 'if' → logprob: -7.149969100952148
    5. '        
' → logprob: -7.149969100952148
    6. ',' → logprob: -8.149969100952148
    7. ':' → logprob: -8.274969100952148
    8. '   ' → logprob: -9.399969100952148
    9. '<|end|>' → logprob: -9.399969100952148
    10. ':
' → logprob: -9.899969100952148

Token 210: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24437642097473145
    2. 'if' (adapté à ' if') → logprob: -1.6193764209747314
    3. '       ' → logprob: -4.994376182556152
    4. '           ' → logprob: -5.494376182556152
    5. 'dfs' → logprob: -5.494376182556152
    6. ' dfs' → logprob: -5.619376182556152
    7. '   ' → logprob: -9.994376182556152
    8. '        ' → logprob: -10.994376182556152
    9. ' ' → logprob: -11.244376182556152
    10. '    ' → logprob: -11.244376182556152

Token 211: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.5759409070014954
    2. ' matrix' → logprob: -0.8259409070014954
    3. '	matrix' → logprob: -13.95094108581543
    4. '(matrix' → logprob: -14.70094108581543
    5. ' ' → logprob: -16.82594108581543
    6. ' isinstance' → logprob: -17.95094108581543
    7. '.matrix' → logprob: -18.07594108581543
    8. 'atrix' → logprob: -18.20094108581543
    9. '_matrix' → logprob: -19.07594108581543
    10. 'mat' → logprob: -19.07594108581543

Token 212: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.600714161526412e-05
    2. '[j' → logprob: -9.500076293945312
    3. '[' → logprob: -14.875076293945312
    4. '[r' → logprob: -15.000076293945312
    5. '[s' → logprob: -15.625076293945312
    6. '[I' → logprob: -16.250076293945312
    7. ' [' → logprob: -16.750076293945312
    8. '   ' → logprob: -17.375076293945312
    9. '[
' → logprob: -18.000076293945312
    10. '[row' → logprob: -18.000076293945312

Token 213: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5794973373413086
    2. '[i' → logprob: -0.8294973373413086
    3. '[j' → logprob: -5.704497337341309
    4. ']' → logprob: -9.454497337341309
    5. '[' → logprob: -9.704497337341309
    6. ')[' → logprob: -10.829497337341309
    7. ' ][' → logprob: -11.204497337341309
    8. '[I' → logprob: -11.204497337341309
    9. '   ' → logprob: -12.204497337341309
    10. '"][' → logprob: -12.704497337341309

Token 214: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0006396461394615471
    2. '][' → logprob: -7.87563943862915
    3. 'c' → logprob: -8.625639915466309
    4. ']' → logprob: -10.125639915466309
    5. '[j' → logprob: -10.625639915466309
    6. 's' → logprob: -12.375639915466309
    7. 'i' → logprob: -13.000639915466309
    8. ')' → logprob: -13.250639915466309
    9. '0' → logprob: -13.375639915466309
    10. '].' → logprob: -13.625639915466309

Token 215: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.5873128175735474
    2. '].' → logprob: -1.3373128175735474
    3. '.is' → logprob: -2.087312698364258
    4. '.' → logprob: -2.962312698364258
    5. 'isdigit' → logprob: -5.462312698364258
    6. ')' → logprob: -6.962312698364258
    7. '}.' → logprob: -8.712312698364258
    8. '   ' → logprob: -9.087312698364258
    9. ' .' → logprob: -9.087312698364258
    10. ']' → logprob: -9.212312698364258

Token 216: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -1.9361264946837764e-07
    2. 'isd' → logprob: -16.875
    3. ' is' → logprob: -17.875
    4. 'digit' → logprob: -19.375
    5. 'isal' → logprob: -19.5
    6. 'startswith' → logprob: -19.75
    7. 'is' → logprob: -20.0
    8. '```' → logprob: -21.125
    9. '   ' → logprob: -21.625
    10. 'isas' → logprob: -21.625

Token 217: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0012341608526185155
    2. '()' → logprob: -6.87623405456543
    3. '():
' → logprob: -8.87623405456543
    4. '(' → logprob: -10.50123405456543
    5. ' ():' → logprob: -10.50123405456543
    6. ':' → logprob: -13.25123405456543
    7. '()>' → logprob: -13.25123405456543
    8. '):' → logprob: -13.87623405456543
    9. '()">' → logprob: -14.37623405456543
    10. '():

' → logprob: -14.50123405456543

Token 218: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1048087477684021
    2. ':
' → logprob: -2.354808807373047
    3. '               ' → logprob: -6.354808807373047
    4. '):
' → logprob: -6.854808807373047
    5. '           ' → logprob: -7.104808807373047
    6. '):' → logprob: -7.729808807373047
    7. '():
' → logprob: -8.729808807373047
    8. ' and' → logprob: -8.729808807373047
    9. ',' → logprob: -9.354808807373047
    10. ' :' → logprob: -10.479808807373047

Token 219: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.3948795199394226
    2. ' matrix' → logprob: -1.2698795795440674
    3. '(matrix' → logprob: -3.5198795795440674
    4. ' not' → logprob: -4.769879341125488
    5. ' (' → logprob: -5.394879341125488
    6. 'not' → logprob: -6.894879341125488
    7. 'int' → logprob: -8.644879341125488
    8. ' True' → logprob: -9.019879341125488
    9. '(' → logprob: -9.019879341125488
    10. '(i' → logprob: -9.019879341125488

Token 220: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011224505578866228
    2. '[j' → logprob: -9.500112533569336
    3. '[' → logprob: -10.625112533569336
    4. 'i' → logprob: -12.750112533569336
    5. '[
' → logprob: -12.875112533569336
    6. '[I' → logprob: -13.375112533569336
    7. '[start' → logprob: -13.500112533569336
    8. ' [' → logprob: -14.000112533569336
    9. '][' → logprob: -14.375112533569336
    10. '[user' → logprob: -14.500112533569336

Token 221: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.45863500237464905
    2. '[j' → logprob: -1.0836349725723267
    3. '[i' → logprob: -3.583635091781616
    4. '[' → logprob: -6.583634853363037
    5. ']' → logprob: -9.333635330200195
    6. ' ][' → logprob: -9.708635330200195
    7. 'j' → logprob: -10.083635330200195
    8. '[I' → logprob: -10.583635330200195
    9. ' [' → logprob: -11.208635330200195
    10. '   ' → logprob: -11.583635330200195

Token 222: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.650518920039758e-06
    2. 'i' → logprob: -13.625003814697266
    3. ' j' → logprob: -13.875003814697266
    4. ']' → logprob: -14.500003814697266
    5. 'c' → logprob: -15.625003814697266
    6. '   ' → logprob: -15.875003814697266
    7. '[j' → logprob: -16.125003814697266
    8. '
' → logprob: -16.375003814697266
    9. '][' → logprob: -16.375003814697266
    10. '0' → logprob: -16.625003814697266

Token 223: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010525744408369064
    2. ']!=' → logprob: -4.760525703430176
    3. ']!='' → logprob: -6.635525703430176
    4. ']==' → logprob: -8.385525703430176
    5. ' ]' → logprob: -9.010525703430176
    6. ' !=' → logprob: -10.135525703430176
    7. '!=' → logprob: -10.135525703430176
    8. '].' → logprob: -10.135525703430176
    9. ':' → logprob: -10.885525703430176
    10. ']=='' → logprob: -11.010525703430176

Token 224: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8602628707885742
    2. ' !=' → logprob: -1.1102628707885742
    3. ' ==' → logprob: -2.110262870788574
    4. '!=' → logprob: -2.235262870788574
    5. 'isdigit' → logprob: -4.985262870788574
    6. '.is' → logprob: -5.110262870788574
    7. '!='' → logprob: -6.485262870788574
    8. 'is' → logprob: -6.735262870788574
    9. '.' → logprob: -6.860262870788574
    10. ')' → logprob: -7.485262870788574

Token 225: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.010155272670090199
    2. '"' → logprob: -4.635155200958252
    3. ' '' → logprob: -8.13515567779541
    4. '0' → logprob: -9.38515567779541
    5. ' "' → logprob: -12.63515567779541
    6. ''\' → logprob: -12.63515567779541
    7. ''-' → logprob: -13.26015567779541
    8. ''#' → logprob: -13.38515567779541
    9. ''w' → logprob: -13.76015567779541
    10. ''A' → logprob: -13.76015567779541

Token 226: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.041661687195301056
    2. ''' → logprob: -3.4166617393493652
    3. ' ' → logprob: -4.916661739349365
    4. '"' → logprob: -8.416661262512207
    5. ' '' → logprob: -8.416661262512207
    6. '-' → logprob: -9.041661262512207
    7. '9' → logprob: -10.541661262512207
    8. '.' → logprob: -11.791661262512207
    9. ' "' → logprob: -11.916661262512207
    10. '#' → logprob: -11.979161262512207

Token 227: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0719270408153534
    2. '':' → logprob: -3.321927070617676
    3. '):' → logprob: -3.946927070617676
    4. ':
' → logprob: -4.696927070617676
    5. '':
' → logprob: -6.196927070617676
    6. '):
' → logprob: -6.446927070617676
    7. ''):
' → logprob: -7.696927070617676
    8. ')' → logprob: -7.821927070617676
    9. ''):' → logprob: -8.446927070617676
    10. ''' → logprob: -9.696927070617676

Token 228: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7183557152748108
    2. '           ' → logprob: -1.218355655670166
    3. '       ' → logprob: -1.968355655670166
    4. ' dfs' → logprob: -3.218355655670166
    5. ':
' → logprob: -4.218355655670166
    6. ':' → logprob: -4.468355655670166
    7. ',' → logprob: -5.343355655670166
    8. 'dfs' → logprob: -6.718355655670166
    9. '   ' → logprob: -7.343355655670166
    10. ' ' → logprob: -7.718355655670166

Token 229: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.030933571979403496
    2. 'dfs' (adapté à ' dfs') → logprob: -3.5309336185455322
    3. '               ' → logprob: -6.780933380126953
    4. '                   ' → logprob: -10.530933380126953
    5. ' DFS' → logprob: -12.030933380126953
    6. '           ' → logprob: -12.530933380126953
    7. ' ' → logprob: -13.155933380126953
    8. '                ' → logprob: -13.780933380126953
    9. ' df' → logprob: -13.780933380126953
    10. '       ' → logprob: -13.905933380126953

Token 230: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0011711753904819489
    2. '(' → logprob: -6.751171112060547
    3. '(j' → logprob: -14.876171112060547
    4. '(
' → logprob: -15.376171112060547
    5. ' (' → logprob: -15.501171112060547
    6. '((' → logprob: -16.126171112060547
    7. '(I' → logprob: -16.501171112060547
    8. '<|end|>' → logprob: -17.626171112060547
    9. '(ii' → logprob: -17.751171112060547
    10. '```' → logprob: -18.251171112060547

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007719860877841711
    2. ',j' → logprob: -7.250771999359131
    3. ' ,' → logprob: -9.875771522521973
    4. 'j' → logprob: -11.625771522521973
    5. ' j' → logprob: -15.125771522521973
    6. '   ' → logprob: -15.375771522521973
    7. '<|end|>' → logprob: -15.500771522521973
    8. ' ' → logprob: -15.625771522521973
    9. ',
' → logprob: -15.875771522521973
    10. '‌,' → logprob: -16.25077247619629

Token 232: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0019291093340143561
    2. ' j' → logprob: -6.25192928314209
    3. '   ' → logprob: -16.126928329467773
    4. '    ' → logprob: -16.376928329467773
    5. '	j' → logprob: -16.501928329467773
    6. ' ' → logprob: -16.626928329467773
    7. '<|end|>' → logprob: -17.001928329467773
    8. '0' → logprob: -17.626928329467773
    9. '  ' → logprob: -17.751928329467773
    10. '     ' → logprob: -17.876928329467773

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7146746763028204e-05
    2. ')' → logprob: -10.62503719329834
    3. ' ,' → logprob: -11.75003719329834
    4. ',)' → logprob: -14.25003719329834
    5. '',' → logprob: -14.25003719329834
    6. ',j' → logprob: -14.75003719329834
    7. ',
' → logprob: -14.87503719329834
    8. ''',' → logprob: -15.25003719329834
    9. '(),' → logprob: -15.37503719329834
    10. ',"' → logprob: -15.50003719329834

Token 234: ' ""' (ID: 3216)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.019081931561231613
    2. ''' → logprob: -4.019082069396973
    3. '''' → logprob: -7.519082069396973
    4. '""' → logprob: -7.894082069396973
    5. ')' → logprob: -11.894082069396973
    6. ' "")' → logprob: -12.144082069396973
    7. ' '')' → logprob: -13.144082069396973
    8. 'matrix' → logprob: -13.769082069396973
    9. '''
' → logprob: -15.019082069396973
    10. ''',' → logprob: -15.894082069396973

Token 235: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.493430894101039e-05
    2. ' )' → logprob: -10.250075340270996
    3. ')
' → logprob: -10.750075340270996
    4. '+' → logprob: -11.250075340270996
    5. '+)' → logprob: -13.125075340270996
    6. '))' → logprob: -14.000075340270996
    7. ')

' → logprob: -14.875075340270996
    8. '")' → logprob: -15.000075340270996
    9. '   ' → logprob: -15.375075340270996
    10. '())' → logprob: -15.375075340270996

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43267980217933655
    2. 'return' → logprob: -1.0576797723770142
    3. '
' → logprob: -6.307679653167725
    4. ' return' → logprob: -6.932679653167725
    5. '<|end|>' → logprob: -7.057679653167725
    6. '    
' → logprob: -9.307680130004883
    7. '	return' → logprob: -9.682680130004883
    8. '```' → logprob: -10.182680130004883
    9. '       ' → logprob: -10.557680130004883
    10. ')' → logprob: -10.557680130004883

Token 237: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01930178515613079
    2. '   ' → logprob: -4.019301891326904
    3. ' return' → logprob: -6.769301891326904
    4. '	return' → logprob: -14.019301414489746
    5. '
' → logprob: -14.269301414489746
    6. '    
' → logprob: -14.894301414489746
    7. ' ' → logprob: -15.019301414489746
    8. '{return' → logprob: -15.894301414489746
    9. '```' → logprob: -16.394302368164062
    10. '  ' → logprob: -16.394302368164062

Token 238: ' str' (ID: 989)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00033546582562848926
    2. ' max' → logprob: -8.000335693359375
    3. '(max' → logprob: -18.000335693359375
    4. '[max' → logprob: -19.750335693359375
    5. '	max' → logprob: -20.750335693359375
    6. '=max' → logprob: -21.750335693359375
    7. '   ' → logprob: -21.875335693359375
    8. '_max' → logprob: -22.500335693359375
    9. ',max' → logprob: -22.750335693359375
    10. ' ' → logprob: -23.375335693359375

Token 239: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0025275067891925573
    2. '(' → logprob: -6.002527713775635
    3. 'max' → logprob: -9.877527236938477
    4. '_max' → logprob: -15.252527236938477
    5. '(_' → logprob: -16.002527236938477
    6. '_' → logprob: -16.502527236938477
    7. ' max' → logprob: -16.877527236938477
    8. ' (' → logprob: -18.002527236938477
    9. '(
' → logprob: -18.002527236938477
    10. '_(' → logprob: -18.002527236938477

Token 240: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -4.227250610711053e-05
    2. 'number' → logprob: -10.125041961669922
    3. 'umber' → logprob: -13.125041961669922
    4. 'Number' → logprob: -16.500041961669922
    5. ')' → logprob: -16.750041961669922
    6. '_NUMBER' → logprob: -17.625041961669922
    7. 'ber' → logprob: -18.375041961669922
    8. '_' → logprob: -18.500041961669922
    9. ')_' → logprob: -18.500041961669922
    10. '_num' → logprob: -18.625041961669922

Token 241: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.875000953674316
    3. ' )' → logprob: -14.875000953674316
    4. ')`' → logprob: -16.5
    5. '')' → logprob: -17.625
    6. '[' → logprob: -17.75
    7. '+' → logprob: -18.125
    8. '   ' → logprob: -18.25
    9. '))' → logprob: -18.25
    10. '())' → logprob: -18.5

Token 242: 'while' (ID: 7032)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 243: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0015081972815096378
    2. 'True' → logprob: -6.5015082359313965
    3. '(True' → logprob: -12.251507759094238
    4. '_' → logprob: -14.376507759094238
    5. '_true' → logprob: -15.626507759094238
    6. ' ' → logprob: -15.751507759094238
    7. '=True' → logprob: -16.001508712768555
    8. ' input' → logprob: -17.126508712768555
    9. '1' → logprob: -17.751508712768555
    10. '_input' → logprob: -18.501508712768555

Token 244: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006545200943946838
    2. ' :' → logprob: -5.256545066833496
    3. '():' → logprob: -6.756545066833496
    4. ':
' → logprob: -9.006545066833496
    5. '(' → logprob: -12.006545066833496
    6. ' :
' → logprob: -12.631545066833496
    7. '():
' → logprob: -12.881545066833496
    8. '   ' → logprob: -13.006545066833496
    9. ',' → logprob: -13.506545066833496
    10. ' ():' → logprob: -13.506545066833496

Token 245: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012930437922477722
    2. ' line' → logprob: -4.762930393218994
    3. ' input' → logprob: -5.637930393218994
    4. ' try' → logprob: -8.262930870056152
    5. ' user' → logprob: -8.637930870056152
    6. '    
' → logprob: -9.262930870056152
    7. 'input' → logprob: -9.637930870056152
    8. ' inp' → logprob: -10.012930870056152
    9. '   ' → logprob: -10.512930870056152
    10. ' s' → logprob: -10.512930870056152

Token 246: ' line' (ID: 2543)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.8606712818145752
    2. ' line' → logprob: -0.9856712818145752
    3. 'try' → logprob: -1.8606712818145752
    4. 'line' (adapté à ' line') → logprob: -3.485671281814575
    5. ' input' → logprob: -4.985671043395996
    6. 'input' → logprob: -5.985671043395996
    7. ' user' → logprob: -5.985671043395996
    8. '   ' → logprob: -6.110671043395996
    9. ' inp' → logprob: -6.735671043395996
    10. ' command' → logprob: -7.110671043395996

Token 247: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018151583150029182
    2. '=' → logprob: -4.018151760101318
    3. ' ' → logprob: -14.64315128326416
    4. 's' → logprob: -14.64315128326416
    5. '_' → logprob: -15.76815128326416
    6. '=input' → logprob: -15.76815128326416
    7. '_input' → logprob: -16.393152236938477
    8. '   ' → logprob: -16.393152236938477
    9. '1' → logprob: -16.518152236938477
    10. '=line' → logprob: -16.768152236938477

Token 248: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02324547804892063
    2. ' input' → logprob: -3.7732455730438232
    3. '=input' → logprob: -17.523244857788086
    4. '(input' → logprob: -19.523244857788086
    5. '<input' → logprob: -19.898244857788086
    6. '	input' → logprob: -19.898244857788086
    7. '_input' → logprob: -20.398244857788086
    8. ' ' → logprob: -20.773244857788086
    9. 'inp' → logprob: -21.273244857788086
    10. '```' → logprob: -21.648244857788086

Token 249: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003662020608317107
    2. '().' → logprob: -8.2503662109375
    3. '(' → logprob: -9.3753662109375
    4. '())' → logprob: -11.8753662109375
    5. '()>' → logprob: -12.2503662109375
    6. '()
' → logprob: -13.0003662109375
    7. ' ()' → logprob: -13.3753662109375
    8. '("")' → logprob: -13.7503662109375
    9. '()">' → logprob: -14.1253662109375
    10. ')' → logprob: -14.3753662109375

Token 250: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 251: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02058124542236328
    2. 'if' (adapté à ' if') → logprob: -3.8955812454223633
    3. '   ' → logprob: -11.770581245422363
    4. ' matrix' → logprob: -11.770581245422363
    5. '=' → logprob: -12.270581245422363
    6. '<|end|>' → logprob: -12.395581245422363
    7. 'matrix' → logprob: -12.520581245422363
    8. ' =' → logprob: -13.270581245422363
    9. '.strip' → logprob: -13.395581245422363
    10. 'strip' → logprob: -13.895581245422363

Token 252: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.25398656725883484
    2. ' line' → logprob: -1.5039865970611572
    3. 'line' → logprob: -6.503986358642578
    4. 'not' → logprob: -7.503986358642578
    5. ' ' → logprob: -13.003986358642578
    6. '#line' → logprob: -13.503986358642578
    7. '	line' → logprob: -14.003986358642578
    8. '[line' → logprob: -14.003986358642578
    9. '=line' → logprob: -14.128986358642578
    10. '(line' → logprob: -14.378986358642578

Token 253: '.strip' (ID: 40613)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3134724795818329
    2. ' ==' → logprob: -1.3134725093841553
    3. '.strip' → logprob: -8.938472747802734
    4. '=' → logprob: -9.688472747802734
    5. '()==' → logprob: -12.438472747802734
    6. '.' → logprob: -12.438472747802734
    7. '===' → logprob: -13.188472747802734
    8. '=="' → logprob: -13.438472747802734
    9. ')==' → logprob: -13.688472747802734
    10. ' ' → logprob: -13.813472747802734

Token 254: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005269803572446108
    2. '()==' → logprob: -5.255270004272461
    3. '==' → logprob: -10.255270004272461
    4. ' ==' → logprob: -14.755270004272461
    5. '()=="' → logprob: -15.630270004272461
    6. ' ()' → logprob: -16.25527000427246
    7. ')' → logprob: -16.25527000427246
    8. '(' → logprob: -17.13027000427246
    9. '=' → logprob: -17.25527000427246
    10. '```' → logprob: -17.50527000427246

Token 255: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.007645202334970236
    2. ' ==' → logprob: -4.882645130157471
    3. '()==' → logprob: -11.007645606994629
    4. '=' → logprob: -11.132645606994629
    5. '==
' → logprob: -12.507645606994629
    6. '===' → logprob: -13.507645606994629
    7. '()' → logprob: -14.382645606994629
    8. ')==' → logprob: -14.507645606994629
    9. '=="' → logprob: -14.632645606994629
    10. '=='' → logprob: -14.757645606994629

Token 256: ' '':
' (ID: 125614)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1891963630914688
    2. '""' → logprob: -2.1891963481903076
    3. '''' → logprob: -3.1891963481903076
    4. '"":' → logprob: -4.564196586608887
    5. ''' → logprob: -5.064196586608887
    6. ''ex' → logprob: -6.439196586608887
    7. ''end' → logprob: -7.189196586608887
    8. '"#' → logprob: -10.689196586608887
    9. 'END' → logprob: -11.564196586608887
    10. ''q' → logprob: -12.189196586608887

Token 257: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34943413734436035
    2. '       ' → logprob: -1.2244341373443604
    3. ':' → logprob: -7.724433898925781
    4. ' break' → logprob: -8.099433898925781
    5. '	break' → logprob: -9.724433898925781
    6. 'break' → logprob: -9.849433898925781
    7. '   ' → logprob: -9.974433898925781
    8. ':
' → logprob: -10.599433898925781
    9. ',' → logprob: -10.599433898925781
    10. ' ' → logprob: -11.474433898925781

Token 258: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.23000578582286835
    2. ' break' → logprob: -1.9800057411193848
    3. '   ' → logprob: -2.7300057411193848
    4. '       ' → logprob: -6.230005741119385
    5. '	break' → logprob: -8.480006217956543
    6. '           ' → logprob: -12.855006217956543
    7. ' ' → logprob: -13.605006217956543
    8. '```' → logprob: -13.855006217956543
    9. '_break' → logprob: -14.355006217956543
    10. '  ' → logprob: -15.230006217956543

Token 259: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005781737272627652
    2. '    
' → logprob: -8.625577926635742
    3. '<|end|>' → logprob: -8.750577926635742
    4. 'line' → logprob: -9.125577926635742
    5. 'try' → logprob: -10.375577926635742
    6. 'if' → logprob: -10.750577926635742
    7. ' if' → logprob: -11.000577926635742
    8. '
' → logprob: -11.500577926635742
    9. 'input' → logprob: -11.750577926635742
    10. 'token' → logprob: -12.375577926635742

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0802307203412056
    2. 'break' → logprob: -3.955230712890625
    3. 'try' → logprob: -4.080230712890625
    4. ' break' → logprob: -4.455230712890625
    5. ' if' → logprob: -4.580230712890625
    6. ' try' → logprob: -5.330230712890625
    7. 'if' → logprob: -5.580230712890625
    8. 'line' → logprob: -5.830230712890625
    9. 'input' → logprob: -6.330230712890625
    10. 'n' → logprob: -6.580230712890625

Token 261: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' (adapté à ' W') → logprob: -0.7290779948234558
    2. 'H' → logprob: -1.7290780544281006
    3. 'try' → logprob: -1.8540780544281006
    4. 'break' → logprob: -2.8540780544281006
    5. 'n' → logprob: -3.9790780544281006
    6. ' W' → logprob: -3.9790780544281006
    7. ' try' → logprob: -4.1040778160095215
    8. ' break' → logprob: -4.3540778160095215
    9. 'if' → logprob: -4.4790778160095215
    10. 'parts' → logprob: -4.6040778160095215

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28433987498283386
    2. ' =' → logprob: -2.0343399047851562
    3. '=' → logprob: -2.1593399047851562
    4. ' ,' → logprob: -6.659339904785156
    5. '=int' → logprob: -11.659339904785156
    6. '=line' → logprob: -11.784339904785156
    7. ' ' → logprob: -12.534339904785156
    8. '=input' → logprob: -12.784339904785156
    9. ',line' → logprob: -12.784339904785156
    10. ',input' → logprob: -13.034339904785156

Token 263: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0788901224732399
    2. ' H' → logprob: -2.578890085220337
    3. ',H' → logprob: -16.203889846801758
    4. '=' → logprob: -16.453889846801758
    5. ' =' → logprob: -16.453889846801758
    6. '<|end|>' → logprob: -16.828889846801758
    7. ' ' → logprob: -17.078889846801758
    8. ' 
' → logprob: -19.328889846801758
    9. '	H' → logprob: -19.953889846801758
    10. ',' → logprob: -19.953889846801758

Token 264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759543180465698
    2. ' =' → logprob: -0.8259543180465698
    3. ',' → logprob: -11.32595443725586
    4. '=line' → logprob: -13.32595443725586
    5. '=input' → logprob: -14.70095443725586
    6. '=int' → logprob: -15.45095443725586
    7. ' ' → logprob: -16.07595443725586
    8. ')' → logprob: -16.07595443725586
    9. ' =)' → logprob: -16.95095443725586
    10. '=

' → logprob: -17.20095443725586

Token 265: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.029941977933049202
    2. 'map' → logprob: -3.529942035675049
    3. ' line' → logprob: -8.65494155883789
    4. 'line' → logprob: -11.02994155883789
    5. '	map' → logprob: -15.15494155883789
    6. ' list' → logprob: -15.52994155883789
    7. ' ' → logprob: -15.90494155883789
    8. ' m' → logprob: -16.02994155883789
    9. '(map' → logprob: -16.40494155883789
    10. 'm' → logprob: -16.40494155883789

Token 266: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004857053514569998
    2. '(' → logprob: -5.504857063293457
    3. '(str' → logprob: -7.754857063293457
    4. '(lambda' → logprob: -8.379857063293457
    5. '(input' → logprob: -9.629857063293457
    6. 'int' → logprob: -10.004857063293457
    7. '<int' → logprob: -12.504857063293457
    8. '[int' → logprob: -13.504857063293457
    9. '(eval' → logprob: -14.129857063293457
    10. '(line' → logprob: -14.129857063293457

Token 267: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.01031386200338602
    2. ')' → logprob: -5.385313987731934
    3. '(input' → logprob: -5.635313987731934
    4. 'line' → logprob: -7.135313987731934
    5. '(' → logprob: -7.385313987731934
    6. 'input' → logprob: -8.010313987731934
    7. ',line' → logprob: -8.385313987731934
    8. ',' → logprob: -9.510313987731934
    9. '[line' → logprob: -11.385313987731934
    10. '=line' → logprob: -11.385313987731934

Token 268: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.03805296868085861
    2. ' line' → logprob: -3.288053035736084
    3. '(line' → logprob: -12.038052558898926
    4. 'input' → logprob: -12.788052558898926
    5. ')' → logprob: -13.163052558898926
    6. '	line' → logprob: -14.538052558898926
    7. '=line' → logprob: -15.663052558898926
    8. '[line' → logprob: -15.788052558898926
    9. '#line' → logprob: -16.038053512573242
    10. '   ' → logprob: -16.413053512573242

Token 269: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009799322579056025
    2. '.split' → logprob: -7.375979900360107
    3. '.strip' → logprob: -8.250980377197266
    4. '()' → logprob: -9.375980377197266
    5. '.' → logprob: -12.500980377197266
    6. 'split' → logprob: -13.125980377197266
    7. ' .' → logprob: -14.500980377197266
    8. ' ().' → logprob: -14.750980377197266
    9. '(' → logprob: -15.125980377197266
    10. ')' → logprob: -16.000980377197266

Token 270: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009894796647131443
    2. '('' → logprob: -5.384894847869873
    3. '()' → logprob: -5.509894847869873
    4. ')' → logprob: -6.884894847869873
    5. '(' → logprob: -9.134894371032715
    6. '())
' → logprob: -9.759894371032715
    7. '(','' → logprob: -11.259894371032715
    8. '("' → logprob: -12.384894371032715
    9. '()))' → logprob: -13.009894371032715
    10. '())

' → logprob: -13.384894371032715

Token 271: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4265979528427124
    2. 'if' → logprob: -1.1765979528427124
    3. '<|end|>' → logprob: -4.426598072052002
    4. '\n' → logprob: -4.801598072052002
    5. 'matrix' → logprob: -5.301598072052002
    6. '
' → logprob: -5.551598072052002
    7. 'newline' → logprob: -5.926598072052002
    8. ' matrix' → logprob: -6.676598072052002
    9. 'n' → logprob: -6.801598072052002
    10. 'line' → logprob: -6.926598072052002

Token 272: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6158798933029175
    2. ' if' → logprob: -1.2408798933029175
    3. 'matrix' → logprob: -1.8658798933029175
    4. ' matrix' → logprob: -4.240880012512207
    5. '   ' → logprob: -6.490880012512207
    6. 'break' → logprob: -11.490880012512207
    7. 'mat' → logprob: -12.740880012512207
    8. '	matrix' → logprob: -12.865880012512207
    9. ' break' → logprob: -13.115880012512207
    10. 'data' → logprob: -13.240880012512207

Token 273: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.4740866422653198
    2. ' W' → logprob: -0.9740866422653198
    3. ' ' → logprob: -11.84908676147461
    4. '	W' → logprob: -14.34908676147461
    5. '(' → logprob: -14.47408676147461
    6. '   ' → logprob: -14.72408676147461
    7. '  ' → logprob: -14.72408676147461
    8. ' ' → logprob: -15.34908676147461
    9. ' (' → logprob: -15.47408676147461
    10. '0' → logprob: -17.09908676147461

Token 274: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3869228661060333
    2. '==' → logprob: -1.136922836303711
    3. ' ' → logprob: -10.011922836303711
    4. '=' → logprob: -12.761922836303711
    5. ')==' → logprob: -13.636922836303711
    6. '0' → logprob: -13.761922836303711
    7. '===' → logprob: -15.136922836303711
    8. '```' → logprob: -15.261922836303711
    9. '()==' → logprob: -15.386922836303711
    10. ')' → logprob: -15.386922836303711

Token 275: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '```' → logprob: -16.75006675720215
    4. 'H' → logprob: -16.81256675720215
    5. '۰' → logprob: -17.50006675720215
    6. '-' → logprob: -18.62506675720215
    7. '
' → logprob: -18.68756675720215
    8. '

' → logprob: -18.87506675720215
    9. '  ' → logprob: -19.12506675720215
    10. '０' → logprob: -19.12506675720215

Token 276: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -16.875011444091797
    4. '-' → logprob: -17.437511444091797
    5. '۰' → logprob: -17.437511444091797
    6. 'H' → logprob: -17.562511444091797
    7. '

' → logprob: -18.312511444091797
    8. '
' → logprob: -18.562511444091797
    9. '  ' → logprob: -18.812511444091797
    10. 'O' → logprob: -18.875011444091797

Token 277: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.038043782114982605
    2. 'and' → logprob: -3.288043737411499
    3. ' or' → logprob: -13.413043975830078
    4. ' ' → logprob: -14.788043975830078
    5. '<|end|>' → logprob: -15.913043975830078
    6. ' a' → logprob: -16.413043975830078
    7. '	and' → logprob: -16.538043975830078
    8. 'a' → logprob: -17.788043975830078
    9. '0' → logprob: -17.913043975830078
    10. ' an' → logprob: -18.038043975830078

Token 278: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0031777136027812958
    2. ' H' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.628177642822266
    4. ' ' → logprob: -18.628177642822266
    5. '	H' → logprob: -20.753177642822266
    6. '  ' → logprob: -21.378177642822266
    7. ' ' → logprob: -23.003177642822266
    8. '    ' → logprob: -23.628177642822266
    9. '0' → logprob: -25.628177642822266
    10. 'W' → logprob: -26.003177642822266

Token 279: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12693293392658234
    2. '==' → logprob: -2.1269328594207764
    3. ' ' → logprob: -13.376933097839355
    4. '0' → logprob: -14.001933097839355
    5. ' ' → logprob: -14.501933097839355
    6. ')==' → logprob: -14.626933097839355
    7. '<|end|>' → logprob: -14.626933097839355
    8. '=' → logprob: -15.126933097839355
    9. ' =' → logprob: -15.751933097839355
    10. '===' → logprob: -16.12693214416504

Token 280: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. ' ' → logprob: -18.501928329467773
    4. '   ' → logprob: -18.564428329467773
    5. '<|end|>' → logprob: -18.689428329467773
    6. '  ' → logprob: -18.939428329467773
    7. '۰' → logprob: -18.939428329467773
    8. ' ' → logprob: -20.314428329467773
    9. '```' → logprob: -20.376928329467773
    10. '<|end|>' → logprob: -20.876928329467773

Token 281: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۰' → logprob: -19.750001907348633
    4. '   ' → logprob: -21.937501907348633
    5. '০' → logprob: -22.000001907348633
    6. '<|end|>' → logprob: -22.125001907348633
    7. '  ' → logprob: -22.437501907348633
    8. '०' → logprob: -22.562501907348633
    9. '```' → logprob: -23.000001907348633
    10. '０' → logprob: -23.062501907348633

Token 282: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04320197552442551
    2. ':
' → logprob: -3.1682019233703613
    3. '   ' → logprob: -8.54320240020752
    4. '       ' → logprob: -12.91820240020752
    5. ':return' → logprob: -12.91820240020752
    6. ':
' → logprob: -14.41820240020752
    7. ' :' → logprob: -14.66820240020752
    8. ' break' → logprob: -14.79320240020752
    9. ' :
' → logprob: -14.91820240020752
    10. '	break' → logprob: -15.04320240020752

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012563214637339115
    2. '   ' → logprob: -4.387563228607178
    3. ' break' → logprob: -10.01256275177002
    4. '	break' → logprob: -12.63756275177002
    5. 'break' → logprob: -13.13756275177002
    6. ':' → logprob: -14.01256275177002
    7. '           ' → logprob: -14.26256275177002
    8. '     ' → logprob: -14.63756275177002
    9. '<|end|>' → logprob: -15.01256275177002
    10. '      ' → logprob: -15.13756275177002

Token 284: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.39188334345817566
    2. 'break' (adapté à ' break') → logprob: -1.141883373260498
    3. '   ' → logprob: -5.516883373260498
    4. '	break' → logprob: -7.516883373260498
    5. '       ' → logprob: -7.766883373260498
    6. '_break' → logprob: -12.01688289642334
    7. '           ' → logprob: -12.39188289642334
    8. '    
' → logprob: -14.01688289642334
    9. '
' → logprob: -14.14188289642334
    10. 'b' → logprob: -14.51688289642334

Token 285: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7019856572151184
    2. 'matrix' → logprob: -0.7019856572151184
    3. ' matrix' → logprob: -4.826985836029053
    4. '    
' → logprob: -8.076985359191895
    5. '	matrix' → logprob: -8.326985359191895
    6. '```' → logprob: -9.201985359191895
    7. '
' → logprob: -9.701985359191895
    8. '<|end|>' → logprob: -10.701985359191895
    9. '``' → logprob: -11.326985359191895
    10. '_matrix' → logprob: -11.451985359191895

Token 286: '   ' (ID: 271)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.0011386694386601448
    2. '   ' → logprob: -7.001138687133789
    3. '```' → logprob: -9.001138687133789
    4. ' matrix' → logprob: -9.501138687133789
    5. '	matrix' → logprob: -12.001138687133789
    6. 'data' → logprob: -12.001138687133789
    7. 'grid' → logprob: -12.626138687133789
    8. '``' → logprob: -12.626138687133789
    9. '    
' → logprob: -12.876138687133789
    10. 'rows' → logprob: -13.126138687133789

Token 287: ' matrix' (ID: 12248)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' (adapté à ' matrix') → logprob: -0.00028255043434910476
    2. ' matrix' → logprob: -8.750282287597656
    3. '   ' → logprob: -9.125282287597656
    4. '	matrix' → logprob: -11.375282287597656
    5. '    
' → logprob: -13.625282287597656
    6. '```' → logprob: -14.125282287597656
    7. '(matrix' → logprob: -14.500282287597656
    8. '_matrix' → logprob: -15.375282287597656
    9. 'data' → logprob: -15.625282287597656
    10. '<|end|>' → logprob: -15.625282287597656

Token 288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868864178657532
    2. ' =' → logprob: -1.1368863582611084
    3. '=[]' → logprob: -11.136886596679688
    4. '   ' → logprob: -15.136886596679688
    5. '[' → logprob: -15.636886596679688
    6. '=[]
' → logprob: -16.511886596679688
    7. '[]' → logprob: -16.511886596679688
    8. '=[' → logprob: -16.886886596679688
    9. ' =[' → logprob: -17.011886596679688
    10. ' ' → logprob: -17.136886596679688

Token 289: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01469037402421236
    2. ' [' → logprob: -4.514690399169922
    3. '[input' → logprob: -6.764690399169922
    4. '[str' → logprob: -8.014690399169922
    5. '[user' → logprob: -8.264690399169922
    6. '[line' → logprob: -8.514690399169922
    7. '[key' → logprob: -8.764690399169922
    8. '[data' → logprob: -9.014690399169922
    9. '[e' → logprob: -9.264690399169922
    10. '[class' → logprob: -9.264690399169922

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19276921451091766
    2. 'for' → logprob: -1.942769169807434
    3. ' for' → logprob: -3.4427692890167236
    4. '	for' → logprob: -10.567769050598145
    5. '<|end|>' → logprob: -11.192769050598145
    6. '    
' → logprob: -12.567769050598145
    7. '
' → logprob: -13.567769050598145
    8. '<|end|>' → logprob: -15.567769050598145
    9. ' ' → logprob: -15.942769050598145
    10. '[' → logprob: -16.06777000427246

Token 291: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018156379461288452
    2. ' for' → logprob: -4.0181565284729
    3. '   ' → logprob: -12.018156051635742
    4. '
' → logprob: -15.393156051635742
    5. '	for' → logprob: -15.518156051635742
    6. '    
' → logprob: -17.893156051635742
    7. ' 
' → logprob: -19.143156051635742
    8. 'while' → logprob: -20.143156051635742
    9. '_for' → logprob: -21.518156051635742
    10. '  
' → logprob: -21.643156051635742

Token 292: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.000553151941858232
    2. ' _' → logprob: -7.500553131103516
    3. '_i' → logprob: -16.000553131103516
    4. ' i' → logprob: -18.875553131103516
    5. ' ' → logprob: -19.125553131103516
    6. '_=' → logprob: -19.500553131103516
    7. 'i' → logprob: -20.125553131103516
    8. ' in' → logprob: -20.750553131103516
    9. '_range' → logprob: -20.750553131103516
    10. '_in' → logprob: -21.250553131103516

Token 293: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.048674799501895905
    2. 'in' → logprob: -3.0486748218536377
    3. '_' → logprob: -10.173674583435059
    4. ' ' → logprob: -10.423674583435059
    5. 'range' → logprob: -11.173674583435059
    6. ' range' → logprob: -12.923674583435059
    7. ' _' → logprob: -13.548674583435059
    8. '  ' → logprob: -13.798674583435059
    9. 'i' → logprob: -14.923674583435059
    10. '0' → logprob: -16.298675537109375

Token 294: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233763717114925
    2. ' range' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.255233764648438
    4. '	range' → logprob: -18.630233764648438
    5. '  ' → logprob: -18.755233764648438
    6. '   ' → logprob: -19.880233764648438
    7. '(range' → logprob: -20.255233764648438
    8. '_range' → logprob: -20.380233764648438
    9. '_' → logprob: -20.505233764648438
    10. '    ' → logprob: -21.630233764648438

Token 295: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.003223464358597994
    2. 'H' → logprob: -5.753223419189453
    3. ' H' → logprob: -10.003223419189453
    4. ' (' → logprob: -15.378223419189453
    5. '(' → logprob: -16.003223419189453
    6. '	H' → logprob: -16.378223419189453
    7. '   ' → logprob: -16.628223419189453
    8. ' ' → logprob: -18.628223419189453
    9. 'HBox' → logprob: -20.003223419189453
    10. '<H' → logprob: -20.253223419189453

Token 296: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.050915513187646866
    2. '):' → logprob: -3.050915479660034
    3. '   ' → logprob: -6.675915718078613
    4. ':
' → logprob: -7.425915718078613
    5. ':' → logprob: -8.425915718078613
    6. '):
' → logprob: -9.425915718078613
    7. ')' → logprob: -9.800915718078613
    8. '():
' → logprob: -9.925915718078613
    9. ' ):
' → logprob: -10.300915718078613
    10. '       ' → logprob: -12.050915718078613

Token 297: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0294182226061821
    2. '   ' → logprob: -3.6544182300567627
    3. '	   ' → logprob: -6.529417991638184
    4. ' matrix' → logprob: -7.529417991638184
    5. '	matrix' → logprob: -7.779417991638184
    6. '```' → logprob: -8.654417991638184
    7. 'matrix' → logprob: -9.029417991638184
    8. ' line' → logprob: -9.154417991638184
    9. '<|end|>' → logprob: -10.029417991638184
    10. '    ' → logprob: -10.279417991638184

Token 298: ' row' (ID: 5225)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.2101367861032486
    2. ' matrix' → logprob: -1.9601367712020874
    3. 'row' (adapté à ' row') → logprob: -3.335136890411377
    4. ' row' → logprob: -4.585136890411377
    5. '   ' → logprob: -6.460136890411377
    6. 'line' → logprob: -6.835136890411377
    7. ' line' → logprob: -8.585136413574219
    8. '	matrix' → logprob: -10.335136413574219
    9. 'rows' → logprob: -11.835136413574219
    10. '	row' → logprob: -13.210136413574219

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788961797952652
    2. '=' → logprob: -2.5788962841033936
    3. '=line' → logprob: -12.328896522521973
    4. '=input' → logprob: -14.203896522521973
    5. '.append' → logprob: -14.953896522521973
    6. '   ' → logprob: -15.203896522521973
    7. '    ' → logprob: -15.703896522521973
    8. '()' → logprob: -15.828896522521973
    9. 'line' → logprob: -15.828896522521973
    10. ' ' → logprob: -16.453895568847656

Token 300: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.010840763337910175
    2. 'list' → logprob: -5.010840892791748
    3. ' input' → logprob: -5.510840892791748
    4. ' list' → logprob: -9.51084041595459
    5. '[input' → logprob: -17.260841369628906
    6. '	input' → logprob: -17.510841369628906
    7. '=input' → logprob: -17.760841369628906
    8. '(input' → logprob: -17.885841369628906
    9. '<input' → logprob: -18.260841369628906
    10. '   ' → logprob: -18.760841369628906

Token 301: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014174791052937508
    2. '().' → logprob: -4.264174938201904
    3. '())' → logprob: -12.389174461364746
    4. '(' → logprob: -13.389174461364746
    5. '()>' → logprob: -13.389174461364746
    6. ' ()' → logprob: -13.514174461364746
    7. '()
' → logprob: -14.389174461364746
    8. '(),' → logprob: -14.764174461364746
    9. '()+' → logprob: -15.264174461364746
    10. '()`' → logprob: -15.514174461364746

Token 302: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003380783833563328
    2. '       ' → logprob: -6.25338077545166
    3. '<|end|>' → logprob: -7.12838077545166
    4. ' matrix' → logprob: -8.50338077545166
    5. 'matrix' → logprob: -8.75338077545166
    6. '	matrix' → logprob: -9.50338077545166
    7. '    ' → logprob: -10.37838077545166
    8. '<|end|>' → logprob: -10.37838077545166
    9. '    
' → logprob: -10.62838077545166
    10. '
' → logprob: -10.75338077545166

Token 303: ' while' (ID: 2049)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.20576466619968414
    2. ' matrix' → logprob: -1.705764651298523
    3. '   ' → logprob: -5.4557647705078125
    4. '       ' → logprob: -10.830764770507812
    5. '	matrix' → logprob: -11.330764770507812
    6. 'if' → logprob: -11.580764770507812
    7. 'row' → logprob: -11.705764770507812
    8. ' if' → logprob: -11.830764770507812
    9. ' ' → logprob: -12.580764770507812
    10. '    ' → logprob: -12.705764770507812

Token 304: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.36877763271331787
    2. ' len' → logprob: -1.4937776327133179
    3. 'row' → logprob: -2.8687777519226074
    4. ' not' → logprob: -4.243777751922607
    5. ' row' → logprob: -4.993777751922607
    6. 'not' → logprob: -5.118777751922607
    7. '(len' → logprob: -12.36877727508545
    8. 'line' → logprob: -12.36877727508545
    9. ' ' → logprob: -12.86877727508545
    10. '	len' → logprob: -14.74377727508545

Token 305: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.0041654217056930065
    2. 'row' → logprob: -5.5041656494140625
    3. ' row' → logprob: -9.879165649414062
    4. '(' → logprob: -10.254165649414062
    5. ' (' → logprob: -15.504165649414062
    6. '=row' → logprob: -16.129165649414062
    7. '(matrix' → logprob: -16.379165649414062
    8. '	row' → logprob: -16.629165649414062
    9. '[row' → logprob: -16.754165649414062
    10. '(rows' → logprob: -17.879165649414062

Token 306: ')' (ID: 8)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.47930487990379333
    2. ' <' → logprob: -0.9793049097061157
    3. '()<' → logprob: -5.604304790496826
    4. ')<' → logprob: -7.354304790496826
    5. ')' → logprob: -7.604304790496826
    6. '<len' → logprob: -8.729305267333984
    7. '()' → logprob: -8.979305267333984
    8. '<int' → logprob: -10.604305267333984
    9. '<w' → logprob: -10.854305267333984
    10. '<p' → logprob: -11.854305267333984

Token 307: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.20163142681121826
    2. ' <' → logprob: -1.7016314268112183
    3. '<len' → logprob: -9.076631546020508
    4. '()<' → logprob: -9.951631546020508
    5. '<w' → logprob: -10.826631546020508
    6. '<int' → logprob: -11.201631546020508
    7. '<W' → logprob: -12.451631546020508
    8. '<m' → logprob: -12.951631546020508
    9. '<size' → logprob: -12.951631546020508
    10. '<n' → logprob: -13.076631546020508

Token 308: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.003177952254191041
    2. ' W' → logprob: -5.753178119659424
    3. '=W' → logprob: -16.253177642822266
    4. '	W' → logprob: -17.128177642822266
    5. '   ' → logprob: -17.503177642822266
    6. ' ' → logprob: -17.503177642822266
    7. '<W' → logprob: -17.878177642822266
    8. '=' → logprob: -18.628177642822266
    9. '(W' → logprob: -18.753177642822266
    10. ')' → logprob: -18.878177642822266

Token 309: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7762243151664734
    2. ':
' → logprob: -0.7762243151664734
    3. ' :
' → logprob: -3.151224374771118
    4. ' :' → logprob: -3.651224374771118
    5. '   ' → logprob: -5.151224136352539
    6. '       ' → logprob: -7.151224136352539
    7. 'row' → logprob: -7.276224136352539
    8. ' row' → logprob: -7.651224136352539
    9. '           ' → logprob: -7.776224136352539
    10. ' and' → logprob: -7.776224136352539

Token 310: '           ' (ID: 352)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.8096056580543518
    2. '           ' → logprob: -0.9346056580543518
    3. 'row' → logprob: -1.934605598449707
    4. '       ' → logprob: -4.559605598449707
    5. '	row' → logprob: -6.434605598449707
    6. ' ' → logprob: -6.934605598449707
    7. '   ' → logprob: -7.184605598449707
    8. '            ' → logprob: -7.309605598449707
    9. '(row' → logprob: -7.309605598449707
    10. '        ' → logprob: -7.434605598449707

Token 311: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.001171652227640152
    2. 'row' (adapté à ' row') → logprob: -6.751171588897705
    3. '	row' → logprob: -14.251172065734863
    4. ' ' → logprob: -14.751172065734863
    5. ' 
' → logprob: -16.126171112060547
    6. ' ' → logprob: -16.376171112060547
    7. ',row' → logprob: -17.126171112060547
    8. '=row' → logprob: -17.376171112060547
    9. '_row' → logprob: -17.501171112060547
    10. ' r' → logprob: -17.751171112060547

Token 312: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06205541267991066
    2. ' +=' → logprob: -2.8120553493499756
    3. '=' → logprob: -10.062055587768555
    4. '+' → logprob: -10.312055587768555
    5. '+="' → logprob: -12.312055587768555
    6. '+='' → logprob: -12.312055587768555
    7. ' +' → logprob: -13.062055587768555
    8. '+=(' → logprob: -14.812055587768555
    9. ' =' → logprob: -15.562055587768555
    10. ']+=' → logprob: -15.937055587768555

Token 313: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.09080518037080765
    2. ' input' → logprob: -2.4658052921295166
    3. ''' → logprob: -6.3408050537109375
    4. ' '' → logprob: -9.965805053710938
    5. '"' → logprob: -10.090805053710938
    6. ' ' → logprob: -12.215805053710938
    7. '(input' → logprob: -12.715805053710938
    8. '	input' → logprob: -13.340805053710938
    9. '=input' → logprob: -14.465805053710938
    10. '<input' → logprob: -14.965805053710938

Token 314: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00044675805838778615
    2. '().' → logprob: -7.750446796417236
    3. '()
' → logprob: -11.125446319580078
    4. '(' → logprob: -14.625446319580078
    5. '())' → logprob: -14.625446319580078
    6. '()

' → logprob: -15.750446319580078
    7. ' ()' → logprob: -16.500446319580078
    8. '("")' → logprob: -16.625446319580078
    9. '()>' → logprob: -16.875446319580078
    10. '()`' → logprob: -17.625446319580078

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.396757089532912e-05
    2. '
' → logprob: -11.1250638961792
    3. '   ' → logprob: -11.5000638961792
    4. '<|end|>' → logprob: -11.5000638961792
    5. '	' → logprob: -11.7500638961792
    6. ',' → logprob: -12.0000638961792
    7. ')' → logprob: -12.2500638961792
    8. '           ' → logprob: -13.0000638961792
    9. ' matrix' → logprob: -13.1250638961792
    10. '	   ' → logprob: -13.3750638961792

Token 316: ' matrix' (ID: 12248)
  Prédit: ' matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.16154585778713226
    2. 'matrix' (adapté à ' matrix') → logprob: -2.536545753479004
    3. '   ' → logprob: -2.661545753479004
    4. '	matrix' → logprob: -8.911545753479004
    5. '       ' → logprob: -10.536545753479004
    6. '
' → logprob: -10.786545753479004
    7. '_matrix' → logprob: -12.536545753479004
    8. '.matrix' → logprob: -13.286545753479004
    9. ' row' → logprob: -13.536545753479004
    10. '    ' → logprob: -13.911545753479004

Token 317: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.941850526549388e-06
    2. '.' → logprob: -11.750007629394531
    3. '.app' → logprob: -17.62500762939453
    4. '.extend' → logprob: -18.12500762939453
    5. '.ap' → logprob: -18.50000762939453
    6. ' .' → logprob: -19.00000762939453
    7. 'append' → logprob: -19.37500762939453
    8. '.Append' → logprob: -19.50000762939453
    9. '_append' → logprob: -21.75000762939453
    10. '.add' → logprob: -21.75000762939453

Token 318: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -1.580929347255733e-05
    2. '(line' → logprob: -11.750016212463379
    3. '(' → logprob: -12.250016212463379
    4. 'row' → logprob: -12.875016212463379
    5. '(list' → logprob: -15.375016212463379
    6. ' row' → logprob: -16.125015258789062
    7. ' (' → logprob: -16.500015258789062
    8. '(input' → logprob: -16.750015258789062
    9. '(rows' → logprob: -18.250015258789062
    10. ',row' → logprob: -18.750015258789062

Token 319: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1279553291387856e-05
    2. '<|end|>' → logprob: -11.750011444091797
    3. ')
' → logprob: -13.500011444091797
    4. '   ' → logprob: -13.750011444091797
    5. ' )' → logprob: -14.375011444091797
    6. ')return' → logprob: -15.875011444091797
    7. '<|end|>' → logprob: -16.875011444091797
    8. '),' → logprob: -17.500011444091797
    9. '}' → logprob: -17.500011444091797
    10. ')}' → logprob: -17.625011444091797

Token 320: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06406588107347488
    2. 'result' → logprob: -3.564065933227539
    3. '   ' → logprob: -3.689065933227539
    4. ' print' → logprob: -4.939065933227539
    5. ' result' → logprob: -6.814065933227539
    6. 'secret' → logprob: -8.439065933227539
    7. '```' → logprob: -9.439065933227539
    8. 'answer' → logprob: -9.439065933227539
    9. ' secret' → logprob: -9.689065933227539
    10. '
' → logprob: -10.939065933227539

Token 321: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.19966508448123932
    2. ' print' → logprob: -2.324665069580078
    3. 'result' → logprob: -2.949665069580078
    4. ' result' → logprob: -3.824665069580078
    5. ' secret' → logprob: -5.699665069580078
    6. '   ' → logprob: -5.699665069580078
    7. 'secret' → logprob: -6.199665069580078
    8. 'answer' → logprob: -8.699665069580078
    9. ' answer' → logprob: -10.074665069580078
    10. '
' → logprob: -10.949665069580078

Token 322: '(find' (ID: 60187)
  Prédit: '(find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(find' → logprob: -0.00012594614236149937
    2. '(' → logprob: -9.000125885009766
    3. 'find' → logprob: -13.000125885009766
    4. '(f' → logprob: -15.750125885009766
    5. ' find' → logprob: -18.000125885009766
    6. ')find' → logprob: -18.750125885009766
    7. '=find' → logprob: -18.875125885009766
    8. '('' → logprob: -18.875125885009766
    9. '()' → logprob: -19.125125885009766
    10. '("' → logprob: -19.875125885009766

Token 323: '_secret' (ID: 51619)
  Prédit: '_secret'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_secret' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -15.25
    3. 'secret' → logprob: -16.25
    4. '```' → logprob: -17.375
    5. '_SECRET' → logprob: -18.125
    6. ')_' → logprob: -18.25
    7. '_secure' → logprob: -18.375
    8. '_se' → logprob: -19.0
    9. '_sec' → logprob: -19.125
    10. '_s' → logprob: -19.75

Token 324: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -14.250000953674316
    3. ' _' → logprob: -15.375000953674316
    4. '_secret' → logprob: -15.750000953674316
    5. '_num' → logprob: -16.250001907348633
    6. '_numbers' → logprob: -16.375001907348633
    7. 'number' → logprob: -16.625001907348633
    8. '_n' → logprob: -17.875001907348633
    9. '```' → logprob: -17.875001907348633
    10. '_code' → logprob: -18.375001907348633

Token 325: '(matrix' (ID: 57027)
  Prédit: '(matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(matrix' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -16.625
    4. ')' → logprob: -17.0
    5. '(m' → logprob: -17.25
    6. '(Matrix' → logprob: -17.5
    7. '(mat' → logprob: -18.375
    8. '(
' → logprob: -19.0
    9. '	matrix' → logprob: -19.375
    10. ')(' → logprob: -19.375

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004487844998948276
    2. ' ,' → logprob: -7.875448703765869
    3. ',W' → logprob: -9.625449180603027
    4. ',m' → logprob: -13.875449180603027
    5. '(' → logprob: -14.125449180603027
    6. ',w' → logprob: -15.000449180603027
    7. ')' → logprob: -15.375449180603027
    8. '(W' → logprob: -15.875449180603027
    9. '(matrix' → logprob: -16.00044822692871
    10. '```' → logprob: -17.00044822692871

Token 327: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.011048054322600365
    2. ' W' → logprob: -4.511047840118408
    3. '	W' → logprob: -15.761048316955566
    4. '   ' → logprob: -16.13604736328125
    5. '    ' → logprob: -18.26104736328125
    6. '(W' → logprob: -18.38604736328125
    7. '<W' → logprob: -18.88604736328125
    8. ',W' → logprob: -19.38604736328125
    9. '```' → logprob: -19.51104736328125
    10. '=W' → logprob: -19.88604736328125

Token 328: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.008129963040119e-06
    2. ' ,' → logprob: -12.500003814697266
    3. ',H' → logprob: -15.500003814697266
    4. ')' → logprob: -18.000003814697266
    5. ',
' → logprob: -18.500003814697266
    6. ',W' → logprob: -19.125003814697266
    7. '‌,' → logprob: -19.500003814697266
    8. '，' → logprob: -20.000003814697266
    9. '`,' → logprob: -20.500003814697266
    10. '```' → logprob: -20.625003814697266

Token 329: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.005233882926404476
    2. ' H' → logprob: -5.2552337646484375
    3. '   ' → logprob: -17.380233764648438
    4. ' ' → logprob: -17.880233764648438
    5. ')' → logprob: -18.505233764648438
    6. '	H' → logprob: -18.880233764648438
    7. '    ' → logprob: -19.755233764648438
    8. '  ' → logprob: -20.255233764648438
    9. ' ' → logprob: -20.255233764648438
    10. ',H' → logprob: -20.755233764648438

Token 330: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018150413408875465
    2. ')' → logprob: -4.018150329589844
    3. ')))' → logprob: -15.018150329589844
    4. ' ))' → logprob: -16.018150329589844
    5. '))
' → logprob: -16.268150329589844
    6. '),' → logprob: -17.268150329589844
    7. '()))' → logprob: -18.018150329589844
    8. '   ' → logprob: -18.643150329589844
    9. ')
' → logprob: -18.893150329589844
    10. ' )' → logprob: -18.893150329589844


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 328
Tokens correctement prédits (1ère position, stricte): 149
Tokens correctement prédits (1ère position, avec adaptation): 157
Tokens correctement prédits (top 10): 293
Précision stricte (1ère position): 45.43%
Précision adaptée (1ère position): 47.87%
Précision (top 10): 89.33%
================================================================================
