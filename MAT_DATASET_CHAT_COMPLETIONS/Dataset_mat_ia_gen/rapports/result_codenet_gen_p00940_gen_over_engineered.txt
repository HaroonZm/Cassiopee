================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Tuple, Dict, Set
import sys

class Process:
    def __init__(self, pid: int, resource_needs: List[int]):
        self.pid: int = pid
        self.resource_needs: List[int] = resource_needs[:]  # total needs per resource kind
        self.held_resources: List[int] = [0]*len(resource_needs)  # currently held instances per resource kind
        self.finished: bool = False

    def need(self) -> List[int]:
        return [need - held for need, held in zip(self.resource_needs, self.held_resources)]

    def is_finished(self) -> bool:
        return self.finished or all((need == 0 for need in self.need()))

    def try_finish(self) -> bool:
        # Mark as finished and release resources if finished.
        if self.is_finished() and not self.finished:
            self.finished = True
            return True
        return False

class ResourceManager:
    def __init__(self, p_count: int, r_count: int, initial_available: List[int], processes_needs: List[List[int]]):
        self.p_count: int = p_count
        self.r_count: int = r_count
        self.available: List[int] = initial_available[:]  # available instances of each resource

        self.processes: List[Process] = [Process(pid=i+1, resource_needs=processes_needs[i]) for i in range(p_count)]

    def allocate(self, pid: int, rid: int) -> None:
        # Allocate one instance of rid resource to process pid.
        proc: Process = self.processes[pid-1]
        self.available[rid-1] -= 1
        proc.held_resources[rid-1] += 1

    def release_all(self, pid: int) -> None:
        proc = self.processes[pid-1]
        for i in range(self.r_count):
            self.available[i] += proc.held_resources[i]
            proc.held_resources[i] = 0

    def can_finish_with_available(self, proc: Process, work: List[int]) -> bool:
        # Check if proc's remaining need can be satisfied with work vector
        return all((need <= w for need, w in zip(proc.need(), work)))

    def is_deadlock_avoidable(self) -> bool:
        '''
        Implements a Banker's algorithm style safety check:
        - work: simulated available resource vector
        - finish: processed array of booleans for processes finished in simulation
        '''
        work = self.available[:]
        finish = [proc.finished for proc in self.processes]

        progress = True
        while progress:
            progress = False
            for i, proc in enumerate(self.processes):
                if finish[i]:
                    continue
                if self.can_finish_with_available(proc, work):
                    # simulate finishing proc: release held resources
                    for rid in range(self.r_count):
                        work[rid] += proc.held_resources[rid]
                    finish[i] = True
                    progress = True  # found a process that can finish, so continue searching
        # If all finish are True, no deadlock unavoidable state
        return all(finish)

class DeadlockDetectionSolution:
    def __init__(self):
        self.p: int = 0  # number of processes
        self.r: int = 0  # number of resources
        self.t: int = 0  # length of time log
        self.l: List[int] = []  # initial available resources
        self.n: List[List[int]] = []  # process needs
        self.logs: List[Tuple[int,int]] = []  # log entries (process, resource)

    def input_data(self):
        input_line = sys.stdin.readline()
        while input_line.strip() == '':
            input_line = sys.stdin.readline()
        self.p, self.r, self.t = map(int, input_line.strip().split())
        self.l = list(map(int, sys.stdin.readline().strip().split()))
        self.n = [list(map(int, sys.stdin.readline().strip().split())) for _ in range(self.p)]
        self.logs = [tuple(map(int, sys.stdin.readline().strip().split())) for _ in range(self.t)]

    def solve(self) -> int:
        manager = ResourceManager(self.p, self.r, self.l, self.n)

        for time_idx, (pid, rid) in enumerate(self.logs, start=1):
            manager.allocate(pid, rid)

            # After allocation, we try to finish any process that can finish now
            # keeps releasing resources of finished processes until no new process finishes
            finished_this_round = True
            while finished_this_round:
                finished_this_round = False
                for proc in manager.processes:
                    if proc.try_finish():
                        # release resources
                        manager.release_all(proc.pid)
                        finished_this_round = True

            # check if deadlock unavoidable
            if not manager.is_deadlock_avoidable():
                return time_idx

        # if never found deadlock unavoidable
        return -1

def main():
    solution = DeadlockDetectionSolution()
    solution.input_data()
    print(solution.solve())

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.33398276567459106
    2. 'List' → logprob: -1.8339827060699463
    3. 'Any' → logprob: -2.4589827060699463
    4. ' Any' → logprob: -3.3339827060699463
    5. ' Optional' → logprob: -6.708982944488525
    6. 'Optional' → logprob: -7.208982944488525
    7. ' Union' → logprob: -7.833982944488525
    8. 'Union' → logprob: -8.458982467651367
    9. 'Iterable' → logprob: -8.708982467651367
    10. ' Generator' → logprob: -9.208982467651367

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.4787392020225525
    2. 'def' → logprob: -1.4787392616271973
    3. '<|end|>' → logprob: -3.3537392616271973
    4. '
' → logprob: -3.6037392616271973
    5. '\n' → logprob: -4.228739261627197
    6. '\' → logprob: -4.228739261627197
    7. '[' → logprob: -4.353739261627197
    8. ',' → logprob: -4.478739261627197
    9. 'import' → logprob: -4.853739261627197
    10. 'a' → logprob: -5.478739261627197

Token 5: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.44882717728614807
    2. 'Optional' → logprob: -1.0738271474838257
    3. ' Dict' → logprob: -4.823827266693115
    4. 'Dict' → logprob: -4.948827266693115
    5. 'Tuple' → logprob: -5.823827266693115
    6. ' Tuple' → logprob: -6.948827266693115
    7. ' Union' → logprob: -7.448827266693115
    8. 'Union' → logprob: -9.323826789855957
    9. 'Iterable' → logprob: -10.073826789855957
    10. 'Any' → logprob: -10.448826789855957

Token 6: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7053177952766418
    2. '```' → logprob: -1.955317735671997
    3. '\n' → logprob: -2.455317735671997
    4. ',' → logprob: -2.455317735671997
    5. '\' → logprob: -2.955317735671997
    6. 'import' → logprob: -3.330317735671997
    7. '[' → logprob: -3.455317735671997
    8. ':' → logprob: -4.205317974090576
    9. '(' → logprob: -4.330317974090576
    10. 'a' → logprob: -4.455317974090576

Token 7: ' Dict' (ID: 55179)
  Prédit: ' Dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.17233937978744507
    2. 'Dict' → logprob: -2.29733943939209
    3. ' Optional' → logprob: -3.79733943939209
    4. ' Union' → logprob: -3.92233943939209
    5. 'Optional' → logprob: -4.92233943939209
    6. ' Callable' → logprob: -6.17233943939209
    7. 'Union' → logprob: -6.29733943939209
    8. 'Iterable' → logprob: -7.04733943939209
    9. ' dict' → logprob: -7.29733943939209
    10. 'Set' → logprob: -7.54733943939209

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0970982313156128
    2. 'def' → logprob: -1.3470982313156128
    3. ':' → logprob: -2.5970983505249023
    4. '[' → logprob: -2.5970983505249023
    5. '```' → logprob: -2.8470983505249023
    6. 'a' → logprob: -3.0970983505249023
    7. '<|end|>' → logprob: -3.2220983505249023
    8. '(' → logprob: -3.3470983505249023
    9. 'import' → logprob: -3.5970983505249023
    10. '.' → logprob: -4.722098350524902

Token 9: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -1.0742143392562866
    2. 'Any' → logprob: -1.1992143392562866
    3. ' Union' → logprob: -1.9492143392562866
    4. 'Union' → logprob: -2.199214458465576
    5. ' Any' → logprob: -3.449214458465576
    6. 'Optional' → logprob: -3.699214458465576
    7. ' Set' → logprob: -4.199214458465576
    8. ' Optional' → logprob: -4.449214458465576
    9. 'Iterable' → logprob: -4.449214458465576
    10. ' Callable' → logprob: -6.324214458465576

Token 10: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4118053913116455
    2. '```' → logprob: -1.9118053913116455
    3. ':' → logprob: -2.0368053913116455
    4. '[' → logprob: -2.0368053913116455
    5. 'def' → logprob: -2.2868053913116455
    6. '(' → logprob: -2.2868053913116455
    7. 'a' → logprob: -3.0368053913116455
    8. '`' → logprob: -3.9118053913116455
    9. 'import' → logprob: -4.036805152893066
    10. '\' → logprob: -4.286805152893066

Token 11: 'import' (ID: 561)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4926118850708008
    2. '\n' → logprob: -1.7426118850708008
    3. '<|end|>' → logprob: -1.7426118850708008
    4. '```' → logprob: -2.242611885070801
    5. 'import' → logprob: -2.492611885070801
    6. 'a' → logprob: -2.617611885070801
    7. 'def' → logprob: -2.867611885070801
    8. '\' → logprob: -3.992611885070801
    9. ':' → logprob: -4.492611885070801
    10. '[' → logprob: -4.617611885070801

Token 12: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.12570127844810486
    2. ' typing' → logprob: -2.5007011890411377
    3. ' collections' → logprob: -4.500701427459717
    4. ' sys' → logprob: -4.625701427459717
    5. ' re' → logprob: -5.250701427459717
    6. ' ' → logprob: -5.250701427459717
    7. ' math' → logprob: -6.500701427459717
    8. ' numpy' → logprob: -6.750701427459717
    9. ' json' → logprob: -7.125701427459717
    10. ' pandas' → logprob: -7.500701427459717

Token 13: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29600054025650024
    2. '\n' → logprob: -2.4210004806518555
    3. '.' → logprob: -3.1710004806518555
    4. '

' → logprob: -3.4210004806518555
    5. 'import' → logprob: -3.6710004806518555
    6. '<|end|>' → logprob: -3.9210004806518555
    7. ',' → logprob: -4.5460004806518555
    8. 'newline' → logprob: -4.9210004806518555
    9. '' → logprob: -5.1710004806518555
    10. '\' → logprob: -5.2960004806518555

Token 14: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.300045371055603
    2. 'd' → logprob: -1.425045371055603
    3. 'de' → logprob: -4.300045490264893
    4. 'class' → logprob: -6.300045490264893
    5. '#' → logprob: -7.300045490264893
    6. '\' → logprob: -7.675045490264893
    7. 'D' → logprob: -7.925045490264893
    8. 'a' → logprob: -8.175045013427734
    9. 'import' → logprob: -8.175045013427734
    10. '
' → logprob: -8.300045013427734

Token 15: ' Process' (ID: 12482)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11517968028783798
    2. ' My' → logprob: -2.3651797771453857
    3. ' Data' → logprob: -5.115179538726807
    4. ' Space' → logprob: -6.115179538726807
    5. ' Basic' → logprob: -6.490179538726807
    6. ' Parser' → logprob: -7.490179538726807
    7. ' User' → logprob: -7.490179538726807
    8. ' Mult' → logprob: -7.990179538726807
    9. ' Processor' → logprob: -7.990179538726807
    10. ' System' → logprob: -8.115180015563965

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.255405992269516
    2. '(' → logprob: -1.7554060220718384
    3. '(Process' → logprob: -3.255405902862549
    4. 'or' → logprob: -5.380405902862549
    5. ' :' → logprob: -6.255405902862549
    6. 'Processor' → logprob: -6.505405902862549
    7. '():' → logprob: -7.380405902862549
    8. 'er' → logprob: -7.505405902862549
    9. 'Handler' → logprob: -7.505405902862549
    10. 'Process' → logprob: -7.630405902862549

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5974026322364807
    2. ':' → logprob: -0.9724026322364807
    3. '(' → logprob: -2.847402572631836
    4. 'def' → logprob: -5.597402572631836
    5. ' :' → logprob: -5.847402572631836
    6. ' ' → logprob: -6.347402572631836
    7. ' def' → logprob: -6.597402572631836
    8. '    ' → logprob: -6.722402572631836
    9. '  ' → logprob: -7.597402572631836
    10. ' (' → logprob: -7.597402572631836

Token 18: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.021863743662834167
    2. 'def' (adapté à ' def') → logprob: -3.8968636989593506
    3. '   ' → logprob: -6.64686393737793
    4. '    ' → logprob: -11.39686393737793
    5. ' ' → logprob: -12.64686393737793
    6. ' de' → logprob: -13.02186393737793
    7. ' )' → logprob: -13.52186393737793
    8. '_' → logprob: -13.77186393737793
    9. ' __' → logprob: -14.39686393737793
    10. ' pass' → logprob: -15.02186393737793

Token 19: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.026925506070256233
    2. 'ialize' → logprob: -4.026925563812256
    3. '__' → logprob: -6.026925563812256
    4. 'itialize' → logprob: -6.151925563812256
    5. ' _' → logprob: -6.901925563812256
    6. '_init' → logprob: -7.026925563812256
    7. 'ine' → logprob: -7.276925563812256
    8. ' init' → logprob: -7.776925563812256
    9. '_' → logprob: -8.026925086975098
    10. 'it' → logprob: -8.776925086975098

Token 20: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -16.0
    3. 'in' → logprob: -20.0
    4. ' init' → logprob: -20.875
    5. 'innit' → logprob: -21.375
    6. '_init' → logprob: -21.75
    7. 'inite' → logprob: -22.0
    8. 'int' → logprob: -22.375
    9. 'call' → logprob: -22.875
    10. 'initi' → logprob: -23.0

Token 21: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0777212381362915
    2. '__(' → logprob: -2.952721118927002
    3. '_' → logprob: -4.577721118927002
    4. '__' → logprob: -5.077721118927002
    5. ' (' → logprob: -5.577721118927002
    6. '<|end|>' → logprob: -7.077721118927002
    7. '_(' → logprob: -7.702721118927002
    8. '(self' → logprob: -8.57772159576416
    9. '__(
' → logprob: -9.07772159576416
    10. '_token' → logprob: -9.07772159576416

Token 22: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001033999491482973
    2. ' self' → logprob: -6.876033782958984
    3. ')' → logprob: -14.001033782958984
    4. ' ' → logprob: -16.126033782958984
    5. '(self' → logprob: -16.251033782958984
    6. '_self' → logprob: -16.626033782958984
    7. '	self' → logprob: -16.876033782958984
    8. '   ' → logprob: -17.751033782958984
    9. ',self' → logprob: -17.751033782958984
    10. '$self' → logprob: -18.126033782958984

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4311392307281494
    2. 'self' → logprob: -1.6811392307281494
    3. ')' → logprob: -2.1811392307281494
    4. '(self' → logprob: -4.18113899230957
    5. '(' → logprob: -4.80613899230957
    6. ' ,' → logprob: -4.80613899230957
    7. ' self' → logprob: -4.93113899230957
    8. ' )' → logprob: -5.30613899230957
    9. '_' → logprob: -6.30613899230957
    10. '<|end|>' → logprob: -6.68113899230957

Token 24: ' pid' (ID: 23462)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.09952206164598465
    2. 'self' → logprob: -2.724522113800049
    3. ' pid' → logprob: -3.599522113800049
    4. ' )' → logprob: -7.349522113800049
    5. 'pid' → logprob: -7.849522113800049
    6. ' process' → logprob: -8.22452163696289
    7. ' id' → logprob: -9.22452163696289
    8. ' name' → logprob: -9.34952163696289
    9. 'name' → logprob: -9.59952163696289
    10. 'process' → logprob: -9.97452163696289

Token 25: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004030787386000156
    2. ',' → logprob: -5.879030704498291
    3. ':int' → logprob: -7.129030704498291
    4. '):' → logprob: -7.879030704498291
    5. ' :' → logprob: -10.50403118133545
    6. ')' → logprob: -11.50403118133545
    7. ' ,' → logprob: -12.62903118133545
    8. '=' → logprob: -13.50403118133545
    9. ' ):' → logprob: -14.12903118133545
    10. '_:' → logprob: -14.75403118133545

Token 26: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.055024005472660065
    2. 'int' → logprob: -2.9300239086151123
    3. ' ' → logprob: -9.555024147033691
    4. ' str' → logprob: -10.930024147033691
    5. ':int' → logprob: -10.930024147033691
    6. ' )' → logprob: -11.055024147033691
    7. ')' → logprob: -11.680024147033691
    8. '[int' → logprob: -12.930024147033691
    9. '=int' → logprob: -12.930024147033691
    10. '	int' → logprob: -13.805024147033691

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0050218175165355206
    2. '):' → logprob: -5.380022048950195
    3. ')' → logprob: -7.880022048950195
    4. ' ,' → logprob: -11.880022048950195
    5. ',int' → logprob: -12.005022048950195
    6. ',p' → logprob: -12.880022048950195
    7. '<|end|>' → logprob: -13.630022048950195
    8. ':' → logprob: -13.880022048950195
    9. '   ' → logprob: -14.130022048950195
    10. '),' → logprob: -14.880022048950195

Token 28: ' resource' (ID: 8305)
  Prédit: ' name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' name' → logprob: -0.10203666239976883
    2. ' p' → logprob: -3.102036714553833
    3. ' state' → logprob: -3.727036714553833
    4. 'name' → logprob: -4.227036476135254
    5. ' memory' → logprob: -5.727036476135254
    6. ' parent' → logprob: -5.977036476135254
    7. ' status' → logprob: -6.102036476135254
    8. ' states' → logprob: -7.227036476135254
    9. ' pname' → logprob: -7.352036476135254
    10. ' command' → logprob: -7.477036476135254

Token 29: '_ne' (ID: 35498)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0028937978204339743
    2. ':' → logprob: -6.377893924713135
    3. '_ids' → logprob: -7.502893924713135
    4. '_require' → logprob: -8.127893447875977
    5. '_id' → logprob: -8.877893447875977
    6. '_s' → logprob: -10.252893447875977
    7. '_requests' → logprob: -10.252893447875977
    8. '_usage' → logprob: -10.752893447875977
    9. '_' → logprob: -10.877893447875977
    10. '_name' → logprob: -11.002893447875977

Token 30: 'eds' (ID: 5575)
  Prédit: 'eds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eds' → logprob: -0.1728537678718567
    2. 'eded' → logprob: -1.922853708267212
    3. 'ed' → logprob: -4.422853946685791
    4. 'cess' → logprob: -8.172853469848633
    5. 'ds' → logprob: -9.047853469848633
    6. 'eding' → logprob: -9.797853469848633
    7. 'e' → logprob: -10.297853469848633
    8. 'd' → logprob: -11.547853469848633
    9. 'ces' → logprob: -11.797853469848633
    10. 't' → logprob: -12.047853469848633

Token 31: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.893480243277736e-05
    2. ')' → logprob: -10.875039100646973
    3. '):' → logprob: -11.250039100646973
    4. ' :' → logprob: -12.000039100646973
    5. ' ):' → logprob: -15.750039100646973
    6. ',' → logprob: -16.125038146972656
    7. '_:' → logprob: -16.250038146972656
    8. ' )' → logprob: -16.500038146972656
    9. ':list' → logprob: -16.875038146972656
    10. 's' → logprob: -17.000038146972656

Token 32: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.3653363287448883
    2. ' Dict' → logprob: -1.740336298942566
    3. 'List' → logprob: -2.6153364181518555
    4. 'Dict' → logprob: -2.8653364181518555
    5. ' dict' → logprob: -8.490336418151855
    6. ')' → logprob: -9.740336418151855
    7. ' Set' → logprob: -9.865336418151855
    8. 'dict' → logprob: -10.240336418151855
    9. '[List' → logprob: -10.365336418151855
    10. ' ' → logprob: -10.865336418151855

Token 33: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00016837897419463843
    2. '[' → logprob: -8.750168800354004
    3. '[List' → logprob: -11.875168800354004
    4. ' [' → logprob: -13.875168800354004
    5. '<int' → logprob: -14.250168800354004
    6. '[Int' → logprob: -14.625168800354004
    7. 'int' → logprob: -14.625168800354004
    8. '[str' → logprob: -15.125168800354004
    9. ')' → logprob: -16.500167846679688
    10. '[
' → logprob: -18.250167846679688

Token 34: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1289656162261963
    2. ')' → logprob: -2.6289656162261963
    3. ']):' → logprob: -3.1289656162261963
    4. ']' → logprob: -6.253965377807617
    5. ',' → logprob: -6.503965377807617
    6. ']:' → logprob: -7.003965377807617
    7. '])' → logprob: -8.128965377807617
    8. ' ):' → logprob: -8.628965377807617
    9. '],' → logprob: -9.128965377807617
    10. '),' → logprob: -9.503965377807617

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4014432728290558
    2. '):' → logprob: -1.6514432430267334
    3. ':' → logprob: -2.0264432430267334
    4. ')' → logprob: -5.6514434814453125
    5. 'self' → logprob: -6.2764434814453125
    6. ' ):' → logprob: -7.5264434814453125
    7. ' :' → logprob: -7.7764434814453125
    8. '   ' → logprob: -8.526443481445312
    9. ',' → logprob: -8.776443481445312
    10. ' self' → logprob: -9.276443481445312

Token 36: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.17096953094005585
    2. '       ' → logprob: -1.9209694862365723
    3. ' self' → logprob: -4.545969486236572
    4. '        ' → logprob: -10.54596996307373
    5. '   ' → logprob: -11.42096996307373
    6. ' ' → logprob: -11.67096996307373
    7. ' ' → logprob: -11.79596996307373
    8. '	self' → logprob: -11.79596996307373
    9. 'super' → logprob: -13.04596996307373
    10. '_self' → logprob: -13.04596996307373

Token 37: '.pid' (ID: 96157)
  Prédit: '.pid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pid' → logprob: -0.005248818546533585
    2. '.' → logprob: -5.2552490234375
    3. '.id' → logprob: -11.6302490234375
    4. ' .' → logprob: -13.2552490234375
    5. '.resource' → logprob: -13.5052490234375
    6. '.p' → logprob: -14.3802490234375
    7. '.pi' → logprob: -15.2552490234375
    8. '.user' → logprob: -15.2552490234375
    9. '_pid' → logprob: -15.7552490234375
    10. '._' → logprob: -15.8802490234375

Token 38: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4308023750782013
    2. '=' → logprob: -1.055802345275879
    3. '<|end|>' → logprob: -6.305802345275879
    4. ' ' → logprob: -9.430802345275879
    5. '<|end|>' → logprob: -9.680802345275879
    6. ')' → logprob: -9.680802345275879
    7. ' =)' → logprob: -10.805802345275879
    8. ':' → logprob: -11.555802345275879
    9. ',' → logprob: -11.680802345275879
    10. ' is' → logprob: -12.430802345275879

Token 39: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.251976877450943
    2. 'int' → logprob: -1.5019768476486206
    3. '=int' → logprob: -10.25197696685791
    4. ' pid' → logprob: -12.12697696685791
    5. '[int' → logprob: -13.00197696685791
    6. ':int' → logprob: -13.62697696685791
    7. ' ' → logprob: -13.75197696685791
    8. ' =' → logprob: -14.37697696685791
    9. '	int' → logprob: -15.00197696685791
    10. '=' → logprob: -15.25197696685791

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08901264518499374
    2. '=' → logprob: -2.464012622833252
    3. ' ' → logprob: -10.21401309967041
    4. '<|end|>' → logprob: -10.33901309967041
    5. '<|end|>' → logprob: -13.96401309967041
    6. ' =
' → logprob: -14.46401309967041
    7. ' =)' → logprob: -14.58901309967041
    8. '       ' → logprob: -15.08901309967041
    9. '        ' → logprob: -15.21401309967041
    10. '    ' → logprob: -15.21401309967041

Token 41: ' pid' (ID: 23462)
  Prédit: ' pid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pid' → logprob: -0.029769349843263626
    2. 'pid' → logprob: -3.5297694206237793
    3. '(pid' → logprob: -10.904768943786621
    4. '_pid' → logprob: -15.154768943786621
    5. '.pid' → logprob: -15.404768943786621
    6. ' PID' → logprob: -18.654769897460938
    7. 'Pid' → logprob: -19.154769897460938
    8. '```' → logprob: -20.154769897460938
    9. ' ' → logprob: -20.279769897460938
    10. 'id' → logprob: -20.404769897460938

Token 42: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009068199433386326
    2. 'self' → logprob: -4.759068012237549
    3. ' self' → logprob: -7.884068012237549
    4. '<|end|>' → logprob: -10.634068489074707
    5. '        ' → logprob: -10.884068489074707
    6. '        
' → logprob: -11.009068489074707
    7. '```' → logprob: -12.259068489074707
    8. '
' → logprob: -12.634068489074707
    9. ' ' → logprob: -13.259068489074707
    10. '	self' → logprob: -14.134068489074707

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010830636601895094
    2. 'self' → logprob: -7.501082897186279
    3. '<|end|>' → logprob: -7.751082897186279
    4. '        
' → logprob: -9.751083374023438
    5. ' self' → logprob: -11.001083374023438
    6. '        ' → logprob: -12.126083374023438
    7. ' ' → logprob: -12.251083374023438
    8. '      ' → logprob: -13.001083374023438
    9. '<|end|>' → logprob: -13.126083374023438
    10. '
' → logprob: -13.376083374023438

Token 44: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014421581290662289
    2. ' self' → logprob: -4.264421463012695
    3. '       ' → logprob: -8.264421463012695
    4. '	self' → logprob: -15.389421463012695
    5. ' ' → logprob: -16.139421463012695
    6. '   ' → logprob: -16.389421463012695
    7. '        ' → logprob: -17.139421463012695
    8. ' ' → logprob: -17.764421463012695
    9. '```' → logprob: -17.764421463012695
    10. 'resource' → logprob: -18.139421463012695

Token 45: '.resource' (ID: 44433)
  Prédit: '.resource'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.resource' → logprob: -0.07180855423212051
    2. '.' → logprob: -2.6968085765838623
    3. 'resource' → logprob: -7.196808338165283
    4. ' .' → logprob: -7.196808338165283
    5. '.resources' → logprob: -8.321808815002441
    6. ' resource' → logprob: -9.571808815002441
    7. '.process' → logprob: -11.571808815002441
    8. '```' → logprob: -11.821808815002441
    9. '.status' → logprob: -12.571808815002441
    10. '._' → logprob: -12.946808815002441

Token 46: '_ne' (ID: 35498)
  Prédit: '_ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ne' → logprob: -0.005445416551083326
    2. '_s' → logprob: -6.00544548034668
    3. '_' → logprob: -6.38044548034668
    4. ' _' → logprob: -7.50544548034668
    5. 's' → logprob: -8.38044548034668
    6. '_need' → logprob: -9.13044548034668
    7. '_require' → logprob: -9.38044548034668
    8. '_requires' → logprob: -10.13044548034668
    9. '_n' → logprob: -10.50544548034668
    10. '_neighbors' → logprob: -10.50544548034668

Token 47: 'eds' (ID: 5575)
  Prédit: 'eds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eds' → logprob: -3.1186566047836095e-05
    2. 'ds' → logprob: -10.875031471252441
    3. 'ads' → logprob: -13.000031471252441
    4. '```' → logprob: -13.250031471252441
    5. 'ed' → logprob: -13.750031471252441
    6. '   ' → logprob: -13.750031471252441
    7. 'e' → logprob: -14.000031471252441
    8. '=' → logprob: -14.000031471252441
    9. 'EDS' → logprob: -14.375031471252441
    10. '[' → logprob: -14.625031471252441

Token 48: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.945498526096344
    2. '=' → logprob: -1.5704984664916992
    3. '[:]' → logprob: -1.5704984664916992
    4. '[' → logprob: -1.6954984664916992
    5. ':' → logprob: -4.570498466491699
    6. '<|end|>' → logprob: -7.445498466491699
    7. '   ' → logprob: -8.0704984664917
    8. '[:' → logprob: -8.4454984664917
    9. '<|end|>' → logprob: -8.9454984664917
    10. ')' → logprob: -9.5704984664917

Token 49: ' List' (ID: 2655)
  Prédit: 'resource'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resource' → logprob: -0.47448721528053284
    2. ' resource' → logprob: -0.9744871854782104
    3. 'List' → logprob: -8.4744873046875
    4. ' List' → logprob: -8.7244873046875
    5. '[' → logprob: -11.7244873046875
    6. ' ' → logprob: -12.0994873046875
    7. '	resource' → logprob: -12.2244873046875
    8. ' []' → logprob: -12.7244873046875
    9. '(resource' → logprob: -12.9744873046875
    10. 'Resource' → logprob: -12.9744873046875

Token 50: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0064352876506745815
    2. '<|end|>' → logprob: -6.006435394287109
    3. '[' → logprob: -6.256435394287109
    4. ' =' → logprob: -7.256435394287109
    5. '=int' → logprob: -7.881435394287109
    6. '=' → logprob: -7.881435394287109
    7. '<|end|>' → logprob: -8.75643539428711
    8. '<int' → logprob: -9.00643539428711
    9. ')' → logprob: -9.75643539428711
    10. '```' → logprob: -9.88143539428711

Token 51: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008228530059568584
    2. ')' → logprob: -7.375823020935059
    3. ' ]' → logprob: -8.750823020935059
    4. ']=' → logprob: -10.375823020935059
    5. '])' → logprob: -12.750823020935059
    6. '<|end|>' → logprob: -14.250823020935059
    7. ' )' → logprob: -14.500823020935059
    8. '=' → logprob: -14.875823020935059
    9. '<|end|>' → logprob: -14.875823020935059
    10. '[' → logprob: -15.000823020935059

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687387108802795
    2. '=' → logprob: -1.1368738412857056
    3. '[:]' → logprob: -13.386874198913574
    4. ' =
' → logprob: -15.261874198913574
    5. ' ' → logprob: -15.261874198913574
    6. ' =[' → logprob: -15.886874198913574
    7. '<|end|>' → logprob: -16.011873245239258
    8. '[' → logprob: -16.261873245239258
    9. '.copy' → logprob: -16.386873245239258
    10. ')' → logprob: -16.386873245239258

Token 53: ' resource' (ID: 8305)
  Prédit: 'resource'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resource' → logprob: -0.05488566681742668
    2. ' resource' → logprob: -2.9298856258392334
    3. '	resource' → logprob: -13.679885864257812
    4. '(resource' → logprob: -14.054885864257812
    5. '[]' → logprob: -14.429885864257812
    6. '[' → logprob: -14.679885864257812
    7. ' ' → logprob: -16.554885864257812
    8. 'list' → logprob: -16.804885864257812
    9. 'Resource' → logprob: -16.929885864257812
    10. ' [' → logprob: -16.929885864257812

Token 54: '_ne' (ID: 35498)
  Prédit: '_ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ne' → logprob: -9.782141569303349e-05
    2. 'needs' → logprob: -9.25009822845459
    3. ' _' → logprob: -14.25009822845459
    4. '_need' → logprob: -15.25009822845459
    5. ' needs' → logprob: -15.37509822845459
    6. '_' → logprob: -15.75009822845459
    7. '_requires' → logprob: -16.500097274780273
    8. 's' → logprob: -17.000097274780273
    9. 'Needs' → logprob: -17.125097274780273
    10. '_needed' → logprob: -17.250097274780273

Token 55: 'eds' (ID: 5575)
  Prédit: 'eds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eds' → logprob: -1.6240566083070007e-06
    2. 'ds' → logprob: -13.875001907348633
    3. '   ' → logprob: -15.875001907348633
    4. 'ed' → logprob: -16.250001907348633
    5. 'ads' → logprob: -16.500001907348633
    6. 'e' → logprob: -16.750001907348633
    7. '=' → logprob: -16.875001907348633
    8. '[' → logprob: -17.000001907348633
    9. 'EDS' → logprob: -17.500001907348633
    10. 'ods' → logprob: -17.625001907348633

Token 56: '[:]' (ID: 194237)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36650314927101135
    2. '<|end|>' → logprob: -1.241503119468689
    3. '   ' → logprob: -4.4915032386779785
    4. '<|end|>' → logprob: -5.7415032386779785
    5. '       ' → logprob: -6.6165032386779785
    6. '    
' → logprob: -6.6165032386779785
    7. '\n' → logprob: -8.36650276184082
    8. 'def' → logprob: -9.11650276184082
    9. '

' → logprob: -9.74150276184082
    10. 'newline' → logprob: -9.86650276184082

Token 57: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' total' (ID: 3609)
  Prédit: ' copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' copy' → logprob: -0.2561136484146118
    2. 'copy' → logprob: -2.2561135292053223
    3. '[:]' → logprob: -2.5061135292053223
    4. '.copy' → logprob: -3.8811135292053223
    5. ' list' → logprob: -4.881113529205322
    6. 'Copy' → logprob: -6.131113529205322
    7. 'list' → logprob: -6.256113529205322
    8. ' Copy' → logprob: -6.381113529205322
    9. ' copying' → logprob: -7.006113529205322
    10. ' copies' → logprob: -7.256113529205322

Token 60: ' needs' (ID: 4414)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' per' (ID: 777)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' resource' (ID: 8305)
  Prédit: ' resource'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' resource' → logprob: -0.38805970549583435
    2. 'resource' → logprob: -1.1380597352981567
    3. ' process' → logprob: -7.388059616088867
    4. 'process' → logprob: -8.138059616088867
    5. '	resource' → logprob: -9.638059616088867
    6. ' ' → logprob: -9.888059616088867
    7. '_resource' → logprob: -10.638059616088867
    8. '(resource' → logprob: -11.513059616088867
    9. '<|end|>' → logprob: -11.513059616088867
    10. ' index' → logprob: -11.763059616088867

Token 63: ' kind' (ID: 3675)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1437927633523941
    2. '<|end|>' → logprob: -2.2687928676605225
    3. '
' → logprob: -4.143792629241943
    4. '        
' → logprob: -5.643792629241943
    5. '<|end|>' → logprob: -6.018792629241943
    6. '   ' → logprob: -6.643792629241943
    7. '\n' → logprob: -6.643792629241943
    8. '    
' → logprob: -6.643792629241943
    9. '```' → logprob: -6.893792629241943
    10. ',' → logprob: -7.018792629241943

Token 64: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0046860878355801105
    2. '
' → logprob: -5.754685878753662
    3. '   ' → logprob: -7.504685878753662
    4. '<|end|>' → logprob: -8.25468635559082
    5. 'self' → logprob: -8.37968635559082
    6. '        
' → logprob: -8.37968635559082
    7. '    
' → logprob: -9.25468635559082
    8. ' self' → logprob: -10.37968635559082
    9. 'def' → logprob: -10.62968635559082
    10. ',' → logprob: -11.12968635559082

Token 66: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7089343667030334
    2. 'self' (adapté à ' self') → logprob: -0.7089343667030334
    3. ' self' → logprob: -4.208934307098389
    4. '   ' → logprob: -7.833934307098389
    5. '
' → logprob: -8.958934783935547
    6. ' ' → logprob: -9.583934783935547
    7. '        
' → logprob: -9.583934783935547
    8. '	self' → logprob: -10.083934783935547
    9. 'def' → logprob: -10.833934783935547
    10. '      ' → logprob: -11.333934783935547

Token 67: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7007704377174377
    2. '.available' → logprob: -1.450770378112793
    3. '.current' → logprob: -1.825770378112793
    4. '.resource' → logprob: -2.950770378112793
    5. ' .' → logprob: -4.325770378112793
    6. '.completed' → logprob: -4.575770378112793
    7. '.all' → logprob: -4.825770378112793
    8. '.alloc' → logprob: -5.450770378112793
    9. '.claim' → logprob: -6.075770378112793
    10. '.remaining' → logprob: -6.450770378112793

Token 68: 'held' (ID: 32869)
  Prédit: 'allocation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allocation' → logprob: -0.23625177145004272
    2. 'allocated' → logprob: -1.6112518310546875
    3. 'alloc' → logprob: -5.2362518310546875
    4. 'max' → logprob: -6.4862518310546875
    5. 'current' → logprob: -6.6112518310546875
    6. 'resource' → logprob: -6.7362518310546875
    7. 'available' → logprob: -7.9862518310546875
    8. 'held' → logprob: -8.861251831054688
    9. 'finished' → logprob: -9.111251831054688
    10. 'currently' → logprob: -9.111251831054688

Token 69: '_resources' (ID: 85099)
  Prédit: '_resources'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_resources' → logprob: -0.05559147521853447
    2. ':' → logprob: -2.930591583251953
    3. '_res' → logprob: -8.930591583251953
    4. 'resources' → logprob: -9.055591583251953
    5. '_resource' → logprob: -9.180591583251953
    6. '_tokens' → logprob: -9.180591583251953
    7. '_' → logprob: -10.055591583251953
    8. '_amount' → logprob: -10.430591583251953
    9. '_counts' → logprob: -10.680591583251953
    10. ' :' → logprob: -10.930591583251953

Token 70: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007309010834433138
    2. ' =' → logprob: -7.750730991363525
    3. '=' → logprob: -8.750730514526367
    4. ' :' → logprob: -8.875730514526367
    5. ':int' → logprob: -14.375730514526367
    6. '[:]' → logprob: -14.750730514526367
    7. '   ' → logprob: -14.875730514526367
    8. '=[]' → logprob: -15.750730514526367
    9. '[' → logprob: -15.875730514526367
    10. ' ' → logprob: -16.375730514526367

Token 71: ' List' (ID: 2655)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.07893066108226776
    2. ' List' → logprob: -3.328930616378784
    3. '[' → logprob: -3.703930616378784
    4. '[List' → logprob: -4.703930854797363
    5. 'List' → logprob: -5.078930854797363
    6. '[int' → logprob: -9.203930854797363
    7. ' ' → logprob: -10.453930854797363
    8. ' []' → logprob: -11.453930854797363
    9. '[]' → logprob: -12.328930854797363
    10. '[Int' → logprob: -12.828930854797363

Token 72: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.004835226573050022
    2. ' =' → logprob: -5.62983512878418
    3. '=int' → logprob: -8.12983512878418
    4. '(int' → logprob: -8.37983512878418
    5. '=' → logprob: -8.50483512878418
    6. '<int' → logprob: -8.50483512878418
    7. '=[]' → logprob: -8.87983512878418
    8. '[' → logprob: -10.12983512878418
    9. '[:]' → logprob: -10.25483512878418
    10. ':' → logprob: -10.37983512878418

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12851537764072418
    2. ' =' → logprob: -2.6285154819488525
    3. '=' → logprob: -3.2535154819488525
    4. ')' → logprob: -4.878515243530273
    5. ']=' → logprob: -6.503515243530273
    6. ' ]' → logprob: -7.628515243530273
    7. '       ' → logprob: -9.878515243530273
    8. ' ' → logprob: -10.753515243530273
    9. '=[]' → logprob: -11.128515243530273
    10. '   ' → logprob: -11.253515243530273

Token 74: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.313268780708313
    2. '=' → logprob: -1.313268780708313
    3. '=[]' → logprob: -12.938268661499023
    4. ':' → logprob: -13.313268661499023
    5. ' =[' → logprob: -13.688268661499023
    6. '   ' → logprob: -14.063268661499023
    7. ' ' → logprob: -14.313268661499023
    8. '=[' → logprob: -16.438268661499023
    9. '[:]' → logprob: -16.563268661499023
    10. '<|end|>' → logprob: -16.563268661499023

Token 75: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4741007387638092
    2. ' [' → logprob: -0.9741007089614868
    3. '[len' → logprob: -11.474101066589355
    4. ' ' → logprob: -12.474101066589355
    5. ' resource' → logprob: -12.474101066589355
    6. 'resource' → logprob: -13.474101066589355
    7. '   ' → logprob: -13.724101066589355
    8. '[]' → logprob: -14.224101066589355
    9. '0' → logprob: -14.849101066589355
    10. '[int' → logprob: -15.099101066589355

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.750001907348633
    4. '۰' → logprob: -18.750001907348633
    5. ')' → logprob: -19.375001907348633
    6. ']' → logprob: -19.500001907348633
    7. '       ' → logprob: -20.062501907348633
    8. '           ' → logprob: -20.125001907348633
    9. '```' → logprob: -20.562501907348633
    10. '٠' → logprob: -20.625001907348633

Token 77: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.035061534494161606
    2. ' for' → logprob: -3.6600615978240967
    3. ',' → logprob: -5.535061359405518
    4. ' ]' → logprob: -6.035061359405518
    5. ']*' → logprob: -6.160061359405518
    6. 'for' → logprob: -8.660061836242676
    7. ')' → logprob: -9.910061836242676
    8. ' ' → logprob: -11.160061836242676
    9. '<|end|>' → logprob: -11.785061836242676
    10. ']int' → logprob: -12.285061836242676

Token 78: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -7.226628895296017e-06
    2. ' len' → logprob: -12.000007629394531
    3. '(len' → logprob: -13.750007629394531
    4. '   ' → logprob: -20.62500762939453
    5. '4' → logprob: -20.75000762939453
    6. '	len' → logprob: -20.75000762939453
    7. '6' → logprob: -20.87500762939453
    8. ' ' → logprob: -21.75000762939453
    9. '=len' → logprob: -21.87500762939453
    10. '3' → logprob: -22.37500762939453

Token 79: '(resource' (ID: 45668)
  Prédit: '(resource'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(resource' → logprob: -6.313314952421933e-05
    2. '(' → logprob: -10.125062942504883
    3. '(self' → logprob: -11.000062942504883
    4. '(resources' → logprob: -12.375062942504883
    5. 'resource' → logprob: -13.500062942504883
    6. '(res' → logprob: -14.875062942504883
    7. '(Resource' → logprob: -15.625062942504883
    8. ' (' → logprob: -15.875062942504883
    9. ' resource' → logprob: -17.625062942504883
    10. '(process' → logprob: -18.375062942504883

Token 80: '_ne' (ID: 35498)
  Prédit: '_ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ne' → logprob: -4.320199877838604e-07
    2. 'needs' → logprob: -14.875
    3. '_need' → logprob: -16.875
    4. '_' → logprob: -18.0
    5. '_needed' → logprob: -18.625
    6. ' needs' → logprob: -19.625
    7. '_resources' → logprob: -19.75
    8. '_me' → logprob: -19.875
    9. ' _' → logprob: -20.0
    10. '\' → logprob: -20.25

Token 81: 'eds' (ID: 5575)
  Prédit: 'eds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eds' → logprob: -2.2603901015827432e-05
    2. 'ds' → logprob: -11.750022888183594
    3. 'e' → logprob: -12.000022888183594
    4. '   ' → logprob: -13.250022888183594
    5. 'ed' → logprob: -13.375022888183594
    6. '```' → logprob: -14.000022888183594
    7. 'ads' → logprob: -14.250022888183594
    8. ')' → logprob: -15.125022888183594
    9. '_' → logprob: -15.250022888183594
    10. '_ds' → logprob: -15.375022888183594

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.9040898880339228e-05
    2. ' )' → logprob: -10.500028610229492
    3. ')
' → logprob: -13.875028610229492
    4. '       ' → logprob: -15.750028610229492
    5. '   ' → logprob: -16.000028610229492
    6. ']' → logprob: -16.500028610229492
    7. '),' → logprob: -17.750028610229492
    8. '))' → logprob: -18.000028610229492
    9. ')

' → logprob: -18.000028610229492
    10. '}' → logprob: -18.250028610229492

Token 83: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0583512783050537
    2. '<|end|>' → logprob: -1.1833512783050537
    3. '
' → logprob: -1.4333512783050537
    4. '       ' → logprob: -2.8083512783050537
    5. '    
' → logprob: -3.5583512783050537
    6. '\n' → logprob: -5.808351516723633
    7. '        
' → logprob: -6.058351516723633
    8. ' 
' → logprob: -6.183351516723633
    9. '```' → logprob: -6.308351516723633
    10. ' ' → logprob: -6.308351516723633

Token 84: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' currently' (ID: 6821)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.16961964964866638
    2. '[' → logprob: -2.169619560241699
    3. ' ' → logprob: -4.044619560241699
    4. '0' → logprob: -4.919619560241699
    5. ' resource' → logprob: -5.294619560241699
    6. '[:]' → logprob: -5.419619560241699
    7. 'resource' → logprob: -6.294619560241699
    8. ' []' → logprob: -6.794619560241699
    9. '[]' → logprob: -7.419619560241699
    10. '    ' → logprob: -7.419619560241699

Token 86: ' held' (ID: 7504)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' instances' (ID: 23490)
  Prédit: '_resources'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_resources' → logprob: -0.5493888258934021
    2. '<|end|>' → logprob: -1.1743888854980469
    3. '_' → logprob: -3.174388885498047
    4. ' ' → logprob: -3.549388885498047
    5. 'resources' → logprob: -3.924388885498047
    6. ' resources' → logprob: -4.174388885498047
    7. '<|end|>' → logprob: -5.174388885498047
    8. '_resource' → logprob: -8.049388885498047
    9. '_tokens' → logprob: -8.299388885498047
    10. 'Resources' → logprob: -8.549388885498047

Token 88: ' per' (ID: 777)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: ' resource' (ID: 8305)
  Prédit: ' resource'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' resource' → logprob: -0.18033695220947266
    2. 'resource' → logprob: -1.8053369522094727
    3. ' ' → logprob: -8.055336952209473
    4. '_resource' → logprob: -9.680336952209473
    5. ' )' → logprob: -10.180336952209473
    6. '	resource' → logprob: -10.305336952209473
    7. '<|end|>' → logprob: -10.305336952209473
    8. ')' → logprob: -10.680336952209473
    9. '(resource' → logprob: -10.680336952209473
    10. '.resource' → logprob: -11.555336952209473

Token 90: ' kind' (ID: 3675)
  Prédit: 'kind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kind' → logprob: -0.5230218172073364
    2. '_kind' → logprob: -1.5230218172073364
    3. '<|end|>' → logprob: -2.648021697998047
    4. ' kind' → logprob: -2.648021697998047
    5. ')' → logprob: -4.273021697998047
    6. '[' → logprob: -4.898021697998047
    7. 'type' → logprob: -5.523021697998047
    8. ' type' → logprob: -5.648021697998047
    9. '  ' → logprob: -6.023021697998047
    10. '<|end|>' → logprob: -6.148021697998047

Token 91: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8410453796386719
    2. '<|end|>' → logprob: -0.8410453796386719
    3. '   ' → logprob: -2.091045379638672
    4. '    
' → logprob: -4.841045379638672
    5. ' ' → logprob: -6.466045379638672
    6. ' 
' → logprob: -6.841045379638672
    7. '<|end|>' → logprob: -7.091045379638672
    8. '\n' → logprob: -7.216045379638672
    9. '  
' → logprob: -8.091045379638672
    10. '```' → logprob: -8.216045379638672

Token 93: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30807507038116455
    2. '<|end|>' → logprob: -1.5580750703811646
    3. '   ' → logprob: -3.808074951171875
    4. '       ' → logprob: -3.808074951171875
    5. '    
' → logprob: -5.808074951171875
    6. ' ' → logprob: -6.058074951171875
    7. '\n' → logprob: -7.183074951171875
    8. '<|end|>' → logprob: -7.433074951171875
    9. ' 
' → logprob: -7.558074951171875
    10. 'def' → logprob: -7.558074951171875

Token 94: '.finished' (ID: 182736)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05839858576655388
    2. '.is' → logprob: -3.808398485183716
    3. ' .' → logprob: -4.183398723602295
    4. '.available' → logprob: -4.808398723602295
    5. '.status' → logprob: -5.808398723602295
    6. '.completed' → logprob: -6.808398723602295
    7. '.lock' → logprob: -6.933398723602295
    8. '.wait' → logprob: -7.183398723602295
    9. '.current' → logprob: -7.683398723602295
    10. '.has' → logprob: -7.808398723602295

Token 95: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04756496101617813
    2. '=' → logprob: -3.54756498336792
    3. ':' → logprob: -4.04756498336792
    4. ' :' → logprob: -9.297564506530762
    5. '=False' → logprob: -9.547564506530762
    6. ' ' → logprob: -10.922564506530762
    7. '<|end|>' → logprob: -12.047564506530762
    8. '  ' → logprob: -13.797564506530762
    9. ',' → logprob: -14.047564506530762
    10. ')' → logprob: -14.172564506530762

Token 96: ' bool' (ID: 3792)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.006718809716403484
    2. 'False' → logprob: -5.006718635559082
    3. ' ' → logprob: -13.256718635559082
    4. '=False' → logprob: -13.631718635559082
    5. ' bool' → logprob: -15.006718635559082
    6. ' True' → logprob: -16.3817195892334
    7. ' false' → logprob: -17.5067195892334
    8. '(False' → logprob: -17.6317195892334
    9. ' =' → logprob: -19.2567195892334
    10. '_false' → logprob: -19.8817195892334

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023258056491613388
    2. '=' → logprob: -3.7732579708099365
    3. ':' → logprob: -11.773258209228516
    4. ' ' → logprob: -12.898258209228516
    5. '=False' → logprob: -13.273258209228516
    6. ' :' → logprob: -14.773258209228516
    7. '  ' → logprob: -16.148258209228516
    8. '=True' → logprob: -16.898258209228516
    9. '   ' → logprob: -17.273258209228516
    10. ' =
' → logprob: -17.398258209228516

Token 98: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.03804149478673935
    2. 'False' → logprob: -3.288041591644287
    3. '=False' → logprob: -19.288042068481445
    4. '(False' → logprob: -19.538042068481445
    5. ' True' → logprob: -21.038042068481445
    6. ' ' → logprob: -21.913042068481445
    7. ' false' → logprob: -22.788042068481445
    8. '.False' → logprob: -23.038042068481445
    9. '   ' → logprob: -23.163042068481445
    10. '_false' → logprob: -23.413042068481445

Token 99: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32495051622390747
    2. '   ' → logprob: -1.6999504566192627
    3. '<|end|>' → logprob: -2.5749504566192627
    4. '    
' → logprob: -4.574950695037842
    5. ' ' → logprob: -6.199950695037842
    6. '\n' → logprob: -6.574950695037842
    7. ' 
' → logprob: -6.699950695037842
    8. '' → logprob: -7.199950695037842
    9. '       ' → logprob: -7.699950695037842
    10. '<|end|>' → logprob: -7.949950695037842

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6178748607635498
    2. '
' → logprob: -0.8678748607635498
    3. '    
' → logprob: -3.61787486076355
    4. '<|end|>' → logprob: -5.242875099182129
    5. ' 
' → logprob: -5.742875099182129
    6. ' ' → logprob: -6.742875099182129
    7. '

' → logprob: -7.117875099182129
    8. '\n' → logprob: -7.117875099182129
    9. 'def' → logprob: -7.242875099182129
    10. '  
' → logprob: -7.617875099182129

Token 101: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2355923354625702
    2. 'def' (adapté à ' def') → logprob: -1.7355923652648926
    3. ' def' → logprob: -3.7355923652648926
    4. '    
' → logprob: -5.360592365264893
    5. '
' → logprob: -5.735592365264893
    6. ' 
' → logprob: -7.235592365264893
    7. '<|end|>' → logprob: -7.860592365264893
    8. '    ' → logprob: -8.735591888427734
    9. ' ' → logprob: -8.735591888427734
    10. '  ' → logprob: -8.860591888427734

Token 102: ' need' (ID: 1309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10625023394823074
    2. ' space' → logprob: -3.231250286102295
    3. '_' → logprob: -3.606250286102295
    4. ' acquire' → logprob: -4.481250286102295
    5. ' _' → logprob: -4.606250286102295
    6. ' check' → logprob: -5.481250286102295
    7. ' def' → logprob: -7.106250286102295
    8. ' can' → logprob: -7.106250286102295
    9. ' continue' → logprob: -7.481250286102295
    10. ' has' → logprob: -7.481250286102295

Token 103: '(self' (ID: 2402)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16869157552719116
    2. '(self' → logprob: -2.043691635131836
    3. '(' → logprob: -3.793691635131836
    4. '_' → logprob: -6.668691635131836
    5. 'self' → logprob: -7.293691635131836
    6. '()' → logprob: -7.543691635131836
    7. '(s' → logprob: -7.793691635131836
    8. '_s' → logprob: -10.043691635131836
    9. ':' → logprob: -10.168691635131836
    10. '(
' → logprob: -10.293691635131836

Token 104: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11629382520914078
    2. ')' → logprob: -2.3662939071655273
    3. '(' → logprob: -5.116293907165527
    4. 'self' → logprob: -5.241293907165527
    5. '[self' → logprob: -5.991293907165527
    6. '[' → logprob: -7.741293907165527
    7. '()' → logprob: -7.741293907165527
    8. 's' → logprob: -7.866293907165527
    9. ',' → logprob: -7.866293907165527
    10. '):' → logprob: -8.991293907165527

Token 105: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2553284168243408
    2. '(' → logprob: -1.6303284168243408
    3. '[self' → logprob: -5.380328178405762
    4. ':' → logprob: -5.380328178405762
    5. '():' → logprob: -5.380328178405762
    6. 'self' → logprob: -5.505328178405762
    7. '[' → logprob: -5.505328178405762
    8. '()' → logprob: -5.755328178405762
    9. ')' → logprob: -6.505328178405762
    10. '   ' → logprob: -7.380328178405762

Token 106: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.25261104106903076
    2. 'List' → logprob: -1.5026110410690308
    3. '[List' → logprob: -7.37761116027832
    4. '[' → logprob: -10.62761116027832
    5. '   ' → logprob: -11.25261116027832
    6. ' [' → logprob: -11.75261116027832
    7. ' ' → logprob: -12.25261116027832
    8. '    ' → logprob: -13.12761116027832
    9. '	List' → logprob: -13.25261116027832
    10. '  ' → logprob: -13.50261116027832

Token 107: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.004385132808238268
    2. '[' → logprob: -5.504384994506836
    3. '<|end|>' → logprob: -8.879384994506836
    4. '<int' → logprob: -9.504384994506836
    5. '[Int' → logprob: -9.879384994506836
    6. 'int' → logprob: -11.129384994506836
    7. '[
' → logprob: -11.379384994506836
    8. '<|end|>' → logprob: -12.629384994506836
    9. '(int' → logprob: -12.879384994506836
    10. ']int' → logprob: -12.879384994506836

Token 108: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05692795664072037
    2. '):' → logprob: -3.3069279193878174
    3. ']:' → logprob: -4.0569281578063965
    4. '():' → logprob: -7.0569281578063965
    5. '>:' → logprob: -8.056927680969238
    6. ':
' → logprob: -9.181927680969238
    7. '):
' → logprob: -10.306927680969238
    8. '}:' → logprob: -10.556927680969238
    9. ' :' → logprob: -10.931927680969238
    10. ':**' → logprob: -11.431927680969238

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04900470748543739
    2. ' return' → logprob: -3.4240047931671143
    3. 'return' → logprob: -5.299004554748535
    4. '[' → logprob: -5.924004554748535
    5. '<|end|>' → logprob: -5.924004554748535
    6. '   ' → logprob: -6.299004554748535
    7. ' ' → logprob: -7.299004554748535
    8. '        
' → logprob: -7.674004554748535
    9. '
' → logprob: -8.424004554748535
    10. '    ' → logprob: -8.549004554748535

Token 110: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3296295702457428
    2. '       ' → logprob: -1.4546295404434204
    3. ' return' → logprob: -3.07962965965271
    4. '[' → logprob: -7.329629421234131
    5. '   ' → logprob: -7.954629421234131
    6. '        
' → logprob: -8.829629898071289
    7. 'result' → logprob: -9.329629898071289
    8. '	return' → logprob: -11.079629898071289
    9. ' ' → logprob: -11.204629898071289
    10. '[]' → logprob: -11.329629898071289

Token 111: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2671930193901062
    2. '[self' → logprob: -2.017193078994751
    3. ' [' → logprob: -2.517193078994751
    4. '[i' → logprob: -5.267192840576172
    5. '[int' → logprob: -5.767192840576172
    6. '[len' → logprob: -6.142192840576172
    7. '[max' → logprob: -6.767192840576172
    8. '[result' → logprob: -7.017192840576172
    9. '[token' → logprob: -7.142192840576172
    10. '[count' → logprob: -7.392192840576172

Token 112: 'need' (ID: 24630)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05062827095389366
    2. 'need' → logprob: -3.675628185272217
    3. 'max' → logprob: -4.175628185272217
    4. 'n' → logprob: -5.300628185272217
    5. 'r' → logprob: -5.925628185272217
    6. 'rn' → logprob: -7.675628185272217
    7. ' self' → logprob: -8.425628662109375
    8. 'req' → logprob: -9.175628662109375
    9. 'needed' → logprob: -9.300628662109375
    10. 'nr' → logprob: -10.300628662109375

Token 113: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.013521935790777206
    2. '-' → logprob: -4.513522148132324
    3. 'd' → logprob: -6.138522148132324
    4. 'ed' → logprob: -8.638522148132324
    5. '-d' → logprob: -9.263522148132324
    6. 's' → logprob: -11.013522148132324
    7. '-ed' → logprob: -11.388522148132324
    8. '-i' → logprob: -13.263522148132324
    9. 'er' → logprob: -13.263522148132324
    10. ' for' → logprob: -13.388522148132324

Token 114: ' held' (ID: 7504)
  Prédit: 'held'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'held' → logprob: -0.4018382430076599
    2. ' held' → logprob: -1.1518383026123047
    3. ' hold' → logprob: -4.651838302612305
    4. 'hold' → logprob: -5.276838302612305
    5. 'h' → logprob: -9.526838302612305
    6. ' h' → logprob: -10.151838302612305
    7. 'have' → logprob: -10.151838302612305
    8. ' have' → logprob: -10.276838302612305
    9. '-held' → logprob: -11.401838302612305
    10. 'hr' → logprob: -13.901838302612305

Token 115: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.01491857971996069
    2. 'for' → logprob: -4.264918804168701
    3. ' ' → logprob: -8.139918327331543
    4. '_' → logprob: -8.264918327331543
    5. '_resources' → logprob: -8.639918327331543
    6. '	for' → logprob: -11.514918327331543
    7. '
' → logprob: -12.014918327331543
    8. '_resource' → logprob: -12.139918327331543
    9. '_for' → logprob: -12.764918327331543
    10. '   ' → logprob: -13.514918327331543

Token 116: ' need' (ID: 1309)
  Prédit: ' need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.02672543004155159
    2. 'need' → logprob: -3.6517255306243896
    3. ',' → logprob: -7.7767252922058105
    4. ' nee' → logprob: -13.151725769042969
    5. '_need' → logprob: -13.526725769042969
    6. 'Need' → logprob: -14.776725769042969
    7. ' ,' → logprob: -14.901725769042969
    8. 'n' → logprob: -15.151725769042969
    9. 'nee' → logprob: -15.276725769042969
    10. ' hold' → logprob: -15.276725769042969

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.180258191714529e-06
    2. ' ,' → logprob: -12.000008583068848
    3. ',_' → logprob: -13.875008583068848
    4. '_,' → logprob: -14.375008583068848
    5. ' in' → logprob: -15.125008583068848
    6. ',in' → logprob: -17.00000762939453
    7. ',
' → logprob: -17.25000762939453
    8. 'ed' → logprob: -17.50000762939453
    9. 'need' → logprob: -18.25000762939453
    10. ',user' → logprob: -18.62500762939453

Token 118: ' held' (ID: 7504)
  Prédit: ' held'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' held' → logprob: -0.1602337658405304
    2. 'held' → logprob: -1.910233736038208
    3. '-held' → logprob: -11.910233497619629
    4. 'hold' → logprob: -13.410233497619629
    5. ' hold' → logprob: -14.160233497619629
    6. ' ' → logprob: -14.910233497619629
    7. '```' → logprob: -16.285234451293945
    8. 'Held' → logprob: -17.285234451293945
    9. '    
' → logprob: -17.410234451293945
    10. ' he' → logprob: -17.535234451293945

Token 119: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05488893762230873
    2. 'in' → logprob: -2.929888963699341
    3. ',' → logprob: -12.804888725280762
    4. ' ' → logprob: -12.929888725280762
    5. '
' → logprob: -15.054888725280762
    6. '  ' → logprob: -15.429888725280762
    7. '	in' → logprob: -15.429888725280762
    8. '   ' → logprob: -16.304889678955078
    9. '_in' → logprob: -16.429889678955078
    10. 'In' → logprob: -16.679889678955078

Token 120: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.048594411462545395
    2. ' zip' → logprob: -3.0485944747924805
    3. '(zip' → logprob: -11.92359447479248
    4. '.zip' → logprob: -15.67359447479248
    5. '_zip' → logprob: -15.67359447479248
    6. 'z' → logprob: -18.298593521118164
    7. ' ' → logprob: -19.423593521118164
    8. 'zi' → logprob: -19.548593521118164
    9. 'Zip' → logprob: -20.298593521118164
    10. '   ' → logprob: -20.798593521118164

Token 121: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.611323624383658e-05
    2. '(' → logprob: -9.625065803527832
    3. ' (' → logprob: -17.12506675720215
    4. '(this' → logprob: -17.75006675720215
    5. 'self' → logprob: -17.87506675720215
    6. '(
' → logprob: -18.12506675720215
    7. '((' → logprob: -18.75006675720215
    8. '(Self' → logprob: -20.12506675720215
    9. '<|end|>' → logprob: -20.50006675720215
    10. ' self' → logprob: -20.87506675720215

Token 122: '.resource' (ID: 44433)
  Prédit: '.resource'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.resource' → logprob: -0.0003788376343436539
    2. 'resource' → logprob: -8.000378608703613
    3. '.' → logprob: -10.250378608703613
    4. ' .' → logprob: -13.375378608703613
    5. '.user' → logprob: -13.625378608703613
    6. '.res' → logprob: -13.750378608703613
    7. '.process' → logprob: -14.250378608703613
    8. '.product' → logprob: -14.500378608703613
    9. '	resource' → logprob: -14.500378608703613
    10. '.resources' → logprob: -14.875378608703613

Token 123: '_ne' (ID: 35498)
  Prédit: '_ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ne' → logprob: -8.41866585687967e-06
    2. 'needs' → logprob: -11.750008583068848
    3. '_need' → logprob: -15.250008583068848
    4. '_needed' → logprob: -16.75000762939453
    5. ' needs' → logprob: -16.87500762939453
    6. 'Needs' → logprob: -17.25000762939453
    7. ' _' → logprob: -17.37500762939453
    8. '_' → logprob: -17.50000762939453
    9. 's' → logprob: -17.50000762939453
    10. '_n' → logprob: -17.87500762939453

Token 124: 'eds' (ID: 5575)
  Prédit: 'eds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eds' → logprob: -0.00024989593657664955
    2. 'ds' → logprob: -9.125249862670898
    3. 'e' → logprob: -9.875249862670898
    4. 'ed' → logprob: -11.125249862670898
    5. '```' → logprob: -11.125249862670898
    6. '   ' → logprob: -11.375249862670898
    7. '_' → logprob: -12.375249862670898
    8. 's' → logprob: -12.500249862670898
    9. '
' → logprob: -12.562749862670898
    10. ')' → logprob: -12.625249862670898

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0026011031586676836
    2. ' ,' → logprob: -6.127601146697998
    3. ',self' → logprob: -8.25260066986084
    4. 'self' → logprob: -9.00260066986084
    5. '(self' → logprob: -11.12760066986084
    6. ' self' → logprob: -11.50260066986084
    7. ',
' → logprob: -12.25260066986084
    8. '[self' → logprob: -14.62760066986084
    9. '(),' → logprob: -15.00260066986084
    10. 's' → logprob: -15.25260066986084

Token 126: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05490609258413315
    2. ' self' → logprob: -2.929906129837036
    3. '(self' → logprob: -11.304905891418457
    4. '[self' → logprob: -12.679905891418457
    5. '       ' → logprob: -13.054905891418457
    6. '	self' → logprob: -13.179905891418457
    7. '   ' → logprob: -13.929905891418457
    8. '=self' → logprob: -14.429905891418457
    9. '    ' → logprob: -14.554905891418457
    10. '           ' → logprob: -14.929905891418457

Token 127: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5690089639974758e-05
    2. ' .' → logprob: -11.500015258789062
    3. 'held' → logprob: -12.250015258789062
    4. ' held' → logprob: -15.500015258789062
    5. '.he' → logprob: -16.375015258789062
    6. '.h' → logprob: -16.750015258789062
    7. '​.' → logprob: -16.750015258789062
    8. ').' → logprob: -17.000015258789062
    9. '
' → logprob: -17.000015258789062
    10. '.
' → logprob: -17.625015258789062

Token 128: 'held' (ID: 32869)
  Prédit: 'held'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'held' → logprob: -9.186122770188376e-05
    2. ' held' → logprob: -10.000091552734375
    3. '.' → logprob: -11.375091552734375
    4. 'he' → logprob: -11.750091552734375
    5. 'self' → logprob: -12.125091552734375
    6. '-held' → logprob: -12.250091552734375
    7. 'hel' → logprob: -12.875091552734375
    8. 'hold' → logprob: -13.125091552734375
    9. ')' → logprob: -13.500091552734375
    10. '```' → logprob: -13.625091552734375

Token 129: '_resources' (ID: 85099)
  Prédit: '_resources'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_resources' → logprob: -2.4987974029500037e-05
    2. 'resources' → logprob: -11.250024795532227
    3. 'Resources' → logprob: -12.375024795532227
    4. ')' → logprob: -12.875024795532227
    5. '_' → logprob: -13.500024795532227
    6. '_res' → logprob: -13.750024795532227
    7. 's' → logprob: -14.750024795532227
    8. '   ' → logprob: -15.250024795532227
    9. '

' → logprob: -15.250024795532227
    10. '
' → logprob: -15.500024795532227

Token 130: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.049755782238208e-05
    2. ' )' → logprob: -10.62505054473877
    3. ')' → logprob: -10.75005054473877
    4. ')]
' → logprob: -12.75005054473877
    5. ')]

' → logprob: -14.12505054473877
    6. ']' → logprob: -14.37505054473877
    7. ' ' → logprob: -15.62505054473877
    8. ')])' → logprob: -16.875049591064453
    9. ')],' → logprob: -17.000049591064453
    10. '   ' → logprob: -17.125049591064453

Token 131: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39216962456703186
    2. '<|end|>' → logprob: -1.2671695947647095
    3. '   ' → logprob: -3.392169713973999
    4. '    
' → logprob: -5.64216947555542
    5. ' 
' → logprob: -6.14216947555542
    6. '```' → logprob: -7.01716947555542
    7. '\n' → logprob: -7.14216947555542
    8. '<|end|>' → logprob: -7.39216947555542
    9. '  
' → logprob: -7.64216947555542
    10. ' ' → logprob: -8.892169952392578

Token 132: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.7674389481544495
    2. '   ' → logprob: -0.8924389481544495
    3. '
' → logprob: -2.5174388885498047
    4. '    
' → logprob: -4.017438888549805
    5. '<|end|>' → logprob: -4.517438888549805
    6. ' def' → logprob: -4.642438888549805
    7. ' 
' → logprob: -5.642438888549805
    8. ' ' → logprob: -6.767438888549805
    9. '  
' → logprob: -7.767438888549805
    10. '        
' → logprob: -8.392438888549805

Token 133: ' is' (ID: 382)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.6343005895614624
    2. 'can' → logprob: -1.1343005895614624
    3. ' request' → logprob: -3.009300708770752
    4. 'request' → logprob: -3.134300708770752
    5. ' is' → logprob: -3.259300708770752
    6. 'is' → logprob: -4.884300708770752
    7. ' allocate' → logprob: -5.759300708770752
    8. 'allocate' → logprob: -6.134300708770752
    9. ' safe' → logprob: -7.509300708770752
    10. 'def' → logprob: -8.009300231933594

Token 134: '_finished' (ID: 143523)
  Prédit: '_finished'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_finished' → logprob: -0.01927407644689083
    2. '_safe' → logprob: -4.6442742347717285
    3. '_' → logprob: -5.8942742347717285
    4. '_complete' → logprob: -6.1442742347717285
    5. '_s' → logprob: -6.7692742347717285
    6. '_finish' → logprob: -7.2692742347717285
    7. '_completed' → logprob: -7.5192742347717285
    8. '_ready' → logprob: -7.5192742347717285
    9. '_alive' → logprob: -8.01927375793457
    10. 'finished' → logprob: -8.26927375793457

Token 135: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001546406652778387
    2. ' (' → logprob: -7.001546382904053
    3. '(' → logprob: -7.376546382904053
    4. 'self' → logprob: -12.751546859741211
    5. '()' → logprob: -12.876546859741211
    6. '(
' → logprob: -13.251546859741211
    7. ' ' → logprob: -14.001546859741211
    8. '(s' → logprob: -14.876546859741211
    9. ' self' → logprob: -15.251546859741211
    10. '(

' → logprob: -15.751546859741211

Token 136: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013556641526520252
    2. 'self' → logprob: -5.013556480407715
    3. '):' → logprob: -5.763556480407715
    4. ' )' → logprob: -6.138556480407715
    5. '(self' → logprob: -7.013556480407715
    6. ' ' → logprob: -8.638556480407715
    7. '):
' → logprob: -9.138556480407715
    8. '()' → logprob: -9.263556480407715
    9. ',' → logprob: -9.638556480407715
    10. '   ' → logprob: -9.888556480407715

Token 137: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006063532549887896
    2. ' ->' → logprob: -6.006063461303711
    3. 'self' → logprob: -6.256063461303711
    4. '(' → logprob: -7.131063461303711
    5. ' self' → logprob: -8.131063461303711
    6. ' (' → logprob: -8.506063461303711
    7. ')' → logprob: -9.131063461303711
    8. ':' → logprob: -9.256063461303711
    9. '->' → logprob: -9.381063461303711
    10. '       ' → logprob: -10.631063461303711

Token 138: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.043050117790699005
    2. 'bool' → logprob: -3.1680500507354736
    3. ' ' → logprob: -10.543049812316895
    4. '<bool' → logprob: -11.543049812316895
    5. ' True' → logprob: -11.793049812316895
    6. '(bool' → logprob: -13.543049812316895
    7. 'Bool' → logprob: -13.543049812316895
    8. '	bool' → logprob: -13.918049812316895
    9. '_bool' → logprob: -13.918049812316895
    10. '<|end|>' → logprob: -14.168049812316895

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.044007882475852966
    2. '():' → logprob: -3.1690077781677246
    3. ':
' → logprob: -8.044008255004883
    4. ':return' → logprob: -8.669008255004883
    5. '):' → logprob: -9.044008255004883
    6. '<|end|>' → logprob: -9.169008255004883
    7. '(' → logprob: -9.294008255004883
    8. ' :' → logprob: -9.794008255004883
    9. '(self' → logprob: -9.919008255004883
    10. '():
' → logprob: -10.544008255004883

Token 140: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028616664931178093
    2. '
' → logprob: -4.278616428375244
    3. ' return' → logprob: -4.403616428375244
    4. 'return' → logprob: -7.403616428375244
    5. ' 
' → logprob: -7.528616428375244
    6. '        
' → logprob: -7.653616428375244
    7. '   ' → logprob: -8.528616905212402
    8. '    
' → logprob: -9.278616905212402
    9. '<|end|>' → logprob: -9.528616905212402
    10. '    ' → logprob: -10.403616905212402

Token 141: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15545418858528137
    2. 'return' (adapté à ' return') → logprob: -2.405454158782959
    3. ' self' → logprob: -3.155454158782959
    4. ' return' → logprob: -4.780454158782959
    5. '       ' → logprob: -5.905454158782959
    6. '   ' → logprob: -11.780454635620117
    7. '
' → logprob: -13.030454635620117
    8. '[self' → logprob: -14.530454635620117
    9. '	self' → logprob: -14.530454635620117
    10. ' ' → logprob: -14.655454635620117

Token 142: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.04859054833650589
    2. 'self' → logprob: -3.048590660095215
    3. ' ' → logprob: -13.798590660095215
    4. '	self' → logprob: -13.923590660095215
    5. ' all' → logprob: -15.173590660095215
    6. ' True' → logprob: -15.173590660095215
    7. '(self' → logprob: -16.0485897064209
    8. '   ' → logprob: -16.0485897064209
    9. '_self' → logprob: -16.2985897064209
    10. '       ' → logprob: -16.4235897064209

Token 143: '.finished' (ID: 182736)
  Prédit: '.finished'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.finished' → logprob: -0.005414585117250681
    2. '.' → logprob: -5.2554144859313965
    3. 'finished' → logprob: -9.380414962768555
    4. ' .' → logprob: -10.380414962768555
    5. '.finish' → logprob: -10.630414962768555
    6. '.completed' → logprob: -11.255414962768555
    7. '.fin' → logprob: -11.255414962768555
    8. '.f' → logprob: -11.380414962768555
    9. '.done' → logprob: -14.130414962768555
    10. 'Finished' → logprob: -14.130414962768555

Token 144: ' or' (ID: 503)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13245734572410583
    2. '<|end|>' → logprob: -2.1324572563171387
    3. '

' → logprob: -5.882457256317139
    4. '\n' → logprob: -6.882457256317139
    5. '<|end|>' → logprob: -7.382457256317139
    6. '    
' → logprob: -7.757457256317139
    7. '   ' → logprob: -7.882457256317139
    8. '
    
' → logprob: -9.382457733154297
    9. '  
' → logprob: -10.382457733154297
    10. 'newline' → logprob: -10.382457733154297

Token 145: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.05177989974617958
    2. ' all' → logprob: -3.6767799854278564
    3. 'self' → logprob: -4.051779747009277
    4. 'False' → logprob: -5.176779747009277
    5. ' self' → logprob: -7.176779747009277
    6. ' False' → logprob: -7.301779747009277
    7. 'not' → logprob: -8.301779747009277
    8. '   ' → logprob: -9.051779747009277
    9. 'any' → logprob: -9.426779747009277
    10. ' not' → logprob: -10.176779747009277

Token 146: '((' (ID: 2054)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2523755133152008
    2. '(' → logprob: -1.6273754835128784
    3. '(x' → logprob: -3.877375602722168
    4. '(lambda' → logprob: -5.877375602722168
    5. '(r' → logprob: -6.377375602722168
    6. '((' → logprob: -8.002375602722168
    7. '(self' → logprob: -8.252375602722168
    8. '(res' → logprob: -8.377375602722168
    9. '(h' → logprob: -8.877375602722168
    10. '(ne' → logprob: -9.002375602722168

Token 147: 'need' (ID: 24630)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8820770978927612
    2. 'need' → logprob: -1.2570770978927612
    3. 'held' → logprob: -2.132077217102051
    4. 'h' → logprob: -2.257077217102051
    5. 'nr' → logprob: -4.132077217102051
    6. 'nh' → logprob: -4.257077217102051
    7. 'hold' → logprob: -4.382077217102051
    8. 'x' → logprob: -4.382077217102051
    9. 'needed' → logprob: -4.632077217102051
    10. 'r' → logprob: -5.882077217102051

Token 148: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09495832026004791
    2. '==' → logprob: -2.5949583053588867
    3. ' <=' → logprob: -4.469958305358887
    4. '()' → logprob: -6.219958305358887
    5. '()==' → logprob: -6.344958305358887
    6. '<=' → logprob: -7.719958305358887
    7. ')==' → logprob: -8.844958305358887
    8. ')' → logprob: -8.969958305358887
    9. '=' → logprob: -11.719958305358887
    10. ']==' → logprob: -11.844958305358887

Token 149: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0336519218981266
    2. ' ' → logprob: -3.408651828765869
    3. '   ' → logprob: -12.908652305603027
    4. ')' → logprob: -13.158652305603027
    5. '  ' → logprob: -14.033652305603027
    6. '       ' → logprob: -15.908652305603027
    7. '```' → logprob: -16.15865135192871
    8. '           ' → logprob: -16.22115135192871
    9. '<|end|>' → logprob: -16.28365135192871
    10. '    ' → logprob: -16.28365135192871

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008621077984571457
    2. ' ' → logprob: -4.7586212158203125
    3. ')' → logprob: -12.633621215820312
    4. '   ' → logprob: -13.883621215820312
    5. '  ' → logprob: -14.508621215820312
    6. '[' → logprob: -15.196121215820312
    7. '```' → logprob: -15.758621215820312
    8. '=' → logprob: -16.071121215820312
    9. 'token' → logprob: -16.446121215820312
    10. '<|end|>' → logprob: -16.508621215820312

Token 151: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05257319658994675
    2. ')' → logprob: -3.0525732040405273
    3. 'for' → logprob: -5.802573204040527
    4. '   ' → logprob: -8.177573204040527
    5. '))' → logprob: -8.552573204040527
    6. ' )' → logprob: -8.677573204040527
    7. ' ' → logprob: -9.427573204040527
    8. ' or' → logprob: -9.927573204040527
    9. '    ' → logprob: -10.052573204040527
    10. '       ' → logprob: -10.177573204040527

Token 152: ' need' (ID: 1309)
  Prédit: ' need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.5784516334533691
    2. 'need' → logprob: -0.8284516334533691
    3. ' self' → logprob: -6.453451633453369
    4. 'self' → logprob: -7.328451633453369
    5. '_need' → logprob: -8.953451156616211
    6. ')' → logprob: -10.203451156616211
    7. ' ' → logprob: -10.453451156616211
    8. '.need' → logprob: -11.328451156616211
    9. 'needed' → logprob: -11.703451156616211
    10. '	' → logprob: -12.453451156616211

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018343668431043625
    2. 'in' → logprob: -4.768343448638916
    3. ')' → logprob: -4.893343448638916
    4. ' ' → logprob: -7.393343448638916
    5. ' )' → logprob: -7.893343448638916
    6. '))' → logprob: -8.143343925476074
    7. ' need' → logprob: -8.643343925476074
    8. '<|end|>' → logprob: -8.893343925476074
    9. 'need' → logprob: -9.143343925476074
    10. ' self' → logprob: -9.518343925476074

Token 154: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25194817781448364
    2. ' self' → logprob: -1.5019481182098389
    3. '(self' → logprob: -11.876948356628418
    4. ')' → logprob: -12.501948356628418
    5. ' ' → logprob: -13.001948356628418
    6. '[self' → logprob: -13.001948356628418
    7. '
' → logprob: -13.501948356628418
    8. '	self' → logprob: -13.751948356628418
    9. '  ' → logprob: -14.751948356628418
    10. '   ' → logprob: -14.876948356628418

Token 155: '.need' (ID: 178929)
  Prédit: '.need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.need' → logprob: -0.0721411183476448
    2. '.' → logprob: -2.697141170501709
    3. ' .' → logprob: -6.197141170501709
    4. 'need' → logprob: -9.19714069366455
    5. '.ne' → logprob: -10.57214069366455
    6. ' need' → logprob: -11.07214069366455
    7. ').' → logprob: -11.19714069366455
    8. '.resource' → logprob: -12.57214069366455
    9. ')' → logprob: -13.57214069366455
    10. '.require' → logprob: -14.32214069366455

Token 156: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.027709295973181725
    2. '))' → logprob: -3.7777092456817627
    3. '()' → logprob: -5.527709484100342
    4. '())' → logprob: -8.027709007263184
    5. '()))
' → logprob: -9.402709007263184
    6. '()))

' → logprob: -10.902709007263184
    7. '(' → logprob: -11.277709007263184
    8. ')' → logprob: -11.527709007263184
    9. '())))' → logprob: -12.152709007263184
    10. ' ))' → logprob: -12.277709007263184

Token 157: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07905899733304977
    2. '   ' → logprob: -3.704058885574341
    3. '<|end|>' → logprob: -3.704058885574341
    4. ':' → logprob: -4.95405912399292
    5. '\n' → logprob: -5.07905912399292
    6. '    
' → logprob: -5.57905912399292
    7. ' 
' → logprob: -5.57905912399292
    8. ')' → logprob: -6.82905912399292
    9. ' ' → logprob: -7.07905912399292
    10. '  
' → logprob: -7.32905912399292

Token 158: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8081642389297485
    2. '
' → logprob: -1.0581642389297485
    3. '<|end|>' → logprob: -1.8081642389297485
    4. '\n' → logprob: -4.433164119720459
    5. '    
' → logprob: -5.183164119720459
    6. ':' → logprob: -5.308164119720459
    7. '       ' → logprob: -5.308164119720459
    8. ')' → logprob: -5.558164119720459
    9. ' 
' → logprob: -6.308164119720459
    10. ' ' → logprob: -6.558164119720459

Token 159: ' try' (ID: 2075)
  Prédit: ' request'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' request' → logprob: -0.5074357390403748
    2. ' allocate' → logprob: -2.0074357986450195
    3. ' can' → logprob: -2.2574357986450195
    4. 'request' → logprob: -3.6324357986450195
    5. ' acquire' → logprob: -3.6324357986450195
    6. ' release' → logprob: -4.0074357986450195
    7. ' safe' → logprob: -4.5074357986450195
    8. ' reset' → logprob: -4.6324357986450195
    9. ' def' → logprob: -4.7574357986450195
    10. 'def' → logprob: -4.8824357986450195

Token 160: '_finish' (ID: 109520)
  Prédit: '_allocate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_allocate' → logprob: -0.8541077971458435
    2. '_ac' → logprob: -0.9791077971458435
    3. '_gr' → logprob: -2.4791078567504883
    4. '_' → logprob: -2.9791078567504883
    5. '_to' → logprob: -3.3541078567504883
    6. '_get' → logprob: -4.229107856750488
    7. '_request' → logprob: -4.979107856750488
    8. '_res' → logprob: -6.104107856750488
    9. '_alloc' → logprob: -6.354107856750488
    10. '_claim' → logprob: -6.604107856750488

Token 161: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001343446783721447
    2. '(' → logprob: -7.251343250274658
    3. ' (' → logprob: -8.001343727111816
    4. '():' → logprob: -8.626343727111816
    5. '()' → logprob: -9.376343727111816
    6. 'self' → logprob: -10.751343727111816
    7. '   ' → logprob: -12.001343727111816
    8. '():
' → logprob: -13.376343727111816
    9. ' self' → logprob: -13.876343727111816
    10. '       ' → logprob: -14.001343727111816

Token 162: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16708403825759888
    2. ',' → logprob: -2.667083978652954
    3. 'self' → logprob: -3.042083978652954
    4. '):
' → logprob: -4.042084217071533
    5. '(self' → logprob: -4.417084217071533
    6. ')' → logprob: -5.417084217071533
    7. '   ' → logprob: -6.542084217071533
    8. '       ' → logprob: -7.542084217071533
    9. ' ):' → logprob: -8.917083740234375
    10. ' self' → logprob: -9.542083740234375

Token 163: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015162922209128737
    2. ':' → logprob: -7.001516342163086
    3. '(' → logprob: -7.626516342163086
    4. '():' → logprob: -10.001516342163086
    5. ' (' → logprob: -10.376516342163086
    6. '       ' → logprob: -11.876516342163086
    7. 'self' → logprob: -12.001516342163086
    8. ' ->' → logprob: -12.001516342163086
    9. ':self' → logprob: -12.376516342163086
    10. '   ' → logprob: -12.376516342163086

Token 164: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.01294855959713459
    2. 'bool' → logprob: -4.512948513031006
    3. ' None' → logprob: -6.762948513031006
    4. '   ' → logprob: -8.262948989868164
    5. '    ' → logprob: -8.637948989868164
    6. 'None' → logprob: -8.887948989868164
    7. ' 
' → logprob: -10.387948989868164
    8. ' ' → logprob: -10.762948989868164
    9. '(bool' → logprob: -10.887948989868164
    10. '    
' → logprob: -11.012948989868164

Token 165: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00936076883226633
    2. ':
' → logprob: -5.2593607902526855
    3. '       ' → logprob: -5.8843607902526855
    4. '(self' → logprob: -7.5093607902526855
    5. '():' → logprob: -7.8843607902526855
    6. '   ' → logprob: -8.384360313415527
    7. '):' → logprob: -9.009360313415527
    8. '(' → logprob: -11.134360313415527
    9. ':self' → logprob: -11.259360313415527
    10. ' :' → logprob: -11.259360313415527

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006317823426797986
    2. '   ' → logprob: -8.750631332397461
    3. '
' → logprob: -9.000631332397461
    4. ' if' → logprob: -9.625631332397461
    5. '<|end|>' → logprob: -9.750631332397461
    6. ':' → logprob: -9.875631332397461
    7. '        
' → logprob: -10.125631332397461
    8. ' 
' → logprob: -10.500631332397461
    9. '    
' → logprob: -10.625631332397461
    10. '    ' → logprob: -11.250631332397461

Token 167: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5250905156135559
    2. '       ' → logprob: -1.1500904560089111
    3. 'if' → logprob: -2.525090456008911
    4. 'self' → logprob: -4.90009069442749
    5. ' self' → logprob: -5.52509069442749
    6. ' for' → logprob: -9.025090217590332
    7. '   ' → logprob: -9.900090217590332
    8. 'def' → logprob: -10.025090217590332
    9. 'for' → logprob: -10.150090217590332
    10. '
' → logprob: -10.775090217590332

Token 168: ' Mark' (ID: 5070)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7496353387832642
    2. ' if' → logprob: -0.7496353387832642
    3. '       ' → logprob: -3.7496352195739746
    4. 'need' → logprob: -4.874635219573975
    5. 'available' → logprob: -5.374635219573975
    6. 'for' → logprob: -5.499635219573975
    7. ' for' → logprob: -5.874635219573975
    8. ' available' → logprob: -6.124635219573975
    9. 'def' → logprob: -6.249635219573975
    10. 'needed' → logprob: -6.374635219573975

Token 169: ' as' (ID: 472)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3539172410964966
    2. ' self' → logprob: -1.3539172410964966
    3. '       ' → logprob: -3.728917121887207
    4. '(self' → logprob: -4.978917121887207
    5. '_finished' → logprob: -5.978917121887207
    6. ' the' → logprob: -6.478917121887207
    7. '
' → logprob: -6.978917121887207
    8. ' this' → logprob: -7.603917121887207
    9. '   ' → logprob: -7.728917121887207
    10. ' as' → logprob: -7.853917121887207

Token 170: ' finished' (ID: 11684)
  Prédit: ' finished'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' finished' → logprob: -0.7672286629676819
    2. 'finished' → logprob: -1.267228603363037
    3. 'self' → logprob: -2.142228603363037
    4. '_finished' → logprob: -2.892228603363037
    5. ' self' → logprob: -3.267228603363037
    6. 'True' → logprob: -3.767228603363037
    7. ' True' → logprob: -4.517228603363037
    8. 'Finished' → logprob: -4.767228603363037
    9. ' Finished' → logprob: -8.892229080200195
    10. '       ' → logprob: -8.892229080200195

Token 171: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5075388550758362
    2. '<|end|>' → logprob: -1.6325387954711914
    3. '
' → logprob: -2.0075387954711914
    4. ',' → logprob: -3.6325387954711914
    5. ' and' → logprob: -3.7575387954711914
    6. '<|end|>' → logprob: -4.757538795471191
    7. ' if' → logprob: -5.132538795471191
    8. ':' → logprob: -6.632538795471191
    9. '   ' → logprob: -8.007538795471191
    10. ' at' → logprob: -8.382538795471191

Token 172: ' release' (ID: 8232)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3239888548851013
    2. ' self' → logprob: -2.198988914489746
    3. '       ' → logprob: -2.573988914489746
    4. 'self' → logprob: -3.073988914489746
    5. 'return' → logprob: -3.323988914489746
    6. ' release' → logprob: -6.073988914489746
    7. '
' → logprob: -6.323988914489746
    8. 'True' → logprob: -6.698988914489746
    9. ' True' → logprob: -7.073988914489746
    10. 'release' → logprob: -7.948988914489746

Token 173: ' resources' (ID: 7416)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9494192600250244
    2. '       ' → logprob: -1.4494192600250244
    3. 'self' → logprob: -1.6994192600250244
    4. ' resources' → logprob: -2.4494192600250244
    5. '_resources' → logprob: -3.0744192600250244
    6. ' all' → logprob: -3.8244192600250244
    7. 'resources' → logprob: -3.9494192600250244
    8. ' held' → logprob: -4.949419021606445
    9. ' if' → logprob: -5.449419021606445
    10. 'all' → logprob: -6.324419021606445

Token 174: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005083491560071707
    2. '<|end|>' → logprob: -6.7550835609436035
    3. 'self' → logprob: -6.8800835609436035
    4. '
' → logprob: -6.8800835609436035
    5. ',' → logprob: -7.5050835609436035
    6. ' if' → logprob: -7.7550835609436035
    7. '   ' → logprob: -7.7550835609436035
    8. '(self' → logprob: -9.005083084106445
    9. ' self' → logprob: -10.005083084106445
    10. ')' → logprob: -10.255083084106445

Token 175: ' finished' (ID: 11684)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18047061562538147
    2. ' self' → logprob: -1.805470585823059
    3. '       ' → logprob: -8.43047046661377
    4. ' all' → logprob: -8.80547046661377
    5. ' not' → logprob: -9.05547046661377
    6. '   ' → logprob: -9.30547046661377
    7. 'not' → logprob: -9.43047046661377
    8. 'all' → logprob: -10.05547046661377
    9. '           ' → logprob: -11.68047046661377
    10. '(self' → logprob: -11.80547046661377

Token 176: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04758076369762421
    2. '
' → logprob: -4.047580718994141
    3. '   ' → logprob: -4.422580718994141
    4. ':' → logprob: -4.797580718994141
    5. '<|end|>' → logprob: -5.297580718994141
    6. ' if' → logprob: -6.297580718994141
    7. ':
' → logprob: -7.672580718994141
    8. ',' → logprob: -7.797580718994141
    9. '        
' → logprob: -8.42258071899414
    10. '<|end|>' → logprob: -8.54758071899414

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006266250740736723
    2. '   ' → logprob: -5.756266117095947
    3. '<|end|>' → logprob: -6.256266117095947
    4. '
' → logprob: -7.381266117095947
    5. ' if' → logprob: -9.006266593933105
    6. ':' → logprob: -9.506266593933105
    7. ' ' → logprob: -9.631266593933105
    8. '        
' → logprob: -10.131266593933105
    9. '<|end|>' → logprob: -10.631266593933105
    10. '    ' → logprob: -10.631266593933105

Token 178: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0662762001156807
    2. ' if' → logprob: -2.8162763118743896
    3. '   ' → logprob: -6.4412760734558105
    4. 'if' (adapté à ' if') → logprob: -6.6912760734558105
    5. '<|end|>' → logprob: -6.8162760734558105
    6. 'self' → logprob: -9.691276550292969
    7. '        ' → logprob: -9.941276550292969
    8. '    ' → logprob: -9.941276550292969
    9. ' self' → logprob: -10.066276550292969
    10. ' ' → logprob: -10.316276550292969

Token 179: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38717836141586304
    2. ' self' → logprob: -1.1371784210205078
    3. ' not' → logprob: -8.387178421020508
    4. 'not' → logprob: -9.887178421020508
    5. '   ' → logprob: -11.012178421020508
    6. ' all' → logprob: -12.512178421020508
    7. '    ' → logprob: -12.637178421020508
    8. ' ' → logprob: -13.512178421020508
    9. '(self' → logprob: -13.512178421020508
    10. 'all' → logprob: -14.262178421020508

Token 180: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0015693799359723926
    2. '.' → logprob: -6.7515692710876465
    3. ' .' → logprob: -8.251569747924805
    4. 'is' → logprob: -9.751569747924805
    5. '.need' → logprob: -10.001569747924805
    6. '   ' → logprob: -12.126569747924805
    7. '_.' → logprob: -12.251569747924805
    8. '._' → logprob: -12.626569747924805
    9. '_is' → logprob: -12.876569747924805
    10. '.has' → logprob: -13.126569747924805

Token 181: '_finished' (ID: 143523)
  Prédit: '_finished'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_finished' → logprob: -8.840432565193623e-05
    2. '_' → logprob: -9.625088691711426
    3. '_f' → logprob: -11.125088691711426
    4. '_fin' → logprob: -12.250088691711426
    5. '_finish' → logprob: -13.500088691711426
    6. 'finished' → logprob: -14.375088691711426
    7. ' _' → logprob: -14.750088691711426
    8. '_completed' → logprob: -16.75008773803711
    9. 'Finished' → logprob: -16.87508773803711
    10. '_FIN' → logprob: -16.87508773803711

Token 182: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005270573310554028
    2. '():
' → logprob: -8.000527381896973
    3. '()' → logprob: -9.000527381896973
    4. ' ():' → logprob: -9.875527381896973
    5. ':' → logprob: -11.125527381896973
    6. '):' → logprob: -14.375527381896973
    7. '(' → logprob: -15.125527381896973
    8. ' :' → logprob: -15.125527381896973
    9. '():
' → logprob: -15.125527381896973
    10. ' ):' → logprob: -15.250527381896973

Token 183: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005713570397347212
    2. ':
' → logprob: -5.25571346282959
    3. ' :' → logprob: -8.50571346282959
    4. ' and' → logprob: -8.75571346282959
    5. '):' → logprob: -9.38071346282959
    6. '):
' → logprob: -12.25571346282959
    7. ':

' → logprob: -12.38071346282959
    8. ' :
' → logprob: -12.50571346282959
    9. 'and' → logprob: -12.63071346282959
    10. '       ' → logprob: -12.63071346282959

Token 184: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3133634924888611
    2. 'not' → logprob: -1.3133635520935059
    3. '!' → logprob: -10.563363075256348
    4. '	not' → logprob: -11.313363075256348
    5. '(not' → logprob: -11.438363075256348
    6. 'self' → logprob: -11.813363075256348
    7. '
' → logprob: -12.063363075256348
    8. 'n' → logprob: -12.188363075256348
    9. ' ' → logprob: -12.250863075256348
    10. '   ' → logprob: -12.375863075256348

Token 185: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.06197552755475044
    2. 'self' → logprob: -2.8119754791259766
    3. '	self' → logprob: -12.436975479125977
    4. ' ' → logprob: -13.811975479125977
    5. '(self' → logprob: -14.186975479125977
    6. '<|end|>' → logprob: -14.436975479125977
    7. ' ' → logprob: -14.561975479125977
    8. '   ' → logprob: -15.436975479125977
    9. '[self' → logprob: -15.561975479125977
    10. 'Self' → logprob: -16.061975479125977

Token 186: '.finished' (ID: 182736)
  Prédit: '.finished'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.finished' → logprob: -0.0014380889479070902
    2. '.' → logprob: -6.751438140869141
    3. ' .' → logprob: -9.12643814086914
    4. '.fin' → logprob: -9.37643814086914
    5. '.finish' → logprob: -10.37643814086914
    6. '.f' → logprob: -10.87643814086914
    7. '.failed' → logprob: -11.50143814086914
    8. 'finished' → logprob: -12.25143814086914
    9. '.completed' → logprob: -12.75143814086914
    10. '.final' → logprob: -13.37643814086914

Token 187: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02326492965221405
    2. ':
' → logprob: -3.7732648849487305
    3. '):' → logprob: -12.27326488494873
    4. ' :' → logprob: -12.39826488494873
    5. ':

' → logprob: -12.77326488494873
    6. ':
' → logprob: -12.89826488494873
    7. '):
' → logprob: -13.14826488494873
    8. ' :
' → logprob: -14.39826488494873
    9. ':return' → logprob: -14.39826488494873
    10. '<|end|>' → logprob: -14.52326488494873

Token 188: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4896223247051239
    2. '
' → logprob: -1.7396223545074463
    3. '<|end|>' → logprob: -2.6146223545074463
    4. '           ' → logprob: -2.7396223545074463
    5. ':' → logprob: -2.9896223545074463
    6. '<|end|>' → logprob: -4.739622116088867
    7. ':
' → logprob: -5.614622116088867
    8. '\n' → logprob: -5.614622116088867
    9. '        
' → logprob: -5.864622116088867
    10. '#' → logprob: -7.489622116088867

Token 189: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8885603547096252
    2. ' self' → logprob: -1.1385602951049805
    3. '           ' → logprob: -1.5135602951049805
    4. 'self' (adapté à ' self') → logprob: -3.1385602951049805
    5. '	self' → logprob: -6.0135602951049805
    6. '	       ' → logprob: -7.0135602951049805
    7. '   ' → logprob: -7.3885602951049805
    8. '               ' → logprob: -7.6385602951049805
    9. '(self' → logprob: -9.38856029510498
    10. ' ' → logprob: -9.88856029510498

Token 190: '.finished' (ID: 182736)
  Prédit: '.finished'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.finished' → logprob: -0.013909260742366314
    2. '.' → logprob: -4.513909339904785
    3. '.finish' → logprob: -6.388909339904785
    4. 'finished' → logprob: -7.013909339904785
    5. ' .' → logprob: -9.388909339904785
    6. '.completed' → logprob: -9.888909339904785
    7. '.fin' → logprob: -9.888909339904785
    8. '.f' → logprob: -10.638909339904785
    9. 'Finished' → logprob: -10.763909339904785
    10. '_finished' → logprob: -11.638909339904785

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017151589272543788
    2. '=' → logprob: -6.376715183258057
    3. '=True' → logprob: -11.626714706420898
    4. ' ' → logprob: -12.751714706420898
    5. '   ' → logprob: -14.501714706420898
    6. '    ' → logprob: -15.001714706420898
    7. '  ' → logprob: -15.501714706420898
    8. '	' → logprob: -17.3767147064209
    9. '        ' → logprob: -17.5017147064209
    10. ' =
' → logprob: -17.6267147064209

Token 192: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.3868713080883026
    2. ' True' → logprob: -1.136871337890625
    3. '(True' → logprob: -15.636871337890625
    4. '=True' → logprob: -16.136871337890625
    5. '.True' → logprob: -19.261871337890625
    6. '_true' → logprob: -20.386871337890625
    7. '   ' → logprob: -20.636871337890625
    8. 'true' → logprob: -20.636871337890625
    9. '
' → logprob: -20.886871337890625
    10. ' Tru' → logprob: -21.261871337890625

Token 193: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001419876585714519
    2. '
' → logprob: -7.001420021057129
    3. 'return' → logprob: -8.876420021057129
    4. '       ' → logprob: -9.251420021057129
    5. ',' → logprob: -9.251420021057129
    6. '<|end|>' → logprob: -9.751420021057129
    7. ' return' → logprob: -10.001420021057129
    8. '   ' → logprob: -11.501420021057129
    9. '<|end|>' → logprob: -11.751420021057129
    10. '               ' → logprob: -11.876420021057129

Token 194: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005509077105671167
    2. '       ' → logprob: -6.005508899688721
    3. 'return' → logprob: -6.005508899688721
    4. ' return' → logprob: -7.505508899688721
    5. '   ' → logprob: -12.130509376525879
    6. '          ' → logprob: -13.130509376525879
    7. '               ' → logprob: -13.630509376525879
    8. ' for' → logprob: -14.255509376525879
    9. '		' → logprob: -14.505509376525879
    10. 'self' → logprob: -14.630509376525879

Token 195: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5898139476776123
    2. ' return' → logprob: -1.0898139476776123
    3. '           ' → logprob: -2.9648139476776123
    4. 'self' → logprob: -3.4648139476776123
    5. ' for' → logprob: -4.339814186096191
    6. ' self' → logprob: -4.714814186096191
    7. 'for' → logprob: -5.589814186096191
    8. '       ' → logprob: -7.714814186096191
    9. '[self' → logprob: -9.839814186096191
    10. '[' → logprob: -10.089814186096191

Token 196: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.18507760763168335
    2. 'self' → logprob: -2.435077667236328
    3. ' True' → logprob: -2.560077667236328
    4. ' self' → logprob: -5.685077667236328
    5. '[' → logprob: -8.060077667236328
    6. '[self' → logprob: -8.185077667236328
    7. ' [' → logprob: -10.060077667236328
    8. 'False' → logprob: -11.560077667236328
    9. ' ' → logprob: -12.185077667236328
    10. '(True' → logprob: -12.310077667236328

Token 197: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008242090232670307
    2. '
' → logprob: -5.008242130279541
    3. 'return' → logprob: -7.383242130279541
    4. '<|end|>' → logprob: -7.508242130279541
    5. '	' → logprob: -8.758241653442383
    6. ' return' → logprob: -9.633241653442383
    7. '        
' → logprob: -10.633241653442383
    8. '	return' → logprob: -10.758241653442383
    9. '\n' → logprob: -11.133241653442383
    10. '  
' → logprob: -11.758241653442383

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036845204886049032
    2. '
' → logprob: -6.0036845207214355
    3. '<|end|>' → logprob: -7.2536845207214355
    4. 'return' → logprob: -8.503684043884277
    5. '	' → logprob: -9.253684043884277
    6. ' return' → logprob: -9.628684043884277
    7. '        
' → logprob: -10.128684043884277
    8. '	return' → logprob: -11.253684043884277
    9. '\n' → logprob: -11.878684043884277
    10. '.' → logprob: -12.003684043884277

Token 199: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045589856803417206
    2. '   ' → logprob: -4.045589923858643
    3. 'return' (adapté à ' return') → logprob: -4.045589923858643
    4. '	' → logprob: -5.670589923858643
    5. '\n' → logprob: -6.545589923858643
    6. '	return' → logprob: -6.670589923858643
    7. ' return' → logprob: -6.670589923858643
    8. '
' → logprob: -7.920589923858643
    9. '        
' → logprob: -8.045589447021484
    10. '    ' → logprob: -8.045589447021484

Token 200: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.12692810595035553
    2. ' False' → logprob: -2.1269280910491943
    3. '(False' → logprob: -18.626928329467773
    4. '=False' → logprob: -21.001928329467773
    5. '_false' → logprob: -21.876928329467773
    6. '.False' → logprob: -22.626928329467773
    7. 'false' → logprob: -22.751928329467773
    8. ' ' → logprob: -23.501928329467773
    9. 'None' → logprob: -24.001928329467773
    10. ' false' → logprob: -24.001928329467773

Token 201: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 203: ' Resource' (ID: 18550)
  Prédit: ' Bank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bank' → logprob: -0.18208928406238556
    2. ' Banker' → logprob: -2.057089328765869
    3. ' Resource' → logprob: -3.682089328765869
    4. 'Bank' → logprob: -4.557089328765869
    5. 'Resource' → logprob: -6.807089328765869
    6. ' Safe' → logprob: -7.432089328765869
    7. ' System' → logprob: -8.182088851928711
    8. ' Manager' → logprob: -8.932088851928711
    9. ' Process' → logprob: -9.057088851928711
    10. ' Dead' → logprob: -9.182088851928711

Token 204: 'Manager' (ID: 2774)
  Prédit: 'Manager'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Manager' → logprob: -0.03459353372454643
    2. 'Allocator' → logprob: -3.4095935821533203
    3. ':' → logprob: -7.53459358215332
    4. 'Allocation' → logprob: -8.53459358215332
    5. 'Pool' → logprob: -8.90959358215332
    6. '_Manager' → logprob: -11.40959358215332
    7. 'System' → logprob: -11.53459358215332
    8. 's' → logprob: -11.65959358215332
    9. 'Bank' → logprob: -11.78459358215332
    10. 'Controller' → logprob: -12.03459358215332

Token 205: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.098748053773306e-05
    2. ':
' → logprob: -10.12506103515625
    3. '):' → logprob: -11.75006103515625
    4. ' :' → logprob: -12.75006103515625
    5. '():' → logprob: -12.75006103515625
    6. '(' → logprob: -13.00006103515625
    7. ':**' → logprob: -13.37506103515625
    8. '<|end|>' → logprob: -13.87506103515625
    9. ':

' → logprob: -14.37506103515625
    10. '>:' → logprob: -14.62506103515625

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002846840536221862
    2. ' def' → logprob: -6.002846717834473
    3. '    
' → logprob: -8.377846717834473
    4. 'def' → logprob: -9.877846717834473
    5. '    ' → logprob: -10.752846717834473
    6. ' 
' → logprob: -11.252846717834473
    7. '(' → logprob: -11.877846717834473
    8. '4' → logprob: -12.002846717834473
    9. ':' → logprob: -12.377846717834473
    10. '```' → logprob: -12.502846717834473

Token 207: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.07292440533638
    2. 'def' (adapté à ' def') → logprob: -2.6979243755340576
    3. '   ' → logprob: -5.822924613952637
    4. ' __' → logprob: -11.197924613952637
    5. ' ' → logprob: -12.822924613952637
    6. '    ' → logprob: -13.322924613952637
    7. ' de' → logprob: -13.572924613952637
    8. '	def' → logprob: -13.572924613952637
    9. '  ' → logprob: -14.197924613952637
    10. 'de' → logprob: -14.322924613952637

Token 208: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.026562105864286423
    2. 'init' → logprob: -4.651562213897705
    3. '_init' → logprob: -4.776562213897705
    4. ' init' → logprob: -5.026562213897705
    5. '__' → logprob: -6.776562213897705
    6. ' _' → logprob: -7.776562213897705
    7. ' ' → logprob: -9.526561737060547
    8. '_' → logprob: -10.151561737060547
    9. ' def' → logprob: -12.901561737060547
    10. ' ' → logprob: -13.151561737060547

Token 209: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -16.375
    3. 'initi' → logprob: -17.375
    4. 'in' → logprob: -17.625
    5. '```' → logprob: -17.75
    6. '_init' → logprob: -17.75
    7. 'import' → logprob: -18.25
    8. 'inite' → logprob: -18.375
    9. '   ' → logprob: -19.0
    10. 'ini' → logprob: -19.125

Token 210: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0005786505062133074
    2. '__' → logprob: -7.500578880310059
    3. '__(
' → logprob: -10.875578880310059
    4. '__((' → logprob: -12.250578880310059
    5. '__('' → logprob: -14.000578880310059
    6. '(self' → logprob: -14.125578880310059
    7. '__("' → logprob: -16.000577926635742
    8. '_(' → logprob: -16.000577926635742
    9. '__(*' → logprob: -16.000577926635742
    10. '(' → logprob: -17.125577926635742

Token 211: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001040671137161553
    2. ' self' → logprob: -6.876040458679199
    3. '
' → logprob: -12.6260404586792
    4. ')' → logprob: -13.2510404586792
    5. ',' → logprob: -13.7510404586792
    6. 'elf' → logprob: -14.3760404586792
    7. '   ' → logprob: -14.6260404586792
    8. '(self' → logprob: -15.7510404586792
    9. ' ' → logprob: -15.8760404586792
    10. '       ' → logprob: -16.126041412353516

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00443771667778492
    2. ' ,' → logprob: -6.1294379234313965
    3. 'self' → logprob: -6.1294379234313965
    4. ',self' → logprob: -10.254437446594238
    5. '(self' → logprob: -10.879437446594238
    6. ' self' → logprob: -11.379437446594238
    7. ')' → logprob: -13.379437446594238
    8. ' ' → logprob: -14.254437446594238
    9. ',
' → logprob: -14.254437446594238
    10. '_,' → logprob: -14.254437446594238

Token 213: ' p' (ID: 275)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5999375581741333
    2. ' total' → logprob: -1.2249375581741333
    3. 'available' → logprob: -2.0999374389648438
    4. 'resource' → logprob: -4.099937438964844
    5. ' available' → logprob: -4.474937438964844
    6. ' resource' → logprob: -5.599937438964844
    7. 'resources' → logprob: -6.724937438964844
    8. 'self' → logprob: -7.224937438964844
    9. ' resources' → logprob: -7.974937438964844
    10. 'num' → logprob: -8.099937438964844

Token 214: '_count' (ID: 7536)
  Prédit: 'roc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'roc' → logprob: -0.439609169960022
    2. 'rocess' → logprob: -1.939609169960022
    3. 'ids' → logprob: -2.3146090507507324
    4. 'id' → logprob: -2.6896090507507324
    5. 'rocessing' → logprob: -3.8146090507507324
    6. 'ro' → logprob: -4.939609050750732
    7. 'ar' → logprob: -5.814609050750732
    8. 'ool' → logprob: -6.064609050750732
    9. '_ids' → logprob: -6.314609050750732
    10. 'op' → logprob: -6.314609050750732

Token 215: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017471733735874295
    2. '=' → logprob: -6.876747131347656
    3. ':' → logprob: -7.751747131347656
    4. ' ,' → logprob: -8.501747131347656
    5. '):' → logprob: -9.876747131347656
    6. ':int' → logprob: -11.501747131347656
    7. '=int' → logprob: -12.001747131347656
    8. ',
' → logprob: -12.501747131347656
    9. ')' → logprob: -12.626747131347656
    10. '   ' → logprob: -13.376747131347656

Token 216: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.28129053115844727
    2. ' int' → logprob: -1.4062905311584473
    3. ')' → logprob: -10.406290054321289
    4. ' ' → logprob: -10.406290054321289
    5. ',' → logprob: -10.781290054321289
    6. ',int' → logprob: -11.156290054321289
    7. '   ' → logprob: -11.406290054321289
    8. ':int' → logprob: -11.781290054321289
    9. '):
' → logprob: -12.406290054321289
    10. '[int' → logprob: -12.531290054321289

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.455048449221067e-05
    2. ' ,' → logprob: -10.000054359436035
    3. ')' → logprob: -12.125054359436035
    4. ',
' → logprob: -13.875054359436035
    5. '):' → logprob: -13.875054359436035
    6. ',p' → logprob: -14.875054359436035
    7. '‌,' → logprob: -15.000054359436035
    8. ',int' → logprob: -15.250054359436035
    9. '),' → logprob: -16.00005531311035
    10. '   ' → logprob: -16.00005531311035

Token 218: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5874974727630615
    2. ' r' → logprob: -0.8374974727630615
    3. ' resource' → logprob: -5.462497711181641
    4. 'resource' → logprob: -5.712497711181641
    5. ' total' → logprob: -6.837497711181641
    6. 'total' → logprob: -7.712497711181641
    7. ' k' → logprob: -7.962497711181641
    8. 'k' → logprob: -7.962497711181641
    9. ' ' → logprob: -7.962497711181641
    10. '   ' → logprob: -8.08749771118164

Token 219: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00025752498186193407
    2. '_counts' → logprob: -8.62525749206543
    3. 'count' → logprob: -10.62525749206543
    4. '_types' → logprob: -11.12525749206543
    5. 'es' → logprob: -11.25025749206543
    6. '_c' → logprob: -11.75025749206543
    7. '_' → logprob: -12.87525749206543
    8. '_COUNT' → logprob: -13.62525749206543
    9. '_cnt' → logprob: -13.87525749206543
    10. '_type' → logprob: -14.00025749206543

Token 220: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5916220545768738
    2. ':' → logprob: -1.0916221141815186
    3. '):' → logprob: -2.2166221141815186
    4. ')' → logprob: -6.7166218757629395
    5. ' ):' → logprob: -8.341622352600098
    6. ' ,' → logprob: -8.466622352600098
    7. '):
' → logprob: -9.216622352600098
    8. '=' → logprob: -9.591622352600098
    9. ':int' → logprob: -9.966622352600098
    10. ' :' → logprob: -11.216622352600098

Token 221: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.22660937905311584
    2. ' int' → logprob: -1.6016093492507935
    3. ')' → logprob: -7.726609230041504
    4. ':int' → logprob: -7.726609230041504
    5. ' p' → logprob: -9.226609230041504
    6. 'p' → logprob: -9.976609230041504
    7. '):
' → logprob: -10.101609230041504
    8. ':' → logprob: -10.726609230041504
    9. '[int' → logprob: -10.726609230041504
    10. '=int' → logprob: -10.976609230041504

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005361131625249982
    2. '):' → logprob: -7.62553596496582
    3. ' ,' → logprob: -10.00053596496582
    4. ')' → logprob: -13.62553596496582
    5. ',
' → logprob: -14.37553596496582
    6. ' ):' → logprob: -15.00053596496582
    7. '):
' → logprob: -15.25053596496582
    8. '   ' → logprob: -15.62553596496582
    9. '       ' → logprob: -16.87553596496582
    10. ',p' → logprob: -17.12553596496582

Token 223: ' initial' (ID: 4871)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7429342865943909
    2. ' total' → logprob: -1.117934226989746
    3. 'resources' → logprob: -2.617934226989746
    4. 'available' → logprob: -3.242934226989746
    5. ' resources' → logprob: -3.867934226989746
    6. 'resource' → logprob: -4.117934226989746
    7. ' available' → logprob: -4.367934226989746
    8. 'initial' → logprob: -4.617934226989746
    9. ' resource' → logprob: -5.117934226989746
    10. '   ' → logprob: -5.117934226989746

Token 224: '_available' (ID: 61823)
  Prédit: '_resources'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_resources' → logprob: -0.0061810677871108055
    2. '_available' → logprob: -5.756181240081787
    3. '_alloc' → logprob: -7.256181240081787
    4. ':' → logprob: -7.381181240081787
    5. '_all' → logprob: -7.756181240081787
    6. '_resource' → logprob: -8.256180763244629
    7. '_' → logprob: -8.756180763244629
    8. 'resources' → logprob: -8.756180763244629
    9. '_instances' → logprob: -8.881180763244629
    10. '_av' → logprob: -9.256180763244629

Token 225: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03137635812163353
    2. '_resources' → logprob: -3.531376361846924
    3. '):' → logprob: -7.781376361846924
    4. ')' → logprob: -8.031375885009766
    5. '_:' → logprob: -8.156375885009766
    6. ' :' → logprob: -8.406375885009766
    7. '=' → logprob: -9.031375885009766
    8. 'resources' → logprob: -9.656375885009766
    9. 'Resources' → logprob: -10.031375885009766
    10. '):
' → logprob: -10.031375885009766

Token 226: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0047658151015639305
    2. ' List' → logprob: -5.37976598739624
    3. '[List' → logprob: -9.754765510559082
    4. ')' → logprob: -9.879765510559082
    5. '   ' → logprob: -11.629765510559082
    6. '):' → logprob: -12.004765510559082
    7. ':' → logprob: -12.004765510559082
    8. 'list' → logprob: -12.004765510559082
    9. '(List' → logprob: -13.379765510559082
    10. 'int' → logprob: -13.754765510559082

Token 227: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0005840110243298113
    2. ']int' → logprob: -8.50058364868164
    3. ')' → logprob: -9.12558364868164
    4. 'int' → logprob: -9.50058364868164
    5. '<|end|>' → logprob: -9.50058364868164
    6. '<int' → logprob: -9.62558364868164
    7. '[' → logprob: -10.87558364868164
    8. '<|end|>' → logprob: -11.00058364868164
    9. '=int' → logprob: -12.12558364868164
    10. '[Int' → logprob: -12.50058364868164

Token 228: '],' (ID: 2155)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.4128084182739258
    2. '):' → logprob: -1.2878084182739258
    3. ']):
' → logprob: -2.912808418273926
    4. ']' → logprob: -5.912808418273926
    5. '):
' → logprob: -5.912808418273926
    6. ')' → logprob: -6.662808418273926
    7. '])' → logprob: -7.537808418273926
    8. ']:' → logprob: -7.537808418273926
    9. '>):' → logprob: -9.037808418273926
    10. '):
' → logprob: -10.537808418273926

Token 229: ' processes' (ID: 14340)
  Prédit: ' processes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' processes' → logprob: -1.080031156539917
    2. 'process' → logprob: -1.580031156539917
    3. 'max' → logprob: -1.830031156539917
    4. 'total' → logprob: -2.455031156539917
    5. ' max' → logprob: -2.830031156539917
    6. 'initial' → logprob: -3.330031156539917
    7. ' total' → logprob: -3.330031156539917
    8. 'allocation' → logprob: -4.330031394958496
    9. '   ' → logprob: -4.455031394958496
    10. 'allocated' → logprob: -4.705031394958496

Token 230: '_ne' (ID: 35498)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -6.0868278524139896e-05
    2. '):' → logprob: -9.87506103515625
    3. ' :' → logprob: -12.62506103515625
    4. ')' → logprob: -13.00006103515625
    5. ' ):' → logprob: -13.12506103515625
    6. '):
' → logprob: -14.12506103515625
    7. '=' → logprob: -15.00006103515625
    8. '_:' → logprob: -15.12506103515625
    9. '```' → logprob: -16.25006103515625
    10. ']:' → logprob: -16.75006103515625

Token 231: 'eds' (ID: 5575)
  Prédit: 'eds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eds' → logprob: -0.0003397535183466971
    2. 'ed' → logprob: -8.37533950805664
    3. 'e' → logprob: -10.87533950805664
    4. 'ds' → logprob: -10.87533950805664
    5. '```' → logprob: -11.12533950805664
    6. '=' → logprob: -11.25033950805664
    7. 'ads' → logprob: -12.00033950805664
    8. '   ' → logprob: -12.12533950805664
    9. '[' → logprob: -12.37533950805664
    10. 'eded' → logprob: -13.00033950805664

Token 232: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008526319288648665
    2. '):' → logprob: -7.625852584838867
    3. '=' → logprob: -8.250852584838867
    4. ')' → logprob: -9.625852584838867
    5. ' :' → logprob: -10.875852584838867
    6. '):
' → logprob: -11.500852584838867
    7. ' ):' → logprob: -12.625852584838867
    8. 's' → logprob: -13.500852584838867
    9. ' )' → logprob: -14.125852584838867
    10. '```' → logprob: -14.750852584838867

Token 233: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0372372642159462
    2. ' List' → logprob: -3.6622371673583984
    3. '[List' → logprob: -4.537237167358398
    4. ')' → logprob: -9.162237167358398
    5. ':' → logprob: -10.412237167358398
    6. '   ' → logprob: -11.412237167358398
    7. '(List' → logprob: -11.537237167358398
    8. '	List' → logprob: -12.162237167358398
    9. ',List' → logprob: -12.787237167358398
    10. '):
' → logprob: -12.787237167358398

Token 234: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.02336905151605606
    2. '[int' → logprob: -3.773369073867798
    3. '[' → logprob: -9.023368835449219
    4. '[Int' → logprob: -13.148368835449219
    5. '[
' → logprob: -14.523368835449219
    6. '[[' → logprob: -16.14836883544922
    7. '   ' → logprob: -16.27336883544922
    8. '[Index' → logprob: -16.27336883544922
    9. ')' → logprob: -16.64836883544922
    10. '<List' → logprob: -16.77336883544922

Token 235: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.465036105713807e-06
    2. ']int' → logprob: -12.375007629394531
    3. 'int' → logprob: -13.000007629394531
    4. '<int' → logprob: -14.750007629394531
    5. ']):
' → logprob: -15.250007629394531
    6. '])' → logprob: -16.12500762939453
    7. '[' → logprob: -17.25000762939453
    8. ']])' → logprob: -18.00000762939453
    9. '[Int' → logprob: -18.25000762939453
    10. ']' → logprob: -18.50000762939453

Token 236: ']]' (ID: 8928)
  Prédit: ']):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.768347442150116
    2. ']):' → logprob: -0.768347442150116
    3. '])' → logprob: -3.0183475017547607
    4. ']' → logprob: -4.143347263336182
    5. ']]' → logprob: -5.268347263336182
    6. ')]' → logprob: -6.518347263336182
    7. ']])' → logprob: -8.26834774017334
    8. ' ]' → logprob: -8.76834774017334
    9. '])):
' → logprob: -8.76834774017334
    10. ']>' → logprob: -9.01834774017334

Token 237: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014358940534293652
    2. '):
' → logprob: -4.264358997344971
    3. ')' → logprob: -8.889358520507812
    4. ':' → logprob: -10.639358520507812
    5. '):
' → logprob: -10.639358520507812
    6. '   ' → logprob: -12.139358520507812
    7. ',' → logprob: -13.514358520507812
    8. ' ):' → logprob: -14.014358520507812
    9. '**' → logprob: -14.389358520507812
    10. '       ' → logprob: -14.514358520507812

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002572865632828325
    2. 'self' → logprob: -8.62525749206543
    3. '
' → logprob: -9.87525749206543
    4. '        
' → logprob: -11.87525749206543
    5. '```' → logprob: -12.50025749206543
    6. '   ' → logprob: -12.62525749206543
    7. ' self' → logprob: -12.75025749206543
    8. ':' → logprob: -13.00025749206543
    9. '	' → logprob: -13.00025749206543
    10. ',' → logprob: -14.37525749206543

Token 239: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.040168263018131256
    2. '       ' → logprob: -3.415168285369873
    3. ' self' → logprob: -5.040168285369873
    4. '   ' → logprob: -11.415167808532715
    5. 'super' → logprob: -11.665167808532715
    6. '
' → logprob: -12.540167808532715
    7. '        
' → logprob: -13.415167808532715
    8. 'def' → logprob: -13.790167808532715
    9. '	self' → logprob: -13.790167808532715
    10. ' ' → logprob: -14.415167808532715

Token 240: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0017362285871058702
    2. 'p' → logprob: -7.251736164093018
    3. '.' → logprob: -7.626736164093018
    4. '.process' → logprob: -8.001736640930176
    5. ' .' → logprob: -9.376736640930176
    6. '.available' → logprob: -9.876736640930176
    7. '.pid' → logprob: -11.126736640930176
    8. ' p' → logprob: -11.501736640930176
    9. '.proc' → logprob: -11.876736640930176
    10. 'process' → logprob: -12.126736640930176

Token 241: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00030721822986379266
    2. '_' → logprob: -8.500307083129883
    3. 'count' → logprob: -9.375307083129883
    4. '_c' → logprob: -12.375307083129883
    5. '_counts' → logprob: -13.250307083129883
    6. 'c' → logprob: -13.375307083129883
    7. '_counter' → logprob: -13.375307083129883
    8. '_cnt' → logprob: -13.625307083129883
    9. ' _' → logprob: -13.625307083129883
    10. '\' → logprob: -14.000307083129883

Token 242: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.314948707818985
    2. ' =' → logprob: -1.3149486780166626
    3. ',' → logprob: -6.689948558807373
    4. ':' → logprob: -7.814948558807373
    5. '=int' → logprob: -11.064949035644531
    6. ')' → logprob: -11.564949035644531
    7. '   ' → logprob: -12.564949035644531
    8. '<|end|>' → logprob: -12.564949035644531
    9. ' ' → logprob: -13.689949035644531
    10. ' ,' → logprob: -13.939949035644531

Token 243: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07907936722040176
    2. ' int' → logprob: -2.5790793895721436
    3. 'p' → logprob: -9.329079627990723
    4. ' p' → logprob: -9.579079627990723
    5. '=int' → logprob: -11.204079627990723
    6. '[int' → logprob: -12.204079627990723
    7. '       ' → logprob: -12.329079627990723
    8. '	int' → logprob: -12.954079627990723
    9. ' =' → logprob: -12.954079627990723
    10. '=' → logprob: -14.454079627990723

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20146721601486206
    2. '=' → logprob: -1.7014672756195068
    3. ' ' → logprob: -10.076467514038086
    4. '=int' → logprob: -11.576467514038086
    5. ' =
' → logprob: -14.076467514038086
    6. '        ' → logprob: -15.326467514038086
    7. ' =
' → logprob: -15.326467514038086
    8. '    ' → logprob: -15.451467514038086
    9. 'int' → logprob: -15.701467514038086
    10. ',' → logprob: -15.701467514038086

Token 245: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02975071594119072
    2. ' p' → logprob: -3.5297508239746094
    3. '	p' → logprob: -16.02975082397461
    4. '   ' → logprob: -17.02975082397461
    5. '_p' → logprob: -17.15475082397461
    6. ' ' → logprob: -17.52975082397461
    7. '    ' → logprob: -17.65475082397461
    8. '<p' → logprob: -17.65475082397461
    9. '       ' → logprob: -18.15475082397461
    10. '
' → logprob: -18.27975082397461

Token 246: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00030936390976421535
    2. '_' → logprob: -8.375308990478516
    3. ' _' → logprob: -10.500308990478516
    4. 'count' → logprob: -11.000308990478516
    5. '_COUNT' → logprob: -11.750308990478516
    6. '   ' → logprob: -11.875308990478516
    7. '_Count' → logprob: -13.000308990478516
    8. '\' → logprob: -13.125308990478516
    9. '_counts' → logprob: -13.125308990478516
    10. 'Count' → logprob: -13.375308990478516

Token 247: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6227887272834778
    2. '<|end|>' → logprob: -1.247788667678833
    3. '       ' → logprob: -1.997788667678833
    4. '        
' → logprob: -3.747788667678833
    5. '<|end|>' → logprob: -5.622788906097412
    6. '  
' → logprob: -5.622788906097412
    7. ' 
' → logprob: -5.747788906097412
    8. '    
' → logprob: -5.747788906097412
    9. ' ' → logprob: -6.747788906097412
    10. ',' → logprob: -7.747788906097412

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003100791363976896
    2. 'self' → logprob: -8.500309944152832
    3. '
' → logprob: -9.875309944152832
    4. '        
' → logprob: -10.750309944152832
    5. ' self' → logprob: -11.500309944152832
    6. '        ' → logprob: -12.375309944152832
    7. ',' → logprob: -12.375309944152832
    8. ' ' → logprob: -12.750309944152832
    9. '<|end|>' → logprob: -12.875309944152832
    10. '   ' → logprob: -13.000309944152832

Token 249: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008683828637003899
    2. '       ' → logprob: -5.383683681488037
    3. ' self' → logprob: -5.508683681488037
    4. '
' → logprob: -13.133684158325195
    5. '   ' → logprob: -14.258684158325195
    6. '	self' → logprob: -14.383684158325195
    7. ' ' → logprob: -15.383684158325195
    8. '        
' → logprob: -15.883684158325195
    9. '(self' → logprob: -16.633684158325195
    10. '           ' → logprob: -16.758684158325195

Token 250: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.12252503633499146
    2. '.' → logprob: -2.2475249767303467
    3. '.available' → logprob: -5.247525215148926
    4. ' .' → logprob: -6.247525215148926
    5. '.resource' → logprob: -6.497525215148926
    6. 'r' → logprob: -7.872525215148926
    7. '.resources' → logprob: -8.997525215148926
    8. '   ' → logprob: -9.497525215148926
    9. '.p' → logprob: -9.497525215148926
    10. '.initial' → logprob: -10.372525215148926

Token 251: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.000330220878822729
    2. ' _' → logprob: -8.500329971313477
    3. '_' → logprob: -10.000329971313477
    4. '   ' → logprob: -10.750329971313477
    5. '_counts' → logprob: -10.875329971313477
    6. '_c' → logprob: -11.000329971313477
    7. '_COUNT' → logprob: -12.625329971313477
    8. '_counter' → logprob: -12.875329971313477
    9. '_Count' → logprob: -13.375329971313477
    10. '_cnt' → logprob: -13.625329971313477

Token 252: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5124979615211487
    2. '=' → logprob: -1.637497901916504
    3. ' =' → logprob: -1.637497901916504
    4. '<|end|>' → logprob: -5.512497901916504
    5. ' :' → logprob: -5.637497901916504
    6. ':int' → logprob: -5.762497901916504
    7. '<|end|>' → logprob: -7.887497901916504
    8. ',' → logprob: -8.012497901916504
    9. ')' → logprob: -8.512497901916504
    10. '=int' → logprob: -9.012497901916504

Token 253: ' int' (ID: 677)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4290265440940857
    2. ' r' → logprob: -1.0540266036987305
    3. 'int' → logprob: -8.05402660369873
    4. ' int' → logprob: -12.42902660369873
    5. '_r' → logprob: -13.80402660369873
    6. ' ' → logprob: -14.42902660369873
    7. '	r' → logprob: -14.42902660369873
    8. '<|end|>' → logprob: -15.55402660369873
    9. '<int' → logprob: -15.80402660369873
    10. '```' → logprob: -15.99152660369873

Token 254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5245070457458496
    2. '=' → logprob: -0.8995070457458496
    3. ':' → logprob: -6.77450704574585
    4. ' :' → logprob: -9.399507522583008
    5. '<|end|>' → logprob: -9.524507522583008
    6. ' ' → logprob: -10.399507522583008
    7. ',' → logprob: -10.899507522583008
    8. '<|end|>' → logprob: -11.399507522583008
    9. ')' → logprob: -11.774507522583008
    10. '=int' → logprob: -12.899507522583008

Token 255: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.011050059460103512
    2. ' r' → logprob: -4.511050224304199
    3. 'len' → logprob: -13.1360502243042
    4. ' ' → logprob: -16.261049270629883
    5. '   ' → logprob: -16.886049270629883
    6. ' len' → logprob: -17.136049270629883
    7. '  ' → logprob: -18.011049270629883
    8. '    ' → logprob: -18.386049270629883
    9. '	r' → logprob: -18.886049270629883
    10. '_r' → logprob: -19.386049270629883

Token 256: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00721708033233881
    2. 'count' → logprob: -5.007216930389404
    3. 'ount' → logprob: -7.632216930389404
    4. '_' → logprob: -12.632217407226562
    5. 'int' → logprob: -12.632217407226562
    6. '_c' → logprob: -13.132217407226562
    7. '_COUNT' → logprob: -13.132217407226562
    8. 'c' → logprob: -13.257217407226562
    9. 'Count' → logprob: -13.757217407226562
    10. ' count' → logprob: -14.507217407226562

Token 257: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009666071855463088
    2. '
' → logprob: -7.000966548919678
    3. ',' → logprob: -10.875967025756836
    4. 'self' → logprob: -11.125967025756836
    5. '        
' → logprob: -11.875967025756836
    6. ',
' → logprob: -12.625967025756836
    7. '<|end|>' → logprob: -12.875967025756836
    8. '```' → logprob: -13.250967025756836
    9. ' self' → logprob: -13.625967025756836
    10. '   ' → logprob: -13.750967025756836

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.7697225252486533e-06
    2. 'self' → logprob: -13.250003814697266
    3. '
' → logprob: -13.500003814697266
    4. '        
' → logprob: -15.125003814697266
    5. ' self' → logprob: -16.125003814697266
    6. '	' → logprob: -16.375003814697266
    7. '   ' → logprob: -16.500003814697266
    8. ',' → logprob: -16.875003814697266
    9. '           ' → logprob: -17.125003814697266
    10. '```' → logprob: -17.375003814697266

Token 259: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.000343210413120687
    2. '       ' → logprob: -8.000343322753906
    3. ' self' → logprob: -12.125343322753906
    4. '
' → logprob: -13.250343322753906
    5. '   ' → logprob: -15.250343322753906
    6. '        
' → logprob: -15.500343322753906
    7. 'from' → logprob: -17.500343322753906
    8. '```' → logprob: -17.875343322753906
    9. '	self' → logprob: -17.875343322753906
    10. '           ' → logprob: -18.000343322753906

Token 260: '.available' (ID: 87418)
  Prédit: '.available'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.available' → logprob: -0.00040791230276227
    2. '.initial' → logprob: -8.500408172607422
    3. '.' → logprob: -9.125408172607422
    4. 'available' → logprob: -10.625408172607422
    5. '.resources' → logprob: -10.625408172607422
    6. '.process' → logprob: -11.000408172607422
    7. ' .' → logprob: -11.125408172607422
    8. '.current' → logprob: -12.000408172607422
    9. '.resource' → logprob: -12.875408172607422
    10. '._' → logprob: -13.625408172607422

Token 261: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34247153997421265
    2. ' =' → logprob: -1.3424715995788574
    3. '=' → logprob: -3.5924715995788574
    4. ' :' → logprob: -6.717471599578857
    5. '[:]' → logprob: -10.2174711227417
    6. ':int' → logprob: -13.0924711227417
    7. '   ' → logprob: -13.7174711227417
    8. '[' → logprob: -13.8424711227417
    9. ' ' → logprob: -13.8424711227417
    10. ':list' → logprob: -14.5924711227417

Token 262: ' List' (ID: 2655)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.20144928991794586
    2. ' initial' → logprob: -1.7014492750167847
    3. '[' → logprob: -10.826449394226074
    4. '(initial' → logprob: -12.076449394226074
    5. 'available' → logprob: -12.951449394226074
    6. 'List' → logprob: -13.076449394226074
    7. '	initial' → logprob: -13.076449394226074
    8. ' [' → logprob: -13.326449394226074
    9. ' ' → logprob: -14.201449394226074
    10. ' available' → logprob: -14.451449394226074

Token 263: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.666993507067673e-05
    2. '(int' → logprob: -11.375036239624023
    3. ' =' → logprob: -11.625036239624023
    4. '<int' → logprob: -12.000036239624023
    5. '=int' → logprob: -12.875036239624023
    6. '[' → logprob: -13.000036239624023
    7. '[List' → logprob: -13.750036239624023
    8. 'int' → logprob: -14.000036239624023
    9. '[in' → logprob: -14.125036239624023
    10. '=' → logprob: -14.375036239624023

Token 264: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001126167830079794
    2. '=' → logprob: -7.376126289367676
    3. ']=' → logprob: -7.876126289367676
    4. ' ]' → logprob: -9.376126289367676
    5. ' =' → logprob: -10.376126289367676
    6. ')' → logprob: -12.876126289367676
    7. '[:]' → logprob: -15.626126289367676
    8. '']' → logprob: -15.876126289367676
    9. '[' → logprob: -16.00112533569336
    10. '   ' → logprob: -16.25112533569336

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022473573684692
    2. ' =' → logprob: -1.9102246761322021
    3. '[' → logprob: -15.410224914550781
    4. '[:]' → logprob: -15.785224914550781
    5. ' ' → logprob: -16.78522491455078
    6. ' =[' → logprob: -17.28522491455078
    7. ')' → logprob: -17.66022491455078
    8. ']' → logprob: -18.28522491455078
    9. '=[' → logprob: -18.41022491455078
    10. '=

' → logprob: -18.53522491455078

Token 266: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.006716079078614712
    2. ' initial' → logprob: -5.006716251373291
    3. '   ' → logprob: -15.006715774536133
    4. '	initial' → logprob: -15.381715774536133
    5. '(initial' → logprob: -15.631715774536133
    6. 'available' → logprob: -16.881715774536133
    7. ' ' → logprob: -17.381715774536133
    8. '[' → logprob: -18.006715774536133
    9. '.initial' → logprob: -19.131715774536133
    10. '  ' → logprob: -19.381715774536133

Token 267: '_available' (ID: 61823)
  Prédit: '_available'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_available' → logprob: -2.522638169466518e-05
    2. 'available' → logprob: -10.625024795532227
    3. 'Available' → logprob: -14.125024795532227
    4. '_AVAILABLE' → logprob: -16.250024795532227
    5. '_' → logprob: -17.875024795532227
    6. '_av' → logprob: -18.250024795532227
    7. ' available' → logprob: -18.875024795532227
    8. '.available' → logprob: -19.000024795532227
    9. '_count' → logprob: -19.125024795532227
    10. '_resources' → logprob: -19.500024795532227

Token 268: '[:]' (ID: 194237)
  Prédit: '[:]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.008618593215942383
    2. '[:' → logprob: -4.758618354797363
    3. '.copy' → logprob: -12.508618354797363
    4. '[' → logprob: -15.383618354797363
    5. '<|end|>' → logprob: -16.50861930847168
    6. '[]' → logprob: -16.88361930847168
    7. '[::-' → logprob: -17.25861930847168
    8. '.' → logprob: -18.25861930847168
    9. ':' → logprob: -18.50861930847168
    10. '<|end|>' → logprob: -18.88361930847168

Token 269: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002710011089220643
    2. '<|end|>' → logprob: -6.127709865570068
    3. '
' → logprob: -7.877709865570068
    4. 'self' → logprob: -10.002710342407227
    5. ',' → logprob: -10.002710342407227
    6. '<|end|>' → logprob: -11.002710342407227
    7. '   ' → logprob: -11.752710342407227
    8. '        
' → logprob: -11.877710342407227
    9. '#' → logprob: -12.877710342407227
    10. ')' → logprob: -13.002710342407227

Token 270: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7093234062194824
    2. '
' → logprob: -0.9593234062194824
    3. 'self' → logprob: -2.0843234062194824
    4. ' self' → logprob: -8.95932388305664
    5. '<|end|>' → logprob: -9.08432388305664
    6. '
' → logprob: -9.95932388305664
    7. '   ' → logprob: -10.20932388305664
    8. '[self' → logprob: -10.33432388305664
    9. ',' → logprob: -10.70932388305664
    10. '        
' → logprob: -10.83432388305664

Token 271: ' available' (ID: 2839)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.30916067957878113
    2. '[:]' → logprob: -1.6841607093811035
    3. ' initial' → logprob: -3.4341607093811035
    4. 'available' → logprob: -3.8091607093811035
    5. '[' → logprob: -4.1841607093811035
    6. '[:' → logprob: -5.4341607093811035
    7. ' available' → logprob: -6.6841607093811035
    8. '[]' → logprob: -6.9341607093811035
    9. '[len' → logprob: -7.0591607093811035
    10. '[
' → logprob: -7.5591607093811035

Token 272: ' instances' (ID: 23490)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: ' of' (ID: 328)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.36729666590690613
    2. '[:' → logprob: -1.6172966957092285
    3. ' per' → logprob: -2.9922966957092285
    4. '.copy' → logprob: -3.8672966957092285
    5. '<|end|>' → logprob: -3.8672966957092285
    6. ' of' → logprob: -4.4922966957092285
    7. ' for' → logprob: -6.4922966957092285
    8. 'per' → logprob: -6.8672966957092285
    9. '[' → logprob: -6.9922966957092285
    10. '       ' → logprob: -7.1172966957092285

Token 274: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.10925804823637009
    2. 'resources' → logprob: -2.609257936477661
    3. ' each' → logprob: -3.984257936477661
    4. 'resource' → logprob: -4.73425817489624
    5. ' resources' → logprob: -6.10925817489624
    6. ' resource' → logprob: -8.484257698059082
    7. 'all' → logprob: -10.484257698059082
    8. 'r' → logprob: -10.734257698059082
    9. 'every' → logprob: -11.984257698059082
    10. '```' → logprob: -12.359257698059082

Token 275: ' resource' (ID: 8305)
  Prédit: 'resource'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resource' → logprob: -0.6338514685630798
    2. ' resource' → logprob: -0.7588514685630798
    3. '_resource' → logprob: -7.383851528167725
    4. 'r' → logprob: -8.383851051330566
    5. '<|end|>' → logprob: -9.133851051330566
    6. '(resource' → logprob: -9.508851051330566
    7. ' ' → logprob: -10.008851051330566
    8. 'resources' → logprob: -10.258851051330566
    9. 'Resource' → logprob: -10.633851051330566
    10. '	resource' → logprob: -10.758851051330566

Token 276: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010688089241739362
    2. 'self' → logprob: -9.250106811523438
    3. ' self' → logprob: -11.875106811523438
    4. '   ' → logprob: -13.250106811523438
    5. ',' → logprob: -13.750106811523438
    6. '
' → logprob: -15.375106811523438
    7. '<|end|>' → logprob: -15.750106811523438
    8. '#' → logprob: -15.875106811523438
    9. '           ' → logprob: -16.000106811523438
    10. '        
' → logprob: -16.625106811523438

Token 278: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.0391463193809614e-05
    2. '       ' → logprob: -9.750060081481934
    3. ' self' → logprob: -13.250060081481934
    4. '#' → logprob: -16.25006103515625
    5. '        
' → logprob: -16.75006103515625
    6. '
' → logprob: -17.12506103515625
    7. '   ' → logprob: -17.87506103515625
    8. '[self' → logprob: -19.25006103515625
    9. 'assert' → logprob: -19.50006103515625
    10. '	self' → logprob: -19.62506103515625

Token 279: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -0.0024556764401495457
    2. 'process' → logprob: -6.502455711364746
    3. ' .' → logprob: -7.127455711364746
    4. ' processes' → logprob: -9.502455711364746
    5. '_process' → logprob: -10.877455711364746
    6. '.' → logprob: -10.877455711364746
    7. '.pro' → logprob: -10.877455711364746
    8. '.p' → logprob: -12.502455711364746
    9. '.Process' → logprob: -12.877455711364746
    10. '   ' → logprob: -13.127455711364746

Token 280: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -3.106736039626412e-05
    2. '_list' → logprob: -11.000031471252441
    3. 'ess' → logprob: -12.375031471252441
    4. 'esses' → logprob: -12.750031471252441
    5. 's' → logprob: -13.000031471252441
    6. 'eses' → logprob: -13.625031471252441
    7. 'ed' → logprob: -14.250031471252441
    8. 'ses' → logprob: -14.750031471252441
    9. '_es' → logprob: -14.750031471252441
    10. '```' → logprob: -15.625031471252441

Token 281: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01651979424059391
    2. ' =' → logprob: -4.141520023345947
    3. '=' → logprob: -7.641520023345947
    4. ' :' → logprob: -12.266519546508789
    5. '=[]' → logprob: -14.641519546508789
    6. '[' → logprob: -17.01651954650879
    7. '   ' → logprob: -17.26651954650879
    8. ' ' → logprob: -17.26651954650879
    9. '=[' → logprob: -17.39151954650879
    10. 's' → logprob: -17.89151954650879

Token 282: ' List' (ID: 2655)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.017933817580342293
    2. '[' → logprob: -4.2679338455200195
    3. ' [' → logprob: -6.2679338455200195
    4. 'List' → logprob: -6.5179338455200195
    5. ' List' → logprob: -8.01793384552002
    6. '[
' → logprob: -10.51793384552002
    7. '[]' → logprob: -10.64293384552002
    8. ' []' → logprob: -12.01793384552002
    9. '[p' → logprob: -13.76793384552002
    10. ' [
' → logprob: -13.89293384552002

Token 283: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.7697225252486533e-06
    2. '[List' → logprob: -14.125003814697266
    3. '[
' → logprob: -14.375003814697266
    4. '[int' → logprob: -14.625003814697266
    5. '=' → logprob: -14.625003814697266
    6. ' =' → logprob: -14.875003814697266
    7. '(Process' → logprob: -15.125003814697266
    8. ' [' → logprob: -15.750003814697266
    9. '```' → logprob: -16.000003814697266
    10. 'Process' → logprob: -16.125003814697266

Token 284: 'Process' (ID: 7212)
  Prédit: 'Process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Process' → logprob: -2.339278580620885e-06
    2. ' Process' → logprob: -13.000001907348633
    3. 'process' → logprob: -16.875001907348633
    4. '	Process' → logprob: -17.375001907348633
    5. '[' → logprob: -19.000001907348633
    6. '(Process' → logprob: -19.250001907348633
    7. '.Process' → logprob: -21.250001907348633
    8. '_process' → logprob: -21.375001907348633
    9. 'rocess' → logprob: -22.125001907348633
    10. '_Process' → logprob: -22.125001907348633

Token 285: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0921942703134846e-05
    2. ']=' → logprob: -11.87501049041748
    3. '=' → logprob: -13.62501049041748
    4. ')' → logprob: -13.87501049041748
    5. '[' → logprob: -14.00001049041748
    6. ' ]' → logprob: -14.37501049041748
    7. ' =' → logprob: -15.37501049041748
    8. '   ' → logprob: -17.000011444091797
    9. '[int' → logprob: -18.125011444091797
    10. '(' → logprob: -18.375011444091797

Token 286: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008615872822701931
    2. ' =' → logprob: -4.758615970611572
    3. '=[]' → logprob: -13.633615493774414
    4. '[' → logprob: -16.383615493774414
    5. ']' → logprob: -16.758615493774414
    6. '=[' → logprob: -17.633615493774414
    7. '   ' → logprob: -18.758615493774414
    8. '[]' → logprob: -19.008615493774414
    9. '[:]' → logprob: -19.008615493774414
    10. ']=' → logprob: -19.133615493774414

Token 287: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019337546546012163
    2. ' [' → logprob: -6.501933574676514
    3. '[
' → logprob: -8.251934051513672
    4. '[]
' → logprob: -9.251934051513672
    5. '[]' → logprob: -9.626934051513672
    6. '[p' → logprob: -12.876934051513672
    7. ' []' → logprob: -13.376934051513672
    8. '   ' → logprob: -13.376934051513672
    9. '[]

' → logprob: -13.876934051513672
    10. '       ' → logprob: -14.501934051513672

Token 288: 'Process' (ID: 7212)
  Prédit: 'Process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Process' → logprob: -7.493430894101039e-05
    2. ' Process' → logprob: -9.500075340270996
    3. '	Process' → logprob: -16.75007438659668
    4. '   ' → logprob: -18.00007438659668
    5. '       ' → logprob: -18.00007438659668
    6. '(Process' → logprob: -18.25007438659668
    7. '           ' → logprob: -18.50007438659668
    8. '_Process' → logprob: -21.25007438659668
    9. 'Processes' → logprob: -21.62507438659668
    10. '               ' → logprob: -21.75007438659668

Token 289: '(pid' (ID: 89422)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.038200657814741135
    2. '(pid' → logprob: -3.288200616836548
    3. '(p' → logprob: -9.038200378417969
    4. '(' → logprob: -10.163200378417969
    5. '(idx' → logprob: -13.663200378417969
    6. ' (' → logprob: -15.413200378417969
    7. '(pi' → logprob: -15.663200378417969
    8. 'pid' → logprob: -16.16320037841797
    9. '(id' → logprob: -16.66320037841797
    10. '(
' → logprob: -16.91320037841797

Token 290: '=i' (ID: 48141)
  Prédit: '(pid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pid' → logprob: -0.3991578221321106
    2. '(i' → logprob: -1.2741577625274658
    3. '(' → logprob: -3.649157762527466
    4. '(p' → logprob: -4.399158000946045
    5. ',' → logprob: -4.649158000946045
    6. '=' → logprob: -7.649158000946045
    7. ' (' → logprob: -8.024157524108887
    8. '=i' → logprob: -8.399157524108887
    9. ')' → logprob: -8.899157524108887
    10. 'i' → logprob: -9.274157524108887

Token 291: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -5.633853652398102e-05
    2. ' ,' → logprob: -9.875056266784668
    3. ',p' → logprob: -12.750056266784668
    4. 'resource' → logprob: -14.750056266784668
    5. ',
' → logprob: -15.250056266784668
    6. ',r' → logprob: -15.375056266784668
    7. '   ' → logprob: -15.875056266784668
    8. ',res' → logprob: -15.875056266784668
    9. ')' → logprob: -16.125057220458984
    10. ',

' → logprob: -16.250057220458984

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01930389553308487
    2. '0' → logprob: -4.019303798675537
    3. ' ' → logprob: -6.769303798675537
    4. '   ' → logprob: -12.894304275512695
    5. ')' → logprob: -13.519304275512695
    6. ',' → logprob: -14.769304275512695
    7. '```' → logprob: -16.144304275512695
    8. '=' → logprob: -16.269304275512695
    9. '
' → logprob: -16.769304275512695
    10. 'start' → logprob: -16.894304275512695

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.841743303695694e-05
    2. ' ,' → logprob: -9.37509822845459
    3. ',p' → logprob: -11.37509822845459
    4. ',r' → logprob: -14.62509822845459
    5. ',
' → logprob: -15.12509822845459
    6. ')' → logprob: -15.12509822845459
    7. '   ' → logprob: -15.87509822845459
    8. '           ' → logprob: -16.000099182128906
    9. '       ' → logprob: -16.000099182128906
    10. ',res' → logprob: -16.125099182128906

Token 294: ' resource' (ID: 8305)
  Prédit: 'resource'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resource' → logprob: -0.0031786637846380472
    2. ' resource' → logprob: -5.753178596496582
    3. '	resource' → logprob: -14.378178596496582
    4. '(resource' → logprob: -15.253178596496582
    5. '.resource' → logprob: -16.2531795501709
    6. '           ' → logprob: -17.5031795501709
    7. '_resource' → logprob: -18.1281795501709
    8. ' ' → logprob: -18.2531795501709
    9. ')' → logprob: -18.5031795501709
    10. '         ' → logprob: -18.8781795501709

Token 295: '_ne' (ID: 35498)
  Prédit: '_ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ne' → logprob: -1.5570885807392187e-05
    2. 'needs' → logprob: -11.125015258789062
    3. '_need' → logprob: -15.875015258789062
    4. '_' → logprob: -16.000015258789062
    5. 's' → logprob: -16.500015258789062
    6. '_me' → logprob: -16.750015258789062
    7. ' needs' → logprob: -16.875015258789062
    8. 'ne' → logprob: -17.125015258789062
    9. '_needed' → logprob: -17.125015258789062
    10. '```' → logprob: -17.375015258789062

Token 296: 'eds' (ID: 5575)
  Prédit: 'eds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eds' → logprob: -1.5213274309644476e-05
    2. 'ds' → logprob: -11.750015258789062
    3. 'e' → logprob: -12.875015258789062
    4. '   ' → logprob: -13.500015258789062
    5. 'ed' → logprob: -14.625015258789062
    6. '[' → logprob: -15.125015258789062
    7. 'EDS' → logprob: -15.250015258789062
    8. '```' → logprob: -15.250015258789062
    9. '=' → logprob: -15.500015258789062
    10. '_' → logprob: -15.625015258789062

Token 297: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007254242897033691
    2. 'process' → logprob: -5.007254123687744
    3. '(process' → logprob: -8.132254600524902
    4. ' processes' → logprob: -8.382254600524902
    5. ' =' → logprob: -11.757254600524902
    6. ')' → logprob: -12.507254600524902
    7. '=(' → logprob: -13.757254600524902
    8. '   ' → logprob: -15.132254600524902
    9. '(' → logprob: -15.132254600524902
    10. '(resources' → logprob: -15.132254600524902

Token 298: 'process' (ID: 9139)
  Prédit: 'process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.002138959476724267
    2. ' processes' → logprob: -6.252139091491699
    3. 'needs' → logprob: -8.7521390914917
    4. 'pn' → logprob: -11.3771390914917
    5. ' process' → logprob: -11.8771390914917
    6. 'proc' → logprob: -12.1271390914917
    7. 'p' → logprob: -12.1271390914917
    8. 'need' → logprob: -12.1271390914917
    9. '   ' → logprob: -12.3771390914917
    10. 'resources' → logprob: -13.2521390914917

Token 299: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10713911056518555
    2. 'es' → logprob: -2.9821391105651855
    3. '_ne' → logprob: -2.9821391105651855
    4. '_s' → logprob: -8.982139587402344
    5. 'needs' → logprob: -9.982139587402344
    6. '_need' → logprob: -10.732139587402344
    7. 'ess' → logprob: -11.357139587402344
    8. '_es' → logprob: -12.357139587402344
    9. 'e' → logprob: -12.732139587402344
    10. ')' → logprob: -12.982139587402344

Token 300: '_ne' (ID: 35498)
  Prédit: '_ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ne' → logprob: -6.968934758333489e-05
    2. 'needs' → logprob: -9.625069618225098
    3. 'ne' → logprob: -13.750069618225098
    4. '_need' → logprob: -14.250069618225098
    5. '_' → logprob: -15.000069618225098
    6. '[i' → logprob: -15.250069618225098
    7. ')' → logprob: -15.750069618225098
    8. 's' → logprob: -16.000070571899414
    9. ' needs' → logprob: -16.125070571899414
    10. '_n' → logprob: -16.500070571899414

Token 301: 'eds' (ID: 5575)
  Prédit: 'eds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eds' → logprob: -3.762356209335849e-05
    2. 'ds' → logprob: -10.87503719329834
    3. '[' → logprob: -12.00003719329834
    4. 'ed' → logprob: -12.12503719329834
    5. '   ' → logprob: -13.12503719329834
    6. 'ads' → logprob: -14.37503719329834
    7. 'EDS' → logprob: -14.87503719329834
    8. 'e' → logprob: -15.00003719329834
    9. '```' → logprob: -15.00003719329834
    10. ')' → logprob: -15.00003719329834

Token 302: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001749351795297116
    2. '[p' → logprob: -8.750174522399902
    3. '[' → logprob: -11.375174522399902
    4. ')' → logprob: -12.500174522399902
    5. '[j' → logprob: -14.750174522399902
    6. 'i' → logprob: -15.625174522399902
    7. '[idx' → logprob: -16.37517547607422
    8. '[s' → logprob: -16.87517547607422
    9. '[ip' → logprob: -16.87517547607422
    10. 'p' → logprob: -17.00017547607422

Token 303: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036144492332823575
    2. '])' → logprob: -8.625361442565918
    3. ' )' → logprob: -9.125361442565918
    4. ')]' → logprob: -10.125361442565918
    5. ')
' → logprob: -11.250361442565918
    6. ')])' → logprob: -11.625361442565918
    7. '))' → logprob: -12.750361442565918
    8. '   ' → logprob: -12.750361442565918
    9. '       ' → logprob: -13.250361442565918
    10. ' ' → logprob: -13.625361442565918

Token 304: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02110663615167141
    2. 'for' → logprob: -3.896106719970703
    3. ')' → logprob: -7.771106719970703
    4. '       ' → logprob: -10.021106719970703
    5. '           ' → logprob: -10.271106719970703
    6. '	for' → logprob: -10.646106719970703
    7. ']' → logprob: -11.146106719970703
    8. '        ' → logprob: -12.396106719970703
    9. '   ' → logprob: -12.396106719970703
    10. '         ' → logprob: -12.771106719970703

Token 305: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16473904252052307
    2. 'range' → logprob: -1.9147390127182007
    3. ' i' → logprob: -5.66473913192749
    4. 'i' → logprob: -6.91473913192749
    5. ' ' → logprob: -10.539738655090332
    6. ' in' → logprob: -12.539738655090332
    7. '_range' → logprob: -12.789738655090332
    8. '	range' → logprob: -12.914738655090332
    9. '(range' → logprob: -13.164738655090332
    10. 'in' → logprob: -13.164738655090332

Token 306: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003658983623608947
    2. 'in' → logprob: -5.753658771514893
    3. ' range' → logprob: -8.00365924835205
    4. 'range' → logprob: -9.25365924835205
    5. '<|end|>' → logprob: -10.37865924835205
    6. ' ' → logprob: -11.62865924835205
    7. ')' → logprob: -12.62865924835205
    8. '<|end|>' → logprob: -13.62865924835205
    9. '  ' → logprob: -14.00365924835205
    10. 'import' → logprob: -14.12865924835205

Token 307: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740782678127289
    2. ' range' → logprob: -0.9740782976150513
    3. ' ' → logprob: -14.474078178405762
    4. '	range' → logprob: -15.224078178405762
    5. '(range' → logprob: -15.474078178405762
    6. '   ' → logprob: -15.724078178405762
    7. '  ' → logprob: -16.974079132080078
    8. 'p' → logprob: -17.599079132080078
    9. ' xrange' → logprob: -17.849079132080078
    10. ' p' → logprob: -18.224079132080078

Token 308: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.01118080411106348
    2. '(self' → logprob: -4.511180877685547
    3. 'self' → logprob: -10.011180877685547
    4. 'p' → logprob: -10.386180877685547
    5. '(r' → logprob: -10.386180877685547
    6. '(' → logprob: -10.761180877685547
    7. ' p' → logprob: -13.386180877685547
    8. ' self' → logprob: -13.886180877685547
    9. ')p' → logprob: -14.386180877685547
    10. '(len' → logprob: -14.511180877685547

Token 309: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.5822400857578032e-05
    2. 'count' → logprob: -11.125025749206543
    3. ')' → logprob: -12.625025749206543
    4. '_COUNT' → logprob: -12.625025749206543
    5. '_' → logprob: -13.125025749206543
    6. '   ' → logprob: -14.500025749206543
    7. '_c' → logprob: -14.500025749206543
    8. 'Count' → logprob: -15.375025749206543
    9. ')_' → logprob: -15.375025749206543
    10. ' _' → logprob: -16.00002670288086

Token 310: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.048681724816560745
    2. ')' → logprob: -3.0486817359924316
    3. ']' → logprob: -9.548681259155273
    4. '       ' → logprob: -12.173681259155273
    5. ')
' → logprob: -12.298681259155273
    6. ')])' → logprob: -12.548681259155273
    7. ' )' → logprob: -12.798681259155273
    8. '   ' → logprob: -13.173681259155273
    9. ')}' → logprob: -13.548681259155273
    10. ')],' → logprob: -13.798681259155273

Token 311: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1694527268409729
    2. 'def' → logprob: -2.294452667236328
    3. '
' → logprob: -3.044452667236328
    4. '<|end|>' → logprob: -5.669452667236328
    5. '    
' → logprob: -6.169452667236328
    6. ' def' → logprob: -7.169452667236328
    7. '       ' → logprob: -7.669452667236328
    8. '<|end|>' → logprob: -8.044452667236328
    9. '

' → logprob: -9.169452667236328
    10. '        
' → logprob: -9.794452667236328

Token 312: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02538999542593956
    2. ' def' → logprob: -3.7753899097442627
    3. '   ' → logprob: -6.150390148162842
    4. ')' → logprob: -12.400389671325684
    5. '
' → logprob: -12.775389671325684
    6. '	def' → logprob: -13.525389671325684
    7. '    
' → logprob: -14.525389671325684
    8. '       ' → logprob: -16.025390625
    9. 'ndef' → logprob: -16.400390625
    10. '

' → logprob: -16.525390625

Token 313: ' allocate' (ID: 48502)
  Prédit: ' safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' safe' → logprob: -0.7497028112411499
    2. ' is' → logprob: -1.49970281124115
    3. ' can' → logprob: -2.3747029304504395
    4. 'safe' → logprob: -2.7497029304504395
    5. 'is' → logprob: -3.2497029304504395
    6. ' request' → logprob: -3.3747029304504395
    7. 'can' → logprob: -3.6247029304504395
    8. ' allocate' → logprob: -4.4997029304504395
    9. ' try' → logprob: -4.8747029304504395
    10. 'request' → logprob: -4.9997029304504395

Token 314: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05312296748161316
    2. '_resources' → logprob: -3.1781229972839355
    3. '(' → logprob: -4.9281229972839355
    4. '_resource' → logprob: -6.0531229972839355
    5. '_' → logprob: -8.428122520446777
    6. '_request' → logprob: -9.553122520446777
    7. ' (' → logprob: -9.553122520446777
    8. 'resources' → logprob: -10.928122520446777
    9. 'Resources' → logprob: -11.178122520446777
    10. '_(' → logprob: -11.303122520446777

Token 315: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.17861652374267578
    2. ',' → logprob: -2.053616523742676
    3. 'self' → logprob: -3.928616523742676
    4. '_resources' → logprob: -5.803616523742676
    5. '   ' → logprob: -5.928616523742676
    6. '       ' → logprob: -5.928616523742676
    7. ')' → logprob: -5.928616523742676
    8. ' (' → logprob: -6.553616523742676
    9. ' self' → logprob: -7.053616523742676
    10. ' ,' → logprob: -7.178616523742676

Token 316: ' pid' (ID: 23462)
  Prédit: 'pid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' → logprob: -0.3348446190357208
    2. ' pid' → logprob: -1.3348445892333984
    3. 'process' → logprob: -4.209844589233398
    4. ' process' → logprob: -5.334844589233398
    5. 'proc' → logprob: -6.959844589233398
    6. 'p' → logprob: -8.334844589233398
    7. 'self' → logprob: -8.584844589233398
    8. ' p' → logprob: -9.334844589233398
    9. '   ' → logprob: -10.084844589233398
    10. ')' → logprob: -10.084844589233398

Token 317: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3164336681365967
    2. ',' → logprob: -1.3164336681365967
    3. ':int' → logprob: -5.816433906555176
    4. ' ,' → logprob: -8.816433906555176
    5. ' :' → logprob: -10.566433906555176
    6. '   ' → logprob: -11.941433906555176
    7. '=' → logprob: -13.316433906555176
    8. ',int' → logprob: -13.691433906555176
    9. 'int' → logprob: -14.441433906555176
    10. '       ' → logprob: -14.566433906555176

Token 318: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008625566959381104
    2. ' int' → logprob: -4.758625507354736
    3. '   ' → logprob: -12.383625984191895
    4. '[int' → logprob: -13.133625984191895
    5. ':int' → logprob: -13.633625984191895
    6. '	int' → logprob: -13.883625984191895
    7. ' ' → logprob: -14.133625984191895
    8. ')' → logprob: -14.758625984191895
    9. '(int' → logprob: -14.883625984191895
    10. ',' → logprob: -15.008625984191895

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.641841820150148e-05
    2. ' ,' → logprob: -10.62502670288086
    3. ')' → logprob: -13.50002670288086
    4. '   ' → logprob: -14.62502670288086
    5. '       ' → logprob: -17.00002670288086
    6. ',p' → logprob: -17.62502670288086
    7. ':' → logprob: -17.87502670288086
    8. '_,' → logprob: -18.37502670288086
    9. '	' → logprob: -19.00002670288086
    10. '):' → logprob: -19.00002670288086

Token 320: ' rid' (ID: 12566)
  Prédit: 'request'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'request' → logprob: -0.4331567883491516
    2. 'resource' → logprob: -1.6831567287445068
    3. 'resources' → logprob: -2.558156728744507
    4. 'allocation' → logprob: -3.183156728744507
    5. 'amount' → logprob: -4.683156967163086
    6. ' request' → logprob: -4.683156967163086
    7. 'requested' → logprob: -4.808156967163086
    8. 'alloc' → logprob: -5.433156967163086
    9. ' resource' → logprob: -5.558156967163086
    10. 'req' → logprob: -5.808156967163086

Token 321: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01165776140987873
    2. ',' → logprob: -4.51165771484375
    3. '):' → logprob: -7.88665771484375
    4. ':int' → logprob: -8.76165771484375
    5. ')' → logprob: -10.26165771484375
    6. ' :' → logprob: -11.13665771484375
    7. 'ex' → logprob: -11.38665771484375
    8. 'x' → logprob: -12.01165771484375
    9. ' ,' → logprob: -13.01165771484375
    10. 'int' → logprob: -13.26165771484375

Token 322: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14296585321426392
    2. ' int' → logprob: -2.017965793609619
    3. ':int' → logprob: -8.517966270446777
    4. ',' → logprob: -10.642966270446777
    5. 'nt' → logprob: -11.142966270446777
    6. ':' → logprob: -11.392966270446777
    7. ' ' → logprob: -11.517966270446777
    8. '[int' → logprob: -12.142966270446777
    9. '(int' → logprob: -12.267966270446777
    10. ',int' → logprob: -12.392966270446777

Token 323: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.73052782076411e-05
    2. ' ,' → logprob: -9.625067710876465
    3. ')' → logprob: -14.500067710876465
    4. ':' → logprob: -15.250067710876465
    5. '   ' → logprob: -15.500067710876465
    6. ',int' → logprob: -15.875067710876465
    7. '       ' → logprob: -17.12506675720215
    8. '):' → logprob: -17.37506675720215
    9. 'int' → logprob: -17.62506675720215
    10. '[],' → logprob: -17.75006675720215

Token 324: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5980991721153259
    2. ',' → logprob: -0.8480991721153259
    3. ' ->' → logprob: -4.723099231719971
    4. ')' → logprob: -5.348099231719971
    5. '   ' → logprob: -5.723099231719971
    6. '->' → logprob: -5.973099231719971
    7. '       ' → logprob: -6.223099231719971
    8. '):' → logprob: -8.348098754882812
    9. ')->' → logprob: -9.098098754882812
    10. '    ' → logprob: -10.098098754882812

Token 325: ' None' (ID: 4662)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.1638922393321991
    2. ' bool' → logprob: -1.9138922691345215
    3. 'None' → logprob: -6.0388922691345215
    4. ' None' → logprob: -7.2888922691345215
    5. 'int' → logprob: -7.5388922691345215
    6. ' int' → logprob: -10.538891792297363
    7. ' ' → logprob: -11.038891792297363
    8. '   ' → logprob: -12.163891792297363
    9. '	bool' → logprob: -12.163891792297363
    10. '  ' → logprob: -12.538891792297363

Token 326: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04966249689459801
    2. ':
' → logprob: -3.1746625900268555
    3. '       ' → logprob: -5.0496625900268555
    4. '   ' → logprob: -8.924662590026855
    5. '):' → logprob: -10.049662590026855
    6. '):
' → logprob: -10.424662590026855
    7. ':
' → logprob: -11.924662590026855
    8. ',' → logprob: -12.424662590026855
    9. '():' → logprob: -12.549662590026855
    10. ':

' → logprob: -12.799662590026855

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024132427643053234
    2. '        
' → logprob: -9.12524127960205
    3. '   ' → logprob: -9.50024127960205
    4. ':' → logprob: -10.75024127960205
    5. '
' → logprob: -12.00024127960205
    6. '    
' → logprob: -12.25024127960205
    7. ' 
' → logprob: -12.25024127960205
    8. ' if' → logprob: -12.75024127960205
    9. '    ' → logprob: -13.00024127960205
    10. '           ' → logprob: -13.12524127960205

Token 328: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014993979595601559
    2. ' if' → logprob: -4.639994144439697
    3. ' process' → logprob: -6.139994144439697
    4. 'if' → logprob: -6.639994144439697
    5. 'process' → logprob: -7.014994144439697
    6. ' p' → logprob: -8.389993667602539
    7. '   ' → logprob: -8.889993667602539
    8. '        
' → logprob: -9.014993667602539
    9. '        ' → logprob: -9.639993667602539
    10. ' for' → logprob: -9.764993667602539

Token 329: ' Allocate' (ID: 101517)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7901894450187683
    2. 'process' → logprob: -1.540189504623413
    3. 'if' → logprob: -1.915189504623413
    4. ' if' → logprob: -2.915189504623413
    5. 'proc' → logprob: -2.915189504623413
    6. ' process' → logprob: -3.290189504623413
    7. 'p' → logprob: -3.790189504623413
    8. ' proc' → logprob: -5.040189266204834
    9. '   ' → logprob: -5.415189266204834
    10. ' p' → logprob: -5.665189266204834

Token 330: ' one' (ID: 1001)
  Prédit: ' resource'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' resource' → logprob: -1.0518518686294556
    2. ' if' → logprob: -1.5518518686294556
    3. ' resources' → logprob: -1.9268518686294556
    4. ' a' → logprob: -2.551851749420166
    5. '       ' → logprob: -2.551851749420166
    6. ' requested' → logprob: -3.551851749420166
    7. ' an' → logprob: -3.926851749420166
    8. ' one' → logprob: -4.551851749420166
    9. ' self' → logprob: -4.926851749420166
    10. 'resources' → logprob: -5.176851749420166

Token 331: ' instance' (ID: 4934)
  Prédit: ' instance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' instance' → logprob: -0.58226078748703
    2. ' resource' → logprob: -0.83226078748703
    3. ' unit' → logprob: -5.957260608673096
    4. 'instance' → logprob: -6.332260608673096
    5. ' ' → logprob: -6.957260608673096
    6. 'resource' → logprob: -7.457260608673096
    7. '<|end|>' → logprob: -9.457261085510254
    8. ' if' → logprob: -9.832261085510254
    9. '(resource' → logprob: -10.082261085510254
    10. ' of' → logprob: -10.582261085510254

Token 332: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8646900653839111
    2. ' of' → logprob: -1.3646900653839111
    3. '<|end|>' → logprob: -1.9896900653839111
    4. ' to' → logprob: -2.489690065383911
    5. ' if' → logprob: -2.864690065383911
    6. '        ' → logprob: -3.864690065383911
    7. ' for' → logprob: -5.114689826965332
    8. '<|end|>' → logprob: -5.364689826965332
    9. ' ' → logprob: -5.489689826965332
    10. '    ' → logprob: -5.739689826965332

Token 333: ' rid' (ID: 12566)
  Prédit: ' resource'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' resource' → logprob: -0.15702100098133087
    2. ' resources' → logprob: -2.7820210456848145
    3. ' the' → logprob: -3.0320210456848145
    4. 'resource' → logprob: -3.9070210456848145
    5. ' a' → logprob: -4.9070210456848145
    6. 'resources' → logprob: -5.9070210456848145
    7. 'the' → logprob: -6.0320210456848145
    8. 'r' → logprob: -7.2820210456848145
    9. ' ' → logprob: -7.2820210456848145
    10. ' r' → logprob: -8.407020568847656

Token 334: ' resource' (ID: 8305)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4793856143951416
    2. ' to' → logprob: -0.9793856143951416
    3. 'if' → logprob: -6.4793853759765625
    4. 'to' → logprob: -6.6043853759765625
    5. ' from' → logprob: -6.7293853759765625
    6. ' ' → logprob: -7.4793853759765625
    7. '   ' → logprob: -8.104385375976562
    8. ',' → logprob: -9.229385375976562
    9. '       ' → logprob: -9.729385375976562
    10. 'from' → logprob: -9.729385375976562

Token 335: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2027319371700287
    2. '       ' → logprob: -2.2027318477630615
    3. ' if' → logprob: -2.8277318477630615
    4. '   ' → logprob: -5.327732086181641
    5. '        
' → logprob: -5.327732086181641
    6. ' from' → logprob: -6.327732086181641
    7. '
' → logprob: -7.452732086181641
    8. ',' → logprob: -7.827732086181641
    9. ' for' → logprob: -8.57773208618164
    10. ' 
' → logprob: -8.57773208618164

Token 336: ' process' (ID: 2273)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.44115546345710754
    2. 'self' → logprob: -1.0661554336547852
    3. ' the' → logprob: -4.441155433654785
    4. 'the' → logprob: -8.191155433654785
    5. ' a' → logprob: -8.691155433654785
    6. ' process' → logprob: -9.566155433654785
    7. 'process' → logprob: -10.691155433654785
    8. '       ' → logprob: -10.941155433654785
    9. '   ' → logprob: -11.816155433654785
    10. ' ' → logprob: -11.816155433654785

Token 337: ' pid' (ID: 23462)
  Prédit: '(pid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pid' → logprob: -0.16261838376522064
    2. ' (' → logprob: -2.662618398666382
    3. ' if' → logprob: -2.787618398666382
    4. ' pid' → logprob: -5.162618160247803
    5. '   ' → logprob: -6.037618160247803
    6. '       ' → logprob: -6.412618160247803
    7. ' ' → logprob: -6.537618160247803
    8. 'pid' → logprob: -6.537618160247803
    9. '[' → logprob: -6.787618160247803
    10. 'if' → logprob: -6.787618160247803

Token 338: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003958955407142639
    2. ' if' → logprob: -6.1289591789245605
    3. '        
' → logprob: -7.2539591789245605
    4. '
' → logprob: -8.003958702087402
    5. ',' → logprob: -8.003958702087402
    6. '   ' → logprob: -9.378958702087402
    7. ':' → logprob: -9.503958702087402
    8. '<|end|>' → logprob: -9.628958702087402
    9. ':
' → logprob: -10.253958702087402
    10. '):
' → logprob: -10.753958702087402

Token 339: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007778270519338548
    2. '        
' → logprob: -7.625777721405029
    3. ' 
' → logprob: -9.375778198242188
    4. '<|end|>' → logprob: -9.375778198242188
    5. '  
' → logprob: -10.250778198242188
    6. '
' → logprob: -10.750778198242188
    7. '   ' → logprob: -11.125778198242188
    8. ' if' → logprob: -11.125778198242188
    9. '    
' → logprob: -11.250778198242188
    10. '       
' → logprob: -12.500778198242188

Token 340: ' proc' (ID: 14550)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1783972531557083
    2. ' if' → logprob: -2.8033971786499023
    3. ' process' → logprob: -2.9283971786499023
    4. 'process' → logprob: -3.3033971786499023
    5. 'if' → logprob: -4.803397178649902
    6. ' p' → logprob: -6.053397178649902
    7. 'p' → logprob: -7.053397178649902
    8. 'proc' (adapté à ' proc') → logprob: -7.303397178649902
    9. ' proc' → logprob: -8.803397178649902
    10. ' for' → logprob: -9.178397178649902

Token 341: ':' (ID: 25)
  Prédit: 'ess'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ess' → logprob: -0.018867412582039833
    2. ' =' → logprob: -4.018867492675781
    3. '=' → logprob: -7.268867492675781
    4. 'esses' → logprob: -11.268867492675781
    5. 'es' → logprob: -13.393867492675781
    6. ':' → logprob: -13.518867492675781
    7. 'e' → logprob: -13.893867492675781
    8. ' ess' → logprob: -13.893867492675781
    9. '   ' → logprob: -14.268867492675781
    10. 'essor' → logprob: -14.518867492675781

Token 342: ' Process' (ID: 12482)
  Prédit: ' Process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Process' → logprob: -0.014440490864217281
    2. 'Process' → logprob: -4.264440536499023
    3. ' =' → logprob: -9.014440536499023
    4. '=' → logprob: -9.139440536499023
    5. '	Process' → logprob: -10.889440536499023
    6. '(Process' → logprob: -11.389440536499023
    7. '_Process' → logprob: -12.264440536499023
    8. ' ' → logprob: -12.764440536499023
    9. '_process' → logprob: -13.014440536499023
    10. ' process' → logprob: -13.514440536499023

Token 343: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0046235607005655766
    2. '=' → logprob: -5.3796234130859375
    3. ' ' → logprob: -12.629623413085938
    4. ')' → logprob: -17.504623413085938
    5. '  ' → logprob: -17.629623413085938
    6. '   ' → logprob: -17.629623413085938
    7. ' =
' → logprob: -17.879623413085938
    8. '    ' → logprob: -17.879623413085938
    9. '        ' → logprob: -18.129623413085938
    10. '<|end|>' → logprob: -18.379623413085938

Token 344: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03293576464056969
    2. ' self' → logprob: -3.782935857772827
    3. ' next' → logprob: -5.282935619354248
    4. 'next' → logprob: -5.407935619354248
    5. '[self' → logprob: -10.282936096191406
    6. ' [' → logprob: -11.032936096191406
    7. '   ' → logprob: -11.282936096191406
    8. 'None' → logprob: -12.032936096191406
    9. ' None' → logprob: -12.532936096191406
    10. '[' → logprob: -12.532936096191406

Token 345: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -4.274932143744081e-05
    2. 'process' → logprob: -10.250042915344238
    3. '.' → logprob: -12.250042915344238
    4. '.pro' → logprob: -13.250042915344238
    5. 'rocess' → logprob: -15.375042915344238
    6. ' .' → logprob: -15.625042915344238
    7. '	process' → logprob: -16.750041961669922
    8. ' processes' → logprob: -17.500041961669922
    9. '.get' → logprob: -17.500041961669922
    10. '.p' → logprob: -17.750041961669922

Token 346: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -4.842555426876061e-06
    2. 's' → logprob: -12.875004768371582
    3. 'ses' → logprob: -14.500004768371582
    4. 'esses' → logprob: -14.875004768371582
    5. 'process' → logprob: -15.125004768371582
    6. 'eses' → logprob: -15.375004768371582
    7. '   ' → logprob: -15.875004768371582
    8. '```' → logprob: -16.0000057220459
    9. 'ess' → logprob: -16.1250057220459
    10. '[' → logprob: -16.2500057220459

Token 347: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[
' → logprob: -17.625
    3. 'pid' → logprob: -18.625
    4. '   ' → logprob: -18.75
    5. '```' → logprob: -19.25
    6. ' [' → logprob: -19.5
    7. '(pid' → logprob: -20.25
    8. '[(' → logprob: -20.5
    9. '	' → logprob: -21.25
    10. '[p' → logprob: -21.375

Token 348: 'pid' (ID: 19554)
  Prédit: 'pid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' → logprob: -3.0590548703912646e-05
    2. ' pid' → logprob: -10.750030517578125
    3. '(pid' → logprob: -11.625030517578125
    4. '   ' → logprob: -17.500030517578125
    5. '.pid' → logprob: -17.500030517578125
    6. '_pid' → logprob: -17.750030517578125
    7. 'pi' → logprob: -18.125030517578125
    8. 'pin' → logprob: -18.500030517578125
    9. 'uid' → logprob: -18.875030517578125
    10. 'pit' → logprob: -18.875030517578125

Token 349: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931623816490173
    2. ' -' → logprob: -0.6931623816490173
    3. ']' → logprob: -11.693161964416504
    4. ' ' → logprob: -12.568161964416504
    5. '1' → logprob: -13.818161964416504
    6. '[' → logprob: -13.943161964416504
    7. '   ' → logprob: -14.193161964416504
    8. ')' → logprob: -15.693161964416504
    9. '  ' → logprob: -16.06816291809082
    10. ' ]' → logprob: -17.19316291809082

Token 350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -15.875007629394531
    4. '```' → logprob: -17.50000762939453
    5. ',' → logprob: -19.18750762939453
    6. ')' → logprob: -19.31250762939453
    7. '0' → logprob: -19.31250762939453
    8. '`' → logprob: -19.56250762939453
    9. '  ' → logprob: -19.75000762939453
    10. '۱' → logprob: -19.93750762939453

Token 351: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03960078954696655
    2. ')
' → logprob: -3.7896008491516113
    3. ']' → logprob: -4.164600849151611
    4. ']
' → logprob: -7.789600849151611
    5. '       ' → logprob: -8.414600372314453
    6. ')
' → logprob: -10.789600372314453
    7. '])' → logprob: -11.539600372314453
    8. ' )' → logprob: -12.039600372314453
    9. '   ' → logprob: -12.289600372314453
    10. ')]' → logprob: -12.539600372314453

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025797015987336636
    2. ' if' → logprob: -6.252579689025879
    3. '        
' → logprob: -8.002579689025879
    4. 'if' → logprob: -8.627579689025879
    5. ' 
' → logprob: -9.752579689025879
    6. '
' → logprob: -10.502579689025879
    7. '<|end|>' → logprob: -11.252579689025879
    8. '  
' → logprob: -11.502579689025879
    9. '   ' → logprob: -12.127579689025879
    10. '```' → logprob: -12.377579689025879

Token 353: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02058836631476879
    2. ' if' → logprob: -4.020588397979736
    3. '       ' → logprob: -6.020588397979736
    4. 'assert' → logprob: -12.395587921142578
    5. '        
' → logprob: -14.020587921142578
    6. '	if' → logprob: -14.145587921142578
    7. 'self' (adapté à ' self') → logprob: -14.145587921142578
    8. '
' → logprob: -15.520587921142578
    9. '```' → logprob: -15.895587921142578
    10. '        ' → logprob: -16.020587921142578

Token 354: '.available' (ID: 87418)
  Prédit: '.available'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.available' → logprob: -0.0041603147983551025
    2. '.' → logprob: -5.504160404205322
    3. 'available' → logprob: -9.754159927368164
    4. ' .' → logprob: -11.504159927368164
    5. ' available' → logprob: -12.879159927368164
    6. '   ' → logprob: -13.129159927368164
    7. '_available' → logprob: -13.254159927368164
    8. 'Available' → logprob: -13.504159927368164
    9. '.av' → logprob: -13.879159927368164
    10. '._' → logprob: -14.754159927368164

Token 355: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.8087270038668066e-05
    2. '[' → logprob: -10.500027656555176
    3. ' rid' → logprob: -15.375027656555176
    4. ' [' → logprob: -15.375027656555176
    5. '```' → logprob: -16.875028610229492
    6. 'rid' → logprob: -17.625028610229492
    7. '[-' → logprob: -17.625028610229492
    8. '[R' → logprob: -17.625028610229492
    9. '	r' → logprob: -17.750028610229492
    10. '   ' → logprob: -18.750028610229492

Token 356: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -7.941850526549388e-06
    2. '[id' → logprob: -12.750007629394531
    3. '_id' → logprob: -13.375007629394531
    4. 'd' → logprob: -14.000007629394531
    5. '[' → logprob: -14.125007629394531
    6. 'es' → logprob: -14.500007629394531
    7. ']' → logprob: -15.250007629394531
    8. '```' → logprob: -15.625007629394531
    9. ' id' → logprob: -16.00000762939453
    10. 'ed' → logprob: -16.25000762939453

Token 357: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013923770748078823
    2. '-' → logprob: -7.001392364501953
    3. ' ]' → logprob: -8.501392364501953
    4. ']-' → logprob: -8.501392364501953
    5. ' -' → logprob: -9.626392364501953
    6. '[' → logprob: -12.751392364501953
    7. ']+=' → logprob: -12.876392364501953
    8. ' -=' → logprob: -13.751392364501953
    9. ']>' → logprob: -14.876392364501953
    10. '```' → logprob: -15.126392364501953

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. ']' → logprob: -15.750001907348633
    4. '   ' → logprob: -17.500001907348633
    5. '```' → logprob: -18.000001907348633
    6. '
' → logprob: -18.625001907348633
    7. '0' → logprob: -19.375001907348633
    8. '１' → logprob: -19.812501907348633
    9. ')' → logprob: -20.250001907348633
    10. '-' → logprob: -20.312501907348633

Token 359: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012239166535437107
    2. ']-' → logprob: -7.751224040985107
    3. '-' → logprob: -7.876224040985107
    4. ' -=' → logprob: -8.12622356414795
    5. ' ]' → logprob: -9.62622356414795
    6. '-=' → logprob: -10.00122356414795
    7. ' -' → logprob: -12.50122356414795
    8. '   ' → logprob: -13.62622356414795
    9. '>' → logprob: -14.75122356414795
    10. '```' → logprob: -14.75122356414795

Token 360: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.7101272940635681
    2. '-=' → logprob: -0.7101272940635681
    3. '-' → logprob: -4.085127353668213
    4. ' -' → logprob: -11.835126876831055
    5. '=' → logprob: -12.085126876831055
    6. '>' → logprob: -13.710126876831055
    7. '   ' → logprob: -14.085126876831055
    8. '```' → logprob: -15.210126876831055
    9. ' ' → logprob: -15.710126876831055
    10. '    ' → logprob: -15.960126876831055

Token 361: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. '   ' → logprob: -15.875553131103516
    4. '```' → logprob: -18.500553131103516
    5. '
' → logprob: -18.875553131103516
    6. '       ' → logprob: -19.625553131103516
    7. '           ' → logprob: -20.563053131103516
    8. '  ' → logprob: -20.813053131103516
    9. '`' → logprob: -21.563053131103516
    10. '１' → logprob: -21.625553131103516

Token 362: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.375
    4. '
' → logprob: -19.625
    5. '```' → logprob: -19.875
    6. '       ' → logprob: -21.875
    7. '           ' → logprob: -22.875
    8. '`' → logprob: -23.25
    9. '

' → logprob: -23.5
    10. '  ' → logprob: -23.875

Token 363: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1610221564769745
    2. '
' → logprob: -1.9110221862792969
    3. 'proc' → logprob: -7.786022186279297
    4. '        
' → logprob: -9.286022186279297
    5. ' proc' → logprob: -9.536022186279297
    6. '   ' → logprob: -9.661022186279297
    7. '	pro' → logprob: -10.036022186279297
    8. '
' → logprob: -10.786022186279297
    9. ',' → logprob: -11.161022186279297
    10. '           ' → logprob: -11.286022186279297

Token 364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013284933753311634
    2. '
' → logprob: -4.388285160064697
    3. 'proc' → logprob: -8.263284683227539
    4. '        
' → logprob: -9.013284683227539
    5. '   ' → logprob: -9.138284683227539
    6. '	pro' → logprob: -10.138284683227539
    7. '           ' → logprob: -10.138284683227539
    8. ',' → logprob: -10.263284683227539
    9. '(proc' → logprob: -10.263284683227539
    10. ' proc' → logprob: -10.263284683227539

Token 365: ' proc' (ID: 14550)
  Prédit: 'proc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proc' (adapté à ' proc') → logprob: -0.0010506733087822795
    2. ' proc' → logprob: -7.3760504722595215
    3. '       ' → logprob: -7.8760504722595215
    4. '(proc' → logprob: -10.50105094909668
    5. '.proc' → logprob: -12.12605094909668
    6. '
' → logprob: -12.37605094909668
    7. '   ' → logprob: -13.25105094909668
    8. '```' → logprob: -13.37605094909668
    9. 'pro' → logprob: -13.37605094909668
    10. '	pro' → logprob: -13.50105094909668

Token 366: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.173704271830502e-06
    2. ' .' → logprob: -13.12500286102295
    3. '.he' → logprob: -14.75000286102295
    4. '       ' → logprob: -15.62500286102295
    5. ').' → logprob: -16.625003814697266
    6. '   ' → logprob: -16.625003814697266
    7. '].' → logprob: -16.875003814697266
    8. '```' → logprob: -16.875003814697266
    9. '​.' → logprob: -16.875003814697266
    10. '>.' → logprob: -17.125003814697266

Token 367: 'held' (ID: 32869)
  Prédit: 'held'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'held' → logprob: -9.088346359931165e-07
    2. ' held' → logprob: -14.000000953674316
    3. '-held' → logprob: -17.5
    4. 'hold' → logprob: -17.75
    5. '```' → logprob: -18.625
    6. 'Held' → logprob: -19.25
    7. '   ' → logprob: -19.375
    8. 'allocated' → logprob: -19.875
    9. 'resource' → logprob: -20.375
    10. 'holder' → logprob: -20.375

Token 368: '_resources' (ID: 85099)
  Prédit: '_resources'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_resources' → logprob: -5.512236498361744e-07
    2. 'resources' → logprob: -14.875000953674316
    3. '_res' → logprob: -16.375
    4. 'Resources' → logprob: -17.875
    5. '_resource' → logprob: -19.75
    6. ' resources' → logprob: -20.25
    7. '_' → logprob: -20.625
    8. '.resources' → logprob: -21.0
    9. '_services' → logprob: -21.125
    10. '(resources' → logprob: -22.125

Token 369: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.750000953674316
    3. ' [' → logprob: -15.750000953674316
    4. '   ' → logprob: -21.375001907348633
    5. '

' → logprob: -21.750001907348633
    6. '[R' → logprob: -21.750001907348633
    7. '[l' → logprob: -21.875001907348633
    8. '[i' → logprob: -22.000001907348633
    9. '[v' → logprob: -22.000001907348633
    10. '	r' → logprob: -22.000001907348633

Token 370: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -2.15310683415737e-05
    2. 'es' → logprob: -11.125021934509277
    3. '[id' → logprob: -13.125021934509277
    4. '-' → logprob: -13.500021934509277
    5. '[' → logprob: -13.750021934509277
    6. 'ed' → logprob: -15.000021934509277
    7. '_id' → logprob: -15.000021934509277
    8. 'i' → logprob: -15.375021934509277
    9. '1' → logprob: -15.812521934509277
    10. '[i' → logprob: -15.812521934509277

Token 371: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.661626634420827e-05
    2. ' -' → logprob: -9.375086784362793
    3. ']-' → logprob: -14.125086784362793
    4. '[' → logprob: -14.375086784362793
    5. '1' → logprob: -15.750086784362793
    6. ']' → logprob: -16.000085830688477
    7. '   ' → logprob: -17.125085830688477
    8. '[-' → logprob: -17.250085830688477
    9. '<|end|>' → logprob: -17.375085830688477
    10. '()-' → logprob: -17.625085830688477

Token 372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. '<|end|>' → logprob: -16.000003814697266
    4. '   ' → logprob: -16.250003814697266
    5. '```' → logprob: -17.000003814697266
    6. '-' → logprob: -17.500003814697266
    7. '  ' → logprob: -18.500003814697266
    8. ']' → logprob: -18.500003814697266
    9. '>' → logprob: -18.875003814697266
    10. '[' → logprob: -19.000003814697266

Token 373: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09860283881425858
    2. ']+=' → logprob: -2.848602771759033
    3. ' +=' → logprob: -3.723602771759033
    4. '+=' → logprob: -4.723602771759033
    5. ' ]' → logprob: -5.848602771759033
    6. ')' → logprob: -9.973603248596191
    7. ']+' → logprob: -12.723603248596191
    8. '+]' → logprob: -13.348603248596191
    9. '   ' → logprob: -13.473603248596191
    10. '    ' → logprob: -13.598603248596191

Token 374: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16023042798042297
    2. ' +=' → logprob: -1.9102303981781006
    3. ']+=' → logprob: -12.03523063659668
    4. '+' → logprob: -15.16023063659668
    5. '=' → logprob: -16.53523063659668
    6. '+='' → logprob: -18.16023063659668
    7. '+=(' → logprob: -18.41023063659668
    8. '+="' → logprob: -18.78523063659668
    9. ' ' → logprob: -18.78523063659668
    10. ' ' → logprob: -19.53523063659668

Token 375: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. '   ' → logprob: -17.125295639038086
    4. '```' → logprob: -19.250295639038086
    5. '  ' → logprob: -21.000295639038086
    6. ' ' → logprob: -21.125295639038086
    7. '       ' → logprob: -21.500295639038086
    8. '0' → logprob: -21.500295639038086
    9. '`' → logprob: -21.500295639038086
    10. '	' → logprob: -21.625295639038086

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -20.500001907348633
    4. '```' → logprob: -20.750001907348633
    5. '`' → logprob: -23.375001907348633
    6. '' → logprob: -23.750001907348633
    7. '１' → logprob: -23.875001907348633
    8. '
' → logprob: -23.875001907348633
    9. '۱' → logprob: -24.000001907348633
    10. '0' → logprob: -24.000001907348633

Token 377: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 378: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 379: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7168706059455872
    2. '<|end|>' → logprob: -0.8418706059455872
    3. '
' → logprob: -2.7168705463409424
    4. 'def' (adapté à ' def') → logprob: -5.3418707847595215
    5. '    
' → logprob: -5.4668707847595215
    6. '<|end|>' → logprob: -6.3418707847595215
    7. ' ' → logprob: -6.7168707847595215
    8. '  
' → logprob: -7.4668707847595215
    9. '

' → logprob: -7.4668707847595215
    10. '```' → logprob: -7.9668707847595215

Token 380: ' release' (ID: 8232)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.3345523178577423
    2. ' release' → logprob: -2.08455228805542
    3. 'can' → logprob: -2.70955228805542
    4. 'de' → logprob: -3.20955228805542
    5. ' can' → logprob: -3.45955228805542
    6. ' de' → logprob: -4.83455228805542
    7. 'request' → logprob: -5.58455228805542
    8. ' safe' → logprob: -5.95955228805542
    9. 'safe' → logprob: -5.95955228805542
    10. ' request' → logprob: -6.95955228805542

Token 381: '_all' (ID: 13305)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -12.000007629394531
    3. ' (' → logprob: -14.500007629394531
    4. 'self' → logprob: -14.875007629394531
    5. '_resources' → logprob: -14.875007629394531
    6. '_all' → logprob: -15.750007629394531
    7. '(s' → logprob: -16.62500762939453
    8. '(sel' → logprob: -17.50000762939453
    9. '(pid' → logprob: -18.12500762939453
    10. '   ' → logprob: -18.25000762939453

Token 382: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0022372088860720396
    2. '(' → logprob: -6.252237319946289
    3. '_resources' → logprob: -8.127237319946289
    4. 'resources' → logprob: -12.252237319946289
    5. 'self' → logprob: -12.752237319946289
    6. ' (' → logprob: -13.002237319946289
    7. '(resources' → logprob: -14.127237319946289
    8. '()' → logprob: -14.377237319946289
    9. 'Resources' → logprob: -14.752237319946289
    10. '_all' → logprob: -15.252237319946289

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.677044153213501
    2. '(self' → logprob: -1.052044153213501
    3. 'self' → logprob: -2.927044153213501
    4. ')' → logprob: -2.927044153213501
    5. '):' → logprob: -3.802044153213501
    6. '   ' → logprob: -5.177043914794922
    7. '       ' → logprob: -5.552043914794922
    8. '):
' → logprob: -6.802043914794922
    9. '_resources' → logprob: -7.427043914794922
    10. 'resources' → logprob: -7.677043914794922

Token 384: ' pid' (ID: 23462)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.29484227299690247
    2. 'pid' → logprob: -1.41984224319458
    3. ' self' → logprob: -5.04484224319458
    4. ' pid' → logprob: -5.91984224319458
    5. '   ' → logprob: -6.41984224319458
    6. ')' → logprob: -6.79484224319458
    7. 'proc' → logprob: -7.29484224319458
    8. '):' → logprob: -7.66984224319458
    9. '       ' → logprob: -8.044842720031738
    10. '):
' → logprob: -9.419842720031738

Token 385: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05657598376274109
    2. '):' → logprob: -2.9315760135650635
    3. ')' → logprob: -7.556575775146484
    4. 'self' → logprob: -7.681575775146484
    5. '   ' → logprob: -8.181575775146484
    6. '       ' → logprob: -8.806575775146484
    7. ',' → logprob: -9.181575775146484
    8. '):
' → logprob: -9.431575775146484
    9. ':int' → logprob: -10.056575775146484
    10. '(self' → logprob: -10.681575775146484

Token 386: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20164760947227478
    2. ' int' → logprob: -1.7016476392745972
    3. ')' → logprob: -8.951647758483887
    4. ':int' → logprob: -9.951647758483887
    5. '   ' → logprob: -10.451647758483887
    6. '(int' → logprob: -11.326647758483887
    7. ':' → logprob: -12.076647758483887
    8. '[int' → logprob: -13.326647758483887
    9. '):' → logprob: -13.576647758483887
    10. ' def' → logprob: -13.576647758483887

Token 387: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005698331515304744
    2. '):' → logprob: -7.500569820404053
    3. '   ' → logprob: -12.000570297241211
    4. '):
' → logprob: -12.125570297241211
    5. ':' → logprob: -12.875570297241211
    6. ' )' → logprob: -13.625570297241211
    7. ',' → logprob: -13.750570297241211
    8. '       ' → logprob: -15.500570297241211
    9. ')->' → logprob: -16.00057029724121
    10. '):
' → logprob: -16.87557029724121

Token 388: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03588728979229927
    2. '(self' → logprob: -4.160887241363525
    3. '       ' → logprob: -5.035887241363525
    4. ' ->' → logprob: -5.410887241363525
    5. '   ' → logprob: -5.785887241363525
    6. ')' → logprob: -5.910887241363525
    7. ':
' → logprob: -6.535887241363525
    8. '->' → logprob: -7.410887241363525
    9. 'self' → logprob: -8.035887718200684
    10. ' self' → logprob: -8.910887718200684

Token 389: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.008615872822701931
    2. 'None' → logprob: -4.758615970611572
    3. '   ' → logprob: -13.883615493774414
    4. '(None' → logprob: -15.883615493774414
    5. ' ' → logprob: -16.133615493774414
    6. ' void' → logprob: -16.758615493774414
    7. 'void' → logprob: -17.758615493774414
    8. ' none' → logprob: -18.008615493774414
    9. '  ' → logprob: -18.008615493774414
    10. 'none' → logprob: -18.133615493774414

Token 390: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05546078085899353
    2. '(self' → logprob: -3.3054606914520264
    3. ':' → logprob: -4.6804609298706055
    4. ':
' → logprob: -5.4304609298706055
    5. '   ' → logprob: -5.6804609298706055
    6. 'self' → logprob: -9.680460929870605
    7. ',' → logprob: -10.055460929870605
    8. ' self' → logprob: -10.680460929870605
    9. '):
' → logprob: -11.055460929870605
    10. '	self' → logprob: -11.055460929870605

Token 391: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001070919563062489
    2. '
' → logprob: -6.876070976257324
    3. '	' → logprob: -11.126070976257324
    4. ',' → logprob: -12.126070976257324
    5. '   ' → logprob: -12.501070976257324
    6. '        
' → logprob: -12.876070976257324
    7. ':' → logprob: -12.876070976257324
    8. '' → logprob: -13.376070976257324
    9. '```' → logprob: -13.626070976257324
    10. ':
' → logprob: -13.876070976257324

Token 392: ' proc' (ID: 14550)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007237526006065309
    2. 'proc' (adapté à ' proc') → logprob: -7.250723838806152
    3. ' proc' → logprob: -11.375723838806152
    4. '
' → logprob: -14.000723838806152
    5. '   ' → logprob: -14.750723838806152
    6. '(proc' → logprob: -15.000723838806152
    7. '	pro' → logprob: -15.125723838806152
    8. 'pro' → logprob: -16.000722885131836
    9. 'process' → logprob: -16.125722885131836
    10. '      ' → logprob: -16.625722885131836

Token 393: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0753859281539917
    2. '=' → logprob: -2.8253860473632812
    3. ':' → logprob: -4.325386047363281
    4. '   ' → logprob: -9.575386047363281
    5. ' :' → logprob: -10.950386047363281
    6. '       ' → logprob: -12.075386047363281
    7. '	' → logprob: -13.200386047363281
    8. ' ' → logprob: -13.200386047363281
    9. '    ' → logprob: -13.700386047363281
    10. '  ' → logprob: -14.325386047363281

Token 394: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16022777557373047
    2. ' self' → logprob: -1.9102277755737305
    3. '       ' → logprob: -12.91022777557373
    4. '(self' → logprob: -14.91022777557373
    5. '[self' → logprob: -15.28522777557373
    6. '=self' → logprob: -15.41022777557373
    7. '	self' → logprob: -15.53522777557373
    8. '   ' → logprob: -16.160228729248047
    9. ' ' → logprob: -16.660228729248047
    10. 'Self' → logprob: -18.035228729248047

Token 395: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -0.000205566844670102
    2. 'process' → logprob: -8.500205993652344
    3. 'rocess' → logprob: -14.250205993652344
    4. '.pro' → logprob: -14.500205993652344
    5. '.' → logprob: -14.750205993652344
    6. ' processes' → logprob: -15.750205993652344
    7. ' .' → logprob: -16.375205993652344
    8. '	process' → logprob: -16.625205993652344
    9. 'Processes' → logprob: -17.250205993652344
    10. '(process' → logprob: -17.625205993652344

Token 396: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.03804917633533478
    2. 's' → logprob: -3.2880492210388184
    3. '.es' → logprob: -13.16304874420166
    4. '.process' → logprob: -13.28804874420166
    5. 'ess' → logprob: -13.66304874420166
    6. '[self' → logprob: -14.16304874420166
    7. 'self' → logprob: -14.16304874420166
    8. '   ' → logprob: -14.66304874420166
    9. 'ses' → logprob: -15.16304874420166
    10. '[' → logprob: -15.78804874420166

Token 397: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -17.0
    3. '[
' → logprob: -17.25
    4. '[self' → logprob: -17.25
    5. '(pid' → logprob: -17.75
    6. '
' → logprob: -18.5
    7. '[(' → logprob: -18.5
    8. '[int' → logprob: -18.75
    9. '	' → logprob: -19.0
    10. '[p' → logprob: -19.125

Token 398: 'pid' (ID: 19554)
  Prédit: 'pid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' → logprob: -0.00020735491125378758
    2. '(pid' → logprob: -9.12520694732666
    3. '[' → logprob: -9.25020694732666
    4. ' pid' → logprob: -13.12520694732666
    5. 'pi' → logprob: -16.875207901000977
    6. '   ' → logprob: -16.875207901000977
    7. 'p' → logprob: -17.375207901000977
    8. '_pid' → logprob: -17.500207901000977
    9. '.pid' → logprob: -17.875207901000977
    10. 'py' → logprob: -18.250207901000977

Token 399: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00026181264547631145
    2. ' -' → logprob: -8.250262260437012
    3. ']' → logprob: -15.500262260437012
    4. '   ' → logprob: -16.000261306762695
    5. '[' → logprob: -16.375261306762695
    6. '()-' → logprob: -17.625261306762695
    7. 'def' → logprob: -17.875261306762695
    8. '1' → logprob: -18.250261306762695
    9. ']-' → logprob: -18.250261306762695
    10. ')' → logprob: -18.375261306762695

Token 400: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '-' → logprob: -16.62500762939453
    4. '   ' → logprob: -17.00000762939453
    5. '```' → logprob: -17.37500762939453
    6. '۱' → logprob: -18.56250762939453
    7. '１' → logprob: -18.68750762939453
    8. ')' → logprob: -18.68750762939453
    9. '  ' → logprob: -19.37500762939453
    10. '0' → logprob: -19.56250762939453

Token 401: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06082788109779358
    2. ')
' → logprob: -2.9358279705047607
    3. ')' → logprob: -5.935827732086182
    4. ']
' → logprob: -6.185827732086182
    5. '
' → logprob: -7.310827732086182
    6. ']' → logprob: -7.935827732086182
    7. '   ' → logprob: -9.31082820892334
    8. 'for' → logprob: -9.93582820892334
    9. ')
' → logprob: -11.43582820892334
    10. '           ' → logprob: -11.68582820892334

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021796036162413657
    2. ' for' → logprob: -9.125218391418457
    3. 'for' → logprob: -9.250218391418457
    4. '
' → logprob: -11.625218391418457
    5. '   ' → logprob: -12.625218391418457
    6. '	for' → logprob: -14.625218391418457
    7. '	' → logprob: -15.250218391418457
    8. '```' → logprob: -17.00021743774414
    9. '	   ' → logprob: -17.75021743774414
    10. '        
' → logprob: -17.75021743774414

Token 403: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011067155748605728
    2. '       ' → logprob: -4.5110673904418945
    3. ' for' → logprob: -10.886067390441895
    4. '	for' → logprob: -14.761067390441895
    5. '   ' → logprob: -15.511067390441895
    6. '
' → logprob: -17.261066436767578
    7. '           ' → logprob: -18.136066436767578
    8. 'self' → logprob: -19.636066436767578
    9. '               ' → logprob: -19.886066436767578
    10. '      ' → logprob: -20.261066436767578

Token 404: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02781039848923683
    2. 'rid' → logprob: -3.7778103351593018
    3. 'idx' → logprob: -6.277810573577881
    4. 'r' → logprob: -6.652810573577881
    5. ' i' → logprob: -6.652810573577881
    6. ' rid' → logprob: -10.027810096740723
    7. 'res' → logprob: -10.402810096740723
    8. ' idx' → logprob: -11.652810096740723
    9. 'index' → logprob: -12.152810096740723
    10. 'ri' → logprob: -13.027810096740723

Token 405: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01547650434076786
    2. 'in' → logprob: -4.265476703643799
    3. ',' → logprob: -6.640476703643799
    4. ' ,' → logprob: -13.51547622680664
    5. '	in' → logprob: -13.76547622680664
    6. ' ' → logprob: -14.01547622680664
    7. '   ' → logprob: -14.76547622680664
    8. '  ' → logprob: -15.01547622680664
    9. 'In' → logprob: -15.01547622680664
    10. ',in' → logprob: -15.39047622680664

Token 406: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.339278580620885e-06
    2. ' range' → logprob: -13.000001907348633
    3. '   ' → logprob: -20.375001907348633
    4. '	range' → logprob: -20.750001907348633
    5. '(range' → logprob: -22.125001907348633
    6. '
' → logprob: -23.500001907348633
    7. '  ' → logprob: -24.250001907348633
    8. ' ' → logprob: -24.500001907348633
    9. '

' → logprob: -25.125001907348633
    10. '    ' → logprob: -25.750001907348633

Token 407: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.597392737865448
    2. '(len' → logprob: -1.0973927974700928
    3. 'self' → logprob: -2.8473927974700928
    4. 'len' → logprob: -2.8473927974700928
    5. ' len' → logprob: -11.347393035888672
    6. ' self' → logprob: -11.722393035888672
    7. '(' → logprob: -12.847393035888672
    8. '	self' → logprob: -14.597393035888672
    9. '=len' → logprob: -14.597393035888672
    10. '   ' → logprob: -14.722393035888672

Token 408: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -4.036524842376821e-05
    2. 'self' → logprob: -10.875040054321289
    3. 'r' → logprob: -11.000040054321289
    4. 'len' → logprob: -12.750040054321289
    5. '.' → logprob: -13.500040054321289
    6. ' .' → logprob: -16.25004005432129
    7. 's' → logprob: -16.50004005432129
    8. '.len' → logprob: -16.75004005432129
    9. '	r' → logprob: -16.87504005432129
    10. '   ' → logprob: -17.25004005432129

Token 409: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00014334988372866064
    2. 'count' → logprob: -8.875143051147461
    3. ')' → logprob: -13.750143051147461
    4. '_' → logprob: -14.500143051147461
    5. '   ' → logprob: -14.625143051147461
    6. 'Count' → logprob: -15.000143051147461
    7. '_c' → logprob: -15.125143051147461
    8. '_COUNT' → logprob: -15.250143051147461
    9. '_r' → logprob: -16.25014305114746
    10. '-' → logprob: -16.37514305114746

Token 410: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.014608257450163364
    2. '):' → logprob: -4.264608383178711
    3. '):
' → logprob: -8.639608383178711
    4. '           ' → logprob: -8.889608383178711
    5. '       ' → logprob: -9.014608383178711
    6. ' ):
' → logprob: -12.764608383178711
    7. '):

' → logprob: -13.139608383178711
    8. '():
' → logprob: -13.639608383178711
    9. '   ' → logprob: -14.264608383178711
    10. ':' → logprob: -14.764608383178711

Token 411: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.575563020305708e-05
    2. ',' → logprob: -11.375065803527832
    3. '```' → logprob: -11.500065803527832
    4. ' if' → logprob: -11.875065803527832
    5. 'self' → logprob: -11.875065803527832
    6. ' self' → logprob: -12.375065803527832
    7. 'proc' → logprob: -12.375065803527832
    8. '       ' → logprob: -12.625065803527832
    9. ':' → logprob: -12.625065803527832
    10. '            
' → logprob: -12.750065803527832

Token 412: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0297107994556427
    2. '           ' → logprob: -3.6547107696533203
    3. 'if' → logprob: -6.02971076965332
    4. ' self' → logprob: -7.27971076965332
    5. 'proc' → logprob: -8.65471076965332
    6. '               ' → logprob: -9.65471076965332
    7. '   ' → logprob: -10.02971076965332
    8. '       ' → logprob: -11.15471076965332
    9. ' if' → logprob: -12.15471076965332
    10. '	self' → logprob: -12.27971076965332

Token 413: '.available' (ID: 87418)
  Prédit: '.available'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.available' → logprob: -7.636475493200123e-05
    2. 'available' → logprob: -10.125076293945312
    3. '.' → logprob: -10.625076293945312
    4. '.release' → logprob: -11.750076293945312
    5. ' .' → logprob: -13.250076293945312
    6. '   ' → logprob: -13.375076293945312
    7. '       ' → logprob: -15.250076293945312
    8. '           ' → logprob: -16.000076293945312
    9. ' available' → logprob: -16.125076293945312
    10. '         ' → logprob: -16.875076293945312

Token 414: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.337155355140567e-05
    2. '[' → logprob: -9.750062942504883
    3. ' [' → logprob: -13.000062942504883
    4. '[I' → logprob: -14.000062942504883
    5. '```' → logprob: -14.500062942504883
    6. '[r' → logprob: -15.125062942504883
    7. 'i' → logprob: -15.375062942504883
    8. '
' → logprob: -15.875062942504883
    9. '[self' → logprob: -16.500062942504883
    10. '   ' → logprob: -16.625062942504883

Token 415: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6944066286087036
    2. '+=' → logprob: -0.6944066286087036
    3. ']+=' → logprob: -6.694406509399414
    4. ')' → logprob: -11.819406509399414
    5. '+' → logprob: -12.194406509399414
    6. ']' → logprob: -13.194406509399414
    7. '+=(' → logprob: -13.444406509399414
    8. '    ' → logprob: -14.069406509399414
    9. '           ' → logprob: -14.444406509399414
    10. '[' → logprob: -14.569406509399414

Token 416: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02326131984591484
    2. ' +=' → logprob: -3.773261308670044
    3. ']+=' → logprob: -11.148261070251465
    4. '+' → logprob: -14.523261070251465
    5. '+=(' → logprob: -14.648261070251465
    6. '=' → logprob: -15.648261070251465
    7. '   ' → logprob: -15.648261070251465
    8. '       ' → logprob: -17.02326202392578
    9. '    ' → logprob: -17.39826202392578
    10. '```' → logprob: -17.52326202392578

Token 417: ' proc' (ID: 14550)
  Prédit: 'proc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proc' → logprob: -0.04858839511871338
    2. ' proc' → logprob: -3.048588275909424
    3. '(proc' → logprob: -13.923588752746582
    4. '.proc' → logprob: -17.048587799072266
    5. 'pro' → logprob: -17.798587799072266
    6. 'process' → logprob: -18.048587799072266
    7. '_proc' → logprob: -18.798587799072266
    8. '	pro' → logprob: -19.548587799072266
    9. '   ' → logprob: -19.798587799072266
    10. 'Proc' → logprob: -19.798587799072266

Token 418: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.034592388459714e-06
    2. ' .' → logprob: -12.875005722045898
    3. 'held' → logprob: -13.250005722045898
    4. '       ' → logprob: -14.625005722045898
    5. '   ' → logprob: -14.750005722045898
    6. '```' → logprob: -14.875005722045898
    7. ' held' → logprob: -16.3750057220459
    8. '.he' → logprob: -16.6250057220459
    9. '           ' → logprob: -16.8750057220459
    10. '.h' → logprob: -17.1250057220459

Token 419: 'held' (ID: 32869)
  Prédit: 'held'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'held' → logprob: -9.088346359931165e-07
    2. ' held' → logprob: -14.250000953674316
    3. '-held' → logprob: -15.875000953674316
    4. 'hold' → logprob: -18.125
    5. 'holder' → logprob: -19.75
    6. 'led' → logprob: -20.25
    7. '   ' → logprob: -20.375
    8. '_' → logprob: -20.375
    9. 'owned' → logprob: -21.375
    10. 'Held' → logprob: -21.625

Token 420: '_resources' (ID: 85099)
  Prédit: '_resources'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_resources' → logprob: -5.512236498361744e-07
    2. 'resources' → logprob: -15.125000953674316
    3. '_res' → logprob: -15.750000953674316
    4. '_' → logprob: -17.625
    5. 'Resources' → logprob: -18.25
    6. '```' → logprob: -18.75
    7. '_resource' → logprob: -18.875
    8. '_sources' → logprob: -19.875
    9. '_services' → logprob: -20.125
    10. 's' → logprob: -20.375

Token 421: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.37500286102295
    3. ' [' → logprob: -13.75000286102295
    4. '```' → logprob: -15.25000286102295
    5. 'i' → logprob: -15.87500286102295
    6. '
' → logprob: -16.625003814697266
    7. '[
' → logprob: -17.250003814697266
    8. '

' → logprob: -17.375003814697266
    9. '\[' → logprob: -17.625003814697266
    10. 's' → logprob: -17.625003814697266

Token 422: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41324493288993835
    2. ']
' → logprob: -1.4132449626922607
    3. ']' → logprob: -2.6632449626922607
    4. '<|end|>' → logprob: -4.913244724273682
    5. '       ' → logprob: -5.038244724273682
    6. ')
' → logprob: -5.413244724273682
    7. '           ' → logprob: -5.413244724273682
    8. '  
' → logprob: -7.288244724273682
    9. '    
' → logprob: -7.663244724273682
    10. ')' → logprob: -7.788244724273682

Token 423: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00526316836476326
    2. '       ' → logprob: -5.255263328552246
    3. '   ' → logprob: -10.505263328552246
    4. 'proc' → logprob: -13.880263328552246
    5. '               ' → logprob: -14.505263328552246
    6. '	   ' → logprob: -15.005263328552246
    7. '		' → logprob: -15.880263328552246
    8. '	       ' → logprob: -16.13026237487793
    9. '```' → logprob: -17.00526237487793
    10. ' proc' → logprob: -17.25526237487793

Token 424: ' proc' (ID: 14550)
  Prédit: 'proc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proc' (adapté à ' proc') → logprob: -6.790129555156454e-05
    2. ' proc' → logprob: -10.000067710876465
    3. '           ' → logprob: -10.750067710876465
    4. '(proc' → logprob: -15.125067710876465
    5. '       ' → logprob: -15.250067710876465
    6. '.proc' → logprob: -15.375067710876465
    7. '   ' → logprob: -15.625067710876465
    8. '               ' → logprob: -17.25006866455078
    9. '_proc' → logprob: -18.00006866455078
    10. '	pro' → logprob: -18.25006866455078

Token 425: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.512236498361744e-07
    2. ' .' → logprob: -14.750000953674316
    3. '.finished' → logprob: -17.5
    4. '.he' → logprob: -18.25
    5. 'held' → logprob: -18.375
    6. '.release' → logprob: -18.375
    7. '‌.' → logprob: -18.5
    8. '>.' → logprob: -18.875
    9. '.has' → logprob: -19.0
    10. '._' → logprob: -19.125

Token 426: 'held' (ID: 32869)
  Prédit: 'held'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'held' → logprob: -2.5776860184123507e-06
    2. ' held' → logprob: -13.00000286102295
    3. '-held' → logprob: -16.250001907348633
    4. 'finished' → logprob: -16.625001907348633
    5. '   ' → logprob: -17.125001907348633
    6. 'released' → logprob: -17.375001907348633
    7. '```' → logprob: -17.500001907348633
    8. 'he' → logprob: -18.625001907348633
    9. '_' → logprob: -18.875001907348633
    10. 'owned' → logprob: -19.375001907348633

Token 427: '_resources' (ID: 85099)
  Prédit: '_resources'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_resources' → logprob: -1.3856492842023727e-06
    2. 'resources' → logprob: -13.875000953674316
    3. '_sources' → logprob: -15.375000953674316
    4. 'Resources' → logprob: -16.000001907348633
    5. '_resource' → logprob: -17.750001907348633
    6. '.resources' → logprob: -18.500001907348633
    7. '._' → logprob: -18.625001907348633
    8. '_res' → logprob: -18.875001907348633
    9. 's' → logprob: -19.000001907348633
    10. '```' → logprob: -19.250001907348633

Token 428: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.895480277715251e-06
    2. '[' → logprob: -12.625008583068848
    3. ' =' → logprob: -13.250008583068848
    4. '[:]' → logprob: -13.250008583068848
    5. '=' → logprob: -13.375008583068848
    6. '=[' → logprob: -15.750008583068848
    7. 'i' → logprob: -16.625009536743164
    8. ' [' → logprob: -17.000009536743164
    9. '```' → logprob: -17.125009536743164
    10. '=[]' → logprob: -17.625009536743164

Token 429: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08964590728282928
    2. '[i' → logprob: -2.7146458625793457
    3. ' =' → logprob: -3.9646458625793457
    4. '[:]' → logprob: -8.464646339416504
    5. ']' → logprob: -8.839646339416504
    6. '[' → logprob: -9.214646339416504
    7. ']=' → logprob: -9.839646339416504
    8. '[
' → logprob: -11.714646339416504
    9. '=[]' → logprob: -12.214646339416504
    10. '   ' → logprob: -12.339646339416504

Token 430: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007905065082013607
    2. '[i' → logprob: -5.007905006408691
    3. ' =' → logprob: -6.882905006408691
    4. '[' → logprob: -9.257905006408691
    5. '[:]' → logprob: -9.632905006408691
    6. '=[' → logprob: -13.757905006408691
    7. '[
' → logprob: -15.007905006408691
    8. '[:' → logprob: -15.007905006408691
    9. '=[]' → logprob: -15.257905006408691
    10. ' [' → logprob: -15.882905006408691

Token 431: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '۰' → logprob: -20.1250057220459
    4. '   ' → logprob: -20.3750057220459
    5. '00' → logprob: -21.0000057220459
    6. '000' → logprob: -21.5000057220459
    7. '０' → logprob: -21.8750057220459
    8. '```' → logprob: -22.2500057220459
    9. '  ' → logprob: -22.6875057220459
    10. '٠' → logprob: -23.3750057220459

Token 432: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '۰' → logprob: -19.875
    4. '   ' → logprob: -21.75
    5. '000' → logprob: -21.75
    6. '```' → logprob: -21.75
    7. '00' → logprob: -21.875
    8. '０' → logprob: -22.375
    9. '٠' → logprob: -22.5
    10. '০' → logprob: -22.5

Token 433: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 434: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 435: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.14578038454055786
    2. '   ' → logprob: -2.270780324935913
    3. '
' → logprob: -4.020780563354492
    4. ' def' → logprob: -4.395780563354492
    5. '<|end|>' → logprob: -6.770780563354492
    6. '    
' → logprob: -7.770780563354492
    7. '	def' → logprob: -9.020780563354492
    8. '       ' → logprob: -9.395780563354492
    9. '```' → logprob: -9.645780563354492
    10. ' ' → logprob: -9.645780563354492

Token 436: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.8327949643135071
    2. ' can' → logprob: -1.4577949047088623
    3. ' safe' → logprob: -1.9577949047088623
    4. 'safe' → logprob: -2.4577949047088623
    5. ' is' → logprob: -3.3327949047088623
    6. 'is' → logprob: -3.7077949047088623
    7. ' find' → logprob: -5.082795143127441
    8. ' try' → logprob: -5.332795143127441
    9. 'try' → logprob: -5.457795143127441
    10. 'def' → logprob: -5.832795143127441

Token 437: '_finish' (ID: 109520)
  Prédit: '_allocate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_allocate' → logprob: -0.26115673780441284
    2. '_finish' → logprob: -1.8861567974090576
    3. '_gr' → logprob: -3.1361567974090576
    4. '_pro' → logprob: -4.1361565589904785
    5. '_s' → logprob: -5.0111565589904785
    6. '_execute' → logprob: -5.6361565589904785
    7. '_f' → logprob: -5.8861565589904785
    8. '_request' → logprob: -6.3861565589904785
    9. '_run' → logprob: -7.0111565589904785
    10. '_alloc' → logprob: -7.1361565589904785

Token 438: '_with' (ID: 14161)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00021521867893170565
    2. 'self' → logprob: -9.250215530395508
    3. '(' → logprob: -9.375215530395508
    4. '_process' → logprob: -10.500215530395508
    5. '   ' → logprob: -13.250215530395508
    6. 'process' → logprob: -13.500215530395508
    7. '_all' → logprob: -13.875215530395508
    8. ' (' → logprob: -14.750215530395508
    9. 'proc' → logprob: -15.250215530395508
    10. '(process' → logprob: -15.250215530395508

Token 439: '_available' (ID: 61823)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03420953452587128
    2. 'self' → logprob: -3.6592094898223877
    3. 'available' → logprob: -5.034209728240967
    4. 'current' → logprob: -7.284209728240967
    5. 'resources' → logprob: -8.159209251403809
    6. '_available' → logprob: -9.159209251403809
    7. '(' → logprob: -9.284209251403809
    8. '_resources' → logprob: -10.034209251403809
    9. '_current' → logprob: -10.659209251403809
    10. 'resource' → logprob: -10.784209251403809

Token 440: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.372916686814278e-05
    2. '(' → logprob: -10.3750638961792
    3. 'self' → logprob: -10.3750638961792
    4. ' (' → logprob: -14.1250638961792
    5. '   ' → logprob: -15.1250638961792
    6. ' self' → logprob: -16.250062942504883
    7. 'resources' → logprob: -17.125062942504883
    8. '(
' → logprob: -17.625062942504883
    9. '       ' → logprob: -17.750062942504883
    10. '()' → logprob: -17.750062942504883

Token 441: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008367887930944562
    2. 'self' → logprob: -8.000836372375488
    3. '   ' → logprob: -8.625836372375488
    4. ',' → logprob: -9.125836372375488
    5. ')' → logprob: -9.375836372375488
    6. ' (' → logprob: -9.875836372375488
    7. '       ' → logprob: -10.625836372375488
    8. ' self' → logprob: -10.875836372375488
    9. '(' → logprob: -11.250836372375488
    10. '[self' → logprob: -12.000836372375488

Token 442: ' proc' (ID: 14550)
  Prédit: 'proc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'proc' → logprob: -0.7222200036048889
    2. 'self' → logprob: -0.8472200036048889
    3. 'available' → logprob: -3.097219944000244
    4. 'process' → logprob: -4.097219944000244
    5. 'pid' → logprob: -4.222219944000244
    6. 'avail' → logprob: -5.222219944000244
    7. 'p' → logprob: -7.097219944000244
    8. ' self' → logprob: -7.222219944000244
    9. 'work' → logprob: -7.597219944000244
    10. '   ' → logprob: -8.222220420837402

Token 443: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1533745378255844
    2. ')' → logprob: -3.028374433517456
    3. '(self' → logprob: -3.028374433517456
    4. 'self' → logprob: -3.403374433517456
    5. ',' → logprob: -5.278374671936035
    6. '):' → logprob: -5.528374671936035
    7. ' self' → logprob: -6.528374671936035
    8. '   ' → logprob: -7.153374671936035
    9. ':self' → logprob: -8.403374671936035
    10. 'elf' → logprob: -9.028374671936035

Token 444: ' Process' (ID: 12482)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0649142935872078
    2. ' self' → logprob: -3.6899142265319824
    3. ')' → logprob: -4.439914226531982
    4. 'Process' → logprob: -4.564914226531982
    5. '   ' → logprob: -5.314914226531982
    6. ',' → logprob: -6.314914226531982
    7. '(self' → logprob: -6.564914226531982
    8. '       ' → logprob: -6.939914226531982
    9. 'proc' → logprob: -6.939914226531982
    10. 'process' → logprob: -7.189914226531982

Token 445: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013330702669918537
    2. ',' → logprob: -4.388330936431885
    3. 'self' → logprob: -7.513330936431885
    4. '(self' → logprob: -8.638330459594727
    5. ' )' → logprob: -9.513330459594727
    6. '   ' → logprob: -11.263330459594727
    7. '):' → logprob: -12.388330459594727
    8. ' ,' → logprob: -13.138330459594727
    9. '       ' → logprob: -13.638330459594727
    10. ',self' → logprob: -14.138330459594727

Token 446: ' work' (ID: 1101)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.00790057610720396
    2. ' available' → logprob: -5.257900714874268
    3. ')' → logprob: -6.757900714874268
    4. 'avail' → logprob: -7.132900714874268
    5. 'self' → logprob: -8.25790023803711
    6. '   ' → logprob: -8.75790023803711
    7. 'resources' → logprob: -9.25790023803711
    8. ' )' → logprob: -10.00790023803711
    9. 'current' → logprob: -10.25790023803711
    10. ' avail' → logprob: -11.25790023803711

Token 447: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008020029403269291
    2. ')' → logprob: -4.883019924163818
    3. '):' → logprob: -8.383020401000977
    4. ' )' → logprob: -9.883020401000977
    5. '   ' → logprob: -10.133020401000977
    6. ' :' → logprob: -10.133020401000977
    7. '=' → logprob: -11.008020401000977
    8. ':list' → logprob: -11.508020401000977
    9. '_:' → logprob: -12.508020401000977
    10. ':)' → logprob: -12.758020401000977

Token 448: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.06088923290371895
    2. ')' → logprob: -3.68588924407959
    3. '[List' → logprob: -4.06088924407959
    4. ' List' → logprob: -4.56088924407959
    5. ':' → logprob: -5.81088924407959
    6. '   ' → logprob: -5.93588924407959
    7. ' )' → logprob: -9.06088924407959
    8. '       ' → logprob: -9.06088924407959
    9. '):' → logprob: -9.31088924407959
    10. '[' → logprob: -9.56088924407959

Token 449: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.8889261304575484e-06
    2. 'int' → logprob: -12.625003814697266
    3. '[' → logprob: -16.125003814697266
    4. ')' → logprob: -16.250003814697266
    5. '<int' → logprob: -16.250003814697266
    6. '   ' → logprob: -16.625003814697266
    7. ' [' → logprob: -17.500003814697266
    8. '[Int' → logprob: -18.000003814697266
    9. '(int' → logprob: -18.625003814697266
    10. '=int' → logprob: -18.750003814697266

Token 450: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016229959146585315
    2. '])' → logprob: -8.875162124633789
    3. ' )' → logprob: -11.625162124633789
    4. '   ' → logprob: -12.375162124633789
    5. '):' → logprob: -12.375162124633789
    6. '))' → logprob: -13.625162124633789
    7. ',' → logprob: -14.250162124633789
    8. '`)' → logprob: -14.750162124633789
    9. ']' → logprob: -15.000162124633789
    10. '')' → logprob: -15.000162124633789

Token 451: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15089358389377594
    2. '->' → logprob: -2.2758936882019043
    3. ' ->' → logprob: -3.5258936882019043
    4. ':' → logprob: -5.275893688201904
    5. ')->' → logprob: -6.525893688201904
    6. '   ' → logprob: -6.775893688201904
    7. ',' → logprob: -9.275893211364746
    8. '       ' → logprob: -9.275893211364746
    9. '    ' → logprob: -12.400893211364746
    10. ' )' → logprob: -12.525893211364746

Token 452: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -3.082895273109898e-05
    2. ' bool' → logprob: -10.500030517578125
    3. '   ' → logprob: -12.875030517578125
    4. '[' → logprob: -15.500030517578125
    5. '	bool' → logprob: -15.750030517578125
    6. '  ' → logprob: -16.375030517578125
    7. ' ' → logprob: -16.875030517578125
    8. '       ' → logprob: -17.250030517578125
    9. '    ' → logprob: -17.250030517578125
    10. '
' → logprob: -17.625030517578125

Token 453: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006063294131308794
    2. ':
' → logprob: -5.506063461303711
    3. '       ' → logprob: -6.381063461303711
    4. '   ' → logprob: -8.506063461303711
    5. '<|end|>' → logprob: -10.631063461303711
    6. ',' → logprob: -10.881063461303711
    7. '):' → logprob: -11.506063461303711
    8. ':return' → logprob: -12.006063461303711
    9. '[' → logprob: -12.131063461303711
    10. '):
' → logprob: -12.756063461303711

Token 454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018305864185094833
    2. '   ' → logprob: -4.143305778503418
    3. '<|end|>' → logprob: -7.518305778503418
    4. ':' → logprob: -7.643305778503418
    5. ' for' → logprob: -8.143305778503418
    6. '    ' → logprob: -8.143305778503418
    7. '	' → logprob: -8.393305778503418
    8. ' ' → logprob: -9.768305778503418
    9. ' return' → logprob: -10.018305778503418
    10. ':
' → logprob: -10.393305778503418

Token 455: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004270119592547417
    2. 'return' → logprob: -5.879270076751709
    3. ' return' → logprob: -6.879270076751709
    4. ' for' → logprob: -8.254270553588867
    5. 'for' → logprob: -9.379270553588867
    6. '   ' → logprob: -9.629270553588867
    7. '	return' → logprob: -11.379270553588867
    8. '[]' → logprob: -13.004270553588867
    9. '	' → logprob: -13.254270553588867
    10. '           ' → logprob: -13.379270553588867

Token 456: ' Check' (ID: 6208)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0014560704585164785
    2. '       ' → logprob: -7.501456260681152
    3. ' return' → logprob: -7.626456260681152
    4. '   ' → logprob: -8.251456260681152
    5. 'for' → logprob: -8.876456260681152
    6. 'all' → logprob: -11.251456260681152
    7. 'def' → logprob: -13.876456260681152
    8. '	return' → logprob: -14.501456260681152
    9. '
' → logprob: -16.251455307006836
    10. ' for' → logprob: -16.501455307006836

Token 457: ' if' (ID: 538)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.2525199055671692
    2. ' all' → logprob: -2.1275198459625244
    3. 'return' → logprob: -2.7525198459625244
    4. '       ' → logprob: -3.7525198459625244
    5. '   ' → logprob: -4.8775200843811035
    6. ' return' → logprob: -5.3775200843811035
    7. 'for' → logprob: -6.3775200843811035
    8. ' if' → logprob: -6.8775200843811035
    9. 'if' → logprob: -7.2525200843811035
    10. 'and' → logprob: -7.6275200843811035

Token 458: ' proc' (ID: 14550)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -4.723352049040841e-06
    2. '   ' → logprob: -12.625004768371582
    3. ' all' → logprob: -15.000004768371582
    4. 'any' → logprob: -15.625004768371582
    5. '
' → logprob: -15.750004768371582
    6. 'not' → logprob: -16.250003814697266
    7. '       ' → logprob: -16.250003814697266
    8. 'proc' → logprob: -16.250003814697266
    9. 'a' → logprob: -16.375003814697266
    10. 'al' → logprob: -16.625003814697266

Token 459: ''s' (ID: 885)
  Prédit: '.need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.need' → logprob: -0.05467270687222481
    2. 'need' → logprob: -3.6796727180480957
    3. ' need' → logprob: -4.679672718048096
    4. '.ne' → logprob: -5.304672718048096
    5. '.' → logprob: -5.679672718048096
    6. ' can' → logprob: -6.054672718048096
    7. '.can' → logprob: -6.179672718048096
    8. '   ' → logprob: -6.179672718048096
    9. '_need' → logprob: -6.429672718048096
    10. ''s' → logprob: -7.429672718048096

Token 460: ' remaining' (ID: 15448)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.0021018448751419783
    2. '.need' → logprob: -7.377101898193359
    3. ' need' → logprob: -7.752101898193359
    4. 'def' → logprob: -8.25210189819336
    5. 'needs' → logprob: -8.37710189819336
    6. 'needed' → logprob: -8.50210189819336
    7. 'resource' → logprob: -10.00210189819336
    8. '   ' → logprob: -10.12710189819336
    9. 'for' → logprob: -10.25210189819336
    10. '_need' → logprob: -10.62710189819336

Token 461: ' need' (ID: 1309)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.10629343241453171
    2. 'needs' → logprob: -2.3562934398651123
    3. ' need' → logprob: -5.731293201446533
    4. ' needs' → logprob: -6.606293201446533
    5. 'resource' → logprob: -7.231293201446533
    6. '   ' → logprob: -8.356293678283691
    7. '_need' → logprob: -8.356293678283691
    8. 'needed' → logprob: -9.356293678283691
    9. 'def' → logprob: -10.231293678283691
    10. '.need' → logprob: -10.606293678283691

Token 462: ' can' (ID: 665)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2637838125228882
    2. '<=' → logprob: -2.0137839317321777
    3. ' is' → logprob: -2.5137839317321777
    4. 's' → logprob: -5.638783931732178
    5. ' can' → logprob: -6.138783931732178
    6. ')' → logprob: -6.513783931732178
    7. ' for' → logprob: -6.763783931732178
    8. '   ' → logprob: -6.763783931732178
    9. '<|end|>' → logprob: -6.763783931732178
    10. ',' → logprob: -7.138783931732178

Token 463: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.541459321975708
    2. '<=' → logprob: -1.041459321975708
    3. 'be' → logprob: -2.791459321975708
    4. ' <=' → logprob: -6.041459083557129
    5. '_be' → logprob: -6.791459083557129
    6. '[' → logprob: -9.166459083557129
    7. 'le' → logprob: -9.916459083557129
    8. '[]' → logprob: -10.291459083557129
    9. ')<=' → logprob: -10.541459083557129
    10. '	be' → logprob: -11.166459083557129

Token 464: ' satisfied' (ID: 23121)
  Prédit: 'met'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'met' → logprob: -0.059342559427022934
    2. 's' → logprob: -3.059342622756958
    3. 'fulfilled' → logprob: -4.934342384338379
    4. ' met' → logprob: -5.684342384338379
    5. '<=' → logprob: -9.684342384338379
    6. 'fully' → logprob: -10.934342384338379
    7. ' satisfied' → logprob: -11.809342384338379
    8. 'covered' → logprob: -12.434342384338379
    9. ' fulfilled' → logprob: -12.934342384338379
    10. 'less' → logprob: -13.059342384338379

Token 465: ' with' (ID: 483)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.6598318815231323
    2. ' with' → logprob: -0.7848318815231323
    3. 'with' → logprob: -3.909832000732422
    4. 'by' → logprob: -5.784832000732422
    5. ' for' → logprob: -6.284832000732422
    6. '   ' → logprob: -7.409832000732422
    7. ' given' → logprob: -7.909832000732422
    8. ' from' → logprob: -8.909832000732422
    9. ',' → logprob: -8.909832000732422
    10. ' and' → logprob: -9.159832000732422

Token 466: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.06341258436441422
    2. ' work' → logprob: -2.813412666320801
    3. 'all' → logprob: -7.438412666320801
    4. 'available' → logprob: -7.563412666320801
    5. 'the' → logprob: -8.9384126663208
    6. ' available' → logprob: -9.6884126663208
    7. ' all' → logprob: -10.1884126663208
    8. ' the' → logprob: -10.1884126663208
    9. '[' → logprob: -11.1884126663208
    10. '	work' → logprob: -11.1884126663208

Token 467: ' vector' (ID: 9727)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8989249467849731
    2. ' and' → logprob: -1.5239249467849731
    3. '):' → logprob: -2.0239248275756836
    4. ')' → logprob: -2.5239248275756836
    5. ',' → logprob: -2.5239248275756836
    6. '   ' → logprob: -3.3989248275756836
    7. '):
' → logprob: -3.8989248275756836
    8. 'and' → logprob: -5.523924827575684
    9. ' for' → logprob: -5.523924827575684
    10. ':
' → logprob: -6.148924827575684

Token 468: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0569391250610352
    2. ' and' → logprob: -1.0569391250610352
    3. ':' → logprob: -1.6819391250610352
    4. '   ' → logprob: -3.181939125061035
    5. ',' → logprob: -3.681939125061035
    6. ' for' → logprob: -4.431939125061035
    7. '.' → logprob: -4.556939125061035
    8. ')' → logprob: -5.431939125061035
    9. ':
' → logprob: -5.431939125061035
    10. 'and' → logprob: -5.556939125061035

Token 469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016433268785476685
    2. ':' → logprob: -4.516433238983154
    3. ' for' → logprob: -6.016433238983154
    4. '   ' → logprob: -6.141433238983154
    5. ':
' → logprob: -8.766433715820312
    6. ',' → logprob: -9.016433715820312
    7. '[' → logprob: -9.391433715820312
    8. '.' → logprob: -10.141433715820312
    9. ')' → logprob: -10.141433715820312
    10. ' and' → logprob: -10.141433715820312

Token 470: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16322730481624603
    2. ' return' → logprob: -2.6632273197174072
    3. 'return' (adapté à ' return') → logprob: -2.9132273197174072
    4. ' for' → logprob: -3.9132273197174072
    5. '   ' → logprob: -5.288227081298828
    6. 'for' → logprob: -6.788227081298828
    7. ')' → logprob: -8.663227081298828
    8. '	return' → logprob: -9.538227081298828
    9. ',' → logprob: -10.038227081298828
    10. '
' → logprob: -11.038227081298828

Token 471: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -5.621933451038785e-05
    2. ' all' → logprob: -10.375056266784668
    3. '   ' → logprob: -10.625056266784668
    4. '	all' → logprob: -15.125056266784668
    5. '       ' → logprob: -16.12505531311035
    6. '           ' → logprob: -16.75005531311035
    7. '(all' → logprob: -16.75005531311035
    8. '
' → logprob: -17.62505531311035
    9. 'al' → logprob: -17.62505531311035
    10. '    ' → logprob: -17.75005531311035

Token 472: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2445230782032013
    2. '((' → logprob: -2.119523048400879
    3. '(n' → logprob: -2.494523048400879
    4. '(proc' → logprob: -4.869523048400879
    5. '([(' → logprob: -5.869523048400879
    6. '([' → logprob: -6.494523048400879
    7. '(p' → logprob: -6.869523048400879
    8. '(x' → logprob: -7.369523048400879
    9. 'need' → logprob: -8.494523048400879
    10. '(a' → logprob: -8.869523048400879

Token 473: 'need' (ID: 24630)
  Prédit: 'need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.10060851275920868
    2. 'n' → logprob: -2.3506085872650146
    3. 'needed' → logprob: -8.100608825683594
    4. 'proc' → logprob: -10.475608825683594
    5. 'req' → logprob: -11.600608825683594
    6. '(n' → logprob: -11.975608825683594
    7. 'nd' → logprob: -11.975608825683594
    8. '(' → logprob: -12.100608825683594
    9. ' need' → logprob: -12.225608825683594
    10. 'x' → logprob: -12.350608825683594

Token 474: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.051687754690647125
    2. '<=' → logprob: -3.051687717437744
    3. '[i' → logprob: -5.926687717437744
    4. '[token' → logprob: -8.926688194274902
    5. '[' → logprob: -9.301688194274902
    6. '[idx' → logprob: -9.926688194274902
    7. '()' → logprob: -10.676688194274902
    8. 'token' → logprob: -10.801688194274902
    9. '[j' → logprob: -11.051688194274902
    10. ')<=' → logprob: -11.301688194274902

Token 475: ' w' (ID: 286)
  Prédit: 'avail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avail' → logprob: -0.2737742066383362
    2. 'work' → logprob: -1.8987741470336914
    3. 'w' → logprob: -3.0237741470336914
    4. 'available' → logprob: -3.2737741470336914
    5. 'av' → logprob: -6.648774147033691
    6. 'a' → logprob: -7.398774147033691
    7. 'ava' → logprob: -7.773774147033691
    8. 'avai' → logprob: -8.398774147033691
    9. 'aval' → logprob: -8.648774147033691
    10. 'wa' → logprob: -8.898774147033691

Token 476: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.256640762090683
    2. 'for' → logprob: -1.5066407918930054
    3. 'ork' → logprob: -5.381640911102295
    4. 'or' → logprob: -9.756640434265137
    5. '	for' → logprob: -11.006640434265137
    6. ' ' → logprob: -12.006640434265137
    7. '   ' → logprob: -12.256640434265137
    8. '_for' → logprob: -12.756640434265137
    9. ' or' → logprob: -13.131640434265137
    10. ')' → logprob: -13.256640434265137

Token 477: ' need' (ID: 1309)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.0018490320071578026
    2. ' need' → logprob: -6.376849174499512
    3. 'w' → logprob: -8.876849174499512
    4. ',' → logprob: -12.126849174499512
    5. '   ' → logprob: -15.001849174499512
    6. 'nee' → logprob: -15.126849174499512
    7. ' w' → logprob: -15.126849174499512
    8. '
' → logprob: -15.626849174499512
    9. '(' → logprob: -15.876849174499512
    10. ' (' → logprob: -16.251848220825195

Token 478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005949537269771099
    2. ',w' → logprob: -5.1309494972229
    3. ' ,' → logprob: -10.880949974060059
    4. 'w' → logprob: -13.880949974060059
    5. ',
' → logprob: -15.130949974060059
    6. '_,' → logprob: -15.755949974060059
    7. 'in' → logprob: -16.005949020385742
    8. ',in' → logprob: -16.130949020385742
    9. ',user' → logprob: -16.505949020385742
    10. ',n' → logprob: -16.880949020385742

Token 479: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0019461298361420631
    2. ' w' → logprob: -6.251945972442627
    3. '(w' → logprob: -11.001946449279785
    4. ' in' → logprob: -15.626946449279785
    5. ',' → logprob: -15.751946449279785
    6. ',w' → logprob: -16.00194549560547
    7. ' (' → logprob: -16.12694549560547
    8. 'in' → logprob: -16.25194549560547
    9. 'work' → logprob: -16.50194549560547
    10. '_w' → logprob: -16.62694549560547

Token 480: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06256257742643356
    2. 'in' → logprob: -2.8125624656677246
    3. ',' → logprob: -7.437562465667725
    4. '
' → logprob: -13.562562942504883
    5. 's' → logprob: -13.687562942504883
    6. 'w' → logprob: -14.312562942504883
    7. ' ' → logprob: -14.562562942504883
    8. '   ' → logprob: -14.812562942504883
    9. '	in' → logprob: -15.437562942504883
    10. 'In' → logprob: -15.812562942504883

Token 481: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.0011705794604495168
    2. ' zip' → logprob: -6.751170635223389
    3. '(zip' → logprob: -15.00117015838623
    4. '
' → logprob: -18.376171112060547
    5. ' ' → logprob: -19.251171112060547
    6. '.zip' → logprob: -19.376171112060547
    7. 'ip' → logprob: -19.501171112060547
    8. '_zip' → logprob: -19.876171112060547
    9. ')' → logprob: -20.126171112060547
    10. 'z' → logprob: -20.126171112060547

Token 482: '(proc' (ID: 143689)
  Prédit: '(proc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(proc' → logprob: -7.541112427134067e-05
    2. 'proc' → logprob: -9.500075340270996
    3. '(' → logprob: -16.125076293945312
    4. '(pro' → logprob: -16.250076293945312
    5. '   ' → logprob: -16.750076293945312
    6. '(prod' → logprob: -17.250076293945312
    7. '(prob' → logprob: -17.250076293945312
    8. '(process' → logprob: -17.250076293945312
    9. '((' → logprob: -18.000076293945312
    10. '.proc' → logprob: -18.625076293945312

Token 483: '.need' (ID: 178929)
  Prédit: '.need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.need' → logprob: -7.743758760625497e-05
    2. '.' → logprob: -9.625077247619629
    3. '.resource' → logprob: -11.875077247619629
    4. 'need' → logprob: -12.750077247619629
    5. '.ne' → logprob: -14.375077247619629
    6. ' .' → logprob: -15.000077247619629
    7. '.require' → logprob: -15.625077247619629
    8. '(' → logprob: -15.875077247619629
    9. '.want' → logprob: -16.500078201293945
    10. '_need' → logprob: -17.000078201293945

Token 484: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.0016424537170678377
    2. ',' → logprob: -6.626642227172852
    3. '(work' → logprob: -8.376642227172852
    4. '()' → logprob: -9.626642227172852
    5. ' (),' → logprob: -12.126642227172852
    6. '       ' → logprob: -12.376642227172852
    7. 'work' → logprob: -12.501642227172852
    8. '(),
' → logprob: -13.001642227172852
    9. '().' → logprob: -13.501642227172852
    10. '           ' → logprob: -14.251642227172852

Token 485: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.007609466556459665
    2. ' work' → logprob: -4.8826093673706055
    3. '(work' → logprob: -13.632609367370605
    4. '   ' → logprob: -14.132609367370605
    5. '	work' → logprob: -15.132609367370605
    6. '       ' → logprob: -15.257609367370605
    7. '    ' → logprob: -15.632609367370605
    8. '
' → logprob: -15.882609367370605
    9. ' ' → logprob: -16.132610321044922
    10. '.work' → logprob: -16.507610321044922

Token 486: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0019065011292696
    2. ')' → logprob: -6.376906394958496
    3. '))))' → logprob: -9.751906394958496
    4. ')))

' → logprob: -9.876906394958496
    5. '))' → logprob: -10.001906394958496
    6. ')));' → logprob: -10.876906394958496
    7. ')))
' → logprob: -11.001906394958496
    8. ' ' → logprob: -12.251906394958496
    9. '))).' → logprob: -12.751906394958496
    10. '   ' → logprob: -13.501906394958496

Token 487: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07323764264583588
    2. '
' → logprob: -2.823237657546997
    3. '    
' → logprob: -5.073237419128418
    4. '<|end|>' → logprob: -5.573237419128418
    5. '  
' → logprob: -7.948237419128418
    6. ')' → logprob: -8.073237419128418
    7. '<|end|>' → logprob: -9.448237419128418
    8. ' 
' → logprob: -9.448237419128418
    9. 'def' → logprob: -9.823237419128418
    10. '        
' → logprob: -10.323237419128418

Token 488: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.158753901720047
    2. '   ' → logprob: -2.1587538719177246
    3. ' def' → logprob: -4.033753871917725
    4. '<|end|>' → logprob: -4.908753871917725
    5. '
' → logprob: -5.283753871917725
    6. ')' → logprob: -7.908753871917725
    7. '    
' → logprob: -8.658754348754883
    8. '<|end|>' → logprob: -8.908754348754883
    9. '	def' → logprob: -9.033754348754883
    10. ' ' → logprob: -9.283754348754883

Token 489: ' is' (ID: 382)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.242634654045105
    2. 'is' → logprob: -1.617634654045105
    3. 'safe' → logprob: -2.1176347732543945
    4. ' is' → logprob: -2.2426347732543945
    5. 'find' → logprob: -2.2426347732543945
    6. ' safe' → logprob: -2.3676347732543945
    7. 'detect' → logprob: -3.4926347732543945
    8. 's' → logprob: -4.3676347732543945
    9. ' detect' → logprob: -4.4926347732543945
    10. 'simulate' → logprob: -5.2426347732543945

Token 490: '_dead' (ID: 133650)
  Prédit: '_safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_safe' → logprob: -0.0049039083532989025
    2. '_finished' → logprob: -5.879903793334961
    3. '_s' → logprob: -7.129903793334961
    4. '_dead' → logprob: -7.629903793334961
    5. 'safe' → logprob: -7.879903793334961
    6. '_system' → logprob: -8.754903793334961
    7. '_in' → logprob: -9.379903793334961
    8. '_all' → logprob: -10.254903793334961
    9. '_alive' → logprob: -10.754903793334961
    10. '_' → logprob: -10.879903793334961

Token 491: 'lock' (ID: 2802)
  Prédit: 'locked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'locked' → logprob: -0.3869498670101166
    2. 'lock' → logprob: -1.136949896812439
    3. '_locked' → logprob: -9.76194953918457
    4. '_lock' → logprob: -11.26194953918457
    5. '   ' → logprob: -13.38694953918457
    6. 'locks' → logprob: -13.63694953918457
    7. 'loc' → logprob: -13.88694953918457
    8. '```' → logprob: -14.01194953918457
    9. 'locking' → logprob: -14.01194953918457
    10. '_' → logprob: -14.13694953918457

Token 492: '_' (ID: 62)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004868092015385628
    2. '(' → logprob: -5.379868030548096
    3. '_free' → logprob: -9.379868507385254
    4. 'self' → logprob: -10.004868507385254
    5. '_possible' → logprob: -10.629868507385254
    6. '_detect' → logprob: -10.754868507385254
    7. '()' → logprob: -10.879868507385254
    8. 'free' → logprob: -11.254868507385254
    9. ' (' → logprob: -11.629868507385254
    10. '   ' → logprob: -11.879868507385254

Token 493: 'avoidable' (ID: 154916)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.10789012163877487
    2. 'free' → logprob: -2.3578901290893555
    3. 'state' → logprob: -5.4828901290893555
    4. 'pr' → logprob: -5.8578901290893555
    5. 'det' → logprob: -8.482890129089355
    6. '_possible' → logprob: -9.357890129089355
    7. 'present' → logprob: -9.607890129089355
    8. 'safe' → logprob: -9.732890129089355
    9. 'potential' → logprob: -9.982890129089355
    10. 'pending' → logprob: -9.982890129089355

Token 494: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006013287231326103
    2. '(' → logprob: -5.1310133934021
    3. 'self' → logprob: -10.381012916564941
    4. ' (' → logprob: -10.631012916564941
    5. '_(' → logprob: -11.381012916564941
    6. '   ' → logprob: -12.256012916564941
    7. '_' → logprob: -12.381012916564941
    8. '()' → logprob: -12.506012916564941
    9. '       ' → logprob: -13.131012916564941
    10. '(
' → logprob: -14.506012916564941

Token 495: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3404078185558319
    2. ',' → logprob: -1.9654078483581543
    3. 'self' → logprob: -2.0904078483581543
    4. '(self' → logprob: -3.8404078483581543
    5. '):' → logprob: -6.715407848358154
    6. ')(' → logprob: -6.965407848358154
    7. '   ' → logprob: -7.715407848358154
    8. '):
' → logprob: -8.590407371520996
    9. '       ' → logprob: -8.840407371520996
    10. ' self' → logprob: -9.090407371520996

Token 496: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007092565298080444
    2. ' ->' → logprob: -5.507092475891113
    3. '->' → logprob: -6.257092475891113
    4. '(' → logprob: -7.257092475891113
    5. 'self' → logprob: -8.007092475891113
    6. ':' → logprob: -11.507092475891113
    7. '   ' → logprob: -11.757092475891113
    8. ' (' → logprob: -11.757092475891113
    9. ')' → logprob: -11.882092475891113
    10. ' self' → logprob: -11.882092475891113

Token 497: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.1602458506822586
    2. 'bool' → logprob: -1.9102458953857422
    3. ' ' → logprob: -11.910245895385742
    4. 'Bool' → logprob: -12.660245895385742
    5. '   ' → logprob: -12.910245895385742
    6. ' None' → logprob: -13.285245895385742
    7. 'List' → logprob: -13.410245895385742
    8. ' True' → logprob: -13.910245895385742
    9. ' List' → logprob: -14.285245895385742
    10. '	bool' → logprob: -14.535245895385742

Token 498: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06511849164962769
    2. '(self' → logprob: -3.0651185512542725
    3. ':
' → logprob: -4.315118312835693
    4. '       ' → logprob: -6.190118312835693
    5. '(' → logprob: -7.440118312835693
    6. '   ' → logprob: -8.690118789672852
    7. '():' → logprob: -9.815118789672852
    8. 'self' → logprob: -10.440118789672852
    9. '(
' → logprob: -10.690118789672852
    10. ':self' → logprob: -10.690118789672852

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01295621320605278
    2. '
' → logprob: -4.387956142425537
    3. '   ' → logprob: -8.512956619262695
    4. '        
' → logprob: -9.262956619262695
    5. '    
' → logprob: -10.137956619262695
    6. '[' → logprob: -10.387956619262695
    7. ' 
' → logprob: -11.012956619262695
    8. '	' → logprob: -11.637956619262695
    9. '' → logprob: -11.762956619262695
    10. '```' → logprob: -11.887956619262695

Token 500: ' '''
' (ID: 26725)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16517077386379242
    2. ' work' → logprob: -2.040170669555664
    3. 'work' → logprob: -3.915170669555664
    4. '
' → logprob: -6.665170669555664
    5. '   ' → logprob: -7.290170669555664
    6. '	work' → logprob: -8.540170669555664
    7. '        
' → logprob: -10.540170669555664
    8. ' available' → logprob: -10.665170669555664
    9. '#' → logprob: -10.915170669555664
    10. 'available' → logprob: -11.415170669555664

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.384836888173595e-05
    2. '
' → logprob: -10.8750638961792
    3. '#' → logprob: -11.2500638961792
    4. '        
' → logprob: -11.3750638961792
    5. ''''' → logprob: -11.8750638961792
    6. '   ' → logprob: -12.7500638961792
    7. '           ' → logprob: -13.0000638961792
    8. '"""' → logprob: -13.7500638961792
    9. '        ' → logprob: -13.8750638961792
    10. ''''
' → logprob: -14.1250638961792

Token 502: ' Implements' (ID: 123308)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1571483463048935
    2. '#' → logprob: -2.1571483612060547
    3. 'Sim' → logprob: -4.907148361206055
    4. 'Implement' → logprob: -5.157148361206055
    5. '"""' → logprob: -5.532148361206055
    6. '"""
' → logprob: -6.032148361206055
    7. ''''
' → logprob: -6.282148361206055
    8. 'Check' → logprob: -6.532148361206055
    9. 'Work' → logprob: -6.532148361206055
    10. ' #' → logprob: -7.032148361206055

Token 503: ' a' (ID: 261)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2808655798435211
    2. ' the' → logprob: -1.7808655500411987
    3. 'a' → logprob: -3.2808656692504883
    4. 'Bank' → logprob: -4.280865669250488
    5. 'bank' → logprob: -4.780865669250488
    6. ' a' → logprob: -4.780865669250488
    7. '#' → logprob: -5.780865669250488
    8. ' Bank' → logprob: -6.280865669250488
    9. '   ' → logprob: -7.030865669250488
    10. 'def' → logprob: -7.655865669250488

Token 504: ' Bank' (ID: 9950)
  Prédit: 'bank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bank' → logprob: -0.8469270467758179
    2. 's' → logprob: -1.3469270467758179
    3. 'safe' → logprob: -2.4719271659851074
    4. 'variant' → logprob: -3.4719271659851074
    5. 'work' → logprob: -3.5969271659851074
    6. 'dead' → logprob: -3.5969271659851074
    7. 'Bank' → logprob: -3.7219271659851074
    8. 'simpl' → logprob: -3.8469271659851074
    9. 'def' → logprob: -4.346927165985107
    10. '   ' → logprob: -4.346927165985107

Token 505: 'er's' (ID: 52468)
  Prédit: 'er's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er's' → logprob: -0.06392421573400497
    2. 'er' → logprob: -3.0639243125915527
    3. 'ers' → logprob: -4.188924312591553
    4. '-' → logprob: -10.438923835754395
    5. '   ' → logprob: -12.063923835754395
    6. 'Algorithm' → logprob: -13.313923835754395
    7. 'ER' → logprob: -13.438923835754395
    8. 'erl' → logprob: -13.563923835754395
    9. 'erc' → logprob: -13.563923835754395
    10. '--' → logprob: -13.563923835754395

Token 506: ' algorithm' (ID: 22184)
  Prédit: ' algorithm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' algorithm' → logprob: -1.1261754035949707
    2. 'algorithm' → logprob: -1.1261754035949707
    3. 'Algorithm' → logprob: -1.1261754035949707
    4. ' Algorithm' → logprob: -3.6261754035949707
    5. '_algorithm' → logprob: -7.626175403594971
    6. '   ' → logprob: -10.376174926757812
    7. '```' → logprob: -10.751174926757812
    8. ' safety' → logprob: -12.376174926757812
    9. 'alg' → logprob: -12.626174926757812
    10. ' ' → logprob: -12.876174926757812

Token 507: ' style' (ID: 2713)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8716238737106323
    2. ' for' → logprob: -0.9966238737106323
    3. '       ' → logprob: -1.8716238737106323
    4. ' approach' → logprob: -4.371623992919922
    5. ':' → logprob: -4.996623992919922
    6. '
' → logprob: -5.371623992919922
    7. '.' → logprob: -5.621623992919922
    8. '        
' → logprob: -5.871623992919922
    9. ' style' → logprob: -5.996623992919922
    10. ' version' → logprob: -6.121623992919922

Token 508: ' safety' (ID: 9246)
  Prédit: ' safety'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' safety' → logprob: -1.163228988647461
    2. 's' → logprob: -1.913228988647461
    3. ' dead' → logprob: -1.913228988647461
    4. 'dead' → logprob: -2.288228988647461
    5. ' check' → logprob: -2.538228988647461
    6. ' method' → logprob: -3.663228988647461
    7. 'check' → logprob: -3.913228988647461
    8. ' solution' → logprob: -3.913228988647461
    9. ' algorithm' → logprob: -4.038228988647461
    10. '   ' → logprob: -4.163228988647461

Token 509: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.035506535321474075
    2. 'check' → logprob: -3.7855064868927
    3. '   ' → logprob: -4.660506725311279
    4. '       ' → logprob: -6.785506725311279
    5. '_check' → logprob: -7.535506725311279
    6. ' algorithm' → logprob: -7.660506725311279
    7. '-check' → logprob: -8.660506248474121
    8. ' test' → logprob: -8.910506248474121
    9. ' ' → logprob: -9.285506248474121
    10. '  ' → logprob: -10.160506248474121

Token 510: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013057989068329334
    2. '.' → logprob: -5.888058185577393
    3. ':' → logprob: -6.013058185577393
    4. '
' → logprob: -6.138058185577393
    5. ':
' → logprob: -6.513058185577393
    6. ',' → logprob: -7.013058185577393
    7. ' to' → logprob: -7.138058185577393
    8. '        
' → logprob: -7.263058185577393
    9. ' for' → logprob: -7.513058185577393
    10. '.
' → logprob: -7.638058185577393

Token 511: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024895574897527695
    2. '
' → logprob: -3.774895668029785
    3. '        
' → logprob: -6.524895668029785
    4. '    
' → logprob: -10.024895668029785
    5. ' 
' → logprob: -10.149895668029785
    6. '   ' → logprob: -10.899895668029785
    7. '  
' → logprob: -11.274895668029785
    8. '```' → logprob: -11.649895668029785
    9. ''''
' → logprob: -11.649895668029785
    10. '        ' → logprob: -11.774895668029785

Token 512: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05721473693847656
    2. ' work' → logprob: -3.1822147369384766
    3. 'work' → logprob: -4.932214736938477
    4. '
' → logprob: -5.807214736938477
    5. '#' → logprob: -7.557214736938477
    6. ''''
' → logprob: -7.682214736938477
    7. '        
' → logprob: -7.932214736938477
    8. ' #' → logprob: -8.057214736938477
    9. '        ' → logprob: -8.057214736938477
    10. 'Work' → logprob: -8.182214736938477

Token 513: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.6870113015174866
    2. 'Initialize' → logprob: -1.6870112419128418
    3. 'Create' → logprob: -2.187011241912842
    4. 'Copy' → logprob: -2.437011241912842
    5. ' work' → logprob: -3.812011241912842
    6. 'Make' → logprob: -3.937011241912842
    7. 'Sim' → logprob: -4.062011241912842
    8. 'Creates' → logprob: -4.312011241912842
    9. ' Initialize' → logprob: -5.187011241912842
    10. '       ' → logprob: -5.437011241912842

Token 514: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013335524126887321
    2. '=' → logprob: -4.638335704803467
    3. ':' → logprob: -5.638335704803467
    4. '   ' → logprob: -12.388335227966309
    5. ' is' → logprob: -13.138335227966309
    6. ' :' → logprob: -13.638335227966309
    7. ' ' → logprob: -13.638335227966309
    8. '    ' → logprob: -13.763335227966309
    9. ' :=' → logprob: -14.013335227966309
    10. '```' → logprob: -14.388335227966309

Token 515: ' simulated' (ID: 80970)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.0950039625167847
    2. ' List' → logprob: -1.0950039625167847
    3. 'self' → logprob: -1.5950039625167847
    4. 'List' → logprob: -2.095004081726074
    5. '       ' → logprob: -6.595004081726074
    6. ' =' → logprob: -7.220004081726074
    7. '   ' → logprob: -7.220004081726074
    8. ' [' → logprob: -7.845004081726074
    9. '[self' → logprob: -7.845004081726074
    10. '[' → logprob: -8.095004081726074

Token 516: ' available' (ID: 2839)
  Prédit: ' available'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' available' → logprob: -1.131447196006775
    2. ' =' → logprob: -1.506447196006775
    3. 'available' → logprob: -1.881447196006775
    4. '_available' → logprob: -2.0064473152160645
    5. ' resources' → logprob: -2.8814473152160645
    6. '_resources' → logprob: -3.0064473152160645
    7. ' list' → logprob: -3.5064473152160645
    8. 'Available' → logprob: -4.7564473152160645
    9. ' vector' → logprob: -5.0064473152160645
    10. '=' → logprob: -5.2564473152160645

Token 517: ' resource' (ID: 8305)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19584599137306213
    2. '[:]' → logprob: -1.9458459615707397
    3. '=' → logprob: -4.320846080780029
    4. '[:' → logprob: -5.070846080780029
    5. ':' → logprob: -5.320846080780029
    6. ' resources' → logprob: -5.945846080780029
    7. '_resources' → logprob: -5.945846080780029
    8. '.copy' → logprob: -6.070846080780029
    9. ' copy' → logprob: -7.320846080780029
    10. ' vector' → logprob: -7.820846080780029

Token 518: ' vector' (ID: 9727)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.045172806829214096
    2. ' vector' → logprob: -4.045172691345215
    3. '       ' → logprob: -4.545172691345215
    4. '   ' → logprob: -5.045172691345215
    5. ' =' → logprob: -5.920172691345215
    6. ' s' → logprob: -5.920172691345215
    7. ' counts' → logprob: -6.670172691345215
    8. ' instances' → logprob: -6.920172691345215
    9. ' vectors' → logprob: -7.545172691345215
    10. 'vector' → logprob: -8.295172691345215

Token 519: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5082035660743713
    2. ' =' → logprob: -1.2582035064697266
    3. '
' → logprob: -2.2582035064697266
    4. '=' → logprob: -5.633203506469727
    5. '        
' → logprob: -6.008203506469727
    6. ',' → logprob: -7.008203506469727
    7. ':' → logprob: -7.508203506469727
    8. '   ' → logprob: -8.383203506469727
    9. ' with' → logprob: -8.633203506469727
    10. ' (' → logprob: -8.758203506469727

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014855283312499523
    2. ' =' → logprob: -4.88985538482666
    3. '
' → logprob: -5.38985538482666
    4. '=' → logprob: -6.51485538482666
    5. '   ' → logprob: -8.38985538482666
    6. '        
' → logprob: -8.38985538482666
    7. ',' → logprob: -8.88985538482666
    8. ''''
' → logprob: -9.38985538482666
    9. '#' → logprob: -9.51485538482666
    10. '           ' → logprob: -9.76485538482666

Token 521: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016980964690446854
    2. '
' → logprob: -4.14198112487793
    3. '\n' → logprob: -8.01698112487793
    4. ''''
' → logprob: -8.14198112487793
    5. '   ' → logprob: -9.26698112487793
    6. '           ' → logprob: -9.51698112487793
    7. '        
' → logprob: -9.89198112487793
    8. ''''' → logprob: -10.64198112487793
    9. '#' → logprob: -10.89198112487793
    10. '        ' → logprob: -12.14198112487793

Token 522: ' finish' (ID: 9115)
  Prédit: 'finish'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finish' → logprob: -0.0016124583780765533
    2. 'finished' → logprob: -6.626612663269043
    3. ' finish' → logprob: -8.626612663269043
    4. 'Finish' → logprob: -9.626612663269043
    5. 'fin' → logprob: -11.126612663269043
    6. '   ' → logprob: -11.751612663269043
    7. 'work' → logprob: -12.001612663269043
    8. '_finish' → logprob: -12.626612663269043
    9. '       ' → logprob: -12.751612663269043
    10. 'done' → logprob: -13.376612663269043

Token 523: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08523998409509659
    2. ' =' → logprob: -2.710239887237549
    3. '=' → logprob: -4.210239887237549
    4. 'd' → logprob: -8.960240364074707
    5. 'ed' → logprob: -9.210240364074707
    6. 's' → logprob: -10.085240364074707
    7. '```' → logprob: -10.960240364074707
    8. ' :' → logprob: -11.460240364074707
    9. '[' → logprob: -11.585240364074707
    10. '=[' → logprob: -12.085240364074707

Token 524: ' processed' (ID: 23478)
  Prédit: '[List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[List' → logprob: -1.1108790636062622
    2. 'List' → logprob: -1.3608790636062622
    3. ' List' → logprob: -1.8608790636062622
    4. '[' → logprob: -1.9858790636062622
    5. ' [' → logprob: -2.1108789443969727
    6. '[self' → logprob: -9.610878944396973
    7. '[int' → logprob: -10.235878944396973
    8. '   ' → logprob: -10.235878944396973
    9. 'Set' → logprob: -10.735878944396973
    10. '[a' → logprob: -10.860878944396973

Token 525: ' array' (ID: 2644)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5364564061164856
    2. ' =' → logprob: -1.2864563465118408
    3. '=' → logprob: -2.536456346511841
    4. '_list' → logprob: -4.53645658493042
    5. ' list' → logprob: -4.78645658493042
    6. '[' → logprob: -5.28645658493042
    7. '[]' → logprob: -5.41145658493042
    8. 'List' → logprob: -5.66145658493042
    9. ' vector' → logprob: -5.66145658493042
    10. 'd' → logprob: -6.28645658493042

Token 526: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26617422699928284
    2. ':' → logprob: -1.6411741971969604
    3. '       ' → logprob: -4.39117431640625
    4. ' of' → logprob: -4.51617431640625
    5. '=' → logprob: -4.89117431640625
    6. '   ' → logprob: -6.14117431640625
    7. '[' → logprob: -6.26617431640625
    8. ']' → logprob: -7.01617431640625
    9. ' :' → logprob: -7.64117431640625
    10. ')' → logprob: -8.26617431640625

Token 527: ' bo' (ID: 1581)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.01577167958021164
    2. '[' → logprob: -4.640771865844727
    3. 'bo' → logprob: -6.140771865844727
    4. ' bool' → logprob: -6.390771865844727
    5. '   ' → logprob: -6.515771865844727
    6. ' bo' → logprob: -8.390771865844727
    7. 'self' → logprob: -8.640771865844727
    8. '       ' → logprob: -9.640771865844727
    9. '[self' → logprob: -9.640771865844727
    10. 'boolean' → logprob: -10.015771865844727

Token 528: 'ole' (ID: 1491)
  Prédit: 'ol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.011779118329286575
    2. 'olean' → logprob: -5.011779308319092
    3. 'o' → logprob: -6.011779308319092
    4. '[' → logprob: -6.761779308319092
    5. 'ole' → logprob: -6.886779308319092
    6. 'ols' → logprob: -8.886778831481934
    7. ' ol' → logprob: -10.261778831481934
    8. ''ol' → logprob: -10.261778831481934
    9. 'olist' → logprob: -10.636778831481934
    10. '[]' → logprob: -10.886778831481934

Token 529: 'ans' (ID: 616)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.06287987530231476
    2. 'ans' → logprob: -2.812879800796509
    3. '[' → logprob: -7.812880039215088
    4. 'a' → logprob: -9.18787956237793
    5. 'al' → logprob: -9.68787956237793
    6. 'ol' → logprob: -10.25037956237793
    7. 'and' → logprob: -10.68787956237793
    8. 'ан' → logprob: -10.93787956237793
    9. 'aned' → logprob: -11.06287956237793
    10. 'n' → logprob: -11.25037956237793

Token 530: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18122366070747375
    2. '
' → logprob: -2.3062236309051514
    3. ' =' → logprob: -3.0562236309051514
    4. '        
' → logprob: -5.8062238693237305
    5. ' of' → logprob: -6.1812238693237305
    6. ',' → logprob: -6.3062238693237305
    7. '   ' → logprob: -6.4312238693237305
    8. ' to' → logprob: -6.6812238693237305
    9. '[]
' → logprob: -6.8062238693237305
    10. ')' → logprob: -6.8062238693237305

Token 531: ' processes' (ID: 14340)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.9072777032852173
    2. 'self' → logprob: -1.4072777032852173
    3. 'each' → logprob: -2.2822775840759277
    4. ' processes' → logprob: -2.2822775840759277
    5. ' each' → logprob: -3.0322775840759277
    6. 'p' → logprob: -3.5322775840759277
    7. ' self' → logprob: -3.9072775840759277
    8. ' all' → logprob: -4.657277584075928
    9. 'all' → logprob: -4.657277584075928
    10. 'finished' → logprob: -5.032277584075928

Token 532: ' finished' (ID: 11684)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19356884062290192
    2. '
' → logprob: -1.8185688257217407
    3. ' =' → logprob: -6.193568706512451
    4. '   ' → logprob: -6.318568706512451
    5. '        
' → logprob: -6.318568706512451
    6. '[]
' → logprob: -6.318568706512451
    7. '[' → logprob: -6.693568706512451
    8. '[]' → logprob: -6.818568706512451
    9. ')
' → logprob: -7.193568706512451
    10. ')' → logprob: -7.818568706512451

Token 533: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16724319756031036
    2. '
' → logprob: -1.917243242263794
    3. '        
' → logprob: -6.667243003845215
    4. '   ' → logprob: -6.917243003845215
    5. ')
' → logprob: -6.917243003845215
    6. ''''
' → logprob: -7.042243003845215
    7. ')' → logprob: -7.792243003845215
    8. '```' → logprob: -8.042243003845215
    9. ' or' → logprob: -8.167243003845215
    10. ',' → logprob: -8.167243003845215

Token 534: ' simulation' (ID: 30937)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.6922315955162048
    2. ' this' → logprob: -1.1922316551208496
    3. 'self' → logprob: -2.1922316551208496
    4. 'the' → logprob: -3.9422316551208496
    5. '[' → logprob: -4.06723165512085
    6. 'range' → logprob: -4.44223165512085
    7. ' the' → logprob: -4.69223165512085
    8. 'simulation' → logprob: -4.94223165512085
    9. '[self' → logprob: -5.44223165512085
    10. ' simulation' → logprob: -5.81723165512085

Token 535: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5321962833404541
    2. '       ' → logprob: -0.9071962833404541
    3. '        
' → logprob: -5.282196044921875
    4. ')
' → logprob: -6.657196044921875
    5. ''''
' → logprob: -7.282196044921875
    6. '```' → logprob: -7.907196044921875
    7. ')' → logprob: -8.157196044921875
    8. '<|end|>' → logprob: -8.407196044921875
    9. ''
' → logprob: -8.657196044921875
    10. '   ' → logprob: -8.782196044921875

Token 536: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015471219085156918
    2. ''''' → logprob: -7.126547336578369
    3. ''''
' → logprob: -8.001546859741211
    4. '
' → logprob: -8.251546859741211
    5. '        
' → logprob: -9.626546859741211
    6. '   ' → logprob: -11.001546859741211
    7. ')' → logprob: -11.001546859741211
    8. ''' → logprob: -11.251546859741211
    9. '''' → logprob: -11.626546859741211
    10. '```' → logprob: -12.001546859741211

Token 537: ' '''
' (ID: 26725)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02547716163098812
    2. '
' → logprob: -3.900477170944214
    3. ''''
' (adapté à ' '''
') → logprob: -5.525476932525635
    4. ''''' → logprob: -7.900476932525635
    5. '        
' → logprob: -8.400477409362793
    6. '\n' → logprob: -9.025477409362793
    7. '   ' → logprob: -9.775477409362793
    8. '```' → logprob: -10.150477409362793
    9. '''' → logprob: -10.900477409362793
    10. ''''

' → logprob: -11.025477409362793

Token 538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016206685453653336
    2. '
' → logprob: -4.141206741333008
    3. '        
' → logprob: -9.391206741333008
    4. '   ' → logprob: -10.391206741333008
    5. '
' → logprob: -11.016206741333008
    6. '	' → logprob: -11.016206741333008
    7. '    
' → logprob: -11.766206741333008
    8. 'work' → logprob: -12.891206741333008
    9. '           ' → logprob: -13.016206741333008
    10. ' work' → logprob: -13.141206741333008

Token 539: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' (adapté à ' work') → logprob: -0.5851401686668396
    2. '       ' → logprob: -0.8351401686668396
    3. ' work' → logprob: -4.710140228271484
    4. '   ' → logprob: -9.585140228271484
    5. '	work' → logprob: -10.335140228271484
    6. '
' → logprob: -10.460140228271484
    7. '      ' → logprob: -12.210140228271484
    8. 'def' → logprob: -12.585140228271484
    9. '	' → logprob: -13.085140228271484
    10. '        
' → logprob: -13.335140228271484

Token 540: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16024057567119598
    2. ' =' → logprob: -1.9102405309677124
    3. ':' → logprob: -11.035240173339844
    4. ':=' → logprob: -16.910240173339844
    5. '=self' → logprob: -16.910240173339844
    6. '=[' → logprob: -17.660240173339844
    7. '＝' → logprob: -17.910240173339844
    8. '   ' → logprob: -18.285240173339844
    9. ',' → logprob: -18.535240173339844
    10. ' ' → logprob: -18.535240173339844

Token 541: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.306760805164231e-05
    2. ' self' → logprob: -11.25001335144043
    3. '[self' → logprob: -19.25001335144043
    4. '   ' → logprob: -21.00001335144043
    5. '	self' → logprob: -21.75001335144043
    6. 'list' → logprob: -22.12501335144043
    7. '(self' → logprob: -22.37501335144043
    8. '       ' → logprob: -24.50001335144043
    9. '
' → logprob: -24.50001335144043
    10. '=self' → logprob: -25.00001335144043

Token 542: '.available' (ID: 87418)
  Prédit: '.available'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.available' → logprob: -0.004082909319549799
    2. 'available' → logprob: -5.504082679748535
    3. '_available' → logprob: -13.379082679748535
    4. '.' → logprob: -14.004082679748535
    5. 'self' → logprob: -14.129082679748535
    6. ' available' → logprob: -14.129082679748535
    7. 'Available' → logprob: -15.129082679748535
    8. 'AVAILABLE' → logprob: -15.504082679748535
    9. ' .' → logprob: -17.37908363342285
    10. '_AVAILABLE' → logprob: -17.62908363342285

Token 543: '[:' (ID: 7808)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.023245712742209435
    2. '[:' → logprob: -3.7732458114624023
    3. '[' → logprob: -15.398245811462402
    4. '[]' → logprob: -19.898244857788086
    5. '.copy' → logprob: -20.273244857788086
    6. '[::-' → logprob: -21.148244857788086
    7. ' [:' → logprob: -21.523244857788086
    8. ':' → logprob: -23.023244857788086
    9. '[:-' → logprob: -23.648244857788086
    10. '][:' → logprob: -23.773244857788086

Token 544: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.16445651650428772
    2. ']' → logprob: -1.9144564867019653
    3. '       ' → logprob: -5.914456367492676
    4. ']
' → logprob: -7.039456367492676
    5. ')
' → logprob: -8.164456367492676
    6. ']

' → logprob: -8.789456367492676
    7. ')' → logprob: -9.039456367492676
    8. '<|end|>' → logprob: -10.539456367492676
    9. '
' → logprob: -11.039456367492676
    10. '   ' → logprob: -11.539456367492676

Token 545: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07114142179489136
    2. 'finish' → logprob: -2.696141481399536
    3. ' finish' → logprob: -6.821141242980957
    4. '   ' → logprob: -10.071141242980957
    5. 'finished' → logprob: -10.571141242980957
    6. ',' → logprob: -11.321141242980957
    7. '           ' → logprob: -12.196141242980957
    8. '      ' → logprob: -12.196141242980957
    9. '.finish' → logprob: -12.571141242980957
    10. '        
' → logprob: -12.696141242980957

Token 546: ' finish' (ID: 9115)
  Prédit: 'finish'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finish' (adapté à ' finish') → logprob: -1.1637164789135568e-05
    2. ' finish' → logprob: -11.750011444091797
    3. '       ' → logprob: -13.375011444091797
    4. 'finished' → logprob: -13.500011444091797
    5. '   ' → logprob: -15.125011444091797
    6. 'work' → logprob: -15.500011444091797
    7. '        
' → logprob: -17.125011444091797
    8. '_finish' → logprob: -17.500011444091797
    9. 'Finish' → logprob: -17.875011444091797
    10. 'fin' → logprob: -18.125011444091797

Token 547: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519491910934448
    2. ' =' → logprob: -1.5019491910934448
    3. ':' → logprob: -10.876949310302734
    4. '=[' → logprob: -14.126949310302734
    5. '[' → logprob: -16.001949310302734
    6. '   ' → logprob: -16.501949310302734
    7. '	' → logprob: -16.501949310302734
    8. '[:]' → logprob: -16.751949310302734
    9. ' =[' → logprob: -16.751949310302734
    10. '```' → logprob: -16.876949310302734

Token 548: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2648644745349884
    2. '[self' → logprob: -1.514864444732666
    3. '[p' → logprob: -4.764864444732666
    4. '[len' → logprob: -5.764864444732666
    5. '[item' → logprob: -8.139864921569824
    6. '[i' → logprob: -8.139864921569824
    7. '[node' → logprob: -9.639864921569824
    8. '[obj' → logprob: -9.639864921569824
    9. '[f' → logprob: -9.639864921569824
    10. '[result' → logprob: -10.014864921569824

Token 549: 'proc' (ID: 35874)
  Prédit: 'proc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proc' → logprob: -0.022452687844634056
    2. 'p' → logprob: -3.8974525928497314
    3. 'False' → logprob: -6.3974528312683105
    4. 'process' → logprob: -8.397452354431152
    5. '(proc' → logprob: -11.147452354431152
    6. ' proc' → logprob: -13.647452354431152
    7. '(p' → logprob: -14.647452354431152
    8. 'True' → logprob: -14.647452354431152
    9. 'pr' → logprob: -15.647452354431152
    10. ' False' → logprob: -16.02245330810547

Token 550: '.finished' (ID: 182736)
  Prédit: '.finished'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.finished' → logprob: -0.00010819212911883369
    2. 'finished' → logprob: -9.750107765197754
    3. '.' → logprob: -10.250107765197754
    4. ' .' → logprob: -12.500107765197754
    5. '.is' → logprob: -12.875107765197754
    6. '.false' → logprob: -13.250107765197754
    7. '.failed' → logprob: -13.375107765197754
    8. '.finish' → logprob: -13.500107765197754
    9. '.fin' → logprob: -14.250107765197754
    10. '.completed' → logprob: -14.375107765197754

Token 551: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1136607825756073
    2. 'for' → logprob: -2.2386608123779297
    3. ']' → logprob: -7.98866081237793
    4. ' or' → logprob: -8.73866081237793
    5. '           ' → logprob: -9.36366081237793
    6. '       ' → logprob: -9.61366081237793
    7. '        ' → logprob: -9.98866081237793
    8. '   ' → logprob: -10.73866081237793
    9. '	for' → logprob: -10.86366081237793
    10. ' ' → logprob: -10.98866081237793

Token 552: ' proc' (ID: 14550)
  Prédit: 'proc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proc' → logprob: -0.006991826929152012
    2. 'self' → logprob: -5.006991863250732
    3. ' proc' → logprob: -8.381991386413574
    4. ' self' → logprob: -10.256991386413574
    5. '(proc' → logprob: -11.506991386413574
    6. '.proc' → logprob: -13.506991386413574
    7. 'p' → logprob: -15.256991386413574
    8. '   ' → logprob: -15.506991386413574
    9. ' ' → logprob: -16.00699234008789
    10. '_proc' → logprob: -16.38199234008789

Token 553: ' in' (ID: 306)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4309309124946594
    2. ' in' → logprob: -1.3059308528900146
    3. 'proc' → logprob: -2.9309308528900146
    4. ' self' → logprob: -4.805931091308594
    5. 'in' → logprob: -4.930931091308594
    6. 'rocess' → logprob: -5.305931091308594
    7. '.proc' → logprob: -5.430931091308594
    8. 'roc' → logprob: -8.180931091308594
    9. 'f' → logprob: -8.930931091308594
    10. 'process' → logprob: -9.430931091308594

Token 554: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00408647395670414
    2. ' self' → logprob: -5.504086494445801
    3. '(self' → logprob: -12.5040864944458
    4. '
' → logprob: -13.3790864944458
    5. ' ' → logprob: -14.1290864944458
    6. '   ' → logprob: -14.2540864944458
    7. '       ' → logprob: -15.1290864944458
    8. '[self' → logprob: -15.5040864944458
    9. 'range' → logprob: -15.8790864944458
    10. '	self' → logprob: -16.004085540771484

Token 555: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -0.06372883915901184
    2. 'process' → logprob: -2.8137288093566895
    3. 'rocess' → logprob: -6.4387288093566895
    4. 'self' → logprob: -8.813729286193848
    5. ' processes' → logprob: -11.938729286193848
    6. 'rocessing' → logprob: -13.188729286193848
    7. '.pro' → logprob: -14.313729286193848
    8. 'proces' → logprob: -14.563729286193848
    9. '(process' → logprob: -14.688729286193848
    10. 'ro' → logprob: -14.688729286193848

Token 556: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -4.966313281329349e-05
    2. 's' → logprob: -10.500049591064453
    3. 'ses' → logprob: -11.750049591064453
    4. 'esses' → logprob: -12.375049591064453
    5. 'ess' → logprob: -12.625049591064453
    6. ']' → logprob: -12.750049591064453
    7. 'sses' → logprob: -13.625049591064453
    8. 'eses' → logprob: -14.750049591064453
    9. '[' → logprob: -15.125049591064453
    10. ')]' → logprob: -15.125049591064453

Token 557: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002984121209010482
    2. '       ' → logprob: -6.002984046936035
    3. ']
' → logprob: -7.877984046936035
    4. ' ]' → logprob: -9.002984046936035
    5. ']

' → logprob: -12.627984046936035
    6. ']
' → logprob: -13.627984046936035
    7. '   ' → logprob: -14.002984046936035
    8. '()]' → logprob: -15.002984046936035
    9. '.]' → logprob: -16.25298500061035
    10. ' ]
' → logprob: -16.37798500061035

Token 558: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004230004735291004
    2. '   ' → logprob: -6.00423002243042
    3. ' for' → logprob: -7.12923002243042
    4. ' i' → logprob: -7.37923002243042
    5. 'i' → logprob: -8.754229545593262
    6. ' while' → logprob: -9.879229545593262
    7. 'for' → logprob: -10.004229545593262
    8. '	for' → logprob: -11.504229545593262
    9. 'while' → logprob: -11.629229545593262
    10. '	   ' → logprob: -11.879229545593262

Token 559: ' progress' (ID: 7408)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.39206621050834656
    2. 'changed' → logprob: -1.142066240310669
    3. 'progress' (adapté à ' progress') → logprob: -5.76706600189209
    4. 'change' → logprob: -6.64206600189209
    5. 'made' → logprob: -7.39206600189209
    6. 'updated' → logprob: -9.76706600189209
    7. ' changed' → logprob: -10.76706600189209
    8. 'changes' → logprob: -11.26706600189209
    9. '   ' → logprob: -11.39206600189209
    10. ' while' → logprob: -11.51706600189209

Token 560: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5871856212615967
    2. ' =' → logprob: -0.8371856212615967
    3. '_m' → logprob: -5.337185859680176
    4. '_found' → logprob: -5.712185859680176
    5. 'made' → logprob: -6.962185859680176
    6. ':' → logprob: -7.212185859680176
    7. '_possible' → logprob: -7.462185859680176
    8. '=True' → logprob: -7.587185859680176
    9. 'Made' → logprob: -9.462185859680176
    10. 'ed' → logprob: -9.962185859680176

Token 561: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0002614550176076591
    2. ' True' → logprob: -8.250261306762695
    3. 'False' → logprob: -15.500261306762695
    4. '1' → logprob: -18.500261306762695
    5. '(True' → logprob: -20.250261306762695
    6. 'true' → logprob: -20.500261306762695
    7. '[' → logprob: -21.250261306762695
    8. '   ' → logprob: -21.875261306762695
    9. '
' → logprob: -22.375261306762695
    10. '=True' → logprob: -22.625261306762695

Token 562: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2628933787345886
    2. '
' → logprob: -1.5128934383392334
    3. 'while' → logprob: -5.012893199920654
    4. ' while' → logprob: -5.762893199920654
    5. '        
' → logprob: -8.137893676757812
    6. '<|end|>' → logprob: -8.637893676757812
    7. ',' → logprob: -9.012893676757812
    8. '	while' → logprob: -9.137893676757812
    9. '   ' → logprob: -9.637893676757812
    10. '
' → logprob: -9.887893676757812

Token 563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11082613468170166
    2. '
' → logprob: -2.610826015472412
    3. 'while' → logprob: -4.110826015472412
    4. ' while' → logprob: -4.485826015472412
    5. '   ' → logprob: -6.610826015472412
    6. '        
' → logprob: -6.985826015472412
    7. '	while' → logprob: -6.985826015472412
    8. '    
' → logprob: -8.61082649230957
    9. ' 
' → logprob: -9.23582649230957
    10. '\n' → logprob: -9.48582649230957

Token 564: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.611865222454071
    2. '       ' → logprob: -0.861865222454071
    3. ' while' → logprob: -3.361865282058716
    4. '	while' → logprob: -7.486865043640137
    5. '   ' → logprob: -10.361865043640137
    6. '
' → logprob: -10.861865043640137
    7. '	' → logprob: -12.611865043640137
    8. '        
' → logprob: -14.236865043640137
    9. '	   ' → logprob: -14.361865043640137
    10. '           ' → logprob: -14.486865043640137

Token 565: ' progress' (ID: 7408)
  Prédit: ' progress'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' progress' → logprob: -0.10021767020225525
    2. 'progress' → logprob: -2.350217580795288
    3. '(progress' → logprob: -11.475217819213867
    4. '	progress' → logprob: -14.725217819213867
    5. ' ' → logprob: -16.475217819213867
    6. '_progress' → logprob: -16.600217819213867
    7. ' progres' → logprob: -17.725217819213867
    8. '.progress' → logprob: -18.600217819213867
    9. '  ' → logprob: -18.850217819213867
    10. '    ' → logprob: -19.225217819213867

Token 566: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4954553246498108
    2. ' and' → logprob: -0.9954553246498108
    3. 'and' → logprob: -4.495455265045166
    4. ':
' → logprob: -4.620455265045166
    5. '<|end|>' → logprob: -9.620455741882324
    6. ' :' → logprob: -11.245455741882324
    7. '=' → logprob: -11.245455741882324
    8. ',' → logprob: -11.620455741882324
    9. '<|end|>' → logprob: -12.120455741882324
    10. '):
' → logprob: -12.245455741882324

Token 567: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026493040844798088
    2. '
' → logprob: -3.6514930725097656
    3. '\n' → logprob: -9.026493072509766
    4. '   ' → logprob: -10.901493072509766
    5. '    
' → logprob: -11.151493072509766
    6. '            
' → logprob: -11.901493072509766
    7. '       ' → logprob: -12.026493072509766
    8. '
' → logprob: -12.276493072509766
    9. '\' → logprob: -12.526493072509766
    10. '		' → logprob: -13.026493072509766

Token 568: ' progress' (ID: 7408)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009840494953095913
    2. 'progress' (adapté à ' progress') → logprob: -4.884840488433838
    3. ' progress' → logprob: -6.384840488433838
    4. '   ' → logprob: -7.634840488433838
    5. '	progress' → logprob: -10.509840965270996
    6. '       ' → logprob: -11.384840965270996
    7. '
' → logprob: -11.884840965270996
    8. '		' → logprob: -12.259840965270996
    9. '               ' → logprob: -12.384840965270996
    10. '	       ' → logprob: -13.009840965270996

Token 569: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31329140067100525
    2. ' =' → logprob: -1.3132914304733276
    3. '=False' → logprob: -10.938291549682617
    4. '   ' → logprob: -12.188291549682617
    5. ':' → logprob: -12.938291549682617
    6. '=True' → logprob: -13.313291549682617
    7. ' ' → logprob: -14.313291549682617
    8. '_=' → logprob: -14.563291549682617
    9. '       ' → logprob: -14.813291549682617
    10. ',' → logprob: -14.938291549682617

Token 570: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0019287518225610256
    2. ' False' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.126928329467773
    4. 'false' → logprob: -17.126928329467773
    5. '(False' → logprob: -20.001928329467773
    6. '=False' → logprob: -20.501928329467773
    7. '_false' → logprob: -21.251928329467773
    8. ' ' → logprob: -21.376928329467773
    9. '    ' → logprob: -21.376928329467773
    10. '.False' → logprob: -21.626928329467773

Token 571: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07073444128036499
    2. '
' → logprob: -2.6957345008850098
    3. ' for' → logprob: -7.94573450088501
    4. 'for' → logprob: -9.070734024047852
    5. '       ' → logprob: -9.195734024047852
    6. '            
' → logprob: -9.695734024047852
    7. '    
' → logprob: -9.820734024047852
    8. '   ' → logprob: -10.695734024047852
    9. ',' → logprob: -10.695734024047852
    10. '  
' → logprob: -11.070734024047852

Token 572: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005029928870499134
    2. 'for' → logprob: -8.000502586364746
    3. ' for' → logprob: -9.125502586364746
    4. '       ' → logprob: -10.125502586364746
    5. '
' → logprob: -11.375502586364746
    6. '   ' → logprob: -13.125502586364746
    7. '            
' → logprob: -13.125502586364746
    8. '		' → logprob: -13.500502586364746
    9. '	       ' → logprob: -15.000502586364746
    10. '               ' → logprob: -15.000502586364746

Token 573: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0026615047827363014
    2. '           ' → logprob: -6.25266170501709
    3. ' for' → logprob: -7.25266170501709
    4. '       ' → logprob: -10.62766170501709
    5. '   ' → logprob: -15.62766170501709
    6. '	for' → logprob: -17.877660751342773
    7. '               ' → logprob: -19.502660751342773
    8. '
' → logprob: -20.127660751342773
    9. '```' → logprob: -20.502660751342773
    10. ' ' → logprob: -20.627660751342773

Token 574: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14770755171775818
    2. 'proc' → logprob: -2.647707462310791
    3. ' i' → logprob: -2.772707462310791
    4. ' proc' → logprob: -6.147707462310791
    5. 'idx' → logprob: -6.647707462310791
    6. '   ' → logprob: -8.52270793914795
    7. 'p' → logprob: -9.02270793914795
    8. ' idx' → logprob: -9.27270793914795
    9. '       ' → logprob: -9.64770793914795
    10. 'pid' → logprob: -10.52270793914795

Token 575: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004831192083656788
    2. 'in' → logprob: -5.379831314086914
    3. ',' → logprob: -8.504831314086914
    4. ' ,' → logprob: -13.629831314086914
    5. '           ' → logprob: -13.629831314086914
    6. '	in' → logprob: -13.629831314086914
    7. ' ' → logprob: -13.879831314086914
    8. '        ' → logprob: -14.004831314086914
    9. '       ' → logprob: -14.754831314086914
    10. '   ' → logprob: -15.129831314086914

Token 576: ' proc' (ID: 14550)
  Prédit: 'proc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proc' → logprob: -2.570319702499546e-05
    2. ' proc' → logprob: -10.625025749206543
    3. '(proc' → logprob: -14.125025749206543
    4. 'process' → logprob: -15.375025749206543
    5. '   ' → logprob: -15.750025749206543
    6. '.proc' → logprob: -16.375024795532227
    7. '```' → logprob: -16.625024795532227
    8. '_proc' → logprob: -17.375024795532227
    9. 'p' → logprob: -17.875024795532227
    10. 'prod' → logprob: -18.125024795532227

Token 577: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028060602489858866
    2. 'in' → logprob: -5.877806186676025
    3. '	in' → logprob: -14.377805709838867
    4. ' ' → logprob: -15.002805709838867
    5. ',' → logprob: -15.627805709838867
    6. 'import' → logprob: -16.627805709838867
    7. '   ' → logprob: -17.127805709838867
    8. 'In' → logprob: -17.752805709838867
    9. ')' → logprob: -17.752805709838867
    10. '  ' → logprob: -17.877805709838867

Token 578: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0024800582323223352
    2. ' enumerate' → logprob: -6.0024800300598145
    3. 'enum' → logprob: -12.752480506896973
    4. 'umer' → logprob: -14.377480506896973
    5. 'en' → logprob: -14.502480506896973
    6. '   ' → logprob: -16.252479553222656
    7. '(en' → logprob: -16.502479553222656
    8. ' ' → logprob: -16.752479553222656
    9. '.enumer' → logprob: -17.002479553222656
    10. '
' → logprob: -17.377479553222656

Token 579: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04874292388558388
    2. 'self' → logprob: -3.0487430095672607
    3. ' self' → logprob: -8.92374324798584
    4. '       ' → logprob: -11.92374324798584
    5. '           ' → logprob: -12.17374324798584
    6. ' (' → logprob: -12.79874324798584
    7. '[self' → logprob: -12.92374324798584
    8. '   ' → logprob: -13.17374324798584
    9. '=self' → logprob: -13.92374324798584
    10. '(' → logprob: -14.17374324798584

Token 580: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -0.00010115911572938785
    2. 'process' → logprob: -9.250101089477539
    3. 'rocess' → logprob: -13.125101089477539
    4. 'self' → logprob: -13.750101089477539
    5. '.pro' → logprob: -14.000101089477539
    6. ' .' → logprob: -15.250101089477539
    7. '.' → logprob: -15.375101089477539
    8. ').' → logprob: -15.500101089477539
    9. ' processes' → logprob: -15.875101089477539
    10. 's' → logprob: -16.37510108947754

Token 581: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.02380869723856449
    2. 's' → logprob: -3.773808717727661
    3. '       ' → logprob: -8.773808479309082
    4. 'esses' → logprob: -9.273808479309082
    5. '   ' → logprob: -9.648808479309082
    6. 'ess' → logprob: -10.023808479309082
    7. '           ' → logprob: -10.273808479309082
    8. ')' → logprob: -10.398808479309082
    9. 'ses' → logprob: -10.898808479309082
    10. 'ss' → logprob: -11.148808479309082

Token 582: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011768518015742302
    2. '):' → logprob: -4.511768341064453
    3. '):
' → logprob: -7.886768341064453
    4. '           ' → logprob: -8.636768341064453
    5. '               ' → logprob: -9.886768341064453
    6. ':' → logprob: -9.886768341064453
    7. ':
' → logprob: -10.636768341064453
    8. '():
' → logprob: -10.886768341064453
    9. '):

' → logprob: -11.511768341064453
    10. ' ):
' → logprob: -12.136768341064453

Token 583: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004080062732100487
    2. ' if' → logprob: -6.004080295562744
    3. '<|end|>' → logprob: -7.379080295562744
    4. '           ' → logprob: -7.629080295562744
    5. '                
' → logprob: -9.004079818725586
    6. '	           ' → logprob: -9.254079818725586
    7. '		       ' → logprob: -10.254079818725586
    8. '<|end|>' → logprob: -10.629079818725586
    9. '       ' → logprob: -10.754079818725586
    10. ',' → logprob: -10.754079818725586

Token 584: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8908497095108032
    2. '           ' → logprob: -1.2658497095108032
    3. 'if' (adapté à ' if') → logprob: -1.3908497095108032
    4. ' if' → logprob: -2.8908495903015137
    5. '                   ' → logprob: -5.890849590301514
    6. '
' → logprob: -8.265850067138672
    7. '	           ' → logprob: -9.390850067138672
    8. ',' → logprob: -10.515850067138672
    9. '   ' → logprob: -10.890850067138672
    10. '#' → logprob: -11.015850067138672

Token 585: ' finish' (ID: 9115)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0040148841217160225
    2. ' not' → logprob: -6.00401496887207
    3. '(not' → logprob: -6.50401496887207
    4. 'finish' → logprob: -10.87901496887207
    5. '               ' → logprob: -11.37901496887207
    6. '                   ' → logprob: -12.25401496887207
    7. '   ' → logprob: -12.75401496887207
    8. '           ' → logprob: -14.37901496887207
    9. '(f' → logprob: -14.75401496887207
    10. '	not' → logprob: -15.00401496887207

Token 586: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -12.250004768371582
    3. 'i' → logprob: -16.1250057220459
    4. '   ' → logprob: -16.6250057220459
    5. '           ' → logprob: -17.1250057220459
    6. '[
' → logprob: -17.2500057220459
    7. '               ' → logprob: -17.5000057220459
    8. '       ' → logprob: -17.7500057220459
    9. ' [' → logprob: -17.7500057220459
    10. 'and' → logprob: -18.1250057220459

Token 587: ']:
' (ID: 22152)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20227065682411194
    2. ' or' → logprob: -2.452270746231079
    3. ']==' → logprob: -3.202270746231079
    4. ' ==' → logprob: -3.452270746231079
    5. ' is' → logprob: -4.9522705078125
    6. ':' → logprob: -5.2022705078125
    7. ']' → logprob: -5.2022705078125
    8. 'or' → logprob: -5.8272705078125
    9. ')' → logprob: -6.8272705078125
    10. ')==' → logprob: -7.5772705078125

Token 588: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.025026855990290642
    2. ' or' → logprob: -3.900026798248291
    3. ':' → logprob: -6.025026798248291
    4. ':
' → logprob: -6.400026798248291
    5. ' and' → logprob: -9.02502727508545
    6. '                  ' → logprob: -9.40002727508545
    7. '                       ' → logprob: -9.65002727508545
    8. '               ' → logprob: -9.90002727508545
    9. ' continue' → logprob: -10.90002727508545
    10. '==' → logprob: -11.52502727508545

Token 589: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.621936023235321
    2. '                   ' → logprob: -0.871936023235321
    3. ' continue' → logprob: -3.121936082839966
    4. '                       ' → logprob: -7.246935844421387
    5. '               ' → logprob: -9.746935844421387
    6. '	continue' → logprob: -9.996935844421387
    7. '   ' → logprob: -10.746935844421387
    8. '           ' → logprob: -11.371935844421387
    9. 'contin' → logprob: -11.621935844421387
    10. '_continue' → logprob: -11.621935844421387

Token 590: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.028894072398543358
    2. '
' → logprob: -3.6538941860198975
    3. '                
' → logprob: -6.028893947601318
    4. ' and' → logprob: -9.778894424438477
    5. '                    
' → logprob: -10.403894424438477
    6. '                ' → logprob: -10.778894424438477
    7. ' 
' → logprob: -11.403894424438477
    8. '            
' → logprob: -11.778894424438477
    9. '                   ' → logprob: -11.903894424438477
    10. '    
' → logprob: -12.278894424438477

Token 591: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001362020499072969
    2. '
' → logprob: -6.626361846923828
    3. '                
' → logprob: -10.751361846923828
    4. 'if' → logprob: -11.501361846923828
    5. '           ' → logprob: -14.001361846923828
    6. ' if' → logprob: -14.126361846923828
    7. 'import' → logprob: -14.626361846923828
    8. '```' → logprob: -14.626361846923828
    9. '
' → logprob: -15.126361846923828
    10. '

' → logprob: -15.126361846923828

Token 592: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.032571788877248764
    2. 'if' (adapté à ' if') → logprob: -3.532571792602539
    3. '           ' → logprob: -6.782571792602539
    4. ' if' → logprob: -7.032571792602539
    5. '
' → logprob: -7.657571792602539
    6. '                
' → logprob: -8.157571792602539
    7. '            
' → logprob: -11.282571792602539
    8. 'elif' → logprob: -11.407571792602539
    9. '                   ' → logprob: -12.157571792602539
    10. '       ' → logprob: -13.157571792602539

Token 593: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023420866578817368
    2. ' self' → logprob: -3.773420810699463
    3. '           ' → logprob: -9.773421287536621
    4. '(self' → logprob: -10.023421287536621
    5. '   ' → logprob: -10.773421287536621
    6. '               ' → logprob: -11.273421287536621
    7. 'all' → logprob: -11.398421287536621
    8. '                   ' → logprob: -11.648421287536621
    9. '       ' → logprob: -11.898421287536621
    10. '
' → logprob: -13.023421287536621

Token 594: '.can' (ID: 46002)
  Prédit: '.can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.can' → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -16.25
    3. '.' → logprob: -16.75
    4. ' .' → logprob: -16.875
    5. '.Can' → logprob: -16.875
    6. 'can' → logprob: -17.5
    7. '	can' → logprob: -17.625
    8. '       ' → logprob: -18.125
    9. '           ' → logprob: -18.125
    10. '.is' → logprob: -19.25

Token 595: '_finish' (ID: 109520)
  Prédit: '_finish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_finish' → logprob: -0.0004396095173433423
    2. 'finish' → logprob: -7.750439643859863
    3. '_continue' → logprob: -11.875439643859863
    4. '_fin' → logprob: -14.750439643859863
    5. '_can' → logprob: -15.500439643859863
    6. '_finished' → logprob: -15.750439643859863
    7. '_finalize' → logprob: -15.750439643859863
    8. ' finish' → logprob: -16.000438690185547
    9. 'can' → logprob: -16.125438690185547
    10. '_start' → logprob: -16.250438690185547

Token 596: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.00043615259346552193
    2. 'with' → logprob: -7.750436305999756
    3. 'With' → logprob: -13.250435829162598
    4. '(proc' → logprob: -13.375435829162598
    5. '_WITH' → logprob: -14.125435829162598
    6. '   ' → logprob: -14.500435829162598
    7. '_' → logprob: -16.125436782836914
    8. '	with' → logprob: -16.375436782836914
    9. ')' → logprob: -16.500436782836914
    10. '(with' → logprob: -16.625436782836914

Token 597: '_available' (ID: 61823)
  Prédit: '_available'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_available' → logprob: -0.004749915096908808
    2. 'available' → logprob: -5.379749774932861
    3. '(proc' → logprob: -9.50475025177002
    4. 'Available' → logprob: -10.50475025177002
    5. 'avail' → logprob: -11.37975025177002
    6. 'proc' → logprob: -11.75475025177002
    7. '_AVAILABLE' → logprob: -12.75475025177002
    8. ' available' → logprob: -13.62975025177002
    9. 'avai' → logprob: -14.50475025177002
    10. '_av' → logprob: -14.75475025177002

Token 598: '(proc' (ID: 143689)
  Prédit: '(proc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(proc' → logprob: -1.2113979209971149e-05
    2. ' (' → logprob: -12.375012397766113
    3. 'proc' → logprob: -12.375012397766113
    4. '(' → logprob: -12.750012397766113
    5. '(prod' → logprob: -15.750012397766113
    6. '(process' → logprob: -15.750012397766113
    7. '(
' → logprob: -16.500011444091797
    8. '(prob' → logprob: -16.500011444091797
    9. '```' → logprob: -17.000011444091797
    10. ' proc' → logprob: -17.250011444091797

Token 599: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004969134461134672
    2. ' ,' → logprob: -7.625496864318848
    3. ',
' → logprob: -12.750496864318848
    4. '(work' → logprob: -13.125496864318848
    5. '           ' → logprob: -14.500496864318848
    6. '               ' → logprob: -14.500496864318848
    7. '),' → logprob: -14.625496864318848
    8. '(),' → logprob: -15.000496864318848
    9. 'work' → logprob: -15.125496864318848
    10. '                   ' → logprob: -15.250496864318848

Token 600: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' → logprob: -0.0019313741941004992
    2. ' work' → logprob: -6.251931190490723
    3. '(work' → logprob: -13.001931190490723
    4. '	work' → logprob: -14.626931190490723
    5. '.work' → logprob: -17.12693214416504
    6. '   ' → logprob: -17.25193214416504
    7. '       ' → logprob: -18.37693214416504
    8. ')' → logprob: -18.37693214416504
    9. 'Work' → logprob: -18.50193214416504
    10. '_work' → logprob: -19.00193214416504

Token 601: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47458767890930176
    2. '):' → logprob: -0.9745876789093018
    3. '):
' → logprob: -8.724587440490723
    4. '               ' → logprob: -9.349587440490723
    5. ' ):
' → logprob: -9.724587440490723
    6. ')' → logprob: -9.849587440490723
    7. ' ):' → logprob: -10.224587440490723
    8. '                   ' → logprob: -10.349587440490723
    9. ':' → logprob: -10.474587440490723
    10. '):

' → logprob: -10.724587440490723

Token 602: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0871168002486229
    2. ':
' → logprob: -2.9621167182922363
    3. ':' → logprob: -3.8371167182922363
    4. '               ' → logprob: -5.337116718292236
    5. '           ' → logprob: -6.212116718292236
    6. '                    
' → logprob: -7.087116718292236
    7. '):
' → logprob: -7.212116718292236
    8. '
' → logprob: -7.587116718292236
    9. '                       ' → logprob: -8.087117195129395
    10. ',' → logprob: -8.962117195129395

Token 603: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6092818975448608
    2. 'finish' → logprob: -1.8592818975448608
    3. 'work' → logprob: -1.9842818975448608
    4. '                   ' → logprob: -1.9842818975448608
    5. '               ' → logprob: -4.48428201675415
    6. '           ' → logprob: -4.73428201675415
    7. '       ' → logprob: -6.23428201675415
    8. '   ' → logprob: -6.85928201675415
    9. ' for' → logprob: -6.85928201675415
    10. '                       ' → logprob: -7.48428201675415

Token 604: ' simulate' (ID: 66687)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6338264346122742
    2. 'work' → logprob: -1.383826494216919
    3. '                   ' → logprob: -2.133826494216919
    4. 'finish' → logprob: -2.383826494216919
    5. '           ' → logprob: -5.88382625579834
    6. '               ' → logprob: -6.38382625579834
    7. '       ' → logprob: -7.00882625579834
    8. 'self' → logprob: -7.63382625579834
    9. 'progress' → logprob: -7.75882625579834
    10. ' for' → logprob: -7.88382625579834

Token 605: ' finishing' (ID: 34631)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.653728187084198
    2. '                   ' → logprob: -1.1537282466888428
    3. 'proc' → logprob: -2.2787282466888428
    4. ' for' → logprob: -3.5287282466888428
    5. '           ' → logprob: -4.278728008270264
    6. '   ' → logprob: -5.403728008270264
    7. 'finish' → logprob: -5.403728008270264
    8. '               ' → logprob: -5.528728008270264
    9. '       ' → logprob: -6.653728008270264
    10. 'work' → logprob: -6.903728008270264

Token 606: ' proc' (ID: 14550)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.028806516900658607
    2. ' for' → logprob: -4.153806686401367
    3. '
' → logprob: -5.028806686401367
    4. 'for' → logprob: -5.528806686401367
    5. '           ' → logprob: -7.403806686401367
    6. '                    
' → logprob: -7.778806686401367
    7. 'proc' → logprob: -8.153806686401367
    8. '               ' → logprob: -8.278806686401367
    9. ',' → logprob: -8.778806686401367
    10. ' and' → logprob: -9.778806686401367

Token 607: ':' (ID: 25)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013154742773622274
    2. '
' → logprob: -7.251315593719482
    3. ' for' → logprob: -8.501315116882324
    4. '                    
' → logprob: -9.251315116882324
    5. ',' → logprob: -9.501315116882324
    6. '           ' → logprob: -9.626315116882324
    7. 'for' → logprob: -10.126315116882324
    8. ':
' → logprob: -10.626315116882324
    9. '               ' → logprob: -10.751315116882324
    10. ' =' → logprob: -10.751315116882324

Token 608: ' release' (ID: 8232)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1304859220981598
    2. ' for' → logprob: -2.255486011505127
    3. 'for' → logprob: -4.880486011505127
    4. ' work' → logprob: -5.130486011505127
    5. '               ' → logprob: -6.505486011505127
    6. '           ' → logprob: -6.880486011505127
    7. '                       ' → logprob: -7.005486011505127
    8. 'work' → logprob: -8.005485534667969
    9. '       ' → logprob: -9.130485534667969
    10. '   ' → logprob: -10.130485534667969

Token 609: ' held' (ID: 7504)
  Prédit: 'proc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'proc' → logprob: -0.16987717151641846
    2. '                   ' → logprob: -2.794877052307129
    3. '_all' → logprob: -3.419877052307129
    4. '[i' → logprob: -3.919877052307129
    5. 'all' → logprob: -4.044877052307129
    6. '(proc' → logprob: -4.544877052307129
    7. ' proc' → logprob: -5.169877052307129
    8. ' all' → logprob: -5.794877052307129
    9. '                       ' → logprob: -6.919877052307129
    10. 'for' → logprob: -6.919877052307129

Token 610: ' resources' (ID: 7416)
  Prédit: '_resources'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_resources' → logprob: -0.03750770166516304
    2. 'resources' → logprob: -3.4125077724456787
    3. '                   ' → logprob: -6.1625075340271
    4. '           ' → logprob: -6.9125075340271
    5. '               ' → logprob: -8.537508010864258
    6. ' resources' → logprob: -8.662508010864258
    7. '   ' → logprob: -8.662508010864258
    8. '       ' → logprob: -9.787508010864258
    9. 'Resources' → logprob: -10.412508010864258
    10. 'for' → logprob: -10.787508010864258

Token 611: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004316060803830624
    2. ' for' → logprob: -6.1293158531188965
    3. '           ' → logprob: -7.0043158531188965
    4. ',' → logprob: -8.004316329956055
    5. '                    
' → logprob: -8.629316329956055
    6. 'for' → logprob: -8.879316329956055
    7. '
' → logprob: -9.129316329956055
    8. ' =' → logprob: -9.129316329956055
    9. '               ' → logprob: -9.629316329956055
    10. '<|end|>' → logprob: -10.379316329956055

Token 612: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00045367187703959644
    2. ' for' → logprob: -8.75045394897461
    3. '
' → logprob: -9.25045394897461
    4. '           ' → logprob: -9.62545394897461
    5. 'for' → logprob: -9.75045394897461
    6. '               ' → logprob: -10.12545394897461
    7. '                    
' → logprob: -11.50045394897461
    8. '       ' → logprob: -12.25045394897461
    9. ',' → logprob: -12.62545394897461
    10. '   ' → logprob: -12.62545394897461

Token 613: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03600803762674332
    2. '                   ' → logprob: -3.78600811958313
    3. 'work' → logprob: -5.036007881164551
    4. ' for' → logprob: -5.161007881164551
    5. '           ' → logprob: -8.16100788116455
    6. '   ' → logprob: -9.66100788116455
    7. '               ' → logprob: -9.78600788116455
    8. ' work' → logprob: -10.66100788116455
    9. '                       ' → logprob: -12.66100788116455
    10. '       ' → logprob: -12.78600788116455

Token 614: ' rid' (ID: 12566)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.043998755514621735
    2. 'rid' → logprob: -4.043998718261719
    3. 'r' → logprob: -4.293998718261719
    4. 'res' → logprob: -4.668998718261719
    5. 'idx' → logprob: -6.793998718261719
    6. 'i' → logprob: -7.418998718261719
    7. ' j' → logprob: -7.918998718261719
    8. 'ri' → logprob: -8.543998718261719
    9. 'k' → logprob: -9.418998718261719
    10. 'resource' → logprob: -10.043998718261719

Token 615: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0481356605887413
    2. 'in' → logprob: -3.173135757446289
    3. ',' → logprob: -5.298135757446289
    4. '_idx' → logprob: -10.298135757446289
    5. 'x' → logprob: -10.798135757446289
    6. 'idx' → logprob: -11.048135757446289
    7. '_index' → logprob: -11.798135757446289
    8. '_in' → logprob: -12.048135757446289
    9. 'index' → logprob: -12.048135757446289
    10. 'i' → logprob: -12.048135757446289

Token 616: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.666993507067673e-05
    2. ' range' → logprob: -10.250036239624023
    3. '   ' → logprob: -13.625036239624023
    4. '	range' → logprob: -18.000036239624023
    5. '  ' → logprob: -18.875036239624023
    6. ' ' → logprob: -19.000036239624023
    7. '       ' → logprob: -19.625036239624023
    8. '    ' → logprob: -19.750036239624023
    9. '(range' → logprob: -20.000036239624023
    10. '           ' → logprob: -20.875036239624023

Token 617: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005699523026123643
    2. 'self' → logprob: -8.125570297241211
    3. '(' → logprob: -8.500570297241211
    4. '1' → logprob: -10.125570297241211
    5. '(len' → logprob: -10.625570297241211
    6. 'len' → logprob: -13.000570297241211
    7. '   ' → logprob: -14.000570297241211
    8. '	self' → logprob: -14.250570297241211
    9. '=self' → logprob: -14.375570297241211
    10. '[self' → logprob: -14.375570297241211

Token 618: '.r' (ID: 2951)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004926258116029203
    2. '1' → logprob: -8.375493049621582
    3. ' self' → logprob: -8.375493049621582
    4. '(self' → logprob: -11.000493049621582
    5. 'r' → logprob: -12.000493049621582
    6. '   ' → logprob: -12.750493049621582
    7. '[self' → logprob: -12.875493049621582
    8. '	self' → logprob: -13.500493049621582
    9. 'len' → logprob: -14.875493049621582
    10. '.r' → logprob: -15.125493049621582

Token 619: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.1424973713001236e-05
    2. 'self' → logprob: -10.625031471252441
    3. 'r' → logprob: -13.000031471252441
    4. 'count' → logprob: -13.250031471252441
    5. '.r' → logprob: -13.750031471252441
    6. '.count' → logprob: -14.875031471252441
    7. 'm' → logprob: -15.000031471252441
    8. '._' → logprob: -15.375031471252441
    9. 'e' → logprob: -15.500031471252441
    10. 'c' → logprob: -16.000030517578125

Token 620: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0421694852411747
    2. '):' → logprob: -3.2921695709228516
    3. '                       ' → logprob: -6.542169570922852
    4. ':' → logprob: -6.792169570922852
    5. '                   ' → logprob: -7.292169570922852
    6. ':
' → logprob: -7.417169570922852
    7. '):
' → logprob: -8.917169570922852
    8. '               ' → logprob: -9.792169570922852
    9. '           ' → logprob: -10.667169570922852
    10. '():
' → logprob: -11.167169570922852

Token 621: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00020449401927180588
    2. ' work' → logprob: -9.250204086303711
    3. '                   ' → logprob: -10.125204086303711
    4. '               ' → logprob: -10.750204086303711
    5. '       ' → logprob: -10.875204086303711
    6. '           ' → logprob: -11.750204086303711
    7. '   ' → logprob: -12.000204086303711
    8. '					' → logprob: -12.500204086303711
    9. 'work' → logprob: -13.000204086303711
    10. '                           ' → logprob: -13.625204086303711

Token 622: ' work' (ID: 1101)
  Prédit: 'work'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'work' (adapté à ' work') → logprob: -0.10418251901865005
    2. '                       ' → logprob: -2.354182481765747
    3. ' work' → logprob: -6.354182720184326
    4. '   ' → logprob: -7.229182720184326
    5. '                           ' → logprob: -7.354182720184326
    6. '                               ' → logprob: -7.979182720184326
    7. '               ' → logprob: -8.729182243347168
    8. '       ' → logprob: -8.854182243347168
    9. '                   ' → logprob: -9.104182243347168
    10. '           ' → logprob: -9.604182243347168

Token 623: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.00012725738633889705
    2. '[' → logprob: -9.000126838684082
    3. ' +=' → logprob: -13.125126838684082
    4. '+=' → logprob: -14.250126838684082
    5. '```' → logprob: -14.500126838684082
    6. '                           ' → logprob: -16.0001277923584
    7. ' [' → logprob: -16.5001277923584
    8. '[s' → logprob: -16.6251277923584
    9. '[
' → logprob: -16.7501277923584
    10. '[m' → logprob: -16.8751277923584

Token 624: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.0008990773931145668
    2. ']' → logprob: -8.000899314880371
    3. 'rid' → logprob: -8.250899314880371
    4. '[id' → logprob: -9.750899314880371
    5. '[r' → logprob: -10.125899314880371
    6. 'em' → logprob: -10.125899314880371
    7. 'eid' → logprob: -10.250899314880371
    8. '_id' → logprob: -11.125899314880371
    9. 'd' → logprob: -11.250899314880371
    10. '][' → logprob: -11.250899314880371

Token 625: ']' (ID: 60)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.5764413475990295
    2. '+=' → logprob: -0.8264413475990295
    3. ']+=' → logprob: -7.701441287994385
    4. '+' → logprob: -10.201441764831543
    5. ' +' → logprob: -13.201441764831543
    6. ')' → logprob: -13.451441764831543
    7. '    ' → logprob: -13.576441764831543
    8. '                           ' → logprob: -13.826441764831543
    9. '                        ' → logprob: -14.076441764831543
    10. ']' → logprob: -14.076441764831543

Token 626: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3868892788887024
    2. ' +=' → logprob: -1.1368892192840576
    3. '+' → logprob: -11.386889457702637
    4. ']+=' → logprob: -12.261889457702637
    5. ' +' → logprob: -14.636889457702637
    6. '=' → logprob: -14.761889457702637
    7. '+=(' → logprob: -14.886889457702637
    8. '    ' → logprob: -15.136889457702637
    9. '   ' → logprob: -15.386889457702637
    10. '           ' → logprob: -16.01188850402832

Token 627: ' proc' (ID: 14550)
  Prédit: 'proc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proc' → logprob: -6.392202976712724e-06
    2. ' proc' → logprob: -12.000006675720215
    3. 'process' → logprob: -16.5000057220459
    4. '(proc' → logprob: -17.1250057220459
    5. 'pro' → logprob: -17.2500057220459
    6. 'self' → logprob: -18.2500057220459
    7. '                   ' → logprob: -19.7500057220459
    8. 'prod' → logprob: -20.0000057220459
    9. '.proc' → logprob: -20.0000057220459
    10. '           ' → logprob: -20.0000057220459

Token 628: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.173704271830502e-06
    2. ' .' → logprob: -13.50000286102295
    3. 'held' → logprob: -14.12500286102295
    4. '```' → logprob: -16.125003814697266
    5. '   ' → logprob: -16.250003814697266
    6. '.h' → logprob: -16.375003814697266
    7. '
' → logprob: -16.500003814697266
    8. '.he' → logprob: -16.750003814697266
    9. '​.' → logprob: -17.250003814697266
    10. 'Held' → logprob: -17.500003814697266

Token 629: 'held' (ID: 32869)
  Prédit: 'held'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'held' → logprob: -4.320199877838604e-07
    2. ' held' → logprob: -15.125
    3. '-held' → logprob: -16.125
    4. 'hold' → logprob: -18.625
    5. '   ' → logprob: -19.75
    6. '
' → logprob: -20.125
    7. '.' → logprob: -20.25
    8. 'holder' → logprob: -20.25
    9. '```' → logprob: -20.5
    10. 'owned' → logprob: -20.625

Token 630: '_resources' (ID: 85099)
  Prédit: '_resources'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_resources' → logprob: -8.061054359131958e-06
    2. 'resources' → logprob: -11.750007629394531
    3. 'Resources' → logprob: -16.25000762939453
    4. '_res' → logprob: -18.62500762939453
    5. 'r' → logprob: -18.75000762939453
    6. 's' → logprob: -18.87500762939453
    7. '_resource' → logprob: -19.12500762939453
    8. '.resources' → logprob: -19.62500762939453
    9. '```' → logprob: -19.62500762939453
    10. ' resources' → logprob: -20.12500762939453

Token 631: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.1008713702030946e-06
    2. '[' → logprob: -13.375001907348633
    3. ' rid' → logprob: -15.375001907348633
    4. 'rid' → logprob: -15.750001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '	r' → logprob: -17.625001907348633
    7. '(r' → logprob: -17.750001907348633
    8. '[
' → logprob: -17.875001907348633
    9. ' [' → logprob: -18.000001907348633
    10. '```' → logprob: -18.000001907348633

Token 632: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.2310718148946762
    2. 'rid' → logprob: -1.6060718297958374
    3. '[r' → logprob: -6.481071949005127
    4. ']' → logprob: -6.731071949005127
    5. ' rid' → logprob: -6.856071949005127
    6. '[id' → logprob: -7.606071949005127
    7. '-' → logprob: -7.981071949005127
    8. 'd' → logprob: -9.231071472167969
    9. 'r' → logprob: -9.231071472167969
    10. '-r' → logprob: -9.231071472167969

Token 633: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08939621597528458
    2. ']
' → logprob: -2.4643962383270264
    3. '                   ' → logprob: -8.714396476745605
    4. ')' → logprob: -9.464396476745605
    5. '           ' → logprob: -9.589396476745605
    6. '<|end|>' → logprob: -9.714396476745605
    7. ']
' → logprob: -10.839396476745605
    8. ']

' → logprob: -11.089396476745605
    9. '               ' → logprob: -11.214396476745605
    10. '       ' → logprob: -11.464396476745605

Token 634: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004919105558656156
    2. '
' → logprob: -8.000492095947266
    3. '                       ' → logprob: -9.875492095947266
    4. '               ' → logprob: -9.875492095947266
    5. '           ' → logprob: -10.250492095947266
    6. '       ' → logprob: -12.125492095947266
    7. '                           ' → logprob: -12.625492095947266
    8. '				' → logprob: -13.250492095947266
    9. '                    
' → logprob: -13.250492095947266
    10. '                        
' → logprob: -13.250492095947266

Token 635: ' finish' (ID: 9115)
  Prédit: 'finish'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finish' (adapté à ' finish') → logprob: -0.06359874457120895
    2. '                   ' → logprob: -2.8135986328125
    3. ' finish' → logprob: -6.9385986328125
    4. '               ' → logprob: -7.8135986328125
    5. '           ' → logprob: -8.8135986328125
    6. '                       ' → logprob: -9.6885986328125
    7. '       ' → logprob: -10.8135986328125
    8. '   ' → logprob: -10.9385986328125
    9. '                  ' → logprob: -13.6885986328125
    10. '                    ' → logprob: -13.6885986328125

Token 636: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.500000953674316
    3. '[I' → logprob: -16.875
    4. '[idx' → logprob: -18.75
    5. ' [' → logprob: -19.0
    6. '           ' → logprob: -19.0
    7. '[index' → logprob: -19.375
    8. '   ' → logprob: -19.625
    9. '[j' → logprob: -19.625
    10. '                   ' → logprob: -19.75

Token 637: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.274562269449234
    2. '=' → logprob: -1.5245622396469116
    3. ' =' → logprob: -4.274562358856201
    4. ']=' → logprob: -4.774562358856201
    5. ' ]' → logprob: -11.024561882019043
    6. '=True' → logprob: -13.024561882019043
    7. ')' → logprob: -15.024561882019043
    8. '']=' → logprob: -16.52456283569336
    9. ')=' → logprob: -16.89956283569336
    10. '   ' → logprob: -17.77456283569336

Token 638: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868711292743683
    2. ' =' → logprob: -1.136871099472046
    3. '=True' → logprob: -16.136871337890625
    4. ' ' → logprob: -19.136871337890625
    5. '           ' → logprob: -19.886871337890625
    6. '       ' → logprob: -20.011871337890625
    7. '   ' → logprob: -20.761871337890625
    8. '＝' → logprob: -21.011871337890625
    9. '	' → logprob: -21.386871337890625
    10. '    ' → logprob: -21.636871337890625

Token 639: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.493430894101039e-05
    2. ' True' → logprob: -9.500075340270996
    3. '(True' → logprob: -17.37507438659668
    4. '   ' → logprob: -19.12507438659668
    5. '=True' → logprob: -20.25007438659668
    6. '                   ' → logprob: -21.87507438659668
    7. 'true' → logprob: -22.12507438659668
    8. '           ' → logprob: -22.87507438659668
    9. '               ' → logprob: -23.00007438659668
    10. '.True' → logprob: -23.25007438659668

Token 640: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -4.274932143744081e-05
    2. '               ' → logprob: -10.750042915344238
    3. '           ' → logprob: -11.125042915344238
    4. '
' → logprob: -13.125042915344238
    5. '       ' → logprob: -13.250042915344238
    6. '   ' → logprob: -14.375042915344238
    7. '                       ' → logprob: -14.500042915344238
    8. '				' → logprob: -15.000042915344238
    9. '<|end|>' → logprob: -15.125042915344238
    10. ',' → logprob: -15.250042915344238

Token 641: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -9.353008499601856e-05
    2. '               ' → logprob: -9.875093460083008
    3. '           ' → logprob: -10.500093460083008
    4. '                       ' → logprob: -12.000093460083008
    5. '       ' → logprob: -12.125093460083008
    6. '   ' → logprob: -13.625093460083008
    7. '
' → logprob: -14.500093460083008
    8. '                  ' → logprob: -14.875093460083008
    9. '                           ' → logprob: -15.625093460083008
    10. '				' → logprob: -15.875093460083008

Token 642: ' progress' (ID: 7408)
  Prédit: 'progress'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'progress' (adapté à ' progress') → logprob: -0.007789978291839361
    2. ' progress' → logprob: -5.2577900886535645
    3. '                   ' → logprob: -6.0077900886535645
    4. '               ' → logprob: -9.882789611816406
    5. '           ' → logprob: -10.382789611816406
    6. '                       ' → logprob: -12.257789611816406
    7. '   ' → logprob: -12.632789611816406
    8. '       ' → logprob: -13.007789611816406
    9. '	progress' → logprob: -14.382789611816406
    10. '(progress' → logprob: -15.507789611816406

Token 643: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815696805715561
    2. '=' → logprob: -4.018157005310059
    3. '=True' → logprob: -11.893157005310059
    4. ' |=' → logprob: -16.018156051635742
    5. ' ' → logprob: -16.643156051635742
    6. '<|end|>' → logprob: -16.768156051635742
    7. '   ' → logprob: -17.768156051635742
    8. '    ' → logprob: -18.143156051635742
    9. '           ' → logprob: -18.518156051635742
    10. '       ' → logprob: -18.768156051635742

Token 644: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0024756586644798517
    2. ' True' → logprob: -6.002475738525391
    3. '(True' → logprob: -19.75247573852539
    4. '=True' → logprob: -20.50247573852539
    5. 'true' → logprob: -22.12747573852539
    6. '   ' → logprob: -22.12747573852539
    7. '.True' → logprob: -24.00247573852539
    8. '                   ' → logprob: -24.75247573852539
    9. '               ' → logprob: -25.12747573852539
    10. '_true' → logprob: -25.12747573852539

Token 645: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7372066974639893
    2. '<|end|>' → logprob: -0.7372066974639893
    3. '
' → logprob: -3.2372066974639893
    4. '<|end|>' → logprob: -6.48720645904541
    5. '           ' → logprob: -6.73720645904541
    6. 'return' → logprob: -8.23720645904541
    7. ' return' → logprob: -8.98720645904541
    8. '        
' → logprob: -9.23720645904541
    9. '.' → logprob: -9.23720645904541
    10. '```' → logprob: -9.36220645904541

Token 646: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 647: ' found' (ID: 2491)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7671217918395996
    2. ' continue' → logprob: -1.5171217918395996
    3. '
' → logprob: -2.0171217918395996
    4. '<|end|>' → logprob: -2.7671217918395996
    5. ' True' → logprob: -3.7671217918395996
    6. '#' → logprob: -3.7671217918395996
    7. 'True' → logprob: -4.2671217918396
    8. '       ' → logprob: -4.6421217918396
    9. '           ' → logprob: -4.6421217918396
    10. 'break' → logprob: -4.7671217918396

Token 648: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2236485481262207
    2. ' a' → logprob: -1.2236485481262207
    3. ' at' → logprob: -1.4736485481262207
    4. 'at' → logprob: -2.9736485481262207
    5. '<|end|>' → logprob: -3.0986485481262207
    6. 'something' → logprob: -3.5986485481262207
    7. 'process' → logprob: -3.9736485481262207
    8. ' an' → logprob: -4.348648548126221
    9. ' something' → logprob: -5.473648548126221
    10. 'an' → logprob: -5.473648548126221

Token 649: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.17507533729076385
    2. 'safe' → logprob: -2.3000752925872803
    3. ' process' → logprob: -3.4250752925872803
    4. 'processable' → logprob: -4.300075531005859
    5. 'progress' → logprob: -5.550075531005859
    6. ' safe' → logprob: -5.675075531005859
    7. 'new' → logprob: -6.925075531005859
    8. 'finish' → logprob: -7.050075531005859
    9. 'continue' → logprob: -7.175075531005859
    10. 'dead' → logprob: -7.300075531005859

Token 650: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.7702808976173401
    2. ' to' → logprob: -1.3952808380126953
    3. '<|end|>' → logprob: -1.5202808380126953
    4. 'that' → logprob: -3.1452808380126953
    5. 'to' → logprob: -4.145280838012695
    6. '                   ' → logprob: -5.770280838012695
    7. '           ' → logprob: -6.520280838012695
    8. '
' → logprob: -7.020280838012695
    9. '               ' → logprob: -7.395280838012695
    10. '       ' → logprob: -7.645280838012695

Token 651: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.23108449578285217
    2. ' can' → logprob: -1.6060844659805298
    3. 'could' → logprob: -5.48108434677124
    4. ' could' → logprob: -6.60608434677124
    5. '   ' → logprob: -10.606084823608398
    6. 'may' → logprob: -11.231084823608398
    7. ' may' → logprob: -11.356084823608398
    8. '	can' → logprob: -11.481084823608398
    9. '_can' → logprob: -11.856084823608398
    10. 'finished' → logprob: -11.856084823608398

Token 652: ' finish' (ID: 9115)
  Prédit: 'finish'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finish' → logprob: -0.03922856226563454
    2. 'pro' → logprob: -4.539228439331055
    3. ' finish' → logprob: -4.664228439331055
    4. 'run' → logprob: -5.164228439331055
    5. 'complete' → logprob: -5.164228439331055
    6. 'continue' → logprob: -5.789228439331055
    7. 'still' → logprob: -7.164228439331055
    8. 'be' → logprob: -7.539228439331055
    9. 'make' → logprob: -7.789228439331055
    10. 's' → logprob: -8.039228439331055

Token 653: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 654: ' so' (ID: 813)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 655: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.09974252432584763
    2. 'progress' → logprob: -3.5997424125671387
    3. 'keep' → logprob: -4.099742412567139
    4. '                   ' → logprob: -4.224742412567139
    5. ' continue' → logprob: -4.224742412567139
    6. 'we' → logprob: -5.474742412567139
    7. '                       ' → logprob: -5.849742412567139
    8. 'there' → logprob: -6.099742412567139
    9. '               ' → logprob: -6.224742412567139
    10. '           ' → logprob: -6.474742412567139

Token 656: ' searching' (ID: 17437)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 657: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 658: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4314673840999603
    2. '<|end|>' → logprob: -1.0564674139022827
    3. '
' → logprob: -7.556467533111572
    4. '           ' → logprob: -7.806467533111572
    5. '```' → logprob: -7.806467533111572
    6. '<|end|>' → logprob: -7.806467533111572
    7. '               ' → logprob: -8.056467056274414
    8. 'return' → logprob: -8.181467056274414
    9. ' return' → logprob: -9.056467056274414
    10. '                   ' → logprob: -9.306467056274414

Token 659: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008741859346628189
    2. '
' → logprob: -5.008741855621338
    3. 'return' → logprob: -6.633741855621338
    4. '        
' → logprob: -8.008742332458496
    5. ' return' → logprob: -8.508742332458496
    6. '   ' → logprob: -9.508742332458496
    7. '<|end|>' → logprob: -10.008742332458496
    8. '    
' → logprob: -10.758742332458496
    9. '           ' → logprob: -11.633742332458496
    10. '      ' → logprob: -12.008742332458496

Token 660: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5787465572357178
    2. '       ' → logprob: -0.8287465572357178
    3. ' return' → logprob: -5.953746795654297
    4. '
' → logprob: -9.078746795654297
    5. '   ' → logprob: -9.453746795654297
    6. '        
' → logprob: -12.328746795654297
    7. '      ' → logprob: -12.828746795654297
    8. '#' → logprob: -13.453746795654297
    9. '  ' → logprob: -13.578746795654297
    10. ' ' → logprob: -13.828746795654297

Token 661: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.018732057884335518
    2. ' all' → logprob: -4.018732070922852
    3. 'not' → logprob: -7.643732070922852
    4. ' not' → logprob: -9.768732070922852
    5. '   ' → logprob: -10.143732070922852
    6. 'any' → logprob: -12.893732070922852
    7. ' ' → logprob: -13.643732070922852
    8. '
' → logprob: -14.143732070922852
    9. '  ' → logprob: -14.268732070922852
    10. '	all' → logprob: -14.768732070922852

Token 662: ' finish' (ID: 9115)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.5190392136573792
    2. 'finish' → logprob: -1.0190391540527344
    3. 'finished' → logprob: -3.2690391540527344
    4. ' finish' → logprob: -5.519039154052734
    5. 'all' → logprob: -7.019039154052734
    6. ' finished' → logprob: -7.894039154052734
    7. '(process' → logprob: -8.394039154052734
    8. 'process' → logprob: -8.644039154052734
    9. '(' → logprob: -9.394039154052734
    10. '(all' → logprob: -9.644039154052734

Token 663: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4705229699611664
    2. 'ed' → logprob: -1.5955229997634888
    3. '=' → logprob: -2.220522880554199
    4. '[:]' → logprob: -2.845522880554199
    5. '   ' → logprob: -6.720522880554199
    6. 'e' → logprob: -7.220522880554199
    7. '==' → logprob: -7.595522880554199
    8. 'return' → logprob: -7.595522880554199
    9. '=True' → logprob: -7.720522880554199
    10. '[i' → logprob: -7.845522880554199

Token 664: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0021691746078431606
    2. ' True' → logprob: -6.752169132232666
    3. 'finish' → logprob: -7.002169132232666
    4. 'finished' → logprob: -10.127169609069824
    5. '(True' → logprob: -10.377169609069824
    6. 'done' → logprob: -11.752169609069824
    7. 'all' → logprob: -12.252169609069824
    8. 'true' → logprob: -13.252169609069824
    9. ' finish' → logprob: -13.377169609069824
    10. '   ' → logprob: -14.002169609069824

Token 665: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07528752833604813
    2. ' return' → logprob: -2.9502875804901123
    3. 'return' → logprob: -4.450287342071533
    4. ',' → logprob: -5.325287342071533
    5. ':
' → logprob: -6.325287342071533
    6. ':' → logprob: -6.950287342071533
    7. ':return' → logprob: -7.325287342071533
    8. '           ' → logprob: -9.325287818908691
    9. '   ' → logprob: -9.950287818908691
    10. ' =' → logprob: -10.575287818908691

Token 666: ' no' (ID: 860)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.576819896697998
    2. 'return' → logprob: -1.076819896697998
    3. '       ' → logprob: -2.326819896697998
    4. '   ' → logprob: -11.201820373535156
    5. '           ' → logprob: -11.326820373535156
    6. ' all' → logprob: -13.201820373535156
    7. '	return' → logprob: -13.451820373535156
    8. ' ' → logprob: -13.701820373535156
    9. 'all' → logprob: -13.951820373535156
    10. '  ' → logprob: -14.076820373535156

Token 667: ' dead' (ID: 9224)
  Prédit: ' dead'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dead' → logprob: -0.05550645291805267
    2. 'dead' → logprob: -3.180506467819214
    3. ' True' → logprob: -4.805506229400635
    4. ' False' → logprob: -6.430506229400635
    5. '_dead' → logprob: -7.180506229400635
    6. 'True' → logprob: -7.555506229400635
    7. '   ' → logprob: -7.805506229400635
    8. 'False' → logprob: -7.805506229400635
    9. ' return' → logprob: -8.805506706237793
    10. ' ' → logprob: -9.430506706237793

Token 668: 'lock' (ID: 2802)
  Prédit: 'lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.0023975323420017958
    2. 'locks' → logprob: -6.502397537231445
    3. 'locked' → logprob: -7.127397537231445
    4. '   ' → logprob: -10.252397537231445
    5. '       ' → logprob: -10.252397537231445
    6. '           ' → logprob: -12.127397537231445
    7. ' lock' → logprob: -12.627397537231445
    8. 'l' → logprob: -12.752397537231445
    9. '      ' → logprob: -13.377397537231445
    10. 'locker' → logprob: -13.627397537231445

Token 669: ' unavoidable' (ID: 160714)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0057947663590312
    2. ' return' → logprob: -5.505795001983643
    3. 'return' → logprob: -6.505795001983643
    4. ',' → logprob: -9.130794525146484
    5. ' and' → logprob: -10.505794525146484
    6. ':' → logprob: -10.630794525146484
    7. '   ' → logprob: -11.255794525146484
    8. '           ' → logprob: -11.255794525146484
    9. ':return' → logprob: -11.755794525146484
    10. ' is' → logprob: -12.380794525146484

Token 670: ' state' (ID: 2608)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036654334515333176
    2. '
' → logprob: -3.911654233932495
    3. ' return' → logprob: -4.911654472351074
    4. ',' → logprob: -5.661654472351074
    5. 'return' → logprob: -5.661654472351074
    6. '           ' → logprob: -7.786654472351074
    7. '   ' → logprob: -8.161654472351074
    8. ':' → logprob: -8.411654472351074
    9. ':
' → logprob: -9.161654472351074
    10. ' and' → logprob: -9.161654472351074

Token 671: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003952067345380783
    2. 'return' → logprob: -6.2539520263671875
    3. ' return' → logprob: -6.3789520263671875
    4. ',' → logprob: -9.128952026367188
    5. ' is' → logprob: -9.753952026367188
    6. '           ' → logprob: -9.753952026367188
    7. ' and' → logprob: -10.253952026367188
    8. '   ' → logprob: -10.503952026367188
    9. ':' → logprob: -11.628952026367188
    10. '      ' → logprob: -12.128952026367188

Token 672: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00028052396373823285
    2. 'return' → logprob: -8.625280380249023
    3. ' return' → logprob: -9.250280380249023
    4. '   ' → logprob: -12.625280380249023
    5. '
' → logprob: -14.250280380249023
    6. '           ' → logprob: -15.375280380249023
    7. ',' → logprob: -15.625280380249023
    8. '<|end|>' → logprob: -15.875280380249023
    9. '	return' → logprob: -16.250280380249023
    10. '      ' → logprob: -16.500280380249023

Token 673: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20719818770885468
    2. 'return' (adapté à ' return') → logprob: -1.957198143005371
    3. ' return' → logprob: -3.082198143005371
    4. '   ' → logprob: -10.832198143005371
    5. '
' → logprob: -13.082198143005371
    6. '	return' → logprob: -13.457198143005371
    7. '      ' → logprob: -13.457198143005371
    8. ' ' → logprob: -13.707198143005371
    9. '        
' → logprob: -13.957198143005371
    10. '           ' → logprob: -14.457198143005371

Token 674: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -9.65101717156358e-05
    2. ' all' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.000096321105957
    4. 'not' → logprob: -16.625097274780273
    5. '(all' → logprob: -18.125097274780273
    6. '	all' → logprob: -18.125097274780273
    7. 'All' → logprob: -18.625097274780273
    8. ' ' → logprob: -18.625097274780273
    9. 'any' → logprob: -19.125097274780273
    10. '
' → logprob: -19.500097274780273

Token 675: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0002446509897708893
    2. 'finish' → logprob: -8.375245094299316
    3. '(fin' → logprob: -11.500245094299316
    4. '((' → logprob: -13.250245094299316
    5. '(' → logprob: -13.500245094299316
    6. '(True' → logprob: -15.250245094299316
    7. ' finish' → logprob: -15.875245094299316
    8. '([' → logprob: -16.875244140625
    9. '	f' → logprob: -17.000244140625
    10. '(fill' → logprob: -17.250244140625

Token 676: 'inish' (ID: 38239)
  Prédit: 'inish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inish' → logprob: -6.704273118884885e-07
    2. 'inished' → logprob: -14.625000953674316
    3. 'in' → logprob: -15.875000953674316
    4. '(in' → logprob: -17.875
    5. 'inis' → logprob: -19.5
    6. 'finish' → logprob: -19.75
    7. 'ini' → logprob: -19.875
    8. 'i' → logprob: -19.875
    9. 'ish' → logprob: -19.875
    10. '(' → logprob: -20.5

Token 677: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ')
' → logprob: -13.12500286102295
    3. ' )' → logprob: -15.25000286102295
    4. '))' → logprob: -15.37500286102295
    5. '())' → logprob: -15.62500286102295
    6. ')}' → logprob: -16.500003814697266
    7. ')

' → logprob: -17.000003814697266
    8. ')]' → logprob: -17.500003814697266
    9. '   ' → logprob: -17.625003814697266
    10. ')`' → logprob: -18.000003814697266

Token 678: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 679: ' Dead' (ID: 26166)
  Prédit: ' Bank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Bank' → logprob: -1.0611004829406738
    2. ' Solution' → logprob: -1.9361004829406738
    3. 'Solution' → logprob: -2.311100482940674
    4. 'System' → logprob: -2.936100482940674
    5. 'Bank' → logprob: -3.061100482940674
    6. 'Resource' → logprob: -3.186100482940674
    7. 'Main' → logprob: -3.311100482940674
    8. ' Dead' → logprob: -3.436100482940674
    9. ' Resource' → logprob: -3.561100482940674
    10. ' System' → logprob: -3.936100482940674

Token 680: 'lock' (ID: 2802)
  Prédit: 'lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.000891928793862462
    2. 'Lock' → logprob: -7.125892162322998
    3. 'locked' → logprob: -10.25089168548584
    4. 'locks' → logprob: -10.87589168548584
    5. 'loc' → logprob: -11.87589168548584
    6. 'locker' → logprob: -11.87589168548584
    7. 'l' → logprob: -12.12589168548584
    8. '_lock' → logprob: -12.25089168548584
    9. 'lo' → logprob: -13.00089168548584
    10. 'locking' → logprob: -13.87589168548584

Token 681: 'Detection' (ID: 58726)
  Prédit: 'Detector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Detector' → logprob: -0.013974376022815704
    2. 'Avoid' → logprob: -4.763974189758301
    3. 'Exception' → logprob: -5.638974189758301
    4. 'Detection' → logprob: -7.013974189758301
    5. 'Checker' → logprob: -8.0139741897583
    6. 'Analyzer' → logprob: -8.8889741897583
    7. 'Detect' → logprob: -9.0139741897583
    8. 'Finder' → logprob: -9.5139741897583
    9. 'Handler' → logprob: -9.7639741897583
    10. 'Manager' → logprob: -10.3889741897583

Token 682: 'Solution' (ID: 44456)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10089942067861557
    2. 'Detector' → logprob: -2.4758994579315186
    3. ':
' → logprob: -5.4758992195129395
    4. 'Checker' → logprob: -6.2258992195129395
    5. 'Handler' → logprob: -7.1008992195129395
    6. '{' → logprob: -7.4758992195129395
    7. 'System' → logprob: -7.6008992195129395
    8. 'Solver' → logprob: -7.6008992195129395
    9. 'Detection' → logprob: -7.9758992195129395
    10. 'Simulator' → logprob: -8.100899696350098

Token 683: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002505028620362282
    2. ':
' → logprob: -6.002504825592041
    3. ':

' → logprob: -12.0025053024292
    4. '(Process' → logprob: -12.2525053024292
    5. '(' → logprob: -12.3775053024292
    6. ' :' → logprob: -12.5025053024292
    7. '(Resource' → logprob: -12.8775053024292
    8. '   ' → logprob: -13.0025053024292
    9. '):' → logprob: -13.6275053024292
    10. ':def' → logprob: -13.6275053024292

Token 684: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.333223139634356e-05
    2. ' def' → logprob: -10.875033378601074
    3. 'def' → logprob: -11.250033378601074
    4. '   ' → logprob: -14.500033378601074
    5. '	def' → logprob: -14.625033378601074
    6. '```' → logprob: -16.375032424926758
    7. '    
' → logprob: -16.375032424926758
    8. '       ' → logprob: -17.000032424926758
    9. ':' → logprob: -17.250032424926758
    10. '
' → logprob: -17.250032424926758

Token 685: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.29064586758613586
    2. ' def' → logprob: -1.4156458377838135
    3. '   ' → logprob: -4.665646076202393
    4. '@' → logprob: -10.540645599365234
    5. ' @' → logprob: -13.040645599365234
    6. '	def' → logprob: -13.290645599365234
    7. ' ' → logprob: -13.415645599365234
    8. ' p' → logprob: -13.790645599365234
    9. 'class' → logprob: -13.915645599365234
    10. '```' → logprob: -14.040645599365234

Token 686: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06576310098171234
    2. '__' → logprob: -2.940762996673584
    3. ' def' → logprob: -4.815762996673584
    4. 'def' → logprob: -5.940762996673584
    5. 'init' → logprob: -9.690763473510742
    6. ' init' → logprob: -12.065763473510742
    7. '_init' → logprob: -12.190763473510742
    8. '___' → logprob: -12.315763473510742
    9. ' ' → logprob: -12.440763473510742
    10. '   ' → logprob: -13.065763473510742

Token 687: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.7432603272027336e-06
    2. 'def' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.125001907348633
    4. ' init' → logprob: -17.500001907348633
    5. '__' → logprob: -19.125001907348633
    6. '  ' → logprob: -19.375001907348633
    7. 'int' → logprob: -19.500001907348633
    8. '```' → logprob: -19.750001907348633
    9. 'call' → logprob: -20.250001907348633
    10. 'new' → logprob: -20.375001907348633

Token 688: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.003336814232170582
    2. '(self' → logprob: -5.7533369064331055
    3. '__' → logprob: -9.128336906433105
    4. '__(
' → logprob: -10.253336906433105
    5. '(' → logprob: -12.128336906433105
    6. '_(' → logprob: -12.253336906433105
    7. 'self' → logprob: -12.628336906433105
    8. ' (' → logprob: -14.128336906433105
    9. '   ' → logprob: -15.503336906433105
    10. '__((' → logprob: -15.628336906433105

Token 689: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.922563963802531e-05
    2. '       ' → logprob: -10.250079154968262
    3. ' self' → logprob: -10.625079154968262
    4. '   ' → logprob: -11.875079154968262
    5. '):
' → logprob: -12.250079154968262
    6. ')' → logprob: -12.250079154968262
    7. '
' → logprob: -13.250079154968262
    8. '(self' → logprob: -14.375079154968262
    9. ',' → logprob: -15.250079154968262
    10. '           ' → logprob: -16.500080108642578

Token 690: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012217052280902863
    2. 'self' → logprob: -4.512217044830322
    3. '   ' → logprob: -7.762217044830322
    4. '(self' → logprob: -8.01221752166748
    5. '       ' → logprob: -8.13721752166748
    6. ',self' → logprob: -10.01221752166748
    7. ' ,' → logprob: -11.01221752166748
    8. ' self' → logprob: -11.13721752166748
    9. ' (' → logprob: -11.26221752166748
    10. ')' → logprob: -11.76221752166748

Token 691: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004181802738457918
    2. '       ' → logprob: -5.504181861877441
    3. ' self' → logprob: -9.379181861877441
    4. '   ' → logprob: -11.004181861877441
    5. '(self' → logprob: -13.879181861877441
    6. 'p' → logprob: -14.754181861877441
    7. '           ' → logprob: -15.379181861877441
    8. '	self' → logprob: -15.629181861877441
    9. ' ' → logprob: -15.754181861877441
    10. '0' → logprob: -15.879181861877441

Token 692: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04595102742314339
    2. '       ' → logprob: -3.1709511280059814
    3. ' self' → logprob: -5.920950889587402
    4. 'pass' → logprob: -8.420950889587402
    5. 'def' → logprob: -11.045950889587402
    6. '   ' → logprob: -11.545950889587402
    7. ' pass' → logprob: -12.170950889587402
    8. 'import' → logprob: -12.420950889587402
    9. '(self' → logprob: -13.045950889587402
    10. '           ' → logprob: -13.045950889587402

Token 693: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.10217121243476868
    2. '.process' → logprob: -2.4771711826324463
    3. '.available' → logprob: -5.602171421051025
    4. '.resources' → logprob: -5.852171421051025
    5. '.resource' → logprob: -7.102171421051025
    6. '.data' → logprob: -7.227171421051025
    7. '.r' → logprob: -7.477171421051025
    8. '.' → logprob: -7.477171421051025
    9. '._' → logprob: -7.852171421051025
    10. ' processes' → logprob: -8.352170944213867

Token 694: ':' (ID: 25)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0005660186288878322
    2. 'count' → logprob: -7.625566005706787
    3. 'ar' → logprob: -10.125566482543945
    4. 'ro' → logprob: -11.500566482543945
    5. 'rocess' → logprob: -11.625566482543945
    6. 'r' → logprob: -12.625566482543945
    7. '_counts' → logprob: -13.000566482543945
    8. 'aram' → logprob: -13.000566482543945
    9. '_' → logprob: -13.125566482543945
    10. '_counter' → logprob: -13.750566482543945

Token 695: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.145812526345253
    2. '0' → logprob: -2.020812511444092
    3. ' int' → logprob: -6.520812511444092
    4. 'None' → logprob: -6.770812511444092
    5. 'List' → logprob: -8.39581298828125
    6. '[int' → logprob: -9.02081298828125
    7. 'Process' → logprob: -9.89581298828125
    8. ' ' → logprob: -10.89581298828125
    9. 'Set' → logprob: -10.89581298828125
    10. '[]' → logprob: -11.27081298828125

Token 696: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3495337665081024
    2. ' =' → logprob: -1.2245337963104248
    3. ',' → logprob: -7.974533557891846
    4. '<|end|>' → logprob: -8.099534034729004
    5. '   ' → logprob: -8.974534034729004
    6. ' ' → logprob: -9.099534034729004
    7. '       ' → logprob: -9.349534034729004
    8. '=None' → logprob: -9.849534034729004
    9. '<|end|>' → logprob: -10.974534034729004
    10. '0' → logprob: -11.599534034729004

Token 697: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012324919225648046
    2. '5' → logprob: -7.001232624053955
    3. 'int' → logprob: -8.626232147216797
    4. '4' → logprob: -9.251232147216797
    5. ' ' → logprob: -11.251232147216797
    6. '3' → logprob: -11.251232147216797
    7. 'self' → logprob: -11.876232147216797
    8. '1' → logprob: -12.501232147216797
    9. '[]' → logprob: -12.876232147216797
    10. 'None' → logprob: -13.001232147216797

Token 698: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00139047356788069
    2. 'int' → logprob: -7.12639045715332
    3. '5' → logprob: -8.00139045715332
    4. '4' → logprob: -9.00139045715332
    5. '1' → logprob: -9.50139045715332
    6. '3' → logprob: -11.00139045715332
    7. 'None' → logprob: -11.25139045715332
    8. '-' → logprob: -12.50139045715332
    9. ' ' → logprob: -12.75139045715332
    10. '10' → logprob: -12.87639045715332

Token 699: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06105422601103783
    2. '   ' → logprob: -3.561054229736328
    3. '<|end|>' → logprob: -3.561054229736328
    4. '
' → logprob: -7.436054229736328
    5. '<|end|>' → logprob: -7.811054229736328
    6. ' ' → logprob: -7.811054229736328
    7. 'self' → logprob: -7.936054229736328
    8. '	self' → logprob: -8.311054229736328
    9. ',' → logprob: -8.811054229736328
    10. ' self' → logprob: -10.186054229736328

Token 700: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7734556198120117
    2. '
' → logprob: -0.8984556198120117
    3. '       ' → logprob: -2.3984556198120117
    4. '<|end|>' → logprob: -3.7734556198120117
    5. '   ' → logprob: -4.398455619812012
    6. ' self' → logprob: -6.023455619812012
    7. '	self' → logprob: -6.898455619812012
    8. ' ' → logprob: -7.523455619812012
    9. 'def' → logprob: -8.023455619812012
    10. '<|end|>' → logprob: -8.398455619812012

Token 701: ' number' (ID: 2086)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2069023847579956
    2. 'self' → logprob: -1.7069023847579956
    3. ' self' → logprob: -5.831902503967285
    4. ' ' → logprob: -7.081902503967285
    5. '   ' → logprob: -7.456902503967285
    6. 'int' → logprob: -8.206902503967285
    7. '
' → logprob: -9.206902503967285
    8. 'def' → logprob: -9.331902503967285
    9. 'r' → logprob: -9.456902503967285
    10. '[]' → logprob: -9.706902503967285

Token 702: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.5687627792358398
    2. '<|end|>' → logprob: -1.9437627792358398
    3. ' of' → logprob: -2.19376277923584
    4. '_of' → logprob: -2.81876277923584
    5. '=' → logprob: -3.06876277923584
    6. ')' → logprob: -3.81876277923584
    7. '
' → logprob: -4.44376277923584
    8. '<|end|>' → logprob: -4.94376277923584
    9. ' =' → logprob: -5.31876277923584
    10. '   ' → logprob: -5.44376277923584

Token 703: ' processes' (ID: 14340)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.35102537274360657
    2. ' processes' → logprob: -1.2260253429412842
    3. ' process' → logprob: -6.226025581359863
    4. 'resources' → logprob: -8.101025581359863
    5. '_process' → logprob: -9.226025581359863
    6. 'self' → logprob: -9.601025581359863
    7. ' resources' → logprob: -10.476025581359863
    8. ' self' → logprob: -10.851025581359863
    9. 'processors' → logprob: -11.101025581359863
    10. 'Processes' → logprob: -11.351025581359863

Token 704: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24361173808574677
    2. '   ' → logprob: -1.6186116933822632
    3. '<|end|>' → logprob: -4.243611812591553
    4. '
' → logprob: -6.243611812591553
    5. 'self' → logprob: -7.618611812591553
    6. '    
' → logprob: -7.868611812591553
    7. ',' → logprob: -7.993611812591553
    8. '<|end|>' → logprob: -8.743611335754395
    9. '        
' → logprob: -9.493611335754395
    10. ' ' → logprob: -9.868611335754395

Token 705: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017029138980433345
    2. 'self' → logprob: -6.876702785491943
    3. '   ' → logprob: -7.376702785491943
    4. ' self' → logprob: -10.501703262329102
    5. '	self' → logprob: -12.126703262329102
    6. '	' → logprob: -12.251703262329102
    7. ' ' → logprob: -12.751703262329102
    8. '<|end|>' → logprob: -13.126703262329102
    9. '           ' → logprob: -14.626703262329102
    10. '     ' → logprob: -15.126703262329102

Token 706: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007460216875188053
    2. ' self' → logprob: -7.625746250152588
    3. '       ' → logprob: -8.37574577331543
    4. '   ' → logprob: -11.25074577331543
    5. 's' → logprob: -11.62574577331543
    6. '
' → logprob: -13.00074577331543
    7. ' ' → logprob: -14.12574577331543
    8. '...' → logprob: -14.87574577331543
    9. '           ' → logprob: -15.00074577331543
    10. '	self' → logprob: -15.00074577331543

Token 707: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.006205953657627106
    2. 'r' → logprob: -5.131206035614014
    3. '_r' → logprob: -9.756205558776855
    4. 'def' → logprob: -10.006205558776855
    5. '.' → logprob: -10.631205558776855
    6. '   ' → logprob: -11.006205558776855
    7. 'resources' → logprob: -11.131205558776855
    8. '.n' → logprob: -11.256205558776855
    9. ':' → logprob: -11.631205558776855
    10. ' .' → logprob: -11.756205558776855

Token 708: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.0100624169572257e-05
    2. ':int' → logprob: -11.125020027160645
    3. ' :' → logprob: -12.500020027160645
    4. '=' → logprob: -14.125020027160645
    5. ' =' → logprob: -14.875020027160645
    6. '_count' → logprob: -15.250020027160645
    7. 'Count' → logprob: -16.50002098083496
    8. 'count' → logprob: -16.87502098083496
    9. '<|end|>' → logprob: -17.00002098083496
    10. '   ' → logprob: -17.75002098083496

Token 709: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06199346110224724
    2. ' int' → logprob: -2.811993360519409
    3. ':int' → logprob: -11.686993598937988
    4. '[int' → logprob: -11.686993598937988
    5. '0' → logprob: -11.936993598937988
    6. ' ' → logprob: -14.061993598937988
    7. '=int' → logprob: -14.436993598937988
    8. '(int' → logprob: -14.436993598937988
    9. '	int' → logprob: -14.936993598937988
    10. '<int' → logprob: -15.936993598937988

Token 710: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009542173356749117
    2. '=' → logprob: -7.1259541511535645
    3. ':int' → logprob: -9.375954627990723
    4. ' =' → logprob: -9.875954627990723
    5. ' :' → logprob: -11.250954627990723
    6. 'int' → logprob: -14.750954627990723
    7. '=int' → logprob: -17.625953674316406
    8. '0' → logprob: -17.750953674316406
    9. 'def' → logprob: -17.875953674316406
    10. '   ' → logprob: -17.875953674316406

Token 711: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019300628919154406
    2. ' ' → logprob: -6.251930236816406
    3. '   ' → logprob: -14.876930236816406
    4. '  ' → logprob: -16.064430236816406
    5. '[]' → logprob: -16.126930236816406
    6. '۰' → logprob: -16.251930236816406
    7. ' ' → logprob: -16.564430236816406
    8. '[' → logprob: -17.189430236816406
    9. '1' → logprob: -17.376930236816406
    10. '    ' → logprob: -17.376930236816406

Token 712: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.250005722045898
    3. '[]' → logprob: -15.750005722045898
    4. '1' → logprob: -15.937505722045898
    5. '[' → logprob: -16.0625057220459
    6. '   ' → logprob: -17.0000057220459
    7. 'int' → logprob: -17.0625057220459
    8. '"' → logprob: -17.1250057220459
    9. '```' → logprob: -17.2500057220459
    10. 's' → logprob: -17.6875057220459

Token 713: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013698332011699677
    2. '   ' → logprob: -4.638698101043701
    3. ' ' → logprob: -5.888698101043701
    4. '<|end|>' → logprob: -7.388698101043701
    5. ',' → logprob: -8.88869857788086
    6. '  ' → logprob: -9.26369857788086
    7. '
' → logprob: -9.51369857788086
    8. 'self' → logprob: -10.38869857788086
    9. '        
' → logprob: -10.51369857788086
    10. '    
' → logprob: -10.63869857788086

Token 714: ' #' (ID: 1069)
  Prédit: ' #'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #' → logprob: -0.8763720989227295
    2. '#' → logprob: -1.1263720989227295
    3. ' ' → logprob: -1.3763720989227295
    4. '   ' → logprob: -5.251372337341309
    5. '       ' → logprob: -6.876372337341309
    6. '
' → logprob: -7.501372337341309
    7. '  ' → logprob: -9.001372337341309
    8. '0' → logprob: -10.251372337341309
    9. '    ' → logprob: -12.376372337341309
    10. '1' → logprob: -12.751372337341309

Token 715: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.5419153571128845
    2. ' number' → logprob: -1.2919154167175293
    3. '0' → logprob: -2.5419154167175293
    4. 'int' → logprob: -3.4169154167175293
    5. ' ' → logprob: -4.041915416717529
    6. 'resources' → logprob: -4.916915416717529
    7. '#' → logprob: -5.916915416717529
    8. ' #' → logprob: -6.666915416717529
    9. ' int' → logprob: -7.041915416717529
    10. ' resources' → logprob: -7.291915416717529

Token 716: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0527527332305908
    2. '_of' → logprob: -1.1777527332305908
    3. ' of' → logprob: -1.5527527332305908
    4. 'of' → logprob: -2.427752733230591
    5. ' =' → logprob: -3.302752733230591
    6. '<|end|>' → logprob: -6.177752494812012
    7. '_lines' → logprob: -7.177752494812012
    8. ')' → logprob: -7.552752494812012
    9. 'Of' → logprob: -8.177752494812012
    10. '<|end|>' → logprob: -8.177752494812012

Token 717: ' resources' (ID: 7416)
  Prédit: 'resources'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resources' → logprob: -0.009530703537166119
    2. ' resources' → logprob: -4.759530544281006
    3. 'resource' → logprob: -7.134530544281006
    4. 'available' → logprob: -10.259531021118164
    5. 'types' → logprob: -10.884531021118164
    6. '   ' → logprob: -10.884531021118164
    7. '_resources' → logprob: -11.259531021118164
    8. ' resource' → logprob: -11.384531021118164
    9. '
' → logprob: -12.509531021118164
    10. '  ' → logprob: -13.134531021118164

Token 718: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006769483909010887
    2. '   ' → logprob: -5.25676965713501
    3. 'self' → logprob: -6.63176965713501
    4. ' self' → logprob: -9.381769180297852
    5. '
' → logprob: -10.381769180297852
    6. ' ' → logprob: -10.381769180297852
    7. '<|end|>' → logprob: -10.631769180297852
    8. ',' → logprob: -10.881769180297852
    9. 'def' → logprob: -12.131769180297852
    10. '  ' → logprob: -12.381769180297852

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023919975385069847
    2. '   ' → logprob: -4.023920059204102
    3. 'self' → logprob: -5.273920059204102
    4. ' self' → logprob: -8.023920059204102
    5. '
' → logprob: -8.523920059204102
    6. ' ' → logprob: -10.398920059204102
    7. '	self' → logprob: -10.773920059204102
    8. '<|end|>' → logprob: -10.773920059204102
    9. 'def' → logprob: -11.398920059204102
    10. '  ' → logprob: -11.898920059204102

Token 720: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0014208302600309253
    2. '       ' → logprob: -6.626420974731445
    3. 'def' → logprob: -10.001420974731445
    4. ' self' → logprob: -10.626420974731445
    5. '   ' → logprob: -11.126420974731445
    6. '
' → logprob: -11.876420974731445
    7. '           ' → logprob: -14.376420974731445
    8. '#' → logprob: -14.501420974731445
    9. 's' → logprob: -14.626420974731445
    10. '        
' → logprob: -15.001420974731445

Token 721: '.t' (ID: 1370)
  Prédit: '.available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.available' → logprob: -0.11226167529821396
    2. '.initial' → logprob: -2.4872617721557617
    3. '.process' → logprob: -4.612261772155762
    4. '.resources' → logprob: -4.862261772155762
    5. '.manager' → logprob: -7.237261772155762
    6. '.resource' → logprob: -7.362261772155762
    7. '.total' → logprob: -7.487261772155762
    8. '.' → logprob: -7.612261772155762
    9. '.input' → logprob: -7.987261772155762
    10. '.requests' → logprob: -7.987261772155762

Token 722: ':' (ID: 25)
  Prédit: 'otal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'otal' → logprob: -0.03553345799446106
    2. 'okens' → logprob: -3.9105334281921387
    3. 'asks' → logprob: -5.285533428192139
    4. 'oken' → logprob: -6.410533428192139
    5. 'ype' → logprob: -6.910533428192139
    6. 'ot' → logprob: -7.285533428192139
    7. ':' → logprob: -7.535533428192139
    8. 'ypes' → logprob: -7.660533428192139
    9. 'abs' → logprob: -7.660533428192139
    10. '=' → logprob: -7.660533428192139

Token 723: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6915275454521179
    2. 'List' → logprob: -0.8165275454521179
    3. '[int' → logprob: -3.3165276050567627
    4. '[]' → logprob: -5.066527366638184
    5. '=int' → logprob: -5.191527366638184
    6. 'abs' → logprob: -6.191527366638184
    7. ':int' → logprob: -6.566527366638184
    8. '0' → logprob: -6.691527366638184
    9. '=' → logprob: -6.816527366638184
    10. ' =' → logprob: -7.066527366638184

Token 724: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012743777595460415
    2. ' =' → logprob: -4.887743949890137
    3. ':int' → logprob: -6.637743949890137
    4. '=' → logprob: -6.887743949890137
    5. 'ry' → logprob: -7.137743949890137
    6. 'abs' → logprob: -7.262743949890137
    7. 'otal' → logprob: -7.887743949890137
    8. 'okens' → logprob: -8.762743949890137
    9. 'ype' → logprob: -9.637743949890137
    10. 'ime' → logprob: -9.887743949890137

Token 725: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09455038607120514
    2. 'int' → logprob: -2.469550371170044
    3. ' ' → logprob: -5.469550609588623
    4. ' int' → logprob: -6.719550609588623
    5. '[]' → logprob: -9.594550132751465
    6. '1' → logprob: -10.219550132751465
    7. '[int' → logprob: -10.844550132751465
    8. '(int' → logprob: -11.469550132751465
    9. '  ' → logprob: -11.719550132751465
    10. '   ' → logprob: -11.844550132751465

Token 726: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020957801025360823
    2. 'int' → logprob: -6.252095699310303
    3. '[]' → logprob: -9.252096176147461
    4. '1' → logprob: -10.127096176147461
    5. ' ' → logprob: -11.377096176147461
    6. '[int' → logprob: -12.377096176147461
    7. '{}' → logprob: -13.002096176147461
    8. '[]
' → logprob: -13.189596176147461
    9. '(int' → logprob: -13.627096176147461
    10. 'None' → logprob: -13.689596176147461

Token 727: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 728: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24435514211654663
    2. ' ' → logprob: -2.2443552017211914
    3. ' #' → logprob: -2.6193552017211914
    4. '<|end|>' → logprob: -3.4943552017211914
    5. '
' → logprob: -5.619355201721191
    6. 'def' → logprob: -6.494355201721191
    7. '   ' → logprob: -6.869355201721191
    8. '  ' → logprob: -6.994355201721191
    9. '<|end|>' → logprob: -7.994355201721191
    10. '﻿#' → logprob: -11.244355201721191

Token 729: ' length' (ID: 5517)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04250657185912132
    2. '0' → logprob: -3.792506456375122
    3. ' ' → logprob: -5.292506694793701
    4. 'List' → logprob: -5.667506694793701
    5. ' int' → logprob: -6.167506694793701
    6. '   ' → logprob: -6.417506694793701
    7. 'def' → logprob: -6.792506694793701
    8. '[int' → logprob: -7.542506694793701
    9. '#' → logprob: -7.667506694793701
    10. '       ' → logprob: -7.917506694793701

Token 730: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5048885345458984
    2. '<|end|>' → logprob: -1.3798885345458984
    3. '<|end|>' → logprob: -3.1298885345458984
    4. 'of' → logprob: -3.7548885345458984
    5. 'self' → logprob: -4.004888534545898
    6. '       ' → logprob: -4.254888534545898
    7. '   ' → logprob: -4.754888534545898
    8. ' =' → logprob: -5.004888534545898
    9. ' ' → logprob: -5.129888534545898
    10. ' self' → logprob: -5.504888534545898

Token 731: ' time' (ID: 1058)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.3481169044971466
    2. 'self' → logprob: -1.3481168746948242
    3. 'input' → logprob: -3.973116874694824
    4. ' sys' → logprob: -5.598116874694824
    5. ' self' → logprob: -6.598116874694824
    6. 'the' → logprob: -6.598116874694824
    7. '[]' → logprob: -6.723116874694824
    8. 'str' → logprob: -6.723116874694824
    9. '   ' → logprob: -7.223116874694824
    10. 'list' → logprob: -7.473116874694824

Token 732: ' log' (ID: 2142)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41348913311958313
    2. '   ' → logprob: -1.1634891033172607
    3. '<|end|>' → logprob: -4.91348934173584
    4. 'self' → logprob: -5.66348934173584
    5. 's' → logprob: -5.66348934173584
    6. 'def' → logprob: -5.91348934173584
    7. '_steps' → logprob: -6.41348934173584
    8. '
' → logprob: -6.78848934173584
    9. ' =' → logprob: -6.91348934173584
    10. '<|end|>' → logprob: -7.16348934173584

Token 733: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 734: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008332413621246815
    2. '
' → logprob: -5.383332252502441
    3. '       ' → logprob: -6.258332252502441
    4. 'def' → logprob: -7.008332252502441
    5. '    
' → logprob: -7.508332252502441
    6. '<|end|>' → logprob: -8.758332252502441
    7. ' ' → logprob: -9.883332252502441
    8. ' def' → logprob: -10.133332252502441
    9. ',' → logprob: -10.633332252502441
    10. '        
' → logprob: -10.883332252502441

Token 735: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15939323604106903
    2. 'self' (adapté à ' self') → logprob: -2.034393310546875
    3. '
' → logprob: -4.784393310546875
    4. ' self' → logprob: -5.159393310546875
    5. '   ' → logprob: -6.534393310546875
    6. 'def' → logprob: -7.284393310546875
    7. '	self' → logprob: -8.534393310546875
    8. '	' → logprob: -9.784393310546875
    9. ' ' → logprob: -10.659393310546875
    10. '        
' → logprob: -10.909393310546875

Token 736: '.l' (ID: 1000)
  Prédit: '.log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.log' → logprob: -0.9397318959236145
    2. '.process' → logprob: -2.3147318363189697
    3. '.logs' → logprob: -2.3147318363189697
    4. '.time' → logprob: -2.6897318363189697
    5. '.events' → logprob: -2.9397318363189697
    6. '.' → logprob: -3.3147318363189697
    7. '.requests' → logprob: -3.9397318363189697
    8. '.available' → logprob: -4.064732074737549
    9. '.timestamp' → logprob: -4.189732074737549
    10. 'log' → logprob: -4.314732074737549

Token 737: ':' (ID: 25)
  Prédit: 'og'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'og' → logprob: -0.16401983797550201
    2. 'ogs' → logprob: -2.039019823074341
    3. 'ines' → logprob: -4.28902006149292
    4. 'ine' → logprob: -5.91402006149292
    5. 'o' → logprob: -6.16402006149292
    6. 'e' → logprob: -7.78902006149292
    7. 'log' → logprob: -8.164019584655762
    8. ' =' → logprob: -8.289019584655762
    9. 'l' → logprob: -8.539019584655762
    10. 'ist' → logprob: -8.664019584655762

Token 738: ' List' (ID: 2655)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.025328505784273148
    2. 'List' → logprob: -4.275328636169434
    3. ' []' → logprob: -4.650328636169434
    4. 'int' → logprob: -7.775328636169434
    5. '[]
' → logprob: -8.275328636169434
    6. '[List' → logprob: -8.275328636169434
    7. '[int' → logprob: -8.400328636169434
    8. 'list' → logprob: -9.650328636169434
    9. 'ist' → logprob: -9.775328636169434
    10. '[' → logprob: -9.775328636169434

Token 739: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02030431106686592
    2. '[int' → logprob: -4.520304203033447
    3. '[List' → logprob: -4.895304203033447
    4. '[str' → logprob: -6.395304203033447
    5. '=' → logprob: -10.395304679870605
    6. ' =' → logprob: -10.645304679870605
    7. '[
' → logprob: -12.145304679870605
    8. ':' → logprob: -13.770304679870605
    9. 'int' → logprob: -14.020304679870605
    10. '[]' → logprob: -15.770304679870605

Token 740: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002326224057469517
    2. ']=' → logprob: -8.750232696533203
    3. '=' → logprob: -9.875232696533203
    4. ')' → logprob: -11.125232696533203
    5. '[' → logprob: -12.500232696533203
    6. '()]' → logprob: -14.000232696533203
    7. ']()' → logprob: -14.250232696533203
    8. ' =' → logprob: -14.875232696533203
    9. '=[]' → logprob: -14.875232696533203
    10. ' ]' → logprob: -14.875232696533203

Token 741: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048774491995573044
    2. ' =' → logprob: -3.048774480819702
    3. '=[]' → logprob: -8.798774719238281
    4. '<|end|>' → logprob: -11.298774719238281
    5. ':' → logprob: -11.673774719238281
    6. '[' → logprob: -12.923774719238281
    7. ']' → logprob: -13.173774719238281
    8. ' ' → logprob: -13.298774719238281
    9. '[]' → logprob: -13.423774719238281
    10. ')' → logprob: -13.423774719238281

Token 742: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00044783088378608227
    2. '[]
' → logprob: -7.750447750091553
    3. '[]

' → logprob: -11.000448226928711
    4. '[])' → logprob: -15.500448226928711
    5. '[]}' → logprob: -15.500448226928711
    6. '[' → logprob: -16.25044822692871
    7. ' []' → logprob: -16.75044822692871
    8. '[]"' → logprob: -17.00044822692871
    9. '([]' → logprob: -17.37544822692871
    10. '()' → logprob: -18.12544822692871

Token 743: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9684166312217712
    2. ' =' → logprob: -1.343416690826416
    3. '<|end|>' → logprob: -1.843416690826416
    4. ' ' → logprob: -3.093416690826416
    5. '[]' → logprob: -3.218416690826416
    6. 'def' → logprob: -3.343416690826416
    7. '[]
' → logprob: -3.968416690826416
    8. '
' → logprob: -3.968416690826416
    9. '=' → logprob: -4.843416690826416
    10. '<|end|>' → logprob: -5.093416690826416

Token 744: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05184363201260567
    2. '=' → logprob: -3.9268436431884766
    3. '<|end|>' → logprob: -5.051843643188477
    4. '[]' → logprob: -5.176843643188477
    5. ' #' → logprob: -5.676843643188477
    6. '   ' → logprob: -5.676843643188477
    7. ' =' → logprob: -6.176843643188477
    8. '
' → logprob: -6.301843643188477
    9. '  ' → logprob: -6.426843643188477
    10. ' ' → logprob: -6.551843643188477

Token 745: ' initial' (ID: 4871)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.42667677998542786
    2. '[int' → logprob: -1.3016767501831055
    3. 'List' → logprob: -3.1766767501831055
    4. '[]' → logprob: -4.0516767501831055
    5. '[]
' → logprob: -4.4266767501831055
    6. '#' → logprob: -6.8016767501831055
    7. 'None' → logprob: -7.9266767501831055
    8. 'list' → logprob: -7.9266767501831055
    9. 'ints' → logprob: -7.9266767501831055
    10. '[List' → logprob: -8.051676750183105

Token 746: ' available' (ID: 2839)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.179960235953331
    2. '_available' → logprob: -1.9299602508544922
    3. '<|end|>' → logprob: -4.554960250854492
    4. ' available' → logprob: -5.554960250854492
    5. 'Available' → logprob: -6.429960250854492
    6. '_resources' → logprob: -6.929960250854492
    7. 'resources' → logprob: -7.054960250854492
    8. '[]' → logprob: -7.929960250854492
    9. '_' → logprob: -8.179960250854492
    10. 'resource' → logprob: -8.554960250854492

Token 747: ' resources' (ID: 7416)
  Prédit: 'resources'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resources' → logprob: -0.3113146424293518
    2. '_resources' → logprob: -1.436314582824707
    3. '<|end|>' → logprob: -3.811314582824707
    4. ' resources' → logprob: -6.186314582824707
    5. 'instances' → logprob: -6.686314582824707
    6. 'resource' → logprob: -6.936314582824707
    7. '_instances' → logprob: -7.686314582824707
    8. '[]' → logprob: -8.061314582824707
    9. 'Resources' → logprob: -8.186314582824707
    10. 'tokens' → logprob: -8.436314582824707

Token 748: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6198593974113464
    2. '       ' → logprob: -0.8698593974113464
    3. '
' → logprob: -3.744859457015991
    4. '<|end|>' → logprob: -4.494859218597412
    5. 'self' → logprob: -5.494859218597412
    6. ' ' → logprob: -6.369859218597412
    7. ',' → logprob: -6.869859218597412
    8. '<|end|>' → logprob: -7.619859218597412
    9. ' self' → logprob: -8.49485969543457
    10. '  ' → logprob: -9.24485969543457

Token 749: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06484390795230865
    2. '       ' → logprob: -2.8148438930511475
    3. 'self' → logprob: -6.064844131469727
    4. '
' → logprob: -8.064844131469727
    5. ' self' → logprob: -8.939844131469727
    6. '<|end|>' → logprob: -10.439844131469727
    7. 'def' → logprob: -10.689844131469727
    8. ' ' → logprob: -11.064844131469727
    9. '	self' → logprob: -11.439844131469727
    10. ',' → logprob: -11.439844131469727

Token 750: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.052589599043130875
    2. '       ' → logprob: -3.3025896549224854
    3. '
' → logprob: -4.802589416503906
    4. 'def' → logprob: -5.927589416503906
    5. ' self' → logprob: -6.302589416503906
    6. '   ' → logprob: -6.427589416503906
    7. '        
' → logprob: -10.552589416503906
    8. '	self' → logprob: -10.552589416503906
    9. ' ' → logprob: -11.302589416503906
    10. '
' → logprob: -12.052589416503906

Token 751: '.n' (ID: 1835)
  Prédit: '.process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -1.115891933441162
    2. '.p' → logprob: -1.740891933441162
    3. '.r' → logprob: -2.615891933441162
    4. 'p' → logprob: -2.740891933441162
    5. 'process' → logprob: -2.740891933441162
    6. '.n' → logprob: -2.865891933441162
    7. '_process' → logprob: -3.240891933441162
    8. '.' → logprob: -3.740891933441162
    9. '.ne' → logprob: -3.740891933441162
    10. '.need' → logprob: -4.490891933441162

Token 752: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4310838580131531
    2. 'e' → logprob: -1.0560839176177979
    3. 'eed' → logprob: -6.681083679199219
    4. 'ee' → logprob: -7.681083679199219
    5. '_e' → logprob: -8.806083679199219
    6. ':e' → logprob: -9.056083679199219
    7. 'needs' → logprob: -9.181083679199219
    8. 'E' → logprob: -9.431083679199219
    9. 'ees' → logprob: -10.181083679199219
    10. '=' → logprob: -10.181083679199219

Token 753: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.017155352979898453
    2. '[]' → logprob: -4.392155170440674
    3. '[List' → logprob: -5.392155170440674
    4. ' List' → logprob: -10.142155647277832
    5. '[]
' → logprob: -11.392155647277832
    6. '=[]' → logprob: -12.017155647277832
    7. '[int' → logprob: -12.142155647277832
    8. '[' → logprob: -12.267155647277832
    9. 'int' → logprob: -12.892155647277832
    10. '	List' → logprob: -13.142155647277832

Token 754: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.00018780550453811884
    2. '[int' → logprob: -8.875187873840332
    3. '[' → logprob: -10.000187873840332
    4. 'List' → logprob: -13.875187873840332
    5. '   ' → logprob: -14.750187873840332
    6. '[
' → logprob: -15.125187873840332
    7. '<List' → logprob: -15.750187873840332
    8. '=' → logprob: -15.875187873840332
    9. '[str' → logprob: -16.125186920166016
    10. '  ' → logprob: -16.500186920166016

Token 755: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00046689616283401847
    2. '[List' → logprob: -8.000467300415039
    3. 'int' → logprob: -9.000467300415039
    4. '[' → logprob: -12.625467300415039
    5. ']int' → logprob: -13.250467300415039
    6. ']' → logprob: -13.500467300415039
    7. '[]' → logprob: -14.625467300415039
    8. '<int' → logprob: -14.625467300415039
    9. 'List' → logprob: -15.125467300415039
    10. '[
' → logprob: -15.875467300415039

Token 756: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001991298486245796
    2. ']]' → logprob: -8.875199317932129
    3. ']=' → logprob: -9.875199317932129
    4. ']>' → logprob: -13.125199317932129
    5. ')]' → logprob: -13.500199317932129
    6. '[' → logprob: -13.750199317932129
    7. '])' → logprob: -14.125199317932129
    8. '>]' → logprob: -14.625199317932129
    9. ']]]' → logprob: -14.875199317932129
    10. ' ]' → logprob: -14.875199317932129

Token 757: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.049030933529138565
    2. ' =' → logprob: -3.0490310192108154
    3. '=[]' → logprob: -8.424031257629395
    4. '<|end|>' → logprob: -9.049031257629395
    5. ']' → logprob: -9.674031257629395
    6. '=[]
' → logprob: -11.174031257629395
    7. '[' → logprob: -11.674031257629395
    8. '[]' → logprob: -12.424031257629395
    9. ']=' → logprob: -12.674031257629395
    10. ')' → logprob: -12.799031257629395

Token 758: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0007321976590901613
    2. '[]
' → logprob: -7.250732421875
    3. '[]

' → logprob: -10.750732421875
    4. ' []' → logprob: -15.000732421875
    5. '[]"' → logprob: -16.250732421875
    6. '[' → logprob: -16.750732421875
    7. '[][]' → logprob: -16.875732421875
    8. '[]}' → logprob: -17.000732421875
    9. '[])' → logprob: -17.125732421875
    10. '([]' → logprob: -17.125732421875

Token 759: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47947725653648376
    2. '       ' → logprob: -0.9794772863388062
    3. '<|end|>' → logprob: -5.479477405548096
    4. ' ' → logprob: -7.229477405548096
    5. '
' → logprob: -8.354476928710938
    6. 'self' → logprob: -9.354476928710938
    7. '#' → logprob: -9.979476928710938
    8. '<|end|>' → logprob: -10.229476928710938
    9. '  ' → logprob: -11.354476928710938
    10. ',' → logprob: -11.729476928710938

Token 760: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3840036690235138
    2. '   ' → logprob: -1.8840036392211914
    3. ' ' → logprob: -2.1340036392211914
    4. '<|end|>' → logprob: -3.5090036392211914
    5. ' #' → logprob: -4.759003639221191
    6. '[]' → logprob: -6.134003639221191
    7. '       ' → logprob: -6.259003639221191
    8. 'self' → logprob: -6.259003639221191
    9. '  ' → logprob: -6.634003639221191
    10. '<|end|>' → logprob: -7.134003639221191

Token 761: ' process' (ID: 2273)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.024884648621082306
    2. '[]
' → logprob: -4.1498847007751465
    3. '#' → logprob: -5.0248847007751465
    4. ' []' → logprob: -7.1498847007751465
    5. '[]

' → logprob: -8.024884223937988
    6. 'initial' → logprob: -8.149884223937988
    7. 'process' → logprob: -8.149884223937988
    8. '0' → logprob: -8.149884223937988
    9. 'None' → logprob: -9.774884223937988
    10. '()' → logprob: -10.524884223937988

Token 762: ' needs' (ID: 4414)
  Prédit: 'resource'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resource' → logprob: -0.7135829925537109
    2. 'needs' → logprob: -0.7135829925537109
    3. 'need' → logprob: -4.588582992553711
    4. ' resource' → logprob: -5.463582992553711
    5. '_resource' → logprob: -6.588582992553711
    6. '_ne' → logprob: -6.713582992553711
    7. ' needs' → logprob: -7.088582992553711
    8. 'requirements' → logprob: -7.713582992553711
    9. 'max' → logprob: -8.088582992553711
    10. 's' → logprob: -8.213582992553711

Token 763: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04980019852519035
    2. '       ' → logprob: -3.174800157546997
    3. 'self' → logprob: -5.174800395965576
    4. '
' → logprob: -7.299800395965576
    5. '<|end|>' → logprob: -8.049799919128418
    6. ' self' → logprob: -9.799799919128418
    7. '<|end|>' → logprob: -10.799799919128418
    8. ',' → logprob: -11.049799919128418
    9. '	self' → logprob: -11.799799919128418
    10. ' ' → logprob: -12.299799919128418

Token 764: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1006186455488205
    2. '       ' → logprob: -2.475618600845337
    3. 'self' → logprob: -4.600618839263916
    4. '
' → logprob: -6.850618839263916
    5. ' self' → logprob: -8.600618362426758
    6. 'def' → logprob: -8.725618362426758
    7. ' ' → logprob: -9.600618362426758
    8. '<|end|>' → logprob: -10.225618362426758
    9. '	self' → logprob: -10.975618362426758
    10. '  ' → logprob: -11.475618362426758

Token 765: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005928443279117346
    2. '       ' → logprob: -5.5059285163879395
    3. 'def' → logprob: -6.6309285163879395
    4. '   ' → logprob: -8.380928039550781
    5. ' self' → logprob: -8.505928039550781
    6. '
' → logprob: -9.505928039550781
    7. '	self' → logprob: -11.755928039550781
    8. 's' → logprob: -11.880928039550781
    9. '#' → logprob: -13.380928039550781
    10. ' ' → logprob: -13.505928039550781

Token 766: '.logs' (ID: 175345)
  Prédit: '.a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.a' → logprob: -1.6696269512176514
    2. '.e' → logprob: -1.9196269512176514
    3. '.l' → logprob: -2.4196269512176514
    4. 'a' → logprob: -2.6696269512176514
    5. '.q' → logprob: -2.6696269512176514
    6. '.s' → logprob: -2.9196269512176514
    7. '.t' → logprob: -2.9196269512176514
    8. '.r' → logprob: -3.0446269512176514
    9. '.' → logprob: -3.1696269512176514
    10. '.o' → logprob: -3.4196269512176514

Token 767: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002768144244328141
    2. ' =' → logprob: -6.002768039703369
    3. ' :' → logprob: -8.627768516540527
    4. '=' → logprob: -9.127768516540527
    5. '=[]' → logprob: -12.502768516540527
    6. '   ' → logprob: -15.127768516540527
    7. ':list' → logprob: -15.252768516540527
    8. ')' → logprob: -16.25276756286621
    9. ',' → logprob: -16.37776756286621
    10. '[:]' → logprob: -16.62776756286621

Token 768: ' List' (ID: 2655)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0019556330516934395
    2. ' []' → logprob: -6.501955509185791
    3. 'List' → logprob: -7.751955509185791
    4. '[List' → logprob: -11.25195598602295
    5. '[]
' → logprob: -12.50195598602295
    6. '=[]' → logprob: -13.12695598602295
    7. 'list' → logprob: -13.12695598602295
    8. '[]}' → logprob: -14.25195598602295
    9. '[]

' → logprob: -14.25195598602295
    10. '[' → logprob: -15.00195598602295

Token 769: '[' (ID: 58)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.3168817460536957
    2. '[List' → logprob: -1.691881775856018
    3. '[' → logprob: -2.4418816566467285
    4. '[int' → logprob: -9.191882133483887
    5. ' =' → logprob: -9.191882133483887
    6. ':' → logprob: -9.316882133483887
    7. 'str' → logprob: -9.691882133483887
    8. '=' → logprob: -10.566882133483887
    9. 'List' → logprob: -11.191882133483887
    10. '[
' → logprob: -12.316882133483887

Token 770: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.20512273907661438
    2. 'str' → logprob: -1.830122709274292
    3. 'List' → logprob: -3.705122709274292
    4. '[str' → logprob: -8.580122947692871
    5. ']' → logprob: -9.330122947692871
    6. 'tuple' → logprob: -10.080122947692871
    7. 'int' → logprob: -10.330122947692871
    8. 'Dict' → logprob: -10.455122947692871
    9. ' Tuple' → logprob: -10.955122947692871
    10. '[' → logprob: -11.080122947692871

Token 771: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.012837591581046581
    2. '[str' → logprob: -4.3878374099731445
    3. 'int' → logprob: -8.762837409973145
    4. ']' → logprob: -9.012837409973145
    5. '[' → logprob: -10.387837409973145
    6. '[List' → logprob: -12.012837409973145
    7. ')' → logprob: -12.387837409973145
    8. 'str' → logprob: -12.637837409973145
    9. ']int' → logprob: -13.512837409973145
    10. '(int' → logprob: -13.887837409973145

Token 772: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011272875592112541
    2. ',int' → logprob: -4.63627290725708
    3. '[int' → logprob: -6.51127290725708
    4. 'int' → logprob: -11.261272430419922
    5. '[' → logprob: -12.386272430419922
    6. ' ,' → logprob: -12.636272430419922
    7. ',List' → logprob: -12.636272430419922
    8. ',
' → logprob: -13.011272430419922
    9. '(int' → logprob: -14.386272430419922
    10. ',bool' → logprob: -14.636272430419922

Token 773: ']]' (ID: 8928)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38724106550216675
    2. ',int' → logprob: -1.1372411251068115
    3. '[int' → logprob: -8.38724136352539
    4. ']]' → logprob: -9.88724136352539
    5. ',List' → logprob: -10.13724136352539
    6. ',Integer' → logprob: -11.26224136352539
    7. ' ,' → logprob: -11.51224136352539
    8. 'int' → logprob: -11.88724136352539
    9. ']int' → logprob: -12.13724136352539
    10. ')]' → logprob: -12.38724136352539

Token 774: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869578540325165
    2. '=' → logprob: -1.1369578838348389
    3. '=[]' → logprob: -9.886958122253418
    4. ')' → logprob: -11.511958122253418
    5. '[' → logprob: -11.886958122253418
    6. '[]' → logprob: -12.511958122253418
    7. '<|end|>' → logprob: -12.511958122253418
    8. ':' → logprob: -12.636958122253418
    9. ']' → logprob: -12.636958122253418
    10. '=[]
' → logprob: -12.886958122253418

Token 775: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.9504606825648807e-05
    2. ' []' → logprob: -11.250019073486328
    3. '[]
' → logprob: -12.000019073486328
    4. '[]

' → logprob: -16.000019073486328
    5. '[]"' → logprob: -16.250019073486328
    6. '[]}' → logprob: -16.375019073486328
    7. '[' → logprob: -17.750019073486328
    8. '[])' → logprob: -19.250019073486328
    9. '[]>' → logprob: -19.375019073486328
    10. 'list' → logprob: -20.125019073486328

Token 776: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4770966172218323
    2. '
' → logprob: -0.9770966172218323
    3. 'def' → logprob: -6.9770965576171875
    4. '    
' → logprob: -6.9770965576171875
    5. '<|end|>' → logprob: -7.3520965576171875
    6. ' def' → logprob: -7.9770965576171875
    7. '

' → logprob: -9.977096557617188
    8. ' 
' → logprob: -10.352096557617188
    9. '        
' → logprob: -10.977096557617188
    10. '<|end|>' → logprob: -11.102096557617188

Token 777: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6540908217430115
    2. '
' → logprob: -0.7790908217430115
    3. 'def' → logprob: -4.029090881347656
    4. '    
' → logprob: -6.904090881347656
    5. '<|end|>' → logprob: -6.904090881347656
    6. '

' → logprob: -7.154090881347656
    7. ' def' → logprob: -7.904090881347656
    8. '       ' → logprob: -9.404090881347656
    9. '<|end|>' → logprob: -9.779090881347656
    10. ',' → logprob: -10.404090881347656

Token 778: ' log' (ID: 2142)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.020912038162350655
    2. '()' → logprob: -4.145912170410156
    3. '[]
' → logprob: -6.145912170410156
    4. '[int' → logprob: -6.395912170410156
    5. ' []' → logprob: -8.145912170410156
    6. '(' → logprob: -8.395912170410156
    7. '(int' → logprob: -8.645912170410156
    8. '#' → logprob: -8.895912170410156
    9. '[(' → logprob: -9.520912170410156
    10. 'int' → logprob: -10.520912170410156

Token 779: ' entries' (ID: 18614)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 780: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07274750620126724
    2. '
' → logprob: -2.6977474689483643
    3. '<|end|>' → logprob: -6.572747707366943
    4. '    
' → logprob: -7.322747707366943
    5. 'def' → logprob: -7.822747707366943
    6. ' def' → logprob: -8.947747230529785
    7. '<|end|>' → logprob: -9.197747230529785
    8. '       ' → logprob: -10.447747230529785
    9. '

' → logprob: -10.572747230529785
    10. '        
' → logprob: -10.572747230529785

Token 781: 'process' (ID: 9139)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004415397997945547
    2. ')' → logprob: -6.129415512084961
    3. 'pid' → logprob: -6.379415512084961
    4. ' int' → logprob: -8.879415512084961
    5. '[int' → logprob: -8.879415512084961
    6. 'List' → logprob: -10.129415512084961
    7. '   ' → logprob: -10.254415512084961
    8. 'time' → logprob: -10.379415512084961
    9. '
' → logprob: -10.629415512084961
    10. ')]' → logprob: -10.629415512084961

Token 782: ',' (ID: 11)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0790911540389061
    2. 'id' → logprob: -2.5790910720825195
    3. 'ID' → logprob: -9.57909107208252
    4. ',' → logprob: -10.07909107208252
    5. '_pid' → logprob: -10.20409107208252
    6. 'pid' → logprob: -10.57909107208252
    7. ' id' → logprob: -10.82909107208252
    8. 'Id' → logprob: -12.07909107208252
    9. '_,' → logprob: -14.95409107208252
    10. 's' → logprob: -15.45409107208252

Token 783: ' resource' (ID: 8305)
  Prédit: 'resource'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resource' → logprob: -0.011067510582506657
    2. ' resource' → logprob: -4.5110673904418945
    3. 'rid' → logprob: -11.511067390441895
    4. 'request' → logprob: -12.136067390441895
    5. 'res' → logprob: -13.761067390441895
    6. '	resource' → logprob: -14.261067390441895
    7. '(resource' → logprob: -14.386067390441895
    8. 'requested' → logprob: -14.511067390441895
    9. '   ' → logprob: -15.136067390441895
    10. '
' → logprob: -15.261067390441895

Token 784: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08099901676177979
    2. 'id' → logprob: -2.9559988975524902
    3. '_id' → logprob: -3.7059988975524902
    4. 'ID' → logprob: -7.95599889755249
    5. ')
' → logprob: -8.455999374389648
    6. '_requested' → logprob: -8.830999374389648
    7. ',' → logprob: -9.455999374389648
    8. '_requests' → logprob: -9.580999374389648
    9. ')]' → logprob: -9.830999374389648
    10. ' id' → logprob: -10.330999374389648

Token 785: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022308021783828735
    2. 'def' → logprob: -4.022307872772217
    3. '
' → logprob: -5.897307872772217
    4. '<|end|>' → logprob: -6.772307872772217
    5. ' def' → logprob: -9.022308349609375
    6. '    
' → logprob: -9.397308349609375
    7. '<|end|>' → logprob: -10.647308349609375
    8. ')' → logprob: -11.397308349609375
    9. ',' → logprob: -12.647308349609375
    10. '	def' → logprob: -12.772308349609375

Token 786: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.000929091009311378
    2. ' def' → logprob: -7.00092887878418
    3. '   ' → logprob: -11.00092887878418
    4. '
' → logprob: -14.00092887878418
    5. '	def' → logprob: -18.37592887878418
    6. '    
' → logprob: -18.50092887878418
    7. '

' → logprob: -18.75092887878418
    8. '@' → logprob: -19.12592887878418
    9. 'de' → logprob: -20.12592887878418
    10. 'class' → logprob: -20.12592887878418

Token 787: ' input' (ID: 3422)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.05514223873615265
    2. 'parse' → logprob: -3.0551421642303467
    3. 'load' → logprob: -5.055142402648926
    4. ' read' → logprob: -9.430142402648926
    5. 'run' → logprob: -10.805142402648926
    6. 'input' → logprob: -11.305142402648926
    7. ' parse' → logprob: -11.555142402648926
    8. 'def' → logprob: -11.680142402648926
    9. 'set' → logprob: -11.680142402648926
    10. 'add' → logprob: -11.930142402648926

Token 788: '_data' (ID: 3537)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00908308383077383
    2. '_data' → logprob: -5.009083271026611
    3. 'self' → logprob: -7.134083271026611
    4. '(' → logprob: -7.759083271026611
    5. '_lines' → logprob: -8.009082794189453
    6. '()' → logprob: -8.259082794189453
    7. '_line' → logprob: -9.009082794189453
    8. '_(' → logprob: -9.259082794189453
    9. '_logs' → logprob: -9.259082794189453
    10. '_from' → logprob: -9.759082794189453

Token 789: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.029924167320132256
    2. '(' → logprob: -3.529924154281616
    3. 'self' → logprob: -9.404924392700195
    4. ' (' → logprob: -9.404924392700195
    5. '(
' → logprob: -12.029924392700195
    6. '()' → logprob: -13.529924392700195
    7. '():' → logprob: -14.154924392700195
    8. 'def' → logprob: -15.779924392700195
    9. '   ' → logprob: -15.779924392700195
    10. ' self' → logprob: -15.904924392700195

Token 790: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8080405592918396
    2. 'self' → logprob: -0.9330405592918396
    3. '):' → logprob: -2.0580406188964844
    4. ')' → logprob: -3.5580406188964844
    5. '(self' → logprob: -6.058040618896484
    6. '):
' → logprob: -6.183040618896484
    7. '   ' → logprob: -8.808040618896484
    8. '       ' → logprob: -9.808040618896484
    9. ' self' → logprob: -10.558040618896484
    10. ',self' → logprob: -11.183040618896484

Token 791: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021513307001441717
    2. 'n' → logprob: -7.5021514892578125
    3. '   ' → logprob: -7.6271514892578125
    4. 'import' → logprob: -7.7521514892578125
    5. ' lines' → logprob: -7.8771514892578125
    6. 'lines' → logprob: -9.502151489257812
    7. 's' → logprob: -10.002151489257812
    8. '```' → logprob: -10.127151489257812
    9. 'self' → logprob: -10.502151489257812
    10. 'pass' → logprob: -10.502151489257812

Token 792: ' input' (ID: 3422)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.310247004032135
    2. 'import' → logprob: -2.3102469444274902
    3. 'line' → logprob: -2.9352469444274902
    4. 'n' → logprob: -3.0602469444274902
    5. 'lines' → logprob: -3.3102469444274902
    6. '       ' → logprob: -4.06024694442749
    7. 'raw' → logprob: -5.56024694442749
    8. ' self' → logprob: -5.68524694442749
    9. 'input' (adapté à ' input') → logprob: -5.81024694442749
    10. '   ' → logprob: -7.43524694442749

Token 793: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.6465398073196411
    2. '()' → logprob: -1.0215398073196411
    3. '_data' → logprob: -2.5215396881103516
    4. '_lines' → logprob: -4.146539688110352
    5. '_' → logprob: -4.396539688110352
    6. '().' → logprob: -5.521539688110352
    7. '_str' → logprob: -7.146539688110352
    8. 'data' → logprob: -7.646539688110352
    9. '()
' → logprob: -7.771539688110352
    10. 'line' → logprob: -8.021539688110352

Token 794: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20545759797096252
    2. '=' → logprob: -1.7054575681686401
    3. '()' → logprob: -5.70545768737793
    4. 's' → logprob: -7.33045768737793
    5. '_tokens' → logprob: -11.33045768737793
    6. '()
' → logprob: -11.70545768737793
    7. '().' → logprob: -11.83045768737793
    8. ':' → logprob: -12.95545768737793
    9. '_' → logprob: -12.95545768737793
    10. '   ' → logprob: -12.95545768737793

Token 795: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.018181081861257553
    2. ' sys' → logprob: -4.018180847167969
    3. 'input' → logprob: -10.393180847167969
    4. ' input' → logprob: -14.768180847167969
    5. '=sys' → logprob: -17.01818084716797
    6. '	sys' → logprob: -17.14318084716797
    7. '(sys' → logprob: -17.26818084716797
    8. '   ' → logprob: -19.64318084716797
    9. 'self' → logprob: -20.39318084716797
    10. 'Sys' → logprob: -21.14318084716797

Token 796: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0009594622533768415
    2. '.' → logprob: -7.250959396362305
    3. '().' → logprob: -8.625959396362305
    4. '.readline' → logprob: -10.000959396362305
    5. '.stdout' → logprob: -10.875959396362305
    6. '.std' → logprob: -13.125959396362305
    7. '.argv' → logprob: -13.375959396362305
    8. 'stdin' → logprob: -14.000959396362305
    9. '(stdin' → logprob: -15.250959396362305
    10. '.input' → logprob: -15.500959396362305

Token 797: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0001705246395431459
    2. '().' → logprob: -8.750170707702637
    3. '.' → logprob: -11.375170707702637
    4. ' readline' → logprob: -15.125170707702637
    5. 'read' → logprob: -16.12516975402832
    6. '.read' → logprob: -16.37516975402832
    7. '()' → logprob: -17.12516975402832
    8. '()
' → logprob: -17.37516975402832
    9. 'line' → logprob: -18.25016975402832
    10. '   ' → logprob: -19.37516975402832

Token 798: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10501503944396973
    2. '()' → logprob: -2.3550150394439697
    3. '()
' → logprob: -5.355014801025391
    4. '       ' → logprob: -9.85501480102539
    5. '()
' → logprob: -11.60501480102539
    6. '.strip' → logprob: -12.60501480102539
    7. '()

' → logprob: -13.35501480102539
    8. '.rstrip' → logprob: -13.48001480102539
    9. '()\' → logprob: -13.60501480102539
    10. '(' → logprob: -14.23001480102539

Token 799: '       ' (ID: 309)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3484337627887726
    2. '       ' → logprob: -1.8484337329864502
    3. '()
' → logprob: -2.34843373298645
    4. '()' → logprob: -3.22343373298645
    5. '.strip' → logprob: -7.473433971405029
    6. '.rstrip' → logprob: -8.848433494567871
    7. '
' → logprob: -8.973433494567871
    8. 'if' → logprob: -9.973433494567871
    9. '()
' → logprob: -10.098433494567871
    10. '.split' → logprob: -10.098433494567871

Token 800: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2792910039424896
    2. 'while' (adapté à ' while') → logprob: -2.4042909145355225
    3. ' if' → logprob: -2.5292909145355225
    4. 'self' → logprob: -3.0292909145355225
    5. '       ' → logprob: -4.154291152954102
    6. ' while' → logprob: -5.154291152954102
    7. ' self' → logprob: -6.279291152954102
    8. 'tokens' → logprob: -6.404291152954102
    9. ' tokens' → logprob: -9.529291152954102
    10. '
' → logprob: -9.654291152954102

Token 801: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25198960304260254
    2. ' input' → logprob: -1.5019896030426025
    3. 'len' → logprob: -10.626989364624023
    4. ' len' → logprob: -11.751989364624023
    5. '(input' → logprob: -11.876989364624023
    6. ' not' → logprob: -12.126989364624023
    7. 'True' → logprob: -12.126989364624023
    8. ' True' → logprob: -12.376989364624023
    9. 'not' → logprob: -13.126989364624023
    10. ' (' → logprob: -13.501989364624023

Token 802: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00045033416245132685
    2. 'line' → logprob: -8.375450134277344
    3. '_' → logprob: -9.125450134277344
    4. '_token' → logprob: -10.375450134277344
    5. '_lines' → logprob: -10.875450134277344
    6. '
' → logprob: -11.500450134277344
    7. 'token' → logprob: -11.875450134277344
    8. '_tokens' → logprob: -11.875450134277344
    9. '()' → logprob: -12.125450134277344
    10. '   ' → logprob: -12.375450134277344

Token 803: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.23474840819835663
    2. ' and' → logprob: -1.734748363494873
    3. 'and' → logprob: -4.234748363494873
    4. ':
' → logprob: -4.859748363494873
    5. '=' → logprob: -5.234748363494873
    6. '.' → logprob: -5.984748363494873
    7. ':' → logprob: -6.609748363494873
    8. '.startswith' → logprob: -7.984748363494873
    9. '!=' → logprob: -8.109748840332031
    10. 'strip' → logprob: -8.359748840332031

Token 804: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.26647454500198364
    2. '():' → logprob: -1.5164744853973389
    3. '()==' → logprob: -4.641474723815918
    4. '():
' → logprob: -5.641474723815918
    5. '()!=' → logprob: -6.891474723815918
    6. ':' → logprob: -9.141474723815918
    7. '==' → logprob: -9.141474723815918
    8. '()>' → logprob: -12.766474723815918
    9. '!=' → logprob: -13.016474723815918
    10. '():
' → logprob: -13.141474723815918

Token 805: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.529353141784668
    2. ':' → logprob: -1.779353141784668
    3. '():' → logprob: -2.904353141784668
    4. ' !=' → logprob: -3.029353141784668
    5. '()' → logprob: -3.154353141784668
    6. '!=' → logprob: -3.154353141784668
    7. ' ==' → logprob: -3.779353141784668
    8. '()==' → logprob: -4.029353141784668
    9. '()!=' → logprob: -4.904353141784668
    10. '():
' → logprob: -5.529353141784668

Token 806: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.2340891808271408
    2. ''' → logprob: -1.7340891361236572
    3. '""' → logprob: -3.9840891361236572
    4. '"":' → logprob: -4.484089374542236
    5. '"' → logprob: -6.109089374542236
    6. ''',' → logprob: -11.609088897705078
    7. '":' → logprob: -12.234088897705078
    8. '':' → logprob: -12.359088897705078
    9. ' '':
' → logprob: -13.234088897705078
    10. '''
' → logprob: -13.234088897705078

Token 807: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015957530587911606
    2. ':' → logprob: -4.640957355499268
    3. ' =' → logprob: -5.890957355499268
    4. '=' → logprob: -6.140957355499268
    5. ':
' → logprob: -7.515957355499268
    6. ',' → logprob: -8.515957832336426
    7. ' and' → logprob: -9.015957832336426
    8. '       ' → logprob: -9.265957832336426
    9. '          ' → logprob: -9.515957832336426
    10. '<|end|>' → logprob: -10.140957832336426

Token 808: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.007020837627351284
    2. ' input' → logprob: -5.007020950317383
    3. '           ' → logprob: -8.132020950317383
    4. '       ' → logprob: -11.507020950317383
    5. '   ' → logprob: -13.882020950317383
    6. '	input' → logprob: -16.007020950317383
    7. 'import' → logprob: -16.132020950317383
    8. '               ' → logprob: -16.257020950317383
    9. 'self' → logprob: -16.882020950317383
    10. '_input' → logprob: -17.757020950317383

Token 809: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -6.630610641877865e-06
    2. 'line' → logprob: -12.500006675720215
    3. 'Line' → logprob: -13.750006675720215
    4. '_' → logprob: -13.875006675720215
    5. '=' → logprob: -14.625006675720215
    6. '=line' → logprob: -16.5000057220459
    7. '_l' → logprob: -16.7500057220459
    8. '_LINE' → logprob: -17.0000057220459
    9. '_=' → logprob: -17.2500057220459
    10. '=_' → logprob: -17.5000057220459

Token 810: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742608666419983
    2. ' =' → logprob: -0.9742608666419983
    3. '_line' → logprob: -8.974261283874512
    4. '=line' → logprob: -10.974261283874512
    5. '=sys' → logprob: -11.099261283874512
    6. '=input' → logprob: -11.849261283874512
    7. 'line' → logprob: -12.224261283874512
    8. '=
' → logprob: -12.474261283874512
    9. '.readline' → logprob: -13.474261283874512
    10. 'input' → logprob: -13.599261283874512

Token 811: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1269282102584839
    2. ' sys' → logprob: -2.1269283294677734
    3. '	sys' → logprob: -17.251928329467773
    4. '=sys' → logprob: -17.501928329467773
    5. 'input' → logprob: -17.626928329467773
    6. 'Sys' → logprob: -18.251928329467773
    7. '(sys' → logprob: -18.501928329467773
    8. '_sys' → logprob: -18.876928329467773
    9. 'system' → logprob: -19.751928329467773
    10. '   ' → logprob: -19.876928329467773

Token 812: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00018935515254270285
    2. '.' → logprob: -9.500189781188965
    3. 'stdin' → logprob: -10.125189781188965
    4. '.stdout' → logprob: -10.250189781188965
    5. '.readline' → logprob: -10.250189781188965
    6. '.std' → logprob: -12.875189781188965
    7. '(stdin' → logprob: -14.125189781188965
    8. '.stderr' → logprob: -16.37518882751465
    9. ' stdin' → logprob: -16.62518882751465
    10. '.
' → logprob: -16.62518882751465

Token 813: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0026338035240769386
    2. '.stdin' → logprob: -6.377633571624756
    3. 'stdin' → logprob: -7.002633571624756
    4. 'line' → logprob: -11.377634048461914
    5. '_line' → logprob: -12.627634048461914
    6. '().' → logprob: -12.877634048461914
    7. 'read' → logprob: -14.252634048461914
    8. '.stdout' → logprob: -14.377634048461914
    9. '(stdin' → logprob: -14.377634048461914
    10. '
' → logprob: -14.752634048461914

Token 814: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009936819784343243
    2. '<|end|>' → logprob: -5.384936809539795
    3. '<|end|>' → logprob: -6.384936809539795
    4. '           ' → logprob: -7.009936809539795
    5. 'input' → logprob: -7.009936809539795
    6. '
' → logprob: -7.134936809539795
    7. ')' → logprob: -7.884936809539795
    8. '()' → logprob: -8.759937286376953
    9. ',' → logprob: -9.134937286376953
    10. '        
' → logprob: -9.759937286376953

Token 815: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007955700275488198
    2. 'self' → logprob: -7.375795364379883
    3. 'if' → logprob: -10.125795364379883
    4. '
' → logprob: -10.375795364379883
    5. '        
' → logprob: -10.875795364379883
    6. 'tokens' → logprob: -11.625795364379883
    7. ' self' → logprob: -11.875795364379883
    8. 'def' → logprob: -12.000795364379883
    9. ' if' → logprob: -12.125795364379883
    10. '           ' → logprob: -12.125795364379883

Token 816: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.7711779475212097
    2. 'parts' → logprob: -1.3961780071258545
    3. '       ' → logprob: -1.5211780071258545
    4. 'tokens' → logprob: -2.7711780071258545
    5. 'if' → logprob: -5.521177768707275
    6. 'line' → logprob: -6.521177768707275
    7. 'values' → logprob: -7.271177768707275
    8. 'params' → logprob: -7.521177768707275
    9. 'fields' → logprob: -7.771177768707275
    10. 'try' → logprob: -8.521178245544434

Token 817: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.870950215263292e-05
    2. 'p' → logprob: -10.750048637390137
    3. '.' → logprob: -11.250048637390137
    4. ' .' → logprob: -12.375048637390137
    5. '
' → logprob: -13.375048637390137
    6. '```' → logprob: -13.625048637390137
    7. '.t' → logprob: -14.000048637390137
    8. 's' → logprob: -14.000048637390137
    9. '.l' → logprob: -14.125048637390137
    10. '.
' → logprob: -14.125048637390137

Token 818: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5523534417152405
    2. ',' → logprob: -0.9273534417152405
    3. ' =' → logprob: -3.5523533821105957
    4. '=int' → logprob: -9.302353858947754
    5. ' ,' → logprob: -10.427353858947754
    6. ',p' → logprob: -11.302353858947754
    7. ',self' → logprob: -12.552353858947754
    8. '   ' → logprob: -12.927353858947754
    9. ' ' → logprob: -13.052353858947754
    10. ',int' → logprob: -13.427353858947754

Token 819: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0028269849717617035
    2. ' self' → logprob: -5.877827167510986
    3. '<|end|>' → logprob: -11.252826690673828
    4. ' ' → logprob: -12.502826690673828
    5. '=self' → logprob: -13.002826690673828
    6. '*self' → logprob: -13.877826690673828
    7. ',self' → logprob: -14.377826690673828
    8. '  ' → logprob: -15.127826690673828
    9. '=' → logprob: -15.377826690673828
    10. ' 
' → logprob: -15.377826690673828

Token 820: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.014018581248819828
    2. '.' → logprob: -4.889018535614014
    3. 'r' → logprob: -5.889018535614014
    4. ',' → logprob: -5.889018535614014
    5. ',r' → logprob: -7.389018535614014
    6. '.t' → logprob: -9.014019012451172
    7. '.p' → logprob: -10.639019012451172
    8. ' ,' → logprob: -11.264019012451172
    9. ' .' → logprob: -11.264019012451172
    10. ' r' → logprob: -11.389019012451172

Token 821: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13649865984916687
    2. ' =' → logprob: -2.6364986896514893
    3. '=' → logprob: -2.8864986896514893
    4. ' ,' → logprob: -8.63649845123291
    5. '<|end|>' → logprob: -11.63649845123291
    6. ',input' → logprob: -11.76149845123291
    7. ' ' → logprob: -12.13649845123291
    8. '=input' → logprob: -12.76149845123291
    9. '<|end|>' → logprob: -13.76149845123291
    10. ')' → logprob: -14.26149845123291

Token 822: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.9292415749514475e-05
    2. ' self' → logprob: -10.250039100646973
    3. '=self' → logprob: -13.625039100646973
    4. '*self' → logprob: -13.750039100646973
    5. '*' → logprob: -15.250039100646973
    6. '[self' → logprob: -15.500039100646973
    7. ',self' → logprob: -15.875039100646973
    8. '
' → logprob: -15.875039100646973
    9. '       ' → logprob: -16.00004005432129
    10. '           ' → logprob: -16.00004005432129

Token 823: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.09893018752336502
    2. 't' → logprob: -2.4739301204681396
    3. '.' → logprob: -5.473930358886719
    4. ',' → logprob: -5.723930358886719
    5. '=' → logprob: -6.598930358886719
    6. ',t' → logprob: -7.723930358886719
    7. '.l' → logprob: -8.098930358886719
    8. ' =' → logprob: -8.598930358886719
    9. ' t' → logprob: -10.348930358886719
    10. 'l' → logprob: -10.473930358886719

Token 824: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029753267765045166
    2. ' =' → logprob: -3.5297532081604004
    3. ',' → logprob: -13.279753684997559
    4. '=input' → logprob: -14.404753684997559
    5. '[' → logprob: -16.154752731323242
    6. '=line' → logprob: -16.279752731323242
    7. 'input' → logprob: -17.404752731323242
    8. ')' → logprob: -17.529752731323242
    9. '   ' → logprob: -17.654752731323242
    10. ' ' → logprob: -17.779752731323242

Token 825: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0028166472911834717
    2. ' map' → logprob: -6.002816677093506
    3. '(map' → logprob: -8.002816200256348
    4. '[' → logprob: -12.002816200256348
    5. 'tuple' → logprob: -16.752817153930664
    6. '(' → logprob: -16.752817153930664
    7. '	map' → logprob: -16.877817153930664
    8. ' (' → logprob: -17.002817153930664
    9. 'list' → logprob: -17.127817153930664
    10. '
' → logprob: -17.502817153930664

Token 826: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.157039049663581e-05
    2. '(' → logprob: -10.625051498413086
    3. 'int' → logprob: -10.625051498413086
    4. '(lambda' → logprob: -12.875051498413086
    5. '(str' → logprob: -14.875051498413086
    6. '[int' → logprob: -17.500051498413086
    7. '(
' → logprob: -18.500051498413086
    8. '<int' → logprob: -18.875051498413086
    9. '(in' → logprob: -19.125051498413086
    10. ' int' → logprob: -19.375051498413086

Token 827: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01462646946310997
    2. 'input' → logprob: -4.264626502990723
    3. ',input' → logprob: -8.014626502990723
    4. '(' → logprob: -9.139626502990723
    5. ')' → logprob: -11.389626502990723
    6. ' (' → logprob: -12.389626502990723
    7. ' input' → logprob: -12.639626502990723
    8. ',' → logprob: -12.639626502990723
    9. '=input' → logprob: -13.014626502990723
    10. '[input' → logprob: -15.389626502990723

Token 828: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020354038861114532
    2. ' input' → logprob: -8.500203132629395
    3. '(input' → logprob: -20.75020408630371
    4. '	input' → logprob: -23.87520408630371
    5. 'output' → logprob: -24.62520408630371
    6. 'sys' → logprob: -24.75020408630371
    7. '_input' → logprob: -25.12520408630371
    8. '<input' → logprob: -25.12520408630371
    9. '   ' → logprob: -25.37520408630371
    10. '=input' → logprob: -25.75020408630371

Token 829: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0011963017750531435
    2. '().' → logprob: -6.751196384429932
    3. 'line' → logprob: -11.376195907592773
    4. '()' → logprob: -11.876195907592773
    5. ')' → logprob: -13.126195907592773
    6. '())' → logprob: -13.251195907592773
    7. '.readline' → logprob: -13.501195907592773
    8. '()
' → logprob: -14.251195907592773
    9. 'Line' → logprob: -14.626195907592773
    10. '()[' → logprob: -15.501195907592773

Token 830: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3267304599285126
    2. '.strip' → logprob: -1.326730489730835
    3. '.split' → logprob: -4.326730251312256
    4. '.readline' → logprob: -9.076730728149414
    5. '.' → logprob: -10.451730728149414
    6. '.rstrip' → logprob: -11.576730728149414
    7. ' .' → logprob: -11.826730728149414
    8. 'strip' → logprob: -12.076730728149414
    9. '(strip' → logprob: -14.576730728149414
    10. '()
' → logprob: -14.951730728149414

Token 831: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.896309739408025e-07
    2. '()' → logprob: -14.375000953674316
    3. '.split' → logprob: -16.5
    4. 'split' → logprob: -20.0
    5. '(' → logprob: -20.25
    6. ' ().' → logprob: -20.375
    7. '()
' → logprob: -20.5
    8. '())' → logprob: -20.875
    9. '('').' → logprob: -22.0
    10. '().'' → logprob: -22.625

Token 832: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. '(split' → logprob: -15.875
    3. ' split' → logprob: -17.0
    4. '.split' → logprob: -18.25
    5. ')' → logprob: -20.375
    6. '```' → logprob: -21.125
    7. 'plit' → logprob: -22.625
    8. 'spl' → logprob: -22.75
    9. 'rstrip' → logprob: -22.75
    10. 'strip' → logprob: -23.0

Token 833: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.017425069585442543
    2. '('' → logprob: -4.517425060272217
    3. '()' → logprob: -5.142425060272217
    4. '(' → logprob: -8.517425537109375
    5. ')' → logprob: -8.517425537109375
    6. '())
' → logprob: -9.517425537109375
    7. '(','' → logprob: -10.517425537109375
    8. '()))' → logprob: -12.892425537109375
    9. '("' → logprob: -13.142425537109375
    10. '());' → logprob: -13.392425537109375

Token 834: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02277388796210289
    2. 'for' → logprob: -3.8977739810943604
    3. ' for' → logprob: -6.272773742675781
    4. 'self' → logprob: -8.272773742675781
    5. 'while' → logprob: -10.272773742675781
    6. '   ' → logprob: -11.272773742675781
    7. '<|end|>' → logprob: -11.772773742675781
    8. 'next' → logprob: -12.022773742675781
    9. 'line' → logprob: -12.397773742675781
    10. 'input' → logprob: -12.397773742675781

Token 835: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04789194092154503
    2. 'for' → logprob: -3.172891855239868
    3. '       ' → logprob: -5.422892093658447
    4. 'while' → logprob: -8.922891616821289
    5. 'l' → logprob: -9.047891616821289
    6. 'if' → logprob: -9.297891616821289
    7. 'line' → logprob: -9.547891616821289
    8. 'input' → logprob: -10.922891616821289
    9. ' self' → logprob: -11.297891616821289
    10. '#' → logprob: -11.797891616821289

Token 836: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.00016110755677800626
    2. '.n' → logprob: -9.000161170959473
    3. '.t' → logprob: -11.375161170959473
    4. '.p' → logprob: -11.375161170959473
    5. '.' → logprob: -11.625161170959473
    6. 'l' → logprob: -12.875161170959473
    7. '.r' → logprob: -13.250161170959473
    8. '.L' → logprob: -15.125161170959473
    9. ' .' → logprob: -15.250161170959473
    10. '
' → logprob: -15.375161170959473

Token 837: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197473779320717
    2. ' =' → logprob: -2.8119747638702393
    3. '.extend' → logprob: -12.81197452545166
    4. '+=' → logprob: -13.43697452545166
    5. '.append' → logprob: -13.93697452545166
    6. '.=' → logprob: -14.18697452545166
    7. '.' → logprob: -14.81197452545166
    8. ' +=' → logprob: -15.18697452545166
    9. '=[]' → logprob: -16.061975479125977
    10. '=input' → logprob: -16.186975479125977

Token 838: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00012368128227535635
    2. ' list' → logprob: -9.000123977661133
    3. '[list' → logprob: -15.250123977661133
    4. '[' → logprob: -17.750123977661133
    5. 'map' → logprob: -20.375123977661133
    6. '	list' → logprob: -21.375123977661133
    7. '=list' → logprob: -21.375123977661133
    8. '(list' → logprob: -21.500123977661133
    9. '   ' → logprob: -22.375123977661133
    10. ' [' → logprob: -22.500123977661133

Token 839: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00034142236108891666
    2. 'map' → logprob: -8.000341415405273
    3. '(' → logprob: -12.125341415405273
    4. '(int' → logprob: -15.500341415405273
    5. '()' → logprob: -16.250341415405273
    6. '(
' → logprob: -16.750341415405273
    7. '	map' → logprob: -17.500341415405273
    8. '(range' → logprob: -17.750341415405273
    9. '.map' → logprob: -18.250341415405273
    10. '(m' → logprob: -18.250341415405273

Token 840: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003556039300747216
    2. 'int' → logprob: -8.00035572052002
    3. '(' → logprob: -10.87535572052002
    4. '[int' → logprob: -14.12535572052002
    5. '(
' → logprob: -15.12535572052002
    6. '(lambda' → logprob: -16.125354766845703
    7. '<int' → logprob: -16.750354766845703
    8. ' int' → logprob: -17.375354766845703
    9. ',int' → logprob: -17.625354766845703
    10. '=int' → logprob: -17.875354766845703

Token 841: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.055124636739492416
    2. ',' → logprob: -3.055124521255493
    3. 'sys' → logprob: -5.055124759674072
    4. '(' → logprob: -9.305124282836914
    5. '=sys' → logprob: -11.305124282836914
    6. ',input' → logprob: -11.430124282836914
    7. '(input' → logprob: -11.680124282836914
    8. ' sys' → logprob: -12.555124282836914
    9. 'input' → logprob: -12.680124282836914
    10. '	sys' → logprob: -12.680124282836914

Token 842: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00020401719666551799
    2. ' sys' → logprob: -8.500204086303711
    3. 'input' → logprob: -14.625204086303711
    4. '(sys' → logprob: -16.75020408630371
    5. 'lambda' → logprob: -17.87520408630371
    6. '	sys' → logprob: -19.75020408630371
    7. '=sys' → logprob: -20.87520408630371
    8. ')' → logprob: -21.25020408630371
    9. 'Sys' → logprob: -21.75020408630371
    10. ' input' → logprob: -22.12520408630371

Token 843: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.3924150764942169
    2. '.readline' → logprob: -1.1424150466918945
    3. '(stdin' → logprob: -6.2674150466918945
    4. 'sys' → logprob: -6.5174150466918945
    5. '.' → logprob: -7.0174150466918945
    6. 'stdin' → logprob: -7.6424150466918945
    7. '().' → logprob: -7.7674150466918945
    8. '=sys' → logprob: -9.267415046691895
    9. '(sys' → logprob: -9.892415046691895
    10. '.stdout' → logprob: -10.142415046691895

Token 844: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00034380643046461046
    2. '.stdin' → logprob: -8.000344276428223
    3. 'stdin' → logprob: -11.750344276428223
    4. '.' → logprob: -15.500344276428223
    5. '.stdout' → logprob: -16.500343322753906
    6. 'read' → logprob: -16.750343322753906
    7. '.read' → logprob: -17.625343322753906
    8. '().' → logprob: -17.875343322753906
    9. '(stdin' → logprob: -17.875343322753906
    10. 'input' → logprob: -18.000343322753906

Token 845: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003362966235727072
    2. '.readline' → logprob: -8.000336647033691
    3. '()' → logprob: -14.250336647033691
    4. '()
' → logprob: -16.750335693359375
    5. '.strip' → logprob: -16.750335693359375
    6. ' ().' → logprob: -18.000335693359375
    7. '().__' → logprob: -18.500335693359375
    8. '()).' → logprob: -18.625335693359375
    9. '()[' → logprob: -18.875335693359375
    10. '   ' → logprob: -19.125335693359375

Token 846: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.018183540552854538
    2. 'read' → logprob: -4.018183708190918
    3. 'split' → logprob: -11.018183708190918
    4. 'rstrip' → logprob: -11.143183708190918
    5. '.readline' → logprob: -13.018183708190918
    6. ' strip' → logprob: -15.268183708190918
    7. ' readline' → logprob: -15.393183708190918
    8. 'readonly' → logprob: -18.2681827545166
    9. 'decode' → logprob: -18.2681827545166
    10. 'str' → logprob: -18.3931827545166

Token 847: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -15.0
    3. ' ().' → logprob: -18.625
    4. '.split' → logprob: -20.125
    5. '()))' → logprob: -20.375
    6. '())' → logprob: -20.75
    7. '(' → logprob: -20.875
    8. 'split' → logprob: -21.0
    9. '()
' → logprob: -21.125
    10. '   ' → logprob: -21.125

Token 848: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.25
    3. '.split' → logprob: -18.5
    4. 'spl' → logprob: -20.5
    5. '(split' → logprob: -20.625
    6. 'strip' → logprob: -21.0
    7. 'rstrip' → logprob: -22.25
    8. '_split' → logprob: -23.375
    9. 'plit' → logprob: -23.75
    10. ' ' → logprob: -26.0

Token 849: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.005971454083919525
    2. '()' → logprob: -5.380971431732178
    3. '))' → logprob: -6.880971431732178
    4. '()))
' → logprob: -8.630971908569336
    5. '())' → logprob: -9.005971908569336
    6. '(' → logprob: -11.130971908569336
    7. '()));' → logprob: -12.505971908569336
    8. '(),' → logprob: -14.005971908569336
    9. '()))

' → logprob: -14.005971908569336
    10. '()))
' → logprob: -15.130971908569336

Token 850: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025121483951807022
    2. 'self' → logprob: -4.275121688842773
    3. 'for' → logprob: -4.525121688842773
    4. ' for' → logprob: -10.150121688842773
    5. '   ' → logprob: -11.150121688842773
    6. ' self' → logprob: -12.650121688842773
    7. 'def' → logprob: -13.400121688842773
    8. '	' → logprob: -13.525121688842773
    9. '        
' → logprob: -13.775121688842773
    10. '
' → logprob: -13.900121688842773

Token 851: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.4984750747680664
    2. '       ' → logprob: -1.2484750747680664
    3. 'for' → logprob: -2.2484750747680664
    4. ' self' → logprob: -10.998475074768066
    5. ' for' → logprob: -11.123475074768066
    6. '   ' → logprob: -12.498475074768066
    7. '        
' → logprob: -13.248475074768066
    8. '
' → logprob: -13.873475074768066
    9. '	self' → logprob: -13.873475074768066
    10. '```' → logprob: -14.248475074768066

Token 852: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0002263046189909801
    2. 'n' → logprob: -8.500226020812988
    3. '.' → logprob: -11.500226020812988
    4. ' .' → logprob: -12.750226020812988
    5. '   ' → logprob: -13.375226020812988
    6. '	n' → logprob: -13.625226020812988
    7. 'for' → logprob: -13.750226020812988
    8. '
' → logprob: -13.875226020812988
    9. '       ' → logprob: -14.000226020812988
    10. '.p' → logprob: -14.000226020812988

Token 853: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02979366108775139
    2. ' =' → logprob: -3.5297937393188477
    3. '=[]' → logprob: -10.779793739318848
    4. '=[]
' → logprob: -11.404793739318848
    5. '.append' → logprob: -12.154793739318848
    6. '.clear' → logprob: -12.779793739318848
    7. '=[' → logprob: -13.404793739318848
    8. '.extend' → logprob: -14.529793739318848
    9. '[:]' → logprob: -14.654793739318848
    10. '.' → logprob: -15.029793739318848

Token 854: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1453913450241089
    2. '[list' → logprob: -2.6453914642333984
    3. '[List' → logprob: -3.1453914642333984
    4. '[self' → logprob: -4.395391464233398
    5. '[int' → logprob: -5.145391464233398
    6. '[str' → logprob: -7.395391464233398
    7. '[line' → logprob: -8.020391464233398
    8. '[array' → logprob: -8.145391464233398
    9. '[n' → logprob: -8.270391464233398
    10. '[class' → logprob: -8.645391464233398

Token 855: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.961759259458631e-06
    2. ' list' → logprob: -12.250004768371582
    3. '[list' → logprob: -16.2500057220459
    4. '(list' → logprob: -18.2500057220459
    5. '[' → logprob: -19.1250057220459
    6. '=list' → logprob: -19.5000057220459
    7. '   ' → logprob: -19.8750057220459
    8. '	list' → logprob: -20.1250057220459
    9. 'List' → logprob: -20.6250057220459
    10. '
' → logprob: -21.1250057220459

Token 856: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.000297685619443655
    2. 'map' → logprob: -8.125297546386719
    3. '(' → logprob: -13.625297546386719
    4. '(
' → logprob: -15.875297546386719
    5. '   ' → logprob: -16.87529754638672
    6. '	map' → logprob: -16.87529754638672
    7. '(int' → logprob: -17.12529754638672
    8. '()' → logprob: -17.37529754638672
    9. '(range' → logprob: -17.50029754638672
    10. '.map' → logprob: -17.75029754638672

Token 857: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006145051447674632
    2. 'int' → logprob: -7.625614643096924
    3. '(' → logprob: -9.125614166259766
    4. '(lambda' → logprob: -11.375614166259766
    5. '[int' → logprob: -13.125614166259766
    6. ']int' → logprob: -13.500614166259766
    7. '<int' → logprob: -14.000614166259766
    8. ',int' → logprob: -14.375614166259766
    9. '=int' → logprob: -14.625614166259766
    10. ' (' → logprob: -14.750614166259766

Token 858: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.3899587094783783
    2. ',' → logprob: -1.1399587392807007
    3. 'sys' → logprob: -5.88995885848999
    4. '=sys' → logprob: -9.264958381652832
    5. '(' → logprob: -9.514958381652832
    6. ',(' → logprob: -10.514958381652832
    7. ',input' → logprob: -10.639958381652832
    8. ' (' → logprob: -11.264958381652832
    9. ',s' → logprob: -11.389958381652832
    10. ',int' → logprob: -11.514958381652832

Token 859: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.3676733690081164e-05
    2. '(sys' → logprob: -11.25002384185791
    3. ' sys' → logprob: -11.50002384185791
    4. 'lambda' → logprob: -15.00002384185791
    5. ')' → logprob: -16.750022888183594
    6. 'str' → logprob: -17.125022888183594
    7. '=sys' → logprob: -17.500022888183594
    8. 'stdin' → logprob: -18.875022888183594
    9. '	sys' → logprob: -19.000022888183594
    10. 'Sys' → logprob: -19.500022888183594

Token 860: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0001875671005109325
    2. 'stdin' → logprob: -8.625187873840332
    3. '(stdin' → logprob: -12.625187873840332
    4. '.readline' → logprob: -13.125187873840332
    5. 'sys' → logprob: -13.375187873840332
    6. 'in' → logprob: -15.500187873840332
    7. '=sys' → logprob: -15.625187873840332
    8. '.stdout' → logprob: -15.750187873840332
    9. '.argv' → logprob: -15.875187873840332
    10. ').' → logprob: -16.125186920166016

Token 861: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.3319124011322856e-05
    2. 'sys' → logprob: -10.750022888183594
    3. '.stdin' → logprob: -13.875022888183594
    4. '=sys' → logprob: -15.000022888183594
    5. 'stdin' → logprob: -15.000022888183594
    6. '.readlines' → logprob: -15.750022888183594
    7. ' readline' → logprob: -18.125022888183594
    8. 's' → logprob: -18.250022888183594
    9. '```' → logprob: -18.500022888183594
    10. '(sys' → logprob: -18.750022888183594

Token 862: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8908587662735954e-05
    2. '.readline' → logprob: -11.000019073486328
    3. '()' → logprob: -14.125019073486328
    4. '.strip' → logprob: -14.375019073486328
    5. '   ' → logprob: -15.375019073486328
    6. '()
' → logprob: -16.125019073486328
    7. '=sys' → logprob: -16.125019073486328
    8. 'sys' → logprob: -16.250019073486328
    9. '(sys' → logprob: -16.500019073486328
    10. '()[' → logprob: -17.125019073486328

Token 863: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.127333340875339e-06
    2. '.strip' → logprob: -12.875003814697266
    3. 'split' → logprob: -13.625003814697266
    4. 'rstrip' → logprob: -15.500003814697266
    5. '(strip' → logprob: -16.125003814697266
    6. ' strip' → logprob: -17.000003814697266
    7. '
' → logprob: -18.750003814697266
    8. '().' → logprob: -18.750003814697266
    9. 'stripe' → logprob: -19.875003814697266
    10. '_strip' → logprob: -19.875003814697266

Token 864: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.988221684878226e-06
    2. '.split' → logprob: -12.000006675720215
    3. '()' → logprob: -14.750006675720215
    4. '.' → logprob: -15.375006675720215
    5. '   ' → logprob: -17.75000762939453
    6. ' ().' → logprob: -17.87500762939453
    7. 'split' → logprob: -18.50000762939453
    8. '()
' → logprob: -18.50000762939453
    9. '       ' → logprob: -19.25000762939453
    10. '())' → logprob: -19.62500762939453

Token 865: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. ' split' → logprob: -14.250000953674316
    3. '.split' → logprob: -15.125000953674316
    4. '(split' → logprob: -18.625
    5. '().' → logprob: -18.75
    6. 'strip' → logprob: -20.5
    7. ' ' → logprob: -20.75
    8. 'spl' → logprob: -21.0
    9. 'plit' → logprob: -21.25
    10. '   ' → logprob: -21.25

Token 866: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.000286364956991747
    2. '))' → logprob: -8.750286102294922
    3. '()))
' → logprob: -9.375286102294922
    4. '()' → logprob: -10.375286102294922
    5. '())' → logprob: -11.625286102294922
    6. '()
' → logprob: -13.875286102294922
    7. '().' → logprob: -14.500286102294922
    8. '(' → logprob: -14.750286102294922
    9. '())).' → logprob: -15.125286102294922
    10. '())))' → logprob: -15.125286102294922

Token 867: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06671623885631561
    2. '()' → logprob: -3.316716194152832
    3. ' for' → logprob: -3.566716194152832
    4. '       ' → logprob: -12.066716194152832
    5. '(' → logprob: -12.691716194152832
    6. '   ' → logprob: -12.816716194152832
    7. '	for' → logprob: -13.191716194152832
    8. '           ' → logprob: -13.316716194152832
    9. ')' → logprob: -13.691716194152832
    10. '(for' → logprob: -14.191716194152832

Token 868: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0001037815964082256
    2. '_range' → logprob: -9.625103950500488
    3. '_i' → logprob: -10.750103950500488
    4. '_in' → logprob: -11.625103950500488
    5. '_
' → logprob: -13.125103950500488
    6. '_p' → logprob: -13.250103950500488
    7. ' _' → logprob: -13.625103950500488
    8. '_=' → logprob: -14.250103950500488
    9. '
' → logprob: -15.375103950500488
    10. '_j' → logprob: -15.500103950500488

Token 869: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011467342264950275
    2. 'in' → logprob: -4.636467456817627
    3. 'range' → logprob: -6.386467456817627
    4. ' range' → logprob: -10.886466979980469
    5. 'i' → logprob: -12.761466979980469
    6. '_' → logprob: -13.136466979980469
    7. ' ' → logprob: -13.761466979980469
    8. '  ' → logprob: -15.386466979980469
    9. '   ' → logprob: -15.511466979980469
    10. 'n' → logprob: -15.761466979980469

Token 870: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. '(range' → logprob: -17.875158309936523
    4. '   ' → logprob: -18.625158309936523
    5. '	range' → logprob: -19.375158309936523
    6. '  ' → logprob: -20.375158309936523
    7. '
' → logprob: -20.750158309936523
    8. ' ' → logprob: -21.000158309936523
    9. '       ' → logprob: -21.500158309936523
    10. '    ' → logprob: -21.625158309936523

Token 871: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.676981345459353e-06
    2. 'self' → logprob: -12.250005722045898
    3. '(' → logprob: -14.000005722045898
    4. ' (' → logprob: -17.1250057220459
    5. '(
' → logprob: -17.3750057220459
    6. ' self' → logprob: -19.2500057220459
    7. '   ' → logprob: -19.6250057220459
    8. '       ' → logprob: -20.1250057220459
    9. '((' → logprob: -20.6250057220459
    10. '=self' → logprob: -20.6250057220459

Token 872: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.500108141452074e-05
    2. 'p' → logprob: -10.375035285949707
    3. 'self' → logprob: -12.625035285949707
    4. '(p' → logprob: -15.625035285949707
    5. '.r' → logprob: -16.00003433227539
    6. '<p' → logprob: -16.87503433227539
    7. ')' → logprob: -17.25003433227539
    8. 'user' → logprob: -18.00003433227539
    9. '.user' → logprob: -18.25003433227539
    10. '_p' → logprob: -18.50003433227539

Token 873: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.008951825089752674
    2. ')' → logprob: -4.883951663970947
    3. ']' → logprob: -6.633951663970947
    4. '       ' → logprob: -10.883952140808105
    5. ')])' → logprob: -12.883952140808105
    6. '   ' → logprob: -13.008952140808105
    7. '()]' → logprob: -13.383952140808105
    8. '])' → logprob: -13.758952140808105
    9. ')],' → logprob: -14.258952140808105
    10. '])]' → logprob: -14.383952140808105

Token 874: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2990474998950958
    2. 'for' → logprob: -1.4240474700927734
    3. 'def' → logprob: -4.924047470092773
    4. '   ' → logprob: -5.424047470092773
    5. ' for' → logprob: -5.674047470092773
    6. '
' → logprob: -6.424047470092773
    7. 'self' → logprob: -7.799047470092773
    8. '	for' → logprob: -8.049047470092773
    9. '        
' → logprob: -9.049047470092773
    10. '```' → logprob: -10.049047470092773

Token 875: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06410054862499237
    2. 'self' (adapté à ' self') → logprob: -2.939100503921509
    3. '       ' → logprob: -4.814100742340088
    4. 'log' → logprob: -8.06410026550293
    5. 'def' → logprob: -8.31410026550293
    6. 'count' → logprob: -8.56410026550293
    7. 'while' → logprob: -9.18910026550293
    8. ' for' → logprob: -9.43910026550293
    9. 'line' → logprob: -10.18910026550293
    10. '   ' → logprob: -11.18910026550293

Token 876: '.logs' (ID: 175345)
  Prédit: '.logs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.logs' → logprob: -0.0011495060753077269
    2. '.t' → logprob: -7.251149654388428
    3. '.l' → logprob: -7.876149654388428
    4. 'logs' → logprob: -10.50114917755127
    5. '.log' → logprob: -11.75114917755127
    6. '.' → logprob: -11.75114917755127
    7. '.s' → logprob: -12.87614917755127
    8. '.read' → logprob: -13.12614917755127
    9. '
' → logprob: -13.12614917755127
    10. '.process' → logprob: -13.87614917755127

Token 877: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023619171231985092
    2. ' =' → logprob: -3.7736191749572754
    3. '.clear' → logprob: -8.148618698120117
    4. '=[]' → logprob: -9.523618698120117
    5. '.extend' → logprob: -12.023618698120117
    6. '.append' → logprob: -12.398618698120117
    7. '=[]
' → logprob: -14.773618698120117
    8. '[:]' → logprob: -15.023618698120117
    9. '.=' → logprob: -15.273618698120117
    10. '.' → logprob: -16.273618698120117

Token 878: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020745549350976944
    2. '[list' → logprob: -4.020745754241943
    3. '[List' → logprob: -6.020745754241943
    4. '[int' → logprob: -9.270745277404785
    5. '[self' → logprob: -11.395745277404785
    6. '[class' → logprob: -11.645745277404785
    7. ' [' → logprob: -12.020745277404785
    8. '[line' → logprob: -12.020745277404785
    9. '[t' → logprob: -12.145745277404785
    10. '[(' → logprob: -12.520745277404785

Token 879: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.004295284394174814
    2. '(tuple' → logprob: -5.504295349121094
    3. ' tuple' → logprob: -8.504295349121094
    4. '
' → logprob: -11.379295349121094
    5. '(
' → logprob: -14.379295349121094
    6. '(' → logprob: -14.379295349121094
    7. '   ' → logprob: -14.379295349121094
    8. '(lambda' → logprob: -15.129295349121094
    9. 'Tuple' → logprob: -15.629295349121094
    10. '       ' → logprob: -15.879295349121094

Token 880: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.01417174469679594
    2. 'map' → logprob: -4.264171600341797
    3. '(' → logprob: -12.639171600341797
    4. '(int' → logprob: -12.889171600341797
    5. ' map' → logprob: -14.264171600341797
    6. '(
' → logprob: -14.514171600341797
    7. '
' → logprob: -14.889171600341797
    8. '	map' → logprob: -15.389171600341797
    9. '   ' → logprob: -15.639171600341797
    10. 'Map' → logprob: -16.014171600341797

Token 881: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0011752246646210551
    2. 'int' → logprob: -6.751175403594971
    3. '[int' → logprob: -13.251174926757812
    4. '(lambda' → logprob: -14.251174926757812
    5. ',int' → logprob: -14.501174926757812
    6. '<int' → logprob: -14.626174926757812
    7. '   ' → logprob: -14.626174926757812
    8. ']int' → logprob: -15.001174926757812
    9. '(' → logprob: -15.126174926757812
    10. '(
' → logprob: -15.626174926757812

Token 882: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.022966956719756126
    2. ',' → logprob: -4.2729668617248535
    3. 'sys' → logprob: -4.7729668617248535
    4. '=sys' → logprob: -8.772967338562012
    5. '(' → logprob: -10.272967338562012
    6. ' sys' → logprob: -10.522967338562012
    7. '	sys' → logprob: -10.772967338562012
    8. ' (' → logprob: -10.897967338562012
    9. ' ,' → logprob: -11.272967338562012
    10. '   ' → logprob: -11.397967338562012

Token 883: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0002067588793579489
    2. ' sys' → logprob: -8.50020694732666
    3. '(sys' → logprob: -12.87520694732666
    4. ')' → logprob: -14.50020694732666
    5. '   ' → logprob: -16.750205993652344
    6. '
' → logprob: -17.750205993652344
    7. '           ' → logprob: -18.000205993652344
    8. '=sys' → logprob: -18.125205993652344
    9. '	sys' → logprob: -18.125205993652344
    10. 'input' → logprob: -18.375205993652344

Token 884: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.004518534988164902
    2. 'stdin' → logprob: -5.629518508911133
    3. '.readline' → logprob: -7.379518508911133
    4. 'sys' → logprob: -8.629518508911133
    5. '=sys' → logprob: -9.754518508911133
    6. '(stdin' → logprob: -10.004518508911133
    7. 'in' → logprob: -12.129518508911133
    8. '(sys' → logprob: -13.379518508911133
    9. 'import' → logprob: -13.504518508911133
    10. 'd' → logprob: -13.504518508911133

Token 885: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0002441741817165166
    2. '.stdin' → logprob: -9.500244140625
    3. 'sys' → logprob: -9.500244140625
    4. 'stdin' → logprob: -9.625244140625
    5. 'read' → logprob: -10.875244140625
    6. '=sys' → logprob: -12.250244140625
    7. '.read' → logprob: -13.000244140625
    8. '.readlines' → logprob: -13.875244140625
    9. '(stdin' → logprob: -15.125244140625
    10. '.' → logprob: -15.125244140625

Token 886: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0564331205387134e-05
    2. '()' → logprob: -12.25001049041748
    3. '.strip' → logprob: -12.62501049041748
    4. '.readline' → logprob: -13.37501049041748
    5. '()
' → logprob: -14.62501049041748
    6. ' ().' → logprob: -16.125011444091797
    7. '   ' → logprob: -17.000011444091797
    8. '.' → logprob: -17.000011444091797
    9. '(' → logprob: -17.125011444091797
    10. '(strip' → logprob: -17.125011444091797

Token 887: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.7120533811976202e-05
    2. 'split' → logprob: -11.000017166137695
    3. '.strip' → logprob: -15.000017166137695
    4. '(strip' → logprob: -16.625017166137695
    5. ' strip' → logprob: -17.125017166137695
    6. 'rstrip' → logprob: -18.375017166137695
    7. 'read' → logprob: -19.375017166137695
    8. 'stripe' → logprob: -19.625017166137695
    9. '
' → logprob: -19.750017166137695
    10. 'str' → logprob: -20.625017166137695

Token 888: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.173704271830502e-06
    2. '()' → logprob: -13.25000286102295
    3. '.split' → logprob: -13.87500286102295
    4. '   ' → logprob: -15.75000286102295
    5. 'split' → logprob: -15.75000286102295
    6. '()
' → logprob: -16.750003814697266
    7. ' ().' → logprob: -17.500003814697266
    8. '.' → logprob: -17.875003814697266
    9. '(' → logprob: -18.875003814697266
    10. '       ' → logprob: -19.375003814697266

Token 889: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -14.500000953674316
    3. '.split' → logprob: -16.5
    4. '(split' → logprob: -19.125
    5. ')' → logprob: -21.0
    6. 'plit' → logprob: -21.5
    7. ' ' → logprob: -22.125
    8. '_split' → logprob: -22.875
    9. 'strip' → logprob: -23.25
    10. '   ' → logprob: -23.375

Token 890: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.00876394473016262
    2. '))' → logprob: -4.883763790130615
    3. '()))
' → logprob: -7.258763790130615
    4. '()' → logprob: -7.758763790130615
    5. '())' → logprob: -11.133764266967773
    6. '(' → logprob: -12.008764266967773
    7. '()
' → logprob: -13.508764266967773
    8. '))
' → logprob: -14.133764266967773
    9. '()))
' → logprob: -14.383764266967773
    10. '()))

' → logprob: -14.758764266967773

Token 891: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3540509343147278
    2. ' for' → logprob: -1.229050874710083
    3. '()' → logprob: -5.604051113128662
    4. ')' → logprob: -6.729051113128662
    5. '       ' → logprob: -7.854051113128662
    6. '(' → logprob: -8.854050636291504
    7. '           ' → logprob: -9.479050636291504
    8. '	for' → logprob: -10.604050636291504
    9. '   ' → logprob: -10.979050636291504
    10. '        ' → logprob: -11.479050636291504

Token 892: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.666993507067673e-05
    2. ' _' → logprob: -10.625036239624023
    3. '_range' → logprob: -12.250036239624023
    4. '_in' → logprob: -12.625036239624023
    5. ' in' → logprob: -13.125036239624023
    6. ' range' → logprob: -13.375036239624023
    7. 'range' → logprob: -15.625036239624023
    8. '_t' → logprob: -15.875036239624023
    9. '_i' → logprob: -16.125036239624023
    10. 'in' → logprob: -16.250036239624023

Token 893: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6942982077598572
    2. 'range' → logprob: -1.194298267364502
    3. ' range' → logprob: -1.944298267364502
    4. 'in' → logprob: -2.944298267364502
    5. '_' → logprob: -6.319298267364502
    6. '_range' → logprob: -9.444297790527344
    7. 'i' → logprob: -10.694297790527344
    8. '(range' → logprob: -10.944297790527344
    9. '
' → logprob: -13.069297790527344
    10. '	range' → logprob: -13.194297790527344

Token 894: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. '(range' → logprob: -18.000158309936523
    4. '	range' → logprob: -20.250158309936523
    5. '   ' → logprob: -21.000158309936523
    6. '
' → logprob: -21.500158309936523
    7. 'in' → logprob: -22.625158309936523
    8. '_range' → logprob: -23.000158309936523
    9. ' ' → logprob: -23.250158309936523
    10. 'r' → logprob: -23.750158309936523

Token 895: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020497082732617855
    2. 'self' → logprob: -8.500205039978027
    3. '(' → logprob: -14.500205039978027
    4. ' (' → logprob: -14.625205039978027
    5. '       ' → logprob: -15.375205039978027
    6. '   ' → logprob: -16.25020408630371
    7. '           ' → logprob: -17.00020408630371
    8. ' self' → logprob: -17.75020408630371
    9. '[self' → logprob: -17.87520408630371
    10. 's' → logprob: -18.25020408630371

Token 896: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -1.1472419600977446e-06
    2. 't' → logprob: -13.875000953674316
    3. '.' → logprob: -16.625001907348633
    4. '	t' → logprob: -17.625001907348633
    5. '.p' → logprob: -18.125001907348633
    6. '(t' → logprob: -18.125001907348633
    7. '
' → logprob: -19.000001907348633
    8. '<t' → logprob: -19.750001907348633
    9. ')' → logprob: -20.000001907348633
    10. '   ' → logprob: -20.625001907348633

Token 897: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.07536415010690689
    2. ')' → logprob: -2.825364112854004
    3. ']' → logprob: -4.325364112854004
    4. '       ' → logprob: -10.700364112854004
    5. '   ' → logprob: -11.200364112854004
    6. ' )' → logprob: -11.450364112854004
    7. ')])' → logprob: -11.575364112854004
    8. '()]' → logprob: -11.825364112854004
    9. '])' → logprob: -12.575364112854004
    10. ' ]' → logprob: -12.950364112854004

Token 898: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4755704402923584
    2. '   ' → logprob: -0.9755704402923584
    3. ' def' → logprob: -7.1005706787109375
    4. '
' → logprob: -7.4755706787109375
    5. '```' → logprob: -10.100570678710938
    6. '<|end|>' → logprob: -10.600570678710938
    7. '    
' → logprob: -11.350570678710938
    8. '	def' → logprob: -11.475570678710938
    9. '

' → logprob: -13.225570678710938
    10. ')' → logprob: -13.350570678710938

Token 899: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.6405310816480778e-05
    2. '   ' → logprob: -11.750016212463379
    3. ' def' → logprob: -11.750016212463379
    4. '
' → logprob: -14.500016212463379
    5. '	def' → logprob: -16.750017166137695
    6. '    
' → logprob: -19.000017166137695
    7. 'class' → logprob: -19.625017166137695
    8. '```' → logprob: -20.125017166137695
    9. '        
' → logprob: -20.875017166137695
    10. 'de' → logprob: -21.000017166137695

Token 900: ' solve' (ID: 17722)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.42325741052627563
    2. ' run' → logprob: -1.6732573509216309
    3. 'solve' → logprob: -2.048257350921631
    4. ' solve' → logprob: -4.798257350921631
    5. 'simulate' → logprob: -4.798257350921631
    6. 'detect' → logprob: -5.298257350921631
    7. 'process' → logprob: -5.298257350921631
    8. ' process' → logprob: -7.298257350921631
    9. 'check' → logprob: -7.548257350921631
    10. ' detect' → logprob: -8.173257827758789

Token 901: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.7252845029579476e-05
    2. '(' → logprob: -10.625027656555176
    3. '   ' → logprob: -13.125027656555176
    4. '       ' → logprob: -14.500027656555176
    5. ' (' → logprob: -15.500027656555176
    6. 'self' → logprob: -15.625027656555176
    7. '(
' → logprob: -17.87502670288086
    8. 'def' → logprob: -18.25002670288086
    9. '(Self' → logprob: -19.50002670288086
    10. '():
' → logprob: -19.87502670288086

Token 902: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.32415851950645447
    2. 'self' → logprob: -2.3241584300994873
    3. ',' → logprob: -2.4491584300994873
    4. '(self' → logprob: -2.8241584300994873
    5. '):
' → logprob: -3.9491584300994873
    6. ')' → logprob: -4.949158668518066
    7. ')(' → logprob: -5.449158668518066
    8. '   ' → logprob: -6.449158668518066
    9. '       ' → logprob: -7.324158668518066
    10. ':' → logprob: -9.324158668518066

Token 903: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0006149819819256663
    2. '       ' → logprob: -7.875615119934082
    3. '   ' → logprob: -8.625615119934082
    4. '(' → logprob: -10.875615119934082
    5. 'self' → logprob: -11.250615119934082
    6. ':' → logprob: -11.250615119934082
    7. 'def' → logprob: -12.125615119934082
    8. '->' → logprob: -13.875615119934082
    9. ':self' → logprob: -14.000615119934082
    10. ':
' → logprob: -14.125615119934082

Token 904: ' int' (ID: 677)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.739217221736908
    2. 'bool' → logprob: -0.739217221736908
    3. 'List' → logprob: -3.3642172813415527
    4. 'int' → logprob: -5.364217281341553
    5. ' None' → logprob: -6.114217281341553
    6. 'str' → logprob: -6.239217281341553
    7. ' bool' → logprob: -7.114217281341553
    8. 'Set' → logprob: -8.239216804504395
    9. 'Optional' → logprob: -8.864216804504395
    10. '   ' → logprob: -9.114216804504395

Token 905: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6849368810653687
    2. ':' → logprob: -1.3099368810653687
    3. '       ' → logprob: -1.5599368810653687
    4. '(self' → logprob: -4.809937000274658
    5. '   ' → logprob: -5.309937000274658
    6. '():
' → logprob: -6.434937000274658
    7. '():' → logprob: -7.809937000274658
    8. '(' → logprob: -8.6849365234375
    9. '[' → logprob: -8.6849365234375
    10. '):
' → logprob: -8.9349365234375

Token 906: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3306015716807451e-05
    2. '   ' → logprob: -12.62501335144043
    3. '```' → logprob: -12.62501335144043
    4. '        
' → logprob: -13.00001335144043
    5. 'self' → logprob: -13.87501335144043
    6. '
' → logprob: -14.37501335144043
    7. '           ' → logprob: -14.75001335144043
    8. '[' → logprob: -15.37501335144043
    9. 's' → logprob: -15.37501335144043
    10. '`' → logprob: -15.50001335144043

Token 907: ' manager' (ID: 10470)
  Prédit: 'rm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rm' → logprob: -0.037591416388750076
    2. '       ' → logprob: -3.9125914573669434
    3. 'manager' (adapté à ' manager') → logprob: -4.162591457366943
    4. 'resource' → logprob: -7.162591457366943
    5. ' rm' → logprob: -8.162590980529785
    6. 'mgr' → logprob: -9.037590980529785
    7. ' manager' → logprob: -9.912590980529785
    8. '
' → logprob: -10.162590980529785
    9. 'res' → logprob: -11.037590980529785
    10. '#' → logprob: -11.287590980529785

Token 908: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0621178075671196
    2. '=' → logprob: -2.8121178150177
    3. ':' → logprob: -8.812117576599121
    4. '   ' → logprob: -13.812117576599121
    5. ':=' → logprob: -16.187118530273438
    6. ' :=' → logprob: -17.062118530273438
    7. ' ' → logprob: -17.437118530273438
    8. '       ' → logprob: -17.687118530273438
    9. '    ' → logprob: -18.187118530273438
    10. '=
' → logprob: -18.312118530273438

Token 909: ' Resource' (ID: 18550)
  Prédit: 'Resource'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Resource' → logprob: -0.3132616877555847
    2. ' Resource' → logprob: -1.3132617473602295
    3. '	Resource' → logprob: -17.688261032104492
    4. ' resource' → logprob: -18.688261032104492
    5. '       ' → logprob: -18.938261032104492
    6. '(Resource' → logprob: -19.688261032104492
    7. '<Resource' → logprob: -21.813261032104492
    8. '.Resource' → logprob: -22.313261032104492
    9. '_resource' → logprob: -22.813261032104492
    10. '   ' → logprob: -22.813261032104492

Token 910: 'Manager' (ID: 2774)
  Prédit: 'Manager'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Manager' → logprob: -1.9361264946837764e-07
    2. 'manager' → logprob: -16.25
    3. 'Manage' → logprob: -16.75
    4. 'Mana' → logprob: -18.375
    5. '_manager' → logprob: -18.625
    6. ' Manager' → logprob: -19.125
    7. 'Man' → logprob: -19.125
    8. 'M' → logprob: -19.125
    9. '_Manager' → logprob: -19.625
    10. 'Allocator' → logprob: -20.375

Token 911: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1041145626222715e-05
    2. 'self' → logprob: -11.750011444091797
    3. '       ' → logprob: -13.250011444091797
    4. '(' → logprob: -14.000011444091797
    5. '(
' → logprob: -14.500011444091797
    6. ' (' → logprob: -19.125011444091797
    7. '(s' → logprob: -19.250011444091797
    8. '=self' → logprob: -19.750011444091797
    9. '
' → logprob: -20.000011444091797
    10. ' self' → logprob: -20.125011444091797

Token 912: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0002619318547658622
    2. 'p' → logprob: -8.250262260437012
    3. 'self' → logprob: -15.000262260437012
    4. '       ' → logprob: -15.375262260437012
    5. '.' → logprob: -17.000261306762695
    6. '   ' → logprob: -17.875261306762695
    7. ' .' → logprob: -18.375261306762695
    8. '
' → logprob: -19.375261306762695
    9. ').' → logprob: -19.625261306762695
    10. '           ' → logprob: -19.875261306762695

Token 913: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1994775377388578e-05
    2. ',self' → logprob: -11.750012397766113
    3. ' ,' → logprob: -12.625012397766113
    4. '       ' → logprob: -14.750012397766113
    5. ',
' → logprob: -15.625012397766113
    6. 'self' → logprob: -16.250011444091797
    7. '   ' → logprob: -17.000011444091797
    8. '           ' → logprob: -18.625011444091797
    9. ')' → logprob: -20.250011444091797
    10. '  ' → logprob: -20.500011444091797

Token 914: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00022082125360611826
    2. ' self' → logprob: -8.500221252441406
    3. '<|end|>' → logprob: -11.625221252441406
    4. '       ' → logprob: -11.875221252441406
    5. '(self' → logprob: -14.125221252441406
    6. '[self' → logprob: -15.750221252441406
    7. '   ' → logprob: -16.500221252441406
    8. '=self' → logprob: -16.500221252441406
    9. '	self' → logprob: -16.625221252441406
    10. ' ' → logprob: -16.750221252441406

Token 915: '.r' (ID: 2951)
  Prédit: '.r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.r' → logprob: -0.00026777281891554594
    2. 'r' → logprob: -8.87526798248291
    3. '.' → logprob: -9.00026798248291
    4. ',r' → logprob: -12.75026798248291
    5. ',' → logprob: -14.00026798248291
    6. ' .' → logprob: -14.87526798248291
    7. '_r' → logprob: -15.62526798248291
    8. ' r' → logprob: -15.62526798248291
    9. '```' → logprob: -17.250267028808594
    10. ' ' → logprob: -17.250267028808594

Token 916: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0087516784551553e-05
    2. ',self' → logprob: -12.12501049041748
    3. ' ,' → logprob: -12.37501049041748
    4. 'self' → logprob: -15.37501049041748
    5. '       ' → logprob: -16.500009536743164
    6. ',
' → logprob: -16.875009536743164
    7. '   ' → logprob: -17.000009536743164
    8. '           ' → logprob: -19.125009536743164
    9. ')' → logprob: -19.250009536743164
    10. '```' → logprob: -20.000009536743164

Token 917: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019368429202586412
    2. ' self' → logprob: -6.251936912536621
    3. '       ' → logprob: -12.376936912536621
    4. '           ' → logprob: -12.876936912536621
    5. '[self' → logprob: -14.251936912536621
    6. '   ' → logprob: -15.376936912536621
    7. '	self' → logprob: -16.376935958862305
    8. '         ' → logprob: -16.501935958862305
    9. '          ' → logprob: -16.876935958862305
    10. '(self' → logprob: -17.126935958862305

Token 918: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.000570667558349669
    2. 'l' → logprob: -7.500570774078369
    3. '.' → logprob: -11.000570297241211
    4. 'self' → logprob: -15.625570297241211
    5. '	l' → logprob: -15.625570297241211
    6. 's' → logprob: -15.875570297241211
    7. '```' → logprob: -16.12557029724121
    8. 't' → logprob: -16.25057029724121
    9. '_l' → logprob: -16.62557029724121
    10. '[l' → logprob: -17.25057029724121

Token 919: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038443657103925943
    2. ')' → logprob: -8.375384330749512
    3. ',
' → logprob: -9.500384330749512
    4. ',self' → logprob: -10.000384330749512
    5. ' ,' → logprob: -10.750384330749512
    6. ')
' → logprob: -13.000384330749512
    7. 'self' → logprob: -13.250384330749512
    8. ',)' → logprob: -13.375384330749512
    9. '
' → logprob: -13.500384330749512
    10. ',n' → logprob: -13.750384330749512

Token 920: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008137972326949239
    2. ' self' → logprob: -7.125813961029053
    3. '       ' → logprob: -12.125813484191895
    4. '[self' → logprob: -13.250813484191895
    5. '(self' → logprob: -14.125813484191895
    6. '           ' → logprob: -14.500813484191895
    7. '	self' → logprob: -15.000813484191895
    8. 's' → logprob: -16.25081443786621
    9. '   ' → logprob: -16.25081443786621
    10. '=self' → logprob: -16.62581443786621

Token 921: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -3.249780638725497e-05
    2. 'n' → logprob: -10.375032424926758
    3. '.' → logprob: -14.250032424926758
    4. ' .' → logprob: -15.625032424926758
    5. '	n' → logprob: -16.125032424926758
    6. '```' → logprob: -16.125032424926758
    7. '_n' → logprob: -17.000032424926758
    8. '[n' → logprob: -17.250032424926758
    9. '<n' → logprob: -17.500032424926758
    10. '.p' → logprob: -17.625032424926758

Token 922: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008710776455700397
    2. ')
' → logprob: -4.758710861206055
    3. '       ' → logprob: -9.383710861206055
    4. ')

' → logprob: -11.633710861206055
    5. ')
' → logprob: -12.758710861206055
    6. '   ' → logprob: -15.383710861206055
    7. ' )' → logprob: -16.633710861206055
    8. '	' → logprob: -17.258710861206055
    9. '),' → logprob: -17.508710861206055
    10. '
' → logprob: -18.258710861206055

Token 923: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5285898447036743
    2. ' for' → logprob: -1.2785898447036743
    3. 'for' → logprob: -2.0285897254943848
    4. 'result' → logprob: -8.653590202331543
    5. '```' → logprob: -8.778590202331543
    6. '   ' → logprob: -9.278590202331543
    7. ' result' → logprob: -9.278590202331543
    8. 'count' → logprob: -10.653590202331543
    9. '
' → logprob: -11.153590202331543
    10. '        
' → logprob: -11.778590202331543

Token 924: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02057669311761856
    2. 'dead' → logprob: -4.520576477050781
    3. 'result' → logprob: -4.770576477050781
    4. 'res' → logprob: -7.770576477050781
    5. 'last' → logprob: -8.770576477050781
    6. 'answer' → logprob: -9.020576477050781
    7. 'ans' → logprob: -9.645576477050781
    8. 'safe' → logprob: -9.645576477050781
    9. ' for' → logprob: -10.020576477050781
    10. 'allocated' → logprob: -10.395576477050781

Token 925: ' time' (ID: 1058)
  Prédit: 'pid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pid' → logprob: -0.2566969096660614
    2. 'proc' → logprob: -1.6316969394683838
    3. '(pid' → logprob: -4.131696701049805
    4. 'p' → logprob: -6.006696701049805
    5. '(i' → logprob: -6.131696701049805
    6. 'i' → logprob: -6.256696701049805
    7. '(' → logprob: -6.506696701049805
    8. '(p' → logprob: -6.506696701049805
    9. '(proc' → logprob: -6.631696701049805
    10. 'log' → logprob: -6.881696701049805

Token 926: '_idx' (ID: 15257)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.32872602343559265
    2. ',' → logprob: -1.453726053237915
    3. 'in' → logprob: -4.078725814819336
    4. '_,' → logprob: -4.203725814819336
    5. 'i' → logprob: -5.578725814819336
    6. 'idx' → logprob: -5.703725814819336
    7. '_' → logprob: -6.203725814819336
    8. '_idx' → logprob: -6.828725814819336
    9. '_i' → logprob: -7.078725814819336
    10. ' ,' → logprob: -7.328725814819336

Token 927: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3067918121814728
    2. ',' → logprob: -1.8067917823791504
    3. 'in' → logprob: -2.3067917823791504
    4. ' ,' → logprob: -7.80679178237915
    5. ',in' → logprob: -11.181792259216309
    6. '   ' → logprob: -12.556792259216309
    7. '_,' → logprob: -12.806792259216309
    8. ' ' → logprob: -13.556792259216309
    9. ',event' → logprob: -13.931792259216309
    10. '	in' → logprob: -14.306792259216309

Token 928: ' (' (ID: 350)
  Prédit: '(pid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pid' → logprob: -0.4979533851146698
    2. '(proc' → logprob: -1.2479534149169922
    3. '(log' → logprob: -2.622953414916992
    4. ' (' → logprob: -3.872953414916992
    5. '(p' → logprob: -5.372953414916992
    6. '(pr' → logprob: -5.497953414916992
    7. '(process' → logprob: -6.622953414916992
    8. '(pl' → logprob: -7.247953414916992
    9. '(pro' → logprob: -8.247953414916992
    10. '(ps' → logprob: -8.622953414916992

Token 929: 'pid' (ID: 19554)
  Prédit: 'pid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pid' → logprob: -0.014775416813790798
    2. 'proc' → logprob: -4.264775276184082
    3. 'p' → logprob: -7.639775276184082
    4. '(pid' → logprob: -9.764775276184082
    5. 'process' → logprob: -10.264775276184082
    6. ' pid' → logprob: -10.889775276184082
    7. 'pi' → logprob: -11.014775276184082
    8. '(p' → logprob: -13.264775276184082
    9. '(proc' → logprob: -14.264775276184082
    10. '_pid' → logprob: -15.514775276184082

Token 930: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043913270928896964
    2. ',r' → logprob: -7.750439167022705
    3. ' ,' → logprob: -12.125438690185547
    4. ',p' → logprob: -13.250438690185547
    5. ',res' → logprob: -14.875438690185547
    6. ',s' → logprob: -16.250438690185547
    7. ',c' → logprob: -16.375438690185547
    8. ',d' → logprob: -16.625438690185547
    9. '‌,' → logprob: -16.625438690185547
    10. 'resource' → logprob: -16.750438690185547

Token 931: ' rid' (ID: 12566)
  Prédit: 'rid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rid' → logprob: -0.000264315924141556
    2. ' rid' → logprob: -8.250264167785645
    3. 'res' → logprob: -12.875264167785645
    4. 'r' → logprob: -16.00026512145996
    5. '   ' → logprob: -16.37526512145996
    6. ')' → logprob: -16.37526512145996
    7. 'resource' → logprob: -16.62526512145996
    8. ' ' → logprob: -17.12526512145996
    9. '  ' → logprob: -17.50026512145996
    10. 'Rid' → logprob: -17.75026512145996

Token 932: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ' )' → logprob: -13.250001907348633
    3. '       ' → logprob: -15.875001907348633
    4. '):' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.250001907348633
    6. ')
' → logprob: -17.500001907348633
    7. '),' → logprob: -18.250001907348633
    8. '):
' → logprob: -18.625001907348633
    9. ')`' → logprob: -18.750001907348633
    10. '           ' → logprob: -18.875001907348633

Token 933: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10104822367429733
    2. 'in' → logprob: -2.351048231124878
    3. ')' → logprob: -7.101047992706299
    4. ',' → logprob: -12.226048469543457
    5. ':' → logprob: -12.726048469543457
    6. '   ' → logprob: -12.851048469543457
    7. ' ' → logprob: -13.851048469543457
    8. '	in' → logprob: -13.851048469543457
    9. '       ' → logprob: -14.351048469543457
    10. ' )' → logprob: -14.476048469543457

Token 934: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.00015121731848921627
    2. ' enumerate' → logprob: -9.000151634216309
    3. 'self' → logprob: -10.500151634216309
    4. 'enum' → logprob: -15.875151634216309
    5. 'en' → logprob: -17.000150680541992
    6. '   ' → logprob: -17.000150680541992
    7. '```' → logprob: -17.500150680541992
    8. 'in' → logprob: -18.125150680541992
    9. 'enqueue' → logprob: -18.500150680541992
    10. '       ' → logprob: -18.750150680541992

Token 935: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00013464801304508
    2. '(self' → logprob: -9.000134468078613
    3. ' self' → logprob: -11.500134468078613
    4. '       ' → logprob: -14.250134468078613
    5. '           ' → logprob: -15.000134468078613
    6. '   ' → logprob: -17.12513542175293
    7. '
' → logprob: -17.25013542175293
    8. '[self' → logprob: -17.75013542175293
    9. '=self' → logprob: -18.62513542175293
    10. ')' → logprob: -19.12513542175293

Token 936: '.logs' (ID: 175345)
  Prédit: '.logs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.logs' → logprob: -1.0280383548888494e-06
    2. 'logs' → logprob: -14.000000953674316
    3. '.' → logprob: -17.000001907348633
    4. '.logged' → logprob: -17.250001907348633
    5. '.l' → logprob: -18.125001907348633
    6. ').' → logprob: -18.250001907348633
    7. ' .' → logprob: -18.625001907348633
    8. '.log' → logprob: -19.000001907348633
    9. ' logs' → logprob: -19.125001907348633
    10. '.lines' → logprob: -19.250001907348633

Token 937: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1272374987602234
    2. '):
' → logprob: -2.127237558364868
    3. '):
' → logprob: -8.502237319946289
    4. ':' → logprob: -9.627237319946289
    5. '       ' → logprob: -10.252237319946289
    6. '):

' → logprob: -13.127237319946289
    7. ' ):' → logprob: -13.877237319946289
    8. '           ' → logprob: -14.127237319946289
    9. ')' → logprob: -14.627237319946289
    10. '   ' → logprob: -14.752237319946289

Token 938: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.256513386964798
    2. '1' → logprob: -1.5065133571624756
    3. ' start' → logprob: -5.506513595581055
    4. ' ' → logprob: -8.006513595581055
    5. '):' → logprob: -8.881513595581055
    6. ')' → logprob: -10.756513595581055
    7. '0' → logprob: -11.006513595581055
    8. '_start' → logprob: -13.381513595581055
    9. '):
' → logprob: -14.631513595581055
    10. '   ' → logprob: -14.756513595581055

Token 939: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.816093228830141e-06
    2. '1' → logprob: -13.87500286102295
    3. '(' → logprob: -14.00000286102295
    4. '=
' → logprob: -14.12500286102295
    5. '=(' → logprob: -16.750001907348633
    6. ')=' → logprob: -17.000001907348633
    7. '=int' → logprob: -18.375001907348633
    8. ')' → logprob: -18.375001907348633
    9. '=

' → logprob: -18.500001907348633
    10. '=}' → logprob: -19.875001907348633

Token 940: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. '0' → logprob: -12.500004768371582
    3. ' ' → logprob: -14.500004768371582
    4. '=' → logprob: -16.375003814697266
    5. '   ' → logprob: -16.625003814697266
    6. ')' → logprob: -17.125003814697266
    7. '2' → logprob: -19.000003814697266
    8. '       ' → logprob: -19.875003814697266
    9. '           ' → logprob: -20.250003814697266
    10. '```' → logprob: -20.500003814697266

Token 941: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3138577938079834
    2. '):' → logprob: -1.3138577938079834
    3. '):
' → logprob: -7.8138580322265625
    4. ':' → logprob: -8.813858032226562
    5. '       ' → logprob: -10.313858032226562
    6. '):

' → logprob: -12.188858032226562
    7. ':
' → logprob: -12.938858032226562
    8. ')' → logprob: -13.688858032226562
    9. '           ' → logprob: -14.688858032226562
    10. '():
' → logprob: -15.313858032226562

Token 942: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004125575942452997
    2. '```' → logprob: -9.125412940979004
    3. ' if' → logprob: -9.375412940979004
    4. 'if' → logprob: -9.375412940979004
    5. '       ' → logprob: -9.625412940979004
    6. '            
' → logprob: -10.250412940979004
    7. '   ' → logprob: -11.250412940979004
    8. '
' → logprob: -12.000412940979004
    9. '          ' → logprob: -12.125412940979004
    10. '`' → logprob: -13.375412940979004

Token 943: ' manager' (ID: 10470)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7432290315628052
    2. '           ' → logprob: -1.2432290315628052
    3. 'manager' (adapté à ' manager') → logprob: -1.4932290315628052
    4. '       ' → logprob: -5.368228912353516
    5. '#' → logprob: -5.618228912353516
    6. 'proc' → logprob: -5.868228912353516
    7. 'process' → logprob: -9.493228912353516
    8. ' if' → logprob: -9.743228912353516
    9. 'try' → logprob: -10.118228912353516
    10. ' manager' → logprob: -11.493228912353516

Token 944: '.allocate' (ID: 135878)
  Prédit: '.allocate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.allocate' → logprob: -8.061054359131958e-06
    2. '.' → logprob: -11.875007629394531
    3. '.alloc' → logprob: -15.250007629394531
    4. '   ' → logprob: -15.500007629394531
    5. '.acquire' → logprob: -15.750007629394531
    6. '.available' → logprob: -16.25000762939453
    7. '       ' → logprob: -16.75000762939453
    8. 'allocate' → logprob: -16.87500762939453
    9. '.all' → logprob: -17.37500762939453
    10. '.enqueue' → logprob: -17.37500762939453

Token 945: '(pid' (ID: 89422)
  Prédit: '(pid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pid' → logprob: -1.9361264946837764e-07
    2. 'pid' → logprob: -16.125
    3. '(' → logprob: -18.125
    4. '(pi' → logprob: -19.25
    5. '(
' → logprob: -20.75
    6. '(proc' → logprob: -21.375
    7. '((' → logprob: -21.75
    8. ' pid' → logprob: -21.875
    9. '(p' → logprob: -22.25
    10. '(uid' → logprob: -22.25

Token 946: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024596223374828696
    2. ',r' → logprob: -8.375246047973633
    3. ' ,' → logprob: -11.125246047973633
    4. '   ' → logprob: -15.375246047973633
    5. ',
' → logprob: -16.375246047973633
    6. ',p' → logprob: -16.375246047973633
    7. '(r' → logprob: -16.750246047973633
    8. ' rid' → logprob: -17.125246047973633
    9. ',R' → logprob: -17.250246047973633
    10. '           ' → logprob: -17.250246047973633

Token 947: ' rid' (ID: 12566)
  Prédit: 'rid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rid' → logprob: -0.009773324243724346
    2. ' rid' → logprob: -4.634773254394531
    3. 'r' → logprob: -11.634773254394531
    4. 'rig' → logprob: -12.509773254394531
    5. 'ridge' → logprob: -13.634773254394531
    6. 'Rid' → logprob: -14.009773254394531
    7. ' ' → logprob: -15.009773254394531
    8. 'ri' → logprob: -15.259773254394531
    9. 'id' → logprob: -15.259773254394531
    10. 'rd' → logprob: -15.259773254394531

Token 948: ')

' (ID: 1029)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22475452721118927
    2. ')
' → logprob: -2.224754571914673
    3. '
' → logprob: -2.724754571914673
    4. ')' → logprob: -3.599754571914673
    5. '            
' → logprob: -9.099754333496094
    6. '
' → logprob: -9.349754333496094
    7. ')

' → logprob: -10.224754333496094
    8. ')
' → logprob: -10.474754333496094
    9. ',' → logprob: -11.224754333496094
    10. '          ' → logprob: -12.474754333496094

Token 949: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002479886752553284
    2. 'if' → logprob: -8.500247955322266
    3. '       ' → logprob: -10.500247955322266
    4. ' if' → logprob: -11.750247955322266
    5. '
' → logprob: -12.125247955322266
    6. '            
' → logprob: -13.375247955322266
    7. '          ' → logprob: -14.000247955322266
    8. '   ' → logprob: -14.500247955322266
    9. '               ' → logprob: -15.625247955322266
    10. '```' → logprob: -15.875247955322266

Token 950: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03218955919146538
    2. 'while' → logprob: -3.9071896076202393
    3. '           ' → logprob: -4.53218936920166
    4. '#' (adapté à ' #') → logprob: -7.53218936920166
    5. 'for' → logprob: -8.53218936920166
    6. '       ' → logprob: -10.15718936920166
    7. ' if' → logprob: -10.78218936920166
    8. '   ' → logprob: -11.15718936920166
    9. 'finished' → logprob: -12.53218936920166
    10. 'safe' → logprob: -12.65718936920166

Token 951: ' After' (ID: 6311)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03334828093647957
    2. '           ' → logprob: -3.533348321914673
    3. ' if' → logprob: -5.658348083496094
    4. '       ' → logprob: -9.658348083496094
    5. '#' → logprob: -10.658348083496094
    6. '   ' → logprob: -12.283348083496094
    7. '
' → logprob: -12.408348083496094
    8. 'safe' → logprob: -13.658348083496094
    9. 'dead' → logprob: -14.158348083496094
    10. '            
' → logprob: -14.408348083496094

Token 952: ' allocation' (ID: 45311)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.4870346188545227
    2. 'allocation' → logprob: -0.9870346188545227
    3. ' each' → logprob: -4.737034797668457
    4. '           ' → logprob: -5.862034797668457
    5. ' allocation' → logprob: -7.362034797668457
    6. 'the' → logprob: -8.237034797668457
    7. 'alloc' → logprob: -8.862034797668457
    8. 'allocate' → logprob: -8.987034797668457
    9. 'this' → logprob: -10.612034797668457
    10. 'that' → logprob: -11.237034797668457

Token 953: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015285481931641698
    2. ',' → logprob: -6.501528739929199
    3. '       ' → logprob: -11.2515287399292
    4. ' if' → logprob: -12.1265287399292
    5. 'if' → logprob: -12.3765287399292
    6. '   ' → logprob: -14.1265287399292
    7. '<|end|>' → logprob: -14.2515287399292
    8. '               ' → logprob: -15.1265287399292
    9. '          ' → logprob: -15.2515287399292
    10. '
' → logprob: -15.2515287399292

Token 954: ' we' (ID: 581)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2116626650094986
    2. '           ' → logprob: -1.7116626501083374
    3. ' if' → logprob: -4.586662769317627
    4. '       ' → logprob: -12.461662292480469
    5. '   ' → logprob: -13.336662292480469
    6. '            
' → logprob: -13.711662292480469
    7. '#' → logprob: -13.836662292480469
    8. '          ' → logprob: -14.586662292480469
    9. '               ' → logprob: -14.711662292480469
    10. ' ' → logprob: -14.961662292480469

Token 955: ' try' (ID: 2075)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1316055804491043
    2. ' if' → logprob: -2.506605625152588
    3. 'if' → logprob: -3.381605625152588
    4. '       ' → logprob: -6.381605625152588
    5. ' try' → logprob: -6.631605625152588
    6. ' can' → logprob: -6.756605625152588
    7. 'try' → logprob: -7.006605625152588
    8. '   ' → logprob: -7.506605625152588
    9. ' check' → logprob: -8.25660514831543
    10. '            
' → logprob: -8.38160514831543

Token 956: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5759114623069763
    2. 'to' → logprob: -1.075911521911621
    3. '           ' → logprob: -2.950911521911621
    4. '               ' → logprob: -3.700911521911621
    5. ' to' → logprob: -4.700911521911621
    6. '_finish' → logprob: -5.450911521911621
    7. 'finish' → logprob: -5.575911521911621
    8. ':
' → logprob: -6.200911521911621
    9. '   ' → logprob: -8.825911521911621
    10. '       ' → logprob: -9.700911521911621

Token 957: ' finish' (ID: 9115)
  Prédit: 'detect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'detect' → logprob: -0.7974241375923157
    2. 'check' → logprob: -1.172424077987671
    3. 'if' → logprob: -2.297424077987671
    4. 'release' → logprob: -3.172424077987671
    5. 'see' → logprob: -3.797424077987671
    6. ' check' → logprob: -3.797424077987671
    7. ' detect' → logprob: -4.67242431640625
    8. ' see' → logprob: -5.17242431640625
    9. 'avoid' → logprob: -5.29742431640625
    10. '           ' → logprob: -5.29742431640625

Token 958: ' any' (ID: 1062)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22835379838943481
    2. 'all' → logprob: -2.47835373878479
    3. 'for' → logprob: -3.10335373878479
    4. ' all' → logprob: -3.72835373878479
    5. ' for' → logprob: -3.85335373878479
    6. ' processes' → logprob: -4.353353977203369
    7. 'process' → logprob: -4.728353977203369
    8. ' any' → logprob: -5.603353977203369
    9. '       ' → logprob: -6.603353977203369
    10. 'any' → logprob: -7.478353977203369

Token 959: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.17503421008586884
    2. ' process' → logprob: -2.800034284591675
    3. ' processes' → logprob: -2.925034284591675
    4. 'finished' → logprob: -3.550034284591675
    5. '           ' → logprob: -5.050034046173096
    6. 'processable' → logprob: -5.925034046173096
    7. 'possible' → logprob: -6.425034046173096
    8. ' finished' → logprob: -6.800034046173096
    9. '       ' → logprob: -7.050034046173096
    10. 'True' → logprob: -7.300034046173096

Token 960: ' that' (ID: 484)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019662656995933503
    2. ',' → logprob: -9.50019645690918
    3. ' for' → logprob: -9.62519645690918
    4. '<|end|>' → logprob: -10.62519645690918
    5. ' that' → logprob: -11.75019645690918
    6. '            
' → logprob: -12.25019645690918
    7. 'for' → logprob: -12.37519645690918
    8. ' with' → logprob: -12.62519645690918
    9. '       ' → logprob: -13.12519645690918
    10. '.' → logprob: -13.12519645690918

Token 961: ' can' (ID: 665)
  Prédit: 'manager'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'manager' → logprob: -0.8359655737876892
    2. 'can' → logprob: -1.335965633392334
    3. ' can' → logprob: -1.710965633392334
    4. ' finishes' → logprob: -3.335965633392334
    5. 'proc' → logprob: -3.710965633392334
    6. 'finished' → logprob: -4.585965633392334
    7. ' might' → logprob: -4.835965633392334
    8. 'might' → logprob: -4.835965633392334
    9. ' manager' → logprob: -5.085965633392334
    10. 'for' → logprob: -5.085965633392334

Token 962: ' finish' (ID: 9115)
  Prédit: 'finish'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finish' → logprob: -0.47108861804008484
    2. 'be' → logprob: -1.5960886478424072
    3. ' be' → logprob: -2.4710886478424072
    4. '           ' → logprob: -3.0960886478424072
    5. '               ' → logprob: -3.8460886478424072
    6. '   ' → logprob: -4.846088409423828
    7. '```' → logprob: -5.596088409423828
    8. ' finish' → logprob: -5.721088409423828
    9. '       ' → logprob: -5.846088409423828
    10. '_finish' → logprob: -6.846088409423828

Token 963: ' now' (ID: 1954)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000977075076662004
    2. '
' → logprob: -7.000977039337158
    3. ' for' → logprob: -10.875977516174316
    4. '            
' → logprob: -10.875977516174316
    5. ',' → logprob: -11.375977516174316
    6. 'for' → logprob: -12.500977516174316
    7. ' while' → logprob: -13.000977516174316
    8. '       ' → logprob: -13.000977516174316
    9. 'while' → logprob: -13.125977516174316
    10. '()
' → logprob: -14.250977516174316

Token 964: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006042915862053633
    2. '
' → logprob: -5.131042957305908
    3. '            
' → logprob: -10.00604248046875
    4. '       ' → logprob: -10.63104248046875
    5. ',' → logprob: -11.38104248046875
    6. '    
' → logprob: -11.88104248046875
    7. '<|end|>' → logprob: -12.13104248046875
    8. ' for' → logprob: -12.50604248046875
    9. '```' → logprob: -12.63104248046875
    10. '   ' → logprob: -13.00604248046875

Token 965: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005261152982711792
    2. '
' → logprob: -5.255260944366455
    3. '       ' → logprob: -11.130261421203613
    4. '            
' → logprob: -11.880261421203613
    5. '```' → logprob: -13.880261421203613
    6. '<|end|>' → logprob: -14.130261421203613
    7. '  
' → logprob: -14.380261421203613
    8. '    
' → logprob: -14.380261421203613
    9. '
' → logprob: -14.505261421203613
    10. ' for' → logprob: -14.630261421203613

Token 966: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3842519521713257
    2. 'while' → logprob: -1.5092519521713257
    3. 'for' → logprob: -3.1342520713806152
    4. 'finished' → logprob: -3.2592520713806152
    5. 'done' → logprob: -5.134252071380615
    6. 'changed' → logprob: -5.634252071380615
    7. '       ' → logprob: -5.759252071380615
    8. ' while' → logprob: -7.009252071380615
    9. '   ' → logprob: -7.009252071380615
    10. ' for' → logprob: -8.009251594543457

Token 967: ' keeps' (ID: 18295)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023707067593932152
    2. 'for' → logprob: -4.398706912994385
    3. 'while' → logprob: -5.398706912994385
    4. ' for' → logprob: -5.898706912994385
    5. 'finished' → logprob: -6.273706912994385
    6. '       ' → logprob: -6.773706912994385
    7. ' while' → logprob: -8.023707389831543
    8. 'done' → logprob: -8.523707389831543
    9. ' finished' → logprob: -9.273707389831543
    10. '   ' → logprob: -9.523707389831543

Token 968: ' releasing' (ID: 52057)
  Prédit: 'trying'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trying' → logprob: -0.7547605037689209
    2. 'checking' → logprob: -1.129760503768921
    3. 'fin' → logprob: -2.504760503768921
    4. 'alloc' → logprob: -3.129760503768921
    5. ' trying' → logprob: -4.0047607421875
    6. ' looping' → logprob: -4.8797607421875
    7. 'running' → logprob: -4.8797607421875
    8. '   ' → logprob: -5.0047607421875
    9. 'doing' → logprob: -5.2547607421875
    10. ' finishing' → logprob: -5.2547607421875

Token 969: ' resources' (ID: 7416)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7848591804504395
    2. 'all' → logprob: -0.7848591804504395
    3. '_all' → logprob: -4.0348591804504395
    4. '(' → logprob: -4.1598591804504395
    5. 'resources' → logprob: -4.2848591804504395
    6. '()
' → logprob: -4.2848591804504395
    7. '(
' → logprob: -4.4098591804504395
    8. '
' → logprob: -6.0348591804504395
    9. '(pid' → logprob: -6.1598591804504395
    10. ' all' → logprob: -6.4098591804504395

Token 970: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016220176592469215
    2. ' while' → logprob: -5.0162200927734375
    3. ' for' → logprob: -5.1412200927734375
    4. '
' → logprob: -7.1412200927734375
    5. 'while' → logprob: -7.2662200927734375
    6. '               ' → logprob: -7.3912200927734375
    7. '            
' → logprob: -7.5162200927734375
    8. ',' → logprob: -8.641220092773438
    9. 'for' → logprob: -8.766220092773438
    10. '       ' → logprob: -9.391220092773438

Token 971: ' finished' (ID: 11684)
  Prédit: 'proc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'proc' → logprob: -0.11085911095142365
    2. 'process' → logprob: -3.1108591556549072
    3. 'p' → logprob: -3.6108591556549072
    4. 'i' → logprob: -4.735858917236328
    5. 'finished' → logprob: -4.735858917236328
    6. 'any' → logprob: -5.235858917236328
    7. 'pid' → logprob: -5.860858917236328
    8. ' proc' → logprob: -6.860858917236328
    9. '[i' → logprob: -6.860858917236328
    10. '   ' → logprob: -7.235858917236328

Token 972: ' processes' (ID: 14340)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.10943502187728882
    2. ' processes' → logprob: -2.4844350814819336
    3. 'proc' → logprob: -4.109435081481934
    4. 'pro' → logprob: -6.109435081481934
    5. ' process' → logprob: -6.859435081481934
    6. '   ' → logprob: -8.859435081481934
    7. ' proc' → logprob: -9.109435081481934
    8. '_process' → logprob: -9.234435081481934
    9. 'proces' → logprob: -9.734435081481934
    10. '(process' → logprob: -10.359435081481934

Token 973: ' until' (ID: 4609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2023243010044098
    2. '
' → logprob: -1.7023242712020874
    3. ' while' → logprob: -8.077323913574219
    4. '            
' → logprob: -8.702323913574219
    5. 'while' → logprob: -8.827323913574219
    6. '       ' → logprob: -8.952323913574219
    7. '    
' → logprob: -9.577323913574219
    8. '        
' → logprob: -10.452323913574219
    9. '   ' → logprob: -10.952323913574219
    10. '
' → logprob: -11.202323913574219

Token 974: ' no' (ID: 860)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.12200095504522324
    2. 'not' → logprob: -2.3720009326934814
    3. 'no' → logprob: -4.3720011711120605
    4. ' True' → logprob: -4.8720011711120605
    5. ' no' → logprob: -7.4970011711120605
    6. 'False' → logprob: -7.7470011711120605
    7. ' not' → logprob: -8.247000694274902
    8. '
' → logprob: -11.497000694274902
    9. '   ' → logprob: -11.747000694274902
    10. 'None' → logprob: -13.122000694274902

Token 975: ' new' (ID: 620)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'more' → logprob: -1.1290667057037354
    2. 'True' → logprob: -1.2540667057037354
    3. ' True' → logprob: -1.6290667057037354
    4. ' more' → logprob: -2.0040667057037354
    5. ' process' → logprob: -3.5040667057037354
    6. 'process' → logprob: -4.004066467285156
    7. ' changes' → logprob: -6.254066467285156
    8. ' new' → logprob: -6.379066467285156
    9. 'changes' → logprob: -6.504066467285156
    10. 'new' → logprob: -6.629066467285156

Token 976: ' process' (ID: 2273)
  Prédit: 'finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finished' → logprob: -0.25558826327323914
    2. 'process' → logprob: -1.8805882930755615
    3. 'finish' → logprob: -4.255588054656982
    4. '<|end|>' → logprob: -4.255588054656982
    5. '_finished' → logprob: -4.505588054656982
    6. '
' → logprob: -4.755588054656982
    7. 'fin' → logprob: -4.880588054656982
    8. ' finished' → logprob: -5.255588054656982
    9. 'processable' → logprob: -6.130588054656982
    10. ' process' → logprob: -6.255588054656982

Token 977: ' finishes' (ID: 48473)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8644139170646667
    2. 'can' → logprob: -0.9894139170646667
    3. ' finishes' → logprob: -1.7394139766693115
    4. ' is' → logprob: -4.739413738250732
    5. 'fin' → logprob: -5.239413738250732
    6. 'finished' → logprob: -5.489413738250732
    7. 'es' → logprob: -5.739413738250732
    8. 'is' → logprob: -5.864413738250732
    9. '_finished' → logprob: -6.489413738250732
    10. 's' → logprob: -6.989413738250732

Token 978: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11319644749164581
    2. '           ' → logprob: -2.23819637298584
    3. 'while' → logprob: -9.11319637298584
    4. '
' → logprob: -9.23819637298584
    5. ' while' → logprob: -9.61319637298584
    6. '            
' → logprob: -10.11319637298584
    7. '       ' → logprob: -11.11319637298584
    8. '```' → logprob: -11.23819637298584
    9. '    
' → logprob: -11.61319637298584
    10. '\n' → logprob: -11.98819637298584

Token 979: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0633019208908081
    2. '
' → logprob: -2.8133020401000977
    3. '       ' → logprob: -6.813302040100098
    4. 'while' → logprob: -8.813302040100098
    5. '```' → logprob: -10.063302040100098
    6. ' while' → logprob: -10.688302040100098
    7. '   ' → logprob: -11.563302040100098
    8. '
' → logprob: -12.188302040100098
    9. '               ' → logprob: -12.938302040100098
    10. '            
' → logprob: -13.563302040100098

Token 980: ' finished' (ID: 11684)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36810383200645447
    2. 'while' → logprob: -1.2431038618087769
    3. ' while' → logprob: -4.118103981018066
    4. '       ' → logprob: -5.993103981018066
    5. '   ' → logprob: -7.493103981018066
    6. '```' → logprob: -10.493103981018066
    7. 'done' → logprob: -10.618103981018066
    8. 'found' → logprob: -11.243103981018066
    9. '
' → logprob: -11.368103981018066
    10. 'finished' (adapté à ' finished') → logprob: -11.743103981018066

Token 981: '_this' (ID: 58125)
  Prédit: '_found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.38791072368621826
    2. '_now' → logprob: -1.8879107236862183
    3. ' =' → logprob: -2.512910842895508
    4. '_set' → logprob: -3.262910842895508
    5. '_process' → logprob: -3.887910842895508
    6. '=' → logprob: -4.762910842895508
    7. '_any' → logprob: -4.887910842895508
    8. '_' → logprob: -5.387910842895508
    9. 's' → logprob: -6.137910842895508
    10. '_to' → logprob: -6.512910842895508

Token 982: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -0.06373532116413116
    2. '=' → logprob: -4.063735485076904
    3. '_cycle' → logprob: -4.313735485076904
    4. '_time' → logprob: -4.438735485076904
    5. ' =' → logprob: -4.813735485076904
    6. '_iteration' → logprob: -5.313735485076904
    7. '_step' → logprob: -5.688735485076904
    8. '_loop' → logprob: -6.563735485076904
    9. '_pass' → logprob: -7.688735485076904
    10. 'round' → logprob: -7.938735485076904

Token 983: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048696938902139664
    2. '=' → logprob: -3.048696994781494
    3. ':' → logprob: -9.298696517944336
    4. '=True' → logprob: -11.298696517944336
    5. ' ' → logprob: -12.423696517944336
    6. '   ' → logprob: -14.048696517944336
    7. '_' → logprob: -15.298696517944336
    8. '_found' → logprob: -16.173696517944336
    9. '  ' → logprob: -16.298696517944336
    10. '=False' → logprob: -16.798696517944336

Token 984: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -9.615255839889869e-05
    2. ' True' → logprob: -9.250096321105957
    3. '[' → logprob: -18.62509536743164
    4. '{' → logprob: -18.87509536743164
    5. 'Tr' → logprob: -19.50009536743164
    6. 'true' → logprob: -19.50009536743164
    7. '   ' → logprob: -20.00009536743164
    8. '(True' → logprob: -20.87509536743164
    9. '1' → logprob: -21.12509536743164
    10. ' ' → logprob: -21.25009536743164

Token 985: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026486532762646675
    2. '
' → logprob: -3.65148663520813
    3. '       ' → logprob: -9.77648639678955
    4. 'while' → logprob: -9.77648639678955
    5. '   ' → logprob: -10.77648639678955
    6. '            
' → logprob: -11.15148639678955
    7. ' while' → logprob: -11.40148639678955
    8. '    
' → logprob: -12.15148639678955
    9. ',' → logprob: -12.27648639678955
    10. '		' → logprob: -12.27648639678955

Token 986: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0314653106033802
    2. '       ' → logprob: -3.5314652919769287
    3. 'while' → logprob: -6.531465530395508
    4. ' while' → logprob: -8.406465530395508
    5. '   ' → logprob: -11.156465530395508
    6. '
' → logprob: -11.656465530395508
    7. '               ' → logprob: -12.656465530395508
    8. '		' → logprob: -13.281465530395508
    9. '	while' → logprob: -13.406465530395508
    10. '        
' → logprob: -14.281465530395508

Token 987: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.341835081577301
    2. 'while' (adapté à ' while') → logprob: -1.3418350219726562
    3. '       ' → logprob: -3.9668350219726562
    4. ' while' → logprob: -4.716835021972656
    5. '   ' → logprob: -8.841835021972656
    6. '	while' → logprob: -9.716835021972656
    7. '               ' → logprob: -10.591835021972656
    8. '		' → logprob: -11.466835021972656
    9. '    ' → logprob: -11.591835021972656
    10. '            
' → logprob: -11.591835021972656

Token 988: ' finished' (ID: 11684)
  Prédit: 'finished'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finished' → logprob: -0.029760440811514854
    2. ' finished' → logprob: -3.5297603607177734
    3. '           ' → logprob: -12.279760360717773
    4. '   ' → logprob: -13.154760360717773
    5. '        ' → logprob: -14.279760360717773
    6. '       ' → logprob: -14.279760360717773
    7. '_finished' → logprob: -14.279760360717773
    8. '    ' → logprob: -14.404760360717773
    9. '         ' → logprob: -15.529760360717773
    10. 'fin' → logprob: -15.779760360717773

Token 989: '_this' (ID: 58125)
  Prédit: '_this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_this' → logprob: -1.981667537620524e-06
    2. 'this' → logprob: -13.875001907348633
    3. '_THIS' → logprob: -15.125001907348633
    4. '_that' → logprob: -15.125001907348633
    5. '   ' → logprob: -15.750001907348633
    6. '_here' → logprob: -16.625001907348633
    7. 'This' → logprob: -17.000001907348633
    8. ':
' → logprob: -17.125001907348633
    9. '           ' → logprob: -17.375001907348633
    10. ':' → logprob: -17.375001907348633

Token 990: '_round' (ID: 79298)
  Prédit: '_this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_this' → logprob: -0.16316747665405273
    2. '_round' → logprob: -1.9131674766540527
    3. 'round' → logprob: -6.288167476654053
    4. 'this' → logprob: -7.538167476654053
    5. 'This' → logprob: -8.788167953491211
    6. '```' → logprob: -9.288167953491211
    7. '   ' → logprob: -9.538167953491211
    8. '       ' → logprob: -10.288167953491211
    9. '           ' → logprob: -10.913167953491211
    10. 's' → logprob: -11.038167953491211

Token 991: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.057340145111083984
    2. ':' → logprob: -3.057340145111084
    3. ' and' → logprob: -4.932340145111084
    4. 'and' → logprob: -6.807340145111084
    5. '           ' → logprob: -8.057340621948242
    6. '):
' → logprob: -10.682340621948242
    7. ':

' → logprob: -11.182340621948242
    8. ' :
' → logprob: -11.432340621948242
    9. '               ' → logprob: -11.557340621948242
    10. '=' → logprob: -11.932340621948242

Token 992: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00032151900813914835
    2. '           ' → logprob: -8.250321388244629
    3. '
' → logprob: -10.375321388244629
    4. '   ' → logprob: -11.750321388244629
    5. '                   ' → logprob: -12.000321388244629
    6. 'finished' → logprob: -12.625321388244629
    7. '       ' → logprob: -13.000321388244629
    8. '	           ' → logprob: -13.375321388244629
    9. '                
' → logprob: -13.625321388244629
    10. '			' → logprob: -13.750321388244629

Token 993: ' finished' (ID: 11684)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.34196847677230835
    2. 'finished' (adapté à ' finished') → logprob: -1.3419685363769531
    3. '           ' → logprob: -4.091968536376953
    4. ' finished' → logprob: -4.591968536376953
    5. '   ' → logprob: -6.841968536376953
    6. '                   ' → logprob: -8.216968536376953
    7. '       ' → logprob: -9.716968536376953
    8. '_finished' → logprob: -10.216968536376953
    9. '
' → logprob: -11.966968536376953
    10. '.finished' → logprob: -12.341968536376953

Token 994: '_this' (ID: 58125)
  Prédit: '_this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_this' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.375000953674316
    3. '_that' → logprob: -15.875000953674316
    4. '_process' → logprob: -16.25
    5. '_THIS' → logprob: -16.5
    6. 'this' → logprob: -16.875
    7. '_here' → logprob: -17.125
    8. '_th' → logprob: -18.0
    9. '_now' → logprob: -18.625
    10. '   ' → logprob: -18.75

Token 995: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -0.03008658066391945
    2. '_this' → logprob: -3.5300865173339844
    3. 'round' → logprob: -8.780086517333984
    4. '_' → logprob: -8.905086517333984
    5. '_finished' → logprob: -11.655086517333984
    6. '```' → logprob: -11.780086517333984
    7. 'this' → logprob: -12.280086517333984
    8. 'This' → logprob: -12.530086517333984
    9. '   ' → logprob: -12.655086517333984
    10. '=' → logprob: -12.655086517333984

Token 996: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759509205818176
    2. '=' → logprob: -0.8259509205818176
    3. '=False' → logprob: -11.825950622558594
    4. '   ' → logprob: -13.575950622558594
    5. '       ' → logprob: -14.200950622558594
    6. '           ' → logprob: -14.325950622558594
    7. ':' → logprob: -14.825950622558594
    8. ' ' → logprob: -14.950950622558594
    9. '=True' → logprob: -14.950950622558594
    10. ',' → logprob: -15.575950622558594

Token 997: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.000158842682139948
    2. ' False' → logprob: -8.75015926361084
    3. 'True' → logprob: -14.75015926361084
    4. 'false' → logprob: -18.000158309936523
    5. '   ' → logprob: -19.125158309936523
    6. 'any' → logprob: -20.625158309936523
    7. '(False' → logprob: -20.750158309936523
    8. 'manager' → logprob: -21.625158309936523
    9. '  ' → logprob: -21.750158309936523
    10. '0' → logprob: -21.875158309936523

Token 998: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47511783242225647
    2. '               ' → logprob: -0.9751178026199341
    3. '       ' → logprob: -7.8501176834106445
    4. 'for' → logprob: -8.350117683410645
    5. '
' → logprob: -8.475117683410645
    6. ' for' → logprob: -8.975117683410645
    7. '                   ' → logprob: -10.225117683410645
    8. '   ' → logprob: -11.225117683410645
    9. ',' → logprob: -11.350117683410645
    10. '            
' → logprob: -12.725117683410645

Token 999: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015178798697888851
    2. '               ' → logprob: -4.265178680419922
    3. '       ' → logprob: -7.015178680419922
    4. 'for' → logprob: -9.265178680419922
    5. ' for' → logprob: -11.640178680419922
    6. '
' → logprob: -11.890178680419922
    7. '   ' → logprob: -12.640178680419922
    8. '                   ' → logprob: -13.765178680419922
    9. '          ' → logprob: -14.765178680419922
    10. ',' → logprob: -15.140178680419922

Token 1000: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.17242586612701416
    2. '           ' → logprob: -1.9224258661270142
    3. '               ' → logprob: -4.422425746917725
    4. '       ' → logprob: -9.672426223754883
    5. ' for' → logprob: -9.797426223754883
    6. '   ' → logprob: -12.672426223754883
    7. '                   ' → logprob: -15.547426223754883
    8. '          ' → logprob: -15.797426223754883
    9. '	for' → logprob: -16.422426223754883
    10. '         ' → logprob: -16.422426223754883

Token 1001: ' proc' (ID: 14550)
  Prédit: 'proc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proc' → logprob: -0.044904328882694244
    2. ' proc' → logprob: -3.1699042320251465
    3. 'i' → logprob: -6.9199042320251465
    4. ' i' → logprob: -8.419904708862305
    5. '               ' → logprob: -8.419904708862305
    6. 'p' → logprob: -8.544904708862305
    7. 'process' → logprob: -8.794904708862305
    8. '                   ' → logprob: -10.044904708862305
    9. 'pid' → logprob: -10.544904708862305
    10. ' p' → logprob: -10.919904708862305

Token 1002: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023256894201040268
    2. 'in' → logprob: -3.773256778717041
    3. '	in' → logprob: -11.7732572555542
    4. '               ' → logprob: -13.8982572555542
    5. '           ' → logprob: -15.1482572555542
    6. 'import' → logprob: -15.2732572555542
    7. '       ' → logprob: -15.6482572555542
    8. 'index' → logprob: -15.6482572555542
    9. '                   ' → logprob: -15.6482572555542
    10. '   ' → logprob: -15.7732572555542

Token 1003: ' manager' (ID: 10470)
  Prédit: 'manager'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'manager' → logprob: -0.00020377879263833165
    2. ' manager' → logprob: -8.500204086303711
    3. '(manager' → logprob: -16.50020408630371
    4. '   ' → logprob: -17.12520408630371
    5. '           ' → logprob: -17.75020408630371
    6. '	manager' → logprob: -18.12520408630371
    7. '       ' → logprob: -19.87520408630371
    8. 'mgr' → logprob: -20.37520408630371
    9. 'man' → logprob: -20.50020408630371
    10. '.manager' → logprob: -21.00020408630371

Token 1004: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -1.688212614681106e-05
    2. 'process' → logprob: -11.000017166137695
    3. '.pro' → logprob: -16.500017166137695
    4. ' .' → logprob: -17.250017166137695
    5. '   ' → logprob: -18.750017166137695
    6. '	process' → logprob: -18.875017166137695
    7. '(process' → logprob: -18.875017166137695
    8. '.processing' → logprob: -19.375017166137695
    9. '```' → logprob: -19.750017166137695
    10. 'rocess' → logprob: -19.875017166137695

Token 1005: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.0012021353468298912
    2. 's' → logprob: -6.75120210647583
    3. 'ses' → logprob: -11.251202583312988
    4. 'esses' → logprob: -11.876202583312988
    5. 'ess' → logprob: -12.626202583312988
    6. 'eses' → logprob: -12.626202583312988
    7. 'sses' → logprob: -13.501202583312988
    8. '   ' → logprob: -13.751202583312988
    9. '```' → logprob: -14.626202583312988
    10. 'process' → logprob: -14.751202583312988

Token 1006: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.043937623500823975
    2. ':' → logprob: -3.2939376831054688
    3. '                   ' → logprob: -5.168937683105469
    4. '               ' → logprob: -9.168937683105469
    5. '):
' → logprob: -10.668937683105469
    6. ':
' → logprob: -10.793937683105469
    7. '           ' → logprob: -11.043937683105469
    8. '():
' → logprob: -11.168937683105469
    9. ':

' → logprob: -13.043937683105469
    10. ' :
' → logprob: -13.293937683105469

Token 1007: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013697614194825292
    2. '               ' → logprob: -7.126369953155518
    3. '           ' → logprob: -7.501369953155518
    4. '                       ' → logprob: -12.12636947631836
    5. '		           ' → logprob: -13.25136947631836
    6. ' if' → logprob: -13.62636947631836
    7. 'if' → logprob: -13.75136947631836
    8. '       ' → logprob: -14.25136947631836
    9. '   ' → logprob: -14.37636947631836
    10. '                  ' → logprob: -14.50136947631836

Token 1008: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2264789640903473
    2. '                   ' → logprob: -2.2264790534973145
    3. ' if' → logprob: -2.7264790534973145
    4. '                       ' → logprob: -3.9764790534973145
    5. '               ' → logprob: -4.6014790534973145
    6. '           ' → logprob: -8.101478576660156
    7. '       ' → logprob: -9.476478576660156
    8. '   ' → logprob: -9.476478576660156
    9. '	               ' → logprob: -10.976478576660156
    10. '	if' → logprob: -11.476478576660156

Token 1009: ' proc' (ID: 14550)
  Prédit: 'proc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'proc' → logprob: -0.000789259618613869
    2. 'not' → logprob: -7.875789165496826
    3. ' proc' → logprob: -8.250789642333984
    4. '   ' → logprob: -9.500789642333984
    5. '                   ' → logprob: -10.000789642333984
    6. ' not' → logprob: -11.250789642333984
    7. '(proc' → logprob: -12.250789642333984
    8. '               ' → logprob: -12.625789642333984
    9. '                       ' → logprob: -13.000789642333984
    10. '           ' → logprob: -13.250789642333984

Token 1010: '.try' (ID: 85688)
  Prédit: '.try'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.try' → logprob: -0.010925677604973316
    2. '.' → logprob: -4.635925769805908
    3. '.is' → logprob: -6.885925769805908
    4. 'try' → logprob: -9.38592529296875
    5. '   ' → logprob: -10.63592529296875
    6. ' .' → logprob: -11.88592529296875
    7. '.finish' → logprob: -11.88592529296875
    8. '.finished' → logprob: -12.13592529296875
    9. '.Try' → logprob: -12.26092529296875
    10. '.can' → logprob: -12.88592529296875

Token 1011: '_finish' (ID: 109520)
  Prédit: '_finish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_finish' → logprob: -0.00014239625306800008
    2. 'finish' → logprob: -8.875142097473145
    3. '_' → logprob: -13.625142097473145
    4. '_finalize' → logprob: -14.875142097473145
    5. '_fin' → logprob: -16.12514305114746
    6. '   ' → logprob: -16.12514305114746
    7. '```' → logprob: -16.37514305114746
    8. '_f' → logprob: -16.37514305114746
    9. '_continue' → logprob: -16.37514305114746
    10. '_finished' → logprob: -16.75014305114746

Token 1012: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.006734318565577269
    2. '():
' → logprob: -5.006734371185303
    3. '()' → logprob: -11.006733894348145
    4. '():
' → logprob: -13.506733894348145
    5. ' ():' → logprob: -14.256733894348145
    6. '():

' → logprob: -15.256733894348145
    7. '()==' → logprob: -15.881733894348145
    8. '()):
' → logprob: -18.88173484802246
    9. '()>' → logprob: -19.13173484802246
    10. '();' → logprob: -19.25673484802246

Token 1013: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -4.191489642835222e-05
    2. '```' → logprob: -10.750041961669922
    3. '                   ' → logprob: -11.375041961669922
    4. '                      ' → logprob: -13.000041961669922
    5. '                           ' → logprob: -13.500041961669922
    6. 'self' → logprob: -14.000041961669922
    7. '#' → logprob: -14.500041961669922
    8. ',' → logprob: -14.625041961669922
    9. '               ' → logprob: -14.750041961669922
    10. ':' → logprob: -14.875041961669922

Token 1014: ' #' (ID: 1069)
  Prédit: 'manager'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'manager' → logprob: -0.01447033230215311
    2. '                           ' → logprob: -4.264470100402832
    3. ' manager' → logprob: -9.139470100402832
    4. 'for' → logprob: -9.639470100402832
    5. '   ' → logprob: -10.014470100402832
    6. '                       ' → logprob: -10.264470100402832
    7. '                               ' → logprob: -10.889470100402832
    8. '           ' → logprob: -11.389470100402832
    9. 'self' → logprob: -12.014470100402832
    10. '                   ' → logprob: -12.264470100402832

Token 1015: ' release' (ID: 8232)
  Prédit: 'manager'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'manager' → logprob: -0.0003622793301474303
    2. '                       ' → logprob: -8.375362396240234
    3. '                           ' → logprob: -9.500362396240234
    4. ' manager' → logprob: -10.000362396240234
    5. 'for' → logprob: -12.125362396240234
    6. 'self' → logprob: -13.125362396240234
    7. '                   ' → logprob: -13.750362396240234
    8. '           ' → logprob: -13.875362396240234
    9. '                               ' → logprob: -14.375362396240234
    10. '               ' → logprob: -14.750362396240234

Token 1016: ' resources' (ID: 7416)
  Prédit: '_all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.009016684256494045
    2. 'all' → logprob: -5.009016513824463
    3. '                       ' → logprob: -6.884016513824463
    4. '_resources' → logprob: -7.509016513824463
    5. 'All' → logprob: -8.259016990661621
    6. 'resources' → logprob: -9.009016990661621
    7. 'manager' → logprob: -9.509016990661621
    8. '                           ' → logprob: -9.634016990661621
    9. 'for' → logprob: -10.134016990661621
    10. '                   ' → logprob: -10.384016990661621

Token 1017: '
' (ID: 198)
  Prédit: '(pid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pid' → logprob: -0.7748862504959106
    2. '                       ' → logprob: -1.2748862504959106
    3. '(manager' → logprob: -1.7748862504959106
    4. '                           ' → logprob: -2.899886131286621
    5. '(' → logprob: -4.149886131286621
    6. 'for' → logprob: -5.149886131286621
    7. '(proc' → logprob: -5.524886131286621
    8. '```' → logprob: -6.274886131286621
    9. 'manager' → logprob: -6.399886131286621
    10. '           ' → logprob: -6.774886131286621

Token 1018: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007169028278440237
    2. '(manager' → logprob: -6.132169246673584
    3. '()' → logprob: -6.382169246673584
    4. '                           ' → logprob: -7.007169246673584
    5. '(' → logprob: -7.257169246673584
    6. 'for' → logprob: -7.632169246673584
    7. '()
' → logprob: -8.007168769836426
    8. '                   ' → logprob: -8.757168769836426
    9. '           ' → logprob: -9.007168769836426
    10. '       ' → logprob: -9.132168769836426

Token 1019: ' manager' (ID: 10470)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6314539313316345
    2. '                       ' → logprob: -0.8814539313316345
    3. 'manager' (adapté à ' manager') → logprob: -3.6314539909362793
    4. '                           ' → logprob: -3.7564539909362793
    5. '           ' → logprob: -6.256453990936279
    6. '   ' → logprob: -7.131453990936279
    7. ' self' → logprob: -7.631453990936279
    8. '                   ' → logprob: -8.131453514099121
    9. '               ' → logprob: -8.631453514099121
    10. '       ' → logprob: -8.756453514099121

Token 1020: '.release' (ID: 50070)
  Prédit: '.release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.release' → logprob: -0.0008072483469732106
    2. 'release' → logprob: -7.125807285308838
    3. '                       ' → logprob: -13.87580680847168
    4. '                   ' → logprob: -14.25080680847168
    5. '.' → logprob: -15.00080680847168
    6. '   ' → logprob: -15.37580680847168
    7. ' release' → logprob: -15.62580680847168
    8. '           ' → logprob: -16.25080680847168
    9. '```' → logprob: -16.25080680847168
    10. ' .' → logprob: -16.62580680847168

Token 1021: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -3.6312321753939614e-05
    2. '(proc' → logprob: -10.875036239624023
    3. 'all' → logprob: -11.375036239624023
    4. 'All' → logprob: -12.250036239624023
    5. 'proc' → logprob: -13.875036239624023
    6. '```' → logprob: -17.125036239624023
    7. '(' → logprob: -17.750036239624023
    8. '_ALL' → logprob: -18.000036239624023
    9. '(pid' → logprob: -18.375036239624023
    10. 's' → logprob: -18.375036239624023

Token 1022: '(proc' (ID: 143689)
  Prédit: '(proc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(proc' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.875004768371582
    3. 'proc' → logprob: -13.500004768371582
    4. '(
' → logprob: -15.750004768371582
    5. '(pid' → logprob: -16.000003814697266
    6. '(prod' → logprob: -16.000003814697266
    7. ' (' → logprob: -17.250003814697266
    8. '(pro' → logprob: -18.125003814697266
    9. '```' → logprob: -18.250003814697266
    10. '((' → logprob: -18.625003814697266

Token 1023: '.pid' (ID: 96157)
  Prédit: '.pid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pid' → logprob: -0.00036144492332823575
    2. '.proc' → logprob: -8.000361442565918
    3. '.' → logprob: -11.000361442565918
    4. ').' → logprob: -12.500361442565918
    5. '(pid' → logprob: -13.250361442565918
    6. '.p' → logprob: -14.250361442565918
    7. 'pid' → logprob: -14.250361442565918
    8. '   ' → logprob: -14.375361442565918
    9. '.uid' → logprob: -14.875361442565918
    10. ' .' → logprob: -15.000361442565918

Token 1024: ')
' (ID: 446)
  Prédit: '(proc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(proc' → logprob: -0.00039111197111196816
    2. ')' → logprob: -8.000391006469727
    3. '(' → logprob: -10.000391006469727
    4. '()' → logprob: -12.250391006469727
    5. '```' → logprob: -13.500391006469727
    6. '())' → logprob: -13.875391006469727
    7. '(pid' → logprob: -14.125391006469727
    8. 'proc' → logprob: -14.250391006469727
    9. ')
' → logprob: -15.250391006469727
    10. ' (' → logprob: -15.500391006469727

Token 1025: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -8.41129949549213e-05
    2. '                        
' → logprob: -9.875083923339844
    3. '```' → logprob: -11.625083923339844
    4. '           ' → logprob: -12.000083923339844
    5. '<|end|>' → logprob: -12.625083923339844
    6. '               ' → logprob: -12.625083923339844
    7. '                   ' → logprob: -12.875083923339844
    8. '                           ' → logprob: -12.875083923339844
    9. '                        ' → logprob: -13.250083923339844
    10. '       ' → logprob: -13.750083923339844

Token 1026: ' finished' (ID: 11684)
  Prédit: 'finished'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finished' (adapté à ' finished') → logprob: -0.09806638956069946
    2. '                       ' → logprob: -2.8480663299560547
    3. ' finished' → logprob: -3.3480663299560547
    4. '                           ' → logprob: -9.348066329956055
    5. 'finish' → logprob: -9.473066329956055
    6. '                   ' → logprob: -9.848066329956055
    7. '               ' → logprob: -10.223066329956055
    8. '           ' → logprob: -10.848066329956055
    9. '                               ' → logprob: -11.348066329956055
    10. '       ' → logprob: -11.473066329956055

Token 1027: '_this' (ID: 58125)
  Prédit: '_this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_this' → logprob: 0.0
    2. 'this' → logprob: -17.25
    3. '_that' → logprob: -18.0
    4. '_THIS' → logprob: -18.25
    5. 'This' → logprob: -19.5
    6. '_here' → logprob: -22.625
    7. '_each' → logprob: -22.75
    8. '-this' → logprob: -23.25
    9. '.this' → logprob: -23.375
    10. '_the' → logprob: -23.625

Token 1028: '_round' (ID: 79298)
  Prédit: '_round'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_round' → logprob: -0.10075036436319351
    2. '_this' → logprob: -2.35075044631958
    3. 'round' → logprob: -7.60075044631958
    4. '_turn' → logprob: -11.100749969482422
    5. 'this' → logprob: -11.600749969482422
    6. 'This' → logprob: -12.225749969482422
    7. '```' → logprob: -12.350749969482422
    8. '_th' → logprob: -12.975749969482422
    9. '_that' → logprob: -13.475749969482422
    10. '   ' → logprob: -14.350749969482422

Token 1029: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029770735651254654
    2. ' =' → logprob: -3.529770851135254
    3. '                   ' → logprob: -11.654770851135254
    4. '                       ' → logprob: -12.029770851135254
    5. '=True' → logprob: -12.279770851135254
    6. '                        ' → logprob: -15.404770851135254
    7. '               ' → logprob: -15.529770851135254
    8. '                    ' → logprob: -15.654770851135254
    9. '                           ' → logprob: -15.654770851135254
    10. '   ' → logprob: -16.279769897460938

Token 1030: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.941850526549388e-06
    2. ' True' → logprob: -11.750007629394531
    3. '                       ' → logprob: -18.87500762939453
    4. '   ' → logprob: -19.12500762939453
    5. 'true' → logprob: -19.50000762939453
    6. '(True' → logprob: -19.75000762939453
    7. '=True' → logprob: -21.12500762939453
    8. '                   ' → logprob: -21.37500762939453
    9. '                           ' → logprob: -21.50000762939453
    10. '               ' → logprob: -22.25000762939453

Token 1031: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1795486956834793
    2. '<|end|>' → logprob: -2.304548740386963
    3. '           ' → logprob: -2.804548740386963
    4. '       ' → logprob: -6.054548740386963
    5. '<|end|>' → logprob: -7.929548740386963
    6. '
' → logprob: -8.304548263549805
    7. '               ' → logprob: -8.679548263549805
    8. '        
' → logprob: -8.929548263549805
    9. '```' → logprob: -9.179548263549805
    10. '                        
' → logprob: -9.429548263549805

Token 1032: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34955644607543945
    2. '
' → logprob: -1.2245564460754395
    3. '            
' → logprob: -7.0995564460754395
    4. '        
' → logprob: -8.724555969238281
    5. '       ' → logprob: -10.099555969238281
    6. '<|end|>' → logprob: -10.974555969238281
    7. '    
' → logprob: -11.224555969238281
    8. '          ' → logprob: -11.349555969238281
    9. '
' → logprob: -11.349555969238281
    10. '                        
' → logprob: -12.349555969238281

Token 1033: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16308321058750153
    2. 'if' → logprob: -1.9130831956863403
    3. '
' → logprob: -5.913083076477051
    4. '#' (adapté à ' #') → logprob: -9.78808307647705
    5. '            
' → logprob: -9.78808307647705
    6. '       ' → logprob: -11.16308307647705
    7. ' if' → logprob: -12.03808307647705
    8. 'is' → logprob: -12.41308307647705
    9. '   ' → logprob: -12.66308307647705
    10. 'return' → logprob: -12.91308307647705

Token 1034: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.038621433079242706
    2. '           ' → logprob: -3.288621425628662
    3. ' if' → logprob: -8.03862190246582
    4. '#' → logprob: -8.78862190246582
    5. '       ' → logprob: -10.03862190246582
    6. '   ' → logprob: -11.03862190246582
    7. 'If' → logprob: -11.28862190246582
    8. '
' → logprob: -11.53862190246582
    9. 'safe' → logprob: -11.91362190246582
    10. 'dead' → logprob: -12.16362190246582

Token 1035: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6682476997375488
    2. '           ' → logprob: -1.4182476997375488
    3. 'if' → logprob: -1.4182476997375488
    4. ' dead' → logprob: -6.293247699737549
    5. '       ' → logprob: -7.793247699737549
    6. '_dead' → logprob: -8.29324722290039
    7. ' for' → logprob: -8.41824722290039
    8. 'dead' → logprob: -8.41824722290039
    9. 'for' → logprob: -9.04324722290039
    10. '               ' → logprob: -10.66824722290039

Token 1036: ' dead' (ID: 9224)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.04974984750151634
    2. ' not' → logprob: -3.0497498512268066
    3. 'manager' → logprob: -7.049749851226807
    4. '           ' → logprob: -8.549749374389648
    5. ' manager' → logprob: -9.549749374389648
    6. '       ' → logprob: -11.549749374389648
    7. '
' → logprob: -11.674749374389648
    8. '   ' → logprob: -11.799749374389648
    9. '               ' → logprob: -12.924749374389648
    10. '(not' → logprob: -14.299749374389648

Token 1037: 'lock' (ID: 2802)
  Prédit: 'lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.004318199120461941
    2. 'locked' → logprob: -5.6293182373046875
    3. '       ' → logprob: -8.504318237304688
    4. '   ' → logprob: -8.504318237304688
    5. '           ' → logprob: -9.129318237304688
    6. 'l' → logprob: -9.129318237304688
    7. 'locks' → logprob: -10.379318237304688
    8. '_lock' → logprob: -10.629318237304688
    9. ' lock' → logprob: -11.254318237304688
    10. '               ' → logprob: -11.504318237304688

Token 1038: ' unavoidable' (ID: 160714)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016985106049105525
    2. ' if' → logprob: -7.0016984939575195
    3. ',' → logprob: -8.62669849395752
    4. '       ' → logprob: -8.87669849395752
    5. ':' → logprob: -9.00169849395752
    6. ' occurs' → logprob: -9.37669849395752
    7. ' happens' → logprob: -9.50169849395752
    8. ' is' → logprob: -9.62669849395752
    9. '               ' → logprob: -10.62669849395752
    10. ' and' → logprob: -11.25169849395752

Token 1039: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005984273157082498
    2. ' if' → logprob: -8.000597953796387
    3. ',' → logprob: -9.125597953796387
    4. '<|end|>' → logprob: -9.875597953796387
    5. '            
' → logprob: -10.250597953796387
    6. '
' → logprob: -10.625597953796387
    7. 'if' → logprob: -11.875597953796387
    8. '       ' → logprob: -12.000597953796387
    9. ':' → logprob: -12.375597953796387
    10. '    
' → logprob: -12.375597953796387

Token 1040: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.24310302757658e-05
    2. ',' → logprob: -10.500072479248047
    3. ' if' → logprob: -10.875072479248047
    4. '       ' → logprob: -11.250072479248047
    5. ' at' → logprob: -12.750072479248047
    6. '               ' → logprob: -13.625072479248047
    7. '          ' → logprob: -13.875072479248047
    8. '            
' → logprob: -13.875072479248047
    9. ' and' → logprob: -14.000072479248047
    10. ' =' → logprob: -14.125072479248047

Token 1041: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03067922033369541
    2. '           ' → logprob: -3.780679225921631
    3. ' if' → logprob: -4.905679225921631
    4. '       ' → logprob: -13.780678749084473
    5. 'If' → logprob: -15.530678749084473
    6. '   ' → logprob: -15.530678749084473
    7. '```' → logprob: -15.655678749084473
    8. '          ' → logprob: -16.53067970275879
    9. 'return' → logprob: -16.65567970275879
    10. ' ' → logprob: -16.65567970275879

Token 1042: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.06226455792784691
    2. ' not' → logprob: -2.8122644424438477
    3. '           ' → logprob: -8.312264442443848
    4. '   ' → logprob: -10.437264442443848
    5. '(not' → logprob: -11.437264442443848
    6. '       ' → logprob: -12.062264442443848
    7. '
' → logprob: -13.062264442443848
    8. '               ' → logprob: -13.312264442443848
    9. '                   ' → logprob: -14.187264442443848
    10. '	not' → logprob: -14.687264442443848

Token 1043: ' manager' (ID: 10470)
  Prédit: 'manager'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'manager' → logprob: -0.014168089255690575
    2. ' manager' → logprob: -4.2641682624816895
    3. '(manager' → logprob: -12.639167785644531
    4. '           ' → logprob: -14.014167785644531
    5. '   ' → logprob: -15.889167785644531
    6. '	manager' → logprob: -16.26416778564453
    7. '       ' → logprob: -16.38916778564453
    8. 'mgr' → logprob: -16.38916778564453
    9. '
' → logprob: -16.63916778564453
    10. 'man' → logprob: -17.13916778564453

Token 1044: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.00012023169983876869
    2. 'is' → logprob: -9.250120162963867
    3. '.' → logprob: -11.000120162963867
    4. '   ' → logprob: -12.875120162963867
    5. '       ' → logprob: -13.250120162963867
    6. ' .' → logprob: -14.000120162963867
    7. '           ' → logprob: -15.125120162963867
    8. ').' → logprob: -15.125120162963867
    9. '.dead' → logprob: -15.500120162963867
    10. '
' → logprob: -15.500120162963867

Token 1045: '_dead' (ID: 133650)
  Prédit: '_dead'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dead' → logprob: -3.2617008400848135e-05
    2. 'dead' → logprob: -10.375032424926758
    3. '_safe' → logprob: -14.500032424926758
    4. '_alive' → logprob: -15.500032424926758
    5. '.dead' → logprob: -15.750032424926758
    6. '_de' → logprob: -15.875032424926758
    7. '(dead' → logprob: -16.375032424926758
    8. 'Dead' → logprob: -16.375032424926758
    9. '_' → logprob: -16.750032424926758
    10. '\' → logprob: -16.875032424926758

Token 1046: 'lock' (ID: 2802)
  Prédit: 'lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.0015693799359723926
    2. 'ock' → logprob: -6.5015692710876465
    3. 'locked' → logprob: -10.876569747924805
    4. '_lock' → logprob: -11.251569747924805
    5. 'lack' → logprob: -11.626569747924805
    6. 'loc' → logprob: -12.376569747924805
    7. 'ack' → logprob: -12.376569747924805
    8. 'able' → logprob: -13.001569747924805
    9. 'Lock' → logprob: -13.501569747924805
    10. '
' → logprob: -13.751569747924805

Token 1047: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0002394170151092112
    2. 'avoidable' → logprob: -8.375239372253418
    3. '_possible' → logprob: -12.625239372253418
    4. 'avoid' → logprob: -13.625239372253418
    5. 'Avoid' → logprob: -13.750239372253418
    6. 'avo' → logprob: -14.125239372253418
    7. 'able' → logprob: -14.500239372253418
    8. '_free' → logprob: -15.250239372253418
    9. '_un' → logprob: -15.500239372253418
    10. '_available' → logprob: -15.500239372253418

Token 1048: 'avoidable' (ID: 154916)
  Prédit: 'avoidable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avoidable' → logprob: -7.85104202805087e-05
    2. 'avo' → logprob: -9.750078201293945
    3. 'avoid' → logprob: -11.000078201293945
    4. '_' → logprob: -13.625078201293945
    5. 'void' → logprob: -14.375078201293945
    6. '
' → logprob: -15.500078201293945
    7. '```' → logprob: -15.875078201293945
    8. '#' → logprob: -16.250078201293945
    9. '   ' → logprob: -16.250078201293945
    10. '**' → logprob: -16.250078201293945

Token 1049: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.21765321493148804
    2. ':' → logprob: -1.7176532745361328
    3. '():
' → logprob: -4.217653274536133
    4. ':
' → logprob: -7.217653274536133
    5. '           ' → logprob: -8.217653274536133
    6. '()' → logprob: -8.592653274536133
    7. '):' → logprob: -8.967653274536133
    8. '               ' → logprob: -10.592653274536133
    9. '():
' → logprob: -11.967653274536133
    10. '       ' → logprob: -12.092653274536133

Token 1050: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000285530521068722
    2. ' return' → logprob: -9.125285148620605
    3. '           ' → logprob: -9.250285148620605
    4. 'return' → logprob: -9.750285148620605
    5. '                   ' → logprob: -11.875285148620605
    6. '
' → logprob: -12.000285148620605
    7. '                
' → logprob: -12.750285148620605
    8. '                       ' → logprob: -13.500285148620605
    9. '\n' → logprob: -14.000285148620605
    10. '              ' → logprob: -14.375285148620605

Token 1051: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39579740166664124
    2. 'return' (adapté à ' return') → logprob: -1.1457973718643188
    3. '           ' → logprob: -4.895797252655029
    4. ' return' → logprob: -6.645797252655029
    5. '   ' → logprob: -9.395797729492188
    6. '                   ' → logprob: -10.770797729492188
    7. '       ' → logprob: -13.145797729492188
    8. '{return' → logprob: -13.770797729492188
    9. '
' → logprob: -14.395797729492188
    10. '	return' → logprob: -14.520797729492188

Token 1052: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -8.506661833962426e-05
    2. ' time' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.000085830688477
    4. 'ti' → logprob: -17.625085830688477
    5. '(time' → logprob: -18.000085830688477
    6. '	time' → logprob: -18.125085830688477
    7. '"time' → logprob: -18.375085830688477
    8. '           ' → logprob: -18.625085830688477
    9. 'pid' → logprob: -18.625085830688477
    10. 't' → logprob: -20.125085830688477

Token 1053: '_idx' (ID: 15257)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6221931576728821
    2. '<|end|>' → logprob: -1.2471930980682373
    3. '
' → logprob: -2.6221930980682373
    4. '\n' → logprob: -3.7471930980682373
    5. '_' → logprob: -3.8721930980682373
    6. '#' → logprob: -3.8721930980682373
    7. ' ' → logprob: -4.997193336486816
    8. ':' → logprob: -5.372193336486816
    9. '           ' → logprob: -5.747193336486816
    10. ' 
' → logprob: -5.872193336486816

Token 1054: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8442896008491516
    2. '
' → logprob: -1.7192895412445068
    3. '        
' → logprob: -1.9692895412445068
    4. '<|end|>' → logprob: -2.344289541244507
    5. ' 
' → logprob: -2.594289541244507
    6. '\n' → logprob: -3.594289541244507
    7. '#' → logprob: -4.844289779663086
    8. ')' → logprob: -5.344289779663086
    9. '    
' → logprob: -5.469289779663086
    10. ' return' → logprob: -5.469289779663086

Token 1055: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017385344952344894
    2. 'return' → logprob: -4.642385482788086
    3. '
' → logprob: -5.642385482788086
    4. '        
' → logprob: -5.767385482788086
    5. '```' → logprob: -7.767385482788086
    6. '0' → logprob: -8.392385482788086
    7. 'None' → logprob: -9.642385482788086
    8. ' return' → logprob: -9.892385482788086
    9. '   ' → logprob: -9.892385482788086
    10. '    
' → logprob: -10.392385482788086

Token 1056: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00017863049288280308
    2. '       ' → logprob: -8.750178337097168
    3. ' return' → logprob: -11.500178337097168
    4. '
' → logprob: -12.000178337097168
    5. '        
' → logprob: -13.375178337097168
    6. '```' → logprob: -13.500178337097168
    7. '#' (adapté à ' #') → logprob: -14.500178337097168
    8. '0' → logprob: -15.375178337097168
    9. '   ' → logprob: -16.125179290771484
    10. '	return' → logprob: -16.500179290771484

Token 1057: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.8193366486229934e-05
    2. '       ' → logprob: -11.000018119812012
    3. '#' → logprob: -14.000018119812012
    4. ' return' → logprob: -14.250018119812012
    5. '   ' → logprob: -18.375019073486328
    6. '	return' → logprob: -19.125019073486328
    7. '0' → logprob: -19.750019073486328
    8. '           ' → logprob: -20.250019073486328
    9. '
' → logprob: -20.375019073486328
    10. 'Return' → logprob: -20.625019073486328

Token 1058: ' never' (ID: 3779)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11587562412023544
    2. '0' → logprob: -2.240875720977783
    3. ' -' → logprob: -6.115875720977783
    4. ' ' → logprob: -7.115875720977783
    5. 'return' → logprob: -10.990875244140625
    6. '       ' → logprob: -12.115875244140625
    7. '   ' → logprob: -12.990875244140625
    8. ' return' → logprob: -13.240875244140625
    9. '           ' → logprob: -14.490875244140625
    10. '
' → logprob: -14.740875244140625

Token 1059: ' found' (ID: 2491)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6178292632102966
    2. 'return' → logprob: -0.8678292632102966
    3. 'returned' → logprob: -3.9928293228149414
    4. '   ' → logprob: -4.742829322814941
    5. 'returns' → logprob: -5.617829322814941
    6. 'det' → logprob: -5.992829322814941
    7. '-return' → logprob: -6.742829322814941
    8. 'enc' → logprob: -7.242829322814941
    9. ' -' → logprob: -7.242829322814941
    10. 'dead' → logprob: -7.492829322814941

Token 1060: ' dead' (ID: 9224)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3136356770992279
    2. '0' → logprob: -1.3136357069015503
    3. ' -' → logprob: -8.31363582611084
    4. ' ' → logprob: -9.18863582611084
    5. 'return' → logprob: -11.18863582611084
    6. '   ' → logprob: -12.06363582611084
    7. '       ' → logprob: -12.93863582611084
    8. '           ' → logprob: -13.43863582611084
    9. '-return' → logprob: -13.68863582611084
    10. '
' → logprob: -14.68863582611084

Token 1061: 'lock' (ID: 2802)
  Prédit: 'lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -0.00019018957391381264
    2. 'l' → logprob: -9.500189781188965
    3. 'locked' → logprob: -10.000189781188965
    4. 'ock' → logprob: -10.375189781188965
    5. 'a' → logprob: -11.250189781188965
    6. 'ad' → logprob: -11.750189781188965
    7. 'al' → logprob: -12.125189781188965
    8. 't' → logprob: -12.500189781188965
    9. '
' → logprob: -13.000189781188965
    10. '   ' → logprob: -13.625189781188965

Token 1062: ' unavoidable' (ID: 160714)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.3567196130752563
    2. 'free' → logprob: -1.8567196130752563
    3. '_un' → logprob: -2.106719493865967
    4. 'occur' → logprob: -2.356719493865967
    5. '_' → logprob: -2.606719493865967
    6. ',' → logprob: -2.606719493865967
    7. 'avoidable' → logprob: -3.106719493865967
    8. ':' → logprob: -3.106719493865967
    9. '_free' → logprob: -3.356719493865967
    10. '_occ' → logprob: -4.231719493865967

Token 1063: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6990486979484558
    2. 'return' → logprob: -0.8240486979484558
    3. '
' → logprob: -3.1990487575531006
    4. ':
' → logprob: -5.0740485191345215
    5. ':' → logprob: -5.3240485191345215
    6. ' return' → logprob: -5.4490485191345215
    7. '0' → logprob: -5.9490485191345215
    8. '        
' → logprob: -6.0740485191345215
    9. ',' → logprob: -6.8240485191345215
    10. ':return' → logprob: -7.0740485191345215

Token 1064: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17213034629821777
    2. '0' → logprob: -2.6721303462982178
    3. ' return' → logprob: -3.1721303462982178
    4. '       ' → logprob: -3.4221303462982178
    5. '        
' → logprob: -5.047130584716797
    6. '
' → logprob: -5.422130584716797
    7. '   ' → logprob: -6.922130584716797
    8. ':return' → logprob: -6.922130584716797
    9. ':
' → logprob: -7.672130584716797
    10. '    
' → logprob: -7.672130584716797

Token 1065: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -4.394135612528771e-05
    2. ' return' → logprob: -10.500043869018555
    3. '       ' → logprob: -11.250043869018555
    4. '0' → logprob: -13.375043869018555
    5. '
' → logprob: -13.875043869018555
    6. '        
' → logprob: -14.375043869018555
    7. '```' → logprob: -16.500043869018555
    8. '	return' → logprob: -16.750043869018555
    9. ':return' → logprob: -17.375043869018555
    10. '   ' → logprob: -17.750043869018555

Token 1066: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2812204360961914
    2. '-' → logprob: -1.4062204360961914
    3. ' ' → logprob: -10.156220436096191
    4. ' -' → logprob: -10.406220436096191
    5. '`' → logprob: -15.093720436096191
    6. '   ' → logprob: -16.281219482421875
    7. 'None' → logprob: -16.656219482421875
    8. 't' → logprob: -16.843719482421875
    9. '_' → logprob: -16.968719482421875
    10. '(' → logprob: -17.031219482421875

Token 1067: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '0' → logprob: -18.875001907348633
    4. '   ' → logprob: -19.500001907348633
    5. '2' → logprob: -20.625001907348633
    6. '  ' → logprob: -21.000001907348633
    7. '```' → logprob: -21.500001907348633
    8. ' -' → logprob: -21.625001907348633
    9. '-' → logprob: -22.125001907348633
    10. '１' → logprob: -23.000001907348633

Token 1068: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8555676341056824
    2. '#' → logprob: -1.1055676937103271
    3. '
' → logprob: -2.230567693710327
    4. '<|end|>' → logprob: -2.355567693710327
    5. '.' → logprob: -4.105567455291748
    6. ':' → logprob: -5.105567455291748
    7. '```' → logprob: -5.355567455291748
    8. '\n' → logprob: -5.730567455291748
    9. '[' → logprob: -6.230567455291748
    10. '}' → logprob: -6.355567455291748

Token 1069: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10732448101043701
    2. 'def' → logprob: -2.7323246002197266
    3. '<|end|>' → logprob: -3.9823246002197266
    4. '#' → logprob: -4.607324600219727
    5. ' if' → logprob: -5.482324600219727
    6. '```' → logprob: -6.357324600219727
    7. ')' → logprob: -6.732324600219727
    8. '   ' → logprob: -8.232324600219727
    9. '
' → logprob: -9.107324600219727
    10. '       ' → logprob: -9.357324600219727

Token 1070: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.041893791407346725
    2. 'main' → logprob: -3.291893720626831
    3. '__' → logprob: -6.79189395904541
    4. ' __' → logprob: -7.29189395904541
    5. '_main' → logprob: -7.54189395904541
    6. ' solve' → logprob: -7.54189395904541
    7. '_' → logprob: -8.41689395904541
    8. ' run' → logprob: -8.66689395904541
    9. ' solution' → logprob: -8.91689395904541
    10. ' _' → logprob: -9.04189395904541

Token 1071: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.507972572464496e-05
    2. '():
' → logprob: -9.37509536743164
    3. '()' → logprob: -11.75009536743164
    4. ' ():' → logprob: -13.37509536743164
    5. '():
' → logprob: -14.37509536743164
    6. '().' → logprob: -16.75009536743164
    7. '()>' → logprob: -17.37509536743164
    8. '_' → logprob: -17.37509536743164
    9. '().__' → logprob: -17.50009536743164
    10. '():

' → logprob: -17.75009536743164

Token 1072: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21141797304153442
    2. 'dds' → logprob: -1.7114179134368896
    3. 'dd' → logprob: -5.586418151855469
    4. ' solution' → logprob: -5.836418151855469
    5. 'solution' → logprob: -6.336418151855469
    6. 'import' → logprob: -7.336418151855469
    7. 'def' → logprob: -7.961418151855469
    8. 'if' → logprob: -8.836418151855469
    9. 'd' → logprob: -9.211418151855469
    10. ' d' → logprob: -9.836418151855469

Token 1073: ' solution' (ID: 7578)
  Prédit: 'dds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dds' → logprob: -0.3608541190624237
    2. 'solution' (adapté à ' solution') → logprob: -1.360854148864746
    3. '   ' → logprob: -3.485854148864746
    4. 'import' → logprob: -4.485854148864746
    5. 'dd' → logprob: -6.485854148864746
    6. 'd' → logprob: -6.610854148864746
    7. ' solution' → logprob: -6.985854148864746
    8. 's' → logprob: -8.360854148864746
    9. 'sol' → logprob: -8.485854148864746
    10. 'DDS' → logprob: -8.610854148864746

Token 1074: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16590693593025208
    2. '=' → logprob: -1.9159069061279297
    3. '.' → logprob: -5.54090690612793
    4. '().' → logprob: -6.91590690612793
    5. '()' → logprob: -7.54090690612793
    6. '   ' → logprob: -9.16590690612793
    7. ':' → logprob: -10.79090690612793
    8. '.solve' → logprob: -10.91590690612793
    9. ' ' → logprob: -11.04090690612793
    10. ' .' → logprob: -11.16590690612793

Token 1075: ' Dead' (ID: 26166)
  Prédit: 'Dead'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dead' → logprob: -2.339278580620885e-06
    2. ' Dead' → logprob: -13.000001907348633
    3. '_dead' → logprob: -21.250001907348633
    4. 'Deadline' → logprob: -21.625001907348633
    5. 'Death' → logprob: -23.000001907348633
    6. ' dead' → logprob: -23.125001907348633
    7. 'Deep' → logprob: -24.000001907348633
    8. 'dead' → logprob: -24.500001907348633
    9. 'Detect' → logprob: -26.250001907348633
    10. '   ' → logprob: -26.375001907348633

Token 1076: 'lock' (ID: 2802)
  Prédit: 'lock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lock' → logprob: -1.9361264946837764e-07
    2. 'locked' → logprob: -16.0
    3. 'load' → logprob: -19.0
    4. 'lo' → logprob: -19.25
    5. 'log' → logprob: -19.375
    6. 'loop' → logprob: -19.75
    7. 'locker' → logprob: -19.75
    8. 'lack' → logprob: -19.875
    9. 'dead' → logprob: -20.125
    10. 'local' → logprob: -20.375

Token 1077: 'Detection' (ID: 58726)
  Prédit: 'Detection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Detection' → logprob: 0.0
    2. 'd' → logprob: -17.25
    3. '_detection' → logprob: -17.875
    4. 'Detect' → logprob: -18.25
    5. ' Detection' → logprob: -18.5
    6. 'etection' → logprob: -20.125
    7. 'Solution' → logprob: -20.375
    8. ' detection' → logprob: -20.375
    9. 'D' → logprob: -21.625
    10. 'Decision' → logprob: -22.625

Token 1078: 'Solution' (ID: 44456)
  Prédit: 'Solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -1.2664456789934775e-06
    2. 'solution' → logprob: -13.750000953674316
    3. '_solution' → logprob: -16.500001907348633
    4. 'Sol' → logprob: -17.250001907348633
    5. 'S' → logprob: -18.375001907348633
    6. ' solution' → logprob: -18.500001907348633
    7. 'Solver' → logprob: -18.875001907348633
    8. ' Solution' → logprob: -19.000001907348633
    9. 'So' → logprob: -19.875001907348633
    10. '(solution' → logprob: -20.375001907348633

Token 1079: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.07368633896112442
    2. '   ' → logprob: -3.323686361312866
    3. '()' → logprob: -4.073686122894287
    4. '
' → logprob: -4.323686122894287
    5. 'def' → logprob: -5.448686122894287
    6. 'solution' → logprob: -8.948686599731445
    7. '(solution' → logprob: -9.573686599731445
    8. '```' → logprob: -9.823686599731445
    9. '()
' → logprob: -10.198686599731445
    10. '(
' → logprob: -10.448686599731445

Token 1080: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47442466020584106
    2. 'solution' → logprob: -0.9744246602058411
    3. ' solution' → logprob: -8.224424362182617
    4. 'def' → logprob: -10.349424362182617
    5. '(solution' → logprob: -10.724424362182617
    6. '```' → logprob: -11.224424362182617
    7. '
' → logprob: -11.599424362182617
    8. '_solution' → logprob: -14.099424362182617
    9. 'input' → logprob: -14.724424362182617
    10. '    
' → logprob: -14.724424362182617

Token 1081: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' (adapté à ' solution') → logprob: -2.45848218582978e-06
    2. '   ' → logprob: -13.12500286102295
    3. ' solution' → logprob: -14.75000286102295
    4. '```' → logprob: -17.250001907348633
    5. '(solution' → logprob: -17.375001907348633
    6. '
' → logprob: -19.000001907348633
    7. '_solution' → logprob: -20.625001907348633
    8. '.solution' → logprob: -21.000001907348633
    9. '``' → logprob: -21.125001907348633
    10. 'def' → logprob: -21.500001907348633

Token 1082: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -2.570319702499546e-05
    2. '.' → logprob: -11.250025749206543
    3. 'input' → logprob: -11.375025749206543
    4. '<input' → logprob: -15.500025749206543
    5. '.mainloop' → logprob: -15.500025749206543
    6. ' .' → logprob: -16.000024795532227
    7. '.output' → logprob: -16.125024795532227
    8. '.stdin' → logprob: -16.250024795532227
    9. '.load' → logprob: -16.500024795532227
    10. '.inputs' → logprob: -16.625024795532227

Token 1083: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.1160349458805285e-05
    2. '()' → logprob: -11.500011444091797
    3. '()
' → logprob: -14.375011444091797
    4. '_Data' → logprob: -15.625011444091797
    5. 'data' → logprob: -16.250011444091797
    6. '_' → logprob: -16.250011444091797
    7. 'Data' → logprob: -17.000011444091797
    8. '   ' → logprob: -17.500011444091797
    9. '_DATA' → logprob: -17.875011444091797
    10. '_line' → logprob: -18.750011444091797

Token 1084: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4867900311946869
    2. '()
' → logprob: -1.4867900609970093
    3. '()' → logprob: -1.9867900609970093
    4. 'solution' → logprob: -4.736790180206299
    5. '(solution' → logprob: -4.861790180206299
    6. '
' → logprob: -5.486790180206299
    7. ' solution' → logprob: -7.486790180206299
    8. '<|end|>' → logprob: -8.48678970336914
    9. 'def' → logprob: -8.61178970336914
    10. '```' → logprob: -8.98678970336914

Token 1085: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3883950710296631
    2. 'print' → logprob: -1.138395071029663
    3. 'result' → logprob: -6.638395309448242
    4. '```' → logprob: -8.513395309448242
    5. ' print' → logprob: -12.263395309448242
    6. '    
' → logprob: -12.888395309448242
    7. '
' → logprob: -13.513395309448242
    8. 'output' → logprob: -14.263395309448242
    9. '	print' → logprob: -14.388395309448242
    10. '``' → logprob: -14.388395309448242

Token 1086: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0015047440538182855
    2. 'result' → logprob: -6.501504898071289
    3. 'res' → logprob: -13.751504898071289
    4. '   ' → logprob: -14.001504898071289
    5. '```' → logprob: -15.251504898071289
    6. ' print' → logprob: -16.25150489807129
    7. 'answer' → logprob: -16.37650489807129
    8. '    
' → logprob: -16.87650489807129
    9. 'ret' → logprob: -18.00150489807129
    10. 'output' → logprob: -18.12650489807129

Token 1087: '(solution' (ID: 126940)
  Prédit: '(solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(solution' → logprob: -7.517272024415433e-05
    2. 'solution' → logprob: -9.500075340270996
    3. '(' → logprob: -15.500075340270996
    4. '(s' → logprob: -19.50007438659668
    5. ' solution' → logprob: -19.75007438659668
    6. '(
' → logprob: -20.37507438659668
    7. '(sol' → logprob: -20.37507438659668
    8. '.solution' → logprob: -20.87507438659668
    9. '(f' → logprob: -21.25007438659668
    10. '(problem' → logprob: -21.25007438659668

Token 1088: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -6.392202976712724e-06
    2. '.' → logprob: -12.500006675720215
    3. ' .' → logprob: -13.125006675720215
    4. ').' → logprob: -14.875006675720215
    5. '.run' → logprob: -16.6250057220459
    6. '.sol' → logprob: -16.6250057220459
    7. 'solve' → logprob: -17.7500057220459
    8. '().' → logprob: -18.3750057220459
    9. '.resolve' → logprob: -18.3750057220459
    10. '.s' → logprob: -18.3750057220459

Token 1089: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0019313741941004992
    2. '()' → logprob: -6.251931190490723
    3. '())
' → logprob: -13.376931190490723
    4. ')' → logprob: -13.876931190490723
    5. ' ())' → logprob: -16.00193214416504
    6. '();)' → logprob: -17.12693214416504
    7. '()
' → logprob: -18.12693214416504
    8. '(' → logprob: -18.12693214416504
    9. '())

' → logprob: -18.12693214416504
    10. '(),' → logprob: -18.75193214416504

Token 1090: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003559804055839777
    2. '```' → logprob: -5.753559589385986
    3. '
' → logprob: -8.628560066223145
    4. '<|end|>' → logprob: -9.003560066223145
    5. ' if' → logprob: -10.128560066223145
    6. '#' → logprob: -10.878560066223145
    7. '\n' → logprob: -12.128560066223145
    8. '``' → logprob: -12.503560066223145
    9. '@if' → logprob: -13.003560066223145
    10. '\' → logprob: -13.128560066223145

Token 1091: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.38716426491737366
    2. '__' → logprob: -1.1371642351150513
    3. '_name' → logprob: -8.762164115905762
    4. '_' → logprob: -9.137164115905762
    5. 'name' → logprob: -11.012164115905762
    6. '___' → logprob: -12.137164115905762
    7. ' _' → logprob: -13.012164115905762
    8. ' ' → logprob: -13.512164115905762
    9. '_main' → logprob: -14.137164115905762
    10. ' "__' → logprob: -14.512164115905762

Token 1092: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02016681805253029
    2. '==' → logprob: -4.645166873931885
    3. ' ==' → logprob: -4.645166873931885
    4. '=="' → logprob: -9.020166397094727
    5. '.__' → logprob: -9.145166397094727
    6. ' __' → logprob: -9.270166397094727
    7. '_' → logprob: -9.520166397094727
    8. '_main' → logprob: -9.895166397094727
    9. 'name' → logprob: -10.020166397094727
    10. '_name' → logprob: -10.145166397094727

Token 1093: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.9054008084349334e-05
    2. '==' → logprob: -10.250039100646973
    3. '=="' → logprob: -13.750039100646973
    4. '__.__' → logprob: -13.750039100646973
    5. ' ==' → logprob: -13.875039100646973
    6. '__.' → logprob: -15.875039100646973
    7. '____' → logprob: -16.375038146972656
    8. '=='' → logprob: -16.375038146972656
    9. '___' → logprob: -16.500038146972656
    10. '__('' → logprob: -16.875038146972656

Token 1094: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1284007877111435
    2. ' ==' → logprob: -2.3784008026123047
    3. '__' → logprob: -4.253400802612305
    4. '=="' → logprob: -4.378400802612305
    5. '=='' → logprob: -7.003400802612305
    6. '.__' → logprob: -9.878400802612305
    7. '==
' → logprob: -10.628400802612305
    8. '===' → logprob: -11.503400802612305
    9. '_' → logprob: -11.753400802612305
    10. '=' → logprob: -11.753400802612305

Token 1095: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2519468665122986
    2. ''' → logprob: -1.5019469261169434
    3. '__' → logprob: -11.126946449279785
    4. ' "__' → logprob: -13.126946449279785
    5. ' '__' → logprob: -15.501946449279785
    6. '   ' → logprob: -15.751946449279785
    7. '"name' → logprob: -16.0019474029541
    8. ''"' → logprob: -16.2519474029541
    9. ''name' → logprob: -16.5019474029541
    10. '('__' → logprob: -16.5019474029541

Token 1096: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.020526010543107986
    2. 'main' → logprob: -4.020525932312012
    3. '"' → logprob: -6.270525932312012
    4. ''' → logprob: -7.645525932312012
    5. '___' → logprob: -13.645525932312012
    6. 'name' → logprob: -14.270525932312012
    7. '__":
' → logprob: -15.020525932312012
    8. '____' → logprob: -15.145525932312012
    9. ' "__' → logprob: -15.145525932312012
    10. '_main' → logprob: -15.395525932312012

Token 1097: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.030539099127054214
    2. '__' → logprob: -3.530539035797119
    3. '__':
' → logprob: -7.155539035797119
    4. '__
' → logprob: -12.530539512634277
    5. '__["' → logprob: -13.530539512634277
    6. '__.' → logprob: -14.405539512634277
    7. '__:' → logprob: -14.530539512634277
    8. '__
' → logprob: -14.530539512634277
    9. '__.__' → logprob: -14.655539512634277
    10. '__);
' → logprob: -15.905539512634277

Token 1098: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.537180211627856e-05
    2. ' main' → logprob: -10.625045776367188
    3. '   ' → logprob: -11.375045776367188
    4. '	main' → logprob: -11.625045776367188
    5. '_main' → logprob: -14.750045776367188
    6. '__' → logprob: -16.500045776367188
    7. '    
' → logprob: -16.875045776367188
    8. '(main' → logprob: -17.375045776367188
    9. '```' → logprob: -18.000045776367188
    10. 'import' → logprob: -18.500045776367188

Token 1099: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.75
    3. '	main' → logprob: -19.5
    4. '   ' → logprob: -22.375
    5. '_main' → logprob: -23.75
    6. '.main' → logprob: -26.0
    7. 'import' → logprob: -26.0
    8. '(main' → logprob: -26.125
    9. 'Main' → logprob: -27.625
    10. 'mainwindow' → logprob: -28.0

Token 1100: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1098
Tokens correctement prédits (1ère position, stricte): 476
Tokens correctement prédits (1ère position, avec adaptation): 522
Tokens correctement prédits (top 10): 924
Précision stricte (1ère position): 43.35%
Précision adaptée (1ère position): 47.54%
Précision (top 10): 84.15%
================================================================================
