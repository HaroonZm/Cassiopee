================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:27
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq
from collections import deque

input = sys.stdin.readline
N, M, K, S = map(int, input().split())
P, Q = map(int, input().split())
zombies = [int(input()) for _ in range(K)]

graph = [[] for _ in range(N + 1)]
for _ in range(M):
    a, b = map(int, input().split())
    graph[a].append(b)
    graph[b].append(a)

# Distance to nearest zombie for each town, initialize with -1 (unvisited)
dist = [-1] * (N + 1)
que = deque()

# Start BFS from all zombie towns
for z in zombies:
    dist[z] = 0
    que.append(z)

while que:
    cur = que.popleft()
    if dist[cur] == S:
        continue
    for nxt in graph[cur]:
        if dist[nxt] == -1:
            dist[nxt] = dist[cur] + 1
            que.append(nxt)

# Determine cost for staying at each town
# 1 and N are never stayed in, cost zero assigned here
cost = [0] * (N + 1)
for i in range(2, N):
    if dist[i] != -1 and dist[i] <= S:
        cost[i] = Q
    else:
        cost[i] = P

# Use Dijkstra to find minimal total cost from 1 to N
# Cost when "arriving" at town, i.e. paying at that town
INF = 10**15
dp = [INF] * (N + 1)
dp[1] = 0
hq = [(0, 1)]
while hq:
    c, v = heapq.heappop(hq)
    if dp[v] < c:
        continue
    if v == N:
        print(c)
        break
    for nv in graph[v]:
        nc = c + cost[nv]
        if dp[nv] > nc:
            dp[nv] = nc
            heapq.heappush(hq, (nc, nv))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.4855663721391466e-05
    2. '#' → logprob: -11.750015258789062
    3. '.' → logprob: -12.750015258789062
    4. '_' → logprob: -14.125015258789062
    5. '=' → logprob: -14.500015258789062
    6. 'ify' → logprob: -14.625015258789062
    7. ')' → logprob: -15.125015258789062
    8. 'i' → logprob: -15.375015258789062
    9. 'u' → logprob: -15.500015258789062
    10. 'p' → logprob: -15.750015258789062

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18507303297519684
    2. '
' → logprob: -2.685073137283325
    3. '\n' → logprob: -2.935073137283325
    4. '\' → logprob: -3.685073137283325
    5. '

' → logprob: -5.310072898864746
    6. '' → logprob: -5.810072898864746
    7. 'import' → logprob: -5.935072898864746
    8. '.
' → logprob: -5.935072898864746
    9. '<|end|>' → logprob: -6.060072898864746
    10. '```' → logprob: -6.435072898864746

Token 7: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.952213704586029
    2. '\' → logprob: -1.8272137641906738
    3. '\n' → logprob: -1.9522137641906738
    4. '
' → logprob: -2.327213764190674
    5. '

' → logprob: -2.452213764190674
    6. '<|end|>' → logprob: -2.827213764190674
    7. '```' → logprob: -4.077213764190674
    8. '<|end|>' → logprob: -4.452213764190674
    9. ',' → logprob: -4.952213764190674
    10. '' → logprob: -5.077213764190674

Token 8: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.009468600153923035
    2. 'collections' → logprob: -4.7594685554504395
    3. ' queue' → logprob: -7.8844685554504395
    4. ' math' → logprob: -8.384469032287598
    5. ' itertools' → logprob: -9.134469032287598
    6. ' typing' → logprob: -9.134469032287598
    7. ' operator' → logprob: -11.884469032287598
    8. ' threading' → logprob: -12.009469032287598
    9. '_' → logprob: -12.259469032287598
    10. 'queue' → logprob: -12.884469032287598

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.42901623249053955
    2. 'import' → logprob: -1.0540162324905396
    3. '.' → logprob: -8.55401611328125
    4. '<|end|>' → logprob: -10.30401611328125
    5. ' ' → logprob: -10.55401611328125
    6. '	import' → logprob: -11.05401611328125
    7. '```' → logprob: -11.42901611328125
    8. '_import' → logprob: -12.05401611328125
    9. ' ' → logprob: -12.17901611328125
    10. ' defaultdict' → logprob: -12.42901611328125

Token 10: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.19070060551166534
    2. ' defaultdict' → logprob: -1.815700650215149
    3. 'deque' → logprob: -4.565700531005859
    4. ' abc' → logprob: -8.06570053100586
    5. ' import' → logprob: -9.69070053100586
    6. ' collections' → logprob: -10.06570053100586
    7. ' named' → logprob: -11.31570053100586
    8. ' Counter' → logprob: -11.44070053100586
    9. '```' → logprob: -11.56570053100586
    10. ' heap' → logprob: -11.94070053100586

Token 11: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.960929274559021
    2. '

' → logprob: -1.460929274559021
    3. '' → logprob: -2.3359293937683105
    4. '\' → logprob: -2.3359293937683105
    5. '\n' → logprob: -2.7109293937683105
    6. 'def' → logprob: -3.4609293937683105
    7. '```' → logprob: -3.7109293937683105
    8. 'import' → logprob: -4.2109293937683105
    9. '
' → logprob: -4.3359293937683105
    10. '#' → logprob: -4.7109293937683105

Token 12: 'input' (ID: 2586)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7274236083030701
    2. 'd' → logprob: -1.4774236679077148
    3. 'def' → logprob: -1.7274236679077148
    4. '\' → logprob: -2.977423667907715
    5. '```' → logprob: -3.852423667907715
    6. '#' → logprob: -4.477423667907715
    7. 'n' → logprob: -4.977423667907715
    8. 'import' → logprob: -4.977423667907715
    9. '`' → logprob: -5.977423667907715
    10. '\n' → logprob: -6.352423667907715

Token 13: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007161272224038839
    2. '.' → logprob: -7.500716209411621
    3. '(
' → logprob: -10.125716209411621
    4. ')' → logprob: -10.625716209411621
    5. '```' → logprob: -11.125716209411621
    6. '()' → logprob: -11.250716209411621
    7. ' (' → logprob: -11.375716209411621
    8. '=' → logprob: -11.625716209411621
    9. ''' → logprob: -11.625716209411621
    10. '"' → logprob: -11.875716209411621

Token 14: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.17450210452079773
    2. ' sys' → logprob: -1.9245021343231201
    3. 'input' → logprob: -4.299501895904541
    4. ' input' → logprob: -7.799501895904541
    5. 'lambda' → logprob: -8.7995023727417
    6. ' lambda' → logprob: -10.9245023727417
    7. '	sys' → logprob: -11.5495023727417
    8. '```' → logprob: -12.2995023727417
    9. '=sys' → logprob: -12.2995023727417
    10. '(sys' → logprob: -14.0495023727417

Token 15: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18456418812274933
    2. '.readline' → logprob: -2.5595641136169434
    3. '.stdin' → logprob: -2.9345641136169434
    4. ' .' → logprob: -3.4345641136169434
    5. '.argv' → logprob: -6.309564113616943
    6. '.input' → logprob: -7.184564113616943
    7. '.stdout' → logprob: -7.184564113616943
    8. '.get' → logprob: -7.559564113616943
    9. '.setdefault' → logprob: -7.684564113616943
    10. '[' → logprob: -8.184564590454102

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0032355827279388905
    2. '.read' → logprob: -5.753235816955566
    3. '.' → logprob: -10.253235816955566
    4. '.readlines' → logprob: -11.878235816955566
    5. '.buffer' → logprob: -11.878235816955566
    6. 'read' → logprob: -12.003235816955566
    7. '.stdin' → logprob: -13.378235816955566
    8. '.reader' → logprob: -15.503235816955566
    9. '.Read' → logprob: -15.878235816955566
    10. 'buffer' → logprob: -16.00323486328125

Token 17: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2960959672927856
    2. 'def' → logprob: -1.4210959672927856
    3. '(' → logprob: -2.046095848083496
    4. '(n' → logprob: -2.671095848083496
    5. 'n' → logprob: -2.796095848083496
    6. '
' → logprob: -2.921095848083496
    7. '()
' → logprob: -3.046095848083496
    8. '()

' → logprob: -3.421095848083496
    9. '\n' → logprob: -4.421095848083496
    10. 'for' → logprob: -4.671095848083496

Token 18: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36623162031173706
    2. 'n' → logprob: -1.2412316799163818
    3. 'class' → logprob: -5.116231441497803
    4. 'N' → logprob: -5.116231441497803
    5. 't' → logprob: -6.616231441497803
    6. '\' → logprob: -7.116231441497803
    7. '(n' → logprob: -7.241231441497803
    8. 'q' → logprob: -7.866231441497803
    9. 'T' → logprob: -7.991231441497803
    10. 's' → logprob: -8.241231918334961

Token 19: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1799391210079193
    2. ' ' → logprob: -2.304939031600952
    3. '=' → logprob: -3.179939031600952
    4. ',' → logprob: -4.679939270019531
    5. ')' → logprob: -5.679939270019531
    6. ' ,' → logprob: -5.929939270019531
    7. ' >' → logprob: -6.429939270019531
    8. '>' → logprob: -6.679939270019531
    9. '<|end|>' → logprob: -6.679939270019531
    10. ' )' → logprob: -6.804939270019531

Token 20: ' M' (ID: 391)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.8701126575469971
    2. ' M' → logprob: -1.245112657546997
    3. 'M' → logprob: -1.995112657546997
    4. 'K' → logprob: -2.495112657546997
    5. ' ' → logprob: -2.620112657546997
    6. 'input' → logprob: -7.745112419128418
    7. 'Q' → logprob: -7.995112419128418
    8. 'space' → logprob: -8.245112419128418
    9. '  ' → logprob: -8.620112419128418
    10. ' input' → logprob: -8.995112419128418

Token 21: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023006796836853
    2. '=' → logprob: -2.3502299785614014
    3. ',' → logprob: -10.97523021697998
    4. ' ' → logprob: -12.60023021697998
    5. '=input' → logprob: -13.22523021697998
    6. '=int' → logprob: -15.10023021697998
    7. ' =
' → logprob: -15.72523021697998
    8. ')' → logprob: -16.100229263305664
    9. ' ,' → logprob: -16.225229263305664
    10. '=line' → logprob: -16.225229263305664

Token 22: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.2383999228477478
    2. 'K' → logprob: -2.6133999824523926
    3. ' =' → logprob: -2.8633999824523926
    4. ' Q' → logprob: -3.8633999824523926
    5. '=' → logprob: -3.9883999824523926
    6. ' ' → logprob: -4.363399982452393
    7. 'Q' → logprob: -4.613399982452393
    8. ' L' → logprob: -5.863399982452393
    9. ' P' → logprob: -5.988399982452393
    10. 'map' → logprob: -6.488399982452393

Token 23: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014143168926239
    2. ' =' → logprob: -1.7014143466949463
    3. ',' → logprob: -14.576414108276367
    4. '=input' → logprob: -14.826414108276367
    5. '=int' → logprob: -16.451414108276367
    6. '=list' → logprob: -17.326414108276367
    7. ' ' → logprob: -17.326414108276367
    8. '=sys' → logprob: -17.451414108276367
    9. '＝' → logprob: -18.201414108276367
    10. '=line' → logprob: -18.326414108276367

Token 24: ' S' (ID: 336)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -1.7859891653060913
    2. 'L' → logprob: -1.9109891653060913
    3. 'X' → logprob: -2.160989284515381
    4. 'Q' → logprob: -2.785989284515381
    5. ' T' → logprob: -2.910989284515381
    6. 'T' → logprob: -3.035989284515381
    7. ' X' → logprob: -3.035989284515381
    8. 'S' → logprob: -3.160989284515381
    9. ' Q' → logprob: -3.285989284515381
    10. ' S' → logprob: -3.410989284515381

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07890355587005615
    2. ' =' → logprob: -2.5789036750793457
    3. ',' → logprob: -11.328903198242188
    4. '=input' → logprob: -13.703903198242188
    5. ' ' → logprob: -15.328903198242188
    6. '=sys' → logprob: -15.703903198242188
    7. '=list' → logprob: -15.828903198242188
    8. '=

' → logprob: -17.078903198242188
    9. '=line' → logprob: -17.078903198242188
    10. '=int' → logprob: -17.328903198242188

Token 26: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0067167943343520164
    2. 'map' → logprob: -5.006716728210449
    3. ' list' → logprob: -14.38171672821045
    4. ' input' → logprob: -15.38171672821045
    5. '	map' → logprob: -15.88171672821045
    6. ' ' → logprob: -16.006717681884766
    7. ' tuple' → logprob: -16.381717681884766
    8. ' [' → logprob: -16.631717681884766
    9. '(map' → logprob: -16.756717681884766
    10. '[' → logprob: -16.756717681884766

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.33917781710624695
    2. '(' → logprob: -1.5891778469085693
    3. '(lambda' → logprob: -2.7141778469085693
    4. '(str' → logprob: -4.21417760848999
    5. '(input' → logprob: -6.58917760848999
    6. 'int' → logprob: -7.71417760848999
    7. 'lambda' → logprob: -9.089178085327148
    8. '(len' → logprob: -9.339178085327148
    9. 'input' → logprob: -9.839178085327148
    10. '```' → logprob: -9.964178085327148

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9955089688301086
    2. '(input' → logprob: -1.2455089092254639
    3. '(' → logprob: -1.4955089092254639
    4. ')' → logprob: -2.620508909225464
    5. '(sys' → logprob: -3.870508909225464
    6. ',input' → logprob: -3.995508909225464
    7. 'input' → logprob: -5.370509147644043
    8. ')(' → logprob: -7.245509147644043
    9. '(int' → logprob: -8.745509147644043
    10. '=input' → logprob: -9.120509147644043

Token 29: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519724369049072
    2. ' input' → logprob: -1.5019724369049072
    3. 'sys' → logprob: -10.751972198486328
    4. ' sys' → logprob: -11.251972198486328
    5. ')' → logprob: -11.876972198486328
    6. ',input' → logprob: -14.501972198486328
    7. ' )' → logprob: -14.751972198486328
    8. '(input' → logprob: -14.876972198486328
    9. '=input' → logprob: -14.876972198486328
    10. '	input' → logprob: -15.876972198486328

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001637300301808864
    2. '()' → logprob: -8.750164031982422
    3. '())' → logprob: -12.375164031982422
    4. ' ().' → logprob: -14.375164031982422
    5. '(' → logprob: -15.250164031982422
    6. '()
' → logprob: -15.625164031982422
    7. ')' → logprob: -17.375164031982422
    8. '()))' → logprob: -18.250164031982422
    9. '.' → logprob: -18.375164031982422
    10. '.split' → logprob: -18.875164031982422

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.12723319232463837
    2. 'strip' → logprob: -2.1272332668304443
    3. 'rstrip' → logprob: -8.127233505249023
    4. 'read' → logprob: -12.752233505249023
    5. '(split' → logprob: -12.877233505249023
    6. ' split' → logprob: -13.002233505249023
    7. ')' → logprob: -13.627233505249023
    8. ' strip' → logprob: -14.877233505249023
    9. 'spl' → logprob: -16.377233505249023
    10. '(strip' → logprob: -16.752233505249023

Token 32: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.750436007976532e-05
    2. '))' → logprob: -10.37503719329834
    3. ')`' → logprob: -13.25003719329834
    4. '(' → logprob: -13.50003719329834
    5. '`)' → logprob: -13.62503719329834
    6. '),' → logprob: -14.37503719329834
    7. ')
' → logprob: -15.25003719329834
    8. ' )' → logprob: -15.25003719329834
    9. ')))' → logprob: -15.87503719329834
    10. '()' → logprob: -15.87503719329834

Token 33: 'P' (ID: 47)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2757876515388489
    2. 'graph' → logprob: -1.650787591934204
    3. '
' → logprob: -3.400787591934204
    4. '' → logprob: -5.400787830352783
    5. '\n' → logprob: -5.775787830352783
    6. ' graph' → logprob: -6.025787830352783
    7. 'data' → logprob: -7.025787830352783
    8. '_graph' → logprob: -7.400787830352783
    9. 'nodes' → logprob: -7.650787830352783
    10. ' 
' → logprob: -7.900787830352783

Token 34: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0026123523712158
    2. '=' → logprob: -1.1276123523712158
    3. ',' → logprob: -1.6276123523712158
    4. '[' → logprob: -3.627612352371216
    5. 'r' → logprob: -3.752612352371216
    6. ' =' → logprob: -3.877612352371216
    7. '.' → logprob: -4.752612113952637
    8. 'R' → logprob: -5.127612113952637
    9. '1' → logprob: -5.377612113952637
    10. ':' → logprob: -6.127612113952637

Token 35: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.4545309543609619
    2. ' ' → logprob: -2.204530954360962
    3. ' Q' → logprob: -2.329530954360962
    4. ' =' → logprob: -2.454530954360962
    5. '=' → logprob: -3.704530954360962
    6. '_' → logprob: -4.454530715942383
    7. 'q' → logprob: -5.329530715942383
    8. '=[]' → logprob: -5.704530715942383
    9. 's' → logprob: -6.204530715942383
    10. '[' → logprob: -6.204530715942383

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1607379913330078
    2. '=' → logprob: -1.9107379913330078
    3. ',' → logprob: -7.660737991333008
    4. ' ,' → logprob: -10.410737991333008
    5. ' ' → logprob: -12.035737991333008
    6. ')' → logprob: -12.785737991333008
    7. '[' → logprob: -14.160737991333008
    8. ' =
' → logprob: -14.410737991333008
    9. '```' → logprob: -15.160737991333008
    10. '.' → logprob: -15.785737991333008

Token 37: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.10021066665649414
    2. 'map' → logprob: -2.350210666656494
    3. ' ' → logprob: -13.100210189819336
    4. '	map' → logprob: -13.850210189819336
    5. ' mapa' → logprob: -15.725210189819336
    6. '0' → logprob: -15.975210189819336
    7. ' ma' → logprob: -15.975210189819336
    8. '1' → logprob: -16.225210189819336
    9. '(map' → logprob: -16.600210189819336
    10. 'm' → logprob: -16.850210189819336

Token 38: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6336898803710938
    2. '(int' → logprob: -0.7586898803710938
    3. '(lambda' → logprob: -7.133689880371094
    4. '<int' → logprob: -9.508689880371094
    5. '(in' → logprob: -10.133689880371094
    6. '(str' → logprob: -10.133689880371094
    7. ' (' → logprob: -11.008689880371094
    8. '(len' → logprob: -11.133689880371094
    9. '(None' → logprob: -11.758689880371094
    10. '[int' → logprob: -11.758689880371094

Token 39: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1382077932357788
    2. '(' → logprob: -2.1382079124450684
    3. ',' → logprob: -4.888207912445068
    4. ',int' → logprob: -6.388207912445068
    5. ')' → logprob: -7.263207912445068
    6. ')(' → logprob: -7.638207912445068
    7. '(input' → logprob: -8.26320743560791
    8. ' (' → logprob: -8.51320743560791
    9. '<int' → logprob: -9.01320743560791
    10. '```' → logprob: -10.26320743560791

Token 40: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3869669735431671
    2. 'input' → logprob: -1.1369669437408447
    3. 'int' → logprob: -9.386966705322266
    4. ' int' → logprob: -12.011966705322266
    5. '(input' → logprob: -13.386966705322266
    6. ',input' → logprob: -13.386966705322266
    7. ')' → logprob: -13.636966705322266
    8. '=input' → logprob: -15.136966705322266
    9. '_input' → logprob: -15.511966705322266
    10. ' ' → logprob: -15.511966705322266

Token 41: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.006518906448036432
    2. '()' → logprob: -5.131518840789795
    3. '(' → logprob: -7.631518840789795
    4. '(int' → logprob: -10.881519317626953
    5. '(),' → logprob: -11.631519317626953
    6. '()[' → logprob: -11.881519317626953
    7. '());' → logprob: -12.006519317626953
    8. '())' → logprob: -12.006519317626953
    9. '().__' → logprob: -12.006519317626953
    10. ' ().' → logprob: -12.131519317626953

Token 42: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.45848218582978e-06
    2. 'strip' → logprob: -13.12500286102295
    3. ' split' → logprob: -15.50000286102295
    4. 'rstrip' → logprob: -17.125001907348633
    5. '(split' → logprob: -17.375001907348633
    6. 'spl' → logprob: -17.375001907348633
    7. ')' → logprob: -17.750001907348633
    8. 'plit' → logprob: -18.375001907348633
    9. 's' → logprob: -19.125001907348633
    10. '.split' → logprob: -19.625001907348633

Token 43: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011558275582501665
    2. '()' → logprob: -9.125115394592285
    3. '(' → logprob: -12.875115394592285
    4. ' )' → logprob: -13.375115394592285
    5. '())' → logprob: -13.750115394592285
    6. '`)' → logprob: -14.500115394592285
    7. ')`' → logprob: -15.625115394592285
    8. '))' → logprob: -15.625115394592285
    9. '```' → logprob: -16.0001163482666
    10. ')
' → logprob: -16.1251163482666

Token 44: 'z' (ID: 89)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4242546558380127
    2. 'city' → logprob: -2.6742546558380127
    3. 'cities' → logprob: -2.6742546558380127
    4. 'dist' → logprob: -2.7992546558380127
    5. 'roads' → logprob: -3.5492546558380127
    6. 'houses' → logprob: -4.049254417419434
    7. 'nodes' → logprob: -4.174254417419434
    8. 'edges' → logprob: -4.424254417419434
    9. 'town' → logprob: -4.674254417419434
    10. 'danger' → logprob: -4.799254417419434

Token 45: 'ombies' (ID: 63370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42160287499427795
    2. 'ones' → logprob: -2.046602964401245
    3. ' =' → logprob: -2.296602964401245
    4. 'o' → logprob: -3.671602964401245
    5. 'e' → logprob: -3.921602964401245
    6. 'a' → logprob: -4.296602725982666
    7. '=[]' → logprob: -4.296602725982666
    8. 'ip' → logprob: -4.421602725982666
    9. 'one' → logprob: -4.796602725982666
    10. 's' → logprob: -5.171602725982666

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023132972419261932
    2. '=' → logprob: -3.8981330394744873
    3. '_' → logprob: -6.148132801055908
    4. '_positions' → logprob: -9.398133277893066
    5. '_space' → logprob: -9.523133277893066
    6. ',' → logprob: -9.773133277893066
    7. '_locations' → logprob: -9.773133277893066
    8. '[' → logprob: -10.523133277893066
    9. '=[]' → logprob: -10.773133277893066
    10. 's' → logprob: -10.898133277893066

Token 47: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.054004304111003876
    2. ' [' → logprob: -4.054004192352295
    3. '[]' → logprob: -4.304004192352295
    4. ' ' → logprob: -4.679004192352295
    5. ' set' → logprob: -5.804004192352295
    6. 'deque' → logprob: -5.804004192352295
    7. ' list' → logprob: -6.054004192352295
    8. ' deque' → logprob: -6.429004192352295
    9. '[' → logprob: -6.429004192352295
    10. 'set' → logprob: -7.929004192352295

Token 48: 'int' (ID: 491)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.0454907417297363
    2. '0' → logprob: -1.5454907417297363
    3. '[]' → logprob: -1.6704907417297363
    4. 'tuple' → logprob: -1.7954907417297363
    5. 'int' → logprob: -2.9204907417297363
    6. 'False' → logprob: -4.420490741729736
    7. '[int' → logprob: -5.420490741729736
    8. ']' → logprob: -6.045490741729736
    9. '(int' → logprob: -6.170490741729736
    10. '[]
' → logprob: -6.295490741729736

Token 49: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004976389463990927
    2. '(x' → logprob: -5.629976272583008
    3. '(input' → logprob: -6.879976272583008
    4. '(
' → logprob: -9.004976272583008
    5. '(i' → logprob: -9.379976272583008
    6. '()' → logprob: -10.129976272583008
    7. ']' → logprob: -10.504976272583008
    8. '()]' → logprob: -10.629976272583008
    9. '(

' → logprob: -11.254976272583008
    10. '(in' → logprob: -12.379976272583008

Token 50: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01035325787961483
    2. '()' → logprob: -4.760353088378906
    3. '()]' → logprob: -6.885353088378906
    4. ')' → logprob: -7.635353088378906
    5. '().' → logprob: -9.010353088378906
    6. '()
' → logprob: -10.010353088378906
    7. '())
' → logprob: -10.635353088378906
    8. '()),' → logprob: -11.635353088378906
    9. '();)' → logprob: -12.385353088378906
    10. ' ())' → logprob: -12.510353088378906

Token 51: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013270224444568157
    2. '()]' → logprob: -7.001327037811279
    3. '(' → logprob: -8.626326560974121
    4. '())' → logprob: -8.876326560974121
    5. ')' → logprob: -10.001326560974121
    6. 'for' → logprob: -11.251326560974121
    7. ' ()' → logprob: -11.376326560974121
    8. '().' → logprob: -11.626326560974121
    9. '()
' → logprob: -11.626326560974121
    10. ' for' → logprob: -13.501326560974121

Token 52: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0032487702555954456
    2. 'range' → logprob: -6.003248691558838
    3. '_' → logprob: -7.503248691558838
    4. ' ' → logprob: -8.878249168395996
    5. ' _' → logprob: -9.753249168395996
    6. '_range' → logprob: -11.253249168395996
    7. '	range' → logprob: -12.128249168395996
    8. ' in' → logprob: -12.628249168395996
    9. ' i' → logprob: -13.253249168395996
    10. ' xrange' → logprob: -15.003249168395996

Token 53: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05969366803765297
    2. ' range' → logprob: -2.9346935749053955
    3. 'in' → logprob: -6.059693813323975
    4. ' in' → logprob: -6.059693813323975
    5. '	range' → logprob: -9.934693336486816
    6. '_' → logprob: -10.309693336486816
    7. '(range' → logprob: -10.309693336486816
    8. 'ange' → logprob: -11.934693336486816
    9. ')' → logprob: -12.934693336486816
    10. '_range' → logprob: -14.059693336486816

Token 54: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00011188744247192517
    2. ' range' → logprob: -9.12511157989502
    3. '(range' → logprob: -13.12511157989502
    4. '	range' → logprob: -14.75011157989502
    5. '```' → logprob: -16.125112533569336
    6. '[' → logprob: -16.125112533569336
    7. 'rang' → logprob: -17.000112533569336
    8. ')' → logprob: -17.125112533569336
    9. ']' → logprob: -17.375112533569336
    10. 'r' → logprob: -17.500112533569336

Token 55: '(K' (ID: 28797)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.3919510245323181
    2. '(N' → logprob: -1.141951084136963
    3. '(K' → logprob: -5.641951084136963
    4. '(' → logprob: -6.516951084136963
    5. '(S' → logprob: -11.516950607299805
    6. 'M' → logprob: -11.641950607299805
    7. '(Q' → logprob: -12.016950607299805
    8. '(
' → logprob: -12.266950607299805
    9. '(P' → logprob: -12.891950607299805
    10. 'N' → logprob: -12.891950607299805

Token 56: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.018491363152861595
    2. ')' → logprob: -4.143491268157959
    3. ']' → logprob: -6.018491268157959
    4. ')]
' → logprob: -11.893491744995117
    5. ')])' → logprob: -12.393491744995117
    6. '])' → logprob: -13.018491744995117
    7. ')],' → logprob: -13.518491744995117
    8. '）' → logprob: -13.893491744995117
    9. ' )' → logprob: -14.143491744995117
    10. ')
' → logprob: -14.268491744995117

Token 57: 'graph' (ID: 7978)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.7517662048339844
    2. 'graph' → logprob: -1.1267662048339844
    3. 'danger' → logprob: -2.5017662048339844
    4. 'dist' → logprob: -3.3767662048339844
    5. 'visited' → logprob: -4.126766204833984
    6. '
' → logprob: -4.126766204833984
    7. '-safe' → logprob: -4.501766204833984
    8. 'distance' → logprob: -4.751766204833984
    9. 'is' → logprob: -5.251766204833984
    10. ' safe' → logprob: -5.251766204833984

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018160827457904816
    2. '=' → logprob: -4.018160820007324
    3. '[' → logprob: -11.768160820007324
    4. '[]' → logprob: -13.893160820007324
    5. ' ' → logprob: -14.393160820007324
    6. '=[]' → logprob: -14.518160820007324
    7. ' =[' → logprob: -14.893160820007324
    8. ',' → logprob: -15.393160820007324
    9. '_' → logprob: -16.01816177368164
    10. ']' → logprob: -16.01816177368164

Token 59: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008680282160639763
    2. ' [[]' → logprob: -4.75868034362793
    3. ' [' → logprob: -9.75868034362793
    4. '{' → logprob: -12.00868034362793
    5. 'default' → logprob: -14.38368034362793
    6. '[]' → logprob: -14.50868034362793
    7. '{}' → logprob: -14.75868034362793
    8. ' defaultdict' → logprob: -16.25868034362793
    9. '[n' → logprob: -16.88368034362793
    10. ' {' → logprob: -17.25868034362793

Token 60: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7746837139129639
    2. ' for' → logprob: -1.0246837139129639
    3. '(' → logprob: -1.8996837139129639
    4. ']' → logprob: -4.149683952331543
    5. '(N' → logprob: -4.649683952331543
    6. '()' → logprob: -5.774683952331543
    7. ',' → logprob: -7.524683952331543
    8. '(range' → logprob: -7.649683952331543
    9. ')' → logprob: -8.274683952331543
    10. '(M' → logprob: -8.524683952331543

Token 61: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1670638620853424
    2. ' _' → logprob: -2.2920639514923096
    3. ' range' → logprob: -3.0420639514923096
    4. ' in' → logprob: -6.1670637130737305
    5. 'range' → logprob: -6.9170637130737305
    6. ' ' → logprob: -6.9170637130737305
    7. '(' → logprob: -7.4170637130737305
    8. '(range' → logprob: -8.54206371307373
    9. ' i' → logprob: -9.04206371307373
    10. '_range' → logprob: -10.66706371307373

Token 62: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2617169916629791
    2. ' in' → logprob: -1.5117169618606567
    3. 'range' → logprob: -4.636716842651367
    4. ' range' → logprob: -10.261716842651367
    5. '(range' → logprob: -12.386716842651367
    6. ' ' → logprob: -12.511716842651367
    7. '(' → logprob: -13.011716842651367
    8. 'n' → logprob: -13.511716842651367
    9. '_' → logprob: -13.886716842651367
    10. ')' → logprob: -14.761716842651367

Token 63: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14270707964897156
    2. ' range' → logprob: -2.017707109451294
    3. '(range' → logprob: -10.642706871032715
    4. ' ' → logprob: -12.392706871032715
    5. '	range' → logprob: -14.017706871032715
    6. 'in' → logprob: -14.517706871032715
    7. ')' → logprob: -14.892706871032715
    8. ' in' → logprob: -14.892706871032715
    9. 'rang' → logprob: -15.142706871032715
    10. 'ran' → logprob: -15.267706871032715

Token 64: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001955990679562092
    2. '(' → logprob: -6.376955986022949
    3. '(range' → logprob: -8.75195598602295
    4. '(M' → logprob: -9.75195598602295
    5. '(n' → logprob: -11.25195598602295
    6. '((' → logprob: -11.37695598602295
    7. ' (' → logprob: -12.37695598602295
    8. ' range' → logprob: -12.62695598602295
    9. 'range' → logprob: -13.25195598602295
    10. '(S' → logprob: -14.12695598602295

Token 65: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00019865304057020694
    2. ')' → logprob: -8.625198364257812
    3. '+' → logprob: -11.375198364257812
    4. ']' → logprob: -12.250198364257812
    5. ' )' → logprob: -13.125198364257812
    6. ')]
' → logprob: -15.750198364257812
    7. ')])' → logprob: -15.750198364257812
    8. '>]' → logprob: -16.375198364257812
    9. '])' → logprob: -16.625198364257812
    10. '')]' → logprob: -16.625198364257812

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009756443090736866
    2. ' ' → logprob: -4.634756565093994
    3. '2' → logprob: -15.384756088256836
    4. ')' → logprob: -15.884756088256836
    5. '```' → logprob: -16.759756088256836
    6. ' )' → logprob: -17.009756088256836
    7. '0' → logprob: -17.134756088256836
    8. '  ' → logprob: -18.009756088256836
    9. '１' → logprob: -18.447256088256836
    10. '

' → logprob: -18.572256088256836

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.500011444091797
    3. '2' → logprob: -13.875011444091797
    4. '１' → logprob: -16.375011444091797
    5. '```' → logprob: -16.625011444091797
    6. '0' → logprob: -16.750011444091797
    7. '7' → logprob: -18.375011444091797
    8. '۱' → logprob: -18.437511444091797
    9. '

' → logprob: -18.500011444091797
    10. ')' → logprob: -18.750011444091797

Token 68: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0166370440274477
    2. ')]' → logprob: -4.266636848449707
    3. ')' → logprob: -6.016636848449707
    4. ']
' → logprob: -10.766636848449707
    5. ' ]' → logprob: -12.016636848449707
    6. ']
' → logprob: -13.516636848449707
    7. '`]' → logprob: -13.766636848449707
    8. '])' → logprob: -13.891636848449707
    9. ']

' → logprob: -14.016636848449707
    10. '}]' → logprob: -15.516636848449707

Token 69: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.029753733426332474
    2. ' _' → logprob: -3.5297536849975586
    3. '_i' → logprob: -13.654753684997559
    4. ' ' → logprob: -13.779753684997559
    5. ' i' → logprob: -15.154753684997559
    6. ' in' → logprob: -15.529753684997559
    7. '_range' → logprob: -16.029754638671875
    8. ' range' → logprob: -16.529754638671875
    9. ' ' → logprob: -16.654754638671875
    10. 'i' → logprob: -16.779754638671875

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12772829830646515
    2. 'in' → logprob: -2.127728223800659
    3. ' ' → logprob: -7.252728462219238
    4. 'i' → logprob: -10.252728462219238
    5. 'n' → logprob: -10.752728462219238
    6. ' i' → logprob: -11.377728462219238
    7. '<|end|>' → logprob: -11.752728462219238
    8. ',' → logprob: -12.127728462219238
    9. '	in' → logprob: -12.752728462219238
    10. '_' → logprob: -13.877728462219238

Token 72: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004896456957794726
    2. ' range' → logprob: -7.625489711761475
    3. '(range' → logprob: -14.000489234924316
    4. 'ange' → logprob: -14.625489234924316
    5. '	range' → logprob: -16.500490188598633
    6. '```' → logprob: -16.625490188598633
    7. 'rang' → logprob: -16.875490188598633
    8. 'r' → logprob: -17.250490188598633
    9. 'ran' → logprob: -17.500490188598633
    10. 'input' → logprob: -18.125490188598633

Token 73: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0007231564959511161
    2. 'M' → logprob: -7.375723361968994
    3. '(' → logprob: -9.500722885131836
    4. ' M' → logprob: -11.000722885131836
    5. ' (' → logprob: -12.375722885131836
    6. '(m' → logprob: -15.625722885131836
    7. '(
' → logprob: -16.000722885131836
    8. ',M' → logprob: -16.500722885131836
    9. '	M' → logprob: -16.625722885131836
    10. '(N' → logprob: -16.750722885131836

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021155239082872868
    2. ' ):' → logprob: -6.252115726470947
    3. '):
' → logprob: -9.252115249633789
    4. ')' → logprob: -9.752115249633789
    5. ':' → logprob: -10.502115249633789
    6. '():' → logprob: -13.502115249633789
    7. ' )' → logprob: -14.002115249633789
    8. ' ' → logprob: -14.127115249633789
    9. ',' → logprob: -14.502115249633789
    10. ' ):
' → logprob: -14.877115249633789

Token 75: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.22793133556842804
    2. 'u' → logprob: -1.6029313802719116
    3. 'a' → logprob: -6.477931499481201
    4. ' a' → logprob: -7.352931499481201
    5. '   ' → logprob: -8.477931022644043
    6. '	u' → logprob: -9.727931022644043
    7. '<|end|>' → logprob: -11.227931022644043
    8. '```' → logprob: -11.352931022644043
    9. ' v' → logprob: -11.852931022644043
    10. ',u' → logprob: -12.352931022644043

Token 76: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3929051160812378
    2. 'a' (adapté à ' a') → logprob: -1.1429051160812378
    3. ' u' → logprob: -5.267905235290527
    4. ' a' → logprob: -7.267905235290527
    5. 'U' → logprob: -9.642905235290527
    6. 'x' → logprob: -9.892905235290527
    7. 'A' → logprob: -10.892905235290527
    8. '```' → logprob: -11.517905235290527
    9. '   ' → logprob: -12.142905235290527
    10. 's' → logprob: -12.642905235290527

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016073083505034447
    2. ',b' → logprob: -4.266073226928711
    3. ' ,' → logprob: -6.266073226928711
    4. 'b' → logprob: -12.266073226928711
    5. ',v' → logprob: -13.266073226928711
    6. ',n' → logprob: -14.891073226928711
    7. ',a' → logprob: -15.016073226928711
    8. ',B' → logprob: -15.266073226928711
    9. ',input' → logprob: -15.766073226928711
    10. ',d' → logprob: -15.891073226928711

Token 78: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5759497284889221
    2. ' b' → logprob: -0.8259497284889221
    3. ' ' → logprob: -11.700949668884277
    4. '<|end|>' → logprob: -13.200949668884277
    5. '	b' → logprob: -16.325950622558594
    6. '<|end|>' → logprob: -17.450950622558594
    7. '>b' → logprob: -17.575950622558594
    8. ',b' → logprob: -18.075950622558594
    9. ')b' → logprob: -18.075950622558594
    10. 'c' → logprob: -18.075950622558594

Token 79: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.251930296421051
    2. ' =' → logprob: -1.5019302368164062
    3. '=input' → logprob: -14.126930236816406
    4. '=line' → logprob: -16.126930236816406
    5. '=int' → logprob: -16.376930236816406
    6. '＝' → logprob: -16.626930236816406
    7. ' ' → logprob: -17.001930236816406
    8. ')' → logprob: -17.376930236816406
    9. '=sys' → logprob: -17.501930236816406
    10. '=

' → logprob: -17.626930236816406

Token 80: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.011096046306192875
    2. 'map' → logprob: -4.511096000671387
    3. ' input' → logprob: -10.136096000671387
    4. ' ' → logprob: -12.011096000671387
    5. 'input' → logprob: -13.261096000671387
    6. ' list' → logprob: -15.011096000671387
    7. '	map' → logprob: -15.011096000671387
    8. '  ' → logprob: -17.261096954345703
    9. '(map' → logprob: -17.386096954345703
    10. 'list' → logprob: -17.636096954345703

Token 81: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0059753661043941975
    2. '(' → logprob: -5.130975246429443
    3. ' (' → logprob: -11.255975723266602
    4. '(in' → logprob: -11.255975723266602
    5. '(lambda' → logprob: -11.380975723266602
    6. '(input' → logprob: -12.630975723266602
    7. '<int' → logprob: -13.380975723266602
    8. '=int' → logprob: -13.755975723266602
    9. '(i' → logprob: -14.005975723266602
    10. '(list' → logprob: -14.130975723266602

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14399686455726624
    2. ',input' → logprob: -2.1439969539642334
    3. '(),' → logprob: -4.643996715545654
    4. ',int' → logprob: -5.768996715545654
    5. ' ,' → logprob: -5.893996715545654
    6. '(' → logprob: -7.768996715545654
    7. '(input' → logprob: -8.018997192382812
    8. '(int' → logprob: -8.143997192382812
    9. 'input' → logprob: -9.018997192382812
    10. '()' → logprob: -9.643997192382812

Token 83: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759403705596924
    2. 'input' → logprob: -0.8259403705596924
    3. ' ' → logprob: -15.075940132141113
    4. 'int' → logprob: -15.325940132141113
    5. '(input' → logprob: -16.20094108581543
    6. '	input' → logprob: -16.45094108581543
    7. ',input' → logprob: -16.82594108581543
    8. '=input' → logprob: -16.95094108581543
    9. 'map' → logprob: -17.32594108581543
    10. ')' → logprob: -17.32594108581543

Token 84: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3425219549390022e-05
    2. '()' → logprob: -11.37501335144043
    3. ' ().' → logprob: -14.12501335144043
    4. ')' → logprob: -14.50001335144043
    5. '.' → logprob: -15.00001335144043
    6. '.split' → logprob: -15.87501335144043
    7. ' .' → logprob: -16.62501335144043
    8. '(' → logprob: -16.87501335144043
    9. '())' → logprob: -16.87501335144043
    10. '.readline' → logprob: -17.12501335144043

Token 85: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. ')' → logprob: -15.750000953674316
    3. ' split' → logprob: -15.875000953674316
    4. 'strip' → logprob: -16.125
    5. 'spl' → logprob: -17.0
    6. '(split' → logprob: -17.75
    7. 'plit' → logprob: -18.25
    8. 'sp' → logprob: -20.125
    9. '```' → logprob: -20.125
    10. 's' → logprob: -20.125

Token 86: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004708515014499426
    2. '())' → logprob: -5.754708290100098
    3. '()' → logprob: -7.004708290100098
    4. ')
' → logprob: -7.504708290100098
    5. '))' → logprob: -10.504708290100098
    6. '())
' → logprob: -11.129708290100098
    7. ' )' → logprob: -11.504708290100098
    8. '()
' → logprob: -12.629708290100098
    9. ')
' → logprob: -12.629708290100098
    10. '   ' → logprob: -12.879708290100098

Token 87: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33738651871681213
    2. 'graph' → logprob: -1.5873864889144897
    3. ' graph' → logprob: -3.5873866081237793
    4. '	graph' → logprob: -3.5873866081237793
    5. '   ' → logprob: -3.8373866081237793
    6. '    
' → logprob: -6.712386608123779
    7. '```' → logprob: -6.712386608123779
    8. '(graph' → logprob: -7.462386608123779
    9. ' 
' → logprob: -7.587386608123779
    10. '<|end|>' → logprob: -8.087386131286621

Token 88: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.3871816396713257
    2. 'graph' (adapté à ' graph') → logprob: -1.1371816396713257
    3. '
' → logprob: -8.637181282043457
    4. ' 
' → logprob: -9.137181282043457
    5. '	graph' → logprob: -10.887181282043457
    6. '(graph' → logprob: -13.012181282043457
    7. '```' → logprob: -13.637181282043457
    8. '_graph' → logprob: -13.887181282043457
    9. '   ' → logprob: -14.012181282043457
    10. '.graph' → logprob: -14.637181282043457

Token 89: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.5776860184123507e-06
    2. 'a' → logprob: -13.75000286102295
    3. ' [' → logprob: -14.50000286102295
    4. '[' → logprob: -14.62500286102295
    5. '[b' → logprob: -14.87500286102295
    6. '   ' → logprob: -16.750001907348633
    7. '```' → logprob: -17.000001907348633
    8. '[i' → logprob: -18.750001907348633
    9. ')[' → logprob: -18.875001907348633
    10. '[u' → logprob: -18.875001907348633

Token 90: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.1475783735513687
    2. '.' → logprob: -2.397578477859497
    3. '.append' → logprob: -3.397578477859497
    4. ').' → logprob: -4.397578239440918
    5. ' .' → logprob: -8.397578239440918
    6. '[' → logprob: -9.147578239440918
    7. ' ].' → logprob: -9.772578239440918
    8. ']' → logprob: -10.147578239440918
    9. '.app' → logprob: -11.022578239440918
    10. ')' → logprob: -11.397578239440918

Token 91: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. ' append' → logprob: -16.25
    3. '.append' → logprob: -16.375
    4. 'app' → logprob: -19.0
    5. '_append' → logprob: -20.25
    6. 'appen' → logprob: -20.5
    7. 'Append' → logprob: -21.0
    8. ' ' → logprob: -21.125
    9. '	append' → logprob: -22.25
    10. 'push' → logprob: -22.375

Token 92: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -3.690834273584187e-05
    2. '(' → logprob: -10.25003719329834
    3. 'b' → logprob: -13.75003719329834
    4. ' (' → logprob: -15.37503719329834
    5. '(
' → logprob: -16.625036239624023
    6. ' b' → logprob: -17.250036239624023
    7. '	b' → logprob: -19.375036239624023
    8. ')b' → logprob: -19.500036239624023
    9. '(B' → logprob: -20.375036239624023
    10. '((' → logprob: -20.625036239624023

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010524577228352427
    2. ')
' → logprob: -6.876052379608154
    3. ' )' → logprob: -10.876052856445312
    4. ')
' → logprob: -15.376052856445312
    5. ' )
' → logprob: -15.751052856445312
    6. '),' → logprob: -15.876052856445312
    7. '   ' → logprob: -16.501052856445312
    8. ')

' → logprob: -17.126052856445312
    9. '[' → logprob: -17.751052856445312
    10. '<|end|>' → logprob: -17.751052856445312

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008235682616941631
    2. '<|end|>' → logprob: -7.375823497772217
    3. '    
' → logprob: -9.000823974609375
    4. '[' → logprob: -11.125823974609375
    5. '	graph' → logprob: -11.375823974609375
    6. '
' → logprob: -11.500823974609375
    7. '```' → logprob: -11.625823974609375
    8. '  
' → logprob: -11.750823974609375
    9. '   ' → logprob: -12.500823974609375
    10. '<|end|>' → logprob: -13.000823974609375

Token 95: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6932319402694702
    2. 'graph' (adapté à ' graph') → logprob: -0.6932319402694702
    3. '	graph' → logprob: -9.443231582641602
    4. '   ' → logprob: -13.193231582641602
    5. '(graph' → logprob: -13.193231582641602
    6. '.graph' → logprob: -13.818231582641602
    7. '_graph' → logprob: -14.943231582641602
    8. ' 
' → logprob: -16.1932315826416
    9. 'raph' → logprob: -16.5682315826416
    10. ' ' → logprob: -16.9432315826416

Token 96: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.2127087504486553e-05
    2. '[a' → logprob: -10.875021934509277
    3. '[' → logprob: -12.750021934509277
    4. 'b' → logprob: -15.500021934509277
    5. '```' → logprob: -17.250022888183594
    6. ' [' → logprob: -19.125022888183594
    7. '[s' → logprob: -19.125022888183594
    8. ')[' → logprob: -19.750022888183594
    9. '	b' → logprob: -20.000022888183594
    10. '][' → logprob: -20.250022888183594

Token 97: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.7390661239624023
    2. ').' → logprob: -1.4890661239624023
    3. '].' → logprob: -1.6140661239624023
    4. '.' → logprob: -2.3640661239624023
    5. ')' → logprob: -5.739066123962402
    6. ' .' → logprob: -8.114066123962402
    7. '   ' → logprob: -10.364066123962402
    8. ']' → logprob: -10.489066123962402
    9. ' ).' → logprob: -10.489066123962402
    10. '.)' → logprob: -10.489066123962402

Token 98: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. ' append' → logprob: -16.75
    3. 'appen' → logprob: -16.875
    4. 'app' → logprob: -17.625
    5. '	append' → logprob: -18.375
    6. '.append' → logprob: -19.0
    7. '```' → logprob: -20.125
    8. '_append' → logprob: -20.625
    9. 'add' → logprob: -21.625
    10. 'Append' → logprob: -21.75

Token 99: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -6.670925358776003e-05
    2. '(' → logprob: -9.625066757202148
    3. ' (' → logprob: -14.625066757202148
    4. '(
' → logprob: -15.875066757202148
    5. 'a' → logprob: -17.25006675720215
    6. '(b' → logprob: -18.37506675720215
    7. '(A' → logprob: -18.87506675720215
    8. ')' → logprob: -20.12506675720215
    9. '(

' → logprob: -20.62506675720215
    10. '(ai' → logprob: -20.62506675720215

Token 100: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9504606825648807e-05
    2. ')
' → logprob: -11.000019073486328
    3. ' )' → logprob: -12.875019073486328
    4. '))' → logprob: -17.500019073486328
    5. '`)' → logprob: -17.500019073486328
    6. '   ' → logprob: -17.500019073486328
    7. ')

' → logprob: -17.750019073486328
    8. ')
' → logprob: -17.750019073486328
    9. ')`' → logprob: -18.000019073486328
    10. '}' → logprob: -18.125019073486328

Token 101: '#' (ID: 2)
  Prédit: 'danger'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'danger' → logprob: -0.4855237603187561
    2. 'dist' → logprob: -1.7355237007141113
    3. 'safe' → logprob: -2.1105237007141113
    4. 'distance' → logprob: -3.8605237007141113
    5. 'visited' → logprob: -4.110523700714111
    6. 'queue' → logprob: -4.360523700714111
    7. 'status' → logprob: -4.860523700714111
    8. 'INF' → logprob: -5.360523700714111
    9. 'inf' → logprob: -5.860523700714111
    10. 'infect' → logprob: -5.860523700714111

Token 102: ' Distance' (ID: 53583)
  Prédit: 'danger'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'danger' → logprob: -0.9861429929733276
    2. 'dist' → logprob: -1.2361429929733276
    3. 'queue' → logprob: -2.111143112182617
    4. 'visited' → logprob: -2.361143112182617
    5. 'safe' → logprob: -3.361143112182617
    6. 'from' → logprob: -3.486143112182617
    7. 'distance' → logprob: -3.986143112182617
    8. '#' → logprob: -4.361143112182617
    9. 'infect' → logprob: -4.986143112182617
    10. 'q' → logprob: -5.236143112182617

Token 103: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39762094616889954
    2. '=' → logprob: -1.1476209163665771
    3. 's' → logprob: -4.897621154785156
    4. '_from' → logprob: -6.897621154785156
    5. 'from' → logprob: -7.272621154785156
    6. '_to' → logprob: -7.647621154785156
    7. '[' → logprob: -7.647621154785156
    8. '=[' → logprob: -8.522621154785156
    9. '[]' → logprob: -9.022621154785156
    10. 'to' → logprob: -10.022621154785156

Token 104: ' nearest' (ID: 35210)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.03315870091319084
    2. 'infect' → logprob: -4.033158779144287
    3. '[]' → logprob: -5.408158779144287
    4. 'each' → logprob: -5.908158779144287
    5. 'inf' → logprob: -6.283158779144287
    6. '[z' → logprob: -6.658158779144287
    7. 'danger' → logprob: -6.908158779144287
    8. '[' → logprob: -6.908158779144287
    9. 'queue' → logprob: -7.658158779144287
    10. 'safe' → logprob: -8.158158302307129

Token 105: ' zombie' (ID: 71210)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.016593072563409805
    2. ' zombie' → logprob: -4.266592979431152
    3. '```' → logprob: -7.016592979431152
    4. ' z' → logprob: -7.641592979431152
    5. 'safe' → logprob: -7.641592979431152
    6. 'danger' → logprob: -9.016592979431152
    7. ' safe' → logprob: -9.266592979431152
    8. '_z' → logprob: -9.641592979431152
    9. 'infect' → logprob: -9.891592979431152
    10. 'unsafe' → logprob: -10.516592979431152

Token 106: ' for' (ID: 395)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22025667130947113
    2. 'distance' → logprob: -1.8452566862106323
    3. ' =' → logprob: -3.3452565670013428
    4. '=' → logprob: -6.720256805419922
    5. 'dis' → logprob: -7.470256805419922
    6. '_dist' → logprob: -7.470256805419922
    7. '_distance' → logprob: -7.595256805419922
    8. 'danger' → logprob: -7.845256805419922
    9. 'd' → logprob: -8.095256805419922
    10. ' distance' → logprob: -8.095256805419922

Token 107: ' each' (ID: 2454)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2629300355911255
    2. ' node' → logprob: -2.137929916381836
    3. ' each' → logprob: -2.387929916381836
    4. 'each' → logprob: -4.512929916381836
    5. 'i' → logprob: -5.137929916381836
    6. 'node' → logprob: -6.012929916381836
    7. ' ' → logprob: -7.762929916381836
    8. ' all' → logprob: -7.887929916381836
    9. 'dist' → logprob: -8.512929916381836
    10. ' vertex' → logprob: -8.637929916381836

Token 108: ' town' (ID: 8234)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.14418552815914154
    2. ' node' → logprob: -2.0191855430603027
    3. 'city' → logprob: -7.519185543060303
    4. 'vertex' → logprob: -7.769185543060303
    5. '[node' → logprob: -9.144185066223145
    6. 'house' → logprob: -9.394185066223145
    7. 'area' → logprob: -9.769185066223145
    8. ' city' → logprob: -10.019185066223145
    9. 'i' → logprob: -10.019185066223145
    10. 'room' → logprob: -10.269185066223145

Token 109: ',' (ID: 11)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4748213589191437
    2. 'distance' → logprob: -0.9748213291168213
    3. ' =' → logprob: -8.099821090698242
    4. 'd' → logprob: -9.099821090698242
    5. '
' → logprob: -9.224821090698242
    6. 'INF' → logprob: -10.099821090698242
    7. '=' → logprob: -10.474821090698242
    8. ' distance' → logprob: -10.474821090698242
    9. 'danger' → logprob: -10.724821090698242
    10. '```' → logprob: -10.849821090698242

Token 110: ' initialize' (ID: 18400)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0210379958152771
    2. 'distance' → logprob: -4.021038055419922
    3. ' dist' → logprob: -6.271038055419922
    4. 'INF' → logprob: -7.521038055419922
    5. ' distance' → logprob: -8.771038055419922
    6. 'inf' → logprob: -9.396038055419922
    7. ' INF' → logprob: -10.021038055419922
    8. 'd' → logprob: -10.271038055419922
    9. 'deque' → logprob: -10.521038055419922
    10. 'visited' → logprob: -10.646038055419922

Token 111: ' with' (ID: 483)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.432675838470459
    2. ' =' → logprob: -1.807675838470459
    3. 'distance' → logprob: -1.807675838470459
    4. '=' → logprob: -3.932675838470459
    5. ' distance' → logprob: -6.682675838470459
    6. ' dist' → logprob: -7.432675838470459
    7. ' distances' → logprob: -7.557675838470459
    8. ':' → logprob: -7.682675838470459
    9. 'd' → logprob: -8.432676315307617
    10. 'dis' → logprob: -8.932676315307617

Token 112: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07944641262292862
    2. 'float' → logprob: -2.579446315765381
    3. '-inf' → logprob: -8.329446792602539
    4. ' -' → logprob: -8.579446792602539
    5. '10' → logprob: -9.829446792602539
    6. ' float' → logprob: -10.079446792602539
    7. '-f' → logprob: -10.829446792602539
    8. '[-' → logprob: -13.079446792602539
    9. '-int' → logprob: -13.204446792602539
    10. '0' → logprob: -13.454446792602539

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.375001907348633
    3. '-' → logprob: -15.375001907348633
    4. '2' → logprob: -16.250001907348633
    5. ' -' → logprob: -16.250001907348633
    6. 'inf' → logprob: -16.875001907348633
    7. 'distance' → logprob: -17.750001907348633
    8. '```' → logprob: -17.750001907348633
    9. '   ' → logprob: -18.375001907348633
    10. '１' → logprob: -18.812501907348633

Token 114: ' (' (ID: 350)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.2327839434146881
    2. 'dist' → logprob: -1.6077839136123657
    3. '
' → logprob: -5.357783794403076
    4. 'd' → logprob: -6.232783794403076
    5. ' distance' → logprob: -8.107784271240234
    6. 'dis' → logprob: -8.857784271240234
    7. ' distances' → logprob: -9.982784271240234
    8. ' dist' → logprob: -10.482784271240234
    9. '_distance' → logprob: -10.732784271240234
    10. 'visited' → logprob: -10.732784271240234

Token 115: 'un' (ID: 373)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.25425440073013306
    2. ')' → logprob: -2.5042543411254883
    3. '-' → logprob: -2.6292543411254883
    4. 'visited' → logprob: -4.004254341125488
    5. 'inf' → logprob: -4.254254341125488
    6. ' distances' → logprob: -5.129254341125488
    7. 'unknown' → logprob: -5.254254341125488
    8. ' unknown' → logprob: -5.504254341125488
    9. ' )' → logprob: -5.754254341125488
    10. 'distance' → logprob: -6.254254341125488

Token 116: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.01183378417044878
    2. 'known' → logprob: -5.011833667755127
    3. 'reachable' → logprob: -6.136833667755127
    4. 'available' → logprob: -7.386833667755127
    5. 'expl' → logprob: -7.511833667755127
    6. ')' → logprob: -8.136834144592285
    7. 'dis' → logprob: -8.136834144592285
    8. 'initialized' → logprob: -8.386834144592285
    9. '1' → logprob: -8.886834144592285
    10. 'visit' → logprob: -9.011834144592285

Token 117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01097920536994934
    2. ')
' → logprob: -4.635979175567627
    3. 'distance' → logprob: -7.760979175567627
    4. ' )' → logprob: -8.010979652404785
    5. ')
' → logprob: -8.635979652404785
    6. ' distances' → logprob: -9.260979652404785
    7. 'dist' → logprob: -9.635979652404785
    8. ',' → logprob: -9.760979652404785
    9. ')

' → logprob: -10.385979652404785
    10. ' )
' → logprob: -11.260979652404785

Token 118: 'dist' (ID: 24126)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.5814772844314575
    2. 'dist' → logprob: -0.8314772844314575
    3. ' distance' → logprob: -5.706477165222168
    4. ' dist' → logprob: -6.956477165222168
    5. 'dis' → logprob: -7.456477165222168
    6. ' distances' → logprob: -8.581477165222168
    7. '
' → logprob: -8.956477165222168
    8. 'd' → logprob: -9.206477165222168
    9. 'z' → logprob: -9.581477165222168
    10. '```' → logprob: -10.331477165222168

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13053268194198608
    2. '=' → logprob: -2.130532741546631
    3. 's' → logprob: -6.005532741546631
    4. '_' → logprob: -7.505532741546631
    5. ' ' → logprob: -9.005532264709473
    6. '[' → logprob: -9.005532264709473
    7. '[]' → logprob: -9.380532264709473
    8. '_to' → logprob: -9.380532264709473
    9. 'ances' → logprob: -10.255532264709473
    10. '_z' → logprob: -10.880532264709473

Token 120: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.3132954239845276
    2. ' [-' → logprob: -1.3132953643798828
    3. '[' → logprob: -10.813295364379883
    4. ' [' → logprob: -11.313295364379883
    5. ' ' → logprob: -13.938295364379883
    6. '([-' → logprob: -15.813295364379883
    7. '-' → logprob: -16.063295364379883
    8. '[:]' → logprob: -16.188295364379883
    9. ' ' → logprob: -17.063295364379883
    10. '[:-' → logprob: -17.438295364379883

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0087516784551553e-05
    2. '2' → logprob: -12.12501049041748
    3. ' ' → logprob: -12.87501049041748
    4. '-' → logprob: -13.87501049041748
    5. '10' → logprob: -15.25001049041748
    6. ' -' → logprob: -15.93751049041748
    7. 'float' → logprob: -16.312509536743164
    8. 'inf' → logprob: -16.312509536743164
    9. '   ' → logprob: -17.062509536743164
    10. '999' → logprob: -17.125009536743164

Token 122: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10507000237703323
    2. ' for' → logprob: -2.605070114135742
    3. ' ]' → logprob: -4.355070114135742
    4. 'for' → logprob: -4.480070114135742
    5. ')' → logprob: -7.480070114135742
    6. ']*(' → logprob: -7.605070114135742
    7. ']*' → logprob: -7.855070114135742
    8. ',' → logprob: -9.730070114135742
    9. ']+' → logprob: -10.855070114135742
    10. ' *' → logprob: -10.855070114135742

Token 123: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8806198835372925
    2. '(N' → logprob: -0.8806198835372925
    3. ' for' → logprob: -2.630620002746582
    4. '(' → logprob: -3.005620002746582
    5. '*' → logprob: -4.255620002746582
    6. '+' → logprob: -4.380620002746582
    7. '[' → logprob: -5.005620002746582
    8. '*(' → logprob: -5.755620002746582
    9. '```' → logprob: -6.005620002746582
    10. '[N' → logprob: -6.255620002746582

Token 124: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0013128553982824087
    2. ' (' → logprob: -6.876312732696533
    3. '(' → logprob: -8.876313209533691
    4. '(n' → logprob: -9.251313209533691
    5. '(len' → logprob: -10.376313209533691
    6. '
' → logprob: -12.501313209533691
    7. '((' → logprob: -12.876313209533691
    8. '   ' → logprob: -13.501313209533691
    9. '0' → logprob: -13.876313209533691
    10. '`' → logprob: -14.376313209533691

Token 125: 'N' (ID: 45)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.003010269021615386
    2. ' (' → logprob: -6.628010272979736
    3. '(' → logprob: -6.878010272979736
    4. 'N' → logprob: -7.503010272979736
    5. '(len' → logprob: -10.253009796142578
    6. ')' → logprob: -11.503009796142578
    7. '(n' → logprob: -11.628009796142578
    8. '   ' → logprob: -11.878009796142578
    9. '((' → logprob: -12.003009796142578
    10. '(
' → logprob: -12.253009796142578

Token 126: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013332172529771924
    2. ' +' → logprob: -6.626333236694336
    3. '+
' → logprob: -12.001333236694336
    4. '
' → logprob: -15.001333236694336
    5. '1' → logprob: -15.626333236694336
    6. ')' → logprob: -15.626333236694336
    7. ' +
' → logprob: -16.001333236694336
    8. '+)' → logprob: -16.001333236694336
    9. '＋' → logprob: -17.376333236694336
    10. '<|end|>' → logprob: -17.501333236694336

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018196819291915745
    2. ' ' → logprob: -8.625182151794434
    3. ')' → logprob: -13.375182151794434
    4. '```' → logprob: -15.812682151794434
    5. '   ' → logprob: -16.000181198120117
    6. '  ' → logprob: -16.687681198120117
    7. '۱' → logprob: -16.750181198120117
    8. '(' → logprob: -16.750181198120117
    9. ' )' → logprob: -16.937681198120117
    10. '2' → logprob: -17.187681198120117

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -17.375003814697266
    4. '
' → logprob: -18.000003814697266
    5. '１' → logprob: -18.375003814697266
    6. '۱' → logprob: -18.500003814697266
    7. '2' → logprob: -19.125003814697266
    8. '   ' → logprob: -19.625003814697266
    9. '7' → logprob: -20.000003814697266
    10. '(' → logprob: -20.125003814697266

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004127080552279949
    2. ')
' → logprob: -5.504127025604248
    3. '
' → logprob: -10.754127502441406
    4. ')
' → logprob: -11.129127502441406
    5. ')

' → logprob: -12.004127502441406
    6. ' )' → logprob: -12.504127502441406
    7. '```' → logprob: -13.629127502441406
    8. '
' → logprob: -14.254127502441406
    9. '' → logprob: -15.629127502441406
    10. 'for' → logprob: -16.004127502441406

Token 130: 'que' (ID: 1126)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.04688054323196411
    2. 'dq' → logprob: -3.5468804836273193
    3. 'q' → logprob: -4.296880722045898
    4. 'deque' → logprob: -5.796880722045898
    5. 'que' → logprob: -8.671880722045898
    6. 'd' → logprob: -9.546880722045898
    7. 'from' → logprob: -10.296880722045898
    8. '```' → logprob: -10.796880722045898
    9. 'for' → logprob: -11.046880722045898
    10. ' queue' → logprob: -11.171880722045898

Token 131: ' =' (ID: 314)
  Prédit: 'ue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.9177520871162415
    2. '=' → logprob: -1.0427520275115967
    3. ' =' → logprob: -1.4177520275115967
    4. 'u' → logprob: -5.167752265930176
    5. 'uer' → logprob: -9.292752265930176
    6. 'e' → logprob: -11.167752265930176
    7. 'ues' → logprob: -11.542752265930176
    8. 'ued' → logprob: -12.042752265930176
    9. '```' → logprob: -12.417752265930176
    10. 'uem' → logprob: -12.667752265930176

Token 132: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0004306692280806601
    2. ' deque' → logprob: -7.750430583953857
    3. 'de' → logprob: -17.375431060791016
    4. 'collections' → logprob: -18.000431060791016
    5. '```' → logprob: -20.375431060791016
    6. 'Deque' → logprob: -20.750431060791016
    7. '	de' → logprob: -21.000431060791016
    8. ' ' → logprob: -21.625431060791016
    9. '(de' → logprob: -22.250431060791016
    10. '   ' → logprob: -22.625431060791016

Token 133: '()

' (ID: 5874)
  Prédit: '(z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.2271519899368286
    2. '()' → logprob: -1.7271519899368286
    3. '(' → logprob: -3.852151870727539
    4. '([' → logprob: -5.727151870727539
    5. '([(' → logprob: -7.352151870727539
    6. '([]' → logprob: -9.227151870727539
    7. '((' → logprob: -9.727151870727539
    8. '[z' → logprob: -10.727151870727539
    9. '([...' → logprob: -10.727151870727539
    10. '(Z' → logprob: -11.102151870727539

Token 134: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003403495065867901
    2. ' for' → logprob: -8.000340461730957
    3. '<|end|>' → logprob: -12.250340461730957
    4. '	for' → logprob: -16.12533950805664
    5. '#' → logprob: -18.00033950805664
    6. '0' → logprob: -18.37533950805664
    7. '<|end|>' → logprob: -18.50033950805664
    8. 'For' → logprob: -19.25033950805664
    9. '```' → logprob: -19.62533950805664
    10. 'and' → logprob: -20.00033950805664

Token 135: ' Start' (ID: 7972)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.869017852295656e-06
    2. ' for' → logprob: -12.375006675720215
    3. '#' → logprob: -12.875006675720215
    4. 'For' → logprob: -19.12500762939453
    5. '```' → logprob: -19.37500762939453
    6. '	for' → logprob: -19.62500762939453
    7. '
' → logprob: -19.87500762939453
    8. 'from' → logprob: -20.87500762939453
    9. '   ' → logprob: -21.62500762939453
    10. 'while' → logprob: -22.37500762939453

Token 136: ' BFS' (ID: 190016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.044872429221868515
    2. ' for' → logprob: -3.169872522354126
    3. '<|end|>' → logprob: -6.919872283935547
    4. 'with' → logprob: -8.419872283935547
    5. '(' → logprob: -8.794872283935547
    6. '()' → logprob: -9.044872283935547
    7. 'from' → logprob: -9.044872283935547
    8. 'z' → logprob: -10.419872283935547
    9. ' zombies' → logprob: -10.419872283935547
    10. '#' → logprob: -10.544872283935547

Token 137: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05646749213337898
    2. ' for' → logprob: -2.9314675331115723
    3. 'from' → logprob: -7.181467533111572
    4. '()' → logprob: -7.806467533111572
    5. '<|end|>' → logprob: -8.681467056274414
    6. 'with' → logprob: -9.806467056274414
    7. '()
' → logprob: -10.181467056274414
    8. '
' → logprob: -10.431467056274414
    9. ' from' → logprob: -10.931467056274414
    10. '	for' → logprob: -11.181467056274414

Token 138: ' all' (ID: 722)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.7126181721687317
    2. 'each' → logprob: -1.087618112564087
    3. 'the' → logprob: -2.962618112564087
    4. 'all' → logprob: -2.962618112564087
    5. ' each' → logprob: -3.337618112564087
    6. ' all' → logprob: -3.962618112564087
    7. ' the' → logprob: -4.712618350982666
    8. ' zombies' → logprob: -5.962618350982666
    9. 'for' → logprob: -7.212618350982666
    10. ' z' → logprob: -7.462618350982666

Token 139: ' zombie' (ID: 71210)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.006143511272966862
    2. ' zombies' → logprob: -5.256143569946289
    3. ' z' → logprob: -7.756143569946289
    4. ' zombie' → logprob: -8.131143569946289
    5. ' zomb' → logprob: -9.756143569946289
    6. '```' → logprob: -9.756143569946289
    7. 'the' → logprob: -11.756143569946289
    8. 'k' → logprob: -12.006143569946289
    9. '[z' → logprob: -12.006143569946289
    10. '	z' → logprob: -12.131143569946289

Token 140: ' towns' (ID: 39847)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6414340138435364
    2. ' towns' → logprob: -1.0164339542388916
    3. '-in' → logprob: -3.2664339542388916
    4. '_nodes' → logprob: -3.6414339542388916
    5. 'town' → logprob: -4.766434192657471
    6. '_in' → logprob: -4.891434192657471
    7. 'nodes' → logprob: -5.266434192657471
    8. ' nodes' → logprob: -5.391434192657471
    9. '_z' → logprob: -5.391434192657471
    10. '_t' → logprob: -5.766434192657471

Token 141: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08680273592472076
    2. ' for' → logprob: -2.7118027210235596
    3. '
' → logprob: -4.211802959442139
    4. '<|end|>' → logprob: -7.336802959442139
    5. ' 
' → logprob: -8.08680248260498
    6. ' zombies' → logprob: -8.96180248260498
    7. 'z' → logprob: -9.08680248260498
    8. ':' → logprob: -9.33680248260498
    9. ' ' → logprob: -9.46180248260498
    10. 'tokens' → logprob: -9.83680248260498

Token 142: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34922266006469727
    2. ' for' → logprob: -1.2242226600646973
    3. ' 
' → logprob: -8.099222183227539
    4. '<|end|>' → logprob: -8.349222183227539
    5. '	for' → logprob: -9.849222183227539
    6. '
' → logprob: -9.974222183227539
    7. ' ' → logprob: -10.099222183227539
    8. '  
' → logprob: -10.849222183227539
    9. 'For' → logprob: -11.099222183227539
    10. '```' → logprob: -11.474222183227539

Token 143: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.06253279000520706
    2. ' z' → logprob: -2.812532901763916
    3. ' zombie' → logprob: -7.687532901763916
    4. ' town' → logprob: -10.937532424926758
    5. '	z' → logprob: -11.062532424926758
    6. 'town' → logprob: -11.437532424926758
    7. ' zomb' → logprob: -11.437532424926758
    8. 'node' → logprob: -11.562532424926758
    9. 'zi' → logprob: -11.937532424926758
    10. 'v' → logprob: -12.062532424926758

Token 144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6946922540664673
    2. 'ombie' → logprob: -0.6946922540664673
    3. 'o' → logprob: -7.194692134857178
    4. 'ob' → logprob: -8.819692611694336
    5. 'i' → logprob: -9.194692611694336
    6. 'omb' → logprob: -9.319692611694336
    7. 'ombies' → logprob: -9.569692611694336
    8. 'ombi' → logprob: -9.819692611694336
    9. 'om' → logprob: -10.069692611694336
    10. 'z' → logprob: -10.069692611694336

Token 145: ' zombies' (ID: 90576)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0032032581511884928
    2. ' zombies' → logprob: -5.753203392028809
    3. ' z' → logprob: -11.003203392028809
    4. ' zomb' → logprob: -13.253203392028809
    5. '(z' → logprob: -13.378203392028809
    6. ' ' → logprob: -13.378203392028809
    7. '```' → logprob: -13.753203392028809
    8. '	z' → logprob: -14.128203392028809
    9. '[z' → logprob: -14.503203392028809
    10. '   ' → logprob: -15.128203392028809

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023304175585508347
    2. ':
' → logprob: -3.7733042240142822
    3. '):' → logprob: -10.148303985595703
    4. '):
' → logprob: -11.398303985595703
    5. ' :' → logprob: -12.773303985595703
    6. ':
' → logprob: -13.148303985595703
    7. ')' → logprob: -13.898303985595703
    8. ' :
' → logprob: -14.148303985595703
    9. ':

' → logprob: -14.398303985595703
    10. ',' → logprob: -14.523303985595703

Token 147: '   ' (ID: 271)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.13322149217128754
    2. 'dist' → logprob: -2.383221387863159
    3. '   ' → logprob: -4.258221626281738
    4. '	dist' → logprob: -4.758221626281738
    5. ' que' → logprob: -4.883221626281738
    6. '    
' → logprob: -7.633221626281738
    7. '
' → logprob: -7.758221626281738
    8. ' 
' → logprob: -7.883221626281738
    9. '```' → logprob: -9.008221626281738
    10. '):
' → logprob: -9.133221626281738

Token 148: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.02553003840148449
    2. 'que' → logprob: -3.9005300998687744
    3. ' dist' → logprob: -5.775529861450195
    4. ' que' → logprob: -6.775529861450195
    5. '   ' → logprob: -7.525529861450195
    6. '
' → logprob: -9.775529861450195
    7. '```' → logprob: -10.275529861450195
    8. '	dist' → logprob: -10.775529861450195
    9. 'queue' → logprob: -11.525529861450195
    10. '    
' → logprob: -11.525529861450195

Token 149: '[z' (ID: 105082)
  Prédit: '[z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.625001907348633
    3. ' [' → logprob: -15.250001907348633
    4. 'z' → logprob: -18.250001907348633
    5. '```' → logprob: -18.625001907348633
    6. '[s' → logprob: -19.625001907348633
    7. '[
' → logprob: -19.625001907348633
    8. '[u' → logprob: -19.875001907348633
    9. ' z' → logprob: -19.875001907348633
    10. '[q' → logprob: -20.125001907348633

Token 150: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004038593906443566
    2. ' ]' → logprob: -8.12540340423584
    3. ']=' → logprob: -9.25040340423584
    4. '=' → logprob: -11.62540340423584
    5. ' =' → logprob: -12.87540340423584
    6. ')' → logprob: -15.37540340423584
    7. '`]' → logprob: -17.375404357910156
    8. '']' → logprob: -18.250404357910156
    9. ']=-' → logprob: -18.375404357910156
    10. ']==' → logprob: -18.625404357910156

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740773141384125
    2. ' =' → logprob: -0.9740773439407349
    3. ' ' → logprob: -15.974077224731445
    4. ',' → logprob: -16.474077224731445
    5. '0' → logprob: -17.099077224731445
    6. '.=' → logprob: -17.349077224731445
    7. ' ' → logprob: -17.849077224731445
    8. '＝' → logprob: -18.349077224731445
    9. '=

' → logprob: -18.474077224731445
    10. ')' → logprob: -18.599077224731445

Token 152: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.250005722045898
    3. '۰' → logprob: -16.0000057220459
    4. '   ' → logprob: -16.6875057220459
    5. '-' → logprob: -16.8125057220459
    6. '000' → logprob: -16.9375057220459
    7. '```' → logprob: -17.0625057220459
    8. '０' → logprob: -17.0625057220459
    9. 'zero' → logprob: -17.3125057220459
    10. '  ' → logprob: -17.4375057220459

Token 153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.60414821645827e-06
    2. '-' → logprob: -13.500004768371582
    3. ' ' → logprob: -13.625004768371582
    4. '100' → logprob: -15.437504768371582
    5. '۰' → logprob: -15.562504768371582
    6. '"' → logprob: -15.750004768371582
    7. '０' → logprob: -15.937504768371582
    8. '10' → logprob: -16.125003814697266
    9. '1' → logprob: -16.375003814697266
    10. '```' → logprob: -16.500003814697266

Token 154: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024414880201220512
    2. 'que' → logprob: -3.7744147777557373
    3. ' que' → logprob: -6.774415016174316
    4. '	' → logprob: -11.649415016174316
    5. '
' → logprob: -12.149415016174316
    6. 'ques' → logprob: -12.524415016174316
    7. ' ' → logprob: -13.524415016174316
    8. '  ' → logprob: -14.024415016174316
    9. '       ' → logprob: -14.024415016174316
    10. '```' → logprob: -14.024415016174316

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1136099249124527
    2. 'que' → logprob: -2.238610029220581
    3. ' que' → logprob: -7.363609790802002
    4. '```' → logprob: -9.23861026763916
    5. '	' → logprob: -10.86361026763916
    6. '
' → logprob: -11.61361026763916
    7. 'ques' → logprob: -11.98861026763916
    8. '  ' → logprob: -12.48861026763916
    9. 'queued' → logprob: -12.86361026763916
    10. ' ' → logprob: -13.23861026763916

Token 156: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' (adapté à ' que') → logprob: 0.0
    2. '   ' → logprob: -17.5
    3. ' que' → logprob: -17.625
    4. '```' → logprob: -18.25
    5. 'queue' → logprob: -20.125
    6. 'qu' → logprob: -20.125
    7. 'ques' → logprob: -20.625
    8. '
' → logprob: -20.875
    9. 'deque' → logprob: -21.625
    10. 'qui' → logprob: -21.875

Token 157: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.400689305039123e-05
    2. '.' → logprob: -10.375094413757324
    3. '.p' → logprob: -10.750094413757324
    4. '.enqueue' → logprob: -10.750094413757324
    5. '.extend' → logprob: -11.375094413757324
    6. '.app' → logprob: -12.750094413757324
    7. '.ap' → logprob: -12.875094413757324
    8. '.put' → logprob: -13.375094413757324
    9. '.push' → logprob: -15.000094413757324
    10. ' .' → logprob: -15.250094413757324

Token 158: '(z' (ID: 27674)
  Prédit: '(z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(z' → logprob: -0.0004458044422790408
    2. '((' → logprob: -7.75044584274292
    3. '(' → logprob: -11.125445365905762
    4. 'left' → logprob: -15.250445365905762
    5. ' (' → logprob: -16.625446319580078
    6. 'z' → logprob: -16.875446319580078
    7. '(q' → logprob: -18.500446319580078
    8. '(s' → logprob: -18.875446319580078
    9. '(i' → logprob: -19.000446319580078
    10. '()' → logprob: -19.000446319580078

Token 159: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. ' )' → logprob: -12.750004768371582
    3. ')
' → logprob: -13.375004768371582
    4. '))' → logprob: -16.750003814697266
    5. ')`' → logprob: -16.750003814697266
    6. '`)' → logprob: -17.500003814697266
    7. ')
' → logprob: -17.750003814697266
    8. '),' → logprob: -18.875003814697266
    9. '```' → logprob: -19.000003814697266
    10. ')

' → logprob: -19.000003814697266

Token 160: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.000736846646759659
    2. ' while' → logprob: -7.250736713409424
    3. '```' → logprob: -10.625737190246582
    4. '
' → logprob: -13.375737190246582
    5. 'While' → logprob: -14.500737190246582
    6. '   ' → logprob: -15.000737190246582
    7. '	while' → logprob: -15.000737190246582
    8. 'for' → logprob: -17.250736236572266
    9. '``' → logprob: -17.500736236572266
    10. '    
' → logprob: -17.750736236572266

Token 161: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.0006278486107476056
    2. 'que' → logprob: -7.3756279945373535
    3. ' len' → logprob: -14.125627517700195
    4. ' ' → logprob: -16.125627517700195
    5. ' not' → logprob: -16.250627517700195
    6. ' ' → logprob: -16.250627517700195
    7. ' dist' → logprob: -16.500627517700195
    8. '(' → logprob: -17.500627517700195
    9. ' qu' → logprob: -17.625627517700195
    10. '```' → logprob: -18.250627517700195

Token 162: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019293125660624355
    2. '):' → logprob: -9.125192642211914
    3. ':
' → logprob: -9.875192642211914
    4. '():' → logprob: -11.375192642211914
    5. '>:' → logprob: -11.875192642211914
    6. '```' → logprob: -12.375192642211914
    7. '.' → logprob: -13.500192642211914
    8. '_:' → logprob: -13.750192642211914
    9. '.:' → logprob: -14.375192642211914
    10. ':**' → logprob: -14.375192642211914

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38621002435684204
    2. ' node' → logprob: -2.1362099647521973
    3. ' v' → logprob: -2.3862099647521973
    4. ' u' → logprob: -3.0112099647521973
    5. ' current' → logprob: -3.2612099647521973
    6. ' town' → logprob: -4.886209964752197
    7. 'v' → logprob: -5.761209964752197
    8. 'u' → logprob: -6.011209964752197
    9. ' city' → logprob: -6.261209964752197
    10. 'node' → logprob: -6.511209964752197

Token 164: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.7685703039169312
    2. 'v' → logprob: -1.0185703039169312
    3. 'current' → logprob: -2.7685704231262207
    4. 'u' → logprob: -3.2685704231262207
    5. 'x' → logprob: -3.6435704231262207
    6. 'node' → logprob: -3.8935704231262207
    7. 'curr' → logprob: -4.393570423126221
    8. ' v' → logprob: -5.143570423126221
    9. ' current' → logprob: -5.893570423126221
    10. 'now' → logprob: -6.143570423126221

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6327607035636902
    2. '=' → logprob: -0.7577607035636902
    3. '_' → logprob: -9.257761001586914
    4. '	' → logprob: -11.257761001586914
    5. ' ' → logprob: -11.257761001586914
    6. ',' → logprob: -11.382761001586914
    7. '   ' → logprob: -11.882761001586914
    8. '.' → logprob: -12.507761001586914
    9. '_node' → logprob: -12.632761001586914
    10. ')' → logprob: -12.632761001586914

Token 166: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.00193149340339005
    2. ' que' → logprob: -6.251931667327881
    3. 'ques' → logprob: -13.501931190490723
    4. 'qu' → logprob: -13.751931190490723
    5. 'quee' → logprob: -16.12693214416504
    6. 'deque' → logprob: -16.50193214416504
    7. ' ' → logprob: -17.00193214416504
    8. '   ' → logprob: -17.25193214416504
    9. ' ' → logprob: -17.25193214416504
    10. '	' → logprob: -17.37693214416504

Token 167: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.5094070477061905e-05
    2. '.' → logprob: -11.125015258789062
    3. '.pop' → logprob: -15.125015258789062
    4. 'p' → logprob: -16.750015258789062
    5. '.append' → logprob: -18.125015258789062
    6. ' .' → logprob: -18.500015258789062
    7. ' p' → logprob: -18.875015258789062
    8. '   ' → logprob: -20.000015258789062
    9. '.dequeue' → logprob: -21.000015258789062
    10. 'opleft' → logprob: -21.250015258789062

Token 168: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.12702931463718414
    2. 'op' → logprob: -2.1270294189453125
    3. 'ople' → logprob: -9.377029418945312
    4. 'opl' → logprob: -11.252029418945312
    5. 'o' → logprob: -12.877029418945312
    6. 'opf' → logprob: -15.502029418945312
    7. 'oplevel' → logprob: -15.627029418945312
    8. 'opt' → logprob: -15.627029418945312
    9. '```' → logprob: -16.252029418945312
    10. 'ope' → logprob: -16.502029418945312

Token 169: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007146967691369355
    2. '()
' → logprob: -7.2507147789001465
    3. '(' → logprob: -13.125714302062988
    4. '()
' → logprob: -13.375714302062988
    5. ')' → logprob: -14.500714302062988
    6. ' ()' → logprob: -15.125714302062988
    7. '())' → logprob: -15.625714302062988
    8. '()

' → logprob: -15.625714302062988
    9. '()`' → logprob: -16.750715255737305
    10. '()\' → logprob: -18.625715255737305

Token 170: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17575722932815552
    2. 'for' → logprob: -1.9257571697235107
    3. '   ' → logprob: -4.17575740814209
    4. '
' → logprob: -11.17575740814209
    5. '    
' → logprob: -11.30075740814209
    6. '```' → logprob: -11.42575740814209
    7. '	for' → logprob: -11.55075740814209
    8. ' ' → logprob: -14.42575740814209
    9. ' 
' → logprob: -14.42575740814209
    10. ',' → logprob: -14.42575740814209

Token 171: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016063073417171836
    2. ' for' → logprob: -8.750160217285156
    3. '   ' → logprob: -13.250160217285156
    4. 'if' (adapté à ' if') → logprob: -15.250160217285156
    5. '```' → logprob: -15.875160217285156
    6. '	for' → logprob: -17.875160217285156
    7. '    
' → logprob: -18.125160217285156
    8. '
' → logprob: -19.750160217285156
    9. 'cur' → logprob: -21.000160217285156
    10. 'd' → logprob: -21.000160217285156

Token 172: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0005087109748274088
    2. ' dist' → logprob: -7.625508785247803
    3. 'cur' → logprob: -10.875508308410645
    4. '	dist' → logprob: -14.250508308410645
    5. '   ' → logprob: -15.000508308410645
    6. 'P' → logprob: -15.125508308410645
    7. '(dist' → logprob: -15.750508308410645
    8. ' cur' → logprob: -16.00050926208496
    9. ' ' → logprob: -16.75050926208496
    10. 'S' → logprob: -17.00050926208496

Token 173: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -12.125007629394531
    3. 'cur' → logprob: -13.625007629394531
    4. ' [' → logprob: -14.750007629394531
    5. '(cur' → logprob: -15.875007629394531
    6. '```' → logprob: -16.37500762939453
    7. ')' → logprob: -17.00000762939453
    8. ' cur' → logprob: -17.00000762939453
    9. '[
' → logprob: -17.12500762939453
    10. '	cur' → logprob: -17.25000762939453

Token 174: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01416750717908144
    2. ' <' → logprob: -5.514167308807373
    3. '+' → logprob: -5.764167308807373
    4. '<' → logprob: -6.139167308807373
    5. ')' → logprob: -6.514167308807373
    6. ']+' → logprob: -6.639167308807373
    7. ' +' → logprob: -7.264167308807373
    8. ']<' → logprob: -7.389167308807373
    9. ' ]' → logprob: -8.639167785644531
    10. ' ' → logprob: -8.639167785644531

Token 175: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.47815850377082825
    2. ' <' → logprob: -1.3531584739685059
    3. '>=' → logprob: -2.853158473968506
    4. '+' → logprob: -3.853158473968506
    5. ' >=' → logprob: -4.228158473968506
    6. '==' → logprob: -4.228158473968506
    7. '<S' → logprob: -5.603158473968506
    8. ' ==' → logprob: -5.853158473968506
    9. ' +' → logprob: -6.228158473968506
    10. ' ' → logprob: -6.353158473968506

Token 176: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0003144896763842553
    2. ' S' → logprob: -8.250314712524414
    3. '2' → logprob: -10.125314712524414
    4. 'P' → logprob: -11.875314712524414
    5. ' ' → logprob: -12.625314712524414
    6. '1' → logprob: -13.625314712524414
    7. '0' → logprob: -14.250314712524414
    8. '   ' → logprob: -14.875314712524414
    9. 'K' → logprob: -15.125314712524414
    10. 'Q' → logprob: -15.125314712524414

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023032240569591522
    2. ':
' → logprob: -6.377303123474121
    3. ' :' → logprob: -7.877303123474121
    4. '   ' → logprob: -8.877303123474121
    5. '):' → logprob: -10.502303123474121
    6. '+' → logprob: -10.752303123474121
    7. ':return' → logprob: -11.377303123474121
    8. '       ' → logprob: -12.377303123474121
    9. '+:' → logprob: -12.502303123474121
    10. ' +' → logprob: -12.627303123474121

Token 178: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2403727024793625
    2. 'continue' → logprob: -1.740372657775879
    3. ' continue' → logprob: -3.990372657775879
    4. '	continue' → logprob: -4.240372657775879
    5. '       ' → logprob: -5.240372657775879
    6. '_continue' → logprob: -11.740372657775879
    7. '   ' → logprob: -12.365372657775879
    8. '```' → logprob: -13.490372657775879
    9. '	' → logprob: -13.990372657775879
    10. 'contin' → logprob: -14.365372657775879

Token 179: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.14297856390476227
    2. ' continue' → logprob: -2.1429786682128906
    3. '   ' → logprob: -4.142978668212891
    4. '	continue' → logprob: -10.14297866821289
    5. ' ' → logprob: -12.26797866821289
    6. 'contin' → logprob: -13.89297866821289
    7. '       ' → logprob: -14.39297866821289
    8. 'break' → logprob: -14.64297866821289
    9. '  ' → logprob: -15.01797866821289
    10. 'continu' → logprob: -15.14297866821289

Token 180: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009823144413530827
    2. 'for' → logprob: -4.884823322296143
    3. ' for' → logprob: -6.259823322296143
    4. '
' → logprob: -8.509822845458984
    5. '    
' → logprob: -9.384822845458984
    6. '	for' → logprob: -11.384822845458984
    7. '  
' → logprob: -13.384822845458984
    8. '   ' → logprob: -13.634822845458984
    9. '   
' → logprob: -14.384822845458984
    10. '```' → logprob: -14.384822845458984

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011323315091431141
    2. 'for' → logprob: -4.63632345199585
    3. ' for' → logprob: -6.51132345199585
    4. '    
' → logprob: -9.761322975158691
    5. '	for' → logprob: -11.136322975158691
    6. '   ' → logprob: -12.511322975158691
    7. '
' → logprob: -13.886322975158691
    8. '  
' → logprob: -14.136322975158691
    9. '```' → logprob: -14.511322975158691
    10. '  ' → logprob: -14.636322975158691

Token 182: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004956224001944065
    2. '   ' → logprob: -6.004956245422363
    3. ' for' → logprob: -6.004956245422363
    4. '    
' → logprob: -11.879956245422363
    5. '	for' → logprob: -12.504956245422363
    6. '```' → logprob: -15.754956245422363
    7. ' ' → logprob: -16.004955291748047
    8. '  
' → logprob: -17.004955291748047
    9. '
' → logprob: -17.254955291748047
    10. '  ' → logprob: -18.004955291748047

Token 183: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3987278640270233
    2. 'nx' → logprob: -1.6487278938293457
    3. ' nxt' → logprob: -2.1487278938293457
    4. 'next' → logprob: -4.148727893829346
    5. 'neighbor' → logprob: -5.773727893829346
    6. 'nei' → logprob: -7.898727893829346
    7. 'nv' → logprob: -8.773727416992188
    8. 'nbr' → logprob: -9.148727416992188
    9. ' nex' → logprob: -9.398727416992188
    10. 'v' → logprob: -9.523727416992188

Token 184: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20145104825496674
    2. 'in' → logprob: -1.701451063156128
    3. '	in' → logprob: -10.701451301574707
    4. ' ' → logprob: -11.326451301574707
    5. '_in' → logprob: -13.576451301574707
    6. 'In' → logprob: -14.826451301574707
    7. '   ' → logprob: -15.076451301574707
    8. '  ' → logprob: -15.701451301574707
    9. 'n' → logprob: -15.701451301574707
    10. ')' → logprob: -16.20145034790039

Token 185: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -9.627176768844947e-05
    2. ' graph' → logprob: -9.250096321105957
    3. '	graph' → logprob: -16.25009536743164
    4. '(graph' → logprob: -18.12509536743164
    5. '   ' → logprob: -19.62509536743164
    6. 'graphql' → logprob: -20.62509536743164
    7. 'raph' → logprob: -22.00009536743164
    8. ' ' → logprob: -22.62509536743164
    9. '.graph' → logprob: -23.12509536743164
    10. '_graph' → logprob: -23.37509536743164

Token 186: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: 0.0
    2. '[' → logprob: -17.0
    3. '(cur' → logprob: -18.75
    4. ' [' → logprob: -19.875
    5. '[current' → logprob: -19.875
    6. 'cur' → logprob: -20.375
    7. '   ' → logprob: -20.5
    8. '[curr' → logprob: -20.5
    9. '```' → logprob: -21.25
    10. '	cur' → logprob: -21.5

Token 187: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.004005503375083208
    2. ']:
' → logprob: -5.629005432128906
    3. '[cur' → logprob: -8.504005432128906
    4. ']' → logprob: -8.879005432128906
    5. ':' → logprob: -10.504005432128906
    6. '   ' → logprob: -11.504005432128906
    7. ']:
' → logprob: -11.629005432128906
    8. '):' → logprob: -12.004005432128906
    9. '       ' → logprob: -12.879005432128906
    10. '>:' → logprob: -13.129005432128906

Token 188: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00930927973240614
    2. ' if' → logprob: -5.0093092918396
    3. 'if' → logprob: -6.0093092918396
    4. '   ' → logprob: -9.259308815002441
    5. '```' → logprob: -10.634308815002441
    6. ',' → logprob: -12.384308815002441
    7. '	if' → logprob: -12.384308815002441
    8. '	   ' → logprob: -12.759308815002441
    9. '<|end|>' → logprob: -13.509308815002441
    10. '        
' → logprob: -14.509308815002441

Token 189: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5922867059707642
    2. '       ' → logprob: -0.9672867059707642
    3. 'if' (adapté à ' if') → logprob: -2.7172865867614746
    4. '	if' → logprob: -7.717286586761475
    5. '   ' → logprob: -8.842287063598633
    6. '           ' → logprob: -9.092287063598633
    7. '	       ' → logprob: -10.592287063598633
    8. '	   ' → logprob: -11.342287063598633
    9. ' ' → logprob: -11.342287063598633
    10. '	' → logprob: -12.342287063598633

Token 190: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.31326526403427124
    2. ' dist' → logprob: -1.313265323638916
    3. '	dist' → logprob: -13.188264846801758
    4. '(dist' → logprob: -13.938264846801758
    5. '_dist' → logprob: -14.688264846801758
    6. ' ' → logprob: -16.063264846801758
    7. 'Dist' → logprob: -16.063264846801758
    8. '   ' → logprob: -16.813264846801758
    9. '.dist' → logprob: -16.938264846801758
    10. '-dist' → logprob: -18.188264846801758

Token 191: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.988221684878226e-06
    2. '[' → logprob: -12.625006675720215
    3. 'n' → logprob: -13.000006675720215
    4. ' [' → logprob: -14.375006675720215
    5. '[next' → logprob: -14.625006675720215
    6. '[
' → logprob: -16.37500762939453
    7. '```' → logprob: -16.75000762939453
    8. '   ' → logprob: -17.50000762939453
    9. '<n' → logprob: -18.25000762939453
    10. '][' → logprob: -18.75000762939453

Token 192: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.004059998318552971
    2. 'x' → logprob: -5.754059791564941
    3. '[n' → logprob: -7.379059791564941
    4. '[x' → logprob: -8.629059791564941
    5. '[' → logprob: -10.504059791564941
    6. 'n' → logprob: -10.504059791564941
    7. '[next' → logprob: -11.254059791564941
    8. ']' → logprob: -11.879059791564941
    9. ' nxt' → logprob: -13.129059791564941
    10. '```' → logprob: -13.754059791564941

Token 193: ']' (ID: 60)
  Prédit: '==-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==-' → logprob: -0.6906675696372986
    2. '==' → logprob: -1.1906676292419434
    3. ' ==' → logprob: -1.8156676292419434
    4. ')' → logprob: -4.190667629241943
    5. ']==' → logprob: -4.690667629241943
    6. ']' → logprob: -5.065667629241943
    7. '-' → logprob: -7.815667629241943
    8. ')==' → logprob: -7.940667629241943
    9. '[' → logprob: -8.940667152404785
    10. '```' → logprob: -9.065667152404785

Token 194: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47725963592529297
    2. '==-' → logprob: -1.227259635925293
    3. ' ==' → logprob: -2.477259635925293
    4. ')==' → logprob: -7.477259635925293
    5. ']==' → logprob: -7.477259635925293
    6. ')' → logprob: -7.727259635925293
    7. '=' → logprob: -8.102259635925293
    8. '===' → logprob: -8.977259635925293
    9. '<' → logprob: -8.977259635925293
    10. '-' → logprob: -9.477259635925293

Token 195: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.7610454708337784e-05
    2. ' -' → logprob: -10.500027656555176
    3. ' ' → logprob: -21.50002670288086
    4. '−' → logprob: -21.50002670288086
    5. '-
' → logprob: -22.87502670288086
    6. '```' → logprob: -23.12502670288086
    7. '   ' → logprob: -24.00002670288086
    8. '‌' → logprob: -24.25002670288086
    9. '-ħ' → logprob: -25.25002670288086
    10. '\-' → logprob: -25.25002670288086

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '<|end|>' → logprob: -14.375000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '```' → logprob: -16.000001907348633
    5. '<|end|>' → logprob: -18.375001907348633
    6. '...' → logprob: -19.000001907348633
    7. '۱' → logprob: -19.437501907348633
    8. ',' → logprob: -19.437501907348633
    9. '১' → logprob: -19.750001907348633
    10. '१' → logprob: -19.750001907348633

Token 197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18212752044200897
    2. ':
' → logprob: -1.8071274757385254
    3. '):
' → logprob: -6.557127475738525
    4. '):' → logprob: -7.932127475738525
    5. ')' → logprob: -8.307127952575684
    6. '       ' → logprob: -9.557127952575684
    7. '<|end|>' → logprob: -9.682127952575684
    8. ' and' → logprob: -10.057127952575684
    9. ':
' → logprob: -10.182127952575684
    10. ',' → logprob: -10.182127952575684

Token 198: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.152659073472023
    2. '           ' → logprob: -2.0276591777801514
    3. '   ' → logprob: -5.402658939361572
    4. '```' → logprob: -5.902658939361572
    5. ',' → logprob: -7.527658939361572
    6. ' dist' → logprob: -7.777658939361572
    7. 'dist' → logprob: -7.777658939361572
    8. '	       ' → logprob: -7.902658939361572
    9. ')' → logprob: -8.40265941619873
    10. '
' → logprob: -9.15265941619873

Token 199: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.04859895631670952
    2. ' dist' → logprob: -3.0485990047454834
    3. '	dist' → logprob: -11.673599243164062
    4. '               ' → logprob: -13.298599243164062
    5. '           ' → logprob: -14.048599243164062
    6. '_dist' → logprob: -15.298599243164062
    7. '   ' → logprob: -15.923599243164062
    8. '.dist' → logprob: -16.048599243164062
    9. '```' → logprob: -17.048599243164062
    10. '
' → logprob: -17.298599243164062

Token 200: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0002302383363712579
    2. '[cur' → logprob: -8.875229835510254
    3. '[' → logprob: -9.375229835510254
    4. 'n' → logprob: -13.125229835510254
    5. '[next' → logprob: -13.875229835510254
    6. ' [' → logprob: -14.375229835510254
    7. '```' → logprob: -14.375229835510254
    8. '=' → logprob: -14.750229835510254
    9. '=n' → logprob: -15.125229835510254
    10. 'cur' → logprob: -15.625229835510254

Token 201: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0015015328535810113
    2. 'x' → logprob: -6.751501560211182
    3. '[n' → logprob: -8.751501083374023
    4. 't' → logprob: -8.876501083374023
    5. '[x' → logprob: -11.751501083374023
    6. '```' → logprob: -11.876501083374023
    7. 'st' → logprob: -12.126501083374023
    8. '[next' → logprob: -12.376501083374023
    9. ']' → logprob: -13.001501083374023
    10. '[' → logprob: -13.126501083374023

Token 202: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003894137917086482
    2. ' =' → logprob: -6.378894329071045
    3. ')' → logprob: -6.503894329071045
    4. '=' → logprob: -7.628894329071045
    5. ']=' → logprob: -8.878893852233887
    6. ' ]' → logprob: -9.753893852233887
    7. '[' → logprob: -12.753893852233887
    8. ' ' → logprob: -13.253893852233887
    9. ' )' → logprob: -14.128893852233887
    10. ')=' → logprob: -14.503893852233887

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132653534412384
    2. '=' → logprob: -1.313265323638916
    3. ')' → logprob: -12.813265800476074
    4. ' ' → logprob: -14.813265800476074
    5. ']' → logprob: -15.688265800476074
    6. ')=' → logprob: -16.188264846801758
    7. '＝' → logprob: -16.813264846801758
    8. '```' → logprob: -16.938264846801758
    9. ' =
' → logprob: -17.313264846801758
    10. ']=' → logprob: -17.313264846801758

Token 204: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0011705794604495168
    2. ' dist' → logprob: -6.751170635223389
    3. '	dist' → logprob: -15.00117015838623
    4. '   ' → logprob: -18.126171112060547
    5. '(dist' → logprob: -18.251171112060547
    6. 'd' → logprob: -19.001171112060547
    7. '_dist' → logprob: -19.626171112060547
    8. '.dist' → logprob: -20.126171112060547
    9. ' ' → logprob: -20.126171112060547
    10. 'cur' → logprob: -21.001171112060547

Token 205: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -7.896309739408025e-07
    2. 'cur' → logprob: -14.250000953674316
    3. '[' → logprob: -17.375
    4. '```' → logprob: -18.625
    5. '[current' → logprob: -18.75
    6. '[curr' → logprob: -19.25
    7. '(cur' → logprob: -19.5
    8. ' [' → logprob: -19.625
    9. '	cur' → logprob: -19.625
    10. '[
' → logprob: -21.375

Token 206: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.049396805465221405
    2. ']+' → logprob: -3.2993967533111572
    3. ']' → logprob: -4.799396991729736
    4. ' +' → logprob: -5.799396991729736
    5. ')+' → logprob: -11.299396514892578
    6. '[' → logprob: -12.424396514892578
    7. ')' → logprob: -12.549396514892578
    8. '}+' → logprob: -12.924396514892578
    9. '```' → logprob: -13.799396514892578
    10. '+]' → logprob: -14.049396514892578

Token 207: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011048170737922192
    2. ' +' → logprob: -4.511048316955566
    3. '1' → logprob: -15.261048316955566
    4. '＋' → logprob: -17.13604736328125
    5. ' ' → logprob: -17.51104736328125
    6. ' plus' → logprob: -17.88604736328125
    7. '+
' → logprob: -18.01104736328125
    8. ' ' → logprob: -18.13604736328125
    9. '```' → logprob: -19.26104736328125
    10. '()+' → logprob: -19.76104736328125

Token 208: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -18.87507438659668
    4. '<|end|>' → logprob: -19.12507438659668
    5. '   ' → logprob: -19.25007438659668
    6. ' ' → logprob: -19.50007438659668
    7. '
' → logprob: -20.12507438659668
    8. '[' → logprob: -21.81257438659668
    9. '  ' → logprob: -22.06257438659668
    10. '۱' → logprob: -22.18757438659668

Token 209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -17.875001907348633
    4. '<|end|>' → logprob: -19.375001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '
' → logprob: -20.250001907348633
    7. '[' → logprob: -21.625001907348633
    8. '  ' → logprob: -22.000001907348633
    9. '`' → logprob: -22.062501907348633
    10. '۱' → logprob: -22.125001907348633

Token 210: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002892258344218135
    2. 'que' → logprob: -9.000288963317871
    3. ' que' → logprob: -9.250288963317871
    4. '		' → logprob: -10.625288963317871
    5. '   ' → logprob: -11.000288963317871
    6. '               ' → logprob: -11.625288963317871
    7. '       ' → logprob: -12.000288963317871
    8. '```' → logprob: -12.125288963317871
    9. '                   ' → logprob: -13.250288963317871
    10. ',' → logprob: -13.500288963317871

Token 211: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005404984578490257
    2. 'que' → logprob: -5.380404949188232
    3. ' que' → logprob: -7.505404949188232
    4. '       ' → logprob: -9.25540542602539
    5. '   ' → logprob: -9.50540542602539
    6. '		' → logprob: -10.63040542602539
    7. '               ' → logprob: -11.25540542602539
    8. '```' → logprob: -11.50540542602539
    9. '          ' → logprob: -12.13040542602539
    10. 'queue' → logprob: -13.00540542602539

Token 212: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' (adapté à ' que') → logprob: -6.704273118884885e-07
    2. ' que' → logprob: -14.500000953674316
    3. '   ' → logprob: -16.875
    4. '           ' → logprob: -17.0
    5. 'queue' → logprob: -17.875
    6. '```' → logprob: -18.0
    7. '       ' → logprob: -18.125
    8. 'qu' → logprob: -18.25
    9. 'ques' → logprob: -18.375
    10. 'deque' → logprob: -19.125

Token 213: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.4617256056226324e-05
    2. '.' → logprob: -11.750014305114746
    3. '.app' → logprob: -12.625014305114746
    4. '.p' → logprob: -13.000014305114746
    5. '.extend' → logprob: -13.875014305114746
    6. ' .' → logprob: -16.250015258789062
    7. '.enqueue' → logprob: -16.625015258789062
    8. '.ap' → logprob: -16.875015258789062
    9. 'append' → logprob: -17.750015258789062
    10. '.Append' → logprob: -18.125015258789062

Token 214: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -11.25001335144043
    3. '(
' → logprob: -18.00001335144043
    4. 'n' → logprob: -18.37501335144043
    5. '(nx' → logprob: -18.50001335144043
    6. '(next' → logprob: -19.37501335144043
    7. '((' → logprob: -19.75001335144043
    8. ' (' → logprob: -19.87501335144043
    9. '<n' → logprob: -22.00001335144043
    10. '(

' → logprob: -22.12501335144043

Token 215: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -4.008129963040119e-06
    2. 'x' → logprob: -12.500003814697266
    3. 'n' → logprob: -16.000003814697266
    4. 't' → logprob: -16.375003814697266
    5. '(n' → logprob: -17.375003814697266
    6. ')' → logprob: -17.500003814697266
    7. '[n' → logprob: -17.875003814697266
    8. '```' → logprob: -17.875003814697266
    9. '[' → logprob: -18.500003814697266
    10. '#' → logprob: -19.375003814697266

Token 216: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ')
' → logprob: -13.125001907348633
    3. ' )' → logprob: -15.375001907348633
    4. ')n' → logprob: -18.000001907348633
    5. ')return' → logprob: -18.625001907348633
    6. ')#' → logprob: -18.625001907348633
    7. '<|end|>' → logprob: -18.625001907348633
    8. '))' → logprob: -18.875001907348633
    9. '),' → logprob: -18.875001907348633
    10. '```' → logprob: -19.000001907348633

Token 217: '#' (ID: 2)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.03920287638902664
    2. 'import' → logprob: -4.164202690124512
    3. 'dist' → logprob: -4.539202690124512
    4. 'dp' → logprob: -5.039202690124512
    5. 'safe' → logprob: -6.039202690124512
    6. 'distance' → logprob: -6.664202690124512
    7. 'c' → logprob: -7.789202690124512
    8. 'heap' → logprob: -8.164202690124512
    9. 'ans' → logprob: -8.539202690124512
    10. '#' → logprob: -8.664202690124512

Token 218: ' Determine' (ID: 57076)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5005300045013428
    2. 'dp' → logprob: -1.2505300045013428
    3. 'import' → logprob: -2.8755300045013428
    4. 'safe' → logprob: -4.500530242919922
    5. 'heap' → logprob: -4.500530242919922
    6. 'ans' → logprob: -4.875530242919922
    7. 'hq' → logprob: -4.875530242919922
    8. 'dist' → logprob: -5.250530242919922
    9. '#' → logprob: -6.000530242919922
    10. 'INF' → logprob: -6.375530242919922

Token 219: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.11057887226343155
    2. 'safe' → logprob: -2.485578775405884
    3. 'danger' → logprob: -4.610579013824463
    4. 'import' → logprob: -5.110579013824463
    5. 'ans' → logprob: -6.360579013824463
    6. 'dp' → logprob: -6.860579013824463
    7. '#' → logprob: -6.985579013824463
    8. 'risk' → logprob: -7.860579013824463
    9. 'answer' → logprob: -8.235578536987305
    10. 's' → logprob: -8.610578536987305

Token 220: ' for' (ID: 395)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.02031938172876835
    2. ' =' → logprob: -4.52031946182251
    3. 'dist' → logprob: -6.02031946182251
    4. '=' → logprob: -6.02031946182251
    5. 's' → logprob: -6.14531946182251
    6. 'dp' → logprob: -7.64531946182251
    7. 'for' → logprob: -7.64531946182251
    8. 'answer' → logprob: -8.270318984985352
    9. 'ans' → logprob: -8.895318984985352
    10. 'arr' → logprob: -9.020318984985352

Token 221: ' staying' (ID: 23704)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.10610003769397736
    2. 'town' → logprob: -2.981100082397461
    3. ' each' → logprob: -3.856100082397461
    4. 'i' → logprob: -4.481100082397461
    5. ' town' → logprob: -4.606100082397461
    6. 'range' → logprob: -5.731100082397461
    7. ' i' → logprob: -6.231100082397461
    8. '_' → logprob: -6.731100082397461
    9. 'node' → logprob: -7.731100082397461
    10. ' range' → logprob: -8.481100082397461

Token 222: ' at' (ID: 540)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12809909880161285
    2. 'at' → logprob: -3.378099203109741
    3. 'cost' → logprob: -3.503099203109741
    4. 'for' → logprob: -3.753099203109741
    5. ' in' → logprob: -4.253098964691162
    6. '[' → logprob: -5.128098964691162
    7. 'town' → logprob: -5.628098964691162
    8. '[]' → logprob: -6.378098964691162
    9. ' at' → logprob: -6.378098964691162
    10. '=' → logprob: -6.753098964691162

Token 223: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.01667819544672966
    2. 'town' → logprob: -4.391678333282471
    3. ' each' → logprob: -5.516678333282471
    4. ' town' → logprob: -9.641677856445312
    5. '[' → logprob: -10.891677856445312
    6. 'every' → logprob: -11.391677856445312
    7. 'i' → logprob: -11.891677856445312
    8. '[i' → logprob: -12.016677856445312
    9. 'city' → logprob: -12.141677856445312
    10. '```' → logprob: -12.516677856445312

Token 224: ' town' (ID: 8234)
  Prédit: 'town'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'town' → logprob: -0.05761442705988884
    2. 'node' → logprob: -3.432614326477051
    3. ' town' → logprob: -3.807614326477051
    4. 'city' → logprob: -7.182614326477051
    5. ' node' → logprob: -7.557614326477051
    6. '```' → logprob: -9.05761432647705
    7. '1' → logprob: -11.55761432647705
    8. 'place' → logprob: -11.68261432647705
    9. 'location' → logprob: -11.80761432647705
    10. 't' → logprob: -11.80761432647705

Token 225: '
' (ID: 198)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -7.171581091824919e-05
    2. 'dp' → logprob: -10.25007152557373
    3. 'price' → logprob: -11.50007152557373
    4. 'answer' → logprob: -11.62507152557373
    5. ' cost' → logprob: -12.25007152557373
    6. 'dist' → logprob: -12.50007152557373
    7. '```' → logprob: -13.12507152557373
    8. 'ans' → logprob: -13.25007152557373
    9. 'distance' → logprob: -14.12507152557373
    10. 'score' → logprob: -14.12507152557373

Token 226: '#' (ID: 2)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -2.15310683415737e-05
    2. ' cost' → logprob: -12.000021934509277
    3. 'dp' → logprob: -12.000021934509277
    4. 'price' → logprob: -12.125021934509277
    5. 'c' → logprob: -14.125021934509277
    6. 'answer' → logprob: -14.500021934509277
    7. 'dist' → logprob: -14.750021934509277
    8. ' costs' → logprob: -14.875021934509277
    9. '```' → logprob: -15.500021934509277
    10. 'score' → logprob: -15.625021934509277

Token 227: ' ' (ID: 220)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.4736459888808895e-05
    2. ' cost' → logprob: -12.250014305114746
    3. 'dp' → logprob: -12.625014305114746
    4. 'price' → logprob: -12.625014305114746
    5. 'stay' → logprob: -14.375014305114746
    6. '```' → logprob: -14.750014305114746
    7. '
' → logprob: -15.000014305114746
    8. 'c' → logprob: -15.000014305114746
    9. ' costs' → logprob: -15.250014305114746
    10. 'import' → logprob: -15.375014305114746

Token 228: '1' (ID: 16)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -2.7610454708337784e-05
    2. 'dp' → logprob: -11.750027656555176
    3. ' cost' → logprob: -12.125027656555176
    4. 'price' → logprob: -12.875027656555176
    5. '
' → logprob: -13.375027656555176
    6. 'stay' → logprob: -13.375027656555176
    7. '```' → logprob: -13.500027656555176
    8. 'c' → logprob: -13.750027656555176
    9. 'import' → logprob: -14.000027656555176
    10. 'dist' → logprob: -14.250027656555176

Token 229: ' and' (ID: 326)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.1373404860496521
    2. ' =' → logprob: -3.387340545654297
    3. ' cost' → logprob: -3.512340545654297
    4. ' costs' → logprob: -4.512340545654297
    5. '=' → logprob: -4.637340545654297
    6. 'for' → logprob: -4.762340545654297
    7. '_' → logprob: -4.762340545654297
    8. ' for' → logprob: -4.887340545654297
    9. '_cost' → logprob: -5.012340545654297
    10. ' ' → logprob: -5.637340545654297

Token 230: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005350686144083738
    2. ' N' → logprob: -5.255350589752197
    3. 'for' → logprob: -10.255351066589355
    4. '0' → logprob: -10.880351066589355
    5. 'z' → logprob: -11.130351066589355
    6. '2' → logprob: -11.380351066589355
    7. ' for' → logprob: -11.505351066589355
    8. 'n' → logprob: -12.130351066589355
    9. 'from' → logprob: -12.755351066589355
    10. ' ' → logprob: -12.880351066589355

Token 231: ' are' (ID: 553)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.21344052255153656
    2. ' =' → logprob: -1.9634405374526978
    3. '_cost' → logprob: -4.213440418243408
    4. 'for' → logprob: -4.213440418243408
    5. '=' → logprob: -4.713440418243408
    6. ' for' → logprob: -5.088440418243408
    7. ' cost' → logprob: -5.838440418243408
    8. ' costs' → logprob: -7.463440418243408
    9. ' =
' → logprob: -7.588440418243408
    10. '
' → logprob: -7.713440418243408

Token 232: ' never' (ID: 3779)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.5224053263664246
    2. 'always' → logprob: -1.8974053859710693
    3. ' safe' → logprob: -2.2724053859710693
    4. ' always' → logprob: -3.1474053859710693
    5. '0' → logprob: -3.6474053859710693
    6. 'free' → logprob: -3.8974053859710693
    7. 'unsafe' → logprob: -4.02240514755249
    8. ' ' → logprob: -4.27240514755249
    9. 'for' → logprob: -4.89740514755249
    10. 'not' → logprob: -5.64740514755249

Token 233: ' stayed' (ID: 25478)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.5082155466079712
    2. ' safe' → logprob: -1.7582155466079712
    3. 'free' → logprob: -2.2582154273986816
    4. 'unsafe' → logprob: -3.1332154273986816
    5. 'danger' → logprob: -3.7582154273986816
    6. 'z' → logprob: -3.8832154273986816
    7. ' free' → logprob: -5.133215427398682
    8. ' unsafe' → logprob: -5.258215427398682
    9. 'infect' → logprob: -5.508215427398682
    10. 'closed' → logprob: -6.133215427398682

Token 234: ' in' (ID: 306)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.008374620229005814
    2. '
' → logprob: -4.8833746910095215
    3. ' cost' → logprob: -8.633374214172363
    4. 'c' → logprob: -8.633374214172363
    5. 'for' → logprob: -9.383374214172363
    6. '_cost' → logprob: -9.758374214172363
    7. 'cos' → logprob: -10.383374214172363
    8. 'co' → logprob: -10.383374214172363
    9. 'price' → logprob: -10.633374214172363
    10. 'dist' → logprob: -10.633374214172363

Token 235: ',' (ID: 11)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00035846480750478804
    2. ' cost' → logprob: -8.500358581542969
    3. '
' → logprob: -10.125358581542969
    4. 'price' → logprob: -10.375358581542969
    5. 'stay' → logprob: -10.875358581542969
    6. ' costs' → logprob: -11.500358581542969
    7. 'dp' → logprob: -11.750358581542969
    8. '```' → logprob: -11.875358581542969
    9. 'c' → logprob: -12.000358581542969
    10. 'dist' → logprob: -12.125358581542969

Token 236: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.04953839257359505
    2. 'for' → logprob: -3.5495383739471436
    3. '#' → logprob: -4.299538612365723
    4. ' for' → logprob: -6.924538612365723
    5. '0' → logprob: -6.924538612365723
    6. ' cost' → logprob: -7.299538612365723
    7. 'dist' → logprob: -7.299538612365723
    8. '
' → logprob: -7.424538612365723
    9. ' costs' → logprob: -8.049538612365723
    10. 'c' → logprob: -8.549538612365723

Token 237: ' zero' (ID: 12421)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04008007422089577
    2. ' =' → logprob: -3.7900800704956055
    3. '[' → logprob: -4.4150800704956055
    4. 's' → logprob: -5.4150800704956055
    5. '=[' → logprob: -9.290080070495605
    6. '=[]' → logprob: -10.915080070495605
    7. '[:]' → logprob: -11.290080070495605
    8. 'for' → logprob: -12.415080070495605
    9. '[s' → logprob: -12.540080070495605
    10. 'is' → logprob: -13.040080070495605

Token 238: ' assigned' (ID: 21482)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0005704291397705674
    2. '
' → logprob: -8.375570297241211
    3. ' cost' → logprob: -9.000570297241211
    4. '```' → logprob: -10.250570297241211
    5. 'price' → logprob: -10.375570297241211
    6. 'dist' → logprob: -10.625570297241211
    7. 'stay' → logprob: -10.750570297241211
    8. 'city' → logprob: -11.000570297241211
    9. 'dp' → logprob: -11.125570297241211
    10. 'c' → logprob: -11.500570297241211

Token 239: ' here' (ID: 2105)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0016088859410956502
    2. '
' → logprob: -6.876608848571777
    3. 'c' → logprob: -8.751608848571777
    4. ' cost' → logprob: -9.001608848571777
    5. 'city' → logprob: -10.001608848571777
    6. '```' → logprob: -10.001608848571777
    7. 'dist' → logprob: -10.126608848571777
    8. 'co' → logprob: -10.376608848571777
    9. 'for' → logprob: -10.626608848571777
    10. 'price' → logprob: -10.751608848571777

Token 240: '
' (ID: 198)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.004031857009977102
    2. '
' → logprob: -5.629031658172607
    3. ' cost' → logprob: -9.129032135009766
    4. 'c' → logprob: -9.129032135009766
    5. '```' → logprob: -10.254032135009766
    6. 'dist' → logprob: -10.379032135009766
    7. 'stay' → logprob: -10.504032135009766
    8. 'city' → logprob: -10.629032135009766
    9. 'price' → logprob: -11.254032135009766
    10. 'co' → logprob: -11.379032135009766

Token 241: 'cost' (ID: 33457)
  Prédit: 'cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00012475410767365247
    2. 'dp' → logprob: -10.87512493133545
    3. 'stay' → logprob: -10.87512493133545
    4. 'price' → logprob: -11.00012493133545
    5. '```' → logprob: -11.00012493133545
    6. 'dist' → logprob: -11.25012493133545
    7. 'city' → logprob: -11.87512493133545
    8. ' cost' → logprob: -11.87512493133545
    9. 'c' → logprob: -12.25012493133545
    10. 'answer' → logprob: -12.50012493133545

Token 242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132883608341217
    2. '=' → logprob: -1.3132883310317993
    3. '[' → logprob: -10.938288688659668
    4. ' =[' → logprob: -12.563288688659668
    5. '=[' → logprob: -12.813288688659668
    6. '=[]' → logprob: -14.188288688659668
    7. ' ' → logprob: -14.313288688659668
    8. ')' → logprob: -15.188288688659668
    9. 's' → logprob: -15.313288688659668
    10. '＝' → logprob: -15.563288688659668

Token 243: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00019042797794099897
    2. ' [' → logprob: -9.000190734863281
    3. '[-' → logprob: -9.625190734863281
    4. '[n' → logprob: -14.875190734863281
    5. '[N' → logprob: -14.875190734863281
    6. '[int' → logprob: -16.62519073486328
    7. ' [-' → logprob: -17.50019073486328
    8. '   ' → logprob: -17.62519073486328
    9. '0' → logprob: -17.75019073486328
    10. '[len' → logprob: -18.50019073486328

Token 244: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000968987587839365
    2. 'float' → logprob: -7.125968933105469
    3. 'None' → logprob: -9.750968933105469
    4. '-' → logprob: -10.125968933105469
    5. '10' → logprob: -10.125968933105469
    6. ' ' → logprob: -12.000968933105469
    7. '100' → logprob: -12.375968933105469
    8. 'P' → logprob: -12.500968933105469
    9. ')' → logprob: -12.625968933105469
    10. '1' → logprob: -12.750968933105469

Token 245: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006542474031448364
    2. ']*(' → logprob: -5.381542682647705
    3. ']+' → logprob: -6.381542682647705
    4. ' ]' → logprob: -9.131542205810547
    5. ' if' → logprob: -9.881542205810547
    6. ',' → logprob: -10.131542205810547
    7. ' for' → logprob: -10.881542205810547
    8. 'if' → logprob: -12.631542205810547
    9. ']*' → logprob: -12.756542205810547
    10. ')' → logprob: -14.006542205810547

Token 246: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026585321873426437
    2. ' +' → logprob: -3.651585340499878
    3. '+[' → logprob: -8.901585578918457
    4. '*' → logprob: -9.026585578918457
    5. '+(' → logprob: -11.151585578918457
    6. '*(' → logprob: -11.901585578918457
    7. ' *' → logprob: -13.276585578918457
    8. ']+' → logprob: -13.526585578918457
    9. '+
' → logprob: -13.901585578918457
    10. '```' → logprob: -14.651585578918457

Token 247: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0009848159970715642
    2. ' (' → logprob: -7.3759846687316895
    3. '(' → logprob: -8.375985145568848
    4. '(n' → logprob: -9.375985145568848
    5. '(len' → logprob: -10.500985145568848
    6. '((' → logprob: -11.250985145568848
    7. '0' → logprob: -14.250985145568848
    8. '(
' → logprob: -14.500985145568848
    9. '
' → logprob: -15.125985145568848
    10. '   ' → logprob: -15.500985145568848

Token 248: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.03373052552342415
    2. '(N' → logprob: -3.4087305068969727
    3. ' N' → logprob: -9.658730506896973
    4. ' (' → logprob: -11.783730506896973
    5. '(' → logprob: -12.033730506896973
    6. 'len' → logprob: -12.408730506896973
    7. '   ' → logprob: -14.033730506896973
    8. '	N' → logprob: -14.283730506896973
    9. ' ' → logprob: -15.283730506896973
    10. '
' → logprob: -15.533730506896973

Token 249: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019324433524161577
    2. ' +' → logprob: -6.251932621002197
    3. '+
' → logprob: -12.501932144165039
    4. ' +
' → logprob: -16.25193214416504
    5. '+

' → logprob: -17.50193214416504
    6. '＋' → logprob: -18.75193214416504
    7. ' plus' → logprob: -19.12693214416504
    8. '+)' → logprob: -19.25193214416504
    9. ' ' → logprob: -19.37693214416504
    10. '
' → logprob: -19.37693214416504

Token 250: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.875003814697266
    3. '2' → logprob: -14.625003814697266
    4. '(' → logprob: -15.500003814697266
    5. '
' → logprob: -15.500003814697266
    6. '   ' → logprob: -17.875003814697266
    7. '```' → logprob: -17.875003814697266
    8. '

' → logprob: -18.000003814697266
    9. '7' → logprob: -18.625003814697266
    10. '{' → logprob: -19.062503814697266

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '2' → logprob: -15.375000953674316
    3. '(' → logprob: -15.875000953674316
    4. ' ' → logprob: -15.875000953674316
    5. '
' → logprob: -17.625
    6. '+' → logprob: -18.375
    7. '```' → logprob: -18.75
    8. '{' → logprob: -19.125
    9. '   ' → logprob: -19.375
    10. '

' → logprob: -19.5

Token 252: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019331586081534624
    2. ')
' → logprob: -6.2519330978393555
    3. ')

' → logprob: -13.376933097839355
    4. ')
' → logprob: -13.376933097839355
    5. ']' → logprob: -13.751933097839355
    6. ' )' → logprob: -14.751933097839355
    7. '
' → logprob: -16.751934051513672
    8. '),' → logprob: -17.626934051513672
    9. '）' → logprob: -18.626934051513672
    10. '))' → logprob: -18.876934051513672

Token 253: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.128163257315464e-07
    2. ' for' → logprob: -15.25
    3. '```' → logprob: -21.125
    4. '	for' → logprob: -21.25
    5. '1' → logprob: -21.875
    6. '0' → logprob: -23.125
    7. 'f' → logprob: -23.625
    8. 'For' → logprob: -24.0
    9. 'from' → logprob: -24.875
    10. ')' → logprob: -25.125

Token 254: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47794049978256226
    2. ' i' → logprob: -0.9779404997825623
    3. 'v' → logprob: -6.102940559387207
    4. ' town' → logprob: -7.102940559387207
    5. ' v' → logprob: -8.102940559387207
    6. 'u' → logprob: -8.727940559387207
    7. 'town' → logprob: -8.727940559387207
    8. 'node' → logprob: -9.602940559387207
    9. ' node' → logprob: -10.227940559387207
    10. ' city' → logprob: -10.852940559387207

Token 255: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3869571089744568
    2. 'in' → logprob: -1.1369571685791016
    3. ' ' → logprob: -9.761957168579102
    4. '1' → logprob: -11.886957168579102
    5. 'i' → logprob: -12.511957168579102
    6. 'range' → logprob: -12.511957168579102
    7. ',' → logprob: -12.761957168579102
    8. ' i' → logprob: -12.886957168579102
    9. 'n' → logprob: -13.261957168579102
    10. '	in' → logprob: -13.386957168579102

Token 256: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078401252627373
    2. ' range' → logprob: -5.504078388214111
    3. '(range' → logprob: -16.754077911376953
    4. '	range' → logprob: -18.379077911376953
    5. ' ' → logprob: -18.629077911376953
    6. 'rang' → logprob: -19.254077911376953
    7. 'r' → logprob: -19.629077911376953
    8. 'ran' → logprob: -20.879077911376953
    9. '```' → logprob: -21.629077911376953
    10. '   ' → logprob: -21.879077911376953

Token 257: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016227321699261665
    2. '2' → logprob: -4.5162272453308105
    3. '1' → logprob: -5.2662272453308105
    4. ',' → logprob: -13.766227722167969
    5. '(
' → logprob: -13.891227722167969
    6. ' ' → logprob: -14.641227722167969
    7. '```' → logprob: -15.266227722167969
    8. '
' → logprob: -15.391227722167969
    9. ' (' → logprob: -15.641227722167969
    10. '   ' → logprob: -16.89122772216797

Token 258: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2014143168926239
    2. '2' → logprob: -1.7014143466949463
    3. ' ' → logprob: -13.951414108276367
    4. '   ' → logprob: -16.451414108276367
    5. '
' → logprob: -17.201414108276367
    6. '```' → logprob: -17.576414108276367
    7. 'N' → logprob: -17.826414108276367
    8. '(' → logprob: -18.951414108276367
    9. '

' → logprob: -19.201414108276367
    10. 'len' → logprob: -19.826414108276367

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006490522064268589
    2. ' ,' → logprob: -7.5006489753723145
    3. ',N' → logprob: -9.250649452209473
    4. ',n' → logprob: -17.875648498535156
    5. ',
' → logprob: -18.500648498535156
    6. '1' → logprob: -18.750648498535156
    7. ',len' → logprob: -18.750648498535156
    8. ',int' → logprob: -19.125648498535156
    9. '，' → logprob: -19.875648498535156
    10. ',num' → logprob: -20.000648498535156

Token 260: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -9.615255839889869e-05
    2. ' N' → logprob: -9.250096321105957
    3. '
' → logprob: -20.00009536743164
    4. 'n' → logprob: -21.87509536743164
    5. '	N' → logprob: -21.87509536743164
    6. '```' → logprob: -22.00009536743164
    7. ' ' → logprob: -22.12509536743164
    8. '   ' → logprob: -22.37509536743164
    9. '

' → logprob: -22.62509536743164
    10. ',' → logprob: -22.87509536743164

Token 261: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18048635125160217
    2. '+' → logprob: -2.6804864406585693
    3. '):
' → logprob: -3.0554864406585693
    4. ')' → logprob: -3.4304864406585693
    5. ' ):' → logprob: -4.30548620223999
    6. '
' → logprob: -7.18048620223999
    7. ' ):
' → logprob: -7.55548620223999
    8. ' )' → logprob: -7.68048620223999
    9. ' ' → logprob: -7.68048620223999
    10. ' +' → logprob: -7.93048620223999

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010531053878366947
    2. ' if' → logprob: -4.760530948638916
    3. 'if' → logprob: -6.635530948638916
    4. ' cost' → logprob: -8.760531425476074
    5. '```' → logprob: -8.760531425476074
    6. 'cost' → logprob: -9.385531425476074
    7. '<|end|>' → logprob: -9.885531425476074
    8. '   ' → logprob: -10.135531425476074
    9. '    
' → logprob: -10.760531425476074
    10. '	if' → logprob: -11.135531425476074

Token 263: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1541975885629654
    2. 'cost' → logprob: -2.6541976928710938
    3. ' if' → logprob: -2.9041976928710938
    4. ' cost' → logprob: -4.529197692871094
    5. '   ' → logprob: -5.529197692871094
    6. ':' → logprob: -6.529197692871094
    7. '):' → logprob: -7.654197692871094
    8. ':
' → logprob: -7.904197692871094
    9. '):
' → logprob: -8.279197692871094
    10. ')' → logprob: -8.904197692871094

Token 264: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03093576990067959
    2. ' dist' → logprob: -3.530935764312744
    3. '0' → logprob: -7.030935764312744
    4. '1' → logprob: -8.530936241149902
    5. ' ' → logprob: -10.030936241149902
    6. '   ' → logprob: -10.405936241149902
    7. '	dist' → logprob: -11.780936241149902
    8. '(dist' → logprob: -12.030936241149902
    9. '-dist' → logprob: -12.280936241149902
    10. 'cost' → logprob: -13.030936241149902

Token 265: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. 'i' → logprob: -13.750001907348633
    3. '[' → logprob: -14.750001907348633
    4. '[
' → logprob: -15.250001907348633
    5. '```' → logprob: -15.625001907348633
    6. '
' → logprob: -16.500001907348633
    7. ' [' → logprob: -17.000001907348633
    8. ' ' → logprob: -17.625001907348633
    9. ' i' → logprob: -18.000001907348633
    10. '(i' → logprob: -18.375001907348633

Token 266: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.320414274930954
    2. '<=' → logprob: -1.9454143047332764
    3. '==' → logprob: -2.3204143047332764
    4. '!=-' → logprob: -4.070414066314697
    5. '>=' → logprob: -5.320414066314697
    6. ' !=' → logprob: -5.320414066314697
    7. '==-' → logprob: -5.570414066314697
    8. '>' → logprob: -6.320414066314697
    9. ' ==' → logprob: -8.070414543151855
    10. ' <=' → logprob: -9.195414543151855

Token 267: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4445028603076935
    2. '==' → logprob: -1.319502830505371
    3. '<=' → logprob: -2.944502830505371
    4. '!=-' → logprob: -4.319502830505371
    5. '==-' → logprob: -4.319502830505371
    6. ' !=' → logprob: -5.319502830505371
    7. '>=' → logprob: -5.569502830505371
    8. '>' → logprob: -6.069502830505371
    9. ' ==' → logprob: -6.819502830505371
    10. '```' → logprob: -9.319502830505371

Token 268: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.1888679839321412e-05
    2. ' -' → logprob: -10.875021934509277
    3. '0' → logprob: -12.750021934509277
    4. ' ' → logprob: -17.12502098083496
    5. '   ' → logprob: -18.25002098083496
    6. '```' → logprob: -18.25002098083496
    7. '1' → logprob: -18.75002098083496
    8. '−' → logprob: -19.12502098083496
    9. '-
' → logprob: -19.37502098083496
    10. '
' → logprob: -19.50002098083496

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018613664724398404
    2. '-' → logprob: -8.7501859664917
    3. ' -' → logprob: -11.0001859664917
    4. ' ' → logprob: -11.6251859664917
    5. '2' → logprob: -13.6251859664917
    6. '   ' → logprob: -16.062686920166016
    7. '  ' → logprob: -16.625186920166016
    8. '(-' → logprob: -16.875186920166016
    9. '999' → logprob: -16.875186920166016
    10. '```' → logprob: -17.000186920166016

Token 270: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.28122052550315857
    2. 'and' → logprob: -1.406220555305481
    3. ' ' → logprob: -9.906220436096191
    4. '<=' → logprob: -11.406220436096191
    5. ' <=' → logprob: -12.656220436096191
    6. '<' → logprob: -13.406220436096191
    7. '   ' → logprob: -13.781220436096191
    8. ')' → logprob: -13.906220436096191
    9. ' <' → logprob: -14.656220436096191
    10. '	and' → logprob: -14.906220436096191

Token 271: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0032019545324146748
    2. ' dist' → logprob: -5.753201961517334
    3. '1' → logprob: -10.878201484680176
    4. '   ' → logprob: -13.003201484680176
    5. ' ' → logprob: -13.378201484680176
    6. '	dist' → logprob: -14.253201484680176
    7. '(dist' → logprob: -14.628201484680176
    8. '0' → logprob: -15.753201484680176
    9. '  ' → logprob: -16.378202438354492
    10. 'd' → logprob: -16.753202438354492

Token 272: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7148662805557251
    2. '<=' → logprob: -0.8398662805557251
    3. ' <=' → logprob: -2.8398661613464355
    4. '<' → logprob: -4.4648661613464355
    5. '>' → logprob: -5.9648661613464355
    6. '[' → logprob: -6.0898661613464355
    7. ' <' → logprob: -6.3398661613464355
    8. '>=' → logprob: -6.8398661613464355
    9. ' ' → logprob: -8.214866638183594
    10. 'i' → logprob: -8.214866638183594

Token 273: ']' (ID: 60)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.04024761915206909
    2. ' <=' → logprob: -3.665247678756714
    3. '>' → logprob: -4.540247440338135
    4. '<' → logprob: -5.915247440338135
    5. ' >' → logprob: -8.290247917175293
    6. '>=' → logprob: -9.665247917175293
    7. ' <' → logprob: -10.290247917175293
    8. '```' → logprob: -10.290247917175293
    9. ')<=' → logprob: -10.540247917175293
    10. ' ' → logprob: -10.915247917175293

Token 274: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.024556683376431465
    2. '<' → logprob: -4.024556636810303
    3. ' <=' → logprob: -5.524556636810303
    4. '>' → logprob: -6.149556636810303
    5. ' <' → logprob: -9.399557113647461
    6. '>=' → logprob: -9.399557113647461
    7. '```' → logprob: -10.524557113647461
    8. '<S' → logprob: -11.524557113647461
    9. ' >' → logprob: -11.524557113647461
    10. ' ' → logprob: -11.774557113647461

Token 275: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -9.221884101862088e-05
    2. ' S' → logprob: -9.375092506408691
    3. '1' → logprob: -12.125092506408691
    4. 'P' → logprob: -13.500092506408691
    5. ' ' → logprob: -15.625092506408691
    6. '0' → logprob: -16.500091552734375
    7. '
' → logprob: -16.875091552734375
    8. '	S' → logprob: -16.875091552734375
    9. '2' → logprob: -17.500091552734375
    10. '```' → logprob: -17.625091552734375

Token 276: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25207409262657166
    2. ':
' → logprob: -1.502074122428894
    3. '):
' → logprob: -9.502074241638184
    4. '):' → logprob: -10.377074241638184
    5. ':
' → logprob: -11.252074241638184
    6. '   ' → logprob: -12.002074241638184
    7. ' and' → logprob: -12.252074241638184
    8. ' :' → logprob: -12.377074241638184
    9. ':

' → logprob: -13.002074241638184
    10. ' :
' → logprob: -13.252074241638184

Token 277: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3908676207065582
    2. ':' → logprob: -1.6408675909042358
    3. ':
' → logprob: -2.6408677101135254
    4. ' cost' → logprob: -3.2658677101135254
    5. 'cost' → logprob: -5.140867710113525
    6. '       ' → logprob: -5.765867710113525
    7. '	c' → logprob: -6.140867710113525
    8. '=' → logprob: -6.265867710113525
    9. ' ' → logprob: -6.265867710113525
    10. '):
' → logprob: -6.890867710113525

Token 278: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.0008160584256984293
    2. ' cost' → logprob: -8.000816345214844
    3. 'Q' → logprob: -8.125816345214844
    4. 'P' → logprob: -8.750816345214844
    5. '   ' → logprob: -12.125816345214844
    6. '(cost' → logprob: -12.375816345214844
    7. 'c' → logprob: -12.500816345214844
    8. '.cost' → logprob: -12.875816345214844
    9. '_cost' → logprob: -13.250816345214844
    10. '-cost' → logprob: -13.375816345214844

Token 279: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.87500286102295
    3. '.append' → logprob: -13.87500286102295
    4. '=' → logprob: -15.12500286102295
    5. '```' → logprob: -16.125001907348633
    6. 'i' → logprob: -16.250001907348633
    7. ' =' → logprob: -16.625001907348633
    8. '
' → logprob: -17.125001907348633
    9. '[I' → logprob: -17.875001907348633
    10. ']' → logprob: -18.500001907348633

Token 280: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12695036828517914
    2. ' =' → logprob: -2.126950263977051
    3. ']' → logprob: -11.00195026397705
    4. ')' → logprob: -13.00195026397705
    5. ']=' → logprob: -13.50195026397705
    6. ',' → logprob: -14.37695026397705
    7. '+=' → logprob: -14.87695026397705
    8. ' ' → logprob: -15.00195026397705
    9. '=P' → logprob: -15.37695026397705
    10. ')=' → logprob: -16.376951217651367

Token 281: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007100477814674377
    2. ' =' → logprob: -7.2507100105285645
    3. '+=' → logprob: -17.375709533691406
    4. '=
' → logprob: -17.875709533691406
    5. '.=' → logprob: -18.750709533691406
    6. '=

' → logprob: -19.375709533691406
    7. '=P' → logprob: -19.875709533691406
    8. '<|end|>' → logprob: -20.000709533691406
    9. '＝' → logprob: -20.250709533691406
    10. '=}' → logprob: -20.375709533691406

Token 282: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00015133652777876705
    2. 'P' → logprob: -9.000151634216309
    3. ' Q' → logprob: -10.500151634216309
    4. '	Q' → logprob: -15.500151634216309
    5. '```' → logprob: -16.375150680541992
    6. 'q' → logprob: -17.500150680541992
    7. ' ' → logprob: -17.500150680541992
    8. 'QString' → logprob: -17.625150680541992
    9. '   ' → logprob: -17.750150680541992
    10. '

' → logprob: -17.750150680541992

Token 283: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.11340145021677017
    2. ' else' → logprob: -2.238401412963867
    3. '
' → logprob: -7.738401412963867
    4. '<|end|>' → logprob: -8.988401412963867
    5. '	else' → logprob: -11.863401412963867
    6. 'elif' → logprob: -12.113401412963867
    7. ' ' → logprob: -13.488401412963867
    8. '_else' → logprob: -13.863401412963867
    9. ' 
' → logprob: -14.238401412963867
    10. '<|end|>' → logprob: -14.363401412963867

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.259539932012558
    2. 'else' → logprob: -1.5095399618148804
    3. ' else' → logprob: -4.88454008102417
    4. 'elif' → logprob: -11.884539604187012
    5. ' ' → logprob: -12.509539604187012
    6. '	else' → logprob: -12.634539604187012
    7. '  ' → logprob: -12.634539604187012
    8. '
' → logprob: -14.134539604187012
    9. '```' → logprob: -14.884539604187012
    10. '<|end|>' → logprob: -15.009539604187012

Token 285: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.13806959986686707
    2. ' else' → logprob: -2.1380696296691895
    3. '   ' → logprob: -4.5130696296691895
    4. 'elif' → logprob: -9.263069152832031
    5. '	else' → logprob: -11.263069152832031
    6. ' elif' → logprob: -12.763069152832031
    7. ' ' → logprob: -13.263069152832031
    8. '  ' → logprob: -13.263069152832031
    9. '_else' → logprob: -15.138069152832031
    10. ',' → logprob: -15.638069152832031

Token 286: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6615161895751953
    2. '   ' → logprob: -1.2865161895751953
    3. '       ' → logprob: -2.1615161895751953
    4. ' cost' → logprob: -3.6615161895751953
    5. ':
' → logprob: -3.6615161895751953
    6. 'cost' → logprob: -4.536516189575195
    7. '    ' → logprob: -5.286516189575195
    8. '=' → logprob: -5.536516189575195
    9. ' =' → logprob: -5.661516189575195
    10. ' ' → logprob: -5.661516189575195

Token 287: '       ' (ID: 309)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.006658654194325209
    2. ' P' → logprob: -5.631658554077148
    3. '   ' → logprob: -6.006658554077148
    4. '0' → logprob: -8.131658554077148
    5. '1' → logprob: -8.756658554077148
    6. '
' → logprob: -10.006658554077148
    7. ' ' → logprob: -10.506658554077148
    8. '    
' → logprob: -11.006658554077148
    9. '  ' → logprob: -11.756658554077148
    10. '    ' → logprob: -11.881658554077148

Token 288: ' cost' (ID: 3097)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.580929347255733e-05
    2. ' P' → logprob: -11.125016212463379
    3. '   ' → logprob: -14.500016212463379
    4. '
' → logprob: -15.500016212463379
    5. 'cost' (adapté à ' cost') → logprob: -16.500015258789062
    6. '1' → logprob: -17.250015258789062
    7. ' ' → logprob: -17.375015258789062
    8. '0' → logprob: -17.375015258789062
    9. 'p' → logprob: -17.750015258789062
    10. '	P' → logprob: -17.875015258789062

Token 289: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003244990948587656
    2. '[' → logprob: -8.625324249267578
    3. '[
' → logprob: -9.750324249267578
    4. '=' → logprob: -9.875324249267578
    5. ' =' → logprob: -10.500324249267578
    6. ' [' → logprob: -13.125324249267578
    7. '   ' → logprob: -13.500324249267578
    8. '=i' → logprob: -13.875324249267578
    9. '
' → logprob: -14.625324249267578
    10. '[I' → logprob: -14.750324249267578

Token 290: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16158358752727509
    2. ' =' → logprob: -1.9115835428237915
    3. ']' → logprob: -6.786583423614502
    4. ')' → logprob: -8.53658390045166
    5. ']=' → logprob: -10.53658390045166
    6. ')=' → logprob: -12.53658390045166
    7. '   ' → logprob: -14.03658390045166
    8. '[' → logprob: -14.16158390045166
    9. '=
' → logprob: -14.78658390045166
    10. ' ' → logprob: -15.41158390045166

Token 291: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150413408875465
    2. ' =' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.893150329589844
    4. ']' → logprob: -16.143150329589844
    5. '[' → logprob: -16.268150329589844
    6. '=
' → logprob: -17.018150329589844
    7. ')' → logprob: -17.268150329589844
    8. ']=' → logprob: -17.893150329589844
    9. ' ' → logprob: -18.018150329589844
    10. '```' → logprob: -18.018150329589844

Token 292: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.6166903151315637e-05
    2. ' P' → logprob: -11.125016212463379
    3. '
' → logprob: -14.375016212463379
    4. ' ' → logprob: -15.375016212463379
    5. '0' → logprob: -15.500016212463379
    6. '1' → logprob: -16.250015258789062
    7. '   ' → logprob: -16.625015258789062
    8. '	P' → logprob: -17.500015258789062
    9. 'p' → logprob: -18.000015258789062
    10. '  ' → logprob: -18.250015258789062

Token 293: '

' (ID: 279)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.00719743175432086
    2. 'heap' → logprob: -5.507197380065918
    3. '
' → logprob: -6.382197380065918
    4. 'dist' → logprob: -7.882197380065918
    5. 'INF' → logprob: -8.507197380065918
    6. 'from' → logprob: -8.882197380065918
    7. 'hq' → logprob: -9.007197380065918
    8. '#' → logprob: -9.132197380065918
    9. 'distance' → logprob: -9.382197380065918
    10. 'dp' → logprob: -9.757197380065918

Token 294: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0778457522392273
    2. 'INF' → logprob: -3.452845811843872
    3. 'hq' → logprob: -4.077845573425293
    4. 'dist' → logprob: -4.827845573425293
    5. 'heap' → logprob: -5.077845573425293
    6. 'dp' → logprob: -5.202845573425293
    7. '#' → logprob: -5.327845573425293
    8. 'pq' → logprob: -7.577845573425293
    9. 'inf' → logprob: -7.702845573425293
    10. 'distance' → logprob: -8.827845573425293

Token 295: ' Use' (ID: 7649)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.6939114332199097
    2. 'import' → logprob: -1.6939114332199097
    3. 'dp' → logprob: -2.193911552429199
    4. 'heap' → logprob: -2.318911552429199
    5. 'INF' → logprob: -3.443911552429199
    6. '#' → logprob: -4.193911552429199
    7. 'dist' → logprob: -4.193911552429199
    8. 'def' → logprob: -4.318911552429199
    9. 'pq' → logprob: -4.693911552429199
    10. 'h' → logprob: -4.943911552429199

Token 296: ' D' (ID: 415)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.053098320960998535
    2. ' heap' → logprob: -3.428098201751709
    3. 'hq' → logprob: -5.178098201751709
    4. 'import' → logprob: -5.178098201751709
    5. 'dist' → logprob: -6.053098201751709
    6. 'def' → logprob: -6.303098201751709
    7. '[]' → logprob: -6.553098201751709
    8. 'd' → logprob: -6.678098201751709
    9. 'q' → logprob: -7.803098201751709
    10. 'queue' → logprob: -8.178098678588867

Token 297: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.009117448702454567
    2. 'ijk' → logprob: -4.759117603302002
    3. 'ij' → logprob: -7.759117603302002
    4. 'jik' → logprob: -9.884117126464844
    5. '```' → logprob: -11.009117126464844
    6. 'ijks' → logprob: -12.759117126464844
    7. '#' → logprob: -13.384117126464844
    8. 'jk' → logprob: -14.509117126464844
    9. '[i' → logprob: -14.509117126464844
    10. '`' → logprob: -14.634117126464844

Token 298: ' to' (ID: 316)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21636147797107697
    2. '(heap' → logprob: -2.8413615226745605
    3. 'q' → logprob: -3.5913615226745605
    4. 'import' → logprob: -3.7163615226745605
    5. '(
' → logprob: -3.7163615226745605
    6. 'dist' → logprob: -4.3413615226745605
    7. '(queue' → logprob: -4.5913615226745605
    8. ' (' → logprob: -4.8413615226745605
    9. '(graph' → logprob: -5.3413615226745605
    10. 'pq' → logprob: -5.5913615226745605

Token 299: ' find' (ID: 1646)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4158284664154053
    2. ' find' → logprob: -2.1658284664154053
    3. 'find' → logprob: -2.6658284664154053
    4. 'dist' → logprob: -2.6658284664154053
    5. 'heap' → logprob: -3.0408284664154053
    6. ' import' → logprob: -4.165828704833984
    7. '[]' → logprob: -5.415828704833984
    8. '
' → logprob: -5.540828704833984
    9. ' heap' → logprob: -6.665828704833984
    10. 'calculate' → logprob: -6.665828704833984

Token 300: ' minimal' (ID: 19957)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7853653430938721
    2. 'the' → logprob: -0.9103653430938721
    3. ' shortest' → logprob: -2.285365343093872
    4. 'short' → logprob: -3.535365343093872
    5. 'import' → logprob: -6.035365104675293
    6. ' a' → logprob: -6.035365104675293
    7. 'a' → logprob: -6.410365104675293
    8. 'minimum' → logprob: -6.785365104675293
    9. 'dist' → logprob: -7.160365104675293
    10. 'distance' → logprob: -7.285365104675293

Token 301: ' total' (ID: 3609)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.4413922429084778
    2. 'distance' → logprob: -1.191392183303833
    3. 'dist' → logprob: -3.691392183303833
    4. ' cost' → logprob: -4.191392421722412
    5. ' distance' → logprob: -5.316392421722412
    6. 'path' → logprob: -6.066392421722412
    7. 'total' → logprob: -6.941392421722412
    8. 'import' → logprob: -6.941392421722412
    9. ' distances' → logprob: -7.691392421722412
    10. '(cost' → logprob: -7.816392421722412

Token 302: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.7300958037376404
    2. ' cost' → logprob: -0.8550958037376404
    3. 'distance' → logprob: -3.105095863342285
    4. ' distance' → logprob: -3.355095863342285
    5. 'dist' → logprob: -4.730095863342285
    6. '_cost' → logprob: -5.855095863342285
    7. '_distance' → logprob: -7.355095863342285
    8. 'import' → logprob: -8.480095863342285
    9. ' path' → logprob: -8.855095863342285
    10. ' time' → logprob: -9.730095863342285

Token 303: ' from' (ID: 591)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10200589150190353
    2. 'dist' → logprob: -2.602005958557129
    3. 'hq' → logprob: -4.602005958557129
    4. 'heap' → logprob: -4.727005958557129
    5. 'dp' → logprob: -6.602005958557129
    6. 'INF' → logprob: -6.977005958557129
    7. 'distance' → logprob: -7.352005958557129
    8. '
' → logprob: -7.977005958557129
    9. 'pq' → logprob: -8.352005958557129
    10. 'cost' → logprob: -8.852005958557129

Token 304: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043162284418940544
    2. ' ' → logprob: -7.750431537628174
    3. 'import' → logprob: -14.875432014465332
    4. '<|end|>' → logprob: -15.625432014465332
    5. '
' → logprob: -15.875432014465332
    6. '```' → logprob: -16.000431060791016
    7. 'town' → logprob: -16.500431060791016
    8. 'node' → logprob: -17.250431060791016
    9. 'the' → logprob: -17.500431060791016
    10. 'start' → logprob: -17.875431060791016

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. 'town' → logprob: -11.250017166137695
    3. ' ' → logprob: -13.500017166137695
    4. 'node' → logprob: -13.875017166137695
    5. 'import' → logprob: -14.375017166137695
    6. '```' → logprob: -14.875017166137695
    7. 'city' → logprob: -15.375017166137695
    8. ' town' → logprob: -15.875017166137695
    9. 'from' → logprob: -16.250017166137695
    10. 'the' → logprob: -16.250017166137695

Token 306: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.010736867785453796
    2. 'import' → logprob: -4.76073694229126
    3. 'to' → logprob: -6.26073694229126
    4. ' import' → logprob: -9.260736465454102
    5. ',' → logprob: -10.135736465454102
    6. 'heap' → logprob: -11.260736465454102
    7. ' ' → logprob: -11.635736465454102
    8. 'dist' → logprob: -11.635736465454102
    9. ' (' → logprob: -12.010736465454102
    10. ' and' → logprob: -12.760736465454102

Token 307: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01814994215965271
    2. ' N' → logprob: -4.0181498527526855
    3. 'n' → logprob: -19.893150329589844
    4. '```' → logprob: -20.893150329589844
    5. ' ' → logprob: -21.393150329589844
    6. '
' → logprob: -21.518150329589844
    7. '	N' → logprob: -21.768150329589844
    8. '\
' → logprob: -22.143150329589844
    9. ' ' → logprob: -22.518150329589844
    10. '`' → logprob: -22.768150329589844

Token 308: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.19120968878269196
    2. 'hq' → logprob: -2.4412097930908203
    3. 'dist' → logprob: -2.6912097930908203
    4. 'heap' → logprob: -4.19120979309082
    5. 'dp' → logprob: -6.56620979309082
    6. 'pq' → logprob: -6.69120979309082
    7. 'distance' → logprob: -8.19120979309082
    8. 'cost' → logprob: -8.19120979309082
    9. 'queue' → logprob: -8.31620979309082
    10. 'h' → logprob: -8.44120979309082

Token 309: '#' (ID: 2)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4821161925792694
    2. 'hq' → logprob: -1.2321162223815918
    3. 'heap' → logprob: -2.732116222381592
    4. 'dist' → logprob: -4.357116222381592
    5. 'dp' → logprob: -5.232116222381592
    6. 'INF' → logprob: -5.732116222381592
    7. 'h' → logprob: -6.232116222381592
    8. 'pq' → logprob: -6.857116222381592
    9. 'queue' → logprob: -7.482116222381592
    10. 'que' → logprob: -8.607115745544434

Token 310: ' Cost' (ID: 18328)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.18868890404701233
    2. 'hq' → logprob: -2.1886889934539795
    3. 'heap' → logprob: -3.1886889934539795
    4. 'dp' → logprob: -5.0636887550354
    5. 'dist' → logprob: -5.5636887550354
    6. 'h' → logprob: -5.5636887550354
    7. 'INF' → logprob: -5.5636887550354
    8. 'pq' → logprob: -7.8136887550354
    9. 'queue' → logprob: -9.688689231872559
    10. 'cost' → logprob: -9.813689231872559

Token 311: ' when' (ID: 1261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6263600587844849
    2. '=' → logprob: -1.7513600587844849
    3. 's' → logprob: -1.8763600587844849
    4. 'dist' → logprob: -2.3763599395751953
    5. 'heap' → logprob: -3.6263599395751953
    6. 'import' → logprob: -6.001359939575195
    7. '_heap' → logprob: -6.126359939575195
    8. '[' → logprob: -6.126359939575195
    9. 'pq' → logprob: -6.376359939575195
    10. '```' → logprob: -6.376359939575195

Token 312: ' "' (ID: 392)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6330636739730835
    2. 'dist' → logprob: -2.008063793182373
    3. 'cur' → logprob: -3.008063793182373
    4. 'i' → logprob: -3.383063793182373
    5. 'st' → logprob: -3.508063793182373
    6. 'node' → logprob: -3.883063793182373
    7. '1' → logprob: -3.883063793182373
    8. 'starting' → logprob: -3.883063793182373
    9. '=' → logprob: -4.133063793182373
    10. '[i' → logprob: -4.258063793182373

Token 313: 'arr' (ID: 1614)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.34275078773498535
    2. 'arr' → logprob: -2.9677507877349854
    3. 'starting' → logprob: -3.3427507877349854
    4. 'enter' → logprob: -3.4677507877349854
    5. 'at' → logprob: -3.5927507877349854
    6. 'i' → logprob: -3.7177507877349854
    7. 'moving' → logprob: -3.8427507877349854
    8. ' staying' → logprob: -4.092750549316406
    9. 'vis' → logprob: -4.092750549316406
    10. 'import' → logprob: -4.342750549316406

Token 314: 'iving' (ID: 2690)
  Prédit: 'iving'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iving' → logprob: -0.0065559749491512775
    2. 'ving' → logprob: -6.506556034088135
    3. 'ived' → logprob: -6.631556034088135
    4. 'ive' → logprob: -6.756556034088135
    5. 'ing' → logprob: -7.381556034088135
    6. 'ival' → logprob: -7.506556034088135
    7. 'iv' → logprob: -7.631556034088135
    8. '   ' → logprob: -8.506555557250977
    9. '

' → logprob: -9.381555557250977
    10. ' ' → logprob: -9.631555557250977

Token 315: '"' (ID: 1)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.614547610282898
    2. '"' → logprob: -1.114547610282898
    3. 'at' → logprob: -2.1145477294921875
    4. '=' → logprob: -5.4895477294921875
    5. ' "' → logprob: -5.7395477294921875
    6. ' =' → logprob: -6.2395477294921875
    7. '_at' → logprob: -8.239547729492188
    8. '[' → logprob: -8.864547729492188
    9. 'to' → logprob: -8.864547729492188
    10. ' to' → logprob: -9.614547729492188

Token 316: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.18348285555839539
    2. '[' → logprob: -2.5584828853607178
    3. ' =' → logprob: -3.0584828853607178
    4. 'at' → logprob: -3.9334828853607178
    5. '=' → logprob: -4.058482646942139
    6. '[node' → logprob: -6.308482646942139
    7. '[cur' → logprob: -6.933482646942139
    8. '_at' → logprob: -7.058482646942139
    9. '"' → logprob: -7.933482646942139
    10. '=[' → logprob: -8.058483123779297

Token 317: ' town' (ID: 8234)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.6471703052520752
    2. ' nxt' → logprob: -1.6471703052520752
    3. ' node' → logprob: -1.7721703052520752
    4. 'a' → logprob: -2.147170305252075
    5. ' a' → logprob: -2.147170305252075
    6. 'n' → logprob: -3.272170305252075
    7. 'neighbor' → logprob: -3.272170305252075
    8. 'i' → logprob: -3.647170305252075
    9. ' i' → logprob: -3.772170305252075
    10. ' town' → logprob: -3.772170305252075

Token 318: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.06328284740448
    2. '1' → logprob: -1.56328284740448
    3. ' at' → logprob: -2.1882829666137695
    4. '[' → logprob: -2.3132829666137695
    5. ' ' → logprob: -2.4382829666137695
    6. '=' → logprob: -3.0632829666137695
    7. ' i' → logprob: -3.3132829666137695
    8. '[i' → logprob: -3.9382829666137695
    9. ' is' → logprob: -4.0632829666137695
    10. 'i' → logprob: -4.6882829666137695

Token 319: ' i' (ID: 575)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7843455076217651
    2. '#' → logprob: -1.0343455076217651
    3. 'heap' → logprob: -2.4093456268310547
    4. 'dist' → logprob: -3.5343456268310547
    5. 'not' → logprob: -4.159345626831055
    6. 'pq' → logprob: -4.409345626831055
    7. 'cost' → logprob: -4.909345626831055
    8. 'distance' → logprob: -5.034345626831055
    9. 'graph' → logprob: -5.784345626831055
    10. ' #' → logprob: -5.784345626831055

Token 320: '.e' (ID: 2560)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6592103242874146
    2. 's' → logprob: -1.2842103242874146
    3. 'f' → logprob: -1.6592103242874146
    4. '=' → logprob: -4.784210205078125
    5. 'm' → logprob: -5.659210205078125
    6. 't' → logprob: -6.534210205078125
    7. 'tem' → logprob: -7.784210205078125
    8. 'mp' → logprob: -7.909210205078125
    9. ' =' → logprob: -8.034210205078125
    10. 'nt' → logprob: -8.409210205078125

Token 321: '.' (ID: 13)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4723908603191376
    2. '   ' → logprob: -2.47239089012146
    3. ':' → logprob: -2.84739089012146
    4. ' =' → logprob: -2.97239089012146
    5. 'n' → logprob: -3.47239089012146
    6. 'f' → logprob: -3.59739089012146
    7. '#' → logprob: -3.97239089012146
    8. ' ' → logprob: -4.097390651702881
    9. 'cost' → logprob: -4.472390651702881
    10. ',' → logprob: -4.472390651702881

Token 322: ' paying' (ID: 17623)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -1.5758293867111206
    2. ' staying' → logprob: -1.5758293867111206
    3. 'cost' → logprob: -1.9508293867111206
    4. ' i' → logprob: -2.07582950592041
    5. ' moving' → logprob: -2.57582950592041
    6. 'i' → logprob: -3.20082950592041
    7. ' not' → logprob: -3.70082950592041
    8. ' next' → logprob: -4.07582950592041
    9. ' at' → logprob: -4.20082950592041
    10. ' the' → logprob: -4.20082950592041

Token 323: ' at' (ID: 540)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.35177239775657654
    2. ' cost' → logprob: -1.476772427558899
    3. ' for' → logprob: -3.4767723083496094
    4. ' the' → logprob: -4.101772308349609
    5. 'for' → logprob: -4.476772308349609
    6. 'the' → logprob: -5.851772308349609
    7. ' at' → logprob: -6.476772308349609
    8. ')' → logprob: -6.726772308349609
    9. ' a' → logprob: -7.351772308349609
    10. ' costs' → logprob: -7.976772308349609

Token 324: ' that' (ID: 484)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.599073588848114
    2. 'the' → logprob: -1.4740736484527588
    3. 'arrival' → logprob: -2.849073648452759
    4. ' nxt' → logprob: -3.349073648452759
    5. 'n' → logprob: -3.849073648452759
    6. ' next' → logprob: -4.09907341003418
    7. 'next' → logprob: -4.22407341003418
    8. ' arrival' → logprob: -4.22407341003418
    9. 'neighbor' → logprob: -4.47407341003418
    10. ' each' → logprob: -4.84907341003418

Token 325: ' town' (ID: 8234)
  Prédit: 'town'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'town' → logprob: -0.6693662405014038
    2. 'point' → logprob: -2.0443663597106934
    3. 'node' → logprob: -2.2943663597106934
    4. '_' → logprob: -2.9193663597106934
    5. 'space' → logprob: -3.0443663597106934
    6. '[' → logprob: -3.7943663597106934
    7. ')' → logprob: -3.7943663597106934
    8. 'i' → logprob: -4.169366359710693
    9. ' ' → logprob: -4.419366359710693
    10. ' town' → logprob: -4.794366359710693

Token 326: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.879093587398529
    2. 'heap' → logprob: -1.6290936470031738
    3. 'dist' → logprob: -1.6290936470031738
    4. 'hq' → logprob: -1.7540936470031738
    5. '
' → logprob: -5.004093647003174
    6. 'h' → logprob: -5.754093647003174
    7. 'pq' → logprob: -5.754093647003174
    8. 'queue' → logprob: -5.754093647003174
    9. 'distance' → logprob: -6.754093647003174
    10. 'q' → logprob: -7.379093647003174

Token 327: 'INF' (ID: 64358)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.4353042542934418
    2. 'import' → logprob: -1.1853042840957642
    3. 'dist' → logprob: -3.8103041648864746
    4. 'heap' → logprob: -4.060304164886475
    5. 'h' → logprob: -5.685304164886475
    6. 'dp' → logprob: -6.560304164886475
    7. 'queue' → logprob: -6.935304164886475
    8. 'pq' → logprob: -7.060304164886475
    9. 'que' → logprob: -7.310304164886475
    10. 'q' → logprob: -8.935304641723633

Token 328: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858941584825516
    2. '=' → logprob: -3.0485894680023193
    3. ',' → logprob: -13.798589706420898
    4. ' ' → logprob: -15.298589706420898
    5. ')' → logprob: -15.423589706420898
    6. '=int' → logprob: -15.548589706420898
    7. ' =
' → logprob: -15.548589706420898
    8. '＝' → logprob: -16.7985897064209
    9. '_' → logprob: -17.6735897064209
    10. ' ' → logprob: -17.7985897064209

Token 329: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.006721995305269957
    2. 'float' → logprob: -5.0067219734191895
    3. 'int' → logprob: -12.131722450256348
    4. ' float' → logprob: -14.381722450256348
    5. '1' → logprob: -14.756722450256348
    6. ' ' → logprob: -15.506722450256348
    7. '100' → logprob: -17.88172149658203
    8. 'sys' → logprob: -18.13172149658203
    9. '１０' → logprob: -20.13172149658203
    10. '(float' → logprob: -20.88172149658203

Token 330: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03846210986375809
    2. 'float' → logprob: -3.2884621620178223
    3. 'int' → logprob: -7.788462162017822
    4. '1' → logprob: -12.288461685180664
    5. ' float' → logprob: -14.163461685180664
    6. 'sys' → logprob: -14.288461685180664
    7. '100' → logprob: -16.913461685180664
    8. ' ' → logprob: -17.163461685180664
    9. '(float' → logprob: -18.163461685180664
    10. 'pow' → logprob: -19.788461685180664

Token 331: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.10273953527212143
    2. '15' → logprob: -2.6027395725250244
    3. '18' → logprob: -4.102739334106445
    4. '10' → logprob: -5.352739334106445
    5. '12' → logprob: -6.602739334106445
    6. '**' → logprob: -7.227739334106445
    7. '14' → logprob: -8.727739334106445
    8. '13' → logprob: -10.352739334106445
    9. '16' → logprob: -11.227739334106445
    10. '17' → logprob: -12.477739334106445

Token 332: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0010665126610547304
    2. '9' → logprob: -7.7510666847229
    3. '18' → logprob: -8.001066207885742
    4. '12' → logprob: -8.501066207885742
    5. '10' → logprob: -10.001066207885742
    6. '14' → logprob: -10.251066207885742
    7. '13' → logprob: -11.876066207885742
    8. '16' → logprob: -12.001066207885742
    9. '11' → logprob: -12.751066207885742
    10. '17' → logprob: -14.501066207885742

Token 333: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3292219936847687
    2. 'import' → logprob: -2.2042219638824463
    3. 'heap' → logprob: -2.2042219638824463
    4. 'distance' → logprob: -3.4542219638824463
    5. '
' → logprob: -3.9542219638824463
    6. 'hq' → logprob: -5.829222202301025
    7. 'cost' → logprob: -5.829222202301025
    8. 'dp' → logprob: -6.579222202301025
    9. ' dist' → logprob: -7.329222202301025
    10. 'queue' → logprob: -7.579222202301025

Token 334: 'dp' (ID: 19037)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7641345858573914
    2. 'dist' → logprob: -0.7641345858573914
    3. 'dp' → logprob: -2.764134645462036
    4. 'distance' → logprob: -5.889134407043457
    5. 'd' → logprob: -6.389134407043457
    6. 'heap' → logprob: -7.764134407043457
    7. 'min' → logprob: -8.889134407043457
    8. 'cost' → logprob: -9.014134407043457
    9. 'hq' → logprob: -9.139134407043457
    10. 'from' → logprob: -9.889134407043457

Token 335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005600620643235743
    2. '=' → logprob: -7.500560283660889
    3. '[' → logprob: -12.00055980682373
    4. ' =[' → logprob: -14.87555980682373
    5. ')' → logprob: -15.62555980682373
    6. ' ' → logprob: -15.75055980682373
    7. ']' → logprob: -16.125560760498047
    8. '=[' → logprob: -16.750560760498047
    9. ',' → logprob: -17.000560760498047
    10. '```' → logprob: -17.250560760498047

Token 336: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.639096970204264e-05
    2. ' [' → logprob: -9.250096321105957
    3. '[I' → logprob: -15.875096321105957
    4. '[np' → logprob: -17.375097274780273
    5. '[int' → logprob: -17.750097274780273
    6. '[N' → logprob: -18.500097274780273
    7. '[node' → logprob: -18.625097274780273
    8. '[Index' → logprob: -18.625097274780273
    9. '[array' → logprob: -19.125097274780273
    10. '[start' → logprob: -19.250097274780273

Token 337: 'INF' (ID: 64358)
  Prédit: 'INF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' → logprob: -1.9361264946837764e-07
    2. ' INF' → logprob: -16.0
    3. '_INF' → logprob: -18.75
    4. 'inf' → logprob: -20.25
    5. '-INF' → logprob: -20.625
    6. '0' → logprob: -21.375
    7. 'IN' → logprob: -21.875
    8. 'Inf' → logprob: -22.0
    9. '   ' → logprob: -22.375
    10. '
' → logprob: -22.625

Token 338: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003115095605608076
    2. ' ]' → logprob: -9.250311851501465
    3. ' for' → logprob: -9.250311851501465
    4. ']*(' → logprob: -9.625311851501465
    5. ']*' → logprob: -10.125311851501465
    6. 'for' → logprob: -12.000311851501465
    7. ']+' → logprob: -12.750311851501465
    8. ',' → logprob: -12.875311851501465
    9. ')' → logprob: -13.875311851501465
    10. '```' → logprob: -15.750311851501465

Token 339: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.8306535482406616
    2. '*' → logprob: -1.7056535482406616
    3. '*(' → logprob: -2.080653667449951
    4. '+' → logprob: -2.205653667449951
    5. '[' → logprob: -2.580653667449951
    6. ')' → logprob: -3.955653667449951
    7. ' +' → logprob: -4.580653667449951
    8. ' for' → logprob: -4.705653667449951
    9. '
' → logprob: -4.955653667449951
    10. '(' → logprob: -5.080653667449951

Token 340: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.227250610711053e-05
    2. ' (' → logprob: -10.125041961669922
    3. '(' → logprob: -13.500041961669922
    4. '(n' → logprob: -14.375041961669922
    5. '((' → logprob: -16.500041961669922
    6. '
' → logprob: -16.500041961669922
    7. '   ' → logprob: -18.000041961669922
    8. '(NUM' → logprob: -18.750041961669922
    9. '(
' → logprob: -19.000041961669922
    10. ' ' → logprob: -19.000041961669922

Token 341: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005253918468952179
    2. '(N' → logprob: -5.255253791809082
    3. ' N' → logprob: -10.880253791809082
    4. '(' → logprob: -14.755253791809082
    5. '
' → logprob: -14.880253791809082
    6. ' (' → logprob: -15.130253791809082
    7. '   ' → logprob: -15.380253791809082
    8. '	N' → logprob: -15.880253791809082
    9. ',N' → logprob: -17.8802547454834
    10. ' ' → logprob: -18.1302547454834

Token 342: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004929834394715726
    2. ' +' → logprob: -7.625493049621582
    3. '+
' → logprob: -12.250493049621582
    4. '+)' → logprob: -17.000492095947266
    5. ' +
' → logprob: -17.375492095947266
    6. '＋' → logprob: -17.750492095947266
    7. '
' → logprob: -17.750492095947266
    8. '1' → logprob: -18.000492095947266
    9. '```' → logprob: -18.375492095947266
    10. ')' → logprob: -18.625492095947266

Token 343: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -18.06250762939453
    4. '
' → logprob: -18.12500762939453
    5. '   ' → logprob: -18.31250762939453
    6. '１' → logprob: -18.43750762939453
    7. '2' → logprob: -18.62500762939453
    8. '+' → logprob: -18.62500762939453
    9. ')' → logprob: -18.81250762939453
    10. '(' → logprob: -18.87500762939453

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '+' → logprob: -16.875001907348633
    4. '```' → logprob: -17.875001907348633
    5. '
' → logprob: -18.000001907348633
    6. '2' → logprob: -18.437501907348633
    7. '   ' → logprob: -18.437501907348633
    8. '１' → logprob: -18.500001907348633
    9. '(' → logprob: -19.125001907348633
    10. '۱' → logprob: -19.250001907348633

Token 345: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004436587623786181
    2. ')
' → logprob: -7.750443458557129
    3. ' )' → logprob: -11.500443458557129
    4. ']' → logprob: -13.875443458557129
    5. '
' → logprob: -14.375443458557129
    6. ')
' → logprob: -14.750443458557129
    7. ')

' → logprob: -15.000443458557129
    8. '<|end|>' → logprob: -15.625443458557129
    9. '```' → logprob: -16.250444412231445
    10. '),' → logprob: -16.500444412231445

Token 346: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.00021641071361955255
    2. 'import' → logprob: -8.500216484069824
    3. '
' → logprob: -11.500216484069824
    4. ' dp' → logprob: -13.250216484069824
    5. '	dp' → logprob: -15.000216484069824
    6. 'heap' → logprob: -15.125216484069824
    7. '_dp' → logprob: -15.375216484069824
    8. '0' → logprob: -16.750215530395508
    9. 'dq' → logprob: -16.750215530395508
    10. '```' → logprob: -17.375215530395508

Token 347: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.60414821645827e-06
    2. '1' → logprob: -12.625004768371582
    3. '```' → logprob: -14.375004768371582
    4. '[
' → logprob: -15.125004768371582
    5. '<|end|>' → logprob: -15.125004768371582
    6. '[start' → logprob: -17.500003814697266
    7. '\[' → logprob: -17.625003814697266
    8. '=' → logprob: -18.875003814697266
    9. ' [' → logprob: -18.875003814697266
    10. '2' → logprob: -19.375003814697266

Token 348: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. ')' → logprob: -19.125
    4. ']' → logprob: -19.5
    5. '0' → logprob: -19.875
    6. '۱' → logprob: -20.0
    7. '```' → logprob: -20.375
    8. '１' → logprob: -20.5
    9. '१' → logprob: -20.625
    10. '১' → logprob: -20.625

Token 349: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010342398309148848
    2. ' ]' → logprob: -9.500102996826172
    3. ']=' → logprob: -11.000102996826172
    4. ')' → logprob: -11.375102996826172
    5. '=' → logprob: -15.250102996826172
    6. ' =' → logprob: -16.875102996826172
    7. '[' → logprob: -17.125102996826172
    8. ']
' → logprob: -18.375102996826172
    9. ' )' → logprob: -18.500102996826172
    10. ',' → logprob: -18.625102996826172

Token 350: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692873179912567
    2. ' =' → logprob: -2.1269288063049316
    3. '=
' → logprob: -15.126928329467773
    4. '0' → logprob: -16.751928329467773
    5. '<|end|>' → logprob: -17.001928329467773
    6. ' =
' → logprob: -17.126928329467773
    7. '＝' → logprob: -17.251928329467773
    8. ',' → logprob: -17.251928329467773
    9. ')=' → logprob: -17.501928329467773
    10. '=int' → logprob: -17.876928329467773

Token 351: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '۰' → logprob: -20.375
    4. 'cost' → logprob: -21.5
    5. 'P' → logprob: -21.875
    6. '０' → logprob: -22.375
    7. '000' → logprob: -22.75
    8. '   ' → logprob: -23.125
    9. '00' → logprob: -23.25
    10. 'zero' → logprob: -23.625

Token 352: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. 'P' → logprob: -19.25
    4. '۰' → logprob: -19.5
    5. 'cost' → logprob: -19.625
    6. '０' → logprob: -20.5
    7. '   ' → logprob: -21.25
    8. '000' → logprob: -21.25
    9. 'zero' → logprob: -21.375
    10. '00' → logprob: -21.875

Token 353: '
' (ID: 198)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.0961042195558548
    2. 'heap' → logprob: -2.846104145050049
    3. 'pq' → logprob: -4.596104145050049
    4. 'import' → logprob: -4.596104145050049
    5. 'h' → logprob: -4.846104145050049
    6. 'q' → logprob: -6.096104145050049
    7. 'queue' → logprob: -6.596104145050049
    8. 'que' → logprob: -6.846104145050049
    9. '
' → logprob: -7.096104145050049
    10. 'hp' → logprob: -12.596104621887207

Token 354: 'hq' (ID: 156668)
  Prédit: 'hq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.03454921022057533
    2. 'heap' → logprob: -3.5345492362976074
    3. 'h' → logprob: -6.284549236297607
    4. 'pq' → logprob: -6.534549236297607
    5. 'que' → logprob: -7.534549236297607
    6. 'import' → logprob: -7.534549236297607
    7. 'queue' → logprob: -8.53454875946045
    8. 'q' → logprob: -8.53454875946045
    9. '
' → logprob: -12.03454875946045
    10. '```' → logprob: -13.78454875946045

Token 355: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4289305508136749
    2. ' =' → logprob: -1.0539305210113525
    3. '.' → logprob: -9.178930282592773
    4. '.heap' → logprob: -10.428930282592773
    5. '.append' → logprob: -10.678930282592773
    6. '=[]' → logprob: -11.053930282592773
    7. '.he' → logprob: -11.303930282592773
    8. 'import' → logprob: -11.803930282592773
    9. 'heap' → logprob: -11.803930282592773
    10. '=[]
' → logprob: -12.178930282592773

Token 356: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0052398028783500195
    2. '[]' → logprob: -5.255239963531494
    3. '[]
' → logprob: -12.505239486694336
    4. '[' → logprob: -13.255239486694336
    5. ' [(' → logprob: -14.755239486694336
    6. '[]

' → logprob: -17.005239486694336
    7. '[((' → logprob: -17.255239486694336
    8. '[],' → logprob: -18.880239486694336
    9. '[]}' → logprob: -19.005239486694336
    10. '[[' → logprob: -19.255239486694336

Token 357: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '(' → logprob: -17.625
    4. 'dp' → logprob: -18.875
    5. '(dp' → logprob: -20.875
    6. ')' → logprob: -21.375
    7. '۰' → logprob: -21.5
    8. '00' → logprob: -22.25
    9. '０' → logprob: -22.25
    10. '   ' → logprob: -22.75

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ' ,' → logprob: -11.25001335144043
    3. '1' → logprob: -14.75001335144043
    4. ',
' → logprob: -18.25001335144043
    5. ' ' → logprob: -19.00001335144043
    6. '0' → logprob: -20.75001335144043
    7. '```' → logprob: -20.75001335144043
    8. '，' → logprob: -21.12501335144043
    9. 'import' → logprob: -21.12501335144043
    10. '‌,' → logprob: -21.50001335144043

Token 359: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -21.0
    4. '```' → logprob: -22.5
    5. '１' → logprob: -22.875
    6. '۱' → logprob: -23.125
    7. '
' → logprob: -23.875
    8. '১' → logprob: -23.875
    9. '  ' → logprob: -24.125
    10. '१' → logprob: -24.375

Token 360: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '１' → logprob: -21.25
    4. '۱' → logprob: -21.625
    5. '১' → logprob: -21.75
    6. ')' → logprob: -21.75
    7. '१' → logprob: -22.0
    8. '```' → logprob: -22.375
    9. '<|end|>' → logprob: -22.75
    10. '١' → logprob: -23.5

Token 361: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.03805273771286011
    2. ')' → logprob: -3.288052797317505
    3. ')]
' → logprob: -12.038052558898926
    4. ']' → logprob: -12.788052558898926
    5. ')
' → logprob: -13.788052558898926
    6. ' )' → logprob: -14.538052558898926
    7. ')])' → logprob: -14.913052558898926
    8. ')]
' → logprob: -15.288052558898926
    9. '))' → logprob: -15.663052558898926
    10. ')]

' → logprob: -16.538053512573242

Token 362: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -2.9160102712921798e-05
    2. ' while' → logprob: -10.500029563903809
    3. 'heap' → logprob: -14.625029563903809
    4. '```' → logprob: -14.625029563903809
    5. '
' → logprob: -15.000029563903809
    6. ')' → logprob: -15.625029563903809
    7. 'While' → logprob: -16.500028610229492
    8. '	while' → logprob: -16.500028610229492
    9. 'import' → logprob: -18.000028610229492
    10. 'for' → logprob: -18.125028610229492

Token 363: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.014167269691824913
    2. ' h' → logprob: -4.264167308807373
    3. '(h' → logprob: -13.139166831970215
    4. '	h' → logprob: -14.014166831970215
    5. 'h' → logprob: -14.264166831970215
    6. '
' → logprob: -15.389166831970215
    7. '[h' → logprob: -15.889166831970215
    8. '<h' → logprob: -18.76416778564453
    9. '   ' → logprob: -18.88916778564453
    10. ',h' → logprob: -19.38916778564453

Token 364: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.8087270038668066e-05
    2. '[' → logprob: -10.750027656555176
    3. '
' → logprob: -12.750027656555176
    4. 'Q' → logprob: -14.000027656555176
    5. 'hq' → logprob: -14.500027656555176
    6. 'p' → logprob: -15.187527656555176
    7. '```' → logprob: -15.625027656555176
    8. ' q' → logprob: -15.625027656555176
    9. 'sq' → logprob: -15.937527656555176
    10. '[q' → logprob: -16.000028610229492

Token 365: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017089368775486946
    2. ':
' → logprob: -4.142089366912842
    3. '):' → logprob: -8.26708984375
    4. 'and' → logprob: -8.64208984375
    5. '[' → logprob: -8.64208984375
    6. '):
' → logprob: -8.89208984375
    7. '<|end|>' → logprob: -9.76708984375
    8. '>:' → logprob: -9.89208984375
    9. ',' → logprob: -10.14208984375
    10. ' and' → logprob: -10.26708984375

Token 366: '   ' (ID: 271)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0850827768445015
    2. 'c' → logprob: -2.710082769393921
    3. '	c' → logprob: -4.9600830078125
    4. 'd' → logprob: -6.3350830078125
    5. 'dist' → logprob: -6.3350830078125
    6. 'cur' → logprob: -6.4600830078125
    7. '   ' → logprob: -6.4600830078125
    8. ' cost' → logprob: -7.3350830078125
    9. '(cost' → logprob: -8.2100830078125
    10. '_cost' → logprob: -9.8350830078125

Token 367: ' c' (ID: 274)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.8933945298194885
    2. 'cost' → logprob: -1.1433944702148438
    3. 'c' (adapté à ' c') → logprob: -1.3933944702148438
    4. 'd' → logprob: -3.8933944702148438
    5. 'dist' → logprob: -6.643394470214844
    6. 'curr' → logprob: -6.768394470214844
    7. 'current' → logprob: -8.143394470214844
    8. 'cc' → logprob: -8.393394470214844
    9. 'total' → logprob: -9.268394470214844
    10. 'co' → logprob: -9.268394470214844

Token 368: ',' (ID: 11)
  Prédit: 'ost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.5184186100959778
    2. ',' → logprob: -1.018418550491333
    3. 'ur' → logprob: -3.768418550491333
    4. 'cost' → logprob: -4.393418788909912
    5. 'c' → logprob: -5.643418788909912
    6. ',c' → logprob: -5.893418788909912
    7. 'urrent' → logprob: -7.393418788909912
    8. '_cost' → logprob: -7.893418788909912
    9. 'urr' → logprob: -8.268418312072754
    10. 'cur' → logprob: -8.768418312072754

Token 369: ' v' (ID: 323)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8592365980148315
    2. 'v' → logprob: -0.8592365980148315
    3. 'cur' → logprob: -2.109236717224121
    4. 'node' → logprob: -3.734236717224121
    5. 'now' → logprob: -5.859236717224121
    6. ' cur' → logprob: -6.484236717224121
    7. ' u' → logprob: -6.734236717224121
    8. ' v' → logprob: -7.234236717224121
    9. ' node' → logprob: -7.484236717224121
    10. 'pos' → logprob: -7.734236717224121

Token 370: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.033657804131507874
    2. ' =' → logprob: -3.4086577892303467
    3. '=
' → logprob: -12.408658027648926
    4. ')' → logprob: -12.658658027648926
    5. ')=' → logprob: -13.033658027648926
    6. '(heap' → logprob: -15.533658027648926
    7. '=v' → logprob: -15.533658027648926
    8. '=query' → logprob: -15.658658027648926
    9. '<|end|>' → logprob: -15.908658027648926
    10. ']=' → logprob: -15.908658027648926

Token 371: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -7.302704761968926e-05
    2. ' heap' → logprob: -10.000073432922363
    3. 'he' → logprob: -10.500073432922363
    4. '(heap' → logprob: -18.125072479248047
    5. ' he' → logprob: -18.875072479248047
    6. 'hep' → logprob: -19.000072479248047
    7. '.heap' → logprob: -19.125072479248047
    8. 'hq' → logprob: -19.375072479248047
    9. 'heat' → logprob: -19.500072479248047
    10. '_heap' → logprob: -19.875072479248047

Token 372: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'h' → logprob: -16.25
    3. '
' → logprob: -17.125
    4. '[' → logprob: -17.625
    5. 'p' → logprob: -18.25
    6. '```' → logprob: -19.375
    7. '

' → logprob: -19.625
    8. 'f' → logprob: -20.25
    9. 'j' → logprob: -20.5
    10. 'g' → logprob: -20.5

Token 373: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -7.941850526549388e-06
    2. 'q' → logprob: -12.000007629394531
    3. '.heap' → logprob: -14.125007629394531
    4. 'he' → logprob: -14.375007629394531
    5. '.' → logprob: -15.875007629394531
    6. ' he' → logprob: -16.00000762939453
    7. '.pop' → logprob: -16.62500762939453
    8. '.q' → logprob: -17.50000762939453
    9. ' .' → logprob: -18.00000762939453
    10. '_he' → logprob: -18.12500762939453

Token 374: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.8624639324116288e-06
    2. 'pp' → logprob: -13.375001907348633
    3. 'ap' → logprob: -15.500001907348633
    4. '[' → logprob: -17.750001907348633
    5. 'q' → logprob: -18.000001907348633
    6. '```' → logprob: -19.125001907348633
    7. 'a' → logprob: -19.875001907348633
    8. 'appen' → logprob: -20.125001907348633
    9. 'appe' → logprob: -20.125001907348633
    10. ' app' → logprob: -20.250001907348633

Token 375: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.03881971538066864
    2. 'ush' → logprob: -4.038819789886475
    3. 'pp' → logprob: -4.538819789886475
    4. 'p' → logprob: -5.288819789886475
    5. 'app' → logprob: -5.538819789886475
    6. 'q' → logprob: -7.288819789886475
    7. '[' → logprob: -10.538819313049316
    8. 'ap' → logprob: -10.788819313049316
    9. 'pop' → logprob: -10.788819313049316
    10. '```' → logprob: -11.038819313049316

Token 376: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.2233183042553719e-05
    2. 'h' → logprob: -11.875012397766113
    3. ',h' → logprob: -13.375012397766113
    4. '(' → logprob: -13.625012397766113
    5. '(q' → logprob: -13.625012397766113
    6. 'hq' → logprob: -14.375012397766113
    7. '(
' → logprob: -15.250012397766113
    8. '/h' → logprob: -15.750012397766113
    9. ' h' → logprob: -16.125011444091797
    10. '	h' → logprob: -16.500011444091797

Token 377: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.088346359931165e-07
    2. ')' → logprob: -14.875000953674316
    3. 'p' → logprob: -15.125000953674316
    4. 'Q' → logprob: -16.125
    5. ')
' → logprob: -17.625
    6. 'v' → logprob: -17.875
    7. 'queue' → logprob: -18.0
    8. ',' → logprob: -18.375
    9. '
' → logprob: -18.5
    10. 'qp' → logprob: -18.875

Token 378: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00408160500228405
    2. ')
' → logprob: -5.504081726074219
    3. ')
' → logprob: -13.004081726074219
    4. '   ' → logprob: -15.129081726074219
    5. ')

' → logprob: -15.379081726074219
    6. ' )' → logprob: -15.629081726074219
    7. ')v' → logprob: -15.629081726074219
    8. ')`' → logprob: -16.87908172607422
    9. ')c' → logprob: -17.37908172607422
    10. ')`
' → logprob: -18.00408172607422

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3418256938457489
    2. 'if' → logprob: -1.3418257236480713
    3. ' if' → logprob: -3.5918257236480713
    4. 'for' → logprob: -7.716825485229492
    5. '	if' → logprob: -9.091825485229492
    6. ' for' → logprob: -10.466825485229492
    7. '    
' → logprob: -11.466825485229492
    8. '       ' → logprob: -12.216825485229492
    9. '
' → logprob: -12.841825485229492
    10. '  ' → logprob: -12.966825485229492

Token 380: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.000464631273644045
    2. '   ' → logprob: -7.75046443939209
    3. ' if' → logprob: -10.50046443939209
    4. 'for' → logprob: -12.00046443939209
    5. '    
' → logprob: -15.75046443939209
    6. '
' → logprob: -16.125465393066406
    7. '```' → logprob: -17.625465393066406
    8. '	if' → logprob: -18.000465393066406
    9. 'If' → logprob: -18.250465393066406
    10. '       ' → logprob: -18.250465393066406

Token 381: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011805158108472824
    2. ' dp' → logprob: -4.761805057525635
    3. 'c' → logprob: -5.761805057525635
    4. ' c' → logprob: -10.136805534362793
    5. '	dp' → logprob: -15.011805534362793
    6. 'v' → logprob: -17.136804580688477
    7. '_dp' → logprob: -17.261804580688477
    8. '(dp' → logprob: -17.886804580688477
    9. 'dc' → logprob: -18.261804580688477
    10. '	c' → logprob: -18.886804580688477

Token 382: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.1008713702030946e-06
    2. 'v' → logprob: -13.250001907348633
    3. '[' → logprob: -16.250001907348633
    4. '```' → logprob: -17.250001907348633
    5. '<v' → logprob: -18.250001907348633
    6. '[c' → logprob: -18.500001907348633
    7. '	v' → logprob: -18.875001907348633
    8. '[
' → logprob: -19.750001907348633
    9. '[val' → logprob: -20.625001907348633
    10. '[cur' → logprob: -21.000001907348633

Token 383: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0074083236977458
    2. ' <' → logprob: -5.382408142089844
    3. '<c' → logprob: -6.382408142089844
    4. '<v' → logprob: -6.882408142089844
    5. ')<' → logprob: -10.257408142089844
    6. ']<' → logprob: -12.382408142089844
    7. ')' → logprob: -12.632408142089844
    8. '<int' → logprob: -12.757408142089844
    9. '<n' → logprob: -12.882408142089844
    10. '<m' → logprob: -13.007408142089844

Token 384: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.01474534347653389
    2. '<c' → logprob: -4.639745235443115
    3. '<v' → logprob: -5.889745235443115
    4. ' <' → logprob: -6.139745235443115
    5. '<n' → logprob: -11.389745712280273
    6. '<int' → logprob: -11.889745712280273
    7. '<w' → logprob: -12.389745712280273
    8. '<len' → logprob: -12.514745712280273
    9. '<u' → logprob: -12.764745712280273
    10. '<m' → logprob: -12.764745712280273

Token 385: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.5491004129871726e-05
    2. ' c' → logprob: -10.000045776367188
    3. '	c' → logprob: -18.625045776367188
    4. ')c' → logprob: -21.000045776367188
    5. ' ' → logprob: -21.375045776367188
    6. '
' → logprob: -21.500045776367188
    7. '   ' → logprob: -22.000045776367188
    8. '```' → logprob: -22.125045776367188
    9. '<c' → logprob: -22.750045776367188
    10. '_c' → logprob: -22.875045776367188

Token 386: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022114597260951996
    2. ':
' → logprob: -3.8971145153045654
    3. 'continue' → logprob: -6.7721147537231445
    4. '   ' → logprob: -8.647114753723145
    5. ' continue' → logprob: -8.897114753723145
    6. '       ' → logprob: -9.647114753723145
    7. '	continue' → logprob: -10.147114753723145
    8. '_continue' → logprob: -12.897114753723145
    9. ' continues' → logprob: -13.647114753723145
    10. ':
' → logprob: -14.022114753723145

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19217850267887115
    2. '   ' → logprob: -2.56717848777771
    3. '	continue' → logprob: -3.06717848777771
    4. 'continue' → logprob: -3.19217848777771
    5. ' continue' → logprob: -4.567178726196289
    6. '_continue' → logprob: -10.692178726196289
    7. '	   ' → logprob: -11.317178726196289
    8. '	' → logprob: -11.442178726196289
    9. '   ' → logprob: -12.442178726196289
    10. '```' → logprob: -12.442178726196289

Token 388: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0015589047688990831
    2. ' continue' → logprob: -6.501558780670166
    3. '	continue' → logprob: -10.001559257507324
    4. '   ' → logprob: -12.126559257507324
    5. '       ' → logprob: -12.501559257507324
    6. 'contin' → logprob: -13.751559257507324
    7. '_continue' → logprob: -14.626559257507324
    8. 'continu' → logprob: -15.251559257507324
    9. '```' → logprob: -15.876559257507324
    10. 'Continue' → logprob: -16.501558303833008

Token 389: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06497406214475632
    2. 'for' → logprob: -2.814974069595337
    3. ' for' → logprob: -5.814973831176758
    4. '	for' → logprob: -11.189973831176758
    5. '```' → logprob: -13.064973831176758
    6. '    
' → logprob: -13.189973831176758
    7. '  ' → logprob: -14.064973831176758
    8. '   ' → logprob: -14.564973831176758
    9. '       ' → logprob: -16.189973831176758
    10. ' ' → logprob: -16.689973831176758

Token 390: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007503817323595285
    2. ' for' → logprob: -5.382503986358643
    3. 'for' → logprob: -6.382503986358643
    4. '    
' → logprob: -7.132503986358643
    5. '
' → logprob: -8.257503509521484
    6. '	for' → logprob: -9.382503509521484
    7. '   
' → logprob: -11.007503509521484
    8. ' 
' → logprob: -11.632503509521484
    9. '   ' → logprob: -12.257503509521484
    10. '```' → logprob: -12.382503509521484

Token 391: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001035191467963159
    2. ' for' → logprob: -7.001035213470459
    3. '   ' → logprob: -9.0010347366333
    4. '	for' → logprob: -14.7510347366333
    5. '    
' → logprob: -17.376035690307617
    6. '```' → logprob: -18.126035690307617
    7. '  ' → logprob: -20.126035690307617
    8. '
' → logprob: -20.626035690307617
    9. ' ' → logprob: -20.876035690307617
    10. 'For' → logprob: -21.251035690307617

Token 392: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00020354038861114532
    2. ' v' → logprob: -8.500203132629395
    3. '   ' → logprob: -19.00020408630371
    4. '	v' → logprob: -19.12520408630371
    5. ' ' → logprob: -20.87520408630371
    6. ')v' → logprob: -21.87520408630371
    7. '[v' → logprob: -22.12520408630371
    8. '_v' → logprob: -22.87520408630371
    9. '<v' → logprob: -23.00020408630371
    10. ' ' → logprob: -23.12520408630371

Token 393: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2811663746833801
    2. ' ==' → logprob: -1.4061663150787354
    3. '=' → logprob: -11.781166076660156
    4. ']==' → logprob: -12.656166076660156
    5. '==
' → logprob: -13.281166076660156
    6. '```' → logprob: -13.906166076660156
    7. ')==' → logprob: -14.281166076660156
    8. ' ' → logprob: -14.906166076660156
    9. '===' → logprob: -15.156166076660156
    10. '<|end|>' → logprob: -15.406166076660156

Token 394: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00020354038861114532
    2. ' N' → logprob: -8.500203132629395
    3. 'n' → logprob: -21.25020408630371
    4. ' ' → logprob: -21.37520408630371
    5. '	N' → logprob: -22.12520408630371
    6. '<|end|>' → logprob: -22.62520408630371
    7. '```' → logprob: -23.25020408630371
    8. '`' → logprob: -23.75020408630371
    9. '1' → logprob: -23.87520408630371
    10. '   ' → logprob: -24.12520408630371

Token 395: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12761203944683075
    2. ':
' → logprob: -2.1276121139526367
    3. '   ' → logprob: -7.377612113952637
    4. '       ' → logprob: -10.377612113952637
    5. ':return' → logprob: -11.252612113952637
    6. ':
' → logprob: -11.377612113952637
    7. ' :' → logprob: -14.377612113952637
    8. '):
' → logprob: -14.627612113952637
    9. ':

' → logprob: -15.002612113952637
    10. '	break' → logprob: -15.252612113952637

Token 396: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034583290107548237
    2. '   ' → logprob: -8.000346183776855
    3. 'print' → logprob: -12.375346183776855
    4. 'break' → logprob: -12.375346183776855
    5. '
' → logprob: -13.375346183776855
    6. '```' → logprob: -16.00034523010254
    7. '           ' → logprob: -16.37534523010254
    8. ' break' → logprob: -16.75034523010254
    9. '	break' → logprob: -17.25034523010254
    10. '    
' → logprob: -17.25034523010254

Token 397: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002675418509170413
    2. '   ' → logprob: -6.502675533294678
    3. 'break' → logprob: -6.752675533294678
    4. ' print' → logprob: -13.12767505645752
    5. '       ' → logprob: -13.62767505645752
    6. '
' → logprob: -14.00267505645752
    7. '```' → logprob: -14.50267505645752
    8. 'return' → logprob: -16.877676010131836
    9. '	print' → logprob: -17.252676010131836
    10. '    
' → logprob: -17.627676010131836

Token 398: '(c' (ID: 2410)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16174949705600739
    2. '(c' → logprob: -1.9117494821548462
    3. '0' → logprob: -6.661749362945557
    4. '(dp' → logprob: -8.786749839782715
    5. 'dp' → logprob: -9.661749839782715
    6. '(' → logprob: -10.911749839782715
    7. ' c' → logprob: -11.911749839782715
    8. ')c' → logprob: -13.036749839782715
    9. '	c' → logprob: -13.661749839782715
    10. '[c' → logprob: -15.411749839782715

Token 399: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031797364354133606
    2. ')
' → logprob: -5.753179550170898
    3. ' )' → logprob: -14.003179550170898
    4. ')
' → logprob: -14.128179550170898
    5. ')return' → logprob: -15.253179550170898
    6. '   ' → logprob: -16.6281795501709
    7. '))' → logprob: -16.6281795501709
    8. ')`' → logprob: -18.0031795501709
    9. '),' → logprob: -18.1281795501709
    10. ' )
' → logprob: -18.6281795501709

Token 400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.77627644513268e-06
    2. '   ' → logprob: -12.875008583068848
    3. '	break' → logprob: -12.875008583068848
    4. '	' → logprob: -13.750008583068848
    5. 'break' → logprob: -13.875008583068848
    6. ' break' → logprob: -15.250008583068848
    7. 'exit' → logprob: -15.375008583068848
    8. '           ' → logprob: -15.375008583068848
    9. '```' → logprob: -15.750008583068848
    10. 'b' → logprob: -16.125009536743164

Token 401: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.31524142622947693
    2. '       ' → logprob: -1.3152414560317993
    3. 'exit' → logprob: -7.06524133682251
    4. 'sys' → logprob: -7.56524133682251
    5. ' break' → logprob: -7.94024133682251
    6. '	break' → logprob: -8.315241813659668
    7. 'return' → logprob: -13.940241813659668
    8. '   ' → logprob: -13.940241813659668
    9. 'import' → logprob: -14.065241813659668
    10. '	exit' → logprob: -14.815241813659668

Token 402: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004058858612552285
    2. 'for' → logprob: -7.875405788421631
    3. ' for' → logprob: -10.875406265258789
    4. '    
' → logprob: -12.125406265258789
    5. '
' → logprob: -14.000406265258789
    6. '   ' → logprob: -15.500406265258789
    7. '```' → logprob: -16.25040626525879
    8. '  
' → logprob: -16.50040626525879
    9. '  ' → logprob: -16.87540626525879
    10. '	for' → logprob: -17.00040626525879

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04879174754023552
    2. 'for' → logprob: -3.0487916469573975
    3. ' for' → logprob: -8.548791885375977
    4. '```' → logprob: -11.798791885375977
    5. '    
' → logprob: -13.173791885375977
    6. '	for' → logprob: -13.923791885375977
    7. '   ' → logprob: -16.673791885375977
    8. ' ' → logprob: -16.798791885375977
    9. '  ' → logprob: -17.298791885375977
    10. '    
' → logprob: -17.423791885375977

Token 404: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002646286739036441
    2. ' for' → logprob: -6.252646446228027
    3. '   ' → logprob: -7.252646446228027
    4. '	for' → logprob: -11.627646446228027
    5. '    
' → logprob: -15.127646446228027
    6. ' ' → logprob: -17.87764549255371
    7. '```' → logprob: -18.62764549255371
    8. '  ' → logprob: -19.00264549255371
    9. '_for' → logprob: -19.25264549255371
    10. '  
' → logprob: -19.25264549255371

Token 405: ' nv' (ID: 68641)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.4579095244407654
    2. 'n' → logprob: -1.7079095840454102
    3. 'nx' → logprob: -1.7079095840454102
    4. 'to' → logprob: -6.08290958404541
    5. 'u' → logprob: -6.45790958404541
    6. 'w' → logprob: -7.83290958404541
    7. 'e' → logprob: -8.08290958404541
    8. ' nxt' → logprob: -8.58290958404541
    9. '```' → logprob: -9.83290958404541
    10. 'next' → logprob: -9.95790958404541

Token 406: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16126222908496857
    2. ' in' → logprob: -1.9112622737884521
    3. ',' → logprob: -6.911262035369873
    4. 'n' → logprob: -11.036262512207031
    5. ',in' → logprob: -11.786262512207031
    6. ' ' → logprob: -12.786262512207031
    7. ')' → logprob: -12.786262512207031
    8. '	in' → logprob: -13.036262512207031
    9. ',n' → logprob: -13.036262512207031
    10. 'In' → logprob: -13.411262512207031

Token 407: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0007102862582542002
    2. ' graph' → logprob: -7.250710487365723
    3. '	graph' → logprob: -15.500710487365723
    4. '(graph' → logprob: -15.625710487365723
    5. '_graph' → logprob: -18.625709533691406
    6. 'graphql' → logprob: -18.625709533691406
    7. 'raph' → logprob: -19.375709533691406
    8. '   ' → logprob: -20.625709533691406
    9. '.graph' → logprob: -20.750709533691406
    10. 'Graph' → logprob: -20.875709533691406

Token 408: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.1472419600977446e-06
    2. 'v' → logprob: -13.750000953674316
    3. '[' → logprob: -17.000001907348633
    4. '```' → logprob: -19.625001907348633
    5. ',v' → logprob: -20.000001907348633
    6. ' [' → logprob: -20.625001907348633
    7. '(v' → logprob: -20.750001907348633
    8. '<v' → logprob: -21.125001907348633
    9. '[V' → logprob: -21.250001907348633
    10. ' v' → logprob: -21.375001907348633

Token 409: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03500755503773689
    2. ':' → logprob: -3.6600074768066406
    3. ']:' → logprob: -5.160007476806641
    4. '):
' → logprob: -6.160007476806641
    5. ',' → logprob: -7.535007476806641
    6. ' ):' → logprob: -9.91000747680664
    7. '}:' → logprob: -9.91000747680664
    8. ')' → logprob: -10.16000747680664
    9. '   ' → logprob: -10.28500747680664
    10. '       ' → logprob: -10.28500747680664

Token 410: '       ' (ID: 309)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.11364089697599411
    2. '       ' → logprob: -2.738640785217285
    3. 'new' → logprob: -3.863640785217285
    4. '   ' → logprob: -4.988640785217285
    5. 'nd' → logprob: -5.613640785217285
    6. 'next' → logprob: -5.988640785217285
    7. 'nv' → logprob: -5.988640785217285
    8. 'cost' → logprob: -6.113640785217285
    9. 'if' → logprob: -6.988640785217285
    10. 'n' → logprob: -7.113640785217285

Token 411: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' (adapté à ' nc') → logprob: -0.05008586123585701
    2. 'new' → logprob: -3.3000857830047607
    3. 'next' → logprob: -5.42508602142334
    4. 'cost' → logprob: -5.55008602142334
    5. 'nd' → logprob: -6.42508602142334
    6. '       ' → logprob: -7.05008602142334
    7. 'nv' → logprob: -8.17508602142334
    8. 'if' → logprob: -8.30008602142334
    9. 'n' → logprob: -8.42508602142334
    10. 'cc' → logprob: -8.55008602142334

Token 412: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5785757303237915
    2. ' =' → logprob: -0.8285757303237915
    3. '=c' → logprob: -5.953575611114502
    4. 'c' → logprob: -10.82857608795166
    5. ',' → logprob: -11.70357608795166
    6. '=
' → logprob: -13.57857608795166
    7. '
' → logprob: -13.95357608795166
    8. ' c' → logprob: -13.95357608795166
    9. ',c' → logprob: -14.32857608795166
    10. '＝' → logprob: -14.70357608795166

Token 413: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011048170737922192
    2. ' c' → logprob: -4.511048316955566
    3. '	c' → logprob: -15.636048316955566
    4. ' ' → logprob: -17.51104736328125
    5. 'cost' → logprob: -17.51104736328125
    6. ')c' → logprob: -17.88604736328125
    7. 'dp' → logprob: -18.13604736328125
    8. '   ' → logprob: -18.38604736328125
    9. '
' → logprob: -18.63604736328125
    10. ' ' → logprob: -18.76104736328125

Token 414: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759400725364685
    2. '+' → logprob: -0.8259400725364685
    3. '+
' → logprob: -15.325940132141113
    4. ' ' → logprob: -16.075939178466797
    5. '+c' → logprob: -16.075939178466797
    6. '＋' → logprob: -16.200939178466797
    7. ' +
' → logprob: -16.700939178466797
    8. '
' → logprob: -17.575939178466797
    9. ' ' → logprob: -18.200939178466797
    10. '+=' → logprob: -18.325939178466797

Token 415: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0007123126997612417
    2. ' cost' → logprob: -7.2507123947143555
    3. '(cost' → logprob: -13.000712394714355
    4. '0' → logprob: -18.50071144104004
    5. 'c' → logprob: -18.50071144104004
    6. '
' → logprob: -19.00071144104004
    7. ' (' → logprob: -19.00071144104004
    8. '(' → logprob: -19.12571144104004
    9. 'co' → logprob: -19.25071144104004
    10. '   ' → logprob: -19.25071144104004

Token 416: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.9504606825648807e-05
    2. '[' → logprob: -10.875019073486328
    3. '[
' → logprob: -15.125019073486328
    4. '```' → logprob: -17.375019073486328
    5. '	n' → logprob: -17.750019073486328
    6. ' [' → logprob: -17.750019073486328
    7. '[N' → logprob: -18.250019073486328
    8. '\[' → logprob: -18.625019073486328
    9. '[]' → logprob: -18.750019073486328
    10. '[[' → logprob: -19.250019073486328

Token 417: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.259079363080673e-05
    2. '[v' → logprob: -11.375012397766113
    3. '[' → logprob: -15.000012397766113
    4. 'av' → logprob: -15.875012397766113
    5. '[n' → logprob: -15.875012397766113
    6. '```' → logprob: -15.875012397766113
    7. ']' → logprob: -16.25001335144043
    8. '
' → logprob: -17.50001335144043
    9. 'в' → logprob: -17.62501335144043
    10. '``' → logprob: -18.12501335144043

Token 418: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004046938265673816
    2. '[n' → logprob: -8.625404357910156
    3. ']
' → logprob: -8.750404357910156
    4. ' ]' → logprob: -10.625404357910156
    5. ')' → logprob: -10.750404357910156
    6. '[' → logprob: -11.500404357910156
    7. '[v' → logprob: -12.125404357910156
    8. '])' → logprob: -13.375404357910156
    9. ')]' → logprob: -13.875404357910156
    10. '   ' → logprob: -14.750404357910156

Token 419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2241438627243042
    2. ' if' → logprob: -2.5991439819335938
    3. 'heap' → logprob: -3.2241439819335938
    4. '
' → logprob: -3.3491439819335938
    5. ' heap' → logprob: -3.9741439819335938
    6. '   ' → logprob: -4.099143981933594
    7. 'if' → logprob: -4.349143981933594
    8. '(heap' → logprob: -6.849143981933594
    9. ')' → logprob: -7.474143981933594
    10. ')
' → logprob: -7.724143981933594

Token 420: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002511212369427085
    2. ' if' → logprob: -6.002511024475098
    3. '       ' → logprob: -10.252511024475098
    4. '   ' → logprob: -16.627511978149414
    5. '	if' → logprob: -18.002511978149414
    6. '           ' → logprob: -18.002511978149414
    7. '        
' → logprob: -18.377511978149414
    8. 'heap' → logprob: -19.252511978149414
    9. ' ' → logprob: -19.377511978149414
    10. 'If' → logprob: -20.002511978149414

Token 421: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.11590620130300522
    2. 'dp' → logprob: -2.490906238555908
    3. ' nc' → logprob: -3.740906238555908
    4. 'nc' → logprob: -5.865906238555908
    5. '	dp' → logprob: -10.61590576171875
    6. '(dp' → logprob: -11.74090576171875
    7. '_nc' → logprob: -12.61590576171875
    8. ' dc' → logprob: -13.99090576171875
    9. '_dp' → logprob: -14.24090576171875
    10. '   ' → logprob: -14.61590576171875

Token 422: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.723352049040841e-06
    2. 'nv' → logprob: -12.500004768371582
    3. '[' → logprob: -14.875004768371582
    4. '```' → logprob: -16.000003814697266
    5. '   ' → logprob: -16.375003814697266
    6. '[
' → logprob: -16.750003814697266
    7. '[[' → logprob: -17.125003814697266
    8. '1' → logprob: -17.500003814697266
    9. '_nv' → logprob: -17.500003814697266
    10. '
' → logprob: -17.625003814697266

Token 423: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -4.179569077678025e-05
    2. '[n' → logprob: -10.375041961669922
    3. '[v' → logprob: -11.500041961669922
    4. '```' → logprob: -15.875041961669922
    5. '[' → logprob: -16.250041961669922
    6. '
' → logprob: -16.375041961669922
    7. ']' → logprob: -17.000041961669922
    8. '   ' → logprob: -17.125041961669922
    9. 'nv' → logprob: -17.250041961669922
    10. ' nv' → logprob: -17.250041961669922

Token 424: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3828586935997009
    2. '>' → logprob: -1.2578587532043457
    3. ']' → logprob: -3.7578587532043457
    4. ']>' → logprob: -5.257858753204346
    5. '[' → logprob: -5.757858753204346
    6. '[n' → logprob: -7.007858753204346
    7. '[v' → logprob: -7.257858753204346
    8. ' ]' → logprob: -7.757858753204346
    9. '>[' → logprob: -11.007858276367188
    10. '[c' → logprob: -11.257858276367188

Token 425: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1810281127691269
    2. '[n' → logprob: -1.931028127670288
    3. ' >' → logprob: -4.056027889251709
    4. '[' → logprob: -5.931027889251709
    5. '[v' → logprob: -7.556027889251709
    6. '>[' → logprob: -9.556028366088867
    7. '">' → logprob: -12.306028366088867
    8. ']>' → logprob: -12.431028366088867
    9. '[]>' → logprob: -13.306028366088867
    10. '[c' → logprob: -13.306028366088867

Token 426: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.10021928697824478
    2. ' nc' → logprob: -2.350219249725342
    3. '_nc' → logprob: -11.3502197265625
    4. '.nc' → logprob: -14.3502197265625
    5. 'Nc' → logprob: -15.1002197265625
    6. ' Nc' → logprob: -18.7252197265625
    7. 'NC' → logprob: -18.7252197265625
    8. 'n' → logprob: -18.8502197265625
    9. ' ' → logprob: -19.2252197265625
    10. '
' → logprob: -19.4752197265625

Token 427: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2525899112224579
    2. ':' → logprob: -1.5025899410247803
    3. '):
' → logprob: -8.00259017944336
    4. '=' → logprob: -8.75259017944336
    5. '       ' → logprob: -10.12759017944336
    6. ':
' → logprob: -10.12759017944336
    7. '           ' → logprob: -10.75259017944336
    8. ' :
' → logprob: -10.87759017944336
    9. '):' → logprob: -11.50259017944336
    10. ')' → logprob: -11.75259017944336

Token 428: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21147547662258148
    2. 'dp' → logprob: -2.086475372314453
    3. ' dp' → logprob: -2.711475372314453
    4. '(dp' → logprob: -10.711475372314453
    5. '	dp' → logprob: -11.711475372314453
    6. '          ' → logprob: -12.586475372314453
    7. '_dp' → logprob: -12.586475372314453
    8. '[' → logprob: -12.961475372314453
    9. '```' → logprob: -13.086475372314453
    10. '       ' → logprob: -13.336475372314453

Token 429: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.018150413408875465
    2. ' dp' → logprob: -4.018150329589844
    3. '	dp' → logprob: -14.768150329589844
    4. '           ' → logprob: -16.643150329589844
    5. '_dp' → logprob: -17.268150329589844
    6. '(dp' → logprob: -17.893150329589844
    7. '.dp' → logprob: -19.018150329589844
    8. 'import' → logprob: -19.518150329589844
    9. '```' → logprob: -19.893150329589844
    10. '               ' → logprob: -20.143150329589844

Token 430: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.6405310816480778e-05
    2. '[' → logprob: -12.000016212463379
    3. '```' → logprob: -12.625016212463379
    4. '=' → logprob: -13.875016212463379
    5. '_n' → logprob: -14.000016212463379
    6. '_nv' → logprob: -14.000016212463379
    7. '
' → logprob: -14.375016212463379
    8. '[
' → logprob: -14.375016212463379
    9. '   ' → logprob: -14.500016212463379
    10. '[np' → logprob: -14.625016212463379

Token 431: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00041148843592964113
    2. '[n' → logprob: -7.875411510467529
    3. 'nv' → logprob: -11.625411033630371
    4. ' nv' → logprob: -11.750411033630371
    5. '[v' → logprob: -12.625411033630371
    6. '_nv' → logprob: -12.625411033630371
    7. '[' → logprob: -13.125411033630371
    8. 'w' → logprob: -13.250411033630371
    9. 'n' → logprob: -13.250411033630371
    10. 'x' → logprob: -14.250411033630371

Token 432: ']' (ID: 60)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0015704454854130745
    2. ']' → logprob: -6.751570224761963
    3. 'nv' → logprob: -9.251570701599121
    4. '=' → logprob: -9.376570701599121
    5. '_nv' → logprob: -9.876570701599121
    6. ']=' → logprob: -10.251570701599121
    7. '
' → logprob: -10.376570701599121
    8. '[' → logprob: -10.751570701599121
    9. ' =' → logprob: -11.126570701599121
    10. 'n' → logprob: -11.376570701599121

Token 433: ' =' (ID: 314)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.2864800989627838
    2. '=' → logprob: -1.4114800691604614
    3. ' =' → logprob: -5.286479949951172
    4. '[' → logprob: -8.536479949951172
    5. '   ' → logprob: -11.036479949951172
    6. '[np' → logprob: -11.411479949951172
    7. '```' → logprob: -12.536479949951172
    8. '[new' → logprob: -13.036479949951172
    9. ']' → logprob: -13.036479949951172
    10. '(n' → logprob: -13.161479949951172

Token 434: ' nc' (ID: 39841)
  Prédit: 'nc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.0007102862582542002
    2. ' nc' → logprob: -7.250710487365723
    3. '_nc' → logprob: -15.125710487365723
    4. '.nc' → logprob: -17.875709533691406
    5. 'Nc' → logprob: -18.375709533691406
    6. 'n' → logprob: -19.250709533691406
    7. 'mc' → logprob: -20.625709533691406
    8. 'nv' → logprob: -20.625709533691406
    9. 'npc' → logprob: -21.750709533691406
    10. 'nd' → logprob: -22.125709533691406

Token 435: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013404211029410362
    2. 'heap' → logprob: -4.388404369354248
    3. ' heap' → logprob: -7.138404369354248
    4. '		' → logprob: -9.63840389251709
    5. ',' → logprob: -10.63840389251709
    6. '(heap' → logprob: -12.26340389251709
    7. '_heap' → logprob: -14.01340389251709
    8. '            
' → logprob: -14.01340389251709
    9. '               ' → logprob: -14.26340389251709
    10. '.heap' → logprob: -14.38840389251709

Token 436: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014367170631885529
    2. 'heap' → logprob: -4.26436710357666
    3. ' heap' → logprob: -8.51436710357666
    4. '		' → logprob: -12.88936710357666
    5. '          ' → logprob: -15.51436710357666
    6. ',' → logprob: -16.264368057250977
    7. '```' → logprob: -16.389368057250977
    8. '(heap' → logprob: -16.514368057250977
    9. 'import' → logprob: -17.014368057250977
    10. '               ' → logprob: -17.264368057250977

Token 437: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -3.128163257315464e-07
    2. ' heap' → logprob: -15.25
    3. 'he' → logprob: -24.0
    4. '.heap' → logprob: -26.5
    5. '(heap' → logprob: -26.75
    6. 'Heap' → logprob: -26.875
    7. '_heap' → logprob: -27.125
    8. 'heat' → logprob: -27.5
    9. '           ' → logprob: -28.0
    10. '
' → logprob: -28.125

Token 438: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.128163257315464e-07
    2. 'p' → logprob: -15.625
    3. 'push' → logprob: -17.125
    4. 'app' → logprob: -18.5
    5. 'h' → logprob: -18.625
    6. '```' → logprob: -19.25
    7. 'qq' → logprob: -19.5
    8. 'ush' → logprob: -20.0
    9. 'qx' → logprob: -20.0
    10. 'he' → logprob: -20.0

Token 439: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -5.0259150157216936e-05
    2. 'q' → logprob: -10.50005054473877
    3. '.heap' → logprob: -11.12505054473877
    4. 'he' → logprob: -12.12505054473877
    5. '```' → logprob: -14.25005054473877
    6. '.' → logprob: -14.25005054473877
    7. '_he' → logprob: -14.87505054473877
    8. 'ush' → logprob: -15.37505054473877
    9. '.push' → logprob: -15.50005054473877
    10. 'heap' → logprob: -16.250049591064453

Token 440: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0009488568175584078
    2. 'pp' → logprob: -7.000948905944824
    3. 'ap' → logprob: -10.500948905944824
    4. 'p' → logprob: -12.125948905944824
    5. 'push' → logprob: -12.625948905944824
    6. 'op' → logprob: -14.750948905944824
    7. 'q' → logprob: -14.875948905944824
    8. 'ush' → logprob: -15.375948905944824
    9. '[' → logprob: -16.750947952270508
    10. 'e' → logprob: -17.250947952270508

Token 441: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -1.981667537620524e-06
    2. 'op' → logprob: -13.875001907348633
    3. 'sh' → logprob: -14.125001907348633
    4. 'push' → logprob: -15.125001907348633
    5. 'p' → logprob: -19.125001907348633
    6. '```' → logprob: -21.375001907348633
    7. 'ushed' → logprob: -21.500001907348633
    8. 'us' → logprob: -21.500001907348633
    9. 'USH' → logprob: -21.750001907348633
    10. 'u' → logprob: -22.000001907348633

Token 442: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -3.128163257315464e-07
    2. '(n' → logprob: -15.875
    3. '(' → logprob: -16.0
    4. '(q' → logprob: -16.75
    5. 'h' → logprob: -18.25
    6. '((' → logprob: -18.625
    7. ',h' → logprob: -18.75
    8. '	h' → logprob: -19.25
    9. '(
' → logprob: -19.875
    10. '```' → logprob: -19.875

Token 443: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.134509021649137e-05
    2. '(h' → logprob: -9.87506103515625
    3. 'hq' → logprob: -12.00006103515625
    4. '(q' → logprob: -14.00006103515625
    5. 'qh' → logprob: -14.62506103515625
    6. 'vq' → logprob: -14.62506103515625
    7. 'qs' → logprob: -15.00006103515625
    8. 'sq' → logprob: -15.50006103515625
    9. '(n' → logprob: -15.75006103515625
    10. 'c' → logprob: -16.25006103515625

Token 444: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.7372048862162046e-05
    2. '(n' → logprob: -10.750027656555176
    3. ',h' → logprob: -13.250027656555176
    4. ',' → logprob: -13.625027656555176
    5. '(' → logprob: -14.125027656555176
    6. '((' → logprob: -14.250027656555176
    7. '(q' → logprob: -14.375027656555176
    8. ')' → logprob: -14.500027656555176
    9. ' (' → logprob: -15.875027656555176
    10. ' ' → logprob: -16.00002670288086

Token 445: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006721059791743755
    2. ' (' → logprob: -5.006721019744873
    3. '(' → logprob: -13.256721496582031
    4. '((' → logprob: -13.256721496582031
    5. ' ' → logprob: -13.756721496582031
    6. '(nx' → logprob: -15.006721496582031
    7. '(nn' → logprob: -15.506721496582031
    8. '(ns' → logprob: -15.881721496582031
    9. '(nd' → logprob: -16.13172149658203
    10. '(c' → logprob: -16.13172149658203

Token 446: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -1.1472419600977446e-06
    2. ' nc' → logprob: -13.750000953674316
    3. '_nc' → logprob: -17.500001907348633
    4. '(n' → logprob: -18.625001907348633
    5. 'nv' → logprob: -19.500001907348633
    6. '.nc' → logprob: -20.500001907348633
    7. '   ' → logprob: -21.375001907348633
    8. 'n' → logprob: -21.375001907348633
    9. '
' → logprob: -22.750001907348633
    10. '```' → logprob: -22.875001907348633

Token 447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00150390958879143
    2. ',n' → logprob: -6.501503944396973
    3. ',
' → logprob: -14.126503944396973
    4. ' ,' → logprob: -14.126503944396973
    5. '[n' → logprob: -18.001502990722656
    6. ')' → logprob: -18.251502990722656
    7. ',v' → logprob: -18.376502990722656
    8. '),' → logprob: -19.126502990722656
    9. '‌,' → logprob: -19.251502990722656
    10. ',np' → logprob: -19.376502990722656

Token 448: ' nv' (ID: 68641)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.00020354038861114532
    2. ' nv' → logprob: -8.500203132629395
    3. '_nv' → logprob: -17.37520408630371
    4. 'n' → logprob: -20.25020408630371
    5. '   ' → logprob: -21.50020408630371
    6. '
' → logprob: -22.37520408630371
    7. '[n' → logprob: -22.75020408630371
    8. 'nm' → logprob: -23.00020408630371
    9. '```' → logprob: -23.00020408630371
    10. 'nj' → logprob: -23.25020408630371

Token 449: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00043972869752906263
    2. ')' → logprob: -7.750439643859863
    3. '))
' → logprob: -11.750439643859863
    4. ')))' → logprob: -14.375439643859863
    5. ' ))' → logprob: -14.500439643859863
    6. '))

' → logprob: -17.25044059753418
    7. '));' → logprob: -17.62544059753418
    8. ')n' → logprob: -18.00044059753418
    9. '])' → logprob: -18.25044059753418
    10. ')
' → logprob: -18.37544059753418


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 447
Tokens correctement prédits (1ère position, stricte): 158
Tokens correctement prédits (1ère position, avec adaptation): 177
Tokens correctement prédits (top 10): 372
Précision stricte (1ère position): 35.35%
Précision adaptée (1ère position): 39.60%
Précision (top 10): 83.22%
================================================================================
