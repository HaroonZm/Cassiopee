================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:33
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

VOWELS = {'a', 'i', 'u', 'e', 'o'}
VOICELESS_CONSONANTS = {'k', 's', 't', 'h', 'p'}
# For identifying consonants, including voiced ones for syllable parsing
CONSONANTS = {'k','s','t','n','h','m','y','r','w','g','z','d','b','p'}

def split_moras(s):
    moras = []
    i = 0
    n = len(s)
    while i < n:
        c = s[i]
        # Sokuon (促音) small tsu
        if c == 'っ':
            # problem states no explicit 'っ' in input but double consonant represent sokuon,
            # so 'っ' won't appear, skip this case
            pass
        # 'n' or "n'"
        if c == 'n':
            if i+1 < n and s[i+1] == "'":
                moras.append("n'")
                i += 2
            else:
                # 'n' mora only if not part of next syllable
                # According to problem, 'n' appears alone only if followed by non-vowel or 'n', 'y'
                # but here we just take single 'n'
                # However parsing order is safe to consider 'n' as mora
                gl = "n"
                i += 1
                moras.append(gl)
        # check for 3-char (C + y + V) mora
        elif i+2 < n and s[i] in CONSONANTS and s[i+1] == 'y' and s[i+2] in {'a','u','o'}:
            moras.append(s[i]+s[i+1]+s[i+2])
            i += 3
        # check for 2-char (C + V) mora
        elif i+1 < n:
            if s[i] in CONSONANTS and s[i+1] in VOWELS:
                moras.append(s[i]+s[i+1])
                i += 2
            # long vowels are represented by repeating vowels a,i,u
            elif s[i] in VOWELS:
                # check if next char is same vowel (long vowel)
                if s[i+1] == s[i]:
                    # long vowel mora is two moras, first usual vowel, second long
                    # but problem represents long vowel by repeated vowels
                    moras.append(s[i])
                    moras.append(s[i+1])
                    i += 2
                else:
                    moras.append(s[i])
                    i += 1
            else:
                # single char vowel or consonant alone
                moras.append(s[i])
                i += 1
        else:
            # last character single
            moras.append(s[i])
            i += 1
    return moras

def parse_moras(s):
    moras = []
    i = 0
    n = len(s)
    while i < n:
        c = s[i]
        # Check n'
        if c == 'n':
            if i+1 < n and s[i+1] == "'":
                moras.append("n'")
                i += 2
                continue
            else:
                # 'n' alone
                moras.append("n")
                i += 1
                continue
        # 3-char mora e.g. ky(a|u|o)
        if i+2 < n and s[i] in CONSONANTS and s[i+1] == 'y' and s[i+2] in {'a','u','o'}:
            moras.append(s[i] + s[i+1] + s[i+2])
            i += 3
            continue
        # 2-char mora consonant + vowel
        if i+1 < n:
            if s[i] in CONSONANTS and s[i+1] in VOWELS:
                moras.append(s[i] + s[i+1])
                i += 2
                continue
            # long vowels check: vowel followed by same vowel (a,i,u)
            if s[i] in VOWELS:
                if s[i] in {'a','i','u'} and s[i+1] == s[i]:
                    # Long vowel represented as two moras
                    moras.append(s[i])
                    moras.append(s[i+1])
                    i += 2
                    continue
                else:
                    moras.append(s[i])
                    i += 1
                    continue
        # single vowel or consonant
        moras.append(c)
        i += 1
    return moras

def is_voiceless_consonant(mora):
    # mora can be 'k', 'ki', 'kyu', etc; voiceless consonants are k,s,t,h,p
    # 'ky' is considered voiceless consonant also
    # So check mora start with one of voiceless consonants:
    # If it's 1 char and in voiceless consonants: 'k','s','t','h','p'
    # If 2 or 3 char mora, first char in voiceless consonants and next is 'y' or vowel
    # Also voiceless consonants + y are voiceless
    if not mora:
        return False
    c = mora[0]
    if c not in VOICELESS_CONSONANTS:
        return False
    # If mora is 1 char consonant with no vowel, unlikely but handle false
    if len(mora) == 1:
        # Single consonant alone
        return False
    # mora starting with voiceless consonant counts
    return True

def get_vowel(mora):
    # vowel in mora is last character if mora length > 1
    # or character itself if single vowel
    # mora can't be empty
    # mora: 'a','ki','kyo','n','n''
    # for 'n' moras, no vowel
    if mora == "n" or mora == "n'":
        return ''
    # look for vowel in mora, from right to left
    for ch in reversed(mora):
        if ch in VOWELS:
            return ch
    return ''

def is_sokuon(mora):
    # sokuon is the small tsu: usually double consonant, represented implicitly
    # no direct 'っ' in input, sokuon represented by doubling consonant
    # but we have moras extracted: no direct indicator
    # problem states '促音（「っ」）' is not appearing alone but represented by doubled consonant in next mora
    # We represent sokuon moras as no moras, only in next mora consonant doubled
    return False # no mora representing sokuon directly

def is_chouon(mora1,mora2):
    # check if mora2 is same vowel long vowel of mora1
    # mora1 and mora2 must both be vowels in {'a','i','u'}
    # long vowels represented by repeated vowels for 'a','i','u' only
    v1 = get_vowel(mora1)
    v2 = get_vowel(mora2)
    if mora1 in VOWELS and mora2 in VOWELS:
        if v1 == v2 and v1 in {'a','i','u'}:
            return True
    return False

def is_sokuon_mora(mora):
    # no direct sokuon moras, represented by double consonant in next mora
    # check if mora length==1 and consonant doubled in next mora for sokuon character
    return False

def check_mora_sokuon(mora):
    # We can't detect sokuon moras directly as per input
    # But we can know 'sokuon' is doubling consonant in next mora
    # So this function is unused.
    return False

def next_after_sokuon(moras, idx):
    # return true if next mora is sokuon
    # input moras do not include sokuon moras as separate moras.
    # Sokuon is represented by doubling consonant in next mora,
    # so sokuon mora doesn't exist alone in moras list.
    # So this function return False always
    return False

def is_consonant(c):
    return c in CONSONANTS

def check_voiceless_with_y(mora):
    # voiceless consonants + 'y' are also voiceless
    # e.g. 'ky' in 'kyo'
    # mora like 'kyo', 'shi' (shi is s consonant but voiced), 'tyu' (tyu is t+yu ?)
    # from problem:
    # "また，これらに「y」が続いたもの（「ky」など）も便宜的に無声子音とみなす．"
    # So mora starting with voiceless consonant and then 'y' count as voiceless consonant
    # check if mora starts with voiceless consonant and second char is 'y'
    if len(mora) >= 2 and mora[0] in VOICELESS_CONSONANTS and mora[1] == 'y':
        return True
    return False

def is_voiceless_mora(mora):
    # Returns True if mora starts with voiceless consonant or voiceless consonant followed by y
    return is_voiceless_consonant(mora) or check_voiceless_with_y(mora)

def expand_moras(s):
    # Handles sokuon by separating it to explicit sokuon mora (represented as 'っ' etc)
    # but problem input does not have 'っ' as input, rather doubled consonants in next mora.
    # We process moras as listed by parse_moras.
    # So no action.
    return parse_moras(s)

def is_sokuon_following(moras, i):
    # sokuon mora is represented as double consonant at start of mora after current mora
    # e.g. in 'kippu' moras would be ['ki','p','pu'] or ['ki','ppu']
    # Our parse_moras represent 'kippu' as ['ki','ppu']
    # So here no separate sokuon mora.
    # But problem states sokuon always written as double consonant in next mora.
    # To check if mora at i+1 is sokuon in 'ki' 'ppu':
    # mora at i+1 has doubled consonant? e.g. two same consonants at start indicated sokuon
    # But no direct doubling in mora representation.
    # We consider that sokuon is represented inside mora like 'ppu'
    if i+1 >= len(moras):
        return False
    m = moras[i+1]
    # check if mora at i+1 begins with doubled consonant
    # mora length >=2, first two chars same consonant
    if len(m) >= 2 and m[0] == m[1] and m[0] in CONSONANTS:
        return True
    return False

def is_next_mora_sokuon(moras, i):
    # same as above, more general
    return is_sokuon_following(moras, i)

def main():
    for line in sys.stdin:
        line = line.strip()
        if line == '#':
            break
        word = line
        moras = parse_moras(word)

        # precompute is voiceless consonant moras for easier reference
        # also mark vowel of each mora
        vowels = [get_vowel(m) for m in moras]
        voiceless = [is_voiceless_mora(m) for m in moras]

        # we detect long vowels by checking pairs of moras (two vowels repeated)
        # mark which moras are long vowel second part
        long_vowel_idx = set()
        for i in range(len(moras)-1):
            if moras[i] in VOWELS and moras[i+1] in VOWELS:
                if moras[i] == moras[i+1] and moras[i] in {'a','i','u'}:
                    long_vowel_idx.add(i+1)

        n = len(moras)
        # For rule1:
        # vowel i,u short vowels, enclosed in parentheses if:
        # - surrounded by voiceless consonants: mora before and after voiceless consonant
        # - or if following mora is sokuon and at end of word, and previous mora is voiceless consonant
        # Also applies if next mora after vowel is sokuon
        # Also applies if vowel mora followed by sokuon reference in problem

        # For rule2:
        # Regarding vowel 'a' or 'o', if two or more moras in a row start with voiceless consonant + same vowel,
        # all but last vowel in that chain are unvoiced

        # Additionally, no multiple vowels unvoiced consecutively:
        # a vowel is unvoiced only if it is first unvoiced or previous vowel was voiced.

        # We'll store a boolean unvoice flags per mora
        unvoiced = [False]*n

        # Helper: check previous vowel unvoiced or not
        last_unvoiced_idx = -10 # far away

        # Process rule1 for i,u vowels

        # Note: the problem says the vowel is unvoiced if:
        # "母音「i」「u」の短音について，その母音が無声子音にはさまれたとき，"
        # "または無声子音の直後でしかも語句の末尾にあるとき．"
        # Also applies if next mora after vowel is sokuon

        # Let's process rule1 first
        # For each mora with vowel i or u, check condition

        # Need to know if the next mora after this vowel is sokuon or not:
        # sokuon condition: next mora has doubled consonant first two chars same

        # Create a helper function for sokuon check on next mora

        def is_sokuon_after(i):
            # if mora at i+1 exists and starts with doubled consonant
            if i+1 >= n:
                return False
            m = moras[i+1]
            if len(m) >= 2 and m[0] == m[1] and m[0] in CONSONANTS:
                return True
            return False

        for i,mora in enumerate(moras):
            v = vowels[i]
            if v not in {'i','u'}:
                continue
            # morph length check only short vowel (not long)
            # long vowels are repeated vowels, so check next mora to exclude
            if i+1 < n and moras[i+1] == mora:
                # long vowel, skip per problem
                continue
            # check if mora is surrounded by voiceless consonants
            # previous mora voiceless consonant
            prev_voiceless = (i>0 and voiceless[i-1])
            # next mora voiceless consonant or sokuon mora
            next_voiceless = (i+1 < n and voiceless[i+1])
            next_sokuon = is_sokuon_after(i)
            # Also condition: "無声子音の直後でしかも語句の末尾にあるとき"
            # that is mora after is vowel, mora i is vowel, preceding mora is voiceless consonant and mora i is last mora
            # check if previous mora voiceless consonant and mora i is last mora
            # also applies if nexts are sokuon or word end
            at_end = (i == n-1)
            # guaranteed in problem that sokuon never first or last mora
            cond1 = prev_voiceless and next_voiceless
            cond2 = prev_voiceless and at_end
            cond3 = cond1
            cond4 = prev_voiceless and next_sokuon
            if cond1 or cond2 or cond4:
                # unvoice
                # apply unvoicing only if previous vowel was voiced or this is first unvoiced in a row
                if last_unvoiced_idx == -10 or last_unvoiced_idx != i-1:
                    unvoiced[i] = True
                    last_unvoiced_idx = i

        # Process rule2 for vowels a,o
        # "母音「a」「o」について，同一の母音が無声子音とともに連続する2つ以上の拍で現れたとき．ただし，その連続する拍のうちで最後のものについては除外される．"
        # consecutive moras that start with voiceless consonant + vowel a or o and same vowel repeated twice or more
        # long vowels and sokuon excluded, no sokuon or long vowel inside such sequence

        i = 0
        while i < n:
            # skip non a/o vowels or vowels not at start of moras
            v = vowels[i]
            if v not in {'a','o'}:
                i += 1
                continue
            # mora must start with voiceless consonant and vowel a or o
            m = moras[i]
            # mora must NOT be vowel alone to count (vowel alone not starts with consonant)
            # or problem says: "母音「a」「o」について，同一の母音が無声子音とともに連続する2つ以上の拍で現れたとき"
            # so mora should start with voiceless consonant + that vowel
            # so mora has length>=2, first char voiceless consonant, last char vowel
            # must not be sokuon or long vowel moras inside sequence
            if len(m) < 2 or not is_voiceless_mora(m) or v != get_vowel(m):
                i += 1
                continue
            # start of potential chain of same vowel voiceless moras
            start = i
            j = i+1
            while j < n:
                mv = vowels[j]
                mm = moras[j]
                # exclude if sokuon or long vowel or not voiceless consonant + same vowel
                # sokuon or long vowel moras excluded
                # Long vowel moras: repeated vowels (a,i,u)
                if len(mm) < 2 or not is_voiceless_mora(mm) or mv != v:
                    break
                # no sokuon or long vowel inside chain allowed
                # Check if this and previous are adjacent, no sokuon or long vowel in between
                # (checked by mora pattern)
                j += 1
            # length of chain is (j-start)
            length = j - start
            if length >= 2:
                # All but last mora in chain unvoiced
                # Again, apply if no
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'V' (ID: 53)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03585657849907875
    2. '\n' → logprob: -4.0358567237854
    3. 'import' → logprob: -4.7858567237854
    4. '<|end|>' → logprob: -5.2858567237854
    5. '\' → logprob: -7.0358567237854
    6. '<|end|>' → logprob: -7.5358567237854
    7. 'newline' → logprob: -7.9108567237854
    8. ',' → logprob: -8.160856246948242
    9. '[' → logprob: -8.285856246948242
    10. '' → logprob: -8.285856246948242

Token 4: 'OW' (ID: 5593)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6445565223693848
    2. 'e' → logprob: -1.5195565223693848
    3. 'V' → logprob: -1.7695565223693848
    4. '=' → logprob: -3.7695565223693848
    5. 'ersion' → logprob: -3.8945565223693848
    6. 'alue' → logprob: -4.269556522369385
    7. 'ERSION' → logprob: -5.019556522369385
    8. 'i' → logprob: -5.144556522369385
    9. 'A' → logprob: -5.769556522369385
    10. 'I' → logprob: -5.894556522369385

Token 5: 'ELS' (ID: 88642)
  Prédit: 'ELS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ELS' → logprob: -0.0010859245667234063
    2. 'EL' → logprob: -7.2510857582092285
    3. 'E' → logprob: -8.001086235046387
    4. 'ALS' → logprob: -10.251086235046387
    5. 'A' → logprob: -12.626086235046387
    6. 'S' → logprob: -13.626086235046387
    7. 'els' → logprob: -15.376086235046387
    8. '```' → logprob: -15.751086235046387
    9. 'W' → logprob: -15.876086235046387
    10. '_' → logprob: -16.37608528137207

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10047688335180283
    2. '=' → logprob: -2.3504769802093506
    3. '_' → logprob: -8.35047721862793
    4. ' ' → logprob: -11.10047721862793
    5. '_=' → logprob: -12.97547721862793
    6. '[' → logprob: -13.35047721862793
    7. '```' → logprob: -13.35047721862793
    8. '  ' → logprob: -13.47547721862793
    9. ':' → logprob: -13.47547721862793
    10. '[:]' → logprob: -13.72547721862793

Token 7: ' {'' (ID: 11881)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2064298540353775
    2. ' "' → logprob: -2.831429958343506
    3. '{'' → logprob: -2.831429958343506
    4. ''' → logprob: -3.956429958343506
    5. ''s' → logprob: -4.081429958343506
    6. '{"' → logprob: -4.331429958343506
    7. ' {'' → logprob: -4.456429958343506
    8. ' set' → logprob: -5.831429958343506
    9. ' '' → logprob: -6.581429958343506
    10. '['' → logprob: -6.706429958343506

Token 8: 'a' (ID: 64)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.027953801676630974
    2. 'a' → logprob: -3.652953863143921
    3. ''A' → logprob: -6.527953624725342
    4. ''' → logprob: -9.4029541015625
    5. '"a' → logprob: -10.0279541015625
    6. ''e' → logprob: -10.9029541015625
    7. ''u' → logprob: -11.4029541015625
    8. 'A' → logprob: -11.5279541015625
    9. ''o' → logprob: -11.7779541015625
    10. '’a' → logprob: -13.0279541015625

Token 9: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.015264027751982212
    2. '','' → logprob: -4.89026403427124
    3. 'e' → logprob: -5.01526403427124
    4. ',' → logprob: -7.01526403427124
    5. ''' → logprob: -10.140263557434082
    6. ' ',' → logprob: -10.515263557434082
    7. 'i' → logprob: -11.765263557434082
    8. ',e' → logprob: -12.140263557434082
    9. ','' → logprob: -12.390263557434082
    10. 'a' → logprob: -12.640263557434082

Token 10: ' '' (ID: 461)
  Prédit: ''e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''e' → logprob: -0.03476211056113243
    2. ''' → logprob: -3.534762144088745
    3. ' '' → logprob: -5.409761905670166
    4. ''i' → logprob: -8.284762382507324
    5. ''o' → logprob: -8.784762382507324
    6. ' e' → logprob: -10.034762382507324
    7. ''é' → logprob: -10.409762382507324
    8. 'e' → logprob: -11.034762382507324
    9. ' ' → logprob: -11.409762382507324
    10. '"' → logprob: -12.034762382507324

Token 11: 'i' (ID: 72)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.580929347255733e-05
    2. ''e' → logprob: -11.500016212463379
    3. 'A' → logprob: -12.500016212463379
    4. ''' → logprob: -14.125016212463379
    5. 'i' → logprob: -14.500016212463379
    6. ' e' → logprob: -15.750016212463379
    7. 'е' → logprob: -15.750016212463379
    8. 'o' → logprob: -16.375015258789062
    9. 'b' → logprob: -16.500015258789062
    10. 'a' → logprob: -17.125015258789062

Token 12: '',' (ID: 787)
  Prédit: ''o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''o' → logprob: -0.4071645736694336
    2. ''e' → logprob: -1.1571645736694336
    3. '',' → logprob: -4.407164573669434
    4. 'e' → logprob: -5.782164573669434
    5. '','' → logprob: -5.782164573669434
    6. 'o' → logprob: -6.907164573669434
    7. ''u' → logprob: -7.532164573669434
    8. ''' → logprob: -9.407164573669434
    9. ',e' → logprob: -9.907164573669434
    10. ''a' → logprob: -11.282164573669434

Token 13: ' '' (ID: 461)
  Prédit: ''e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''e' → logprob: -0.06535224616527557
    2. ''o' → logprob: -2.815352201461792
    3. ' '' → logprob: -6.440352439880371
    4. ''u' → logprob: -6.440352439880371
    5. ''' → logprob: -9.565352439880371
    6. 'e' → logprob: -9.940352439880371
    7. ''é' → logprob: -10.690352439880371
    8. '{'' → logprob: -11.190352439880371
    9. ' e' → logprob: -11.565352439880371
    10. 'u' → logprob: -12.690352439880371

Token 14: 'u' (ID: 84)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.058383069932460785
    2. 'o' → logprob: -3.058382987976074
    3. 'u' → logprob: -4.683382987976074
    4. ''e' → logprob: -8.058382987976074
    5. ''o' → logprob: -9.183382987976074
    6. ''u' → logprob: -9.808382987976074
    7. ''' → logprob: -10.808382987976074
    8. '	e' → logprob: -14.183382987976074
    9. ''s' → logprob: -14.558382987976074
    10. ' e' → logprob: -14.683382987976074

Token 15: '',' (ID: 787)
  Prédit: ''o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''o' → logprob: -0.15963369607925415
    2. ''e' → logprob: -2.2846336364746094
    3. '',' → logprob: -3.5346336364746094
    4. ',' → logprob: -4.284633636474609
    5. 'o' → logprob: -7.034633636474609
    6. ',e' → logprob: -7.534633636474609
    7. '','' → logprob: -7.784633636474609
    8. 'e' → logprob: -7.784633636474609
    9. ','' → logprob: -8.65963363647461
    10. ''u' → logprob: -9.53463363647461

Token 16: ' '' (ID: 461)
  Prédit: ''e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''e' → logprob: -0.0334843210875988
    2. ''o' → logprob: -3.5334842205047607
    3. ''' → logprob: -5.78348445892334
    4. ' '' → logprob: -7.40848445892334
    5. ''é' → logprob: -11.03348445892334
    6. '{'' → logprob: -12.03348445892334
    7. 'e' → logprob: -12.28348445892334
    8. ',e' → logprob: -12.90848445892334
    9. ''E' → logprob: -13.15848445892334
    10. ' e' → logprob: -13.53348445892334

Token 17: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03805571794509888
    2. ''e' → logprob: -3.288055658340454
    3. 'o' → logprob: -12.038055419921875
    4. ''o' → logprob: -12.538055419921875
    5. ''' → logprob: -13.038055419921875
    6. '	e' → logprob: -14.038055419921875
    7. ',e' → logprob: -14.663055419921875
    8. ''u' → logprob: -15.413055419921875
    9. '’e' → logprob: -15.413055419921875
    10. 'ｅ' → logprob: -15.538055419921875

Token 18: '',' (ID: 787)
  Prédit: ''o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''o' → logprob: -0.12908591330051422
    2. 'o' → logprob: -2.3790860176086426
    3. ',o' → logprob: -4.129086017608643
    4. ',' → logprob: -4.754086017608643
    5. ','' → logprob: -6.379086017608643
    6. '',' → logprob: -6.504086017608643
    7. ''' → logprob: -8.254085540771484
    8. '','' → logprob: -8.379085540771484
    9. '	o' → logprob: -11.004085540771484
    10. '{o' → logprob: -11.379085540771484

Token 19: ' '' (ID: 461)
  Prédit: ''o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''o' → logprob: -0.000913370808120817
    2. 'o' → logprob: -7.000913143157959
    3. '’o' → logprob: -14.500913619995117
    4. '	o' → logprob: -14.875913619995117
    5. ' o' → logprob: -15.000913619995117
    6. '{o' → logprob: -15.625913619995117
    7. ',o' → logprob: -16.250913619995117
    8. ''' → logprob: -16.375913619995117
    9. '_o' → logprob: -16.375913619995117
    10. ' '' → logprob: -16.500913619995117

Token 20: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.1472419600977446e-06
    2. ''o' → logprob: -14.000000953674316
    3. '	o' → logprob: -15.750000953674316
    4. 'о' → logprob: -17.375001907348633
    5. ' o' → logprob: -17.750001907348633
    6. 'O' → logprob: -19.875001907348633
    7. '_o' → logprob: -20.375001907348633
    8. '{o' → logprob: -21.250001907348633
    9. ',o' → logprob: -22.125001907348633
    10. '$o' → logprob: -22.375001907348633

Token 21: ''}
' (ID: 32701)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.5760561227798462
    2. ''}' → logprob: -0.8260561227798462
    3. '',' → logprob: -9.826056480407715
    4. ','' → logprob: -10.826056480407715
    5. ',' → logprob: -10.951056480407715
    6. '}'' → logprob: -11.826056480407715
    7. ''' → logprob: -11.826056480407715
    8. '','' → logprob: -12.826056480407715
    9. ' '}' → logprob: -13.076056480407715
    10. '`}' → logprob: -13.076056480407715

Token 22: 'VOICE' (ID: 170673)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7786083221435547
    2. '_' → logprob: -1.7786083221435547
    3. '.' → logprob: -2.1536083221435547
    4. ':' → logprob: -2.6536083221435547
    5. '=' → logprob: -2.7786083221435547
    6. '
' → logprob: -3.5286083221435547
    7. '' → logprob: -3.6536083221435547
    8. '#' → logprob: -4.028608322143555
    9. 'def' → logprob: -4.403608322143555
    10. ' ' → logprob: -4.653608322143555

Token 23: 'LESS' (ID: 65453)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9380309581756592
    2. 'D' → logprob: -1.3130309581756592
    3. 'S' → logprob: -1.9380309581756592
    4. 'R' → logprob: -2.688030958175659
    5. '_D' → logprob: -2.688030958175659
    6. 'L' → logprob: -4.188031196594238
    7. '_L' → logprob: -4.563031196594238
    8. '_R' → logprob: -5.313031196594238
    9. ' =' → logprob: -5.688031196594238
    10. '_S' → logprob: -5.938031196594238

Token 24: '_CON' (ID: 8877)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0002756366156972945
    2. ' =' → logprob: -8.500275611877441
    3. '_SPACE' → logprob: -11.000275611877441
    4. '_CON' → logprob: -11.500275611877441
    5. '_=' → logprob: -11.750275611877441
    6. 'S' → logprob: -12.125275611877441
    7. '_S' → logprob: -12.500275611877441
    8. '_con' → logprob: -12.625275611877441
    9. ' ' → logprob: -12.875275611877441
    10. ''' → logprob: -13.125275611877441

Token 25: 'SON' (ID: 4214)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.6369867920875549
    2. 'SON' → logprob: -0.7619867920875549
    3. '```' → logprob: -7.01198673248291
    4. 'SO' → logprob: -7.63698673248291
    5. '   ' → logprob: -7.76198673248291
    6. '``' → logprob: -7.76198673248291
    7. 'T' → logprob: -7.76198673248291
    8. '	' → logprob: -8.76198673248291
    9. '>' → logprob: -8.88698673248291
    10. 'son' → logprob: -9.01198673248291

Token 26: 'ANTS' (ID: 96531)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.2263840138912201
    2. '_' → logprob: -2.101383924484253
    3. 'ANTS' → logprob: -3.101383924484253
    4. '{'' → logprob: -4.226384162902832
    5. 'T' → logprob: -4.351384162902832
    6. '{' → logprob: -6.226384162902832
    7. '^' → logprob: -6.726384162902832
    8. 'ants' → logprob: -7.601384162902832
    9. '```' → logprob: -7.601384162902832
    10. '{"' → logprob: -7.726384162902832

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00012630375567823648
    2. '=' → logprob: -9.000125885009766
    3. ' ' → logprob: -13.250125885009766
    4. ' =
' → logprob: -15.000125885009766
    5. '_' → logprob: -15.125125885009766
    6. 's' → logprob: -15.750125885009766
    7. ' ,' → logprob: -16.250125885009766
    8. ' ={' → logprob: -16.250125885009766
    9. ',' → logprob: -16.875125885009766
    10. ' ='' → logprob: -17.375125885009766

Token 28: ' {'' (ID: 11881)
  Prédit: ' {''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {'' → logprob: -0.0035708497744053602
    2. ' {' → logprob: -6.003571033477783
    3. '{'' → logprob: -6.878571033477783
    4. ' ' → logprob: -10.253570556640625
    5. '{' → logprob: -10.878570556640625
    6. ' set' → logprob: -12.503570556640625
    7. ' {"' → logprob: -12.753570556640625
    8. ' {
' → logprob: -13.253570556640625
    9. '   ' → logprob: -14.378570556640625
    10. ' '' → logprob: -14.503570556640625

Token 29: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011367641389369965
    2. 'p' → logprob: -4.7613677978515625
    3. 't' → logprob: -6.7613677978515625
    4. 'b' → logprob: -7.1363677978515625
    5. 's' → logprob: -8.011367797851562
    6. ''' → logprob: -8.011367797851562
    7. 'c' → logprob: -10.386367797851562
    8. 'h' → logprob: -10.761367797851562
    9. 'a' → logprob: -10.886367797851562
    10. '',' → logprob: -12.261367797851562

Token 30: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.005315701011568308
    2. '','' → logprob: -5.255315780639648
    3. ''' → logprob: -9.880315780639648
    4. ''}' → logprob: -11.255315780639648
    5. ',' → logprob: -12.380315780639648
    6. '',
' → logprob: -13.005315780639648
    7. '',"' → logprob: -13.005315780639648
    8. 'a' → logprob: -13.380315780639648
    9. '}' → logprob: -13.630315780639648
    10. '','#' → logprob: -14.005315780639648

Token 31: ' '' (ID: 461)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.3367387354373932
    2. 's' → logprob: -1.5867387056350708
    3. ''' → logprob: -2.5867388248443604
    4. ' s' → logprob: -5.586738586425781
    5. ' ' → logprob: -7.086738586425781
    6. ''t' → logprob: -8.086738586425781
    7. ' '' → logprob: -8.211738586425781
    8. '"s' → logprob: -8.461738586425781
    9. '`s' → logprob: -8.836738586425781
    10. '	s' → logprob: -9.211738586425781

Token 32: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -8.0536883615423e-05
    2. 't' → logprob: -9.625080108642578
    3. 'p' → logprob: -11.375080108642578
    4. '```' → logprob: -14.000080108642578
    5. ''' → logprob: -15.500080108642578
    6. 'g' → logprob: -15.625080108642578
    7. 'm' → logprob: -15.750080108642578
    8. 'c' → logprob: -15.875080108642578
    9. '')' → logprob: -15.875080108642578
    10. '/' → logprob: -15.875080108642578

Token 33: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.10221253335475922
    2. ',' → logprob: -2.477212429046631
    3. '','' → logprob: -4.477212429046631
    4. ','' → logprob: -7.602212429046631
    5. ''' → logprob: -7.727212429046631
    6. ''}' → logprob: -7.852212429046631
    7. '}' → logprob: -8.102212905883789
    8. ' ,' → logprob: -9.227212905883789
    9. 'p' → logprob: -11.352212905883789
    10. '<|end|>' → logprob: -11.602212905883789

Token 34: ' '' (ID: 461)
  Prédit: ''t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''t' → logprob: -0.21659362316131592
    2. ' '' → logprob: -1.841593623161316
    3. ''' → logprob: -3.5915937423706055
    4. ' ' → logprob: -5.5915937423706055
    5. 't' → logprob: -5.9665937423706055
    6. ' t' → logprob: -6.5915937423706055
    7. ''s' → logprob: -8.216593742370605
    8. '```' → logprob: -8.841593742370605
    9. '')' → logprob: -9.591593742370605
    10. '	t' → logprob: -10.091593742370605

Token 35: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.8802491215174086e-05
    2. '\xca' → logprob: -12.250028610229492
    3. 'ts' → logprob: -12.625028610229492
    4. 's' → logprob: -12.750028610229492
    5. '```' → logprob: -12.750028610229492
    6. 'sh' → logprob: -12.875028610229492
    7. 'h' → logprob: -13.500028610229492
    8. ''' → logprob: -13.875028610229492
    9. ' t' → logprob: -14.125028610229492
    10. '' → logprob: -14.375028610229492

Token 36: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.12055008858442307
    2. ''}' → logprob: -2.4955501556396484
    3. ''' → logprob: -4.495550155639648
    4. ',' → logprob: -5.120550155639648
    5. '}' → logprob: -5.620550155639648
    6. 'a' → logprob: -5.745550155639648
    7. '','' → logprob: -5.870550155639648
    8. ','' → logprob: -6.120550155639648
    9. 'p' → logprob: -6.995550155639648
    10. 's' → logprob: -8.245550155639648

Token 37: ' '' (ID: 461)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5195662975311279
    2. ''p' → logprob: -1.519566297531128
    3. ' p' → logprob: -2.019566297531128
    4. ' '' → logprob: -3.644566297531128
    5. ' ' → logprob: -4.394566535949707
    6. ''' → logprob: -4.519566535949707
    7. ''h' → logprob: -6.519566535949707
    8. ''n' → logprob: -6.894566535949707
    9. '```' → logprob: -7.394566535949707
    10. 'h' → logprob: -8.269566535949707

Token 38: 'h' (ID: 71)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1322929859161377
    2. 'h' → logprob: -2.2572929859161377
    3. 'c' → logprob: -4.257292747497559
    4. 'k' → logprob: -5.632292747497559
    5. 'ch' → logprob: -7.132292747497559
    6. '```' → logprob: -8.757292747497559
    7. 'n' → logprob: -9.007292747497559
    8. ''' → logprob: -9.382292747497559
    9. '\xca' → logprob: -9.632292747497559
    10. '' → logprob: -10.257292747497559

Token 39: '',' (ID: 787)
  Prédit: ''}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.033426329493522644
    2. '',' → logprob: -3.908426284790039
    3. '}' → logprob: -4.408426284790039
    4. '','' → logprob: -8.033426284790039
    5. ''' → logprob: -9.033426284790039
    6. ','' → logprob: -9.158426284790039
    7. ' '}' → logprob: -10.408426284790039
    8. ',' → logprob: -11.158426284790039
    9. '`}' → logprob: -11.158426284790039
    10. '']' → logprob: -12.658426284790039

Token 40: ' '' (ID: 461)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17541490495204926
    2. 'm' → logprob: -2.425414800643921
    3. ' p' → logprob: -3.675414800643921
    4. ''p' → logprob: -3.675414800643921
    5. ' '' → logprob: -5.1754150390625
    6. ''m' → logprob: -5.3004150390625
    7. ' m' → logprob: -5.4254150390625
    8. ' ' → logprob: -5.9254150390625
    9. ''' → logprob: -6.3004150390625
    10. '')' → logprob: -7.9254150390625

Token 41: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17017224431037903
    2. 'c' → logprob: -2.9201722145080566
    3. 'm' → logprob: -2.9201722145080566
    4. 'f' → logprob: -3.0451722145080566
    5. 'k' → logprob: -7.170172214508057
    6. 'ch' → logprob: -9.045172691345215
    7. '```' → logprob: -10.045172691345215
    8. ''' → logprob: -10.670172691345215
    9. 'n' → logprob: -10.795172691345215
    10. 'b' → logprob: -12.170172691345215

Token 42: ''}
' (ID: 32701)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.6933495998382568
    2. ''}' → logprob: -0.6933495998382568
    3. '',' → logprob: -9.318349838256836
    4. ',' → logprob: -10.443349838256836
    5. ''' → logprob: -10.943349838256836
    6. '`}' → logprob: -11.068349838256836
    7. ' '}' → logprob: -11.318349838256836
    8. ' }' → logprob: -11.443349838256836
    9. ','' → logprob: -12.193349838256836
    10. 's' → logprob: -12.318349838256836

Token 43: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34374046325683594
    2. '#' → logprob: -1.343740463256836
    3. ':' → logprob: -5.093740463256836
    4. ')' → logprob: -5.468740463256836
    5. '_' → logprob: -5.718740463256836
    6. '\' → logprob: -5.968740463256836
    7. ',' → logprob: -5.968740463256836
    8. '```' → logprob: -6.218740463256836
    9. 'd' → logprob: -6.593740463256836
    10. '=' → logprob: -6.593740463256836

Token 44: ' For' (ID: 2214)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.131484255194664
    2. '#' → logprob: -2.256484270095825
    3. 'd' → logprob: -4.756484031677246
    4. '_' → logprob: -6.881484031677246
    5. ' def' → logprob: -6.881484031677246
    6. 'v' → logprob: -7.256484031677246
    7. '```' → logprob: -7.631484031677246
    8. 'f' → logprob: -7.631484031677246
    9. 'a' → logprob: -7.881484031677246
    10. ' ' → logprob: -8.006484031677246

Token 45: ' identifying' (ID: 37144)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2841512858867645
    2. ' ' → logprob: -1.659151315689087
    3. 'c' → logprob: -4.284151077270508
    4. ' ch' → logprob: -5.159151077270508
    5. ' j' → logprob: -5.284151077270508
    6. ' example' → logprob: -5.284151077270508
    7. ' a' → logprob: -5.409151077270508
    8. '  ' → logprob: -6.034151077270508
    9. ' i' → logprob: -6.034151077270508
    10. ' word' → logprob: -6.284151077270508

Token 46: ' conson' (ID: 127767)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.2366573810577393
    2. ' voiced' → logprob: -1.2366573810577393
    3. 'vo' → logprob: -1.7366573810577393
    4. ' vo' → logprob: -2.1116573810577393
    5. 'the' → logprob: -3.7366573810577393
    6. ' a' → logprob: -4.36165714263916
    7. 'y' → logprob: -4.48665714263916
    8. ' double' → logprob: -4.86165714263916
    9. ''' → logprob: -5.11165714263916
    10. ' ' → logprob: -5.23665714263916

Token 47: 'ants' (ID: 2027)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.011863824911415577
    2. 'ants' → logprob: -4.511863708496094
    3. 'ant' → logprob: -7.261863708496094
    4. 'an' → logprob: -10.511863708496094
    5. '#' → logprob: -11.511863708496094
    6. 'nants' → logprob: -11.636863708496094
    7. ' a' → logprob: -11.761863708496094
    8. '#a' → logprob: -11.761863708496094
    9. 'а' → logprob: -11.886863708496094
    10. 's' → logprob: -11.886863708496094

Token 48: ',' (ID: 11)
  Prédit: 'CON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CON' → logprob: -0.3025169372558594
    2. 'con' → logprob: -2.1775169372558594
    3. ',' → logprob: -3.0525169372558594
    4. '_con' → logprob: -3.4275169372558594
    5. '_CON' → logprob: -4.052516937255859
    6. 'C' → logprob: -4.302516937255859
    7. ' =' → logprob: -4.927516937255859
    8. ' conson' → logprob: -5.177516937255859
    9. 's' → logprob: -5.302516937255859
    10. '_' → logprob: -5.427516937255859

Token 49: ' including' (ID: 3463)
  Prédit: ' we'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' we' → logprob: -0.8943378329277039
    2. ' all' → logprob: -2.0193378925323486
    3. ' conson' → logprob: -2.1443378925323486
    4. ' c' → logprob: -2.2693378925323486
    5. 'c' → logprob: -2.8943378925323486
    6. ' you' → logprob: -3.1443378925323486
    7. ' ' → logprob: -3.2693378925323486
    8. 'con' → logprob: -3.2693378925323486
    9. 'def' → logprob: -4.2693376541137695
    10. 'we' → logprob: -4.5193376541137695

Token 50: ' voiced' (ID: 131324)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -1.5292565822601318
    2. ' {'' → logprob: -1.7792565822601318
    3. ' ' → logprob: -2.154256582260132
    4. ''' → logprob: -2.154256582260132
    5. ''b' → logprob: -2.279256582260132
    6. ''m' → logprob: -3.279256582260132
    7. ' '' → logprob: -3.279256582260132
    8. 'b' → logprob: -3.404256582260132
    9. ''d' → logprob: -3.404256582260132
    10. ''y' → logprob: -3.529256582260132

Token 51: ' ones' (ID: 8104)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -1.0921306610107422
    2. ' and' → logprob: -1.3421306610107422
    3. ' conson' → logprob: -1.8421306610107422
    4. ' {'' → logprob: -2.467130661010742
    5. '_con' → logprob: -2.842130661010742
    6. '{'' → logprob: -3.092130661010742
    7. '{' → logprob: -3.592130661010742
    8. ',' → logprob: -4.592130661010742
    9. 'and' → logprob: -4.842130661010742
    10. ' ' → logprob: -5.717130661010742

Token 52: ' for' (ID: 395)
  Prédit: 'CON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CON' → logprob: -0.27102699875831604
    2. 'C' → logprob: -1.5210269689559937
    3. 'con' → logprob: -4.271027088165283
    4. 'c' → logprob: -6.646027088165283
    5. ',' → logprob: -6.896027088165283
    6. 'b' → logprob: -8.021026611328125
    7. ' ' → logprob: -8.146026611328125
    8. 'import' → logprob: -8.271026611328125
    9. '#' → logprob: -8.646026611328125
    10. '{' → logprob: -8.646026611328125

Token 53: ' syll' (ID: 72448)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.161917805671692
    2. ' y' → logprob: -1.536917805671692
    3. ' the' → logprob: -1.786917805671692
    4. ' completeness' → logprob: -2.9119176864624023
    5. ' all' → logprob: -3.2869176864624023
    6. ' c' → logprob: -4.286917686462402
    7. ' z' → logprob: -4.411917686462402
    8. ' j' → logprob: -4.536917686462402
    9. ' s' → logprob: -4.536917686462402
    10. ' d' → logprob: -4.661917686462402

Token 54: 'able' (ID: 562)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8288580179214478
    2. 'ab' → logprob: -0.8288580179214478
    3. 'ables' → logprob: -2.703857898712158
    4. 'able' → logprob: -2.828857898712158
    5. 'abc' → logprob: -8.453858375549316
    6. 'abl' → logprob: -8.453858375549316
    7. 'b' → logprob: -9.203858375549316
    8. 's' → logprob: -9.578858375549316
    9. 'abe' → logprob: -9.828858375549316
    10. 'аб' → logprob: -10.328858375549316

Token 55: ' parsing' (ID: 51039)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.5474573969841003
    2. 's' → logprob: -1.6724574565887451
    3. '{' → logprob: -2.422457456588745
    4. 'c' → logprob: -2.922457456588745
    5. 'count' → logprob: -3.922457456588745
    6. '{
' → logprob: -4.297457218170166
    7. '#' → logprob: -4.547457218170166
    8. ' ' → logprob: -5.297457218170166
    9. '{'' → logprob: -5.422457218170166
    10. ' and' → logprob: -5.547457218170166

Token 56: '
' (ID: 198)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.36036795377731323
    2. 'CON' → logprob: -1.235368013381958
    3. 'con' → logprob: -5.735367774963379
    4. ',' → logprob: -5.985367774963379
    5. ' ' → logprob: -7.110367774963379
    6. '#' → logprob: -7.110367774963379
    7. '_CON' → logprob: -7.360367774963379
    8. ' C' → logprob: -7.485367774963379
    9. '_' → logprob: -7.860367774963379
    10. ' conson' → logprob: -7.860367774963379

Token 57: 'CON' (ID: 10637)
  Prédit: 'CON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CON' → logprob: -0.05267634987831116
    2. 'C' → logprob: -3.4276764392852783
    3. 'con' → logprob: -4.677676200866699
    4. 'import' → logprob: -5.427676200866699
    5. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -6.052676200866699
    6. '}' → logprob: -7.927676200866699
    7. 'CONS' → logprob: -7.927676200866699
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -8.3026762008667
    9. '_CON' → logprob: -8.5526762008667
    10. '#' → logprob: -8.8026762008667

Token 58: 'SON' (ID: 4214)
  Prédit: 'SON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SON' → logprob: -0.004093358293175697
    2. 'S' → logprob: -5.504093170166016
    3. 'son' → logprob: -11.754093170166016
    4. '```' → logprob: -12.879093170166016
    5. 'SO' → logprob: -13.879093170166016
    6. '\S' → logprob: -14.629093170166016
    7. 'SOR' → logprob: -14.629093170166016
    8. '	S' → logprob: -15.004093170166016
    9. 'T' → logprob: -15.004093170166016
    10. '

' → logprob: -15.129093170166016

Token 59: 'ANTS' (ID: 96531)
  Prédit: 'ANTS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANTS' → logprob: -0.00048524985322728753
    2. 'A' → logprob: -7.875485420227051
    3. 'ANT' → logprob: -10.00048542022705
    4. 'ants' → logprob: -10.50048542022705
    5. '{' → logprob: -11.62548542022705
    6. '```' → logprob: -12.25048542022705
    7. '   ' → logprob: -12.50048542022705
    8. '{'' → logprob: -12.75048542022705
    9. '_' → logprob: -13.25048542022705
    10. '

' → logprob: -13.37548542022705

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002187972189858556
    2. '=' → logprob: -6.127188205718994
    3. ' ' → logprob: -13.377187728881836
    4. 's' → logprob: -14.752187728881836
    5. ' ={' → logprob: -14.752187728881836
    6. ' =
' → logprob: -15.252187728881836
    7. '_' → logprob: -16.377187728881836
    8. '<|end|>' → logprob: -17.502187728881836
    9. ' ='' → logprob: -17.627187728881836
    10. ' =[' → logprob: -17.752187728881836

Token 61: ' {'' (ID: 11881)
  Prédit: ' {''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {'' → logprob: -0.01435765065252781
    2. '{'' → logprob: -4.639357566833496
    3. ' {' → logprob: -6.014357566833496
    4. ' set' → logprob: -6.264357566833496
    5. '{' → logprob: -9.264357566833496
    6. ' ' → logprob: -9.639357566833496
    7. 'set' → logprob: -10.014357566833496
    8. ' V' → logprob: -11.014357566833496
    9. ' {
' → logprob: -11.514357566833496
    10. ' {"' → logprob: -12.389357566833496

Token 62: 'k' (ID: 74)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.022356636822223663
    2. 'k' → logprob: -3.8973567485809326
    3. 'a' → logprob: -6.5223565101623535
    4. 'q' → logprob: -8.647356986999512
    5. ''' → logprob: -10.272356986999512
    6. 'z' → logprob: -10.522356986999512
    7. 'bc' → logprob: -10.522356986999512
    8. ''b' → logprob: -10.772356986999512
    9. ' b' → logprob: -11.147356986999512
    10. 'c' → logprob: -11.397356986999512

Token 63: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.006192203611135483
    2. '','' → logprob: -5.631192207336426
    3. ',' → logprob: -6.506192207336426
    4. ''' → logprob: -7.006192207336426
    5. ' ',' → logprob: -10.006192207336426
    6. 's' → logprob: -10.256192207336426
    7. ' ,' → logprob: -10.506192207336426
    8. '',
' → logprob: -10.506192207336426
    9. 'a' → logprob: -10.881192207336426
    10. ''s' → logprob: -11.631192207336426

Token 64: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012197626754641533
    2. ''s' → logprob: -4.762197494506836
    3. 'g' → logprob: -5.762197494506836
    4. 'q' → logprob: -9.137197494506836
    5. ''' → logprob: -9.137197494506836
    6. 'a' → logprob: -9.887197494506836
    7. '`s' → logprob: -10.012197494506836
    8. 'y' → logprob: -10.887197494506836
    9. ''g' → logprob: -10.887197494506836
    10. '```' → logprob: -11.137197494506836

Token 65: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0158480703830719
    2. ''' → logprob: -5.015848159790039
    3. '',' → logprob: -5.015848159790039
    4. ''t' → logprob: -6.640848159790039
    5. ',t' → logprob: -7.515848159790039
    6. 't' → logprob: -7.640848159790039
    7. ',' → logprob: -9.390848159790039
    8. ','' → logprob: -11.265848159790039
    9. 'u' → logprob: -11.890848159790039
    10. ''u' → logprob: -12.765848159790039

Token 66: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.011373155459296e-05
    2. '```' → logprob: -11.625030517578125
    3. ' t' → logprob: -12.250030517578125
    4. ''' → logprob: -12.375030517578125
    5. 'h' → logprob: -13.125030517578125
    6. 'ts' → logprob: -13.500030517578125
    7. '``' → logprob: -13.875030517578125
    8. '	t' → logprob: -13.875030517578125
    9. '' → logprob: -14.000030517578125
    10. ''t' → logprob: -14.125030517578125

Token 67: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.003368304343894124
    2. '',' → logprob: -6.378368377685547
    3. ''' → logprob: -6.628368377685547
    4. 'h' → logprob: -9.128368377685547
    5. ',h' → logprob: -9.378368377685547
    6. ',' → logprob: -9.753368377685547
    7. ''h' → logprob: -10.378368377685547
    8. 'p' → logprob: -10.503368377685547
    9. ' ','' → logprob: -12.003368377685547
    10. ','' → logprob: -12.003368377685547

Token 68: 'n' (ID: 77)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0013204771094024181
    2. 'n' → logprob: -7.6263203620910645
    3. 'a' → logprob: -8.251320838928223
    4. 'c' → logprob: -8.876320838928223
    5. 'p' → logprob: -8.876320838928223
    6. 'sh' → logprob: -9.626320838928223
    7. 'f' → logprob: -9.876320838928223
    8. 'b' → logprob: -10.376320838928223
    9. ''' → logprob: -10.751320838928223
    10. '```' → logprob: -11.001320838928223

Token 69: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0033539244905114174
    2. ''' → logprob: -6.378354072570801
    3. '',' → logprob: -6.878354072570801
    4. ''}' → logprob: -7.503354072570801
    5. '',
' → logprob: -11.3783540725708
    6. 'p' → logprob: -11.7533540725708
    7. ''m' → logprob: -11.7533540725708
    8. 'm' → logprob: -12.0033540725708
    9. '','#' → logprob: -12.0033540725708
    10. ''}
' → logprob: -12.3783540725708

Token 70: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.002899974351748824
    2. 'm' → logprob: -6.002900123596191
    3. ''h' → logprob: -8.627900123596191
    4. '	h' → logprob: -10.127900123596191
    5. 'p' → logprob: -10.377900123596191
    6. '}' → logprob: -10.502900123596191
    7. ''' → logprob: -10.502900123596191
    8. '```' → logprob: -10.877900123596191
    9. 'b' → logprob: -11.002900123596191
    10. ''}' → logprob: -11.377900123596191

Token 71: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.003981043118983507
    2. '',' → logprob: -5.628981113433838
    3. ''' → logprob: -8.00398063659668
    4. ',' → logprob: -11.25398063659668
    5. 'p' → logprob: -11.62898063659668
    6. '',"' → logprob: -12.25398063659668
    7. ''p' → logprob: -12.50398063659668
    8. ','' → logprob: -12.62898063659668
    9. '','','' → logprob: -12.87898063659668
    10. ',p' → logprob: -13.12898063659668

Token 72: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0003790760529227555
    2. 'b' → logprob: -8.250378608703613
    3. 'p' → logprob: -9.375378608703613
    4. 'f' → logprob: -11.000378608703613
    5. ''m' → logprob: -12.500378608703613
    6. ' m' → logprob: -12.625378608703613
    7. 'r' → logprob: -13.125378608703613
    8. 'c' → logprob: -14.000378608703613
    9. 'ｍ' → logprob: -14.125378608703613
    10. '_m' → logprob: -14.125378608703613

Token 73: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.004005742259323597
    2. '',' → logprob: -5.7540059089660645
    3. ''' → logprob: -7.1290059089660645
    4. '',"' → logprob: -12.004005432128906
    5. ','' → logprob: -12.129005432128906
    6. ',' → logprob: -12.504005432128906
    7. ''p' → logprob: -13.129005432128906
    8. ' ','' → logprob: -13.504005432128906
    9. '","' → logprob: -13.879005432128906
    10. ''a' → logprob: -14.379005432128906

Token 74: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.04600613936781883
    2. 'r' → logprob: -3.171006202697754
    3. ' y' → logprob: -6.046006202697754
    4. ''y' → logprob: -7.796006202697754
    5. 'b' → logprob: -8.921006202697754
    6. 'p' → logprob: -10.796006202697754
    7. 'g' → logprob: -11.046006202697754
    8. ' r' → logprob: -11.546006202697754
    9. ''r' → logprob: -11.546006202697754
    10. 'w' → logprob: -11.921006202697754

Token 75: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0033635508734732866
    2. '',' → logprob: -6.003363609313965
    3. ''' → logprob: -7.128363609313965
    4. ',' → logprob: -10.878363609313965
    5. 'p' → logprob: -11.253363609313965
    6. ''p' → logprob: -11.753363609313965
    7. 'a' → logprob: -12.378363609313965
    8. ','' → logprob: -12.378363609313965
    9. ''l' → logprob: -12.503363609313965
    10. 'u' → logprob: -12.628363609313965

Token 76: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00037132782745175064
    2. 'w' → logprob: -9.125370979309082
    3. 'b' → logprob: -9.375370979309082
    4. ''r' → logprob: -9.375370979309082
    5. ' r' → logprob: -9.500370979309082
    6. '_r' → logprob: -11.750370979309082
    7. '	r' → logprob: -12.500370979309082
    8. '')' → logprob: -13.625370979309082
    9. '-r' → logprob: -13.750370979309082
    10. ''' → logprob: -13.750370979309082

Token 77: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0006421420839615166
    2. '',' → logprob: -7.8756422996521
    3. ''' → logprob: -8.875641822814941
    4. ','' → logprob: -9.875641822814941
    5. ''p' → logprob: -11.000641822814941
    6. ''}' → logprob: -11.625641822814941
    7. 'p' → logprob: -12.125641822814941
    8. ''l' → logprob: -12.375641822814941
    9. '}' → logprob: -12.625641822814941
    10. '","' → logprob: -12.750641822814941

Token 78: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0003662020608317107
    2. ' w' → logprob: -8.8753662109375
    3. 'b' → logprob: -9.0003662109375
    4. ''w' → logprob: -9.2503662109375
    5. 'g' → logprob: -12.8753662109375
    6. 'ｗ' → logprob: -13.3753662109375
    7. 'W' → logprob: -13.5003662109375
    8. '	w' → logprob: -14.8753662109375
    9. '_w' → logprob: -15.2503662109375
    10. 'p' → logprob: -16.3753662109375

Token 79: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.013984257355332375
    2. ''}' → logprob: -4.638984203338623
    3. '',' → logprob: -6.013984203338623
    4. '}' → logprob: -7.013984203338623
    5. ','' → logprob: -7.763984203338623
    6. ''' → logprob: -8.013984680175781
    7. ',' → logprob: -10.513984680175781
    8. '}','' → logprob: -10.763984680175781
    9. '',"' → logprob: -11.638984680175781
    10. 'c' → logprob: -12.013984680175781

Token 80: 'g' (ID: 70)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6951366662979126
    2. 'g' → logprob: -0.6951366662979126
    3. ''g' → logprob: -7.195136547088623
    4. 'v' → logprob: -8.445137023925781
    5. '')' → logprob: -8.445137023925781
    6. 'd' → logprob: -8.695137023925781
    7. '```' → logprob: -9.070137023925781
    8. 'z' → logprob: -9.070137023925781
    9. '']' → logprob: -9.445137023925781
    10. ''' → logprob: -9.695137023925781

Token 81: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.002246961696073413
    2. '',' → logprob: -6.252246856689453
    3. ''' → logprob: -8.127246856689453
    4. ''}' → logprob: -12.627246856689453
    5. '}','' → logprob: -12.627246856689453
    6. '',"' → logprob: -12.877246856689453
    7. 'a' → logprob: -13.377246856689453
    8. '","' → logprob: -13.502246856689453
    9. ',' → logprob: -13.627246856689453
    10. ','' → logprob: -13.752246856689453

Token 82: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0011193804675713181
    2. ''z' → logprob: -7.126119613647461
    3. 'b' → logprob: -8.501119613647461
    4. ' z' → logprob: -9.626119613647461
    5. '	z' → logprob: -10.501119613647461
    6. 'd' → logprob: -11.501119613647461
    7. '-z' → logprob: -13.001119613647461
    8. '')' → logprob: -13.376119613647461
    9. '‘z' → logprob: -13.876119613647461
    10. ''' → logprob: -14.751119613647461

Token 83: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.00223316322080791
    2. '',' → logprob: -6.627233028411865
    3. ''' → logprob: -7.127233028411865
    4. ''}' → logprob: -11.002233505249023
    5. ''s' → logprob: -11.252233505249023
    6. ','' → logprob: -11.377233505249023
    7. '',"' → logprob: -11.377233505249023
    8. ''p' → logprob: -11.627233505249023
    9. ''q' → logprob: -12.127233505249023
    10. '","' → logprob: -12.252233505249023

Token 84: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00925801508128643
    2. 'j' → logprob: -4.759257793426514
    3. 'b' → logprob: -7.634257793426514
    4. '')' → logprob: -9.634258270263672
    5. 'dj' → logprob: -10.634258270263672
    6. ''d' → logprob: -11.384258270263672
    7. ' d' → logprob: -11.384258270263672
    8. '```' → logprob: -11.509258270263672
    9. ''' → logprob: -11.884258270263672
    10. '<|end|>' → logprob: -12.259258270263672

Token 85: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.001339527778327465
    2. '',' → logprob: -7.126339435577393
    3. ''' → logprob: -7.751339435577393
    4. ''}' → logprob: -10.00133991241455
    5. '}','' → logprob: -11.75133991241455
    6. '',"' → logprob: -11.87633991241455
    7. '}' → logprob: -11.87633991241455
    8. ','' → logprob: -12.00133991241455
    9. '","' → logprob: -12.12633991241455
    10. ',' → logprob: -12.62633991241455

Token 86: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.027650974690914154
    2. ''b' → logprob: -3.777651071548462
    3. ''' → logprob: -5.652650833129883
    4. 'j' → logprob: -7.152650833129883
    5. '')' → logprob: -10.277650833129883
    6. ' b' → logprob: -10.402650833129883
    7. '```' → logprob: -11.902650833129883
    8. '	b' → logprob: -12.152650833129883
    9. ')b' → logprob: -12.277650833129883
    10. '"' → logprob: -12.777650833129883

Token 87: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.009050711058080196
    2. ''' → logprob: -5.7590508460998535
    3. '',' → logprob: -5.7590508460998535
    4. ''}' → logprob: -6.1340508460998535
    5. ','' → logprob: -8.259050369262695
    6. '}' → logprob: -8.509050369262695
    7. '}','' → logprob: -10.884050369262695
    8. ',' → logprob: -11.384050369262695
    9. '',"' → logprob: -11.759050369262695
    10. ''p' → logprob: -12.259050369262695

Token 88: 'p' (ID: 79)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5497105121612549
    2. 'p' → logprob: -1.5497105121612549
    3. ''p' → logprob: -2.049710512161255
    4. '')' → logprob: -3.424710512161255
    5. ''}' → logprob: -4.174710273742676
    6. '<|end|>' → logprob: -4.424710273742676
    7. '}' → logprob: -5.424710273742676
    8. '''' → logprob: -5.549710273742676
    9. 'f' → logprob: -5.799710273742676
    10. ''f' → logprob: -6.174710273742676

Token 89: ''}

' (ID: 177722)
  Prédit: ''}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.26555678248405457
    2. '}' → logprob: -1.515556812286377
    3. '','' → logprob: -4.390556812286377
    4. ','' → logprob: -7.390556812286377
    5. '',' → logprob: -8.390556335449219
    6. ''' → logprob: -9.015556335449219
    7. '}'' → logprob: -9.890556335449219
    8. ',' → logprob: -10.890556335449219
    9. ' '}' → logprob: -10.890556335449219
    10. '`}' → logprob: -10.890556335449219

Token 90: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8726854920387268
    2. '_' → logprob: -1.247685432434082
    3. 'd' → logprob: -2.497685432434082
    4. '#' → logprob: -2.747685432434082
    5. ' ' → logprob: -3.122685432434082
    6. ':' → logprob: -3.622685432434082
    7. ')' → logprob: -3.622685432434082
    8. ',' → logprob: -4.747685432434082
    9. '.' → logprob: -5.122685432434082
    10. '
' → logprob: -5.247685432434082

Token 91: ' split' (ID: 12648)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5497545599937439
    2. ' parse' → logprob: -1.2997546195983887
    3. ' is' → logprob: -2.6747546195983887
    4. ' space' → logprob: -3.7997546195983887
    5. ' i' → logprob: -4.674754619598389
    6. ' analyze' → logprob: -4.799754619598389
    7. ' s' → logprob: -5.299754619598389
    8. ' split' → logprob: -5.299754619598389
    9. ' syll' → logprob: -5.299754619598389
    10. ' translate' → logprob: -5.549754619598389

Token 92: '_m' (ID: 1285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10400259494781494
    2. '_s' → logprob: -2.4790024757385254
    3. '(' → logprob: -5.479002475738525
    4. '_word' → logprob: -6.104002475738525
    5. '_(' → logprob: -6.229002475738525
    6. '_text' → logprob: -6.229002475738525
    7. '_string' → logprob: -6.354002475738525
    8. '_token' → logprob: -7.729002475738525
    9. '_words' → logprob: -7.854002475738525
    10. '('_' → logprob: -7.979002475738525

Token 93: 'oras' (ID: 41056)
  Prédit: 'ora'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -0.009600131772458553
    2. 'oras' → logprob: -5.3846001625061035
    3. 'a' → logprob: -6.2596001625061035
    4. 'e' → logprob: -7.2596001625061035
    5. 'oru' → logprob: -7.5096001625061035
    6. 'orp' → logprob: -7.6346001625061035
    7. 'o' → logprob: -7.6346001625061035
    8. 'or' → logprob: -8.384599685668945
    9. 'y' → logprob: -9.384599685668945
    10. 'iya' → logprob: -9.509599685668945

Token 94: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025451239198446274
    2. '(text' → logprob: -4.275451183319092
    3. '(word' → logprob: -5.400451183319092
    4. '(s' → logprob: -6.150451183319092
    5. '(string' → logprob: -6.400451183319092
    6. '(sentence' → logprob: -7.025451183319092
    7. '(str' → logprob: -8.02545166015625
    8. '('' → logprob: -8.15045166015625
    9. '(line' → logprob: -8.40045166015625
    10. '(input' → logprob: -8.65045166015625

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005667345132678747
    2. ')' → logprob: -5.255667209625244
    3. '):
' → logprob: -8.255667686462402
    4. 'tring' → logprob: -9.630667686462402
    5. ':' → logprob: -10.130667686462402
    6. 'e' → logprob: -11.130667686462402
    7. ',' → logprob: -11.505667686462402
    8. 'u' → logprob: -12.005667686462402
    9. '):

' → logprob: -12.255667686462402
    10. 'a' → logprob: -12.255667686462402

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0867227241396904
    2. ':' → logprob: -2.5867226123809814
    3. 'm' → logprob: -6.3367228507995605
    4. ' ' → logprob: -6.7117228507995605
    5. '"' → logprob: -6.8367228507995605
    6. ')' → logprob: -7.7117228507995605
    7. ''' → logprob: -7.8367228507995605
    8. '    ' → logprob: -7.9617228507995605
    9. '    
' → logprob: -8.211722373962402
    10. 'n' → logprob: -8.461722373962402

Token 97: ' mor' (ID: 4658)
  Prédit: ' mor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mor' → logprob: -0.19560064375400543
    2. ' result' → logprob: -2.320600748062134
    3. 'm' → logprob: -4.070600509643555
    4. ' m' → logprob: -4.195600509643555
    5. ' tokens' → logprob: -4.445600509643555
    6. ' res' → logprob: -4.570600509643555
    7. 'result' → logprob: -5.445600509643555
    8. ' parts' → logprob: -5.570600509643555
    9. ' i' → logprob: -5.820600509643555
    10. ' ' → logprob: -5.820600509643555

Token 98: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.002522149821743369
    2. 's' → logprob: -6.252521991729736
    3. 'es' → logprob: -8.877522468566895
    4. 'a' → logprob: -8.877522468566895
    5. '   ' → logprob: -9.002522468566895
    6. '=[]' → logprob: -10.377522468566895
    7. '=' → logprob: -10.627522468566895
    8. ' as' → logprob: -10.752522468566895
    9. '	as' → logprob: -11.377522468566895
    10. '_' → logprob: -11.752522468566895

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0018514160765334964
    2. '=' → logprob: -6.751851558685303
    3. '=[]' → logprob: -7.376851558685303
    4. ' ' → logprob: -11.126851081848145
    5. 's' → logprob: -11.376851081848145
    6. ',' → logprob: -12.251851081848145
    7. '_list' → logprob: -12.501851081848145
    8. '[]' → logprob: -12.751851081848145
    9. ')' → logprob: -12.876851081848145
    10. ' []' → logprob: -13.126851081848145

Token 100: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.38687896728515625
    2. '[]' → logprob: -1.1368789672851562
    3. '[' → logprob: -13.011878967285156
    4. ' ' → logprob: -13.136878967285156
    5. ' []
' → logprob: -13.886878967285156
    6. '[]
' → logprob: -14.011878967285156
    7. ' [' → logprob: -14.261878967285156
    8. '[]}' → logprob: -14.636878967285156
    9. ' ['' → logprob: -15.011878967285156
    10. '['' → logprob: -15.261878967285156

Token 101: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.41549062728881836
    2. '   ' → logprob: -1.2904906272888184
    3. 'i' → logprob: -2.7904906272888184
    4. ' current' → logprob: -6.915490627288818
    5. ' ' → logprob: -7.040490627288818
    6. '    ' → logprob: -8.290491104125977
    7. 'current' → logprob: -8.290491104125977
    8. '  ' → logprob: -8.540491104125977
    9. ' n' → logprob: -8.665491104125977
    10. '    
' → logprob: -8.790491104125977

Token 102: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0033741232473403215
    2. ' i' → logprob: -6.003374099731445
    3. 'current' → logprob: -7.253374099731445
    4. '   ' → logprob: -10.253374099731445
    5. 'start' → logprob: -10.378374099731445
    6. 'buffer' → logprob: -10.378374099731445
    7. ' current' → logprob: -10.628374099731445
    8. 'n' → logprob: -11.128374099731445
    9. 'idx' → logprob: -11.503374099731445
    10. ' ' → logprob: -11.503374099731445

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22693216800689697
    2. '=' → logprob: -1.601932168006897
    3. ' ' → logprob: -6.726932048797607
    4. ' +=' → logprob: -8.976932525634766
    5. 'n' → logprob: -9.351932525634766
    6. ' n' → logprob: -10.601932525634766
    7. '+' → logprob: -11.101932525634766
    8. ')' → logprob: -11.226932525634766
    9. '<|end|>' → logprob: -11.601932525634766
    10. 's' → logprob: -11.726932525634766

Token 104: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06993765383958817
    2. ' ' → logprob: -2.6949377059936523
    3. '1' → logprob: -13.569937705993652
    4. ' 
' → logprob: -16.819936752319336
    5. ' ' → logprob: -17.569936752319336
    6. '2' → logprob: -17.882436752319336
    7. ' len' → logprob: -18.382436752319336
    8. '  ' → logprob: -18.444936752319336
    9. '<|end|>' → logprob: -18.694936752319336
    10. '۰' → logprob: -18.819936752319336

Token 105: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '1' → logprob: -15.625019073486328
    4. 'len' → logprob: -17.625019073486328
    5. '۰' → logprob: -17.687519073486328
    6. 's' → logprob: -18.062519073486328
    7. '```' → logprob: -18.187519073486328
    8. '[' → logprob: -18.750019073486328
    9. '０' → logprob: -19.000019073486328
    10. '012' → logprob: -19.062519073486328

Token 106: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7985146045684814
    2. '<|end|>' → logprob: -1.1735146045684814
    3. 'while' → logprob: -2.1735146045684814
    4. '   ' → logprob: -3.5485146045684814
    5. ' ' → logprob: -3.5485146045684814
    6. ' while' → logprob: -3.7985146045684814
    7. ')' → logprob: -4.048514366149902
    8. 'n' → logprob: -4.923514366149902
    9. ' 
' → logprob: -5.173514366149902
    10. '    
' → logprob: -5.673514366149902

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1900666952133179
    2. ' ' → logprob: -1.3150666952133179
    3. '<|end|>' → logprob: -1.6900666952133179
    4. '
' → logprob: -3.0650668144226074
    5. ' while' → logprob: -3.0650668144226074
    6. ')' → logprob: -3.0650668144226074
    7. 'while' → logprob: -3.1900668144226074
    8. ' 
' → logprob: -4.190066814422607
    9. '    
' → logprob: -4.315066814422607
    10. '  ' → logprob: -4.815066814422607

Token 108: ' n' (ID: 297)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.47477808594703674
    2. ' while' → logprob: -0.9747780561447144
    3. 'n' (adapté à ' n') → logprob: -7.599778175354004
    4. ' ' → logprob: -9.849778175354004
    5. 'len' → logprob: -9.849778175354004
    6. ' n' → logprob: -10.599778175354004
    7. '
' → logprob: -10.724778175354004
    8. ' len' → logprob: -10.974778175354004
    9. ' 
' → logprob: -12.099778175354004
    10. 's' → logprob: -12.349778175354004

Token 109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0708552747964859
    2. '=' → logprob: -2.6958553791046143
    3. ' ' → logprob: -7.070855140686035
    4. '=len' → logprob: -10.820855140686035
    5. 's' → logprob: -11.320855140686035
    6. ' =
' → logprob: -11.570855140686035
    7. '<|end|>' → logprob: -11.695855140686035
    8. '  ' → logprob: -12.570855140686035
    9. ')' → logprob: -12.945855140686035
    10. ' ==' → logprob: -13.070855140686035

Token 110: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.018150877207517624
    2. 'len' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.89315128326416
    4. '(len' → logprob: -15.01815128326416
    5. '=len' → logprob: -15.26815128326416
    6. '[len' → logprob: -17.143150329589844
    7. '<len' → logprob: -17.643150329589844
    8. '	len' → logprob: -17.768150329589844
    9. ',len' → logprob: -18.018150329589844
    10. ' length' → logprob: -20.018150329589844

Token 111: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0011720098555088043
    2. '(' → logprob: -6.751172065734863
    3. 's' → logprob: -13.376172065734863
    4. ' (' → logprob: -16.001171112060547
    5. '(
' → logprob: -16.501171112060547
    6. '(n' → logprob: -18.501171112060547
    7. '(

' → logprob: -19.876171112060547
    8. '(i' → logprob: -20.251171112060547
    9. ' s' → logprob: -20.251171112060547
    10. '(S' → logprob: -20.626171112060547

Token 112: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001495484757469967
    2. ' )' → logprob: -9.000149726867676
    3. ')
' → logprob: -10.750149726867676
    4. ' ' → logprob: -12.625149726867676
    5. '   ' → logprob: -14.500149726867676
    6. ')s' → logprob: -15.500149726867676
    7. '')' → logprob: -16.12514877319336
    8. '))' → logprob: -16.62514877319336
    9. '```' → logprob: -16.75014877319336
    10. ')

' → logprob: -16.87514877319336

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6207285523414612
    2. ' while' → logprob: -1.3707284927368164
    3. ' ' → logprob: -2.8707284927368164
    4. 'while' → logprob: -2.9957284927368164
    5. ' 
' → logprob: -3.6207284927368164
    6. '    
' → logprob: -3.8707284927368164
    7. '<|end|>' → logprob: -3.9957284927368164
    8. '
' → logprob: -4.245728492736816
    9. ')' → logprob: -4.870728492736816
    10. '  
' → logprob: -5.495728492736816

Token 114: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.008593061938881874
    2. 'while' (adapté à ' while') → logprob: -5.2585930824279785
    3. ' ' → logprob: -5.7585930824279785
    4. ' 
' → logprob: -8.75859260559082
    5. '
' → logprob: -11.00859260559082
    6. '   ' → logprob: -12.38359260559082
    7. ' While' → logprob: -12.63359260559082
    8. ' )' → logprob: -12.75859260559082
    9. '```' → logprob: -13.00859260559082
    10. '	while' → logprob: -13.13359260559082

Token 115: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0003368926409166306
    2. 'i' → logprob: -8.000336647033691
    3. ' ' → logprob: -13.500336647033691
    4. ' ' → logprob: -17.500337600708008
    5. '	i' → logprob: -17.500337600708008
    6. ' n' → logprob: -18.750337600708008
    7. ' (' → logprob: -19.125337600708008
    8. '   ' → logprob: -19.375337600708008
    9. ' True' → logprob: -19.375337600708008
    10. '(i' → logprob: -20.000337600708008

Token 116: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.01824921742081642
    2. '<' → logprob: -4.018249034881592
    3. ' ' → logprob: -10.26824951171875
    4. '<len' → logprob: -10.26824951171875
    5. '<n' → logprob: -10.51824951171875
    6. ' <
' → logprob: -13.39324951171875
    7. '<s' → logprob: -14.64324951171875
    8. ' <=' → logprob: -15.26824951171875
    9. '<m' → logprob: -16.14324951171875
    10. '<size' → logprob: -16.76824951171875

Token 117: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38687217235565186
    2. ' n' → logprob: -1.1368721723556519
    3. ' ' → logprob: -13.886872291564941
    4. '	n' → logprob: -16.261871337890625
    5. 's' → logprob: -17.636871337890625
    6. '
' → logprob: -17.886871337890625
    7. '   ' → logprob: -18.136871337890625
    8. '```' → logprob: -18.261871337890625
    9. 'len' → logprob: -18.386871337890625
    10. ' len' → logprob: -18.386871337890625

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005429040757007897
    2. ':
' → logprob: -7.750543117523193
    3. ' and' → logprob: -9.250542640686035
    4. 'and' → logprob: -11.875542640686035
    5. ' :' → logprob: -12.000542640686035
    6. '):' → logprob: -13.500542640686035
    7. ',' → logprob: -15.000542640686035
    8. ':

' → logprob: -15.250542640686035
    9. ':**' → logprob: -15.250542640686035
    10. '   ' → logprob: -15.375542640686035

Token 119: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9175756573677063
    2. ' ' → logprob: -1.5425755977630615
    3. '       ' → logprob: -1.5425755977630615
    4. '   ' → logprob: -2.4175755977630615
    5. '    ' → logprob: -3.4175755977630615
    6. 'if' → logprob: -3.6675755977630615
    7. ' c' → logprob: -4.167575836181641
    8. 'c' → logprob: -5.667575836181641
    9. ' s' → logprob: -6.292575836181641
    10. 's' → logprob: -6.792575836181641

Token 120: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.10859747976064682
    2. 'if' → logprob: -2.73359751701355
    3. 'ch' → logprob: -3.73359751701355
    4. ' if' → logprob: -4.733597278594971
    5. 'char' → logprob: -5.858597278594971
    6. ' c' → logprob: -6.483597278594971
    7. ' char' → logprob: -8.233597755432129
    8. '       ' → logprob: -8.858597755432129
    9. ' ch' → logprob: -8.983597755432129
    10. 'j' → logprob: -9.233597755432129

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11300811171531677
    2. '=' → logprob: -2.2380080223083496
    3. '=s' → logprob: -8.863008499145508
    4. 's' → logprob: -10.738008499145508
    5. ' ' → logprob: -11.113008499145508
    6. ' s' → logprob: -13.863008499145508
    7. '=
' → logprob: -13.988008499145508
    8. '<|end|>' → logprob: -13.988008499145508
    9. '=c' → logprob: -14.488008499145508
    10. ')' → logprob: -14.488008499145508

Token 122: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07889111340045929
    2. 's' → logprob: -2.5788910388946533
    3. ' ' → logprob: -14.703890800476074
    4. '(s' → logprob: -15.078890800476074
    5. '	s' → logprob: -15.703890800476074
    6. '_s' → logprob: -16.45389175415039
    7. '`s' → logprob: -16.82889175415039
    8. ''s' → logprob: -16.82889175415039
    9. '<|end|>' → logprob: -16.82889175415039
    10. '```' → logprob: -17.32889175415039

Token 123: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0564331205387134e-05
    2. '[' → logprob: -12.50001049041748
    3. '[
' → logprob: -12.75001049041748
    4. '[s' → logprob: -13.12501049041748
    5. '```' → logprob: -14.12501049041748
    6. 's' → logprob: -15.62501049041748
    7. '[int' → logprob: -16.125011444091797
    8. '[idx' → logprob: -16.375011444091797
    9. '   ' → logprob: -16.375011444091797
    10. ' [' → logprob: -16.500011444091797

Token 124: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005720909684896469
    2. ']
' → logprob: -5.380721092224121
    3. '']' → logprob: -7.255721092224121
    4. ' ]' → logprob: -8.630721092224121
    5. '       ' → logprob: -9.130721092224121
    6. ')' → logprob: -9.755721092224121
    7. '])' → logprob: -11.255721092224121
    8. '"]' → logprob: -11.755721092224121
    9. ']

' → logprob: -12.005721092224121
    10. '')' → logprob: -12.505721092224121

Token 125: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3040844202041626
    2. '       ' → logprob: -1.4290844202041626
    3. ' if' → logprob: -1.5540844202041626
    4. ' ' → logprob: -1.6790844202041626
    5. '        ' → logprob: -2.929084300994873
    6. '
' → logprob: -4.304084300994873
    7. '        
' → logprob: -4.804084300994873
    8. ' 
' → logprob: -5.054084300994873
    9. '<|end|>' → logprob: -5.429084300994873
    10. '```' → logprob: -7.179084300994873

Token 126: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5771265029907227
    2. 'if' → logprob: -0.8271265029907227
    3. ' ' → logprob: -8.327126502990723
    4. ' 
' → logprob: -8.327126502990723
    5. 'i' → logprob: -8.702126502990723
    6. '#' (adapté à ' #') → logprob: -8.827126502990723
    7. '
' → logprob: -9.077126502990723
    8. ' i' → logprob: -9.202126502990723
    9. ' #' → logprob: -10.077126502990723
    10. '        ' → logprob: -10.202126502990723

Token 127: ' S' (ID: 336)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05334744229912758
    2. ' if' → logprob: -3.05334734916687
    3. '#' → logprob: -5.553347587585449
    4. ' #' → logprob: -8.30334758758545
    5. 'If' → logprob: -8.42834758758545
    6. '       ' → logprob: -8.55334758758545
    7. 'i' → logprob: -9.55334758758545
    8. '
' → logprob: -9.80334758758545
    9. ' If' → logprob: -10.67834758758545
    10. '   ' → logprob: -10.92834758758545

Token 128: 'oku' (ID: 13454)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7720341682434082
    2. 'if' → logprob: -1.3970341682434082
    3. ' if' → logprob: -2.022034168243408
    4. 't' → logprob: -3.147034168243408
    5. 'i' → logprob: -3.647034168243408
    6. '   ' → logprob: -4.022034168243408
    7. '#' → logprob: -4.147034168243408
    8. 'pace' → logprob: -4.397034168243408
    9. 'plit' → logprob: -5.147034168243408
    10. 'kip' → logprob: -5.147034168243408

Token 129: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.001917810644954443
    2. ''on' → logprob: -7.626917839050293
    3. 't' → logprob: -8.626917839050293
    4. 'd' → logprob: -8.751917839050293
    5. 'o' → logprob: -8.876917839050293
    6. '_on' → logprob: -9.001917839050293
    7. 'onn' → logprob: -9.251917839050293
    8. 'ons' → logprob: -9.501917839050293
    9. 'don' → logprob: -9.501917839050293
    10. '>' → logprob: -9.626917839050293

Token 130: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8769093155860901
    2. 'if' → logprob: -0.8769093155860901
    3. ' if' → logprob: -2.0019092559814453
    4. ' ' → logprob: -4.001909255981445
    5. ':' → logprob: -5.376909255981445
    6. '        ' → logprob: -5.876909255981445
    7. '   ' → logprob: -6.126909255981445
    8. '           ' → logprob: -6.751909255981445
    9. ' and' → logprob: -7.126909255981445
    10. ' '' → logprob: -7.876909255981445

Token 131: '促' (ID: 69856)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0662051439285278
    2. ''s' → logprob: -1.1912051439285278
    3. 's' → logprob: -1.3162051439285278
    4. 'c' → logprob: -2.9412050247192383
    5. ' s' → logprob: -4.441205024719238
    6. ')' → logprob: -4.941205024719238
    7. ' ' → logprob: -4.941205024719238
    8. ' c' → logprob: -6.441205024719238
    9. ' '' → logprob: -6.566205024719238
    10. '')' → logprob: -6.941205024719238

Token 132: '音' (ID: 15082)
  Prédit: 'し'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'し' → logprob: -1.1120282411575317
    2. 't' → logprob: -1.2370282411575317
    3. '音' → logprob: -2.112028121948242
    4. 'ch' → logprob: -2.862028121948242
    5. 'd' → logprob: -3.112028121948242
    6. '```' → logprob: -3.237028121948242
    7. ')' → logprob: -3.737028121948242
    8. 'っ' → logprob: -4.112028121948242
    9. '促' → logprob: -4.362028121948242
    10. 's' → logprob: -5.112028121948242

Token 133: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.032144881784915924
    2. '')' → logprob: -4.657145023345947
    3. 'if' → logprob: -5.157145023345947
    4. '):' → logprob: -5.282145023345947
    5. ')
' → logprob: -5.657145023345947
    6. '       ' → logprob: -6.157145023345947
    7. ''s' → logprob: -6.407145023345947
    8. ' if' → logprob: -6.657145023345947
    9. '）' → logprob: -7.532145023345947
    10. ')'' → logprob: -8.282144546508789

Token 134: ' small' (ID: 3291)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46706917881965637
    2. ' if' → logprob: -1.467069149017334
    3. '       ' → logprob: -1.967069149017334
    4. ' ' → logprob: -7.092069149017334
    5. ':' → logprob: -7.592069149017334
    6. '           ' → logprob: -7.842069149017334
    7. 's' → logprob: -8.592069625854492
    8. '   ' → logprob: -8.842069625854492
    9. ''s' → logprob: -8.842069625854492
    10. '	if' → logprob: -9.467069625854492

Token 135: ' ts' (ID: 6601)
  Prédit: 'っ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'っ' → logprob: -0.15233606100082397
    2. 'ts' → logprob: -2.4023361206054688
    3. ' ts' → logprob: -3.5273361206054688
    4. 'つ' → logprob: -4.527336120605469
    5. ' ' → logprob: -4.777336120605469
    6. ''' → logprob: -6.777336120605469
    7. '-ts' → logprob: -7.777336120605469
    8. '_ts' → logprob: -8.152336120605469
    9. ' '' → logprob: -9.277336120605469
    10. '_' → logprob: -10.027336120605469

Token 136: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.004835938103497028
    2. ''u' → logprob: -6.629836082458496
    3. 'ts' → logprob: -6.754836082458496
    4. '<u' → logprob: -7.629836082458496
    5. '```' → logprob: -8.254836082458496
    6. '   ' → logprob: -8.254836082458496
    7. '	u' → logprob: -8.504836082458496
    8. ''' → logprob: -9.129836082458496
    9. 'uts' → logprob: -9.254836082458496
    10. '

' → logprob: -9.254836082458496

Token 137: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02387482114136219
    2. 'if' → logprob: -4.648874759674072
    3. ' if' → logprob: -4.773874759674072
    4. '        ' → logprob: -5.898874759674072
    5. '           ' → logprob: -7.398874759674072
    6. ' ' → logprob: -7.398874759674072
    7. ':' → logprob: -7.648874759674072
    8. ',' → logprob: -8.14887523651123
    9. ')' → logprob: -8.89887523651123
    10. '   ' → logprob: -9.27387523651123

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15275801718235016
    2. ' if' → logprob: -2.6527581214904785
    3. 'if' → logprob: -2.7777581214904785
    4. '           ' → logprob: -5.9027581214904785
    5. ' ' → logprob: -6.0277581214904785
    6. ':' → logprob: -7.0277581214904785
    7. '        ' → logprob: -7.5277581214904785
    8. ')' → logprob: -7.5277581214904785
    9. '   ' → logprob: -7.7777581214904785
    10. 's' → logprob: -8.15275764465332

Token 139: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07914765179157257
    2. ' if' → logprob: -2.5791475772857666
    3. '       ' → logprob: -8.329147338867188
    4. '           ' → logprob: -11.954147338867188
    5. ' ' → logprob: -12.329147338867188
    6. '        ' → logprob: -13.579147338867188
    7. '   ' → logprob: -13.704147338867188
    8. 'elif' → logprob: -14.204147338867188
    9. 'i' → logprob: -14.579147338867188
    10. '    ' → logprob: -14.829147338867188

Token 140: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.005378898698836565
    2. 'c' → logprob: -5.255378723144531
    3. ' s' → logprob: -9.005378723144531
    4. ' ' → logprob: -11.005378723144531
    5. 's' → logprob: -12.755378723144531
    6. ' i' → logprob: -13.380378723144531
    7. '	c' → logprob: -14.880378723144531
    8. ' ' → logprob: -15.005378723144531
    9. 'i' → logprob: -15.380378723144531
    10. ' (' → logprob: -15.630378723144531

Token 141: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02170487493276596
    2. '==' → logprob: -3.896704912185669
    3. '=='' → logprob: -6.89670467376709
    4. '=' → logprob: -10.02170467376709
    5. ' ' → logprob: -10.02170467376709
    6. ' =='' → logprob: -10.27170467376709
    7. '==
' → logprob: -11.64670467376709
    8. '=="' → logprob: -12.14670467376709
    9. ' =' → logprob: -12.39670467376709
    10. ''' → logprob: -12.89670467376709

Token 142: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07016105949878693
    2. ' '' → logprob: -2.6951611042022705
    3. ''s' → logprob: -9.195160865783691
    4. ' ' → logprob: -9.445160865783691
    5. '"' → logprob: -10.570160865783691
    6. ''i' → logprob: -12.070160865783691
    7. '
' → logprob: -12.945160865783691
    8. '   ' → logprob: -13.070160865783691
    9. ''t' → logprob: -13.820160865783691
    10. ''a' → logprob: -13.945160865783691

Token 143: 'っ' (ID: 8334)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08510763943195343
    2. 'っ' → logprob: -2.5851075649261475
    3. ''s' → logprob: -5.710107803344727
    4. ''u' → logprob: -5.960107803344727
    5. ''t' → logprob: -9.460107803344727
    6. ' ' → logprob: -9.710107803344727
    7. ''q' → logprob: -10.335107803344727
    8. ' '' → logprob: -10.335107803344727
    9. ''ll' → logprob: -11.210107803344727
    10. ''un' → logprob: -11.210107803344727

Token 144: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.16862048208713531
    2. ''' → logprob: -1.9186204671859741
    3. '':
' → logprob: -4.793620586395264
    4. ' '' → logprob: -10.543620109558105
    5. '':
' → logprob: -10.793620109558105
    6. '':

' → logprob: -11.918620109558105
    7. ''):' → logprob: -12.293620109558105
    8. ' and' → logprob: -12.543620109558105
    9. ' ':' → logprob: -12.668620109558105
    10. ''):
' → logprob: -13.043620109558105

Token 145: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09266964346170425
    2. 'i' → logprob: -3.467669725418091
    3. 'if' → logprob: -3.967669725418091
    4. ' if' → logprob: -4.092669486999512
    5. ' i' → logprob: -4.967669486999512
    6. ' and' → logprob: -5.217669486999512
    7. '       ' → logprob: -5.217669486999512
    8. '   ' → logprob: -5.967669486999512
    9. '
' → logprob: -7.842669486999512
    10. 'and' → logprob: -7.842669486999512

Token 146: ' #' (ID: 1069)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.17838719487190247
    2. 'if' → logprob: -1.92838716506958
    3. '           ' → logprob: -4.30338716506958
    4. 'i' → logprob: -6.30338716506958
    5. ' if' → logprob: -7.05338716506958
    6. '   ' → logprob: -7.17838716506958
    7. ' mor' → logprob: -7.92838716506958
    8. 'mor' → logprob: -8.303387641906738
    9. '       ' → logprob: -9.053387641906738
    10. '            
' → logprob: -9.678387641906738

Token 147: ' problem' (ID: 4792)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18888819217681885
    2. 'm' → logprob: -1.8138881921768188
    3. ' if' → logprob: -5.688888072967529
    4. 'i' → logprob: -6.313888072967529
    5. '           ' → logprob: -6.938888072967529
    6. '#' → logprob: -7.063888072967529
    7. 'mor' → logprob: -7.188888072967529
    8. '   ' → logprob: -7.813888072967529
    9. ' mor' → logprob: -7.813888072967529
    10. '       ' → logprob: -8.063888549804688

Token 148: ' states' (ID: 9407)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1123842000961304
    2. 'm' → logprob: -1.2373842000961304
    3. ' if' → logprob: -1.7373842000961304
    4. 'if' → logprob: -2.48738431930542
    5. 'i' → logprob: -2.61238431930542
    6. ' mor' → logprob: -3.86238431930542
    7. ' i' → logprob: -3.98738431930542
    8. '            
' → logprob: -5.73738431930542
    9. 's' → logprob: -6.36238431930542
    10. 'mor' → logprob: -7.11238431930542

Token 149: ' no' (ID: 860)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6912006139755249
    2. ' mor' → logprob: -1.691200613975525
    3. ' if' → logprob: -1.816200613975525
    4. 'if' → logprob: -2.5662007331848145
    5. '           ' → logprob: -2.8162007331848145
    6. 'mor' → logprob: -4.6912007331848145
    7. 'i' → logprob: -6.0662007331848145
    8. '               ' → logprob: -6.9412007331848145
    9. ' i' → logprob: -7.1912007331848145
    10. 's' → logprob: -7.1912007331848145

Token 150: ' explicit' (ID: 23141)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.6579191088676453
    2. 'next' → logprob: -2.90791916847229
    3. 'i' → logprob: -3.03291916847229
    4. ' i' → logprob: -3.15791916847229
    5. ' more' → logprob: -3.28291916847229
    6. ' ' → logprob: -3.65791916847229
    7. ' further' → logprob: -3.78291916847229
    8. ' space' → logprob: -3.90791916847229
    9. ' spaces' → logprob: -3.90791916847229
    10. 'space' → logprob: -4.157918930053711

Token 151: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.803617537021637
    2. ' i' → logprob: -1.8036174774169922
    3. ' next' → logprob: -3.178617477416992
    4. ' vowel' → logprob: -3.303617477416992
    5. ' space' → logprob: -3.553617477416992
    6. ' look' → logprob: -3.678617477416992
    7. ' comment' → logprob: -3.678617477416992
    8. 'space' → logprob: -3.928617477416992
    9. 's' → logprob: -4.053617477416992
    10. 'v' → logprob: -4.053617477416992

Token 152: 'っ' (ID: 8334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8472301363945007
    2. ''' → logprob: -1.2222301959991455
    3. ' '' → logprob: -2.9722301959991455
    4. 'return' → logprob: -3.5972301959991455
    5. 's' → logprob: -3.7222301959991455
    6. ' ' → logprob: -3.8472301959991455
    7. 'v' → logprob: -4.097229957580566
    8. 'next' → logprob: -4.097229957580566
    9. ''i' → logprob: -4.597229957580566
    10. ''s' → logprob: -4.722229957580566

Token 153: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9908078908920288
    2. ' ' → logprob: -1.9908078908920288
    3. 'i' → logprob: -2.3658080101013184
    4. '')' → logprob: -2.9908080101013184
    5. ' '' → logprob: -3.2408080101013184
    6. ' ')' → logprob: -3.2408080101013184
    7. ' increment' → logprob: -3.7408080101013184
    8. '
' → logprob: -3.9908080101013184
    9. ' i' → logprob: -4.240808010101318
    10. 'を' → logprob: -4.365808010101318

Token 154: ' in' (ID: 306)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3682664632797241
    2. '<|end|>' → logprob: -1.4932664632797241
    3. ' i' → logprob: -1.7432664632797241
    4. '
' → logprob: -1.9932664632797241
    5. ',' → logprob: -2.9932665824890137
    6. '<|end|>' → logprob: -3.2432665824890137
    7. ' ' → logprob: -3.7432665824890137
    8. '           ' → logprob: -3.9932665824890137
    9. ' pass' → logprob: -4.368266582489014
    10. ' 
' → logprob: -4.618266582489014

Token 155: ' input' (ID: 3422)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9228242635726929
    2. ' s' → logprob: -1.2978242635726929
    3. ' input' → logprob: -2.0478243827819824
    4. ' the' → logprob: -2.5478243827819824
    5. 'input' → logprob: -2.7978243827819824
    6. ''' → logprob: -4.047824382781982
    7. '#' → logprob: -4.922824382781982
    8. 'the' → logprob: -4.922824382781982
    9. ''s' → logprob: -5.047824382781982
    10. ' this' → logprob: -5.547824382781982

Token 156: ' but' (ID: 889)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9170627593994141
    2. 'i' → logprob: -1.167062759399414
    3. '
' → logprob: -2.417062759399414
    4. '           ' → logprob: -2.542062759399414
    5. ' pass' → logprob: -2.667062759399414
    6. ' 
' → logprob: -3.917062759399414
    7. '       ' → logprob: -5.292062759399414
    8. '   ' → logprob: -5.417062759399414
    9. '            
' → logprob: -5.417062759399414
    10. '    
' → logprob: -5.667062759399414

Token 157: ' double' (ID: 3503)
  Prédit: ' mor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mor' → logprob: -0.72873854637146
    2. ' i' → logprob: -1.85373854637146
    3. ' pass' → logprob: -2.10373854637146
    4. '           ' → logprob: -2.10373854637146
    5. 'i' → logprob: -2.85373854637146
    6. '       ' → logprob: -4.853738784790039
    7. '   ' → logprob: -4.853738784790039
    8. 'm' → logprob: -4.978738784790039
    9. '#' → logprob: -5.103738784790039
    10. '    ' → logprob: -5.228738784790039

Token 158: ' conson' (ID: 127767)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -1.1949734687805176
    2. ' ' → logprob: -1.6949734687805176
    3. ' conson' → logprob: -1.8199734687805176
    4. 's' → logprob: -2.1949734687805176
    5. 'if' → logprob: -3.0699734687805176
    6. 'c' → logprob: -3.0699734687805176
    7. ' s' → logprob: -3.0699734687805176
    8. '   ' → logprob: -3.4449734687805176
    9. ' letters' → logprob: -3.9449734687805176
    10. 't' → logprob: -4.069973468780518

Token 159: 'ant' (ID: 493)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5975351333618164
    2. 'ant' → logprob: -1.0975351333618164
    3. 'ants' → logprob: -2.4725351333618164
    4. 'a' → logprob: -3.5975351333618164
    5. 's' → logprob: -6.472535133361816
    6. ' ' → logprob: -6.972535133361816
    7. 'at' → logprob: -7.222535133361816
    8. ' t' → logprob: -8.097535133361816
    9. '   ' → logprob: -8.472535133361816
    10. 'c' → logprob: -8.847535133361816

Token 160: ' represent' (ID: 5188)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9084687232971191
    2. 'if' → logprob: -1.6584687232971191
    3. 'elif' → logprob: -2.158468723297119
    4. '           ' → logprob: -2.408468723297119
    5. ' elif' → logprob: -3.033468723297119
    6. ' ' → logprob: -3.533468723297119
    7. 's' → logprob: -3.658468723297119
    8. ' else' → logprob: -3.783468723297119
    9. '       ' → logprob: -4.158468723297119
    10. 'else' → logprob: -4.533468723297119

Token 161: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16379357874393463
    2. 'ing' → logprob: -2.2887935638427734
    3. 'ed' → logprob: -3.1637935638427734
    4. 'ation' → logprob: -5.288793563842773
    5. ' s' → logprob: -7.538793563842773
    6. 'a' → logprob: -7.538793563842773
    7. 'e' → logprob: -8.163793563842773
    8. ' ' → logprob: -8.413793563842773
    9. '   ' → logprob: -8.913793563842773
    10. ''s' → logprob: -9.038793563842773

Token 162: 'oku' (ID: 13454)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5116609930992126
    2. 't' → logprob: -2.5116610527038574
    3. 'paces' → logprob: -2.6366610527038574
    4. '       ' → logprob: -3.1366610527038574
    5. 'i' → logprob: -3.2616610527038574
    6. 'e' → logprob: -3.3866610527038574
    7. 'ing' → logprob: -3.5116610527038574
    8. 's' → logprob: -4.261661052703857
    9. '   ' → logprob: -4.886661052703857
    10. 'pace' → logprob: -5.011661052703857

Token 163: 'on' (ID: 263)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.174709677696228
    2. 'a' → logprob: -1.424709677696228
    3. 'ation' → logprob: -1.549709677696228
    4. '           ' → logprob: -2.6747097969055176
    5. 'd' → logprob: -3.4247097969055176
    6. 'tion' → logprob: -3.4247097969055176
    7. '       ' → logprob: -4.174709796905518
    8. '   ' → logprob: -4.424709796905518
    9. 't' → logprob: -4.549709796905518
    10. 'ated' → logprob: -4.924709796905518

Token 164: ',
' (ID: 412)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5201483964920044
    2. '           ' → logprob: -2.020148277282715
    3. ' if' → logprob: -2.895148277282715
    4. 'i' → logprob: -2.895148277282715
    5. '       ' → logprob: -3.020148277282715
    6. 'if' → logprob: -3.895148277282715
    7. ' i' → logprob: -4.020148277282715
    8. ' and' → logprob: -4.645148277282715
    9. ' 
' → logprob: -4.770148277282715
    10. '
' → logprob: -5.145148277282715

Token 165: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14039823412895203
    2. '           ' → logprob: -3.0153982639312744
    3. ' i' → logprob: -3.3903982639312744
    4. 'if' → logprob: -3.8903982639312744
    5. ' so' → logprob: -4.765398025512695
    6. '       ' → logprob: -5.015398025512695
    7. ' ' → logprob: -5.765398025512695
    8. '            ' → logprob: -6.015398025512695
    9. '        ' → logprob: -6.140398025512695
    10. '   ' → logprob: -6.890398025512695

Token 166: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48902273178100586
    2. ' if' → logprob: -1.4890227317810059
    3. '           ' → logprob: -2.239022731781006
    4. '       ' → logprob: -3.864022731781006
    5. '#' (adapté à ' #') → logprob: -4.864022731781006
    6. 'i' → logprob: -5.364022731781006
    7. 'con' → logprob: -5.364022731781006
    8. '   ' → logprob: -5.739022731781006
    9. ' conson' → logprob: -5.864022731781006
    10. ' #' → logprob: -5.989022731781006

Token 167: ' so' (ID: 813)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.41590556502342224
    2. ' if' → logprob: -1.2909055948257446
    3. '       ' → logprob: -3.665905475616455
    4. '           ' → logprob: -3.790905475616455
    5. 'next' → logprob: -6.040905475616455
    6. 'i' → logprob: -6.165905475616455
    7. 'm' → logprob: -6.290905475616455
    8. '#' → logprob: -6.290905475616455
    9. 'con' → logprob: -6.540905475616455
    10. '   ' → logprob: -6.540905475616455

Token 168: ' '' (ID: 461)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5028751492500305
    2. 'if' → logprob: -1.1278750896453857
    3. '           ' → logprob: -3.0028750896453857
    4. '       ' → logprob: -4.252875328063965
    5. '   ' → logprob: -5.627875328063965
    6. ' i' → logprob: -6.377875328063965
    7. 'i' → logprob: -6.877875328063965
    8. ' next' → logprob: -7.877875328063965
    9. 'next' → logprob: -9.377875328063965
    10. ' ' → logprob: -9.502875328063965

Token 169: 'っ' (ID: 8334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4353545010089874
    2. 'i' → logprob: -1.310354471206665
    3. 's' → logprob: -3.435354471206665
    4. ' ' → logprob: -4.310354709625244
    5. ' i' → logprob: -4.310354709625244
    6. ' s' → logprob: -4.560354709625244
    7. ' if' → logprob: -4.810354709625244
    8. '   ' → logprob: -6.060354709625244
    9. 'elif' → logprob: -6.685354709625244
    10. '       ' → logprob: -7.810354709625244

Token 170: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007659158203750849
    2. '')' → logprob: -6.757658958435059
    3. ''
' → logprob: -7.132658958435059
    4. ''s' → logprob: -7.382658958435059
    5. 'if' → logprob: -7.507658958435059
    6. 'continue' → logprob: -7.882658958435059
    7. '
' → logprob: -8.257658958435059
    8. ' '' → logprob: -8.257658958435059
    9. ' should' → logprob: -8.382658958435059
    10. ' is' → logprob: -8.382658958435059

Token 171: ' won't' (ID: 14219)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5436564087867737
    2. '           ' → logprob: -2.293656349182129
    3. ' not' → logprob: -2.668656349182129
    4. ' can' → logprob: -3.043656349182129
    5. ' in' → logprob: -3.168656349182129
    6. ' should' → logprob: -3.418656349182129
    7. ' will' → logprob: -3.918656349182129
    8. ' may' → logprob: -4.043656349182129
    9. 'is' → logprob: -4.168656349182129
    10. 'not' → logprob: -4.668656349182129

Token 172: ' appear' (ID: 7680)
  Prédit: ' appear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appear' → logprob: -0.15668106079101562
    2. 'appear' → logprob: -2.6566810607910156
    3. ' occur' → logprob: -3.4066810607910156
    4. ' be' → logprob: -3.5316810607910156
    5. 'occur' → logprob: -4.531681060791016
    6. ' ' → logprob: -6.906681060791016
    7. 'be' → logprob: -8.906681060791016
    8. ' actually' → logprob: -9.281681060791016
    9. ' ever' → logprob: -10.031681060791016
    10. '  ' → logprob: -10.156681060791016

Token 173: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8576953411102295
    2. '       ' → logprob: -1.1076953411102295
    3. '
' → logprob: -2.7326953411102295
    4. 'i' → logprob: -3.1076953411102295
    5. ',' → logprob: -3.2326953411102295
    6. '               ' → logprob: -4.107695579528809
    7. '.' → logprob: -4.357695579528809
    8. ' ' → logprob: -4.732695579528809
    9. ' i' → logprob: -4.732695579528809
    10. '   ' → logprob: -4.857695579528809

Token 174: ' skip' (ID: 16677)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6810721158981323
    2. ' so' → logprob: -1.6810721158981323
    3. 'i' → logprob: -1.8060721158981323
    4. '           ' → logprob: -2.306072235107422
    5. '               ' → logprob: -4.681072235107422
    6. ' but' → logprob: -4.806072235107422
    7. ' continue' → logprob: -5.181072235107422
    8. ' pass' → logprob: -5.556072235107422
    9. 'so' → logprob: -5.556072235107422
    10. 'continue' → logprob: -5.556072235107422

Token 175: ' this' (ID: 495)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.39554885029792786
    2. '           ' → logprob: -1.7705488204956055
    3. ' ' → logprob: -2.6455488204956055
    4. ' i' → logprob: -2.8955488204956055
    5. '       ' → logprob: -4.1455488204956055
    6. '   ' → logprob: -5.5205488204956055
    7. '    ' → logprob: -5.8955488204956055
    8. '        ' → logprob: -6.0205488204956055
    9. '            ' → logprob: -6.5205488204956055
    10. ' 
' → logprob: -6.5205488204956055

Token 176: ' case' (ID: 1890)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26966097950935364
    2. 'i' → logprob: -2.7696609497070312
    3. ' 
' → logprob: -2.8946609497070312
    4. '
' → logprob: -3.6446609497070312
    5. '    ' → logprob: -3.7696609497070312
    6. '   ' → logprob: -4.519660949707031
    7. ' i' → logprob: -4.519660949707031
    8. '       ' → logprob: -4.644660949707031
    9. '           ' → logprob: -5.144660949707031
    10. '```' → logprob: -5.144660949707031

Token 177: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32034748792648315
    2. '
' → logprob: -1.570347547531128
    3. '       ' → logprob: -3.070347547531128
    4. 'i' → logprob: -5.195347309112549
    5. '    
' → logprob: -5.695347309112549
    6. '            
' → logprob: -5.945347309112549
    7. '        
' → logprob: -6.195347309112549
    8. '               ' → logprob: -6.820347309112549
    9. '```' → logprob: -7.445347309112549
    10. '   ' → logprob: -7.570347309112549

Token 178: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015261225402355194
    2. '       ' → logprob: -4.765261173248291
    3. '   ' → logprob: -6.140261173248291
    4. '
' → logprob: -7.265261173248291
    5. ' ' → logprob: -7.265261173248291
    6. 'i' → logprob: -7.390261173248291
    7. '            
' → logprob: -7.890261173248291
    8. 'elif' → logprob: -8.01526165008545
    9. ' pass' → logprob: -8.26526165008545
    10. '    
' → logprob: -8.64026165008545

Token 179: ' pass' (ID: 1853)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.43093207478523254
    2. 'pass' (adapté à ' pass') → logprob: -1.5559320449829102
    3. '           ' → logprob: -2.05593204498291
    4. ' pass' → logprob: -5.18093204498291
    5. ' i' → logprob: -5.55593204498291
    6. '   ' → logprob: -6.80593204498291
    7. '       ' → logprob: -8.18093204498291
    8. 'return' → logprob: -9.30593204498291
    9. '
' → logprob: -10.18093204498291
    10. '               ' → logprob: -10.55593204498291

Token 180: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01735827885568142
    2. 'elif' → logprob: -4.642358303070068
    3. '<|end|>' → logprob: -5.142358303070068
    4. ' elif' → logprob: -7.767358303070068
    5. '<|end|>' → logprob: -7.892358303070068
    6. '
' → logprob: -8.01735782623291
    7. '   ' → logprob: -9.14235782623291
    8. '\n' → logprob: -9.26735782623291
    9. 'i' → logprob: -9.39235782623291
    10. '        
' → logprob: -9.51735782623291

Token 182: ' #' (ID: 1069)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3783566951751709
    2. '       ' → logprob: -1.253356695175171
    3. ' elif' → logprob: -3.753356695175171
    4. '<|end|>' → logprob: -6.37835693359375
    5. 'else' → logprob: -7.12835693359375
    6. '
' → logprob: -7.50335693359375
    7. 'i' → logprob: -7.62835693359375
    8. '   ' → logprob: -7.75335693359375
    9. '	elif' → logprob: -7.87835693359375
    10. ' ' → logprob: -7.87835693359375

Token 183: ' '' (ID: 461)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.5954975485801697
    2. 'elif' → logprob: -1.0954976081848145
    3. ' if' → logprob: -2.5954976081848145
    4. 'if' → logprob: -3.3454976081848145
    5. '       ' → logprob: -6.9704976081848145
    6. ' ' → logprob: -7.2204976081848145
    7. ' i' → logprob: -7.9704976081848145
    8. ' s' → logprob: -8.095497131347656
    9. 'v' → logprob: -8.220497131347656
    10. 'i' → logprob: -8.595497131347656

Token 184: 'n' (ID: 77)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.06109604611992836
    2. ' elif' → logprob: -2.936095952987671
    3. 'if' → logprob: -5.81109619140625
    4. ' ' → logprob: -6.93609619140625
    5. 'e' → logprob: -7.56109619140625
    6. 'else' → logprob: -8.43609619140625
    7. '       ' → logprob: -8.43609619140625
    8. ' if' → logprob: -8.43609619140625
    9. 'i' → logprob: -8.56109619140625
    10. 'y' → logprob: -9.06109619140625

Token 185: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04322834685444832
    2. 'ext' → logprob: -4.7932281494140625
    3. '')' → logprob: -5.1682281494140625
    4. 'elif' → logprob: -5.7932281494140625
    5. ''a' → logprob: -5.9182281494140625
    6. ''i' → logprob: -6.0432281494140625
    7. ' '' → logprob: -6.0432281494140625
    8. 'o' → logprob: -6.0432281494140625
    9. 'a' → logprob: -6.2932281494140625
    10. ' and' → logprob: -6.5432281494140625

Token 186: ' or' (ID: 503)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.36895275115966797
    2. ' elif' → logprob: -1.368952751159668
    3. 'ext' → logprob: -4.118952751159668
    4. ' and' → logprob: -4.618952751159668
    5. ''' → logprob: -5.368952751159668
    6. '	elif' → logprob: -5.493952751159668
    7. ' ==' → logprob: -5.618952751159668
    8. ' =' → logprob: -6.493952751159668
    9. ' if' → logprob: -6.493952751159668
    10. 'if' → logprob: -6.618952751159668

Token 187: ' "' (ID: 392)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.0161516666412354
    2. ''' → logprob: -1.1411516666412354
    3. ' ' → logprob: -1.7661516666412354
    4. 'ん' → logprob: -2.1411516666412354
    5. ''s' → logprob: -5.391151428222656
    6. ''N' → logprob: -5.391151428222656
    7. ''i' → logprob: -5.891151428222656
    8. 'N' → logprob: -6.141151428222656
    9. 'elif' → logprob: -6.391151428222656
    10. ''n' → logprob: -6.391151428222656

Token 188: 'n' (ID: 77)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4899146854877472
    2. 'ん' → logprob: -1.3649146556854248
    3. ''N' → logprob: -2.864914655685425
    4. 'N' → logprob: -4.239914894104004
    5. ' '' → logprob: -4.489914894104004
    6. 'n' → logprob: -4.489914894104004
    7. ''n' → logprob: -4.989914894104004
    8. ''\' → logprob: -5.364914894104004
    9. '')' → logprob: -5.614914894104004
    10. ''i' → logprob: -5.739914894104004

Token 189: ''"
' (ID: 118126)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002715714741498232
    2. '')' → logprob: -6.627715587615967
    3. ''"' → logprob: -7.377715587615967
    4. '"' → logprob: -9.127716064453125
    5. ' '' → logprob: -9.252716064453125
    6. ''t' → logprob: -9.502716064453125
    7. 'n' → logprob: -9.627716064453125
    8. '\'' → logprob: -9.752716064453125
    9. ''a' → logprob: -10.002716064453125
    10. 'a' → logprob: -10.252716064453125

Token 190: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3056904673576355
    2. ' elif' → logprob: -2.1806905269622803
    3. ' ' → logprob: -2.9306905269622803
    4. 'if' → logprob: -4.180690288543701
    5. ':' → logprob: -4.305690288543701
    6. ' =' → logprob: -4.555690288543701
    7. ' in' → logprob: -4.680690288543701
    8. ' if' → logprob: -4.680690288543701
    9. '=' → logprob: -4.680690288543701
    10. ' ==' → logprob: -4.930690288543701

Token 191: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0894995629787445
    2. ' elif' → logprob: -2.4644994735717773
    3. '       ' → logprob: -7.964499473571777
    4. 'if' (adapté à ' if') → logprob: -10.214499473571777
    5. '   ' → logprob: -10.464499473571777
    6. '	elif' → logprob: -10.714499473571777
    7. ' if' → logprob: -10.839499473571777
    8. '           ' → logprob: -10.839499473571777
    9. ' =' → logprob: -11.089499473571777
    10. ' ' → logprob: -11.214499473571777

Token 192: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.0035969794262200594
    2. ' s' → logprob: -6.128596782684326
    3. 'c' → logprob: -6.628596782684326
    4. ' ' → logprob: -10.378597259521484
    5. ' i' → logprob: -10.753597259521484
    6. ' (' → logprob: -11.003597259521484
    7. 's' → logprob: -11.378597259521484
    8. '(c' → logprob: -12.753597259521484
    9. 'i' → logprob: -13.816097259521484
    10. '(' → logprob: -13.878597259521484

Token 193: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.008210638538002968
    2. '==' → logprob: -4.8832106590271
    3. ' in' → logprob: -8.633210182189941
    4. '=='' → logprob: -8.633210182189941
    5. ' ' → logprob: -9.133210182189941
    6. '=' → logprob: -9.508210182189941
    7. ' =='' → logprob: -10.133210182189941
    8. ' =' → logprob: -10.883210182189941
    9. 'in' → logprob: -12.258210182189941
    10. '  ' → logprob: -14.633210182189941

Token 194: ' '' (ID: 461)
  Prédit: ''n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''n' → logprob: -0.0027145228814333677
    2. ' '' → logprob: -6.00271463394165
    3. 'n' → logprob: -9.002714157104492
    4. '"' → logprob: -9.877714157104492
    5. ''' → logprob: -10.752714157104492
    6. ' ' → logprob: -11.502714157104492
    7. '   ' → logprob: -12.627714157104492
    8. ' n' → logprob: -12.752714157104492
    9. ''i' → logprob: -12.752714157104492
    10. ''a' → logprob: -12.877714157104492

Token 195: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010616290383040905
    2. ''n' → logprob: -6.87606143951416
    3. ''' → logprob: -10.50106143951416
    4. 'n't' → logprob: -15.50106143951416
    5. '	n' → logprob: -15.50106143951416
    6. ' n' → logprob: -15.87606143951416
    7. ' ' → logprob: -16.001062393188477
    8. 'ん' → logprob: -16.001062393188477
    9. '')' → logprob: -16.126062393188477
    10. '"' → logprob: -16.376062393188477

Token 196: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04481486231088638
    2. '':' → logprob: -3.2948148250579834
    3. '':
' → logprob: -5.1698150634765625
    4. '\'' → logprob: -8.294815063476562
    5. '''' → logprob: -8.419815063476562
    6. '\' → logprob: -8.919815063476562
    7. ' '' → logprob: -9.169815063476562
    8. '':
' → logprob: -10.044815063476562
    9. ''n' → logprob: -10.169815063476562
    10. '"' → logprob: -10.669815063476562

Token 197: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2577457129955292
    2. ' and' → logprob: -1.8827457427978516
    3. ':' → logprob: -3.3827457427978516
    4. '       ' → logprob: -4.007745742797852
    5. '   ' → logprob: -4.257745742797852
    6. ':
' → logprob: -5.757745742797852
    7. 'and' → logprob: -6.632745742797852
    8. ' if' → logprob: -6.882745742797852
    9. '               ' → logprob: -7.257745742797852
    10. ' ' → logprob: -8.007745742797852

Token 198: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.079080581665039
    2. ' if' → logprob: -1.079080581665039
    3. '           ' → logprob: -1.329080581665039
    4. '       ' → logprob: -3.829080581665039
    5. '   ' → logprob: -4.579080581665039
    6. '+' → logprob: -5.579080581665039
    7. 'ext' → logprob: -6.079080581665039
    8. ' ' → logprob: -6.079080581665039
    9. '
' → logprob: -6.204080581665039
    10. ' and' → logprob: -6.329080581665039

Token 199: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01922975480556488
    2. ' i' → logprob: -4.019229888916016
    3. '(i' → logprob: -7.019229888916016
    4. ' (' → logprob: -8.769229888916016
    5. '   ' → logprob: -11.394229888916016
    6. ' ' → logprob: -11.644229888916016
    7. '(' → logprob: -12.269229888916016
    8. '	i' → logprob: -12.644229888916016
    9. '[i' → logprob: -15.144229888916016
    10. '  ' → logprob: -15.394229888916016

Token 200: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20142073929309845
    2. ' +' → logprob: -1.701420783996582
    3. '<len' → logprob: -12.951420783996582
    4. '+i' → logprob: -13.201420783996582
    5. '＋' → logprob: -14.076420783996582
    6. '==' → logprob: -14.451420783996582
    7. ' <' → logprob: -15.201420783996582
    8. ' ' → logprob: -15.201420783996582
    9. '+
' → logprob: -15.326420783996582
    10. '   ' → logprob: -15.451420783996582

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036139667499810457
    2. ' ' → logprob: -5.6286139488220215
    3. '2' → logprob: -11.75361442565918
    4. 'len' → logprob: -13.37861442565918
    5. ' <' → logprob: -13.50361442565918
    6. '<len' → logprob: -14.31611442565918
    7. '```' → logprob: -15.06611442565918
    8. '<' → logprob: -15.12861442565918
    9. '   ' → logprob: -15.31611442565918
    10. ' len' → logprob: -15.56611442565918

Token 202: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.22151997685432434
    2. '<' → logprob: -1.721519947052002
    3. '<len' → logprob: -3.971519947052002
    4. ' ==' → logprob: -7.971519947052002
    5. '<n' → logprob: -8.22152042388916
    6. '==' → logprob: -8.72152042388916
    7. ' ' → logprob: -9.22152042388916
    8. ' >=' → logprob: -9.84652042388916
    9. '>=' → logprob: -10.72152042388916
    10. '<size' → logprob: -10.84652042388916

Token 203: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.47645020484924316
    2. ' n' → logprob: -0.9764502048492432
    3. 'len' → logprob: -6.226449966430664
    4. ' len' → logprob: -7.851449966430664
    5. ' ' → logprob: -13.726449966430664
    6. '1' → logprob: -14.226449966430664
    7. ')n' → logprob: -14.351449966430664
    8. '	n' → logprob: -14.726449966430664
    9. '_n' → logprob: -14.976449966430664
    10. 'length' → logprob: -15.351449966430664

Token 204: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.030240178108215332
    2. 'and' → logprob: -3.530240058898926
    3. ':' → logprob: -8.030240058898926
    4. ' ' → logprob: -9.030240058898926
    5. ' a' → logprob: -10.655240058898926
    6. 'a' → logprob: -11.405240058898926
    7. ':
' → logprob: -12.030240058898926
    8. ' an' → logprob: -13.905240058898926
    9. ' :' → logprob: -14.655240058898926
    10. '   ' → logprob: -14.905240058898926

Token 205: ' s' (ID: 265)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.9762783646583557
    2. ' s' → logprob: -1.226278305053711
    3. 's' → logprob: -1.601278305053711
    4. ' (' → logprob: -2.101278305053711
    5. '(' → logprob: -5.226278305053711
    6. '((' → logprob: -8.476278305053711
    7. ' ' → logprob: -9.476278305053711
    8. '(i' → logprob: -9.663778305053711
    9. '(not' → logprob: -9.788778305053711
    10. '{s' → logprob: -10.538778305053711

Token 206: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.4121114822482923e-06
    2. 'i' → logprob: -13.500003814697266
    3. '[' → logprob: -13.750003814697266
    4. ' [' → logprob: -14.875003814697266
    5. '[
' → logprob: -15.375003814697266
    6. '{i' → logprob: -16.250003814697266
    7. '
' → logprob: -16.875003814697266
    8. '```' → logprob: -17.375003814697266
    9. '(i' → logprob: -17.500003814697266
    10. ' i' → logprob: -17.625003814697266

Token 207: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004025481757707894
    2. ' +' → logprob: -7.875402450561523
    3. '+i' → logprob: -11.000402450561523
    4. ']' → logprob: -12.875402450561523
    5. '[' → logprob: -13.250402450561523
    6. 'i' → logprob: -14.625402450561523
    7. ']+' → logprob: -15.000402450561523
    8. '[i' → logprob: -15.625402450561523
    9. '+]' → logprob: -16.000402450561523
    10. '+
' → logprob: -16.375402450561523

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001908289035782218
    2. '2' → logprob: -6.376908302307129
    3. ' ' → logprob: -9.001908302307129
    4. '3' → logprob: -10.689408302307129
    5. '   ' → logprob: -11.751908302307129
    6. '4' → logprob: -12.001908302307129
    7. '```' → logprob: -12.064408302307129
    8. 'len' → logprob: -12.876908302307129
    9. ')' → logprob: -12.939408302307129
    10. '0' → logprob: -13.001908302307129

Token 209: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.45230183005332947
    2. '']' → logprob: -1.3273018598556519
    3. ' in' → logprob: -2.8273017406463623
    4. ' ==' → logprob: -4.327301979064941
    5. ''' → logprob: -4.827301979064941
    6. '==' → logprob: -5.202301979064941
    7. ' not' → logprob: -5.952301979064941
    8. ' ]' → logprob: -6.327301979064941
    9. ' ' → logprob: -6.702301979064941
    10. 'in' → logprob: -6.702301979064941

Token 210: ' ==' (ID: 951)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3271588981151581
    2. ' in' → logprob: -1.5771589279174805
    3. 'not' → logprob: -2.9521589279174805
    4. ' ==' → logprob: -4.8271589279174805
    5. '==' → logprob: -4.9521589279174805
    6. 'in' → logprob: -5.7021589279174805
    7. '!=' → logprob: -7.7021589279174805
    8. ' !=' → logprob: -7.7021589279174805
    9. ' ' → logprob: -8.07715892791748
    10. '=='' → logprob: -8.57715892791748

Token 211: ' "'' (ID: 12868)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7101263403892517
    2. '"'' → logprob: -0.7101263403892517
    3. ''' → logprob: -4.8351263999938965
    4. ''''' → logprob: -4.9601263999938965
    5. ''\' → logprob: -8.085125923156738
    6. '("'' → logprob: -8.085125923156738
    7. ' "'' → logprob: -8.335125923156738
    8. '("'"' → logprob: -8.335125923156738
    9. ''ap' → logprob: -8.335125923156738
    10. '''''' → logprob: -9.210125923156738

Token 212: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.17619453370571136
    2. ':' → logprob: -2.426194429397583
    3. '"' → logprob: -2.676194429397583
    4. ''' → logprob: -6.176194667816162
    5. '':' → logprob: -6.426194667816162
    6. 'n' → logprob: -8.426194190979004
    7. '":
' → logprob: -8.551194190979004
    8. '):' → logprob: -9.426194190979004
    9. ' ":' → logprob: -10.301194190979004
    10. ':
' → logprob: -10.551194190979004

Token 213: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32215380668640137
    2. '           ' → logprob: -1.3221538066864014
    3. ':' → logprob: -5.4471540451049805
    4. ':
' → logprob: -6.9471540451049805
    5. '       ' → logprob: -7.3221540451049805
    6. ' and' → logprob: -7.5721540451049805
    7. '):
' → logprob: -7.6971540451049805
    8. ',' → logprob: -7.8221540451049805
    9. '
' → logprob: -8.32215404510498
    10. '):' → logprob: -8.44715404510498

Token 214: ' mor' (ID: 4658)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6160981059074402
    2. ' mor' → logprob: -1.116098165512085
    3. '               ' → logprob: -2.241098165512085
    4. 'm' → logprob: -4.491097927093506
    5. 'i' → logprob: -5.616097927093506
    6. '                   ' → logprob: -5.866097927093506
    7. 'mor' (adapté à ' mor') → logprob: -5.991097927093506
    8. '   ' → logprob: -6.241097927093506
    9. '
' → logprob: -6.366097927093506
    10. ' i' → logprob: -7.866097927093506

Token 215: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.02333061210811138
    2. 'a' → logprob: -3.7733306884765625
    3. 's' → logprob: -9.773330688476562
    4. ' as' → logprob: -12.523330688476562
    5. '=' → logprob: -12.773330688476562
    6. '   ' → logprob: -13.148330688476562
    7. ')' → logprob: -13.398330688476562
    8. '```' → logprob: -13.398330688476562
    9. '	as' → logprob: -13.398330688476562
    10. ''as' → logprob: -13.523330688476562

Token 216: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000713266315869987
    2. '.' → logprob: -7.250713348388672
    3. '.ap' → logprob: -13.250713348388672
    4. ' .' → logprob: -13.875713348388672
    5. '.extend' → logprob: -15.375713348388672
    6. '.app' → logprob: -15.875713348388672
    7. '.=' → logprob: -16.625713348388672
    8. '.Append' → logprob: -16.750713348388672
    9. '_append' → logprob: -17.125713348388672
    10. 'append' → logprob: -17.375713348388672

Token 217: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.18120256066322327
    2. '('' → logprob: -1.8062025308609009
    3. '"' → logprob: -6.681202411651611
    4. '(' → logprob: -9.30620288848877
    5. '"s' → logprob: -10.18120288848877
    6. ''' → logprob: -10.93120288848877
    7. ''s' → logprob: -11.18120288848877
    8. '(s' → logprob: -11.55620288848877
    9. ''n' → logprob: -11.93120288848877
    10. '(n' → logprob: -12.05620288848877

Token 218: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00018768629524856806
    2. ''n' → logprob: -9.500187873840332
    3. 'n't' → logprob: -9.500187873840332
    4. 'nn' → logprob: -10.875187873840332
    5. '"' → logprob: -11.000187873840332
    6. ''' → logprob: -14.750187873840332
    7. '[n' → logprob: -15.375187873840332
    8. '
' → logprob: -15.375187873840332
    9. 'ng' → logprob: -15.625187873840332
    10. '")' → logprob: -15.750187873840332

Token 219: ''")
' (ID: 169837)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004327214322984219
    2. ''")
' → logprob: -5.629327297210693
    3. ''"' → logprob: -7.254327297210693
    4. 'n' → logprob: -12.004326820373535
    5. '\'' → logprob: -12.254326820373535
    6. ''"
' → logprob: -12.879326820373535
    7. ' '' → logprob: -13.879326820373535
    8. '')' → logprob: -13.879326820373535
    9. '''' → logprob: -14.379326820373535
    10. '"' → logprob: -14.504326820373535

Token 220: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00418809475377202
    2. '           ' → logprob: -5.754188060760498
    3. ')' → logprob: -7.379188060760498
    4. '                
' → logprob: -8.879188537597656
    5. '<|end|>' → logprob: -9.504188537597656
    6. ' ' → logprob: -10.504188537597656
    7. '                   ' → logprob: -10.629188537597656
    8. ',' → logprob: -11.004188537597656
    9. '                ' → logprob: -11.129188537597656
    10. '              ' → logprob: -11.379188537597656

Token 221: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.09820385277271271
    2. ' i' → logprob: -2.8482038974761963
    3. '               ' → logprob: -3.3482038974761963
    4. '                   ' → logprob: -8.473203659057617
    5. '           ' → logprob: -8.973203659057617
    6. '
' → logprob: -9.473203659057617
    7. '                
' → logprob: -10.973203659057617
    8. '   ' → logprob: -13.223203659057617
    9. '                ' → logprob: -13.348203659057617
    10. ' 
' → logprob: -13.723203659057617

Token 222: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004576446022838354
    2. ' +=' → logprob: -5.504576683044434
    3. '+' → logprob: -7.629576683044434
    4. '=' → logprob: -11.379576683044434
    5. ']+=' → logprob: -16.004575729370117
    6. '+="' → logprob: -16.129575729370117
    7. '+='' → logprob: -16.254575729370117
    8. '++' → logprob: -16.379575729370117
    9. '+=(' → logprob: -17.504575729370117
    10. '+
' → logprob: -17.504575729370117

Token 223: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003360582049936056
    2. ' ' → logprob: -8.000335693359375
    3. '1' → logprob: -15.375335693359375
    4. '
' → logprob: -15.875335693359375
    5. '   ' → logprob: -16.687835693359375
    6. '```' → logprob: -16.687835693359375
    7. '۲' → logprob: -17.500335693359375
    8. '２' → logprob: -17.562835693359375
    9. '3' → logprob: -18.687835693359375
    10. '  ' → logprob: -18.750335693359375

Token 224: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.735893965815194e-05
    2. ' ' → logprob: -11.000017166137695
    3. '1' → logprob: -14.875017166137695
    4. '3' → logprob: -15.875017166137695
    5. '   ' → logprob: -16.625017166137695
    6. '  ' → logprob: -17.000017166137695
    7. '
' → logprob: -17.125017166137695
    8. '```' → logprob: -18.000017166137695
    9. '۲' → logprob: -18.937517166137695
    10. '２' → logprob: -19.312517166137695

Token 225: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08227960765361786
    2. '       ' → logprob: -2.957279682159424
    3. '               ' → logprob: -4.082279682159424
    4. '
' → logprob: -4.957279682159424
    5. '<|end|>' → logprob: -6.457279682159424
    6. 'else' → logprob: -7.707279682159424
    7. 'elif' → logprob: -7.957279682159424
    8. '            
' → logprob: -8.707279205322266
    9. ')' → logprob: -9.332279205322266
    10. ' else' → logprob: -9.332279205322266

Token 226: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02384001389145851
    2. '               ' → logprob: -4.398839950561523
    3. '       ' → logprob: -4.523839950561523
    4. '<|end|>' → logprob: -8.898839950561523
    5. 'else' → logprob: -9.273839950561523
    6. '
' → logprob: -10.398839950561523
    7. ' else' → logprob: -10.523839950561523
    8. 'elif' → logprob: -10.648839950561523
    9. '```' → logprob: -10.773839950561523
    10. ')' → logprob: -11.023839950561523

Token 227: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37738966941833496
    2. ' else' → logprob: -2.002389669418335
    3. 'elif' → logprob: -2.627389669418335
    4. 'else' (adapté à ' else') → logprob: -2.752389669418335
    5. ' elif' → logprob: -3.377389669418335
    6. '       ' → logprob: -4.752389907836914
    7. '	elif' → logprob: -9.002389907836914
    8. '               ' → logprob: -9.002389907836914
    9. '<|end|>' → logprob: -10.002389907836914
    10. ' ' → logprob: -10.127389907836914

Token 228: ':
' (ID: 734)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4427776038646698
    2. ':' → logprob: -1.5677776336669922
    3. 'if' → logprob: -1.9427776336669922
    4. ':
' → logprob: -5.567777633666992
    5. '           ' → logprob: -6.942777633666992
    6. '       ' → logprob: -7.942777633666992
    7. ' :' → logprob: -8.067777633666992
    8. '   ' → logprob: -9.192777633666992
    9. 'If' → logprob: -9.442777633666992
    10. '               ' → logprob: -9.942777633666992

Token 229: '               ' (ID: 506)
  Prédit: ' mor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mor' → logprob: -0.34445834159851074
    2. '               ' → logprob: -2.2194583415985107
    3. ' if' → logprob: -2.5944583415985107
    4. '           ' → logprob: -3.2194583415985107
    5. 'if' → logprob: -3.3444583415985107
    6. 'm' → logprob: -4.34445858001709
    7. '   ' → logprob: -4.46945858001709
    8. 'mor' → logprob: -5.21945858001709
    9. '       ' → logprob: -6.96945858001709
    10. ' mora' → logprob: -7.21945858001709

Token 230: ' #' (ID: 1069)
  Prédit: ' mor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mor' → logprob: -0.4842110574245453
    2. 'm' → logprob: -1.1092110872268677
    3. ' if' → logprob: -3.734210968017578
    4. 'if' → logprob: -4.109210968017578
    5. 'mor' → logprob: -4.734210968017578
    6. '           ' → logprob: -6.484210968017578
    7. '   ' → logprob: -6.609210968017578
    8. '#' (adapté à ' #') → logprob: -7.734210968017578
    9. ' m' → logprob: -8.109210968017578
    10. ' mora' → logprob: -8.296710968017578

Token 231: ' '' (ID: 461)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8184390068054199
    2. 'm' → logprob: -0.9434390068054199
    3. ' mor' → logprob: -2.81843900680542
    4. '#' → logprob: -2.81843900680542
    5. ' if' → logprob: -3.44343900680542
    6. 'mor' → logprob: -4.44343900680542
    7. ' #' → logprob: -5.56843900680542
    8. 'If' → logprob: -7.50593900680542
    9. '   ' → logprob: -7.94343900680542
    10. 'i' → logprob: -8.130939483642578

Token 232: 'n' (ID: 77)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32076847553253174
    2. ' if' → logprob: -2.195768356323242
    3. 'm' → logprob: -2.320768356323242
    4. 'n' → logprob: -3.945768356323242
    5. ' mor' → logprob: -4.695768356323242
    6. '#' → logprob: -4.820768356323242
    7. ''' → logprob: -4.945768356323242
    8. 'i' → logprob: -5.195768356323242
    9. 'next' → logprob: -5.945768356323242
    10. ' #' → logprob: -6.070768356323242

Token 233: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.044071879237890244
    2. 'if' → logprob: -4.169071674346924
    3. '')' → logprob: -5.544071674346924
    4. ' if' → logprob: -6.419071674346924
    5. ''s' → logprob: -6.419071674346924
    6. ''''' → logprob: -6.419071674346924
    7. 'm' → logprob: -6.544071674346924
    8. ''
' → logprob: -7.044071674346924
    9. 'not' → logprob: -7.169071674346924
    10. '.append' → logprob: -7.169071674346924

Token 234: ' mora' (ID: 47294)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.7312024235725403
    2. ' alone' → logprob: -1.9812023639678955
    3. '           ' → logprob: -2.1062023639678955
    4. 'if' → logprob: -2.7312023639678955
    5. ' if' → logprob: -3.6062023639678955
    6. ' +=' → logprob: -3.8562023639678955
    7. ' is' → logprob: -4.481202602386475
    8. 'append' → logprob: -4.481202602386475
    9. '               ' → logprob: -4.606202602386475
    10. 'elif' → logprob: -4.606202602386475

Token 235: ' only' (ID: 1606)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1544395089149475
    2. '               ' → logprob: -2.4044394493103027
    3. '.append' → logprob: -3.2794394493103027
    4. '       ' → logprob: -6.029439449310303
    5. ':
' → logprob: -6.029439449310303
    6. 'm' → logprob: -6.404439449310303
    7. ',' → logprob: -6.529439449310303
    8. '            
' → logprob: -6.904439449310303
    9. ')' → logprob: -7.154439449310303
    10. '   ' → logprob: -7.404439449310303

Token 236: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17731085419654846
    2. '               ' → logprob: -2.5523109436035156
    3. '.append' → logprob: -2.8023109436035156
    4. '
' → logprob: -5.177310943603516
    5. 'm' → logprob: -5.552310943603516
    6. ' if' → logprob: -5.802310943603516
    7. ',' → logprob: -6.552310943603516
    8. ':
' → logprob: -6.802310943603516
    9. 'if' → logprob: -6.802310943603516
    10. ' =' → logprob: -6.927310943603516

Token 237: ' not' (ID: 625)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.17033563554286957
    2. 'i' → logprob: -1.9203356504440308
    3. ' (' → logprob: -5.04533576965332
    4. ' i' → logprob: -6.17033576965332
    5. '(' → logprob: -6.92033576965332
    6. '((' → logprob: -8.04533576965332
    7. '(not' → logprob: -9.42033576965332
    8. 'not' → logprob: -9.54533576965332
    9. '(
' → logprob: -10.92033576965332
    10. ' ' → logprob: -11.29533576965332

Token 238: ' part' (ID: 997)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.39638596773147583
    2. ' (' → logprob: -1.396385908126831
    3. 'i' → logprob: -3.771385908126831
    4. '(' → logprob: -3.771385908126831
    5. ' followed' → logprob: -4.77138614654541
    6. '('' → logprob: -5.02138614654541
    7. ' i' → logprob: -5.02138614654541
    8. '(V' → logprob: -5.89638614654541
    9. '(a' → logprob: -6.39638614654541
    10. '(n' → logprob: -6.52138614654541

Token 239: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.08968111872673035
    2. 'of' → logprob: -2.4646811485290527
    3. ' ' → logprob: -8.339680671691895
    4. '=' → logprob: -8.589680671691895
    5. '_of' → logprob: -9.714680671691895
    6. '           ' → logprob: -9.964680671691895
    7. '  ' → logprob: -10.339680671691895
    8. '   ' → logprob: -10.339680671691895
    9. '_' → logprob: -10.964680671691895
    10. ' =' → logprob: -11.589680671691895

Token 240: ' next' (ID: 2613)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0770723894238472
    2. ' a' → logprob: -3.3270723819732666
    3. '('' → logprob: -3.9520723819732666
    4. 'v' → logprob: -5.452072620391846
    5. 'V' → logprob: -5.577072620391846
    6. '{'' → logprob: -5.702072620391846
    7. 'ai' → logprob: -6.452072620391846
    8. ' vowel' → logprob: -6.452072620391846
    9. '{' → logprob: -7.327072620391846
    10. 'CON' → logprob: -7.452072620391846

Token 241: ' syll' (ID: 72448)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.20082566142082214
    2. 'v' → logprob: -2.3258256912231445
    3. ' syll' → logprob: -3.5758256912231445
    4. 'token' → logprob: -3.7008256912231445
    5. 's' → logprob: -4.5758256912231445
    6. 'yll' → logprob: -5.0758256912231445
    7. ' vowel' → logprob: -5.8258256912231445
    8. 'letter' → logprob: -6.3258256912231445
    9. 'con' → logprob: -6.4508256912231445
    10. 'char' → logprob: -6.9508256912231445

Token 242: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0003993296413682401
    2. 'a' → logprob: -8.000399589538574
    3. 'ab' → logprob: -10.250399589538574
    4. 'abe' → logprob: -12.000399589538574
    5. 'ables' → logprob: -12.375399589538574
    6. '[' → logprob: -12.500399589538574
    7. 'ABLE' → logprob: -13.625399589538574
    8. '   ' → logprob: -13.625399589538574
    9. 'abble' → logprob: -13.875399589538574
    10. 'nable' → logprob: -13.875399589538574

Token 243: '
' (ID: 198)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3650916516780853
    2. '           ' → logprob: -2.115091562271118
    3. ' and' → logprob: -2.490091562271118
    4. '       ' → logprob: -2.615091562271118
    5. ' else' → logprob: -4.990091800689697
    6. '               ' → logprob: -5.615091800689697
    7. ' elif' → logprob: -5.865091800689697
    8. ' (' → logprob: -5.990091800689697
    9. ' if' → logprob: -6.115091800689697
    10. ',' → logprob: -6.490091800689697

Token 244: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6447135806083679
    2. ' if' → logprob: -1.5197136402130127
    3. '           ' → logprob: -1.7697136402130127
    4. '               ' → logprob: -3.7697136402130127
    5. ' or' → logprob: -4.144713401794434
    6. ' elif' → logprob: -4.269713401794434
    7. ' and' → logprob: -4.644713401794434
    8. 'elif' → logprob: -5.019713401794434
    9. ' else' → logprob: -5.394713401794434
    10. ',' → logprob: -6.019713401794434

Token 245: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1283586472272873
    2. ' if' → logprob: -2.1283586025238037
    3. 'elif' → logprob: -6.753358840942383
    4. '           ' → logprob: -9.003358840942383
    5. '   ' → logprob: -10.253358840942383
    6. 'i' → logprob: -10.753358840942383
    7. ' elif' → logprob: -10.753358840942383
    8. '       ' → logprob: -11.128358840942383
    9. 'next' → logprob: -11.628358840942383
    10. '               ' → logprob: -12.003358840942383

Token 246: ' According' (ID: 16344)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.43351858854293823
    2. ' if' → logprob: -1.058518648147583
    3. 'elif' → logprob: -5.433518409729004
    4. ' elif' → logprob: -8.308518409729004
    5. 'i' → logprob: -10.308518409729004
    6. ' (' → logprob: -10.433518409729004
    7. ' i' → logprob: -10.558518409729004
    8. '   ' → logprob: -10.683518409729004
    9. ' next' → logprob: -10.808518409729004
    10. '           ' → logprob: -11.058518409729004

Token 247: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.03368719667196274
    2. 'to' → logprob: -3.408687114715576
    3. '_to' → logprob: -10.783687591552734
    4. ' if' → logprob: -11.783687591552734
    5. 'if' → logprob: -12.533687591552734
    6. 'i' → logprob: -13.658687591552734
    7. ' ' → logprob: -13.658687591552734
    8. '=' → logprob: -13.783687591552734
    9. 'To' → logprob: -13.783687591552734
    10. '       ' → logprob: -14.283687591552734

Token 248: ' problem' (ID: 4792)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14413174986839294
    2. ' i' → logprob: -2.269131660461426
    3. ' not' → logprob: -5.144131660461426
    4. ' (' → logprob: -5.269131660461426
    5. '(i' → logprob: -5.394131660461426
    6. 'not' → logprob: -5.644131660461426
    7. 'V' → logprob: -5.894131660461426
    8. 'CON' → logprob: -6.769131660461426
    9. ' V' → logprob: -6.894131660461426
    10. 'VO' → logprob: -7.019131660461426

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36939316987991333
    2. ' if' → logprob: -1.6193931102752686
    3. ' ,' → logprob: -2.7443931102752686
    4. ':' → logprob: -4.869393348693848
    5. ' and' → logprob: -4.994393348693848
    6. ' ' → logprob: -5.244393348693848
    7. ' at' → logprob: -5.369393348693848
    8. ''s' → logprob: -5.619393348693848
    9. ' the' → logprob: -5.869393348693848
    10. '<|end|>' → logprob: -5.994393348693848

Token 250: ' '' (ID: 461)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23718072474002838
    2. 'if' → logprob: -1.6121807098388672
    3. ' next' → logprob: -5.612180709838867
    4. ' i' → logprob: -5.612180709838867
    5. 'i' → logprob: -7.112180709838867
    6. '#' → logprob: -7.112180709838867
    7. ' mor' → logprob: -7.237180709838867
    8. 'next' → logprob: -7.237180709838867
    9. 'm' → logprob: -8.237180709838867
    10. '               ' → logprob: -8.362180709838867

Token 251: 'n' (ID: 77)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.15361513197422028
    2. '(i' → logprob: -2.6536152362823486
    3. ' i' → logprob: -3.1536152362823486
    4. ' (' → logprob: -3.9036152362823486
    5. '(' → logprob: -5.5286149978637695
    6. 'not' → logprob: -6.2786149978637695
    7. ' not' → logprob: -6.9036149978637695
    8. '((' → logprob: -7.6536149978637695
    9. ''i' → logprob: -8.27861499786377
    10. '(not' → logprob: -8.27861499786377

Token 252: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.022761888802051544
    2. '')' → logprob: -5.647761821746826
    3. ' '' → logprob: -5.897761821746826
    4. ' is' → logprob: -6.022761821746826
    5. ' not' → logprob: -6.397761821746826
    6. ''s' → logprob: -6.772761821746826
    7. 'not' → logprob: -6.772761821746826
    8. ' ' → logprob: -7.272761821746826
    9. 'next' → logprob: -7.272761821746826
    10. '
' → logprob: -7.522761821746826

Token 253: ' appears' (ID: 14518)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2504660189151764
    2. ' is' → logprob: -2.1254661083221436
    3. ' ==' → logprob: -3.5004661083221436
    4. ' in' → logprob: -4.1254658699035645
    5. ' if' → logprob: -4.6254658699035645
    6. 'not' → logprob: -4.8754658699035645
    7. '==' → logprob: -5.1254658699035645
    8. ' at' → logprob: -5.6254658699035645
    9. ' next' → logprob: -5.7504658699035645
    10. ' only' → logprob: -5.7504658699035645

Token 254: ' alone' (ID: 11238)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -1.0036342144012451
    2. ' only' → logprob: -1.5036342144012451
    3. ' if' → logprob: -2.628634214401245
    4. ' here' → logprob: -3.128634214401245
    5. ' alone' → logprob: -3.253634214401245
    6. ' and' → logprob: -3.378634214401245
    7. 'alone' → logprob: -3.503634214401245
    8. '           ' → logprob: -3.753634214401245
    9. ' at' → logprob: -3.753634214401245
    10. ' not' → logprob: -3.753634214401245

Token 255: ' only' (ID: 1606)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5781965255737305
    2. ' and' → logprob: -1.9531965255737305
    3. '       ' → logprob: -2.4531965255737305
    4. ' or' → logprob: -2.4531965255737305
    5. ' if' → logprob: -2.9531965255737305
    6. ',' → logprob: -3.7031965255737305
    7. ' as' → logprob: -4.0781965255737305
    8. '               ' → logprob: -4.2031965255737305
    9. ' in' → logprob: -5.7031965255737305
    10. ' at' → logprob: -5.7031965255737305

Token 256: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11756093800067902
    2. ' or' → logprob: -2.492560863494873
    3. 'if' → logprob: -3.617560863494873
    4. 'or' → logprob: -7.742560863494873
    5. ' when' → logprob: -7.992560863494873
    6. '           ' → logprob: -8.242561340332031
    7. ' in' → logprob: -9.742561340332031
    8. '       ' → logprob: -9.742561340332031
    9. ' ' → logprob: -9.867561340332031
    10. ' at' → logprob: -10.367561340332031

Token 257: ' followed' (ID: 12661)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.37508219480514526
    2. '(i' → logprob: -1.25008225440979
    3. ' i' → logprob: -4.250082015991211
    4. ' (' → logprob: -4.625082015991211
    5. '(' → logprob: -7.125082015991211
    6. 'next' → logprob: -7.500082015991211
    7. ' next' → logprob: -8.375082015991211
    8. 'not' → logprob: -8.375082015991211
    9. ' not' → logprob: -9.125082015991211
    10. '(not' → logprob: -9.750082015991211

Token 258: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.17982879281044006
    2. 'by' → logprob: -1.8048287630081177
    3. ' not' → logprob: -10.429828643798828
    4. 'not' → logprob: -10.429828643798828
    5. ' ' → logprob: -11.304828643798828
    6. ' either' → logprob: -12.054828643798828
    7. 'either' → logprob: -13.179828643798828
    8. 'e' → logprob: -13.804828643798828
    9. '_by' → logprob: -14.929828643798828
    10. '   ' → logprob: -14.929828643798828

Token 259: ' non' (ID: 2893)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.32892099022865295
    2. 'a' → logprob: -1.3289209604263306
    3. ' non' → logprob: -5.453920841217041
    4. 'non' → logprob: -5.453920841217041
    5. ' not' → logprob: -6.203920841217041
    6. ' conson' → logprob: -6.453920841217041
    7. 'not' → logprob: -7.078920841217041
    8. ' ' → logprob: -7.203920841217041
    9. ' vowel' → logprob: -7.453920841217041
    10. 'con' → logprob: -7.703920841217041

Token 260: '-v' (ID: 9827)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.013917254284024239
    2. 'V' → logprob: -5.638917446136475
    3. 'con' → logprob: -5.763917446136475
    4. ' vowel' → logprob: -5.888917446136475
    5. '-v' → logprob: -6.638917446136475
    6. '-' → logprob: -6.638917446136475
    7. 'a' → logprob: -7.388917446136475
    8. 'vo' → logprob: -8.263916969299316
    9. '-con' → logprob: -8.763916969299316
    10. '
' → logprob: -8.888916969299316

Token 261: 'owel' (ID: 27097)
  Prédit: 'owel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owel' → logprob: -0.04889051616191864
    2. 'owels' → logprob: -3.0488905906677246
    3. 'ovel' → logprob: -8.923890113830566
    4. 'ow' → logprob: -9.048890113830566
    5. '   ' → logprob: -11.548890113830566
    6. 'owl' → logprob: -12.048890113830566
    7. 'owe' → logprob: -12.298890113830566
    8. 'oc' → logprob: -12.673890113830566
    9. 'ower' → logprob: -12.673890113830566
    10. '```' → logprob: -12.798890113830566

Token 262: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28066572546958923
    2. '       ' → logprob: -2.280665636062622
    3. ' if' → logprob: -2.530665636062622
    4. ' and' → logprob: -3.780665636062622
    5. ' or' → logprob: -4.155665874481201
    6. 'elif' → logprob: -5.155665874481201
    7. '               ' → logprob: -5.655665874481201
    8. ' else' → logprob: -5.655665874481201
    9. ' elif' → logprob: -5.655665874481201
    10. 'else' → logprob: -6.530665874481201

Token 263: ' '' (ID: 461)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.3441462516784668
    2. ' non' → logprob: -2.094146251678467
    3. 'end' → logprob: -3.094146251678467
    4. ' end' → logprob: -3.094146251678467
    5. 'con' → logprob: -3.844146251678467
    6. ' conson' → logprob: -3.844146251678467
    7. ' at' → logprob: -4.969146251678467
    8. 'n' → logprob: -5.094146251678467
    9. '
' → logprob: -5.094146251678467
    10. ' the' → logprob: -6.344146251678467

Token 264: 'n' (ID: 77)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1694692224264145
    2. 'n' → logprob: -1.9194692373275757
    3. ' '' → logprob: -5.544469356536865
    4. ''n' → logprob: -6.419469356536865
    5. '')' → logprob: -6.544469356536865
    6. ' ' → logprob: -7.294469356536865
    7. ' ')' → logprob: -7.794469356536865
    8. '''' → logprob: -8.169468879699707
    9. ' n' → logprob: -8.669468879699707
    10. 'a' → logprob: -8.919468879699707

Token 265: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31639719009399414
    2. ' '' → logprob: -1.3163971900939941
    3. ' or' → logprob: -6.441397190093994
    4. 'e' → logprob: -8.566396713256836
    5. ''s' → logprob: -8.816396713256836
    6. '')' → logprob: -8.816396713256836
    7. ' ')' → logprob: -8.816396713256836
    8. ''or' → logprob: -9.066396713256836
    9. '}'' → logprob: -9.441396713256836
    10. '{'' → logprob: -9.441396713256836

Token 266: ' '' (ID: 461)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.4118320941925049
    2. ' so' → logprob: -1.2868320941925049
    3. ' i' → logprob: -3.786832094192505
    4. '           ' → logprob: -4.786831855773926
    5. ' and' → logprob: -4.911831855773926
    6. '       ' → logprob: -5.411831855773926
    7. ' if' → logprob: -5.661831855773926
    8. ' else' → logprob: -6.036831855773926
    9. 'i' → logprob: -6.161831855773926
    10. '               ' → logprob: -6.661831855773926

Token 267: 'y' (ID: 88)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.40628597140312195
    2. ' '' → logprob: -1.2812860012054443
    3. ' ')' → logprob: -4.156285762786865
    4. 'n' → logprob: -4.656285762786865
    5. ' ' → logprob: -4.656285762786865
    6. 'a' → logprob: -5.156285762786865
    7. 'i' → logprob: -5.781285762786865
    8. '')' → logprob: -6.031285762786865
    9. 'p' → logprob: -6.656285762786865
    10. 's' → logprob: -6.781285762786865

Token 268: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06238776817917824
    2. '')' → logprob: -3.812387704849243
    3. ' or' → logprob: -4.312387943267822
    4. '',' → logprob: -4.562387943267822
    5. ' '' → logprob: -5.062387943267822
    6. ',' → logprob: -6.937387943267822
    7. ''),' → logprob: -7.187387943267822
    8. 'a' → logprob: -7.562387943267822
    9. '{' → logprob: -7.562387943267822
    10. ')' → logprob: -7.687387943267822

Token 269: '               ' (ID: 506)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3245059549808502
    2. '           ' → logprob: -1.8245059251785278
    3. '       ' → logprob: -2.8245060443878174
    4. ' and' → logprob: -3.6995060443878174
    5. ' if' → logprob: -4.199505805969238
    6. ',' → logprob: -5.074505805969238
    7. '               ' → logprob: -6.324505805969238
    8. 'elif' → logprob: -6.574505805969238
    9. ' elif' → logprob: -6.699505805969238
    10. 'or' → logprob: -7.074505805969238

Token 270: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4755983352661133
    2. ' if' → logprob: -0.9755983352661133
    3. 'i' → logprob: -7.725598335266113
    4. ' i' → logprob: -7.975598335266113
    5. 'elif' → logprob: -8.600598335266113
    6. ' ' → logprob: -9.225598335266113
    7. '           ' → logprob: -9.225598335266113
    8. ' next' → logprob: -9.225598335266113
    9. '   ' → logprob: -9.600598335266113
    10. ' (' → logprob: -10.100598335266113

Token 271: ' but' (ID: 889)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.8013935089111328
    2. 'if' → logprob: -1.1763935089111328
    3. ' if' → logprob: -1.6763935089111328
    4. ' elif' → logprob: -2.926393508911133
    5. 'else' → logprob: -6.801393508911133
    6. ' next' → logprob: -7.801393508911133
    7. ' else' → logprob: -7.926393508911133
    8. '           ' → logprob: -9.301393508911133
    9. 'next' → logprob: -9.426393508911133
    10. '   ' → logprob: -9.676393508911133

Token 272: ' here' (ID: 2105)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.090667486190796
    2. ' (' → logprob: -1.340667486190796
    3. ' not' → logprob: -1.715667486190796
    4. '(i' → logprob: -2.090667486190796
    5. 'i' → logprob: -2.965667486190796
    6. 'not' → logprob: -3.590667486190796
    7. '(' → logprob: -5.090667724609375
    8. '((' → logprob: -5.340667724609375
    9. '(not' → logprob: -5.965667724609375
    10. ' True' → logprob: -6.215667724609375

Token 273: ' we' (ID: 581)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04393169283866882
    2. 'if' → logprob: -4.418931484222412
    3. ' not' → logprob: -4.793931484222412
    4. ' i' → logprob: -5.168931484222412
    5. ' we' → logprob: -5.543931484222412
    6. 'elif' → logprob: -5.668931484222412
    7. ' elif' → logprob: -5.668931484222412
    8. ',' → logprob: -6.543931484222412
    9. ' next' → logprob: -7.293931484222412
    10. '           ' → logprob: -7.668931484222412

Token 274: ' just' (ID: 1327)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5788171291351318
    2. ' if' → logprob: -2.078817129135132
    3. '           ' → logprob: -2.328817129135132
    4. 'continue' → logprob: -3.328817129135132
    5. 'if' → logprob: -3.453817129135132
    6. ' and' → logprob: -3.703817129135132
    7. ' must' → logprob: -4.078817367553711
    8. '       ' → logprob: -4.078817367553711
    9. ' ' → logprob: -4.453817367553711
    10. '+' → logprob: -5.078817367553711

Token 275: ' take' (ID: 2304)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.5532751679420471
    2. ' continue' → logprob: -1.6782751083374023
    3. ' if' → logprob: -2.6782751083374023
    4. 'if' → logprob: -2.9282751083374023
    5. ' add' → logprob: -3.3032751083374023
    6. 'continue' → logprob: -4.178275108337402
    7. 'elif' → logprob: -4.303275108337402
    8. ' look' → logprob: -4.678275108337402
    9. 'check' → logprob: -4.678275108337402
    10. ' consider' → logprob: -5.053275108337402

Token 276: ' single' (ID: 4590)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.113276958465576
    2. 'i' → logprob: -2.113276958465576
    3. ' the' → logprob: -2.113276958465576
    4. ' '' → logprob: -2.113276958465576
    5. 'm' → logprob: -2.238276958465576
    6. ' c' → logprob: -2.738276958465576
    7. 'if' → logprob: -3.113276958465576
    8. 'n' → logprob: -3.113276958465576
    9. ' n' → logprob: -3.613276958465576
    10. ' mor' → logprob: -3.613276958465576

Token 277: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17914815247058868
    2. ''n' → logprob: -2.5541481971740723
    3. ' '' → logprob: -3.0541481971740723
    4. ' n' → logprob: -4.304148197174072
    5. '   ' → logprob: -5.054148197174072
    6. 'c' → logprob: -5.304148197174072
    7. ''' → logprob: -5.554148197174072
    8. ''s' → logprob: -5.804148197174072
    9. '           ' → logprob: -5.929148197174072
    10. ' ' → logprob: -6.929148197174072

Token 278: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.061676347395405e-05
    2. ''' → logprob: -10.75005054473877
    3. ''n' → logprob: -10.87505054473877
    4. ' n' → logprob: -12.00005054473877
    5. 'c' → logprob: -13.25005054473877
    6. '')' → logprob: -14.12505054473877
    7. ' ' → logprob: -15.50005054473877
    8. '
' → logprob: -15.62505054473877
    9. ''s' → logprob: -15.75005054473877
    10. ' '' → logprob: -16.250051498413086

Token 279: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31813663244247437
    2. ''
' → logprob: -2.568136692047119
    3. '           ' → logprob: -2.818136692047119
    4. ' '' → logprob: -2.943136692047119
    5. ' if' → logprob: -3.693136692047119
    6. ' '
' → logprob: -3.943136692047119
    7. 'if' → logprob: -4.068136692047119
    8. ' and' → logprob: -5.193136692047119
    9. '')' → logprob: -6.193136692047119
    10. '',' → logprob: -6.193136692047119

Token 280: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06828092783689499
    2. '   ' → logprob: -3.8182809352874756
    3. '               ' → logprob: -4.0682806968688965
    4. '       ' → logprob: -4.1932806968688965
    5. '
' → logprob: -6.5682806968688965
    6. ' ' → logprob: -6.6932806968688965
    7. ':
' → logprob: -6.8182806968688965
    8. ',' → logprob: -6.9432806968688965
    9. ':' → logprob: -7.1932806968688965
    10. 'm' → logprob: -7.1932806968688965

Token 281: ' #' (ID: 1069)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1940424144268036
    2. 'if' → logprob: -2.194042444229126
    3. '           ' → logprob: -3.319042444229126
    4. ' mor' → logprob: -4.569042205810547
    5. ' if' → logprob: -4.944042205810547
    6. 'mor' → logprob: -5.444042205810547
    7. '   ' → logprob: -5.569042205810547
    8. '               ' → logprob: -6.444042205810547
    9. '       ' → logprob: -7.569042205810547
    10. '                   ' → logprob: -8.194042205810547

Token 282: ' However' (ID: 5551)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2258313000202179
    2. 'if' → logprob: -2.3508312702178955
    3. ' mor' → logprob: -2.8508312702178955
    4. ' if' → logprob: -3.9758312702178955
    5. '   ' → logprob: -4.350831508636475
    6. 'i' → logprob: -5.350831508636475
    7. '           ' → logprob: -5.725831508636475
    8. 'mor' → logprob: -6.225831508636475
    9. 'elif' → logprob: -6.475831508636475
    10. '       ' → logprob: -6.725831508636475

Token 283: ' parsing' (ID: 51039)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25740185379981995
    2. ' elif' → logprob: -2.882401943206787
    3. ' i' → logprob: -3.007401943206787
    4. '           ' → logprob: -3.632401943206787
    5. 'elif' → logprob: -4.007401943206787
    6. '               ' → logprob: -4.257401943206787
    7. 'if' → logprob: -4.382401943206787
    8. ',' → logprob: -4.507401943206787
    9. ' ' → logprob: -4.507401943206787
    10. ' else' → logprob: -5.382401943206787

Token 284: ' order' (ID: 2569)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.297101229429245
    2. ' i' → logprob: -1.9221012592315674
    3. ' if' → logprob: -2.6721012592315674
    4. ' =' → logprob: -5.047101020812988
    5. ' continues' → logprob: -5.547101020812988
    6. ' s' → logprob: -5.797101020812988
    7. 'i' → logprob: -5.797101020812988
    8. ' is' → logprob: -6.172101020812988
    9. '    ' → logprob: -6.297101020812988
    10. ',' → logprob: -6.547101020812988

Token 285: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.8188871145248413
    2. ' if' → logprob: -1.8188871145248413
    3. ' continues' → logprob: -1.8188871145248413
    4. ' elif' → logprob: -2.818887233734131
    5. '       ' → logprob: -2.943887233734131
    6. 'elif' → logprob: -3.193887233734131
    7. ':' → logprob: -3.193887233734131
    8. '               ' → logprob: -3.318887233734131
    9. ' =' → logprob: -3.443887233734131
    10. '           ' → logprob: -3.443887233734131

Token 286: ' safe' (ID: 7703)
  Prédit: 'important'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'important' → logprob: -0.6105968952178955
    2. ' important' → logprob: -1.4855968952178955
    3. ' to' → logprob: -2.3605968952178955
    4. ':' → logprob: -3.6105968952178955
    5. ' that' → logprob: -3.6105968952178955
    6. 'to' → logprob: -3.9855968952178955
    7. 'c' → logprob: -4.735596656799316
    8. 'critical' → logprob: -4.985596656799316
    9. ' c' → logprob: -5.110596656799316
    10. 'that' → logprob: -5.360596656799316

Token 287: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.564227283000946
    2. '               ' → logprob: -1.1892273426055908
    3. '       ' → logprob: -2.939227342605591
    4. ',' → logprob: -3.689227342605591
    5. ' ,' → logprob: -4.939227104187012
    6. ' and' → logprob: -5.064227104187012
    7. ':' → logprob: -5.314227104187012
    8. ' ' → logprob: -5.814227104187012
    9. ' for' → logprob: -5.939227104187012
    10. ' if' → logprob: -5.939227104187012

Token 288: ' consider' (ID: 3331)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2705824375152588
    2. ' continue' → logprob: -1.7705824375152588
    3. 'append' → logprob: -4.14558219909668
    4. 'consider' → logprob: -4.77058219909668
    5. 'process' → logprob: -5.52058219909668
    6. 'check' → logprob: -5.64558219909668
    7. 'increment' → logprob: -5.64558219909668
    8. 'i' → logprob: -5.77058219909668
    9. ' process' → logprob: -6.02058219909668
    10. 'add' → logprob: -6.27058219909668

Token 289: ' '' (ID: 461)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48211485147476196
    2. ' if' → logprob: -1.8571147918701172
    3. '       ' → logprob: -2.482114791870117
    4. '               ' → logprob: -3.232114791870117
    5. ' ' → logprob: -3.732114791870117
    6. 'if' → logprob: -4.357114791870117
    7. '   ' → logprob: -4.607114791870117
    8. 'elif' → logprob: -4.732114791870117
    9. ' elif' → logprob: -5.107114791870117
    10. 'n' → logprob: -5.482114791870117

Token 290: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6377027034759521
    2. ''' → logprob: -1.7627027034759521
    3. 'i' → logprob: -2.262702703475952
    4. 'c' → logprob: -3.262702703475952
    5. ' '' → logprob: -3.262702703475952
    6. '')' → logprob: -3.387702703475952
    7. ' ')' → logprob: -4.137702941894531
    8. 's' → logprob: -4.387702941894531
    9. ' n' → logprob: -4.512702941894531
    10. ''s' → logprob: -4.637702941894531

Token 291: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20049256086349487
    2. ' '' → logprob: -2.3254926204681396
    3. '')' → logprob: -4.3254923820495605
    4. ' only' → logprob: -4.7004923820495605
    5. ' as' → logprob: -4.7004923820495605
    6. ' ')' → logprob: -4.8254923820495605
    7. ''+' → logprob: -4.8254923820495605
    8. ' and' → logprob: -5.2004923820495605
    9. ' not' → logprob: -5.5754923820495605
    10. ' alone' → logprob: -5.7004923820495605

Token 292: ' as' (ID: 472)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25334617495536804
    2. ' and' → logprob: -2.5033462047576904
    3. '               ' → logprob: -3.0033462047576904
    4. ' as' → logprob: -3.6283462047576904
    5. ' if' → logprob: -3.7533462047576904
    6. '       ' → logprob: -4.503345966339111
    7. 'if' → logprob: -5.503345966339111
    8. ' only' → logprob: -5.628345966339111
    9. ':
' → logprob: -5.878345966339111
    10. ':' → logprob: -6.003345966339111

Token 293: ' mora' (ID: 47294)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.577032208442688
    2. ' a' → logprob: -0.952032208442688
    3. 'm' → logprob: -3.0770320892333984
    4. ' mora' → logprob: -6.952032089233398
    5. ' standalone' → logprob: -6.952032089233398
    6. 'single' → logprob: -7.077032089233398
    7. ' separate' → logprob: -7.452032089233398
    8. ' ' → logprob: -7.827032089233398
    9. 'n' → logprob: -7.952032089233398
    10. 'con' → logprob: -8.327032089233398

Token 294: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05262737721204758
    2. '               ' → logprob: -3.6776273250579834
    3. '       ' → logprob: -4.4276275634765625
    4. ',' → logprob: -5.0526275634765625
    5. '.' → logprob: -6.4276275634765625
    6. '.append' → logprob: -6.8026275634765625
    7. '   ' → logprob: -7.1776275634765625
    8. ' ,' → logprob: -7.6776275634765625
    9. ':' → logprob: -7.8026275634765625
    10. ' and' → logprob: -8.052627563476562

Token 295: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4199881851673126
    2. '       ' → logprob: -1.4199881553649902
    3. '   ' → logprob: -3.1699881553649902
    4. ':
' → logprob: -4.04498815536499
    5. ':' → logprob: -4.66998815536499
    6. 'm' → logprob: -4.66998815536499
    7. ',' → logprob: -5.29498815536499
    8. 'n' → logprob: -6.04498815536499
    9. '{
' → logprob: -6.16998815536499
    10. '               ' → logprob: -6.41998815536499

Token 296: ' gl' (ID: 2000)
  Prédit: ' mor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mor' → logprob: -0.26414763927459717
    2. '           ' → logprob: -1.7641476392745972
    3. 'm' → logprob: -3.2641477584838867
    4. '   ' → logprob: -5.264147758483887
    5. 'i' → logprob: -5.264147758483887
    6. 'mor' → logprob: -5.639147758483887
    7. '               ' → logprob: -5.889147758483887
    8. ' i' → logprob: -6.639147758483887
    9. '       ' → logprob: -6.764147758483887
    10. ' if' → logprob: -7.639147758483887

Token 297: ' =' (ID: 314)
  Prédit: 'obal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'obal' → logprob: -0.03448747470974922
    2. 'i' → logprob: -4.534487247467041
    3. 'if' → logprob: -4.659487247467041
    4. 'obals' → logprob: -5.034487247467041
    5. 'y' → logprob: -6.034487247467041
    6. 'oba' → logprob: -6.034487247467041
    7. 'o' → logprob: -7.784487247467041
    8. 'e' → logprob: -8.0344877243042
    9. '=' → logprob: -8.2844877243042
    10. 'c' → logprob: -8.6594877243042

Token 298: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9367390275001526
    2. ''s' → logprob: -1.4367389678955078
    3. '''' → logprob: -1.8117389678955078
    4. ' s' → logprob: -2.561738967895508
    5. ''' → logprob: -2.936738967895508
    6. 'i' → logprob: -4.186738967895508
    7. ' ' → logprob: -4.561738967895508
    8. ''i' → logprob: -5.061738967895508
    9. 'None' → logprob: -5.061738967895508
    10. 'c' → logprob: -5.311738967895508

Token 299: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01149032823741436
    2. ''n' → logprob: -4.636490345001221
    3. ''' → logprob: -7.136490345001221
    4. '"' → logprob: -7.136490345001221
    5. 'n't' → logprob: -10.511489868164062
    6. ' n' → logprob: -10.886489868164062
    7. ' '' → logprob: -10.886489868164062
    8. ''s' → logprob: -10.886489868164062
    9. ''"' → logprob: -11.386489868164062
    10. '"
' → logprob: -11.761489868164062

Token 300: '"
' (ID: 1092)
  Prédit: '"
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.07949288189411163
    2. '"' → logprob: -2.9544928073883057
    3. ''"
' → logprob: -4.079493045806885
    4. 'n' → logprob: -6.454493045806885
    5. '")
' → logprob: -6.704493045806885
    6. '")' → logprob: -6.704493045806885
    7. ''' → logprob: -6.954493045806885
    8. ''"' → logprob: -7.329493045806885
    9. ''
' → logprob: -8.079492568969727
    10. '           ' → logprob: -8.454492568969727

Token 301: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009838494472205639
    2. 'i' → logprob: -5.384838581085205
    3. '       ' → logprob: -6.009838581085205
    4. '               ' → logprob: -7.134838581085205
    5. '                   ' → logprob: -8.009838104248047
    6. '            
' → logprob: -8.134838104248047
    7. 'm' → logprob: -8.509838104248047
    8. 'if' → logprob: -8.509838104248047
    9. '
' → logprob: -8.634838104248047
    10. '[i' → logprob: -9.009838104248047

Token 302: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.8740748763084412
    2. 'm' → logprob: -1.249074935913086
    3. ' mor' → logprob: -1.999074935913086
    4. 'if' → logprob: -3.124074935913086
    5. ' if' → logprob: -3.249074935913086
    6. '           ' → logprob: -3.499074935913086
    7. 's' → logprob: -4.124074935913086
    8. ' i' → logprob: -4.374074935913086
    9. 'mor' → logprob: -5.999074935913086
    10. ' 
' → logprob: -6.499074935913086

Token 303: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16045108437538147
    2. ' +=' → logprob: -1.910451054573059
    3. '+' → logprob: -8.66045093536377
    4. '=' → logprob: -9.91045093536377
    5. '   ' → logprob: -14.03545093536377
    6. '1' → logprob: -14.16045093536377
    7. ' +' → logprob: -14.66045093536377
    8. ']+=' → logprob: -14.78545093536377
    9. ' =' → logprob: -15.03545093536377
    10. '```' → logprob: -15.41045093536377

Token 304: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.750035285949707
    4. '  ' → logprob: -18.750036239624023
    5. '```' → logprob: -19.312536239624023
    6. '+' → logprob: -19.625036239624023
    7. '１' → logprob: -19.687536239624023
    8. '0' → logprob: -19.750036239624023
    9. '       ' → logprob: -20.000036239624023
    10. '۱' → logprob: -20.312536239624023

Token 305: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '2' → logprob: -16.25007438659668
    4. '   ' → logprob: -16.68757438659668
    5. '
' → logprob: -17.12507438659668
    6. '```' → logprob: -17.25007438659668
    7. '１' → logprob: -17.75007438659668
    8. '0' → logprob: -17.93757438659668
    9. '۱' → logprob: -18.25007438659668
    10. '+' → logprob: -18.37507438659668

Token 306: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24807476997375488
    2. '       ' → logprob: -2.248074769973755
    3. '
' → logprob: -2.623074769973755
    4. 'm' → logprob: -4.373074531555176
    5. ' 
' → logprob: -4.373074531555176
    6. '            
' → logprob: -5.373074531555176
    7. '               ' → logprob: -5.873074531555176
    8. ' mor' → logprob: -5.998074531555176
    9. '        
' → logprob: -6.998074531555176
    10. '    
' → logprob: -7.123074531555176

Token 307: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5566524267196655
    2. '           ' → logprob: -0.9316524267196655
    3. 'm' → logprob: -4.056652545928955
    4. ' if' → logprob: -5.056652545928955
    5. 'if' → logprob: -5.181652545928955
    6. '   ' → logprob: -7.556652545928955
    7. '            
' → logprob: -7.806652545928955
    8. '.' → logprob: -8.056652069091797
    9. ' mor' → logprob: -8.306652069091797
    10. '<|end|>' → logprob: -8.306652069091797

Token 308: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6469806432723999
    2. 'if' → logprob: -1.2719806432724
    3. ' if' → logprob: -2.1469807624816895
    4. '       ' → logprob: -2.7719807624816895
    5. ' mor' → logprob: -5.2719807624816895
    6. 'while' → logprob: -5.5219807624816895
    7. '           ' → logprob: -6.1469807624816895
    8. ' while' → logprob: -6.5219807624816895
    9. '#' → logprob: -6.7719807624816895
    10. 'mor' (adapté à ' mor') → logprob: -7.7719807624816895

Token 309: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.020122652873396873
    2. 'a' → logprob: -4.020122528076172
    3. '.append' → logprob: -6.395122528076172
    4. '=' → logprob: -9.020122528076172
    5. 's' → logprob: -9.770122528076172
    6. '   ' → logprob: -10.645122528076172
    7. 'append' → logprob: -10.770122528076172
    8. '.' → logprob: -11.395122528076172
    9. ' =' → logprob: -11.770122528076172
    10. '```' → logprob: -12.145122528076172

Token 310: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.023250136524438858
    2. '.' → logprob: -3.773250102996826
    3. '.ap' → logprob: -12.898250579833984
    4. ' .' → logprob: -13.898250579833984
    5. '.app' → logprob: -14.023250579833984
    6. 'append' → logprob: -15.023250579833984
    7. '.add' → logprob: -17.773250579833984
    8. ' append' → logprob: -18.148250579833984
    9. '.extend' → logprob: -18.148250579833984
    10. '.push' → logprob: -18.273250579833984

Token 311: '(gl' (ID: 41099)
  Prédit: '(gl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(gl' → logprob: -0.00014120421838015318
    2. '("' → logprob: -9.500141143798828
    3. '('' → logprob: -10.250141143798828
    4. '(' → logprob: -10.500141143798828
    5. 'gl' → logprob: -13.125141143798828
    6. ' (' → logprob: -14.375141143798828
    7. '(
' → logprob: -15.750141143798828
    8. '(gr' → logprob: -16.125141143798828
    9. '(g' → logprob: -16.250141143798828
    10. '(fl' → logprob: -16.250141143798828

Token 312: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05563083291053772
    2. ')
' → logprob: -2.930630922317505
    3. '           ' → logprob: -7.680630683898926
    4. '       ' → logprob: -8.555630683898926
    5. ')
' → logprob: -9.430630683898926
    6. '               ' → logprob: -12.055630683898926
    7. ')return' → logprob: -13.555630683898926
    8. '   ' → logprob: -13.680630683898926
    9. ' )' → logprob: -14.055630683898926
    10. '')' → logprob: -14.055630683898926

Token 313: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044487569481134415
    2. '<|end|>' → logprob: -3.169487476348877
    3. '           ' → logprob: -7.669487476348877
    4. '<|end|>' → logprob: -8.794487953186035
    5. ')' → logprob: -9.044487953186035
    6. '   ' → logprob: -9.044487953186035
    7. 'elif' → logprob: -9.169487953186035
    8. ',' → logprob: -9.419487953186035
    9. '        
' → logprob: -9.669487953186035
    10. '
' → logprob: -10.169487953186035

Token 314: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009583485312759876
    2. 'elif' → logprob: -5.134583473205566
    3. ' elif' → logprob: -6.509583473205566
    4. 'else' → logprob: -6.884583473205566
    5. ' else' → logprob: -7.384583473205566
    6. '   ' → logprob: -8.759583473205566
    7. '	elif' → logprob: -9.134583473205566
    8. ' ' → logprob: -9.884583473205566
    9. '<|end|>' → logprob: -10.009583473205566
    10. '	' → logprob: -10.259583473205566

Token 315: ' check' (ID: 2371)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.3513804078102112
    2. 'elif' → logprob: -1.2263803482055664
    3. ' else' → logprob: -6.476380348205566
    4. '       ' → logprob: -6.976380348205566
    5. 'else' → logprob: -7.851380348205566
    6. '   ' → logprob: -10.851380348205566
    7. '	elif' → logprob: -10.976380348205566
    8. 'el' → logprob: -11.226380348205566
    9. ' el' → logprob: -12.476380348205566
    10. ' ' → logprob: -12.726380348205566

Token 316: ' for' (ID: 395)
  Prédit: ' elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.03118179924786091
    2. 'elif' → logprob: -3.531181812286377
    3. ' ' → logprob: -7.406181812286377
    4. ' else' → logprob: -8.031181335449219
    5. ' if' → logprob: -8.281181335449219
    6. '	elif' → logprob: -9.031181335449219
    7. '    ' → logprob: -10.156181335449219
    8. ' for' → logprob: -11.281181335449219
    9. ':' → logprob: -11.406181335449219
    10. '  ' → logprob: -11.781181335449219

Token 317: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9517479538917542
    2. ' i' → logprob: -1.5767478942871094
    3. ' vowels' → logprob: -2.2017478942871094
    4. 'v' → logprob: -2.4517478942871094
    5. ' c' → logprob: -3.0767478942871094
    6. ' ' → logprob: -3.0767478942871094
    7. 'c' → logprob: -3.4517478942871094
    8. 'V' → logprob: -3.5767478942871094
    9. ' vowel' → logprob: -4.201747894287109
    10. 'elif' → logprob: -4.701747894287109

Token 318: '3' (ID: 18)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7527223825454712
    2. 'elif' → logprob: -1.0027223825454712
    3. ' vowels' → logprob: -2.8777222633361816
    4. 'else' → logprob: -3.5027222633361816
    5. 'i' → logprob: -4.002722263336182
    6. ' elif' → logprob: -4.127722263336182
    7. ' vowel' → logprob: -4.377722263336182
    8. 'V' → logprob: -4.627722263336182
    9. 'a' → logprob: -5.377722263336182
    10. ' else' → logprob: -5.627722263336182

Token 319: '-char' (ID: 127189)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6358731389045715
    2. ' elif' → logprob: -0.8858731389045715
    3. ' ' → logprob: -3.6358730792999268
    4. ' if' → logprob: -3.8858730792999268
    5. 'if' → logprob: -5.010873317718506
    6. '  ' → logprob: -6.635873317718506
    7. '   ' → logprob: -7.010873317718506
    8. '	elif' → logprob: -7.135873317718506
    9. ' else' → logprob: -8.385872840881348
    10. '    ' → logprob: -8.385872840881348

Token 320: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7590490579605103
    2. 'elif' → logprob: -1.2590490579605103
    3. ' if' → logprob: -1.6340490579605103
    4. ' elif' → logprob: -3.2590489387512207
    5. 's' → logprob: -4.759048938751221
    6. '<|end|>' → logprob: -6.759048938751221
    7. '       ' → logprob: -7.259048938751221
    8. '   ' → logprob: -7.759048938751221
    9. 'token' → logprob: -7.884048938751221
    10. '	elif' → logprob: -8.009049415588379

Token 321: 'C' (ID: 34)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3602374792099
    2. '<|end|>' → logprob: -1.4852374792099
    3. '       ' → logprob: -1.8602374792099
    4. 'elif' → logprob: -1.9852374792099
    5. ' elif' → logprob: -2.4852375984191895
    6. 's' → logprob: -3.2352375984191895
    7. ')' → logprob: -3.6102375984191895
    8. '   ' → logprob: -4.4852375984191895
    9. '        ' → logprob: -4.6102375984191895
    10. '<|end|>' → logprob: -4.7352375984191895

Token 322: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5998666286468506
    2. 'elif' → logprob: -1.9748666286468506
    3. ' if' → logprob: -2.4748666286468506
    4. ' ' → logprob: -2.8498666286468506
    5. '<|end|>' → logprob: -3.4748666286468506
    6. 'if' → logprob: -3.4748666286468506
    7. ' elif' → logprob: -3.5998666286468506
    8. ',' → logprob: -3.9748666286468506
    9. ' )' → logprob: -4.97486686706543
    10. ' else' → logprob: -5.09986686706543

Token 323: ' y' (ID: 342)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7193466424942017
    2. 'V' → logprob: -1.0943466424942017
    3. ' V' → logprob: -2.969346523284912
    4. ' ' → logprob: -3.094346523284912
    5. 'i' → logprob: -4.219346523284912
    6. ' vowel' → logprob: -4.344346523284912
    7. 'a' → logprob: -4.719346523284912
    8. ''' → logprob: -5.219346523284912
    9. '   ' → logprob: -5.219346523284912
    10. '  ' → logprob: -5.219346523284912

Token 324: ' +' (ID: 659)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9349950551986694
    2. 'o' → logprob: -1.1849950551986694
    3. 'u' → logprob: -1.6849950551986694
    4. 'i' → logprob: -3.184995174407959
    5. '{' → logprob: -4.059995174407959
    6. ')' → logprob: -4.434995174407959
    7. '=' → logprob: -4.809995174407959
    8. ' ' → logprob: -5.059995174407959
    9. '+' → logprob: -5.434995174407959
    10. 'e' → logprob: -5.559995174407959

Token 325: ' V' (ID: 631)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5878401398658752
    2. 'a' → logprob: -0.8378401398658752
    3. 'o' → logprob: -4.5878400802612305
    4. ' vowel' → logprob: -6.5878400802612305
    5. 'e' → logprob: -9.21284008026123
    6. ' vowels' → logprob: -9.83784008026123
    7. 'v' → logprob: -10.83784008026123
    8. 'ū' → logprob: -11.33784008026123
    9. '
' → logprob: -11.33784008026123
    10. 'ō' → logprob: -11.83784008026123

Token 326: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2434656023979187
    2. 'if' → logprob: -1.6184656620025635
    3. 'owel' → logprob: -5.618465423583984
    4. '')' → logprob: -6.118465423583984
    5. ' if' → logprob: -6.118465423583984
    6. 'e' → logprob: -6.368465423583984
    7. 'a' → logprob: -6.368465423583984
    8. '){' → logprob: -7.243465423583984
    9. '{' → logprob: -7.368465423583984
    10. '   ' → logprob: -7.743465423583984

Token 327: ' mora' (ID: 47294)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.4761549234390259
    2. ' elif' → logprob: -1.2261549234390259
    3. '       ' → logprob: -2.6011548042297363
    4. '	elif' → logprob: -5.226154804229736
    5. '   ' → logprob: -6.851154804229736
    6. ' else' → logprob: -7.101154804229736
    7. 'else' → logprob: -7.226154804229736
    8. ':' → logprob: -7.226154804229736
    9. ',' → logprob: -7.476154804229736
    10. ' if' → logprob: -7.601154804229736

Token 328: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6244500875473022
    2. '       ' → logprob: -1.1244500875473022
    3. ' elif' → logprob: -1.9994500875473022
    4. '	elif' → logprob: -6.124450206756592
    5. ',' → logprob: -7.499450206756592
    6. '   ' → logprob: -8.249449729919434
    7. ' else' → logprob: -8.874449729919434
    8. 'el' → logprob: -8.999449729919434
    9. 'else' → logprob: -8.999449729919434
    10. ':' → logprob: -9.249449729919434

Token 329: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3196756839752197
    2. ' elif' → logprob: -1.4446756839752197
    3. '       ' → logprob: -3.4446756839752197
    4. '	elif' → logprob: -5.944675445556641
    5. '   ' → logprob: -6.694675445556641
    6. ':' → logprob: -7.694675445556641
    7. 'else' → logprob: -8.44467544555664
    8. ',' → logprob: -8.44467544555664
    9. ' else' → logprob: -8.69467544555664
    10. '    ' → logprob: -8.81967544555664

Token 330: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.6215037703514099
    2. 'elif' (adapté à ' elif') → logprob: -1.1215038299560547
    3. '       ' → logprob: -1.9965038299560547
    4. '	elif' → logprob: -7.121503829956055
    5. ' ' → logprob: -8.871503829956055
    6. '   ' → logprob: -9.496503829956055
    7. ' else' → logprob: -9.871503829956055
    8. ' if' → logprob: -10.746503829956055
    9. '    ' → logprob: -10.746503829956055
    10. 'else' → logprob: -11.121503829956055

Token 331: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18111304938793182
    2. ' i' → logprob: -2.3061130046844482
    3. 'c' → logprob: -2.9311130046844482
    4. ' c' → logprob: -4.556113243103027
    5. ' (' → logprob: -6.806113243103027
    6. '(i' → logprob: -7.556113243103027
    7. ' ' → logprob: -8.181113243103027
    8. '   ' → logprob: -9.681113243103027
    9. '(c' → logprob: -10.056113243103027
    10. '(' → logprob: -10.056113243103027

Token 332: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3485155999660492
    2. ' +' → logprob: -1.2235156297683716
    3. ' <' → logprob: -10.348515510559082
    4. ' ' → logprob: -11.223515510559082
    5. '+i' → logprob: -11.473515510559082
    6. '<' → logprob: -12.723515510559082
    7. '＋' → logprob: -13.223515510559082
    8. '<len' → logprob: -13.536015510559082
    9. ' <=' → logprob: -13.598515510559082
    10. '<=' → logprob: -14.536015510559082

Token 333: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5843840837478638
    2. '1' → logprob: -0.8343840837478638
    3. ' ' → logprob: -4.834383964538574
    4. '3' → logprob: -8.084383964538574
    5. 'len' → logprob: -9.709383964538574
    6. '+' → logprob: -10.584383964538574
    7. '{' → logprob: -11.584383964538574
    8. '0' → logprob: -11.896883964538574
    9. '4' → logprob: -12.209383964538574
    10. 'n' → logprob: -12.396883964538574

Token 334: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.09111951291561127
    2. '<' → logprob: -2.4661195278167725
    3. '+' → logprob: -6.841119289398193
    4. '<n' → logprob: -7.466119289398193
    5. '<len' → logprob: -7.716119289398193
    6. ' +' → logprob: -9.591119766235352
    7. ' ' → logprob: -11.591119766235352
    8. '<s' → logprob: -13.591119766235352
    9. ')' → logprob: -13.966119766235352
    10. 'and' → logprob: -14.091119766235352

Token 335: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3132736384868622
    2. ' n' → logprob: -1.3132736682891846
    3. 'len' → logprob: -11.813273429870605
    4. '	n' → logprob: -13.813273429870605
    5. ' len' → logprob: -13.813273429870605
    6. 's' → logprob: -14.063273429870605
    7. ' ' → logprob: -14.938273429870605
    8. '=n' → logprob: -15.438273429870605
    9. ')n' → logprob: -15.438273429870605
    10. '(n' → logprob: -15.813273429870605

Token 336: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01417984813451767
    2. 'and' → logprob: -4.264179706573486
    3. ' ' → logprob: -11.514180183410645
    4. ':' → logprob: -13.264180183410645
    5. ' a' → logprob: -13.764180183410645
    6. '   ' → logprob: -14.514180183410645
    7. ':
' → logprob: -14.514180183410645
    8. ',' → logprob: -15.014180183410645
    9. ' an' → logprob: -15.014180183410645
    10. '<|end|>' → logprob: -15.014180183410645

Token 337: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030293038114905357
    2. ' s' → logprob: -3.5302929878234863
    3. 'c' → logprob: -7.655292987823486
    4. ' c' → logprob: -10.655293464660645
    5. ' ' → logprob: -10.905293464660645
    6. '(s' → logprob: -11.655293464660645
    7. ' (' → logprob: -12.155293464660645
    8. '   ' → logprob: -12.655293464660645
    9. '{s' → logprob: -12.780293464660645
    10. '	s' → logprob: -12.905293464660645

Token 338: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.517272024415433e-05
    2. '[' → logprob: -10.125075340270996
    3. 'i' → logprob: -11.875075340270996
    4. ' [' → logprob: -12.250075340270996
    5. '[
' → logprob: -12.500075340270996
    6. '[next' → logprob: -12.625075340270996
    7. '<|end|>' → logprob: -13.125075340270996
    8. '{i' → logprob: -13.375075340270996
    9. '[s' → logprob: -13.500075340270996
    10. ')' → logprob: -14.125075340270996

Token 339: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6909891366958618
    2. ']' → logprob: -0.8159891366958618
    3. ']+' → logprob: -3.3159890174865723
    4. ' +' → logprob: -4.315989017486572
    5. ']=='' → logprob: -6.440989017486572
    6. ']['' → logprob: -6.940989017486572
    7. ']!='' → logprob: -7.065989017486572
    8. '+i' → logprob: -7.190989017486572
    9. ' in' → logprob: -7.190989017486572
    10. ']==' → logprob: -7.565989017486572

Token 340: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08920280635356903
    2. 'in' → logprob: -2.464202880859375
    3. ' not' → logprob: -9.464202880859375
    4. ' ' → logprob: -9.964202880859375
    5. 'i' → logprob: -10.589202880859375
    6. ')' → logprob: -10.714202880859375
    7. 'not' → logprob: -10.839202880859375
    8. ']' → logprob: -11.464202880859375
    9. '+' → logprob: -11.714202880859375
    10. 'is' → logprob: -11.839202880859375

Token 341: ' CON' (ID: 5802)
  Prédit: 'CON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CON' → logprob: -0.0015159345930442214
    2. ' CON' → logprob: -6.501515865325928
    3. '(CON' → logprob: -11.501516342163086
    4. '   ' → logprob: -14.251516342163086
    5. 'VO' → logprob: -14.251516342163086
    6. ' ' → logprob: -14.501516342163086
    7. 'VOICE' → logprob: -14.501516342163086
    8. '{' → logprob: -15.501516342163086
    9. '_CON' → logprob: -15.626516342163086
    10. '{'' → logprob: -15.751516342163086

Token 342: 'SON' (ID: 4214)
  Prédit: 'SON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SON' → logprob: -0.00011367550177965313
    2. 'S' → logprob: -9.875113487243652
    3. 'ONS' → logprob: -10.125113487243652
    4. 'CON' → logprob: -11.750113487243652
    5. 'ON' → logprob: -12.375113487243652
    6. 'CONS' → logprob: -12.625113487243652
    7. 'son' → logprob: -12.875113487243652
    8. 'OS' → logprob: -14.125113487243652
    9. '{' → logprob: -14.250113487243652
    10. 'SO' → logprob: -14.375113487243652

Token 343: 'ANTS' (ID: 96531)
  Prédit: 'ANTS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANTS' → logprob: -8.542423165636137e-05
    2. 'ants' → logprob: -9.625085830688477
    3. 'N' → logprob: -12.625085830688477
    4. '_' → logprob: -12.750085830688477
    5. 'S' → logprob: -12.750085830688477
    6. '
' → logprob: -13.250085830688477
    7. 'ENTS' → logprob: -13.625085830688477
    8. 'TS' → logprob: -13.625085830688477
    9. '{' → logprob: -13.750085830688477
    10. ' ants' → logprob: -14.000085830688477

Token 344: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07890410721302032
    2. 'and' → logprob: -2.578904151916504
    3. ' ' → logprob: -11.953904151916504
    4. '   ' → logprob: -12.328904151916504
    5. '	and' → logprob: -13.078904151916504
    6. '    ' → logprob: -14.828904151916504
    7. '       ' → logprob: -15.578904151916504
    8. '  ' → logprob: -15.953904151916504
    9. ',' → logprob: -16.203903198242188
    10. '<|end|>' → logprob: -16.578903198242188

Token 345: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3425019085407257
    2. 's' → logprob: -1.3425018787384033
    3. ' (' → logprob: -3.7175018787384033
    4. '{s' → logprob: -6.342502117156982
    5. '(s' → logprob: -6.717502117156982
    6. '{'' → logprob: -7.467502117156982
    7. ' {'' → logprob: -7.967502117156982
    8. ' ' → logprob: -8.217501640319824
    9. '(' → logprob: -9.092501640319824
    10. '{' → logprob: -9.717501640319824

Token 346: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011093381908722222
    2. '[' → logprob: -9.250110626220703
    3. 'i' → logprob: -11.625110626220703
    4. '{i' → logprob: -13.750110626220703
    5. '+' → logprob: -14.000110626220703
    6. '(i' → logprob: -14.125110626220703
    7. '[
' → logprob: -14.750110626220703
    8. '[user' → logprob: -15.000110626220703
    9. '[++' → logprob: -15.000110626220703
    10. '<|end|>' → logprob: -15.250110626220703

Token 347: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007867562817409635
    2. ' +' → logprob: -7.250786781311035
    3. '+i' → logprob: -10.750786781311035
    4. '[' → logprob: -11.125786781311035
    5. ']' → logprob: -11.375786781311035
    6. 'i' → logprob: -12.375786781311035
    7. '1' → logprob: -12.500786781311035
    8. '+
' → logprob: -12.875786781311035
    9. '[i' → logprob: -12.875786781311035
    10. ']+' → logprob: -12.875786781311035

Token 348: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001302374730585143
    2. ' ' → logprob: -9.750130653381348
    3. '2' → logprob: -9.875130653381348
    4. '{' → logprob: -12.812630653381348
    5. '3' → logprob: -12.937630653381348
    6. '0' → logprob: -13.062630653381348
    7. '+' → logprob: -13.250130653381348
    8. '   ' → logprob: -13.312630653381348
    9. '
' → logprob: -13.500130653381348
    10. '```' → logprob: -14.375130653381348

Token 349: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.058458853513002396
    2. ']==' → logprob: -3.3084588050842285
    3. ']=='' → logprob: -3.9334588050842285
    4. '']=='' → logprob: -8.933459281921387
    5. '=='' → logprob: -8.933459281921387
    6. '']' → logprob: -9.058459281921387
    7. '==' → logprob: -9.183459281921387
    8. ' ==' → logprob: -9.558459281921387
    9. ' in' → logprob: -10.433459281921387
    10. ' ]' → logprob: -10.933459281921387

Token 350: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.581702709197998
    2. '==' → logprob: -1.206702709197998
    3. '=='' → logprob: -1.956702709197998
    4. ' =='' → logprob: -7.956702709197998
    5. '==='' → logprob: -10.581703186035156
    6. '='' → logprob: -10.581703186035156
    7. ''' → logprob: -10.956703186035156
    8. '=' → logprob: -11.081703186035156
    9. ' in' → logprob: -11.206703186035156
    10. 'y' → logprob: -11.331703186035156

Token 351: ' '' (ID: 461)
  Prédit: ''y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -7.195421494543552e-05
    2. '‘y' → logprob: -9.62507152557373
    3. ' '' → logprob: -12.87507152557373
    4. ''' → logprob: -13.00007152557373
    5. '"' → logprob: -14.25007152557373
    6. 'y' → logprob: -15.62507152557373
    7. '’y' → logprob: -15.75007152557373
    8. ''ny' → logprob: -17.500072479248047
    9. ''u' → logprob: -18.000072479248047
    10. '('' → logprob: -18.125072479248047

Token 352: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0052414643578231335
    2. ''y' → logprob: -5.255241394042969
    3. ''' → logprob: -12.005241394042969
    4. '‘y' → logprob: -14.255241394042969
    5. 'y's' → logprob: -14.505241394042969
    6. ' y' → logprob: -15.880241394042969
    7. 'ゃ' → logprob: -15.880241394042969
    8. '	y' → logprob: -16.25524139404297
    9. '’y' → logprob: -17.00524139404297
    10. '"' → logprob: -18.38024139404297

Token 353: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00017469677550252527
    2. ' and' → logprob: -9.250174522399902
    3. 'a' → logprob: -10.750174522399902
    4. 'and' → logprob: -11.250174522399902
    5. 'i' → logprob: -11.375174522399902
    6. ' '' → logprob: -11.750174522399902
    7. 'e' → logprob: -12.000174522399902
    8. '''' → logprob: -12.875174522399902
    9. ''''' → logprob: -12.875174522399902
    10. '"' → logprob: -13.000174522399902

Token 354: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029752805829048157
    2. 'and' → logprob: -3.529752731323242
    3. ' ' → logprob: -13.154752731323242
    4. '	and' → logprob: -14.779752731323242
    5. '<|end|>' → logprob: -16.904752731323242
    6. ',' → logprob: -17.779752731323242
    7. '  ' → logprob: -18.029752731323242
    8. '   ' → logprob: -18.154752731323242
    9. ' и' → logprob: -18.404752731323242
    10. '           ' → logprob: -18.654752731323242

Token 355: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22543451189994812
    2. ' s' → logprob: -1.6004345417022705
    3. ' ' → logprob: -11.725434303283691
    4. '(s' → logprob: -12.725434303283691
    5. 'i' → logprob: -13.100434303283691
    6. '   ' → logprob: -13.225434303283691
    7. ' (' → logprob: -13.225434303283691
    8. ' ' → logprob: -14.100434303283691
    9. '	s' → logprob: -14.350434303283691
    10. '{s' → logprob: -14.850434303283691

Token 356: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00040648187859915197
    2. 'i' → logprob: -7.875406265258789
    3. '{i' → logprob: -10.750406265258789
    4. '(i' → logprob: -13.750406265258789
    5. '[' → logprob: -13.750406265258789
    6. ' i' → logprob: -14.000406265258789
    7. '[
' → logprob: -15.000406265258789
    8. 's' → logprob: -15.375406265258789
    9. '+' → logprob: -15.375406265258789
    10. 'e' → logprob: -15.500406265258789

Token 357: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.5822400857578032e-05
    2. '2' → logprob: -11.125025749206543
    3. ' +' → logprob: -11.875025749206543
    4. '[' → logprob: -13.625025749206543
    5. '+i' → logprob: -13.875025749206543
    6. ']' → logprob: -14.625025749206543
    7. ']+' → logprob: -14.750025749206543
    8. 'i' → logprob: -14.750025749206543
    9. '+
' → logprob: -15.375025749206543
    10. '[i' → logprob: -16.25002670288086

Token 358: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.018249792978167534
    2. '1' → logprob: -4.018249988555908
    3. '0' → logprob: -10.01824951171875
    4. ' ' → logprob: -10.64324951171875
    5. '+' → logprob: -12.26824951171875
    6. 'i' → logprob: -12.51824951171875
    7. '   ' → logprob: -12.89324951171875
    8. '
' → logprob: -13.01824951171875
    9. '{
' → logprob: -13.01824951171875
    10. '```' → logprob: -13.14324951171875

Token 359: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006855320185422897
    2. 'in' → logprob: -5.131855487823486
    3. ']' → logprob: -7.131855487823486
    4. ' ' → logprob: -9.881855010986328
    5. ')' → logprob: -10.631855010986328
    6. '']' → logprob: -11.381855010986328
    7. '<|end|>' → logprob: -11.381855010986328
    8. 'In' → logprob: -12.381855010986328
    9. ''' → logprob: -12.381855010986328
    10. '}' → logprob: -12.756855010986328

Token 360: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038079943507909775
    2. 'in' → logprob: -3.2880799770355225
    3. ' ' → logprob: -10.288080215454102
    4. ')' → logprob: -13.538080215454102
    5. ''' → logprob: -14.163080215454102
    6. ' '' → logprob: -14.913080215454102
    7. '  ' → logprob: -15.038080215454102
    8. 'In' → logprob: -15.038080215454102
    9. ' ' → logprob: -15.163080215454102
    10. ''in' → logprob: -15.413080215454102

Token 361: ' {'' (ID: 11881)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0005569627974182367
    2. ' V' → logprob: -7.500556945800781
    3. '{'' → logprob: -12.750556945800781
    4. 'VO' → logprob: -15.125556945800781
    5. '	V' → logprob: -15.500556945800781
    6. ' ' → logprob: -15.875556945800781
    7. '
' → logprob: -16.37555694580078
    8. '{' → logprob: -16.50055694580078
    9. ''' → logprob: -16.75055694580078
    10. '   ' → logprob: -17.00055694580078

Token 362: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01630004495382309
    2. ''a' → logprob: -4.266300201416016
    3. ''' → logprob: -6.766300201416016
    4. '{'' → logprob: -7.641300201416016
    5. '{' → logprob: -8.891300201416016
    6. '['' → logprob: -9.141300201416016
    7. '"a' → logprob: -9.391300201416016
    8. 'ae' → logprob: -10.391300201416016
    9. ' a' → logprob: -10.891300201416016
    10. '{"' → logprob: -11.516300201416016

Token 363: '','' (ID: 4074)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1326475888490677
    2. 'e' → logprob: -2.6326475143432617
    3. '','' → logprob: -3.1326475143432617
    4. '',' → logprob: -5.382647514343262
    5. ''i' → logprob: -5.757647514343262
    6. 'a' → logprob: -7.757647514343262
    7. ''' → logprob: -8.507647514343262
    8. ''e' → logprob: -8.757647514343262
    9. ',' → logprob: -9.382647514343262
    10. ','' → logprob: -10.632647514343262

Token 364: 'u' (ID: 84)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06244499981403351
    2. 'u' → logprob: -2.9374449253082275
    3. 'e' → logprob: -4.937445163726807
    4. 'o' → logprob: -8.187444686889648
    5. ''i' → logprob: -10.562444686889648
    6. 'a' → logprob: -11.562444686889648
    7. ' i' → logprob: -11.812444686889648
    8. ''u' → logprob: -12.187444686889648
    9. ''' → logprob: -12.437444686889648
    10. 'и' → logprob: -12.687444686889648

Token 365: '','' (ID: 4074)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.21346266567707062
    2. '','' → logprob: -1.7134627103805542
    3. ''e' → logprob: -4.838462829589844
    4. ''' → logprob: -6.713462829589844
    5. '',' → logprob: -6.838462829589844
    6. ',e' → logprob: -6.963462829589844
    7. 'o' → logprob: -7.338462829589844
    8. ''o' → logprob: -9.588462829589844
    9. ','' → logprob: -10.213462829589844
    10. 'a' → logprob: -11.338462829589844

Token 366: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.3143905997276306
    2. 'e' → logprob: -1.3143906593322754
    3. 'i' → logprob: -6.814390659332275
    4. 'a' → logprob: -11.064390182495117
    5. '	o' → logprob: -11.939390182495117
    6. ''o' → logprob: -12.564390182495117
    7. '	e' → logprob: -13.814390182495117
    8. ''e' → logprob: -14.189390182495117
    9. ' o' → logprob: -14.314390182495117
    10. 'u' → logprob: -14.939390182495117

Token 367: ''}' (ID: 17352)
  Prédit: ''}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.04125991463661194
    2. '','' → logprob: -3.416260004043579
    3. '',' → logprob: -5.291259765625
    4. '}' → logprob: -7.166259765625
    5. ' '}' → logprob: -7.291259765625
    6. ''' → logprob: -7.541259765625
    7. '':' → logprob: -8.791259765625
    8. 'e' → logprob: -9.041259765625
    9. ''}
' → logprob: -9.916259765625
    10. 'a' → logprob: -10.416259765625

Token 368: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015323326922953129
    2. ':
' → logprob: -4.265323162078857
    3. '):' → logprob: -7.265323162078857
    4. '           ' → logprob: -8.765323638916016
    5. '':' → logprob: -9.390323638916016
    6. '   ' → logprob: -9.640323638916016
    7. ' and' → logprob: -9.890323638916016
    8. '):
' → logprob: -10.140323638916016
    9. '       ' → logprob: -10.265323638916016
    10. '}:' → logprob: -11.265323638916016

Token 369: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5557017922401428
    2. '           ' → logprob: -0.9307017922401428
    3. ':
' → logprob: -3.805701732635498
    4. ' and' → logprob: -5.430701732635498
    5. '       ' → logprob: -6.180701732635498
    6. '):' → logprob: -6.930701732635498
    7. '               ' → logprob: -7.680701732635498
    8. '{' → logprob: -8.055702209472656
    9. ',' → logprob: -8.055702209472656
    10. ' :' → logprob: -8.430702209472656

Token 370: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.48880499601364136
    2. 'gl' → logprob: -1.7388050556182861
    3. '           ' → logprob: -2.113805055618286
    4. '               ' → logprob: -2.613805055618286
    5. 'mor' (adapté à ' mor') → logprob: -5.238804817199707
    6. ' mor' → logprob: -5.613804817199707
    7. ' gl' → logprob: -5.738804817199707
    8. '   ' → logprob: -6.863804817199707
    9. ' mora' → logprob: -7.863804817199707
    10. '
' → logprob: -7.863804817199707

Token 371: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.00015538577281404287
    2. 'a' → logprob: -9.000155448913574
    3. 's' → logprob: -10.625155448913574
    4. '
' → logprob: -13.250155448913574
    5. '=' → logprob: -14.250155448913574
    6. 'tas' → logprob: -14.375155448913574
    7. 'ras' → logprob: -14.875155448913574
    8. ' as' → logprob: -15.000155448913574
    9. '   ' → logprob: -15.000155448913574
    10. '[' → logprob: -15.125155448913574

Token 372: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.297462171758525e-05
    2. '.' → logprob: -10.625033378601074
    3. '.extend' → logprob: -12.250033378601074
    4. 'append' → logprob: -13.375033378601074
    5. '.app' → logprob: -13.625033378601074
    6. '.ap' → logprob: -14.125033378601074
    7. ' .' → logprob: -15.750033378601074
    8. '.add' → logprob: -16.750032424926758
    9. '.Append' → logprob: -18.000032424926758
    10. '+=' → logprob: -18.125032424926758

Token 373: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.023368585854768753
    2. '(s' → logprob: -3.7733685970306396
    3. ' s' → logprob: -9.023368835449219
    4. '   ' → logprob: -13.648368835449219
    5. '(' → logprob: -14.273368835449219
    6. '	s' → logprob: -14.523368835449219
    7. '{s' → logprob: -15.398368835449219
    8. ' ' → logprob: -17.27336883544922
    9. 'c' → logprob: -17.39836883544922
    10. '"s' → logprob: -17.77336883544922

Token 374: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.875
    3. 'i' → logprob: -16.875
    4. '[
' → logprob: -17.5
    5. '[j' → logprob: -19.5
    6. '   ' → logprob: -19.75
    7. '(i' → logprob: -20.25
    8. '[a' → logprob: -20.25
    9. '[I' → logprob: -20.25
    10. '{i' → logprob: -20.375

Token 375: ']+' (ID: 15344)
  Prédit: ':i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.0008594118990004063
    2. 'i' → logprob: -7.125859260559082
    3. ':' → logprob: -10.750859260559082
    4. ']' → logprob: -11.625859260559082
    5. ' i' → logprob: -12.125859260559082
    6. ' :' → logprob: -12.375859260559082
    7. '(i' → logprob: -12.500859260559082
    8. ']+' → logprob: -12.625859260559082
    9. ' ' → logprob: -12.750859260559082
    10. ',i' → logprob: -13.250859260559082

Token 376: 's' (ID: 82)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.15579965710639954
    2. ''y' → logprob: -2.655799627304077
    3. ''' → logprob: -3.780799627304077
    4. '"' → logprob: -3.905799627304077
    5. 's' → logprob: -3.905799627304077
    6. 'sy' → logprob: -5.030799865722656
    7. 'y' → logprob: -5.780799865722656
    8. '"s' → logprob: -7.155799865722656
    9. '‘y' → logprob: -8.405799865722656
    10. ' s' → logprob: -9.530799865722656

Token 377: '[i' (ID: 1768)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.41745346784591675
    2. ''y' → logprob: -2.0424535274505615
    3. '[i' → logprob: -2.1674535274505615
    4. '[' → logprob: -2.4174535274505615
    5. '[y' → logprob: -5.542453289031982
    6. '‘y' → logprob: -6.417453289031982
    7. ''' → logprob: -7.042453289031982
    8. '['' → logprob: -7.792453289031982
    9. '[
' → logprob: -8.66745376586914
    10. 'i' → logprob: -8.79245376586914

Token 378: '+' (ID: 10)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3003866374492645
    2. '+' → logprob: -1.425386667251587
    3. ''y' → logprob: -4.550386428833008
    4. '+y' → logprob: -5.300386428833008
    5. '[' → logprob: -6.300386428833008
    6. '1' → logprob: -7.550386428833008
    7. '2' → logprob: -8.175386428833008
    8. '['' → logprob: -8.300386428833008
    9. ''' → logprob: -9.175386428833008
    10. '[y' → logprob: -9.550386428833008

Token 379: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0011137815890833735
    2. ''y' → logprob: -7.7511138916015625
    3. '2' → logprob: -8.251113891601562
    4. '1' → logprob: -8.501113891601562
    5. 'yo' → logprob: -9.626113891601562
    6. ' y' → logprob: -10.876113891601562
    7. 'ye' → logprob: -11.001113891601562
    8. 'y's' → logprob: -11.126113891601562
    9. 'yu' → logprob: -11.376113891601562
    10. 'u' → logprob: -11.501113891601562

Token 380: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5414536595344543
    2. '+s' → logprob: -1.1664535999298096
    3. '+'' → logprob: -2.6664535999298096
    4. ']+' → logprob: -4.166453838348389
    5. '+y' → logprob: -4.916453838348389
    6. '+c' → logprob: -5.541453838348389
    7. ' +' → logprob: -5.791453838348389
    8. 's' → logprob: -6.416453838348389
    9. ')+' → logprob: -6.666453838348389
    10. ''s' → logprob: -7.041453838348389

Token 381: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.2200749754119897e-06
    2. ' s' → logprob: -13.125001907348633
    3. ''s' → logprob: -16.375001907348633
    4. ' ' → logprob: -17.000001907348633
    5. '{s' → logprob: -17.000001907348633
    6. '`s' → logprob: -18.250001907348633
    7. ')' → logprob: -18.375001907348633
    8. '(s' → logprob: -18.625001907348633
    9. '   ' → logprob: -18.750001907348633
    10. 'c' → logprob: -19.500001907348633

Token 382: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009848285466432571
    2. '[' → logprob: -4.634848117828369
    3. 'i' → logprob: -9.634848594665527
    4. '[u' → logprob: -12.259848594665527
    5. '][' → logprob: -12.634848594665527
    6. ']' → logprob: -12.634848594665527
    7. '[
' → logprob: -13.134848594665527
    8. 'a' → logprob: -13.259848594665527
    9. '{i' → logprob: -13.384848594665527
    10. '[a' → logprob: -13.384848594665527

Token 383: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002241608453914523
    2. '2' → logprob: -6.127241611480713
    3. '[' → logprob: -9.877241134643555
    4. ']' → logprob: -13.252241134643555
    5. ' +' → logprob: -14.252241134643555
    6. '{' → logprob: -14.627241134643555
    7. ']+' → logprob: -14.627241134643555
    8. '])' → logprob: -14.627241134643555
    9. '```' → logprob: -15.252241134643555
    10. '+
' → logprob: -15.627241134643555

Token 384: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -16.0
    3. ' ' → logprob: -16.125
    4. '２' → logprob: -17.875
    5. '۲' → logprob: -17.9375
    6. '```' → logprob: -17.9375
    7. '+' → logprob: -18.8125
    8. '0' → logprob: -19.0625
    9. '
' → logprob: -19.25
    10. '-' → logprob: -19.3125

Token 385: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020814549177885056
    2. ')
' → logprob: -3.8958146572113037
    3. '')' → logprob: -8.645814895629883
    4. '")' → logprob: -10.395814895629883
    5. '           ' → logprob: -11.020814895629883
    6. '])' → logprob: -11.520814895629883
    7. '')
' → logprob: -11.520814895629883
    8. ')
' → logprob: -11.895814895629883
    9. '`)' → logprob: -12.145814895629883
    10. '）' → logprob: -12.895814895629883

Token 386: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002282884204760194
    2. '       ' → logprob: -6.502283096313477
    3. '<|end|>' → logprob: -7.877283096313477
    4. 'i' → logprob: -9.502283096313477
    5. '<|end|>' → logprob: -9.627283096313477
    6. ')' → logprob: -10.002283096313477
    7. '   ' → logprob: -10.127283096313477
    8. '               ' → logprob: -10.502283096313477
    9. '            
' → logprob: -10.627283096313477
    10. '          ' → logprob: -11.377283096313477

Token 387: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.02011926844716072
    2. '           ' → logprob: -4.1451191902160645
    3. ' i' → logprob: -5.5201191902160645
    4. '
' → logprob: -10.270119667053223
    5. '	i' → logprob: -11.395119667053223
    6. '               ' → logprob: -11.895119667053223
    7. '{i' → logprob: -12.520119667053223
    8. '            
' → logprob: -13.020119667053223
    9. '   ' → logprob: -13.270119667053223
    10. '		' → logprob: -13.395119667053223

Token 388: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0021333713084459305
    2. ' +=' → logprob: -6.252133369445801
    3. '+' → logprob: -8.5021333694458
    4. '=' → logprob: -13.8771333694458
    5. '```' → logprob: -15.2521333694458
    6. ']+=' → logprob: -15.7521333694458
    7. '+++' → logprob: -16.127134323120117
    8. '+="' → logprob: -16.627134323120117
    9. '+
' → logprob: -17.127134323120117
    10. '   ' → logprob: -17.377134323120117

Token 389: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '۳' → logprob: -19.375
    4. '   ' → logprob: -19.875
    5. '```' → logprob: -20.25
    6. '３' → logprob: -20.375
    7. '৩' → logprob: -21.0
    8. '٣' → logprob: -21.125
    9. '३' → logprob: -21.25
    10. '  ' → logprob: -21.75

Token 390: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -19.375
    3. '۳' → logprob: -20.75
    4. '３' → logprob: -22.0
    5. '৩' → logprob: -22.25
    6. '٣' → logprob: -22.25
    7. '३' → logprob: -22.625
    8. '```' → logprob: -22.75
    9. '   ' → logprob: -23.0
    10. '313' → logprob: -24.0

Token 391: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6181572675704956
    2. '<|end|>' → logprob: -0.9931572675704956
    3. 'elif' → logprob: -2.493157386779785
    4. '```' → logprob: -6.243157386779785
    5. '<|end|>' → logprob: -6.243157386779785
    6. ' elif' → logprob: -6.493157386779785
    7. '   ' → logprob: -7.368157386779785
    8. ')' → logprob: -7.493157386779785
    9. '	elif' → logprob: -8.118157386779785
    10. '           ' → logprob: -8.493157386779785

Token 392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026717184111475945
    2. '<|end|>' → logprob: -4.151717185974121
    3. 'elif' → logprob: -4.651717185974121
    4. ' elif' → logprob: -8.026717185974121
    5. '   ' → logprob: -8.651717185974121
    6. '<|end|>' → logprob: -8.901717185974121
    7. ')' → logprob: -9.026717185974121
    8. '```' → logprob: -9.151717185974121
    9. '           ' → logprob: -9.401717185974121
    10. '	elif' → logprob: -10.401717185974121

Token 393: ' #' (ID: 1069)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3530171811580658
    2. '       ' → logprob: -1.3530172109603882
    3. ' elif' → logprob: -3.4780170917510986
    4. 'else' → logprob: -6.103017330169678
    5. '	elif' → logprob: -6.478017330169678
    6. '<|end|>' → logprob: -6.603017330169678
    7. '```' → logprob: -6.853017330169678
    8. '   ' → logprob: -7.103017330169678
    9. ' else' → logprob: -7.603017330169678
    10. ')' → logprob: -8.35301685333252

Token 394: ' check' (ID: 2371)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0003469057264737785
    2. 'else' → logprob: -8.250347137451172
    3. '       ' → logprob: -10.000347137451172
    4. ' elif' → logprob: -10.250347137451172
    5. '	elif' → logprob: -12.625347137451172
    6. 'elseif' → logprob: -14.500347137451172
    7. '```' → logprob: -14.875347137451172
    8. 'el' → logprob: -15.125347137451172
    9. '   ' → logprob: -16.125347137451172
    10. '#' → logprob: -16.250347137451172

Token 395: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05434759333729744
    2. 'elif' → logprob: -3.429347515106201
    3. 'for' → logprob: -4.304347515106201
    4. ' elif' → logprob: -5.179347515106201
    5. ' if' → logprob: -7.554347515106201
    6. '   ' → logprob: -8.42934799194336
    7. '	for' → logprob: -9.05434799194336
    8. ' i' → logprob: -9.05434799194336
    9. ' ' → logprob: -9.42934799194336
    10. '	elif' → logprob: -9.42934799194336

Token 396: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.718023955821991
    2. ' ' → logprob: -1.0930240154266357
    3. 'i' → logprob: -2.3430240154266357
    4. ' i' → logprob: -2.5930240154266357
    5. 's' → logprob: -6.093023777008057
    6. ' s' → logprob: -6.343023777008057
    7. '1' → logprob: -7.968023777008057
    8. ' two' → logprob: -8.343024253845215
    9. 'c' → logprob: -8.468024253845215
    10. 'V' → logprob: -8.718024253845215

Token 397: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008129627676680684
    2. 'i' → logprob: -8.125812530517578
    3. '3' → logprob: -8.625812530517578
    4. ' ' → logprob: -9.500812530517578
    5. 'con' → logprob: -9.750812530517578
    6. 'V' → logprob: -9.750812530517578
    7. 'C' → logprob: -10.625812530517578
    8. 's' → logprob: -10.625812530517578
    9. 'v' → logprob: -11.000812530517578
    10. 'c' → logprob: -11.250812530517578

Token 398: '-char' (ID: 127189)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: ' (' (ID: 350)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.1112239733338356
    2. ' elif' → logprob: -2.3612239360809326
    3. 's' → logprob: -4.861224174499512
    4. '(s' → logprob: -7.111224174499512
    5. ' (' → logprob: -7.236224174499512
    6. 'else' → logprob: -7.861224174499512
    7. '	elif' → logprob: -8.236224174499512
    8. ' s' → logprob: -8.236224174499512
    9. ' ' → logprob: -8.736224174499512
    10. ')' → logprob: -9.111224174499512

Token 400: 'C' (ID: 34)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1515643298625946
    2. 'CON' → logprob: -2.151564359664917
    3. 'c' → logprob: -4.526564121246338
    4. 'con' → logprob: -4.901564121246338
    5. ' s' → logprob: -5.901564121246338
    6. ')' → logprob: -6.776564121246338
    7. ' CON' → logprob: -6.901564121246338
    8. ' ' → logprob: -8.901564598083496
    9. 'C' → logprob: -9.026564598083496
    10. 'i' → logprob: -9.026564598083496

Token 401: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12096771597862244
    2. ' +' → logprob: -2.3709676265716553
    3. '<|end|>' → logprob: -4.995967864990234
    4. 's' → logprob: -5.370967864990234
    5. '+s' → logprob: -5.995967864990234
    6. ' and' → logprob: -5.995967864990234
    7. '+c' → logprob: -6.620967864990234
    8. ')' → logprob: -7.370967864990234
    9. 'and' → logprob: -7.495967864990234
    10. '+i' → logprob: -7.995967864990234

Token 402: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.4855387806892395
    2. 'v' → logprob: -1.6105387210845947
    3. 'a' → logprob: -2.1105387210845947
    4. 's' → logprob: -3.6105387210845947
    5. 'i' → logprob: -4.735538959503174
    6. ' ' → logprob: -4.985538959503174
    7. '<|end|>' → logprob: -5.110538959503174
    8. 'o' → logprob: -5.735538959503174
    9. ' vowels' → logprob: -6.360538959503174
    10. ')' → logprob: -6.485538959503174

Token 403: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020568605395965278
    2. 'owels' → logprob: -9.500205993652344
    3. 'owel' → logprob: -9.750205993652344
    4. ')s' → logprob: -10.750205993652344
    5. ')m' → logprob: -11.625205993652344
    6. '<|end|>' → logprob: -11.750205993652344
    7. 's' → logprob: -12.000205993652344
    8. 'token' → logprob: -12.625205993652344
    9. '),' → logprob: -13.125205993652344
    10. ' )' → logprob: -13.250205993652344

Token 404: ' mora' (ID: 47294)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.05420013144612312
    2. ' elif' → logprob: -3.0542001724243164
    3. ')' → logprob: -6.179200172424316
    4. ':' → logprob: -6.679200172424316
    5. '<|end|>' → logprob: -7.554200172424316
    6. '	elif' → logprob: -7.679200172424316
    7. ',' → logprob: -8.054200172424316
    8. 's' → logprob: -8.429200172424316
    9. 'else' → logprob: -8.804200172424316
    10. '{' → logprob: -9.179200172424316

Token 405: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3171236217021942
    2. ' elif' → logprob: -1.6921236515045166
    3. '<|end|>' → logprob: -2.9421236515045166
    4. '	elif' → logprob: -4.4421234130859375
    5. '       ' → logprob: -4.6921234130859375
    6. '<|end|>' → logprob: -5.3171234130859375
    7. ':' → logprob: -5.6921234130859375
    8. '   ' → logprob: -6.0671234130859375
    9. ',' → logprob: -6.3171234130859375
    10. ')' → logprob: -7.9421234130859375

Token 406: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.20685119926929474
    2. ' elif' → logprob: -1.8318512439727783
    3. '	elif' → logprob: -4.206851005554199
    4. '   ' → logprob: -5.831851005554199
    5. '<|end|>' → logprob: -5.831851005554199
    6. '       ' → logprob: -5.831851005554199
    7. ':' → logprob: -6.081851005554199
    8. ',' → logprob: -8.3318510055542
    9. '<|end|>' → logprob: -8.4568510055542
    10. 's' → logprob: -9.4568510055542

Token 407: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.16100430488586426
    2. ' elif' → logprob: -1.9110043048858643
    3. '	elif' → logprob: -7.661004066467285
    4. '<|end|>' → logprob: -9.286004066467285
    5. '   ' → logprob: -9.411004066467285
    6. ':' → logprob: -10.036004066467285
    7. 's' → logprob: -10.536004066467285
    8. ',' → logprob: -11.411004066467285
    9. ' ' → logprob: -11.411004066467285
    10. 'else' → logprob: -11.786004066467285

Token 408: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7440799474716187
    2. ' i' → logprob: -1.3690799474716187
    3. ' s' → logprob: -1.8690799474716187
    4. 's' → logprob: -2.244080066680908
    5. 'c' → logprob: -5.244080066680908
    6. ' c' → logprob: -5.369080066680908
    7. ' ' → logprob: -8.86907958984375
    8. '(i' → logprob: -10.11907958984375
    9. ' (' → logprob: -10.36907958984375
    10. '(s' → logprob: -11.36907958984375

Token 409: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010008628305513412
    2. ' +' → logprob: -9.250100135803223
    3. '<' → logprob: -13.750100135803223
    4. '+i' → logprob: -14.000100135803223
    5. '+
' → logprob: -14.250100135803223
    6. '＋' → logprob: -15.375100135803223
    7. '+[' → logprob: -15.625100135803223
    8. '   ' → logprob: -15.750100135803223
    9. ' ' → logprob: -16.625099182128906
    10. '
' → logprob: -16.812599182128906

Token 410: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.341087570646778e-05
    2. '+' → logprob: -9.375093460083008
    3. ' ' → logprob: -12.250093460083008
    4. '2' → logprob: -13.250093460083008
    5. '0' → logprob: -14.500093460083008
    6. 'len' → logprob: -14.937593460083008
    7. 'n' → logprob: -15.312593460083008
    8. '   ' → logprob: -15.500093460083008
    9. ' +' → logprob: -15.625093460083008
    10. '１' → logprob: -16.375093460083008

Token 411: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.20149266719818115
    2. '<' → logprob: -1.7014926671981812
    3. '+' → logprob: -10.076492309570312
    4. '<len' → logprob: -11.326492309570312
    5. '<n' → logprob: -11.326492309570312
    6. '[' → logprob: -12.326492309570312
    7. '<|end|>' → logprob: -13.076492309570312
    8. ' ' → logprob: -13.451492309570312
    9. 'in' → logprob: -14.076492309570312
    10. ' +' → logprob: -14.201492309570312

Token 412: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000804745068307966
    2. ' n' → logprob: -7.125804901123047
    3. '```' → logprob: -16.500804901123047
    4. '	n' → logprob: -16.625804901123047
    5. 'len' → logprob: -16.750804901123047
    6. '[n' → logprob: -16.875804901123047
    7. '<|end|>' → logprob: -16.875804901123047
    8. '[' → logprob: -17.750804901123047
    9. ' ' → logprob: -17.875804901123047
    10. '<|end|>' → logprob: -19.000804901123047

Token 413: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.016045862808823586
    2. 'and' → logprob: -4.141046047210693
    3. ' ' → logprob: -12.266045570373535
    4. ' in' → logprob: -12.641045570373535
    5. '<|end|>' → logprob: -14.266045570373535
    6. ' s' → logprob: -14.516045570373535
    7. 'in' → logprob: -14.641045570373535
    8. 's' → logprob: -15.016045570373535
    9. ' &&' → logprob: -15.016045570373535
    10. ',' → logprob: -15.391045570373535

Token 414: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09411506354808807
    2. '       ' → logprob: -3.0941150188446045
    3. '           ' → logprob: -3.9691150188446045
    4. ' ' → logprob: -5.094115257263184
    5. '<|end|>' → logprob: -5.094115257263184
    6. 'and' → logprob: -5.344115257263184
    7. '   ' → logprob: -5.469115257263184
    8. ' if' → logprob: -6.719115257263184
    9. ',' → logprob: -7.469115257263184
    10. '        ' → logprob: -7.719115257263184

Token 415: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6033768057823181
    2. 'm' → logprob: -0.8533768057823181
    3. 'mor' → logprob: -4.353376865386963
    4. ' if' → logprob: -4.728376865386963
    5. ' mor' → logprob: -5.603376865386963
    6. 'gl' → logprob: -7.478376865386963
    7. 'c' → logprob: -7.853376865386963
    8. '   ' → logprob: -8.603376388549805
    9. 's' → logprob: -8.853376388549805
    10. 'token' → logprob: -8.978376388549805

Token 416: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00023059594968799502
    2. ' s' → logprob: -9.00023078918457
    3. 'c' → logprob: -9.87523078918457
    4. '   ' → logprob: -10.37523078918457
    5. '(s' → logprob: -11.37523078918457
    6. ' ' → logprob: -12.00023078918457
    7. 'i' → logprob: -12.87523078918457
    8. '       ' → logprob: -14.37523078918457
    9. '	s' → logprob: -14.37523078918457
    10. ' (' → logprob: -14.75023078918457

Token 417: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1279553291387856e-05
    2. 'i' → logprob: -11.500011444091797
    3. '[' → logprob: -14.250011444091797
    4. '[
' → logprob: -16.625011444091797
    5. '```' → logprob: -16.750011444091797
    6. '
' → logprob: -16.875011444091797
    7. 's' → logprob: -16.875011444091797
    8. '   ' → logprob: -18.000011444091797
    9. '[in' → logprob: -18.250011444091797
    10. '#' → logprob: -18.500011444091797

Token 418: ']' (ID: 60)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4823978543281555
    2. ' in' → logprob: -0.9823978543281555
    3. ']' → logprob: -4.85739803314209
    4. '[i' → logprob: -8.48239803314209
    5. 'i' → logprob: -9.10739803314209
    6. ' ' → logprob: -9.23239803314209
    7. '+' → logprob: -10.23239803314209
    8. ')' → logprob: -10.35739803314209
    9. '[' → logprob: -11.73239803314209
    10. ' i' → logprob: -12.10739803314209

Token 419: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759482979774475
    2. ' in' → logprob: -0.8259482979774475
    3. 'i' → logprob: -12.700948715209961
    4. ' ' → logprob: -12.950948715209961
    5. 's' → logprob: -14.200948715209961
    6. ' not' → logprob: -14.825948715209961
    7. '	in' → logprob: -14.825948715209961
    8. ')' → logprob: -14.950948715209961
    9. ' i' → logprob: -14.950948715209961
    10. 'In' → logprob: -15.075948715209961

Token 420: ' CON' (ID: 5802)
  Prédit: 'CON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CON' → logprob: -0.001192371710203588
    2. 'V' → logprob: -6.751192569732666
    3. 'VO' → logprob: -11.376192092895508
    4. 'VOICE' → logprob: -12.126192092895508
    5. ' CON' → logprob: -13.126192092895508
    6. '(CON' → logprob: -13.126192092895508
    7. 'VOC' → logprob: -14.751192092895508
    8. 'con' → logprob: -15.376192092895508
    9. '   ' → logprob: -16.251192092895508
    10. 'CONS' → logprob: -16.376192092895508

Token 421: 'SON' (ID: 4214)
  Prédit: 'SON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SON' → logprob: -8.196732960641384e-05
    2. 'CON' → logprob: -9.625082015991211
    3. 'S' → logprob: -11.375082015991211
    4. 'ONS' → logprob: -13.375082015991211
    5. 'CONS' → logprob: -13.750082015991211
    6. '{' → logprob: -14.125082015991211
    7. '_CON' → logprob: -15.000082015991211
    8. 'son' → logprob: -15.500082015991211
    9. 'ON' → logprob: -15.625082015991211
    10. 'SOR' → logprob: -16.25008201599121

Token 422: 'ANTS' (ID: 96531)
  Prédit: 'ANTS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANTS' → logprob: -2.129266067640856e-05
    2. 'ants' → logprob: -10.875020980834961
    3. 'TS' → logprob: -13.500020980834961
    4. 'ENTS' → logprob: -14.375020980834961
    5. 'N' → logprob: -16.12502098083496
    6. 'T' → logprob: -16.12502098083496
    7. 'S' → logprob: -16.25002098083496
    8. '{' → logprob: -17.25002098083496
    9. 'ATS' → logprob: -17.37502098083496
    10. '_' → logprob: -17.62502098083496

Token 423: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03805939108133316
    2. 'and' → logprob: -3.2880594730377197
    3. ' ' → logprob: -11.91305923461914
    4. '   ' → logprob: -12.41305923461914
    5. '	and' → logprob: -13.03805923461914
    6. 's' → logprob: -13.91305923461914
    7. ':
' → logprob: -14.03805923461914
    8. '           ' → logprob: -14.41305923461914
    9. ' or' → logprob: -14.53805923461914
    10. ',' → logprob: -15.03805923461914

Token 424: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31326746940612793
    2. ' s' → logprob: -1.313267469406128
    3. ' ' → logprob: -12.938267707824707
    4. '(s' → logprob: -14.063267707824707
    5. '   ' → logprob: -14.313267707824707
    6. '	s' → logprob: -14.688267707824707
    7. '{s' → logprob: -14.688267707824707
    8. 'v' → logprob: -15.188267707824707
    9. ' ' → logprob: -15.813267707824707
    10. '_s' → logprob: -16.31326675415039

Token 425: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. 'i' → logprob: -13.750000953674316
    3. '[
' → logprob: -16.875001907348633
    4. '[' → logprob: -16.875001907348633
    5. '
' → logprob: -18.125001907348633
    6. '(i' → logprob: -18.625001907348633
    7. ' [' → logprob: -18.750001907348633
    8. '{i' → logprob: -18.750001907348633
    9. '[j' → logprob: -19.500001907348633
    10. '[++' → logprob: -19.875001907348633

Token 426: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.6696149840718135e-05
    2. ' +' → logprob: -10.875056266784668
    3. '+i' → logprob: -11.000056266784668
    4. '+
' → logprob: -11.375056266784668
    5. '[' → logprob: -12.750056266784668
    6. '1' → logprob: -13.625056266784668
    7. '[i' → logprob: -13.875056266784668
    8. ']' → logprob: -14.250056266784668
    9. '+[' → logprob: -14.375056266784668
    10. ']+' → logprob: -14.625056266784668

Token 427: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -12.875008583068848
    3. '
' → logprob: -13.125008583068848
    4. '+' → logprob: -13.250008583068848
    5. '0' → logprob: -14.687508583068848
    6. '{' → logprob: -14.812508583068848
    7. '2' → logprob: -14.812508583068848
    8. '   ' → logprob: -15.562508583068848
    9. 'n' → logprob: -15.875008583068848
    10. '{
' → logprob: -16.062509536743164

Token 428: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029802558943629265
    2. 'in' → logprob: -3.5298025608062744
    3. ']' → logprob: -10.279802322387695
    4. ' ' → logprob: -11.529802322387695
    5. 'In' → logprob: -13.029802322387695
    6. ')' → logprob: -13.154802322387695
    7. '<|end|>' → logprob: -13.404802322387695
    8. '}' → logprob: -14.404802322387695
    9. ' ' → logprob: -14.529802322387695
    10. 's' → logprob: -14.654802322387695

Token 429: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38687604665756226
    2. 'in' → logprob: -1.136876106262207
    3. ' ' → logprob: -12.386876106262207
    4. ')' → logprob: -15.386876106262207
    5. '<|end|>' → logprob: -15.386876106262207
    6. 'In' → logprob: -15.886876106262207
    7. '	in' → logprob: -16.63687515258789
    8. 's' → logprob: -16.88687515258789
    9. ' ' → logprob: -17.13687515258789
    10. 'not' → logprob: -17.76187515258789

Token 430: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.1472419600977446e-06
    2. '{'' → logprob: -14.125000953674316
    3. ' V' → logprob: -15.000000953674316
    4. 'VO' → logprob: -20.000001907348633
    5. '(V' → logprob: -20.125001907348633
    6. '	V' → logprob: -20.375001907348633
    7. '
' → logprob: -20.750001907348633
    8. '{' → logprob: -21.125001907348633
    9. '   ' → logprob: -21.250001907348633
    10. ')V' → logprob: -21.875001907348633

Token 431: 'OW' (ID: 5593)
  Prédit: 'OW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OW' → logprob: -4.656383680412546e-05
    2. 'owels' → logprob: -10.250046730041504
    3. 'OV' → logprob: -11.625046730041504
    4. ' OW' → logprob: -14.000046730041504
    5. 'O' → logprob: -14.750046730041504
    6. 'AW' → logprob: -15.125046730041504
    7. 'W' → logprob: -15.500046730041504
    8. 'Ow' → logprob: -15.500046730041504
    9. '```' → logprob: -15.750046730041504
    10. 'OY' → logprob: -17.125045776367188

Token 432: 'ELS' (ID: 88642)
  Prédit: 'ELS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ELS' → logprob: -6.194110756041482e-05
    2. 'E' → logprob: -11.125061988830566
    3. '
' → logprob: -11.375061988830566
    4. 'O' → logprob: -11.625061988830566
    5. '   ' → logprob: -12.375061988830566
    6. '{' → logprob: -12.375061988830566
    7. '{'' → logprob: -12.500061988830566
    8. '```' → logprob: -13.375061988830566
    9. '"' → logprob: -13.500061988830566
    10. 'OW' → logprob: -13.500061988830566

Token 433: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010132020339369774
    2. ':
' → logprob: -4.6351318359375
    3. '):' → logprob: -8.0101318359375
    4. '):
' → logprob: -11.1351318359375
    5. '   ' → logprob: -12.1351318359375
    6. '           ' → logprob: -12.1351318359375
    7. '       ' → logprob: -12.1351318359375
    8. ' and' → logprob: -12.6351318359375
    9. ':
' → logprob: -12.7601318359375
    10. ')' → logprob: -13.3851318359375

Token 434: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7950487732887268
    2. ':
' → logprob: -1.045048713684082
    3. ':' → logprob: -1.795048713684082
    4. '           ' → logprob: -3.670048713684082
    5. '       ' → logprob: -6.295048713684082
    6. '):
' → logprob: -6.670048713684082
    7. ',' → logprob: -7.420048713684082
    8. ' and' → logprob: -7.545048713684082
    9. 'm' → logprob: -8.545048713684082
    10. '):' → logprob: -8.795048713684082

Token 435: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.023735709488391876
    2. ' mor' → logprob: -4.398735523223877
    3. '               ' → logprob: -5.023735523223877
    4. 'mor' (adapté à ' mor') → logprob: -6.023735523223877
    5. '                   ' → logprob: -6.398735523223877
    6. '           ' → logprob: -7.898735523223877
    7. '   ' → logprob: -9.773736000061035
    8. '	m' → logprob: -11.023736000061035
    9. '                ' → logprob: -11.773736000061035
    10. ' ' → logprob: -11.898736000061035

Token 436: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.0002627662615850568
    2. 'a' → logprob: -8.375263214111328
    3. 's' → logprob: -11.125263214111328
    4. '   ' → logprob: -11.750263214111328
    5. '[' → logprob: -13.375263214111328
    6. '
' → logprob: -13.625263214111328
    7. 'm' → logprob: -13.750263214111328
    8. '```' → logprob: -14.000263214111328
    9. '``' → logprob: -14.125263214111328
    10. '	as' → logprob: -15.000263214111328

Token 437: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.9981420336989686e-05
    2. '.' → logprob: -11.125020027160645
    3. '.extend' → logprob: -13.250020027160645
    4. 'append' → logprob: -13.500020027160645
    5. '.app' → logprob: -14.125020027160645
    6. '.ap' → logprob: -14.375020027160645
    7. 's' → logprob: -14.500020027160645
    8. '.add' → logprob: -16.750019073486328
    9. ' .' → logprob: -16.875019073486328
    10. 'es' → logprob: -17.750019073486328

Token 438: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008940708357840776
    2. '(s' → logprob: -7.250894069671631
    3. ' s' → logprob: -8.750894546508789
    4. 'c' → logprob: -10.625894546508789
    5. '(c' → logprob: -14.250894546508789
    6. '   ' → logprob: -15.000894546508789
    7. '(' → logprob: -15.750894546508789
    8. ' ' → logprob: -16.50089454650879
    9. '	s' → logprob: -16.50089454650879
    10. '{s' → logprob: -17.12589454650879

Token 439: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -14.000000953674316
    3. '[j' → logprob: -18.375
    4. '```' → logprob: -19.125
    5. '[' → logprob: -19.25
    6. ')' → logprob: -19.375
    7. '[a' → logprob: -19.875
    8. '[
' → logprob: -20.375
    9. 'a' → logprob: -20.625
    10. '{i' → logprob: -21.0

Token 440: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.22055590152740479
    2. '+' → logprob: -2.4705557823181152
    3. '+s' → logprob: -2.5955557823181152
    4. 's' → logprob: -3.8455557823181152
    5. ']' → logprob: -4.345555782318115
    6. ' +' → logprob: -5.720555782318115
    7. '+i' → logprob: -7.720555782318115
    8. '+
' → logprob: -7.970555782318115
    9. ')+' → logprob: -8.220556259155273
    10. '][' → logprob: -10.720556259155273

Token 441: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.13388703338569e-06
    2. ' s' → logprob: -11.625009536743164
    3. ' ' → logprob: -16.500009536743164
    4. ''s' → logprob: -18.750009536743164
    5. '`s' → logprob: -19.500009536743164
    6. '<|end|>' → logprob: -19.500009536743164
    7. '{s' → logprob: -19.625009536743164
    8. '   ' → logprob: -19.750009536743164
    9. '_s' → logprob: -19.750009536743164
    10. '(s' → logprob: -19.750009536743164

Token 442: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00034297199454158545
    2. '[' → logprob: -8.250343322753906
    3. 'i' → logprob: -9.500343322753906
    4. '[
' → logprob: -12.750343322753906
    5. '1' → logprob: -13.750343322753906
    6. '(i' → logprob: -14.125343322753906
    7. '][' → logprob: -14.625343322753906
    8. ']' → logprob: -14.750343322753906
    9. '```' → logprob: -15.250343322753906
    10. '+' → logprob: -15.500343322753906

Token 443: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.019185321405529976
    2. '1' → logprob: -4.394185543060303
    3. '[' → logprob: -5.019185543060303
    4. 's' → logprob: -11.269185066223145
    5. ' ' → logprob: -11.519185066223145
    6. '<|end|>' → logprob: -12.394185066223145
    7. ' +' → logprob: -12.894185066223145
    8. 'i' → logprob: -12.894185066223145
    9. '[i' → logprob: -13.144185066223145
    10. 'x' → logprob: -13.519185066223145

Token 444: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -14.375000953674316
    3. '
' → logprob: -15.125000953674316
    4. '+' → logprob: -16.000001907348633
    5. '```' → logprob: -17.062501907348633
    6. '   ' → logprob: -17.312501907348633
    7. ')' → logprob: -17.375001907348633
    8. '[' → logprob: -17.437501907348633
    9. '0' → logprob: -17.562501907348633
    10. '１' → logprob: -17.687501907348633

Token 445: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34995517134666443
    2. ')
' → logprob: -1.2249552011489868
    3. '               ' → logprob: -7.599955081939697
    4. '')' → logprob: -7.849955081939697
    5. '')
' → logprob: -8.349955558776855
    6. ')
' → logprob: -8.849955558776855
    7. '           ' → logprob: -9.349955558776855
    8. '")' → logprob: -9.724955558776855
    9. '```' → logprob: -11.099955558776855
    10. '                   ' → logprob: -11.474955558776855

Token 446: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.050427552312612534
    2. '           ' → logprob: -3.0504274368286133
    3. '
' → logprob: -7.800427436828613
    4. '       ' → logprob: -7.925427436828613
    5. '                
' → logprob: -8.175427436828613
    6. '                   ' → logprob: -8.300427436828613
    7. '  
' → logprob: -9.175427436828613
    8. '   ' → logprob: -9.800427436828613
    9. '<|end|>' → logprob: -9.800427436828613
    10. '            
' → logprob: -9.925427436828613

Token 447: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.03419915959239006
    2. ' i' → logprob: -3.5341992378234863
    3. '               ' → logprob: -5.909199237823486
    4. '           ' → logprob: -6.784199237823486
    5. '
' → logprob: -8.409198760986328
    6. '                   ' → logprob: -8.534198760986328
    7. ' 
' → logprob: -9.284198760986328
    8. ' ' → logprob: -11.159198760986328
    9. '                
' → logprob: -11.534198760986328
    10. '	i' → logprob: -11.659198760986328

Token 448: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.011068572290241718
    2. ' +=' → logprob: -4.511068344116211
    3. '+' → logprob: -10.886068344116211
    4. '=' → logprob: -13.511068344116211
    5. ']+=' → logprob: -14.511068344116211
    6. '           ' → logprob: -16.38606834411621
    7. '+="' → logprob: -17.01106834411621
    8. '+='' → logprob: -17.13606834411621
    9. ' ' → logprob: -18.38606834411621
    10. '```' → logprob: -18.51106834411621

Token 449: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.875001907348633
    4. '۲' → logprob: -20.375001907348633
    5. '２' → logprob: -20.875001907348633
    6. '```' → logprob: -21.875001907348633
    7. '  ' → logprob: -22.500001907348633
    8. '٢' → logprob: -23.250001907348633
    9. '₂' → logprob: -23.250001907348633
    10. '²' → logprob: -23.500001907348633

Token 450: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -20.875
    4. '۲' → logprob: -20.875
    5. '２' → logprob: -21.5
    6. '```' → logprob: -22.25
    7. '1' → logprob: -22.8125
    8. '  ' → logprob: -22.875
    9. '२' → logprob: -22.9375
    10. '3' → logprob: -23.125

Token 451: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.700310230255127
    2. '           ' → logprob: -0.700310230255127
    3. 'else' → logprob: -5.450310230255127
    4. 'elif' → logprob: -6.075310230255127
    5. ' else' → logprob: -8.075309753417969
    6. '```' → logprob: -9.325309753417969
    7. ' elif' → logprob: -10.450309753417969
    8. '               ' → logprob: -10.575309753417969
    9. '
' → logprob: -10.700309753417969
    10. '   ' → logprob: -10.950309753417969

Token 452: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17509374022483826
    2. '           ' → logprob: -2.300093650817871
    3. 'else' → logprob: -2.925093650817871
    4. ' else' → logprob: -5.550093650817871
    5. 'elif' → logprob: -6.050093650817871
    6. '```' → logprob: -8.550093650817871
    7. '   ' → logprob: -9.175093650817871
    8. '               ' → logprob: -9.425093650817871
    9. ')' → logprob: -10.550093650817871
    10. ' elif' → logprob: -10.925093650817871

Token 453: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.47431281208992004
    2. '       ' → logprob: -1.4743127822875977
    3. 'elif' → logprob: -2.3493127822875977
    4. '           ' → logprob: -3.4743127822875977
    5. ' else' → logprob: -3.8493127822875977
    6. ' elif' → logprob: -7.099312782287598
    7. '   ' → logprob: -10.099312782287598
    8. '.' → logprob: -10.349312782287598
    9. '	elif' → logprob: -10.599312782287598
    10. '	else' → logprob: -10.849312782287598

Token 454: ' long' (ID: 1701)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5766739845275879
    2. 'elif' → logprob: -0.8266739845275879
    3. ' else' → logprob: -7.576673984527588
    4. ' elif' → logprob: -8.57667350769043
    5. '       ' → logprob: -10.82667350769043
    6. '           ' → logprob: -11.45167350769043
    7. 'elseif' → logprob: -13.57667350769043
    8. '   ' → logprob: -14.20167350769043
    9. '	elif' → logprob: -15.07667350769043
    10. '               ' → logprob: -15.70167350769043

Token 455: ' vowels' (ID: 176245)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0036159895826131105
    2. ' elif' → logprob: -5.628615856170654
    3. 'else' → logprob: -11.253616333007812
    4. '	elif' → logprob: -13.128616333007812
    5. ' else' → logprob: -15.503616333007812
    6. 'e' → logprob: -15.628616333007812
    7. 'elseif' → logprob: -16.003616333007812
    8. 'if' → logprob: -16.253616333007812
    9. '...' → logprob: -16.378616333007812
    10. 's' → logprob: -16.503616333007812

Token 456: ' are' (ID: 553)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.10051504522562027
    2. ' elif' → logprob: -2.350515127182007
    3. '       ' → logprob: -8.725515365600586
    4. '	elif' → logprob: -8.975515365600586
    5. '   ' → logprob: -11.975515365600586
    6. 'else' → logprob: -12.100515365600586
    7. ' else' → logprob: -13.100515365600586
    8. '           ' → logprob: -13.600515365600586
    9. ' or' → logprob: -13.975515365600586
    10. ',' → logprob: -14.100515365600586

Token 457: ' represented' (ID: 27328)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.17708919942378998
    2. ' elif' → logprob: -2.052089214324951
    3. ' not' → logprob: -3.677089214324951
    4. ' s' → logprob: -5.427089214324951
    5. 's' → logprob: -6.552089214324951
    6. ' ' → logprob: -7.302089214324951
    7. ' handled' → logprob: -7.927089214324951
    8. '   ' → logprob: -7.927089214324951
    9. 'not' → logprob: -8.177088737487793
    10. ' else' → logprob: -8.552088737487793

Token 458: ' by' (ID: 656)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.18208013474941254
    2. ' elif' → logprob: -1.8070801496505737
    3. ' by' → logprob: -7.057080268859863
    4. 'else' → logprob: -7.432080268859863
    5. ' else' → logprob: -7.682080268859863
    6. '	elif' → logprob: -8.557080268859863
    7. '           ' → logprob: -9.307080268859863
    8. '               ' → logprob: -10.682080268859863
    9. ' ' → logprob: -10.807080268859863
    10. '       ' → logprob: -10.932080268859863

Token 459: ' repeating' (ID: 74481)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6404838562011719
    2. ' s' → logprob: -0.7654838562011719
    3. ''' → logprob: -5.515483856201172
    4. ' ' → logprob: -6.265483856201172
    5. 'i' → logprob: -8.015483856201172
    6. ''s' → logprob: -8.015483856201172
    7. '   ' → logprob: -8.140483856201172
    8. ' '' → logprob: -8.390483856201172
    9. ' i' → logprob: -9.265483856201172
    10. '  ' → logprob: -9.640483856201172

Token 460: ' vowels' (ID: 176245)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31982678174972534
    2. 'elif' → logprob: -1.9448268413543701
    3. ' s' → logprob: -2.44482684135437
    4. ' elif' → logprob: -3.31982684135437
    5. 'v' → logprob: -5.819826602935791
    6. 'else' → logprob: -6.569826602935791
    7. ' else' → logprob: -6.944826602935791
    8. 'c' → logprob: -7.194826602935791
    9. ' ' → logprob: -7.694826602935791
    10. 'if' → logprob: -7.819826602935791

Token 461: ' a' (ID: 261)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5703446865081787
    2. '       ' → logprob: -1.0703446865081787
    3. ' elif' → logprob: -2.5703446865081787
    4. 'else' → logprob: -4.445344924926758
    5. ' else' → logprob: -5.945344924926758
    6. '	elif' → logprob: -7.570344924926758
    7. '           ' → logprob: -8.445344924926758
    8. '```' → logprob: -10.195344924926758
    9. '   ' → logprob: -10.570344924926758
    10. '[' → logprob: -10.820344924926758

Token 462: ',i' (ID: 25032)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.2046695351600647
    2. ' elif' → logprob: -2.20466947555542
    3. 'nd' → logprob: -2.95466947555542
    4. ' or' → logprob: -5.45466947555542
    5. ' and' → logprob: -5.57966947555542
    6. 'else' → logprob: -5.82966947555542
    7. ' ' → logprob: -6.07966947555542
    8. ' else' → logprob: -6.45466947555542
    9. 'i' → logprob: -6.82966947555542
    10. '       ' → logprob: -6.95466947555542

Token 463: ',u' (ID: 80698)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.081223264336586
    2. ' elif' → logprob: -2.581223249435425
    3. 'else' → logprob: -6.831223487854004
    4. ' or' → logprob: -7.456223487854004
    5. ' else' → logprob: -7.956223487854004
    6. '   ' → logprob: -9.956223487854004
    7. 'if' → logprob: -9.956223487854004
    8. ' and' → logprob: -10.206223487854004
    9. 'f' → logprob: -10.206223487854004
    10. '       ' → logprob: -10.331223487854004

Token 464: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6111749410629272
    2. '       ' → logprob: -1.1111749410629272
    3. ' elif' → logprob: -2.111175060272217
    4. '	elif' → logprob: -5.861175060272217
    5. '           ' → logprob: -5.986175060272217
    6. 'else' → logprob: -7.361175060272217
    7. ' else' → logprob: -7.986175060272217
    8. '<|end|>' → logprob: -8.236174583435059
    9. '               ' → logprob: -8.986174583435059
    10. ',' → logprob: -9.861174583435059

Token 465: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.348174124956131
    2. 'elif' → logprob: -1.4731740951538086
    3. ' elif' → logprob: -3.2231740951538086
    4. '           ' → logprob: -3.7231740951538086
    5. '	elif' → logprob: -7.848174095153809
    6. 'else' → logprob: -9.098174095153809
    7. ' or' → logprob: -9.348174095153809
    8. '               ' → logprob: -9.723174095153809
    9. ' else' → logprob: -10.098174095153809
    10. '   ' → logprob: -10.473174095153809

Token 466: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.12189511954784393
    2. ' elif' → logprob: -2.2468950748443604
    3. '       ' → logprob: -4.7468953132629395
    4. '	elif' → logprob: -8.871894836425781
    5. '           ' → logprob: -9.121894836425781
    6. '   ' → logprob: -10.121894836425781
    7. 'else' → logprob: -10.121894836425781
    8. ' ' → logprob: -11.746894836425781
    9. '    ' → logprob: -12.621894836425781
    10. ' else' → logprob: -12.621894836425781

Token 467: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11287661641836166
    2. ' s' → logprob: -2.2378766536712646
    3. '   ' → logprob: -10.862876892089844
    4. 'i' → logprob: -10.862876892089844
    5. ' ' → logprob: -11.987876892089844
    6. '(s' → logprob: -13.112876892089844
    7. '	s' → logprob: -13.112876892089844
    8. '{s' → logprob: -13.362876892089844
    9. ' i' → logprob: -13.862876892089844
    10. '  ' → logprob: -14.737876892089844

Token 468: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. 'i' → logprob: -13.12500286102295
    3. '[' → logprob: -14.75000286102295
    4. '[
' → logprob: -15.12500286102295
    5. ' [' → logprob: -16.250003814697266
    6. ' ' → logprob: -17.000003814697266
    7. '   ' → logprob: -17.375003814697266
    8. ']' → logprob: -17.750003814697266
    9. '[a' → logprob: -17.750003814697266
    10. '[I' → logprob: -17.875003814697266

Token 469: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1328776478767395
    2. ']==' → logprob: -2.1328775882720947
    3. '==' → logprob: -5.382877826690674
    4. '+' → logprob: -7.257877826690674
    5. 'in' → logprob: -8.132877349853516
    6. '][' → logprob: -9.257877349853516
    7. ' ==' → logprob: -9.257877349853516
    8. '[i' → logprob: -10.132877349853516
    9. 'i' → logprob: -10.632877349853516
    10. ' ]' → logprob: -11.257877349853516

Token 470: ' in' (ID: 306)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0730338841676712
    2. ' ==' → logprob: -2.6980338096618652
    3. '[' → logprob: -6.948033809661865
    4. ']==' → logprob: -7.448033809661865
    5. '[i' → logprob: -7.698033809661865
    6. '+' → logprob: -7.823033809661865
    7. ' in' → logprob: -8.073034286499023
    8. 'in' → logprob: -8.448034286499023
    9. '==
' → logprob: -10.448034286499023
    10. ']' → logprob: -10.698034286499023

Token 471: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0003032881941180676
    2. '{'' → logprob: -8.125303268432617
    3. ' V' → logprob: -12.125303268432617
    4. ''' → logprob: -13.500303268432617
    5. 's' → logprob: -16.375303268432617
    6. ' {'' → logprob: -16.500303268432617
    7. '{' → logprob: -16.750303268432617
    8. '['' → logprob: -17.125303268432617
    9. '   ' → logprob: -17.250303268432617
    10. '('' → logprob: -17.500303268432617

Token 472: 'OW' (ID: 5593)
  Prédit: 'OW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OW' → logprob: -0.0002737330214586109
    2. 'owels' → logprob: -8.500273704528809
    3. 'O' → logprob: -10.125273704528809
    4. 'OV' → logprob: -10.625273704528809
    5. ' OW' → logprob: -13.000273704528809
    6. '   ' → logprob: -13.875273704528809
    7. 'OWL' → logprob: -14.000273704528809
    8. 'OY' → logprob: -14.000273704528809
    9. '{' → logprob: -15.750273704528809
    10. '[' → logprob: -15.875273704528809

Token 473: 'ELS' (ID: 88642)
  Prédit: 'ELS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ELS' → logprob: -0.00019102399528492242
    2. 'E' → logprob: -8.750190734863281
    3. '   ' → logprob: -11.750190734863281
    4. '{'' → logprob: -12.250190734863281
    5. '```' → logprob: -12.750190734863281
    6. 'EL' → logprob: -13.000190734863281
    7. '{' → logprob: -13.375190734863281
    8. '`' → logprob: -13.375190734863281
    9. 'els' → logprob: -13.500190734863281
    10. 'O' → logprob: -13.625190734863281

Token 474: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3868741989135742
    2. 'and' → logprob: -1.1368741989135742
    3. ' ' → logprob: -13.511874198913574
    4. '	and' → logprob: -14.511874198913574
    5. 's' → logprob: -14.761874198913574
    6. '    ' → logprob: -15.386874198913574
    7. '&&' → logprob: -16.13687515258789
    8. 'a' → logprob: -16.13687515258789
    9. '   ' → logprob: -16.51187515258789
    10. 'andr' → logprob: -17.13687515258789

Token 475: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01636900007724762
    2. '           ' → logprob: -4.641368865966797
    3. ' mor' → logprob: -6.141368865966797
    4. '   ' → logprob: -6.641368865966797
    5. ' ' → logprob: -6.766368865966797
    6. '       ' → logprob: -7.641368865966797
    7. '              ' → logprob: -8.641368865966797
    8. '            ' → logprob: -8.766368865966797
    9. '                ' → logprob: -8.766368865966797
    10. 's' → logprob: -8.891368865966797

Token 476: ' #' (ID: 1069)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10682708770036697
    2. 'if' → logprob: -2.6068270206451416
    3. 'v' → logprob: -3.8568270206451416
    4. 'j' → logprob: -5.981827259063721
    5. 'mor' → logprob: -6.481827259063721
    6. '   ' → logprob: -7.481827259063721
    7. 'start' → logprob: -7.606827259063721
    8. 'l' → logprob: -8.231826782226562
    9. 'count' → logprob: -8.481826782226562
    10. 'c' → logprob: -8.481826782226562

Token 477: ' check' (ID: 2371)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4986562430858612
    2. 'if' → logprob: -1.1236562728881836
    3. 'j' → logprob: -3.7486562728881836
    4. 'v' → logprob: -4.123656272888184
    5. '#' → logprob: -4.498656272888184
    6. 'start' → logprob: -4.873656272888184
    7. 'mor' → logprob: -5.623656272888184
    8. 'c' → logprob: -6.998656272888184
    9. ' if' → logprob: -7.123656272888184
    10. ' mor' → logprob: -7.248656272888184

Token 478: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2526873052120209
    2. 'if' → logprob: -1.5026873350143433
    3. ' for' → logprob: -7.627687454223633
    4. 'for' → logprob: -8.877687454223633
    5. ' next' → logprob: -10.127687454223633
    6. '   ' → logprob: -10.377687454223633
    7. ' ' → logprob: -10.752687454223633
    8. '           ' → logprob: -11.502687454223633
    9. '	if' → logprob: -11.502687454223633
    10. 'next' → logprob: -11.752687454223633

Token 479: ' next' (ID: 2613)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.41077950596809387
    2. ' i' → logprob: -1.7857794761657715
    3. 's' → logprob: -2.4107794761657715
    4. ' s' → logprob: -2.5357794761657715
    5. ' ' → logprob: -8.53577995300293
    6. '   ' → logprob: -10.41077995300293
    7. '	i' → logprob: -11.53577995300293
    8. '  ' → logprob: -11.91077995300293
    9. ' ' → logprob: -12.66077995300293
    10. '(i' → logprob: -13.28577995300293

Token 480: ' char' (ID: 1826)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.26233845949172974
    2. 'char' → logprob: -2.762338399887085
    3. 's' → logprob: -3.012338399887085
    4. 'token' → logprob: -3.012338399887085
    5. ' i' → logprob: -4.262338638305664
    6. 'c' → logprob: -4.512338638305664
    7. '[i' → logprob: -4.887338638305664
    8. ' character' → logprob: -5.137338638305664
    9. 'character' → logprob: -5.387338638305664
    10. ' s' → logprob: -5.637338638305664

Token 481: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.18941743671894073
    2. ' ==' → logprob: -1.8144174814224243
    3. 's' → logprob: -4.939417362213135
    4. 'is' → logprob: -7.189417362213135
    5. ' is' → logprob: -7.689417362213135
    6. '[' → logprob: -7.939417362213135
    7. '=' → logprob: -8.439417839050293
    8. ')' → logprob: -8.814417839050293
    9. '```' → logprob: -8.939417839050293
    10. 'i' → logprob: -9.064417839050293

Token 482: ' same' (ID: 2684)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18474800884723663
    2. 'same' → logprob: -2.5597479343414307
    3. ' s' → logprob: -2.9347479343414307
    4. ' same' → logprob: -4.30974817276001
    5. 'the' → logprob: -4.30974817276001
    6. ' the' → logprob: -4.55974817276001
    7. 'equal' → logprob: -7.80974817276001
    8. ' equal' → logprob: -8.184747695922852
    9. ' ' → logprob: -9.684747695922852
    10. 'also' → logprob: -9.934747695922852

Token 483: ' vowel' (ID: 165542)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2862051725387573
    2. 'and' → logprob: -1.4112051725387573
    3. 's' → logprob: -5.411205291748047
    4. ' s' → logprob: -8.661205291748047
    5. '==' → logprob: -8.661205291748047
    6. ' ' → logprob: -9.536205291748047
    7. ' ==' → logprob: -9.661205291748047
    8. 'i' → logprob: -10.911205291748047
    9. 'a' → logprob: -11.161205291748047
    10. 'in' → logprob: -11.286205291748047

Token 484: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.038045283406972885
    2. 'and' → logprob: -3.2880451679229736
    3. ' ' → logprob: -13.163044929504395
    4. 's' → logprob: -14.788044929504395
    5. '           ' → logprob: -14.788044929504395
    6. 'i' → logprob: -15.913044929504395
    7. '                   ' → logprob: -16.03804588317871
    8. 'if' → logprob: -16.16304588317871
    9. '               ' → logprob: -16.28804588317871
    10. '   ' → logprob: -16.28804588317871

Token 485: 'long' (ID: 8431)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5241765379905701
    2. ' s' → logprob: -0.8991765379905701
    3. 'i' → logprob: -7.399176597595215
    4. ' i' → logprob: -8.024176597595215
    5. ' ' → logprob: -9.899176597595215
    6. '   ' → logprob: -10.399176597595215
    7. ')' → logprob: -11.274176597595215
    8. ' and' → logprob: -12.524176597595215
    9. ''s' → logprob: -13.024176597595215
    10. '       ' → logprob: -13.399176597595215

Token 486: ' vowel' (ID: 165542)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7677853107452393
    2. 'v' → logprob: -1.2677853107452393
    3. ' s' → logprob: -1.7677853107452393
    4. 'and' → logprob: -3.5177853107452393
    5. ' and' → logprob: -3.5177853107452393
    6. 'a' → logprob: -5.39278507232666
    7. 'i' → logprob: -5.39278507232666
    8. ')' → logprob: -5.64278507232666
    9. 'token' → logprob: -5.89278507232666
    10. ' vowel' → logprob: -5.89278507232666

Token 487: ')
' (ID: 446)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08985165506601334
    2. 'and' → logprob: -2.4648516178131104
    3. ')' → logprob: -7.7148518562316895
    4. 's' → logprob: -7.9648518562316895
    5. ' s' → logprob: -9.964851379394531
    6. ' ' → logprob: -10.214851379394531
    7. '(s' → logprob: -11.964851379394531
    8. '=' → logprob: -12.339851379394531
    9. ',' → logprob: -12.339851379394531
    10. '           ' → logprob: -13.214851379394531

Token 488: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.00885836686939001
    2. '               ' → logprob: -6.0088582038879395
    3. '                   ' → logprob: -6.3838582038879395
    4. '           ' → logprob: -6.6338582038879395
    5. ' ' → logprob: -7.1338582038879395
    6. ':' → logprob: -7.2588582038879395
    7. 'and' → logprob: -7.3838582038879395
    8. ' if' → logprob: -7.5088582038879395
    9. '   ' → logprob: -8.258858680725098
    10. ':
' → logprob: -8.633858680725098

Token 489: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25195884704589844
    2. 'if' (adapté à ' if') → logprob: -1.5019588470458984
    3. ' ' → logprob: -11.126958847045898
    4. '               ' → logprob: -12.126958847045898
    5. '   ' → logprob: -12.876958847045898
    6. '                   ' → logprob: -13.376958847045898
    7. 'v' → logprob: -13.501958847045898
    8. '	if' → logprob: -13.626958847045898
    9. '           ' → logprob: -13.876958847045898
    10. 'If' → logprob: -14.751958847045898

Token 490: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0186650138348341
    2. ' i' → logprob: -4.643664836883545
    3. 's' → logprob: -4.768664836883545
    4. ' s' → logprob: -8.018665313720703
    5. '   ' → logprob: -11.018665313720703
    6. '(i' → logprob: -11.143665313720703
    7. ' ' → logprob: -11.518665313720703
    8. '	i' → logprob: -12.643665313720703
    9. ' (' → logprob: -13.143665313720703
    10. '  ' → logprob: -14.143665313720703

Token 491: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.511406809295295e-06
    2. 'i' → logprob: -12.000006675720215
    3. ' [' → logprob: -16.7500057220459
    4. '```' → logprob: -16.8750057220459
    5. '   ' → logprob: -17.2500057220459
    6. '[
' → logprob: -17.3750057220459
    7. '[' → logprob: -17.5000057220459
    8. '           ' → logprob: -18.0000057220459
    9. 'a' → logprob: -19.0000057220459
    10. '==' → logprob: -19.1250057220459

Token 492: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13061167299747467
    2. ']' → logprob: -2.3806116580963135
    3. ']==' → logprob: -3.8806116580963135
    4. '==' → logprob: -5.380611896514893
    5. ' ==' → logprob: -6.255611896514893
    6. '+i' → logprob: -6.505611896514893
    7. ' +' → logprob: -7.630611896514893
    8. ']+' → logprob: -8.005611419677734
    9. 'i' → logprob: -8.005611419677734
    10. ':i' → logprob: -10.130611419677734

Token 493: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.625004768371582
    3. '0' → logprob: -14.187504768371582
    4. '```' → logprob: -15.375004768371582
    5. '   ' → logprob: -15.500004768371582
    6. 'i' → logprob: -16.1250057220459
    7. '2' → logprob: -16.2500057220459
    8. '+' → logprob: -16.3750057220459
    9. '
' → logprob: -16.9375057220459
    10. '`' → logprob: -17.1250057220459

Token 494: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.47953492403030396
    2. ' ==' → logprob: -0.979534924030304
    3. ']==' → logprob: -5.854535102844238
    4. ']' → logprob: -5.979535102844238
    5. '=' → logprob: -10.354535102844238
    6. ')' → logprob: -12.229535102844238
    7. '==
' → logprob: -12.604535102844238
    8. ')==' → logprob: -12.854535102844238
    9. '}' → logprob: -13.979535102844238
    10. 's' → logprob: -14.354535102844238

Token 495: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06205720454454422
    2. ' ==' → logprob: -2.8120572566986084
    3. '==
' → logprob: -10.187057495117188
    4. '=' → logprob: -10.687057495117188
    5. ' in' → logprob: -10.937057495117188
    6. 's' → logprob: -11.937057495117188
    7. 'in' → logprob: -13.187057495117188
    8. ' s' → logprob: -14.187057495117188
    9. ']==' → logprob: -14.312057495117188
    10. '===' → logprob: -14.562057495117188

Token 496: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007105246186256409
    2. ' s' → logprob: -7.250710487365723
    3. ' ' → logprob: -14.750710487365723
    4. 'c' → logprob: -16.50071144104004
    5. '   ' → logprob: -16.75071144104004
    6. '	s' → logprob: -18.62571144104004
    7. '_s' → logprob: -19.25071144104004
    8. '  ' → logprob: -19.25071144104004
    9. ' ' → logprob: -19.87571144104004
    10. '     ' → logprob: -20.37571144104004

Token 497: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0445127372804563e-05
    2. 'i' → logprob: -11.50001049041748
    3. '[' → logprob: -15.25001049041748
    4. '```' → logprob: -17.125009536743164
    5. '[
' → logprob: -17.500009536743164
    6. '[s' → logprob: -18.125009536743164
    7. '{i' → logprob: -18.375009536743164
    8. '`' → logprob: -18.500009536743164
    9. 's' → logprob: -19.625009536743164
    10. '[j' → logprob: -19.750009536743164

Token 498: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.19692181050777435
    2. ']:' → logprob: -1.8219218254089355
    3. ']' → logprob: -5.4469218254089355
    4. ':' → logprob: -5.5719218254089355
    5. ':
' → logprob: -5.5719218254089355
    6. 'i' → logprob: -6.4469218254089355
    7. '']:
' → logprob: -6.9469218254089355
    8. 's' → logprob: -7.3219218254089355
    9. '']:' → logprob: -7.8219218254089355
    10. '[i' → logprob: -7.8219218254089355

Token 499: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0038260871078819036
    2. '               ' → logprob: -6.128826141357422
    3. ':' → logprob: -7.753826141357422
    4. '                       ' → logprob: -8.003826141357422
    5. '           ' → logprob: -8.128826141357422
    6. ':
' → logprob: -8.253826141357422
    7. '                    
' → logprob: -10.003826141357422
    8. '                 ' → logprob: -10.128826141357422
    9. ',' → logprob: -10.128826141357422
    10. '                ' → logprob: -10.253826141357422

Token 500: ' #' (ID: 1069)
  Prédit: ' mor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mor' → logprob: -0.24230270087718964
    2. 'm' → logprob: -1.617302656173706
    3. 'mor' → logprob: -4.367302894592285
    4. '                   ' → logprob: -5.617302894592285
    5. 'i' → logprob: -9.117302894592285
    6. '               ' → logprob: -9.492302894592285
    7. '   ' → logprob: -9.867302894592285
    8. '                       ' → logprob: -10.117302894592285
    9. 's' → logprob: -10.242302894592285
    10. ' mors' → logprob: -10.492302894592285

Token 501: ' long' (ID: 1701)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10748818516731262
    2. ' mor' → logprob: -2.4824881553649902
    3. 'i' → logprob: -4.23248815536499
    4. 'mor' → logprob: -5.85748815536499
    5. '#' → logprob: -7.98248815536499
    6. '   ' → logprob: -8.107488632202148
    7. ' i' → logprob: -9.232488632202148
    8. '           ' → logprob: -9.607488632202148
    9. 'v' → logprob: -10.232488632202148
    10. 'long' → logprob: -10.607488632202148

Token 502: ' vowel' (ID: 165542)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.2646930515766144
    2. 'v' → logprob: -1.514693021774292
    3. '_m' → logprob: -5.264693260192871
    4. ' vowel' → logprob: -6.389693260192871
    5. 'm' → logprob: -6.514693260192871
    6. '_token' → logprob: -6.639693260192871
    7. 'token' → logprob: -6.889693260192871
    8. '_' → logprob: -7.014693260192871
    9. 'a' → logprob: -8.514693260192871
    10. 's' → logprob: -8.639693260192871

Token 503: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.044382669031620026
    2. '                   ' → logprob: -3.9193825721740723
    3. ' mor' → logprob: -4.419382572174072
    4. 's' → logprob: -5.544382572174072
    5. 'mor' → logprob: -5.794382572174072
    6. '               ' → logprob: -7.044382572174072
    7. ' =' → logprob: -7.169382572174072
    8. ' +=' → logprob: -7.169382572174072
    9. '                       ' → logprob: -7.544382572174072
    10. '
' → logprob: -7.919382572174072

Token 504: ' is' (ID: 382)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.4702244997024536
    2. 'm' → logprob: -1.7202244997024536
    3. 's' → logprob: -1.7202244997024536
    4. '                   ' → logprob: -1.8452244997024536
    5. ' =' → logprob: -2.095224380493164
    6. ' +=' → logprob: -2.595224380493164
    7. '               ' → logprob: -3.720224380493164
    8. ' mor' → logprob: -4.970224380493164
    9. '           ' → logprob: -5.095224380493164
    10. '                       ' → logprob: -5.345224380493164

Token 505: ' two' (ID: 1920)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3484606146812439
    2. ' s' → logprob: -1.2234606742858887
    3. ' ' → logprob: -12.22346019744873
    4. '   ' → logprob: -12.47346019744873
    5. '(s' → logprob: -13.09846019744873
    6. '	s' → logprob: -13.34846019744873
    7. 'c' → logprob: -14.59846019744873
    8. ''s' → logprob: -14.84846019744873
    9. '{s' → logprob: -14.97346019744873
    10. '"s' → logprob: -15.09846019744873

Token 506: ' mor' (ID: 4658)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6437506079673767
    2. 's' → logprob: -0.7687506079673767
    3. ' tokens' → logprob: -6.1437506675720215
    4. 'm' → logprob: -6.7687506675720215
    5. 'chars' → logprob: -6.7687506675720215
    6. 'tokens' → logprob: -6.7687506675720215
    7. ' chars' → logprob: -6.8937506675720215
    8. 'i' → logprob: -7.2687506675720215
    9. ' ' → logprob: -7.3937506675720215
    10. ' i' → logprob: -7.6437506675720215

Token 507: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.009305616840720177
    2. 'a' → logprob: -4.759305477142334
    3. 's' → logprob: -7.384305477142334
    4. ' s' → logprob: -11.509305953979492
    5. '   ' → logprob: -11.509305953979492
    6. 'i' → logprob: -11.634305953979492
    7. '```' → logprob: -11.884305953979492
    8. '
' → logprob: -12.009305953979492
    9. 'e' → logprob: -12.946805953979492
    10. '{
' → logprob: -13.321805953979492

Token 508: ',' (ID: 11)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1823480725288391
    2. '                   ' → logprob: -2.3073480129241943
    3. 'm' → logprob: -3.5573480129241943
    4. '               ' → logprob: -4.057348251342773
    5. 's' → logprob: -4.182348251342773
    6. ',' → logprob: -6.182348251342773
    7. '                       ' → logprob: -7.182348251342773
    8. '           ' → logprob: -7.307348251342773
    9. ' =' → logprob: -8.307348251342773
    10. 'append' → logprob: -8.432348251342773

Token 509: ' first' (ID: 1577)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.030439315363764763
    2. ' mor' → logprob: -3.6554393768310547
    3. 'mor' → logprob: -5.655439376831055
    4. '                   ' → logprob: -7.905439376831055
    5. '                       ' → logprob: -8.780439376831055
    6. '                           ' → logprob: -9.780439376831055
    7. '   ' → logprob: -11.155439376831055
    8. '               ' → logprob: -11.405439376831055
    9. ' m' → logprob: -12.030439376831055
    10. '[m' → logprob: -12.530439376831055

Token 510: ' usual' (ID: 19261)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9023487567901611
    2. '=' → logprob: -1.4023487567901611
    3. ' =' → logprob: -1.5273487567901611
    4. 'token' → logprob: -3.027348756790161
    5. 'm' → logprob: -3.402348756790161
    6. ' s' → logprob: -4.152348518371582
    7. ' token' → logprob: -4.152348518371582
    8. '_token' → logprob: -5.027348518371582
    9. '.append' → logprob: -5.902348518371582
    10. '=s' → logprob: -6.152348518371582

Token 511: ' vowel' (ID: 165542)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43993717432022095
    2. ' s' → logprob: -1.1899371147155762
    3. 'token' → logprob: -3.814937114715576
    4. ' token' → logprob: -4.564937114715576
    5. 'm' → logprob: -5.314937114715576
    6. ' mora' → logprob: -5.314937114715576
    7. ' and' → logprob: -5.939937114715576
    8. 'v' → logprob: -7.064937114715576
    9. ' vowel' → logprob: -7.189937114715576
    10. ' mor' → logprob: -7.314937114715576

Token 512: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7178893685340881
    2. '                   ' → logprob: -1.2178893089294434
    3. ',' → logprob: -2.2178893089294434
    4. ')' → logprob: -2.9678893089294434
    5. 's' → logprob: -3.8428893089294434
    6. '.append' → logprob: -4.842889308929443
    7. '           ' → logprob: -5.092889308929443
    8. 'm' → logprob: -5.217889308929443
    9. ')
' → logprob: -6.217889308929443
    10. ' =' → logprob: -6.342889308929443

Token 513: ' second' (ID: 3099)
  Prédit: ' mor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mor' → logprob: -0.1043088287115097
    2. 'm' → logprob: -2.729308843612671
    3. 'mor' → logprob: -3.854308843612671
    4. ' then' → logprob: -4.604308605194092
    5. 'then' → logprob: -6.604308605194092
    6. 'i' → logprob: -7.479308605194092
    7. ' i' → logprob: -8.10430908203125
    8. '   ' → logprob: -9.72930908203125
    9. '                   ' → logprob: -9.72930908203125
    10. ' and' → logprob: -10.22930908203125

Token 514: ' long' (ID: 1701)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6330627799034119
    2. 's' → logprob: -0.7580627799034119
    3. ' V' → logprob: -9.258062362670898
    4. 'V' → logprob: -9.633062362670898
    5. ' ' → logprob: -10.133062362670898
    6. ' (' → logprob: -10.383062362670898
    7. '{s' → logprob: -10.383062362670898
    8. '   ' → logprob: -10.758062362670898
    9. ''s' → logprob: -10.758062362670898
    10. ' =' → logprob: -10.758062362670898

Token 515: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09700864553451538
    2. ' s' → logprob: -2.59700870513916
    3. 'v' → logprob: -4.22200870513916
    4. ' vowel' → logprob: -6.34700870513916
    5. ' ' → logprob: -7.59700870513916
    6. 'i' → logprob: -7.72200870513916
    7. '   ' → logprob: -8.22200870513916
    8. 'V' → logprob: -9.59700870513916
    9. '_' → logprob: -10.09700870513916
    10. '_v' → logprob: -10.47200870513916

Token 516: '                   ' (ID: 699)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6894601583480835
    2. 's' → logprob: -0.8144601583480835
    3. ' (' → logprob: -4.189460277557373
    4. '                   ' → logprob: -4.189460277557373
    5. '           ' → logprob: -5.189460277557373
    6. '               ' → logprob: -5.439460277557373
    7. '   ' → logprob: -5.689460277557373
    8. ',' → logprob: -6.439460277557373
    9. 'm' → logprob: -6.439460277557373
    10. '(s' → logprob: -6.564460277557373

Token 517: ' #' (ID: 1069)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.43647605180740356
    2. ' mor' → logprob: -1.0614759922027588
    3. 'mor' → logprob: -4.936476230621338
    4. '                   ' → logprob: -7.686476230621338
    5. '   ' → logprob: -10.31147575378418
    6. ' ' → logprob: -11.31147575378418
    7. 'v' → logprob: -11.31147575378418
    8. '                       ' → logprob: -11.31147575378418
    9. '               ' → logprob: -11.93647575378418
    10. 's' → logprob: -12.18647575378418

Token 518: ' but' (ID: 889)
  Prédit: ' mor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mor' → logprob: -0.061433758586645126
    2. 'm' → logprob: -2.936433792114258
    3. 'mor' → logprob: -5.061433792114258
    4. '                   ' → logprob: -9.061433792114258
    5. '   ' → logprob: -10.061433792114258
    6. ' mors' → logprob: -11.811433792114258
    7. 'v' → logprob: -12.061433792114258
    8. ' mora' → logprob: -12.686433792114258
    9. '               ' → logprob: -12.811433792114258
    10. '                       ' → logprob: -12.811433792114258

Token 519: ' problem' (ID: 4792)
  Prédit: ' mor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mor' → logprob: -0.2611021399497986
    2. ' i' → logprob: -2.1361021995544434
    3. 'i' → logprob: -3.2611021995544434
    4. ' here' → logprob: -3.7611021995544434
    5. ' we' → logprob: -4.136102199554443
    6. '#' → logprob: -4.636102199554443
    7. ' #' → logprob: -5.261102199554443
    8. 'mor' → logprob: -5.636102199554443
    9. 'm' → logprob: -6.011102199554443
    10. ' for' → logprob: -6.511102199554443

Token 520: ' represents' (ID: 18627)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0042169094085693
    2. '                   ' → logprob: -1.3792169094085693
    3. ' +=' → logprob: -2.0042169094085693
    4. '               ' → logprob: -2.5042169094085693
    5. ' continues' → logprob: -3.6292169094085693
    6. '   ' → logprob: -4.379217147827148
    7. '           ' → logprob: -4.504217147827148
    8. '.append' → logprob: -4.629217147827148
    9. ' =' → logprob: -4.754217147827148
    10. '[' → logprob: -4.754217147827148

Token 521: ' long' (ID: 1701)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -1.4631378650665283
    2. ' long' → logprob: -1.4631378650665283
    3. ' s' → logprob: -1.7131378650665283
    4. 'long' → logprob: -2.4631378650665283
    5. ' the' → logprob: -2.7131378650665283
    6. ' both' → logprob: -3.3381378650665283
    7. ' them' → logprob: -3.3381378650665283
    8. ' vowels' → logprob: -3.5881378650665283
    9. 's' → logprob: -3.9631378650665283
    10. '#' → logprob: -4.463137626647949

Token 522: ' vowel' (ID: 165542)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.035946521908044815
    2. '_v' → logprob: -4.535946369171143
    3. 'v' → logprob: -5.035946369171143
    4. ' ' → logprob: -5.285946369171143
    5. ' _' → logprob: -5.785946369171143
    6. ' vowel' → logprob: -5.910946369171143
    7. 's' → logprob: -6.410946369171143
    8. ')' → logprob: -6.785946369171143
    9. ' vowels' → logprob: -6.785946369171143
    10. 'a' → logprob: -7.285946369171143

Token 523: ' by' (ID: 656)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.290639877319336
    2. ' as' → logprob: -1.290639877319336
    3. '               ' → logprob: -1.540639877319336
    4. '                   ' → logprob: -2.165639877319336
    5. 'm' → logprob: -3.415639877319336
    6. ' s' → logprob: -3.790639877319336
    7. ' mor' → logprob: -4.540639877319336
    8. '           ' → logprob: -4.790639877319336
    9. ' (' → logprob: -5.290639877319336
    10. 'i' → logprob: -5.415639877319336

Token 524: ' repeated' (ID: 24161)
  Prédit: ' adding'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adding' → logprob: -0.6012285351753235
    2. ' two' → logprob: -1.6012284755706787
    3. ' s' → logprob: -2.6012284755706787
    4. ' app' → logprob: -2.8512284755706787
    5. ' mor' → logprob: -3.9762284755706787
    6. ' doubling' → logprob: -3.9762284755706787
    7. ' repeating' → logprob: -4.476228713989258
    8. ' splitting' → logprob: -4.726228713989258
    9. 'two' → logprob: -4.851228713989258
    10. 's' → logprob: -4.851228713989258

Token 525: ' vowels' (ID: 176245)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.056395042687654495
    2. ' vowel' → logprob: -3.9313950538635254
    3. 's' → logprob: -4.556395053863525
    4. ' vowels' → logprob: -4.931395053863525
    5. 'm' → logprob: -5.681395053863525
    6. 'char' → logprob: -5.681395053863525
    7. ' s' → logprob: -6.056395053863525
    8. ' character' → logprob: -6.056395053863525
    9. 'token' → logprob: -6.181395053863525
    10. 'character' → logprob: -6.681395053863525

Token 526: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11172279715538025
    2. '               ' → logprob: -2.986722707748413
    3. '                       ' → logprob: -3.736722707748413
    4. 'm' → logprob: -5.236722946166992
    5. ':
' → logprob: -5.736722946166992
    6. 's' → logprob: -5.736722946166992
    7. '           ' → logprob: -6.111722946166992
    8. ':' → logprob: -6.361722946166992
    9. '                    
' → logprob: -6.361722946166992
    10. ' and' → logprob: -6.611722946166992

Token 527: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.058022383600473404
    2. '               ' → logprob: -3.1830224990844727
    3. '                       ' → logprob: -4.933022499084473
    4. ':
' → logprob: -6.308022499084473
    5. ':' → logprob: -6.808022499084473
    6. ',' → logprob: -6.933022499084473
    7. '           ' → logprob: -7.058022499084473
    8. 's' → logprob: -7.433022499084473
    9. '):
' → logprob: -7.558022499084473
    10. '       ' → logprob: -8.183022499084473

Token 528: ' mor' (ID: 4658)
  Prédit: ' mor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mor' → logprob: -0.44701334834098816
    2. 'm' → logprob: -1.0720133781433105
    3. 'mor' (adapté à ' mor') → logprob: -4.1970133781433105
    4. '                   ' → logprob: -5.9470133781433105
    5. '   ' → logprob: -8.322012901306152
    6. '                       ' → logprob: -9.447012901306152
    7. '               ' → logprob: -10.072012901306152
    8. 'v' → logprob: -10.197012901306152
    9. ' ' → logprob: -11.322012901306152
    10. 'i' → logprob: -11.572012901306152

Token 529: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.0012709470465779305
    2. 'a' → logprob: -7.001270771026611
    3. 's' → logprob: -8.12627124786377
    4. '```' → logprob: -11.87627124786377
    5. '   ' → logprob: -11.93877124786377
    6. '
' → logprob: -11.93877124786377
    7. '``' → logprob: -12.68877124786377
    8. 'ас' → logprob: -12.93877124786377
    9. ' as' → logprob: -13.00127124786377
    10. '=' → logprob: -13.12627124786377

Token 530: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.221884101862088e-05
    2. '.' → logprob: -9.500092506408691
    3. '.extend' → logprob: -11.000092506408691
    4. '.app' → logprob: -15.000092506408691
    5. 'append' → logprob: -16.125091552734375
    6. ' .' → logprob: -16.250091552734375
    7. '.ap' → logprob: -16.375091552734375
    8. '+=' → logprob: -17.750091552734375
    9. '.Append' → logprob: -18.375091552734375
    10. '.pop' → logprob: -18.375091552734375

Token 531: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01821795664727688
    2. '(s' → logprob: -4.018218040466309
    3. ' s' → logprob: -9.643218040466309
    4. '(' → logprob: -14.018218040466309
    5. '	s' → logprob: -14.143218040466309
    6. 'c' → logprob: -14.143218040466309
    7. '{s' → logprob: -15.018218040466309
    8. '   ' → logprob: -15.268218040466309
    9. ' ' → logprob: -15.518218040466309
    10. '_s' → logprob: -16.893217086791992

Token 532: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[
' → logprob: -14.000000953674316
    3. '[' → logprob: -15.750000953674316
    4. 'i' → logprob: -16.375001907348633
    5. '
' → logprob: -17.500001907348633
    6. '```' → logprob: -19.500001907348633
    7. 's' → logprob: -19.875001907348633
    8. ' [' → logprob: -20.125001907348633
    9. ')[' → logprob: -20.250001907348633
    10. '[c' → logprob: -20.375001907348633

Token 533: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30380725860595703
    2. ')
' → logprob: -1.928807258605957
    3. '])' → logprob: -2.553807258605957
    4. 'i' → logprob: -4.053807258605957
    5. '])
' → logprob: -5.053807258605957
    6. ']' → logprob: -5.053807258605957
    7. ')i' → logprob: -5.553807258605957
    8. 's' → logprob: -5.803807258605957
    9. '')' → logprob: -7.928807258605957
    10. ')s' → logprob: -8.303807258605957

Token 534: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8681302070617676
    2. '                   ' → logprob: -1.2431302070617676
    3. 'i' → logprob: -1.8681302070617676
    4. '       ' → logprob: -2.7431302070617676
    5. '               ' → logprob: -3.8681302070617676
    6. ')' → logprob: -4.118130207061768
    7. '<|end|>' → logprob: -4.743130207061768
    8. ' i' → logprob: -4.993130207061768
    9. ' 
' → logprob: -5.493130207061768
    10. '<|end|>' → logprob: -6.118130207061768

Token 535: ' mor' (ID: 4658)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04915282875299454
    2. 'm' → logprob: -3.1741528511047363
    3. '                   ' → logprob: -5.174152851104736
    4. 'mor' (adapté à ' mor') → logprob: -9.299152374267578
    5. ' i' → logprob: -9.424152374267578
    6. '               ' → logprob: -9.549152374267578
    7. '           ' → logprob: -9.799152374267578
    8. 's' → logprob: -9.799152374267578
    9. '   ' → logprob: -10.049152374267578
    10. ' mor' → logprob: -10.549152374267578

Token 536: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -2.7610454708337784e-05
    2. 'a' → logprob: -10.875027656555176
    3. 's' → logprob: -12.250027656555176
    4. '[' → logprob: -13.375027656555176
    5. ' as' → logprob: -14.750027656555176
    6. '
' → logprob: -14.750027656555176
    7. '   ' → logprob: -16.00002670288086
    8. '``' → logprob: -16.00002670288086
    9. '```' → logprob: -16.00002670288086
    10. '=' → logprob: -16.12502670288086

Token 537: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00028410006780177355
    2. '.' → logprob: -8.875284194946289
    3. '+=' → logprob: -9.875284194946289
    4. '.extend' → logprob: -9.875284194946289
    5. 'append' → logprob: -10.375284194946289
    6. '_append' → logprob: -13.250284194946289
    7. '+' → logprob: -13.375284194946289
    8. '.pop' → logprob: -13.625284194946289
    9. '.app' → logprob: -13.875284194946289
    10. '=' → logprob: -14.250284194946289

Token 538: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -6.015305552864447e-05
    2. 's' → logprob: -9.750060081481934
    3. '(' → logprob: -13.250060081481934
    4. '(
' → logprob: -18.62506103515625
    5. ' s' → logprob: -20.87506103515625
    6. '	s' → logprob: -21.00006103515625
    7. '((' → logprob: -21.25006103515625
    8. '('' → logprob: -21.37506103515625
    9. '{s' → logprob: -21.87506103515625
    10. '[s' → logprob: -22.00006103515625

Token 539: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -14.125000953674316
    3. 'i' → logprob: -15.250000953674316
    4. '[
' → logprob: -15.875000953674316
    5. ']' → logprob: -18.375001907348633
    6. '[j' → logprob: -18.875001907348633
    7. ' [' → logprob: -19.375001907348633
    8. '(i' → logprob: -19.625001907348633
    9. ')' → logprob: -20.250001907348633
    10. '][' → logprob: -20.375001907348633

Token 540: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0001777960715116933
    2. '])' → logprob: -8.750177383422852
    3. '[' → logprob: -11.625177383422852
    4. '[i' → logprob: -12.000177383422852
    5. ' +' → logprob: -13.500177383422852
    6. '])
' → logprob: -13.875177383422852
    7. ']' → logprob: -14.000177383422852
    8. '+i' → logprob: -15.000177383422852
    9. '+
' → logprob: -15.500177383422852
    10. 'i' → logprob: -15.500177383422852

Token 541: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.50000286102295
    3. '])' → logprob: -13.87500286102295
    4. '+' → logprob: -15.62500286102295
    5. ']' → logprob: -15.75000286102295
    6. '0' → logprob: -16.250001907348633
    7. ')' → logprob: -17.500001907348633
    8. '[' → logprob: -17.500001907348633
    9. '   ' → logprob: -17.500001907348633
    10. 'i' → logprob: -17.625001907348633

Token 542: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07294744998216629
    2. ')' → logprob: -2.8229475021362305
    3. '])
' → logprob: -4.6979475021362305
    4. ')
' → logprob: -6.4479475021362305
    5. ']' → logprob: -9.19794750213623
    6. ''])' → logprob: -9.57294750213623
    7. ' ])' → logprob: -11.44794750213623
    8. '))' → logprob: -11.69794750213623
    9. ' )' → logprob: -12.07294750213623
    10. '）' → logprob: -12.07294750213623

Token 543: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -5.3358446166384965e-05
    2. '               ' → logprob: -10.125053405761719
    3. '           ' → logprob: -11.875053405761719
    4. '                    
' → logprob: -12.750053405761719
    5. '                       ' → logprob: -14.250053405761719
    6. '				' → logprob: -14.625053405761719
    7. '       ' → logprob: -14.625053405761719
    8. '                  ' → logprob: -14.750053405761719
    9. '		           ' → logprob: -14.875053405761719
    10. '                    ' → logprob: -15.250053405761719

Token 544: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.036031387746334076
    2. ' i' → logprob: -3.661031484603882
    3. '                   ' → logprob: -4.661031246185303
    4. '           ' → logprob: -8.786031723022461
    5. '               ' → logprob: -10.536031723022461
    6. '
' → logprob: -10.786031723022461
    7. '   ' → logprob: -11.536031723022461
    8. '                    
' → logprob: -11.911031723022461
    9. ',i' → logprob: -13.036031723022461
    10. ' ' → logprob: -13.161031723022461

Token 545: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014163628220558167
    2. ' +=' → logprob: -4.264163494110107
    3. '+' → logprob: -17.014163970947266
    4. '=' → logprob: -17.764163970947266
    5. '   ' → logprob: -20.014163970947266
    6. '+=(' → logprob: -20.139163970947266
    7. ']+=' → logprob: -20.389163970947266
    8. '+="' → logprob: -20.514163970947266
    9. '+='' → logprob: -21.264163970947266
    10. ' ' → logprob: -22.264163970947266

Token 546: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.25002098083496
    4. '۲' → logprob: -17.75002098083496
    5. '２' → logprob: -18.12502098083496
    6. '  ' → logprob: -18.25002098083496
    7. '```' → logprob: -18.87502098083496
    8. '٢' → logprob: -19.75002098083496
    9. '²' → logprob: -19.87502098083496
    10. '२' → logprob: -20.00002098083496

Token 547: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '۲' → logprob: -19.5
    4. '２' → logprob: -20.625
    5. '1' → logprob: -21.375
    6. '   ' → logprob: -21.5
    7. '22' → logprob: -21.8125
    8. '२' → logprob: -22.0
    9. '٢' → logprob: -22.125
    10. '3' → logprob: -22.1875

Token 548: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010657613165676594
    2. '           ' → logprob: -4.635657787322998
    3. 'else' → logprob: -7.885657787322998
    4. '                   ' → logprob: -8.26065731048584
    5. ' else' → logprob: -8.88565731048584
    6. 'elif' → logprob: -9.76065731048584
    7. '       ' → logprob: -9.76065731048584
    8. ' elif' → logprob: -13.01065731048584
    9. ')' → logprob: -13.63565731048584
    10. '   ' → logprob: -13.63565731048584

Token 549: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23401664197444916
    2. '           ' → logprob: -1.8590166568756104
    3. 'else' → logprob: -3.3590166568756104
    4. ' else' → logprob: -5.109016418457031
    5. '                   ' → logprob: -5.359016418457031
    6. '       ' → logprob: -5.484016418457031
    7. 'elif' → logprob: -6.234016418457031
    8. '```' → logprob: -7.609016418457031
    9. '<|end|>' → logprob: -8.609016418457031
    10. '\n' → logprob: -9.109016418457031

Token 550: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3807358145713806
    2. '           ' → logprob: -1.3807358741760254
    3. '               ' → logprob: -3.1307358741760254
    4. ' else' → logprob: -3.8807358741760254
    5. 'elif' → logprob: -7.255735874176025
    6. '       ' → logprob: -8.755735397338867
    7. '```' → logprob: -10.630735397338867
    8. '	else' → logprob: -11.505735397338867
    9. '                   ' → logprob: -11.755735397338867
    10. '   ' → logprob: -12.255735397338867

Token 551: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7547985911369324
    2. ':
' → logprob: -1.0047986507415771
    3. ':' → logprob: -2.004798650741577
    4. '   ' → logprob: -4.504798412322998
    5. '           ' → logprob: -4.629798412322998
    6. '               ' → logprob: -4.879798412322998
    7. '       ' → logprob: -8.879798889160156
    8. 'm' → logprob: -8.879798889160156
    9. '                       ' → logprob: -9.504798889160156
    10. 's' → logprob: -10.004798889160156

Token 552: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5694719552993774
    2. '   ' → logprob: -1.3194719552993774
    3. 'm' → logprob: -1.9444719552993774
    4. '               ' → logprob: -4.319471836090088
    5. '           ' → logprob: -5.194471836090088
    6. 'mor' → logprob: -6.319471836090088
    7. '       ' → logprob: -6.819471836090088
    8. ' mor' → logprob: -6.944471836090088
    9. ' ' → logprob: -8.194472312927246
    10. '                       ' → logprob: -8.694472312927246

Token 553: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.31488460302352905
    2. ' mor' → logprob: -1.3148846626281738
    3. 'mor' (adapté à ' mor') → logprob: -6.439884662628174
    4. '   ' → logprob: -11.314884185791016
    5. '                   ' → logprob: -12.689884185791016
    6. ' mora' → logprob: -13.064884185791016
    7. ' mors' → logprob: -13.439884185791016
    8. ' ' → logprob: -13.689884185791016
    9. '	m' → logprob: -13.814884185791016
    10. '           ' → logprob: -14.064884185791016

Token 554: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -1.8789383830153383e-05
    2. 'a' → logprob: -11.375019073486328
    3. '           ' → logprob: -13.375019073486328
    4. '   ' → logprob: -13.625019073486328
    5. '[' → logprob: -14.125019073486328
    6. '```' → logprob: -14.125019073486328
    7. 'ases' → logprob: -14.375019073486328
    8. 's' → logprob: -14.625019073486328
    9. '(as' → logprob: -15.000019073486328
    10. '          ' → logprob: -15.250019073486328

Token 555: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001596771035110578
    2. '.' → logprob: -8.75015926361084
    3. 'append' → logprob: -14.25015926361084
    4. '.app' → logprob: -14.87515926361084
    5. ' .' → logprob: -16.125160217285156
    6. '.Append' → logprob: -17.500160217285156
    7. '           ' → logprob: -17.500160217285156
    8. ' append' → logprob: -17.750160217285156
    9. '.add' → logprob: -18.250160217285156
    10. '.ap' → logprob: -18.500160217285156

Token 556: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.1269376575946808
    2. 's' → logprob: -2.1269376277923584
    3. 'c' → logprob: -12.751937866210938
    4. '(' → logprob: -12.751937866210938
    5. ' s' → logprob: -13.251937866210938
    6. '(c' → logprob: -13.501937866210938
    7. '(
' → logprob: -15.001937866210938
    8. '   ' → logprob: -16.126937866210938
    9. '	s' → logprob: -16.376937866210938
    10. '{s' → logprob: -17.751937866210938

Token 557: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. 'i' → logprob: -16.625
    3. '[
' → logprob: -17.125
    4. '[' → logprob: -17.625
    5. '```' → logprob: -18.5
    6. ')' → logprob: -18.75
    7. '[I' → logprob: -20.5
    8. ')[' → logprob: -20.625
    9. '(i' → logprob: -20.75
    10. '`' → logprob: -21.125

Token 558: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02344951592385769
    2. ')' → logprob: -3.773449420928955
    3. ')i' → logprob: -9.648449897766113
    4. ')
' → logprob: -10.273449897766113
    5. '])
' → logprob: -10.523449897766113
    6. 'i' → logprob: -10.648449897766113
    7. '           ' → logprob: -11.398449897766113
    8. '                   ' → logprob: -11.523449897766113
    9. ' )
' → logprob: -11.648449897766113
    10. '')
' → logprob: -11.773449897766113

Token 559: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0014038024237379432
    2. '           ' → logprob: -7.00140380859375
    3. '               ' → logprob: -8.00140380859375
    4. 'i' → logprob: -9.87640380859375
    5. '       ' → logprob: -10.12640380859375
    6. '   ' → logprob: -10.50140380859375
    7. '		           ' → logprob: -11.37640380859375
    8. '	               ' → logprob: -12.50140380859375
    9. '				' → logprob: -12.62640380859375
    10. '                    
' → logprob: -12.87640380859375

Token 560: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0010554377222433686
    2. ' i' → logprob: -7.0010552406311035
    3. '                   ' → logprob: -8.876055717468262
    4. '   ' → logprob: -13.376055717468262
    5. '               ' → logprob: -14.001055717468262
    6. '           ' → logprob: -14.251055717468262
    7. '	i' → logprob: -14.376055717468262
    8. ',i' → logprob: -14.751055717468262
    9. '_i' → logprob: -17.001054763793945
    10. '                  ' → logprob: -17.501054763793945

Token 561: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004081367049366236
    2. ' +=' → logprob: -5.5040812492370605
    3. '+' → logprob: -12.754081726074219
    4. '=' → logprob: -17.37908172607422
    5. ']+=' → logprob: -17.50408172607422
    6. '+="' → logprob: -19.62908172607422
    7. '+='' → logprob: -20.12908172607422
    8. '++' → logprob: -21.12908172607422
    9. ')' → logprob: -21.12908172607422
    10. '```' → logprob: -21.25408172607422

Token 562: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -19.500003814697266
    4. '１' → logprob: -19.625003814697266
    5. '   ' → logprob: -19.875003814697266
    6. '۱' → logprob: -20.875003814697266
    7. '`' → logprob: -21.562503814697266
    8. '0' → logprob: -21.812503814697266
    9. '=' → logprob: -22.125003814697266
    10. '' → logprob: -22.187503814697266

Token 563: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '１' → logprob: -20.75
    4. '۱' → logprob: -21.5
    5. '```' → logprob: -22.125
    6. '2' → logprob: -22.6875
    7. '0' → logprob: -22.8125
    8. '   ' → logprob: -23.0625
    9. '11' → logprob: -23.25
    10. '' → logprob: -23.625

Token 564: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28203466534614563
    2. 'else' → logprob: -1.7820346355438232
    3. 'elif' → logprob: -3.7820346355438232
    4. '```' → logprob: -4.032034873962402
    5. '           ' → logprob: -4.157034873962402
    6. '<|end|>' → logprob: -4.282034873962402
    7. ' else' → logprob: -5.282034873962402
    8. '   ' → logprob: -7.657034873962402
    9. '	else' → logprob: -8.032034873962402
    10. '\n' → logprob: -8.032034873962402

Token 565: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009801307693123817
    2. 'else' → logprob: -4.759801387786865
    3. 'elif' → logprob: -7.009801387786865
    4. ' else' → logprob: -8.759800910949707
    5. '           ' → logprob: -10.134800910949707
    6. '   ' → logprob: -10.884800910949707
    7. '```' → logprob: -11.259800910949707
    8. '	else' → logprob: -11.509800910949707
    9. '<|end|>' → logprob: -11.634800910949707
    10. '	' → logprob: -11.759800910949707

Token 566: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1409880369901657
    2. '       ' → logprob: -2.1409881114959717
    3. '           ' → logprob: -4.515987873077393
    4. ' else' → logprob: -6.390987873077393
    5. 'elif' → logprob: -6.640987873077393
    6. '   ' → logprob: -11.14098834991455
    7. '	else' → logprob: -11.39098834991455
    8. '```' → logprob: -12.14098834991455
    9. 'continue' → logprob: -12.26598834991455
    10. '               ' → logprob: -12.51598834991455

Token 567: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10026317834854126
    2. ':
' → logprob: -2.3502631187438965
    3. '   ' → logprob: -11.350263595581055
    4. '{' → logprob: -11.350263595581055
    5. ' :' → logprob: -11.475263595581055
    6. '           ' → logprob: -12.350263595581055
    7. '{
' → logprob: -12.725263595581055
    8. '       ' → logprob: -12.850263595581055
    9. ':

' → logprob: -12.975263595581055
    10. ' :
' → logprob: -12.975263595581055

Token 568: '               ' (ID: 506)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.30091702938079834
    2. ' i' → logprob: -2.550917148590088
    3. '               ' → logprob: -2.675917148590088
    4. '           ' → logprob: -3.175917148590088
    5. '       ' → logprob: -3.550917148590088
    6. '   ' → logprob: -3.800917148590088
    7. '                   ' → logprob: -4.425917148590088
    8. 'raise' → logprob: -5.800917148590088
    9. ' mor' → logprob: -6.300917148590088
    10. ' raise' → logprob: -6.425917148590088

Token 569: ' #' (ID: 1069)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03573281690478325
    2. 'i' → logprob: -3.5357327461242676
    3. '   ' → logprob: -5.535732746124268
    4. '#' (adapté à ' #') → logprob: -7.410732746124268
    5. 'mor' → logprob: -7.535732746124268
    6. 'break' → logprob: -8.035733222961426
    7. ' mor' → logprob: -8.160733222961426
    8. 'raise' → logprob: -9.660733222961426
    9. ' i' → logprob: -9.910733222961426
    10. '           ' → logprob: -10.160733222961426

Token 570: ' single' (ID: 4590)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0028224699199199677
    2. 'i' → logprob: -6.127822399139404
    3. '#' → logprob: -7.627822399139404
    4. 'break' → logprob: -9.502822875976562
    5. '   ' → logprob: -10.002822875976562
    6. 'mor' → logprob: -11.377822875976562
    7. 'raise' → logprob: -12.252822875976562
    8. '       ' → logprob: -13.127822875976562
    9. ' mor' → logprob: -13.502822875976562
    10. 'if' → logprob: -13.627822875976562

Token 571: ' char' (ID: 1826)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2545972466468811
    2. ' s' → logprob: -1.8795971870422363
    3. ' mor' → logprob: -3.2545971870422363
    4. 'm' → logprob: -3.8795971870422363
    5. 'c' → logprob: -5.254597187042236
    6. '           ' → logprob: -6.879597187042236
    7. 'mor' → logprob: -6.879597187042236
    8. ' c' → logprob: -7.004597187042236
    9. '               ' → logprob: -7.004597187042236
    10. '{
' → logprob: -7.254597187042236

Token 572: ' vowel' (ID: 165542)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8067345023155212
    2. '           ' → logprob: -1.681734561920166
    3. ':
' → logprob: -1.931734561920166
    4. '.append' → logprob: -2.931734561920166
    5. ':' → logprob: -3.431734561920166
    6. 's' → logprob: -3.681734561920166
    7. '                   ' → logprob: -4.431734561920166
    8. '[' → logprob: -4.681734561920166
    9. '[i' → logprob: -4.681734561920166
    10. '\' → logprob: -4.806734561920166

Token 573: ' or' (ID: 503)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6899914145469666
    2. '           ' → logprob: -0.8149914145469666
    3. '                   ' → logprob: -3.9399914741516113
    4. '<|end|>' → logprob: -4.939991474151611
    5. ')' → logprob: -5.189991474151611
    6. '<|end|>' → logprob: -5.314991474151611
    7. 's' → logprob: -5.439991474151611
    8. '       ' → logprob: -5.689991474151611
    9. ' or' → logprob: -6.314991474151611
    10. 'else' → logprob: -6.564991474151611

Token 574: ' conson' (ID: 127767)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3806496858596802
    2. 'c' → logprob: -1.6306496858596802
    3. 'i' → logprob: -1.8806496858596802
    4. 'con' → logprob: -1.8806496858596802
    5. 'm' → logprob: -2.2556495666503906
    6. ' conson' → logprob: -2.8806495666503906
    7. ' mor' → logprob: -3.6306495666503906
    8. ' s' → logprob: -3.7556495666503906
    9. ' i' → logprob: -4.130649566650391
    10. 'mor' → logprob: -5.005649566650391

Token 575: 'ant' (ID: 493)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14417654275894165
    2. '           ' → logprob: -2.519176483154297
    3. 's' → logprob: -3.769176483154297
    4. ')' → logprob: -4.394176483154297
    5. '              ' → logprob: -5.769176483154297
    6. ')
' → logprob: -6.019176483154297
    7. 'else' → logprob: -6.394176483154297
    8. '                   ' → logprob: -6.519176483154297
    9. 'elif' → logprob: -6.894176483154297
    10. 't' → logprob: -7.019176483154297

Token 576: ' alone' (ID: 11238)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22794204950332642
    2. '           ' → logprob: -1.8529419898986816
    3. '                   ' → logprob: -4.102941989898682
    4. ':
' → logprob: -4.602941989898682
    5. '       ' → logprob: -5.477941989898682
    6. 's' → logprob: -5.602941989898682
    7. '                
' → logprob: -5.977941989898682
    8. '            
' → logprob: -6.352941989898682
    9. 'm' → logprob: -6.727941989898682
    10. '{
' → logprob: -7.102941989898682

Token 577: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12762369215488434
    2. '           ' → logprob: -2.2526237964630127
    3. ':
' → logprob: -5.002623558044434
    4. '                   ' → logprob: -5.627623558044434
    5. '       ' → logprob: -6.502623558044434
    6. '                
' → logprob: -7.127623558044434
    7. '            
' → logprob: -7.752623558044434
    8. '   ' → logprob: -8.502623558044434
    9. ':' → logprob: -8.877623558044434
    10. ',' → logprob: -9.002623558044434

Token 578: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1708226203918457
    2. '                   ' → logprob: -2.2958226203918457
    3. ':
' → logprob: -3.5458226203918457
    4. ':' → logprob: -4.545822620391846
    5. '           ' → logprob: -5.170822620391846
    6. 'i' → logprob: -6.420822620391846
    7. '[i' → logprob: -7.045822620391846
    8. '                
' → logprob: -7.045822620391846
    9. 's' → logprob: -7.170822620391846
    10. '   ' → logprob: -7.420822620391846

Token 579: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.009967030957341194
    2. ' mor' → logprob: -5.009966850280762
    3. 'mor' (adapté à ' mor') → logprob: -6.384966850280762
    4. '                   ' → logprob: -7.009966850280762
    5. 'i' → logprob: -7.759966850280762
    6. '               ' → logprob: -9.384966850280762
    7. '           ' → logprob: -9.509966850280762
    8. '   ' → logprob: -11.259966850280762
    9. ' i' → logprob: -11.259966850280762
    10. ' m' → logprob: -11.509966850280762

Token 580: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.0001005630983854644
    2. 'a' → logprob: -9.375100135803223
    3. 's' → logprob: -11.500100135803223
    4. 'oras' → logprob: -14.000100135803223
    5. '[' → logprob: -14.750100135803223
    6. 'i' → logprob: -14.875100135803223
    7. 'e' → logprob: -15.125100135803223
    8. '   ' → logprob: -15.187600135803223
    9. 'm' → logprob: -15.250100135803223
    10. 'es' → logprob: -15.500100135803223

Token 581: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.02325223572552204
    2. '.' → logprob: -3.773252248764038
    3. 'append' → logprob: -12.648252487182617
    4. '.app' → logprob: -13.148252487182617
    5. '.Append' → logprob: -14.773252487182617
    6. ' .' → logprob: -15.148252487182617
    7. '           ' → logprob: -15.148252487182617
    8. '.extend' → logprob: -15.648252487182617
    9. '.
' → logprob: -16.523252487182617
    10. ' append' → logprob: -16.648252487182617

Token 582: '(s' (ID: 1858)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1470935195684433
    2. 's' → logprob: -2.3970935344696045
    3. '(c' → logprob: -3.3970935344696045
    4. '(s' → logprob: -4.397093296051025
    5. ' c' → logprob: -11.022093772888184
    6. '(' → logprob: -13.147093772888184
    7. ' s' → logprob: -14.022093772888184
    8. '	c' → logprob: -14.397093772888184
    9. '[c' → logprob: -14.772093772888184
    10. ')c' → logprob: -14.772093772888184

Token 583: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. 'i' → logprob: -16.25
    3. '[c' → logprob: -16.25
    4. 'c' → logprob: -17.75
    5. '[' → logprob: -18.25
    6. '[
' → logprob: -20.0
    7. ')' → logprob: -20.375
    8. '(i' → logprob: -20.625
    9. '{i' → logprob: -20.875
    10. '[j' → logprob: -21.125

Token 584: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10029260814189911
    2. ')' → logprob: -2.350292682647705
    3. ')
' → logprob: -9.600292205810547
    4. '])
' → logprob: -11.725292205810547
    5. '])' → logprob: -12.350292205810547
    6. ')i' → logprob: -13.725292205810547
    7. ']' → logprob: -13.850292205810547
    8. ' )
' → logprob: -14.100292205810547
    9. '')
' → logprob: -14.475292205810547
    10. '           ' → logprob: -14.475292205810547

Token 585: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4369358718395233
    2. 'i' → logprob: -1.6869359016418457
    3. '           ' → logprob: -2.1869359016418457
    4. '\n' → logprob: -4.436935901641846
    5. '<|end|>' → logprob: -4.561935901641846
    6. '                   ' → logprob: -4.686935901641846
    7. '```' → logprob: -5.936935901641846
    8. '                
' → logprob: -6.061935901641846
    9. '[i' → logprob: -6.061935901641846
    10. ' i' → logprob: -6.061935901641846

Token 586: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.07891545444726944
    2. ' i' → logprob: -2.5789153575897217
    3. '               ' → logprob: -10.8289155960083
    4. '           ' → logprob: -12.8289155960083
    5. '                   ' → logprob: -14.0789155960083
    6. '1' → logprob: -14.3289155960083
    7. '	i' → logprob: -14.7039155960083
    8. '
' → logprob: -15.3289155960083
    9. ',i' → logprob: -15.8289155960083
    10. '   ' → logprob: -15.9539155960083

Token 587: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0024801772087812424
    2. ' +=' → logprob: -6.0024800300598145
    3. '+' → logprob: -12.377480506896973
    4. '=' → logprob: -15.502480506896973
    5. ']+=' → logprob: -17.752479553222656
    6. '+='' → logprob: -19.127479553222656
    7. ' +' → logprob: -19.377479553222656
    8. '+="' → logprob: -19.877479553222656
    9. '-=' → logprob: -20.127479553222656
    10. '```' → logprob: -20.377479553222656

Token 588: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.37500762939453
    4. '１' → logprob: -19.75000762939453
    5. '  ' → logprob: -20.50000762939453
    6. '```' → logprob: -20.62500762939453
    7. '۱' → logprob: -20.62500762939453
    8. '0' → logprob: -20.81250762939453
    9. '' → logprob: -21.25000762939453
    10. '
' → logprob: -21.50000762939453

Token 589: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.125001907348633
    4. '```' → logprob: -19.875001907348633
    5. '１' → logprob: -20.937501907348633
    6. '
' → logprob: -21.000001907348633
    7. '0' → logprob: -21.312501907348633
    8. '' → logprob: -21.375001907348633
    9. '۱' → logprob: -21.375001907348633
    10. '  ' → logprob: -21.625001907348633

Token 590: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23249411582946777
    2. '<|end|>' → logprob: -1.7324941158294678
    3. 'elif' → logprob: -4.357494354248047
    4. '
' → logprob: -5.607494354248047
    5. 'else' → logprob: -5.732494354248047
    6. '\n' → logprob: -5.857494354248047
    7. '<|end|>' → logprob: -6.857494354248047
    8. '   ' → logprob: -6.982494354248047
    9. '```' → logprob: -7.107494354248047
    10. ')' → logprob: -7.232494354248047

Token 591: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15963420271873474
    2. '\n' → logprob: -3.0346341133117676
    3. 'elif' → logprob: -3.4096341133117676
    4. '
' → logprob: -3.5346341133117676
    5. '<|end|>' → logprob: -4.534634113311768
    6. 'else' → logprob: -4.534634113311768
    7. '   ' → logprob: -6.159634113311768
    8. '```' → logprob: -6.159634113311768
    9. '    
' → logprob: -6.409634113311768
    10. '        
' → logprob: -6.659634113311768

Token 592: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028139039874076843
    2. 'else' (adapté à ' else') → logprob: -3.903139114379883
    3. ' else' → logprob: -5.403139114379883
    4. '   ' → logprob: -7.528139114379883
    5. '[' → logprob: -7.903139114379883
    6. ':' → logprob: -7.903139114379883
    7. '<|end|>' → logprob: -7.903139114379883
    8. '	else' → logprob: -8.153139114379883
    9. '```' → logprob: -8.153139114379883
    10. '           ' → logprob: -8.778139114379883

Token 593: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004928641719743609
    2. ':
' → logprob: -7.625493049621582
    3. '           ' → logprob: -12.875493049621582
    4. '{' → logprob: -14.000493049621582
    5. ' :' → logprob: -14.250493049621582
    6. ':

' → logprob: -14.875493049621582
    7. '       ' → logprob: -16.000492095947266
    8. ':
' → logprob: -16.125492095947266
    9. ':return' → logprob: -16.500492095947266
    10. '<|end|>' → logprob: -16.625492095947266

Token 594: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004481885116547346
    2. '       ' → logprob: -8.375448226928711
    3. '   ' → logprob: -8.500448226928711
    4. ' mor' → logprob: -12.000448226928711
    5. '               ' → logprob: -12.000448226928711
    6. 'mor' → logprob: -14.500448226928711
    7. '```' → logprob: -15.000448226928711
    8. '          ' → logprob: -15.000448226928711
    9. '#' → logprob: -16.00044822692871
    10. '         ' → logprob: -16.12544822692871

Token 595: ' #' (ID: 1069)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0005083533469587564
    2. '           ' → logprob: -7.7505083084106445
    3. 'mor' → logprob: -9.750508308410645
    4. ' mor' → logprob: -11.500508308410645
    5. '   ' → logprob: -12.250508308410645
    6. 'if' → logprob: -13.000508308410645
    7. '       ' → logprob: -14.000508308410645
    8. '               ' → logprob: -14.125508308410645
    9. '	m' → logprob: -15.500508308410645
    10. ' mora' → logprob: -16.12550926208496

Token 596: ' last' (ID: 2174)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0010918774642050266
    2. 'mor' → logprob: -7.376091957092285
    3. '           ' → logprob: -7.876091957092285
    4. ' mor' → logprob: -9.501091957092285
    5. '   ' → logprob: -11.876091957092285
    6. '       ' → logprob: -13.626091957092285
    7. '               ' → logprob: -13.876091957092285
    8. 'if' → logprob: -14.626091957092285
    9. '	m' → logprob: -15.126091957092285
    10. ' mora' → logprob: -15.376091957092285

Token 597: ' character' (ID: 5855)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4096946716308594
    2. 'm' → logprob: -1.7846946716308594
    3. ' s' → logprob: -2.7846946716308594
    4. ' mor' → logprob: -2.7846946716308594
    5. ')' → logprob: -3.6596946716308594
    6. 'mor' → logprob: -4.909694671630859
    7. 'c' → logprob: -5.034694671630859
    8. ':' → logprob: -6.659694671630859
    9. '   ' → logprob: -6.659694671630859
    10. 'char' → logprob: -7.909694671630859

Token 598: ' single' (ID: 4590)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03110426478087902
    2. 'm' → logprob: -4.03110408782959
    3. '       ' → logprob: -4.78110408782959
    4. ' mor' → logprob: -5.78110408782959
    5. 'mor' → logprob: -7.03110408782959
    6. '               ' → logprob: -8.78110408782959
    7. '   ' → logprob: -9.28110408782959
    8. '{' → logprob: -9.78110408782959
    9. '          ' → logprob: -9.90610408782959
    10. '.append' → logprob: -10.78110408782959

Token 599: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039345238357782364
    2. 's' → logprob: -3.9143452644348145
    3. '       ' → logprob: -5.0393452644348145
    4. '   ' → logprob: -6.0393452644348145
    5. ' s' → logprob: -6.4143452644348145
    6. 'm' → logprob: -6.4143452644348145
    7. '               ' → logprob: -6.5393452644348145
    8. ' mor' → logprob: -6.6643452644348145
    9. '{' → logprob: -7.0393452644348145
    10. '            ' → logprob: -7.2893452644348145

Token 600: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012045812793076038
    2. 'm' → logprob: -4.887045860290527
    3. ' mor' → logprob: -5.762045860290527
    4. 'mor' → logprob: -7.262045860290527
    5. '       ' → logprob: -7.762045860290527
    6. '               ' → logprob: -9.512045860290527
    7. '   ' → logprob: -10.887045860290527
    8. '          ' → logprob: -11.012045860290527
    9. '```' → logprob: -11.637045860290527
    10. '{
' → logprob: -12.012045860290527

Token 601: ' mor' (ID: 4658)
  Prédit: ' mor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mor' → logprob: -0.5854591131210327
    2. 'm' → logprob: -0.8354591131210327
    3. '           ' → logprob: -5.210459232330322
    4. 'mor' (adapté à ' mor') → logprob: -5.585459232330322
    5. '   ' → logprob: -8.585458755493164
    6. '       ' → logprob: -10.585458755493164
    7. ' mora' → logprob: -10.710458755493164
    8. '	m' → logprob: -11.585458755493164
    9. ' mors' → logprob: -11.960458755493164
    10. '               ' → logprob: -12.335458755493164

Token 602: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -1.1472419600977446e-06
    2. 'a' → logprob: -13.750000953674316
    3. '	as' → logprob: -17.125001907348633
    4. 's' → logprob: -18.000001907348633
    5. 'ас' → logprob: -18.125001907348633
    6. 'As' → logprob: -18.625001907348633
    7. '_as' → logprob: -19.375001907348633
    8. ' as' → logprob: -19.625001907348633
    9. '```' → logprob: -19.750001907348633
    10. '   ' → logprob: -19.750001907348633

Token 603: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019324433524161577
    2. '.' → logprob: -6.251932621002197
    3. 'append' → logprob: -12.626932144165039
    4. '.app' → logprob: -15.126932144165039
    5. '.Append' → logprob: -16.00193214416504
    6. '.extend' → logprob: -16.62693214416504
    7. '.ap' → logprob: -16.75193214416504
    8. '_append' → logprob: -17.37693214416504
    9. ' .' → logprob: -17.62693214416504
    10. '+.' → logprob: -18.00193214416504

Token 604: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -8.061054359131958e-06
    2. 's' → logprob: -11.750007629394531
    3. '(' → logprob: -16.62500762939453
    4. '(c' → logprob: -20.75000762939453
    5. '(
' → logprob: -20.87500762939453
    6. ' s' → logprob: -21.75000762939453
    7. 'c' → logprob: -23.12500762939453
    8. '	s' → logprob: -24.50000762939453
    9. ' (' → logprob: -24.75000762939453
    10. '```' → logprob: -25.12500762939453

Token 605: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '[n' → logprob: -18.375
    3. 'i' → logprob: -18.625
    4. 's' → logprob: -21.0
    5. '[' → logprob: -21.625
    6. '[
' → logprob: -22.625
    7. '[-' → logprob: -23.375
    8. '```' → logprob: -23.5
    9. '[s' → logprob: -23.625
    10. '(i' → logprob: -23.875

Token 606: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4428960084915161
    2. ')
' → logprob: -1.4428960084915161
    3. '])' → logprob: -2.4428958892822266
    4. ']' → logprob: -3.6928958892822266
    5. '])
' → logprob: -4.692895889282227
    6. ']
' → logprob: -7.567895889282227
    7. '）' → logprob: -10.192895889282227
    8. ')
' → logprob: -11.067895889282227
    9. ')]' → logprob: -11.317895889282227
    10. ')i' → logprob: -11.442895889282227

Token 607: '           ' (ID: 352)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5097236633300781
    2. '           ' → logprob: -2.509723663330078
    3. '
' → logprob: -2.634723663330078
    4. '\n' → logprob: -2.884723663330078
    5. ' i' → logprob: -3.134723663330078
    6. ')' → logprob: -3.259723663330078
    7. ')i' → logprob: -3.509723663330078
    8. '[i' → logprob: -4.009723663330078
    9. '```' → logprob: -4.384723663330078
    10. '	i' → logprob: -4.509723663330078

Token 608: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.00033558503491804004
    2. 'break' → logprob: -8.250335693359375
    3. ' i' → logprob: -10.125335693359375
    4. '   ' → logprob: -11.125335693359375
    5. '           ' → logprob: -11.375335693359375
    6. 'return' → logprob: -12.125335693359375
    7. ' break' → logprob: -13.000335693359375
    8. '       ' → logprob: -15.000335693359375
    9. '
' → logprob: -17.500335693359375
    10. '	i' → logprob: -17.875335693359375

Token 609: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0003706126008182764
    2. '+' → logprob: -8.250370979309082
    3. ' +=' → logprob: -9.125370979309082
    4. '++' → logprob: -15.750370979309082
    5. '+='' → logprob: -15.875370979309082
    6. ']+=' → logprob: -16.125370025634766
    7. '+="' → logprob: -16.875370025634766
    8. '=' → logprob: -17.500370025634766
    9. '```' → logprob: -17.500370025634766
    10. '+
' → logprob: -18.125370025634766

Token 610: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.75
    3. '```' → logprob: -23.375
    4. '   ' → logprob: -24.875
    5. '１' → logprob: -25.125
    6. '۱' → logprob: -26.375
    7. '0' → logprob: -27.375
    8. '१' → logprob: -27.875
    9. '`' → logprob: -28.25
    10. '১' → logprob: -28.25

Token 611: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -24.25
    3. '```' → logprob: -25.0
    4. '１' → logprob: -25.875
    5. '۱' → logprob: -26.875
    6. '   ' → logprob: -26.875
    7. '#' → logprob: -28.0
    8. '
' → logprob: -28.375
    9. '	' → logprob: -28.5
    10. '0' → logprob: -28.5

Token 612: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5442041158676147
    2. 'return' → logprob: -1.1692041158676147
    3. '<|end|>' → logprob: -2.4192042350769043
    4. '    
' → logprob: -5.294204235076904
    5. ' return' → logprob: -5.794204235076904
    6. '	return' → logprob: -5.919204235076904
    7. ':return' → logprob: -6.169204235076904
    8. '
' → logprob: -6.294204235076904
    9. '       ' → logprob: -7.044204235076904
    10. '```' → logprob: -7.419204235076904

Token 613: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 614: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6995232701301575
    2. 'return' (adapté à ' return') → logprob: -0.6995232701301575
    3. ' return' → logprob: -5.074523448944092
    4. '	return' → logprob: -9.449522972106934
    5. '    
' → logprob: -11.449522972106934
    6. ':return' → logprob: -12.574522972106934
    7. '       ' → logprob: -13.074522972106934
    8. '
' → logprob: -13.699522972106934
    9. '```' → logprob: -13.949522972106934
    10. ' ' → logprob: -14.074522972106934

Token 615: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -9.65101717156358e-05
    2. 'mor' → logprob: -9.500096321105957
    3. ' mor' → logprob: -10.750096321105957
    4. '```' → logprob: -16.750097274780273
    5. 'mo' → logprob: -17.125097274780273
    6. '	m' → logprob: -17.125097274780273
    7. 'mos' → logprob: -18.500097274780273
    8. '   ' → logprob: -18.625097274780273
    9. 'maras' → logprob: -18.625097274780273
    10. '(m' → logprob: -19.250097274780273

Token 616: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.125001907348633
    3. 'a' → logprob: -15.250001907348633
    4. 's' → logprob: -16.500001907348633
    5. '
' → logprob: -16.625001907348633
    6. '	as' → logprob: -16.750001907348633
    7. ' as' → logprob: -17.125001907348633
    8. 'tas' → logprob: -17.375001907348633
    9. '```' → logprob: -17.500001907348633
    10. '(as' → logprob: -17.750001907348633

Token 617: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15152272582054138
    2. '<|end|>' → logprob: -2.901522636413574
    3. '```' → logprob: -3.526522636413574
    4. ' ' → logprob: -4.276522636413574
    5. ')' → logprob: -4.651522636413574
    6. '[' → logprob: -4.901522636413574
    7. '#' → logprob: -5.026522636413574
    8. ''' → logprob: -5.651522636413574
    9. '
' → logprob: -5.901522636413574
    10. '=' → logprob: -6.151522636413574

Token 618: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 619: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.7916107177734375
    2. ' is' → logprob: -1.0416107177734375
    3. ' split' → logprob: -3.4166107177734375
    4. ' count' → logprob: -3.7916107177734375
    5. ' to' → logprob: -4.2916107177734375
    6. ' reverse' → logprob: -4.4166107177734375
    7. ' roman' → logprob: -4.5416107177734375
    8. ' check' → logprob: -4.5416107177734375
    9. ' rom' → logprob: -4.5416107177734375
    10. ' translate' → logprob: -4.6666107177734375

Token 620: '_m' (ID: 1285)
  Prédit: '_word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -1.3295423984527588
    2. '_k' → logprob: -1.8295423984527588
    3. '_phrase' → logprob: -1.8295423984527588
    4. '_m' → logprob: -2.079542398452759
    5. '_' → logprob: -2.204542398452759
    6. '_s' → logprob: -3.079542398452759
    7. '_text' → logprob: -3.454542398452759
    8. '_ph' → logprob: -3.704542398452759
    9. '(s' → logprob: -4.32954216003418
    10. '_input' → logprob: -4.45454216003418

Token 621: 'oras' (ID: 41056)
  Prédit: 'oras'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -0.20202083885669708
    2. 'ora' → logprob: -1.7020208835601807
    3. 'or' → logprob: -8.952020645141602
    4. 'e' → logprob: -9.327020645141602
    5. 'orp' → logprob: -9.577020645141602
    6. 'orph' → logprob: -9.827020645141602
    7. 'ore' → logprob: -10.202020645141602
    8. 'ors' → logprob: -10.452020645141602
    9. 'oru' → logprob: -11.139520645141602
    10. 'oros' → logprob: -11.639520645141602

Token 622: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.06199771910905838
    2. '(' → logprob: -2.811997652053833
    3. ' (' → logprob: -11.436997413635254
    4. 's' → logprob: -12.811997413635254
    5. '(m' → logprob: -13.311997413635254
    6. '(sentence' → logprob: -13.436997413635254
    7. '(input' → logprob: -13.686997413635254
    8. '("("' → logprob: -13.811997413635254
    9. '(string' → logprob: -13.936997413635254
    10. '(a' → logprob: -14.061997413635254

Token 623: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000682530109770596
    2. '):
' → logprob: -7.375682353973389
    3. ')' → logprob: -9.875682830810547
    4. ' ):' → logprob: -13.375682830810547
    5. '):
' → logprob: -13.500682830810547
    6. ':' → logprob: -13.875682830810547
    7. '):

' → logprob: -15.000682830810547
    8. '   ' → logprob: -15.625682830810547
    9. ')：' → logprob: -17.625682830810547
    10. ',' → logprob: -17.750682830810547

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007821798324584961
    2. ':' → logprob: -5.007822036743164
    3. '    
' → logprob: -8.257822036743164
    4. '    ' → logprob: -8.882822036743164
    5. 'm' → logprob: -9.257822036743164
    6. '```' → logprob: -9.382822036743164
    7. '{' → logprob: -9.882822036743164
    8. '(m' → logprob: -9.882822036743164
    9. ' mor' → logprob: -10.132822036743164
    10. '[' → logprob: -10.257822036743164

Token 625: ' mor' (ID: 4658)
  Prédit: ' mor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mor' → logprob: -0.2496127486228943
    2. '   ' → logprob: -2.624612808227539
    3. ' result' → logprob: -2.999612808227539
    4. ' return' → logprob: -3.124612808227539
    5. 'm' → logprob: -3.749612808227539
    6. ' tokens' → logprob: -5.124612808227539
    7. ' res' → logprob: -5.249612808227539
    8. ' i' → logprob: -5.374612808227539
    9. 'result' → logprob: -5.999612808227539
    10. ' m' → logprob: -5.999612808227539

Token 626: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -5.180879816180095e-05
    2. 'a' → logprob: -10.250051498413086
    3. 'def' → logprob: -11.625051498413086
    4. ' as' → logprob: -13.000051498413086
    5. 's' → logprob: -13.250051498413086
    6. '	as' → logprob: -14.250051498413086
    7. '=' → logprob: -14.375051498413086
    8. '_as' → logprob: -14.500051498413086
    9. '[' → logprob: -14.750051498413086
    10. '   ' → logprob: -14.875051498413086

Token 627: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08896128088235855
    2. '=' → logprob: -2.463961362838745
    3. ')' → logprob: -11.588961601257324
    4. '=[]' → logprob: -12.463961601257324
    5. '_' → logprob: -12.588961601257324
    6. ',' → logprob: -13.213961601257324
    7. 's' → logprob: -13.713961601257324
    8. '   ' → logprob: -14.213961601257324
    9. '[]' → logprob: -14.713961601257324
    10. '[:]' → logprob: -15.213961601257324

Token 628: ' []
' (ID: 8911)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008615515194833279
    2. ' split' → logprob: -4.758615493774414
    3. 's' → logprob: -15.133615493774414
    4. 'plit' → logprob: -15.758615493774414
    5. '[]' → logprob: -15.883615493774414
    6. '(split' → logprob: -15.883615493774414
    7. 'spl' → logprob: -16.383615493774414
    8. '[]
' → logprob: -17.883615493774414
    9. ' ' → logprob: -18.133615493774414
    10. 'list' → logprob: -18.258615493774414

Token 629: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008147508488036692
    2. 'i' → logprob: -7.375814914703369
    3. ' i' → logprob: -8.625814437866211
    4. '	i' → logprob: -12.000814437866211
    5. ' =' → logprob: -14.125814437866211
    6. '    ' → logprob: -14.375814437866211
    7. '
' → logprob: -14.875814437866211
    8. '    
' → logprob: -15.250814437866211
    9. 'n' → logprob: -15.875814437866211
    10. ',i' → logprob: -16.12581443786621

Token 630: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -9.424530435353518e-05
    2. '   ' → logprob: -9.750094413757324
    3. ' i' → logprob: -10.625094413757324
    4. 'n' → logprob: -11.625094413757324
    5. 'while' → logprob: -13.750094413757324
    6. 'idx' → logprob: -15.250094413757324
    7. 'return' → logprob: -15.500094413757324
    8. 'j' → logprob: -15.750094413757324
    9. 'for' → logprob: -16.000093460083008
    10. '```' → logprob: -16.000093460083008

Token 631: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014273703098297
    2. '=' → logprob: -1.7014273405075073
    3. ' ' → logprob: -11.951427459716797
    4. ' +=' → logprob: -12.076427459716797
    5. '   ' → logprob: -14.451427459716797
    6. ' =
' → logprob: -14.826427459716797
    7. ',' → logprob: -15.326427459716797
    8. '+=' → logprob: -15.701427459716797
    9. '    ' → logprob: -15.951427459716797
    10. '  ' → logprob: -16.076427459716797

Token 632: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '=' → logprob: -18.250261306762695
    4. '۰' → logprob: -18.750261306762695
    5. 's' → logprob: -19.000261306762695
    6. 'i' → logprob: -19.000261306762695
    7. '   ' → logprob: -19.125261306762695
    8. '[' → logprob: -19.312761306762695
    9. '1' → logprob: -19.750261306762695
    10. '<|end|>' → logprob: -19.875261306762695

Token 633: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -20.125001907348633
    4. 's' → logprob: -20.375001907348633
    5. '=' → logprob: -20.500001907348633
    6. '1' → logprob: -20.625001907348633
    7. '۰' → logprob: -20.625001907348633
    8. 'i' → logprob: -20.750001907348633
    9. 'def' → logprob: -21.125001907348633
    10. '[' → logprob: -21.187501907348633

Token 634: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 635: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8762033581733704
    2. '<|end|>' → logprob: -0.8762033581733704
    3. ' n' → logprob: -2.5012032985687256
    4. '
' → logprob: -3.1262032985687256
    5. ' ' → logprob: -3.8762032985687256
    6. '	n' → logprob: -5.126203536987305
    7. '   ' → logprob: -5.376203536987305
    8. ' while' → logprob: -5.501203536987305
    9. ' 
' → logprob: -6.751203536987305
    10. 'while' → logprob: -6.876203536987305

Token 636: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.006764513906091452
    2. ' n' → logprob: -5.0067644119262695
    3. 'while' → logprob: -10.38176441192627
    4. ' while' → logprob: -11.00676441192627
    5. '<|end|>' → logprob: -14.88176441192627
    6. '
' → logprob: -15.00676441192627
    7. 'length' → logprob: -15.00676441192627
    8. '```' → logprob: -15.38176441192627
    9. 'len' → logprob: -16.131765365600586
    10. '   ' → logprob: -16.506765365600586

Token 637: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28124988079071045
    2. '=' → logprob: -1.4062498807907104
    3. '=n' → logprob: -10.28125
    4. '=len' → logprob: -11.15625
    5. ' =
' → logprob: -11.28125
    6. '   ' → logprob: -11.53125
    7. '=
' → logprob: -12.40625
    8. 'n' → logprob: -12.53125
    9. '=s' → logprob: -12.65625
    10. '<|end|>' → logprob: -12.78125

Token 638: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00033546582562848926
    2. ' len' → logprob: -8.000335693359375
    3. '[len' → logprob: -20.750335693359375
    4. '(len' → logprob: -21.125335693359375
    5. '	len' → logprob: -22.750335693359375
    6. 'length' → logprob: -23.125335693359375
    7. '=len' → logprob: -23.250335693359375
    8. 'Len' → logprob: -23.250335693359375
    9. '   ' → logprob: -23.750335693359375
    10. ',len' → logprob: -24.125335693359375

Token 639: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.4021237802808173e-05
    2. 's' → logprob: -11.250014305114746
    3. '(' → logprob: -13.875014305114746
    4. '(m' → logprob: -18.00001335144043
    5. '(S' → logprob: -18.37501335144043
    6. ' (' → logprob: -18.62501335144043
    7. '(
' → logprob: -19.25001335144043
    8. 'm' → logprob: -20.37501335144043
    9. '(n' → logprob: -20.50001335144043
    10. 'def' → logprob: -20.87501335144043

Token 640: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008539431728422642
    2. ')
' → logprob: -7.625854015350342
    3. '   ' → logprob: -8.625853538513184
    4. '):' → logprob: -9.250853538513184
    5. ' )' → logprob: -10.125853538513184
    6. '):
' → logprob: -10.625853538513184
    7. ')n' → logprob: -11.750853538513184
    8. '<|end|>' → logprob: -13.000853538513184
    9. ')>' → logprob: -13.625853538513184
    10. '```' → logprob: -13.750853538513184

Token 641: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5787350535392761
    2. ' while' → logprob: -0.9537350535392761
    3. 'while' → logprob: -3.828735113143921
    4. '	while' → logprob: -4.203734874725342
    5. '```' → logprob: -5.078734874725342
    6. ' ' → logprob: -5.828734874725342
    7. '<|end|>' → logprob: -5.953734874725342
    8. '    ' → logprob: -6.328734874725342
    9. '    
' → logprob: -7.078734874725342
    10. ' 
' → logprob: -7.328734874725342

Token 642: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.38689112663269043
    2. 'while' (adapté à ' while') → logprob: -1.1368911266326904
    3. '   ' → logprob: -11.01189136505127
    4. ' 
' → logprob: -13.63689136505127
    5. '
' → logprob: -13.88689136505127
    6. '	while' → logprob: -14.13689136505127
    7. 'While' → logprob: -15.51189136505127
    8. '    
' → logprob: -15.51189136505127
    9. '    ' → logprob: -16.261890411376953
    10. ' ' → logprob: -16.261890411376953

Token 643: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008615042082965374
    2. ' i' → logprob: -4.758615016937256
    3. ' ' → logprob: -15.133615493774414
    4. '   ' → logprob: -15.883615493774414
    5. 'True' → logprob: -17.008615493774414
    6. '	i' → logprob: -17.258615493774414
    7. ' True' → logprob: -17.258615493774414
    8. '(i' → logprob: -19.133615493774414
    9. '  ' → logprob: -19.633615493774414
    10. '[i' → logprob: -20.383615493774414

Token 644: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.022438354790210724
    2. '<' → logprob: -3.8974382877349854
    3. '<n' → logprob: -6.2724385261535645
    4. '<len' → logprob: -12.772438049316406
    5. ' <
' → logprob: -13.397438049316406
    6. ' ' → logprob: -13.897438049316406
    7. '[' → logprob: -14.522438049316406
    8. '<N' → logprob: -14.647438049316406
    9. 'n' → logprob: -15.522438049316406
    10. '<s' → logprob: -16.022438049316406

Token 645: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00020354038861114532
    2. ' n' → logprob: -8.500203132629395
    3. '	n' → logprob: -19.12520408630371
    4. '   ' → logprob: -19.37520408630371
    5. '_n' → logprob: -19.62520408630371
    6. ' ' → logprob: -20.00020408630371
    7. ')n' → logprob: -21.37520408630371
    8. '
' → logprob: -22.37520408630371
    9. '(n' → logprob: -22.62520408630371
    10. 'len' → logprob: -22.75020408630371

Token 646: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02497057430446148
    2. ':
' → logprob: -3.774970531463623
    3. '   ' → logprob: -6.899970531463623
    4. '       ' → logprob: -8.524971008300781
    5. '=' → logprob: -9.399971008300781
    6. ',' → logprob: -9.524971008300781
    7. ' :' → logprob: -9.649971008300781
    8. '):' → logprob: -10.149971008300781
    9. '[' → logprob: -10.274971008300781
    10. '+' → logprob: -10.274971008300781

Token 647: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.39357903599739075
    2. ' c' → logprob: -1.3935790061950684
    3. '       ' → logprob: -2.7685790061950684
    4. '   ' → logprob: -4.768579006195068
    5. 's' → logprob: -6.268579006195068
    6. ' s' → logprob: -6.768579006195068
    7. ' ' → logprob: -7.018579006195068
    8. '    ' → logprob: -7.643579006195068
    9. ' if' → logprob: -7.893579006195068
    10. '```' → logprob: -8.143579483032227

Token 648: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.002360902028158307
    2. 'if' → logprob: -6.127360820770264
    3. ' c' → logprob: -9.502361297607422
    4. 's' → logprob: -10.252361297607422
    5. '   ' → logprob: -10.752361297607422
    6. '       ' → logprob: -10.877361297607422
    7. ' if' → logprob: -11.002361297607422
    8. 'ch' → logprob: -12.877361297607422
    9. '```' → logprob: -13.377361297607422
    10. 'token' → logprob: -13.877361297607422

Token 649: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760135054588318
    2. ' =' → logprob: -0.8260135054588318
    3. '=s' → logprob: -9.576013565063477
    4. 's' → logprob: -13.576013565063477
    5. '=
' → logprob: -13.576013565063477
    6. ' ' → logprob: -13.826013565063477
    7. ' =
' → logprob: -14.701013565063477
    8. ' s' → logprob: -15.451013565063477
    9. '  ' → logprob: -15.951013565063477
    10. '=c' → logprob: -16.701013565063477

Token 650: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20141421258449554
    2. ' s' → logprob: -1.7014142274856567
    3. ' ' → logprob: -15.201414108276367
    4. '(s' → logprob: -15.451414108276367
    5. '`s' → logprob: -16.576414108276367
    6. '_s' → logprob: -16.826414108276367
    7. ''s' → logprob: -16.951414108276367
    8. '[s' → logprob: -17.076414108276367
    9. '	s' → logprob: -17.201414108276367
    10. '{s' → logprob: -17.326414108276367

Token 651: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.895480277715251e-06
    2. '[s' → logprob: -12.375008583068848
    3. '[' → logprob: -12.875008583068848
    4. 'i' → logprob: -13.750008583068848
    5. '[
' → logprob: -14.375008583068848
    6. '[c' → logprob: -15.875008583068848
    7. 's' → logprob: -16.250009536743164
    8. '```' → logprob: -16.750009536743164
    9. '[I' → logprob: -17.250009536743164
    10. ']' → logprob: -17.375009536743164

Token 652: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5768532156944275
    2. ']
' → logprob: -0.8268532156944275
    3. 'if' → logprob: -7.826853275299072
    4. '       ' → logprob: -8.201852798461914
    5. 's' → logprob: -10.076852798461914
    6. '
' → logprob: -10.076852798461914
    7. ' if' → logprob: -10.576852798461914
    8. '   ' → logprob: -10.951852798461914
    9. 'def' → logprob: -11.076852798461914
    10. 'import' → logprob: -11.326852798461914

Token 653: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04158829152584076
    2. '<|end|>' → logprob: -3.666588306427002
    3. ' ' → logprob: -5.166588306427002
    4. ' if' → logprob: -5.916588306427002
    5. '        ' → logprob: -6.166588306427002
    6. '        
' → logprob: -6.291588306427002
    7. '   ' → logprob: -7.541588306427002
    8. '<|end|>' → logprob: -7.666588306427002
    9. '    ' → logprob: -8.041587829589844
    10. 'if' → logprob: -8.416587829589844

Token 654: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10476388037204742
    2. ' if' → logprob: -2.354763984680176
    3. '       ' → logprob: -5.479763984680176
    4. '#' (adapté à ' #') → logprob: -7.979763984680176
    5. '   ' → logprob: -11.104763984680176
    6. ' ' → logprob: -12.229763984680176
    7. ' #' → logprob: -12.354763984680176
    8. '        ' → logprob: -13.229763984680176
    9. '+' → logprob: -13.479763984680176
    10. '```' → logprob: -13.479763984680176

Token 655: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00037740718107670546
    2. '#' → logprob: -8.125377655029297
    3. ' if' → logprob: -9.875377655029297
    4. 'i' → logprob: -10.875377655029297
    5. 'elif' → logprob: -12.750377655029297
    6. '       ' → logprob: -13.000377655029297
    7. '   ' → logprob: -13.500377655029297
    8. '```' → logprob: -13.625377655029297
    9. 'n' → logprob: -13.750377655029297
    10. '           ' → logprob: -15.250377655029297

Token 656: ' n' (ID: 297)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38583511114120483
    2. ' for' → logprob: -1.7608351707458496
    3. '       ' → logprob: -2.1358351707458496
    4. 'if' → logprob: -4.38583517074585
    5. 'for' → logprob: -4.51083517074585
    6. '        ' → logprob: -5.76083517074585
    7. '   ' → logprob: -6.38583517074585
    8. ' ' → logprob: -7.76083517074585
    9. '  ' → logprob: -8.010834693908691
    10. '    ' → logprob: -8.385834693908691

Token 657: ''
' (ID: 2207)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5328629612922668
    2. ' ==' → logprob: -1.032862901687622
    3. 'ot' → logprob: -3.782862901687622
    4. '=' → logprob: -5.032863140106201
    5. 'ext' → logprob: -5.282863140106201
    6. 'if' → logprob: -5.282863140106201
    7. 'elif' → logprob: -5.657863140106201
    8. ' if' → logprob: -5.907863140106201
    9. ' =' → logprob: -6.907863140106201
    10. '=='' → logprob: -6.907863140106201

Token 658: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01001589372754097
    2. '           ' → logprob: -5.010015964508057
    3. ' if' → logprob: -7.260015964508057
    4. '=' → logprob: -7.385015964508057
    5. '   ' → logprob: -8.010015487670898
    6. 'if' → logprob: -8.135015487670898
    7. ':' → logprob: -8.260015487670898
    8. '      ' → logprob: -8.885015487670898
    9. '==' → logprob: -8.885015487670898
    10. 'elif' → logprob: -8.885015487670898

Token 659: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06400886178016663
    2. ' if' → logprob: -3.064008951187134
    3. '       ' → logprob: -4.189008712768555
    4. '<|end|>' → logprob: -9.314008712768555
    5. ' ' → logprob: -11.314008712768555
    6. '	if' → logprob: -11.439008712768555
    7. '        ' → logprob: -12.314008712768555
    8. 'If' → logprob: -12.439008712768555
    9. '<|end|>' → logprob: -12.564008712768555
    10. '           ' → logprob: -12.564008712768555

Token 660: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026954632252454758
    2. ' c' → logprob: -3.6519546508789062
    3. 'i' → logprob: -7.401954650878906
    4. ' i' → logprob: -10.151954650878906
    5. ' ' → logprob: -13.651954650878906
    6. '(c' → logprob: -13.901954650878906
    7. 's' → logprob: -13.901954650878906
    8. '	c' → logprob: -14.776954650878906
    9. '   ' → logprob: -15.026954650878906
    10. '  ' → logprob: -15.151954650878906

Token 661: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12880319356918335
    2. ' ==' → logprob: -2.128803253173828
    3. '=' → logprob: -6.753803253173828
    4. '=='' → logprob: -7.503803253173828
    5. '==
' → logprob: -9.503803253173828
    6. '+' → logprob: -9.878803253173828
    7. '=="' → logprob: -12.003803253173828
    8. ' =' → logprob: -12.003803253173828
    9. '<|end|>' → logprob: -12.253803253173828
    10. ']==' → logprob: -12.753803253173828

Token 662: ' '' (ID: 461)
  Prédit: ''n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''n' → logprob: -0.009331011213362217
    2. 'n' → logprob: -4.759331226348877
    3. '"' → logprob: -7.259331226348877
    4. ''' → logprob: -12.009330749511719
    5. '`' → logprob: -12.759330749511719
    6. ' '' → logprob: -14.009330749511719
    7. '’n' → logprob: -14.009330749511719
    8. '	n' → logprob: -15.009330749511719
    9. '```' → logprob: -15.509330749511719
    10. ''''' → logprob: -15.759330749511719

Token 663: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004082909319549799
    2. ''n' → logprob: -5.504082679748535
    3. ''' → logprob: -12.629082679748535
    4. '"' → logprob: -13.879082679748535
    5. 'n't' → logprob: -16.25408363342285
    6. '	n' → logprob: -16.37908363342285
    7. '`' → logprob: -16.62908363342285
    8. ' n' → logprob: -18.00408363342285
    9. ')n' → logprob: -18.50408363342285
    10. '’n' → logprob: -18.62908363342285

Token 664: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0046968841925263405
    2. '"' → logprob: -6.004696846008301
    3. '"'' → logprob: -6.504696846008301
    4. '':' → logprob: -8.0046968460083
    5. '\'' → logprob: -8.7546968460083
    6. '''' → logprob: -9.1296968460083
    7. ''''' → logprob: -10.0046968460083
    8. ' and' → logprob: -10.1296968460083
    9. 'and' → logprob: -10.8796968460083
    10. ''s' → logprob: -13.0046968460083

Token 665: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.071258544921875
    2. '<|end|>' → logprob: -3.446258544921875
    3. ' and' → logprob: -3.571258544921875
    4. ':' → logprob: -5.571258544921875
    5. '<|end|>' → logprob: -6.446258544921875
    6. '       ' → logprob: -6.946258544921875
    7. 'and' → logprob: -7.196258544921875
    8. '          ' → logprob: -7.696258544921875
    9. ' if' → logprob: -8.071258544921875
    10. ' ' → logprob: -8.821258544921875

Token 666: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1258818805217743
    2. ' if' → logprob: -2.2508819103240967
    3. '           ' → logprob: -4.375881671905518
    4. '<|end|>' → logprob: -8.625882148742676
    5. '       ' → logprob: -9.000882148742676
    6. ' ' → logprob: -10.875882148742676
    7. '	if' → logprob: -11.000882148742676
    8. '               ' → logprob: -11.250882148742676
    9. '          ' → logprob: -11.375882148742676
    10. '<|end|>' → logprob: -11.875882148742676

Token 667: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0024769625160843134
    2. ' i' → logprob: -6.002477169036865
    3. '(i' → logprob: -14.377476692199707
    4. '   ' → logprob: -14.877476692199707
    5. ' (' → logprob: -15.627476692199707
    6. ' ' → logprob: -15.877476692199707
    7. '  ' → logprob: -17.502477645874023
    8. '	i' → logprob: -18.127477645874023
    9. '           ' → logprob: -19.877477645874023
    10. '+' → logprob: -20.127477645874023

Token 668: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012511172099038959
    2. ' +' → logprob: -9.00012493133545
    3. '+i' → logprob: -13.37512493133545
    4. '+
' → logprob: -16.125125885009766
    5. '+[' → logprob: -17.125125885009766
    6. '＋' → logprob: -18.000125885009766
    7. '+A' → logprob: -18.000125885009766
    8. '<len' → logprob: -18.500125885009766
    9. '1' → logprob: -18.625125885009766
    10. '<|end|>' → logprob: -18.750125885009766

Token 669: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -12.87500286102295
    3. '+' → logprob: -14.62500286102295
    4. '```' → logprob: -17.250003814697266
    5. '2' → logprob: -17.875003814697266
    6. '
' → logprob: -18.312503814697266
    7. '   ' → logprob: -19.000003814697266
    8. '0' → logprob: -19.562503814697266
    9. '`' → logprob: -20.250003814697266
    10. '{' → logprob: -20.437503814697266

Token 670: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.31399819254875183
    2. ' <' → logprob: -1.3139982223510742
    3. '<len' → logprob: -7.938998222351074
    4. '+' → logprob: -8.938998222351074
    5. '<n' → logprob: -9.063998222351074
    6. 'and' → logprob: -10.188998222351074
    7. '[' → logprob: -10.688998222351074
    8. ' and' → logprob: -10.938998222351074
    9. '<|end|>' → logprob: -11.063998222351074
    10. ' ' → logprob: -11.813998222351074

Token 671: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011048054322600365
    2. ' n' → logprob: -4.511047840118408
    3. '	n' → logprob: -15.636048316955566
    4. ')n' → logprob: -17.38604736328125
    5. '<|end|>' → logprob: -18.01104736328125
    6. 'len' → logprob: -18.26104736328125
    7. ' ' → logprob: -18.88604736328125
    8. '=n' → logprob: -19.26104736328125
    9. '```' → logprob: -19.51104736328125
    10. ',n' → logprob: -19.63604736328125

Token 672: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.02324547804892063
    2. ' and' → logprob: -3.7732455730438232
    3. '	and' → logprob: -17.523244857788086
    4. '<|end|>' → logprob: -17.773244857788086
    5. ' ' → logprob: -18.398244857788086
    6. '&&' → logprob: -19.648244857788086
    7. ' ' → logprob: -19.648244857788086
    8. ',' → logprob: -19.648244857788086
    9. '```' → logprob: -19.648244857788086
    10. 'a' → logprob: -19.773244857788086

Token 673: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2014141082763672
    2. ' s' → logprob: -1.7014141082763672
    3. '(s' → logprob: -14.576414108276367
    4. ''s' → logprob: -16.451414108276367
    5. ' ' → logprob: -16.701414108276367
    6. '{s' → logprob: -16.951414108276367
    7. '	s' → logprob: -17.451414108276367
    8. '`s' → logprob: -18.326414108276367
    9. '[s' → logprob: -18.576414108276367
    10. ' (' → logprob: -18.951414108276367

Token 674: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.9650025428272784e-05
    2. '[' → logprob: -10.250040054321289
    3. 'i' → logprob: -13.750040054321289
    4. '```' → logprob: -14.250040054321289
    5. '][' → logprob: -14.375040054321289
    6. ' [' → logprob: -14.375040054321289
    7. '[
' → logprob: -14.625040054321289
    8. '+' → logprob: -15.000040054321289
    9. ']' → logprob: -15.500040054321289
    10. '==' → logprob: -16.37504005432129

Token 675: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.762356209335849e-05
    2. ' +' → logprob: -10.50003719329834
    3. '+
' → logprob: -12.37503719329834
    4. '+i' → logprob: -13.00003719329834
    5. ']+' → logprob: -13.25003719329834
    6. '1' → logprob: -14.25003719329834
    7. '[' → logprob: -14.50003719329834
    8. '+]' → logprob: -15.50003719329834
    9. ']' → logprob: -15.87503719329834
    10. '+[' → logprob: -16.375038146972656

Token 676: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. '+' → logprob: -12.000011444091797
    3. ' ' → logprob: -12.875011444091797
    4. ''' → logprob: -13.375011444091797
    5. ''+' → logprob: -15.250011444091797
    6. ''''' → logprob: -15.250011444091797
    7. '```' → logprob: -15.500011444091797
    8. '"'' → logprob: -15.625011444091797
    9. '+"'' → logprob: -16.000011444091797
    10. '2' → logprob: -16.125011444091797

Token 677: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5305672287940979
    2. ']==' → logprob: -0.9055672287940979
    3. '==' → logprob: -5.530567169189453
    4. ']=='' → logprob: -5.905567169189453
    5. ']=="' → logprob: -7.780567169189453
    6. ' ==' → logprob: -8.655567169189453
    7. '']==' → logprob: -10.030567169189453
    8. '']' → logprob: -10.530567169189453
    9. ' ]' → logprob: -11.155567169189453
    10. '"]' → logprob: -11.405567169189453

Token 678: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06430424004793167
    2. ' ==' → logprob: -2.8143043518066406
    3. '=='' → logprob: -6.939304351806641
    4. '=="' → logprob: -6.939304351806641
    5. '=' → logprob: -7.939304351806641
    6. '==
' → logprob: -10.68930435180664
    7. ']==' → logprob: -11.56430435180664
    8. '"' → logprob: -13.18930435180664
    9. ']' → logprob: -14.06430435180664
    10. ' =='' → logprob: -14.56430435180664

Token 679: ' "'' (ID: 12868)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.693183958530426
    2. '"'' → logprob: -0.693183958530426
    3. ''' → logprob: -10.568183898925781
    4. ''''' → logprob: -12.568183898925781
    5. ''\' → logprob: -13.193183898925781
    6. ' "'' → logprob: -13.443183898925781
    7. '"""' → logprob: -13.693183898925781
    8. ''"' → logprob: -13.943183898925781
    9. '("'"' → logprob: -14.443183898925781
    10. ' "'"' → logprob: -14.568183898925781

Token 680: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.9827808737754822
    2. ':' → logprob: -1.732780933380127
    3. '"' → logprob: -1.982780933380127
    4. ':
' → logprob: -2.107780933380127
    5. '":
' → logprob: -2.232780933380127
    6. '           ' → logprob: -3.482780933380127
    7. ''' → logprob: -4.107780933380127
    8. '':' → logprob: -4.107780933380127
    9. '':
' → logprob: -4.982780933380127
    10. '):
' → logprob: -5.357780933380127

Token 681: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004933410091325641
    2. '           ' → logprob: -8.625493049621582
    3. ':' → logprob: -8.750493049621582
    4. ':
' → logprob: -9.125493049621582
    5. '              ' → logprob: -11.625493049621582
    6. '<|end|>' → logprob: -12.500493049621582
    7. '             ' → logprob: -12.625493049621582
    8. ' and' → logprob: -12.625493049621582
    9. ',' → logprob: -12.750493049621582
    10. '
' → logprob: -12.750493049621582

Token 682: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04526110365986824
    2. ' mor' → logprob: -3.1702611446380615
    3. '           ' → logprob: -6.420260906219482
    4. 'mor' (adapté à ' mor') → logprob: -7.670260906219482
    5. 'return' → logprob: -10.17026138305664
    6. ' m' → logprob: -10.17026138305664
    7. 'n' → logprob: -11.04526138305664
    8. ' mora' → logprob: -11.04526138305664
    9. '
' → logprob: -11.79526138305664
    10. '               ' → logprob: -11.92026138305664

Token 683: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -4.3226136767771095e-05
    2. 'oras' → logprob: -10.500042915344238
    3. '   ' → logprob: -12.250042915344238
    4. 's' → logprob: -12.500042915344238
    5. 'ras' → logprob: -13.500042915344238
    6. '           ' → logprob: -13.750042915344238
    7. '       ' → logprob: -13.875042915344238
    8. 'tas' → logprob: -14.625042915344238
    9. '            ' → logprob: -14.875042915344238
    10. '        ' → logprob: -15.125042915344238

Token 684: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00011272187111899257
    2. '.' → logprob: -9.125112533569336
    3. '.app' → logprob: -13.500112533569336
    4. '.extend' → logprob: -14.000112533569336
    5. '.ap' → logprob: -14.500112533569336
    6. 'append' → logprob: -14.750112533569336
    7. '.Append' → logprob: -15.125112533569336
    8. '.add' → logprob: -15.875112533569336
    9. ' .' → logprob: -16.500112533569336
    10. ').' → logprob: -17.125112533569336

Token 685: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.1277509480714798
    2. '"' → logprob: -2.127750873565674
    3. ' "' → logprob: -7.752750873565674
    4. '(' → logprob: -8.127751350402832
    5. '"N' → logprob: -10.002751350402832
    6. '(n' → logprob: -11.002751350402832
    7. 'n' → logprob: -11.127751350402832
    8. '('' → logprob: -11.252751350402832
    9. ''n' → logprob: -13.377751350402832
    10. ' ("' → logprob: -13.627751350402832

Token 686: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.759734732331708e-05
    2. '"' → logprob: -11.000017166137695
    3. ''n' → logprob: -14.750017166137695
    4. 'n't' → logprob: -15.000017166137695
    5. ' n' → logprob: -16.625017166137695
    6. '
' → logprob: -18.125017166137695
    7. '	n' → logprob: -18.500017166137695
    8. '(n' → logprob: -18.500017166137695
    9. '[n' → logprob: -18.875017166137695
    10. '<n' → logprob: -19.000017166137695

Token 687: ''")
' (ID: 169837)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0008999044075608253
    2. ''")
' → logprob: -7.250899791717529
    3. ''"' → logprob: -8.625900268554688
    4. '"' → logprob: -12.125900268554688
    5. '\'' → logprob: -13.500900268554688
    6. '"'' → logprob: -13.500900268554688
    7. ''"
' → logprob: -14.125900268554688
    8. '")' → logprob: -15.000900268554688
    9. ''");
' → logprob: -15.250900268554688
    10. '')' → logprob: -15.375900268554688

Token 688: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00017708084487821907
    2. '
' → logprob: -9.500177383422852
    3. '<|end|>' → logprob: -9.875177383422852
    4. '                
' → logprob: -10.750177383422852
    5. '           ' → logprob: -12.250177383422852
    6. ')' → logprob: -12.625177383422852
    7. '                   ' → logprob: -12.750177383422852
    8. '              ' → logprob: -13.000177383422852
    9. '			' → logprob: -13.000177383422852
    10. '<|end|>' → logprob: -13.125177383422852

Token 689: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.012614437378942966
    2. ' i' → logprob: -5.0126142501831055
    3. '               ' → logprob: -5.1376142501831055
    4. '           ' → logprob: -12.512614250183105
    5. '                   ' → logprob: -12.512614250183105
    6. ' ' → logprob: -14.012614250183105
    7. '   ' → logprob: -14.762614250183105
    8. '                ' → logprob: -15.137614250183105
    9. '	i' → logprob: -15.137614250183105
    10. '
' → logprob: -15.387614250183105

Token 690: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014717744663357735
    2. '+' → logprob: -4.2647175788879395
    3. ' +=' → logprob: -7.5147175788879395
    4. '=' → logprob: -12.014718055725098
    5. '+="' → logprob: -14.139718055725098
    6. '+
' → logprob: -14.264718055725098
    7. '+='' → logprob: -14.639718055725098
    8. ']+=' → logprob: -15.014718055725098
    9. ' +' → logprob: -15.264718055725098
    10. '[' → logprob: -15.389718055725098

Token 691: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -18.75
    4. '   ' → logprob: -20.0
    5. '۲' → logprob: -20.5
    6. '２' → logprob: -20.75
    7. '
' → logprob: -21.375
    8. '२' → logprob: -22.0625
    9. '٢' → logprob: -22.5625
    10. '`' → logprob: -22.5625

Token 692: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -19.25
    4. '```' → logprob: -19.75
    5. '۲' → logprob: -20.625
    6. '２' → logprob: -21.125
    7. '  ' → logprob: -21.875
    8. '२' → logprob: -22.0
    9. '1' → logprob: -22.25
    10. '3' → logprob: -22.3125

Token 693: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004152837675064802
    2. '               ' → logprob: -5.629152774810791
    3. '       ' → logprob: -7.629152774810791
    4. 'else' → logprob: -10.62915325164795
    5. 'continue' → logprob: -11.37915325164795
    6. '```' → logprob: -11.37915325164795
    7. '		' → logprob: -12.25415325164795
    8. '<|end|>' → logprob: -12.25415325164795
    9. 'elif' → logprob: -13.37915325164795
    10. 'n' → logprob: -13.50415325164795

Token 694: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26669207215309143
    2. '               ' → logprob: -1.516692042350769
    3. '<|end|>' → logprob: -4.391692161560059
    4. 'continue' → logprob: -6.641692161560059
    5. '```' → logprob: -8.016692161560059
    6. '       ' → logprob: -8.516692161560059
    7. ' continue' → logprob: -8.891692161560059
    8. 'else' → logprob: -9.391692161560059
    9. '<|end|>' → logprob: -10.266692161560059
    10. '
' → logprob: -10.391692161560059

Token 695: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.13063228130340576
    2. '               ' → logprob: -2.1306324005126953
    3. ' continue' → logprob: -5.630632400512695
    4. '           ' → logprob: -9.505632400512695
    5. '	continue' → logprob: -11.005632400512695
    6. '_continue' → logprob: -11.380632400512695
    7. 'continu' → logprob: -12.130632400512695
    8. 'contin' → logprob: -13.005632400512695
    9. '                   ' → logprob: -15.130632400512695
    10. 'Continue' → logprob: -15.755632400512695

Token 696: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6979771256446838
    2. '           ' → logprob: -0.6979771256446838
    3. '<|end|>' → logprob: -5.697977066040039
    4. '
' → logprob: -7.822977066040039
    5. '        
' → logprob: -8.322977066040039
    6. '          ' → logprob: -8.572977066040039
    7. 'elif' → logprob: -9.072977066040039
    8. '            
' → logprob: -9.322977066040039
    9. 'n' → logprob: -9.447977066040039
    10. '```' → logprob: -9.447977066040039

Token 697: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005724235903471708
    2. '           ' → logprob: -5.2557244300842285
    3. '<|end|>' → logprob: -8.50572395324707
    4. '        
' → logprob: -8.88072395324707
    5. '
' → logprob: -9.75572395324707
    6. '```' → logprob: -10.50572395324707
    7. 'elif' → logprob: -10.88072395324707
    8. '      ' → logprob: -11.50572395324707
    9. 'n' → logprob: -12.00572395324707
    10. '   ' → logprob: -12.13072395324707

Token 698: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01531897857785225
    2. 'if' → logprob: -5.390318870544434
    3. 'else' (adapté à ' else') → logprob: -5.640318870544434
    4. 'elif' → logprob: -5.640318870544434
    5. '<|end|>' → logprob: -6.890318870544434
    6. 'n' → logprob: -7.140318870544434
    7. '
' → logprob: -8.015318870544434
    8. '```' → logprob: -8.140318870544434
    9. '           ' → logprob: -8.265318870544434
    10. ' if' → logprob: -8.390318870544434

Token 699: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.039759352803230286
    2. ':
' → logprob: -3.289759397506714
    3. '               ' → logprob: -7.039759159088135
    4. ' if' → logprob: -7.664759159088135
    5. 'if' → logprob: -8.539759635925293
    6. '           ' → logprob: -9.164759635925293
    7. '<|end|>' → logprob: -11.289759635925293
    8. ' :' → logprob: -11.414759635925293
    9. '       ' → logprob: -11.664759635925293
    10. ',' → logprob: -11.789759635925293

Token 700: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2211167812347412
    2. '               ' → logprob: -1.2211167812347412
    3. 'n' → logprob: -2.471116781234741
    4. ' mor' → logprob: -2.471116781234741
    5. ' if' → logprob: -2.721116781234741
    6. 'if' → logprob: -2.971116781234741
    7. ' gl' → logprob: -3.346116781234741
    8. 'v' → logprob: -3.971116781234741
    9. 'm' → logprob: -3.971116781234741
    10. 'gl' → logprob: -4.09611701965332

Token 701: ' #' (ID: 1069)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0014940340770408511
    2. ' mor' → logprob: -7.75149393081665
    3. '           ' → logprob: -7.87649393081665
    4. '               ' → logprob: -8.501494407653809
    5. 'if' → logprob: -9.126494407653809
    6. 'mor' → logprob: -9.251494407653809
    7. 'gl' → logprob: -9.626494407653809
    8. 'n' → logprob: -9.626494407653809
    9. '   ' → logprob: -9.626494407653809
    10. '                   ' → logprob: -11.001494407653809

Token 702: ' '' (ID: 461)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0187170822173357
    2. 'gl' → logprob: -4.518717288970947
    3. 'if' → logprob: -5.143717288970947
    4. '#' → logprob: -7.143717288970947
    5. '           ' → logprob: -7.643717288970947
    6. 'mor' → logprob: -9.268716812133789
    7. '               ' → logprob: -9.393716812133789
    8. ' mor' → logprob: -9.643716812133789
    9. 'n' → logprob: -9.768716812133789
    10. '   ' → logprob: -10.393716812133789

Token 703: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.35020437836647034
    2. 'm' → logprob: -1.225204348564148
    3. 's' → logprob: -6.9752044677734375
    4. 'c' → logprob: -8.600204467773438
    5. 'gl' → logprob: -8.725204467773438
    6. 'mor' → logprob: -9.475204467773438
    7. 'v' → logprob: -9.975204467773438
    8. 'i' → logprob: -10.100204467773438
    9. ''' → logprob: -10.412704467773438
    10. '```' → logprob: -10.475204467773438

Token 704: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -1.0491596460342407
    2. ''' → logprob: -1.1741596460342407
    3. '           ' → logprob: -2.549159526824951
    4. ')' → logprob: -2.549159526824951
    5. '<|end|>' → logprob: -3.049159526824951
    6. '.append' → logprob: -3.799159526824951
    7. '               ' → logprob: -3.924159526824951
    8. ''s' → logprob: -4.174159526824951
    9. 'm' → logprob: -4.799159526824951
    10. 'token' → logprob: -4.924159526824951

Token 705: ' alone' (ID: 11238)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.09581819176673889
    2. '               ' → logprob: -3.345818281173706
    3. 's' → logprob: -3.595818281173706
    4. '           ' → logprob: -4.845818042755127
    5. '.append' → logprob: -5.720818042755127
    6. '=' → logprob: -6.220818042755127
    7. ' =' → logprob: -6.345818042755127
    8. ' mor' → logprob: -6.470818042755127
    9. 'mor' → logprob: -6.595818042755127
    10. 'as' → logprob: -6.720818042755127

Token 706: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6139752268791199
    2. '               ' → logprob: -0.8639752268791199
    3. ':' → logprob: -3.8639752864837646
    4. 'm' → logprob: -4.7389750480651855
    5. ':
' → logprob: -6.1139750480651855
    6. ' =' → logprob: -7.2389750480651855
    7. '              ' → logprob: -7.2389750480651855
    8. '=' → logprob: -7.3639750480651855
    9. '          ' → logprob: -7.3639750480651855
    10. '            ' → logprob: -8.238975524902344

Token 707: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029401669278740883
    2. '           ' → logprob: -3.6544017791748047
    3. ':' → logprob: -6.154401779174805
    4. ':
' → logprob: -8.779401779174805
    5. '              ' → logprob: -8.779401779174805
    6. '       ' → logprob: -9.279401779174805
    7. '<|end|>' → logprob: -9.279401779174805
    8. '                
' → logprob: -9.779401779174805
    9. '                   ' → logprob: -10.279401779174805
    10. '                ' → logprob: -10.279401779174805

Token 708: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.013463013805449009
    2. ' mor' → logprob: -4.388463020324707
    3. 'mor' (adapté à ' mor') → logprob: -7.638463020324707
    4. '                   ' → logprob: -8.638463020324707
    5. '               ' → logprob: -8.763463020324707
    6. '           ' → logprob: -9.513463020324707
    7. '   ' → logprob: -11.138463020324707
    8. 'n' → logprob: -11.513463020324707
    9. '                ' → logprob: -12.388463020324707
    10. ' m' → logprob: -12.575963020324707

Token 709: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.005744860507547855
    2. 'oras' → logprob: -5.630744934082031
    3. '           ' → logprob: -7.880744934082031
    4. '   ' → logprob: -8.005744934082031
    5. '            ' → logprob: -8.380744934082031
    6. '.append' → logprob: -8.630744934082031
    7. '=' → logprob: -8.755744934082031
    8. '               ' → logprob: -8.755744934082031
    9. '        ' → logprob: -8.755744934082031
    10. '       ' → logprob: -9.130744934082031

Token 710: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011880877427756786
    2. '.' → logprob: -6.876188278198242
    3. 'append' → logprob: -8.876188278198242
    4. '.app' → logprob: -11.626188278198242
    5. '_append' → logprob: -13.001188278198242
    6. '.ap' → logprob: -13.501188278198242
    7. '.Append' → logprob: -13.626188278198242
    8. 'app' → logprob: -15.001188278198242
    9. 'Append' → logprob: -15.126188278198242
    10. ' .' → logprob: -15.251188278198242

Token 711: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5760526657104492
    2. '('' → logprob: -0.8260526657104492
    3. '(' → logprob: -9.57605266571045
    4. '(c' → logprob: -10.07605266571045
    5. '"' → logprob: -13.45105266571045
    6. ''' → logprob: -15.32605266571045
    7. '()' → logprob: -16.076053619384766
    8. '(n' → logprob: -17.201053619384766
    9. 'c' → logprob: -17.576053619384766
    10. '(
' → logprob: -17.701053619384766

Token 712: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000156577822053805
    2. ''n' → logprob: -9.37515640258789
    3. '"' → logprob: -9.62515640258789
    4. ''' → logprob: -12.12515640258789
    5. 'n't' → logprob: -16.12515640258789
    6. ' n' → logprob: -17.75015640258789
    7. ')n' → logprob: -19.37515640258789
    8. '`' → logprob: -19.62515640258789
    9. '[n' → logprob: -19.75015640258789
    10. '")' → logprob: -20.37515640258789

Token 713: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.04158691689372063
    2. '")' → logprob: -3.2915868759155273
    3. ''")
' → logprob: -5.791586875915527
    4. '")
' → logprob: -8.166586875915527
    5. ''' → logprob: -9.291586875915527
    6. '')
' → logprob: -9.666586875915527
    7. '')' → logprob: -10.666586875915527
    8. '"' → logprob: -11.166586875915527
    9. 'n' → logprob: -12.166586875915527
    10. ')
' → logprob: -14.041586875915527

Token 714: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0031953046564012766
    2. '           ' → logprob: -6.003195285797119
    3. '<|end|>' → logprob: -8.128195762634277
    4. '       ' → logprob: -9.128195762634277
    5. '```' → logprob: -9.128195762634277
    6. '
' → logprob: -9.753195762634277
    7. '                
' → logprob: -10.003195762634277
    8. 'i' → logprob: -10.253195762634277
    9. '<|end|>' → logprob: -11.628195762634277
    10. '              ' → logprob: -11.753195762634277

Token 715: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0067167943343520164
    2. ' i' → logprob: -5.006716728210449
    3. '           ' → logprob: -13.63171672821045
    4. '	i' → logprob: -16.381717681884766
    5. '               ' → logprob: -16.881717681884766
    6. '
' → logprob: -17.006717681884766
    7. '   ' → logprob: -17.381717681884766
    8. '       ' → logprob: -18.256717681884766
    9. '```' → logprob: -18.506717681884766
    10. ' 
' → logprob: -18.756717681884766

Token 716: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0003546502848621458
    2. ' +=' → logprob: -8.000354766845703
    3. '+' → logprob: -10.875354766845703
    4. '=' → logprob: -15.125354766845703
    5. '+='' → logprob: -17.375354766845703
    6. ']+=' → logprob: -17.625354766845703
    7. '+="' → logprob: -17.875354766845703
    8. '+=(' → logprob: -19.375354766845703
    9. '```' → logprob: -19.750354766845703
    10. '++' → logprob: -20.250354766845703

Token 717: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -20.250015258789062
    4. '１' → logprob: -21.875015258789062
    5. '۱' → logprob: -23.000015258789062
    6. '   ' → logprob: -24.000015258789062
    7. '
' → logprob: -24.000015258789062
    8. '2' → logprob: -24.250015258789062
    9. ' ' → logprob: -24.500015258789062
    10. '' → logprob: -24.750015258789062

Token 718: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -20.125
    4. '１' → logprob: -22.25
    5. '۱' → logprob: -22.875
    6. '   ' → logprob: -23.125
    7. '
' → logprob: -23.25
    8. '0' → logprob: -24.125
    9. '১' → logprob: -24.875
    10. '' → logprob: -25.0

Token 719: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06003633141517639
    2. '               ' → logprob: -3.5600364208221436
    3. '<|end|>' → logprob: -3.8100364208221436
    4. '           ' → logprob: -4.9350361824035645
    5. '<|end|>' → logprob: -8.560036659240723
    6. ')' → logprob: -9.810036659240723
    7. 'elif' → logprob: -10.060036659240723
    8. 'continue' → logprob: -10.435036659240723
    9. '   ' → logprob: -10.435036659240723
    10. '.' → logprob: -10.810036659240723

Token 720: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0334986113011837
    2. '<|end|>' → logprob: -4.033498764038086
    3. '               ' → logprob: -4.658498764038086
    4. '           ' → logprob: -5.408498764038086
    5. 'continue' → logprob: -7.533498764038086
    6. ' continue' → logprob: -8.033498764038086
    7. '<|end|>' → logprob: -9.033498764038086
    8. '```' → logprob: -9.783498764038086
    9. '   ' → logprob: -10.033498764038086
    10. ')' → logprob: -10.658498764038086

Token 721: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.9000614881515503
    2. ' continue' → logprob: -1.2750614881515503
    3. '               ' → logprob: -1.7750614881515503
    4. '           ' → logprob: -2.02506160736084
    5. '       ' → logprob: -4.40006160736084
    6. '	continue' → logprob: -9.02506160736084
    7. '   ' → logprob: -9.77506160736084
    8. ' ' → logprob: -10.40006160736084
    9. '```' → logprob: -10.65006160736084
    10. '_continue' → logprob: -10.90006160736084

Token 722: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007984546944499016
    2. '<|end|>' → logprob: -4.882984638214111
    3. '```' → logprob: -8.382984161376953
    4. '        
' → logprob: -9.632984161376953
    5. 'elif' → logprob: -10.632984161376953
    6. '<|end|>' → logprob: -10.632984161376953
    7. '
' → logprob: -11.757984161376953
    8. '   ' → logprob: -11.882984161376953
    9. ')' → logprob: -12.507984161376953
    10. '      ' → logprob: -12.757984161376953

Token 723: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005821548402309418
    2. '<|end|>' → logprob: -5.255821704864502
    3. '        
' → logprob: -8.505821228027344
    4. 'elif' → logprob: -8.755821228027344
    5. '```' → logprob: -9.380821228027344
    6. ')' → logprob: -10.005821228027344
    7. '<|end|>' → logprob: -11.130821228027344
    8. '
' → logprob: -11.630821228027344
    9. '        ' → logprob: -11.755821228027344
    10. '   ' → logprob: -11.755821228027344

Token 724: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17466327548027039
    2. 'elif' → logprob: -1.9246633052825928
    3. '#' (adapté à ' #') → logprob: -4.299663066864014
    4. 'if' → logprob: -7.799663066864014
    5. '   ' → logprob: -8.674663543701172
    6. '```' → logprob: -9.049663543701172
    7. '        
' → logprob: -10.924663543701172
    8. ' elif' → logprob: -11.299663543701172
    9. '
' → logprob: -12.049663543701172
    10. 'else' → logprob: -12.424663543701172

Token 725: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22873681783676147
    2. 'elif' → logprob: -1.6037368774414062
    3. '#' → logprob: -5.728736877441406
    4. '   ' → logprob: -11.478736877441406
    5. ' if' → logprob: -11.728736877441406
    6. '       ' → logprob: -11.728736877441406
    7. '```' → logprob: -11.728736877441406
    8. 'If' → logprob: -12.103736877441406
    9. 'e' → logprob: -12.478736877441406
    10. 'token' → logprob: -12.853736877441406

Token 726: '3' (ID: 18)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16070742905139923
    2. 'elif' → logprob: -1.9107074737548828
    3. '#' → logprob: -7.660707473754883
    4. '```' → logprob: -12.285707473754883
    5. ' if' → logprob: -13.160707473754883
    6. 'el' → logprob: -13.910707473754883
    7. 'If' → logprob: -14.285707473754883
    8. '   ' → logprob: -14.660707473754883
    9. 'elseif' → logprob: -14.660707473754883
    10. 'next' → logprob: -15.035707473754883

Token 727: '-char' (ID: 127189)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.015484139323234558
    2. 'char' → logprob: -4.76548433303833
    3. 'if' → logprob: -5.51548433303833
    4. '-char' → logprob: -6.64048433303833
    5. ' elif' → logprob: -7.14048433303833
    6. ' if' → logprob: -8.265483856201172
    7. '	elif' → logprob: -9.640483856201172
    8. '<char' → logprob: -9.640483856201172
    9. '-' → logprob: -9.765483856201172
    10. '_char' → logprob: -9.890483856201172

Token 728: ' mora' (ID: 47294)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.09244849532842636
    2. '<|end|>' → logprob: -3.0924484729766846
    3. ' elif' → logprob: -3.4674484729766846
    4. 'if' → logprob: -5.092448711395264
    5. ' if' → logprob: -5.842448711395264
    6. '<|end|>' → logprob: -6.342448711395264
    7. '	elif' → logprob: -7.842448711395264
    8. ' and' → logprob: -9.092448234558105
    9. ' ' → logprob: -9.717448234558105
    10. ')' → logprob: -9.842448234558105

Token 729: ' e' (ID: 319)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 730: '.g' (ID: 1940)
  Prédit: 'lif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lif' → logprob: -0.0021590644028037786
    2. 'lse' → logprob: -6.252159118652344
    3. 'elif' → logprob: -9.252159118652344
    4. 'l' → logprob: -9.877159118652344
    5. 'lim' → logprob: -10.002159118652344
    6. ' lif' → logprob: -11.127159118652344
    7. 'ls' → logprob: -11.627159118652344
    8. 'lf' → logprob: -11.627159118652344
    9. 'if' → logprob: -12.627159118652344
    10. 'li' → logprob: -14.877159118652344

Token 731: '.' (ID: 13)
  Prédit: 'lif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lif' → logprob: -0.00023607931507285684
    2. 'l' → logprob: -8.750236511230469
    3. 'elif' → logprob: -10.125236511230469
    4. 'lse' → logprob: -10.375236511230469
    5. 'lim' → logprob: -13.250236511230469
    6. '```' → logprob: -13.375236511230469
    7. 'ls' → logprob: -13.625236511230469
    8. 'lf' → logprob: -13.750236511230469
    9. 'if' → logprob: -14.875236511230469
    10. '   ' → logprob: -16.25023651123047

Token 732: ' ky' (ID: 28873)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10059212893247604
    2. 'elif' → logprob: -2.3505921363830566
    3. ' if' → logprob: -7.975592136383057
    4. '<|end|>' → logprob: -10.475591659545898
    5. ' elif' → logprob: -11.850591659545898
    6. '```' → logprob: -13.100591659545898
    7. '   ' → logprob: -13.975591659545898
    8. '       ' → logprob: -14.600591659545898
    9. '<|end|>' → logprob: -14.725591659545898
    10. 's' → logprob: -14.850591659545898

Token 733: '(a' (ID: 6271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2768049240112305
    2. 'y' → logprob: -1.6518049240112305
    3. 's' → logprob: -1.6518049240112305
    4. 'u' → logprob: -2.1518049240112305
    5. ')' → logprob: -2.7768049240112305
    6. ' =' → logprob: -3.5268049240112305
    7. '   ' → logprob: -4.1518049240112305
    8. 'a' → logprob: -4.4018049240112305
    9. '{' → logprob: -4.5268049240112305
    10. 'elif' → logprob: -4.6518049240112305

Token 734: '|' (ID: 91)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004022357054054737
    2. '')' → logprob: -7.129022121429443
    3. 's' → logprob: -7.254022121429443
    4. 'u' → logprob: -8.004022598266602
    5. 'n' → logprob: -8.129022598266602
    6. ')
' → logprob: -9.004022598266602
    7. 'k' → logprob: -9.129022598266602
    8. 't' → logprob: -9.254022598266602
    9. ')n' → logprob: -9.254022598266602
    10. '")' → logprob: -9.379022598266602

Token 735: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3493385910987854
    2. 'o' → logprob: -1.2243385314941406
    3. ')' → logprob: -7.849338531494141
    4. 'a' → logprob: -8.47433853149414
    5. ''u' → logprob: -9.47433853149414
    6. 'y' → logprob: -9.59933853149414
    7. '')' → logprob: -9.97433853149414
    8. 'i' → logprob: -10.97433853149414
    9. ')o' → logprob: -11.09933853149414
    10. ''o' → logprob: -11.22433853149414

Token 736: '|' (ID: 91)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003517637262120843
    2. ',' → logprob: -7.5035176277160645
    3. '')' → logprob: -7.5035176277160645
    4. ')y' → logprob: -7.7535176277160645
    5. '):' → logprob: -8.503518104553223
    6. 's' → logprob: -8.503518104553223
    7. 'u' → logprob: -8.753518104553223
    8. 'y' → logprob: -8.753518104553223
    9. ')n' → logprob: -9.253518104553223
    10. ')o' → logprob: -9.253518104553223

Token 737: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.00010902655776590109
    2. ')' → logprob: -9.87510871887207
    3. ')o' → logprob: -10.00010871887207
    4. ''o' → logprob: -11.75010871887207
    5. 'a' → logprob: -13.62510871887207
    6. '{o' → logprob: -13.75010871887207
    7. 'о' → logprob: -14.37510871887207
    8. '	o' → logprob: -14.50010871887207
    9. ' o' → logprob: -15.25010871887207
    10. '')' → logprob: -16.12510871887207

Token 738: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4081231653690338
    2. '):' → logprob: -1.1581231355667114
    3. '):
' → logprob: -4.158123016357422
    4. ''):' → logprob: -6.408123016357422
    5. '')' → logprob: -6.908123016357422
    6. 'if' → logprob: -7.408123016357422
    7. ':' → logprob: -7.408123016357422
    8. 'elif' → logprob: -7.783123016357422
    9. ''):
' → logprob: -8.158123016357422
    10. '   ' → logprob: -8.408123016357422

Token 739: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.045537348836660385
    2. ' elif' → logprob: -4.54553747177124
    3. '       ' → logprob: -4.67053747177124
    4. 'if' → logprob: -4.92053747177124
    5. '<|end|>' → logprob: -5.17053747177124
    6. '{' → logprob: -5.42053747177124
    7. '           ' → logprob: -6.42053747177124
    8. '	elif' → logprob: -6.67053747177124
    9. ' if' → logprob: -7.29553747177124
    10. ':' → logprob: -7.29553747177124

Token 740: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.2582544982433319
    2. 'if' (adapté à ' if') → logprob: -1.5082545280456543
    3. '<|end|>' → logprob: -5.758254528045654
    4. ' if' → logprob: -6.383254528045654
    5. ' elif' → logprob: -7.633254528045654
    6. '       ' → logprob: -8.008254051208496
    7. '   ' → logprob: -8.883254051208496
    8. '{' → logprob: -9.383254051208496
    9. ' ' → logprob: -9.633254051208496
    10. '<|end|>' → logprob: -10.133254051208496

Token 741: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08902779966592789
    2. ' i' → logprob: -2.4640278816223145
    3. 'c' → logprob: -10.339027404785156
    4. 's' → logprob: -10.714027404785156
    5. ' s' → logprob: -11.339027404785156
    6. ' c' → logprob: -11.714027404785156
    7. ' ' → logprob: -12.214027404785156
    8. '(i' → logprob: -12.589027404785156
    9. '   ' → logprob: -13.214027404785156
    10. ' (' → logprob: -13.339027404785156

Token 742: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.228561349213123e-05
    2. ' +' → logprob: -9.875052452087402
    3. '+i' → logprob: -14.250052452087402
    4. '+
' → logprob: -16.750051498413086
    5. '+=' → logprob: -17.000051498413086
    6. '＋' → logprob: -17.500051498413086
    7. 'i' → logprob: -18.500051498413086
    8. ' ' → logprob: -19.125051498413086
    9. '()+' → logprob: -19.125051498413086
    10. '3' → logprob: -19.125051498413086

Token 743: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -16.87500762939453
    4. '3' → logprob: -17.87500762939453
    5. '...' → logprob: -18.87500762939453
    6. '+' → logprob: -18.93750762939453
    7. '２' → logprob: -19.43750762939453
    8. '۲' → logprob: -19.50000762939453
    9. '{' → logprob: -19.68750762939453
    10. '[' → logprob: -19.75000762939453

Token 744: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0028279386460781097
    2. '<' → logprob: -5.877828121185303
    3. '<n' → logprob: -11.252827644348145
    4. ' <=' → logprob: -12.752827644348145
    5. '<|end|>' → logprob: -12.752827644348145
    6. '<len' → logprob: -13.377827644348145
    7. '[' → logprob: -14.377827644348145
    8. '<=' → logprob: -14.752827644348145
    9. ' ' → logprob: -14.752827644348145
    10. ' >=' → logprob: -15.002827644348145

Token 745: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001929228543303907
    2. ' n' → logprob: -6.25192928314209
    3. '<|end|>' → logprob: -15.12692928314209
    4. 's' → logprob: -15.50192928314209
    5. '	n' → logprob: -16.376928329467773
    6. 'len' → logprob: -17.626928329467773
    7. '```' → logprob: -18.876928329467773
    8. ')n' → logprob: -19.001928329467773
    9. '<|end|>' → logprob: -19.001928329467773
    10. '<n' → logprob: -19.751928329467773

Token 746: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006715967319905758
    2. 'and' → logprob: -5.006715774536133
    3. '<|end|>' → logprob: -15.631715774536133
    4. ' ' → logprob: -16.131715774536133
    5. 's' → logprob: -17.006715774536133
    6. ' s' → logprob: -17.506715774536133
    7. '	and' → logprob: -17.631715774536133
    8. ' &' → logprob: -17.881715774536133
    9. ':
' → logprob: -18.006715774536133
    10. '<|end|>' → logprob: -18.131715774536133

Token 747: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029753848910331726
    2. ' s' → logprob: -3.5297539234161377
    3. 'c' → logprob: -13.154753684997559
    4. ' c' → logprob: -14.654753684997559
    5. ' ' → logprob: -15.029753684997559
    6. '<|end|>' → logprob: -15.154753684997559
    7. ' (' → logprob: -15.654753684997559
    8. '(s' → logprob: -16.029754638671875
    9. '{s' → logprob: -17.029754638671875
    10. '	s' → logprob: -17.154754638671875

Token 748: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. 'i' → logprob: -14.375000953674316
    3. '```' → logprob: -14.875000953674316
    4. '[
' → logprob: -15.500000953674316
    5. '[' → logprob: -15.875000953674316
    6. '[s' → logprob: -16.750001907348633
    7. '{i' → logprob: -18.250001907348633
    8. '[c' → logprob: -18.375001907348633
    9. '[]' → logprob: -18.500001907348633
    10. ' [' → logprob: -18.625001907348633

Token 749: ']' (ID: 60)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8806797862052917
    2. ']' → logprob: -1.0056798458099365
    3. ' in' → logprob: -1.7556798458099365
    4. '[i' → logprob: -3.1306798458099365
    5. '][' → logprob: -7.380679607391357
    6. '[s' → logprob: -7.630679607391357
    7. '[' → logprob: -7.630679607391357
    8. 'In' → logprob: -8.005680084228516
    9. 's' → logprob: -8.130680084228516
    10. '[in' → logprob: -8.130680084228516

Token 750: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.386989951133728
    2. ' in' → logprob: -1.136989951133728
    3. '<|end|>' → logprob: -9.38698959350586
    4. 's' → logprob: -10.76198959350586
    5. ' ' → logprob: -12.38698959350586
    6. '<|end|>' → logprob: -12.63698959350586
    7. 'i' → logprob: -13.13698959350586
    8. ')' → logprob: -14.26198959350586
    9. ']' → logprob: -14.51198959350586
    10. '[' → logprob: -14.51198959350586

Token 751: ' CON' (ID: 5802)
  Prédit: 'CON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CON' → logprob: -3.8889261304575484e-06
    2. ' CON' → logprob: -12.500003814697266
    3. '{'' → logprob: -16.000003814697266
    4. '_CON' → logprob: -19.625003814697266
    5. 'CONT' → logprob: -20.000003814697266
    6. 'CO' → logprob: -20.500003814697266
    7. 'COM' → logprob: -21.125003814697266
    8. '(CON' → logprob: -21.125003814697266
    9. 'C' → logprob: -21.500003814697266
    10. '.CON' → logprob: -22.250003814697266

Token 752: 'SON' (ID: 4214)
  Prédit: 'SON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SON' → logprob: -0.004608845803886652
    2. 'ONS' → logprob: -5.629608631134033
    3. 'ON' → logprob: -7.504608631134033
    4. 'CON' → logprob: -7.879608631134033
    5. 'S' → logprob: -10.879609107971191
    6. 'OS' → logprob: -11.004609107971191
    7. 'son' → logprob: -11.379609107971191
    8. 'CONS' → logprob: -11.754609107971191
    9. 'ONT' → logprob: -12.254609107971191
    10. 'ONSE' → logprob: -12.379609107971191

Token 753: 'ANTS' (ID: 96531)
  Prédit: 'ANTS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANTS' → logprob: -0.00121737876906991
    2. 'ants' → logprob: -6.876217365264893
    3. 'ON' → logprob: -9.12621784210205
    4. '_' → logprob: -10.50121784210205
    5. 'ENTS' → logprob: -11.37621784210205
    6. 'onts' → logprob: -11.37621784210205
    7. 'S' → logprob: -12.50121784210205
    8. 'TS' → logprob: -12.75121784210205
    9. 's' → logprob: -13.00121784210205
    10. 'ONDS' → logprob: -13.12621784210205

Token 754: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02975141443312168
    2. 'and' → logprob: -3.5297513008117676
    3. '<|end|>' → logprob: -14.529751777648926
    4. ' ' → logprob: -16.15475082397461
    5. 's' → logprob: -16.27975082397461
    6. '	and' → logprob: -16.77975082397461
    7. '[' → logprob: -17.02975082397461
    8. '[i' → logprob: -17.15475082397461
    9. ' &&' → logprob: -17.40475082397461
    10. ' &' → logprob: -17.40475082397461

Token 755: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0788901224732399
    2. 's' → logprob: -2.578890085220337
    3. ' ' → logprob: -15.828889846801758
    4. '	s' → logprob: -16.453889846801758
    5. '<|end|>' → logprob: -16.828889846801758
    6. '(s' → logprob: -17.578889846801758
    7. '{s' → logprob: -17.828889846801758
    8. ' ' → logprob: -18.203889846801758
    9. '_s' → logprob: -18.453889846801758
    10. '[s' → logprob: -19.203889846801758

Token 756: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.547789674485102e-05
    2. '[' → logprob: -10.500035285949707
    3. '+' → logprob: -13.000035285949707
    4. '[s' → logprob: -13.500035285949707
    5. '[
' → logprob: -13.750035285949707
    6. '[user' → logprob: -14.375035285949707
    7. 'i' → logprob: -14.625035285949707
    8. '```' → logprob: -14.875035285949707
    9. ' [' → logprob: -15.250035285949707
    10. 's' → logprob: -15.500035285949707

Token 757: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.7835754988482222e-05
    2. '[' → logprob: -11.000018119812012
    3. ' +' → logprob: -14.625018119812012
    4. '+
' → logprob: -15.250018119812012
    5. '+[' → logprob: -15.875018119812012
    6. '+i' → logprob: -16.125017166137695
    7. '＋' → logprob: -17.000017166137695
    8. '1' → logprob: -17.500017166137695
    9. ']' → logprob: -17.500017166137695
    10. '+]' → logprob: -17.625017166137695

Token 758: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5358694731257856e-05
    2. '+' → logprob: -10.875035285949707
    3. '2' → logprob: -11.500035285949707
    4. ' ' → logprob: -12.125035285949707
    5. '
' → logprob: -15.437535285949707
    6. '   ' → logprob: -16.062536239624023
    7. '```' → logprob: -16.250036239624023
    8. '+
' → logprob: -16.875036239624023
    9. '0' → logprob: -16.937536239624023
    10. '3' → logprob: -17.437536239624023

Token 759: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4182015359401703
    2. ']' → logprob: -1.6682015657424927
    3. ' ==' → logprob: -2.168201446533203
    4. ']==' → logprob: -3.293201446533203
    5. '=='' → logprob: -6.918201446533203
    6. ']=='' → logprob: -7.543201446533203
    7. '+' → logprob: -10.293201446533203
    8. 'y' → logprob: -10.543201446533203
    9. '=' → logprob: -10.668201446533203
    10. '==
' → logprob: -10.793201446533203

Token 760: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14645759761333466
    2. ' ==' → logprob: -2.0214576721191406
    3. '=='' → logprob: -5.646457672119141
    4. '=' → logprob: -9.14645767211914
    5. '==
' → logprob: -10.14645767211914
    6. 'y' → logprob: -10.14645767211914
    7. ']==' → logprob: -10.39645767211914
    8. ']' → logprob: -12.02145767211914
    9. ' =='' → logprob: -12.14645767211914
    10. '=="' → logprob: -12.39645767211914

Token 761: ' '' (ID: 461)
  Prédit: ''y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -0.00028696097433567047
    2. ''' → logprob: -8.750287055969238
    3. '‘y' → logprob: -9.000287055969238
    4. ''ny' → logprob: -13.000287055969238
    5. ' '' → logprob: -13.375287055969238
    6. 'y' → logprob: -14.000287055969238
    7. ''s' → logprob: -15.750287055969238
    8. '’y' → logprob: -16.000286102294922
    9. '"' → logprob: -16.500286102294922
    10. ''u' → logprob: -17.250286102294922

Token 762: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07900677621364594
    2. ''y' → logprob: -2.5790066719055176
    3. '‘y' → logprob: -9.079007148742676
    4. 'y's' → logprob: -13.704007148742676
    5. ''' → logprob: -13.954007148742676
    6. ' y' → logprob: -14.079007148742676
    7. '	y' → logprob: -15.704007148742676
    8. '’y' → logprob: -16.07900619506836
    9. ')y' → logprob: -17.82900619506836
    10. '"' → logprob: -18.95400619506836

Token 763: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10021734237670898
    2. 'and' → logprob: -2.350217342376709
    3. 's' → logprob: -12.100217819213867
    4. ']' → logprob: -13.225217819213867
    5. ''' → logprob: -14.100217819213867
    6. '[' → logprob: -14.350217819213867
    7. ' ' → logprob: -14.725217819213867
    8. '```' → logprob: -15.100217819213867
    9. '`' → logprob: -15.225217819213867
    10. '[i' → logprob: -15.475217819213867

Token 764: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029750952497124672
    2. 'and' → logprob: -3.5297510623931885
    3. '<|end|>' → logprob: -15.52975082397461
    4. ' ' → logprob: -15.65475082397461
    5. '	and' → logprob: -18.02975082397461
    6. ':' → logprob: -18.65475082397461
    7. '```' → logprob: -18.65475082397461
    8. '<|end|>' → logprob: -18.90475082397461
    9. '[' → logprob: -19.27975082397461
    10. ' ' → logprob: -19.40475082397461

Token 765: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4740792512893677
    2. 's' → logprob: -0.9740792512893677
    3. '{s' → logprob: -13.599079132080078
    4. '<|end|>' → logprob: -14.099079132080078
    5. ' ' → logprob: -15.724079132080078
    6. '	s' → logprob: -17.349079132080078
    7. '_s' → logprob: -17.474079132080078
    8. '(s' → logprob: -17.974079132080078
    9. '<|end|>' → logprob: -18.224079132080078
    10. '{' → logprob: -18.474079132080078

Token 766: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001085497424355708
    2. '[' → logprob: -9.75010871887207
    3. 'i' → logprob: -10.00010871887207
    4. '[
' → logprob: -12.62510871887207
    5. '+' → logprob: -14.12510871887207
    6. 's' → logprob: -15.87510871887207
    7. '{i' → logprob: -16.62510871887207
    8. '[s' → logprob: -16.87510871887207
    9. '<|end|>' → logprob: -17.00010871887207
    10. ' [' → logprob: -17.00010871887207

Token 767: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9361264946837764e-07
    2. ' +' → logprob: -16.25
    3. '+
' → logprob: -17.25
    4. '+i' → logprob: -18.5
    5. '2' → logprob: -18.75
    6. '＋' → logprob: -19.0
    7. '[' → logprob: -19.0
    8. ']+' → logprob: -20.5
    9. '```' → logprob: -20.75
    10. 'i' → logprob: -20.875

Token 768: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '+' → logprob: -15.625
    3. ' ' → logprob: -16.625
    4. '1' → logprob: -17.25
    5. '
' → logprob: -17.375
    6. '```' → logprob: -18.75
    7. '   ' → logprob: -19.5
    8. '２' → logprob: -19.5625
    9. '۲' → logprob: -19.8125
    10. '  ' → logprob: -20.5625

Token 769: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4481757581233978
    2. 'in' → logprob: -1.4481757879257202
    3. ']' → logprob: -2.0731756687164307
    4. ')' → logprob: -8.698175430297852
    5. '']' → logprob: -9.823175430297852
    6. '}' → logprob: -9.948175430297852
    7. '<|end|>' → logprob: -9.948175430297852
    8. 'In' → logprob: -10.823175430297852
    9. ' ' → logprob: -10.823175430297852
    10. ''' → logprob: -11.573175430297852

Token 770: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03804975748062134
    2. 'in' → logprob: -3.2880496978759766
    3. '<|end|>' → logprob: -12.538049697875977
    4. ' ' → logprob: -12.913049697875977
    5. ' ' → logprob: -13.913049697875977
    6. ')' → logprob: -15.163049697875977
    7. '	in' → logprob: -15.288049697875977
    8. 'In' → logprob: -15.413049697875977
    9. 'n' → logprob: -16.538049697875977
    10. 's' → logprob: -16.663049697875977

Token 771: ' {'' (ID: 11881)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.00038777425652369857
    2. ' {'' → logprob: -7.875387668609619
    3. '{"' → logprob: -12.500388145446777
    4. 'V' → logprob: -13.500388145446777
    5. ' V' → logprob: -13.875388145446777
    6. '{' → logprob: -13.875388145446777
    7. '{
' → logprob: -15.250388145446777
    8. '({'' → logprob: -15.750388145446777
    9. ' ' → logprob: -16.50038719177246
    10. ''a' → logprob: -17.00038719177246

Token 772: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0003930192324332893
    2. ''a' → logprob: -7.875392913818359
    3. '{'' → logprob: -11.50039291381836
    4. ''' → logprob: -13.50039291381836
    5. '{' → logprob: -14.62539291381836
    6. ' a' → logprob: -15.00039291381836
    7. '```' → logprob: -15.37539291381836
    8. '`' → logprob: -16.00039291381836
    9. '{
' → logprob: -16.37539291381836
    10. '['' → logprob: -17.00039291381836

Token 773: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.3027554452419281
    2. ''u' → logprob: -2.427755355834961
    3. ','' → logprob: -2.552755355834961
    4. ''a' → logprob: -2.802755355834961
    5. ''' → logprob: -4.677755355834961
    6. '',' → logprob: -4.802755355834961
    7. ',' → logprob: -4.802755355834961
    8. 'u' → logprob: -5.302755355834961
    9. ',u' → logprob: -6.552755355834961
    10. '{'' → logprob: -6.927755355834961

Token 774: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0007305434555746615
    2. 'a' → logprob: -7.625730514526367
    3. ''u' → logprob: -8.375730514526367
    4. ' u' → logprob: -12.000730514526367
    5. ''' → logprob: -12.875730514526367
    6. '	u' → logprob: -14.375730514526367
    7. 'o' → logprob: -14.375730514526367
    8. '
' → logprob: -14.625730514526367
    9. ''a' → logprob: -14.750730514526367
    10. ' ' → logprob: -15.125730514526367

Token 775: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0017176620895043015
    2. ''o' → logprob: -7.126717567443848
    3. ','' → logprob: -7.126717567443848
    4. '',' → logprob: -9.376717567443848
    5. ',o' → logprob: -11.751717567443848
    6. '{'' → logprob: -12.126717567443848
    7. 'o' → logprob: -12.751717567443848
    8. ''' → logprob: -12.751717567443848
    9. '{o' → logprob: -12.876717567443848
    10. ',' → logprob: -13.626717567443848

Token 776: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0013309523928910494
    2. ''o' → logprob: -6.626330852508545
    3. '{o' → logprob: -12.626331329345703
    4. '{'' → logprob: -14.126331329345703
    5. '	o' → logprob: -14.501331329345703
    6. ' o' → logprob: -15.501331329345703
    7. ''' → logprob: -16.251331329345703
    8. 'о' → logprob: -16.626331329345703
    9. '$o' → logprob: -17.001331329345703
    10. '```' → logprob: -17.126331329345703

Token 777: ''}' (ID: 17352)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.13352841138839722
    2. ''}' → logprob: -2.508528470993042
    3. '}:' → logprob: -3.133528470993042
    4. '"}' → logprob: -11.008528709411621
    5. '':' → logprob: -11.508528709411621
    6. ':' → logprob: -12.758528709411621
    7. '       ' → logprob: -12.883528709411621
    8. '```' → logprob: -13.133528709411621
    9. '`}' → logprob: -13.258528709411621
    10. ' }' → logprob: -13.633528709411621

Token 778: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.057526301592588425
    2. ':
' → logprob: -2.9325263500213623
    3. '):' → logprob: -6.432526111602783
    4. '           ' → logprob: -7.182526111602783
    5. '):
' → logprob: -8.557526588439941
    6. '       ' → logprob: -10.307526588439941
    7. ']:' → logprob: -11.557526588439941
    8. '   ' → logprob: -11.807526588439941
    9. '=' → logprob: -12.057526588439941
    10. ' and' → logprob: -12.307526588439941

Token 779: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14177066087722778
    2. '       ' → logprob: -2.266770601272583
    3. ':' → logprob: -3.641770601272583
    4. '   ' → logprob: -7.016770839691162
    5. 'm' → logprob: -7.266770839691162
    6. ':
' → logprob: -8.016770362854004
    7. ' mor' → logprob: -8.891770362854004
    8. '```' → logprob: -10.016770362854004
    9. '):' → logprob: -10.266770362854004
    10. '               ' → logprob: -10.516770362854004

Token 780: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10911825299263
    2. '           ' → logprob: -2.3591182231903076
    3. ' mor' → logprob: -4.734118461608887
    4. 'mor' (adapté à ' mor') → logprob: -9.734118461608887
    5. '       ' → logprob: -12.109118461608887
    6. '   ' → logprob: -12.234118461608887
    7. '	m' → logprob: -12.859118461608887
    8. '```' → logprob: -13.109118461608887
    9. '               ' → logprob: -13.359118461608887
    10. ' m' → logprob: -13.484118461608887

Token 781: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -9.13388703338569e-06
    2. 'oras' → logprob: -12.250009536743164
    3. '   ' → logprob: -13.000009536743164
    4. ' as' → logprob: -14.125009536743164
    5. '           ' → logprob: -14.375009536743164
    6. 'ras' → logprob: -16.000009536743164
    7. '       ' → logprob: -16.250009536743164
    8. '            ' → logprob: -16.375009536743164
    9. 'asas' → logprob: -16.500009536743164
    10. 'tas' → logprob: -17.000009536743164

Token 782: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00042447797022759914
    2. '.' → logprob: -8.0004243850708
    3. 'append' → logprob: -9.7504243850708
    4. '.extend' → logprob: -11.1254243850708
    5. '.app' → logprob: -11.8754243850708
    6. '.ap' → logprob: -12.6254243850708
    7. '_append' → logprob: -12.6254243850708
    8. ' .' → logprob: -14.2504243850708
    9. '.Append' → logprob: -14.8754243850708
    10. '.setdefault' → logprob: -14.8754243850708

Token 783: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2015431523323059
    2. '(s' → logprob: -1.7015430927276611
    3. ' s' → logprob: -8.951542854309082
    4. '(' → logprob: -14.951542854309082
    5. '(
' → logprob: -17.8265438079834
    6. '{s' → logprob: -17.9515438079834
    7. ' (' → logprob: -18.4515438079834
    8. '	s' → logprob: -19.0765438079834
    9. '```' → logprob: -19.3265438079834
    10. 'c' → logprob: -19.3265438079834

Token 784: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -14.625000953674316
    3. '[' → logprob: -16.625
    4. '[
' → logprob: -18.0
    5. '```' → logprob: -18.375
    6. ')' → logprob: -19.625
    7. '{i' → logprob: -20.125
    8. '[s' → logprob: -20.75
    9. '(i' → logprob: -21.25
    10. ']' → logprob: -21.625

Token 785: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4372718632221222
    2. ']+' → logprob: -1.1872718334197998
    3. '+i' → logprob: -3.1872718334198
    4. '+
' → logprob: -5.687272071838379
    5. ']' → logprob: -6.562272071838379
    6. ' +' → logprob: -6.687272071838379
    7. '+s' → logprob: -6.937272071838379
    8. ')+' → logprob: -7.812272071838379
    9. '+y' → logprob: -9.062272071838379
    10. 's' → logprob: -9.687272071838379

Token 786: ' +' (ID: 659)
  Prédit: '+s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+s' → logprob: -0.03953615948557854
    2. '+' → logprob: -3.539536237716675
    3. '+y' → logprob: -5.289535999298096
    4. '+i' → logprob: -5.789535999298096
    5. ' +' → logprob: -6.664535999298096
    6. '+
' → logprob: -8.289536476135254
    7. 's' → logprob: -9.914536476135254
    8. ')+' → logprob: -11.414536476135254
    9. '+'' → logprob: -11.539536476135254
    10. '+j' → logprob: -11.789536476135254

Token 787: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5708339810371399
    2. 'y' → logprob: -1.9458339214324951
    3. ''y' → logprob: -1.9458339214324951
    4. ''s' → logprob: -2.195833921432495
    5. '"' → logprob: -4.195834159851074
    6. ''' → logprob: -5.195834159851074
    7. 'ys' → logprob: -5.195834159851074
    8. ' s' → logprob: -5.695834159851074
    9. '<|end|>' → logprob: -5.695834159851074
    10. '‘y' → logprob: -6.195834159851074

Token 788: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03719775378704071
    2. 'y' → logprob: -3.9121978282928467
    3. '[i' → logprob: -4.287197589874268
    4. '1' → logprob: -6.787197589874268
    5. '[y' → logprob: -7.287197589874268
    6. ''y' → logprob: -7.537197589874268
    7. '+' → logprob: -8.787198066711426
    8. '['' → logprob: -9.287198066711426
    9. '[
' → logprob: -9.787198066711426
    10. ''[' → logprob: -10.537198066711426

Token 789: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04122846573591232
    2. '1' → logprob: -3.7912285327911377
    3. ''y' → logprob: -4.916228294372559
    4. 'y' → logprob: -5.041228294372559
    5. '+y' → logprob: -6.166228294372559
    6. '[' → logprob: -6.791228294372559
    7. '+'' → logprob: -8.166228294372559
    8. ''' → logprob: -8.541228294372559
    9. '<|end|>' → logprob: -9.416228294372559
    10. '+
' → logprob: -9.541228294372559

Token 790: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.869639476761222e-05
    2. '2' → logprob: -10.250039100646973
    3. 'y' → logprob: -13.000039100646973
    4. '[' → logprob: -14.750039100646973
    5. '+' → logprob: -15.750039100646973
    6. ' ' → logprob: -16.000038146972656
    7. ''y' → logprob: -16.375038146972656
    8. '0' → logprob: -17.250038146972656
    9. 'token' → logprob: -17.250038146972656
    10. '```' → logprob: -17.562538146972656

Token 791: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018754517659544945
    2. '+s' → logprob: -4.268754482269287
    3. ' +' → logprob: -5.393754482269287
    4. 's' → logprob: -10.393754959106445
    5. '+
' → logprob: -13.768754959106445
    6. '+i' → logprob: -14.018754959106445
    7. '+c' → logprob: -14.018754959106445
    8. '<|end|>' → logprob: -14.643754959106445
    9. '+p' → logprob: -15.143754959106445
    10. '+t' → logprob: -15.268754959106445

Token 792: ' +' (ID: 659)
  Prédit: '+s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+s' → logprob: -0.07061859220266342
    2. 's' → logprob: -2.8206186294555664
    3. '+' → logprob: -4.820618629455566
    4. ' +' → logprob: -7.570618629455566
    5. '<|end|>' → logprob: -11.070618629455566
    6. ' s' → logprob: -11.195618629455566
    7. '+
' → logprob: -12.695618629455566
    8. '{s' → logprob: -13.445618629455566
    9. '`s' → logprob: -15.195618629455566
    10. '+[' → logprob: -15.195618629455566

Token 793: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00023071514442563057
    2. ' s' → logprob: -8.37523078918457
    3. '<|end|>' → logprob: -15.87523078918457
    4. '(s' → logprob: -19.00023078918457
    5. '{s' → logprob: -19.12523078918457
    6. ''s' → logprob: -19.25023078918457
    7. '`s' → logprob: -19.37523078918457
    8. '```' → logprob: -19.50023078918457
    9. ' ' → logprob: -19.75023078918457
    10. '
' → logprob: -20.87523078918457

Token 794: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5763695240020752
    2. '[i' → logprob: -0.8263695240020752
    3. 'i' → logprob: -8.201369285583496
    4. '2' → logprob: -10.076369285583496
    5. 's' → logprob: -10.201369285583496
    6. '['' → logprob: -10.576369285583496
    7. ']' → logprob: -11.576369285583496
    8. '[
' → logprob: -11.951369285583496
    9. '[u' → logprob: -12.076369285583496
    10. 'a' → logprob: -12.201369285583496

Token 795: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.26359298825263977
    2. '[' → logprob: -2.0135929584503174
    3. '2' → logprob: -2.3885929584503174
    4. ']' → logprob: -5.1385931968688965
    5. '<|end|>' → logprob: -8.013592720031738
    6. '<|end|>' → logprob: -10.388592720031738
    7. '][' → logprob: -10.888592720031738
    8. ' +' → logprob: -11.013592720031738
    9. '```' → logprob: -11.013592720031738
    10. '[
' → logprob: -11.138592720031738

Token 796: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '[' → logprob: -18.375
    4. '```' → logprob: -18.375
    5. '
' → logprob: -19.0
    6. '۲' → logprob: -19.625
    7. '...' → logprob: -20.125
    8. '1' → logprob: -20.5
    9. '{' → logprob: -20.625
    10. ''' → logprob: -20.625

Token 797: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47888246178627014
    2. ')
' → logprob: -0.9788824319839478
    3. '')
' → logprob: -5.978882312774658
    4. '')' → logprob: -6.228882312774658
    5. '           ' → logprob: -9.103882789611816
    6. '")' → logprob: -9.603882789611816
    7. ')
' → logprob: -10.353882789611816
    8. '")
' → logprob: -10.603882789611816
    9. '       ' → logprob: -11.228882789611816
    10. ']' → logprob: -11.728882789611816

Token 798: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001207495923154056
    2. 'i' → logprob: -8.25120735168457
    3. '       ' → logprob: -8.87620735168457
    4. ')' → logprob: -8.87620735168457
    5. '[i' → logprob: -8.87620735168457
    6. '<|end|>' → logprob: -9.37620735168457
    7. '   ' → logprob: -9.50120735168457
    8. '```' → logprob: -9.62620735168457
    9. '               ' → logprob: -10.12620735168457
    10. '
' → logprob: -10.37620735168457

Token 799: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2534436881542206
    2. 'i' (adapté à ' i') → logprob: -1.503443717956543
    3. ' i' → logprob: -6.628443717956543
    4. '   ' → logprob: -9.378443717956543
    5. '
' → logprob: -10.003443717956543
    6. ' ' → logprob: -11.753443717956543
    7. '[i' → logprob: -12.003443717956543
    8. '               ' → logprob: -12.003443717956543
    9. ',i' → logprob: -12.128443717956543
    10. '		' → logprob: -12.253443717956543

Token 800: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.035476863384246826
    2. '+' → logprob: -3.7854769229888916
    3. ' +=' → logprob: -4.4104766845703125
    4. ' +' → logprob: -12.035476684570312
    5. '=' → logprob: -14.785476684570312
    6. ']+=' → logprob: -14.910476684570312
    7. '+
' → logprob: -14.910476684570312
    8. '+="' → logprob: -15.910476684570312
    9. '```' → logprob: -16.035476684570312
    10. '+='' → logprob: -16.035476684570312

Token 801: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -19.25
    4. '۳' → logprob: -19.625
    5. '   ' → logprob: -20.625
    6. '３' → logprob: -20.625
    7. '৩' → logprob: -21.25
    8. '३' → logprob: -21.375
    9. '٣' → logprob: -21.5625
    10. '`' → logprob: -21.875

Token 802: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '```' → logprob: -19.75
    4. '۳' → logprob: -20.25
    5. '৩' → logprob: -21.125
    6. '३' → logprob: -21.125
    7. '３' → logprob: -21.5
    8. '٣' → logprob: -22.0
    9. '   ' → logprob: -22.5
    10. '`' → logprob: -22.9375

Token 803: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0945071205496788
    2. '       ' → logprob: -2.5945072174072266
    3. '<|end|>' → logprob: -4.219507217407227
    4. '               ' → logprob: -8.219507217407227
    5. '<|end|>' → logprob: -8.469507217407227
    6. '```' → logprob: -9.344507217407227
    7. '   ' → logprob: -9.844507217407227
    8. '	       ' → logprob: -10.469507217407227
    9. 'continue' → logprob: -10.969507217407227
    10. '		' → logprob: -10.969507217407227

Token 804: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0070808446034789085
    2. '           ' → logprob: -5.257081031799316
    3. '<|end|>' → logprob: -6.632081031799316
    4. 'elif' → logprob: -8.132081031799316
    5. '```' → logprob: -9.632081031799316
    6. '<|end|>' → logprob: -9.882081031799316
    7. '   ' → logprob: -10.132081031799316
    8. ' elif' → logprob: -10.632081031799316
    9. '	elif' → logprob: -11.632081031799316
    10. ')' → logprob: -11.882081031799316

Token 805: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005727201700210571
    2. '       ' → logprob: -5.505727291107178
    3. ' continue' → logprob: -7.005727291107178
    4. 'continue' (adapté à ' continue') → logprob: -7.255727291107178
    5. '<|end|>' → logprob: -12.00572681427002
    6. '               ' → logprob: -12.13072681427002
    7. '   ' → logprob: -12.13072681427002
    8. ' ' → logprob: -12.63072681427002
    9. '	continue' → logprob: -12.63072681427002
    10. 'contin' → logprob: -12.75572681427002

Token 806: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014334988372866064
    2. '<|end|>' → logprob: -10.125143051147461
    3. '```' → logprob: -10.500143051147461
    4. '#' → logprob: -10.750143051147461
    5. '
' → logprob: -10.875143051147461
    6. 'elif' → logprob: -11.125143051147461
    7. '        
' → logprob: -11.250143051147461
    8. '   ' → logprob: -12.500143051147461
    9. '<|end|>' → logprob: -13.000143051147461
    10. ')' → logprob: -15.625143051147461

Token 807: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009446957265026867
    2. '```' → logprob: -7.3759446144104
    3. '<|end|>' → logprob: -8.250945091247559
    4. '#' → logprob: -10.125945091247559
    5. '   ' → logprob: -12.125945091247559
    6. '<|end|>' → logprob: -12.625945091247559
    7. 'elif' → logprob: -12.875945091247559
    8. '        
' → logprob: -13.125945091247559
    9. '...' → logprob: -13.875945091247559
    10. '``' → logprob: -14.250945091247559

Token 808: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016690272837877274
    2. '```' → logprob: -4.891690254211426
    3. 'elif' → logprob: -5.141690254211426
    4. '#' (adapté à ' #') → logprob: -6.016690254211426
    5. '<|end|>' → logprob: -7.766690254211426
    6. '   ' → logprob: -9.266690254211426
    7. 'if' → logprob: -9.516690254211426
    8. '        
' → logprob: -10.391690254211426
    9. '[' → logprob: -10.766690254211426
    10. '<|end|>' → logprob: -10.766690254211426

Token 809: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009544872678816319
    2. '#' → logprob: -4.759544849395752
    3. 'elif' → logprob: -7.134544849395752
    4. '       ' → logprob: -9.63454532623291
    5. ' if' → logprob: -10.25954532623291
    6. '   ' → logprob: -11.00954532623291
    7. '```' → logprob: -12.25954532623291
    8. 'If' → logprob: -12.50954532623291
    9. '2' → logprob: -12.50954532623291
    10. '
' → logprob: -13.88454532623291

Token 810: '2' (ID: 17)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0012970196548849344
    2. 'elif' → logprob: -6.7512969970703125
    3. '2' → logprob: -9.376296997070312
    4. '1' → logprob: -11.126296997070312
    5. '#' → logprob: -11.126296997070312
    6. ' if' → logprob: -11.751296997070312
    7. 'i' → logprob: -13.251296997070312
    8. '
' → logprob: -13.876296997070312
    9. '```' → logprob: -14.126296997070312
    10. 'If' → logprob: -14.751296997070312

Token 811: '-char' (ID: 127189)
  Prédit: '-char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-char' → logprob: -0.09438682347536087
    2. 'char' → logprob: -3.4693868160247803
    3. 'if' → logprob: -4.344387054443359
    4. '<char' → logprob: -4.594387054443359
    5. ' if' → logprob: -4.719387054443359
    6. '_char' → logprob: -4.844387054443359
    7. '```' → logprob: -5.469387054443359
    8. '+' → logprob: -5.469387054443359
    9. 'elif' → logprob: -5.594387054443359
    10. '-' → logprob: -6.344387054443359

Token 812: ' mora' (ID: 47294)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4671904444694519
    2. 'if' → logprob: -1.2171905040740967
    3. 'elif' → logprob: -3.7171905040740967
    4. ' mora' → logprob: -3.8421905040740967
    5. 'm' → logprob: -4.217190265655518
    6. ' mor' → logprob: -4.342190265655518
    7. 'mor' → logprob: -6.717190265655518
    8. ' elif' → logprob: -7.217190265655518
    9. ' Mora' → logprob: -7.467190265655518
    10. '       ' → logprob: -8.467190742492676

Token 813: ' conson' (ID: 127767)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5488715171813965
    2. '<|end|>' → logprob: -1.1738715171813965
    3. ' if' → logprob: -2.4238715171813965
    4. '<|end|>' → logprob: -4.4238715171813965
    5. 'if' → logprob: -5.2988715171813965
    6. '```' → logprob: -6.5488715171813965
    7. '        ' → logprob: -6.7988715171813965
    8. '   ' → logprob: -7.0488715171813965
    9. '           ' → logprob: -7.0488715171813965
    10. ' elif' → logprob: -7.4238715171813965

Token 814: 'ant' (ID: 493)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.063146948814392
    2. 's' → logprob: -1.438146948814392
    3. '+' → logprob: -2.4381470680236816
    4. 'and' → logprob: -2.6881470680236816
    5. '<|end|>' → logprob: -2.8131470680236816
    6. ')' → logprob: -3.4381470680236816
    7. 'ants' → logprob: -3.6881470680236816
    8. 'onts' → logprob: -3.9381470680236816
    9. 'ont' → logprob: -4.188147068023682
    10. 'ts' → logprob: -4.313147068023682

Token 815: ' +' (ID: 659)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.11623408645391464
    2. 'and' → logprob: -2.866234064102173
    3. '+' → logprob: -3.741234064102173
    4. ' +' → logprob: -4.366234302520752
    5. '<|end|>' → logprob: -4.991234302520752
    6. 'if' → logprob: -5.991234302520752
    7. ' if' → logprob: -6.116234302520752
    8. '       ' → logprob: -6.616234302520752
    9. ' in' → logprob: -7.241234302520752
    10. ')' → logprob: -7.741234302520752

Token 816: ' vowel' (ID: 165542)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4405805170536041
    2. 's' → logprob: -1.4405804872512817
    3. 'V' → logprob: -2.3155806064605713
    4. ' vowels' → logprob: -3.9405806064605713
    5. ' vowel' → logprob: -7.440580368041992
    6. ' V' → logprob: -7.690580368041992
    7. ' s' → logprob: -8.940580368041992
    8. '<|end|>' → logprob: -9.440580368041992
    9. ' ' → logprob: -9.940580368041992
    10. ' v' → logprob: -10.940580368041992

Token 817: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.246526837348938
    2. ' if' → logprob: -1.371526837348938
    3. '       ' → logprob: -1.746526837348938
    4. '<|end|>' → logprob: -2.1215267181396484
    5. 'if' → logprob: -2.6215267181396484
    6. '           ' → logprob: -4.371526718139648
    7. '<|end|>' → logprob: -4.371526718139648
    8. '[' → logprob: -4.371526718139648
    9. '   ' → logprob: -4.496526718139648
    10. ' and' → logprob: -4.621526718139648

Token 818: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005496950470842421
    2. '<|end|>' → logprob: -8.25054931640625
    3. ' if' → logprob: -8.87554931640625
    4. 'if' → logprob: -9.87554931640625
    5. '   ' → logprob: -10.12554931640625
    6. 'elif' → logprob: -11.00054931640625
    7. '<|end|>' → logprob: -11.37554931640625
    8. ',' → logprob: -12.00054931640625
    9. '```' → logprob: -12.62554931640625
    10. ':' → logprob: -12.75054931640625

Token 819: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06333303451538086
    2. 'if' (adapté à ' if') → logprob: -3.438333034515381
    3. 'elif' → logprob: -3.813333034515381
    4. ' if' → logprob: -5.063333034515381
    5. '<|end|>' → logprob: -7.813333034515381
    6. ' elif' → logprob: -8.313333511352539
    7. '   ' → logprob: -9.438333511352539
    8. '           ' → logprob: -10.438333511352539
    9. '```' → logprob: -10.438333511352539
    10. ' ' → logprob: -10.938333511352539

Token 820: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.016037767753005028
    2. 'i' → logprob: -4.141037940979004
    3. ' ' → logprob: -13.766037940979004
    4. '(i' → logprob: -13.891037940979004
    5. '   ' → logprob: -14.266037940979004
    6. '	i' → logprob: -15.016037940979004
    7. 's' → logprob: -15.891037940979004
    8. ' ' → logprob: -16.016036987304688
    9. ' s' → logprob: -16.266036987304688
    10. ' (' → logprob: -16.641036987304688

Token 821: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5451681974809617e-05
    2. ' +' → logprob: -11.125015258789062
    3. '+i' → logprob: -14.750015258789062
    4. '+
' → logprob: -15.625015258789062
    5. '+[' → logprob: -17.375015258789062
    6. '+=' → logprob: -17.375015258789062
    7. '＋' → logprob: -18.250015258789062
    8. '[' → logprob: -19.000015258789062
    9. '+k' → logprob: -21.000015258789062
    10. '+</' → logprob: -21.250015258789062

Token 822: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.375001907348633
    3. '2' → logprob: -14.875001907348633
    4. '```' → logprob: -17.125001907348633
    5. '[' → logprob: -17.625001907348633
    6. '+' → logprob: -18.000001907348633
    7. '...' → logprob: -18.250001907348633
    8. '{' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.500001907348633
    10. '>' → logprob: -18.562501907348633

Token 823: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0017064863350242376
    2. '<' → logprob: -6.376706600189209
    3. '<n' → logprob: -12.87670612335205
    4. '<len' → logprob: -14.25170612335205
    5. '[' → logprob: -15.75170612335205
    6. ' <
' → logprob: -15.87670612335205
    7. '+' → logprob: -16.251707077026367
    8. ' <=' → logprob: -16.251707077026367
    9. '<|end|>' → logprob: -16.376707077026367
    10. ' [' → logprob: -17.001707077026367

Token 824: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1002078503370285
    2. ' n' → logprob: -2.350207805633545
    3. '<|end|>' → logprob: -14.600208282470703
    4. '	n' → logprob: -15.225208282470703
    5. '[n' → logprob: -15.975208282470703
    6. 'len' → logprob: -15.975208282470703
    7. '```' → logprob: -16.475208282470703
    8. '(n' → logprob: -16.725208282470703
    9. 's' → logprob: -17.100208282470703
    10. '_n' → logprob: -17.225208282470703

Token 825: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006719871424138546
    2. 'and' → logprob: -5.006720066070557
    3. '<|end|>' → logprob: -12.381719589233398
    4. '	and' → logprob: -16.3817195892334
    5. '<|end|>' → logprob: -16.6317195892334
    6. ' ' → logprob: -17.1317195892334
    7. ' in' → logprob: -17.3817195892334
    8. ',' → logprob: -17.3817195892334
    9. ' &' → logprob: -17.5067195892334
    10. '       ' → logprob: -17.8817195892334

Token 826: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7856057286262512
    2. '           ' → logprob: -1.2856056690216064
    3. '       ' → logprob: -1.6606056690216064
    4. ':' → logprob: -3.5356056690216064
    5. ':
' → logprob: -3.9106056690216064
    6. ' if' → logprob: -4.0356059074401855
    7. '        ' → logprob: -6.0356059074401855
    8. '[' → logprob: -6.1606059074401855
    9. '<|end|>' → logprob: -6.9106059074401855
    10. '   ' → logprob: -7.1606059074401855

Token 827: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49765801429748535
    2. ' if' → logprob: -1.1226580142974854
    3. 'if' (adapté à ' if') → logprob: -2.7476580142974854
    4. '       ' → logprob: -6.622657775878906
    5. '               ' → logprob: -7.247657775878906
    6. '<|end|>' → logprob: -8.372657775878906
    7. '```' → logprob: -9.247657775878906
    8. '   ' → logprob: -9.997657775878906
    9. 'If' → logprob: -10.497657775878906
    10. ' ' → logprob: -11.122657775878906

Token 828: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6931484341621399
    2. ' s' → logprob: -0.6931484341621399
    3. '(s' → logprob: -14.443148612976074
    4. '	s' → logprob: -15.568148612976074
    5. '_s' → logprob: -16.193147659301758
    6. 'c' → logprob: -16.318147659301758
    7. '{s' → logprob: -16.693147659301758
    8. ' ' → logprob: -17.068147659301758
    9. ' ' → logprob: -17.318147659301758
    10. ' (' → logprob: -17.318147659301758

Token 829: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.75
    3. '[
' → logprob: -16.75
    4. 'i' → logprob: -16.75
    5. '```' → logprob: -18.5
    6. '(i' → logprob: -20.375
    7. '<|end|>' → logprob: -20.5
    8. ' [' → logprob: -20.5
    9. '[s' → logprob: -20.625
    10. '{i' → logprob: -20.875

Token 830: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5104257464408875
    2. ']' → logprob: -1.0104258060455322
    3. 'in' → logprob: -3.3854258060455322
    4. 's' → logprob: -7.010425567626953
    5. '<|end|>' → logprob: -7.760425567626953
    6. '[' → logprob: -8.385425567626953
    7. '[i' → logprob: -9.385425567626953
    8. 'In' → logprob: -10.260425567626953
    9. ' ]' → logprob: -10.260425567626953
    10. '<|end|>' → logprob: -11.010425567626953

Token 831: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0388244204223156
    2. 'in' → logprob: -3.2888243198394775
    3. '<|end|>' → logprob: -7.788824558258057
    4. '[' → logprob: -8.663824081420898
    5. 's' → logprob: -9.913824081420898
    6. ' ' → logprob: -10.038824081420898
    7. ')' → logprob: -10.038824081420898
    8. ']' → logprob: -10.913824081420898
    9. '<|end|>' → logprob: -11.538824081420898
    10. 'i' → logprob: -12.538824081420898

Token 832: ' CON' (ID: 5802)
  Prédit: 'CON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CON' → logprob: -0.0001234428636962548
    2. ' CON' → logprob: -9.000123023986816
    3. '(CON' → logprob: -19.125123977661133
    4. '_CON' → logprob: -19.250123977661133
    5. 'V' → logprob: -19.875123977661133
    6. 'CONT' → logprob: -20.375123977661133
    7. '.CON' → logprob: -21.125123977661133
    8. 'CO' → logprob: -21.750123977661133
    9. 'COM' → logprob: -21.875123977661133
    10. ' ' → logprob: -22.125123977661133

Token 833: 'SON' (ID: 4214)
  Prédit: 'SON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SON' → logprob: -0.03054569661617279
    2. 'ONS' → logprob: -4.030545711517334
    3. 'ON' → logprob: -4.530545711517334
    4. 'CON' → logprob: -6.905545711517334
    5. 'S' → logprob: -8.405545234680176
    6. '{' → logprob: -8.655545234680176
    7. '_CON' → logprob: -9.905545234680176
    8. 'ONSE' → logprob: -10.155545234680176
    9. 'OS' → logprob: -11.655545234680176
    10. '```' → logprob: -11.780545234680176

Token 834: 'ANTS' (ID: 96531)
  Prédit: 'ANTS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANTS' → logprob: -0.00016909420082811266
    2. 'ants' → logprob: -9.125168800354004
    3. 'TS' → logprob: -10.000168800354004
    4. '_' → logprob: -12.625168800354004
    5. 'ON' → logprob: -12.875168800354004
    6. 'ENTS' → logprob: -13.000168800354004
    7. 'S' → logprob: -13.125168800354004
    8. 'ISTS' → logprob: -13.125168800354004
    9. 'N' → logprob: -14.625168800354004
    10. '{' → logprob: -14.875168800354004

Token 835: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.020631344988942146
    2. 'and' → logprob: -3.8956313133239746
    3. '           ' → logprob: -10.145631790161133
    4. ' ' → logprob: -10.520631790161133
    5. '<|end|>' → logprob: -11.770631790161133
    6. '[' → logprob: -12.895631790161133
    7. ' &&' → logprob: -13.270631790161133
    8. '&&' → logprob: -13.395631790161133
    9. ')' → logprob: -13.520631790161133
    10. '            ' → logprob: -14.020631790161133

Token 836: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5759400725364685
    2. ' s' → logprob: -0.8259400725364685
    3. '{s' → logprob: -14.825940132141113
    4. '_s' → logprob: -16.700939178466797
    5. ' ' → logprob: -17.075939178466797
    6. '	s' → logprob: -17.200939178466797
    7. '(s' → logprob: -17.700939178466797
    8. '<|end|>' → logprob: -17.825939178466797
    9. 'V' → logprob: -17.950939178466797
    10. '[' → logprob: -18.200939178466797

Token 837: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2471589798224159e-05
    2. '[' → logprob: -11.750012397766113
    3. 'i' → logprob: -13.250012397766113
    4. '[user' → logprob: -13.375012397766113
    5. '[s' → logprob: -15.000012397766113
    6. ' [' → logprob: -15.000012397766113
    7. '[
' → logprob: -15.625012397766113
    8. 's' → logprob: -16.00001335144043
    9. 'user' → logprob: -17.12501335144043
    10. '[++' → logprob: -17.87501335144043

Token 838: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14356714487075806
    2. '[' → logprob: -2.0185670852661133
    3. '[i' → logprob: -7.268567085266113
    4. '+[' → logprob: -9.643567085266113
    5. 'i' → logprob: -9.893567085266113
    6. '+i' → logprob: -10.518567085266113
    7. '][' → logprob: -11.893567085266113
    8. ' +' → logprob: -12.018567085266113
    9. ']' → logprob: -12.143567085266113
    10. 's' → logprob: -12.268567085266113

Token 839: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.125000953674316
    3. 'V' → logprob: -15.625000953674316
    4. '+' → logprob: -15.750000953674316
    5. '-' → logprob: -17.375
    6. '```' → logprob: -17.75
    7. '[' → logprob: -18.5
    8. '[V' → logprob: -18.625
    9. '{' → logprob: -18.75
    10. '...' → logprob: -18.875

Token 840: ']' (ID: 60)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.9310169219970703
    2. ' in' → logprob: -0.9310169219970703
    3. ']' → logprob: -1.5560169219970703
    4. '[' → logprob: -8.05601692199707
    5. ')' → logprob: -9.43101692199707
    6. ' ' → logprob: -9.80601692199707
    7. 'In' → logprob: -9.93101692199707
    8. '<|end|>' → logprob: -10.05601692199707
    9. 's' → logprob: -10.18101692199707
    10. ' ]' → logprob: -10.55601692199707

Token 841: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6326706409454346
    2. 'in' → logprob: -0.7576706409454346
    3. '<|end|>' → logprob: -10.507670402526855
    4. ' ' → logprob: -11.257670402526855
    5. 'IN' → logprob: -12.132670402526855
    6. ' ' → logprob: -12.132670402526855
    7. ')' → logprob: -12.257670402526855
    8. 'In' → logprob: -12.257670402526855
    9. '[' → logprob: -12.757670402526855
    10. ' IN' → logprob: -13.257670402526855

Token 842: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.01815076172351837
    2. ' V' → logprob: -4.018150806427002
    3. '{'' → logprob: -15.018150329589844
    4. '	V' → logprob: -15.643150329589844
    5. '{' → logprob: -16.518150329589844
    6. 'VO' → logprob: -16.518150329589844
    7. 'VOC' → logprob: -16.518150329589844
    8. ' ' → logprob: -16.893150329589844
    9. ')V' → logprob: -17.518150329589844
    10. '<V' → logprob: -18.018150329589844

Token 843: 'OW' (ID: 5593)
  Prédit: 'OW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OW' → logprob: -0.0002574057725723833
    2. 'owels' → logprob: -8.37525749206543
    3. 'OWL' → logprob: -11.50025749206543
    4. 'O' → logprob: -12.12525749206543
    5. 'OV' → logprob: -12.25025749206543
    6. ' OW' → logprob: -12.37525749206543
    7. '_' → logprob: -14.37525749206543
    8. 'Ow' → logprob: -15.12525749206543
    9. '_O' → logprob: -15.25025749206543
    10. '{' → logprob: -15.37525749206543

Token 844: 'ELS' (ID: 88642)
  Prédit: 'ELS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ELS' → logprob: -0.005230206064879894
    2. 'OW' → logprob: -5.63023042678833
    3. 'W' → logprob: -7.88023042678833
    4. 'O' → logprob: -8.130229949951172
    5. '```' → logprob: -8.380229949951172
    6. 'S' → logprob: -8.880229949951172
    7. 'E' → logprob: -9.505229949951172
    8. '   ' → logprob: -9.880229949951172
    9. '[' → logprob: -10.005229949951172
    10. 'ALS' → logprob: -10.130229949951172

Token 845: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29622605443000793
    2. ':
' → logprob: -1.4212260246276855
    3. '               ' → logprob: -4.9212260246276855
    4. ' and' → logprob: -5.4212260246276855
    5. '           ' → logprob: -6.0462260246276855
    6. '{
' → logprob: -8.921226501464844
    7. '):
' → logprob: -9.171226501464844
    8. '       ' → logprob: -9.171226501464844
    9. 'and' → logprob: -9.296226501464844
    10. '<|end|>' → logprob: -9.421226501464844

Token 846: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7773112058639526
    2. ':' → logprob: -1.1523112058639526
    3. '               ' → logprob: -1.5273112058639526
    4. '           ' → logprob: -5.152311325073242
    5. '):
' → logprob: -7.777311325073242
    6. '[' → logprob: -8.652311325073242
    7. '{
' → logprob: -8.902311325073242
    8. ' and' → logprob: -9.027311325073242
    9. '```' → logprob: -9.277311325073242
    10. '):' → logprob: -9.402311325073242

Token 847: ' mor' (ID: 4658)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7498543858528137
    2. '               ' → logprob: -1.249854326248169
    3. 'm' → logprob: -1.749854326248169
    4. ' mor' → logprob: -2.749854326248169
    5. 'mor' (adapté à ' mor') → logprob: -6.749854564666748
    6. '            ' → logprob: -6.874854564666748
    7. ' ' → logprob: -8.62485408782959
    8. '   ' → logprob: -8.99985408782959
    9. '	m' → logprob: -9.12485408782959
    10. '              ' → logprob: -9.24985408782959

Token 848: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -2.951771421066951e-05
    2. 'oras' → logprob: -10.750029563903809
    3. '_as' → logprob: -12.875029563903809
    4. '   ' → logprob: -14.125029563903809
    5. ' as' → logprob: -14.250029563903809
    6. '.as' → logprob: -14.625029563903809
    7. '.append' → logprob: -14.625029563903809
    8. '(as' → logprob: -14.750029563903809
    9. 'ras' → logprob: -14.875029563903809
    10. 's' → logprob: -14.875029563903809

Token 849: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.319370302458992e-06
    2. '.' → logprob: -12.625005722045898
    3. '.ap' → logprob: -14.375005722045898
    4. 'append' → logprob: -14.625005722045898
    5. ' .' → logprob: -14.750005722045898
    6. '           ' → logprob: -15.375005722045898
    7. '.app' → logprob: -15.500005722045898
    8. '.extend' → logprob: -16.7500057220459
    9. '.Append' → logprob: -17.3750057220459
    10. '	append' → logprob: -18.0000057220459

Token 850: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4740808606147766
    2. '(s' → logprob: -0.9740808606147766
    3. ' s' → logprob: -12.474081039428711
    4. '(' → logprob: -16.72408103942871
    5. '{s' → logprob: -18.47408103942871
    6. '   ' → logprob: -18.97408103942871
    7. '(
' → logprob: -19.34908103942871
    8. ' (' → logprob: -19.47408103942871
    9. '	s' → logprob: -19.84908103942871
    10. '_s' → logprob: -20.09908103942871

Token 851: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.5120287066092715e-05
    2. '[' → logprob: -10.625035285949707
    3. 'i' → logprob: -11.500035285949707
    4. '[
' → logprob: -15.375035285949707
    5. '{i' → logprob: -16.12503433227539
    6. ' [' → logprob: -16.25003433227539
    7. '[s' → logprob: -16.87503433227539
    8. '```' → logprob: -17.12503433227539
    9. ' i' → logprob: -17.50003433227539
    10. '(i' → logprob: -17.75003433227539

Token 852: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002363040344789624
    2. '+s' → logprob: -6.502363204956055
    3. ' +' → logprob: -7.127363204956055
    4. '+i' → logprob: -10.502363204956055
    5. '+
' → logprob: -11.002363204956055
    6. ']+' → logprob: -12.252363204956055
    7. ')+' → logprob: -13.127363204956055
    8. 's' → logprob: -13.377363204956055
    9. '+'' → logprob: -13.877363204956055
    10. '+[' → logprob: -14.002363204956055

Token 853: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3156884014606476
    2. '+s' → logprob: -1.3156883716583252
    3. ' +' → logprob: -6.065688610076904
    4. '+
' → logprob: -9.690688133239746
    5. 's' → logprob: -10.565688133239746
    6. '+[' → logprob: -12.315688133239746
    7. '[s' → logprob: -12.940688133239746
    8. '+i' → logprob: -13.190688133239746
    9. '+p' → logprob: -13.315688133239746
    10. '[' → logprob: -13.690688133239746

Token 854: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009118211455643177
    2. ' s' → logprob: -7.000911712646484
    3. '<|end|>' → logprob: -16.000911712646484
    4. ' ' → logprob: -16.375911712646484
    5. ''' → logprob: -16.875911712646484
    6. ''s' → logprob: -17.875911712646484
    7. 'ss' → logprob: -19.125911712646484
    8. '_s' → logprob: -19.250911712646484
    9. '	s' → logprob: -19.250911712646484
    10. '{s' → logprob: -19.750911712646484

Token 855: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2274213433265686
    2. '[' → logprob: -1.6024212837219238
    3. 's' → logprob: -6.352421283721924
    4. 'i' → logprob: -8.977421760559082
    5. '1' → logprob: -9.477421760559082
    6. '+' → logprob: -10.977421760559082
    7. 'sys' → logprob: -11.852421760559082
    8. ''[' → logprob: -11.852421760559082
    9. '[s' → logprob: -12.602421760559082
    10. ' [' → logprob: -12.602421760559082

Token 856: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6753130555152893
    2. '1' → logprob: -0.8003130555152893
    3. '[' → logprob: -3.1753129959106445
    4. '<|end|>' → logprob: -12.050312995910645
    5. '+[' → logprob: -12.425312995910645
    6. ' +' → logprob: -12.550312995910645
    7. 's' → logprob: -12.800312995910645
    8. '```' → logprob: -13.300312995910645
    9. '<|end|>' → logprob: -13.300312995910645
    10. '#' → logprob: -13.425312995910645

Token 857: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '```' → logprob: -18.625
    4. '+' → logprob: -19.25
    5. '
' → logprob: -19.875
    6. '[' → logprob: -20.0
    7. '１' → logprob: -20.0
    8. '   ' → logprob: -20.125
    9. ']' → logprob: -20.875
    10. '0' → logprob: -21.625

Token 858: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0065648602321743965
    2. ')
' → logprob: -5.381565093994141
    3. '               ' → logprob: -7.131565093994141
    4. '])' → logprob: -7.756565093994141
    5. '')' → logprob: -8.00656509399414
    6. '           ' → logprob: -8.50656509399414
    7. '<|end|>' → logprob: -9.50656509399414
    8. '       ' → logprob: -10.75656509399414
    9. ')return' → logprob: -11.50656509399414
    10. '                   ' → logprob: -11.63156509399414

Token 859: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001584850688232109
    2. '<|end|>' → logprob: -9.625158309936523
    3. '           ' → logprob: -9.750158309936523
    4. '```' → logprob: -11.500158309936523
    5. '                   ' → logprob: -11.875158309936523
    6. '<|end|>' → logprob: -12.000158309936523
    7. '                
' → logprob: -12.500158309936523
    8. 'i' → logprob: -13.500158309936523
    9. '              ' → logprob: -13.625158309936523
    10. '  
' → logprob: -14.500158309936523

Token 860: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.2578997313976288
    2. '               ' → logprob: -1.5078997611999512
    3. ' i' → logprob: -5.132899761199951
    4. '           ' → logprob: -10.382899284362793
    5. '                   ' → logprob: -11.507899284362793
    6. '```' → logprob: -13.007899284362793
    7. ' ' → logprob: -13.257899284362793
    8. '                ' → logprob: -13.507899284362793
    9. '              ' → logprob: -13.632899284362793
    10. '
' → logprob: -13.882899284362793

Token 861: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4740966856479645
    2. ' +=' → logprob: -0.9740966558456421
    3. '+' → logprob: -10.974096298217773
    4. '=' → logprob: -13.849096298217773
    5. '           ' → logprob: -14.474096298217773
    6. ']+=' → logprob: -14.724096298217773
    7. ' ' → logprob: -16.349096298217773
    8. '            ' → logprob: -16.349096298217773
    9. '```' → logprob: -16.349096298217773
    10. ' +' → logprob: -16.349096298217773

Token 862: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.000015258789062
    4. '۲' → logprob: -19.500015258789062
    5. '           ' → logprob: -19.625015258789062
    6. '```' → logprob: -20.000015258789062
    7. '  ' → logprob: -20.250015258789062
    8. '２' → logprob: -20.437515258789062
    9. '
' → logprob: -20.625015258789062
    10. '       ' → logprob: -20.750015258789062

Token 863: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -19.250001907348633
    4. '۲' → logprob: -19.250001907348633
    5. '```' → logprob: -20.375001907348633
    6. '２' → logprob: -20.875001907348633
    7. '२' → logprob: -21.187501907348633
    8. '২' → logprob: -21.312501907348633
    9. '  ' → logprob: -22.000001907348633
    10. '٢' → logprob: -22.562501907348633

Token 864: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007294706883840263
    2. '           ' → logprob: -7.500729560852051
    3. '<|end|>' → logprob: -9.00072956085205
    4. 'continue' → logprob: -10.75072956085205
    5. '                   ' → logprob: -11.87572956085205
    6. '       ' → logprob: -12.37572956085205
    7. '              ' → logprob: -12.75072956085205
    8. ' continue' → logprob: -12.87572956085205
    9. '```' → logprob: -12.87572956085205
    10. '<|end|>' → logprob: -13.12572956085205

Token 865: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003702212357893586
    2. '           ' → logprob: -5.628702163696289
    3. 'continue' → logprob: -9.878702163696289
    4. '```' → logprob: -10.128702163696289
    5. '       ' → logprob: -12.378702163696289
    6. '                   ' → logprob: -13.128702163696289
    7. ' continue' → logprob: -13.753702163696289
    8. 'else' → logprob: -14.128702163696289
    9. '<|end|>' → logprob: -14.378702163696289
    10. '	       ' → logprob: -14.753702163696289

Token 866: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12301530689001083
    2. 'continue' (adapté à ' continue') → logprob: -2.6230154037475586
    3. ' continue' → logprob: -3.2480154037475586
    4. '           ' → logprob: -5.623015403747559
    5. '	continue' → logprob: -7.623015403747559
    6. '       ' → logprob: -9.748015403747559
    7. '_continue' → logprob: -9.998015403747559
    8. ' ' → logprob: -10.998015403747559
    9. 'contin' → logprob: -10.998015403747559
    10. '<|end|>' → logprob: -11.248015403747559

Token 867: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038279250264167786
    2. '       ' → logprob: -3.2882792949676514
    3. '
' → logprob: -9.16327953338623
    4. 'elif' → logprob: -9.41327953338623
    5. '            
' → logprob: -10.41327953338623
    6. '```' → logprob: -12.03827953338623
    7. '        
' → logprob: -12.16327953338623
    8. '   ' → logprob: -13.03827953338623
    9. '<|end|>' → logprob: -13.41327953338623
    10. '          ' → logprob: -13.53827953338623

Token 868: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03126475587487221
    2. '           ' → logprob: -3.5312647819519043
    3. 'elif' → logprob: -6.531264781951904
    4. '```' → logprob: -9.906264305114746
    5. ' elif' → logprob: -12.531264305114746
    6. 'if' → logprob: -13.906264305114746
    7. 'else' → logprob: -14.531264305114746
    8. '   ' → logprob: -14.781264305114746
    9. '
' → logprob: -16.156265258789062
    10. '	elif' → logprob: -17.031265258789062

Token 869: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029924504458904266
    2. 'elif' → logprob: -3.7799243927001953
    3. '           ' → logprob: -5.029924392700195
    4. ' elif' → logprob: -9.404924392700195
    5. '```' → logprob: -10.904924392700195
    6. 'if' → logprob: -11.154924392700195
    7. ' if' → logprob: -14.404924392700195
    8. 'else' → logprob: -14.654924392700195
    9. '	elif' → logprob: -14.779924392700195
    10. '   ' → logprob: -15.154924392700195

Token 870: ' long' (ID: 1701)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.08446584641933441
    2. '       ' → logprob: -2.584465742111206
    3. ' elif' → logprob: -5.834465980529785
    4. 'if' → logprob: -5.959465980529785
    5. '           ' → logprob: -10.709465980529785
    6. ' if' → logprob: -11.084465980529785
    7. 'else' → logprob: -11.709465980529785
    8. '```' → logprob: -12.459465980529785
    9. 's' → logprob: -13.084465980529785
    10. '   ' → logprob: -14.209465980529785

Token 871: ' vowels' (ID: 176245)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.7025730609893799
    2. ' elif' → logprob: -0.8275730609893799
    3. 's' → logprob: -4.077572822570801
    4. ' if' → logprob: -4.577572822570801
    5. ' vowels' → logprob: -4.702572822570801
    6. '_' → logprob: -4.702572822570801
    7. ' s' → logprob: -5.077572822570801
    8. 'v' → logprob: -5.702572822570801
    9. ' ' → logprob: -5.952572822570801
    10. ' vowel' → logprob: -6.452572822570801

Token 872: ' check' (ID: 2371)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05586117133498192
    2. 'elif' → logprob: -3.055861234664917
    3. ' elif' → logprob: -5.680860996246338
    4. '               ' → logprob: -6.555860996246338
    5. '       ' → logprob: -6.930860996246338
    6. ' if' → logprob: -7.305860996246338
    7. ' and' → logprob: -8.305861473083496
    8. '          ' → logprob: -8.930861473083496
    9. 'if' → logprob: -9.805861473083496
    10. '```' → logprob: -10.055861473083496

Token 873: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03271912410855293
    2. '       ' → logprob: -3.907719135284424
    3. 'elif' → logprob: -4.532719135284424
    4. ' elif' → logprob: -6.657719135284424
    5. '               ' → logprob: -10.407718658447266
    6. '```' → logprob: -11.282718658447266
    7. '          ' → logprob: -12.282718658447266
    8. '   ' → logprob: -12.907718658447266
    9. '        ' → logprob: -12.907718658447266
    10. '
' → logprob: -13.032718658447266

Token 874: ' vowel' (ID: 165542)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15748560428619385
    2. '       ' → logprob: -2.9074854850769043
    3. ' elif' → logprob: -3.4074854850769043
    4. 'elif' → logprob: -3.5324854850769043
    5. ' if' → logprob: -3.7824854850769043
    6. 'if' → logprob: -5.282485485076904
    7. '```' → logprob: -8.282485961914062
    8. '               ' → logprob: -8.532485961914062
    9. '        ' → logprob: -8.907485961914062
    10. '<|end|>' → logprob: -9.407485961914062

Token 875: ' followed' (ID: 12661)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 876: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.47512608766555786
    2. ' by' → logprob: -0.9751260876655579
    3. '           ' → logprob: -7.225126266479492
    4. '==' → logprob: -9.600126266479492
    5. '       ' → logprob: -9.725126266479492
    6. '```' → logprob: -10.725126266479492
    7. ' ' → logprob: -10.975126266479492
    8. '[' → logprob: -10.975126266479492
    9. '          ' → logprob: -10.975126266479492
    10. '[i' → logprob: -11.225126266479492

Token 877: ' same' (ID: 2684)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.47527241706848145
    2. 's' → logprob: -0.9752724170684814
    3. ' ' → logprob: -7.725272178649902
    4. ' same' → logprob: -8.225272178649902
    5. ''' → logprob: -8.350272178649902
    6. ' a' → logprob: -9.225272178649902
    7. ' '' → logprob: -10.100272178649902
    8. 'same' → logprob: -10.350272178649902
    9. ' ' → logprob: -10.850272178649902
    10. ''s' → logprob: -11.475272178649902

Token 878: ' vowel' (ID: 165542)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1290605515241623
    2. '[i' → logprob: -2.5040605068206787
    3. ' s' → logprob: -4.129060745239258
    4. '_' → logprob: -5.504060745239258
    5. ')' → logprob: -5.754060745239258
    6. '[s' → logprob: -6.004060745239258
    7. '[' → logprob: -6.129060745239258
    8. 'if' → logprob: -6.129060745239258
    9. ' ' → logprob: -6.629060745239258
    10. '==' → logprob: -6.754060745239258

Token 879: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020985469222068787
    2. '       ' → logprob: -4.1459856033325195
    3. '<|end|>' → logprob: -5.5209856033325195
    4. '<|end|>' → logprob: -7.5209856033325195
    5. '          ' → logprob: -8.89598560333252
    6. '		' → logprob: -10.02098560333252
    7. '        ' → logprob: -10.14598560333252
    8. '               ' → logprob: -10.39598560333252
    9. '            ' → logprob: -10.52098560333252
    10. ',' → logprob: -10.64598560333252

Token 880: 'a' (ID: 64)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10135720670223236
    2. ' if' → logprob: -2.4763572216033936
    3. '           ' → logprob: -4.7263569831848145
    4. ')' → logprob: -6.3513569831848145
    5. '<|end|>' → logprob: -7.3513569831848145
    6. '               ' → logprob: -7.6013569831848145
    7. 'If' → logprob: -8.601357460021973
    8. '       ' → logprob: -8.976357460021973
    9. 's' → logprob: -8.976357460021973
    10. '<|end|>' → logprob: -9.851357460021973

Token 881: ',i' (ID: 25032)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8959399461746216
    2. ')' → logprob: -1.0209399461746216
    3. '       ' → logprob: -2.645939826965332
    4. ' and' → logprob: -2.895939826965332
    5. '           ' → logprob: -3.770939826965332
    6. ']' → logprob: -4.145939826965332
    7. 'and' → logprob: -4.270939826965332
    8. '):' → logprob: -4.645939826965332
    9. '        ' → logprob: -5.270939826965332
    10. '               ' → logprob: -5.520939826965332

Token 882: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6425543427467346
    2. ')' → logprob: -1.2675542831420898
    3. ',u' → logprob: -3.26755428314209
    4. 'u' → logprob: -3.51755428314209
    5. '',' → logprob: -4.14255428314209
    6. '')' → logprob: -4.14255428314209
    7. '+' → logprob: -4.14255428314209
    8. ']' → logprob: -5.01755428314209
    9. ',i' → logprob: -5.01755428314209
    10. 'and' → logprob: -5.26755428314209

Token 883: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1913793534040451
    2. '               ' → logprob: -2.6913793087005615
    3. '):' → logprob: -3.1913793087005615
    4. ' and' → logprob: -3.6913793087005615
    5. ')' → logprob: -3.8163793087005615
    6. '           ' → logprob: -4.566379547119141
    7. 'and' → logprob: -5.941379547119141
    8. ',' → logprob: -6.941379547119141
    9. ' or' → logprob: -7.066379547119141
    10. ''):
' → logprob: -7.066379547119141

Token 884: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004215043969452381
    2. '               ' → logprob: -5.504215240478516
    3. '       ' → logprob: -10.254215240478516
    4. '```' → logprob: -10.379215240478516
    5. 'elif' → logprob: -10.504215240478516
    6. ' and' → logprob: -12.129215240478516
    7. ' if' → logprob: -12.129215240478516
    8. '                   ' → logprob: -12.254215240478516
    9. 'if' → logprob: -12.379215240478516
    10. '          ' → logprob: -12.629215240478516

Token 885: ' if' (ID: 538)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.7646101117134094
    2. '           ' → logprob: -0.8896101117134094
    3. '       ' → logprob: -2.1396100521087646
    4. ' elif' → logprob: -5.264610290527344
    5. 'if' (adapté à ' if') → logprob: -7.264610290527344
    6. '```' → logprob: -10.264610290527344
    7. ' if' → logprob: -10.764610290527344
    8. 'else' → logprob: -11.139610290527344
    9. '               ' → logprob: -11.639610290527344
    10. '	elif' → logprob: -12.389610290527344

Token 886: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.12879669666290283
    2. 's' → logprob: -2.1287965774536133
    3. ' i' → logprob: -6.878796577453613
    4. 'i' → logprob: -7.128796577453613
    5. '   ' → logprob: -11.253796577453613
    6. ' ' → logprob: -11.878796577453613
    7. 'c' → logprob: -12.003796577453613
    8. ' c' → logprob: -12.628796577453613
    9. '(s' → logprob: -13.378796577453613
    10. '	s' → logprob: -14.128796577453613

Token 887: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.526570384972729e-05
    2. 'i' → logprob: -9.875055313110352
    3. '+' → logprob: -13.375055313110352
    4. '[' → logprob: -13.500055313110352
    5. '+i' → logprob: -15.625055313110352
    6. '           ' → logprob: -15.875055313110352
    7. ' i' → logprob: -15.875055313110352
    8. '(i' → logprob: -16.12505531311035
    9. ' [' → logprob: -16.37505531311035
    10. '[
' → logprob: -16.87505531311035

Token 888: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00030972150852903724
    2. '[' → logprob: -8.125309944152832
    3. '][' → logprob: -12.750309944152832
    4. '[i' → logprob: -12.875309944152832
    5. '+[' → logprob: -12.875309944152832
    6. ' +' → logprob: -13.375309944152832
    7. ']' → logprob: -13.625309944152832
    8. '==' → logprob: -14.250309944152832
    9. '+
' → logprob: -14.375309944152832
    10. ']==' → logprob: -14.375309944152832

Token 889: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08180693536996841
    2. 'in' → logprob: -2.5818068981170654
    3. '+' → logprob: -6.5818071365356445
    4. ' ' → logprob: -7.3318071365356445
    5. ' ==' → logprob: -7.4568071365356445
    6. '==' → logprob: -8.456807136535645
    7. '[' → logprob: -10.081807136535645
    8. ' +' → logprob: -11.456807136535645
    9. ' [' → logprob: -12.081807136535645
    10. '[in' → logprob: -12.831807136535645

Token 890: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0002251125843031332
    2. ' V' → logprob: -8.500225067138672
    3. '{'' → logprob: -10.750225067138672
    4. '{' → logprob: -16.250225067138672
    5. ' {'' → logprob: -16.750225067138672
    6. '	V' → logprob: -18.250225067138672
    7. '{"' → logprob: -18.500225067138672
    8. ' ' → logprob: -18.500225067138672
    9. '['' → logprob: -19.375225067138672
    10. ''' → logprob: -19.375225067138672

Token 891: 'OW' (ID: 5593)
  Prédit: 'OW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OW' → logprob: -0.00011677479778882116
    2. 'owels' → logprob: -9.750116348266602
    3. 'OV' → logprob: -9.875116348266602
    4. ' OW' → logprob: -12.750116348266602
    5. 'OWL' → logprob: -13.250116348266602
    6. '{' → logprob: -14.125116348266602
    7. '{'' → logprob: -14.750116348266602
    8. 'O' → logprob: -15.250116348266602
    9. 'AW' → logprob: -15.750116348266602
    10. '['' → logprob: -15.750116348266602

Token 892: 'ELS' (ID: 88642)
  Prédit: 'ELS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ELS' → logprob: -0.00015550498210359365
    2. 'S' → logprob: -10.250155448913574
    3. 'OW' → logprob: -10.625155448913574
    4. 'E' → logprob: -10.625155448913574
    5. 'ALS' → logprob: -11.250155448913574
    6. '{'' → logprob: -11.375155448913574
    7. 'O' → logprob: -11.375155448913574
    8. '   ' → logprob: -11.750155448913574
    9. '```' → logprob: -12.125155448913574
    10. '[' → logprob: -12.625155448913574

Token 893: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04892899841070175
    2. 'and' → logprob: -3.04892897605896
    3. '           ' → logprob: -8.548929214477539
    4. '               ' → logprob: -8.923929214477539
    5. '            ' → logprob: -12.423929214477539
    6. '	and' → logprob: -12.423929214477539
    7. '              ' → logprob: -13.423929214477539
    8. '          ' → logprob: -13.798929214477539
    9. ' ' → logprob: -14.048929214477539
    10. '             ' → logprob: -14.173929214477539

Token 894: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6816076636314392
    2. ' and' → logprob: -0.8066076636314392
    3. '           ' → logprob: -3.806607723236084
    4. ':' → logprob: -4.181607723236084
    5. ':
' → logprob: -5.056607723236084
    6. 'and' → logprob: -5.931607723236084
    7. '            ' → logprob: -8.181607246398926
    8. '                ' → logprob: -8.931607246398926
    9. '[' → logprob: -9.056607246398926
    10. ' if' → logprob: -9.306607246398926

Token 895: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19266510009765625
    2. '               ' → logprob: -1.8176651000976562
    3. '                ' → logprob: -5.067665100097656
    4. 'if' (adapté à ' if') → logprob: -5.442665100097656
    5. '                   ' → logprob: -6.942665100097656
    6. ' ' → logprob: -7.192665100097656
    7. '           ' → logprob: -9.192665100097656
    8. ' 
' → logprob: -9.567665100097656
    9. ' ' → logprob: -9.692665100097656
    10. '            ' → logprob: -10.567665100097656

Token 896: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4314526915550232
    2. 's' → logprob: -1.056452751159668
    3. 'i' → logprob: -6.181452751159668
    4. ' i' → logprob: -7.306452751159668
    5. '   ' → logprob: -12.306452751159668
    6. ' ' → logprob: -13.306452751159668
    7. '(s' → logprob: -13.681452751159668
    8. '	s' → logprob: -14.431452751159668
    9. ' (' → logprob: -14.556452751159668
    10. ' ' → logprob: -15.056452751159668

Token 897: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.2994620242971e-06
    2. 'i' → logprob: -11.750008583068848
    3. '```' → logprob: -15.875008583068848
    4. '[' → logprob: -16.00000762939453
    5. '   ' → logprob: -16.12500762939453
    6. '{i' → logprob: -17.75000762939453
    7. '(i' → logprob: -18.00000762939453
    8. '           ' → logprob: -18.12500762939453
    9. '[s' → logprob: -18.37500762939453
    10. '       ' → logprob: -19.00000762939453

Token 898: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -9.805981972021982e-05
    2. '[' → logprob: -9.75009822845459
    3. '[i' → logprob: -10.37509822845459
    4. '+i' → logprob: -12.00009822845459
    5. ' +' → logprob: -13.87509822845459
    6. '+[' → logprob: -14.00009822845459
    7. 'Next' → logprob: -15.87509822845459
    8. '+
' → logprob: -16.125097274780273
    9. '==' → logprob: -16.125097274780273
    10. 'i' → logprob: -16.375097274780273

Token 899: ' in' (ID: 306)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009782671695575118
    2. '==' → logprob: -7.625978469848633
    3. '[' → logprob: -8.500978469848633
    4. '[i' → logprob: -8.875978469848633
    5. ' ==' → logprob: -9.000978469848633
    6. '+i' → logprob: -11.375978469848633
    7. ' +' → logprob: -11.625978469848633
    8. '+[' → logprob: -14.125978469848633
    9. 's' → logprob: -14.500978469848633
    10. ' ' → logprob: -14.750978469848633

Token 900: ' {'' (ID: 11881)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -1.4974866644479334e-05
    2. ' {'' → logprob: -12.375015258789062
    3. '{"' → logprob: -12.625015258789062
    4. ''a' → logprob: -12.875015258789062
    5. '['' → logprob: -13.625015258789062
    6. '('' → logprob: -13.750015258789062
    7. '{' → logprob: -14.250015258789062
    8. ''s' → logprob: -14.750015258789062
    9. '({'' → logprob: -14.750015258789062
    10. ''' → logprob: -14.875015258789062

Token 901: 'a' (ID: 64)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.36516982316970825
    2. 'a' → logprob: -1.6151697635650635
    3. '{'' → logprob: -2.2401697635650635
    4. ''' → logprob: -8.615169525146484
    5. ''i' → logprob: -8.740169525146484
    6. ''ai' → logprob: -8.865169525146484
    7. 'ai' → logprob: -9.865169525146484
    8. ''u' → logprob: -10.990169525146484
    9. ''s' → logprob: -11.240169525146484
    10. ' {'' → logprob: -11.490169525146484

Token 902: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.6007488369941711
    2. '','' → logprob: -0.8507488369941711
    3. ',' → logprob: -4.2257490158081055
    4. ','' → logprob: -4.8507490158081055
    5. ',i' → logprob: -6.9757490158081055
    6. ''i' → logprob: -8.100749015808105
    7. ''' → logprob: -8.100749015808105
    8. ' ,' → logprob: -8.975749015808105
    9. 'i' → logprob: -9.600749015808105
    10. ''}' → logprob: -9.725749015808105

Token 903: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0646156296133995
    2. ''i' → logprob: -2.8146157264709473
    3. 'a' → logprob: -6.189615726470947
    4. ''a' → logprob: -8.689615249633789
    5. ''u' → logprob: -8.689615249633789
    6. ''' → logprob: -9.564615249633789
    7. '{'' → logprob: -10.064615249633789
    8. ' ' → logprob: -10.439615249633789
    9. 'u' → logprob: -10.439615249633789
    10. ' '' → logprob: -10.814615249633789

Token 904: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.08170675486326218
    2. '',' → logprob: -2.5817067623138428
    3. 'u' → logprob: -6.331706523895264
    4. ''' → logprob: -7.706706523895264
    5. ''u' → logprob: -8.331707000732422
    6. ''}' → logprob: -9.081707000732422
    7. ' ','' → logprob: -9.456707000732422
    8. ','' → logprob: -10.081707000732422
    9. ' ',' → logprob: -10.331707000732422
    10. ',u' → logprob: -10.456707000732422

Token 905: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -4.215330409351736e-05
    2. ''u' → logprob: -10.125041961669922
    3. '	u' → logprob: -14.250041961669922
    4. ' u' → logprob: -14.750041961669922
    5. 'i' → logprob: -15.375041961669922
    6. ''' → logprob: -15.750041961669922
    7. 'a' → logprob: -16.250041961669922
    8. '   ' → logprob: -16.375041961669922
    9. 'う' → logprob: -16.500041961669922
    10. ' ' → logprob: -16.500041961669922

Token 906: ''}' (ID: 17352)
  Prédit: ''}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.1439192295074463
    2. '}' → logprob: -2.0189192295074463
    3. '               ' → logprob: -7.143918991088867
    4. '                   ' → logprob: -7.893918991088867
    5. '',' → logprob: -10.518918991088867
    6. '           ' → logprob: -10.893918991088867
    7. '"}' → logprob: -12.018918991088867
    8. ''' → logprob: -12.143918991088867
    9. ''}
' → logprob: -12.518918991088867
    10. '','' → logprob: -12.768918991088867

Token 907: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04339740797877312
    2. 'and' → logprob: -3.1683974266052246
    3. '               ' → logprob: -8.418396949768066
    4. '                   ' → logprob: -9.043396949768066
    5. '           ' → logprob: -10.168396949768066
    6. ':' → logprob: -12.543396949768066
    7. '                       ' → logprob: -12.793396949768066
    8. ' ' → logprob: -13.043396949768066
    9. '	and' → logprob: -13.043396949768066
    10. ':
' → logprob: -13.168396949768066

Token 908: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8609121441841125
    2. ' i' → logprob: -1.3609120845794678
    3. ' s' → logprob: -1.4859120845794678
    4. 's' → logprob: -2.3609120845794678
    5. ' ' → logprob: -9.985912322998047
    6. '   ' → logprob: -10.110912322998047
    7. ' (' → logprob: -10.110912322998047
    8. '(i' → logprob: -10.610912322998047
    9. '  ' → logprob: -12.735912322998047
    10. ' ' → logprob: -13.110912322998047

Token 909: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.019883928820490837
    2. 'i' → logprob: -4.01988410949707
    3. '+' → logprob: -6.51988410949707
    4. '+i' → logprob: -9.14488410949707
    5. '(i' → logprob: -9.51988410949707
    6. ' i' → logprob: -9.76988410949707
    7. '{i' → logprob: -12.14488410949707
    8. '   ' → logprob: -12.76988410949707
    9. ' +' → logprob: -13.01988410949707
    10. '           ' → logprob: -13.01988410949707

Token 910: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00011486753646750003
    2. '[' → logprob: -9.500114440917969
    3. '+i' → logprob: -11.125114440917969
    4. '[i' → logprob: -11.375114440917969
    5. ' +' → logprob: -11.500114440917969
    6. '+[' → logprob: -13.500114440917969
    7. 'i' → logprob: -13.875114440917969
    8. 'Next' → logprob: -14.875114440917969
    9. '+
' → logprob: -15.250114440917969
    10. '+s' → logprob: -16.75011444091797

Token 911: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.421908958349377e-05
    2. '+' → logprob: -9.62507438659668
    3. ' ' → logprob: -12.25007438659668
    4. '```' → logprob: -13.31257438659668
    5. '2' → logprob: -14.87507438659668
    6. '   ' → logprob: -15.00007438659668
    7. ' +' → logprob: -15.25007438659668
    8. '
' → logprob: -16.25007438659668
    9. '`' → logprob: -16.62507438659668
    10. '' → logprob: -17.18757438659668

Token 912: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11595705896615982
    2. '==' → logprob: -2.240957021713257
    3. '}' → logprob: -5.990957260131836
    4. ']==' → logprob: -7.865957260131836
    5. ']' → logprob: -9.240957260131836
    6. ')==' → logprob: -10.115957260131836
    7. ')' → logprob: -10.490957260131836
    8. ' ' → logprob: -11.115957260131836
    9. '```' → logprob: -11.365957260131836
    10. '']==' → logprob: -11.490957260131836

Token 913: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07891127467155457
    2. '==' → logprob: -2.578911304473877
    3. '=' → logprob: -10.953910827636719
    4. ' ' → logprob: -13.328910827636719
    5. ' =' → logprob: -13.828910827636719
    6. '==
' → logprob: -14.703910827636719
    7. 's' → logprob: -15.203910827636719
    8. ')' → logprob: -15.828910827636719
    9. ']==' → logprob: -15.953910827636719
    10. ')==' → logprob: -15.953910827636719

Token 914: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0002613358374219388
    2. ' s' → logprob: -8.250261306762695
    3. '_s' → logprob: -20.000261306762695
    4. ' ' → logprob: -20.500261306762695
    5. '	s' → logprob: -20.750261306762695
    6. '   ' → logprob: -22.000261306762695
    7. '{s' → logprob: -22.375261306762695
    8. '(s' → logprob: -22.750261306762695
    9. '=s' → logprob: -23.000261306762695
    10. '`s' → logprob: -23.250261306762695

Token 915: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. 'i' → logprob: -14.000000953674316
    3. '[' → logprob: -16.375001907348633
    4. 's' → logprob: -16.750001907348633
    5. '[s' → logprob: -18.000001907348633
    6. '```' → logprob: -18.375001907348633
    7. '[
' → logprob: -18.875001907348633
    8. ''s' → logprob: -19.375001907348633
    9. '[user' → logprob: -19.625001907348633
    10. '(i' → logprob: -21.125001907348633

Token 916: ']:
' (ID: 22152)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7949159145355225
    2. '}' → logprob: -1.6699159145355225
    3. ':' → logprob: -2.2949159145355225
    4. ':
' → logprob: -2.5449159145355225
    5. ']:
' → logprob: -2.6699159145355225
    6. '']:
' → logprob: -3.0449159145355225
    7. '               ' → logprob: -3.7949159145355225
    8. '}:' → logprob: -4.169916152954102
    9. ']:' → logprob: -5.169916152954102
    10. '):
' → logprob: -5.169916152954102

Token 917: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00731317326426506
    2. ':' → logprob: -5.007313251495361
    3. ':
' → logprob: -7.757313251495361
    4. '               ' → logprob: -9.882312774658203
    5. '                       ' → logprob: -10.382312774658203
    6. '                  ' → logprob: -10.882312774658203
    7. '```' → logprob: -11.257312774658203
    8. '           ' → logprob: -11.632312774658203
    9. '                 ' → logprob: -11.882312774658203
    10. ' :' → logprob: -11.882312774658203

Token 918: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09017151594161987
    2. 'm' → logprob: -2.5901715755462646
    3. '               ' → logprob: -5.2151713371276855
    4. '   ' → logprob: -6.3401713371276855
    5. ' mor' → logprob: -6.7151713371276855
    6. '                       ' → logprob: -6.9651713371276855
    7. '           ' → logprob: -7.3401713371276855
    8. 'mor' → logprob: -7.3401713371276855
    9. '       ' → logprob: -7.7151713371276855
    10. ' ' → logprob: -10.215171813964844

Token 919: ' Long' (ID: 7790)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00011999329581158236
    2. '#' → logprob: -10.000120162963867
    3. 'mor' → logprob: -10.250120162963867
    4. '                   ' → logprob: -10.625120162963867
    5. ' mor' → logprob: -11.875120162963867
    6. '   ' → logprob: -12.750120162963867
    7. '           ' → logprob: -13.625120162963867
    8. '               ' → logprob: -13.625120162963867
    9. '                       ' → logprob: -13.750120162963867
    10. '       ' → logprob: -15.375120162963867

Token 920: ' vowel' (ID: 165542)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9629408717155457
    2. '                   ' → logprob: -2.2129409313201904
    3. 'v' → logprob: -2.3379409313201904
    4. ''' → logprob: -2.7129409313201904
    5. ')' → logprob: -2.9629409313201904
    6. ' ' → logprob: -3.2129409313201904
    7. '_m' → logprob: -3.2129409313201904
    8. 'm' → logprob: -3.7129409313201904
    9. '               ' → logprob: -3.7129409313201904
    10. '   ' → logprob: -4.087940692901611

Token 921: ' represented' (ID: 27328)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01590743474662304
    2. 'm' → logprob: -5.390907287597656
    3. ' mor' → logprob: -5.890907287597656
    4. '                       ' → logprob: -6.015907287597656
    5. '               ' → logprob: -6.265907287597656
    6. ':
' → logprob: -6.390907287597656
    7. '
' → logprob: -7.265907287597656
    8. 's' → logprob: -8.265907287597656
    9. '                    
' → logprob: -8.390907287597656
    10. ',' → logprob: -8.390907287597656

Token 922: ' as' (ID: 472)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.9106370806694031
    2. ' by' → logprob: -1.9106371402740479
    3. '                       ' → logprob: -2.160637140274048
    4. 'by' → logprob: -2.160637140274048
    5. ' as' → logprob: -2.160637140274048
    6. 'as' → logprob: -2.410637140274048
    7. 's' → logprob: -5.535636901855469
    8. '               ' → logprob: -5.910636901855469
    9. 'm' → logprob: -6.160636901855469
    10. '                     ' → logprob: -6.285636901855469

Token 923: ' two' (ID: 1920)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3305108845233917
    2. 'm' → logprob: -1.7055108547210693
    3. ' s' → logprob: -2.7055108547210693
    4. ' two' → logprob: -4.330511093139648
    5. 'two' → logprob: -4.955511093139648
    6. '[s' → logprob: -5.330511093139648
    7. ' mor' → logprob: -6.080511093139648
    8. '[m' → logprob: -6.205511093139648
    9. ' [' → logprob: -6.705511093139648
    10. '2' → logprob: -7.330511093139648

Token 924: ' mor' (ID: 4658)
  Prédit: ' mor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mor' → logprob: -0.5864905118942261
    2. 'm' → logprob: -0.8364905118942261
    3. 'mor' → logprob: -4.586490631103516
    4. 's' → logprob: -9.836490631103516
    5. '                   ' → logprob: -9.961490631103516
    6. ' m' → logprob: -10.211490631103516
    7. 'tokens' → logprob: -10.211490631103516
    8. ' tokens' → logprob: -10.336490631103516
    9. '           ' → logprob: -11.086490631103516
    10. 'v' → logprob: -11.211490631103516

Token 925: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -2.069664333248511e-05
    2. 'a' → logprob: -11.000020980834961
    3. 's' → logprob: -14.125020980834961
    4. ''as' → logprob: -14.500020980834961
    5. '```' → logprob: -14.750020980834961
    6. '(as' → logprob: -15.000020980834961
    7. 'ras' → logprob: -15.000020980834961
    8. '
' → logprob: -15.125020980834961
    9. '_as' → logprob: -15.500020980834961
    10. '	as' → logprob: -15.500020980834961

Token 926: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08480826020240784
    2. '                       ' → logprob: -3.334808349609375
    3. 'm' → logprob: -4.084808349609375
    4. ':' → logprob: -4.709808349609375
    5. '               ' → logprob: -4.709808349609375
    6. ',' → logprob: -5.334808349609375
    7. 's' → logprob: -6.209808349609375
    8. ':
' → logprob: -6.959808349609375
    9. ' =' → logprob: -7.209808349609375
    10. '           ' → logprob: -7.459808349609375

Token 927: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02866126038134098
    2. '                       ' → logprob: -3.9036612510681152
    3. ':' → logprob: -5.028661251068115
    4. ':
' → logprob: -7.028661251068115
    5. '               ' → logprob: -8.653661727905273
    6. ',' → logprob: -9.028661727905273
    7. '\' → logprob: -9.653661727905273
    8. '#' → logprob: -10.528661727905273
    9. '           ' → logprob: -10.653661727905273
    10. '```' → logprob: -10.653661727905273

Token 928: ' mor' (ID: 4658)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.021475056186318398
    2. '                       ' → logprob: -4.021474838256836
    3. 'mor' (adapté à ' mor') → logprob: -6.521474838256836
    4. ' mor' → logprob: -6.771474838256836
    5. 'm' → logprob: -8.396474838256836
    6. '               ' → logprob: -8.521474838256836
    7. '           ' → logprob: -9.271474838256836
    8. '       ' → logprob: -9.396474838256836
    9. '   ' → logprob: -9.396474838256836
    10. '                           ' → logprob: -11.896474838256836

Token 929: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -8.2994620242971e-06
    2. 'a' → logprob: -12.125008583068848
    3. '   ' → logprob: -14.000008583068848
    4. 's' → logprob: -14.000008583068848
    5. '	as' → logprob: -15.125008583068848
    6. ' as' → logprob: -15.375008583068848
    7. '[' → logprob: -15.500008583068848
    8. ' ' → logprob: -16.87500762939453
    9. '[
' → logprob: -17.00000762939453
    10. '_as' → logprob: -17.00000762939453

Token 930: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.943783253314905e-05
    2. '.' → logprob: -9.750059127807617
    3. 'append' → logprob: -14.000059127807617
    4. '.extend' → logprob: -16.125059127807617
    5. '.app' → logprob: -16.625059127807617
    6. '.ap' → logprob: -18.000059127807617
    7. '.Append' → logprob: -18.125059127807617
    8. '_append' → logprob: -18.875059127807617
    9. ' append' → logprob: -20.000059127807617
    10. 'Append' → logprob: -20.875059127807617

Token 931: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.07889022678136826
    2. 's' → logprob: -2.578890323638916
    3. ' s' → logprob: -15.453889846801758
    4. '(' → logprob: -15.453889846801758
    5. 'c' → logprob: -18.453889846801758
    6. '	s' → logprob: -18.578889846801758
    7. '[s' → logprob: -18.703889846801758
    8. '(
' → logprob: -19.328889846801758
    9. '   ' → logprob: -19.578889846801758
    10. '{s' → logprob: -19.578889846801758

Token 932: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -14.625000953674316
    3. '[s' → logprob: -14.750000953674316
    4. 's' → logprob: -18.0
    5. '[c' → logprob: -18.25
    6. '```' → logprob: -20.625
    7. '(i' → logprob: -20.75
    8. '[' → logprob: -21.0
    9. 'c' → logprob: -21.25
    10. '{i' → logprob: -21.5

Token 933: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4747815430164337
    2. ')
' → logprob: -0.9747815132141113
    3. ')
' → logprob: -7.724781513214111
    4. '                   ' → logprob: -8.59978199005127
    5. '               ' → logprob: -11.09978199005127
    6. 's' → logprob: -11.72478199005127
    7. '   ' → logprob: -11.97478199005127
    8. '])' → logprob: -12.09978199005127
    9. ')s' → logprob: -12.22478199005127
    10. '           ' → logprob: -12.22478199005127

Token 934: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005670660641044378
    2. '                    
' → logprob: -6.380670547485352
    3. '           ' → logprob: -6.880670547485352
    4. '               ' → logprob: -7.380670547485352
    5. '  
' → logprob: -7.380670547485352
    6. '<|end|>' → logprob: -7.630670547485352
    7. '       ' → logprob: -8.755670547485352
    8. ')' → logprob: -9.005670547485352
    9. '            
' → logprob: -9.380670547485352
    10. ' 
' → logprob: -9.380670547485352

Token 935: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0016497104661539197
    2. '                   ' → logprob: -7.626649856567383
    3. ' mor' → logprob: -7.751649856567383
    4. 'i' → logprob: -7.751649856567383
    5. 'mor' (adapté à ' mor') → logprob: -8.126649856567383
    6. '                       ' → logprob: -13.126649856567383
    7. ' i' → logprob: -13.501649856567383
    8. '   ' → logprob: -13.876649856567383
    9. '           ' → logprob: -15.001649856567383
    10. '               ' → logprob: -15.251649856567383

Token 936: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.020288551226258278
    2. '[' → logprob: -4.770288467407227
    3. 'oras' → logprob: -5.270288467407227
    4. '[i' → logprob: -6.020288467407227
    5. '.append' → logprob: -6.270288467407227
    6. '['' → logprob: -6.770288467407227
    7. 'or' → logprob: -7.895288467407227
    8. '   ' → logprob: -8.270288467407227
    9. '[
' → logprob: -9.645288467407227
    10. 's' → logprob: -9.770288467407227

Token 937: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007673407671973109
    2. '+=' → logprob: -7.375767230987549
    3. 'append' → logprob: -10.000767707824707
    4. '+' → logprob: -10.500767707824707
    5. ' +=' → logprob: -10.625767707824707
    6. '.' → logprob: -10.875767707824707
    7. '_append' → logprob: -11.500767707824707
    8. '           ' → logprob: -12.625767707824707
    9. 'Append' → logprob: -12.625767707824707
    10. '.Append' → logprob: -12.750767707824707

Token 938: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.000553151941858232
    2. 's' → logprob: -7.500553131103516
    3. '(' → logprob: -15.625553131103516
    4. '[s' → logprob: -18.000553131103516
    5. '   ' → logprob: -18.250553131103516
    6. ' s' → logprob: -18.250553131103516
    7. '(
' → logprob: -18.500553131103516
    8. ' (' → logprob: -18.625553131103516
    9. '	s' → logprob: -19.000553131103516
    10. ' ' → logprob: -19.750553131103516

Token 939: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. 'i' → logprob: -13.875000953674316
    3. '[j' → logprob: -15.500000953674316
    4. '[' → logprob: -15.875000953674316
    5. '[
' → logprob: -17.000001907348633
    6. '+' → logprob: -17.750001907348633
    7. '```' → logprob: -17.750001907348633
    8. ']' → logprob: -18.375001907348633
    9. ')' → logprob: -18.750001907348633
    10. ')[' → logprob: -19.125001907348633

Token 940: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019550370052456856
    2. '[' → logprob: -6.251955032348633
    3. '[i' → logprob: -10.626955032348633
    4. ' +' → logprob: -13.876955032348633
    5. '+i' → logprob: -15.501955032348633
    6. '[
' → logprob: -15.501955032348633
    7. 'i' → logprob: -15.501955032348633
    8. '])' → logprob: -15.751955032348633
    9. '+[' → logprob: -15.876955032348633
    10. '   ' → logprob: -16.001955032348633

Token 941: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -16.0
    3. '[i' → logprob: -18.25
    4. '[' → logprob: -18.375
    5. 'i' → logprob: -18.625
    6. ' ' → logprob: -18.875
    7. '```' → logprob: -19.125
    8. '１' → logprob: -19.875
    9. ']' → logprob: -20.0
    10. ')' → logprob: -21.125

Token 942: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029374927282333374
    2. ')' → logprob: -3.904374837875366
    3. '                   ' → logprob: -4.779375076293945
    4. '')
' → logprob: -8.404375076293945
    5. '])
' → logprob: -9.279375076293945
    6. ')
' → logprob: -10.029375076293945
    7. '')' → logprob: -12.154375076293945
    8. '])' → logprob: -12.279375076293945
    9. '               ' → logprob: -12.404375076293945
    10. '）
' → logprob: -12.404375076293945

Token 943: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -3.953082341467962e-05
    2. '                    
' → logprob: -11.250039100646973
    3. '               ' → logprob: -11.625039100646973
    4. '
' → logprob: -12.375039100646973
    5. '				' → logprob: -12.500039100646973
    6. '           ' → logprob: -12.625039100646973
    7. '```' → logprob: -13.125039100646973
    8. '                       ' → logprob: -13.750039100646973
    9. '		           ' → logprob: -13.750039100646973
    10. '                    ' → logprob: -15.250039100646973

Token 944: ' i' (ID: 575)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.021999619901180267
    2. 'i' (adapté à ' i') → logprob: -3.8969995975494385
    3. ' i' → logprob: -7.271999835968018
    4. '               ' → logprob: -8.39699935913086
    5. '           ' → logprob: -8.52199935913086
    6. '                       ' → logprob: -9.27199935913086
    7. '                    
' → logprob: -9.39699935913086
    8. '				' → logprob: -10.39699935913086
    9. '   ' → logprob: -10.52199935913086
    10. '       ' → logprob: -10.89699935913086

Token 945: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16023437678813934
    2. ' +=' → logprob: -1.9102343320846558
    3. '+' → logprob: -11.535234451293945
    4. '=' → logprob: -15.910234451293945
    5. ' +' → logprob: -16.410234451293945
    6. ' ' → logprob: -16.535234451293945
    7. ']+=' → logprob: -16.785234451293945
    8. '+="' → logprob: -17.910234451293945
    9. '```' → logprob: -18.035234451293945
    10. '   ' → logprob: -18.160234451293945

Token 946: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.125024795532227
    4. '۲' → logprob: -18.250024795532227
    5. '```' → logprob: -19.000024795532227
    6. '２' → logprob: -19.375024795532227
    7. '  ' → logprob: -20.375024795532227
    8. '٢' → logprob: -20.500024795532227
    9. '२' → logprob: -20.812524795532227
    10. '3' → logprob: -20.937524795532227

Token 947: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '۲' → logprob: -16.875009536743164
    4. '２' → logprob: -18.125009536743164
    5. '   ' → logprob: -18.250009536743164
    6. '٢' → logprob: -18.875009536743164
    7. '```' → logprob: -19.250009536743164
    8. '२' → logprob: -19.375009536743164
    9. '22' → logprob: -19.875009536743164
    10. '₂' → logprob: -20.312509536743164

Token 948: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10231498628854752
    2. '                   ' → logprob: -2.3523149490356445
    3. 'else' → logprob: -7.7273149490356445
    4. '           ' → logprob: -7.9773149490356445
    5. '                       ' → logprob: -8.227314949035645
    6. '<|end|>' → logprob: -8.352314949035645
    7. '```' → logprob: -8.352314949035645
    8. '                    
' → logprob: -9.102314949035645
    9. '       ' → logprob: -9.102314949035645
    10. '                
' → logprob: -9.477314949035645

Token 949: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03058083914220333
    2. '                   ' → logprob: -3.530580759048462
    3. 'else' → logprob: -8.155580520629883
    4. '           ' → logprob: -8.780580520629883
    5. '       ' → logprob: -8.905580520629883
    6. '```' → logprob: -9.905580520629883
    7. ' else' → logprob: -10.155580520629883
    8. '                ' → logprob: -10.405580520629883
    9. '                    
' → logprob: -10.405580520629883
    10. '                
' → logprob: -10.655580520629883

Token 950: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5791094899177551
    2. '               ' → logprob: -0.8291094899177551
    3. 'continue' (adapté à ' continue') → logprob: -5.9541096687316895
    4. '           ' → logprob: -7.8291096687316895
    5. 'else' → logprob: -9.704109191894531
    6. '       ' → logprob: -10.204109191894531
    7. '```' → logprob: -10.579109191894531
    8. ' continue' → logprob: -10.579109191894531
    9. '                       ' → logprob: -11.329109191894531
    10. '   ' → logprob: -12.079109191894531

Token 951: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07833550125360489
    2. '           ' → logprob: -2.7033355236053467
    3. '       ' → logprob: -5.203335285186768
    4. '                
' → logprob: -6.828335285186768
    5. 'else' → logprob: -7.703335285186768
    6. '```' → logprob: -7.703335285186768
    7. '            
' → logprob: -8.578335762023926
    8. '
' → logprob: -8.828335762023926
    9. 'elif' → logprob: -9.078335762023926
    10. 'm' → logprob: -9.328335762023926

Token 952: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010406591929495335
    2. '           ' → logprob: -4.635406494140625
    3. '       ' → logprob: -8.385406494140625
    4. 'm' → logprob: -8.510406494140625
    5. 'else' → logprob: -9.010406494140625
    6. '```' → logprob: -9.635406494140625
    7. 'elif' → logprob: -11.135406494140625
    8. 's' → logprob: -11.885406494140625
    9. '                   ' → logprob: -12.510406494140625
    10. '                
' → logprob: -12.885406494140625

Token 953: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6536096334457397
    2. '           ' → logprob: -0.7786096334457397
    3. 'else' (adapté à ' else') → logprob: -4.403609752655029
    4. 'm' → logprob: -5.028609752655029
    5. 'mor' → logprob: -7.278609752655029
    6. 'elif' → logprob: -7.778609752655029
    7. '       ' → logprob: -8.153609275817871
    8. ' mor' → logprob: -8.653609275817871
    9. 's' → logprob: -9.403609275817871
    10. '```' → logprob: -9.528609275817871

Token 954: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2510615885257721
    2. '               ' → logprob: -1.8760615587234497
    3. ':
' → logprob: -2.8760616779327393
    4. ':' → logprob: -4.50106143951416
    5. '           ' → logprob: -7.62606143951416
    6. '{
' → logprob: -7.75106143951416
    7. '                ' → logprob: -9.37606143951416
    8. '                       ' → logprob: -9.62606143951416
    9. '   ' → logprob: -10.00106143951416
    10. '{' → logprob: -10.25106143951416

Token 955: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.049389999359846115
    2. '               ' → logprob: -3.0493900775909424
    3. '           ' → logprob: -7.674389839172363
    4. '   ' → logprob: -8.924389839172363
    5. ' mor' → logprob: -10.049389839172363
    6. '       ' → logprob: -10.174389839172363
    7. '{
' → logprob: -10.174389839172363
    8. '                       ' → logprob: -10.174389839172363
    9. '                ' → logprob: -10.924389839172363
    10. '{' → logprob: -12.049389839172363

Token 956: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08557622134685516
    2. 'mor' (adapté à ' mor') → logprob: -2.960576295852661
    3. '                   ' → logprob: -3.710576295852661
    4. '               ' → logprob: -5.960576057434082
    5. ' mor' → logprob: -6.210576057434082
    6. '           ' → logprob: -7.460576057434082
    7. '   ' → logprob: -7.710576057434082
    8. '       ' → logprob: -9.210576057434082
    9. '                       ' → logprob: -10.710576057434082
    10. '                ' → logprob: -11.710576057434082

Token 957: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -1.6240566083070007e-06
    2. 'a' → logprob: -14.000001907348633
    3. '   ' → logprob: -14.875001907348633
    4. 'oras' → logprob: -15.375001907348633
    5. '[' → logprob: -16.875001907348633
    6. '           ' → logprob: -17.375001907348633
    7. 's' → logprob: -17.750001907348633
    8. '=' → logprob: -17.750001907348633
    9. '.append' → logprob: -18.000001907348633
    10. 'm' → logprob: -18.000001907348633

Token 958: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00011343709047650918
    2. '.' → logprob: -9.125113487243652
    3. '.app' → logprob: -13.000113487243652
    4. 'append' → logprob: -13.625113487243652
    5. ' .' → logprob: -14.750113487243652
    6. '           ' → logprob: -15.875113487243652
    7. '.Append' → logprob: -15.875113487243652
    8. '.ap' → logprob: -16.500112533569336
    9. '.setdefault' → logprob: -17.000112533569336
    10. 'Append' → logprob: -17.500112533569336

Token 959: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -6.2729995988775045e-06
    2. 's' → logprob: -12.000006675720215
    3. '(' → logprob: -16.7500057220459
    4. '(c' → logprob: -19.6250057220459
    5. '(
' → logprob: -20.3750057220459
    6. '[s' → logprob: -20.8750057220459
    7. 'c' → logprob: -22.5000057220459
    8. '((' → logprob: -22.7500057220459
    9. '('' → logprob: -23.0000057220459
    10. '   ' → logprob: -23.1250057220459

Token 960: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6240566083070007e-06
    2. 'i' → logprob: -14.125001907348633
    3. '[' → logprob: -14.750001907348633
    4. '[
' → logprob: -15.750001907348633
    5. '[user' → logprob: -16.750001907348633
    6. '[s' → logprob: -16.875001907348633
    7. '[j' → logprob: -17.500001907348633
    8. ')' → logprob: -17.875001907348633
    9. '[I' → logprob: -18.000001907348633
    10. '```' → logprob: -18.125001907348633

Token 961: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11345626413822174
    2. ')
' → logprob: -2.2384562492370605
    3. '])' → logprob: -8.113456726074219
    4. '                   ' → logprob: -8.488456726074219
    5. '])
' → logprob: -10.238456726074219
    6. '）' → logprob: -10.613456726074219
    7. ')
' → logprob: -11.113456726074219
    8. ')i' → logprob: -11.113456726074219
    9. ']' → logprob: -11.238456726074219
    10. '')' → logprob: -12.363456726074219

Token 962: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00021760274830739945
    2. '               ' → logprob: -9.12521743774414
    3. '                    
' → logprob: -9.87521743774414
    4. '           ' → logprob: -10.50021743774414
    5. '<|end|>' → logprob: -12.25021743774414
    6. '```' → logprob: -12.62521743774414
    7. '       ' → logprob: -12.87521743774414
    8. '                       ' → logprob: -12.87521743774414
    9. '		           ' → logprob: -12.87521743774414
    10. 's' → logprob: -13.12521743774414

Token 963: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0009358783136121929
    2. '                   ' → logprob: -7.000936031341553
    3. ' i' → logprob: -10.750935554504395
    4. '           ' → logprob: -13.250935554504395
    5. '               ' → logprob: -14.375935554504395
    6. '   ' → logprob: -14.375935554504395
    7. '	i' → logprob: -17.25093650817871
    8. '       ' → logprob: -17.37593650817871
    9. '```' → logprob: -18.62593650817871
    10. '                  ' → logprob: -18.62593650817871

Token 964: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3868883550167084
    2. '+=' → logprob: -1.1368883848190308
    3. '+' → logprob: -12.26188850402832
    4. '   ' → logprob: -12.63688850402832
    5. '                   ' → logprob: -12.88688850402832
    6. '    ' → logprob: -13.38688850402832
    7. ']+=' → logprob: -13.51188850402832
    8. '           ' → logprob: -13.51188850402832
    9. '=' → logprob: -14.51188850402832
    10. '                    ' → logprob: -14.76188850402832

Token 965: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -19.625036239624023
    4. '１' → logprob: -20.750036239624023
    5. '   ' → logprob: -21.125036239624023
    6. '
' → logprob: -21.625036239624023
    7. '۱' → logprob: -21.750036239624023
    8. '           ' → logprob: -21.750036239624023
    9. '0' → logprob: -22.250036239624023
    10. '<|end|>' → logprob: -22.562536239624023

Token 966: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -19.375
    4. '   ' → logprob: -21.625
    5. '１' → logprob: -22.125
    6. '2' → logprob: -22.5625
    7. '۱' → logprob: -22.75
    8. '
' → logprob: -22.875
    9. '0' → logprob: -23.5
    10. '' → logprob: -23.75

Token 967: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36923953890800476
    2. '                   ' → logprob: -1.6192395687103271
    3. '           ' → logprob: -3.119239568710327
    4. '               ' → logprob: -3.369239568710327
    5. '<|end|>' → logprob: -3.494239568710327
    6. 'else' → logprob: -7.494239330291748
    7. '   ' → logprob: -8.494239807128906
    8. '<|end|>' → logprob: -8.744239807128906
    9. '```' → logprob: -8.994239807128906
    10. ' else' → logprob: -9.494239807128906

Token 968: '                   ' (ID: 699)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7428828477859497
    2. '                   ' → logprob: -1.1178828477859497
    3. '           ' → logprob: -1.7428828477859497
    4. '               ' → logprob: -3.86788272857666
    5. '   ' → logprob: -8.49288272857666
    6. 'else' → logprob: -8.61788272857666
    7. '```' → logprob: -8.74288272857666
    8. '                    
' → logprob: -8.86788272857666
    9. '        
' → logprob: -8.99288272857666
    10. '            
' → logprob: -9.11788272857666

Token 969: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013677161186933517
    2. '           ' → logprob: -4.88867712020874
    3. '               ' → logprob: -5.63867712020874
    4. '       ' → logprob: -6.63867712020874
    5. 'continue' (adapté à ' continue') → logprob: -6.88867712020874
    6. 'else' → logprob: -9.263677597045898
    7. '                       ' → logprob: -10.513677597045898
    8. 'return' → logprob: -11.388677597045898
    9. '   ' → logprob: -11.638677597045898
    10. ' continue' → logprob: -12.138677597045898

Token 970: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03050372563302517
    2. '           ' → logprob: -3.530503749847412
    3. 'else' → logprob: -7.780503749847412
    4. '```' → logprob: -8.780503273010254
    5. 'elif' → logprob: -9.405503273010254
    6. 'm' → logprob: -10.780503273010254
    7. '               ' → logprob: -10.905503273010254
    8. '#' → logprob: -11.030503273010254
    9. '   ' → logprob: -11.530503273010254
    10. '        
' → logprob: -11.780503273010254

Token 971: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01633792370557785
    2. '           ' → logprob: -4.141337871551514
    3. 'else' → logprob: -8.516338348388672
    4. '#' → logprob: -10.641338348388672
    5. '```' → logprob: -11.016338348388672
    6. 'elif' → logprob: -11.266338348388672
    7. '               ' → logprob: -11.391338348388672
    8. '   ' → logprob: -11.766338348388672
    9. 'return' → logprob: -12.016338348388672
    10. 'm' → logprob: -12.141338348388672

Token 972: ' #' (ID: 1069)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.16245542466640472
    2. '       ' → logprob: -1.912455439567566
    3. 'mor' → logprob: -6.2874555587768555
    4. '   ' → logprob: -8.787455558776855
    5. 'else' → logprob: -9.287455558776855
    6. ' mor' → logprob: -9.912455558776855
    7. '```' → logprob: -10.537455558776855
    8. '           ' → logprob: -10.662455558776855
    9. '#' (adapté à ' #') → logprob: -11.787455558776855
    10. 'return' → logprob: -11.787455558776855

Token 973: ' single' (ID: 4590)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00015467056073248386
    2. '       ' → logprob: -9.375154495239258
    3. '#' → logprob: -9.875154495239258
    4. '   ' → logprob: -11.500154495239258
    5. 'mor' → logprob: -12.625154495239258
    6. '           ' → logprob: -12.750154495239258
    7. 'return' → logprob: -14.375154495239258
    8. ' mor' → logprob: -14.500154495239258
    9. '```' → logprob: -15.375154495239258
    10. 'if' → logprob: -15.375154495239258

Token 974: ' vowel' (ID: 165542)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37585151195526123
    2. 'm' → logprob: -1.3758515119552612
    3. '           ' → logprob: -3.125851631164551
    4. '   ' → logprob: -5.000851631164551
    5. ' mor' → logprob: -5.375851631164551
    6. 'c' → logprob: -7.000851631164551
    7. 's' → logprob: -7.000851631164551
    8. '```' → logprob: -7.250851631164551
    9. '{' → logprob: -7.375851631164551
    10. 'mor' → logprob: -7.750851631164551

Token 975: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006896167062222958
    2. '           ' → logprob: -5.506896018981934
    3. 'm' → logprob: -6.256896018981934
    4. '```' → logprob: -8.006896018981934
    5. '   ' → logprob: -8.381896018981934
    6. ' mor' → logprob: -9.131896018981934
    7. '{' → logprob: -9.256896018981934
    8. '{
' → logprob: -10.881896018981934
    9. '``' → logprob: -11.256896018981934
    10. '[' → logprob: -11.381896018981934

Token 976: ' conson' (ID: 127767)
  Prédit: ' conson'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conson' → logprob: -0.34753531217575073
    2. 'con' → logprob: -1.5975353717803955
    3. 'm' → logprob: -3.3475353717803955
    4. ' mor' → logprob: -3.5975353717803955
    5. 's' → logprob: -3.8475353717803955
    6. 'mor' → logprob: -5.972535133361816
    7. ' s' → logprob: -6.847535133361816
    8. '           ' → logprob: -6.847535133361816
    9. 'c' → logprob: -6.972535133361816
    10. '   ' → logprob: -7.722535133361816

Token 977: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.012112597934901714
    2. '           ' → logprob: -4.512112617492676
    3. 'ants' → logprob: -7.137112617492676
    4. 'ent' → logprob: -8.887112617492676
    5. 'a' → logprob: -10.637112617492676
    6. '               ' → logprob: -10.637112617492676
    7. 'antt' → logprob: -11.012112617492676
    8. 't' → logprob: -11.137112617492676
    9. '   ' → logprob: -11.262112617492676
    10. '       ' → logprob: -11.262112617492676

Token 978: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010497196344658732
    2. '           ' → logprob: -8.001049995422363
    3. 'm' → logprob: -8.126049995422363
    4. ' mor' → logprob: -9.001049995422363
    5. '   ' → logprob: -9.001049995422363
    6. '```' → logprob: -9.001049995422363
    7. '{
' → logprob: -11.876049995422363
    8. '{' → logprob: -11.876049995422363
    9. 'mor' → logprob: -12.001049995422363
    10. '``' → logprob: -12.251049995422363

Token 979: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01427350752055645
    2. '           ' → logprob: -4.389273643493652
    3. '   ' → logprob: -6.764273643493652
    4. '```' → logprob: -8.639273643493652
    5. 'm' → logprob: -8.889273643493652
    6. ' mor' → logprob: -9.014273643493652
    7. ':' → logprob: -9.264273643493652
    8. ':
' → logprob: -10.764273643493652
    9. '{' → logprob: -11.264273643493652
    10. '               ' → logprob: -12.014273643493652

Token 980: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.396757089532912e-05
    2. '       ' → logprob: -10.7500638961792
    3. ' mor' → logprob: -10.7500638961792
    4. 'mor' (adapté à ' mor') → logprob: -11.1250638961792
    5. '   ' → logprob: -12.2500638961792
    6. '           ' → logprob: -13.8750638961792
    7. 'else' → logprob: -15.6250638961792
    8. '	m' → logprob: -15.8750638961792
    9. 'maras' → logprob: -16.250064849853516
    10. '        ' → logprob: -16.625064849853516

Token 981: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -7.584239938296378e-06
    2. 'a' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.125007629394531
    4. 's' → logprob: -16.25000762939453
    5. ' as' → logprob: -16.37500762939453
    6. '	as' → logprob: -17.00000762939453
    7. '```' → logprob: -18.12500762939453
    8. 'oras' → logprob: -18.12500762939453
    9. '[' → logprob: -19.00000762939453
    10. '       ' → logprob: -19.00000762939453

Token 982: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005240394733846188
    2. '.' → logprob: -5.255240440368652
    3. '.app' → logprob: -12.255240440368652
    4. '.Append' → logprob: -14.130240440368652
    5. '.ap' → logprob: -14.505240440368652
    6. 'append' → logprob: -15.130240440368652
    7. ' .' → logprob: -15.880240440368652
    8. '.add' → logprob: -17.130239486694336
    9. '.extend' → logprob: -17.130239486694336
    10. '.
' → logprob: -17.880239486694336

Token 983: '(c' (ID: 2410)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.005236956290900707
    2. '(c' → logprob: -5.255237102508545
    3. 's' → logprob: -12.755236625671387
    4. '(' → logprob: -15.630236625671387
    5. 'c' → logprob: -15.755236625671387
    6. '(
' → logprob: -19.630237579345703
    7. '((' → logprob: -21.380237579345703
    8. ' (' → logprob: -22.005237579345703
    9. '(a' → logprob: -22.380237579345703
    10. ' s' → logprob: -22.505237579345703

Token 984: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10022791475057602
    2. ')' → logprob: -2.3502278327941895
    3. ')
' → logprob: -10.850228309631348
    4. ' )
' → logprob: -14.600228309631348
    5. ')s' → logprob: -14.850228309631348
    6. ')c' → logprob: -14.850228309631348
    7. '       ' → logprob: -16.10022735595703
    8. ')i' → logprob: -16.10022735595703
    9. '   ' → logprob: -16.60022735595703
    10. ')

' → logprob: -16.72522735595703

Token 985: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2686871588230133
    2. '   ' → logprob: -1.518687129020691
    3. 'i' → logprob: -5.1436872482299805
    4. '
' → logprob: -5.6436872482299805
    5. '           ' → logprob: -6.3936872482299805
    6. '	i' → logprob: -6.3936872482299805
    7. '```' → logprob: -6.6436872482299805
    8. ' i' → logprob: -7.2686872482299805
    9. '<|end|>' → logprob: -7.7686872482299805
    10. '[i' → logprob: -7.8936872482299805

Token 986: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.000194361709873192
    2. '   ' → logprob: -8.750194549560547
    3. ' i' → logprob: -10.500194549560547
    4. '       ' → logprob: -11.750194549560547
    5. '	i' → logprob: -14.875194549560547
    6. '           ' → logprob: -18.250194549560547
    7. '```' → logprob: -18.375194549560547
    8. '  ' → logprob: -18.875194549560547
    9. '_i' → logprob: -19.500194549560547
    10. ' ' → logprob: -19.750194549560547

Token 987: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0032179991248995066
    2. ' +=' → logprob: -5.753218173980713
    3. '+' → logprob: -10.128217697143555
    4. ']+=' → logprob: -16.003217697143555
    5. '```' → logprob: -16.253217697143555
    6. '=' → logprob: -16.503217697143555
    7. '+='' → logprob: -17.003217697143555
    8. '+="' → logprob: -17.378217697143555
    9. ')' → logprob: -18.628217697143555
    10. '   ' → logprob: -18.878217697143555

Token 988: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -22.0
    4. '１' → logprob: -23.125
    5. '   ' → logprob: -24.0
    6. '۱' → logprob: -24.625
    7. '0' → logprob: -25.625
    8. '
' → logprob: -25.875
    9. '१' → logprob: -26.125
    10. '`' → logprob: -26.25

Token 989: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. '```' → logprob: -21.625
    4. '۱' → logprob: -23.125
    5. '１' → logprob: -23.375
    6. '=' → logprob: -24.5
    7. '१' → logprob: -24.5
    8. '১' → logprob: -24.875
    9. '0' → logprob: -24.875
    10. '`' → logprob: -25.375

Token 990: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 991: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 992: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007051491178572178
    2. ' return' → logprob: -5.007051467895508
    3. '   ' → logprob: -8.007051467895508
    4. '	return' → logprob: -12.882051467895508
    5. ':return' → logprob: -15.132051467895508
    6. ' ' → logprob: -17.007051467895508
    7. '{return' → logprob: -17.632051467895508
    8. '@return' → logprob: -18.007051467895508
    9. '```' → logprob: -18.257051467895508
    10. '_return' → logprob: -18.257051467895508

Token 993: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.000850009499117732
    2. ' mor' → logprob: -7.250850200653076
    3. 'mor' → logprob: -8.875849723815918
    4. 'mo' → logprob: -15.500849723815918
    5. '	m' → logprob: -16.750850677490234
    6. '```' → logprob: -17.625850677490234
    7. 'maras' → logprob: -18.125850677490234
    8. 'mos' → logprob: -18.375850677490234
    9. 'mon' → logprob: -18.375850677490234
    10. '(m' → logprob: -18.875850677490234

Token 994: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -3.7697225252486533e-06
    2. 'a' → logprob: -13.125003814697266
    3. 's' → logprob: -13.750003814697266
    4. '[' → logprob: -15.250003814697266
    5. '```' → logprob: -16.250003814697266
    6. 'm' → logprob: -16.750003814697266
    7. 'ас' → logprob: -16.875003814697266
    8. '``' → logprob: -16.875003814697266
    9. ' as' → logprob: -17.125003814697266
    10. '   ' → logprob: -17.625003814697266

Token 995: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 996: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 997: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8744795918464661
    2. ' is' → logprob: -2.1244795322418213
    3. ' parse' → logprob: -2.8744795322418213
    4. ' count' → logprob: -2.9994795322418213
    5. 'main' → logprob: -3.1244795322418213
    6. ' split' → logprob: -3.3744795322418213
    7. 'is' → logprob: -3.3744795322418213
    8. ' rom' → logprob: -3.7494795322418213
    9. 'split' → logprob: -3.8744795322418213
    10. 'count' → logprob: -3.9994795322418213

Token 998: '_vo' (ID: 145825)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.06826433539390564
    2. '_vo' → logprob: -3.4432642459869385
    3. '_m' → logprob: -3.8182642459869385
    4. '_con' → logprob: -5.568264484405518
    5. '_k' → logprob: -5.693264484405518
    6. '_valid' → logprob: -6.693264484405518
    7. '_double' → logprob: -7.318264484405518
    8. '_long' → logprob: -7.443264484405518
    9. '_s' → logprob: -7.568264484405518
    10. '_h' → logprob: -8.31826400756836

Token 999: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.19887962937355042
    2. 'wel' → logprob: -2.1988797187805176
    3. 'w' → logprob: -3.0738797187805176
    4. 'ice' → logprob: -4.073879718780518
    5. 'iced' → logprob: -5.698879718780518
    6. 'icelo' → logprob: -7.198879718780518
    7. 'wc' → logprob: -7.823879718780518
    8. 'wic' → logprob: -8.19887924194336
    9. 'cel' → logprob: -8.44887924194336
    10. 'c' → logprob: -8.94887924194336

Token 1000: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.02565123327076435
    2. 'ed' → logprob: -3.775651216506958
    3. 'e' → logprob: -6.775651454925537
    4. 'el' → logprob: -7.025651454925537
    5. 'eled' → logprob: -8.150650978088379
    6. 'ele' → logprob: -9.650650978088379
    7. 'eles' → logprob: -11.525650978088379
    8. 'elif' → logprob: -12.900650978088379
    9. 'elled' → logprob: -13.400650978088379
    10. 'elod' → logprob: -13.400650978088379

Token 1001: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.1669706553220749
    2. '_' → logprob: -2.041970729827881
    3. '(c' → logprob: -4.041970729827881
    4. '_(' → logprob: -5.666970729827881
    5. '_char' → logprob: -6.166970729827881
    6. '_c' → logprob: -8.166970252990723
    7. '(con' → logprob: -8.791970252990723
    8. '(' → logprob: -9.291970252990723
    9. '(_' → logprob: -9.416970252990723
    10. '_ch' → logprob: -10.541970252990723

Token 1002: 'son' (ID: 1356)
  Prédit: 'son'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'son' → logprob: -8.506661833962426e-05
    2. 's' → logprob: -9.62508487701416
    3. 'sons' → logprob: -11.00008487701416
    4. '```' → logprob: -14.25008487701416
    5. 'on' → logprob: -14.37508487701416
    6. 'so' → logprob: -14.50008487701416
    7. 't' → logprob: -15.75008487701416
    8. 'sona' → logprob: -16.625085830688477
    9. 'сон' → logprob: -17.250085830688477
    10. 'sson' → logprob: -17.375085830688477

Token 1003: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -4.36574100604048e-06
    2. 't' → logprob: -13.000004768371582
    3. '_ant' → logprob: -14.000004768371582
    4. 'tant' → logprob: -14.625004768371582
    5. 'ent' → logprob: -14.750004768371582
    6. 'a' → logprob: -16.125003814697266
    7. 'ants' → logprob: -16.875003814697266
    8. '{' → logprob: -17.375003814697266
    9. 'antt' → logprob: -17.500003814697266
    10. '_' → logprob: -17.500003814697266

Token 1004: '(m' (ID: 2145)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.006057486403733492
    2. '(char' → logprob: -6.131057262420654
    3. '(ch' → logprob: -6.381057262420654
    4. '(' → logprob: -6.381057262420654
    5. '(s' → logprob: -8.256057739257812
    6. '_(' → logprob: -8.881057739257812
    7. '(token' → logprob: -11.006057739257812
    8. '_char' → logprob: -11.006057739257812
    9. ' (' → logprob: -11.506057739257812
    10. '_' → logprob: -11.756057739257812

Token 1005: 'ora' (ID: 2505)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.17371004819869995
    2. 'c' → logprob: -1.9237101078033447
    3. ')' → logprob: -5.298709869384766
    4. ')c' → logprob: -5.923709869384766
    5. ')o' → logprob: -6.298709869384766
    6. '(c' → logprob: -6.423709869384766
    7. 'owel' → logprob: -7.048709869384766
    8. 'oc' → logprob: -7.673709869384766
    9. 'O' → logprob: -8.798709869384766
    10. 's' → logprob: -8.923709869384766

Token 1006: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3017817735671997
    2. '(m' → logprob: -1.8017817735671997
    3. '_m' → logprob: -2.67678165435791
    4. '):
' → logprob: -4.80178165435791
    5. ')' → logprob: -5.05178165435791
    6. 'm' → logprob: -5.42678165435791
    7. ')m' → logprob: -6.05178165435791
    8. ',' → logprob: -6.67678165435791
    9. ')_' → logprob: -6.92678165435791
    10. '_' → logprob: -7.05178165435791

Token 1007: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008331467397511005
    2. ':' → logprob: -4.883331298828125
    3. '(' → logprob: -8.258331298828125
    4. '(m' → logprob: -9.258331298828125
    5. ':return' → logprob: -9.508331298828125
    6. 'return' → logprob: -9.758331298828125
    7. '{' → logprob: -9.883331298828125
    8. 'm' → logprob: -9.883331298828125
    9. '():' → logprob: -11.258331298828125
    10. 'if' → logprob: -11.258331298828125

Token 1008: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0003045994380954653
    2. '   ' → logprob: -8.250304222106934
    3. ' return' → logprob: -10.250304222106934
    4. 'if' → logprob: -11.750304222106934
    5. 'for' → logprob: -18.50030517578125
    6. ' ' → logprob: -19.00030517578125
    7. '
' → logprob: -19.75030517578125
    8. ' if' → logprob: -19.75030517578125
    9. '	return' → logprob: -19.87530517578125
    10. 'm' → logprob: -20.25030517578125

Token 1009: ' mora' (ID: 47294)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.000444850797066465
    2. 'if' → logprob: -7.7504448890686035
    3. ' return' → logprob: -11.625444412231445
    4. '#' → logprob: -12.875444412231445
    5. '   ' → logprob: -13.250444412231445
    6. 'for' → logprob: -15.125444412231445
    7. '"""' → logprob: -15.375444412231445
    8. 'm' → logprob: -15.500444412231445
    9. 'returns' → logprob: -16.500444412231445
    10. '	return' → logprob: -16.625444412231445

Token 1010: ' can' (ID: 665)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.18999844789505005
    2. 'and' → logprob: -2.6899983882904053
    3. '=' → logprob: -3.3149983882904053
    4. 'if' → logprob: -3.6899983882904053
    5. ' =' → logprob: -4.814998626708984
    6. 'return' → logprob: -4.814998626708984
    7. ' in' → logprob: -4.939998626708984
    8. '.startswith' → logprob: -5.314998626708984
    9. 'def' → logprob: -5.564998626708984
    10. 'startswith' → logprob: -6.314998626708984

Token 1011: ' be' (ID: 413)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5392811894416809
    2. 'return' → logprob: -1.4142811298370361
    3. 'in' → logprob: -2.164281129837036
    4. 'be' → logprob: -3.039281129837036
    5. 'if' → logprob: -5.039281368255615
    6. 'm' → logprob: -5.664281368255615
    7. '   ' → logprob: -7.664281368255615
    8. '
' → logprob: -8.789280891418457
    9. ' in' → logprob: -9.164280891418457
    10. 'length' → logprob: -9.289280891418457

Token 1012: ' '' (ID: 461)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1302121877670288
    2. 'm' → logprob: -2.2552123069763184
    3. 'a' → logprob: -4.505212306976318
    4. 'in' → logprob: -6.255212306976318
    5. '''' → logprob: -7.005212306976318
    6. 'length' → logprob: -7.130212306976318
    7. '1' → logprob: -7.505212306976318
    8. 'one' → logprob: -7.505212306976318
    9. 'if' → logprob: -8.00521183013916
    10. '
' → logprob: -8.88021183013916

Token 1013: 'k' (ID: 74)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03303103893995285
    2. 'len' → logprob: -4.033030986785889
    3. '''' → logprob: -4.533030986785889
    4. 'if' → logprob: -6.908030986785889
    5. ''' → logprob: -7.033030986785889
    6. 's' → logprob: -7.783030986785889
    7. 'p' → logprob: -8.033031463623047
    8. 'c' → logprob: -8.408031463623047
    9. 'k' → logprob: -8.533031463623047
    10. 'vo' → logprob: -8.783031463623047

Token 1014: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008262431249022484
    2. '')' → logprob: -4.883262634277344
    3. ''or' → logprob: -8.008262634277344
    4. '',' → logprob: -9.883262634277344
    5. ''''' → logprob: -10.508262634277344
    6. 'o' → logprob: -10.633262634277344
    7. ''
' → logprob: -10.758262634277344
    8. 'p' → logprob: -11.008262634277344
    9. 'a' → logprob: -11.008262634277344
    10. ''a' → logprob: -11.133262634277344

Token 1015: ' '' (ID: 461)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.877147912979126
    2. 's' → logprob: -1.502147912979126
    3. '   ' → logprob: -2.502147912979126
    4. 'return' → logprob: -2.502147912979126
    5. ''s' → logprob: -3.002147912979126
    6. 'def' → logprob: -3.127147912979126
    7. ''' → logprob: -3.502147912979126
    8. 'if' → logprob: -4.127147674560547
    9. ''m' → logprob: -4.377147674560547
    10. ' return' → logprob: -4.877147674560547

Token 1016: 'ki' (ID: 3129)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0037320225965231657
    2. ''s' → logprob: -5.628732204437256
    3. ''' → logprob: -9.003731727600098
    4. 't' → logprob: -12.753731727600098
    5. '`s' → logprob: -13.003731727600098
    6. 'p' → logprob: -13.878731727600098
    7. '"s' → logprob: -14.503731727600098
    8. ''''' → logprob: -14.878731727600098
    9. '')' → logprob: -15.003731727600098
    10. 'k' → logprob: -15.503731727600098

Token 1017: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15481935441493988
    2. '',' → logprob: -2.0298192501068115
    3. '')' → logprob: -4.904819488525391
    4. '','' → logprob: -6.654819488525391
    5. ',' → logprob: -7.404819488525391
    6. ''''' → logprob: -7.654819488525391
    7. '''' → logprob: -8.40481948852539
    8. ','' → logprob: -8.52981948852539
    9. '']' → logprob: -8.52981948852539
    10. ''s' → logprob: -8.65481948852539

Token 1018: ' '' (ID: 461)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.5718626379966736
    2. ''' → logprob: -2.1968626976013184
    3. '   ' → logprob: -2.3218626976013184
    4. ''p' → logprob: -2.3218626976013184
    5. ''t' → logprob: -3.3218626976013184
    6. ' '' → logprob: -3.5718626976013184
    7. 'return' → logprob: -4.071862697601318
    8. '#' → logprob: -4.321862697601318
    9. 'def' → logprob: -4.696862697601318
    10. 'if' → logprob: -5.071862697601318

Token 1019: 'ky' (ID: 5781)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.36928486824035645
    2. 's' → logprob: -1.2442848682403564
    3. ''' → logprob: -4.244284629821777
    4. 'sa' → logprob: -5.994284629821777
    5. 'p' → logprob: -6.744284629821777
    6. 'su' → logprob: -7.119284629821777
    7. 'si' → logprob: -8.244284629821777
    8. 'sk' → logprob: -8.244284629821777
    9. 'sh' → logprob: -8.369284629821777
    10. 't' → logprob: -8.619284629821777

Token 1020: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5571157932281494
    2. ''' → logprob: -1.1821157932281494
    3. 'a' → logprob: -2.8071157932281494
    4. ''a' → logprob: -4.18211555480957
    5. '')' → logprob: -4.18211555480957
    6. ''u' → logprob: -4.55711555480957
    7. 'o' → logprob: -4.80711555480957
    8. ''o' → logprob: -5.30711555480957
    9. 'p' → logprob: -6.55711555480957
    10. '{'' → logprob: -7.30711555480957

Token 1021: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3448159992694855
    2. '',' → logprob: -1.469815969467163
    3. '')' → logprob: -3.344815969467163
    4. 'p' → logprob: -4.719816207885742
    5. ')' → logprob: -5.469816207885742
    6. '','' → logprob: -5.719816207885742
    7. ',' → logprob: -6.344816207885742
    8. 'e' → logprob: -6.969816207885742
    9. '   ' → logprob: -6.969816207885742
    10. ''):' → logprob: -7.094816207885742

Token 1022: ' etc' (ID: 5178)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2691569924354553
    2. 'def' → logprob: -2.2691569328308105
    3. 'if' → logprob: -3.2691569328308105
    4. ' if' → logprob: -3.5191569328308105
    5. 'return' → logprob: -3.5191569328308105
    6. '
' → logprob: -4.3941569328308105
    7. ''' → logprob: -4.8941569328308105
    8. ' or' → logprob: -5.1441569328308105
    9. '#' → logprob: -6.2691569328308105
    10. ' return' → logprob: -6.2691569328308105

Token 1023: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014787980355322361
    2. ':' → logprob: -4.2647881507873535
    3. ':
' → logprob: -8.639787673950195
    4. ' if' → logprob: -8.764787673950195
    5. 'if' → logprob: -9.889787673950195
    6. '(' → logprob: -10.389787673950195
    7. '{' → logprob: -10.389787673950195
    8. '=' → logprob: -10.514787673950195
    9. ',' → logprob: -10.639787673950195
    10. ' :' → logprob: -11.264787673950195

Token 1024: ' vo' (ID: 778)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02613377757370472
    2. 'return' → logprob: -3.7761337757110596
    3. ' return' → logprob: -6.776134014129639
    4. ' if' → logprob: -6.901134014129639
    5. 'if' → logprob: -7.276134014129639
    6. '
' → logprob: -11.27613353729248
    7. 'for' → logprob: -11.65113353729248
    8. 'tokens' → logprob: -11.90113353729248
    9. 'first' → logprob: -12.02613353729248
    10. 'token' → logprob: -12.77613353729248

Token 1025: 'ic' (ID: 291)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.24888332188129425
    2. 'c' → logprob: -1.6238833665847778
    3. 'wel' → logprob: -4.998883247375488
    4. '   ' → logprob: -5.123883247375488
    5. 'ic' → logprob: -6.498883247375488
    6. 'owels' → logprob: -6.873883247375488
    7. '#' → logprob: -6.998883247375488
    8. 'cal' → logprob: -7.123883247375488
    9. '```' → logprob: -7.498883247375488
    10. '
' → logprob: -7.498883247375488

Token 1026: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.015160834416747093
    2. 'el' → logprob: -4.265161037445068
    3. 'e' → logprob: -7.890161037445068
    4. 'ele' → logprob: -8.14016056060791
    5. 'less' → logprob: -9.14016056060791
    6. 'eles' → logprob: -9.64016056060791
    7. 'ess' → logprob: -10.01516056060791
    8. '
' → logprob: -11.26516056060791
    9. 'elif' → logprob: -11.51516056060791
    10. '#' → logprob: -11.89016056060791

Token 1027: ' conson' (ID: 127767)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7771341800689697
    2. '_con' → logprob: -1.7771341800689697
    3. '_m' → logprob: -2.2771341800689697
    4. '   ' → logprob: -2.4021341800689697
    5. '_' → logprob: -2.7771341800689697
    6. '=' → logprob: -3.0271341800689697
    7. 'm' → logprob: -3.9021341800689697
    8. 'con' → logprob: -4.277133941650391
    9. '_c' → logprob: -5.152133941650391
    10. '_char' → logprob: -5.402133941650391

Token 1028: 'ants' (ID: 2027)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0009469495271332562
    2. 'ants' → logprob: -7.125946998596191
    3. 't' → logprob: -9.250946998596191
    4. 'a' → logprob: -10.500946998596191
    5. '_ant' → logprob: -11.375946998596191
    6. '#' → logprob: -13.375946998596191
    7. '_' → logprob: -13.500946998596191
    8. '
' → logprob: -13.875946998596191
    9. 'antt' → logprob: -14.125946998596191
    10. ''ant' → logprob: -14.750946998596191

Token 1029: ' are' (ID: 553)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5687476396560669
    2. ' =' → logprob: -1.318747639656067
    3. 'return' → logprob: -2.1937475204467773
    4. '   ' → logprob: -3.9437475204467773
    5. 'con' → logprob: -4.568747520446777
    6. 'def' → logprob: -4.693747520446777
    7. 'in' → logprob: -5.318747520446777
    8. ' in' → logprob: -6.068747520446777
    9. ' return' → logprob: -6.193747520446777
    10. 'for' → logprob: -7.193747520446777

Token 1030: ' k' (ID: 372)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.20434929430484772
    2. '{'' → logprob: -2.0793492794036865
    3. '{' → logprob: -3.4543492794036865
    4. '{k' → logprob: -4.454349517822266
    5. 'any' → logprob: -5.204349517822266
    6. 'k' → logprob: -5.329349517822266
    7. '{
' → logprob: -6.704349517822266
    8. 'vo' → logprob: -7.079349517822266
    9. 'set' → logprob: -7.454349517822266
    10. 'len' → logprob: -7.579349517822266

Token 1031: ',s' (ID: 20379)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6303457617759705
    2. 'return' → logprob: -1.6303458213806152
    3. 'def' → logprob: -1.8803458213806152
    4. '   ' → logprob: -3.3803458213806152
    5. 'if' → logprob: -4.255345821380615
    6. 'in' → logprob: -4.255345821380615
    7. '{' → logprob: -4.505345821380615
    8. ' in' → logprob: -4.880345821380615
    9. ' if' → logprob: -5.880345821380615
    10. ' and' → logprob: -6.005345821380615

Token 1032: ',t' (ID: 26927)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.9102593064308167
    2. 'return' → logprob: -1.4102592468261719
    3. '   ' → logprob: -2.410259246826172
    4. ',' → logprob: -2.660259246826172
    5. '{'' → logprob: -3.160259246826172
    6. 'et' → logprob: -3.535259246826172
    7. 'eturn' → logprob: -4.160259246826172
    8. 'or' → logprob: -4.160259246826172
    9. 'u' → logprob: -4.285259246826172
    10. 'def' → logprob: -4.285259246826172

Token 1033: ',h' (ID: 42751)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3857493996620178
    2. 'eturn' → logprob: -2.010749340057373
    3. 'return' → logprob: -2.635749340057373
    4. 'def' → logprob: -3.635749340057373
    5. ':
' → logprob: -3.885749340057373
    6. ' and' → logprob: -4.010749340057373
    7. 'if' → logprob: -4.135749340057373
    8. ' if' → logprob: -5.010749340057373
    9. ' or' → logprob: -5.010749340057373
    10. 'urn' → logprob: -5.135749340057373

Token 1034: ',p' (ID: 14835)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16158966720104218
    2. 'def' → logprob: -2.6615896224975586
    3. ':
' → logprob: -3.6615896224975586
    4. 'if' → logprob: -4.036589622497559
    5. ':' → logprob: -4.536589622497559
    6. 'return' → logprob: -6.036589622497559
    7. 'm' → logprob: -6.036589622497559
    8. '):
' → logprob: -6.286589622497559
    9. 'con' → logprob: -6.411589622497559
    10. ' and' → logprob: -6.411589622497559

Token 1035: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2802810072898865
    2. ':' → logprob: -1.5302810668945312
    3. ':
' → logprob: -5.155281066894531
    4. '=' → logprob: -5.655281066894531
    5. 'return' → logprob: -5.780281066894531
    6. '):' → logprob: -5.780281066894531
    7. ' =' → logprob: -6.155281066894531
    8. 'def' → logprob: -6.155281066894531
    9. 'm' → logprob: -6.405281066894531
    10. '_con' → logprob: -6.905281066894531

Token 1036: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020985817536711693
    2. 'return' → logprob: -9.00020980834961
    3. ':' → logprob: -9.87520980834961
    4. ' if' → logprob: -11.50020980834961
    5. ' return' → logprob: -11.50020980834961
    6. 'if' → logprob: -12.00020980834961
    7. ':
' → logprob: -12.87520980834961
    8. 'def' → logprob: -14.25020980834961
    9. '=' → logprob: -14.50020980834961
    10. ',' → logprob: -14.62520980834961

Token 1037: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14551326632499695
    2. '   ' → logprob: -2.3955132961273193
    3. 'if' → logprob: -3.1455132961273193
    4. ' return' → logprob: -7.27051305770874
    5. 'first' → logprob: -8.770513534545898
    6. 'con' → logprob: -8.895513534545898
    7. ' if' → logprob: -9.020513534545898
    8. 'c' → logprob: -10.145513534545898
    9. 'prefix' → logprob: -10.645513534545898
    10. 'for' → logprob: -10.645513534545898

Token 1038: ' '' (ID: 461)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3201117217540741
    2. 'if' → logprob: -1.3201117515563965
    3. 'first' → logprob: -5.3201117515563965
    4. '   ' → logprob: -7.0701117515563965
    5. 'for' → logprob: -7.8201117515563965
    6. 'con' → logprob: -8.070111274719238
    7. 'base' → logprob: -9.195111274719238
    8. 'root' → logprob: -9.570111274719238
    9. 'initial' → logprob: -9.695111274719238
    10. ' return' → logprob: -9.820111274719238

Token 1039: 'ky' (ID: 5781)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.44814348220825195
    2. 'if' → logprob: -1.073143482208252
    3. 'first' → logprob: -4.073143482208252
    4. 'con' → logprob: -6.948143482208252
    5. 'base' → logprob: -7.948143482208252
    6. '#' → logprob: -8.573143005371094
    7. 'initial' → logprob: -8.698143005371094
    8. 'root' → logprob: -8.823143005371094
    9. 'c' → logprob: -9.073143005371094
    10. 'for' → logprob: -9.573143005371094

Token 1040: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0446218252182007
    2. 'u' → logprob: -1.2946218252182007
    3. ''' → logprob: -1.6696218252182007
    4. '')' → logprob: -2.1696219444274902
    5. 'o' → logprob: -3.1696219444274902
    6. 'm' → logprob: -4.04462194442749
    7. 'ra' → logprob: -6.41962194442749
    8. ''u' → logprob: -6.54462194442749
    9. '''' → logprob: -7.16962194442749
    10. '   ' → logprob: -7.16962194442749

Token 1041: ' is' (ID: 382)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9608773589134216
    2. 'in' → logprob: -1.0858774185180664
    3. ''' → logprob: -1.4608774185180664
    4. 'startswith' → logprob: -3.5858774185180664
    5. '.startswith' → logprob: -5.210877418518066
    6. 'y' → logprob: -5.585877418518066
    7. '   ' → logprob: -5.960877418518066
    8. 'i' → logprob: -6.335877418518066
    9. ' ' → logprob: -6.835877418518066
    10. '')' → logprob: -7.085877418518066

Token 1042: ' considered' (ID: 9474)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10429346561431885
    2. 'True' → logprob: -2.4792933464050293
    3. ' True' → logprob: -5.229293346405029
    4. '   ' → logprob: -5.604293346405029
    5. 'False' → logprob: -6.604293346405029
    6. ' mora' → logprob: -6.729293346405029
    7. ' ' → logprob: -7.729293346405029
    8. 'k' → logprob: -8.104293823242188
    9. 'return' → logprob: -8.229293823242188
    10. 'in' → logprob: -8.229293823242188

Token 1043: ' vo' (ID: 778)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1305806636810303
    2. '(m' → logprob: -1.1305806636810303
    3. 'm' → logprob: -2.1305806636810303
    4. '   ' → logprob: -3.0055806636810303
    5. 'return' → logprob: -3.6305806636810303
    6. 'in' → logprob: -4.005580902099609
    7. 'if' → logprob: -4.130580902099609
    8. '_' → logprob: -4.255580902099609
    9. '('' → logprob: -4.630580902099609
    10. ' in' → logprob: -4.630580902099609

Token 1044: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.000803672184702009
    2. 'ice' → logprob: -8.37580394744873
    3. 'icelo' → logprob: -8.87580394744873
    4. '```' → logprob: -9.25080394744873
    5. '``' → logprob: -9.75080394744873
    6. '#' → logprob: -10.12580394744873
    7. 'i' → logprob: -10.37580394744873
    8. ''' → logprob: -10.87580394744873
    9. '`' → logprob: -11.00080394744873
    10. 'icemail' → logprob: -11.25080394744873

Token 1045: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.0022925175726413727
    2. 'less' → logprob: -6.627292633056641
    3. 'el' → logprob: -7.502292633056641
    4. 'ele' → logprob: -8.25229263305664
    5. 'e' → logprob: -9.25229263305664
    6. 'eles' → logprob: -10.62729263305664
    7. 'le' → logprob: -11.25229263305664
    8. 'ess' → logprob: -12.12729263305664
    9. 'k' → logprob: -12.37729263305664
    10. 'ed' → logprob: -13.62729263305664

Token 1046: ' conson' (ID: 127767)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7798879146575928
    2. 'def' → logprob: -0.9048879146575928
    3. ':
' → logprob: -2.4048879146575928
    4. ':' → logprob: -4.279888153076172
    5. 'first' → logprob: -4.404888153076172
    6. 'if' → logprob: -4.529888153076172
    7. 'con' → logprob: -5.779888153076172
    8. ' if' → logprob: -7.154888153076172
    9. '):
' → logprob: -7.529888153076172
    10. 'm' → logprob: -7.779888153076172

Token 1047: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.10070962458848953
    2. 't' → logprob: -2.3507096767425537
    3. 'a' → logprob: -7.850709438323975
    4. '_t' → logprob: -10.350709915161133
    5. '
' → logprob: -10.850709915161133
    6. 'tant' → logprob: -10.975709915161133
    7. 'nt' → logprob: -11.350709915161133
    8. '_' → logprob: -11.725709915161133
    9. '_ant' → logprob: -12.100709915161133
    10. '   ' → logprob: -12.225709915161133

Token 1048: ' also' (ID: 1217)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.85347980260849
    2. '):' → logprob: -1.9784798622131348
    3. '   ' → logprob: -2.1034798622131348
    4. ':' → logprob: -2.6034798622131348
    5. ':
' → logprob: -2.7284798622131348
    6. 'if' → logprob: -3.1034798622131348
    7. '):
' → logprob: -3.3534798622131348
    8. ' =' → logprob: -3.8534798622131348
    9. 'm' → logprob: -3.9784798622131348
    10. 's' → logprob: -4.728479862213135

Token 1049: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6885432004928589
    2. '   ' → logprob: -0.9385432004928589
    3. ':' → logprob: -2.9385433197021484
    4. ':
' → logprob: -3.1885433197021484
    5. 'm' → logprob: -5.438543319702148
    6. 's' → logprob: -6.438543319702148
    7. '):' → logprob: -6.938543319702148
    8. ' =' → logprob: -7.313543319702148
    9. '):
' → logprob: -7.313543319702148
    10. 'if' → logprob: -7.563543319702148

Token 1050: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0071646543219685555
    2. 'if' → logprob: -6.382164478302002
    3. 'prefix' → logprob: -6.507164478302002
    4. 'def' → logprob: -6.632164478302002
    5. 'con' → logprob: -6.882164478302002
    6. ':
' → logprob: -7.382164478302002
    7. ' if' → logprob: -8.00716495513916
    8. ':' → logprob: -8.38216495513916
    9. 'first' → logprob: -9.00716495513916
    10. 'return' → logprob: -9.13216495513916

Token 1051: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8643892407417297
    2. 'if' → logprob: -0.8643892407417297
    3. 'prefix' → logprob: -2.114389181137085
    4. 'return' → logprob: -4.114389419555664
    5. 'con' → logprob: -4.989389419555664
    6. ' if' → logprob: -5.364389419555664
    7. 'first' → logprob: -5.614389419555664
    8. 'for' → logprob: -6.114389419555664
    9. 'base' → logprob: -6.864389419555664
    10. 'c' → logprob: -7.364389419555664

Token 1052: ' So' (ID: 2632)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13421952724456787
    2. 'return' → logprob: -2.6342196464538574
    3. 'first' → logprob: -3.2592196464538574
    4. 'base' → logprob: -5.009219646453857
    5. 'prefix' → logprob: -5.759219646453857
    6. 'con' → logprob: -6.134219646453857
    7. 'cons' → logprob: -6.634219646453857
    8. 'initial' → logprob: -7.259219646453857
    9. '   ' → logprob: -7.759219646453857
    10. 'root' → logprob: -7.884219646453857

Token 1053: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.027323570102453232
    2. 'return' → logprob: -4.5273237228393555
    3. '   ' → logprob: -4.7773237228393555
    4. 'first' → logprob: -5.5273237228393555
    5. ' if' → logprob: -6.1523237228393555
    6. 'con' → logprob: -7.2773237228393555
    7. 'prefix' → logprob: -8.527323722839355
    8. 'c' → logprob: -8.527323722839355
    9. 'root' → logprob: -8.902323722839355
    10. 'base' → logprob: -9.777323722839355

Token 1054: ' mora' (ID: 47294)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5966524481773376
    2. 'm' → logprob: -0.8466524481773376
    3. 'for' → logprob: -4.721652507781982
    4. 'return' → logprob: -5.721652507781982
    5. '=' → logprob: -5.971652507781982
    6. ' if' → logprob: -6.471652507781982
    7. '=m' → logprob: -7.096652507781982
    8. '   ' → logprob: -7.221652507781982
    9. 'con' → logprob: -7.221652507781982
    10. 'c' → logprob: -7.596652507781982

Token 1055: ' start' (ID: 1604)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740898013114929
    2. '_c' → logprob: -1.8490898609161377
    3. '=' → logprob: -2.5990898609161377
    4. 'if' → logprob: -3.2240898609161377
    5. '_con' → logprob: -3.5990898609161377
    6. 'con' → logprob: -4.099089622497559
    7. '_prefix' → logprob: -4.474089622497559
    8. 'c' → logprob: -5.099089622497559
    9. '_first' → logprob: -5.099089622497559
    10. 'def' → logprob: -5.099089622497559

Token 1056: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.6912388205528259
    2. '=' → logprob: -1.1912388801574707
    3. 's' → logprob: -1.9412388801574707
    4. 'm' → logprob: -4.441238880157471
    5. ' =' → logprob: -4.566238880157471
    6. 'if' → logprob: -4.566238880157471
    7. '=m' → logprob: -4.566238880157471
    8. 'ing' → logprob: -5.316238880157471
    9. 'startswith' → logprob: -7.191238880157471
    10. '   ' → logprob: -7.816238880157471

Token 1057: ' one' (ID: 1001)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.16833260655403137
    2. 'any' → logprob: -2.043332576751709
    3. 'tuple' → logprob: -3.918332576751709
    4. 'for' → logprob: -5.793332576751709
    5. '(tuple' → logprob: -7.293332576751709
    6. '(' → logprob: -7.418332576751709
    7. 'if' → logprob: -8.168333053588867
    8. 'VOICE' → logprob: -8.543333053588867
    9. ' any' → logprob: -9.043333053588867
    10. 'a' → logprob: -9.043333053588867

Token 1058: ' of' (ID: 328)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.022456882521510124
    2. 'if' → logprob: -4.147456645965576
    3. ' if' → logprob: -5.397456645965576
    4. 'len' → logprob: -7.897456645965576
    5. ' of' → logprob: -8.522457122802734
    6. ' m' → logprob: -8.647457122802734
    7. 'k' → logprob: -9.022457122802734
    8. 'mo' → logprob: -9.022457122802734
    9. 'of' → logprob: -9.147457122802734
    10. '(m' → logprob: -9.272457122802734

Token 1059: ' vo' (ID: 778)
  Prédit: 'VOICE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'VOICE' → logprob: -0.013142470270395279
    2. 'VO' → logprob: -4.7631425857543945
    3. '{'' → logprob: -6.2631425857543945
    4. ' VO' → logprob: -6.5131425857543945
    5. '('' → logprob: -7.0131425857543945
    6. 'VOC' → logprob: -9.638142585754395
    7. ''' → logprob: -10.138142585754395
    8. 'V' → logprob: -10.263142585754395
    9. '(' → logprob: -10.638142585754395
    10. '{' → logprob: -10.763142585754395

Token 1060: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.04949710890650749
    2. 'i' → logprob: -3.299497127532959
    3. 'ice' → logprob: -5.549497127532959
    4. 'c' → logprob: -6.549497127532959
    5. 'cl' → logprob: -6.924497127532959
    6. '``' → logprob: -7.424497127532959
    7. 'icelo' → logprob: -7.674497127532959
    8. '{' → logprob: -7.799497127532959
    9. 'icl' → logprob: -7.799497127532959
    10. '
' → logprob: -7.924497127532959

Token 1061: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.0005968777113594115
    2. 'el' → logprob: -7.50059700012207
    3. 'ele' → logprob: -10.50059700012207
    4. 'less' → logprob: -11.75059700012207
    5. 'e' → logprob: -12.12559700012207
    6. 'eles' → logprob: -13.62559700012207
    7. 'ess' → logprob: -13.87559700012207
    8. '
' → logprob: -15.00059700012207
    9. 'ed' → logprob: -16.00059700012207
    10. 'els' → logprob: -16.12559700012207

Token 1062: ' conson' (ID: 127767)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43521252274513245
    2. '_con' → logprob: -1.18521249294281
    3. 'm' → logprob: -3.6852126121520996
    4. '_m' → logprob: -4.9352126121521
    5. 'con' → logprob: -5.4352126121521
    6. '_CON' → logprob: -5.4352126121521
    7. 'CON' → logprob: -6.1852126121521
    8. 's' → logprob: -7.1852126121521
    9. '_
' → logprob: -7.6852126121521
    10. ' conson' → logprob: -8.185212135314941

Token 1063: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -6.456358823925257e-05
    2. 'ant' → logprob: -10.625064849853516
    3. 'ts' → logprob: -11.125064849853516
    4. 'a' → logprob: -11.750064849853516
    5. 't' → logprob: -11.875064849853516
    6. 'nts' → logprob: -12.375064849853516
    7. 'ats' → logprob: -12.625064849853516
    8. 'ANTS' → logprob: -13.625064849853516
    9. '{' → logprob: -14.000064849853516
    10. '_' → logprob: -15.375064849853516

Token 1064: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1376067399978638
    2. '   ' → logprob: -1.6376067399978638
    3. ' =' → logprob: -2.387606620788574
    4. ':' → logprob: -2.387606620788574
    5. 'if' → logprob: -2.637606620788574
    6. '=' → logprob: -2.637606620788574
    7. 'and' → logprob: -3.137606620788574
    8. ' and' → logprob: -3.262606620788574
    9. 'in' → logprob: -4.012606620788574
    10. '(' → logprob: -4.637606620788574

Token 1065: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024285749532282352
    2. 'return' → logprob: -6.8774285316467285
    3. ' if' → logprob: -7.2524285316467285
    4. 'if' → logprob: -7.7524285316467285
    5. ' return' → logprob: -8.627429008483887
    6. 'for' → logprob: -10.127429008483887
    7. ' for' → logprob: -11.377429008483887
    8. 'def' → logprob: -11.502429008483887
    9. 'v' → logprob: -12.377429008483887
    10. '```' → logprob: -12.502429008483887

Token 1066: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09193875640630722
    2. 'return' → logprob: -2.5919387340545654
    3. ' return' → logprob: -4.5919389724731445
    4. ' if' → logprob: -6.4669389724731445
    5. 'if' → logprob: -6.7169389724731445
    6. 'for' → logprob: -9.966938972473145
    7. ' for' → logprob: -11.091938972473145
    8. '	return' → logprob: -12.841938972473145
    9. ' ' → logprob: -14.091938972473145
    10. '  ' → logprob: -15.091938972473145

Token 1067: ' If' (ID: 1843)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0277215875685215
    2. 'if' → logprob: -4.152721405029297
    3. '   ' → logprob: -5.277721405029297
    4. 'for' → logprob: -5.527721405029297
    5. ' return' → logprob: -6.027721405029297
    6. ' if' → logprob: -9.277721405029297
    7. ' for' → logprob: -10.527721405029297
    8. 'm' → logprob: -12.652721405029297
    9. '	return' → logprob: -13.652721405029297
    10. 'startswith' → logprob: -14.027721405029297

Token 1068: ' it's' (ID: 4275)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.026229936629533768
    2. 'len' → logprob: -3.7762298583984375
    3. ' mora' → logprob: -5.9012298583984375
    4. ' len' → logprob: -9.151229858398438
    5. ' ' → logprob: -9.776229858398438
    6. '   ' → logprob: -10.651229858398438
    7. ' Mora' → logprob: -11.276229858398438
    8. 'mor' → logprob: -11.526229858398438
    9. '  ' → logprob: -12.151229858398438
    10. '(len' → logprob: -12.401229858398438

Token 1069: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1271619200706482
    2. 'len' → logprob: -2.127161979675293
    3. 'not' → logprob: -9.002161979675293
    4. ' len' → logprob: -10.252161979675293
    5. '(len' → logprob: -10.252161979675293
    6. ' mora' → logprob: -11.002161979675293
    7. ' ' → logprob: -12.627161979675293
    8. '   ' → logprob: -12.627161979675293
    9. '(m' → logprob: -12.877161979675293
    10. '(' → logprob: -13.127161979675293

Token 1070: '1' (ID: 16)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.16042061150074005
    2. 'len' → logprob: -1.9104206562042236
    3. ' len' → logprob: -9.410420417785645
    4. '(len' → logprob: -9.910420417785645
    5. 'any' → logprob: -11.160420417785645
    6. 'not' → logprob: -11.535420417785645
    7. ' mora' → logprob: -11.535420417785645
    8. ' m' → logprob: -12.035420417785645
    9. '(m' → logprob: -12.785420417785645
    10. '(' → logprob: -12.785420417785645

Token 1071: ' char' (ID: 1826)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7068353295326233
    2. ' if' → logprob: -1.5818352699279785
    3. 'if' → logprob: -1.8318352699279785
    4. ' and' → logprob: -2.5818352699279785
    5. ' len' → logprob: -3.9568352699279785
    6. 'm' → logprob: -4.4568352699279785
    7. ' in' → logprob: -4.7068352699279785
    8. 'def' → logprob: -5.5818352699279785
    9. '<len' → logprob: -5.5818352699279785
    10. 'and' → logprob: -5.9568352699279785

Token 1072: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2576538026332855
    2. 'and' → logprob: -2.6326537132263184
    3. ':' → logprob: -2.7576537132263184
    4. '==' → logprob: -4.007653713226318
    5. ':
' → logprob: -4.257653713226318
    6. ' ==' → logprob: -4.257653713226318
    7. 'if' → logprob: -4.382653713226318
    8. ' if' → logprob: -4.757653713226318
    9. 's' → logprob: -5.382653713226318
    10. '=' → logprob: -5.507653713226318

Token 1073: ' in' (ID: 306)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -7.886803359724581e-05
    2. 'len' → logprob: -9.750079154968262
    3. ' mora' → logprob: -10.875079154968262
    4. '   ' → logprob: -14.250079154968262
    5. ' ' → logprob: -15.125079154968262
    6. '	m' → logprob: -16.000078201293945
    7. 'mor' → logprob: -16.375078201293945
    8. '  ' → logprob: -17.000078201293945
    9. '
' → logprob: -17.125078201293945
    10. ' m' → logprob: -17.125078201293945

Token 1074: ' vo' (ID: 778)
  Prédit: 'VOICE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'VOICE' → logprob: -0.008199998177587986
    2. 'V' → logprob: -5.508200168609619
    3. 'VO' → logprob: -5.508200168609619
    4. ' VO' → logprob: -10.633199691772461
    5. ' V' → logprob: -10.633199691772461
    6. 'VOC' → logprob: -12.133199691772461
    7. '{' → logprob: -13.008199691772461
    8. '{'' → logprob: -13.008199691772461
    9. '```' → logprob: -14.383199691772461
    10. ''' → logprob: -14.883199691772461

Token 1075: 'ic' (ID: 291)
  Prédit: 'ICE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ICE' → logprob: -0.2384270578622818
    2. 'ic' → logprob: -2.23842716217041
    3. 'ICLE' → logprob: -3.23842716217041
    4. 'OICE' → logprob: -4.36342716217041
    5. 'ICENSE' → logprob: -4.86342716217041
    6. 'ICEF' → logprob: -4.98842716217041
    7. 'IC' → logprob: -4.98842716217041
    8. '``' → logprob: -5.61342716217041
    9. 'icelo' → logprob: -5.61342716217041
    10. '```' → logprob: -5.73842716217041

Token 1076: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.0005216968129388988
    2. 'el' → logprob: -8.000521659851074
    3. 'ele' → logprob: -8.750521659851074
    4. 'e' → logprob: -11.625521659851074
    5. 'ELE' → logprob: -11.875521659851074
    6. 'E' → logprob: -12.500521659851074
    7. 'EL' → logprob: -13.250521659851074
    8. 'less' → logprob: -13.375521659851074
    9. '
' → logprob: -13.625521659851074
    10. 'heless' → logprob: -14.250521659851074

Token 1077: ' conson' (ID: 127767)
  Prédit: '_CON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_CON' → logprob: -0.8967525959014893
    2. '_' → logprob: -1.0217525959014893
    3. '_con' → logprob: -2.1467525959014893
    4. 'CON' → logprob: -2.6467525959014893
    5. 'm' → logprob: -4.89675235748291
    6. '
' → logprob: -4.89675235748291
    7. 's' → logprob: -4.89675235748291
    8. '_m' → logprob: -6.02175235748291
    9. '_
' → logprob: -6.02175235748291
    10. 'con' → logprob: -6.27175235748291

Token 1078: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.003115561092272401
    2. 'ANTS' → logprob: -5.878115653991699
    3. 'ts' → logprob: -8.2531156539917
    4. '_' → logprob: -10.8781156539917
    5. 't' → logprob: -11.6281156539917
    6. '
' → logprob: -11.7531156539917
    7. 'nts' → logprob: -12.6281156539917
    8. 'ats' → logprob: -12.8781156539917
    9. 's' → logprob: -12.8781156539917
    10. '_ts' → logprob: -13.5031156539917

Token 1079: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4517977237701416
    2. ' and' → logprob: -1.4517977237701416
    3. '   ' → logprob: -2.7017977237701416
    4. 'and' → logprob: -4.0767974853515625
    5. ' or' → logprob: -4.0767974853515625
    6. 'if' → logprob: -4.7017974853515625
    7. ':
' → logprob: -4.7017974853515625
    8. ' if' → logprob: -5.4517974853515625
    9. ',' → logprob: -6.3267974853515625
    10. '       ' → logprob: -6.9517974853515625

Token 1080: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2629757523536682
    2. 'if' → logprob: -2.0129756927490234
    3. 'return' → logprob: -2.6379756927490234
    4. ' if' → logprob: -3.7629756927490234
    5. ' return' → logprob: -6.012975692749023
    6. '       ' → logprob: -7.887975692749023
    7. ' ' → logprob: -9.512975692749023
    8. '    ' → logprob: -11.387975692749023
    9. '  ' → logprob: -11.887975692749023
    10. '```' → logprob: -12.137975692749023

Token 1081: 'k' (ID: 74)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0007463791989721358
    2. 'if' → logprob: -7.500746250152588
    3. 'return' → logprob: -9.750746726989746
    4. '   ' → logprob: -9.750746726989746
    5. 'vo' → logprob: -11.000746726989746
    6. 'len' → logprob: -11.375746726989746
    7. 'c' → logprob: -11.750746726989746
    8. ' ' → logprob: -12.375746726989746
    9. 'v' → logprob: -12.500746726989746
    10. ''' → logprob: -12.688246726989746

Token 1082: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.023213911801576614
    2. '')' → logprob: -4.023213863372803
    3. ''or' → logprob: -6.148213863372803
    4. ' or' → logprob: -6.648213863372803
    5. 'or' → logprob: -7.898213863372803
    6. ''''' → logprob: -8.398214340209961
    7. 'if' → logprob: -8.773214340209961
    8. '',' → logprob: -9.398214340209961
    9. ''),' → logprob: -9.773214340209961
    10. 'm' → logprob: -9.898214340209961

Token 1083: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010133320465683937
    2. ''s' → logprob: -5.135133266448975
    3. ''' → logprob: -5.510133266448975
    4. '')' → logprob: -9.135133743286133
    5. 't' → logprob: -10.510133743286133
    6. ')' → logprob: -12.510133743286133
    7. ''''' → logprob: -13.260133743286133
    8. 'p' → logprob: -13.385133743286133
    9. '`s' → logprob: -13.510133743286133
    10. ''t' → logprob: -13.760133743286133

Token 1084: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3726494610309601
    2. '',' → logprob: -1.8726494312286377
    3. '','' → logprob: -1.9976494312286377
    4. ''
' → logprob: -4.622649669647217
    5. '')' → logprob: -5.497649669647217
    6. '',
' → logprob: -6.122649669647217
    7. 't' → logprob: -6.997649669647217
    8. ','' → logprob: -6.997649669647217
    9. '
' → logprob: -7.247649669647217
    10. ''}' → logprob: -7.372649669647217

Token 1085: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -3.7697225252486533e-06
    2. ''t' → logprob: -12.625003814697266
    3. ''' → logprob: -15.125003814697266
    4. 'p' → logprob: -16.125003814697266
    5. ' t' → logprob: -17.125003814697266
    6. 'n' → logprob: -17.500003814697266
    7. '	t' → logprob: -18.375003814697266
    8. '`t' → logprob: -18.875003814697266
    9. ''''' → logprob: -19.000003814697266
    10. ' ' → logprob: -19.250003814697266

Token 1086: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.11117585003376007
    2. '',' → logprob: -2.361175775527954
    3. ''' → logprob: -4.736176013946533
    4. ''}' → logprob: -7.736176013946533
    5. ''}
' → logprob: -7.861176013946533
    6. '')' → logprob: -7.986176013946533
    7. ',' → logprob: -7.986176013946533
    8. ','' → logprob: -8.111175537109375
    9. '}' → logprob: -9.736175537109375
    10. '',
' → logprob: -10.111175537109375

Token 1087: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0010638902895152569
    2. 'p' → logprob: -7.501063823699951
    3. ''' → logprob: -7.876063823699951
    4. ''h' → logprob: -9.25106430053711
    5. '')' → logprob: -10.37606430053711
    6. 'o' → logprob: -13.62606430053711
    7. ')' → logprob: -14.87606430053711
    8. ''''' → logprob: -15.00106430053711
    9. 'a' → logprob: -15.12606430053711
    10. 'n' → logprob: -15.37606430053711

Token 1088: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6892816424369812
    2. ''}' → logprob: -1.439281702041626
    3. '','' → logprob: -2.689281702041626
    4. '}' → logprob: -2.689281702041626
    5. '',' → logprob: -3.064281702041626
    6. ','' → logprob: -3.689281702041626
    7. '')' → logprob: -3.689281702041626
    8. '}'' → logprob: -4.439281463623047
    9. ''}
' → logprob: -4.814281463623047
    10. ',' → logprob: -5.314281463623047

Token 1089: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00011963568249484524
    2. ''p' → logprob: -9.12511920928955
    3. ''' → logprob: -11.75011920928955
    4. ' p' → logprob: -13.50011920928955
    5. '
' → logprob: -14.75011920928955
    6. '`' → logprob: -16.437620162963867
    7. '```' → logprob: -16.437620162963867
    8. '{'' → logprob: -16.500120162963867
    9. ''''
' → logprob: -16.625120162963867
    10. '')' → logprob: -16.687620162963867

Token 1090: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7914401888847351
    2. '}' → logprob: -1.4164402484893799
    3. ''' → logprob: -1.6664402484893799
    4. ':' → logprob: -2.66644024848938
    5. '')' → logprob: -3.79144024848938
    6. ':
' → logprob: -5.291440010070801
    7. '}'' → logprob: -5.416440010070801
    8. ''}' → logprob: -5.416440010070801
    9. ' or' → logprob: -6.666440010070801
    10. '):
' → logprob: -6.916440010070801

Token 1091: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006245753262192011
    2. ' if' → logprob: -6.2562456130981445
    3. ':' → logprob: -6.3812456130981445
    4. ' and' → logprob: -6.7562456130981445
    5. 'if' → logprob: -7.2562456130981445
    6. 'and' → logprob: -8.006245613098145
    7. 'return' → logprob: -8.756245613098145
    8. ' or' → logprob: -9.506245613098145
    9. 'def' → logprob: -9.506245613098145
    10. ',' → logprob: -10.131245613098145

Token 1092: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42050206661224365
    2. 'if' → logprob: -1.4205020666122437
    3. ' if' → logprob: -2.295502185821533
    4. 'def' → logprob: -7.545502185821533
    5. ':' → logprob: -8.545501708984375
    6. 'return' → logprob: -9.045501708984375
    7. ' ' → logprob: -10.670501708984375
    8. ' and' → logprob: -10.795501708984375
    9. ',' → logprob: -11.045501708984375
    10. '	if' → logprob: -11.170501708984375

Token 1093: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05274578183889389
    2. ' if' → logprob: -3.552745819091797
    3. '   ' → logprob: -3.802745819091797
    4. 'return' → logprob: -7.802745819091797
    5. 'def' → logprob: -12.052745819091797
    6. ' return' → logprob: -12.427745819091797
    7. '```' → logprob: -12.927745819091797
    8. ' ' → logprob: -13.927745819091797
    9. '
' → logprob: -14.927745819091797
    10. 'for' → logprob: -15.052745819091797

Token 1094: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.009557036682963371
    2. ' len' → logprob: -5.009557247161865
    3. 'm' → logprob: -6.009557247161865
    4. '(len' → logprob: -8.634556770324707
    5. ' ' → logprob: -9.009556770324707
    6. ' mora' → logprob: -10.509556770324707
    7. '  ' → logprob: -11.134556770324707
    8. '   ' → logprob: -11.134556770324707
    9. '	len' → logprob: -11.634556770324707
    10. '
' → logprob: -12.259556770324707

Token 1095: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.004757749382406473
    2. 'm' → logprob: -5.379757881164551
    3. '(len' → logprob: -9.62975788116455
    4. ' len' → logprob: -9.75475788116455
    5. '   ' → logprob: -12.25475788116455
    6. ' ' → logprob: -13.00475788116455
    7. 'length' → logprob: -13.62975788116455
    8. '	len' → logprob: -13.62975788116455
    9. '(m' → logprob: -14.00475788116455
    10. '  ' → logprob: -14.25475788116455

Token 1096: ' or' (ID: 503)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.14390353858470917
    2. ' len' → logprob: -3.0189034938812256
    3. 'if' → logprob: -4.018903732299805
    4. ' if' → logprob: -4.018903732299805
    5. 'm' → logprob: -4.143903732299805
    6. ' and' → logprob: -4.268903732299805
    7. '==' → logprob: -5.268903732299805
    8. ' ==' → logprob: -5.893903732299805
    9. 'and' → logprob: -6.143903732299805
    10. '<len' → logprob: -6.268903732299805

Token 1097: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0007604343118146062
    2. '1' → logprob: -8.000760078430176
    3. 'len' → logprob: -8.250760078430176
    4. '0' → logprob: -9.125760078430176
    5. 'more' → logprob: -10.750760078430176
    6. ' ' → logprob: -10.750760078430176
    7. '2' → logprob: -12.500760078430176
    8. ' more' → logprob: -13.750760078430176
    9. 's' → logprob: -13.875760078430176
    10. '
' → logprob: -14.000760078430176

Token 1098: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0280383548888494e-06
    2. '1' → logprob: -14.375000953674316
    3. 'more' → logprob: -15.250000953674316
    4. '0' → logprob: -16.625001907348633
    5. '4' → logprob: -17.875001907348633
    6. ' ' → logprob: -18.250001907348633
    7. '３' → logprob: -20.125001907348633
    8. '...' → logprob: -20.500001907348633
    9. '```' → logprob: -20.875001907348633
    10. ' more' → logprob: -21.125001907348633

Token 1099: ' char' (ID: 1826)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.695301353931427
    2. ' if' → logprob: -1.8203012943267822
    3. 'def' → logprob: -2.0703012943267822
    4. ':' → logprob: -2.9453012943267822
    5. ' and' → logprob: -2.9453012943267822
    6. '_' → logprob: -3.5703012943267822
    7. 'm' → logprob: -4.195301532745361
    8. '(m' → logprob: -4.195301532745361
    9. 'len' → logprob: -4.820301532745361
    10. '_len' → logprob: -5.195301532745361

Token 1100: ' mora' (ID: 47294)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9821943044662476
    2. 'def' → logprob: -1.7321943044662476
    3. ':' → logprob: -1.8571943044662476
    4. '   ' → logprob: -2.107194423675537
    5. 'if' → logprob: -2.482194423675537
    6. ':
' → logprob: -2.982194423675537
    7. 'm' → logprob: -4.607194423675537
    8. ' =' → logprob: -5.107194423675537
    9. '=' → logprob: -5.857194423675537
    10. 's' → logprob: -6.107194423675537

Token 1101: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17872710525989532
    2. ':
' → logprob: -2.303727149963379
    3. ' and' → logprob: -3.428727149963379
    4. '[' → logprob: -4.803727149963379
    5. '   ' → logprob: -5.053727149963379
    6. ' if' → logprob: -5.678727149963379
    7. 'and' → logprob: -6.053727149963379
    8. 'if' → logprob: -6.053727149963379
    9. 'def' → logprob: -6.303727149963379
    10. '=' → logprob: -6.678727149963379

Token 1102: ' first' (ID: 1577)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.27587512135505676
    2. 'if' → logprob: -2.2758750915527344
    3. 'm' → logprob: -2.9008750915527344
    4. ' return' → logprob: -3.6508750915527344
    5. ' mora' → logprob: -3.7758750915527344
    6. 'return' → logprob: -4.025875091552734
    7. ' mor' → logprob: -4.900875091552734
    8. '   ' → logprob: -5.025875091552734
    9. ' m' → logprob: -6.525875091552734
    10. 'mor' → logprob: -7.775875091552734

Token 1103: ' char' (ID: 1826)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.7476356029510498
    2. 'm' → logprob: -1.6226356029510498
    3. '=' → logprob: -1.9976356029510498
    4. '_char' → logprob: -2.99763560295105
    5. 'if' → logprob: -3.24763560295105
    6. 'token' → logprob: -3.49763560295105
    7. 'character' → logprob: -4.497635841369629
    8. ' =' → logprob: -4.497635841369629
    9. 'in' → logprob: -4.622635841369629
    10. ')' → logprob: -5.247635841369629

Token 1104: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12812742590904236
    2. ' in' → logprob: -2.878127336502075
    3. '=' → logprob: -3.878127336502075
    4. '==' → logprob: -4.128127574920654
    5. '.startswith' → logprob: -5.253127574920654
    6. ' =' → logprob: -5.378127574920654
    7. ')' → logprob: -5.628127574920654
    8. 'startswith' → logprob: -5.878127574920654
    9. 'if' → logprob: -6.003127574920654
    10. '[' → logprob: -6.503127574920654

Token 1105: ' vo' (ID: 778)
  Prédit: 'VOICE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'VOICE' → logprob: -0.0007743701571598649
    2. 'VO' → logprob: -7.875774383544922
    3. ' VO' → logprob: -8.000774383544922
    4. 'V' → logprob: -10.000774383544922
    5. ' V' → logprob: -11.500774383544922
    6. '`' → logprob: -13.875774383544922
    7. ''' → logprob: -14.000774383544922
    8. '```' → logprob: -14.500774383544922
    9. 'VOC' → logprob: -14.500774383544922
    10. '{'' → logprob: -15.625774383544922

Token 1106: 'ic' (ID: 291)
  Prédit: 'ICE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ICE' → logprob: -0.16542863845825195
    2. 'ICLE' → logprob: -2.540428638458252
    3. 'IC' → logprob: -3.040428638458252
    4. 'ic' → logprob: -4.165428638458252
    5. 'I' → logprob: -6.165428638458252
    6. 'ICEF' → logprob: -6.290428638458252
    7. 'ICENSE' → logprob: -6.540428638458252
    8. 'ILE' → logprob: -6.790428638458252
    9. 'OICE' → logprob: -6.790428638458252
    10. 'ICLES' → logprob: -7.915428638458252

Token 1107: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -5.466968650580384e-05
    2. 'el' → logprob: -11.125054359436035
    3. 'e' → logprob: -11.375054359436035
    4. 'EL' → logprob: -12.125054359436035
    5. 'ELE' → logprob: -12.250054359436035
    6. 'E' → logprob: -12.375054359436035
    7. 'eles' → logprob: -12.750054359436035
    8. 'ess' → logprob: -12.750054359436035
    9. 'ele' → logprob: -13.125054359436035
    10. '
' → logprob: -13.625054359436035

Token 1108: ' conson' (ID: 127767)
  Prédit: '_con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.06826389580965042
    2. 'con' → logprob: -3.9432640075683594
    3. '_CON' → logprob: -3.9432640075683594
    4. 'm' → logprob: -4.193264007568359
    5. 'CON' → logprob: -5.443264007568359
    6. 's' → logprob: -6.068264007568359
    7. '_' → logprob: -6.068264007568359
    8. ')' → logprob: -7.068264007568359
    9. '_m' → logprob: -7.193264007568359
    10. '(m' → logprob: -7.693264007568359

Token 1109: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.02057703770697117
    2. 'ANTS' → logprob: -3.8955769538879395
    3. 'ts' → logprob: -11.395577430725098
    4. '
' → logprob: -12.145577430725098
    5. 'ats' → logprob: -12.520577430725098
    6. 't' → logprob: -12.895577430725098
    7. '{' → logprob: -13.020577430725098
    8. '   ' → logprob: -13.270577430725098
    9. 'nants' → logprob: -13.645577430725098
    10. 'nts' → logprob: -13.645577430725098

Token 1110: ' and' (ID: 326)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.04132558032870293
    2. 'm' → logprob: -4.041325569152832
    3. 'def' → logprob: -4.166325569152832
    4. '(' → logprob: -5.541325569152832
    5. ':' → logprob: -5.916325569152832
    6. ':
' → logprob: -8.416325569152832
    7. '   ' → logprob: -8.791325569152832
    8. '(s' → logprob: -8.916325569152832
    9. '(
' → logprob: -9.666325569152832
    10. '):' → logprob: -9.791325569152832

Token 1111: ' next' (ID: 2613)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -1.0153677463531494
    2. '(m' → logprob: -1.2653677463531494
    3. 'm' → logprob: -1.6403677463531494
    4. 'len' → logprob: -2.3903677463531494
    5. '(' → logprob: -3.8903677463531494
    6. '('' → logprob: -4.01536750793457
    7. '(s' → logprob: -4.51536750793457
    8. ' (' → logprob: -4.64036750793457
    9. '((' → logprob: -5.64036750793457
    10. '(
' → logprob: -5.64036750793457

Token 1112: ' is' (ID: 382)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.059337954968214035
    2. '(len' → logprob: -2.934337854385376
    3. '(m' → logprob: -6.434338092803955
    4. 'm' → logprob: -6.559338092803955
    5. 'char' → logprob: -8.059337615966797
    6. 'if' → logprob: -8.184337615966797
    7. '(' → logprob: -8.434337615966797
    8. '1' → logprob: -8.559337615966797
    9. '2' → logprob: -8.934337615966797
    10. ' (' → logprob: -9.809337615966797

Token 1113: ' '' (ID: 461)
  Prédit: ''y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -0.000418040988733992
    2. '‘y' → logprob: -8.000417709350586
    3. ''' → logprob: -10.500417709350586
    4. 'y' → logprob: -10.625417709350586
    5. '('' → logprob: -12.000417709350586
    6. ''s' → logprob: -12.125417709350586
    7. ''a' → logprob: -12.125417709350586
    8. ' '' → logprob: -12.250417709350586
    9. '"' → logprob: -13.000417709350586
    10. '{'' → logprob: -13.125417709350586

Token 1114: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.013720203191041946
    2. ''y' → logprob: -4.3887200355529785
    3. ''' → logprob: -6.7637200355529785
    4. ' y' → logprob: -10.763720512390137
    5. '‘y' → logprob: -11.138720512390137
    6. 'y's' → logprob: -11.638720512390137
    7. ''s' → logprob: -12.263720512390137
    8. '	y' → logprob: -13.388720512390137
    9. ' '' → logprob: -14.388720512390137
    10. '"' → logprob: -14.638720512390137

Token 1115: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.038309931755066
    2. ':
' → logprob: -1.038309931755066
    3. ':' → logprob: -1.413309931755066
    4. 'and' → logprob: -3.6633100509643555
    5. '   ' → logprob: -4.9133100509643555
    6. 'if' → logprob: -5.4133100509643555
    7. ''' → logprob: -6.0383100509643555
    8. ' if' → logprob: -6.1633100509643555
    9. '):
' → logprob: -6.6633100509643555
    10. '':' → logprob: -6.6633100509643555

Token 1116: ' or' (ID: 503)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2944445013999939
    2. ':
' → logprob: -1.6694445610046387
    3. ':' → logprob: -3.4194445610046387
    4. '   ' → logprob: -3.9194445610046387
    5. '(m' → logprob: -4.669444561004639
    6. 'if' → logprob: -6.669444561004639
    7. '):
' → logprob: -7.294444561004639
    8. '(s' → logprob: -7.919444561004639
    9. '(' → logprob: -8.04444408416748
    10. ':def' → logprob: -8.04444408416748

Token 1117: ' vowel' (ID: 165542)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -1.3033379316329956
    2. 'in' → logprob: -1.4283379316329956
    3. 'm' → logprob: -1.8033379316329956
    4. 'not' → logprob: -2.928338050842285
    5. 'V' → logprob: -3.178338050842285
    6. ''' → logprob: -3.303338050842285
    7. 's' → logprob: -3.553338050842285
    8. 'v' → logprob: -3.803338050842285
    9. '(m' → logprob: -3.928338050842285
    10. ' in' → logprob: -4.053338050842285

Token 1118: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03991446644067764
    2. ':' → logprob: -4.039914608001709
    3. ':
' → logprob: -4.164914608001709
    4. '(m' → logprob: -5.664914608001709
    5. '   ' → logprob: -7.414914608001709
    6. '(s' → logprob: -7.789914608001709
    7. '):
' → logprob: -8.16491413116455
    8. '):' → logprob: -8.28991413116455
    9. '(' → logprob: -8.53991413116455
    10. '_def' → logprob: -8.91491413116455

Token 1119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1270388662815094
    2. 'def' → logprob: -2.5020389556884766
    3. ':
' → logprob: -3.8770389556884766
    4. ':' → logprob: -4.627038955688477
    5. 'and' → logprob: -5.877038955688477
    6. ' and' → logprob: -5.877038955688477
    7. 'if' → logprob: -7.127038955688477
    8. ' if' → logprob: -8.127038955688477
    9. '):
' → logprob: -10.252038955688477
    10. 'return' → logprob: -10.252038955688477

Token 1120: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044082608073949814
    2. 'if' → logprob: -3.2940826416015625
    3. 'def' → logprob: -5.6690826416015625
    4. ' if' → logprob: -6.1690826416015625
    5. ':
' → logprob: -8.169082641601562
    6. ':' → logprob: -9.419082641601562
    7. 'm' → logprob: -10.169082641601562
    8. 'first' → logprob: -10.544082641601562
    9. 'for' → logprob: -11.669082641601562
    10. '```' → logprob: -11.669082641601562

Token 1121: ' Also' (ID: 8820)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3925663232803345
    2. '   ' → logprob: -1.3925663232803345
    3. 'def' → logprob: -2.767566204071045
    4. ' if' → logprob: -4.392566204071045
    5. 'first' → logprob: -7.767566204071045
    6. 'return' → logprob: -8.017566680908203
    7. 'c' → logprob: -9.017566680908203
    8. '```' → logprob: -9.142566680908203
    9. ':' → logprob: -10.517566680908203
    10. ' first' → logprob: -12.017566680908203

Token 1122: ' vo' (ID: 778)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.641624927520752
    2. ' if' → logprob: -1.516624927520752
    3. '   ' → logprob: -1.641624927520752
    4. '
' → logprob: -3.766624927520752
    5. ' return' → logprob: -4.391624927520752
    6. 'if' → logprob: -4.391624927520752
    7. ' def' → logprob: -5.141624927520752
    8. 'return' → logprob: -6.141624927520752
    9. ' len' → logprob: -6.766624927520752
    10. ' ' → logprob: -7.141624927520752

Token 1123: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.004406855441629887
    2. 'i' → logprob: -7.129406929016113
    3. 'ice' → logprob: -7.254406929016113
    4. 'IC' → logprob: -8.004406929016113
    5. '
' → logprob: -8.441906929016113
    6. 'cel' → logprob: -8.504406929016113
    7. 'icelo' → logprob: -8.941906929016113
    8. '_' → logprob: -9.129406929016113
    9. '`' → logprob: -9.316906929016113
    10. '``' → logprob: -9.379406929016113

Token 1124: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.001728848903439939
    2. 'less' → logprob: -6.5017290115356445
    3. 'ele' → logprob: -9.501729011535645
    4. 'ess' → logprob: -9.626729011535645
    5. 'el' → logprob: -9.751729011535645
    6. 'e' → logprob: -12.251729011535645
    7. 'ed' → logprob: -12.376729011535645
    8. '
' → logprob: -12.626729011535645
    9. 'heless' → logprob: -12.876729011535645
    10. '_less' → logprob: -13.126729011535645

Token 1125: ' conson' (ID: 127767)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3604452908039093
    2. ':' → logprob: -1.985445261001587
    3. '_' → logprob: -2.610445261001587
    4. '(' → logprob: -3.360445261001587
    5. '(m' → logprob: -4.110445499420166
    6. '   ' → logprob: -4.485445499420166
    7. ':
' → logprob: -5.110445499420166
    8. ' and' → logprob: -5.735445499420166
    9. 'm' → logprob: -6.360445499420166
    10. 's' → logprob: -6.735445499420166

Token 1126: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.044656530022621155
    2. 'ant' → logprob: -3.16965651512146
    3. 't' → logprob: -6.669656753540039
    4. 'ts' → logprob: -9.044656753540039
    5. 'nts' → logprob: -9.044656753540039
    6. 'ats' → logprob: -9.169656753540039
    7. 'at' → logprob: -11.794656753540039
    8. 'ANTS' → logprob: -11.919656753540039
    9. 'a' → logprob: -12.169656753540039
    10. '
' → logprob: -12.419656753540039

Token 1127: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07566723972558975
    2. 'def' → logprob: -3.075667142868042
    3. '(' → logprob: -5.075667381286621
    4. '(m' → logprob: -5.450667381286621
    5. ':
' → logprob: -5.950667381286621
    6. '   ' → logprob: -6.325667381286621
    7. 's' → logprob: -6.575667381286621
    8. ',' → logprob: -6.700667381286621
    9. '):' → logprob: -6.825667381286621
    10. '[' → logprob: -6.950667381286621

Token 1128: ' y' (ID: 342)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.4807698726654053
    2. 'V' → logprob: -1.9807698726654053
    3. '(' → logprob: -2.3557698726654053
    4. ''' → logprob: -2.4807698726654053
    5. '(s' → logprob: -2.7307698726654053
    6. '('' → logprob: -2.7307698726654053
    7. 's' → logprob: -2.9807698726654053
    8. 'v' → logprob: -3.6057698726654053
    9. '{'' → logprob: -3.6057698726654053
    10. ' vowels' → logprob: -3.8557698726654053

Token 1129: ' are' (ID: 553)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9077117443084717
    2. ':
' → logprob: -1.4077117443084717
    3. '   ' → logprob: -1.9077117443084717
    4. 'def' → logprob: -2.2827117443084717
    5. 'if' → logprob: -3.4077117443084717
    6. '(' → logprob: -3.6577117443084717
    7. '(m' → logprob: -4.282711982727051
    8. '(c' → logprob: -4.782711982727051
    9. '(
' → logprob: -4.782711982727051
    10. ' if' → logprob: -5.907711982727051

Token 1130: ' vo' (ID: 778)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.8291681408882141
    2. ' True' → logprob: -1.0791680812835693
    3. '{'' → logprob: -1.7041680812835693
    4. ' {'' → logprob: -4.829168319702148
    5. ' in' → logprob: -5.329168319702148
    6. ' considered' → logprob: -5.454168319702148
    7. '{' → logprob: -5.704168319702148
    8. ''' → logprob: -5.829168319702148
    9. 'consider' → logprob: -5.829168319702148
    10. 'in' → logprob: -5.954168319702148

Token 1131: 'ic' (ID: 291)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3233916163444519
    2. 'ic' → logprob: -1.3233916759490967
    3. 'y' → logprob: -5.948391437530518
    4. ''' → logprob: -6.698391437530518
    5. '``' → logprob: -6.948391437530518
    6. '`' → logprob: -7.198391437530518
    7. '```' → logprob: -7.323391437530518
    8. 'o' → logprob: -7.448391437530518
    9. 'ice' → logprob: -8.073391914367676
    10. ''i' → logprob: -8.135891914367676

Token 1132: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -3.023293538717553e-05
    2. 'el' → logprob: -11.125030517578125
    3. 'less' → logprob: -11.750030517578125
    4. 'ess' → logprob: -13.500030517578125
    5. 'eles' → logprob: -13.500030517578125
    6. 'ele' → logprob: -13.625030517578125
    7. 'ed' → logprob: -13.625030517578125
    8. 'e' → logprob: -13.750030517578125
    9. 'heless' → logprob: -15.500030517578125
    10. '
' → logprob: -15.625030517578125

Token 1133: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07780197262763977
    2. '(m' → logprob: -3.3278019428253174
    3. '   ' → logprob: -3.9528019428253174
    4. 'm' → logprob: -4.9528021812438965
    5. ':
' → logprob: -5.3278021812438965
    6. ':' → logprob: -5.3278021812438965
    7. '(' → logprob: -6.0778021812438965
    8. '(s' → logprob: -8.077801704406738
    9. 'if' → logprob: -9.952801704406738
    10. '(
' → logprob: -10.077801704406738

Token 1134: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023632796481251717
    2. ' if' → logprob: -4.648633003234863
    3. 'def' → logprob: -4.648633003234863
    4. 'if' → logprob: -5.773633003234863
    5. ':' → logprob: -7.148633003234863
    6. ':
' → logprob: -9.023633003234863
    7. ' and' → logprob: -10.523633003234863
    8. ',' → logprob: -10.773633003234863
    9. '
' → logprob: -10.898633003234863
    10. ' for' → logprob: -11.023633003234863

Token 1135: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08425230532884598
    2. 'def' → logprob: -3.70925235748291
    3. ' if' → logprob: -3.70925235748291
    4. 'if' (adapté à ' if') → logprob: -3.83425235748291
    5. ':' → logprob: -4.95925235748291
    6. ':
' → logprob: -5.83425235748291
    7. 'for' → logprob: -9.58425235748291
    8. ' and' → logprob: -10.45925235748291
    9. ' for' → logprob: -10.45925235748291
    10. '	if' → logprob: -11.45925235748291

Token 1136: ' not' (ID: 625)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2575991451740265
    2. 'len' → logprob: -1.507599115371704
    3. ' mora' → logprob: -5.882599353790283
    4. ' len' → logprob: -6.257599353790283
    5. '(len' → logprob: -7.757599353790283
    6. 'not' → logprob: -8.507598876953125
    7. ' ' → logprob: -8.757598876953125
    8. '(m' → logprob: -10.257598876953125
    9. '   ' → logprob: -10.507598876953125
    10. ' not' → logprob: -10.757598876953125

Token 1137: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002322010463103652
    2. ' mora' → logprob: -6.127322196960449
    3. ' isinstance' → logprob: -9.25232219696045
    4. '(m' → logprob: -11.12732219696045
    5. 'mor' → logprob: -11.87732219696045
    6. 'len' → logprob: -12.25232219696045
    7. ' ' → logprob: -12.75232219696045
    8. ' (' → logprob: -13.62732219696045
    9. 'mo' → logprob: -13.87732219696045
    10. 'ora' → logprob: -13.87732219696045

Token 1138: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.18334531784057617
    2. ':' → logprob: -2.183345317840576
    3. '[' → logprob: -3.308345317840576
    4. '.startswith' → logprob: -4.558345317840576
    5. '==' → logprob: -5.933345317840576
    6. ':
' → logprob: -6.308345317840576
    7. 'or' → logprob: -6.308345317840576
    8. '[:' → logprob: -7.308345317840576
    9. ':return' → logprob: -7.933345317840576
    10. '   ' → logprob: -9.058345794677734

Token 1139: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012691522017121315
    2. ':' → logprob: -5.137691497802734
    3. ':
' → logprob: -5.637691497802734
    4. '       ' → logprob: -6.762691497802734
    5. ' and' → logprob: -7.637691497802734
    6. ' return' → logprob: -8.137691497802734
    7. '    ' → logprob: -8.387691497802734
    8. '[' → logprob: -8.637691497802734
    9. ' if' → logprob: -8.887691497802734
    10. ':return' → logprob: -9.137691497802734

Token 1140: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.30821916460990906
    2. '   ' → logprob: -2.3082191944122314
    3. 'False' → logprob: -2.3082191944122314
    4. ' return' → logprob: -2.8082191944122314
    5. ' False' → logprob: -5.308218955993652
    6. '
' → logprob: -7.433218955993652
    7. '       ' → logprob: -7.808218955993652
    8. '    ' → logprob: -10.433218955993652
    9. 'false' → logprob: -10.558218955993652
    10. ' ' → logprob: -11.558218955993652

Token 1141: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.8624639324116288e-06
    2. ' False' → logprob: -13.250001907348633
    3. 'True' → logprob: -20.875001907348633
    4. '(False' → logprob: -21.875001907348633
    5. 'None' → logprob: -23.875001907348633
    6. 'F' → logprob: -24.500001907348633
    7. 'false' → logprob: -25.125001907348633
    8. '=False' → logprob: -25.500001907348633
    9. '
' → logprob: -25.875001907348633
    10. 'FALSE' → logprob: -26.750001907348633

Token 1142: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16704177856445312
    2. '\n' → logprob: -3.167041778564453
    3. ':' → logprob: -3.292041778564453
    4. '
' → logprob: -3.792041778564453
    5. 'if' → logprob: -3.917041778564453
    6. ' if' → logprob: -4.667041778564453
    7. '    
' → logprob: -5.542041778564453
    8. ':return' → logprob: -6.292041778564453
    9. 'return' → logprob: -6.417041778564453
    10. 'm' → logprob: -6.542041778564453

Token 1143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006716674659401178
    2. ' if' → logprob: -5.256716728210449
    3. 'if' → logprob: -8.25671672821045
    4. '    
' → logprob: -8.38171672821045
    5. ' i' → logprob: -8.75671672821045
    6. ' 
' → logprob: -9.13171672821045
    7. 'i' → logprob: -9.25671672821045
    8. '
' → logprob: -9.38171672821045
    9. ')' → logprob: -9.63171672821045
    10. ' ' → logprob: -9.88171672821045

Token 1144: ' c' (ID: 274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.029818186536431313
    2. ' if' → logprob: -4.779818058013916
    3. 'return' → logprob: -4.779818058013916
    4. '   ' → logprob: -5.029818058013916
    5. 'c' (adapté à ' c') → logprob: -5.279818058013916
    6. 'first' → logprob: -7.154818058013916
    7. ' c' → logprob: -9.529818534851074
    8. ' return' → logprob: -9.654818534851074
    9. 'ch' → logprob: -10.904818534851074
    10. ' first' → logprob: -11.404818534851074

Token 1145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1003141701221466
    2. ' =' → logprob: -2.350314140319824
    3. '=m' → logprob: -9.225314140319824
    4. '=c' → logprob: -11.850314140319824
    5. 'm' → logprob: -14.475314140319824
    6. '=o' → logprob: -14.725314140319824
    7. '   ' → logprob: -15.225314140319824
    8. ' ' → logprob: -15.600314140319824
    9. 'c' → logprob: -16.10031509399414
    10. '0' → logprob: -17.10031509399414

Token 1146: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -9.088346359931165e-07
    2. ' mora' → logprob: -14.125000953674316
    3. 'mor' → logprob: -16.5
    4. ' ' → logprob: -17.5
    5. '	m' → logprob: -17.875
    6. '   ' → logprob: -18.0
    7. ' m' → logprob: -18.75
    8. 'mo' → logprob: -19.75
    9. '  ' → logprob: -20.0
    10. '`' → logprob: -20.0

Token 1147: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005577972042374313
    2. '=' → logprob: -7.750557899475098
    3. ' =' → logprob: -9.375557899475098
    4. '==' → logprob: -10.875557899475098
    5. '0' → logprob: -11.125557899475098
    6. 'if' → logprob: -13.000557899475098
    7. 'in' → logprob: -13.250557899475098
    8. 'def' → logprob: -13.750557899475098
    9. 'c' → logprob: -14.125557899475098
    10. ' in' → logprob: -14.375557899475098

Token 1148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '[' → logprob: -19.125
    4. '۰' → logprob: -19.25
    5. '00' → logprob: -20.375
    6. '０' → logprob: -20.5
    7. '012' → logprob: -22.125
    8. '٠' → logprob: -22.625
    9. ')' → logprob: -22.8125
    10. '000' → logprob: -23.0625

Token 1149: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06664876639842987
    2. ')' → logprob: -2.9416487216949463
    3. ']
' → logprob: -4.566648960113525
    4. ')
' → logprob: -7.191648960113525
    5. '   ' → logprob: -7.691648960113525
    6. ']==' → logprob: -10.691648483276367
    7. '']' → logprob: -11.066648483276367
    8. ' ]' → logprob: -11.191648483276367
    9. ' )' → logprob: -11.691648483276367
    10. '）' → logprob: -12.066648483276367

Token 1150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007205340662039816
    2. ' if' → logprob: -7.625720500946045
    3. 'return' → logprob: -9.000720977783203
    4. ' return' → logprob: -9.750720977783203
    5. 'if' → logprob: -10.000720977783203
    6. '
' → logprob: -13.500720977783203
    7. '    ' → logprob: -13.875720977783203
    8. '	if' → logprob: -14.000720977783203
    9. '	return' → logprob: -14.250720977783203
    10. '  ' → logprob: -14.500720977783203

Token 1151: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07574106007814407
    2. '   ' → logprob: -3.3257410526275635
    3. 'if' (adapté à ' if') → logprob: -3.8257410526275635
    4. ' return' → logprob: -4.575741291046143
    5. ' if' → logprob: -5.325741291046143
    6. '	return' → logprob: -11.450740814208984
    7. ' ' → logprob: -11.575740814208984
    8. '    ' → logprob: -12.325740814208984
    9. '
' → logprob: -12.950740814208984
    10. '  ' → logprob: -13.325740814208984

Token 1152: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0019289902411401272
    2. ' c' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.126928329467773
    4. '	c' → logprob: -16.251928329467773
    5. 'm' → logprob: -16.751928329467773
    6. ' ' → logprob: -17.001928329467773
    7. ')c' → logprob: -18.251928329467773
    8. '  ' → logprob: -19.001928329467773
    9. '    ' → logprob: -19.439428329467773
    10. '_c' → logprob: -19.501928329467773

Token 1153: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023318734019994736
    2. 'in' → logprob: -3.7733187675476074
    3. ' ==' → logprob: -10.27331829071045
    4. '==' → logprob: -10.64831829071045
    5. ' ' → logprob: -12.14831829071045
    6. ' i' → logprob: -12.27331829071045
    7. ' ' → logprob: -13.27331829071045
    8. ')' → logprob: -14.39831829071045
    9. ' not' → logprob: -14.52331829071045
    10. '_in' → logprob: -14.64831829071045

Token 1154: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3877807557582855
    2. 'in' → logprob: -1.137780785560608
    3. ' VO' → logprob: -7.762780666351318
    4. ')' → logprob: -8.887781143188477
    5. 'VOICE' → logprob: -9.262781143188477
    6. '=' → logprob: -10.137781143188477
    7. 'VO' → logprob: -10.262781143188477
    8. ' )' → logprob: -10.887781143188477
    9. ',' → logprob: -10.887781143188477
    10. ' '' → logprob: -11.012781143188477

Token 1155: ' VO' (ID: 39292)
  Prédit: 'VOICE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VOICE' → logprob: -0.0006028342177160084
    2. ' VO' → logprob: -8.000602722167969
    3. 'VO' → logprob: -8.250602722167969
    4. 'V' → logprob: -12.375602722167969
    5. ' V' → logprob: -13.875602722167969
    6. 'VOC' → logprob: -14.625602722167969
    7. ''' → logprob: -15.250602722167969
    8. '`' → logprob: -16.00060272216797
    9. '```' → logprob: -16.12560272216797
    10. 'VICE' → logprob: -17.00060272216797

Token 1156: 'ICE' (ID: 9468)
  Prédit: 'ICE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ICE' → logprob: -0.006755155511200428
    2. 'ICLE' → logprob: -5.506755352020264
    3. 'OICE' → logprob: -6.631755352020264
    4. 'ICEF' → logprob: -7.756755352020264
    5. 'ILE' → logprob: -8.006754875183105
    6. 'IC' → logprob: -8.006754875183105
    7. 'I' → logprob: -10.131754875183105
    8. 'IVE' → logprob: -10.506754875183105
    9. 'Ice' → logprob: -10.881754875183105
    10. 'VOICE' → logprob: -10.881754875183105

Token 1157: 'LESS' (ID: 65453)
  Prédit: 'LESS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LESS' → logprob: -7.3458322731312364e-06
    2. 'LE' → logprob: -12.125007629394531
    3. 'less' → logprob: -14.000007629394531
    4. 'L' → logprob: -15.000007629394531
    5. 'LES' → logprob: -16.12500762939453
    6. '
' → logprob: -16.37500762939453
    7. ' LESS' → logprob: -16.37500762939453
    8. 'S' → logprob: -16.50000762939453
    9. '_LE' → logprob: -17.00000762939453
    10. 'E' → logprob: -17.12500762939453

Token 1158: '_CON' (ID: 8877)
  Prédit: '_CON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CON' → logprob: -0.0005730479606427252
    2. '_' → logprob: -7.75057315826416
    3. '_con' → logprob: -9.50057315826416
    4. '
' → logprob: -10.50057315826416
    5. '_UN' → logprob: -11.37557315826416
    6. '_C' → logprob: -11.62557315826416
    7. '_
' → logprob: -12.00057315826416
    8. '_CO' → logprob: -13.00057315826416
    9. '\' → logprob: -13.37557315826416
    10. 'S' → logprob: -13.62557315826416

Token 1159: 'SON' (ID: 4214)
  Prédit: 'SON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SON' → logprob: -0.061994243413209915
    2. 'S' → logprob: -2.8119943141937256
    3. 'SO' → logprob: -12.186994552612305
    4. 'TS' → logprob: -12.311994552612305
    5. 'ST' → logprob: -12.561994552612305
    6. 'SOR' → logprob: -12.811994552612305
    7. 'son' → logprob: -13.186994552612305
    8. 'CONS' → logprob: -13.436994552612305
    9. 'STANT' → logprob: -13.686994552612305
    10. 'T' → logprob: -13.686994552612305

Token 1160: 'ANTS' (ID: 96531)
  Prédit: 'ANTS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANTS' → logprob: -2.248469718324486e-05
    2. 'ANT' → logprob: -11.750022888183594
    3. 'ants' → logprob: -12.000022888183594
    4. 'TS' → logprob: -12.875022888183594
    5. 'T' → logprob: -13.125022888183594
    6. 'ATS' → logprob: -13.750022888183594
    7. 'S' → logprob: -14.625022888183594
    8. 'N' → logprob: -14.625022888183594
    9. '{' → logprob: -14.625022888183594
    10. '_' → logprob: -15.000022888183594

Token 1161: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.326361745595932
    2. ':
' → logprob: -1.3263617753982544
    3. ':return' → logprob: -4.951361656188965
    4. '   ' → logprob: -5.451361656188965
    5. ' and' → logprob: -6.826361656188965
    6. '       ' → logprob: -8.326361656188965
    7. 'and' → logprob: -8.576361656188965
    8. ' or' → logprob: -9.201361656188965
    9. ':
' → logprob: -11.826361656188965
    10. '):
' → logprob: -12.201361656188965

Token 1162: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18779033422470093
    2. '       ' → logprob: -2.0627903938293457
    3. ' and' → logprob: -3.6877903938293457
    4. ':' → logprob: -4.187790393829346
    5. ':
' → logprob: -5.687790393829346
    6. 'and' → logprob: -8.187789916992188
    7. ':return' → logprob: -9.187789916992188
    8. ' or' → logprob: -9.687789916992188
    9. '    ' → logprob: -10.687789916992188
    10. '      ' → logprob: -11.437789916992188

Token 1163: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005478248931467533
    2. '   ' → logprob: -5.380478382110596
    3. 'return' (adapté à ' return') → logprob: -8.130477905273438
    4. ' return' → logprob: -8.380477905273438
    5. 'False' → logprob: -8.880477905273438
    6. ' False' → logprob: -9.005477905273438
    7. '    ' → logprob: -10.755477905273438
    8. '	return' → logprob: -10.755477905273438
    9. '     ' → logprob: -11.255477905273438
    10. '           ' → logprob: -12.005477905273438

Token 1164: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00020354038861114532
    2. ' False' → logprob: -8.500203132629395
    3. 'True' → logprob: -20.62520408630371
    4. 'false' → logprob: -23.50020408630371
    5. '(False' → logprob: -23.75020408630371
    6. '=False' → logprob: -25.25020408630371
    7. '_false' → logprob: -25.87520408630371
    8. 'None' → logprob: -26.12520408630371
    9. 'F' → logprob: -26.50020408630371
    10. 'FALSE' → logprob: -27.12520408630371

Token 1165: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3288484811782837
    2. '
' → logprob: -1.3288484811782837
    3. ' 
' → logprob: -5.578848361968994
    4. '    
' → logprob: -5.578848361968994
    5. '  
' → logprob: -5.828848361968994
    6. '<|end|>' → logprob: -6.828848361968994
    7. ' True' → logprob: -7.203848361968994
    8. '  ' → logprob: -7.328848361968994
    9. 'True' → logprob: -7.453848361968994
    10. '   
' → logprob: -7.453848361968994

Token 1166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.945094355614856e-05
    2. ' if' → logprob: -10.125069618225098
    3. '    
' → logprob: -11.625069618225098
    4. 'if' → logprob: -11.875069618225098
    5. '
' → logprob: -12.250069618225098
    6. '  ' → logprob: -13.125069618225098
    7. '       ' → logprob: -13.625069618225098
    8. '    ' → logprob: -13.750069618225098
    9. 'return' → logprob: -14.375069618225098
    10. ' True' → logprob: -14.625069618225098

Token 1167: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2565593123435974
    2. '   ' → logprob: -1.8815593719482422
    3. ' if' → logprob: -3.131559371948242
    4. 'return' → logprob: -3.506559371948242
    5. ' return' → logprob: -8.256559371948242
    6. '
' → logprob: -11.381559371948242
    7. 'i' → logprob: -12.381559371948242
    8. '	if' → logprob: -12.506559371948242
    9. '    
' → logprob: -13.381559371948242
    10. '       ' → logprob: -13.631559371948242

Token 1168: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1612394005060196
    2. 'return' → logprob: -1.9112393856048584
    3. '   ' → logprob: -6.9112396240234375
    4. ' if' → logprob: -11.286239624023438
    5. '#' → logprob: -13.161239624023438
    6. 'length' → logprob: -13.286239624023438
    7. ' return' → logprob: -13.661239624023438
    8. '```' → logprob: -15.536239624023438
    9. 'len' → logprob: -15.786239624023438
    10. 'elif' → logprob: -15.911239624023438

Token 1169: ' mora' (ID: 47294)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0009159822366200387
    2. ' len' → logprob: -7.000916004180908
    3. '(len' → logprob: -12.75091552734375
    4. 'm' → logprob: -13.75091552734375
    5. '   ' → logprob: -15.50091552734375
    6. '1' → logprob: -16.00091552734375
    7. '(' → logprob: -17.12591552734375
    8. ' ' → logprob: -17.12591552734375
    9. ' (' → logprob: -17.37591552734375
    10. '  ' → logprob: -17.75091552734375

Token 1170: ' is' (ID: 382)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4143922328948975
    2. 'len' → logprob: -1.5393922328948975
    3. '   ' → logprob: -2.2893922328948975
    4. '==' → logprob: -2.5393922328948975
    5. 'if' → logprob: -2.9143922328948975
    6. 'def' → logprob: -2.9143922328948975
    7. '=' → logprob: -3.4143922328948975
    8. 'and' → logprob: -3.4143922328948975
    9. '
' → logprob: -3.7893922328948975
    10. '<|end|>' → logprob: -4.039392471313477

Token 1171: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.47448086738586426
    2. '1' → logprob: -0.9744808673858643
    3. 'm' → logprob: -8.474480628967285
    4. ' len' → logprob: -8.724480628967285
    5. ' ' → logprob: -10.474480628967285
    6. 'length' → logprob: -12.849480628967285
    7. '(len' → logprob: -13.974480628967285
    8. '   ' → logprob: -15.099480628967285
    9. '#' → logprob: -16.0994815826416
    10. '	len' → logprob: -16.3494815826416

Token 1172: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3869269788265228
    2. '1' → logprob: -1.1369270086288452
    3. 'm' → logprob: -10.261926651000977
    4. 'length' → logprob: -10.886926651000977
    5. '2' → logprob: -14.386926651000977
    6. ' ' → logprob: -14.386926651000977
    7. ' len' → logprob: -14.511926651000977
    8. '(len' → logprob: -14.886926651000977
    9. '0' → logprob: -16.261926651000977
    10. '(' → logprob: -16.761926651000977

Token 1173: ' char' (ID: 1826)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.016007661819458
    2. '==' → logprob: -1.266007661819458
    3. ' ==' → logprob: -1.266007661819458
    4. ')' → logprob: -3.516007661819458
    5. ' and' → logprob: -4.516007423400879
    6. ':' → logprob: -4.766007423400879
    7. '<len' → logprob: -4.891007423400879
    8. ' len' → logprob: -5.516007423400879
    9. ' ' → logprob: -5.766007423400879
    10. '=' → logprob: -6.766007423400879

Token 1174: ' conson' (ID: 127767)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2487214058637619
    2. ':' → logprob: -2.1237213611602783
    3. ':return' → logprob: -3.1237213611602783
    4. ':
' → logprob: -3.2487213611602783
    5. ' and' → logprob: -4.748721599578857
    6. 'and' → logprob: -5.123721599578857
    7. 'return' → logprob: -6.748721599578857
    8. '       ' → logprob: -7.123721599578857
    9. '==' → logprob: -7.748721599578857
    10. ' return' → logprob: -8.3737211227417

Token 1175: 'ant' (ID: 493)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2245355248451233
    2. ':' → logprob: -3.0995354652404785
    3. 'ant' → logprob: -3.5995354652404785
    4. 's' → logprob: -3.7245354652404785
    5. ')' → logprob: -3.7245354652404785
    6. 'stant' → logprob: -3.8495354652404785
    7. ''t' → logprob: -4.0995354652404785
    8. ',' → logprob: -5.2245354652404785
    9. 'son' → logprob: -5.4745354652404785
    10. 'and' → logprob: -5.4745354652404785

Token 1176: ' with' (ID: 483)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7876560688018799
    2. '   ' → logprob: -0.9126560688018799
    3. ':' → logprob: -2.66265606880188
    4. 'and' → logprob: -2.66265606880188
    5. ':
' → logprob: -6.037655830383301
    6. ' or' → logprob: -7.537655830383301
    7. ':return' → logprob: -7.787655830383301
    8. '       ' → logprob: -8.0376558303833
    9. ',' → logprob: -9.0376558303833
    10. ' ' → logprob: -9.6626558303833

Token 1177: ' no' (ID: 860)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.01622614823281765
    2. 'length' → logprob: -4.391226291656494
    3. 'no' → logprob: -6.016226291656494
    4. 'c' → logprob: -8.141225814819336
    5. '(len' → logprob: -8.391225814819336
    6. ' len' → logprob: -8.391225814819336
    7. ' length' → logprob: -8.766225814819336
    8. '1' → logprob: -9.391225814819336
    9. 'not' → logprob: -9.891225814819336
    10. ' no' → logprob: -10.016225814819336

Token 1178: ' vowel' (ID: 165542)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6823984980583191
    2. ' following' → logprob: -1.8073985576629639
    3. 'following' → logprob: -2.307398557662964
    4. 'additional' → logprob: -2.682398557662964
    5. 'm' → logprob: -3.432398557662964
    6. 'more' → logprob: -3.557398557662964
    7. ' additional' → logprob: -3.682398557662964
    8. 's' → logprob: -4.432398319244385
    9. ' more' → logprob: -4.682398319244385
    10. 'v' → logprob: -4.932398319244385

Token 1179: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41027992963790894
    2. '   ' → logprob: -1.4102799892425537
    3. ':
' → logprob: -3.6602799892425537
    4. ':return' → logprob: -3.6602799892425537
    5. ' and' → logprob: -3.7852799892425537
    6. 'and' → logprob: -4.535279750823975
    7. ' or' → logprob: -5.660279750823975
    8. '       ' → logprob: -7.285279750823975
    9. '  ' → logprob: -7.535279750823975
    10. 'return' → logprob: -7.535279750823975

Token 1180: ' unlikely' (ID: 36361)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6767755150794983
    2. ' True' → logprob: -1.0517754554748535
    3. ' False' → logprob: -2.6767754554748535
    4. 'return' → logprob: -3.5517754554748535
    5. 'True' → logprob: -3.9267754554748535
    6. 'False' → logprob: -4.0517754554748535
    7. '   ' → logprob: -5.5517754554748535
    8. ':return' → logprob: -6.1767754554748535
    9. ' 
' → logprob: -6.9267754554748535
    10. ' ' → logprob: -7.8017754554748535

Token 1181: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07848408073186874
    2. ':' → logprob: -2.828484058380127
    3. ',' → logprob: -5.328484058380127
    4. ':return' → logprob: -5.578484058380127
    5. '.' → logprob: -6.328484058380127
    6. ':
' → logprob: -6.453484058380127
    7. '
' → logprob: -6.828484058380127
    8. '       ' → logprob: -7.203484058380127
    9. 'return' → logprob: -7.703484058380127
    10. ' and' → logprob: -8.203484535217285

Token 1182: ' handle' (ID: 5318)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6564574837684631
    2. 'return' → logprob: -0.9064574837684631
    3. 'True' → logprob: -3.2814574241638184
    4. ' True' → logprob: -3.5314574241638184
    5. 'False' → logprob: -5.031457424163818
    6. ' False' → logprob: -6.531457424163818
    7. '   ' → logprob: -6.656457424163818
    8. '
' → logprob: -6.781457424163818
    9. ':return' → logprob: -10.031457901000977
    10. ' ' → logprob: -10.656457901000977

Token 1183: ' false' (ID: 1485)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012309732846915722
    2. '       ' → logprob: -5.262309551239014
    3. ':' → logprob: -5.887309551239014
    4. ' if' → logprob: -6.637309551239014
    5. ':
' → logprob: -7.012309551239014
    6. '
' → logprob: -7.762309551239014
    7. ' return' → logprob: -8.137310028076172
    8. 'return' → logprob: -8.137310028076172
    9. ' True' → logprob: -8.762310028076172
    10. ':return' → logprob: -8.762310028076172

Token 1184: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23715372383594513
    2. '   ' → logprob: -1.8621537685394287
    3. ')' → logprob: -4.36215353012085
    4. '\n' → logprob: -4.86215353012085
    5. '       ' → logprob: -4.86215353012085
    6. '    
' → logprob: -5.48715353012085
    7. ':' → logprob: -5.48715353012085
    8. ':return' → logprob: -5.48715353012085
    9. 'False' → logprob: -5.86215353012085
    10. 'return' → logprob: -5.86215353012085

Token 1185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003959547728300095
    2. ':' → logprob: -5.878959655761719
    3. '       ' → logprob: -7.253959655761719
    4. ' if' → logprob: -9.503959655761719
    5. ':
' → logprob: -9.753959655761719
    6. '    ' → logprob: -9.753959655761719
    7. '    
' → logprob: -10.128959655761719
    8. ' ' → logprob: -10.378959655761719
    9. ',' → logprob: -10.628959655761719
    10. '.' → logprob: -10.628959655761719

Token 1186: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07371501624584198
    2. ' if' → logprob: -3.3237149715423584
    3. 'return' → logprob: -3.9487149715423584
    4. 'if' (adapté à ' if') → logprob: -4.6987152099609375
    5. ' return' → logprob: -5.0737152099609375
    6. '
' → logprob: -8.948715209960938
    7. '       ' → logprob: -9.573715209960938
    8. '    
' → logprob: -9.948715209960938
    9. '	return' → logprob: -10.198715209960938
    10. ' 
' → logprob: -10.198715209960938

Token 1187: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0006459566066041589
    2. ' len' → logprob: -7.875646114349365
    3. 'm' → logprob: -8.250645637512207
    4. '(len' → logprob: -12.500645637512207
    5. '   ' → logprob: -15.125645637512207
    6. 'not' → logprob: -15.125645637512207
    7. '	len' → logprob: -15.375645637512207
    8. '1' → logprob: -16.500646591186523
    9. ' ' → logprob: -16.625646591186523
    10. 'length' → logprob: -16.875646591186523

Token 1188: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0028739420231431723
    2. '(' → logprob: -6.50287389755249
    3. 'm' → logprob: -6.62787389755249
    4. '==' → logprob: -10.752874374389648
    5. '<m' → logprob: -12.377874374389648
    6. '(
' → logprob: -12.502874374389648
    7. ' ==' → logprob: -12.752874374389648
    8. ')m' → logprob: -13.377874374389648
    9. ' ' → logprob: -13.627874374389648
    10. '1' → logprob: -13.627874374389648

Token 1189: 'ora' (ID: 2505)
  Prédit: 'ora'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -0.022968705743551254
    2. '==' → logprob: -4.147968769073486
    3. '>' → logprob: -5.397968769073486
    4. '>=' → logprob: -8.022968292236328
    5. ')' → logprob: -8.147968292236328
    6. 'm' → logprob: -8.272968292236328
    7. '1' → logprob: -8.272968292236328
    8. ' ==' → logprob: -8.397968292236328
    9. '=' → logprob: -8.647968292236328
    10. 'o' → logprob: -8.897968292236328

Token 1190: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.21354402601718903
    2. ' ==' → logprob: -2.2135441303253174
    3. ')' → logprob: -2.5885441303253174
    4. '<' → logprob: -5.588543891906738
    5. ')==' → logprob: -6.213543891906738
    6. '>' → logprob: -6.588543891906738
    7. ' <' → logprob: -7.838543891906738
    8. '!=' → logprob: -9.963543891906738
    9. ')<' → logprob: -9.963543891906738
    10. '1' → logprob: -10.213543891906738

Token 1191: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01357380859553814
    2. ' ==' → logprob: -4.38857364654541
    3. '<' → logprob: -7.01357364654541
    4. '<=' → logprob: -8.88857364654541
    5. '1' → logprob: -11.38857364654541
    6. '=' → logprob: -12.38857364654541
    7. ' <' → logprob: -12.76357364654541
    8. ')' → logprob: -13.76357364654541
    9. '>' → logprob: -13.76357364654541
    10. 'in' → logprob: -13.88857364654541

Token 1192: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019889144459739327
    2. '0' → logprob: -9.000199317932129
    3. ' ' → logprob: -9.500199317932129
    4. '
' → logprob: -16.062698364257812
    5. '```' → logprob: -16.125198364257812
    6. '2' → logprob: -16.312698364257812
    7. '   ' → logprob: -16.750198364257812
    8. '=' → logprob: -16.875198364257812
    9. '>' → logprob: -17.312698364257812
    10. '  ' → logprob: -17.437698364257812

Token 1193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02983345277607441
    2. '0' → logprob: -3.5298335552215576
    3. ' ' → logprob: -9.529833793640137
    4. '2' → logprob: -12.279833793640137
    5. '3' → logprob: -13.529833793640137
    6. '```' → logprob: -14.029833793640137
    7. '   ' → logprob: -14.217333793640137
    8. '=' → logprob: -14.217333793640137
    9. '  ' → logprob: -15.842333793640137
    10. '`' → logprob: -15.842333793640137

Token 1194: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9770582318305969
    2. '   ' → logprob: -1.6020581722259521
    3. ' and' → logprob: -1.7270581722259521
    4. ':return' → logprob: -1.8520581722259521
    5. ':
' → logprob: -2.852058172225952
    6. 'and' → logprob: -4.227058410644531
    7. '==' → logprob: -4.602058410644531
    8. ' ==' → logprob: -6.477058410644531
    9. '       ' → logprob: -6.477058410644531
    10. ' ' → logprob: -7.852058410644531

Token 1195: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9873720407485962
    2. ':
' → logprob: -1.1123720407485962
    3. '       ' → logprob: -1.6123720407485962
    4. ':' → logprob: -2.4873719215393066
    5. ':return' → logprob: -4.237371921539307
    6. ' and' → logprob: -8.237372398376465
    7. 'return' → logprob: -8.362372398376465
    8. ' return' → logprob: -8.362372398376465
    9. ' :
' → logprob: -8.862372398376465
    10. '    ' → logprob: -9.237372398376465

Token 1196: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8187956213951111
    2. '   ' → logprob: -1.0687956809997559
    3. '       ' → logprob: -1.5687956809997559
    4. ' return' → logprob: -4.943795680999756
    5. '	return' → logprob: -9.318795204162598
    6. 'True' → logprob: -10.193795204162598
    7. '
' → logprob: -10.318795204162598
    8. ':return' → logprob: -11.568795204162598
    9. '           ' → logprob: -12.318795204162598
    10. '     ' → logprob: -12.818795204162598

Token 1197: ' Single' (ID: 16035)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -4.56102097814437e-05
    2. '   ' → logprob: -10.125045776367188
    3. ' return' → logprob: -12.250045776367188
    4. '#' → logprob: -14.500045776367188
    5. 'if' → logprob: -16.000045776367188
    6. '	return' → logprob: -16.625045776367188
    7. '       ' → logprob: -16.875045776367188
    8. '  ' → logprob: -18.625045776367188
    9. ' ' → logprob: -18.750045776367188
    10. 'Return' → logprob: -19.250045776367188

Token 1198: ' conson' (ID: 127767)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3591814935207367
    2. ' '' → logprob: -1.984181523323059
    3. ''' → logprob: -3.6091814041137695
    4. ' )' → logprob: -3.7341814041137695
    5. ')' → logprob: -3.8591814041137695
    6. '_' → logprob: -3.8591814041137695
    7. '   ' → logprob: -4.2341814041137695
    8. ' True' → logprob: -5.1091814041137695
    9. 'c' → logprob: -5.2341814041137695
    10. ' 
' → logprob: -5.6091814041137695

Token 1199: 'ant' (ID: 493)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4071193337440491
    2. ')' → logprob: -1.6571192741394043
    3. '   ' → logprob: -3.6571192741394043
    4. 'nt' → logprob: -3.9071192741394043
    5. 'ant' → logprob: -4.532119274139404
    6. ' =' → logprob: -4.657119274139404
    7. 'con' → logprob: -4.907119274139404
    8. '=' → logprob: -5.032119274139404
    9. '):' → logprob: -5.032119274139404
    10. '):
' → logprob: -5.157119274139404

Token 1200: ' alone' (ID: 11238)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.092011570930481
    2. ':
' → logprob: -1.217011570930481
    3. ' and' → logprob: -2.2170114517211914
    4. '   ' → logprob: -2.5920114517211914
    5. ':return' → logprob: -2.7170114517211914
    6. '       ' → logprob: -3.4670114517211914
    7. ' return' → logprob: -4.342011451721191
    8. '           ' → logprob: -4.342011451721191
    9. 'return' → logprob: -4.467011451721191
    10. ' ' → logprob: -4.467011451721191

Token 1201: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7020314931869507
    2. '   ' → logprob: -1.2020314931869507
    3. ':
' → logprob: -2.5770316123962402
    4. ':' → logprob: -2.7020316123962402
    5. ':return' → logprob: -3.8270316123962402
    6. 'and' → logprob: -3.9520316123962402
    7. ' ' → logprob: -5.07703161239624
    8. '==' → logprob: -5.82703161239624
    9. 'return' → logprob: -6.20203161239624
    10. ' False' → logprob: -6.57703161239624

Token 1202: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03552563488483429
    2. '       ' → logprob: -4.160525798797607
    3. ':
' → logprob: -4.160525798797607
    4. ':' → logprob: -6.785525798797607
    5. ':return' → logprob: -7.035525798797607
    6. '==' → logprob: -7.535525798797607
    7. ' and' → logprob: -7.785525798797607
    8. ' return' → logprob: -8.28552532196045
    9. 'return' → logprob: -8.53552532196045
    10. ' ==' → logprob: -9.03552532196045

Token 1203: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4759174883365631
    2. '   ' → logprob: -1.2259174585342407
    3. ' return' → logprob: -2.4759175777435303
    4. '       ' → logprob: -6.975917339324951
    5. '	return' → logprob: -9.35091781616211
    6. '  ' → logprob: -10.22591781616211
    7. ' ' → logprob: -10.47591781616211
    8. '    ' → logprob: -10.85091781616211
    9. '     ' → logprob: -12.85091781616211
    10. '           ' → logprob: -14.35091781616211

Token 1204: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10758175700902939
    2. 'False' → logprob: -2.482581853866577
    3. ' True' → logprob: -4.107581615447998
    4. ' False' → logprob: -6.857581615447998
    5. 'm' → logprob: -7.482581615447998
    6. 'c' → logprob: -7.857581615447998
    7. ' c' → logprob: -11.607582092285156
    8. ' mora' → logprob: -12.232582092285156
    9. '(True' → logprob: -13.232582092285156
    10. 'mor' → logprob: -13.732582092285156

Token 1205: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07930777966976166
    2. '
' → logprob: -2.704307794570923
    3. '\n' → logprob: -5.454307556152344
    4. '    
' → logprob: -5.829307556152344
    5. 'if' → logprob: -6.954307556152344
    6. '  
' → logprob: -8.454307556152344
    7. 'elif' → logprob: -8.954307556152344
    8. '	' → logprob: -9.079307556152344
    9. '	
' → logprob: -9.829307556152344
    10. ' ' → logprob: -10.079307556152344

Token 1206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -7.338466093642637e-05
    2. 'if' → logprob: -10.250073432922363
    3. '    
' → logprob: -11.625073432922363
    4. 'elif' → logprob: -11.750073432922363
    5. 'False' → logprob: -12.375073432922363
    6. 'return' → logprob: -12.375073432922363
    7. ' if' → logprob: -12.625073432922363
    8. '
' → logprob: -13.500073432922363
    9. '	return' → logprob: -14.250073432922363
    10. ' False' → logprob: -14.250073432922363

Token 1207: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4329298138618469
    2. 'if' → logprob: -1.0579297542572021
    3. 'return' → logprob: -6.182929992675781
    4. 'elif' → logprob: -6.557929992675781
    5. '
' → logprob: -7.932929992675781
    6. ' if' → logprob: -8.307929992675781
    7. 'else' → logprob: -9.682929992675781
    8. 'c' → logprob: -10.807929992675781
    9. '    
' → logprob: -10.807929992675781
    10. 'v' → logprob: -11.057929992675781

Token 1208: ' mora' (ID: 47294)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0182616226375103
    2. 'return' → logprob: -4.393261432647705
    3. '   ' → logprob: -5.893261432647705
    4. 'v' → logprob: -6.018261432647705
    5. 'next' → logprob: -8.268261909484863
    6. 'second' → logprob: -8.643261909484863
    7. ' if' → logprob: -10.018261909484863
    8. 'first' → logprob: -10.268261909484863
    9. '#' → logprob: -11.268261909484863
    10. 'elif' → logprob: -12.268261909484863

Token 1209: ' starting' (ID: 8601)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6978047490119934
    2. 'startswith' → logprob: -2.4478046894073486
    3. '.startswith' → logprob: -2.6978046894073486
    4. '_length' → logprob: -2.6978046894073486
    5. 'def' → logprob: -3.4478046894073486
    6. 'in' → logprob: -3.4478046894073486
    7. '_len' → logprob: -3.4478046894073486
    8. 'len' → logprob: -3.6978046894073486
    9. ' =' → logprob: -4.072804927825928
    10. '[len' → logprob: -4.197804927825928

Token 1210: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.024250710383057594
    2. '[' → logprob: -3.8992507457733154
    3. ' with' → logprob: -6.649250507354736
    4. '==' → logprob: -6.774250507354736
    5. 's' → logprob: -7.649250507354736
    6. 'if' → logprob: -7.774250507354736
    7. 'in' → logprob: -9.274250984191895
    8. '=' → logprob: -9.649250984191895
    9. '_with' → logprob: -10.649250984191895
    10. ' ' → logprob: -10.899250984191895

Token 1211: ' vo' (ID: 778)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.387284517288208
    2. 'm' → logprob: -1.137284517288208
    3. ' c' → logprob: -8.762284278869629
    4. 'vo' → logprob: -9.887284278869629
    5. 'VOICE' → logprob: -10.137284278869629
    6. ' m' → logprob: -10.637284278869629
    7. ''' → logprob: -10.887284278869629
    8. 'VO' → logprob: -11.262284278869629
    9. ' ' → logprob: -11.449784278869629
    10. ''m' → logprob: -11.574784278869629

Token 1212: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0001710014621494338
    2. '
' → logprob: -9.125170707702637
    3. '```' → logprob: -11.625170707702637
    4. 'i' → logprob: -12.375170707702637
    5. 'icelo' → logprob: -12.375170707702637
    6. '``' → logprob: -12.500170707702637
    7. 'IC' → logprob: -12.500170707702637
    8. '#' → logprob: -12.500170707702637
    9. 'ice' → logprob: -12.625170707702637
    10. 'I' → logprob: -12.875170707702637

Token 1213: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -2.696889623621246e-06
    2. 'el' → logprob: -13.12500286102295
    3. 'eles' → logprob: -14.75000286102295
    4. 'less' → logprob: -15.50000286102295
    5. 'ele' → logprob: -17.375001907348633
    6. 'e' → logprob: -18.750001907348633
    7. 'ess' → logprob: -18.750001907348633
    8. '
' → logprob: -19.375001907348633
    9. 'els' → logprob: -19.500001907348633
    10. 'heless' → logprob: -19.750001907348633

Token 1214: ' conson' (ID: 127767)
  Prédit: '_con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.5446919202804565
    2. 'con' → logprob: -1.1696919202804565
    3. ' conson' → logprob: -2.794692039489746
    4. '   ' → logprob: -4.294692039489746
    5. 'c' → logprob: -4.669692039489746
    6. ' ' → logprob: -4.919692039489746
    7. '_' → logprob: -5.419692039489746
    8. 'v' → logprob: -5.669692039489746
    9. '_c' → logprob: -5.919692039489746
    10. '
' → logprob: -6.669692039489746

Token 1215: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.10048303008079529
    2. 'ants' → logprob: -2.350482940673828
    3. 'a' → logprob: -9.850482940673828
    4. '
' → logprob: -10.350482940673828
    5. 't' → logprob: -10.350482940673828
    6. 'onts' → logprob: -10.725482940673828
    7. 'con' → logprob: -10.850482940673828
    8. 'on' → logprob: -10.975482940673828
    9. 'ont' → logprob: -11.100482940673828
    10. '_' → logprob: -11.100482940673828

Token 1216: ' counts' (ID: 28991)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2504262924194336
    2. 'and' → logprob: -2.0004262924194336
    3. '   ' → logprob: -2.5004262924194336
    4. ' if' → logprob: -6.250426292419434
    5. 'if' → logprob: -7.000426292419434
    6. '<|end|>' → logprob: -7.250426292419434
    7. ':
' → logprob: -8.875426292419434
    8. ',' → logprob: -9.375426292419434
    9. ' ' → logprob: -9.750426292419434
    10. 'return' → logprob: -9.875426292419434

Token 1217: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21347442269325256
    2. ' and' → logprob: -2.3384745121002197
    3. ' True' → logprob: -3.3384745121002197
    4. ' if' → logprob: -4.463474273681641
    5. 'return' → logprob: -4.463474273681641
    6. 'True' → logprob: -4.838474273681641
    7. ' return' → logprob: -4.838474273681641
    8. 'and' → logprob: -5.213474273681641
    9. '       ' → logprob: -5.463474273681641
    10. ' for' → logprob: -5.838474273681641

Token 1218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10643662512302399
    2. 'and' → logprob: -2.6064367294311523
    3. ' and' → logprob: -3.6064367294311523
    4. 'return' → logprob: -11.981436729431152
    5. '       ' → logprob: -12.481436729431152
    6. '	and' → logprob: -12.731436729431152
    7. '  ' → logprob: -12.856436729431152
    8. ' if' → logprob: -12.981436729431152
    9. ',' → logprob: -13.856436729431152
    10. 'if' → logprob: -14.231436729431152

Token 1219: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1933918297290802
    2. ' and' → logprob: -1.9433917999267578
    3. 'and' → logprob: -4.443391799926758
    4. ':' → logprob: -5.068391799926758
    5. '       ' → logprob: -5.818391799926758
    6. ':
' → logprob: -5.943391799926758
    7. 'return' (adapté à ' return') → logprob: -6.318391799926758
    8. ' return' → logprob: -6.318391799926758
    9. ' if' → logprob: -6.943391799926758
    10. ' ' → logprob: -6.943391799926758

Token 1220: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.001982402754947543
    2. ' True' → logprob: -6.75198221206665
    3. 'm' → logprob: -7.12698221206665
    4. 'c' → logprob: -12.501982688903809
    5. '   ' → logprob: -13.501982688903809
    6. ' mora' → logprob: -13.751982688903809
    7. '(True' → logprob: -13.876982688903809
    8. 'mor' → logprob: -14.501982688903809
    9. 'true' → logprob: -14.626982688903809
    10. ' ' → logprob: -15.626982688903809

Token 1221: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1222: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14376148581504822
    2. 'def' → logprob: -2.893761396408081
    3. '#' → logprob: -3.393761396408081
    4. ')' → logprob: -4.01876163482666
    5. '<|end|>' → logprob: -4.76876163482666
    6. '(' → logprob: -5.26876163482666
    7. 'd' → logprob: -5.64376163482666
    8. '
' → logprob: -6.26876163482666
    9. '_' → logprob: -6.26876163482666
    10. '\' → logprob: -6.89376163482666

Token 1223: ' get' (ID: 717)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.1285593509674072
    2. 'main' → logprob: -2.1285593509674072
    3. 'has' → logprob: -2.2535593509674072
    4. ' is' → logprob: -2.3785593509674072
    5. ' main' → logprob: -2.3785593509674072
    6. 'convert' → logprob: -3.5035593509674072
    7. 'to' → logprob: -3.7535593509674072
    8. 'vo' → logprob: -3.8785593509674072
    9. 'count' → logprob: -3.8785593509674072
    10. ' has' → logprob: -4.503559112548828

Token 1224: '_v' (ID: 5390)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.9872092604637146
    2. '_m' → logprob: -1.7372093200683594
    3. '_v' → logprob: -2.2372093200683594
    4. '_vo' → logprob: -2.2372093200683594
    5. '_voice' → logprob: -2.4872093200683594
    6. '_token' → logprob: -3.2372093200683594
    7. '_' → logprob: -3.9872093200683594
    8. '_suffix' → logprob: -3.9872093200683594
    9. '_s' → logprob: -4.362209320068359
    10. '_last' → logprob: -4.737209320068359

Token 1225: 'owel' (ID: 27097)
  Prédit: 'owels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owels' → logprob: -0.17061419785022736
    2. 'owel' → logprob: -1.920614242553711
    3. 'o' → logprob: -4.795614242553711
    4. 'ow' → logprob: -7.170614242553711
    5. 'owe' → logprob: -7.295614242553711
    6. '```' → logprob: -9.670614242553711
    7. 'oc' → logprob: -9.795614242553711
    8. 'ocal' → logprob: -10.170614242553711
    9. 'ocoder' → logprob: -10.670614242553711
    10. 'owl' → logprob: -10.795614242553711

Token 1226: '(m' (ID: 2145)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04888790100812912
    2. '(' → logprob: -3.6738879680633545
    3. 's' → logprob: -4.798887729644775
    4. '_token' → logprob: -5.173887729644775
    5. '(s' → logprob: -6.048887729644775
    6. '<|end|>' → logprob: -6.673887729644775
    7. ')' → logprob: -7.298887729644775
    8. ')_' → logprob: -7.423887729644775
    9. '_next' → logprob: -7.798887729644775
    10. '('_' → logprob: -7.923887729644775

Token 1227: 'ora' (ID: 2505)
  Prédit: 'ora'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -0.01866525039076805
    2. 'o' → logprob: -4.643665313720703
    3. '(' → logprob: -5.018665313720703
    4. '(o' → logprob: -7.393665313720703
    5. 'def' → logprob: -8.143665313720703
    6. '(
' → logprob: -8.143665313720703
    7. '('' → logprob: -8.393665313720703
    8. 'or' → logprob: -9.018665313720703
    9. '```' → logprob: -9.518665313720703
    10. 'orra' → logprob: -9.893665313720703

Token 1228: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.062398627400398254
    2. '):
' → logprob: -2.812398672103882
    3. ')' → logprob: -8.812398910522461
    4. ',' → logprob: -9.062398910522461
    5. '):
' → logprob: -9.437398910522461
    6. '   ' → logprob: -10.062398910522461
    7. '(m' → logprob: -11.687398910522461
    8. 'm' → logprob: -11.937398910522461
    9. '[' → logprob: -12.187398910522461
    10. '_' → logprob: -12.312398910522461

Token 1229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01799505203962326
    2. 'm' → logprob: -4.5179948806762695
    3. '(m' → logprob: -5.7679948806762695
    4. 'if' → logprob: -6.5179948806762695
    5. 'v' → logprob: -6.7679948806762695
    6. ' if' → logprob: -7.8929948806762695
    7. '(' → logprob: -8.26799488067627
    8. ':' → logprob: -8.26799488067627
    9. 'return' → logprob: -9.51799488067627
    10. '(s' → logprob: -10.01799488067627

Token 1230: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35796090960502625
    2. 'if' → logprob: -1.3579609394073486
    3. '   ' → logprob: -3.2329609394073486
    4. ' for' → logprob: -6.1079607009887695
    5. ' if' → logprob: -7.3579607009887695
    6. 'i' → logprob: -7.6079607009887695
    7. 'v' → logprob: -7.7329607009887695
    8. 'm' → logprob: -8.85796070098877
    9. 'idx' → logprob: -8.85796070098877
    10. 'return' → logprob: -9.23296070098877

Token 1231: ' vowel' (ID: 165542)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1567790508270264
    2. 'v' → logprob: -1.6567790508270264
    3. 'for' → logprob: -1.6567790508270264
    4. 'm' → logprob: -1.9067790508270264
    5. 'def' → logprob: -3.1567790508270264
    6. 'i' → logprob: -3.1567790508270264
    7. '   ' → logprob: -3.2817790508270264
    8. ' if' → logprob: -4.7817792892456055
    9. ' for' → logprob: -5.1567792892456055
    10. 'pos' → logprob: -5.5317792892456055

Token 1232: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9043094515800476
    2. '_index' → logprob: -1.2793095111846924
    3. '=' → logprob: -2.1543095111846924
    4. '_idx' → logprob: -2.5293095111846924
    5. 's' → logprob: -2.7793095111846924
    6. '_pos' → logprob: -4.029309272766113
    7. '_chars' → logprob: -4.779309272766113
    8. 'idx' → logprob: -5.154309272766113
    9. '_start' → logprob: -5.529309272766113
    10. 'import' → logprob: -5.654309272766113

Token 1233: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.4060561776859686e-05
    2. '[m' → logprob: -11.000043869018555
    3. '[' → logprob: -12.000043869018555
    4. ' ' → logprob: -12.625043869018555
    5. 'the' → logprob: -13.250043869018555
    6. '''' → logprob: -13.375043869018555
    7. ' m' → logprob: -13.750043869018555
    8. ' [' → logprob: -13.750043869018555
    9. ' mora' → logprob: -13.750043869018555
    10. '   ' → logprob: -14.000043869018555

Token 1234: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5334184169769287
    2. '=' → logprob: -0.9084184169769287
    3. '_index' → logprob: -5.783418655395508
    4. '   ' → logprob: -6.033418655395508
    5. ':' → logprob: -6.783418655395508
    6. '_idx' → logprob: -7.408418655395508
    7. 'idx' → logprob: -7.408418655395508
    8. '=
' → logprob: -7.658418655395508
    9. '=m' → logprob: -7.908418655395508
    10. 'def' → logprob: -8.158418655395508

Token 1235: ' last' (ID: 2174)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.019566133618354797
    2. '''' → logprob: -5.019566059112549
    3. '[' → logprob: -5.894566059112549
    4. 'None' → logprob: -6.019566059112549
    5. 'next' → logprob: -6.144566059112549
    6. '[m' → logprob: -6.769566059112549
    7. ' [' → logprob: -6.894566059112549
    8. ' next' → logprob: -7.269566059112549
    9. ' mora' → logprob: -7.519566059112549
    10. ' ' → logprob: -7.769566059112549

Token 1236: ' character' (ID: 5855)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.19015184044837952
    2. 'char' → logprob: -2.3151519298553467
    3. 'character' → logprob: -3.6901519298553467
    4. '_char' → logprob: -3.9401519298553467
    5. ')' → logprob: -4.940151691436768
    6. '_' → logprob: -5.315151691436768
    7. '_character' → logprob: -5.315151691436768
    8. 'token' → logprob: -5.690151691436768
    9. '_m' → logprob: -5.940151691436768
    10. ' character' → logprob: -6.315151691436768

Token 1237: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7798267602920532
    2. ']' → logprob: -1.5298267602920532
    3. '   ' → logprob: -2.4048266410827637
    4. 'def' → logprob: -2.4048266410827637
    5. 'm' → logprob: -3.2798266410827637
    6. '<|end|>' → logprob: -3.2798266410827637
    7. 'return' → logprob: -3.7798266410827637
    8. '(m' → logprob: -4.529826641082764
    9. '<|end|>' → logprob: -4.779826641082764
    10. '```' → logprob: -5.654826641082764

Token 1238: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002134079346433282
    2. 'len' → logprob: -6.752133846282959
    3. ' mora' → logprob: -7.002133846282959
    4. ' len' → logprob: -10.627134323120117
    5. ' ' → logprob: -11.627134323120117
    6. '(m' → logprob: -12.252134323120117
    7. '   ' → logprob: -12.502134323120117
    8. '(len' → logprob: -12.627134323120117
    9. '  ' → logprob: -13.502134323120117
    10. '	m' → logprob: -13.752134323120117

Token 1239: ' length' (ID: 5517)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.030955184251070023
    2. '.endswith' → logprob: -4.1559553146362305
    3. 'def' → logprob: -5.6559553146362305
    4. '   ' → logprob: -5.6559553146362305
    5. ' and' → logprob: -6.4059553146362305
    6. ' in' → logprob: -6.6559553146362305
    7. '==' → logprob: -7.4059553146362305
    8. '.' → logprob: -7.5309553146362305
    9. ' if' → logprob: -7.5309553146362305
    10. ')' → logprob: -7.5309553146362305

Token 1240: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03298582881689072
    2. ' >' → logprob: -3.7829859256744385
    3. '==' → logprob: -4.907985687255859
    4. '>=' → logprob: -6.657985687255859
    5. ' ==' → logprob: -7.282985687255859
    6. ' >=' → logprob: -8.28298568725586
    7. ')' → logprob: -11.03298568725586
    8. '<len' → logprob: -11.40798568725586
    9. '```' → logprob: -11.78298568725586
    10. '   ' → logprob: -11.90798568725586

Token 1241: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0717141330242157
    2. '0' → logprob: -2.696714162826538
    3. ' ' → logprob: -6.696713924407959
    4. '=' → logprob: -7.696713924407959
    5. '>' → logprob: -10.446714401245117
    6. '```' → logprob: -10.696714401245117
    7. '   ' → logprob: -11.321714401245117
    8. '
' → logprob: -11.696714401245117
    9. '==' → logprob: -12.446714401245117
    10. ' =' → logprob: -12.446714401245117

Token 1242: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.523587703704834
    2. '1' → logprob: -0.898587703704834
    3. '=' → logprob: -7.773587703704834
    4. ' ' → logprob: -10.398588180541992
    5. '
' → logprob: -12.773588180541992
    6. '```' → logprob: -12.773588180541992
    7. '2' → logprob: -13.148588180541992
    8. ':' → logprob: -14.148588180541992
    9. ' =' → logprob: -14.336088180541992
    10. '-' → logprob: -14.398588180541992

Token 1243: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20065820217132568
    2. ' if' → logprob: -1.8256582021713257
    3. 'if' → logprob: -4.575658321380615
    4. ':' → logprob: -5.325658321380615
    5. ':
' → logprob: -6.200658321380615
    6. ' ' → logprob: -6.950658321380615
    7. ')' → logprob: -7.075658321380615
    8. 'def' → logprob: -7.700658321380615
    9. '       ' → logprob: -8.075657844543457
    10. 'return' → logprob: -8.700657844543457

Token 1244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05993126332759857
    2. ':' → logprob: -3.5599312782287598
    3. ' if' → logprob: -3.8099312782287598
    4. ' ' → logprob: -6.43493127822876
    5. '[' → logprob: -6.80993127822876
    6. 'if' → logprob: -6.80993127822876
    7. ':
' → logprob: -7.18493127822876
    8. ')' → logprob: -7.55993127822876
    9. ':return' → logprob: -7.68493127822876
    10. 'return' → logprob: -7.80993127822876

Token 1245: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10331752896308899
    2. 'if' → logprob: -3.1033174991607666
    3. ' if' → logprob: -3.2283174991607666
    4. ':' → logprob: -5.228317737579346
    5. 'm' → logprob: -5.603317737579346
    6. ':
' → logprob: -6.603317737579346
    7. 'return' → logprob: -6.853317737579346
    8. '```' → logprob: -7.228317737579346
    9. ' ' → logprob: -7.853317737579346
    10. '`' → logprob: -7.853317737579346

Token 1246: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7968530654907227
    2. ' if' → logprob: -1.2968530654907227
    3. 'if' → logprob: -1.2968530654907227
    4. 'return' → logprob: -6.296853065490723
    5. 'v' → logprob: -7.921853065490723
    6. ' return' → logprob: -8.546853065490723
    7. '```' → logprob: -10.671853065490723
    8. ' ' → logprob: -11.171853065490723
    9. 'for' → logprob: -11.421853065490723
    10. '`' → logprob: -11.671853065490723

Token 1247: ' character' (ID: 5855)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.19347964227199554
    2. ' mora' → logprob: -1.8184796571731567
    3. ' m' → logprob: -5.318479537963867
    4. ' len' → logprob: -6.068479537963867
    5. 'len' → logprob: -6.193479537963867
    6. ' (' → logprob: -6.943479537963867
    7. ' mor' → logprob: -7.318479537963867
    8. '(m' → logprob: -7.318479537963867
    9. '   ' → logprob: -7.693479537963867
    10. 's' → logprob: -8.443479537963867

Token 1248: ' itself' (ID: 8807)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6962248682975769
    2. '[-' → logprob: -1.1962249279022217
    3. '=' → logprob: -3.3212249279022217
    4. ' if' → logprob: -3.4462249279022217
    5. 'def' → logprob: -3.5712249279022217
    6. 'm' → logprob: -3.5712249279022217
    7. 's' → logprob: -3.8212249279022217
    8. 'if' → logprob: -4.071224689483643
    9. '(m' → logprob: -4.446224689483643
    10. '=m' → logprob: -5.071224689483643

Token 1249: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2461889088153839
    2. '(m' → logprob: -1.8711888790130615
    3. ':
' → logprob: -3.9961888790130615
    4. 'def' → logprob: -4.121189117431641
    5. ' if' → logprob: -4.621189117431641
    6. ':' → logprob: -4.746189117431641
    7. 'if' → logprob: -4.996189117431641
    8. 'm' → logprob: -5.871189117431641
    9. '):
' → logprob: -7.496189117431641
    10. '```' → logprob: -8.74618911743164

Token 1250: ' single' (ID: 4590)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.020554153248667717
    2. 'len' → logprob: -4.270554065704346
    3. ' mora' → logprob: -5.145554065704346
    4. ' len' → logprob: -7.770554065704346
    5. ' ' → logprob: -10.270554542541504
    6. ' m' → logprob: -11.270554542541504
    7. '	m' → logprob: -11.520554542541504
    8. '(len' → logprob: -11.520554542541504
    9. ' Mora' → logprob: -12.020554542541504
    10. '   ' → logprob: -12.020554542541504

Token 1251: ' vowel' (ID: 165542)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'char' → logprob: -1.1508417129516602
    2. 'm' → logprob: -1.4008417129516602
    3. ' character' → logprob: -1.9008417129516602
    4. 'character' → logprob: -2.40084171295166
    5. '_char' → logprob: -3.52584171295166
    6. '_' → logprob: -3.65084171295166
    7. ' char' → logprob: -3.65084171295166
    8. ')' → logprob: -4.15084171295166
    9. '   ' → logprob: -4.27584171295166
    10. 'token' → logprob: -4.65084171295166

Token 1252: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19544829428195953
    2. ':
' → logprob: -2.695448398590088
    3. 'if' → logprob: -2.820448398590088
    4. '   ' → logprob: -3.820448398590088
    5. ':' → logprob: -3.945448398590088
    6. 'def' → logprob: -5.570448398590088
    7. '(m' → logprob: -6.445448398590088
    8. ' and' → logprob: -6.445448398590088
    9. '
' → logprob: -8.07044792175293
    10. 'm' → logprob: -8.19544792175293

Token 1253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07230059802532196
    2. ':' → logprob: -2.697300672531128
    3. ':
' → logprob: -6.822300434112549
    4. 'def' → logprob: -7.072300434112549
    5. ' if' → logprob: -8.822300910949707
    6. 'if' → logprob: -8.947300910949707
    7. '):' → logprob: -10.947300910949707
    8. '{' → logprob: -11.072300910949707
    9. ' :' → logprob: -11.197300910949707
    10. '(' → logprob: -11.322300910949707

Token 1254: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031213808804750443
    2. ' if' → logprob: -4.156213760375977
    3. 'if' → logprob: -4.281213760375977
    4. 'return' → logprob: -7.031213760375977
    5. ' return' → logprob: -8.531213760375977
    6. 'v' → logprob: -9.656213760375977
    7. ':' → logprob: -10.406213760375977
    8. ':
' → logprob: -10.781213760375977
    9. ' ' → logprob: -11.906213760375977
    10. '	if' → logprob: -12.031213760375977

Token 1255: ' mora' (ID: 47294)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6606389880180359
    2. '   ' → logprob: -0.9106389880180359
    3. ' if' → logprob: -2.7856390476226807
    4. 'return' → logprob: -4.160638809204102
    5. 'def' → logprob: -6.285638809204102
    6. 'v' → logprob: -7.160638809204102
    7. ' return' → logprob: -7.660638809204102
    8. 'for' → logprob: -8.785638809204102
    9. ':' → logprob: -8.910638809204102
    10. '```' → logprob: -9.035638809204102

Token 1256: ' can't' (ID: 8535)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.31345975399017334
    2. ' =' → logprob: -1.6884597539901733
    3. '=' → logprob: -3.813459873199463
    4. '_len' → logprob: -4.063459873199463
    5. '.endswith' → logprob: -4.563459873199463
    6. '_length' → logprob: -5.063459873199463
    7. '[len' → logprob: -5.063459873199463
    8. 'len' → logprob: -5.438459873199463
    9. ')' → logprob: -5.813459873199463
    10. '_tokens' → logprob: -5.938459873199463

Token 1257: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.04346098750829697
    2. 'be' → logprob: -3.1684610843658447
    3. ' have' → logprob: -9.043460845947266
    4. ' end' → logprob: -9.043460845947266
    5. 'len' → logprob: -9.418460845947266
    6. 'end' → logprob: -10.293460845947266
    7. 'have' → logprob: -10.418460845947266
    8. ' ' → logprob: -10.918460845947266
    9. '   ' → logprob: -11.918460845947266
    10. ' in' → logprob: -11.918460845947266

Token 1258: ' empty' (ID: 8213)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0981404259800911
    2. 'm' → logprob: -3.3481404781341553
    3. 'len' → logprob: -3.9731404781341553
    4. 'v' → logprob: -4.848140239715576
    5. '1' → logprob: -4.973140239715576
    6. '""' → logprob: -5.473140239715576
    7. ''' → logprob: -5.848140239715576
    8. '''
' → logprob: -5.973140239715576
    9. 'empty' → logprob: -6.098140239715576
    10. 'single' → logprob: -6.473140239715576

Token 1259: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10328947007656097
    2. ':
' → logprob: -2.9782893657684326
    3. ':' → logprob: -3.7282893657684326
    4. 'def' → logprob: -4.103289604187012
    5. 'if' → logprob: -5.728289604187012
    6. ' if' → logprob: -5.853289604187012
    7. '):
' → logprob: -9.103289604187012
    8. '
' → logprob: -9.353289604187012
    9. '```' → logprob: -9.603289604187012
    10. 'm' → logprob: -9.978289604187012

Token 1260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007803226821124554
    2. ':' → logprob: -5.757803440093994
    3. ' if' → logprob: -6.382803440093994
    4. 'return' → logprob: -7.007803440093994
    5. 'if' → logprob: -7.257803440093994
    6. ' return' → logprob: -7.632803440093994
    7. ':
' → logprob: -7.632803440093994
    8. ':return' → logprob: -9.132802963256836
    9. '```' → logprob: -9.382802963256836
    10. 'def' → logprob: -9.632802963256836

Token 1261: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38326892256736755
    2. 'if' → logprob: -1.88326895236969
    3. 'return' → logprob: -2.3832688331604004
    4. ' if' → logprob: -2.7582688331604004
    5. ' return' → logprob: -4.6332688331604
    6. 'v' → logprob: -7.2582688331604
    7. 'for' → logprob: -9.008269309997559
    8. ' for' → logprob: -10.008269309997559
    9. '	return' → logprob: -12.133269309997559
    10. '
' → logprob: -12.258269309997559

Token 1262: ' mora' (ID: 47294)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4564560651779175
    2. '   ' → logprob: -1.7064560651779175
    3. 'if' → logprob: -1.7064560651779175
    4. ' return' → logprob: -6.331456184387207
    5. ' if' → logprob: -6.581456184387207
    6. 'for' → logprob: -8.706456184387207
    7. 'v' → logprob: -9.331456184387207
    8. '```' → logprob: -10.581456184387207
    9. '	return' → logprob: -12.331456184387207
    10. '`' → logprob: -12.456456184387207

Token 1263: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3227226734161377
    2. '=' → logprob: -1.9477226734161377
    3. '_len' → logprob: -2.8227226734161377
    4. '[-' → logprob: -3.3227226734161377
    5. '_length' → logprob: -4.572722434997559
    6. 'def' → logprob: -4.947722434997559
    7. '_chars' → logprob: -5.572722434997559
    8. '_tokens' → logprob: -5.697722434997559
    9. '_last' → logprob: -6.072722434997559
    10. 'len' → logprob: -6.197722434997559

Token 1264: ' '' (ID: 461)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6353986859321594
    2. 'if' → logprob: -1.5103986263275146
    3. ' if' → logprob: -1.5103986263275146
    4. '   ' → logprob: -5.135398864746094
    5. 'v' → logprob: -5.385398864746094
    6. '
' → logprob: -6.010398864746094
    7. 'for' → logprob: -6.135398864746094
    8. 'return' → logprob: -6.385398864746094
    9. '```' → logprob: -6.385398864746094
    10. 's' → logprob: -6.510398864746094

Token 1265: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3594955503940582
    2. 'm' → logprob: -1.6094955205917358
    3. ''' → logprob: -2.8594956398010254
    4. 'k' → logprob: -4.734495639801025
    5. ''a' → logprob: -4.734495639801025
    6. 'v' → logprob: -5.109495639801025
    7. 'i' → logprob: -5.484495639801025
    8. 's' → logprob: -5.734495639801025
    9. 'ki' → logprob: -6.109495639801025
    10. 'def' → logprob: -6.859495639801025

Token 1266: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.44649824500083923
    2. '')' → logprob: -1.0714982748031616
    3. ')'' → logprob: -5.071498394012451
    4. 'a' → logprob: -5.321498394012451
    5. '',' → logprob: -5.946498394012451
    6. ''),' → logprob: -7.071498394012451
    7. '')
' → logprob: -7.321498394012451
    8. ''
' → logprob: -7.696498394012451
    9. ''a' → logprob: -7.946498394012451
    10. ')' → logprob: -7.946498394012451

Token 1267: 'ki' (ID: 3129)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.17357134819030762
    2. ''i' → logprob: -2.4235713481903076
    3. ''' → logprob: -3.4235713481903076
    4. 'ki' → logprob: -4.423571586608887
    5. 'k' → logprob: -4.673571586608887
    6. 'e' → logprob: -4.923571586608887
    7. 'u' → logprob: -5.298571586608887
    8. ''u' → logprob: -5.798571586608887
    9. 'ka' → logprob: -7.923571586608887
    10. ''e' → logprob: -8.548571586608887

Token 1268: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4199656546115875
    2. '')' → logprob: -1.4199656248092651
    3. '',' → logprob: -2.7949657440185547
    4. '','' → logprob: -3.2949657440185547
    5. ')'' → logprob: -7.044965744018555
    6. ')' → logprob: -7.419965744018555
    7. '''' → logprob: -7.669965744018555
    8. '')
' → logprob: -8.419965744018555
    9. ')',' → logprob: -8.669965744018555
    10. ''),' → logprob: -9.294965744018555

Token 1269: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7636892199516296
    2. 'ky' → logprob: -0.7636892199516296
    3. 'ku' → logprob: -3.6386892795562744
    4. ''' → logprob: -4.638689041137695
    5. 'ry' → logprob: -4.888689041137695
    6. 'yu' → logprob: -5.138689041137695
    7. 'ka' → logprob: -6.263689041137695
    8. 'ya' → logprob: -6.388689041137695
    9. 'ko' → logprob: -6.638689041137695
    10. 'ki' → logprob: -6.638689041137695

Token 1270: 'yo' (ID: 4925)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6228730082511902
    2. 'a' → logprob: -1.122873067855835
    3. 'yu' → logprob: -2.747873067855835
    4. 'yo' → logprob: -3.497873067855835
    5. 'u' → logprob: -3.747873067855835
    6. 'i' → logprob: -4.497872829437256
    7. 'o' → logprob: -5.247872829437256
    8. 'ya' → logprob: -6.372872829437256
    9. ''y' → logprob: -7.622872829437256
    10. ''' → logprob: -7.872872829437256

Token 1271: '','' (ID: 4074)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5886299014091492
    2. ''' → logprob: -1.088629961013794
    3. 'u' → logprob: -2.588629961013794
    4. '',' → logprob: -4.213629722595215
    5. 'n' → logprob: -4.713629722595215
    6. '','' → logprob: -4.963629722595215
    7. ''u' → logprob: -7.588629722595215
    8. ')' → logprob: -7.963629722595215
    9. '')
' → logprob: -7.963629722595215
    10. '''' → logprob: -8.338629722595215

Token 1272: 'n' (ID: 77)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.38347870111465454
    2. 'ku' → logprob: -2.1334786415100098
    3. 'a' → logprob: -2.7584786415100098
    4. 'k' → logprob: -3.6334786415100098
    5. 'o' → logprob: -3.8834786415100098
    6. 'ka' → logprob: -4.13347864151001
    7. 'ky' → logprob: -4.25847864151001
    8. ''' → logprob: -4.63347864151001
    9. ''u' → logprob: -4.75847864151001
    10. 'ko' → logprob: -5.00847864151001

Token 1273: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15036222338676453
    2. '')' → logprob: -3.275362253189087
    3. '',' → logprob: -3.275362253189087
    4. '''' → logprob: -4.025362014770508
    5. ')'' → logprob: -4.025362014770508
    6. ')' → logprob: -4.900362014770508
    7. ''
' → logprob: -5.525362014770508
    8. '','' → logprob: -5.900362014770508
    9. ')',' → logprob: -6.025362014770508
    10. '\'' → logprob: -6.150362014770508

Token 1274: 'n' (ID: 77)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9313085079193115
    2. 'a' → logprob: -1.0563085079193115
    3. 'n' → logprob: -1.8063085079193115
    4. '''' → logprob: -3.5563085079193115
    5. 'u' → logprob: -3.9313085079193115
    6. '')' → logprob: -4.431308746337891
    7. '\'' → logprob: -4.931308746337891
    8. '"' → logprob: -5.556308746337891
    9. ''a' → logprob: -5.931308746337891
    10. 'o' → logprob: -6.056308746337891

Token 1275: '''
' (ID: 147692)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14710792899131775
    2. '')' → logprob: -2.7721078395843506
    3. ')'' → logprob: -3.1471078395843506
    4. '''' → logprob: -4.14710807800293
    5. ')' → logprob: -5.27210807800293
    6. '\'' → logprob: -6.39710807800293
    7. 'u' → logprob: -6.39710807800293
    8. '"' → logprob: -6.64710807800293
    9. '"'' → logprob: -6.64710807800293
    10. ''''' → logprob: -7.02210807800293

Token 1276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5490449070930481
    2. 'def' → logprob: -1.4240448474884033
    3. 'if' → logprob: -2.6740448474884033
    4. ':' → logprob: -2.7990448474884033
    5. ' if' → logprob: -3.6740448474884033
    6. ':
' → logprob: -4.049045085906982
    7. '```' → logprob: -5.674045085906982
    8. '):
' → logprob: -6.674045085906982
    9. 'v' → logprob: -7.049045085906982
    10. ')' → logprob: -7.174045085906982

Token 1277: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16838227212429047
    2. 'if' → logprob: -2.668382167816162
    3. ' if' → logprob: -2.793382167816162
    4. ':' → logprob: -4.043382167816162
    5. 'return' → logprob: -6.043382167816162
    6. 'v' → logprob: -6.793382167816162
    7. '```' → logprob: -6.918382167816162
    8. ' return' → logprob: -7.168382167816162
    9. '`' → logprob: -7.543382167816162
    10. ':
' → logprob: -7.793382167816162

Token 1278: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03811103478074074
    2. 'for' → logprob: -3.4131109714508057
    3. ' if' → logprob: -6.538111209869385
    4. '   ' → logprob: -6.538111209869385
    5. 'v' → logprob: -7.288111209869385
    6. 'return' → logprob: -7.913111209869385
    7. ' for' → logprob: -8.913110733032227
    8. '```' → logprob: -9.038110733032227
    9. 'last' → logprob: -9.538110733032227
    10. 'def' → logprob: -9.538110733032227

Token 1279: ' '' (ID: 461)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.1744983047246933
    2. 'len' → logprob: -2.4244983196258545
    3. ' len' → logprob: -4.049498081207275
    4. ' mora' → logprob: -4.299498081207275
    5. ' m' → logprob: -4.924498081207275
    6. 'c' → logprob: -5.174498081207275
    7. 'v' → logprob: -5.299498081207275
    8. ' ' → logprob: -5.424498081207275
    9. ' c' → logprob: -5.549498081207275
    10. 'char' → logprob: -6.299498081207275

Token 1280: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.34830373525619507
    2. 'n' → logprob: -1.4733037948608398
    3. 'k' → logprob: -3.47330379486084
    4. ''' → logprob: -3.84830379486084
    5. 'a' → logprob: -5.09830379486084
    6. '"' → logprob: -6.47330379486084
    7. '')' → logprob: -6.59830379486084
    8. '''' → logprob: -6.97330379486084
    9. 'ky' → logprob: -7.09830379486084
    10. 'ki' → logprob: -8.72330379486084

Token 1281: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04817836731672287
    2. '''' → logprob: -3.4231784343719482
    3. ')' → logprob: -5.548178195953369
    4. ''''' → logprob: -6.673178195953369
    5. '':' → logprob: -6.798178195953369
    6. '')' → logprob: -6.923178195953369
    7. 'n' → logprob: -7.048178195953369
    8. '"' → logprob: -7.048178195953369
    9. ')'' → logprob: -7.298178195953369
    10. '\'' → logprob: -7.548178195953369

Token 1282: ' mor' (ID: 4658)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4499114751815796
    2. 'if' → logprob: -1.4499114751815796
    3. ' if' → logprob: -2.324911594390869
    4. ':' → logprob: -4.199911594390869
    5. ':
' → logprob: -4.949911594390869
    6. '   ' → logprob: -6.074911594390869
    7. '
' → logprob: -6.824911594390869
    8. 'return' → logprob: -7.074911594390869
    9. ' def' → logprob: -7.574911594390869
    10. ' ' → logprob: -7.574911594390869

Token 1283: 'as' (ID: 288)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.961759259458631e-06
    2. 'as' → logprob: -12.875004768371582
    3. ''a' → logprob: -14.250004768371582
    4. 'def' → logprob: -14.625004768371582
    5. '```' → logprob: -15.125004768371582
    6. 'а' → logprob: -15.500004768371582
    7. '#' → logprob: -15.750004768371582
    8. '
' → logprob: -15.875004768371582
    9. '=' → logprob: -16.2500057220459
    10. '   ' → logprob: -16.5000057220459

Token 1284: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8381326794624329
    2. '   ' → logprob: -1.213132619857788
    3. 'if' → logprob: -2.213132619857788
    4. 'def' → logprob: -2.713132619857788
    5. ':' → logprob: -3.213132619857788
    6. ':
' → logprob: -3.338132619857788
    7. ',' → logprob: -4.213132858276367
    8. ' ' → logprob: -6.713132858276367
    9. ' or' → logprob: -6.963132858276367
    10. '
' → logprob: -8.213132858276367

Token 1285: ' no' (ID: 860)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5780565142631531
    2. 'if' → logprob: -0.8280565142631531
    3. '   ' → logprob: -6.703056335449219
    4. 'return' → logprob: -7.703056335449219
    5. ' return' → logprob: -8.078056335449219
    6. 'v' → logprob: -9.328056335449219
    7. 'def' → logprob: -11.578056335449219
    8. '
' → logprob: -12.328056335449219
    9. ' ' → logprob: -12.328056335449219
    10. '#' → logprob: -12.578056335449219

Token 1286: ' vowel' (ID: 165542)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20927393436431885
    2. 'return' → logprob: -2.0842738151550293
    3. ' return' → logprob: -2.9592738151550293
    4. ' vowel' → logprob: -4.834273815155029
    5. '   ' → logprob: -6.459273815155029
    6. '
' → logprob: -7.334273815155029
    7. ' vowels' → logprob: -7.584273815155029
    8. 'def' → logprob: -7.584273815155029
    9. 'if' → logprob: -7.709273815155029
    10. ' if' → logprob: -7.834273815155029

Token 1287: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0382307767868042
    2. '   ' → logprob: -1.2882307767868042
    3. 'if' → logprob: -1.6632307767868042
    4. 'def' → logprob: -1.9132307767868042
    5. ':' → logprob: -3.7882308959960938
    6. ':
' → logprob: -4.913230895996094
    7. '
' → logprob: -6.663230895996094
    8. '```' → logprob: -6.913230895996094
    9. ' ' → logprob: -8.163230895996094
    10. ' for' → logprob: -9.413230895996094

Token 1288: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.23680731654167175
    2. 'if' → logprob: -1.9868073463439941
    3. '   ' → logprob: -2.611807346343994
    4. '```' → logprob: -8.736806869506836
    5. ' for' → logprob: -9.986806869506836
    6. 'def' → logprob: -10.111806869506836
    7. 'for' → logprob: -10.611806869506836
    8. 'v' → logprob: -10.736806869506836
    9. ':' → logprob: -11.611806869506836
    10. '`' → logprob: -12.111806869506836

Token 1289: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4203362464904785
    2. ' if' → logprob: -1.1703362464904785
    3. '   ' → logprob: -3.4203362464904785
    4. 'for' → logprob: -9.17033576965332
    5. 'v' → logprob: -9.79533576965332
    6. ' for' → logprob: -10.29533576965332
    7. '```' → logprob: -11.29533576965332
    8. '
' → logprob: -13.67033576965332
    9. ' ' → logprob: -13.79533576965332
    10. '	if' → logprob: -14.79533576965332

Token 1290: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.4140441635390744e-05
    2. ' mora' → logprob: -11.250014305114746
    3. 'len' → logprob: -14.250014305114746
    4. ' ' → logprob: -15.875014305114746
    5. '   ' → logprob: -16.00001335144043
    6. ''m' → logprob: -16.50001335144043
    7. 'not' → logprob: -16.62501335144043
    8. '	m' → logprob: -16.87501335144043
    9. '  ' → logprob: -17.50001335144043
    10. ''' → logprob: -17.62501335144043

Token 1291: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6153223514556885
    2. '==' → logprob: -0.8653223514556885
    3. ' in' → logprob: -3.6153223514556885
    4. '=='' → logprob: -4.740322113037109
    5. 'in' → logprob: -6.240322113037109
    6. '[' → logprob: -6.990322113037109
    7. ' =='' → logprob: -10.74032211303711
    8. '=="' → logprob: -10.99032211303711
    9. '   ' → logprob: -11.36532211303711
    10. '.startswith' → logprob: -11.49032211303711

Token 1292: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.007637389935553074
    2. ''n' → logprob: -4.8826375007629395
    3. 'n' → logprob: -11.382637023925781
    4. '"'' → logprob: -11.507637023925781
    5. ' "' → logprob: -12.132637023925781
    6. '("' → logprob: -13.257637023925781
    7. '"N' → logprob: -14.632637023925781
    8. ''' → logprob: -14.882637023925781
    9. '“' → logprob: -15.382637023925781
    10. '   ' → logprob: -15.882637023925781

Token 1293: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012379317544400692
    2. '"' → logprob: -4.637379169464111
    3. ''n' → logprob: -6.012379169464111
    4. 'n't' → logprob: -8.76237964630127
    5. ''' → logprob: -11.88737964630127
    6. '""' → logprob: -13.26237964630127
    7. '\n' → logprob: -14.13737964630127
    8. '```' → logprob: -14.26237964630127
    9. '"""' → logprob: -14.51237964630127
    10. '"'' → logprob: -14.51237964630127

Token 1294: '"' (ID: 1)
  Prédit: ''"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''"' → logprob: -0.2185066044330597
    2. ''' → logprob: -1.7185065746307373
    3. '"' → logprob: -4.093506813049316
    4. ''"
' → logprob: -9.093506813049316
    5. '"'' → logprob: -9.343506813049316
    6. '''' → logprob: -11.593506813049316
    7. ''n' → logprob: -11.718506813049316
    8. '":
' → logprob: -11.843506813049316
    9. ''or' → logprob: -11.843506813049316
    10. 'n' → logprob: -11.843506813049316

Token 1295: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.05443362891674042
    2. ':
' → logprob: -3.679433584213257
    3. 'or' → logprob: -4.304433822631836
    4. ':' → logprob: -4.554433822631836
    5. '   ' → logprob: -5.804433822631836
    6. ':return' → logprob: -7.679433822631836
    7. ' ' → logprob: -9.679433822631836
    8. '	or' → logprob: -10.179433822631836
    9. ''or' → logprob: -10.429433822631836
    10. '==' → logprob: -10.554433822631836

Token 1296: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00018625585653353482
    2. ' mora' → logprob: -9.2501859664917
    3. '"' → logprob: -9.6251859664917
    4. '   ' → logprob: -12.0001859664917
    5. 'mor' → logprob: -12.1251859664917
    6. ' ' → logprob: -13.1251859664917
    7. 'mo' → logprob: -13.6251859664917
    8. 'n' → logprob: -13.7501859664917
    9. '	m' → logprob: -13.7501859664917
    10. '""' → logprob: -13.8751859664917

Token 1297: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.014810891821980476
    2. ' ==' → logprob: -4.264811038970947
    3. '=="' → logprob: -7.514811038970947
    4. '=' → logprob: -9.389810562133789
    5. '=='' → logprob: -11.264810562133789
    6. '[' → logprob: -12.764810562133789
    7. '"' → logprob: -13.889810562133789
    8. '==
' → logprob: -14.139810562133789
    9. '.startswith' → logprob: -15.264810562133789
    10. ' =' → logprob: -15.889810562133789

Token 1298: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00020926215802319348
    2. ''n' → logprob: -9.250208854675293
    3. 'n' → logprob: -9.875208854675293
    4. ' "' → logprob: -10.375208854675293
    5. '"N' → logprob: -10.875208854675293
    6. '("' → logprob: -12.750208854675293
    7. '"""' → logprob: -13.375208854675293
    8. '"'' → logprob: -13.625208854675293
    9. '#"' → logprob: -14.000208854675293
    10. '")' → logprob: -14.625208854675293

Token 1299: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0003963569179177284
    2. '"' → logprob: -8.750396728515625
    3. 'n't' → logprob: -8.875396728515625
    4. ''n' → logprob: -9.875396728515625
    5. ''' → logprob: -10.625396728515625
    6. ''"' → logprob: -10.875396728515625
    7. '"'' → logprob: -12.875396728515625
    8. '''' → logprob: -14.625396728515625
    9. '\n' → logprob: -16.375396728515625
    10. '```' → logprob: -17.000396728515625

Token 1300: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02978312037885189
    2. ''"' → logprob: -3.529783010482788
    3. ''"
' → logprob: -11.279783248901367
    4. '"' → logprob: -11.404783248901367
    5. '\'' → logprob: -13.279783248901367
    6. '"'' → logprob: -13.279783248901367
    7. '''' → logprob: -13.404783248901367
    8. ''or' → logprob: -14.029783248901367
    9. ''n' → logprob: -14.154783248901367
    10. ''",
' → logprob: -14.904783248901367

Token 1301: '":
' (ID: 9213)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31755220890045166
    2. '":
' → logprob: -1.6925522089004517
    3. '":' → logprob: -2.692552089691162
    4. ''' → logprob: -4.067552089691162
    5. '":
' → logprob: -6.567552089691162
    6. '"):
' → logprob: -6.692552089691162
    7. ''"' → logprob: -8.06755256652832
    8. '```' → logprob: -9.81755256652832
    9. '):
' → logprob: -10.56755256652832
    10. '"'' → logprob: -10.81755256652832

Token 1302: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003253527218475938
    2. '       ' → logprob: -5.75325345993042
    3. ' return' → logprob: -10.128253936767578
    4. '	return' → logprob: -11.253253936767578
    5. 'return' → logprob: -12.003253936767578
    6. '	' → logprob: -12.003253936767578
    7. ':' → logprob: -12.878253936767578
    8. '   ' → logprob: -12.878253936767578
    9. ':return' → logprob: -13.128253936767578
    10. '<|end|>' → logprob: -13.878253936767578

Token 1303: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005330050829797983
    2. ' return' → logprob: -5.2553300857543945
    3. '   ' → logprob: -9.255330085754395
    4. '	return' → logprob: -14.380330085754395
    5. 'None' → logprob: -16.005329132080078
    6. ':return' → logprob: -17.130329132080078
    7. '       ' → logprob: -18.380329132080078
    8. '
' → logprob: -19.130329132080078
    9. 'raise' → logprob: -19.380329132080078
    10. ' None' → logprob: -19.380329132080078

Token 1304: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.21636608242988586
    2. 'None' → logprob: -1.7163660526275635
    3. '""' → logprob: -4.216366291046143
    4. '''
' → logprob: -9.716365814208984
    5. ' None' → logprob: -11.341365814208984
    6. ''' → logprob: -11.591365814208984
    7. '"' → logprob: -11.841365814208984
    8. ' ''' → logprob: -14.341365814208984
    9. ''',' → logprob: -16.091365814208984
    10. 'none' → logprob: -16.466365814208984

Token 1305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10429786890745163
    2. '
' → logprob: -2.6042978763580322
    3. 'v' → logprob: -4.604297637939453
    4. 'if' → logprob: -4.604297637939453
    5. 'return' → logprob: -5.729297637939453
    6. ' if' → logprob: -7.104297637939453
    7. 'for' → logprob: -7.854297637939453
    8. '    
' → logprob: -8.354297637939453
    9. 'm' → logprob: -9.229297637939453
    10. ' for' → logprob: -9.479297637939453

Token 1306: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.623254656791687
    2. 'if' → logprob: -1.123254656791687
    3. 'for' → logprob: -1.998254656791687
    4. 'v' → logprob: -6.498254776000977
    5. ' for' → logprob: -8.123254776000977
    6. 'm' → logprob: -8.123254776000977
    7. '   ' → logprob: -8.248254776000977
    8. ' if' → logprob: -8.248254776000977
    9. ' return' → logprob: -8.373254776000977
    10. 'elif' → logprob: -9.623254776000977

Token 1307: ' look' (ID: 1631)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5811532139778137
    2. 'for' → logprob: -0.8311532139778137
    3. 'return' → logprob: -5.581153392791748
    4. 'v' → logprob: -6.706153392791748
    5. 'last' → logprob: -9.45615291595459
    6. '#' → logprob: -9.58115291595459
    7. '   ' → logprob: -10.83115291595459
    8. 'pos' → logprob: -11.20615291595459
    9. ' if' → logprob: -11.70615291595459
    10. ' for' → logprob: -11.95615291595459

Token 1308: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02182653918862343
    2. ' for' → logprob: -4.14682674407959
    3. '   ' → logprob: -5.64682674407959
    4. 'i' → logprob: -6.64682674407959
    5. 'idx' → logprob: -8.02182674407959
    6. 'at' → logprob: -8.27182674407959
    7. 'pos' → logprob: -9.27182674407959
    8. '=' → logprob: -9.77182674407959
    9. 'last' → logprob: -10.39682674407959
    10. 'up' → logprob: -10.39682674407959

Token 1309: ' vowel' (ID: 165542)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4305008351802826
    2. 'for' → logprob: -2.0555007457733154
    3. 'm' → logprob: -2.1805007457733154
    4. 'next' → logprob: -2.6805007457733154
    5. 'c' → logprob: -4.1805009841918945
    6. 'char' → logprob: -4.6805009841918945
    7. 'ch' → logprob: -4.8055009841918945
    8. '#' → logprob: -5.1805009841918945
    9. 'chars' → logprob: -8.180500984191895
    10. '[' → logprob: -8.305500984191895

Token 1310: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06918139010667801
    2. ' for' → logprob: -2.819181442260742
    3. '   ' → logprob: -5.069181442260742
    4. 'v' → logprob: -7.819181442260742
    5. 'if' → logprob: -7.819181442260742
    6. 'i' → logprob: -10.819181442260742
    7. 'idx' → logprob: -10.819181442260742
    8. ' if' → logprob: -11.569181442260742
    9. 's' → logprob: -11.819181442260742
    10. 'in' → logprob: -11.944181442260742

Token 1311: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.015098952688276768
    2. '{'' → logprob: -5.015099048614502
    3. 're' → logprob: -5.640099048614502
    4. '"' → logprob: -5.765099048614502
    5. 'set' → logprob: -7.390099048614502
    6. ''' → logprob: -7.640099048614502
    7. 'V' → logprob: -9.265098571777344
    8. '{' → logprob: -9.265098571777344
    9. '{"' → logprob: -9.390098571777344
    10. '('' → logprob: -9.640098571777344

Token 1312: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22512435913085938
    2. 'for' → logprob: -1.7251243591308594
    3. '   ' → logprob: -3.9751243591308594
    4. ' =' → logprob: -6.475124359130859
    5. 'v' → logprob: -6.600124359130859
    6. '
' → logprob: -6.975124359130859
    7. '	for' → logprob: -8.60012435913086
    8. '[::-' → logprob: -8.60012435913086
    9. '=' → logprob: -8.97512435913086
    10. ' in' → logprob: -9.72512435913086

Token 1313: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04612726345658302
    2. ' for' → logprob: -3.1711273193359375
    3. '   ' → logprob: -5.9211273193359375
    4. 'v' → logprob: -7.7961273193359375
    5. ' vowels' → logprob: -11.421127319335938
    6. 'if' → logprob: -12.171127319335938
    7. '       ' → logprob: -12.546127319335938
    8. 'i' → logprob: -12.796127319335938
    9. '	for' → logprob: -13.046127319335938
    10. 'm' → logprob: -14.046127319335938

Token 1314: ' right' (ID: 1849)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.16511397063732147
    2. 're' → logprob: -1.915113925933838
    3. 'len' → logprob: -5.790113925933838
    4. '-' → logprob: -6.915113925933838
    5. '1' → logprob: -8.540114402770996
    6. ' reversed' → logprob: -8.540114402770996
    7. 'right' → logprob: -8.665114402770996
    8. ' ' → logprob: -9.915114402770996
    9. 'the' → logprob: -9.915114402770996
    10. 'reverse' → logprob: -10.040114402770996

Token 1315: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2520909607410431
    2. 'for' → logprob: -1.5020909309387207
    3. '   ' → logprob: -9.252091407775879
    4. ')' → logprob: -11.252091407775879
    5. ' range' → logprob: -11.252091407775879
    6. '[::-' → logprob: -11.752091407775879
    7. 'range' → logprob: -11.752091407775879
    8. ' in' → logprob: -12.377091407775879
    9. ' i' → logprob: -12.627091407775879
    10. ' -' → logprob: -12.752091407775879

Token 1316: ' left' (ID: 3561)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.19237670302391052
    2. 'left' → logprob: -2.3173766136169434
    3. '-' → logprob: -2.8173766136169434
    4. 'right' → logprob: -4.442376613616943
    5. '0' → logprob: -6.317376613616943
    6. '1' → logprob: -6.442376613616943
    7. 'range' → logprob: -7.692376613616943
    8. 'end' → logprob: -8.317377090454102
    9. '-left' → logprob: -8.817377090454102
    10. 're' → logprob: -9.067377090454102

Token 1317: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36755040287971497
    2. ' for' → logprob: -1.4925503730773926
    3. 'for' → logprob: -2.4925503730773926
    4. '
' → logprob: -10.36755084991455
    5. '	for' → logprob: -11.36755084991455
    6. '```' → logprob: -11.61755084991455
    7. ':' → logprob: -12.24255084991455
    8. ',' → logprob: -12.61755084991455
    9. '    
' → logprob: -12.99255084991455
    10. '``' → logprob: -12.99255084991455

Token 1318: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013827552087605
    2. ' for' → logprob: -4.513827323913574
    3. 'for' → logprob: -5.888827323913574
    4. '       ' → logprob: -12.888827323913574
    5. '	for' → logprob: -13.513827323913574
    6. '```' → logprob: -13.888827323913574
    7. ' i' → logprob: -14.763827323913574
    8. ':' → logprob: -16.63882827758789
    9. 'i' → logprob: -16.63882827758789
    10. '``' → logprob: -17.01382827758789

Token 1319: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.016072731465101242
    2. ' for' → logprob: -4.266072750091553
    3. '   ' → logprob: -6.266072750091553
    4. 'v' → logprob: -11.891072273254395
    5. '	for' → logprob: -15.391072273254395
    6. 'i' → logprob: -15.891072273254395
    7. ' vowels' → logprob: -15.891072273254395
    8. '```' → logprob: -16.64107322692871
    9. 'idx' → logprob: -16.76607322692871
    10. '``' → logprob: -17.01607322692871

Token 1320: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.00045712877181358635
    2. 'char' → logprob: -7.750457286834717
    3. 'i' → logprob: -11.250456809997559
    4. ' ch' → logprob: -11.875456809997559
    5. 'c' → logprob: -12.375456809997559
    6. 'x' → logprob: -13.500456809997559
    7. 'token' → logprob: -14.875456809997559
    8. 'idx' → logprob: -15.250456809997559
    9. 'j' → logprob: -16.125457763671875
    10. 'k' → logprob: -16.875457763671875

Token 1321: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01604340225458145
    2. 'in' → logprob: -4.141043186187744
    3. 'n' → logprob: -12.391043663024902
    4. ' ' → logprob: -13.141043663024902
    5. 's' → logprob: -14.516043663024902
    6. 'i' → logprob: -14.516043663024902
    7. 'v' → logprob: -14.891043663024902
    8. 'm' → logprob: -15.016043663024902
    9. '_in' → logprob: -15.016043663024902
    10. '   ' → logprob: -15.516043663024902

Token 1322: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.03714640811085701
    2. 'm' → logprob: -3.4121463298797607
    3. ' reversed' → logprob: -5.66214656829834
    4. '[::-' → logprob: -12.41214656829834
    5. 'mor' → logprob: -12.66214656829834
    6. 'reverse' → logprob: -12.91214656829834
    7. '   ' → logprob: -13.03714656829834
    8. 'rev' → logprob: -13.16214656829834
    9. ' mora' → logprob: -13.78714656829834
    10. 'rea' → logprob: -14.03714656829834

Token 1323: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0036098056007176638
    2. 'm' → logprob: -5.628609657287598
    3. '(' → logprob: -12.253609657287598
    4. '	m' → logprob: -14.003609657287598
    5. '(
' → logprob: -14.128609657287598
    6. ')m' → logprob: -14.253609657287598
    7. '   ' → logprob: -14.628609657287598
    8. ' (' → logprob: -14.878609657287598
    9. ' m' → logprob: -15.503609657287598
    10. '(s' → logprob: -15.753609657287598

Token 1324: 'ora' (ID: 2505)
  Prédit: 'ora'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -0.18134833872318268
    2. 'm' → logprob: -1.8063483238220215
    3. '(m' → logprob: -6.8063483238220215
    4. ')' → logprob: -9.43134880065918
    5. '[m' → logprob: -9.68134880065918
    6. 's' → logprob: -10.05634880065918
    7. ')m' → logprob: -10.43134880065918
    8. '(' → logprob: -10.68134880065918
    9. 'oraa' → logprob: -10.68134880065918
    10. 'o' → logprob: -10.80634880065918

Token 1325: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28228628635406494
    2. '):' → logprob: -1.407286286354065
    3. '()):
' → logprob: -7.532286167144775
    4. '():
' → logprob: -7.657286167144775
    5. '():' → logprob: -10.032286643981934
    6. '):
' → logprob: -10.032286643981934
    7. '   ' → logprob: -11.407286643981934
    8. ':' → logprob: -11.782286643981934
    9. '       ' → logprob: -12.032286643981934
    10. '()' → logprob: -12.907286643981934

Token 1326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014677229337394238
    2. ':' → logprob: -7.251467704772949
    3. ' if' → logprob: -7.376467704772949
    4. ':
' → logprob: -10.37646770477295
    5. '   ' → logprob: -10.50146770477295
    6. '           ' → logprob: -10.75146770477295
    7. '<|end|>' → logprob: -11.25146770477295
    8. '      ' → logprob: -11.75146770477295
    9. '):
' → logprob: -12.50146770477295
    10. ',' → logprob: -12.62646770477295

Token 1327: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005262099206447601
    2. ' if' → logprob: -5.2552618980407715
    3. '   ' → logprob: -10.63026237487793
    4. '       ' → logprob: -12.75526237487793
    5. '           ' → logprob: -14.50526237487793
    6. '	if' → logprob: -15.13026237487793
    7. ' ' → logprob: -15.38026237487793
    8. 'in' → logprob: -16.13026237487793
    9. '    ' → logprob: -16.88026237487793
    10. '  ' → logprob: -17.13026237487793

Token 1328: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -3.7697225252486533e-06
    2. ' ch' → logprob: -12.500003814697266
    3. '	ch' → logprob: -20.625003814697266
    4. '[ch' → logprob: -21.125003814697266
    5. '(ch' → logprob: -21.625003814697266
    6. 'c' → logprob: -23.375003814697266
    7. '   ' → logprob: -23.750003814697266
    8. 'Ch' → logprob: -24.125003814697266
    9. '_ch' → logprob: -24.375003814697266
    10. ',ch' → logprob: -24.375003814697266

Token 1329: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20141470432281494
    2. ' in' → logprob: -1.701414704322815
    3. ')' → logprob: -15.076415061950684
    4. ' ' → logprob: -15.076415061950684
    5. '	in' → logprob: -16.326414108276367
    6. '
' → logprob: -16.451414108276367
    7. 'a' → logprob: -16.451414108276367
    8. ''in' → logprob: -16.576414108276367
    9. '   ' → logprob: -16.701414108276367
    10. 'i' → logprob: -16.826414108276367

Token 1330: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.2664456789934775e-06
    2. '{'' → logprob: -14.250000953674316
    3. ' V' → logprob: -14.250000953674316
    4. '   ' → logprob: -19.625001907348633
    5. ''' → logprob: -19.750001907348633
    6. '`' → logprob: -20.125001907348633
    7. '
' → logprob: -20.750001907348633
    8. 'VOC' → logprob: -20.875001907348633
    9. 'VOICE' → logprob: -21.375001907348633
    10. 'VO' → logprob: -21.750001907348633

Token 1331: 'OW' (ID: 5593)
  Prédit: 'OW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OW' → logprob: -0.0019380348967388272
    2. 'V' → logprob: -6.8769378662109375
    3. 'OV' → logprob: -7.6269378662109375
    4. 'O' → logprob: -8.001937866210938
    5. 'owels' → logprob: -9.501937866210938
    6. '{'' → logprob: -12.876937866210938
    7. '{' → logprob: -13.876937866210938
    8. 'VO' → logprob: -14.001937866210938
    9. 'OWL' → logprob: -14.126937866210938
    10. 'OC' → logprob: -14.501937866210938

Token 1332: 'ELS' (ID: 88642)
  Prédit: 'ELS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ELS' → logprob: -0.0003243798855692148
    2. 'OW' → logprob: -8.250324249267578
    3. '
' → logprob: -11.375324249267578
    4. '"' → logprob: -12.000324249267578
    5. '```' → logprob: -12.000324249267578
    6. 'E' → logprob: -12.500324249267578
    7. '   ' → logprob: -12.500324249267578
    8. '{' → logprob: -12.625324249267578
    9. '`' → logprob: -12.750324249267578
    10. 'O' → logprob: -12.875324249267578

Token 1333: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.588782548904419
    2. ':' → logprob: -0.963782548904419
    3. '           ' → logprob: -2.838782548904419
    4. ':return' → logprob: -5.33878231048584
    5. '):
' → logprob: -9.21378231048584
    6. '       ' → logprob: -9.96378231048584
    7. '=' → logprob: -11.08878231048584
    8. '               ' → logprob: -11.21378231048584
    9. 'return' → logprob: -11.33878231048584
    10. ':
' → logprob: -11.46378231048584

Token 1334: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011939727846765891
    2. 'return' → logprob: -9.87511920928955
    3. ' return' → logprob: -10.12511920928955
    4. ':' → logprob: -11.37511920928955
    5. ':return' → logprob: -11.62511920928955
    6. '          ' → logprob: -13.00011920928955
    7. '	       ' → logprob: -13.50011920928955
    8. '               ' → logprob: -13.87511920928955
    9. '       ' → logprob: -14.62511920928955
    10. '		' → logprob: -14.62511920928955

Token 1335: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3873845636844635
    2. '           ' → logprob: -1.1373845338821411
    3. ' return' → logprob: -7.637384414672852
    4. '               ' → logprob: -11.762384414672852
    5. ':return' → logprob: -11.887384414672852
    6. '{return' → logprob: -12.262384414672852
    7. '	return' → logprob: -12.387384414672852
    8. '       ' → logprob: -12.887384414672852
    9. '		' → logprob: -13.387384414672852
    10. '	       ' → logprob: -13.762384414672852

Token 1336: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -5.836499985889532e-05
    2. ' ch' → logprob: -9.7500581741333
    3. '	ch' → logprob: -18.875059127807617
    4. '(ch' → logprob: -19.000059127807617
    5. '[ch' → logprob: -19.750059127807617
    6. ''ch' → logprob: -21.875059127807617
    7. 'c' → logprob: -23.125059127807617
    8. '-ch' → logprob: -23.500059127807617
    9. '_ch' → logprob: -23.875059127807617
    10. 'Ch' → logprob: -23.875059127807617

Token 1337: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19908040761947632
    2. '<|end|>' → logprob: -2.199080467224121
    3. '       ' → logprob: -3.449080467224121
    4. 'return' → logprob: -4.699080467224121
    5. '
' → logprob: -4.824080467224121
    6. ' return' → logprob: -5.199080467224121
    7. '    
' → logprob: -6.199080467224121
    8. '  
' → logprob: -6.324080467224121
    9. ':return' → logprob: -6.324080467224121
    10. ' ' → logprob: -6.449080467224121

Token 1339: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.32790741324424744
    2. '   ' → logprob: -1.4529074430465698
    3. ' return' → logprob: -3.3279073238372803
    4. ' ' → logprob: -5.452907562255859
    5. '	return' → logprob: -6.827907562255859
    6. '  
' → logprob: -7.202907562255859
    7. ':return' → logprob: -7.327907562255859
    8. '
' → logprob: -7.452907562255859
    9. 'raise' → logprob: -7.577907562255859
    10. '    
' → logprob: -7.577907562255859

Token 1340: ' ''

' (ID: 107005)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -1.0087516784551553e-05
    2. 'None' → logprob: -11.75001049041748
    3. '""' → logprob: -13.50001049041748
    4. '''
' → logprob: -14.62501049041748
    5. ' ''' → logprob: -14.87501049041748
    6. ''',' → logprob: -18.000009536743164
    7. '''.' → logprob: -18.125009536743164
    8. ''' → logprob: -18.125009536743164
    9. ''''' → logprob: -20.750009536743164
    10. ' None' → logprob: -21.000009536743164

Token 1341: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0517718605697155
    2. '<|end|>' → logprob: -3.176771879196167
    3. '#' → logprob: -5.426771640777588
    4. '
' → logprob: -6.426771640777588
    5. '\' → logprob: -6.801771640777588
    6. '<|end|>' → logprob: -7.551771640777588
    7. '```' → logprob: -8.676772117614746
    8. ' def' → logprob: -8.926772117614746
    9. '\n' → logprob: -9.176772117614746
    10. ':' → logprob: -9.301772117614746

Token 1342: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.4885961711406708
    2. 'get' → logprob: -1.6135962009429932
    3. 'has' → logprob: -3.363596200942993
    4. 'count' → logprob: -3.613596200942993
    5. 'vo' → logprob: -4.113595962524414
    6. 'voice' → logprob: -4.363595962524414
    7. 'can' → logprob: -4.613595962524414
    8. 'con' → logprob: -4.863595962524414
    9. 'split' → logprob: -4.988595962524414
    10. 'def' → logprob: -5.238595962524414

Token 1343: '_s' (ID: 1278)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.6953281164169312
    2. '_vo' → logprob: -0.6953281164169312
    3. '_voice' → logprob: -7.695328235626221
    4. '_space' → logprob: -7.820328235626221
    5. '_m' → logprob: -7.945328235626221
    6. '_con' → logprob: -8.695327758789062
    7. '_' → logprob: -8.820327758789062
    8. 'v' → logprob: -9.195327758789062
    9. 'space' → logprob: -9.695327758789062
    10. '   ' → logprob: -9.945327758789062

Token 1344: 'oku' (ID: 13454)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.46984297037124634
    2. 'yll' → logprob: -1.4698429107666016
    3. '_t' → logprob: -3.0948429107666016
    4. 'ilent' → logprob: -3.3448429107666016
    5. '_vo' → logprob: -3.4698429107666016
    6. '_s' → logprob: -5.469842910766602
    7. '_' → logprob: -5.594842910766602
    8. '``' → logprob: -5.844842910766602
    9. 'top' → logprob: -6.094842910766602
    10. '\' → logprob: -6.344842910766602

Token 1345: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0027536419220268726
    2. 'o' → logprob: -6.377753734588623
    3. '_on' → logprob: -6.877753734588623
    4. ''on' → logprob: -11.627753257751465
    5. 'on's' → logprob: -12.377753257751465
    6. '_o' → logprob: -13.377753257751465
    7. 'ont' → logprob: -13.627753257751465
    8. '
' → logprob: -13.752753257751465
    9. '`' → logprob: -14.752753257751465
    10. 'onn' → logprob: -14.877753257751465

Token 1346: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2675215005874634
    2. '_' → logprob: -1.5175215005874634
    3. '(m' → logprob: -5.142521381378174
    4. ''' → logprob: -5.267521381378174
    5. '_(' → logprob: -6.642521381378174
    6. ' (' → logprob: -7.017521381378174
    7. '('_' → logprob: -7.142521381378174
    8. '('' → logprob: -8.017521858215332
    9. '(_' → logprob: -8.267521858215332
    10. '(
' → logprob: -9.392521858215332

Token 1347: 'ora' (ID: 2505)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.010975311510264874
    2. '_o' → logprob: -6.135975360870361
    3. ''o' → logprob: -6.135975360870361
    4. 'ora' → logprob: -6.385975360870361
    5. 'oru' → logprob: -6.885975360870361
    6. '_' → logprob: -7.135975360870361
    7. '('' → logprob: -7.635975360870361
    8. ')' → logprob: -8.260974884033203
    9. 'u' → logprob: -8.385974884033203
    10. ''' → logprob: -8.510974884033203

Token 1348: '):
' (ID: 1883)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.10039298981428146
    2. 'm' → logprob: -3.475393056869507
    3. ')' → logprob: -3.600393056869507
    4. '):' → logprob: -4.350392818450928
    5. '(' → logprob: -5.225392818450928
    6. ')m' → logprob: -5.725392818450928
    7. '   ' → logprob: -5.850392818450928
    8. '_m' → logprob: -5.975392818450928
    9. ')_' → logprob: -6.475392818450928
    10. ''' → logprob: -6.600392818450928

Token 1349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42495307326316833
    2. 'return' → logprob: -1.1749531030654907
    3. ' return' → logprob: -3.549952983856201
    4. 'm' → logprob: -4.799952983856201
    5. 'len' → logprob: -8.79995346069336
    6. 'def' → logprob: -9.04995346069336
    7. '	return' → logprob: -10.42495346069336
    8. ' ' → logprob: -10.79995346069336
    9. '  ' → logprob: -10.92495346069336
    10. '
' → logprob: -11.17495346069336

Token 1350: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.000869413954205811
    2. 'm' → logprob: -8.125869750976562
    3. 'def' → logprob: -8.125869750976562
    4. ' return' → logprob: -8.875869750976562
    5. '   ' → logprob: -9.125869750976562
    6. 'len' → logprob: -10.500869750976562
    7. '
' → logprob: -15.000869750976562
    8. 'mor' → logprob: -15.000869750976562
    9. 'if' → logprob: -15.500869750976562
    10. '`' → logprob: -15.500869750976562

Token 1351: ' s' (ID: 265)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5347774028778076
    2. 'm' → logprob: -0.9097774028778076
    3. ' return' → logprob: -5.034777641296387
    4. 'len' → logprob: -6.034777641296387
    5. 'def' → logprob: -6.034777641296387
    6. '   ' → logprob: -8.784777641296387
    7. 'mor' → logprob: -9.409777641296387
    8. '
' → logprob: -11.409777641296387
    9. ' mora' → logprob: -11.534777641296387
    10. ' mor' → logprob: -11.909777641296387

Token 1352: 'oku' (ID: 13454)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.115731954574585
    2. 'm' → logprob: -1.615731954574585
    3. '_' → logprob: -1.865731954574585
    4. '(m' → logprob: -1.990731954574585
    5. ' ==' → logprob: -2.365731954574585
    6. '(' → logprob: -3.865731954574585
    7. '=' → logprob: -3.990731954574585
    8. '_m' → logprob: -3.990731954574585
    9. 'def' → logprob: -4.990732192993164
    10. 'e' → logprob: -5.115732192993164

Token 1353: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.3803045153617859
    2. 'o' → logprob: -1.2553045749664307
    3. 'n' → logprob: -3.5053045749664307
    4. '_' → logprob: -8.255304336547852
    5. 'm' → logprob: -8.255304336547852
    6. '_on' → logprob: -8.755304336547852
    7. '_o' → logprob: -9.130304336547852
    8. 'a' → logprob: -9.505304336547852
    9. '_n' → logprob: -9.505304336547852
    10. '   ' → logprob: -10.005304336547852

Token 1354: ' is' (ID: 382)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.8690012693405151
    2. 'def' → logprob: -1.6190012693405151
    3. '(' → logprob: -1.9940012693405151
    4. '_' → logprob: -2.2440013885498047
    5. 'm' → logprob: -2.2440013885498047
    6. ' =' → logprob: -4.869001388549805
    7. '=' → logprob: -5.119001388549805
    8. '_m' → logprob: -5.244001388549805
    9. 'return' → logprob: -5.369001388549805
    10. 's' → logprob: -5.744001388549805

Token 1355: ' the' (ID: 290)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.015294673852622509
    2. 'len' → logprob: -4.265294551849365
    3. ' mora' → logprob: -8.140295028686523
    4. ' len' → logprob: -8.390295028686523
    5. '(len' → logprob: -8.640295028686523
    6. '(' → logprob: -9.265295028686523
    7. '(m' → logprob: -9.640295028686523
    8. ' mor' → logprob: -9.890295028686523
    9. 'lambda' → logprob: -10.015295028686523
    10. ' (' → logprob: -10.140295028686523

Token 1356: ' small' (ID: 3291)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01851019822061062
    2. 'len' → logprob: -4.018510341644287
    3. '(m' → logprob: -8.393509864807129
    4. '(len' → logprob: -9.268509864807129
    5. 'True' → logprob: -11.018509864807129
    6. ' len' → logprob: -12.143509864807129
    7. '(' → logprob: -12.268509864807129
    8. 'mor' → logprob: -12.893509864807129
    9. ' m' → logprob: -13.268509864807129
    10. 'False' → logprob: -13.518509864807129

Token 1357: ' ts' (ID: 6601)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0062506115064024925
    2. 'っ' → logprob: -5.131250381469727
    3. ' ' → logprob: -8.506250381469727
    4. ''t' → logprob: -9.881250381469727
    5. '
' → logprob: -11.006250381469727
    6. '"' → logprob: -11.506250381469727
    7. 'つ' → logprob: -11.506250381469727
    8. '`' → logprob: -11.631250381469727
    9. '```' → logprob: -12.256250381469727
    10. '   ' → logprob: -12.256250381469727

Token 1358: 'u' (ID: 84)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.13167120516300201
    2. ''u' → logprob: -2.881671190261841
    3. 'u' → logprob: -3.506671190261841
    4. 'つ' → logprob: -3.756671190261841
    5. '
' → logprob: -5.38167142868042
    6. '   ' → logprob: -6.13167142868042
    7. '"' → logprob: -6.38167142868042
    8. ' ' → logprob: -6.88167142868042
    9. ' '' → logprob: -7.13167142868042
    10. '('' → logprob: -8.131670951843262

Token 1359: ':' (ID: 25)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9816935658454895
    2. 'def' → logprob: -1.1066935062408447
    3. '(m' → logprob: -1.8566935062408447
    4. '(' → logprob: -2.6066935062408447
    5. '   ' → logprob: -4.106693744659424
    6. 'return' → logprob: -4.356693744659424
    7. ' (' → logprob: -4.481693744659424
    8. ''' → logprob: -5.231693744659424
    9. ':' → logprob: -5.731693744659424
    10. 'if' → logprob: -6.106693744659424

Token 1360: ' usually' (ID: 6971)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0011034219060093164
    2. '   ' → logprob: -7.751103401184082
    3. 'return' → logprob: -8.001103401184082
    4. ' mora' → logprob: -8.876103401184082
    5. ' m' → logprob: -10.001103401184082
    6. ' return' → logprob: -10.501103401184082
    7. 'mor' → logprob: -10.501103401184082
    8. 'False' → logprob: -11.251103401184082
    9. '	m' → logprob: -11.251103401184082
    10. 'c' → logprob: -11.376103401184082

Token 1361: ' double' (ID: 3503)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0010531729785725474
    2. '   ' → logprob: -8.251052856445312
    3. ''' → logprob: -8.376052856445312
    4. ' ' → logprob: -9.501052856445312
    5. ' m' → logprob: -9.501052856445312
    6. ' mora' → logprob: -9.501052856445312
    7. 'mor' → logprob: -10.126052856445312
    8. 'return' → logprob: -10.126052856445312
    9. 'def' → logprob: -10.251052856445312
    10. ''m' → logprob: -10.251052856445312

Token 1362: ' conson' (ID: 127767)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2467025518417358
    2. ''' → logprob: -1.4967025518417358
    3. 'con' → logprob: -1.6217025518417358
    4. 'm' → logprob: -1.8717025518417358
    5. 's' → logprob: -3.2467026710510254
    6. '_con' → logprob: -3.6217026710510254
    7. ' ' → logprob: -4.371702671051025
    8. 'if' → logprob: -4.496702671051025
    9. ''_' → logprob: -4.496702671051025
    10. '_m' → logprob: -4.871702671051025

Token 1363: 'ant' (ID: 493)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.40195828676223755
    2. 'ant' → logprob: -1.7769582271575928
    3. ''' → logprob: -2.2769582271575928
    4. 'o' → logprob: -4.901958465576172
    5. '_' → logprob: -5.276958465576172
    6. 't' → logprob: -5.401958465576172
    7. 'an' → logprob: -5.401958465576172
    8. 'on' → logprob: -5.401958465576172
    9. ' '' → logprob: -5.526958465576172
    10. 'ont' → logprob: -5.651958465576172

Token 1364: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.215837761759758
    2. 'm' → logprob: -3.2158377170562744
    3. 's' → logprob: -3.3408377170562744
    4. '(m' → logprob: -3.4658377170562744
    5. '(
' → logprob: -4.2158379554748535
    6. '(' → logprob: -4.2158379554748535
    7. 'if' → logprob: -4.5908379554748535
    8. 'return' → logprob: -4.7158379554748535
    9. '_' → logprob: -4.9658379554748535
    10. '   ' → logprob: -5.7158379554748535

Token 1365: ' represented' (ID: 27328)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7720535397529602
    2. 'def' → logprob: -1.2720534801483154
    3. 'return' → logprob: -2.0220534801483154
    4. '   ' → logprob: -2.5220534801483154
    5. '#' → logprob: -4.5220537185668945
    6. ' return' → logprob: -4.6470537185668945
    7. 'len' → logprob: -4.7720537185668945
    8. '
' → logprob: -5.5220537185668945
    9. ' ' → logprob: -5.8970537185668945
    10. '  ' → logprob: -6.1470537185668945

Token 1366: ' implicitly' (ID: 133788)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.5647192597389221
    2. ' by' → logprob: -1.1897192001342773
    3. 'm' → logprob: -2.8147192001342773
    4. ' as' → logprob: -3.8147192001342773
    5. 'as' → logprob: -3.8147192001342773
    6. 'def' → logprob: -4.439719200134277
    7. '#' → logprob: -5.439719200134277
    8. '(m' → logprob: -6.439719200134277
    9. '   ' → logprob: -6.814719200134277
    10. 's' → logprob: -6.939719200134277

Token 1367: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02992740273475647
    2. 'return' → logprob: -4.5299272537231445
    3. '   ' → logprob: -4.9049272537231445
    4. '
' → logprob: -5.2799272537231445
    5. 'if' → logprob: -5.9049272537231445
    6. 'm' → logprob: -6.2799272537231445
    7. '(m' → logprob: -7.7799272537231445
    8. ' def' → logprob: -8.779927253723145
    9. ' if' → logprob: -8.904927253723145
    10. ' return' → logprob: -8.904927253723145

Token 1368: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8883838653564453
    2. 'def' → logprob: -1.6383838653564453
    3. 'm' → logprob: -1.7633838653564453
    4. 'return' → logprob: -2.3883838653564453
    5. '(m' → logprob: -2.3883838653564453
    6. ':
' → logprob: -4.638383865356445
    7. '
' → logprob: -4.888383865356445
    8. '(' → logprob: -4.888383865356445
    9. ':' → logprob: -5.263383865356445
    10. ' return' → logprob: -6.013383865356445

Token 1369: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2928782105445862
    2. 'def' → logprob: -2.1678781509399414
    3. '   ' → logprob: -2.6678781509399414
    4. 'False' → logprob: -3.0428781509399414
    5. 'm' → logprob: -4.292878150939941
    6. ' return' → logprob: -5.542878150939941
    7. '
' → logprob: -6.042878150939941
    8. ' False' → logprob: -6.917878150939941
    9. 'if' → logprob: -7.542878150939941
    10. '    ' → logprob: -8.792878150939941

Token 1370: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.012785209342837334
    2. 'False' → logprob: -4.7627854347229
    3. '   ' → logprob: -6.8877854347229
    4. '
' → logprob: -6.8877854347229
    5. '#' → logprob: -7.0127854347229
    6. 'm' → logprob: -7.0127854347229
    7. ' return' → logprob: -9.387784957885742
    8. 'if' → logprob: -9.387784957885742
    9. 'def' → logprob: -9.637784957885742
    10. 'len' → logprob: -10.512784957885742

Token 1371: ' direct' (ID: 2823)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04666963964700699
    2. 'def' → logprob: -4.4216694831848145
    3. 'return' → logprob: -4.5466694831848145
    4. 'False' → logprob: -4.7966694831848145
    5. 'c' → logprob: -6.1716694831848145
    6. ''' → logprob: -6.5466694831848145
    7. '(' → logprob: -6.6716694831848145
    8. 's' → logprob: -6.7966694831848145
    9. 'len' → logprob: -6.7966694831848145
    10. ' ' → logprob: -7.0466694831848145

Token 1372: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0775673389434814
    2. 'm' → logprob: -1.0775673389434814
    3. 'def' → logprob: -1.5775673389434814
    4. '_' → logprob: -3.7025673389434814
    5. 'return' → logprob: -3.9525673389434814
    6. 'c' → logprob: -4.452567100524902
    7. 's' → logprob: -5.077567100524902
    8. ''s' → logprob: -5.202567100524902
    9. ''_' → logprob: -5.202567100524902
    10. '(' → logprob: -5.327567100524902

Token 1373: 'っ' (ID: 8334)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11659780889749527
    2. 'っ' → logprob: -2.241597890853882
    3. ''s' → logprob: -5.866597652435303
    4. '"' → logprob: -8.866598129272461
    5. '')' → logprob: -8.991598129272461
    6. ''''' → logprob: -8.991598129272461
    7. '''' → logprob: -9.116598129272461
    8. '#' → logprob: -9.991598129272461
    9. '\'' → logprob: -9.991598129272461
    10. ''
' → logprob: -10.366598129272461

Token 1374: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.01418301835656166
    2. '')' → logprob: -4.639183044433594
    3. ')'' → logprob: -5.514183044433594
    4. ')' → logprob: -8.639183044433594
    5. ''''' → logprob: -9.639183044433594
    6. ''
' → logprob: -10.514183044433594
    7. 'def' → logprob: -11.139183044433594
    8. '')
' → logprob: -11.389183044433594
    9. '':' → logprob: -11.389183044433594
    10. '''' → logprob: -11.639183044433594

Token 1375: ' in' (ID: 306)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23039887845516205
    2. '(m' → logprob: -2.2303988933563232
    3. ':' → logprob: -3.1053988933563232
    4. '   ' → logprob: -3.2303988933563232
    5. '(' → logprob: -5.605398654937744
    6. 'return' → logprob: -5.730398654937744
    7. 'm' → logprob: -6.355398654937744
    8. ':
' → logprob: -6.605398654937744
    9. '(
' → logprob: -7.230398654937744
    10. '
' → logprob: -7.730398654937744

Token 1376: ' input' (ID: 3422)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03957856073975563
    2. 'def' → logprob: -4.289578437805176
    3. 's' → logprob: -5.039578437805176
    4. 'return' → logprob: -5.539578437805176
    5. 'True' → logprob: -5.789578437805176
    6. '#' → logprob: -5.789578437805176
    7. '"' → logprob: -6.414578437805176
    8. 'code' → logprob: -6.414578437805176
    9. '"""' → logprob: -7.539578437805176
    10. 'input' → logprob: -7.664578437805176

Token 1377: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8065194487571716
    2. '   ' → logprob: -0.9315194487571716
    3. 'return' → logprob: -2.3065195083618164
    4. '
' → logprob: -3.9315195083618164
    5. 'False' → logprob: -4.056519508361816
    6. 'if' → logprob: -5.056519508361816
    7. '#' → logprob: -5.431519508361816
    8. ' return' → logprob: -6.056519508361816
    9. ' ' → logprob: -6.306519508361816
    10. ':' → logprob: -6.556519508361816

Token 1378: ' s' (ID: 265)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12191905826330185
    2. 'False' → logprob: -2.3719191551208496
    3. '   ' → logprob: -4.62191915512085
    4. ' return' → logprob: -5.74691915512085
    5. 'def' → logprob: -5.99691915512085
    6. '#' → logprob: -6.12191915512085
    7. '
' → logprob: -6.74691915512085
    8. 'if' → logprob: -6.87191915512085
    9. ' False' → logprob: -7.24691915512085
    10. 'len' → logprob: -7.99691915512085

Token 1379: 'oku' (ID: 13454)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6853866577148438
    2. '#' → logprob: -1.1853866577148438
    3. 'plit' → logprob: -3.4353866577148438
    4. 'def' → logprob: -3.5603866577148438
    5. 'return' → logprob: -3.5603866577148438
    6. 'et' → logprob: -3.8103866577148438
    7. '   ' → logprob: -4.060386657714844
    8. 't' → logprob: -4.685386657714844
    9. '
' → logprob: -4.810386657714844
    10. '[len' → logprob: -5.185386657714844

Token 1380: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.02325642853975296
    2. 'o' → logprob: -3.773256540298462
    3. '_on' → logprob: -12.273256301879883
    4. '
' → logprob: -13.523256301879883
    5. 'on's' → logprob: -13.773256301879883
    6. '_o' → logprob: -13.898256301879883
    7. '_' → logprob: -14.148256301879883
    8. 'о' → logprob: -15.148256301879883
    9. '```' → logprob: -15.398256301879883
    10. '`' → logprob: -15.523256301879883

Token 1381: ' represented' (ID: 27328)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5816867351531982
    2. ':' → logprob: -1.7066867351531982
    3. '(' → logprob: -2.2066867351531982
    4. '(m' → logprob: -2.5816867351531982
    5. 'm' → logprob: -3.9566867351531982
    6. '=' → logprob: -4.581686973571777
    7. '(
' → logprob: -4.706686973571777
    8. ' =' → logprob: -5.081686973571777
    9. '(s' → logprob: -5.331686973571777
    10. ':
' → logprob: -5.581686973571777

Token 1382: ' by' (ID: 656)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6514751315116882
    2. 'if' → logprob: -1.901475191116333
    3. ' by' → logprob: -2.526475191116333
    4. 'len' → logprob: -2.526475191116333
    5. 'by' → logprob: -2.651475191116333
    6. '   ' → logprob: -4.026474952697754
    7. 'def' → logprob: -4.526474952697754
    8. '(m' → logprob: -4.526474952697754
    9. ' if' → logprob: -4.776474952697754
    10. ' (' → logprob: -4.901474952697754

Token 1383: ' doubling' (ID: 122384)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.566784679889679
    2. 'len' → logprob: -1.4417846202850342
    3. 'False' → logprob: -2.566784620285034
    4. 'i' → logprob: -3.066784620285034
    5. '(i' → logprob: -3.566784620285034
    6. '(' → logprob: -4.191784858703613
    7. '(len' → logprob: -4.816784858703613
    8. '(m' → logprob: -4.941784858703613
    9. '(False' → logprob: -5.691784858703613
    10. ' (' → logprob: -6.691784858703613

Token 1384: ' conson' (ID: 127767)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.511286735534668
    2. '_' → logprob: -1.886286735534668
    3. 'm' → logprob: -2.761286735534668
    4. 's' → logprob: -3.261286735534668
    5. ' ' → logprob: -3.386286735534668
    6. '   ' → logprob: -3.886286735534668
    7. 'if' → logprob: -3.886286735534668
    8. '(' → logprob: -4.011286735534668
    9. '(m' → logprob: -4.136286735534668
    10. ')' → logprob: -5.386286735534668

Token 1385: 'ant' (ID: 493)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6711007356643677
    2. 'ant' → logprob: -0.9211007356643677
    3. 't' → logprob: -2.421100616455078
    4. 'an' → logprob: -7.171100616455078
    5. 'ants' → logprob: -7.546100616455078
    6. 'm' → logprob: -7.546100616455078
    7. 'а' → logprob: -10.546100616455078
    8. 'at' → logprob: -10.796100616455078
    9. 's' → logprob: -11.046100616455078
    10. 'antd' → logprob: -11.546100616455078

Token 1386: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09079723805189133
    2. '   ' → logprob: -3.215797185897827
    3. 'if' → logprob: -3.465797185897827
    4. 'return' → logprob: -5.215797424316406
    5. '
' → logprob: -6.090797424316406
    6. ' if' → logprob: -6.590797424316406
    7. ' ' → logprob: -6.715797424316406
    8. 'm' → logprob: -6.840797424316406
    9. 's' → logprob: -7.090797424316406
    10. ':' → logprob: -7.465797424316406

Token 1387: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4677799940109253
    2. '   ' → logprob: -1.4677799940109253
    3. ':' → logprob: -2.717780113220215
    4. '(' → logprob: -3.717780113220215
    5. '(m' → logprob: -5.092780113220215
    6. ':
' → logprob: -5.092780113220215
    7. ' ' → logprob: -5.342780113220215
    8. '#' → logprob: -5.342780113220215
    9. ''' → logprob: -5.467780113220215
    10. '(
' → logprob: -5.592780113220215

Token 1388: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8957476615905762
    2. '   ' → logprob: -1.0207476615905762
    3. 'def' → logprob: -2.020747661590576
    4. 'if' → logprob: -2.645747661590576
    5. ' return' → logprob: -5.020747661590576
    6. '
' → logprob: -5.520747661590576
    7. ' ' → logprob: -5.645747661590576
    8. ' if' → logprob: -5.770747661590576
    9. '#' (adapté à ' #') → logprob: -6.145747661590576
    10. ':' → logprob: -6.145747661590576

Token 1389: ' but' (ID: 889)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.12342075258493423
    2. 'False' → logprob: -2.7484207153320312
    3. 'if' → logprob: -3.8734207153320312
    4. '#' → logprob: -4.248420715332031
    5. 'len' → logprob: -4.873420715332031
    6. '   ' → logprob: -4.998420715332031
    7. 'def' → logprob: -6.373420715332031
    8. ' return' → logprob: -8.123420715332031
    9. 'm' → logprob: -8.373420715332031
    10. 'length' → logprob: -9.748420715332031

Token 1390: ' we' (ID: 581)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.23041412234306335
    2. 'm' → logprob: -2.2304141521453857
    3. 'len' → logprob: -2.4804141521453857
    4. ' False' → logprob: -4.355413913726807
    5. ' mora' → logprob: -7.355413913726807
    6. 'mor' → logprob: -7.605413913726807
    7. 'return' → logprob: -8.730414390563965
    8. '(False' → logprob: -8.980414390563965
    9. ' len' → logprob: -9.230414390563965
    10. ' mor' → logprob: -9.480414390563965

Token 1391: ' have' (ID: 679)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.907391369342804
    2. '#' → logprob: -1.2823913097381592
    3. 'return' → logprob: -1.7823913097381592
    4. ' return' → logprob: -2.532391309738159
    5. ' don't' → logprob: -4.532391548156738
    6. ' #' → logprob: -4.657391548156738
    7. '   ' → logprob: -5.032391548156738
    8. 'continue' → logprob: -5.407391548156738
    9. 'stop' → logprob: -5.657391548156738
    10. ' continue' → logprob: -5.657391548156738

Token 1392: ' mor' (ID: 4658)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1860678642988205
    2. 'm' → logprob: -2.436067819595337
    3. 'len' → logprob: -2.561067819595337
    4. ' False' → logprob: -5.561068058013916
    5. 'def' → logprob: -7.561068058013916
    6. 'c' → logprob: -7.936068058013916
    7. '#' → logprob: -9.186067581176758
    8. 's' → logprob: -10.311067581176758
    9. 'false' → logprob: -10.436067581176758
    10. '(False' → logprob: -10.561067581176758

Token 1393: 'as' (ID: 288)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.34851425886154175
    2. 'as' → logprob: -1.2235143184661865
    3. 'def' → logprob: -10.098514556884766
    4. 'e' → logprob: -12.473514556884766
    5. '```' → logprob: -12.848514556884766
    6. '[' → logprob: -13.348514556884766
    7. 'len' → logprob: -13.598514556884766
    8. '#' → logprob: -13.723514556884766
    9. 'if' → logprob: -13.848514556884766
    10. 'ae' → logprob: -13.973514556884766

Token 1394: ' extracted' (ID: 48182)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7392194271087646
    2. 'def' → logprob: -0.8642194271087646
    3. '(m' → logprob: -3.6142194271087646
    4. '(' → logprob: -3.8642194271087646
    5. ':return' → logprob: -4.239219665527344
    6. '   ' → logprob: -4.489219665527344
    7. 'return' → logprob: -4.739219665527344
    8. 'm' → logprob: -5.489219665527344
    9. ':
' → logprob: -5.489219665527344
    10. '{' → logprob: -6.114219665527344

Token 1395: ':' (ID: 25)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07213335484266281
    2. ':' → logprob: -3.4471333026885986
    3. 'False' → logprob: -4.322133541107178
    4. '   ' → logprob: -4.447133541107178
    5. '(False' → logprob: -5.572133541107178
    6. '(m' → logprob: -6.197133541107178
    7. '(' → logprob: -6.322133541107178
    8. 'm' → logprob: -6.572133541107178
    9. '
' → logprob: -6.572133541107178
    10. ':
' → logprob: -7.447133541107178

Token 1396: ' no' (ID: 860)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.05713919177651405
    2. 'return' → logprob: -2.9321391582489014
    3. '   ' → logprob: -6.4321393966674805
    4. ' False' → logprob: -8.05713939666748
    5. 'len' → logprob: -8.55713939666748
    6. 'if' → logprob: -9.80713939666748
    7. 'false' → logprob: -10.80713939666748
    8. 'm' → logprob: -11.18213939666748
    9. ' return' → logprob: -11.18213939666748
    10. 'True' → logprob: -11.80713939666748

Token 1397: ' direct' (ID: 2823)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.37023869156837463
    2. 'def' → logprob: -1.7452386617660522
    3. 'len' → logprob: -2.870238780975342
    4. ''' → logprob: -4.495238780975342
    5. 's' → logprob: -4.495238780975342
    6. 'if' → logprob: -4.495238780975342
    7. '''' → logprob: -4.745238780975342
    8. 'return' → logprob: -5.245238780975342
    9. ')' → logprob: -5.870238780975342
    10. 'c' → logprob: -5.870238780975342

Token 1398: ' indicator' (ID: 32003)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7545197010040283
    2. 'm' → logprob: -1.2545197010040283
    3. 'return' → logprob: -2.2545197010040283
    4. 'if' → logprob: -3.3795197010040283
    5. 's' → logprob: -3.7545197010040283
    6. '
' → logprob: -3.8795197010040283
    7. '_' → logprob: -4.254519462585449
    8. ''' → logprob: -4.629519462585449
    9. '   ' → logprob: -5.004519462585449
    10. ' return' → logprob: -5.129519462585449

Token 1399: '
' (ID: 198)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1327762007713318
    2. ' False' → logprob: -3.0077762603759766
    3. '   ' → logprob: -3.2577762603759766
    4. '(False' → logprob: -4.257776260375977
    5. '(' → logprob: -4.632776260375977
    6. ':' → logprob: -5.132776260375977
    7. ' ' → logprob: -6.132776260375977
    8. '
' → logprob: -6.632776260375977
    9. 'None' → logprob: -7.632776260375977
    10. ')' → logprob: -7.757776260375977

Token 1400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006120878737419844
    2. 'return' → logprob: -5.631120681762695
    3. 'False' → logprob: -7.131120681762695
    4. 'def' → logprob: -7.506120681762695
    5. '
' → logprob: -7.506120681762695
    6. ':' → logprob: -9.006120681762695
    7. ' return' → logprob: -9.006120681762695
    8. '	return' → logprob: -9.756120681762695
    9. 'if' → logprob: -9.756120681762695
    10. ':return' → logprob: -9.881120681762695

Token 1401: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014906727708876133
    2. 'return' → logprob: -4.889906883239746
    3. ' return' → logprob: -5.389906883239746
    4. 'False' → logprob: -6.139906883239746
    5. ' False' → logprob: -7.764906883239746
    6. '
' → logprob: -9.389906883239746
    7. '	return' → logprob: -10.764906883239746
    8. '#' (adapté à ' #') → logprob: -11.764906883239746
    9. '    ' → logprob: -12.139906883239746
    10. ' ' → logprob: -12.514906883239746

Token 1402: ' problem' (ID: 4792)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.2635399401187897
    2. 'return' → logprob: -1.5135399103164673
    3. '   ' → logprob: -4.513539791107178
    4. ' False' → logprob: -8.138540267944336
    5. ' return' → logprob: -9.013540267944336
    6. '#' → logprob: -10.138540267944336
    7. '
' → logprob: -10.138540267944336
    8. 'True' → logprob: -10.388540267944336
    9. 'false' → logprob: -10.888540267944336
    10. 'def' → logprob: -11.763540267944336

Token 1403: ' states' (ID: 9407)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10309024900197983
    2. ':' → logprob: -3.103090286254883
    3. '(' → logprob: -4.353090286254883
    4. 'return' → logprob: -4.853090286254883
    5. '   ' → logprob: -5.228090286254883
    6. '_' → logprob: -5.603090286254883
    7. '(m' → logprob: -5.603090286254883
    8. '(s' → logprob: -5.603090286254883
    9. '(n' → logprob: -6.353090286254883
    10. '<|end|>' → logprob: -6.353090286254883

Token 1404: ' '' (ID: 461)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.033342283219099045
    2. ' False' → logprob: -4.033342361450195
    3. 'return' → logprob: -4.408342361450195
    4. '   ' → logprob: -6.658342361450195
    5. 'def' → logprob: -7.158342361450195
    6. ' return' → logprob: -8.033342361450195
    7. 'm' → logprob: -8.658342361450195
    8. '(False' → logprob: -9.033342361450195
    9. 'True' → logprob: -9.408342361450195
    10. '
' → logprob: -10.033342361450195

Token 1405: '促' (ID: 69856)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.199028491973877
    2. ''' → logprob: -1.699028491973877
    3. '''' → logprob: -1.824028491973877
    4. 'm' → logprob: -2.074028491973877
    5. '#' → logprob: -2.699028491973877
    6. 'True' → logprob: -2.949028491973877
    7. '"' → logprob: -3.574028491973877
    8. 'def' → logprob: -3.824028491973877
    9. ''''' → logprob: -4.199028491973877
    10. 's' → logprob: -5.074028491973877

Token 1406: '音' (ID: 15082)
  Prédit: '音'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '音' → logprob: -2.856408536899835e-05
    2. '```' → logprob: -11.000028610229492
    3. '음' → logprob: -13.000028610229492
    4. 'on' → logprob: -13.125028610229492
    5. ' \xe9\x9f' → logprob: -13.250028610229492
    6. '
' → logprob: -14.375028610229492
    7. ''' → logprob: -14.625028610229492
    8. 'お' → logprob: -14.875028610229492
    9. 'ion' → logprob: -14.875028610229492
    10. ')' → logprob: -14.875028610229492

Token 1407: '（' (ID: 3603)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.42457935214042664
    2. ')'' → logprob: -1.299579381942749
    3. '')' → logprob: -3.674579381942749
    4. ')' → logprob: -3.674579381942749
    5. 'は' → logprob: -5.54957914352417
    6. '('' → logprob: -6.04957914352417
    7. 'の' → logprob: -6.17457914352417
    8. 'm' → logprob: -6.42457914352417
    9. '(m' → logprob: -6.42457914352417
    10. '_'' → logprob: -6.42457914352417

Token 1408: '「' (ID: 6055)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6352027058601379
    2. '')' → logprob: -1.3852026462554932
    3. '）' → logprob: -2.135202646255493
    4. ''' → logprob: -2.760202646255493
    5. 's' → logprob: -4.510202884674072
    6. ''s' → logprob: -5.385202884674072
    7. '#' → logprob: -5.635202884674072
    8. 'っ' → logprob: -5.635202884674072
    9. 'm' → logprob: -6.260202884674072
    10. ')
' → logprob: -6.885202884674072

Token 1409: 'っ' (ID: 8334)
  Prédit: 'っ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'っ' → logprob: -0.07195854932069778
    2. ''' → logprob: -3.071958541870117
    3. '')' → logprob: -4.696958541870117
    4. '_' → logprob: -6.071958541870117
    5. 's' → logprob: -6.196958541870117
    6. '）' → logprob: -6.321958541870117
    7. '"' → logprob: -6.446958541870117
    8. '#' → logprob: -6.821958541870117
    9. '")' → logprob: -7.071958541870117
    10. ')' → logprob: -7.196958541870117

Token 1410: '」' (ID: 5252)
  Prédit: '）'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '）' → logprob: -0.006942221894860268
    2. ')' → logprob: -5.506942272186279
    3. ')'' → logprob: -7.006942272186279
    4. ''' → logprob: -7.131942272186279
    5. '）」' → logprob: -7.381942272186279
    6. '」' → logprob: -9.256941795349121
    7. '"' → logprob: -9.381941795349121
    8. '』' → logprob: -9.506941795349121
    9. '')' → logprob: -10.381941795349121
    10. 'o' → logprob: -10.631941795349121

Token 1411: '）' (ID: 3495)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.2611813545227051
    2. '）' → logprob: -1.886181354522705
    3. ')' → logprob: -3.386181354522705
    4. '):' → logprob: -3.636181354522705
    5. ''' → logprob: -5.011181354522705
    6. '(m' → logprob: -5.511181354522705
    7. 'def' → logprob: -5.511181354522705
    8. 'm' → logprob: -6.761181354522705
    9. 'は' → logprob: -7.886181354522705
    10. '')' → logprob: -8.511180877685547

Token 1412: ''' (ID: 6)
  Prédit: ')''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.6766045689582825
    2. ''' → logprob: -0.9266045689582825
    3. ')' → logprob: -2.8016045093536377
    4. 'def' → logprob: -4.301604747772217
    5. '):' → logprob: -5.301604747772217
    6. 'は' → logprob: -5.551604747772217
    7. '')' → logprob: -6.176604747772217
    8. ':' → logprob: -6.426604747772217
    9. '）' → logprob: -6.926604747772217
    10. ' is' → logprob: -6.926604747772217

Token 1413: ' is' (ID: 382)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.0664540529251099
    2. 'def' → logprob: -1.1914540529251099
    3. ':' → logprob: -1.5664540529251099
    4. '(' → logprob: -2.5664539337158203
    5. '   ' → logprob: -3.9414539337158203
    6. '(
' → logprob: -4.31645393371582
    7. ':
' → logprob: -4.94145393371582
    8. 'm' → logprob: -5.19145393371582
    9. '):' → logprob: -5.81645393371582
    10. '#' → logprob: -5.94145393371582

Token 1414: ' not' (ID: 625)
  Prédit: 'represented'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'represented' → logprob: -0.628546416759491
    2. 'not' → logprob: -2.0035464763641357
    3. ''' → logprob: -2.1285464763641357
    4. 'handled' → logprob: -3.1285464763641357
    5. '"' → logprob: -3.6285464763641357
    6. '#' → logprob: -4.128546237945557
    7. 'det' → logprob: -4.378546237945557
    8. ''s' → logprob: -4.628546237945557
    9. ''d' → logprob: -4.753546237945557
    10. 'double' → logprob: -4.753546237945557

Token 1415: ' appearing' (ID: 44748)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7558766603469849
    2. 'implemented' → logprob: -1.3808766603469849
    3. 'defined' → logprob: -1.8808766603469849
    4. 'handled' → logprob: -3.3808765411376953
    5. 'complete' → logprob: -4.005876541137695
    6. 'completed' → logprob: -4.505876541137695
    7. 'covered' → logprob: -4.630876541137695
    8. 'explicit' → logprob: -4.755876541137695
    9. 'represented' → logprob: -5.005876541137695
    10. 'False' → logprob: -5.130876541137695

Token 1416: ' alone' (ID: 11238)
  Prédit: '(False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(False' → logprob: -0.22131726145744324
    2. 'False' → logprob: -2.3463172912597656
    3. 'def' → logprob: -2.8463172912597656
    4. '(' → logprob: -3.7213172912597656
    5. '(m' → logprob: -4.846317291259766
    6. ' False' → logprob: -5.971317291259766
    7. '(
' → logprob: -6.221317291259766
    8. ':' → logprob: -6.221317291259766
    9. '   ' → logprob: -6.346317291259766
    10. '(True' → logprob: -6.596317291259766

Token 1417: ' but' (ID: 889)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5610036849975586
    2. 'False' → logprob: -1.5610036849975586
    3. 'def' → logprob: -1.5610036849975586
    4. '(m' → logprob: -2.1860036849975586
    5. '   ' → logprob: -2.5610036849975586
    6. '(False' → logprob: -2.9360036849975586
    7. 'm' → logprob: -3.1860036849975586
    8. ')' → logprob: -3.3110036849975586
    9. '(' → logprob: -4.061003684997559
    10. 'return' → logprob: -4.811003684997559

Token 1418: ' represented' (ID: 27328)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6976779103279114
    2. 'len' → logprob: -1.8226778507232666
    3. 'False' → logprob: -1.8226778507232666
    4. 'return' → logprob: -2.5726778507232666
    5. '#' → logprob: -2.9476778507232666
    6. 'def' → logprob: -3.3226778507232666
    7. ' False' → logprob: -5.072678089141846
    8. ' return' → logprob: -5.822678089141846
    9. '
' → logprob: -7.072678089141846
    10. '   ' → logprob: -7.322678089141846

Token 1419: ' by' (ID: 656)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12448882311582565
    2. 'by' → logprob: -3.6244888305664062
    3. '_' → logprob: -3.7494888305664062
    4. '(m' → logprob: -3.9994888305664062
    5. 'm' → logprob: -4.749488830566406
    6. '(' → logprob: -4.749488830566406
    7. ' by' → logprob: -5.124488830566406
    8. '#' → logprob: -5.499488830566406
    9. 'as' → logprob: -5.874488830566406
    10. '   ' → logprob: -5.999488830566406

Token 1420: ' doubled' (ID: 69040)
  Prédit: 'double'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'double' → logprob: -0.35287806391716003
    2. 'dou' → logprob: -1.2278780937194824
    3. 'a' → logprob: -6.227878093719482
    4. 'con' → logprob: -6.977878093719482
    5. 'the' → logprob: -7.102878093719482
    6. 're' → logprob: -9.102877616882324
    7. 'previous' → logprob: -9.477877616882324
    8. 'd' → logprob: -9.602877616882324
    9. 'preced' → logprob: -9.727877616882324
    10. 'duplic' → logprob: -9.727877616882324

Token 1421: ' conson' (ID: 127767)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10001523047685623
    2. 'm' → logprob: -2.975015163421631
    3. 'con' → logprob: -3.725015163421631
    4. ' ' → logprob: -5.225015163421631
    5. '_con' → logprob: -5.475015163421631
    6. ' conson' → logprob: -5.725015163421631
    7. 'c' → logprob: -6.350015163421631
    8. '_m' → logprob: -6.600015163421631
    9. ''' → logprob: -6.975015163421631
    10. 's' → logprob: -7.225015163421631

Token 1422: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.012626192532479763
    2. 't' → logprob: -5.1376261711120605
    3. 'ants' → logprob: -5.2626261711120605
    4. 'a' → logprob: -7.0126261711120605
    5. 's' → logprob: -8.887626647949219
    6. 'm' → logprob: -9.137626647949219
    7. '#' → logprob: -9.262626647949219
    8. 'ант' → logprob: -10.512626647949219
    9. 'antd' → logprob: -10.637626647949219
    10. 'tant' → logprob: -10.762626647949219

Token 1423: ' in' (ID: 306)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4187500476837158
    2. ':' → logprob: -1.4187500476837158
    3. '<|end|>' → logprob: -3.168750047683716
    4. ' def' → logprob: -4.418749809265137
    5. '
' → logprob: -4.543749809265137
    6. ' ' → logprob: -4.918749809265137
    7. '#' → logprob: -4.918749809265137
    8. '   ' → logprob: -5.043749809265137
    9. '(' → logprob: -5.918749809265137
    10. ')' → logprob: -6.168749809265137

Token 1424: ' next' (ID: 2613)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7317488193511963
    2. 'the' → logprob: -1.2317488193511963
    3. 'm' → logprob: -2.4817488193511963
    4. 'code' → logprob: -3.1067488193511963
    5. 'next' → logprob: -3.3567488193511963
    6. 'previous' → logprob: -3.9817488193511963
    7. 'text' → logprob: -4.231748580932617
    8. 'string' → logprob: -5.231748580932617
    9. 'split' → logprob: -5.856748580932617
    10. 'con' → logprob: -5.981748580932617

Token 1425: ' mora' (ID: 47294)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6786911487579346
    2. 'def' → logprob: -2.6786911487579346
    3. 's' → logprob: -2.8036911487579346
    4. '_token' → logprob: -2.9286911487579346
    5. '<|end|>' → logprob: -2.9286911487579346
    6. 'con' → logprob: -3.0536911487579346
    7. '#' → logprob: -3.1786911487579346
    8. 'm' → logprob: -3.6786911487579346
    9. 'token' → logprob: -3.8036911487579346
    10. '_con' → logprob: -3.8036911487579346

Token 1426: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2560456991195679
    2. 'def' → logprob: -1.5060456991195679
    3. '<|end|>' → logprob: -1.6310456991195679
    4. '
' → logprob: -2.0060458183288574
    5. ':' → logprob: -2.2560458183288574
    6. ' ' → logprob: -4.256045818328857
    7. ':return' → logprob: -4.631045818328857
    8. '#' → logprob: -5.131045818328857
    9. '(True' → logprob: -5.631045818328857
    10. ' return' → logprob: -6.006045818328857

Token 1427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011992781655862927
    2. ':' → logprob: -7.126199245452881
    3. '<|end|>' → logprob: -9.501199722290039
    4. ':return' → logprob: -9.876199722290039
    5. 'def' → logprob: -10.001199722290039
    6. '	return' → logprob: -10.126199722290039
    7. ' return' → logprob: -10.501199722290039
    8. ' ' → logprob: -10.626199722290039
    9. ')' → logprob: -11.126199722290039
    10. '
' → logprob: -11.251199722290039

Token 1428: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018058452988043427
    2. ' return' → logprob: -7.126805782318115
    3. 'return' → logprob: -7.501805782318115
    4. 'def' → logprob: -8.626806259155273
    5. ' if' → logprob: -9.251806259155273
    6. '#' (adapté à ' #') → logprob: -9.251806259155273
    7. 'if' → logprob: -11.251806259155273
    8. ')' → logprob: -11.501806259155273
    9. '	return' → logprob: -11.501806259155273
    10. '.' → logprob: -11.876806259155273

Token 1429: ' We' (ID: 1416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13621512055397034
    2. '#' → logprob: -2.5112152099609375
    3. 'return' → logprob: -3.5112152099609375
    4. 'def' → logprob: -4.5112152099609375
    5. '
' → logprob: -6.6362152099609375
    6. ' return' → logprob: -6.6362152099609375
    7. 'False' → logprob: -7.1362152099609375
    8. ' ' → logprob: -7.7612152099609375
    9. '	return' → logprob: -7.7612152099609375
    10. '<|end|>' → logprob: -8.511215209960938

Token 1430: ' represent' (ID: 5188)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06654248386621475
    2. '#' → logprob: -3.816542387008667
    3. 'return' → logprob: -4.066542625427246
    4. 'continue' → logprob: -5.316542625427246
    5. ' return' → logprob: -5.441542625427246
    6. ' continue' → logprob: -5.941542625427246
    7. '
' → logprob: -6.191542625427246
    8. ' can' → logprob: -6.316542625427246
    9. 'can' → logprob: -6.316542625427246
    10. '   ' → logprob: -6.691542625427246

Token 1431: ' s' (ID: 265)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.08496792614459991
    2. 'True' → logprob: -2.959967851638794
    3. 'lambda' → logprob: -4.209968090057373
    4. 'def' → logprob: -5.084968090057373
    5. ' False' → logprob: -5.584968090057373
    6. 'm' → logprob: -5.584968090057373
    7. ' True' → logprob: -8.084967613220215
    8. '(lambda' → logprob: -8.334967613220215
    9. 'len' → logprob: -8.584967613220215
    10. 's' → logprob: -9.459967613220215

Token 1432: 'oku' (ID: 13454)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.2085232734680176
    2. '_' → logprob: -1.3335232734680176
    3. 'u' → logprob: -2.3335232734680176
    4. 'def' → logprob: -2.9585232734680176
    5. 'e' → logprob: -3.0835232734680176
    6. '#' → logprob: -3.5835232734680176
    7. 't' → logprob: -3.7085232734680176
    8. '_m' → logprob: -4.083523273468018
    9. 'm' → logprob: -4.333523273468018
    10. 'return' → logprob: -4.333523273468018

Token 1433: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.002510974183678627
    2. 'o' → logprob: -6.002511024475098
    3. 'on's' → logprob: -12.002511024475098
    4. '
' → logprob: -12.127511024475098
    5. 'con' → logprob: -12.127511024475098
    6. '_' → logprob: -12.252511024475098
    7. 'n' → logprob: -12.752511024475098
    8. '_on' → logprob: -13.252511024475098
    9. 'ons' → logprob: -13.627511024475098
    10. '_o' → logprob: -14.127511024475098

Token 1434: ' mor' (ID: 4658)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37210750579833984
    2. '(m' → logprob: -1.2471075057983398
    3. ':' → logprob: -4.99710750579834
    4. '(' → logprob: -5.12210750579834
    5. '#' → logprob: -6.49710750579834
    6. 'return' → logprob: -6.62210750579834
    7. '(None' → logprob: -6.62210750579834
    8. 'm' → logprob: -6.87210750579834
    9. '(False' → logprob: -6.99710750579834
    10. '(s' → logprob: -7.74710750579834

Token 1435: 'as' (ID: 288)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00581621378660202
    2. 'as' → logprob: -5.8808159828186035
    3. 'def' → logprob: -6.0058159828186035
    4. ''a' → logprob: -7.8808159828186035
    5. 'ra' → logprob: -10.380816459655762
    6. 'if' → logprob: -10.755816459655762
    7. '   ' → logprob: -10.755816459655762
    8. ''' → logprob: -10.880816459655762
    9. 'e' → logprob: -11.880816459655762
    10. 'а' → logprob: -12.005816459655762

Token 1436: ' as' (ID: 472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3355652391910553
    2. '(m' → logprob: -1.460565209388733
    3. ':' → logprob: -4.335565090179443
    4. 'False' → logprob: -4.460565090179443
    5. 'm' → logprob: -5.460565090179443
    6. '(' → logprob: -5.460565090179443
    7. '(False' → logprob: -5.585565090179443
    8. 'return' → logprob: -5.710565090179443
    9. '#' → logprob: -6.335565090179443
    10. '(s' → logprob: -7.085565090179443

Token 1437: ' no' (ID: 860)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.006436114199459553
    2. 'm' → logprob: -5.631436347961426
    3. '''' → logprob: -6.881436347961426
    4. ' False' → logprob: -7.881436347961426
    5. ''' → logprob: -8.131436347961426
    6. 'def' → logprob: -8.256436347961426
    7. '(False' → logprob: -8.256436347961426
    8. 'None' → logprob: -8.381436347961426
    9. 'lambda' → logprob: -8.506436347961426
    10. 'false' → logprob: -10.006436347961426

Token 1438: ' mor' (ID: 4658)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1439: 'as' (ID: 288)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3225975036621094
    2. 's' → logprob: -2.0725975036621094
    3. '=[]' → logprob: -3.4475975036621094
    4. 'def' → logprob: -3.8225975036621094
    5. 'None' → logprob: -3.8225975036621094
    6. '''' → logprob: -3.9475975036621094
    7. 'a' → logprob: -4.697597503662109
    8. 'an' → logprob: -4.947597503662109
    9. 'ane' → logprob: -5.447597503662109
    10. ' []' → logprob: -5.572597503662109

Token 1440: ',' (ID: 11)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.39555227756500244
    2. 'def' → logprob: -1.5205522775650024
    3. 'None' → logprob: -3.145552158355713
    4. '
' → logprob: -4.145552158355713
    5. ' False' → logprob: -4.395552158355713
    6. '<|end|>' → logprob: -4.395552158355713
    7. '(False' → logprob: -5.145552158355713
    8. '   ' → logprob: -5.270552158355713
    9. 'True' → logprob: -5.395552158355713
    10. 'return' → logprob: -5.645552158355713

Token 1441: ' only' (ID: 1606)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.06184946745634079
    2. 'None' → logprob: -3.561849355697632
    3. ' False' → logprob: -3.936849355697632
    4. 'def' → logprob: -4.811849594116211
    5. '   ' → logprob: -6.061849594116211
    6. ' None' → logprob: -6.561849594116211
    7. '#' → logprob: -9.561849594116211
    8. '
' → logprob: -10.061849594116211
    9. 'True' → logprob: -10.186849594116211
    10. '(False' → logprob: -11.186849594116211

Token 1442: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1443: ' next' (ID: 2613)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0668659210205078
    2. 'next' → logprob: -1.0668659210205078
    3. 'the' → logprob: -1.6918659210205078
    4. 'code' → logprob: -3.191865921020508
    5. '#' → logprob: -3.441865921020508
    6. 'm' → logprob: -4.441865921020508
    7. 'context' → logprob: -5.316865921020508
    8. 's' → logprob: -5.316865921020508
    9. 'return' → logprob: -5.566865921020508
    10. ' next' → logprob: -5.566865921020508

Token 1444: ' mora' (ID: 47294)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7763970494270325
    2. '<|end|>' → logprob: -0.7763970494270325
    3. ')' → logprob: -2.7763969898223877
    4. '
' → logprob: -5.151397228240967
    5. ':' → logprob: -5.276397228240967
    6. '<|end|>' → logprob: -6.026397228240967
    7. ' def' → logprob: -7.276397228240967
    8. '#' → logprob: -7.526397228240967
    9. ']' → logprob: -7.651397228240967
    10. '

' → logprob: -8.026396751403809

Token 1445: ' conson' (ID: 127767)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1446: 'ant' (ID: 493)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1447: ' doubled' (ID: 69040)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12502926588058472
    2. '<|end|>' → logprob: -2.5000293254852295
    3. ':' → logprob: -3.7500293254852295
    4. '
' → logprob: -5.75002908706665
    5. '#' → logprob: -5.75002908706665
    6. ')' → logprob: -6.00002908706665
    7. ':def' → logprob: -7.37502908706665
    8. ':return' → logprob: -7.50002908706665
    9. '   ' → logprob: -7.87502908706665
    10. ' def' → logprob: -8.000029563903809

Token 1448: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6167322993278503
    2. '<|end|>' → logprob: -1.4917323589324951
    3. '
' → logprob: -1.6167323589324951
    4. ':return' → logprob: -4.241732120513916
    5. '#' → logprob: -5.366732120513916
    6. ')' → logprob: -5.491732120513916
    7. '\n' → logprob: -5.491732120513916
    8. '   ' → logprob: -6.116732120513916
    9. 'def' → logprob: -6.366732120513916
    10. ':
' → logprob: -6.491732120513916

Token 1449: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1450: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0721263885498047
    2. 'False' → logprob: -1.8221263885498047
    3. '<|end|>' → logprob: -2.0721263885498047
    4. '
' → logprob: -2.1971263885498047
    5. '#' → logprob: -2.4471263885498047
    6. ')' → logprob: -3.3221263885498047
    7. ' ' → logprob: -3.8221263885498047
    8. 'return' (adapté à ' return') → logprob: -3.9471263885498047
    9. 'None' → logprob: -4.072126388549805
    10. ':return' → logprob: -4.197126388549805

Token 1451: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.001318573602475226
    2. 'm' → logprob: -6.751318454742432
    3. ' False' → logprob: -8.87631893157959
    4. '(False' → logprob: -12.25131893157959
    5. 'len' → logprob: -13.00131893157959
    6. 'True' → logprob: -14.25131893157959
    7. 'mor' → logprob: -14.37631893157959
    8. 'false' → logprob: -14.87631893157959
    9. '=False' → logprob: -17.001317977905273
    10. '.False' → logprob: -17.376317977905273

Token 1452: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7429002523422241
    2. '<|end|>' → logprob: -0.9929002523422241
    3. '#' → logprob: -1.9929002523422241
    4. ')' → logprob: -4.992900371551514
    5. '\' → logprob: -5.867900371551514
    6. '
' → logprob: -6.367900371551514
    7. '_' → logprob: -6.617900371551514
    8. 'd' → logprob: -7.242900371551514
    9. '```' → logprob: -7.242900371551514
    10. '\n' → logprob: -7.617900371551514

Token 1453: ' no' (ID: 860)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1454: ' mora' (ID: 47294)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1455: ' representing' (ID: 25389)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1456: ' s' (ID: 265)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1457: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.0037014971021562815
    2. '_' → logprob: -6.253701686859131
    3. 'o' → logprob: -7.003701686859131
    4. 'u' → logprob: -8.503701210021973
    5. ''' → logprob: -8.753701210021973
    6. 'оку' → logprob: -8.753701210021973
    7. 'uku' → logprob: -9.628701210021973
    8. '```' → logprob: -10.003701210021973
    9. 's' → logprob: -10.378701210021973
    10. 't' → logprob: -10.503701210021973

Token 1458: 'on' (ID: 263)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4022561311721802
    2. '<|end|>' → logprob: -2.1522560119628906
    3. '_n' → logprob: -2.4022560119628906
    4. '_' → logprob: -2.4022560119628906
    5. ')' → logprob: -4.777256011962891
    6. '\' → logprob: -5.027256011962891
    7. '\n' → logprob: -5.152256011962891
    8. '
' → logprob: -5.277256011962891
    9. '(' → logprob: -6.277256011962891
    10. '<|end|>' → logprob: -7.027256011962891

Token 1459: ' directly' (ID: 8516)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1460: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0038121880497783422
    2. '<|end|>' → logprob: -5.628812313079834
    3. '#' → logprob: -8.878811836242676
    4. '```' → logprob: -10.628811836242676
    5. ')' → logprob: -11.378811836242676
    6. ' def' → logprob: -11.503811836242676
    7. '<|end|>' → logprob: -12.128811836242676
    8. '\' → logprob: -12.253811836242676
    9. '[' → logprob: -12.878811836242676
    10. '.' → logprob: -13.378811836242676

Token 1461: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1462: ' is' (ID: 382)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.2472692728042603
    2. 'is' → logprob: -2.2472691535949707
    3. 'count' → logprob: -2.6222691535949707
    4. 'to' → logprob: -2.6222691535949707
    5. 'get' → logprob: -3.2472691535949707
    6. 'replace' → logprob: -3.2472691535949707
    7. 'convert' → logprob: -3.2472691535949707
    8. 'voice' → logprob: -3.6222691535949707
    9. 'rom' → logprob: -3.6222691535949707
    10. 'has' → logprob: -3.7472691535949707

Token 1463: '_ch' (ID: 8914)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.315696120262146
    2. '_vo' → logprob: -1.315696120262146
    3. '_long' → logprob: -7.1906962394714355
    4. '_m' → logprob: -7.8156962394714355
    5. '_' → logprob: -8.440695762634277
    6. '_s' → logprob: -8.565695762634277
    7. '_voice' → logprob: -8.565695762634277
    8. '_con' → logprob: -8.815695762634277
    9. 'vo' → logprob: -9.690695762634277
    10. '_space' → logprob: -9.940695762634277

Token 1464: 'ou' (ID: 283)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.9955069422721863
    2. 'aku' → logprob: -1.995507001876831
    3. 'ou' → logprob: -2.370507001876831
    4. 'ō' → logprob: -2.370507001876831
    5. 'a' → logprob: -3.120507001876831
    6. 'annel' → logprob: -3.245507001876831
    7. 'o' → logprob: -3.245507001876831
    8. 'ain' → logprob: -4.495506763458252
    9. 'apter' → logprob: -4.495506763458252
    10. 'oku' → logprob: -4.620506763458252

Token 1465: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0004085083492100239
    2. '```' → logprob: -9.125408172607422
    3. '_on' → logprob: -9.125408172607422
    4. '``' → logprob: -9.750408172607422
    5. 'in' → logprob: -9.875408172607422
    6. 'o' → logprob: -10.125408172607422
    7. 'ont' → logprob: -12.375408172607422
    8. '
' → logprob: -12.625408172607422
    9. 'onk' → logprob: -12.625408172607422
    10. '__' → logprob: -12.625408172607422

Token 1466: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.2296077013015747
    2. '_' → logprob: -1.6046077013015747
    3. '_(' → logprob: -6.479607582092285
    4. '(' → logprob: -7.354607582092285
    5. '_char' → logprob: -7.479607582092285
    6. '(_)' → logprob: -8.354607582092285
    7. 's' → logprob: -8.854607582092285
    8. '_m' → logprob: -8.854607582092285
    9. '__' → logprob: -9.479607582092285
    10. '_token' → logprob: -9.604607582092285

Token 1467: 'ora' (ID: 2505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6120589971542358
    2. 'ora' → logprob: -1.1120589971542358
    3. 'o' → logprob: -2.1120591163635254
    4. 'u' → logprob: -6.487059116363525
    5. '_' → logprob: -6.612059116363525
    6. 'ara' → logprob: -6.737059116363525
    7. 'ar' → logprob: -6.987059116363525
    8. 'e' → logprob: -6.987059116363525
    9. 'or' → logprob: -8.112058639526367
    10. 'oru' → logprob: -8.112058639526367

Token 1468: '1' (ID: 16)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.6533373594284058
    2. '_' → logprob: -1.1533373594284058
    3. ')' → logprob: -2.5283374786376953
    4. ')_' → logprob: -3.2783374786376953
    5. '):' → logprob: -3.9033374786376953
    6. '_)' → logprob: -4.653337478637695
    7. ')m' → logprob: -5.278337478637695
    8. 'm' → logprob: -5.528337478637695
    9. '_m' → logprob: -5.778337478637695
    10. 's' → logprob: -6.778337478637695

Token 1469: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2768322825431824
    2. '(m' → logprob: -1.9018323421478271
    3. ',m' → logprob: -2.776832342147827
    4. '_,' → logprob: -4.026832103729248
    5. '_m' → logprob: -5.401832103729248
    6. 'm' → logprob: -6.026832103729248
    7. '_' → logprob: -6.276832103729248
    8. ',_' → logprob: -6.776832103729248
    9. ')' → logprob: -7.026832103729248
    10. '):' → logprob: -7.651832103729248

Token 1470: 'ora' (ID: 2505)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.35089707374572754
    2. 'ora' → logprob: -1.2258970737457275
    3. 'a' → logprob: -6.475896835327148
    4. 'm' → logprob: -8.350896835327148
    5. '1' → logprob: -8.850896835327148
    6. '0' → logprob: -9.225896835327148
    7. 'or' → logprob: -9.725896835327148
    8. 'e' → logprob: -10.475896835327148
    9. ''o' → logprob: -10.475896835327148
    10. 'oraa' → logprob: -10.725896835327148

Token 1471: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011097323149442673
    2. 'a' → logprob: -7.126109600067139
    3. ')' → logprob: -9.001110076904297
    4. '1' → logprob: -9.876110076904297
    5. 'ora' → logprob: -9.876110076904297
    6. '```' → logprob: -11.001110076904297
    7. '
' → logprob: -11.376110076904297
    8. '0' → logprob: -11.501110076904297
    9. '₂' → logprob: -11.876110076904297
    10. '_' → logprob: -11.876110076904297

Token 1472: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010574931278824806
    2. '):
' → logprob: -4.760574817657471
    3. ')' → logprob: -6.635574817657471
    4. ',' → logprob: -7.760574817657471
    5. ',m' → logprob: -10.010575294494629
    6. '(m' → logprob: -10.135575294494629
    7. '_' → logprob: -10.385575294494629
    8. '   ' → logprob: -10.635575294494629
    9. 'm' → logprob: -10.635575294494629
    10. '_m' → logprob: -11.260575294494629

Token 1473: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3877963721752167
    2. '(m' → logprob: -1.512796401977539
    3. 'm' → logprob: -3.012796401977539
    4. 'def' → logprob: -3.137796401977539
    5. 'if' → logprob: -5.762796401977539
    6. ' (' → logprob: -6.512796401977539
    7. ' ' → logprob: -6.887796401977539
    8. ' if' → logprob: -7.637796401977539
    9. '  ' → logprob: -7.637796401977539
    10. '(' → logprob: -8.012796401977539

Token 1474: ' #' (ID: 1069)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.3365837335586548
    2. ' m' → logprob: -1.4615837335586548
    3. '   ' → logprob: -1.7115837335586548
    4. ' (' → logprob: -2.3365836143493652
    5. ' mor' → logprob: -2.3365836143493652
    6. '(m' → logprob: -2.5865836143493652
    7. ' return' → logprob: -4.086583614349365
    8. ' if' → logprob: -4.086583614349365
    9. ' def' → logprob: -5.086583614349365
    10. ' ' → logprob: -5.336583614349365

Token 1475: ' check' (ID: 2371)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.30792903900146484
    2. 'len' → logprob: -2.182929039001465
    3. 'return' → logprob: -2.307929039001465
    4. 'def' → logprob: -3.307929039001465
    5. '   ' → logprob: -4.182929039001465
    6. 'if' → logprob: -7.807929039001465
    7. 'get' → logprob: -8.307929039001465
    8. ' return' → logprob: -8.932929039001465
    9. ' ' → logprob: -9.682929039001465
    10. '(len' → logprob: -10.307929039001465

Token 1476: ' if' (ID: 538)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0073212203569710255
    2. '(m' → logprob: -5.632321357727051
    3. 'get' → logprob: -5.757321357727051
    4. '(get' → logprob: -8.75732135772705
    5. 'len' → logprob: -9.38232135772705
    6. '   ' → logprob: -9.38232135772705
    7. '(' → logprob: -9.75732135772705
    8. 'def' → logprob: -9.75732135772705
    9. ' ' → logprob: -10.75732135772705
    10. '(len' → logprob: -11.13232135772705

Token 1477: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.12890547513961792
    2. 'get' → logprob: -2.1289055347442627
    3. 'len' → logprob: -7.003905296325684
    4. ' get' → logprob: -7.378905296325684
    5. '   ' → logprob: -8.503905296325684
    6. ' ' → logprob: -8.878905296325684
    7. '(get' → logprob: -10.503905296325684
    8. 'is' → logprob: -11.003905296325684
    9. ' mora' → logprob: -11.253905296325684
    10. '(m' → logprob: -11.753905296325684

Token 1478: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009938588365912437
    2. '2' → logprob: -4.759938716888428
    3. 's' → logprob: -7.634938716888428
    4. '   ' → logprob: -8.50993824005127
    5. 'len' → logprob: -8.63493824005127
    6. 'def' → logprob: -8.75993824005127
    7. '
' → logprob: -9.50993824005127
    8. '[' → logprob: -10.00993824005127
    9. 'if' → logprob: -10.50993824005127
    10. '_' → logprob: -10.63493824005127

Token 1479: ' is' (ID: 382)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.8760285377502441
    2. '[' → logprob: -1.1260285377502441
    3. ' and' → logprob: -1.3760285377502441
    4. '.startswith' → logprob: -5.876028537750244
    5. 'len' → logprob: -6.501028537750244
    6. '==' → logprob: -7.251028537750244
    7. 'in' → logprob: -8.001028060913086
    8. 'startswith' → logprob: -8.251028060913086
    9. '   ' → logprob: -8.626028060913086
    10. '[:' → logprob: -9.001028060913086

Token 1480: ' same' (ID: 2684)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0012945238268002868
    2. 'a' → logprob: -7.8762946128845215
    3. 'get' → logprob: -8.001294136047363
    4. '''' → logprob: -8.126294136047363
    5. 'len' → logprob: -9.001294136047363
    6. 'same' → logprob: -9.751294136047363
    7. 'is' → logprob: -10.751294136047363
    8. 'v' → logprob: -11.251294136047363
    9. '(m' → logprob: -11.501294136047363
    10. '(' → logprob: -11.876294136047363

Token 1481: ' vowel' (ID: 165542)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0002509687910787761
    2. '   ' → logprob: -9.750250816345215
    3. 'mor' → logprob: -10.125250816345215
    4. 'mo' → logprob: -10.500250816345215
    5. '_m' → logprob: -10.625250816345215
    6. ' mora' → logprob: -10.875250816345215
    7. 'v' → logprob: -11.000250816345215
    8. 'o' → logprob: -11.125250816345215
    9. '1' → logprob: -11.500250816345215
    10. 'a' → logprob: -12.000250816345215

Token 1482: ' long' (ID: 1701)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6964067816734314
    2. 'and' → logprob: -0.6964067816734314
    3. '(m' → logprob: -6.321406841278076
    4. 'm' → logprob: -7.446406841278076
    5. ' ' → logprob: -8.446406364440918
    6. '   ' → logprob: -8.446406364440918
    7. 'if' → logprob: -8.571406364440918
    8. '(' → logprob: -10.571406364440918
    9. '==' → logprob: -10.946406364440918
    10. '()' → logprob: -10.946406364440918

Token 1483: ' vowel' (ID: 165542)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.05745573341846466
    2. '   ' → logprob: -3.9324557781219482
    3. 'if' → logprob: -4.557455539703369
    4. 'def' → logprob: -5.307455539703369
    5. ' and' → logprob: -5.432455539703369
    6. ' ==' → logprob: -5.807455539703369
    7. '==' → logprob: -6.057455539703369
    8. 'and' → logprob: -6.057455539703369
    9. '1' → logprob: -6.682455539703369
    10. ' ' → logprob: -7.182455539703369

Token 1484: ' of' (ID: 328)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4401558041572571
    2. 'and' → logprob: -1.0651557445526123
    3. '(m' → logprob: -5.190155982971191
    4. '   ' → logprob: -5.565155982971191
    5. '(' → logprob: -7.065155982971191
    6. 'm' → logprob: -8.315155982971191
    7. ' ' → logprob: -8.815155982971191
    8. 'if' → logprob: -8.940155982971191
    9. '       ' → logprob: -9.690155982971191
    10. '==' → logprob: -9.690155982971191

Token 1485: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.869017852295656e-06
    2. 'get' → logprob: -12.000006675720215
    3. 'is' → logprob: -15.125006675720215
    4. '
' → logprob: -15.500006675720215
    5. ' ' → logprob: -16.87500762939453
    6. '   ' → logprob: -17.00000762939453
    7. ' get' → logprob: -17.75000762939453
    8. ' mora' → logprob: -18.25000762939453
    9. '	m' → logprob: -18.87500762939453
    10. '  ' → logprob: -19.00000762939453

Token 1486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0020747212693095207
    2. '   ' → logprob: -7.002074718475342
    3. '2' → logprob: -7.377074718475342
    4. 'r' → logprob: -9.2520751953125
    5. '[' → logprob: -9.2520751953125
    6. 'def' → logprob: -9.7520751953125
    7. ')' → logprob: -10.3770751953125
    8. 'if' → logprob: -10.5020751953125
    9. '(m' → logprob: -10.7520751953125
    10. 'er' → logprob: -10.7520751953125

Token 1487: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5015114545822144
    2. '   ' → logprob: -1.6265114545822144
    3. 'and' → logprob: -2.626511573791504
    4. '(m' → logprob: -3.126511573791504
    5. '(' → logprob: -4.126511573791504
    6. ' (' → logprob: -4.251511573791504
    7. ' if' → logprob: -4.251511573791504
    8. 'def' → logprob: -4.376511573791504
    9. ':' → logprob: -4.501511573791504
    10. 'if' → logprob: -4.876511573791504

Token 1488: '   ' (ID: 271)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16323509812355042
    2. 'and' → logprob: -2.1632351875305176
    3. '   ' → logprob: -4.038235187530518
    4. '(m' → logprob: -4.913235187530518
    5. 'm' → logprob: -5.913235187530518
    6. 'if' → logprob: -6.038235187530518
    7. '(' → logprob: -6.163235187530518
    8. ' if' → logprob: -6.663235187530518
    9. ':' → logprob: -7.288235187530518
    10. ' (' → logprob: -7.413235187530518

Token 1489: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4006497263908386
    2. '   ' → logprob: -2.1506497859954834
    3. 'return' → logprob: -2.4006497859954834
    4. 'm' → logprob: -2.4006497859954834
    5. ' if' → logprob: -4.275649547576904
    6. ' m' → logprob: -4.650649547576904
    7. ' ' → logprob: -5.650649547576904
    8. '(m' → logprob: -6.275649547576904
    9. 'if' → logprob: -6.900649547576904
    10. ' (' → logprob: -7.525649547576904

Token 1490: ' mora' (ID: 47294)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.2704602777957916
    2. 'return' → logprob: -1.6454602479934692
    3. 'm' → logprob: -3.395460367202759
    4. '   ' → logprob: -5.89546012878418
    5. 'len' → logprob: -5.89546012878418
    6. ' get' → logprob: -6.52046012878418
    7. ' return' → logprob: -6.77046012878418
    8. 'def' → logprob: -7.14546012878418
    9. '
' → logprob: -7.39546012878418
    10. 'if' → logprob: -7.89546012878418

Token 1491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6443843841552734
    2. '2' → logprob: -0.7693843841552734
    3. '[' → logprob: -5.894384384155273
    4. 'def' → logprob: -6.019384384155273
    5. '   ' → logprob: -6.144384384155273
    6. 's' → logprob: -6.644384384155273
    7. '_' → logprob: -7.019384384155273
    8. 'len' → logprob: -7.519384384155273
    9. '[len' → logprob: -8.144384384155273
    10. ')' → logprob: -8.644384384155273

Token 1492: ' and' (ID: 326)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2405542135238647
    2. 'v' → logprob: -1.3655542135238647
    3. '_last' → logprob: -2.6155543327331543
    4. 'and' → logprob: -2.7405543327331543
    5. '_v' → logprob: -3.1155543327331543
    6. '=' → logprob: -3.6155543327331543
    7. '[len' → logprob: -3.6155543327331543
    8. ' and' → logprob: -3.6155543327331543
    9. '==' → logprob: -3.7405543327331543
    10. ' =' → logprob: -3.7405543327331543

Token 1493: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.676292231422849e-05
    2. ' mora' → logprob: -11.375017166137695
    3. ' ' → logprob: -13.250017166137695
    4. 'len' → logprob: -14.000017166137695
    5. '   ' → logprob: -14.625017166137695
    6. '
' → logprob: -14.750017166137695
    7. 'mor' → logprob: -15.125017166137695
    8. 'mo' → logprob: -15.500017166137695
    9. 'type' → logprob: -15.875017166137695
    10. '  ' → logprob: -16.000017166137695

Token 1494: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -14.125001907348633
    3. 'def' → logprob: -15.250001907348633
    4. '
' → logprob: -15.500001907348633
    5. '1' → logprob: -16.000001907348633
    6. ' ' → logprob: -16.250001907348633
    7. '0' → logprob: -17.125001907348633
    8. '_m' → logprob: -17.375001907348633
    9. '   ' → logprob: -17.625001907348633
    10. 's' → logprob: -17.625001907348633

Token 1495: ' must' (ID: 2804)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.981996476650238
    2. 'and' → logprob: -1.1069965362548828
    3. ' and' → logprob: -1.4819965362548828
    4. 'len' → logprob: -3.356996536254883
    5. '[len' → logprob: -4.606996536254883
    6. ':' → logprob: -4.981996536254883
    7. '=' → logprob: -6.231996536254883
    8. ')' → logprob: -6.731996536254883
    9. '[-' → logprob: -6.731996536254883
    10. 'length' → logprob: -6.856996536254883

Token 1496: ' both' (ID: 2973)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.09690326452255249
    2. 'get' → logprob: -3.5969033241271973
    3. 'and' → logprob: -3.9719033241271973
    4. 'have' → logprob: -4.221903324127197
    5. 'be' → logprob: -4.971903324127197
    6. ' and' → logprob: -5.221903324127197
    7. ' be' → logprob: -5.221903324127197
    8. 'return' → logprob: -5.596903324127197
    9. 'in' → logprob: -6.221903324127197
    10. ' get' → logprob: -6.471903324127197

Token 1497: ' be' (ID: 413)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5031521916389465
    2. 'in' → logprob: -1.0031521320343018
    3. 'have' → logprob: -4.253152370452881
    4. 'get' → logprob: -5.128152370452881
    5. ' and' → logprob: -5.628152370452881
    6. 'be' → logprob: -6.253152370452881
    7. 'return' → logprob: -6.503152370452881
    8. 'len' → logprob: -7.753152370452881
    9. '[' → logprob: -8.378151893615723
    10. 'not' → logprob: -9.003151893615723

Token 1498: ' vowels' (ID: 176245)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07048328965902328
    2. 'len' → logprob: -2.9454832077026367
    3. 'm' → logprob: -4.820483207702637
    4. 'non' → logprob: -5.445483207702637
    5. 'a' → logprob: -6.695483207702637
    6. '1' → logprob: -7.695483207702637
    7. 'in' → logprob: -7.820483207702637
    8. 'not' → logprob: -8.445483207702637
    9. 'single' → logprob: -8.695483207702637
    10. '''' → logprob: -8.945483207702637

Token 1499: ' in' (ID: 306)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4022887349128723
    2. 'and' → logprob: -1.4022886753082275
    3. '(' → logprob: -3.7772886753082275
    4. '   ' → logprob: -3.7772886753082275
    5. '(m' → logprob: -3.9022886753082275
    6. 'if' → logprob: -5.027288913726807
    7. 'def' → logprob: -5.652288913726807
    8. ':' → logprob: -5.777288913726807
    9. 'm' → logprob: -6.152288913726807
    10. ' if' → logprob: -6.902288913726807

Token 1500: ' {'' (ID: 11881)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.16236209869384766
    2. 'm' → logprob: -2.6623620986938477
    3. '{'' → logprob: -2.9123620986938477
    4. '{' → logprob: -3.7873620986938477
    5. 'get' → logprob: -7.162362098693848
    6. ' V' → logprob: -7.787362098693848
    7. 'VO' → logprob: -7.912362098693848
    8. ''' → logprob: -8.287362098693848
    9. 'def' → logprob: -8.662362098693848
    10. 'set' → logprob: -8.662362098693848

Token 1501: 'a' (ID: 64)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.28017741441726685
    2. 'a' → logprob: -1.530177354812622
    3. '{'' → logprob: -3.655177354812622
    4. ''' → logprob: -6.655177593231201
    5. ''m' → logprob: -8.655177116394043
    6. ''ai' → logprob: -9.655177116394043
    7. '"a' → logprob: -9.655177116394043
    8. 'm' → logprob: -9.905177116394043
    9. ''i' → logprob: -10.155177116394043
    10. '{' → logprob: -10.280177116394043

Token 1502: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.2503196597099304
    2. '',' → logprob: -2.125319719314575
    3. ''a' → logprob: -2.750319719314575
    4. 'a' → logprob: -3.875319719314575
    5. ',' → logprob: -4.875319480895996
    6. ','' → logprob: -5.250319480895996
    7. ''' → logprob: -6.375319480895996
    8. ',a' → logprob: -6.625319480895996
    9. '{'' → logprob: -7.125319480895996
    10. ''i' → logprob: -8.875319480895996

Token 1503: 'i' (ID: 72)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25039270520210266
    2. 'i' → logprob: -1.6253926753997803
    3. 'e' → logprob: -4.000392913818359
    4. ''i' → logprob: -5.750392913818359
    5. ''a' → logprob: -6.750392913818359
    6. ''' → logprob: -7.125392913818359
    7. '{'' → logprob: -8.00039291381836
    8. ''e' → logprob: -8.37539291381836
    9. 'u' → logprob: -8.75039291381836
    10. 'o' → logprob: -9.00039291381836

Token 1504: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.030844692140817642
    2. '',' → logprob: -3.6558446884155273
    3. 'a' → logprob: -6.030844688415527
    4. 'u' → logprob: -6.905844688415527
    5. ''a' → logprob: -7.905844688415527
    6. ',' → logprob: -8.280844688415527
    7. ''' → logprob: -8.530844688415527
    8. ','' → logprob: -8.780844688415527
    9. ''u' → logprob: -9.655844688415527
    10. '{'' → logprob: -10.280844688415527

Token 1505: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0011787971016019583
    2. ''u' → logprob: -7.251178741455078
    3. 'e' → logprob: -7.751178741455078
    4. ''' → logprob: -11.501178741455078
    5. '
' → logprob: -12.376178741455078
    6. 'i' → logprob: -12.376178741455078
    7. 'a' → logprob: -12.501178741455078
    8. ''e' → logprob: -12.876178741455078
    9. 'ue' → logprob: -13.001178741455078
    10. 'o' → logprob: -13.126178741455078

Token 1506: ''}
' (ID: 32701)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '','' → logprob: -0.015230579301714897
    2. '',' → logprob: -4.265230655670166
    3. 'a' → logprob: -7.640230655670166
    4. ''}' → logprob: -9.140230178833008
    5. ','' → logprob: -9.265230178833008
    6. '}','' → logprob: -9.390230178833008
    7. '{'' → logprob: -9.640230178833008
    8. '}' → logprob: -9.890230178833008
    9. ''' → logprob: -10.015230178833008
    10. '}',' → logprob: -10.515230178833008

Token 1507: '   ' (ID: 271)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.19579952955245972
    2. 'and' → logprob: -1.8207995891571045
    3. '   ' → logprob: -4.195799350738525
    4. ':' → logprob: -7.945799350738525
    5. ':
' → logprob: -8.820799827575684
    6. ')' → logprob: -9.445799827575684
    7. '(' → logprob: -9.570799827575684
    8. ' ' → logprob: -9.570799827575684
    9. '(m' → logprob: -9.820799827575684
    10. '(a' → logprob: -11.320799827575684

Token 1508: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2688532769680023
    2. 'return' → logprob: -1.5188533067703247
    3. ' return' → logprob: -4.643853187561035
    4. 'v' → logprob: -5.393853187561035
    5. 'if' → logprob: -6.893853187561035
    6. 'm' → logprob: -7.393853187561035
    7. '(m' → logprob: -8.518853187561035
    8. 'def' → logprob: -9.018853187561035
    9. ' ' → logprob: -9.143853187561035
    10. '(' → logprob: -9.393853187561035

Token 1509: ' long' (ID: 1701)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09924501180648804
    2. 'm' → logprob: -2.724245071411133
    3. ' return' → logprob: -4.224245071411133
    4. 'if' → logprob: -4.474245071411133
    5. 'def' → logprob: -6.849245071411133
    6. '   ' → logprob: -7.099245071411133
    7. '(m' → logprob: -8.099245071411133
    8. ' if' → logprob: -8.349245071411133
    9. 'v' → logprob: -8.724245071411133
    10. 'len' → logprob: -9.599245071411133

Token 1510: ' vowels' (ID: 176245)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7958886623382568
    2. 'def' → logprob: -1.2958886623382568
    3. 'if' → logprob: -2.170888662338257
    4. '_v' → logprob: -2.545888662338257
    5. 'm' → logprob: -3.045888662338257
    6. ' if' → logprob: -4.670888900756836
    7. 'return' → logprob: -5.295888900756836
    8. '   ' → logprob: -5.420888900756836
    9. '_m' → logprob: -5.420888900756836
    10. 'V' → logprob: -5.795888900756836

Token 1511: ' represented' (ID: 27328)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2028521299362183
    2. ' and' → logprob: -1.8278521299362183
    3. '(m' → logprob: -2.202852249145508
    4. '   ' → logprob: -2.202852249145508
    5. 'if' → logprob: -2.452852249145508
    6. 'and' → logprob: -2.452852249145508
    7. 'return' → logprob: -3.327852249145508
    8. ' =' → logprob: -3.702852249145508
    9. 'm' → logprob: -4.077852249145508
    10. ':' → logprob: -4.327852249145508

Token 1512: ' by' (ID: 656)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2614846229553223
    2. 'def' → logprob: -1.3864846229553223
    3. '(m' → logprob: -1.6364846229553223
    4. 'by' → logprob: -2.6364846229553223
    5. ' if' → logprob: -2.8864846229553223
    6. ' by' → logprob: -3.0114846229553223
    7. 'm' → logprob: -3.6364846229553223
    8. '   ' → logprob: -4.261484622955322
    9. '(s' → logprob: -4.261484622955322
    10. '==' → logprob: -5.011484622955322

Token 1513: ' repeated' (ID: 24161)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.09013165533542633
    2. '(m' → logprob: -2.4651317596435547
    3. ' (' → logprob: -7.965131759643555
    4. 'len' → logprob: -8.465131759643555
    5. ' mora' → logprob: -8.965131759643555
    6. '((' → logprob: -9.090131759643555
    7. '(' → logprob: -9.215131759643555
    8. '(len' → logprob: -9.590131759643555
    9. 'set' → logprob: -10.090131759643555
    10. ' ' → logprob: -10.965131759643555

Token 1514: ' vowels' (ID: 176245)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.2921799421310425
    2. 'm' → logprob: -1.7921799421310425
    3. '(get' → logprob: -2.792180061340332
    4. 'v' → logprob: -4.042180061340332
    5. 'def' → logprob: -5.917180061340332
    6. '(m' → logprob: -6.042180061340332
    7. ' get' → logprob: -6.667180061340332
    8. 'if' → logprob: -7.792180061340332
    9. 'len' → logprob: -8.917180061340332
    10. 'V' → logprob: -9.167180061340332

Token 1515: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5775207877159119
    2. 'and' → logprob: -1.9525208473205566
    3. 'if' → logprob: -2.3275208473205566
    4. '   ' → logprob: -2.5775208473205566
    5. ' and' → logprob: -2.9525208473205566
    6. '(m' → logprob: -3.0775208473205566
    7. 'm' → logprob: -4.702520847320557
    8. ':' → logprob: -5.702520847320557
    9. ' if' → logprob: -5.702520847320557
    10. '
' → logprob: -5.952520847320557

Token 1516: ' '' (ID: 461)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.003423308487981558
    2. 'a' → logprob: -6.62842321395874
    3. 'v' → logprob: -7.37842321395874
    4. 'def' → logprob: -8.128423690795898
    5. 'len' → logprob: -8.378423690795898
    6. '#' → logprob: -8.378423690795898
    7. '{'' → logprob: -9.128423690795898
    8. 'set' → logprob: -9.253423690795898
    9. '{' → logprob: -9.378423690795898
    10. 'long' → logprob: -9.878423690795898

Token 1517: 'a' (ID: 64)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.024989763274788857
    2. 'a' → logprob: -4.149989604949951
    3. '{'' → logprob: -4.899989604949951
    4. ''a' → logprob: -7.649989604949951
    5. '{' → logprob: -8.27499008178711
    6. ''' → logprob: -8.39999008178711
    7. 'v' → logprob: -8.89999008178711
    8. '('' → logprob: -9.02499008178711
    9. ''m' → logprob: -9.64999008178711
    10. '['' → logprob: -10.39999008178711

Token 1518: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6829193830490112
    2. '','' → logprob: -1.3079193830490112
    3. '',' → logprob: -1.8079193830490112
    4. '{'' → logprob: -3.682919502258301
    5. 'a' → logprob: -3.807919502258301
    6. 'u' → logprob: -5.682919502258301
    7. 'e' → logprob: -7.057919502258301
    8. '')' → logprob: -7.182919502258301
    9. 'i' → logprob: -7.182919502258301
    10. ','' → logprob: -7.432919502258301

Token 1519: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.13666172325611115
    2. ''i' → logprob: -2.3866617679595947
    3. ''u' → logprob: -4.011661529541016
    4. 'u' → logprob: -4.261661529541016
    5. ''' → logprob: -5.761661529541016
    6. 'a' → logprob: -9.386661529541016
    7. 'e' → logprob: -9.386661529541016
    8. ''a' → logprob: -9.511661529541016
    9. ''e' → logprob: -10.136661529541016
    10. '{'' → logprob: -10.386661529541016

Token 1520: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.7276378273963928
    2. ''u' → logprob: -0.8526378273963928
    3. 'u' → logprob: -3.102637767791748
    4. ''' → logprob: -3.727637767791748
    5. '{'' → logprob: -4.477637767791748
    6. ','' → logprob: -5.102637767791748
    7. '',' → logprob: -6.227637767791748
    8. ',u' → logprob: -6.602637767791748
    9. '{' → logprob: -7.977637767791748
    10. ''s' → logprob: -9.352638244628906

Token 1521: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.02979503758251667
    2. ''u' → logprob: -3.529794931411743
    3. ''' → logprob: -10.154794692993164
    4. '{'' → logprob: -13.029794692993164
    5. '
' → logprob: -13.404794692993164
    6. ' u' → logprob: -14.029794692993164
    7. ''s' → logprob: -14.904794692993164
    8. '	u' → logprob: -15.654794692993164
    9. ''e' → logprob: -16.279794692993164
    10. ',u' → logprob: -16.529794692993164

Token 1522: ''' (ID: 6)
  Prédit: ''}
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}
' → logprob: -1.1850495338439941
    2. ''' → logprob: -1.3100495338439941
    3. '}'
' → logprob: -2.060049533843994
    4. ''}' → logprob: -2.560049533843994
    5. '}'' → logprob: -2.935049533843994
    6. ''
' → logprob: -3.060049533843994
    7. '}' → logprob: -3.060049533843994
    8. '}
' → logprob: -3.685049533843994
    9. '   ' → logprob: -4.185049533843994
    10. ')' → logprob: -5.060049533843994

Token 1523: ' only' (ID: 1606)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9489948749542236
    2. 'and' → logprob: -1.1989948749542236
    3. ' and' → logprob: -2.3239948749542236
    4. 'def' → logprob: -2.3239948749542236
    5. '(m' → logprob: -3.5739948749542236
    6. ':' → logprob: -3.8239948749542236
    7. 'if' → logprob: -3.9489948749542236
    8. 'return' → logprob: -4.0739946365356445
    9. 'm' → logprob: -4.1989946365356445
    10. '(' → logprob: -5.4489946365356445

Token 1524: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9931302666664124
    2. 'return' → logprob: -1.1181302070617676
    3. ' and' → logprob: -2.1181302070617676
    4. 'if' → logprob: -2.7431302070617676
    5. 'and' → logprob: -2.8681302070617676
    6. ' return' → logprob: -3.8681302070617676
    7. 'm' → logprob: -4.243130207061768
    8. ' if' → logprob: -4.743130207061768
    9. '
' → logprob: -5.118130207061768
    10. 'def' → logprob: -5.993130207061768

Token 1525: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7407705187797546
    2. ' and' → logprob: -0.9907705187797546
    3. 'and' → logprob: -2.1157705783843994
    4. ':' → logprob: -4.24077033996582
    5. '(' → logprob: -5.11577033996582
    6. 'def' → logprob: -5.99077033996582
    7. 'if' → logprob: -6.24077033996582
    8. 'return' → logprob: -6.36577033996582
    9. '(m' → logprob: -6.74077033996582
    10. ' ' → logprob: -6.74077033996582

Token 1526: ' v' (ID: 323)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03387078642845154
    2. 'm' → logprob: -4.533870697021484
    3. 'if' → logprob: -4.658870697021484
    4. ' return' → logprob: -4.783870697021484
    5. 'def' → logprob: -5.658870697021484
    6. '   ' → logprob: -7.283870697021484
    7. ' if' → logprob: -8.408870697021484
    8. 'v' (adapté à ' v') → logprob: -8.408870697021484
    9. '(m' → logprob: -10.658870697021484
    10. '
' → logprob: -10.908870697021484

Token 1527: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03549090027809143
    2. '=' → logprob: -4.660490989685059
    3. 'm' → logprob: -4.910490989685059
    4. ' =' → logprob: -5.035490989685059
    5. '_m' → logprob: -6.035490989685059
    6. 'al' → logprob: -6.160490989685059
    7. 'owel' → logprob: -6.160490989685059
    8. 'owels' → logprob: -6.160490989685059
    9. 'if' → logprob: -7.535490989685059
    10. '=m' → logprob: -7.660490989685059

Token 1528: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.252114474773407
    2. ' =' → logprob: -1.5021145343780518
    3. '=v' → logprob: -8.627114295959473
    4. 'v' → logprob: -12.877114295959473
    5. '==' → logprob: -13.002114295959473
    6. ' ==' → logprob: -13.752114295959473
    7. '=
' → logprob: -16.00211524963379
    8. '＝' → logprob: -16.75211524963379
    9. ' ' → logprob: -17.12711524963379
    10. ',' → logprob: -17.75211524963379

Token 1529: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.007518723141402006
    2. 'm' → logprob: -5.007518768310547
    3. ' get' → logprob: -7.132518768310547
    4. '(get' → logprob: -13.132518768310547
    5. 'v' → logprob: -13.757518768310547
    6. '	get' → logprob: -15.132518768310547
    7. '   ' → logprob: -15.382518768310547
    8. 'geta' → logprob: -15.507518768310547
    9. ' ' → logprob: -15.757518768310547
    10. '.get' → logprob: -16.382518768310547

Token 1530: '_v' (ID: 5390)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6869640350341797
    2. '_v' → logprob: -0.8119640350341797
    3. 'm' → logprob: -3.4369640350341797
    4. '(m' → logprob: -3.9369640350341797
    5. '_m' → logprob: -6.81196403503418
    6. 'a' → logprob: -10.18696403503418
    7. '[m' → logprob: -10.56196403503418
    8. '`' → logprob: -11.68696403503418
    9. '(v' → logprob: -11.81196403503418
    10. '```' → logprob: -11.93696403503418

Token 1531: 'owel' (ID: 27097)
  Prédit: 'owel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owel' → logprob: -0.0003612065047491342
    2. 'owels' → logprob: -8.000361442565918
    3. 'ow' → logprob: -11.250361442565918
    4. 'ovel' → logprob: -12.000361442565918
    5. 'owe' → logprob: -13.000361442565918
    6. 'owl' → logprob: -13.125361442565918
    7. 'ower' → logprob: -13.875361442565918
    8. 'o' → logprob: -14.625361442565918
    9. 'm' → logprob: -14.750361442565918
    10. 'v' → logprob: -15.250361442565918

Token 1532: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -5.180879816180095e-05
    2. 'm' → logprob: -10.125051498413086
    3. '(' → logprob: -11.625051498413086
    4. ')m' → logprob: -13.750051498413086
    5. ')' → logprob: -14.250051498413086
    6. '(
' → logprob: -15.375051498413086
    7. 's' → logprob: -15.625051498413086
    8. '(s' → logprob: -16.375051498413086
    9. '=m' → logprob: -16.375051498413086
    10. ' (' → logprob: -16.750051498413086

Token 1533: 'ora' (ID: 2505)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.023408057168126106
    2. 'ora' → logprob: -3.7734081745147705
    3. '(m' → logprob: -10.398407936096191
    4. '1' → logprob: -10.648407936096191
    5. ')' → logprob: -10.898407936096191
    6. 'mor' → logprob: -11.148407936096191
    7. 'a' → logprob: -11.523407936096191
    8. ' mora' → logprob: -11.898407936096191
    9. ')m' → logprob: -11.898407936096191
    10. 'ra' → logprob: -12.148407936096191

Token 1534: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0027599374298006296
    2. 'm' → logprob: -6.37775993347168
    3. '[' → logprob: -7.50275993347168
    4. '(m' → logprob: -8.12775993347168
    5. '(' → logprob: -9.00275993347168
    6. ')' → logprob: -10.50275993347168
    7. 's' → logprob: -10.62775993347168
    8. '
' → logprob: -11.87775993347168
    9. '[m' → logprob: -11.87775993347168
    10. '```' → logprob: -11.87775993347168

Token 1535: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25205010175704956
    2. ')' → logprob: -1.5020501613616943
    3. ')
' → logprob: -10.127050399780273
    4. ')v' → logprob: -10.252050399780273
    5. 'v' → logprob: -10.502050399780273
    6. '   ' → logprob: -11.252050399780273
    7. 'if' → logprob: -13.377050399780273
    8. ' )
' → logprob: -14.252050399780273
    9. ')`
' → logprob: -14.377050399780273
    10. ' ' → logprob: -14.627050399780273

Token 1536: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3040803074836731
    2. '   ' → logprob: -1.9290802478790283
    3. ' if' → logprob: -2.6790802478790283
    4. 'if' → logprob: -3.5540802478790283
    5. ' ==' → logprob: -4.804080486297607
    6. ' v' → logprob: -5.554080486297607
    7. ' and' → logprob: -5.554080486297607
    8. '==' → logprob: -6.054080486297607
    9. 'and' → logprob: -7.304080486297607
    10. '
' → logprob: -8.17908000946045

Token 1537: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -4.23917081207037e-05
    2. ' v' → logprob: -10.250041961669922
    3. 'if' → logprob: -12.875041961669922
    4. 'return' → logprob: -13.500041961669922
    5. '==' → logprob: -14.250041961669922
    6. '`' → logprob: -14.500041961669922
    7. '```' → logprob: -15.000041961669922
    8. '   ' → logprob: -15.125041961669922
    9. ''' → logprob: -15.375041961669922
    10. '''' → logprob: -15.750041961669922

Token 1538: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07629379630088806
    2. '2' → logprob: -2.826293706893921
    3. 'v' → logprob: -5.0762939453125
    4. '=v' → logprob: -5.3262939453125
    5. '=' → logprob: -6.7012939453125
    6. ' =' → logprob: -7.5762939453125
    7. '   ' → logprob: -8.0762939453125
    8. '(v' → logprob: -8.3262939453125
    9. '==' → logprob: -8.8262939453125
    10. '```' → logprob: -9.0762939453125

Token 1539: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38197293877601624
    2. '=' → logprob: -1.3819729089736938
    3. '(v' → logprob: -3.3819730281829834
    4. '(m' → logprob: -4.506972789764404
    5. '==' → logprob: -4.881972789764404
    6. ' ==' → logprob: -5.381972789764404
    7. 'v' → logprob: -5.631972789764404
    8. '=v' → logprob: -6.256972789764404
    9. '=m' → logprob: -6.256972789764404
    10. '(' → logprob: -6.756972789764404

Token 1540: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -5.371605948312208e-05
    2. ' get' → logprob: -10.500053405761719
    3. 'v' → logprob: -11.250053405761719
    4. 'm' → logprob: -11.375053405761719
    5. '(get' → logprob: -13.875053405761719
    6. '	get' → logprob: -15.000053405761719
    7. 'geta' → logprob: -15.625053405761719
    8. '.get' → logprob: -16.75005340576172
    9. '=get' → logprob: -17.37505340576172
    10. 'getc' → logprob: -17.75005340576172

Token 1541: '_v' (ID: 5390)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03703521192073822
    2. '_v' → logprob: -3.4120352268218994
    3. 'm' → logprob: -5.78703498840332
    4. '(m' → logprob: -8.28703498840332
    5. '_m' → logprob: -10.78703498840332
    6. '(v' → logprob: -11.41203498840332
    7. 'vo' → logprob: -11.78703498840332
    8. ' vowel' → logprob: -12.28703498840332
    9. 'o' → logprob: -12.53703498840332
    10. 'owel' → logprob: -13.28703498840332

Token 1542: 'owel' (ID: 27097)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6029345393180847
    2. 'owel' → logprob: -0.9779345393180847
    3. 'v' → logprob: -3.2279345989227295
    4. 'owels' → logprob: -4.60293436050415
    5. 'ow' → logprob: -4.97793436050415
    6. '(m' → logprob: -5.35293436050415
    7. 'o' → logprob: -5.60293436050415
    8. 'owe' → logprob: -5.97793436050415
    9. 'owa' → logprob: -6.22793436050415
    10. 'ora' → logprob: -6.35293436050415

Token 1543: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.005941121373325586
    2. 'm' → logprob: -5.130940914154053
    3. ')m' → logprob: -12.130941390991211
    4. '(' → logprob: -12.755941390991211
    5. ')' → logprob: -13.630941390991211
    6. '(
' → logprob: -14.380941390991211
    7. ' (' → logprob: -14.380941390991211
    8. '	m' → logprob: -15.255941390991211
    9. '[m' → logprob: -15.630941390991211
    10. '```' → logprob: -15.880941390991211

Token 1544: 'ora' (ID: 2505)
  Prédit: 'ora'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -0.18003970384597778
    2. 'm' → logprob: -2.305039644241333
    3. '2' → logprob: -3.055039644241333
    4. 'ra' → logprob: -4.680039882659912
    5. 'a' → logprob: -6.180039882659912
    6. 'or' → logprob: -6.680039882659912
    7. '(m' → logprob: -6.680039882659912
    8. '1' → logprob: -7.180039882659912
    9. 'o' → logprob: -7.555039882659912
    10. '[' → logprob: -8.055039405822754

Token 1545: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07128263264894485
    2. 'm' → logprob: -2.6962826251983643
    3. '(m' → logprob: -6.946282863616943
    4. 'mor' → logprob: -9.196282386779785
    5. ')m' → logprob: -9.946282386779785
    6. ')' → logprob: -9.946282386779785
    7. '1' → logprob: -10.071282386779785
    8. 'ora' → logprob: -10.446282386779785
    9. '[m' → logprob: -10.571282386779785
    10. 'r' → logprob: -11.321282386779785

Token 1546: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3136616349220276
    2. ')' → logprob: -1.3136615753173828
    3. '   ' → logprob: -7.938661575317383
    4. ')
' → logprob: -10.563661575317383
    5. ')==' → logprob: -11.563661575317383
    6. 'if' → logprob: -13.313661575317383
    7. ')return' → logprob: -13.813661575317383
    8. ')`
' → logprob: -13.938661575317383
    9. ' )
' → logprob: -14.313661575317383
    10. ')

' → logprob: -14.563661575317383

Token 1547: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006125979125499725
    2. ' and' → logprob: -7.625612735748291
    3. 'and' → logprob: -9.750612258911133
    4. 'return' → logprob: -10.875612258911133
    5. ' if' → logprob: -11.625612258911133
    6. ' return' → logprob: -12.000612258911133
    7. '	return' → logprob: -12.000612258911133
    8. '==' → logprob: -12.500612258911133
    9. '       ' → logprob: -12.750612258911133
    10. ' ' → logprob: -13.000612258911133

Token 1548: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06455695629119873
    2. 'return' → logprob: -2.8145570755004883
    3. 'if' (adapté à ' if') → logprob: -6.564557075500488
    4. ' return' → logprob: -7.064557075500488
    5. ' if' → logprob: -8.189557075500488
    6. '	return' → logprob: -10.314557075500488
    7. ':return' → logprob: -12.939557075500488
    8. '	if' → logprob: -13.314557075500488
    9. 'v' → logprob: -13.314557075500488
    10. ' ' → logprob: -13.439557075500488

Token 1549: ' mora' (ID: 47294)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004092766437679529
    2. ' v' → logprob: -5.504092693328857
    3. '(v' → logprob: -11.629093170166016
    4. '   ' → logprob: -12.254093170166016
    5. ' (' → logprob: -15.004093170166016
    6. '(' → logprob: -15.629093170166016
    7. ' ' → logprob: -16.254093170166016
    8. '	v' → logprob: -16.379093170166016
    9. '  ' → logprob: -18.754093170166016
    10. '_v' → logprob: -19.129093170166016

Token 1550: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004683118779212236
    2. '==' → logprob: -5.879683017730713
    3. ' ==' → logprob: -7.254683017730713
    4. '[' → logprob: -8.004683494567871
    5. '   ' → logprob: -8.004683494567871
    6. '2' → logprob: -8.129683494567871
    7. 'len' → logprob: -10.129683494567871
    8. '_' → logprob: -10.629683494567871
    9. '!=' → logprob: -10.629683494567871
    10. 's' → logprob: -11.254683494567871

Token 1551: ' in' (ID: 306)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3313514292240143
    2. ' and' → logprob: -2.3313515186309814
    3. ' ==' → logprob: -2.4563515186309814
    4. 'and' → logprob: -2.5813515186309814
    5. '[' → logprob: -3.9563515186309814
    6. '   ' → logprob: -6.331351280212402
    7. '!=' → logprob: -7.456351280212402
    8. ' !=' → logprob: -7.581351280212402
    9. '=' → logprob: -7.956351280212402
    10. ' ' → logprob: -8.206351280212402

Token 1552: ' V' (ID: 631)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.10057314485311508
    2. 'V' → logprob: -2.3505730628967285
    3. '{"' → logprob: -8.850573539733887
    4. 'VOICE' → logprob: -9.350573539733887
    5. '['' → logprob: -10.225573539733887
    6. 'VO' → logprob: -10.600573539733887
    7. ' {'' → logprob: -10.850573539733887
    8. '{' → logprob: -11.100573539733887
    9. ' V' → logprob: -11.725573539733887
    10. ''' → logprob: -11.850573539733887

Token 1553: 'OW' (ID: 5593)
  Prédit: 'OW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OW' → logprob: -0.0007355354027822614
    2. 'O' → logprob: -8.62573528289795
    3. 'owels' → logprob: -8.62573528289795
    4. 'OV' → logprob: -9.25073528289795
    5. '{'' → logprob: -9.25073528289795
    6. '{' → logprob: -9.37573528289795
    7. '{
' → logprob: -10.37573528289795
    8. 'W' → logprob: -10.62573528289795
    9. 'OWL' → logprob: -11.87573528289795
    10. 'V' → logprob: -12.00073528289795

Token 1554: 'ELS' (ID: 88642)
  Prédit: 'ELS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ELS' → logprob: -0.0008955012308433652
    2. 'OW' → logprob: -7.1258955001831055
    3. '(' → logprob: -10.750895500183105
    4. '{' → logprob: -11.125895500183105
    5. '{'' → logprob: -11.750895500183105
    6. '```' → logprob: -11.875895500183105
    7. '
' → logprob: -12.125895500183105
    8. '[' → logprob: -12.500895500183105
    9. 'S' → logprob: -12.500895500183105
    10. 'O' → logprob: -12.750895500183105

Token 1555: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16027885675430298
    2. 'and' → logprob: -1.9102787971496582
    3. '   ' → logprob: -10.285279273986816
    4. ' ' → logprob: -11.660279273986816
    5. '       ' → logprob: -12.660279273986816
    6. '==' → logprob: -13.285279273986816
    7. '    ' → logprob: -13.285279273986816
    8. '	and' → logprob: -13.910279273986816
    9. '           ' → logprob: -14.035279273986816
    10. '        ' → logprob: -14.160279273986816

Token 1556: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.029855551198124886
    2. 'v' → logprob: -3.529855489730835
    3. ' mora' → logprob: -10.279855728149414
    4. '{'' → logprob: -10.904855728149414
    5. '(m' → logprob: -11.029855728149414
    6. '{' → logprob: -11.529855728149414
    7. 'mor' → logprob: -11.904855728149414
    8. '   ' → logprob: -12.154855728149414
    9. ' ' → logprob: -12.779855728149414
    10. '(v' → logprob: -12.779855728149414

Token 1557: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09316565841436386
    2. '==' → logprob: -2.718165636062622
    3. ' ==' → logprob: -4.218165874481201
    4. '1' → logprob: -6.218165874481201
    5. 'and' → logprob: -6.218165874481201
    6. ' and' → logprob: -6.593165874481201
    7. '_' → logprob: -6.718165874481201
    8. 'in' → logprob: -7.343165874481201
    9. '   ' → logprob: -7.843165874481201
    10. ' in' → logprob: -7.968165874481201

Token 1558: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11633002012968063
    2. 'in' → logprob: -2.2413299083709717
    3. ' ==' → logprob: -6.241330146789551
    4. '==' → logprob: -6.491330146789551
    5. 'and' → logprob: -10.99133014678955
    6. ' and' → logprob: -11.61633014678955
    7. ' ' → logprob: -11.86633014678955
    8. ')' → logprob: -13.99133014678955
    9. '   ' → logprob: -14.24133014678955
    10. 'if' → logprob: -14.36633014678955

Token 1559: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0005405236734077334
    2. '{'' → logprob: -8.250540733337402
    3. ' V' → logprob: -8.625540733337402
    4. 'm' → logprob: -9.625540733337402
    5. '{' → logprob: -10.375540733337402
    6. ' {'' → logprob: -13.625540733337402
    7. 'v' → logprob: -14.875540733337402
    8. 'M' → logprob: -15.500540733337402
    9. '   ' → logprob: -15.875540733337402
    10. '	V' → logprob: -16.125539779663086

Token 1560: 'OW' (ID: 5593)
  Prédit: 'OW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OW' → logprob: -0.003477120539173484
    2. 'owels' → logprob: -6.503477096557617
    3. 'O' → logprob: -6.753477096557617
    4. 'OV' → logprob: -7.878477096557617
    5. 'W' → logprob: -8.628477096557617
    6. 'V' → logprob: -9.253477096557617
    7. '{' → logprob: -10.628477096557617
    8. 'AW' → logprob: -11.378477096557617
    9. 'OLE' → logprob: -11.628477096557617
    10. '```' → logprob: -11.628477096557617

Token 1561: 'ELS' (ID: 88642)
  Prédit: 'ELS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ELS' → logprob: -0.0731365978717804
    2. 'OW' → logprob: -2.698136568069458
    3. 'O' → logprob: -5.948136806488037
    4. 'OV' → logprob: -8.698136329650879
    5. 'owels' → logprob: -9.073136329650879
    6. '{' → logprob: -9.823136329650879
    7. 'W' → logprob: -9.948136329650879
    8. 'E' → logprob: -10.698136329650879
    9. 'OLS' → logprob: -10.823136329650879
    10. '{'' → logprob: -10.948136329650879

Token 1562: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029859595000743866
    2. 'and' → logprob: -3.5298595428466797
    3. '   ' → logprob: -9.65485954284668
    4. '       ' → logprob: -10.40485954284668
    5. '	and' → logprob: -11.90485954284668
    6. '    ' → logprob: -12.77985954284668
    7. '==' → logprob: -13.15485954284668
    8. '      ' → logprob: -14.02985954284668
    9. '           ' → logprob: -14.40485954284668
    10. ' ' → logprob: -14.77985954284668

Token 1563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5919712781906128
    2. ' and' → logprob: -0.9669712781906128
    3. 'and' → logprob: -2.7169713973999023
    4. '   ' → logprob: -7.966971397399902
    5. '      ' → logprob: -10.091971397399902
    6. 'return' → logprob: -11.466971397399902
    7. '	and' → logprob: -11.466971397399902
    8. '    ' → logprob: -11.966971397399902
    9. '     ' → logprob: -12.091971397399902
    10. '&' → logprob: -12.341971397399902

Token 1564: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02078302390873432
    2. 'return' → logprob: -4.770782947540283
    3. ' return' → logprob: -5.020782947540283
    4. '   ' → logprob: -5.895782947540283
    5. ' and' → logprob: -6.020782947540283
    6. '           ' → logprob: -8.770783424377441
    7. 'and' → logprob: -9.520783424377441
    8. ' if' → logprob: -10.770783424377441
    9. '	return' → logprob: -11.145783424377441
    10. '    ' → logprob: -11.520783424377441

Token 1565: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00022725824965164065
    2. ' v' → logprob: -9.000226974487305
    3. 'm' → logprob: -9.250226974487305
    4. '   ' → logprob: -12.250226974487305
    5. '(v' → logprob: -14.000226974487305
    6. '	v' → logprob: -14.125226974487305
    7. ' ' → logprob: -14.250226974487305
    8. '(' → logprob: -15.500226974487305
    9. ' (' → logprob: -16.125226974487305
    10. '  ' → logprob: -16.125226974487305

Token 1566: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2014375925064087
    2. '1' → logprob: -1.7014375925064087
    3. 'v' → logprob: -11.826437950134277
    4. 'm' → logprob: -12.451437950134277
    5. '(v' → logprob: -12.951437950134277
    6. '==' → logprob: -13.076437950134277
    7. '   ' → logprob: -13.701437950134277
    8. 'alue' → logprob: -13.701437950134277
    9. ' ==' → logprob: -13.951437950134277
    10. 'al' → logprob: -13.951437950134277

Token 1567: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03804665803909302
    2. ' ==' → logprob: -3.2880465984344482
    3. '==
' → logprob: -13.163046836853027
    4. '=' → logprob: -13.913046836853027
    5. 'and' → logprob: -14.038046836853027
    6. '===' → logprob: -14.663046836853027
    7. ' and' → logprob: -15.038046836853027
    8. ')==' → logprob: -15.538046836853027
    9. '()==' → logprob: -15.538046836853027
    10. 'in' → logprob: -15.788046836853027

Token 1568: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.9146995327901095e-05
    2. ' v' → logprob: -11.625019073486328
    3. 'm' → logprob: -11.875019073486328
    4. ''' → logprob: -13.250019073486328
    5. '   ' → logprob: -14.500019073486328
    6. ' ' → logprob: -14.750019073486328
    7. 'a' → logprob: -16.375019073486328
    8. '	v' → logprob: -16.875019073486328
    9. '`' → logprob: -17.312519073486328
    10. '  ' → logprob: -17.312519073486328

Token 1569: '2' (ID: 17)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0788484737277031
    2. '2' → logprob: -2.703848361968994
    3. 'm' → logprob: -4.828848361968994
    4. 'a' → logprob: -7.703848361968994
    5. 'o' → logprob: -8.453848838806152
    6. '   ' → logprob: -10.328848838806152
    7. '1' → logprob: -10.578848838806152
    8. ' v' → logprob: -10.828848838806152
    9. ' mora' → logprob: -10.828848838806152
    10. '```' → logprob: -10.953848838806152

Token 1570: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10088486224412918
    2. '           ' → logprob: -2.6008849143981934
    3. 'and' → logprob: -3.8508849143981934
    4. '       ' → logprob: -8.100884437561035
    5. '          ' → logprob: -9.600884437561035
    6. ':
' → logprob: -9.975884437561035
    7. ':' → logprob: -10.600884437561035
    8. '   ' → logprob: -12.100884437561035
    9. '            ' → logprob: -12.100884437561035
    10. '==' → logprob: -12.100884437561035

Token 1571: ' v' (ID: 323)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.47441160678863525
    2. 'v' → logprob: -0.9744116067886353
    3. ' mora' → logprob: -8.849411964416504
    4. '(m' → logprob: -9.724411964416504
    5. '(' → logprob: -10.224411964416504
    6. '(v' → logprob: -10.599411964416504
    7. 'vora' → logprob: -10.974411964416504
    8. 'mor' → logprob: -11.349411964416504
    9. '{' → logprob: -12.599411964416504
    10. '   ' → logprob: -12.724411964416504

Token 1572: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4056532382965088
    2. 'm' → logprob: -1.7806532382965088
    3. 'ora' → logprob: -2.530653238296509
    4. '['' → logprob: -3.155653238296509
    5. 'v' → logprob: -4.78065299987793
    6. '{
' → logprob: -5.03065299987793
    7. ''' → logprob: -5.53065299987793
    8. '2' → logprob: -5.65565299987793
    9. 'True' → logprob: -5.78065299987793
    10. ''m' → logprob: -6.40565299987793

Token 1573: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.594636082649231
    2. 'in' → logprob: -0.844636082649231
    3. '==' → logprob: -4.469635963439941
    4. ' ==' → logprob: -6.219635963439941
    5. ' and' → logprob: -6.344635963439941
    6. '=='' → logprob: -7.094635963439941
    7. 'and' → logprob: -8.094635963439941
    8. '   ' → logprob: -8.344635963439941
    9. ''in' → logprob: -8.344635963439941
    10. ''' → logprob: -8.594635963439941

Token 1574: ' {'' (ID: 11881)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -2.339278580620885e-06
    2. ' {'' → logprob: -13.125001907348633
    3. '{' → logprob: -15.875001907348633
    4. '{"' → logprob: -16.250001907348633
    5. ''a' → logprob: -17.625001907348633
    6. '({'' → logprob: -17.875001907348633
    7. '{
' → logprob: -18.750001907348633
    8. 'a' → logprob: -19.375001907348633
    9. '   ' → logprob: -20.375001907348633
    10. '['' → logprob: -20.750001907348633

Token 1575: 'a' (ID: 64)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.014181028120219707
    2. 'a' → logprob: -4.264181137084961
    3. '{'' → logprob: -11.014181137084961
    4. '’a' → logprob: -15.014181137084961
    5. ''' → logprob: -15.264181137084961
    6. ''i' → logprob: -15.889181137084961
    7. ' a' → logprob: -15.889181137084961
    8. ''u' → logprob: -16.26418113708496
    9. '"a' → logprob: -16.63918113708496
    10. '`' → logprob: -16.76418113708496

Token 1576: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0711294412612915
    2. '',' → logprob: -2.821129322052002
    3. ''a' → logprob: -5.446129322052002
    4. ''i' → logprob: -5.571129322052002
    5. 'a' → logprob: -7.446129322052002
    6. ''' → logprob: -8.19612979888916
    7. ','' → logprob: -9.82112979888916
    8. 'i' → logprob: -10.32112979888916
    9. ',' → logprob: -10.94612979888916
    10. ',i' → logprob: -11.57112979888916

Token 1577: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1398757123970427e-05
    2. 'a' → logprob: -12.000011444091797
    3. ''i' → logprob: -12.375011444091797
    4. ''' → logprob: -14.625011444091797
    5. 'u' → logprob: -15.375011444091797
    6. ' i' → logprob: -16.250011444091797
    7. '
' → logprob: -16.750011444091797
    8. '{'' → logprob: -16.750011444091797
    9. 'iou' → logprob: -17.375011444091797
    10. '{i' → logprob: -17.625011444091797

Token 1578: '','' (ID: 4074)
  Prédit: ''u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''u' → logprob: -0.1675780713558197
    2. '','' → logprob: -2.2925779819488525
    3. 'u' → logprob: -3.6675779819488525
    4. '',' → logprob: -3.9175779819488525
    5. ''' → logprob: -5.667578220367432
    6. '{'' → logprob: -6.167578220367432
    7. ',u' → logprob: -6.667578220367432
    8. ','' → logprob: -7.417578220367432
    9. ''a' → logprob: -9.042577743530273
    10. '{' → logprob: -9.667577743530273

Token 1579: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0037081576883792877
    2. ''u' → logprob: -5.628708362579346
    3. '{'' → logprob: -9.378707885742188
    4. ''' → logprob: -10.878707885742188
    5. 'a' → logprob: -12.878707885742188
    6. '{' → logprob: -14.628707885742188
    7. ''a' → logprob: -15.253707885742188
    8. '['' → logprob: -15.378707885742188
    9. ''s' → logprob: -15.378707885742188
    10. '```' → logprob: -15.628707885742188

Token 1580: ''}' (ID: 17352)
  Prédit: ''}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.01654946058988571
    2. '}' → logprob: -4.141549587249756
    3. '',' → logprob: -8.391549110412598
    4. '','' → logprob: -9.266549110412598
    5. ''}
' → logprob: -10.141549110412598
    6. '       ' → logprob: -10.266549110412598
    7. '}:' → logprob: -10.766549110412598
    8. '   ' → logprob: -10.766549110412598
    9. ''' → logprob: -11.141549110412598
    10. '"}' → logprob: -11.141549110412598

Token 1581: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13546155393123627
    2. ':
' → logprob: -2.6354615688323975
    3. ' and' → logprob: -3.2604615688323975
    4. ':' → logprob: -4.135461330413818
    5. '       ' → logprob: -8.385461807250977
    6. 'and' → logprob: -8.635461807250977
    7. ':return' → logprob: -8.885461807250977
    8. '          ' → logprob: -10.260461807250977
    9. '   ' → logprob: -11.510461807250977
    10. ',' → logprob: -11.760461807250977

Token 1582: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.147740689106286e-05
    2. ' and' → logprob: -10.00007152557373
    3. ':
' → logprob: -11.62507152557373
    4. ':' → logprob: -12.00007152557373
    5. '       ' → logprob: -12.50007152557373
    6. '          ' → logprob: -13.50007152557373
    7. ',' → logprob: -13.50007152557373
    8. '	       ' → logprob: -14.12507152557373
    9. '		' → logprob: -14.25007152557373
    10. '               ' → logprob: -14.62507152557373

Token 1583: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022499775514006615
    2. 'return' (adapté à ' return') → logprob: -4.3974995613098145
    3. ' return' → logprob: -5.1474995613098145
    4. '       ' → logprob: -5.6474995613098145
    5. '               ' → logprob: -7.8974995613098145
    6. '   ' → logprob: -9.522500038146973
    7. '	       ' → logprob: -9.897500038146973
    8. ' and' → logprob: -10.522500038146973
    9. '
' → logprob: -11.022500038146973
    10. '	return' → logprob: -11.147500038146973

Token 1584: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -7.493430894101039e-05
    2. ' True' → logprob: -9.500075340270996
    3. 'False' → logprob: -19.50007438659668
    4. '   ' → logprob: -20.00007438659668
    5. '(True' → logprob: -20.00007438659668
    6. 'true' → logprob: -21.37507438659668
    7. '1' → logprob: -23.12507438659668
    8. 'Tr' → logprob: -23.87507438659668
    9. '=True' → logprob: -24.25007438659668
    10. 'v' → logprob: -24.62507438659668

Token 1585: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.925185440806672e-05
    2. '<|end|>' → logprob: -9.875099182128906
    3. '       ' → logprob: -11.000099182128906
    4. '	return' → logprob: -11.000099182128906
    5. '.' → logprob: -12.750099182128906
    6. 'return' → logprob: -13.375099182128906
    7. '
' → logprob: -13.375099182128906
    8. '    
' → logprob: -13.625099182128906
    9. ')' → logprob: -13.750099182128906
    10. '<|end|>' → logprob: -13.875099182128906

Token 1586: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.8497312895488e-05
    2. '	return' → logprob: -9.875068664550781
    3. 'return' → logprob: -12.250068664550781
    4. '       ' → logprob: -12.375068664550781
    5. '.' → logprob: -12.625068664550781
    6. '<|end|>' → logprob: -13.875068664550781
    7. '    
' → logprob: -14.250068664550781
    8. '
' → logprob: -14.500068664550781
    9. ' return' → logprob: -14.625068664550781
    10. ':return' → logprob: -14.875068664550781

Token 1587: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00018542143516242504
    2. 'return' (adapté à ' return') → logprob: -9.625185012817383
    3. 'False' → logprob: -10.250185012817383
    4. 'else' → logprob: -10.375185012817383
    5. '.' → logprob: -11.375185012817383
    6. '    
' → logprob: -11.750185012817383
    7. '       ' → logprob: -11.750185012817383
    8. ')' → logprob: -12.125185012817383
    9. ' return' → logprob: -12.250185012817383
    10. '	return' → logprob: -12.375185012817383

Token 1588: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00027611342375166714
    2. ' False' → logprob: -8.250276565551758
    3. 'v' → logprob: -11.625276565551758
    4. 'm' → logprob: -12.375276565551758
    5. '(False' → logprob: -13.375276565551758
    6. 'F' → logprob: -17.125276565551758
    7. 'True' → logprob: -17.250276565551758
    8. 'false' → logprob: -18.000276565551758
    9. 'Fa' → logprob: -19.000276565551758
    10. '_false' → logprob: -19.125276565551758

Token 1589: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7068552374839783
    2. ')' → logprob: -1.831855297088623
    3. ':' → logprob: -1.956855297088623
    4. '<|end|>' → logprob: -1.956855297088623
    5. '#' → logprob: -3.331855297088623
    6. '
' → logprob: -4.456855297088623
    7. ',' → logprob: -5.831855297088623
    8. '_' → logprob: -5.831855297088623
    9. '[' → logprob: -5.956855297088623
    10. '\' → logprob: -6.831855297088623

Token 1590: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1591: ' is' (ID: 382)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.1868362426757812
    2. 'is' → logprob: -1.6868362426757812
    3. 'convert' → logprob: -1.9368362426757812
    4. 'to' → logprob: -2.9368362426757812
    5. 'has' → logprob: -3.1868362426757812
    6. 'count' → logprob: -3.1868362426757812
    7. 'remove' → logprob: -3.6868362426757812
    8. 'replace' → logprob: -3.6868362426757812
    9. 'rom' → logprob: -3.9368362426757812
    10. 'get' → logprob: -4.061836242675781

Token 1592: '_s' (ID: 1278)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.4400680661201477
    2. '_vo' → logprob: -1.190068006515503
    3. '_con' → logprob: -3.940068006515503
    4. '_' → logprob: -4.065068244934082
    5. '_ch' → logprob: -5.315068244934082
    6. '_space' → logprob: -5.565068244934082
    7. '_voice' → logprob: -6.565068244934082
    8. '_s' → logprob: -7.065068244934082
    9. '_m' → logprob: -7.315068244934082
    10. '_wh' → logprob: -8.065068244934082

Token 1593: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.002214250387623906
    2. '_' → logprob: -7.502214431762695
    3. '``' → logprob: -8.002214431762695
    4. 'o' → logprob: -8.627214431762695
    5. 'ok' → logprob: -8.752214431762695
    6. 's' → logprob: -8.877214431762695
    7. '_s' → logprob: -8.877214431762695
    8. '```' → logprob: -9.002214431762695
    9. '_o' → logprob: -9.752214431762695
    10. 'okus' → logprob: -9.877214431762695

Token 1594: 'on' (ID: 263)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.02977120317518711
    2. 'on' → logprob: -3.529771089553833
    3. '_o' → logprob: -11.654770851135254
    4. '_' → logprob: -12.279770851135254
    5. '_on' → logprob: -13.029770851135254
    6. 'о' → logprob: -13.154770851135254
    7. 'n' → logprob: -13.279770851135254
    8. 'on's' → logprob: -15.904770851135254
    9. '{o' → logprob: -15.904770851135254
    10. '```' → logprob: -16.27977180480957

Token 1595: '_m' (ID: 1285)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.08763948827981949
    2. '(' → logprob: -2.837639570236206
    3. '_' → logprob: -4.087639331817627
    4. '(s' → logprob: -5.462639331817627
    5. '_(' → logprob: -5.962639331817627
    6. '_m' → logprob: -7.587639331817627
    7. '(_' → logprob: -7.712639331817627
    8. ' (' → logprob: -8.087639808654785
    9. '(_)' → logprob: -9.462639808654785
    10. '_s' → logprob: -9.962639808654785

Token 1596: 'ora' (ID: 2505)
  Prédit: 'ora'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -0.04950958490371704
    2. 'o' → logprob: -3.0495095252990723
    3. '(o' → logprob: -8.54951000213623
    4. 'or' → logprob: -8.67451000213623
    5. 'oras' → logprob: -9.42451000213623
    6. '{
' → logprob: -9.67451000213623
    7. 'a' → logprob: -10.04951000213623
    8. 'ore' → logprob: -10.42451000213623
    9. '(' → logprob: -10.42451000213623
    10. '_o' → logprob: -10.67451000213623

Token 1597: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.027685418725013733
    2. '(' → logprob: -3.6526854038238525
    3. '(s' → logprob: -7.152685642242432
    4. '(_' → logprob: -8.902685165405273
    5. '_' → logprob: -9.027685165405273
    6. ':' → logprob: -9.277685165405273
    7. '_m' → logprob: -10.152685165405273
    8. '():' → logprob: -10.152685165405273
    9. 'm' → logprob: -10.777685165405273
    10. ' (' → logprob: -10.902685165405273

Token 1598: 'ora' (ID: 2505)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.004208393860608339
    2. 'ora' → logprob: -5.629208564758301
    3. ''o' → logprob: -7.754208564758301
    4. '(o' → logprob: -10.1292085647583
    5. 'a' → logprob: -10.2542085647583
    6. '_o' → logprob: -11.1292085647583
    7. 'or' → logprob: -11.1292085647583
    8. ')o' → logprob: -11.5042085647583
    9. ' o' → logprob: -12.1292085647583
    10. '	o' → logprob: -12.1292085647583

Token 1599: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2562967836856842
    2. ')' → logprob: -2.2562968730926514
    3. '_' → logprob: -3.0062968730926514
    4. '(' → logprob: -3.7562968730926514
    5. '(m' → logprob: -4.131296634674072
    6. '):
' → logprob: -4.631296634674072
    7. ')_' → logprob: -4.631296634674072
    8. 's' → logprob: -5.506296634674072
    9. '(_' → logprob: -6.631296634674072
    10. ':' → logprob: -6.756296634674072

Token 1600: '   ' (ID: 271)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.043980617076158524
    2. '   ' → logprob: -3.293980598449707
    3. 'return' → logprob: -5.418980598449707
    4. ' False' → logprob: -6.543980598449707
    5. 'def' → logprob: -10.668980598449707
    6. ' return' → logprob: -11.043980598449707
    7. 'm' → logprob: -12.168980598449707
    8. '(False' → logprob: -12.793980598449707
    9. 'false' → logprob: -14.168980598449707
    10. '#' → logprob: -14.168980598449707

Token 1601: ' #' (ID: 1069)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00796455517411232
    2. 'return' → logprob: -5.382964611053467
    3. ' False' → logprob: -6.132964611053467
    4. '   ' → logprob: -6.882964611053467
    5. 'm' → logprob: -9.757964134216309
    6. 'len' → logprob: -9.882964134216309
    7. 'True' → logprob: -11.507964134216309
    8. '(False' → logprob: -11.507964134216309
    9. ' return' → logprob: -11.632964134216309
    10. '    ' → logprob: -13.632964134216309

Token 1602: ' no' (ID: 860)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5536922216415405
    2. 'False' → logprob: -1.6786922216415405
    3. 'len' → logprob: -1.6786922216415405
    4. 'return' → logprob: -3.92869234085083
    5. 'def' → logprob: -3.92869234085083
    6. 'if' → logprob: -4.80369234085083
    7. '   ' → logprob: -6.05369234085083
    8. ' False' → logprob: -7.05369234085083
    9. '#' → logprob: -7.55369234085083
    10. 'True' → logprob: -8.303691864013672

Token 1603: ' direct' (ID: 2823)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.593902587890625
    2. '<|end|>' → logprob: -1.343902587890625
    3. 'def' → logprob: -3.218902587890625
    4. 'return' → logprob: -3.343902587890625
    5. ' False' → logprob: -3.718902587890625
    6. 'True' → logprob: -3.843902587890625
    7. 'm' → logprob: -3.968902587890625
    8. ' ' → logprob: -4.718902587890625
    9. '_' → logprob: -4.718902587890625
    10. '(False' → logprob: -4.968902587890625

Token 1604: ' s' (ID: 265)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.276723712682724
    2. 'def' → logprob: -2.151723623275757
    3. 'False' → logprob: -3.151723623275757
    4. 'm' → logprob: -3.151723623275757
    5. 's' → logprob: -4.776723861694336
    6. '(False' → logprob: -5.026723861694336
    7. '<|end|>' → logprob: -5.151723861694336
    8. ' return' → logprob: -5.651723861694336
    9. 'True' → logprob: -6.151723861694336
    10. 'is' → logprob: -6.276723861694336

Token 1605: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.1326310932636261
    2. 'o' → logprob: -3.0076310634613037
    3. 'def' → logprob: -4.007631301879883
    4. 'u' → logprob: -4.007631301879883
    5. 'e' → logprob: -4.757631301879883
    6. '_' → logprob: -4.882631301879883
    7. ''' → logprob: -6.007631301879883
    8. '#' → logprob: -6.132631301879883
    9. 'return' → logprob: -6.132631301879883
    10. '   ' → logprob: -6.507631301879883

Token 1606: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.6333754658699036
    2. 'o' → logprob: -0.7583754658699036
    3. '_' → logprob: -7.758375644683838
    4. '_o' → logprob: -8.13337516784668
    5. '_on' → logprob: -10.63337516784668
    6. 'n' → logprob: -12.00837516784668
    7. '`' → logprob: -12.50837516784668
    8. '_n' → logprob: -13.00837516784668
    9. 'on's' → logprob: -13.13337516784668
    10. 'о' → logprob: -13.75837516784668

Token 1607: ' mor' (ID: 4658)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.6803263425827026
    2. '<|end|>' → logprob: -1.9303263425827026
    3. 'None' → logprob: -2.555326461791992
    4. 'def' → logprob: -2.805326461791992
    5. '(False' → logprob: -3.055326461791992
    6. '_' → logprob: -3.305326461791992
    7. ' False' → logprob: -3.555326461791992
    8. ':' → logprob: -4.180326461791992
    9. '   ' → logprob: -4.305326461791992
    10. ' None' → logprob: -4.555326461791992

Token 1608: 'as' (ID: 288)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.4840546250343323
    2. 'a' → logprob: -0.9840546250343323
    3. 'r' → logprob: -4.7340545654296875
    4. 'n' → logprob: -7.3590545654296875
    5. ''a' → logprob: -8.609054565429688
    6. ''' → logprob: -8.859054565429688
    7. '   ' → logprob: -10.234054565429688
    8. ''''' → logprob: -11.609054565429688
    9. 'def' → logprob: -11.734054565429688
    10. 'ras' → logprob: -11.734054565429688

Token 1609: ',' (ID: 11)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.010884284973144531
    2. 'None' → logprob: -5.7608842849731445
    3. 'return' → logprob: -6.1358842849731445
    4. ' False' → logprob: -6.1358842849731445
    5. 'def' → logprob: -6.8858842849731445
    6. '(False' → logprob: -6.8858842849731445
    7. '   ' → logprob: -8.260884284973145
    8. ':' → logprob: -8.510884284973145
    9. ':return' → logprob: -8.635884284973145
    10. 'True' → logprob: -8.635884284973145

Token 1610: ' represented' (ID: 27328)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.059168536216020584
    2. '   ' → logprob: -3.559168577194214
    3. ' False' → logprob: -3.559168577194214
    4. 'return' → logprob: -7.684168338775635
    5. ' return' → logprob: -9.684168815612793
    6. '    
' → logprob: -13.684168815612793
    7. '    ' → logprob: -14.059168815612793
    8. '
' → logprob: -14.059168815612793
    9. '(False' → logprob: -14.309168815612793
    10. 'True' → logprob: -14.684168815612793

Token 1611: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.04960782080888748
    2. ' by' → logprob: -3.799607753753662
    3. 'as' → logprob: -4.299607753753662
    4. 'False' → logprob: -5.049607753753662
    5. '   ' → logprob: -6.174607753753662
    6. '#' → logprob: -6.924607753753662
    7. ' as' → logprob: -7.674607753753662
    8. 'pass' → logprob: -7.799607753753662
    9. ' False' → logprob: -8.54960823059082
    10. 'None' → logprob: -8.54960823059082

Token 1612: ' double' (ID: 3503)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.027254659682512283
    2. 'm' → logprob: -3.777254581451416
    3. 'len' → logprob: -5.902254581451416
    4. ' False' → logprob: -7.027254581451416
    5. '''' → logprob: -8.402255058288574
    6. 'True' → logprob: -10.152255058288574
    7. 'None' → logprob: -10.527255058288574
    8. '(False' → logprob: -10.777255058288574
    9. '#' → logprob: -11.152255058288574
    10. 'double' → logprob: -11.277255058288574

Token 1613: ' conson' (ID: 127767)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.07590559870004654
    2. 'm' → logprob: -2.9509055614471436
    3. ' conson' → logprob: -4.075905799865723
    4. '_con' → logprob: -6.700905799865723
    5. '
' → logprob: -7.700905799865723
    6. 'if' → logprob: -8.075905799865723
    7. ' ' → logprob: -8.450905799865723
    8. 'c' → logprob: -8.700905799865723
    9. 's' → logprob: -8.700905799865723
    10. 'mor' → logprob: -9.075905799865723

Token 1614: 'ant' (ID: 493)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.4628993570804596
    2. 'ant' → logprob: -1.3378993272781372
    3. 'n' → logprob: -2.7128994464874268
    4. 'm' → logprob: -4.837899208068848
    5. 'def' → logprob: -5.212899208068848
    6. 'nts' → logprob: -5.337899208068848
    7. 'ants' → logprob: -5.587899208068848
    8. '#' → logprob: -5.712899208068848
    9. 'ent' → logprob: -5.962899208068848
    10. 's' → logprob: -5.962899208068848

Token 1615: ' in' (ID: 306)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.16425879299640656
    2. '   ' → logprob: -2.0392587184906006
    3. ' False' → logprob: -5.16425895690918
    4. '
' → logprob: -5.53925895690918
    5. 'return' → logprob: -5.53925895690918
    6. 'None' → logprob: -5.66425895690918
    7. '(False' → logprob: -6.91425895690918
    8. '#' → logprob: -7.16425895690918
    9. 'def' → logprob: -7.16425895690918
    10. ' return' → logprob: -8.03925895690918

Token 1616: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.19696037471294403
    2. 'the' → logprob: -2.07196044921875
    3. 'm' → logprob: -3.69696044921875
    4. 'def' → logprob: -4.44696044921875
    5. '#' → logprob: -4.69696044921875
    6. ' next' → logprob: -5.57196044921875
    7. 'previous' → logprob: -6.44696044921875
    8. ' the' → logprob: -7.07196044921875
    9. 'following' → logprob: -7.44696044921875
    10. 'get' → logprob: -9.82196044921875

Token 1617: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3040258288383484
    2. 's' → logprob: -2.679025888442993
    3. 'char' → logprob: -2.804025888442993
    4. 'def' → logprob: -3.304025888442993
    5. ')' → logprob: -3.554025888442993
    6. '   ' → logprob: -4.554025650024414
    7. '#' → logprob: -4.554025650024414
    8. '_' → logprob: -4.804025650024414
    9. 'v' → logprob: -5.054025650024414
    10. 'if' → logprob: -5.429025650024414

Token 1618: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02108643762767315
    2. 'None' → logprob: -5.1460862159729
    3. 'False' → logprob: -5.2710862159729
    4. 'def' → logprob: -5.5210862159729
    5. ':' → logprob: -5.7710862159729
    6. '
' → logprob: -7.6460862159729
    7. 'return' → logprob: -7.8960862159729
    8. ' return' → logprob: -8.521086692810059
    9. ' None' → logprob: -8.521086692810059
    10. ' ' → logprob: -8.646086692810059

Token 1619: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09799453616142273
    2. 'False' → logprob: -2.472994565963745
    3. ':' → logprob: -5.472994327545166
    4. ' False' → logprob: -6.347994327545166
    5. 'return' → logprob: -6.972994327545166
    6. 'def' → logprob: -7.597994327545166
    7. ' return' → logprob: -7.847994327545166
    8. ':
' → logprob: -8.222994804382324
    9. ':return' → logprob: -8.222994804382324
    10. '(False' → logprob: -8.347994804382324

Token 1620: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.8387680053710938
    2. 'False' → logprob: -0.8387680053710938
    3. '   ' → logprob: -2.0887680053710938
    4. ' return' → logprob: -4.588768005371094
    5. ' False' → logprob: -6.588768005371094
    6. '
' → logprob: -9.463768005371094
    7. '	return' → logprob: -10.713768005371094
    8. '    
' → logprob: -11.713768005371094
    9. ':return' → logprob: -12.088768005371094
    10. 'Return' → logprob: -12.213768005371094

Token 1621: ' check' (ID: 2371)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.015053626149892807
    2. 'return' → logprob: -4.265053749084473
    3. '   ' → logprob: -7.515053749084473
    4. ' False' → logprob: -8.140053749084473
    5. '
' → logprob: -10.890053749084473
    6. ' return' → logprob: -11.265053749084473
    7. 'def' → logprob: -12.265053749084473
    8. 'None' → logprob: -12.390053749084473
    9. 'True' → logprob: -12.515053749084473
    10. 'false' → logprob: -12.890053749084473

Token 1622: ' if' (ID: 538)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.14250387251377106
    2. 'len' → logprob: -2.1425039768218994
    3. 'm' → logprob: -4.51750373840332
    4. ' False' → logprob: -5.51750373840332
    5. '   ' → logprob: -8.64250373840332
    6. '(False' → logprob: -8.76750373840332
    7. '(len' → logprob: -9.39250373840332
    8. 'false' → logprob: -10.39250373840332
    9. ' len' → logprob: -10.64250373840332
    10. '0' → logprob: -11.89250373840332

Token 1623: ' mora' (ID: 47294)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5667445659637451
    2. 'm' → logprob: -1.0667445659637451
    3. 'False' → logprob: -2.441744565963745
    4. ' False' → logprob: -6.941744804382324
    5. ' len' → logprob: -7.941744804382324
    6. '(len' → logprob: -9.691744804382324
    7. 'True' → logprob: -10.941744804382324
    8. 'is' → logprob: -11.191744804382324
    9. 'false' → logprob: -11.566744804382324
    10. 'def' → logprob: -11.566744804382324

Token 1624: ' length' (ID: 5517)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8679503202438354
    2. '==' → logprob: -1.6179503202438354
    3. 'and' → logprob: -1.9929503202438354
    4. ' and' → logprob: -2.367950439453125
    5. 'len' → logprob: -2.992950439453125
    6. 'm' → logprob: -3.117950439453125
    7. 'def' → logprob: -3.742950439453125
    8. ' in' → logprob: -4.117950439453125
    9. ' ==' → logprob: -4.992950439453125
    10. 's' → logprob: -6.367950439453125

Token 1625: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05181657895445824
    2. ' ==' → logprob: -3.551816463470459
    3. 'm' → logprob: -4.301816463470459
    4. '(m' → logprob: -5.676816463470459
    5. '>' → logprob: -5.801816463470459
    6. '   ' → logprob: -8.176816940307617
    7. '<m' → logprob: -8.426816940307617
    8. '<=' → logprob: -8.676816940307617
    9. 'len' → logprob: -8.801816940307617
    10. '1' → logprob: -8.801816940307617

Token 1626: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.287207692861557
    2. '1' → logprob: -1.9122077226638794
    3. '0' → logprob: -2.28720760345459
    4. '3' → logprob: -8.91220760345459
    5. 'len' → logprob: -9.03720760345459
    6. ' ' → logprob: -10.03720760345459
    7. 'def' → logprob: -11.03720760345459
    8. '   ' → logprob: -11.84970760345459
    9. '(' → logprob: -12.78720760345459
    10. '>' → logprob: -12.91220760345459

Token 1627: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.7468770742416382
    2. '   ' → logprob: -1.4968770742416382
    3. ' and' → logprob: -1.4968770742416382
    4. '==' → logprob: -3.4968771934509277
    5. 'if' → logprob: -4.496877193450928
    6. 'def' → logprob: -4.746877193450928
    7. 'm' → logprob: -4.871877193450928
    8. '(m' → logprob: -5.246877193450928
    9. '=' → logprob: -5.996877193450928
    10. 's' → logprob: -6.496877193450928

Token 1628: ' conson' (ID: 127767)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.007254600524902344
    2. 'len' → logprob: -5.257254600524902
    3. '(m' → logprob: -6.757254600524902
    4. ' mora' → logprob: -7.757254600524902
    5. '(len' → logprob: -8.257254600524902
    6. '(' → logprob: -9.132254600524902
    7. 'not' → logprob: -10.632254600524902
    8. ' len' → logprob: -11.882254600524902
    9. ' (' → logprob: -12.007254600524902
    10. '(
' → logprob: -12.632254600524902

Token 1629: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0041020275093615055
    2. 'ants' → logprob: -5.6291022300720215
    3. 't' → logprob: -8.379101753234863
    4. 'a' → logprob: -9.129101753234863
    5. 'm' → logprob: -9.504101753234863
    6. '   ' → logprob: -11.004101753234863
    7. 'antd' → logprob: -11.504101753234863
    8. '
' → logprob: -11.754101753234863
    9. 'at' → logprob: -11.754101753234863
    10. 'ANT' → logprob: -11.879101753234863

Token 1630: ' doubled' (ID: 69040)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9383904337882996
    2. 'and' → logprob: -1.8133904933929443
    3. ' and' → logprob: -1.9383904933929443
    4. 'in' → logprob: -2.9383904933929443
    5. '==' → logprob: -2.9383904933929443
    6. '   ' → logprob: -3.1883904933929443
    7. ' if' → logprob: -3.3133904933929443
    8. ' in' → logprob: -3.4383904933929443
    9. '=' → logprob: -3.9383904933929443
    10. 'def' → logprob: -4.313390254974365

Token 1631: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0954608917236328
    2. ' and' → logprob: -1.3454608917236328
    3. '   ' → logprob: -1.9704608917236328
    4. '==' → logprob: -2.220460891723633
    5. ' ==' → logprob: -3.220460891723633
    6. 'def' → logprob: -3.220460891723633
    7. 'and' → logprob: -3.720460891723633
    8. ':
' → logprob: -4.595460891723633
    9. '(m' → logprob: -4.720460891723633
    10. ' ' → logprob: -5.470460891723633

Token 1632: ' next' (ID: 2613)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.028400255367159843
    2. 'next' → logprob: -4.528400421142578
    3. 'len' → logprob: -4.653400421142578
    4. 'def' → logprob: -5.653400421142578
    5. 's' → logprob: -6.153400421142578
    6. 'the' → logprob: -8.153400421142578
    7. 'return' → logprob: -8.278400421142578
    8. '2' → logprob: -8.403400421142578
    9. 'i' → logprob: -9.028400421142578
    10. ' next' → logprob: -9.278400421142578

Token 1633: ' mora' (ID: 47294)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3084441423416138
    2. '   ' → logprob: -1.9334441423416138
    3. '<|end|>' → logprob: -1.9334441423416138
    4. 'def' → logprob: -2.183444023132324
    5. ' and' → logprob: -2.308444023132324
    6. '):' → logprob: -2.683444023132324
    7. 'and' → logprob: -3.433444023132324
    8. ')' → logprob: -4.058444023132324
    9. '(m' → logprob: -4.433444023132324
    10. 'm' → logprob: -4.433444023132324

Token 1634: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17318876087665558
    2. '   ' → logprob: -3.4231886863708496
    3. 'def' → logprob: -3.5481886863708496
    4. ' and' → logprob: -3.6731886863708496
    5. '(m' → logprob: -3.9231886863708496
    6. '(' → logprob: -4.29818868637085
    7. 'and' → logprob: -4.42318868637085
    8. ':
' → logprob: -4.67318868637085
    9. '[' → logprob: -5.17318868637085
    10. ':return' → logprob: -5.79818868637085

Token 1635: ' s' (ID: 265)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.4900915026664734
    2. 'm' → logprob: -1.3650915622711182
    3. 'True' → logprob: -2.490091562271118
    4. 'def' → logprob: -3.865091562271118
    5. 'len' → logprob: -4.490091323852539
    6. ' False' → logprob: -5.365091323852539
    7. 's' → logprob: -6.115091323852539
    8. 'return' → logprob: -6.490091323852539
    9. 'v' → logprob: -6.615091323852539
    10. 'con' → logprob: -6.865091323852539

Token 1636: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.3997516334056854
    2. 'def' → logprob: -1.7747516632080078
    3. 'len' → logprob: -2.899751663208008
    4. 'length' → logprob: -3.649751663208008
    5. '#' → logprob: -4.774751663208008
    6. 'o' → logprob: -4.899751663208008
    7. 'm' → logprob: -5.274751663208008
    8. 'ok' → logprob: -5.524751663208008
    9. 'i' → logprob: -5.649751663208008
    10. ')' → logprob: -5.649751663208008

Token 1637: 'on' (ID: 263)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4295237064361572
    2. 't' → logprob: -1.3045237064361572
    3. 'nt' → logprob: -3.3045237064361572
    4. '   ' → logprob: -4.679523468017578
    5. 'def' → logprob: -4.929523468017578
    6. 's' → logprob: -5.429523468017578
    7. 'len' → logprob: -5.679523468017578
    8. 'length' → logprob: -5.679523468017578
    9. ')' → logprob: -6.179523468017578
    10. ' ' → logprob: -6.429523468017578

Token 1638: ' character' (ID: 5855)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.176766499876976
    2. '   ' → logprob: -2.4267663955688477
    3. 'def' → logprob: -3.6767663955688477
    4. ':
' → logprob: -4.176766395568848
    5. ' and' → logprob: -4.301766395568848
    6. '):' → logprob: -5.801766395568848
    7. ' ' → logprob: -6.051766395568848
    8. 'and' → logprob: -6.051766395568848
    9. ':return' → logprob: -6.551766395568848
    10. ',' → logprob: -6.551766395568848

Token 1639: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10871521383523941
    2. '   ' → logprob: -2.733715295791626
    3. 'def' → logprob: -4.233715057373047
    4. ':
' → logprob: -5.233715057373047
    5. ':return' → logprob: -5.233715057373047
    6. '<|end|>' → logprob: -5.733715057373047
    7. ' and' → logprob: -6.108715057373047
    8. '):' → logprob: -6.483715057373047
    9. ' ' → logprob: -6.983715057373047
    10. 'and' → logprob: -7.233715057373047

Token 1640: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1815398633480072
    2. ':' → logprob: -1.9315398931503296
    3. ':
' → logprob: -5.431540012359619
    4. 'def' → logprob: -5.431540012359619
    5. 'False' → logprob: -5.556540012359619
    6. '<|end|>' → logprob: -6.306540012359619
    7. ':return' → logprob: -6.431540012359619
    8. ' ' → logprob: -6.556540012359619
    9. ' and' → logprob: -7.306540012359619
    10. '  ' → logprob: -7.431540012359619

Token 1641: ' return' (ID: 622)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49124380946159363
    2. '   ' → logprob: -1.116243839263916
    3. 'False' → logprob: -3.866243839263916
    4. ':return' → logprob: -4.116243839263916
    5. 'def' → logprob: -4.991243839263916
    6. ' ' → logprob: -5.741243839263916
    7. '  ' → logprob: -6.116243839263916
    8. ' False' → logprob: -6.366243839263916
    9. ':
' → logprob: -6.366243839263916
    10. 'return' (adapté à ' return') → logprob: -6.491243839263916

Token 1642: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00014656837447546422
    2. ' False' → logprob: -9.000146865844727
    3. 'm' → logprob: -11.375146865844727
    4. 'len' → logprob: -11.625146865844727
    5. 'True' → logprob: -13.500146865844727
    6. '(False' → logprob: -13.750146865844727
    7. 'None' → logprob: -15.375146865844727
    8. 'false' → logprob: -17.000146865844727
    9. '=False' → logprob: -18.000146865844727
    10. '   ' → logprob: -18.000146865844727

Token 1643: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1644: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1645: ' check' (ID: 2371)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -2.015359878540039
    2. 'replace' → logprob: -2.265359878540039
    3. 'split' → logprob: -2.265359878540039
    4. 'is' → logprob: -2.640359878540039
    5. 'remove' → logprob: -2.640359878540039
    6. 'double' → logprob: -3.015359878540039
    7. 'check' → logprob: -3.265359878540039
    8. 'get' → logprob: -3.265359878540039
    9. 'convert' → logprob: -3.390359878540039
    10. 'main' → logprob: -3.390359878540039

Token 1646: '_m' (ID: 1285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8773801922798157
    2. '_v' → logprob: -1.627380132675171
    3. '_s' → logprob: -2.002380132675171
    4. '_m' → logprob: -2.127380132675171
    5. '(' → logprob: -3.877380132675171
    6. '_word' → logprob: -4.25238037109375
    7. '_is' → logprob: -4.50238037109375
    8. '_con' → logprob: -5.25238037109375
    9. '_char' → logprob: -5.25238037109375
    10. '_pal' → logprob: -5.37738037109375

Token 1647: 'ora' (ID: 2505)
  Prédit: 'ora'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -0.37458595633506775
    2. 'oras' → logprob: -1.9995859861373901
    3. 'a' → logprob: -2.9995858669281006
    4. 'atch' → logprob: -3.2495858669281006
    5. 'o' → logprob: -3.9995858669281006
    6. 'e' → logprob: -4.24958610534668
    7. '_' → logprob: -4.49958610534668
    8. 'atches' → logprob: -4.62458610534668
    9. 'or' → logprob: -5.37458610534668
    10. 'atching' → logprob: -5.87458610534668

Token 1648: '_s' (ID: 1278)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1094137579202652
    2. '(' → logprob: -3.1094138622283936
    3. 's' → logprob: -3.4844138622283936
    4. '_count' → logprob: -5.4844136238098145
    5. '_type' → logprob: -5.4844136238098145
    6. '(s' → logprob: -6.2344136238098145
    7. '_length' → logprob: -6.4844136238098145
    8. ')' → logprob: -6.7344136238098145
    9. '=' → logprob: -6.8594136238098145
    10. 'def' → logprob: -6.9844136238098145

Token 1649: 'oku' (ID: 13454)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.18543852865695953
    2. 'oku' → logprob: -2.310438632965088
    3. 'ize' → logprob: -3.810438632965088
    4. 'o' → logprob: -4.810438632965088
    5. 'uffix' → logprob: -4.810438632965088
    6. 'e' → logprob: -5.560438632965088
    7. 'plit' → logprob: -5.810438632965088
    8. 'tu' → logprob: -6.185438632965088
    9. 'yll' → logprob: -6.435438632965088
    10. 'tring' → logprob: -6.685438632965088

Token 1650: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -8.41129949549213e-05
    2. '_on' → logprob: -9.875083923339844
    3. 'o' → logprob: -11.125083923339844
    4. 'n' → logprob: -11.500083923339844
    5. 'on's' → logprob: -13.250083923339844
    6. '_' → logprob: -13.500083923339844
    7. '
' → logprob: -14.500083923339844
    8. 'ons' → logprob: -14.625083923339844
    9. '```' → logprob: -14.750083923339844
    10. '_n' → logprob: -14.750083923339844

Token 1651: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.4546378552913666
    2. '_' → logprob: -1.954637885093689
    3. '(' → logprob: -2.3296377658843994
    4. 's' → logprob: -3.5796377658843994
    5. '_m' → logprob: -3.5796377658843994
    6. '(s' → logprob: -3.8296377658843994
    7. '(_' → logprob: -3.8296377658843994
    8. '_s' → logprob: -5.3296380043029785
    9. '():' → logprob: -5.8296380043029785
    10. '_(' → logprob: -5.8296380043029785

Token 1652: 'ora' (ID: 2505)
  Prédit: 'oku'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.043637536466121674
    2. 'o' → logprob: -3.29363751411438
    3. 'ize' → logprob: -6.418637752532959
    4. 'u' → logprob: -7.168637752532959
    5. 't' → logprob: -7.293637752532959
    6. '_' → logprob: -7.418637752532959
    7. '_o' → logprob: -8.5436372756958
    8. 'ok' → logprob: -8.6686372756958
    9. 'e' → logprob: -9.0436372756958
    10. 's' → logprob: -9.1686372756958

Token 1653: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7203477621078491
    2. ')' → logprob: -0.9703477621078491
    3. ')_' → logprob: -2.9703478813171387
    4. 's' → logprob: -3.4703478813171387
    5. ',' → logprob: -3.7203478813171387
    6. '_m' → logprob: -4.470347881317139
    7. '_' → logprob: -5.095347881317139
    8. '_s' → logprob: -5.720347881317139
    9. '[' → logprob: -6.220347881317139
    10. '):
' → logprob: -6.470347881317139

Token 1654: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011254525743424892
    2. ' if' → logprob: -8.62612533569336
    3. 'False' → logprob: -8.62612533569336
    4. '    
' → logprob: -8.75112533569336
    5. ' False' → logprob: -9.12612533569336
    6. ' return' → logprob: -9.87612533569336
    7. ':' → logprob: -10.00112533569336
    8. ' True' → logprob: -10.12612533569336
    9. '    ' → logprob: -10.25112533569336
    10. '\t' → logprob: -10.25112533569336

Token 1655: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.640085756778717
    2. '   ' → logprob: -1.0150856971740723
    3. ' if' → logprob: -2.2650856971740723
    4. 'return' → logprob: -5.640085697174072
    5. ' return' → logprob: -7.265085697174072
    6. 'c' → logprob: -7.390085697174072
    7. 'for' → logprob: -7.390085697174072
    8. '#' (adapté à ' #') → logprob: -8.14008617401123
    9. ' c' → logprob: -8.76508617401123
    10. ' for' → logprob: -8.89008617401123

Token 1656: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05139314383268356
    2. '   ' → logprob: -3.6763930320739746
    3. 'len' → logprob: -4.426393032073975
    4. '#' → logprob: -5.301393032073975
    5. 'm' → logprob: -5.801393032073975
    6. 'return' → logprob: -6.301393032073975
    7. ' if' → logprob: -6.426393032073975
    8. 'i' → logprob: -7.301393032073975
    9. 'c' → logprob: -8.051393508911133
    10. 'for' → logprob: -9.676393508911133

Token 1657: ' can't' (ID: 8535)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8750324249267578
    2. ' =' → logprob: -1.1250324249267578
    3. ' ' → logprob: -2.375032424926758
    4. '_' → logprob: -3.250032424926758
    5. 'if' → logprob: -3.500032424926758
    6. '   ' → logprob: -3.625032424926758
    7. '=' → logprob: -3.875032424926758
    8. ' ==' → logprob: -4.125032424926758
    9. ' +=' → logprob: -4.750032424926758
    10. ' i' → logprob: -5.000032424926758

Token 1658: ' detect' (ID: 11839)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3591122627258301
    2. ' return' → logprob: -1.98411226272583
    3. ' continue' → logprob: -3.48411226272583
    4. ' check' → logprob: -3.60911226272583
    5. '   ' → logprob: -3.98411226272583
    6. ' =' → logprob: -3.98411226272583
    7. 'return' → logprob: -4.60911226272583
    8. '_' → logprob: -5.10911226272583
    9. '=' → logprob: -5.23411226272583
    10. '
' → logprob: -5.60911226272583

Token 1659: ' s' (ID: 265)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1660: 'oku' (ID: 13454)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9015790820121765
    2. 'o' → logprob: -1.1515791416168213
    3. 'u' → logprob: -1.9015791416168213
    4. 'oku' → logprob: -2.9015791416168213
    5. '_o' → logprob: -3.0265791416168213
    6. '_u' → logprob: -5.026578903198242
    7. ''' → logprob: -5.651578903198242
    8. ''o' → logprob: -6.276578903198242
    9. 'ok' → logprob: -6.526578903198242
    10. 't' → logprob: -7.276578903198242

Token 1661: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.34491050243377686
    2. 'o' → logprob: -1.3449105024337769
    3. '_' → logprob: -3.8449106216430664
    4. 'n' → logprob: -5.219910621643066
    5. '_o' → logprob: -5.969910621643066
    6. '_n' → logprob: -7.719910621643066
    7. '_on' → logprob: -7.969910621643066
    8. 'a' → logprob: -8.344910621643066
    9. ''' → logprob: -9.594910621643066
    10. ''o' → logprob: -9.594910621643066

Token 1662: ' mor' (ID: 4658)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5158513784408569
    2. '<|end|>' → logprob: -2.0158514976501465
    3. '(' → logprob: -2.3908514976501465
    4. ')' → logprob: -2.7658514976501465
    5. '(m' → logprob: -3.6408514976501465
    6. ':' → logprob: -3.6408514976501465
    7. '   ' → logprob: -5.0158514976501465
    8. 'def' → logprob: -5.0158514976501465
    9. ' ' → logprob: -5.1408514976501465
    10. '#' → logprob: -5.2658514976501465

Token 1663: 'as' (ID: 288)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4818789064884186
    2. 'ra' → logprob: -0.9818788766860962
    3. 'n' → logprob: -5.731878757476807
    4. 'r' → logprob: -6.356878757476807
    5. 'an' → logprob: -6.981878757476807
    6. 'as' → logprob: -7.106878757476807
    7. 'ar' → logprob: -8.356879234313965
    8. 'na' → logprob: -8.356879234313965
    9. 're' → logprob: -9.106879234313965
    10. 'ras' → logprob: -9.231879234313965

Token 1664: ' directly' (ID: 8516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7516049742698669
    2. ':' → logprob: -1.6266050338745117
    3. '(' → logprob: -2.0016050338745117
    4. '(m' → logprob: -2.6266050338745117
    5. '   ' → logprob: -3.3766050338745117
    6. 'def' → logprob: -3.6266050338745117
    7. 'return' → logprob: -4.376605033874512
    8. 'm' → logprob: -5.626605033874512
    9. '.' → logprob: -5.626605033874512
    10. '(
' → logprob: -5.751605033874512

Token 1665: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5529705286026001
    2. '_' → logprob: -1.5529705286026
    3. '<|end|>' → logprob: -2.1779704093933105
    4. ' ' → logprob: -2.9279704093933105
    5. ')' → logprob: -4.1779704093933105
    6. 'def' → logprob: -5.5529704093933105
    7. '<|end|>' → logprob: -5.6779704093933105
    8. '...' → logprob: -5.6779704093933105
    9. '#' → logprob: -5.8029704093933105
    10. ':' → logprob: -6.0529704093933105

Token 1666: ' per' (ID: 777)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6656756401062012
    2. '#' → logprob: -1.7906756401062012
    3. '   ' → logprob: -2.415675640106201
    4. 'False' → logprob: -2.790675640106201
    5. ' False' → logprob: -2.790675640106201
    6. ' True' → logprob: -3.540675640106201
    7. 's' → logprob: -4.540675640106201
    8. '''' → logprob: -4.665675640106201
    9. 'True' → logprob: -4.915675640106201
    10. 'len' → logprob: -5.290675640106201

Token 1667: ' input' (ID: 3422)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9108030796051025
    2. '"' → logprob: -1.7858030796051025
    3. ' the' → logprob: -1.9108030796051025
    4. '#' → logprob: -2.5358030796051025
    5. 'the' → logprob: -2.9108030796051025
    6. '   ' → logprob: -3.0358030796051025
    7. ''' → logprob: -4.035802841186523
    8. ' ' → logprob: -4.160802841186523
    9. 's' → logprob: -4.160802841186523
    10. ' #' → logprob: -4.660802841186523

Token 1668: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1669: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007847463712096214
    2. ' ' → logprob: -5.882847309112549
    3. ':' → logprob: -6.882847309112549
    4. '_' → logprob: -7.257847309112549
    5. '    ' → logprob: -7.257847309112549
    6. ')' → logprob: -7.257847309112549
    7. '<|end|>' → logprob: -7.757847309112549
    8. '       ' → logprob: -8.132847785949707
    9. '  ' → logprob: -8.507847785949707
    10. ' :' → logprob: -9.257847785949707

Token 1670: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012090337462723255
    2. '    ' → logprob: -5.01209020614624
    3. ' return' → logprob: -5.63709020614624
    4. '    
' → logprob: -7.26209020614624
    5. 'return' → logprob: -7.76209020614624
    6. '       ' → logprob: -8.387090682983398
    7. ' pass' → logprob: -9.137090682983398
    8. ' ' → logprob: -9.762090682983398
    9. ' None' → logprob: -10.137090682983398
    10. '
' → logprob: -10.262090682983398

Token 1671: ' But' (ID: 3072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10048194974660873
    2. 'return' → logprob: -3.1004819869995117
    3. ' return' → logprob: -3.1004819869995117
    4. '#' → logprob: -5.475481986999512
    5. 'pass' → logprob: -7.225481986999512
    6. ' pass' → logprob: -7.600481986999512
    7. ' #' → logprob: -10.350481986999512
    8. '
' → logprob: -10.850481986999512
    9. ' None' → logprob: -11.225481986999512
    10. '    ' → logprob: -11.225481986999512

Token 1672: ' we' (ID: 581)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17804093658924103
    2. 'False' → logprob: -2.6780409812927246
    3. ' False' → logprob: -2.6780409812927246
    4. '#' → logprob: -4.553040981292725
    5. ' True' → logprob: -4.928040981292725
    6. 'm' → logprob: -6.178040981292725
    7. 'True' → logprob: -6.178040981292725
    8. 'return' → logprob: -7.553040981292725
    9. '    ' → logprob: -7.553040981292725
    10. '       ' → logprob: -7.678040981292725

Token 1673: ' can' (ID: 665)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6641476154327393
    2. ' ' → logprob: -2.0391476154327393
    3. ' return' → logprob: -2.2891476154327393
    4. ' =' → logprob: -2.7891476154327393
    5. ' #' → logprob: -3.2891476154327393
    6. ' +=' → logprob: -3.6641476154327393
    7. ' can' → logprob: -3.7891476154327393
    8. '   ' → logprob: -4.28914737701416
    9. ' have' → logprob: -4.41414737701416
    10. 'continue' → logprob: -4.41414737701416

Token 1674: ' know' (ID: 1761)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.19167651236057281
    2. ' continue' → logprob: -2.566676616668701
    3. ' detect' → logprob: -4.191676616668701
    4. ' check' → logprob: -4.191676616668701
    5. ' s' → logprob: -4.316676616668701
    6. ' if' → logprob: -4.441676616668701
    7. ' i' → logprob: -4.691676616668701
    8. ' try' → logprob: -5.066676616668701
    9. ' def' → logprob: -5.316676616668701
    10. ' ' → logprob: -5.441676616668701

Token 1675: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9290198683738708
    2. ' if' → logprob: -0.9290198683738708
    3. 'm' → logprob: -2.1790199279785156
    4. ' True' → logprob: -3.6790199279785156
    5. '   ' → logprob: -3.9290199279785156
    6. '    ' → logprob: -4.429019927978516
    7. ' that' → logprob: -4.804019927978516
    8. ' i' → logprob: -5.179019927978516
    9. 'if' → logprob: -5.179019927978516
    10. ' False' → logprob: -6.054019927978516

Token 1676: 's' (ID: 82)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8586382269859314
    2. 'return' → logprob: -0.8586382269859314
    3. '''' → logprob: -2.858638286590576
    4. '#' → logprob: -3.233638286590576
    5. 'False' → logprob: -4.358638286590576
    6. 'pass' → logprob: -4.358638286590576
    7. ' return' → logprob: -4.983638286590576
    8. 'True' → logprob: -5.233638286590576
    9. ''' → logprob: -5.858638286590576
    10. 'None' → logprob: -6.233638286590576

Token 1677: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.8546375036239624
    2. 't' → logprob: -1.2296375036239624
    3. ')' → logprob: -2.729637622833252
    4. '')' → logprob: -3.479637622833252
    5. ''' → logprob: -3.604637622833252
    6. 'u' → logprob: -4.104637622833252
    7. 'e' → logprob: -4.229637622833252
    8. '_' → logprob: -4.604637622833252
    9. 'o' → logprob: -4.854637622833252
    10. '[i' → logprob: -4.979637622833252

Token 1678: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.08083014190196991
    2. 'o' → logprob: -2.5808300971984863
    3. '_' → logprob: -6.705830097198486
    4. '_on' → logprob: -7.830830097198486
    5. '_o' → logprob: -9.455830574035645
    6. 'n' → logprob: -9.705830574035645
    7. ')' → logprob: -9.955830574035645
    8. 'ion' → logprob: -10.455830574035645
    9. ' on' → logprob: -11.580830574035645
    10. '__' → logprob: -11.955830574035645

Token 1679: ''' (ID: 6)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6328155398368835
    2. ''' → logprob: -1.0078155994415283
    3. '_'' → logprob: -2.6328155994415283
    4. '_m' → logprob: -4.132815361022949
    5. 's' → logprob: -5.257815361022949
    6. ''_' → logprob: -5.507815361022949
    7. 'm' → logprob: -6.382815361022949
    8. ' '' → logprob: -7.007815361022949
    9. ''''' → logprob: -7.757815361022949
    10. '_chars' → logprob: -8.13281536102295

Token 1680: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20891202986240387
    2. ')' → logprob: -2.9589121341705322
    3. ' ' → logprob: -3.0839121341705322
    4. ' =' → logprob: -3.7089121341705322
    5. '   ' → logprob: -3.9589121341705322
    6. 'm' → logprob: -4.708911895751953
    7. '_m' → logprob: -4.833911895751953
    8. '=' → logprob: -5.333911895751953
    9. 's' → logprob: -5.333911895751953
    10. '<|end|>' → logprob: -5.458911895751953

Token 1681: ' doubling' (ID: 122384)
  Prédit: ' represented'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' represented' → logprob: -0.728632390499115
    2. 'represented' → logprob: -0.853632390499115
    3. 'not' → logprob: -3.6036324501037598
    4. ' not' → logprob: -3.7286324501037598
    5. ' usually' → logprob: -4.22863245010376
    6. 'usually' → logprob: -4.60363245010376
    7. 'm' → logprob: -6.22863245010376
    8. ' the' → logprob: -6.47863245010376
    9. ' present' → logprob: -6.97863245010376
    10. 'False' → logprob: -6.97863245010376

Token 1682: ' conson' (ID: 127767)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3497169315814972
    2. 's' → logprob: -2.974716901779175
    3. '<|end|>' → logprob: -3.099716901779175
    4. 'm' → logprob: -3.599716901779175
    5. '_con' → logprob: -3.724716901779175
    6. '<|end|>' → logprob: -3.974716901779175
    7. '(m' → logprob: -4.099717140197754
    8. '_m' → logprob: -4.099717140197754
    9. ')' → logprob: -4.099717140197754
    10. '_token' → logprob: -4.349717140197754

Token 1683: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.39175209403038025
    2. 'a' → logprob: -1.1417521238327026
    3. 't' → logprob: -5.766752243041992
    4. 'ants' → logprob: -7.391752243041992
    5. 'an' → logprob: -7.641752243041992
    6. ' a' → logprob: -8.141752243041992
    7. 's' → logprob: -9.766752243041992
    8. '   ' → logprob: -9.891752243041992
    9. 'm' → logprob: -10.391752243041992
    10. 'at' → logprob: -11.016752243041992

Token 1684: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.14408282935619354
    2. 's' → logprob: -3.26908278465271
    3. '<|end|>' → logprob: -3.76908278465271
    4. 'def' → logprob: -4.519083023071289
    5. ':' → logprob: -4.644083023071289
    6. ')' → logprob: -4.644083023071289
    7. '   ' → logprob: -5.019083023071289
    8. ' ' → logprob: -5.269083023071289
    9. '_s' → logprob: -5.769083023071289
    10. '[' → logprob: -5.769083023071289

Token 1685: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.10935744643211365
    2. 'the' → logprob: -2.8593573570251465
    3. 'm' → logprob: -3.2343573570251465
    4. ' next' → logprob: -5.1093573570251465
    5. '#' → logprob: -7.8593573570251465
    6. ' the' → logprob: -8.109357833862305
    7. 'following' → logprob: -9.484357833862305
    8. 'def' → logprob: -10.609357833862305
    9. 'a' → logprob: -10.734357833862305
    10. '   ' → logprob: -10.734357833862305

Token 1686: ' mora' (ID: 47294)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13928209245204926
    2. 'm' → logprob: -3.139281988143921
    3. ' ' → logprob: -3.264281988143921
    4. '_token' → logprob: -4.1392822265625
    5. '_m' → logprob: -4.8892822265625
    6. ')' → logprob: -5.5142822265625
    7. '   ' → logprob: -5.5142822265625
    8. 'token' → logprob: -5.8892822265625
    9. ' )' → logprob: -6.2642822265625
    10. 'con' → logprob: -6.5142822265625

Token 1687: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0052214860916138
    2. '<|end|>' → logprob: -1.3802214860916138
    3. '_' → logprob: -1.7552214860916138
    4. ' ' → logprob: -2.380221366882324
    5. 'def' → logprob: -3.130221366882324
    6. '#' → logprob: -3.755221366882324
    7. '   ' → logprob: -4.505221366882324
    8. ')' → logprob: -4.755221366882324
    9. '
' → logprob: -4.880221366882324
    10. '<|end|>' → logprob: -5.630221366882324

Token 1688: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03810804709792137
    2. ':' → logprob: -3.4131081104278564
    3. 'def' → logprob: -7.163107872009277
    4. '_' → logprob: -7.288107872009277
    5. '       ' → logprob: -7.788107872009277
    6. ')' → logprob: -7.913107872009277
    7. '(' → logprob: -8.163107872009277
    8. ' =' → logprob: -8.538107872009277
    9. ' :' → logprob: -8.788107872009277
    10. ',' → logprob: -8.913107872009277

Token 1689: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003514667972922325
    2. ' ' → logprob: -6.753514766693115
    3. ' return' → logprob: -7.628514766693115
    4. '    ' → logprob: -7.753514766693115
    5. 'return' → logprob: -8.628514289855957
    6. ' if' → logprob: -8.628514289855957
    7. '       ' → logprob: -8.878514289855957
    8. ':' → logprob: -8.878514289855957
    9. '#' (adapté à ' #') → logprob: -9.253514289855957
    10. '  ' → logprob: -9.378514289855957

Token 1690: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08808471262454987
    2. '#' → logprob: -2.5880846977233887
    3. '    ' → logprob: -6.963084697723389
    4. ' ' → logprob: -6.963084697723389
    5. ' pass' → logprob: -6.963084697723389
    6. 'def' → logprob: -7.088084697723389
    7. 'return' → logprob: -7.088084697723389
    8. '<|end|>' → logprob: -7.213084697723389
    9. ' #' → logprob: -7.338084697723389
    10. ' return' → logprob: -7.463084697723389

Token 1691: ' this' (ID: 495)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -1.0054212808609009
    2. ' False' → logprob: -1.1304212808609009
    3. ' ' → logprob: -2.6304211616516113
    4. ' return' → logprob: -3.2554211616516113
    5. 'False' → logprob: -3.3804211616516113
    6. 'm' → logprob: -3.3804211616516113
    7. ' True' → logprob: -3.5054211616516113
    8. 'None' → logprob: -3.8804211616516113
    9. ' pass' → logprob: -4.005421161651611
    10. ' i' → logprob: -4.005421161651611

Token 1692: ' function' (ID: 1114)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8893371820449829
    2. '<|end|>' → logprob: -1.264337182044983
    3. ' is' → logprob: -2.3893370628356934
    4. '#' → logprob: -3.0143370628356934
    5. 'is' → logprob: -3.8893370628356934
    6. '<|end|>' → logprob: -4.264337062835693
    7. 'return' → logprob: -4.264337062835693
    8. 'm' → logprob: -4.264337062835693
    9. ' ' → logprob: -4.389337062835693
    10. 's' → logprob: -4.389337062835693

Token 1693: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.26663637161254883
    2. '(m' → logprob: -2.516636371612549
    3. '   ' → logprob: -3.141636371612549
    4. ' =' → logprob: -4.016636371612549
    5. ' def' → logprob: -4.266636371612549
    6. ' is' → logprob: -4.266636371612549
    7. ':' → logprob: -4.266636371612549
    8. '=' → logprob: -4.391636371612549
    9. 'm' → logprob: -4.891636371612549
    10. 'return' → logprob: -6.016636371612549

Token 1694: ' unused' (ID: 38192)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9727028012275696
    2. 'False' → logprob: -1.2227027416229248
    3. 'None' → logprob: -2.222702741622925
    4. 'lambda' → logprob: -2.722702741622925
    5. ' False' → logprob: -3.097702741622925
    6. '   ' → logprob: -3.097702741622925
    7. ' None' → logprob: -3.472702741622925
    8. 'def' → logprob: -4.222702980041504
    9. ' lambda' → logprob: -5.097702980041504
    10. 'not' → logprob: -5.847702980041504

Token 1695: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1696: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1697: ' return' (ID: 622)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.927255392074585
    2. '<|end|>' → logprob: -1.427255392074585
    3. 'None' → logprob: -2.052255392074585
    4. '   ' → logprob: -2.177255392074585
    5. '
' → logprob: -2.802255392074585
    6. '\n' → logprob: -4.177255630493164
    7. ' None' → logprob: -4.302255630493164
    8. ' ' → logprob: -5.052255630493164
    9. '#' → logprob: -5.177255630493164
    10. 'def' → logprob: -5.677255630493164

Token 1698: ' False' (ID: 7983)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.13138674199581146
    2. '<|end|>' → logprob: -2.1313867568969727
    3. ' None' → logprob: -6.131386756896973
    4. 'False' → logprob: -6.756386756896973
    5. '
' → logprob: -7.256386756896973
    6. '0' → logprob: -8.256386756896973
    7. '_None' → logprob: -10.256386756896973
    8. '```' → logprob: -10.506386756896973
    9. 'def' → logprob: -11.506386756896973
    10. '(None' → logprob: -11.506386756896973

Token 1699: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1700: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1701: ' next' (ID: 2613)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.0533432960510254
    2. 'convert' → logprob: -1.9283432960510254
    3. 'count' → logprob: -2.3033432960510254
    4. 'replace' → logprob: -2.3033432960510254
    5. 'is' → logprob: -3.3033432960510254
    6. 'get' → logprob: -3.5533432960510254
    7. 'to' → logprob: -3.8033432960510254
    8. 'double' → logprob: -4.053343296051025
    9. 'has' → logprob: -4.178343296051025
    10. 'remove' → logprob: -4.303343296051025

Token 1702: '_after' (ID: 46788)
  Prédit: '_token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_token' → logprob: -0.06329219788312912
    2. '_char' → logprob: -3.5632922649383545
    3. '_' → logprob: -3.6882922649383545
    4. '_m' → logprob: -4.938292026519775
    5. '_word' → logprob: -8.063292503356934
    6. '_tokens' → logprob: -9.688292503356934
    7. '_character' → logprob: -9.688292503356934
    8. '_index' → logprob: -9.813292503356934
    9. '_chars' → logprob: -10.063292503356934
    10. '_is' → logprob: -10.188292503356934

Token 1703: '_s' (ID: 1278)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.9305351376533508
    2. '_' → logprob: -1.430535078048706
    3. '_space' → logprob: -2.180535078048706
    4. '(m' → logprob: -2.305535078048706
    5. '_char' → logprob: -3.180535078048706
    6. '_index' → logprob: -3.305535078048706
    7. '_token' → logprob: -3.805535078048706
    8. 'space' → logprob: -4.305535316467285
    9. '_i' → logprob: -4.805535316467285
    10. '_idx' → logprob: -5.555535316467285

Token 1704: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.1169632151722908
    2. '_' → logprob: -2.9919631481170654
    3. 'o' → logprob: -2.9919631481170654
    4. '_o' → logprob: -5.1169633865356445
    5. 't' → logprob: -7.2419633865356445
    6. '(' → logprob: -8.116963386535645
    7. '_(' → logprob: -8.241963386535645
    8. 'ok' → logprob: -8.366963386535645
    9. '_s' → logprob: -8.366963386535645
    10. '_p' → logprob: -8.491963386535645

Token 1705: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0003818140830844641
    2. '_on' → logprob: -8.500381469726562
    3. 'o' → logprob: -8.750381469726562
    4. 'n' → logprob: -11.250381469726562
    5. 'on's' → logprob: -13.000381469726562
    6. '_' → logprob: -14.000381469726562
    7. ''on' → logprob: -14.875381469726562
    8. 'ons' → logprob: -15.125381469726562
    9. 'ion' → logprob: -15.250381469726562
    10. '_n' → logprob: -15.500381469726562

Token 1706: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.1002335250377655
    2. '(s' → logprob: -3.350233554840088
    3. '_(' → logprob: -3.350233554840088
    4. '(' → logprob: -4.475233554840088
    5. '(_' → logprob: -5.475233554840088
    6. '_' → logprob: -5.725233554840088
    7. '(i' → logprob: -6.100233554840088
    8. '():' → logprob: -6.850233554840088
    9. '_m' → logprob: -6.975233554840088
    10. '(_)' → logprob: -7.975233554840088

Token 1707: 'oras' (ID: 41056)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.23895859718322754
    2. '_' → logprob: -1.8639585971832275
    3. 'u' → logprob: -4.488958358764648
    4. '(' → logprob: -4.613958358764648
    5. 'ora' → logprob: -5.113958358764648
    6. '_o' → logprob: -5.488958358764648
    7. '()' → logprob: -5.863958358764648
    8. '(_' → logprob: -6.488958358764648
    9. '(u' → logprob: -6.613958358764648
    10. '():' → logprob: -6.613958358764648

Token 1708: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.019824091345071793
    2. ')' → logprob: -5.269824028015137
    3. '[' → logprob: -5.519824028015137
    4. '[i' → logprob: -5.769824028015137
    5. '):
' → logprob: -5.769824028015137
    6. ',' → logprob: -6.644824028015137
    7. '   ' → logprob: -6.894824028015137
    8. '[m' → logprob: -6.894824028015137
    9. ':' → logprob: -8.019824028015137
    10. '[s' → logprob: -9.144824028015137

Token 1709: ' idx' (ID: 14016)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.33663785457611084
    2. 'i' → logprob: -1.9616378545761108
    3. 'idx' → logprob: -1.9616378545761108
    4. 'pos' → logprob: -6.2116379737854
    5. ' index' → logprob: -6.4616379737854
    6. ' idx' → logprob: -7.2116379737854
    7. ' i' → logprob: -9.336637496948242
    8. '   ' → logprob: -9.711637496948242
    9. 'start' → logprob: -10.086637496948242
    10. ')' → logprob: -11.086637496948242

Token 1710: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.49556005001068115
    2. '):
' → logprob: -0.9955600500106812
    3. '+' → logprob: -3.8705601692199707
    4. '):
' → logprob: -8.495559692382812
    5. '   ' → logprob: -9.370559692382812
    6. ':' → logprob: -10.245559692382812
    7. ' +' → logprob: -10.370559692382812
    8. ')' → logprob: -10.620559692382812
    9. ']:' → logprob: -11.495559692382812
    10. ',' → logprob: -12.245559692382812

Token 1711: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.384836888173595e-05
    2. '```' → logprob: -9.7500638961792
    3. '       ' → logprob: -13.3750638961792
    4. 'idx' → logprob: -13.8750638961792
    5. 'if' → logprob: -14.2500638961792
    6. '`' → logprob: -14.8750638961792
    7. ':' → logprob: -15.1250638961792
    8. 'return' → logprob: -15.1250638961792
    9. '``' → logprob: -15.1250638961792
    10. '    
' → logprob: -15.2500638961792

Token 1712: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11822065711021423
    2. 'idx' → logprob: -2.868220567703247
    3. '   ' → logprob: -2.993220567703247
    4. 'for' → logprob: -6.243220806121826
    5. 'return' → logprob: -6.743220806121826
    6. 'n' → logprob: -7.743220806121826
    7. ' if' → logprob: -8.118220329284668
    8. 'i' → logprob: -8.243220329284668
    9. 'None' → logprob: -8.243220329284668
    10. 'while' → logprob: -9.618220329284668

Token 1713: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1655469536781311
    2. 'idx' → logprob: -1.9155468940734863
    3. '   ' → logprob: -5.665546894073486
    4. 'return' → logprob: -6.915546894073486
    5. 'i' → logprob: -8.290547370910645
    6. ' if' → logprob: -8.790547370910645
    7. 'for' → logprob: -8.915547370910645
    8. 'n' → logprob: -9.415547370910645
    9. 'while' → logprob: -9.915547370910645
    10. 'None' → logprob: -10.165547370910645

Token 1714: ' true' (ID: 1343)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.11082997173070908
    2. 'm' → logprob: -2.485830068588257
    3. 'len' → logprob: -4.485829830169678
    4. 'None' → logprob: -4.985829830169678
    5. ' idx' → logprob: -6.735829830169678
    6. 'mor' → logprob: -6.860829830169678
    7. ' mor' → logprob: -7.110829830169678
    8. ' None' → logprob: -9.235830307006836
    9. 'index' → logprob: -9.235830307006836
    10. 'mo' → logprob: -9.485830307006836

Token 1715: ' if' (ID: 538)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.43323656916618347
    2. 'idx' → logprob: -2.308236598968506
    3. ' i' → logprob: -2.558236598968506
    4. ' len' → logprob: -3.058236598968506
    5. 'i' → logprob: -3.433236598968506
    6. ' mor' → logprob: -3.933236598968506
    7. ' and' → logprob: -4.183236598968506
    8. ' ' → logprob: -4.433236598968506
    9. 'len' → logprob: -4.683236598968506
    10. ' if' → logprob: -4.933236598968506

Token 1716: ' next' (ID: 2613)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3869175314903259
    2. ' idx' → logprob: -1.1369175910949707
    3. '(idx' → logprob: -10.636917114257812
    4. ' (' → logprob: -11.261917114257812
    5. '	idx' → logprob: -12.261917114257812
    6. '   ' → logprob: -13.261917114257812
    7. ' ' → logprob: -14.386917114257812
    8. ' mor' → logprob: -14.386917114257812
    9. '(' → logprob: -14.511917114257812
    10. 'i' → logprob: -14.761917114257812

Token 1717: ' mora' (ID: 47294)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7361796498298645
    2. 'idx' → logprob: -1.8611795902252197
    3. 'm' → logprob: -2.3611795902252197
    4. 'i' → logprob: -2.9861795902252197
    5. '<len' → logprob: -3.4861795902252197
    6. '_token' → logprob: -3.6111795902252197
    7. '<' → logprob: -3.7361795902252197
    8. 'len' → logprob: -3.8611795902252197
    9. '_idx' → logprob: -3.9861795902252197
    10. 'token' → logprob: -3.9861795902252197

Token 1718: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06567658483982086
    2. 'len' → logprob: -3.690676689147949
    3. 'idx' → logprob: -3.940676689147949
    4. ' and' → logprob: -5.440676689147949
    5. '<len' → logprob: -5.815676689147949
    6. '==' → logprob: -6.315676689147949
    7. 'and' → logprob: -6.565676689147949
    8. 'if' → logprob: -6.690676689147949
    9. '[idx' → logprob: -6.815676689147949
    10. '[' → logprob: -7.065676689147949

Token 1719: ' s' (ID: 265)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.22035297751426697
    2. 'len' → logprob: -1.7203530073165894
    3. ' idx' → logprob: -4.345353126525879
    4. 'i' → logprob: -6.720353126525879
    5. 'True' → logprob: -6.970353126525879
    6. 'not' → logprob: -7.220353126525879
    7. '(idx' → logprob: -7.220353126525879
    8. '(' → logprob: -7.720353126525879
    9. '   ' → logprob: -8.220353126525879
    10. ' len' → logprob: -8.345353126525879

Token 1720: 'oku' (ID: 13454)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.1715145111083984
    2. ''' → logprob: -2.1715145111083984
    3. ''s' → logprob: -2.1715145111083984
    4. '['' → logprob: -2.2965145111083984
    5. ''i' → logprob: -2.9215145111083984
    6. '[idx' → logprob: -3.0465145111083984
    7. 't' → logprob: -3.1715145111083984
    8. '<len' → logprob: -3.2965145111083984
    9. 'i' → logprob: -3.4215145111083984
    10. '[len' → logprob: -3.6715145111083984

Token 1721: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0352468378841877
    2. 'n' → logprob: -4.035246849060059
    3. 'o' → logprob: -4.160246849060059
    4. '_' → logprob: -7.535246849060059
    5. '_on' → logprob: -7.660246849060059
    6. '_n' → logprob: -8.785246849060059
    7. 'con' → logprob: -10.410246849060059
    8. '_o' → logprob: -10.910246849060059
    9. '_token' → logprob: -11.035246849060059
    10. 'ion' → logprob: -11.035246849060059

Token 1722: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.8712444305419922
    2. '_m' → logprob: -1.8712444305419922
    3. 's' → logprob: -2.246244430541992
    4. 'and' → logprob: -2.371244430541992
    5. '_' → logprob: -2.496244430541992
    6. ':' → logprob: -2.871244430541992
    7. 'if' → logprob: -2.996244430541992
    8. ')' → logprob: -3.496244430541992
    9. 'def' → logprob: -3.496244430541992
    10. '(idx' → logprob: -3.621244430541992

Token 1723: '   ' (ID: 271)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9487723708152771
    2. '   ' → logprob: -1.3237724304199219
    3. ':' → logprob: -2.198772430419922
    4. '(' → logprob: -3.323772430419922
    5. 'and' → logprob: -3.323772430419922
    6. ' (' → logprob: -3.573772430419922
    7. '_' → logprob: -3.573772430419922
    8. ' ==' → logprob: -4.073772430419922
    9. '(m' → logprob: -4.323772430419922
    10. '=' → logprob: -4.823772430419922

Token 1724: ' #' (ID: 1069)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.11133915930986404
    2. ' False' → logprob: -2.4863390922546387
    3. 'idx' → logprob: -4.111339092254639
    4. ' mor' → logprob: -6.111339092254639
    5. ' idx' → logprob: -6.361339092254639
    6. 'len' → logprob: -7.236339092254639
    7. '(False' → logprob: -8.111339569091797
    8. 'm' → logprob: -8.611339569091797
    9. 'if' → logprob: -9.611339569091797
    10. ' len' → logprob: -9.611339569091797

Token 1725: ' input' (ID: 3422)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.5528356432914734
    2. 'idx' → logprob: -1.0528357028961182
    3. ' False' → logprob: -3.177835702896118
    4. ' idx' → logprob: -3.802835702896118
    5. 'i' → logprob: -5.802835464477539
    6. 'len' → logprob: -5.927835464477539
    7. 'return' → logprob: -6.302835464477539
    8. 'if' → logprob: -6.677835464477539
    9. 'index' → logprob: -7.052835464477539
    10. 'None' → logprob: -8.302835464477539

Token 1726: ' mor' (ID: 4658)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.3924894332885742
    2. ':' → logprob: -1.5174894332885742
    3. 'm' → logprob: -2.642489433288574
    4. '=' → logprob: -2.642489433288574
    5. 'def' → logprob: -2.642489433288574
    6. 'idx' → logprob: -2.767489433288574
    7. '[' → logprob: -3.267489433288574
    8. ' =' → logprob: -3.767489433288574
    9. ')' → logprob: -3.892489433288574
    10. ',' → logprob: -4.017489433288574

Token 1727: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.18596920371055603
    2. 's' → logprob: -1.9359692335128784
    3. 'a' → logprob: -4.185969352722168
    4. '[idx' → logprob: -5.560969352722168
    5. '[' → logprob: -5.810969352722168
    6. '```' → logprob: -8.060969352722168
    7. 'n' → logprob: -8.185969352722168
    8. '[
' → logprob: -8.310969352722168
    9. 'ras' → logprob: -8.435969352722168
    10. '   ' → logprob: -8.685969352722168

Token 1728: ' do' (ID: 621)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.4009761810302734
    2. '<|end|>' → logprob: -1.4009761810302734
    3. 'def' → logprob: -2.2759761810302734
    4. ')' → logprob: -2.5259761810302734
    5. '[' → logprob: -2.6509761810302734
    6. ':' → logprob: -2.9009761810302734
    7. ' =' → logprob: -3.2759761810302734
    8. '=' → logprob: -3.9009761810302734
    9. ',' → logprob: -4.275976181030273
    10. '[index' → logprob: -4.400976181030273

Token 1729: ' not' (ID: 625)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.2538704872131348
    2. 'idx' → logprob: -1.3788704872131348
    3. 'x' → logprob: -1.5038704872131348
    4. 'f' → logprob: -1.8788704872131348
    5. 's' → logprob: -3.7538704872131348
    6. '[' → logprob: -4.253870487213135
    7. 'if' → logprob: -4.878870487213135
    8. '=' → logprob: -5.003870487213135
    9. '[]' → logprob: -5.253870487213135
    10. ']' → logprob: -5.253870487213135

Token 1730: ' include' (ID: 3931)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.47430285811424255
    2. 'idx' → logprob: -1.349302887916565
    3. '_' → logprob: -3.7243027687072754
    4. '_idx' → logprob: -4.099302768707275
    5. ']' → logprob: -4.599302768707275
    6. ')' → logprob: -4.724302768707275
    7. 'len' → logprob: -4.849302768707275
    8. ':' → logprob: -5.224302768707275
    9. 's' → logprob: -5.599302768707275
    10. '[' → logprob: -5.599302768707275

Token 1731: ' s' (ID: 265)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -1.02260160446167
    2. 'None' → logprob: -1.02260160446167
    3. '[]' → logprob: -1.64760160446167
    4. ''' → logprob: -3.39760160446167
    5. 's' → logprob: -4.27260160446167
    6. '#' → logprob: -5.27260160446167
    7. '<|end|>' → logprob: -5.27260160446167
    8. '"' → logprob: -5.39760160446167
    9. 'def' → logprob: -5.64760160446167
    10. '_' → logprob: -5.64760160446167

Token 1732: 'oku' (ID: 13454)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7762680053710938
    2. '[idx' → logprob: -1.7762680053710938
    3. 'oku' → logprob: -1.9012680053710938
    4. 't' → logprob: -3.4012680053710938
    5. '['' → logprob: -3.7762680053710938
    6. ''s' → logprob: -3.7762680053710938
    7. '#' → logprob: -4.151268005371094
    8. '')' → logprob: -4.151268005371094
    9. ''''' → logprob: -4.401268005371094
    10. ''u' → logprob: -4.526268005371094

Token 1733: 'on' (ID: 263)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04804317280650139
    2. '_' → logprob: -3.5480432510375977
    3. '_n' → logprob: -4.298043251037598
    4. 'on' → logprob: -6.173043251037598
    5. ')' → logprob: -7.048043251037598
    6. '[' → logprob: -7.798043251037598
    7. ']' → logprob: -8.798043251037598
    8. '_token' → logprob: -9.048043251037598
    9. '[n' → logprob: -9.548043251037598
    10. '_on' → logprob: -9.673043251037598

Token 1734: ' mor' (ID: 4658)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5200085043907166
    2. '[' → logprob: -2.3950085639953613
    3. '   ' → logprob: -2.3950085639953613
    4. ':
' → logprob: -3.3950085639953613
    5. ' and' → logprob: -3.3950085639953613
    6. '(' → logprob: -3.8950085639953613
    7. 'and' → logprob: -4.020008563995361
    8. '(m' → logprob: -4.270008563995361
    9. 'if' → logprob: -4.395008563995361
    10. '(
' → logprob: -4.645008563995361

Token 1735: 'as' (ID: 288)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.376421332359314
    2. 'as' → logprob: -1.626421332359314
    3. 's' → logprob: -1.751421332359314
    4. 'n' → logprob: -2.5014214515686035
    5. '.' → logprob: -2.7514214515686035
    6. '[' → logprob: -2.7514214515686035
    7. '_' → logprob: -2.8764214515686035
    8. ')' → logprob: -3.5014214515686035
    9. 'r' → logprob: -4.2514214515686035
    10. '['' → logprob: -4.5014214515686035

Token 1736: ' as' (ID: 472)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.26463907957077026
    2. '   ' → logprob: -2.014639139175415
    3. 'def' → logprob: -4.264638900756836
    4. '[' → logprob: -4.389638900756836
    5. ':
' → logprob: -4.514638900756836
    6. 'return' → logprob: -4.764638900756836
    7. ' and' → logprob: -4.764638900756836
    8. ' if' → logprob: -4.889638900756836
    9. ' ' → logprob: -4.889638900756836
    10. 'if' → logprob: -5.139638900756836

Token 1737: ' separate' (ID: 13574)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -1.5204415321350098
    2. '[]' → logprob: -1.7704415321350098
    3. 'None' → logprob: -1.8954415321350098
    4. 'idx' → logprob: -1.8954415321350098
    5. 'len' → logprob: -2.1454415321350098
    6. ''' → logprob: -2.6454415321350098
    7. 's' → logprob: -3.7704415321350098
    8. 'def' → logprob: -4.14544153213501
    9. 'True' → logprob: -4.52044153213501
    10. '[idx' → logprob: -4.77044153213501

Token 1738: ' mor' (ID: 4658)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3906201124191284
    2. '(m' → logprob: -2.640620231628418
    3. 'def' → logprob: -2.890620231628418
    4. ')' → logprob: -3.890620231628418
    5. '   ' → logprob: -3.890620231628418
    6. '[' → logprob: -4.015620231628418
    7. 'm' → logprob: -4.140620231628418
    8. ',' → logprob: -4.390620231628418
    9. 'return' → logprob: -4.890620231628418
    10. 'and' → logprob: -4.890620231628418

Token 1739: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.4327433705329895
    2. 'a' → logprob: -1.0577433109283447
    3. 'n' → logprob: -6.182743549346924
    4. 's' → logprob: -6.682743549346924
    5. '[' → logprob: -8.807743072509766
    6. 'def' → logprob: -8.932743072509766
    7. '[]' → logprob: -9.432743072509766
    8. '['' → logprob: -9.557743072509766
    9. '```' → logprob: -10.557743072509766
    10. ')' → logprob: -10.807743072509766

Token 1740: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1940222829580307
    2. '   ' → logprob: -2.6940221786499023
    3. 'def' → logprob: -4.194022178649902
    4. 'if' → logprob: -4.319022178649902
    5. '(' → logprob: -4.694022178649902
    6. 'None' → logprob: -4.694022178649902
    7. ':
' → logprob: -4.944022178649902
    8. ' if' → logprob: -5.069022178649902
    9. ' ' → logprob: -5.069022178649902
    10. 'm' → logprob: -5.194022178649902

Token 1741: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21474428474903107
    2. ' ' → logprob: -2.0897443294525146
    3. ' False' → logprob: -3.5897443294525146
    4. 'False' → logprob: -4.3397440910339355
    5. ' None' → logprob: -4.8397440910339355
    6. ' 
' → logprob: -4.9647440910339355
    7. '    ' → logprob: -6.0897440910339355
    8. 'None' → logprob: -6.4647440910339355
    9. ' if' → logprob: -6.7147440910339355
    10. ')' → logprob: -6.8397440910339355

Token 1742: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6791185140609741
    2. ' return' → logprob: -1.3041185140609741
    3. ' False' → logprob: -2.5541186332702637
    4. '   ' → logprob: -3.1791186332702637
    5. 'if' → logprob: -3.1791186332702637
    6. 'False' → logprob: -3.3041186332702637
    7. ' idx' → logprob: -4.804118633270264
    8. 'return' → logprob: -5.054118633270264
    9. ' i' → logprob: -5.179118633270264
    10. '    ' → logprob: -6.929118633270264

Token 1743: ' S' (ID: 336)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6112115979194641
    2. 'return' → logprob: -1.3612115383148193
    3. 'False' → logprob: -2.6112115383148193
    4. 'idx' → logprob: -2.8612115383148193
    5. ' if' → logprob: -3.2362115383148193
    6. ' return' → logprob: -4.111211776733398
    7. '   ' → logprob: -5.361211776733398
    8. 'i' → logprob: -5.361211776733398
    9. ' False' → logprob: -6.361211776733398
    10. '
' → logprob: -6.486211776733398

Token 1744: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -1.0619772672653198
    2. 'u' → logprob: -1.3119772672653198
    3. 'e' → logprob: -1.5619772672653198
    4. 't' → logprob: -3.8119773864746094
    5. 'i' → logprob: -3.8119773864746094
    6. '_' → logprob: -4.061977386474609
    7. '#' → logprob: -4.061977386474609
    8. 'o' → logprob: -4.436977386474609
    9. 'ok' → logprob: -4.436977386474609
    10. 'def' → logprob: -4.811977386474609

Token 1745: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.5383679270744324
    2. 'o' → logprob: -1.2883679866790771
    3. 'n' → logprob: -2.038367986679077
    4. 'ons' → logprob: -5.413367748260498
    5. '_' → logprob: -6.413367748260498
    6. 's' → logprob: -6.663367748260498
    7. '_o' → logprob: -7.163367748260498
    8. '_n' → logprob: -7.413367748260498
    9. '_on' → logprob: -7.663367748260498
    10. '[' → logprob: -8.788368225097656

Token 1746: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25033655762672424
    2. '_' → logprob: -1.8753365278244019
    3. 'm' → logprob: -4.125336647033691
    4. '_m' → logprob: -4.750336647033691
    5. ')' → logprob: -5.375336647033691
    6. 'def' → logprob: -5.500336647033691
    7. '_index' → logprob: -5.750336647033691
    8. '_con' → logprob: -5.875336647033691
    9. '<|end|>' → logprob: -6.125336647033691
    10. ' is' → logprob: -6.125336647033691

Token 1747: ' represented' (ID: 27328)
  Prédit: 'represented'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'represented' → logprob: -0.009601782076060772
    2. ' represented' → logprob: -6.134601593017578
    3. '#' → logprob: -6.509601593017578
    4. 'det' → logprob: -6.884601593017578
    5. 'when' → logprob: -7.009601593017578
    6. 'im' → logprob: -7.634601593017578
    7. 'm' → logprob: -7.759601593017578
    8. 'not' → logprob: -7.884601593017578
    9. 'implicitly' → logprob: -7.884601593017578
    10. 'rep' → logprob: -8.009601593017578

Token 1748: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.6931419968605042
    2. 'by' → logprob: -0.9431419968605042
    3. 'if' → logprob: -2.9431419372558594
    4. ' if' → logprob: -4.193141937255859
    5. ' ' → logprob: -5.568141937255859
    6. '=' → logprob: -5.568141937255859
    7. 's' → logprob: -5.693141937255859
    8. 'idx' → logprob: -5.818141937255859
    9. '[idx' → logprob: -5.818141937255859
    10. 'in' → logprob: -6.193141937255859

Token 1749: ' doubling' (ID: 122384)
  Prédit: 'dou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dou' → logprob: -0.26700910925865173
    2. 'double' → logprob: -1.8920091390609741
    3. 'next' → logprob: -3.6420090198516846
    4. 'a' → logprob: -3.7670090198516846
    5. 'the' → logprob: -4.142009258270264
    6. 'm' → logprob: -4.517009258270264
    7. 'd' → logprob: -6.642009258270264
    8. 'idx' → logprob: -6.767009258270264
    9. 'checking' → logprob: -6.892009258270264
    10. ' doubling' → logprob: -7.017009258270264

Token 1750: ' conson' (ID: 127767)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20476484298706055
    2. ' ' → logprob: -2.7047648429870605
    3. ''' → logprob: -3.0797648429870605
    4. 'm' → logprob: -3.5797648429870605
    5. ' if' → logprob: -4.5797648429870605
    6. '_con' → logprob: -4.7047648429870605
    7. 'if' → logprob: -5.0797648429870605
    8. ' _' → logprob: -5.5797648429870605
    9. '   ' → logprob: -5.8297648429870605
    10. '_m' → logprob: -5.8297648429870605

Token 1751: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.004697002936154604
    2. 'ants' → logprob: -5.379696846008301
    3. 'at' → logprob: -10.8796968460083
    4. 'antd' → logprob: -11.5046968460083
    5. 't' → logprob: -11.7546968460083
    6. 'a' → logprob: -12.1296968460083
    7. 's' → logprob: -12.3796968460083
    8. 'antt' → logprob: -12.3796968460083
    9. '
' → logprob: -12.5046968460083
    10. 'm' → logprob: -12.5046968460083

Token 1752: ' in' (ID: 306)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2423490285873413
    2. '   ' → logprob: -2.117349147796631
    3. ':' → logprob: -2.242349147796631
    4. '(m' → logprob: -2.242349147796631
    5. ')' → logprob: -2.492349147796631
    6. '<|end|>' → logprob: -2.742349147796631
    7. '<|end|>' → logprob: -3.367349147796631
    8. 'm' → logprob: -3.367349147796631
    9. ']' → logprob: -3.867349147796631
    10. '(' → logprob: -3.992349147796631

Token 1753: ' next' (ID: 2613)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.547721803188324
    2. 'next' → logprob: -0.922721803188324
    3. 'the' → logprob: -4.297721862792969
    4. ' mor' → logprob: -5.297721862792969
    5. ' next' → logprob: -6.047721862792969
    6. 'mor' → logprob: -6.047721862792969
    7. 'idx' → logprob: -7.672721862792969
    8. 'len' → logprob: -9.297721862792969
    9. 'current' → logprob: -9.422721862792969
    10. 'index' → logprob: -9.422721862792969

Token 1754: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.003235940355807543
    2. 'idx' → logprob: -6.753235816955566
    3. ' mora' → logprob: -7.253235816955566
    4. 'token' → logprob: -7.503235816955566
    5. ' idx' → logprob: -8.878235816955566
    6. ' token' → logprob: -9.253235816955566
    7. 'i' → logprob: -9.503235816955566
    8. 'index' → logprob: -9.628235816955566
    9. ' mor' → logprob: -9.878235816955566
    10. ')' → logprob: -10.003235816955566

Token 1755: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06175702065229416
    2. 'and' → logprob: -4.3117570877075195
    3. ' and' → logprob: -4.3117570877075195
    4. 'def' → logprob: -4.8117570877075195
    5. '<|end|>' → logprob: -5.1867570877075195
    6. ':' → logprob: -5.5617570877075195
    7. ' ' → logprob: -5.8117570877075195
    8. ' if' → logprob: -6.1867570877075195
    9. 's' → logprob: -6.6867570877075195
    10. ')' → logprob: -6.8117570877075195

Token 1756: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04260161146521568
    2. '       ' → logprob: -4.542601585388184
    3. 'm' → logprob: -4.917601585388184
    4. ' idx' → logprob: -5.042601585388184
    5. 'idx' → logprob: -5.167601585388184
    6. ')' → logprob: -6.042601585388184
    7. '```' → logprob: -6.792601585388184
    8. 'i' → logprob: -7.167601585388184
    9. '    ' → logprob: -7.167601585388184
    10. ' i' → logprob: -7.292601585388184

Token 1757: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3385802209377289
    2. ')' → logprob: -2.3385801315307617
    3. '   ' → logprob: -2.5885801315307617
    4. ' idx' → logprob: -3.7135801315307617
    5. 'i' → logprob: -3.8385801315307617
    6. 'return' → logprob: -3.8385801315307617
    7. '       ' → logprob: -4.463580131530762
    8. 'len' → logprob: -4.963580131530762
    9. 'False' → logprob: -5.463580131530762
    10. '#' (adapté à ' #') → logprob: -5.588580131530762

Token 1758: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06605606526136398
    2. ' if' → logprob: -2.9410560131073
    3. 'if' → logprob: -4.816056251525879
    4. ' return' → logprob: -7.191056251525879
    5. 'return' → logprob: -8.191056251525879
    6. ' idx' → logprob: -8.191056251525879
    7. 'idx' → logprob: -8.316056251525879
    8. ' n' → logprob: -8.441056251525879
    9. 'n' → logprob: -8.566056251525879
    10. ')' → logprob: -8.816056251525879

Token 1759: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26763463020324707
    2. ' if' → logprob: -2.017634630203247
    3. 'idx' → logprob: -2.642634630203247
    4. ' idx' → logprob: -4.267634391784668
    5. '   ' → logprob: -4.642634391784668
    6. 'return' → logprob: -5.892634391784668
    7. 'False' → logprob: -6.267634391784668
    8. ' False' → logprob: -6.892634391784668
    9. ' return' → logprob: -7.142634391784668
    10. '
' → logprob: -8.767634391784668

Token 1760: 'oku' (ID: 13454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9067485928535461
    2. 'if' → logprob: -1.6567485332489014
    3. 'idx' → logprob: -2.0317485332489014
    4. '#' → logprob: -2.4067485332489014
    5. 't' → logprob: -3.4067485332489014
    6. 'e' → logprob: -3.7817485332489014
    7. 's' → logprob: -3.9067485332489014
    8. 'z' → logprob: -4.6567487716674805
    9. 'len' → logprob: -4.6567487716674805
    10. 'ize' → logprob: -4.9067487716674805

Token 1761: 'on' (ID: 263)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.543084979057312
    2. 'n' → logprob: -1.418084979057312
    3. 'on' → logprob: -2.6680850982666016
    4. 'ns' → logprob: -2.9180850982666016
    5. 'ons' → logprob: -3.1680850982666016
    6. '[' → logprob: -5.293085098266602
    7. '   ' → logprob: -6.793085098266602
    8. '[i' → logprob: -7.418085098266602
    9. 'if' → logprob: -7.418085098266602
    10. '[n' → logprob: -7.543085098266602

Token 1762: ' mora' (ID: 47294)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3737705945968628
    2. '_con' → logprob: -3.3737707138061523
    3. ' is' → logprob: -3.4987707138061523
    4. '_next' → logprob: -3.4987707138061523
    5. 'con' → logprob: -3.9987707138061523
    6. ' =' → logprob: -4.248770713806152
    7. ' and' → logprob: -4.373770713806152
    8. '_m' → logprob: -4.498770713806152
    9. '_char' → logprob: -4.498770713806152
    10. '_' → logprob: -4.623770713806152

Token 1763: ' doesn't' (ID: 8740)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14731565117835999
    2. 'def' → logprob: -3.147315740585327
    3. '   ' → logprob: -3.772315740585327
    4. ' =' → logprob: -3.897315740585327
    5. '=' → logprob: -4.522315502166748
    6. 'if' → logprob: -4.772315502166748
    7. ' is' → logprob: -5.147315502166748
    8. ' if' → logprob: -6.022315502166748
    9. ''s' → logprob: -6.272315502166748
    10. '+' → logprob: -6.522315502166748

Token 1764: ' exist' (ID: 4310)
  Prédit: ' appear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appear' → logprob: -0.621337354183197
    2. 'appear' → logprob: -1.2463374137878418
    3. 'exist' → logprob: -2.121337413787842
    4. ' exist' → logprob: -3.496337413787842
    5. ' return' → logprob: -5.246337413787842
    6. ' have' → logprob: -5.371337413787842
    7. 'return' → logprob: -5.496337413787842
    8. 'have' → logprob: -5.871337413787842
    9. 'continue' → logprob: -5.871337413787842
    10. 'end' → logprob: -7.121337413787842

Token 1765: ' alone' (ID: 11238)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1766: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1767: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.33521923422813416
    2. 'the' → logprob: -2.335219144821167
    3. 'code' → logprob: -2.710219144821167
    4. '#' → logprob: -2.835219144821167
    5. 'input' → logprob: -3.335219144821167
    6. ' mor' → logprob: -4.960219383239746
    7. 'list' → logprob: -5.085219383239746
    8. 'mor' → logprob: -5.710219383239746
    9. 'this' → logprob: -5.960219383239746
    10. ' code' → logprob: -6.335219383239746

Token 1768: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.00012415809032972902
    2. 'a' → logprob: -9.375123977661133
    3. '
' → logprob: -11.375123977661133
    4. 'def' → logprob: -11.875123977661133
    5. '```' → logprob: -12.375123977661133
    6. 's' → logprob: -12.500123977661133
    7. 'ras' → logprob: -12.625123977661133
    8. '#' → logprob: -13.375123977661133
    9. 'es' → logprob: -13.500123977661133
    10. '``' → logprob: -14.000123977661133

Token 1769: ' list' (ID: 1562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09668783098459244
    2. '<|end|>' → logprob: -2.9716877937316895
    3. ' ' → logprob: -4.2216877937316895
    4. ')' → logprob: -4.4716877937316895
    5. ':' → logprob: -5.0966877937316895
    6. '<|end|>' → logprob: -6.7216877937316895
    7. ']' → logprob: -6.8466877937316895
    8. '[' → logprob: -7.2216877937316895
    9. 'def' → logprob: -7.3466877937316895
    10. '       ' → logprob: -7.3466877937316895

Token 1770: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3639735281467438
    2. '<|end|>' → logprob: -1.4889734983444214
    3. ' ' → logprob: -3.613973617553711
    4. ')' → logprob: -3.988973617553711
    5. ':' → logprob: -4.238973617553711
    6. '{' → logprob: -5.863973617553711
    7. '<|end|>' → logprob: -5.988973617553711
    8. '[' → logprob: -6.238973617553711
    9. ']' → logprob: -6.363973617553711
    10. 'def' → logprob: -6.363973617553711

Token 1771: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01939321681857109
    2. '<|end|>' → logprob: -4.394393444061279
    3. ')' → logprob: -5.519393444061279
    4. ' ' → logprob: -6.769393444061279
    5. '{' → logprob: -7.394393444061279
    6. '       ' → logprob: -8.519392967224121
    7. '  ' → logprob: -8.894392967224121
    8. '    ' → logprob: -8.894392967224121
    9. '<|end|>' → logprob: -9.519392967224121
    10. 'n' → logprob: -9.894392967224121

Token 1772: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2453833967447281
    2. 'm' → logprob: -3.3703835010528564
    3. '<|end|>' → logprob: -3.6203835010528564
    4. ')' → logprob: -3.6203835010528564
    5. ' ' → logprob: -3.7453835010528564
    6. 'n' → logprob: -3.7453835010528564
    7. 'return' → logprob: -3.9953835010528564
    8. ']' → logprob: -4.120383262634277
    9. 'None' → logprob: -4.495383262634277
    10. 'False' → logprob: -4.495383262634277

Token 1773: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6732607483863831
    2. 'return' → logprob: -1.4232606887817383
    3. 'if' → logprob: -1.4232606887817383
    4. 'pass' → logprob: -5.048260688781738
    5. ' if' → logprob: -6.673260688781738
    6. ' return' → logprob: -8.548260688781738
    7. '#' → logprob: -9.173260688781738
    8. ' pass' → logprob: -10.298260688781738
    9. '	return' → logprob: -10.923260688781738
    10. 'i' → logprob: -11.173260688781738

Token 1774: ' this' (ID: 495)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.5273545384407043
    2. 'return' → logprob: -1.1523544788360596
    3. 'idx' → logprob: -3.4023544788360596
    4. '   ' → logprob: -3.9023544788360596
    5. 'None' → logprob: -4.402354717254639
    6. 'i' → logprob: -4.527354717254639
    7. ' False' → logprob: -5.402354717254639
    8. '#' → logprob: -5.527354717254639
    9. ' return' → logprob: -6.277354717254639
    10. 'len' → logprob: -6.902354717254639

Token 1775: ' function' (ID: 1114)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7828205823898315
    2. 'function' → logprob: -1.4078205823898315
    3. ' is' → logprob: -2.157820701599121
    4. ' function' → logprob: -2.782820701599121
    5. 'return' → logprob: -2.907820701599121
    6. 'is' → logprob: -3.532820701599121
    7. ' return' → logprob: -4.907820701599121
    8. 'code' → logprob: -5.032820701599121
    9. ':' → logprob: -5.282820701599121
    10. ' code' → logprob: -5.407820701599121

Token 1776: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13178469240665436
    2. 'return' → logprob: -2.881784677505493
    3. ' return' → logprob: -3.631784677505493
    4. '    ' → logprob: -4.006784915924072
    5. 'pass' → logprob: -5.006784915924072
    6. ' ' → logprob: -5.256784915924072
    7. ':return' → logprob: -6.256784915924072
    8. '  ' → logprob: -6.256784915924072
    9. 'def' → logprob: -6.756784915924072
    10. '	return' → logprob: -6.881784915924072

Token 1777: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.062042076140642166
    2. ' False' → logprob: -2.812041997909546
    3. 'None' → logprob: -9.687042236328125
    4. ' None' → logprob: -11.562042236328125
    5. 'len' → logprob: -13.562042236328125
    6. 'True' → logprob: -14.187042236328125
    7. '(False' → logprob: -15.062042236328125
    8. '_false' → logprob: -15.687042236328125
    9. ' len' → logprob: -16.062042236328125
    10. '
' → logprob: -16.312042236328125

Token 1778: ' always' (ID: 3324)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1779: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028988812118768692
    2. '
' → logprob: -4.403988838195801
    3. ' ' → logprob: -5.153988838195801
    4. ':' → logprob: -6.153988838195801
    5. '<|end|>' → logprob: -6.153988838195801
    6. ':return' → logprob: -6.653988838195801
    7. ':
' → logprob: -7.528988838195801
    8. '(True' → logprob: -7.528988838195801
    9. '    ' → logprob: -7.653988838195801
    10. 'return' → logprob: -7.653988838195801

Token 1780: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4530463218688965
    2. '   ' → logprob: -1.0780463218688965
    3. ' ' → logprob: -4.9530463218688965
    4. ':return' → logprob: -4.9530463218688965
    5. ')' → logprob: -5.9530463218688965
    6. ':
' → logprob: -6.2030463218688965
    7. '):' → logprob: -6.8280463218688965
    8. 'False' → logprob: -7.0780463218688965
    9. '  ' → logprob: -7.7030463218688965
    10. ' :' → logprob: -7.9530463218688965

Token 1781: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19056937098503113
    2. 'return' (adapté à ' return') → logprob: -1.9405694007873535
    3. 'False' → logprob: -3.6905694007873535
    4. ' return' → logprob: -5.5655694007873535
    5. ' False' → logprob: -7.1905694007873535
    6. '	return' → logprob: -9.065568923950195
    7. '
' → logprob: -9.065568923950195
    8. '       ' → logprob: -9.940568923950195
    9. '    
' → logprob: -10.190568923950195
    10. '    ' → logprob: -11.315568923950195

Token 1782: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.339278580620885e-06
    2. ' False' → logprob: -13.000001907348633
    3. '(False' → logprob: -21.625001907348633
    4. 'false' → logprob: -23.875001907348633
    5. 'True' → logprob: -24.375001907348633
    6. 'F' → logprob: -24.875001907348633
    7. '=False' → logprob: -25.375001907348633
    8. '_false' → logprob: -26.875001907348633
    9. 'FALSE' → logprob: -27.250001907348633
    10. 'Fal' → logprob: -27.750001907348633

Token 1783: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1784: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1785: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.8799309730529785
    2. ' get' → logprob: -2.5049309730529785
    3. 'main' → logprob: -2.5049309730529785
    4. 'count' → logprob: -2.7549309730529785
    5. ' count' → logprob: -2.8799309730529785
    6. 'get' → logprob: -3.0049309730529785
    7. 'is' → logprob: -3.0049309730529785
    8. ' is' → logprob: -3.2549309730529785
    9. 'has' → logprob: -3.5049309730529785
    10. ' check' → logprob: -3.5049309730529785

Token 1786: '_con' (ID: 7531)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.40951472520828247
    2. '_vo' → logprob: -1.2845146656036377
    3. '_s' → logprob: -3.5345146656036377
    4. '_m' → logprob: -4.284514904022217
    5. '_' → logprob: -5.034514904022217
    6. '_space' → logprob: -5.784514904022217
    7. '_ch' → logprob: -6.284514904022217
    8. '_con' → logprob: -6.909514904022217
    9. '_voice' → logprob: -7.284514904022217
    10. '_char' → logprob: -8.159514427185059

Token 1787: 'son' (ID: 1356)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.055352505296468735
    2. 'son' → logprob: -2.9303524494171143
    3. '```' → logprob: -8.305352210998535
    4. '_' → logprob: -9.180352210998535
    5. '
' → logprob: -10.805352210998535
    6. 't' → logprob: -11.055352210998535
    7. '`s' → logprob: -11.180352210998535
    8. 'st' → logprob: -11.555352210998535
    9. '_s' → logprob: -11.930352210998535
    10. 'sons' → logprob: -12.055352210998535

Token 1788: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.00033832306507974863
    2. '_ant' → logprob: -8.250338554382324
    3. 'a' → logprob: -11.250338554382324
    4. 't' → logprob: -11.250338554382324
    5. '_' → logprob: -11.375338554382324
    6. '{' → logprob: -12.125338554382324
    7. '(' → logprob: -12.375338554382324
    8. 'tant' → logprob: -12.500338554382324
    9. '{
' → logprob: -12.625338554382324
    10. '.ant' → logprob: -13.000338554382324

Token 1789: '(c' (ID: 2410)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.004435339942574501
    2. '_m' → logprob: -6.6294355392456055
    3. '_' → logprob: -6.7544355392456055
    4. '_(' → logprob: -7.2544355392456055
    5. '(' → logprob: -7.5044355392456055
    6. 'm' → logprob: -8.629435539245605
    7. '_con' → logprob: -9.129435539245605
    8. '(c' → logprob: -9.379435539245605
    9. '(s' → logprob: -9.504435539245605
    10. '_c' → logprob: -9.754435539245605

Token 1790: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.39037081599235535
    2. '):
' → logprob: -1.1403708457946777
    3. ')' → logprob: -5.765370845794678
    4. '_' → logprob: -9.01537036895752
    5. '   ' → logprob: -9.01537036895752
    6. '):

' → logprob: -10.64037036895752
    7. '=' → logprob: -10.76537036895752
    8. '):
' → logprob: -10.89037036895752
    9. ':' → logprob: -11.14037036895752
    10. '():' → logprob: -11.89037036895752

Token 1791: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07546518743038177
    2. ' return' → logprob: -3.575465202331543
    3. 'return' → logprob: -3.950465202331543
    4. ' c' → logprob: -4.325465202331543
    5. 'c' → logprob: -4.450465202331543
    6. '(c' → logprob: -8.200465202331543
    7. ' ' → logprob: -9.075465202331543
    8. '  ' → logprob: -10.325465202331543
    9. '
' → logprob: -10.325465202331543
    10. 'def' → logprob: -10.950465202331543

Token 1792: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14048151671886444
    2. ' return' → logprob: -2.640481472015381
    3. '   ' → logprob: -2.890481472015381
    4. 'c' → logprob: -5.640481472015381
    5. ' c' → logprob: -7.390481472015381
    6. '
' → logprob: -12.140481948852539
    7. ' ' → logprob: -12.765481948852539
    8. 'def' → logprob: -12.765481948852539
    9. '  ' → logprob: -13.390481948852539
    10. '	return' → logprob: -13.640481948852539

Token 1793: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004078997299075127
    2. ' c' → logprob: -5.5040788650512695
    3. '(c' → logprob: -14.50407886505127
    4. '	c' → logprob: -17.629079818725586
    5. ' ' → logprob: -18.629079818725586
    6. ' ' → logprob: -19.004079818725586
    7. ' (' → logprob: -19.379079818725586
    8. '   ' → logprob: -19.629079818725586
    9. '(' → logprob: -20.379079818725586
    10. '_c' → logprob: -20.504079818725586

Token 1794: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6932801604270935
    2. ' in' → logprob: -0.6932801604270935
    3. 'c' → logprob: -9.443280220031738
    4. ' ' → logprob: -10.568280220031738
    5. ' c' → logprob: -10.693280220031738
    6. 'if' → logprob: -14.193280220031738
    7. ' ' → logprob: -14.318280220031738
    8. '   ' → logprob: -14.568280220031738
    9. '	in' → logprob: -14.943280220031738
    10. '!=' → logprob: -15.068280220031738

Token 1795: ' CON' (ID: 5802)
  Prédit: 'CON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CON' → logprob: 0.0
    2. ' CON' → logprob: -18.75
    3. '(CON' → logprob: -22.25
    4. '_CON' → logprob: -23.25
    5. '{'' → logprob: -23.25
    6. 'COM' → logprob: -24.125
    7. 'CONS' → logprob: -24.25
    8. '.CON' → logprob: -24.75
    9. 'CONST' → logprob: -25.0
    10. '-CON' → logprob: -25.25

Token 1796: 'SON' (ID: 4214)
  Prédit: 'SON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SON' → logprob: -1.7432603272027336e-06
    2. 'S' → logprob: -13.750001907348633
    3. 'CON' → logprob: -14.500001907348633
    4. 'son' → logprob: -17.125001907348633
    5. 'STANT' → logprob: -17.250001907348633
    6. '{' → logprob: -17.375001907348633
    7. 'SOR' → logprob: -17.750001907348633
    8. 'SO' → logprob: -17.875001907348633
    9. '"' → logprob: -17.875001907348633
    10. '_CON' → logprob: -18.500001907348633

Token 1797: 'ANTS' (ID: 96531)
  Prédit: 'ANTS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANTS' → logprob: -8.613945101387799e-05
    2. 'TS' → logprob: -9.625085830688477
    3. 'ants' → logprob: -12.500085830688477
    4. '_' → logprob: -12.500085830688477
    5. '{' → logprob: -13.000085830688477
    6. 'N' → logprob: -13.125085830688477
    7. 'T' → logprob: -13.125085830688477
    8. '
' → logprob: -13.125085830688477
    9. '\' → logprob: -13.500085830688477
    10. 'ATS' → logprob: -15.000085830688477

Token 1798: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1799: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1800: ' check' (ID: 2371)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.1648222655057907
    2. 'starts' → logprob: -3.2898223400115967
    3. 'get' → logprob: -3.6648223400115967
    4. 'main' → logprob: -3.7898223400115967
    5. 'split' → logprob: -3.9148223400115967
    6. 'to' → logprob: -4.164822101593018
    7. 'has' → logprob: -4.289822101593018
    8. 'ends' → logprob: -5.414822101593018
    9. 'startswith' → logprob: -5.789822101593018
    10. 'parse' → logprob: -6.039822101593018

Token 1801: '_vo' (ID: 145825)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.9030933380126953
    2. '_s' → logprob: -1.0280933380126953
    3. '_' → logprob: -1.6530933380126953
    4. '_v' → logprob: -4.153093338012695
    5. '_con' → logprob: -4.403093338012695
    6. '(' → logprob: -5.528093338012695
    7. '_space' → logprob: -6.528093338012695
    8. '_is' → logprob: -6.778093338012695
    9. '_char' → logprob: -7.028093338012695
    10. '(m' → logprob: -7.153093338012695

Token 1802: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0023868298158049583
    2. 'ice' → logprob: -6.252387046813965
    3. 'icelo' → logprob: -8.002387046813965
    4. 'iced' → logprob: -10.377387046813965
    5. '```' → logprob: -10.377387046813965
    6. 'icemail' → logprob: -11.127387046813965
    7. '``' → logprob: -11.377387046813965
    8. 'ices' → logprob: -12.127387046813965
    9. 'icing' → logprob: -12.627387046813965
    10. '#' → logprob: -13.002387046813965

Token 1803: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.002551527228206396
    2. 'el' → logprob: -6.377551555633545
    3. 'ed' → logprob: -7.627551555633545
    4. 'e' → logprob: -8.377551078796387
    5. 'eled' → logprob: -9.752551078796387
    6. 'eles' → logprob: -10.752551078796387
    7. 'ele' → logprob: -10.752551078796387
    8. 'es' → logprob: -11.627551078796387
    9. 'elif' → logprob: -12.002551078796387
    10. 'elist' → logprob: -13.002551078796387

Token 1804: '_with' (ID: 14161)
  Prédit: '_con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.201893612742424
    2. '_' → logprob: -1.8268935680389404
    3. '(m' → logprob: -4.2018938064575195
    4. '_m' → logprob: -5.5768938064575195
    5. '_c' → logprob: -6.5768938064575195
    6. '_(' → logprob: -7.5768938064575195
    7. '```' → logprob: -8.57689380645752
    8. '_parent' → logprob: -8.82689380645752
    9. '(' → logprob: -9.45189380645752
    10. 'underscore' → logprob: -9.57689380645752

Token 1805: '_y' (ID: 9410)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.631693959236145
    2. 'next' → logprob: -1.756693959236145
    3. 'm' → logprob: -2.0066938400268555
    4. '_next' → logprob: -2.2566938400268555
    5. '_m' → logprob: -2.2566938400268555
    6. 'out' → logprob: -2.6316938400268555
    7. '_con' → logprob: -3.2566938400268555
    8. '_s' → logprob: -3.6316938400268555
    9. '_vo' → logprob: -3.7566938400268555
    10. 's' → logprob: -4.0066938400268555

Token 1806: '(m' (ID: 2145)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3599136471748352
    2. '(m' → logprob: -2.3599135875701904
    3. '(c' → logprob: -2.6099135875701904
    4. '(' → logprob: -2.9849135875701904
    5. '(s' → logprob: -2.9849135875701904
    6. '_(' → logprob: -5.1099138259887695
    7. '_con' → logprob: -5.1099138259887695
    8. 's' → logprob: -5.6099138259887695
    9. '(con' → logprob: -5.9849138259887695
    10. '(_' → logprob: -6.4849138259887695

Token 1807: 'ora' (ID: 2505)
  Prédit: 'ora'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -0.00014215784904081374
    2. 'o' → logprob: -10.125142097473145
    3. 'oras' → logprob: -10.750142097473145
    4. 'ORA' → logprob: -11.625142097473145
    5. 'orra' → logprob: -12.500142097473145
    6. 'or' → logprob: -12.625142097473145
    7. 'y' → logprob: -12.625142097473145
    8. '{
' → logprob: -12.625142097473145
    9. '
' → logprob: -12.750142097473145
    10. '(o' → logprob: -13.125142097473145

Token 1808: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013436313718557358
    2. '):
' → logprob: -4.763436317443848
    3. ')' → logprob: -5.888436317443848
    4. '(m' → logprob: -6.888436317443848
    5. '[' → logprob: -8.263436317443848
    6. '[m' → logprob: -8.763436317443848
    7. '_' → logprob: -8.888436317443848
    8. 'm' → logprob: -9.388436317443848
    9. '_m' → logprob: -9.638436317443848
    10. '   ' → logprob: -9.763436317443848

Token 1809: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004973902832716703
    2. ' if' → logprob: -7.625497341156006
    3. 'if' → logprob: -12.250497817993164
    4. '	if' → logprob: -12.875497817993164
    5. ':' → logprob: -13.875497817993164
    6. '   ' → logprob: -15.000497817993164
    7. '#' → logprob: -15.875497817993164
    8. '```' → logprob: -16.125497817993164
    9. ' c' → logprob: -16.250497817993164
    10. ' =' → logprob: -16.375497817993164

Token 1810: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6541709899902344
    2. '   ' → logprob: -1.1541709899902344
    3. 'return' → logprob: -1.9041709899902344
    4. ' if' → logprob: -4.404170989990234
    5. ' return' → logprob: -6.154170989990234
    6. 'c' → logprob: -6.779170989990234
    7. 'm' → logprob: -8.154170989990234
    8. ' c' → logprob: -10.279170989990234
    9. 'v' → logprob: -11.529170989990234
    10. ' ' → logprob: -12.029170989990234

Token 1811: ' vo' (ID: 778)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003439938183873892
    2. 'c' → logprob: -6.128439903259277
    3. '#' → logprob: -7.128439903259277
    4. 'return' → logprob: -7.753439903259277
    5. 'm' → logprob: -12.128439903259277
    6. 'v' → logprob: -12.128439903259277
    7. ' if' → logprob: -12.503439903259277
    8. '   ' → logprob: -13.253439903259277
    9. 'for' → logprob: -13.628439903259277
    10. 'l' → logprob: -13.628439903259277

Token 1812: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.027610035613179207
    2. 'i' → logprob: -3.6526100635528564
    3. 'ice' → logprob: -7.027609825134277
    4. 'icle' → logprob: -9.277609825134277
    5. 'icelo' → logprob: -9.277609825134277
    6. 'id' → logprob: -9.902609825134277
    7. 'icemail' → logprob: -10.402609825134277
    8. '```' → logprob: -11.277609825134277
    9. 'if' → logprob: -11.402609825134277
    10. 'ical' → logprob: -11.402609825134277

Token 1813: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.00026217024424113333
    2. 'ele' → logprob: -8.750262260437012
    3. 'el' → logprob: -10.000262260437012
    4. 'e' → logprob: -10.500262260437012
    5. 'ic' → logprob: -11.625262260437012
    6. 'less' → logprob: -12.125262260437012
    7. '```' → logprob: -12.250262260437012
    8. '#' → logprob: -13.750262260437012
    9. 'E' → logprob: -13.875262260437012
    10. 'elif' → logprob: -14.125262260437012

Token 1814: ' conson' (ID: 127767)
  Prédit: '_con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.2888059616088867
    2. '_' → logprob: -1.7888059616088867
    3. 'if' → logprob: -3.9138059616088867
    4. ' =' → logprob: -4.163805961608887
    5. 'con' → logprob: -4.538805961608887
    6. '   ' → logprob: -4.788805961608887
    7. 'def' → logprob: -5.288805961608887
    8. '_c' → logprob: -5.413805961608887
    9. '=' → logprob: -5.788805961608887
    10. ' if' → logprob: -5.913805961608887

Token 1815: 'ants' (ID: 2027)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.014217807911336422
    2. 'ants' → logprob: -4.264217853546143
    3. 'a' → logprob: -10.264217376708984
    4. 'antd' → logprob: -12.139217376708984
    5. '_ant' → logprob: -12.389217376708984
    6. '
' → logprob: -12.889217376708984
    7. '_' → logprob: -13.889217376708984
    8. 't' → logprob: -14.014217376708984
    9. 'antt' → logprob: -14.264217376708984
    10. 'an' → logprob: -14.264217376708984

Token 1816: ' +' (ID: 659)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36471813917160034
    2. '=' → logprob: -2.614718198776245
    3. '   ' → logprob: -2.614718198776245
    4. 'if' → logprob: -3.114718198776245
    5. ' if' → logprob: -3.989718198776245
    6. 'def' → logprob: -4.114717960357666
    7. ' and' → logprob: -4.239717960357666
    8. '_' → logprob: -4.614717960357666
    9. ':' → logprob: -4.864717960357666
    10. 'and' → logprob: -4.989717960357666

Token 1817: ' '' (ID: 461)
  Prédit: ''y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -0.031211959198117256
    2. 'y' → logprob: -3.5312118530273438
    3. '‘y' → logprob: -6.781211853027344
    4. ''' → logprob: -8.156211853027344
    5. ' y' → logprob: -10.531211853027344
    6. ' '' → logprob: -12.406211853027344
    7. 'y's' → logprob: -13.156211853027344
    8. ''a' → logprob: -13.531211853027344
    9. '’y' → logprob: -13.781211853027344
    10. '('' → logprob: -14.031211853027344

Token 1818: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.022142350673675537
    2. ''y' → logprob: -3.8971424102783203
    3. ''' → logprob: -6.64714241027832
    4. 'y's' → logprob: -8.27214241027832
    5. '‘y' → logprob: -11.02214241027832
    6. '"' → logprob: -12.27214241027832
    7. '['' → logprob: -12.27214241027832
    8. ''s' → logprob: -12.52214241027832
    9. ' y' → logprob: -12.52214241027832
    10. '{'' → logprob: -13.14714241027832

Token 1819: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.019490839913487434
    2. '')' → logprob: -4.019490718841553
    3. ' ==' → logprob: -6.894490718841553
    4. '==' → logprob: -8.894491195678711
    5. 'y' → logprob: -10.519491195678711
    6. ''
' → logprob: -11.144491195678711
    7. ' and' → logprob: -11.144491195678711
    8. ''''' → logprob: -11.144491195678711
    9. ''+' → logprob: -11.269491195678711
    10. '=='' → logprob: -11.394491195678711

Token 1820: ' are' (ID: 553)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3082798719406128
    2. ' if' → logprob: -1.6832798719406128
    3. '   ' → logprob: -3.3082799911499023
    4. ' =' → logprob: -4.433279991149902
    5. ' and' → logprob: -4.808279991149902
    6. 'and' → logprob: -4.808279991149902
    7. 'in' → logprob: -5.308279991149902
    8. '=' → logprob: -5.433279991149902
    9. ' in' → logprob: -6.308279991149902
    10. 'def' → logprob: -7.433279991149902

Token 1821: ' also' (ID: 1217)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.07776899635791779
    2. 'm' → logprob: -2.7027690410614014
    3. ' True' → logprob: -4.952768802642822
    4. 'return' → logprob: -8.57776927947998
    5. '   ' → logprob: -8.95276927947998
    6. 'len' → logprob: -8.95276927947998
    7. '(True' → logprob: -9.45276927947998
    8. 'False' → logprob: -9.57776927947998
    9. 'mor' → logprob: -10.32776927947998
    10. 'true' → logprob: -10.95276927947998

Token 1822: ' vo' (ID: 778)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.18014751374721527
    2. 'vo' → logprob: -2.430147409439087
    3. ' True' → logprob: -2.805147409439087
    4. '   ' → logprob: -5.180147647857666
    5. ' vo' → logprob: -5.305147647857666
    6. 'm' → logprob: -6.680147647857666
    7. 'in' → logprob: -6.930147647857666
    8. ''' → logprob: -7.430147647857666
    9. '
' → logprob: -7.680147647857666
    10. '{
' → logprob: -7.930147647857666

Token 1823: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0014128545299172401
    2. 'oc' → logprob: -6.626412868499756
    3. 'o' → logprob: -10.376412391662598
    4. '```' → logprob: -11.001412391662598
    5. '``' → logprob: -11.876412391662598
    6. 'icelo' → logprob: -12.126412391662598
    7. 'ol' → logprob: -12.376412391662598
    8. 'cel' → logprob: -12.626412391662598
    9. '#' → logprob: -12.876412391662598
    10. ''' → logprob: -13.626412391662598

Token 1824: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.001208922709338367
    2. 'el' → logprob: -7.626208782196045
    3. 'ol' → logprob: -8.251209259033203
    4. 'ess' → logprob: -8.626209259033203
    5. 'o' → logprob: -8.876209259033203
    6. 'less' → logprob: -9.376209259033203
    7. 'e' → logprob: -11.251209259033203
    8. 'ele' → logprob: -11.501209259033203
    9. '
' → logprob: -11.751209259033203
    10. 'ueless' → logprob: -12.626209259033203

Token 1825: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21722294390201569
    2. ' and' → logprob: -2.7172229290008545
    3. ':' → logprob: -3.0922229290008545
    4. ' if' → logprob: -3.0922229290008545
    5. 'if' → logprob: -4.217223167419434
    6. ':
' → logprob: -4.467223167419434
    7. 'and' → logprob: -4.717223167419434
    8. ' ' → logprob: -6.967223167419434
    9. '(' → logprob: -7.967223167419434
    10. '  ' → logprob: -7.967223167419434

Token 1826: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026872646412812173
    2. 'if' → logprob: -9.000268936157227
    3. ':' → logprob: -9.625268936157227
    4. 'def' → logprob: -10.250268936157227
    5. ' if' → logprob: -10.875268936157227
    6. ':
' → logprob: -11.875268936157227
    7. '{' → logprob: -12.750268936157227
    8. '{
' → logprob: -12.875268936157227
    9. ' =' → logprob: -13.375268936157227
    10. '
' → logprob: -13.500268936157227

Token 1827: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14854513108730316
    2. 'if' → logprob: -2.148545026779175
    3. 'return' → logprob: -3.898545026779175
    4. ' if' → logprob: -6.898545265197754
    5. 'c' → logprob: -9.523545265197754
    6. ' return' → logprob: -11.273545265197754
    7. '```' → logprob: -11.398545265197754
    8. 'v' → logprob: -13.273545265197754
    9. '	if' → logprob: -13.273545265197754
    10. 'for' → logprob: -13.648545265197754

Token 1828: ' e' (ID: 319)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5521828532218933
    2. '   ' → logprob: -1.552182912826538
    3. 'return' → logprob: -1.552182912826538
    4. ' if' → logprob: -7.552182674407959
    5. 'c' → logprob: -9.427183151245117
    6. ' return' → logprob: -9.552183151245117
    7. '```' → logprob: -10.677183151245117
    8. 'for' → logprob: -10.802183151245117
    9. '``' → logprob: -12.302183151245117
    10. 'v' → logprob: -12.552183151245117

Token 1829: '.g' (ID: 1940)
  Prédit: 'lse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lse' → logprob: -0.49197787046432495
    2. 'lif' → logprob: -0.991977870464325
    3. 'if' → logprob: -5.616977691650391
    4. 'elif' → logprob: -5.616977691650391
    5. 'l' → logprob: -5.866977691650391
    6. 'lf' → logprob: -6.241977691650391
    7. '   ' → logprob: -6.491977691650391
    8. 'f' → logprob: -6.866977691650391
    9. '#' → logprob: -7.241977691650391
    10. 'lim' → logprob: -7.991977691650391

Token 1830: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5973057150840759
    2. 'f' → logprob: -1.4723057746887207
    3. 'if' → logprob: -1.7223057746887207
    4. ' if' → logprob: -3.2223057746887207
    5. 'm' → logprob: -7.222305774688721
    6. '       ' → logprob: -7.972305774688721
    7. '```' → logprob: -8.472305297851562
    8. '	if' → logprob: -9.597305297851562
    9. '
' → logprob: -9.847305297851562
    10. ' f' → logprob: -9.972305297851562

Token 1831: ' '' (ID: 461)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5870181322097778
    2. 'if' → logprob: -0.8370181322097778
    3. 'k' → logprob: -6.337018013000488
    4. 'ky' → logprob: -6.462018013000488
    5. 'return' → logprob: -6.587018013000488
    6. 'vo' → logprob: -6.712018013000488
    7. ''' → logprob: -6.962018013000488
    8. '   ' → logprob: -7.212018013000488
    9. 'def' → logprob: -7.337018013000488
    10. 'len' → logprob: -7.587018013000488

Token 1832: 'ky' (ID: 5781)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.24140825867652893
    2. 'k' → logprob: -1.9914082288742065
    3. ''' → logprob: -3.366408348083496
    4. 's' → logprob: -4.241408348083496
    5. 'ky' → logprob: -4.616408348083496
    6. 'if' → logprob: -4.741408348083496
    7. 'vo' → logprob: -6.241408348083496
    8. '"' → logprob: -6.866408348083496
    9. '"k' → logprob: -7.116408348083496
    10. 'def' → logprob: -7.241408348083496

Token 1833: ''' (ID: 6)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1300240010023117
    2. ''' → logprob: -3.005023956298828
    3. '')' → logprob: -3.130023956298828
    4. 'o' → logprob: -4.005023956298828
    5. 'a' → logprob: -4.755023956298828
    6. ''u' → logprob: -6.880023956298828
    7. ')' → logprob: -8.380023956298828
    8. 'y' → logprob: -8.880023956298828
    9. ''),' → logprob: -9.130023956298828
    10. ''''' → logprob: -10.130023956298828

Token 1834: ' in' (ID: 306)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8429566025733948
    2. ':' → logprob: -1.34295654296875
    3. 'def' → logprob: -2.34295654296875
    4. ' if' → logprob: -2.84295654296875
    5. '   ' → logprob: -3.96795654296875
    6. '(m' → logprob: -3.96795654296875
    7. '(' → logprob: -4.09295654296875
    8. ':
' → logprob: -4.21795654296875
    9. ' =' → logprob: -4.21795654296875
    10. '=' → logprob: -4.96795654296875

Token 1835: ' '' (ID: 461)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.23827724158763885
    2. '{'' → logprob: -1.6132771968841553
    3. ''' → logprob: -5.488277435302734
    4. 'CON' → logprob: -6.613277435302734
    5. 'VOICE' → logprob: -6.613277435302734
    6. '{' → logprob: -6.738277435302734
    7. '{"' → logprob: -6.988277435302734
    8. '"' → logprob: -7.238277435302734
    9. 'VO' → logprob: -7.363277435302734
    10. '['' → logprob: -7.613277435302734

Token 1836: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3850589096546173
    2. 'm' → logprob: -1.510058879852295
    3. ''' → logprob: -3.135058879852295
    4. 'ky' → logprob: -3.260058879852295
    5. 'ki' → logprob: -6.010058879852295
    6. '"k' → logprob: -6.135058879852295
    7. '"' → logprob: -6.260058879852295
    8. 'koa' → logprob: -6.385058879852295
    9. 'kona' → logprob: -6.635058879852295
    10. 'ko' → logprob: -7.010058879852295

Token 1837: 'yo' (ID: 4925)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0158857274800539
    2. 'yo' → logprob: -4.515885829925537
    3. 'yu' → logprob: -5.390885829925537
    4. ''y' → logprob: -9.140885353088379
    5. 'y's' → logprob: -10.515885353088379
    6. 'ya' → logprob: -10.640885353088379
    7. ''' → logprob: -11.015885353088379
    8. 'ys' → logprob: -11.640885353088379
    9. 'yun' → logprob: -11.640885353088379
    10. 'yon' → logprob: -11.640885353088379

Token 1838: ''
' (ID: 2207)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.23312212526798248
    2. ''' → logprob: -1.6081221103668213
    3. 'u' → logprob: -4.9831223487854
    4. '',' → logprob: -7.9831223487854
    5. 'k' → logprob: -9.358121871948242
    6. ''u' → logprob: -9.733121871948242
    7. ')' → logprob: -9.983121871948242
    8. ')'' → logprob: -9.983121871948242
    9. ''),' → logprob: -10.108121871948242
    10. 'y' → logprob: -10.358121871948242

Token 1839: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08498959988355637
    2. 'if' → logprob: -2.834989547729492
    3. ' if' → logprob: -4.584989547729492
    4. 'and' → logprob: -5.709989547729492
    5. ' =' → logprob: -5.834989547729492
    6. 'def' → logprob: -5.834989547729492
    7. '=' → logprob: -6.834989547729492
    8. ' and' → logprob: -6.959989547729492
    9. ':' → logprob: -7.209989547729492
    10. ':
' → logprob: -8.709989547729492

Token 1840: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3365095555782318
    2. 'if' → logprob: -1.4615095853805542
    3. ' if' → logprob: -3.3365094661712646
    4. 'c' → logprob: -4.211509704589844
    5. 'return' → logprob: -5.836509704589844
    6. ' c' → logprob: -7.961509704589844
    7. ' return' → logprob: -9.461509704589844
    8. 'm' → logprob: -10.586509704589844
    9. 'def' → logprob: -10.711509704589844
    10. '```' → logprob: -11.086509704589844

Token 1841: ' mora' (ID: 47294)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31664398312568665
    2. 'return' → logprob: -1.3166439533233643
    3. '   ' → logprob: -6.191644191741943
    4. 'c' → logprob: -6.941644191741943
    5. 'def' → logprob: -9.191643714904785
    6. 'first' → logprob: -9.441643714904785
    7. '#' → logprob: -9.941643714904785
    8. 'for' → logprob: -9.941643714904785
    9. ' if' → logprob: -10.441643714904785
    10. ' return' → logprob: -11.191643714904785

Token 1842: ' like' (ID: 1299)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.21841903030872345
    2. 'startswith' → logprob: -2.843419075012207
    3. '=' → logprob: -3.593419075012207
    4. 'def' → logprob: -3.593419075012207
    5. '==' → logprob: -4.218419075012207
    6. '.endswith' → logprob: -4.343419075012207
    7. '[' → logprob: -4.718419075012207
    8. ' =' → logprob: -4.968419075012207
    9. 'if' → logprob: -5.093419075012207
    10. 'len' → logprob: -5.093419075012207

Token 1843: ' '' (ID: 461)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06935546547174454
    2. 'if' → logprob: -3.1943554878234863
    3. 's' → logprob: -4.069355487823486
    4. 'len' → logprob: -6.069355487823486
    5. ''' → logprob: -6.694355487823486
    6. '   ' → logprob: -6.694355487823486
    7. 'k' → logprob: -7.069355487823486
    8. ' if' → logprob: -7.194355487823486
    9. 'c' → logprob: -7.319355487823486
    10. 'def' → logprob: -7.569355487823486

Token 1844: 'k' (ID: 74)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.19883310794830322
    2. 'k' → logprob: -1.9488331079483032
    3. 'ky' → logprob: -4.323832988739014
    4. ''' → logprob: -4.448832988739014
    5. 's' → logprob: -5.823832988739014
    6. 'if' → logprob: -6.573832988739014
    7. '"' → logprob: -6.698832988739014
    8. ''m' → logprob: -7.073832988739014
    9. '"k' → logprob: -7.198832988739014
    10. 'mo' → logprob: -7.323832988739014

Token 1845: 'yo' (ID: 4925)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0013596400385722518
    2. '<|end|>' → logprob: -7.376359462738037
    3. ''y' → logprob: -8.251359939575195
    4. '')' → logprob: -8.501359939575195
    5. '<|end|>' → logprob: -9.501359939575195
    6. ''' → logprob: -9.626359939575195
    7. 'yll' → logprob: -10.751359939575195
    8. '[y' → logprob: -11.251359939575195
    9. 'yo' → logprob: -11.626359939575195
    10. 'y's' → logprob: -11.751359939575195

Token 1846: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1151643916964531
    2. '')' → logprob: -2.490164279937744
    3. ')'' → logprob: -3.990164279937744
    4. 'o' → logprob: -6.490164279937744
    5. 'k' → logprob: -6.990164279937744
    6. '',' → logprob: -7.115164279937744
    7. ')' → logprob: -7.240164279937744
    8. 'y' → logprob: -7.365164279937744
    9. '[k' → logprob: -7.740164279937744
    10. ''''' → logprob: -8.115164756774902

Token 1847: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9132308959960938
    2. ' if' → logprob: -1.1632308959960938
    3. 'return' → logprob: -2.0382308959960938
    4. 'if' → logprob: -2.4132308959960938
    5. ' return' → logprob: -2.7882308959960938
    6. 'len' → logprob: -5.788230895996094
    7. 'def' → logprob: -7.913230895996094
    8. ' ' → logprob: -8.538230895996094
    9. '  ' → logprob: -8.538230895996094
    10. '
' → logprob: -8.663230895996094

Token 1848: 'shi' (ID: 33444)
  Prédit: 'ky'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ky' → logprob: -0.41770705580711365
    2. 'k' → logprob: -1.417707085609436
    3. 'ki' → logprob: -2.9177069664001465
    4. 's' → logprob: -3.4177069664001465
    5. 'p' → logprob: -6.0427069664001465
    6. 'ku' → logprob: -6.1677069664001465
    7. ''' → logprob: -6.5427069664001465
    8. 'sy' → logprob: -6.9177069664001465
    9. 't' → logprob: -7.6677069664001465
    10. 'y' → logprob: -7.9177069664001465

Token 1849: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.6009925603866577
    2. 'o' → logprob: -1.6009925603866577
    3. ''' → logprob: -2.4759926795959473
    4. 'ra' → logprob: -2.8509926795959473
    5. 'u' → logprob: -2.9759926795959473
    6. 'ro' → logprob: -4.600992679595947
    7. 'n' → logprob: -4.975992679595947
    8. 'ru' → logprob: -5.225992679595947
    9. 't' → logprob: -5.350992679595947
    10. ')' → logprob: -5.850992679595947

Token 1850: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16123484075069427
    2. ':
' → logprob: -2.4112348556518555
    3. ' ' → logprob: -4.1612348556518555
    4. ')' → logprob: -4.5362348556518555
    5. '):' → logprob: -4.7862348556518555
    6. '   ' → logprob: -5.0362348556518555
    7. 'if' → logprob: -5.7862348556518555
    8. '=' → logprob: -6.1612348556518555
    9. ' if' → logprob: -6.6612348556518555
    10. 'def' → logprob: -6.7862348556518555

Token 1851: 'shi' (ID: 33444)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9611520171165466
    2. ')' → logprob: -1.2111520767211914
    3. 'k' → logprob: -2.4611520767211914
    4. 's' → logprob: -3.2111520767211914
    5. 'y' → logprob: -3.2111520767211914
    6. ''s' → logprob: -3.2111520767211914
    7. '')' → logprob: -3.2111520767211914
    8. 'n' → logprob: -4.961152076721191
    9. ':' → logprob: -5.211152076721191
    10. '0' → logprob: -5.336152076721191

Token 1852: ' is' (ID: 382)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7706553936004639
    2. '')' → logprob: -0.8956553936004639
    3. ')' → logprob: -3.145655393600464
    4. ')'' → logprob: -3.895655393600464
    5. ''),' → logprob: -4.020655632019043
    6. '',' → logprob: -4.145655632019043
    7. 'o' → logprob: -4.895655632019043
    8. ')',' → logprob: -5.395655632019043
    9. 'n' → logprob: -5.770655632019043
    10. '')
' → logprob: -5.770655632019043

Token 1853: ' s' (ID: 265)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.05299951508641243
    2. 'k' → logprob: -3.302999496459961
    3. ''' → logprob: -5.677999496459961
    4. 'not' → logprob: -5.927999496459961
    5. 'vo' → logprob: -6.052999496459961
    6. 's' → logprob: -6.177999496459961
    7. ''s' → logprob: -6.802999496459961
    8. '#' → logprob: -8.052999496459961
    9. 'false' → logprob: -8.052999496459961
    10. '3' → logprob: -8.177999496459961

Token 1854: ' conson' (ID: 127767)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9901273846626282
    2. 'u' → logprob: -1.3651273250579834
    3. 'h' → logprob: -1.9901273250579834
    4. 't' → logprob: -2.7401273250579834
    5. ''u' → logprob: -3.2401273250579834
    6. '#' → logprob: -3.7401273250579834
    7. '['' → logprob: -3.7401273250579834
    8. ''i' → logprob: -4.3651275634765625
    9. 'i' → logprob: -4.6151275634765625
    10. 'o' → logprob: -5.1151275634765625

Token 1855: 'ant' (ID: 493)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.7896277904510498
    2. 't' → logprob: -1.5396277904510498
    3. 'on' → logprob: -1.9146277904510498
    4. 'ont' → logprob: -2.91462779045105
    5. '{'' → logprob: -3.28962779045105
    6. 'u' → logprob: -3.66462779045105
    7. 'son' → logprob: -4.914628028869629
    8. 's' → logprob: -5.039628028869629
    9. 'onent' → logprob: -5.039628028869629
    10. 'k' → logprob: -5.414628028869629

Token 1856: ' but' (ID: 889)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34951719641685486
    2. '')' → logprob: -1.4745172262191772
    3. ''' → logprob: -3.4745171070098877
    4. 'n' → logprob: -4.224517345428467
    5. ''),' → logprob: -5.599517345428467
    6. 't' → logprob: -5.724517345428467
    7. ')'' → logprob: -6.224517345428467
    8. '')
' → logprob: -6.474517345428467
    9. '',' → logprob: -6.599517345428467
    10. ')
' → logprob: -6.974517345428467

Token 1857: ' voiced' (ID: 131324)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1735296249389648
    2. ' not' → logprob: -1.2985296249389648
    3. 'not' → logprob: -2.298529624938965
    4. 'False' → logprob: -2.298529624938965
    5. ''' → logprob: -3.298529624938965
    6. ''s' → logprob: -3.423529624938965
    7. 's' → logprob: -3.673529624938965
    8. 'y' → logprob: -3.923529624938965
    9. ' False' → logprob: -4.173529624938965
    10. 'k' → logprob: -4.173529624938965

Token 1858: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4424406886100769
    2. '')' → logprob: -1.9424407482147217
    3. 't' → logprob: -2.4424407482147217
    4. ''' → logprob: -3.4424407482147217
    5. 'n' → logprob: -3.4424407482147217
    6. ''),' → logprob: -3.6924407482147217
    7. 's' → logprob: -4.942440509796143
    8. '),' → logprob: -5.067440509796143
    9. ''t' → logprob: -5.067440509796143
    10. ')
' → logprob: -5.692440509796143

Token 1859: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3557204008102417
    2. '#' → logprob: -2.2307205200195312
    3. ''' → logprob: -2.7307205200195312
    4. ' if' → logprob: -3.8557205200195312
    5. ''s' → logprob: -3.9807205200195312
    6. '
' → logprob: -4.230720520019531
    7. ' '' → logprob: -4.730720520019531
    8. ''y' → logprob: -4.855720520019531
    9. 'y' → logprob: -5.355720520019531
    10. 'def' → logprob: -5.605720520019531

Token 1860: 'ty' (ID: 1206)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4899633824825287
    2. 'k' → logprob: -1.864963412284851
    3. 'y' → logprob: -2.7399632930755615
    4. 'p' → logprob: -2.8649632930755615
    5. 't' → logprob: -3.7399632930755615
    6. ''' → logprob: -3.7399632930755615
    7. 'u' → logprob: -4.614963531494141
    8. 'sh' → logprob: -4.739963531494141
    9. 'i' → logprob: -5.239963531494141
    10. 'h' → logprob: -5.239963531494141

Token 1861: 'u' (ID: 84)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7419360876083374
    2. 'u' → logprob: -0.8669360876083374
    3. 'o' → logprob: -2.741936206817627
    4. 'pe' → logprob: -3.616936206817627
    5. 'e' → logprob: -5.366936206817627
    6. 'a' → logprob: -6.116936206817627
    7. ''' → logprob: -6.741936206817627
    8. '')' → logprob: -6.991936206817627
    9. 'po' → logprob: -7.991936206817627
    10. ')' → logprob: -7.991936206817627

Token 1862: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.060949694365262985
    2. '')' → logprob: -3.4359498023986816
    3. 'p' → logprob: -4.685949802398682
    4. 'o' → logprob: -5.435949802398682
    5. 'u' → logprob: -5.435949802398682
    6. '',' → logprob: -5.810949802398682
    7. 'n' → logprob: -5.810949802398682
    8. 'a' → logprob: -8.060949325561523
    9. ')' → logprob: -8.060949325561523
    10. ''u' → logprob: -8.435949325561523

Token 1863: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8002837300300598
    2. ':' → logprob: -1.050283670425415
    3. ':
' → logprob: -2.925283670425415
    4. ' if' → logprob: -3.050283670425415
    5. 'if' → logprob: -3.425283670425415
    6. 'def' → logprob: -3.425283670425415
    7. ' ' → logprob: -4.175283908843994
    8. ''' → logprob: -5.675283908843994
    9. '  ' → logprob: -6.300283908843994
    10. 's' → logprob: -6.425283908843994

Token 1864: 'ty' (ID: 1206)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.1420255899429321
    2. ''u' → logprob: -1.1420255899429321
    3. ''t' → logprob: -2.3920254707336426
    4. 'u' → logprob: -2.6420254707336426
    5. ''' → logprob: -2.6420254707336426
    6. ')' → logprob: -2.8920254707336426
    7. ''s' → logprob: -4.392025470733643
    8. '')' → logprob: -4.767025470733643
    9. 'k' → logprob: -4.767025470733643
    10. ''y' → logprob: -4.892025470733643

Token 1865: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.011518375016748905
    2. 'o' → logprob: -4.511518478393555
    3. 'e' → logprob: -8.636518478393555
    4. ''u' → logprob: -9.261518478393555
    5. ')' → logprob: -9.636518478393555
    6. 'a' → logprob: -10.136518478393555
    7. 'p' → logprob: -10.261518478393555
    8. '')' → logprob: -10.511518478393555
    9. 'n' → logprob: -12.261518478393555
    10. 'ou' → logprob: -12.511518478393555

Token 1866: ' is' (ID: 382)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.6936509609222412
    2. ')' → logprob: -1.0686509609222412
    3. ''' → logprob: -2.193650960922241
    4. 'u' → logprob: -4.06865119934082
    5. ''u' → logprob: -4.94365119934082
    6. 'o' → logprob: -5.06865119934082
    7. ''),' → logprob: -5.44365119934082
    8. 'n' → logprob: -5.81865119934082
    9. 't' → logprob: -6.81865119934082
    10. ''s' → logprob: -7.19365119934082

Token 1867: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5549275279045105
    2. 'vo' → logprob: -1.5549275875091553
    3. 'not' → logprob: -2.4299275875091553
    4. ''t' → logprob: -2.9299275875091553
    5. 'False' → logprob: -3.8049275875091553
    6. 'false' → logprob: -5.054927349090576
    7. 'k' → logprob: -5.429927349090576
    8. ''s' → logprob: -5.679927349090576
    9. 'ty' → logprob: -5.929927349090576
    10. 'invalid' → logprob: -6.054927349090576

Token 1868: '+' (ID: 10)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.19302675127983093
    2. 'y' → logprob: -1.9430267810821533
    3. 'o' → logprob: -4.693026542663574
    4. 'yu' → logprob: -4.818026542663574
    5. '')' → logprob: -5.818026542663574
    6. 'su' → logprob: -5.943026542663574
    7. ''u' → logprob: -5.943026542663574
    8. ')' → logprob: -6.068026542663574
    9. 's' → logprob: -6.818026542663574
    10. 'e' → logprob: -6.943026542663574

Token 1869: 'yu' (ID: 22504)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.34731927514076233
    2. 'y' → logprob: -1.34731924533844
    3. 'h' → logprob: -4.34731912612915
    4. ''u' → logprob: -4.97231912612915
    5. 'yu' → logprob: -5.22231912612915
    6. 's' → logprob: -5.47231912612915
    7. 'su' → logprob: -6.97231912612915
    8. ''' → logprob: -7.09731912612915
    9. 'i' → logprob: -7.84731912612915
    10. 'e' → logprob: -7.84731912612915

Token 1870: ' ?' (ID: 1423)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48884376883506775
    2. '')' → logprob: -1.3638437986373901
    3. 'u' → logprob: -2.6138436794281006
    4. 'o' → logprob: -3.4888436794281006
    5. ''' → logprob: -3.8638436794281006
    6. ''u' → logprob: -5.98884391784668
    7. ''o' → logprob: -6.86384391784668
    8. ''),' → logprob: -7.11384391784668
    9. '),' → logprob: -7.61384391784668
    10. 'e' → logprob: -8.11384391784668

Token 1871: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45363882184028625
    2. '')' → logprob: -1.2036387920379639
    3. 'o' → logprob: -3.578638792037964
    4. 'u' → logprob: -4.078639030456543
    5. ''' → logprob: -4.453639030456543
    6. ''u' → logprob: -5.703639030456543
    7. ''o' → logprob: -6.203639030456543
    8. ')
' → logprob: -7.328639030456543
    9. '),' → logprob: -8.078639030456543
    10. ''),' → logprob: -8.078639030456543

Token 1872: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006346326321363449
    2. ' if' → logprob: -5.381346225738525
    3. ':' → logprob: -7.381346225738525
    4. 'if' → logprob: -7.506346225738525
    5. ':
' → logprob: -8.756346702575684
    6. ' =' → logprob: -9.256346702575684
    7. 'def' → logprob: -9.256346702575684
    8. '=' → logprob: -10.381346702575684
    9. '	if' → logprob: -10.631346702575684
    10. 'y' → logprob: -10.881346702575684

Token 1873: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004288641735911369
    2. ' if' → logprob: -6.004288673400879
    3. ' ' → logprob: -7.754288673400879
    4. ' 
' → logprob: -8.379288673400879
    5. ':' → logprob: -8.879288673400879
    6. ' return' → logprob: -9.004288673400879
    7. 'if' → logprob: -9.129288673400879
    8. '#' (adapté à ' #') → logprob: -9.254288673400879
    9. '  ' → logprob: -9.629288673400879
    10. 'v' → logprob: -9.629288673400879

Token 1874: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07271048426628113
    2. 'return' → logprob: -3.1977105140686035
    3. 'if' → logprob: -4.1977105140686035
    4. 'def' → logprob: -5.9477105140686035
    5. ' if' → logprob: -6.0727105140686035
    6. '#' → logprob: -6.0727105140686035
    7. 'v' → logprob: -6.1977105140686035
    8. ' return' → logprob: -6.4477105140686035
    9. 'i' → logprob: -7.1977105140686035
    10. '       ' → logprob: -7.3227105140686035

Token 1875: ' problem' (ID: 4792)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8710594773292542
    2. '#' → logprob: -1.4960594177246094
    3. 'len' → logprob: -2.2460594177246094
    4. ''' → logprob: -2.6210594177246094
    5. 's' → logprob: -3.1210594177246094
    6. 'def' → logprob: -3.4960594177246094
    7. 'CON' → logprob: -4.371059417724609
    8. '{
' → logprob: -4.371059417724609
    9. '"' → logprob: -4.621059417724609
    10. 'c' → logprob: -4.621059417724609

Token 1876: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13410496711730957
    2. ':' → logprob: -2.8841049671173096
    3. '   ' → logprob: -4.1341047286987305
    4. ' if' → logprob: -5.0091047286987305
    5. ''s' → logprob: -5.1341047286987305
    6. 'if' → logprob: -5.1341047286987305
    7. ''' → logprob: -5.1341047286987305
    8. ' def' → logprob: -5.5091047286987305
    9. '<|end|>' → logprob: -5.5091047286987305
    10. '#' → logprob: -5.7591047286987305

Token 1877: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007205340662039816
    2. ' if' → logprob: -8.000720977783203
    3. '#' → logprob: -8.375720977783203
    4. ' pass' → logprob: -9.750720977783203
    5. ' #' → logprob: -10.625720977783203
    6. ' return' → logprob: -10.875720977783203
    7. '       ' → logprob: -11.500720977783203
    8. 'def' → logprob: -11.625720977783203
    9. ' c' → logprob: -11.750720977783203
    10. '    ' → logprob: -12.750720977783203

Token 1878: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10536926239728928
    2. '#' (adapté à ' #') → logprob: -2.3553693294525146
    3. 'return' → logprob: -6.4803690910339355
    4. 'if' → logprob: -6.8553690910339355
    5. ' if' → logprob: -7.1053690910339355
    6. ' return' → logprob: -7.8553690910339355
    7. 'pass' → logprob: -8.230369567871094
    8. ' #' → logprob: -8.355369567871094
    9. '       ' → logprob: -8.480369567871094
    10. ' pass' → logprob: -8.855369567871094

Token 1879: ' "' (ID: 392)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29315540194511414
    2. '#' → logprob: -1.4181554317474365
    3. 'def' → logprob: -4.668155193328857
    4. 'return' → logprob: -6.793155193328857
    5. 'if' → logprob: -7.543155193328857
    6. 'pass' → logprob: -7.793155193328857
    7. '       ' → logprob: -9.293155670166016
    8. ' #' → logprob: -9.543155670166016
    9. '```' → logprob: -9.918155670166016
    10. ' if' → logprob: -10.293155670166016

Token 1880: 'また' (ID: 34803)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18861131370067596
    2. ')' → logprob: -2.9386112689971924
    3. '')' → logprob: -3.5636112689971924
    4. 'y' → logprob: -4.5636115074157715
    5. 'n' → logprob: -5.0636115074157715
    6. '"' → logprob: -5.0636115074157715
    7. 't' → logprob: -5.1886115074157715
    8. '#' → logprob: -5.3136115074157715
    9. '   ' → logprob: -5.3136115074157715
    10. ''s' → logprob: -5.3136115074157715

Token 1881: '，' (ID: 979)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7399485111236572
    2. ''' → logprob: -1.4899485111236572
    3. ''s' → logprob: -2.8649485111236572
    4. 'y' → logprob: -3.3649485111236572
    5. ' '' → logprob: -3.6149485111236572
    6. '"' → logprob: -4.114948272705078
    7. '続' → logprob: -4.364948272705078
    8. '続きを' → logprob: -4.364948272705078
    9. 'す' → logprob: -4.614948272705078
    10. ''y' → logprob: -4.614948272705078

Token 1882: 'これ' (ID: 54459)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15235254168510437
    2. ')' → logprob: -3.1523525714874268
    3. 'n' → logprob: -4.027352333068848
    4. '"' → logprob: -4.152352333068848
    5. ' ' → logprob: -4.277352333068848
    6. '_' → logprob: -4.527352333068848
    7. ' '' → logprob: -5.152352333068848
    8. ''s' → logprob: -5.152352333068848
    9. 'm' → logprob: -5.652352333068848
    10. '
' → logprob: -5.777352333068848

Token 1883: 'ら' (ID: 8870)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1787809431552887
    2. '"' → logprob: -3.553781032562256
    3. '#' → logprob: -3.553781032562256
    4. ')' → logprob: -3.678781032562256
    5. ''''' → logprob: -4.428781032562256
    6. 'def' → logprob: -4.553781032562256
    7. '')' → logprob: -4.553781032562256
    8. '[' → logprob: -5.303781032562256
    9. ']' → logprob: -5.678781032562256
    10. 's' → logprob: -5.678781032562256

Token 1884: 'に' (ID: 5280)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15747776627540588
    2. 'の' → logprob: -3.782477855682373
    3. '')' → logprob: -4.032477855682373
    4. ')' → logprob: -4.032477855682373
    5. 'が' → logprob: -4.532477855682373
    6. 'は' → logprob: -5.032477855682373
    7. '"' → logprob: -5.032477855682373
    8. ''s' → logprob: -5.032477855682373
    9. ''''' → logprob: -5.282477855682373
    10. 'を' → logprob: -5.532477855682373

Token 1885: '「' (ID: 6055)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6921494007110596
    2. 'y' → logprob: -2.0671494007110596
    3. ''y' → logprob: -2.1921494007110596
    4. 'm' → logprob: -3.0671494007110596
    5. ''s' → logprob: -3.3171494007110596
    6. ' y' → logprob: -3.4421494007110596
    7. 's' → logprob: -3.9421494007110596
    8. '"' → logprob: -4.1921491622924805
    9. '続' → logprob: -4.1921491622924805
    10. ')' → logprob: -4.4421491622924805

Token 1886: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7736945748329163
    2. ''' → logprob: -1.7736945152282715
    3. ''y' → logprob: -2.3986945152282715
    4. 'ゃ' → logprob: -2.5236945152282715
    5. 'ゅ' → logprob: -3.1486945152282715
    6. 'よ' → logprob: -3.3986945152282715
    7. 'ょ' → logprob: -3.5236945152282715
    8. 'っ' → logprob: -3.7736945152282715
    9. 'ゆ' → logprob: -4.1486945152282715
    10. '"' → logprob: -4.1486945152282715

Token 1887: '」が' (ID: 124225)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14076530933380127
    2. '"' → logprob: -2.3907651901245117
    3. '")' → logprob: -3.5157651901245117
    4. ''"' → logprob: -5.890765190124512
    5. 'u' → logprob: -6.140765190124512
    6. 'o' → logprob: -6.515765190124512
    7. '')' → logprob: -7.765765190124512
    8. 'y' → logprob: -8.015765190124512
    9. ''''' → logprob: -8.140765190124512
    10. '"),' → logprob: -8.515765190124512

Token 1888: '続' (ID: 47554)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9084941148757935
    2. 'よ' → logprob: -1.7834941148757935
    3. 'つ' → logprob: -1.9084941148757935
    4. '続' → logprob: -2.033493995666504
    5. '"' → logprob: -3.158493995666504
    6. '')' → logprob: -3.783493995666504
    7. ''''' → logprob: -4.283493995666504
    8. ')' → logprob: -4.283493995666504
    9. '")' → logprob: -5.033493995666504
    10. '''' → logprob: -5.283493995666504

Token 1889: 'いた' (ID: 98451)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22884692251682281
    2. '')' → logprob: -2.353847026824951
    3. 'u' → logprob: -2.728847026824951
    4. ')' → logprob: -4.353847026824951
    5. 'る' → logprob: -5.228847026824951
    6. '"' → logprob: -5.603847026824951
    7. 'ゃ' → logprob: -5.853847026824951
    8. '")' → logprob: -6.103847026824951
    9. ''''' → logprob: -6.103847026824951
    10. 'が' → logprob: -6.353847026824951

Token 1890: 'もの' (ID: 122636)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0816422700881958
    2. '"' → logprob: -4.331642150878906
    3. ''}' → logprob: -4.331642150878906
    4. '')' → logprob: -4.581642150878906
    5. 'る' → logprob: -5.581642150878906
    6. '}' → logprob: -5.831642150878906
    7. '")' → logprob: -5.956642150878906
    8. '',' → logprob: -6.331642150878906
    9. '''' → logprob: -6.331642150878906
    10. 'm' → logprob: -6.456642150878906

Token 1891: '（' (ID: 3603)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8983288407325745
    2. 'が' → logprob: -1.3983287811279297
    3. '"' → logprob: -1.7733287811279297
    4. 'も' → logprob: -3.3983287811279297
    5. ''''' → logprob: -4.02332878112793
    6. 'の' → logprob: -4.14832878112793
    7. ')' → logprob: -4.39832878112793
    8. 'は' → logprob: -4.64832878112793
    9. 'を' → logprob: -4.77332878112793
    10. '")' → logprob: -4.89832878112793

Token 1892: '「' (ID: 6055)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6396371722221375
    2. ''y' → logprob: -1.5146372318267822
    3. 'y' → logprob: -2.3896372318267822
    4. ''s' → logprob: -3.6396372318267822
    5. ')' → logprob: -4.014636993408203
    6. '')' → logprob: -4.014636993408203
    7. '```' → logprob: -4.889636993408203
    8. '#' → logprob: -5.014636993408203
    9. 'は' → logprob: -5.139636993408203
    10. '`' → logprob: -5.139636993408203

Token 1893: 'ky' (ID: 5781)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4618203341960907
    2. 'k' → logprob: -1.336820363998413
    3. ''' → logprob: -3.336820363998413
    4. 'ky' → logprob: -4.086820125579834
    5. 'ゃ' → logprob: -4.461820125579834
    6. 'a' → logprob: -4.711820125579834
    7. ''y' → logprob: -4.961820125579834
    8. '')' → logprob: -5.586820125579834
    9. 'yo' → logprob: -6.211820125579834
    10. '```' → logprob: -6.461820125579834

Token 1894: '」' (ID: 5252)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0007393499254249036
    2. 'u' → logprob: -7.500739574432373
    3. ''o' → logprob: -9.875739097595215
    4. ''' → logprob: -10.125739097595215
    5. '"' → logprob: -10.625739097595215
    6. '")' → logprob: -11.375739097595215
    7. 'о' → logprob: -11.625739097595215
    8. 'ō' → logprob: -11.625739097595215
    9. 'e' → logprob: -12.125739097595215
    10. 'a' → logprob: -12.125739097595215

Token 1895: 'など' (ID: 73045)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7040915489196777
    2. ')' → logprob: -1.4540915489196777
    3. '')' → logprob: -2.2040915489196777
    4. '）' → logprob: -2.9540915489196777
    5. ',' → logprob: -4.579091548919678
    6. '',' → logprob: -4.954091548919678
    7. ' and' → logprob: -4.954091548919678
    8. ''''' → logprob: -5.204091548919678
    9. 'が' → logprob: -5.204091548919678
    10. '''' → logprob: -5.329091548919678

Token 1896: '）' (ID: 3495)
  Prédit: '）'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '）' → logprob: -0.5863719582557678
    2. ')' → logprob: -1.961371898651123
    3. '')' → logprob: -2.336371898651123
    4. ''' → logprob: -2.961371898651123
    5. 'が' → logprob: -3.336371898651123
    6. '）が' → logprob: -3.711371898651123
    7. '')"' → logprob: -4.086371898651123
    8. '）は' → logprob: -4.461371898651123
    9. '")' → logprob: -4.586371898651123
    10. '）の' → logprob: -5.211371898651123

Token 1897: 'も' (ID: 8446)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.5808207988739014
    2. ':' → logprob: -1.5808207988739014
    3. ')' → logprob: -1.5808207988739014
    4. ' and' → logprob: -2.8308207988739014
    5. 'が' → logprob: -3.0808207988739014
    6. '):' → logprob: -3.4558207988739014
    7. 'and' → logprob: -3.4558207988739014
    8. '':' → logprob: -3.8308207988739014
    9. 'の' → logprob: -4.2058210372924805
    10. '==' → logprob: -4.2058210372924805

Token 1898: '便' (ID: 28808)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -1.1670023202896118
    2. ' True' → logprob: -1.2920023202896118
    3. 'True' → logprob: -1.2920023202896118
    4. '{
' → logprob: -3.5420022010803223
    5. '{'' → logprob: -4.042002201080322
    6. '```' → logprob: -4.542002201080322
    7. '
' → logprob: -4.917002201080322
    8. 'す' → logprob: -5.042002201080322
    9. '{' → logprob: -5.292002201080322
    10. 'VOICE' → logprob: -5.292002201080322

Token 1899: '宜' (ID: 67176)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.1146230697631836
    2. '
' → logprob: -1.3646230697631836
    3. 'owels' → logprob: -1.9896230697631836
    4. 'oc' → logprob: -3.2396230697631836
    5. 'l' → logprob: -3.3646230697631836
    6. '``' → logprob: -3.4896230697631836
    7. '```' → logprob: -3.8646230697631836
    8. 'owel' → logprob: -3.9896230697631836
    9. 'よ' → logprob: -4.239623069763184
    10. 'り' → logprob: -4.364623069763184

Token 1900: '的' (ID: 1616)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.65653395652771
    2. 't' → logprob: -2.03153395652771
    3. '#' → logprob: -2.28153395652771
    4. ')' → logprob: -3.03153395652771
    5. 'nt' → logprob: -3.03153395652771
    6. 'て' → logprob: -3.15653395652771
    7. 'n' → logprob: -3.28153395652771
    8. 'd' → logprob: -3.40653395652771
    9. 'し' → logprob: -3.40653395652771
    10. 'def' → logprob: -3.90653395652771

Token 1901: 'に' (ID: 5280)
  Prédit: 'よ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'よ' → logprob: -1.2849023342132568
    2. '_' → logprob: -1.6599023342132568
    3. 'に' → logprob: -1.6599023342132568
    4. 'は' → logprob: -1.9099023342132568
    5. 'として' → logprob: -3.159902334213257
    6. 'と' → logprob: -3.409902334213257
    7. 'を' → logprob: -4.534902572631836
    8. 'も' → logprob: -4.784902572631836
    9. 'が' → logprob: -4.909902572631836
    10. 'で' → logprob: -5.034902572631836

Token 1902: '無' (ID: 10205)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.26451271772384644
    2. '#' → logprob: -1.5145127773284912
    3. 'VO' → logprob: -6.139512538909912
    4. '```' → logprob: -6.139512538909912
    5. ''' → logprob: -6.389512538909912
    6. '"' → logprob: -7.014512538909912
    7. 'は' → logprob: -7.264512538909912
    8. '``' → logprob: -7.264512538909912
    9. '	vo' → logprob: -7.889512538909912
    10. '
' → logprob: -8.01451301574707

Token 1903: '声' (ID: 26968)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.7265031933784485
    2. '
' → logprob: -1.2265031337738037
    3. '```' → logprob: -2.1015031337738037
    4. '``' → logprob: -3.1015031337738037
    5. ''''
' → logprob: -4.601503372192383
    6. 'oc' → logprob: -4.851503372192383
    7. 'о' → logprob: -5.101503372192383
    8. '"""
' → logprob: -5.351503372192383
    9. 'owels' → logprob: -5.476503372192383
    10. ''' → logprob: -5.851503372192383

Token 1904: '子' (ID: 7407)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0004142264660913497
    2. '_con' → logprob: -8.50041389465332
    3. ''' → logprob: -10.37541389465332
    4. ''_' → logprob: -10.50041389465332
    5. '_'' → logprob: -10.75041389465332
    6. '_
' → logprob: -10.87541389465332
    7. '_)' → logprob: -11.12541389465332
    8. '\' → logprob: -11.37541389465332
    9. '_\' → logprob: -11.37541389465332
    10. '_
' → logprob: -12.00041389465332

Token 1905: '音' (ID: 15082)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.5282790064811707
    2. '_con' → logprob: -1.9032790660858154
    3. '音' → logprob: -2.0282790660858154
    4. ''' → logprob: -3.5282790660858154
    5. ' conson' → logprob: -4.153278827667236
    6. '}' → logprob: -4.278278827667236
    7. '_' → logprob: -4.653278827667236
    8. '```' → logprob: -4.903278827667236
    9. 's' → logprob: -5.528278827667236
    10. 'def' → logprob: -5.778278827667236

Token 1906: 'と' (ID: 5330)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -1.0293573141098022
    2. '_con' → logprob: -1.9043573141098022
    3. '_' → logprob: -2.029357433319092
    4. 'con' → logprob: -2.529357433319092
    5. ''' → logprob: -2.779357433319092
    6. '）' → logprob: -3.779357433319092
    7. ''}' → logprob: -3.904357433319092
    8. 'と' → logprob: -4.029357433319092
    9. 'の' → logprob: -4.279357433319092
    10. '```' → logprob: -4.404357433319092

Token 1907: 'み' (ID: 17897)
  Prédit: 'する'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'する' → logprob: -0.22933392226696014
    2. 'み' → logprob: -1.9793338775634766
    3. '#' → logprob: -3.4793338775634766
    4. 'して' → logprob: -4.854333877563477
    5. '```' → logprob: -4.854333877563477
    6. 'します' → logprob: -5.104333877563477
    7. 'され' → logprob: -5.229333877563477
    8. '
' → logprob: -6.229333877563477
    9. 'し' → logprob: -6.354333877563477
    10. '判断' → logprob: -6.479333877563477

Token 1908: 'な' (ID: 5784)
  Prédit: 'な'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'な' → logprob: -0.0014754603616893291
    2. 'と' → logprob: -7.8764753341674805
    3. '   ' → logprob: -8.25147533416748
    4. '       ' → logprob: -8.37647533416748
    5. '#' → logprob: -8.62647533416748
    6. '```' → logprob: -9.50147533416748
    7. 'ま' → logprob: -9.75147533416748
    8. '           ' → logprob: -9.87647533416748
    9. 'て' → logprob: -10.62647533416748
    10. 'た' → logprob: -10.62647533416748

Token 1909: 'す' (ID: 4868)
  Prédit: 'か'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'か' → logprob: -1.4127119779586792
    2. 'ん' → logprob: -2.0377120971679688
    3. 'わ' → logprob: -2.2877120971679688
    4. 'と' → logprob: -2.5377120971679688
    5. 'な' → logprob: -2.5377120971679688
    6. 'う' → logprob: -2.7877120971679688
    7. 'ま' → logprob: -3.1627120971679688
    8. 'さ' → logprob: -3.4127120971679688
    9. '```' → logprob: -3.4127120971679688
    10. 'ら' → logprob: -3.5377120971679688

Token 1910: '．' (ID: 32217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.592116117477417
    2. '(m' → logprob: -1.342116117477417
    3. 'def' → logprob: -2.467116117477417
    4. '):' → logprob: -2.842116117477417
    5. ')' → logprob: -3.842116117477417
    6. '):
' → logprob: -5.717116355895996
    7. ':' → logprob: -5.967116355895996
    8. '_' → logprob: -6.092116355895996
    9. 'm' → logprob: -6.217116355895996
    10. '"' → logprob: -6.342116355895996

Token 1911: '"
' (ID: 1092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32324278354644775
    2. ')' → logprob: -2.323242664337158
    3. 'def' → logprob: -2.948242664337158
    4. '"' → logprob: -3.823242664337158
    5. ''' → logprob: -3.948242664337158
    6. ')
' → logprob: -4.323242664337158
    7. ':
' → logprob: -4.698242664337158
    8. ''
' → logprob: -5.198242664337158
    9. ':' → logprob: -5.323242664337158
    10. 'y' → logprob: -5.323242664337158

Token 1912: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0051949783228337765
    2. ' if' → logprob: -5.880195140838623
    3. 'if' → logprob: -6.505195140838623
    4. ':' → logprob: -7.880195140838623
    5. 'def' → logprob: -8.380194664001465
    6. '
' → logprob: -9.630194664001465
    7. ':
' → logprob: -10.005194664001465
    8. '    
' → logprob: -10.380194664001465
    9. '```' → logprob: -11.130194664001465
    10. '{
' → logprob: -11.130194664001465

Token 1913: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00036049127811565995
    2. '    ' → logprob: -9.625360488891602
    3. ' return' → logprob: -9.875360488891602
    4. 'return' → logprob: -10.000360488891602
    5. ' if' → logprob: -10.250360488891602
    6. ')' → logprob: -10.625360488891602
    7. ' ' → logprob: -10.750360488891602
    8. '       ' → logprob: -10.875360488891602
    9. ':' → logprob: -11.250360488891602
    10. '    
' → logprob: -11.250360488891602

Token 1914: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04254540801048279
    2. ':' → logprob: -4.667545318603516
    3. 'def' → logprob: -4.792545318603516
    4. ' if' → logprob: -5.042545318603516
    5. 'if' → logprob: -5.667545318603516
    6. ' ' → logprob: -6.417545318603516
    7. '    ' → logprob: -6.667545318603516
    8. '       ' → logprob: -6.792545318603516
    9. ' 
' → logprob: -6.792545318603516
    10. ' return' → logprob: -6.917545318603516

Token 1915: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1431605815887451
    2. '   ' → logprob: -1.6431605815887451
    3. 'if' → logprob: -1.7681605815887451
    4. 'c' → logprob: -2.268160581588745
    5. 'return' → logprob: -2.268160581588745
    6. ' if' → logprob: -3.393160581588745
    7. 'def' → logprob: -3.518160581588745
    8. ' c' → logprob: -4.393160820007324
    9. ' return' → logprob: -4.643160820007324
    10. 'v' → logprob: -5.143160820007324

Token 1916: ' starting' (ID: 8601)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.7822113633155823
    2. '=' → logprob: -2.4072113037109375
    3. '==' → logprob: -2.6572113037109375
    4. 's' → logprob: -2.6572113037109375
    5. '[' → logprob: -2.7822113037109375
    6. 'startswith' → logprob: -3.0322113037109375
    7. '.endswith' → logprob: -3.0322113037109375
    8. 'def' → logprob: -3.6572113037109375
    9. ' =' → logprob: -3.7822113037109375
    10. 'if' → logprob: -3.9072113037109375

Token 1917: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.0002715873415581882
    2. 'if' → logprob: -8.750271797180176
    3. ' with' → logprob: -9.625271797180176
    4. '=' → logprob: -11.125271797180176
    5. 's' → logprob: -11.375271797180176
    6. '[' → logprob: -11.750271797180176
    7. 'w' → logprob: -12.625271797180176
    8. '   ' → logprob: -12.875271797180176
    9. '==' → logprob: -13.625271797180176
    10. ')' → logprob: -13.750271797180176

Token 1918: ' vo' (ID: 778)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.19866415858268738
    2. 'c' → logprob: -1.8236641883850098
    3. 'VOICE' → logprob: -4.07366418838501
    4. 'VO' → logprob: -7.44866418838501
    5. '   ' → logprob: -8.448663711547852
    6. ' VO' → logprob: -9.073663711547852
    7. 'if' → logprob: -9.573663711547852
    8. 'Voice' → logprob: -9.573663711547852
    9. 'vo' → logprob: -9.636163711547852
    10. 'def' → logprob: -9.636163711547852

Token 1919: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -4.572941179503687e-05
    2. 'cel' → logprob: -10.625045776367188
    3. 'icelo' → logprob: -11.875045776367188
    4. '```' → logprob: -12.750045776367188
    5. 'ice' → logprob: -13.375045776367188
    6. 'iced' → logprob: -13.750045776367188
    7. '``' → logprob: -13.875045776367188
    8. '`' → logprob: -13.875045776367188
    9. ''' → logprob: -14.250045776367188
    10. '#' → logprob: -14.375045776367188

Token 1920: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.0011262869229540229
    2. 'less' → logprob: -6.876126289367676
    3. 'el' → logprob: -9.376126289367676
    4. 'e' → logprob: -13.376126289367676
    5. 'ele' → logprob: -13.626126289367676
    6. '```' → logprob: -13.626126289367676
    7. '
' → logprob: -14.501126289367676
    8. 'else' → logprob: -14.626126289367676
    9. 'ueless' → logprob: -14.751126289367676
    10. 'els' → logprob: -14.751126289367676

Token 1921: ' conson' (ID: 127767)
  Prédit: '_con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.5794880390167236
    2. 'c' → logprob: -2.0794880390167236
    3. 'con' → logprob: -2.4544880390167236
    4. 'if' → logprob: -2.5794880390167236
    5. 'm' → logprob: -2.7044880390167236
    6. '_c' → logprob: -3.5794880390167236
    7. '_' → logprob: -3.8294880390167236
    8. '_m' → logprob: -4.3294878005981445
    9. '   ' → logprob: -4.7044878005981445
    10. 's' → logprob: -5.2044878005981445

Token 1922: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.012013894505798817
    2. 't' → logprob: -5.012013912200928
    3. 'ants' → logprob: -5.262013912200928
    4. 'a' → logprob: -10.38701343536377
    5. '
' → logprob: -10.63701343536377
    6. 'nt' → logprob: -11.01201343536377
    7. 'tant' → logprob: -12.01201343536377
    8. 'at' → logprob: -12.38701343536377
    9. 's' → logprob: -12.76201343536377
    10. 'antd' → logprob: -13.38701343536377

Token 1923: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2380937784910202
    2. ' =' → logprob: -2.238093852996826
    3. 'if' → logprob: -3.613093852996826
    4. '   ' → logprob: -3.988093852996826
    5. '=' → logprob: -4.238093852996826
    6. ':
' → logprob: -4.863093852996826
    7. ':' → logprob: -4.988093852996826
    8. ' and' → logprob: -5.488093852996826
    9. ' if' → logprob: -5.488093852996826
    10. 's' → logprob: -5.738093852996826

Token 1924: ' then' (ID: 1815)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.7434293627738953
    2. 'len' → logprob: -0.8684293627738953
    3. 'm' → logprob: -2.86842942237854
    4. '(m' → logprob: -3.49342942237854
    5. '('' → logprob: -5.118429183959961
    6. ' (' → logprob: -5.868429183959961
    7. 'y' → logprob: -5.993429183959961
    8. '(' → logprob: -6.118429183959961
    9. ' len' → logprob: -6.493429183959961
    10. ''' → logprob: -6.868429183959961

Token 1925: ' '' (ID: 461)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.43456241488456726
    2. ''y' → logprob: -1.5595624446868896
    3. ''' → logprob: -2.4345624446868896
    4. 'm' → logprob: -3.4345624446868896
    5. 'len' → logprob: -4.9345622062683105
    6. ''m' → logprob: -4.9345622062683105
    7. '('' → logprob: -6.0595622062683105
    8. ' y' → logprob: -6.4345622062683105
    9. '(y' → logprob: -7.3095622062683105
    10. '(m' → logprob: -7.5595622062683105

Token 1926: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0018830618355423212
    2. ''y' → logprob: -6.626883029937744
    3. ' y' → logprob: -7.626883029937744
    4. ''' → logprob: -10.001883506774902
    5. 'y's' → logprob: -11.376883506774902
    6. '‘y' → logprob: -11.376883506774902
    7. ' '' → logprob: -14.751883506774902
    8. '	y' → logprob: -14.876883506774902
    9. ''s' → logprob: -15.251883506774902
    10. 'ym' → logprob: -15.876883506774902

Token 1927: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4507507383823395
    2. 'and' → logprob: -1.325750708580017
    3. ''' → logprob: -3.4507508277893066
    4. ')' → logprob: -4.200750827789307
    5. ' ' → logprob: -4.200750827789307
    6. '[' → logprob: -4.450750827789307
    7. ' ==' → logprob: -5.200750827789307
    8. '')' → logprob: -5.825750827789307
    9. ':' → logprob: -6.200750827789307
    10. '==' → logprob: -6.575750827789307

Token 1928: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021210746839642525
    2. 'def' → logprob: -4.146210670471191
    3. ':
' → logprob: -7.021210670471191
    4. 'm' → logprob: -7.146210670471191
    5. 'if' → logprob: -7.271210670471191
    6. ' =' → logprob: -7.271210670471191
    7. '[' → logprob: -7.521210670471191
    8. ':' → logprob: -7.521210670471191
    9. '(' → logprob: -8.521210670471191
    10. '(m' → logprob: -8.646210670471191

Token 1929: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45465925335884094
    2. 'if' → logprob: -1.5796592235565186
    3. 'def' → logprob: -2.9546592235565186
    4. ':
' → logprob: -3.3296592235565186
    5. ' if' → logprob: -3.7046592235565186
    6. ':' → logprob: -3.9546592235565186
    7. 'c' → logprob: -4.704659461975098
    8. 'm' → logprob: -5.204659461975098
    9. '
' → logprob: -5.954659461975098
    10. '[' → logprob: -6.079659461975098

Token 1930: ' vo' (ID: 778)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.004623918328434229
    2. ' True' → logprob: -5.379623889923096
    3. 'False' → logprob: -13.754624366760254
    4. 'true' → logprob: -14.004624366760254
    5. '   ' → logprob: -14.879624366760254
    6. 'vo' → logprob: -15.129624366760254
    7. ' ' → logprob: -15.254624366760254
    8. 'y' → logprob: -15.879624366760254
    9. '
' → logprob: -16.129623413085938
    10. '	' → logprob: -16.129623413085938

Token 1931: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.011363397352397442
    2. 'i' → logprob: -4.636363506317139
    3. 'icelo' → logprob: -7.761363506317139
    4. '```' → logprob: -7.886363506317139
    5. '``' → logprob: -9.26136302947998
    6. '#' → logprob: -9.26136302947998
    7. 'icemail' → logprob: -9.38636302947998
    8. 'ice' → logprob: -9.63636302947998
    9. '`' → logprob: -10.01136302947998
    10. '\' → logprob: -10.19886302947998

Token 1932: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.0015087933279573917
    2. 'el' → logprob: -7.251508712768555
    3. 'less' → logprob: -8.001508712768555
    4. 'ele' → logprob: -9.001508712768555
    5. 'ic' → logprob: -9.376508712768555
    6. 'cel' → logprob: -9.626508712768555
    7. 'e' → logprob: -9.876508712768555
    8. 'le' → logprob: -10.501508712768555
    9. 'ed' → logprob: -10.876508712768555
    10. '
' → logprob: -11.376508712768555

Token 1933: ' conson' (ID: 127767)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7248664498329163
    2. 'if' → logprob: -0.8498664498329163
    3. 'c' → logprob: -3.2248663902282715
    4. 'm' → logprob: -3.7248663902282715
    5. 'def' → logprob: -4.2248663902282715
    6. ' if' → logprob: -5.5998663902282715
    7. '
' → logprob: -5.7248663902282715
    8. 'return' → logprob: -6.9748663902282715
    9. 'v' → logprob: -8.59986686706543
    10. 'for' → logprob: -8.59986686706543

Token 1934: 'ant' (ID: 493)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.007995779626071453
    2. 'ant' → logprob: -4.88299560546875
    3. 'a' → logprob: -9.00799560546875
    4. '   ' → logprob: -9.63299560546875
    5. '
' → logprob: -10.13299560546875
    6. ' t' → logprob: -10.25799560546875
    7. 'nt' → logprob: -10.38299560546875
    8. 'tant' → logprob: -10.63299560546875
    9. ')t' → logprob: -11.13299560546875
    10. 'ants' → logprob: -11.63299560546875

Token 1935: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04442553594708443
    2. 'if' → logprob: -3.2944254875183105
    3. ' if' → logprob: -5.7944254875183105
    4. 'c' → logprob: -6.7944254875183105
    5. 'm' → logprob: -7.4194254875183105
    6. ':' → logprob: -7.4194254875183105
    7. ':
' → logprob: -8.169425964355469
    8. '
' → logprob: -8.294425964355469
    9. 'def' → logprob: -9.794425964355469
    10. 'v' → logprob: -10.044425964355469

Token 1936: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4773443341255188
    2. '   ' → logprob: -1.227344274520874
    3. '(' → logprob: -3.727344274520874
    4. '
' → logprob: -3.977344274520874
    5. ':
' → logprob: -4.727344512939453
    6. ' ' → logprob: -4.727344512939453
    7. 'def' → logprob: -5.102344512939453
    8. 'if' → logprob: -5.352344512939453
    9. ' if' → logprob: -6.477344512939453
    10. '(
' → logprob: -6.602344512939453

Token 1937: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19675271213054657
    2. ':' → logprob: -2.1967527866363525
    3. 'if' → logprob: -3.4467527866363525
    4. ' if' → logprob: -4.071752548217773
    5. ':
' → logprob: -5.821752548217773
    6. '
' → logprob: -5.946752548217773
    7. 'c' → logprob: -6.196752548217773
    8. ' ' → logprob: -6.196752548217773
    9. 't' → logprob: -6.946752548217773
    10. 'i' → logprob: -6.946752548217773

Token 1938: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.586455225944519
    2. '   ' → logprob: -1.211455225944519
    3. 'm' → logprob: -2.4614553451538086
    4. ' if' → logprob: -3.7114553451538086
    5. 'c' → logprob: -4.086455345153809
    6. 'def' → logprob: -4.336455345153809
    7. ':
' → logprob: -6.336455345153809
    8. ':' → logprob: -6.461455345153809
    9. 'i' → logprob: -7.836455345153809
    10. '
' → logprob: -7.961455345153809

Token 1939: ' if' (ID: 538)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.090095154941082
    2. 'len' → logprob: -2.590095043182373
    3. 'False' → logprob: -5.465095043182373
    4. 'True' → logprob: -5.840095043182373
    5. '(m' → logprob: -6.840095043182373
    6. '   ' → logprob: -7.465095043182373
    7. 'if' → logprob: -7.590095043182373
    8. 'bool' → logprob: -7.590095043182373
    9. '(len' → logprob: -7.840095043182373
    10. ' len' → logprob: -9.340095520019531

Token 1940: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6402580738067627
    2. 'len' → logprob: -0.7652580738067627
    3. ' len' → logprob: -5.015257835388184
    4. ' mora' → logprob: -7.765257835388184
    5. '(len' → logprob: -8.390257835388184
    6. ' m' → logprob: -9.265257835388184
    7. ' ' → logprob: -9.765257835388184
    8. '   ' → logprob: -10.015257835388184
    9. 'mor' → logprob: -10.515257835388184
    10. '(m' → logprob: -10.890257835388184

Token 1941: ' starts' (ID: 13217)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3583396673202515
    2. '.startswith' → logprob: -1.7333396673202515
    3. ' =' → logprob: -2.358339786529541
    4. '[' → logprob: -2.358339786529541
    5. 'startswith' → logprob: -2.358339786529541
    6. 'if' → logprob: -2.358339786529541
    7. 'and' → logprob: -3.108339786529541
    8. 'len' → logprob: -3.733339786529541
    9. 'def' → logprob: -4.233339786529541
    10. ':' → logprob: -4.233339786529541

Token 1942: ' with' (ID: 483)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.2632237672805786
    2. 'with' → logprob: -1.2632237672805786
    3. '   ' → logprob: -2.138223648071289
    4. '(m' → logprob: -2.138223648071289
    5. '=' → logprob: -2.638223648071289
    6. 'if' → logprob: -3.138223648071289
    7. ' =' → logprob: -3.763223648071289
    8. 's' → logprob: -4.638223648071289
    9. ':' → logprob: -4.763223648071289
    10. '=m' → logprob: -4.888223648071289

Token 1943: ' vo' (ID: 778)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0001158211671281606
    2. ' m' → logprob: -9.875115394592285
    3. 'len' → logprob: -11.250115394592285
    4. '(m' → logprob: -11.375115394592285
    5. ' VO' → logprob: -11.875115394592285
    6. 'VOICE' → logprob: -12.125115394592285
    7. ' ' → logprob: -12.375115394592285
    8. 'VO' → logprob: -12.375115394592285
    9. '   ' → logprob: -12.750115394592285
    10. 'vo' → logprob: -12.750115394592285

Token 1944: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.00041732576210051775
    2. 'icelo' → logprob: -8.625417709350586
    3. 'cel' → logprob: -10.000417709350586
    4. '```' → logprob: -10.500417709350586
    5. 'ice' → logprob: -10.625417709350586
    6. 'icemail' → logprob: -11.250417709350586
    7. 'icle' → logprob: -11.500417709350586
    8. ''' → logprob: -11.500417709350586
    9. 'iced' → logprob: -11.625417709350586
    10. '``' → logprob: -11.625417709350586

Token 1945: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -6.24179228907451e-05
    2. 'e' → logprob: -10.625061988830566
    3. 'el' → logprob: -11.000061988830566
    4. 'ele' → logprob: -11.250061988830566
    5. 'less' → logprob: -11.875061988830566
    6. 'eles' → logprob: -15.500061988830566
    7. 'veless' → logprob: -15.500061988830566
    8. 'ueless' → logprob: -15.625061988830566
    9. 'ess' → logprob: -15.875061988830566
    10. 'ic' → logprob: -15.875061988830566

Token 1946: ' conson' (ID: 127767)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8379025459289551
    2. '_con' → logprob: -1.462902545928955
    3. '_' → logprob: -2.462902545928955
    4. 'if' → logprob: -2.712902545928955
    5. 'con' → logprob: -2.837902545928955
    6. '(m' → logprob: -3.212902545928955
    7. 's' → logprob: -3.837902545928955
    8. 'c' → logprob: -4.087902545928955
    9. ')' → logprob: -4.337902545928955
    10. '_m' → logprob: -5.337902545928955

Token 1947: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.2683059275150299
    2. 't' → logprob: -1.7683058977127075
    3. 'a' → logprob: -3.393306016921997
    4. 'ants' → logprob: -3.643306016921997
    5. 'nt' → logprob: -6.143305778503418
    6. 'tant' → logprob: -7.393305778503418
    7. 'ts' → logprob: -7.893305778503418
    8. 's' → logprob: -8.143305778503418
    9. '{' → logprob: -8.518305778503418
    10. 'st' → logprob: -8.768305778503418

Token 1948: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5577371120452881
    2. 'if' → logprob: -0.9327371120452881
    3. ' if' → logprob: -4.307737350463867
    4. ' and' → logprob: -5.307737350463867
    5. 'and' → logprob: -5.557737350463867
    6. 'def' → logprob: -5.557737350463867
    7. 'm' → logprob: -5.682737350463867
    8. 'c' → logprob: -6.432737350463867
    9. ':' → logprob: -7.182737350463867
    10. ':
' → logprob: -7.307737350463867

Token 1949: ' second' (ID: 3099)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.7285593152046204
    2. 'len' → logprob: -0.9785593152046204
    3. 'm' → logprob: -2.7285592555999756
    4. '(m' → logprob: -2.9785592555999756
    5. '('' → logprob: -4.603559494018555
    6. ' (' → logprob: -5.353559494018555
    7. ''' → logprob: -5.853559494018555
    8. '(' → logprob: -6.103559494018555
    9. ' len' → logprob: -6.228559494018555
    10. 'y' → logprob: -6.603559494018555

Token 1950: ' char' (ID: 1826)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.18177330493927
    2. '=' → logprob: -1.43177330493927
    3. 'if' → logprob: -1.80677330493927
    4. 'len' → logprob: -2.8067731857299805
    5. 's' → logprob: -3.5567731857299805
    6. 'm' → logprob: -3.8067731857299805
    7. '_' → logprob: -3.8067731857299805
    8. ' ' → logprob: -3.9317731857299805
    9. '=len' → logprob: -4.3067731857299805
    10. 'char' → logprob: -4.5567731857299805

Token 1951: ' is' (ID: 382)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1389873027801514
    2. '==' → logprob: -1.7639873027801514
    3. ' =' → logprob: -2.0139873027801514
    4. '=' → logprob: -2.6389873027801514
    5. ' if' → logprob: -2.6389873027801514
    6. ' ==' → logprob: -3.1389873027801514
    7. ':' → logprob: -3.3889873027801514
    8. 's' → logprob: -4.0139875411987305
    9. ' ' → logprob: -4.1389875411987305
    10. '0' → logprob: -4.1389875411987305

Token 1952: ' '' (ID: 461)
  Prédit: ''y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -0.0003660938236862421
    2. '‘y' → logprob: -8.0003662109375
    3. ''' → logprob: -10.7503662109375
    4. 'y' → logprob: -12.0003662109375
    5. ' '' → logprob: -13.0003662109375
    6. ''s' → logprob: -15.5003662109375
    7. '"' → logprob: -15.8753662109375
    8. ''a' → logprob: -16.0003662109375
    9. '`' → logprob: -16.2503662109375
    10. ' y' → logprob: -16.5003662109375

Token 1953: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38715776801109314
    2. ''y' → logprob: -1.1371577978134155
    3. '‘y' → logprob: -8.637157440185547
    4. ''' → logprob: -9.262157440185547
    5. ' y' → logprob: -11.762157440185547
    6. 'y's' → logprob: -12.012157440185547
    7. '’y' → logprob: -15.512157440185547
    8. ' '' → logprob: -15.637157440185547
    9. '	y' → logprob: -15.762157440185547
    10. ''s' → logprob: -16.762157440185547

Token 1954: ''
' (ID: 2207)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.49380049109458923
    2. '   ' → logprob: -1.1188005208969116
    3. 'and' → logprob: -3.243800401687622
    4. ' if' → logprob: -4.868800640106201
    5. ':
' → logprob: -4.993800640106201
    6. 'if' → logprob: -5.493800640106201
    7. '[' → logprob: -5.743800640106201
    8. ':' → logprob: -7.493800640106201
    9. ' ' → logprob: -7.743800640106201
    10. '0' → logprob: -8.493800163269043

Token 1955: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09934604167938232
    2. 'if' → logprob: -2.849346160888672
    3. ':' → logprob: -3.599346160888672
    4. ':
' → logprob: -5.474346160888672
    5. ' if' → logprob: -5.724346160888672
    6. 'and' → logprob: -7.474346160888672
    7. ' and' → logprob: -7.599346160888672
    8. '
' → logprob: -9.099346160888672
    9. '[' → logprob: -9.224346160888672
    10. ' ' → logprob: -9.474346160888672

Token 1956: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4503593146800995
    2. '   ' → logprob: -1.0753593444824219
    3. ' if' → logprob: -3.950359344482422
    4. 'm' → logprob: -6.450359344482422
    5. ':' → logprob: -7.950359344482422
    6. ' ' → logprob: -9.700359344482422
    7. 'i' → logprob: -10.200359344482422
    8. ':
' → logprob: -10.325359344482422
    9. '	if' → logprob: -10.700359344482422
    10. '
' → logprob: -10.825359344482422

Token 1957: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.023735474795103073
    2. 'm' → logprob: -4.398735523223877
    3. ' len' → logprob: -4.523735523223877
    4. '(len' → logprob: -8.398735046386719
    5. ' mora' → logprob: -10.398735046386719
    6. ' ' → logprob: -10.773735046386719
    7. '   ' → logprob: -11.523735046386719
    8. '  ' → logprob: -12.273735046386719
    9. '	len' → logprob: -12.523735046386719
    10. '(' → logprob: -12.523735046386719

Token 1958: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0002614550176076591
    2. 'm' → logprob: -8.250261306762695
    3. '[m' → logprob: -16.750261306762695
    4. '(' → logprob: -16.875261306762695
    5. ')m' → logprob: -17.625261306762695
    6. '	m' → logprob: -18.250261306762695
    7. '=m' → logprob: -18.250261306762695
    8. '<m' → logprob: -18.500261306762695
    9. 'mo' → logprob: -19.000261306762695
    10. '   ' → logprob: -19.875261306762695

Token 1959: 'ora' (ID: 2505)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4797888398170471
    2. 'ora' → logprob: -0.9797888398170471
    3. '(m' → logprob: -5.479788780212402
    4. '>' → logprob: -7.354788780212402
    5. ')m' → logprob: -8.479788780212402
    6. 'or' → logprob: -8.979788780212402
    7. '<m' → logprob: -8.979788780212402
    8. ')' → logprob: -9.104788780212402
    9. '[m' → logprob: -9.604788780212402
    10. '>=' → logprob: -9.979788780212402

Token 1960: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06281471997499466
    2. '>' → logprob: -3.187814712524414
    3. ')>' → logprob: -4.562814712524414
    4. ')>=' → logprob: -4.812814712524414
    5. '>=' → logprob: -7.062814712524414
    6. '[' → logprob: -9.562814712524414
    7. ' >' → logprob: -10.187814712524414
    8. ']>=' → logprob: -10.812814712524414
    9. ' >=' → logprob: -10.937814712524414
    10. '   ' → logprob: -11.187814712524414

Token 1961: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7202042937278748
    2. '>=' → logprob: -0.7202042937278748
    3. ' >=' → logprob: -3.7202043533325195
    4. ' >' → logprob: -6.0952043533325195
    5. '<' → logprob: -8.97020435333252
    6. ')>=' → logprob: -10.22020435333252
    7. '==' → logprob: -10.97020435333252
    8. ')' → logprob: -12.09520435333252
    9. '   ' → logprob: -12.09520435333252
    10. '[' → logprob: -12.47020435333252

Token 1962: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008228530059568584
    2. '3' → logprob: -7.250823020935059
    3. ' ' → logprob: -9.125823020935059
    4. '1' → logprob: -13.250823020935059
    5. '   ' → logprob: -13.250823020935059
    6. '```' → logprob: -15.125823020935059
    7. '  ' → logprob: -15.750823020935059
    8. '
' → logprob: -17.250822067260742
    9. '=' → logprob: -18.375822067260742
    10. '(' → logprob: -18.500822067260742

Token 1963: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.204720582696609e-05
    2. '3' → logprob: -10.000052452087402
    3. '1' → logprob: -12.625052452087402
    4. ' ' → logprob: -12.750052452087402
    5. '   ' → logprob: -15.375052452087402
    6. '```' → logprob: -15.625052452087402
    7. '(' → logprob: -18.250051498413086
    8. '２' → logprob: -18.250051498413086
    9. '`' → logprob: -18.312551498413086
    10. '  ' → logprob: -18.375051498413086

Token 1964: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6335027813911438
    2. 'and' → logprob: -0.7585027813911438
    3. '   ' → logprob: -7.758502960205078
    4. '	and' → logprob: -8.383502960205078
    5. ':' → logprob: -8.633502960205078
    6. ':
' → logprob: -10.133502960205078
    7. '==' → logprob: -11.883502960205078
    8. '[' → logprob: -12.258502960205078
    9. ' ' → logprob: -12.508502960205078
    10. '    ' → logprob: -13.258502960205078

Token 1965: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.200166469876422e-06
    2. ' mora' → logprob: -12.500004768371582
    3. '   ' → logprob: -14.250004768371582
    4. '(m' → logprob: -14.750004768371582
    5. '	m' → logprob: -15.875004768371582
    6. ' ' → logprob: -16.0000057220459
    7. 'mor' → logprob: -17.8750057220459
    8. ' m' → logprob: -18.1250057220459
    9. '  ' → logprob: -18.1250057220459
    10. '    ' → logprob: -18.3750057220459

Token 1966: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.5861724831629544e-05
    2. '0' → logprob: -10.375056266784668
    3. ' [' → logprob: -11.500056266784668
    4. '[:' → logprob: -12.625056266784668
    5. 'and' → logprob: -12.625056266784668
    6. '.startswith' → logprob: -13.000056266784668
    7. '```' → logprob: -13.375056266784668
    8. '   ' → logprob: -13.500056266784668
    9. ' and' → logprob: -14.250056266784668
    10. ''[' → logprob: -15.000056266784668

Token 1967: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6326682567596436
    2. '0' → logprob: -0.7576682567596436
    3. ' ' → logprob: -10.257668495178223
    4. '[' → logprob: -10.757668495178223
    5. '```' → logprob: -12.632668495178223
    6. '
' → logprob: -13.007668495178223
    7. '#' → logprob: -13.257668495178223
    8. '   ' → logprob: -13.757668495178223
    9. 'is' → logprob: -14.945168495178223
    10. ']' → logprob: -15.070168495178223

Token 1968: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9135332703590393
    2. ']' → logprob: -1.2885332107543945
    3. 'in' → logprob: -1.4135332107543945
    4. ')' → logprob: -3.2885332107543945
    5. '==' → logprob: -4.4135332107543945
    6. ']==' → logprob: -4.4135332107543945
    7. ']=='' → logprob: -4.7885332107543945
    8. ' ==' → logprob: -5.4135332107543945
    9. '=='' → logprob: -6.2885332107543945
    10. ' ]' → logprob: -6.9135332107543945

Token 1969: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3886435031890869
    2. 'in' → logprob: -1.138643503189087
    3. '==' → logprob: -7.013643264770508
    4. ' ==' → logprob: -7.388643264770508
    5. ' ' → logprob: -8.763643264770508
    6. ')' → logprob: -11.138643264770508
    7. '=='' → logprob: -11.513643264770508
    8. '  ' → logprob: -11.763643264770508
    9. 'i' → logprob: -11.763643264770508
    10. ''' → logprob: -11.888643264770508

Token 1970: ' VO' (ID: 39292)
  Prédit: 'VOICE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VOICE' → logprob: -4.429896944202483e-05
    2. 'VO' → logprob: -10.750043869018555
    3. '`' → logprob: -12.000043869018555
    4. ''' → logprob: -12.125043869018555
    5. ' VO' → logprob: -12.250043869018555
    6. 'OICE' → logprob: -13.000043869018555
    7. '"' → logprob: -13.125043869018555
    8. 'Voice' → logprob: -14.250043869018555
    9. '```' → logprob: -14.750043869018555
    10. '{' → logprob: -15.250043869018555

Token 1971: 'ICE' (ID: 9468)
  Prédit: 'OICE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OICE' → logprob: -0.0010312614031136036
    2. 'ICE' → logprob: -7.626031398773193
    3. 'O' → logprob: -8.251030921936035
    4. 'VOICE' → logprob: -8.251030921936035
    5. 'ICLE' → logprob: -11.876030921936035
    6. 'ICEF' → logprob: -12.501030921936035
    7. '```' → logprob: -13.376030921936035
    8. '
' → logprob: -13.751030921936035
    9. 'IO' → logprob: -13.876030921936035
    10. '"' → logprob: -14.001030921936035

Token 1972: 'LESS' (ID: 65453)
  Prédit: 'LESS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LESS' → logprob: -0.00017314712749794126
    2. 'less' → logprob: -10.000173568725586
    3. 'CE' → logprob: -10.000173568725586
    4. 'E' → logprob: -10.125173568725586
    5. 'VOICE' → logprob: -12.000173568725586
    6. 'LE' → logprob: -12.375173568725586
    7. '```' → logprob: -12.750173568725586
    8. '[' → logprob: -13.125173568725586
    9. 'CLE' → logprob: -13.125173568725586
    10. 'ACE' → logprob: -13.250173568725586

Token 1973: '_CON' (ID: 8877)
  Prédit: '_CON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CON' → logprob: -0.00020711649267468601
    2. 'CON' → logprob: -8.62520694732666
    3. '{'' → logprob: -11.25020694732666
    4. '_con' → logprob: -11.87520694732666
    5. ''_' → logprob: -12.87520694732666
    6. '{' → logprob: -14.00020694732666
    7. '   ' → logprob: -14.25020694732666
    8. '_' → logprob: -14.25020694732666
    9. ' ' → logprob: -15.25020694732666
    10. '\' → logprob: -15.37520694732666

Token 1974: 'SON' (ID: 4214)
  Prédit: 'SON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SON' → logprob: -0.0034642943646758795
    2. 'S' → logprob: -6.128464221954346
    3. 'ONS' → logprob: -7.253464221954346
    4. 'ANTS' → logprob: -8.378464698791504
    5. 'ON' → logprob: -8.878464698791504
    6. 'STANT' → logprob: -9.878464698791504
    7. 'son' → logprob: -10.878464698791504
    8. 'ST' → logprob: -11.003464698791504
    9. 'TS' → logprob: -11.128464698791504
    10. 'ALS' → logprob: -11.253464698791504

Token 1975: 'ANTS' (ID: 96531)
  Prédit: 'ANTS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANTS' → logprob: -0.00010366239439463243
    2. 'N' → logprob: -10.500103950500488
    3. 'ants' → logprob: -10.750103950500488
    4. 'TS' → logprob: -11.125103950500488
    5. '{' → logprob: -11.250103950500488
    6. '_' → logprob: -11.750103950500488
    7. 'T' → logprob: -11.750103950500488
    8. '\' → logprob: -13.000103950500488
    9. '...' → logprob: -13.625103950500488
    10. '
' → logprob: -14.000103950500488

Token 1976: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6931715607643127
    2. 'and' → logprob: -0.6931715607643127
    3. '	and' → logprob: -11.318171501159668
    4. '   ' → logprob: -11.443171501159668
    5. '    ' → logprob: -14.818171501159668
    6. ' ' → logprob: -14.818171501159668
    7. '       ' → logprob: -15.193171501159668
    8. '  ' → logprob: -15.693171501159668
    9. '      ' → logprob: -15.943171501159668
    10. '     ' → logprob: -17.193172454833984

Token 1977: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.7835754988482222e-05
    2. ' mora' → logprob: -11.000018119812012
    3. '   ' → logprob: -14.875018119812012
    4. 'mor' → logprob: -15.375018119812012
    5. '	m' → logprob: -15.625018119812012
    6. ' ' → logprob: -16.125017166137695
    7. '(m' → logprob: -16.500017166137695
    8. '  ' → logprob: -17.250017166137695
    9. ' Mora' → logprob: -17.625017166137695
    10. '
' → logprob: -17.875017166137695

Token 1978: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004062434600200504
    2. '1' → logprob: -7.875406265258789
    3. 'and' → logprob: -12.000406265258789
    4. '
' → logprob: -12.125406265258789
    5. '```' → logprob: -12.625406265258789
    6. '==' → logprob: -12.750406265258789
    7. ' [' → logprob: -12.875406265258789
    8. '[
' → logprob: -13.625406265258789
    9. ')' → logprob: -14.375406265258789
    10. '   ' → logprob: -14.375406265258789

Token 1979: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '[' → logprob: -17.0
    4. ']' → logprob: -17.375
    5. '   ' → logprob: -17.75
    6. ')' → logprob: -19.0
    7. '```' → logprob: -19.0
    8. ':' → logprob: -19.1875
    9. '１' → logprob: -19.5
    10. '{' → logprob: -19.625

Token 1980: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.33493342995643616
    2. ' ==' → logprob: -1.4599334001541138
    3. ']' → logprob: -3.5849335193634033
    4. ']==' → logprob: -3.9599335193634033
    5. '=='' → logprob: -5.334933280944824
    6. ']=='' → logprob: -7.959933280944824
    7. ''' → logprob: -8.459933280944824
    8. '=' → logprob: -10.209933280944824
    9. '==
' → logprob: -10.459933280944824
    10. ' =='' → logprob: -10.709933280944824

Token 1981: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02851298078894615
    2. '=='' → logprob: -4.278512954711914
    3. ' ==' → logprob: -4.278512954711914
    4. '=' → logprob: -8.028512954711914
    5. 'y' → logprob: -11.028512954711914
    6. '==
' → logprob: -11.028512954711914
    7. ''' → logprob: -11.403512954711914
    8. ' =='' → logprob: -11.903512954711914
    9. '=="' → logprob: -12.653512954711914
    10. '='' → logprob: -12.778512954711914

Token 1982: ' '' (ID: 461)
  Prédit: ''y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -3.607391408877447e-05
    2. '‘y' → logprob: -10.250036239624023
    3. 'y' → logprob: -14.625036239624023
    4. ''' → logprob: -15.625036239624023
    5. '’y' → logprob: -17.750036239624023
    6. '"' → logprob: -18.625036239624023
    7. ' '' → logprob: -19.000036239624023
    8. ''s' → logprob: -19.500036239624023
    9. ''ny' → logprob: -19.875036239624023
    10. ''t' → logprob: -20.500036239624023

Token 1983: 'y' (ID: 88)
  Prédit: ''y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -0.005330758634954691
    2. 'y' → logprob: -5.255330562591553
    3. '‘y' → logprob: -9.255331039428711
    4. ''' → logprob: -13.755331039428711
    5. 'y's' → logprob: -15.505331039428711
    6. '’y' → logprob: -16.50533103942871
    7. ' y' → logprob: -19.25533103942871
    8. ''s' → logprob: -19.75533103942871
    9. '	y' → logprob: -19.88033103942871
    10. ')y' → logprob: -20.38033103942871

Token 1984: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03402254357933998
    2. '':' → logprob: -3.409022569656372
    3. '')' → logprob: -8.534022331237793
    4. ''):' → logprob: -9.034022331237793
    5. '':
' → logprob: -11.034022331237793
    6. 'y' → logprob: -11.409022331237793
    7. '':'' → logprob: -12.284022331237793
    8. 'n' → logprob: -12.659022331237793
    9. ''):
' → logprob: -12.659022331237793
    10. ':' → logprob: -12.784022331237793

Token 1985: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025738952681422234
    2. ':' → logprob: -4.025738716125488
    3. '   ' → logprob: -5.900738716125488
    4. '	' → logprob: -6.025738716125488
    5. ':
' → logprob: -7.150738716125488
    6. ':return' → logprob: -7.775738716125488
    7. 'return' → logprob: -8.150738716125488
    8. '	return' → logprob: -8.400738716125488
    9. '           ' → logprob: -8.775738716125488
    10. '    ' → logprob: -8.900738716125488

Token 1986: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0788327306509018
    2. '       ' → logprob: -2.8288326263427734
    3. '   ' → logprob: -4.578832626342773
    4. ' return' → logprob: -5.078832626342773
    5. '           ' → logprob: -8.828832626342773
    6. '	return' → logprob: -9.703832626342773
    7. ':return' → logprob: -11.828832626342773
    8. 'True' → logprob: -12.078832626342773
    9. '    ' → logprob: -13.328832626342773
    10. '	   ' → logprob: -13.453832626342773

Token 1987: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.320199877838604e-07
    2. ' True' → logprob: -14.75
    3. 'False' → logprob: -20.5
    4. '   ' → logprob: -21.0
    5. '(True' → logprob: -22.125
    6. 'true' → logprob: -23.75
    7. '=True' → logprob: -24.625
    8. '1' → logprob: -24.625
    9. '
' → logprob: -24.625
    10. '       ' → logprob: -25.5

Token 1988: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03789136931300163
    2. 'False' → logprob: -4.037891387939453
    3. '
' → logprob: -4.787891387939453
    4. ' ' → logprob: -5.662891387939453
    5. '  ' → logprob: -6.537891387939453
    6. ' False' → logprob: -6.662891387939453
    7. '    
' → logprob: -6.787891387939453
    8. '  
' → logprob: -7.037891387939453
    9. '.' → logprob: -7.162891387939453
    10. '\n' → logprob: -7.287891387939453

Token 1989: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5183915495872498
    2. '\n' → logprob: -1.3933916091918945
    3. '
' → logprob: -3.2683916091918945
    4. 'False' → logprob: -3.7683916091918945
    5. ' ' → logprob: -3.8933916091918945
    6. ':' → logprob: -4.0183916091918945
    7. ' ' → logprob: -4.3933916091918945
    8. '	' → logprob: -4.8933916091918945
    9. '.' → logprob: -5.0183916091918945
    10. '    
' → logprob: -5.2683916091918945

Token 1990: ' return' (ID: 622)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.4732424318790436
    2. '   ' → logprob: -1.4732424020767212
    3. 'else' → logprob: -2.2232425212860107
    4. ' False' → logprob: -4.223242282867432
    5. ':' → logprob: -5.098242282867432
    6. ' else' → logprob: -5.348242282867432
    7. '\n' → logprob: -5.473242282867432
    8. '
' → logprob: -5.973242282867432
    9. 'True' → logprob: -6.598242282867432
    10. '```' → logprob: -6.848242282867432

Token 1991: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.339278580620885e-06
    2. ' False' → logprob: -13.000001907348633
    3. 'True' → logprob: -19.625001907348633
    4. '(False' → logprob: -21.625001907348633
    5. 'len' → logprob: -23.375001907348633
    6. '   ' → logprob: -24.875001907348633
    7. 'false' → logprob: -25.375001907348633
    8. '_false' → logprob: -26.000001907348633
    9. 'm' → logprob: -27.000001907348633
    10. '=False' → logprob: -27.125001907348633

Token 1992: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008522743592038751
    2. '<|end|>' → logprob: -7.500852108001709
    3. '#' → logprob: -9.625852584838867
    4. '```' → logprob: -9.875852584838867
    5. '<|end|>' → logprob: -9.875852584838867
    6. ')' → logprob: -10.500852584838867
    7. 'elif' → logprob: -11.375852584838867
    8. ':' → logprob: -11.375852584838867
    9. '\' → logprob: -11.500852584838867
    10. ' def' → logprob: -11.625852584838867

Token 1993: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09084686636924744
    2. '#' → logprob: -3.0908467769622803
    3. '_' → logprob: -4.090847015380859
    4. 'd' → logprob: -4.590847015380859
    5. '<|end|>' → logprob: -5.590847015380859
    6. ')' → logprob: -5.965847015380859
    7. '(' → logprob: -6.715847015380859
    8. ':' → logprob: -6.965847015380859
    9. '.' → logprob: -7.340847015380859
    10. '\' → logprob: -7.465847015380859

Token 1994: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.5326234102249146
    2. 'count' → logprob: -2.782623291015625
    3. 'replace' → logprob: -3.282623291015625
    4. ' is' → logprob: -3.282623291015625
    5. 'has' → logprob: -3.282623291015625
    6. 'check' → logprob: -3.532623291015625
    7. 'starts' → logprob: -3.657623291015625
    8. 'vo' → logprob: -4.032623291015625
    9. 'get' → logprob: -4.032623291015625
    10. 'split' → logprob: -4.282623291015625

Token 1995: '_vo' (ID: 145825)
  Prédit: '_vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vo' → logprob: -0.021696483716368675
    2. '_v' → logprob: -3.8966965675354004
    3. '_con' → logprob: -7.6466965675354
    4. 'vo' → logprob: -8.521696090698242
    5. '_voice' → logprob: -8.646696090698242
    6. '_m' → logprob: -9.396696090698242
    7. '_' → logprob: -9.521696090698242
    8. '_void' → logprob: -11.021696090698242
    9. '_space' → logprob: -11.146696090698242
    10. '_s' → logprob: -11.146696090698242

Token 1996: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -4.4656579120783135e-05
    2. 'ice' → logprob: -10.750044822692871
    3. 'icelo' → logprob: -11.625044822692871
    4. 'iced' → logprob: -12.250044822692871
    5. '```' → logprob: -13.125044822692871
    6. 'cel' → logprob: -13.375044822692871
    7. 'icemail' → logprob: -14.125044822692871
    8. '{' → logprob: -14.500044822692871
    9. 'ices' → logprob: -14.500044822692871
    10. '_ic' → logprob: -14.625044822692871

Token 1997: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -8.65707261255011e-06
    2. 'el' → logprob: -11.750008583068848
    3. 'ele' → logprob: -14.500008583068848
    4. 'ed' → logprob: -16.000009536743164
    5. 'eles' → logprob: -16.125009536743164
    6. 'elif' → logprob: -18.125009536743164
    7. 'e' → logprob: -18.250009536743164
    8. 'ess' → logprob: -18.625009536743164
    9. 'eled' → logprob: -18.750009536743164
    10. 'less' → logprob: -18.750009536743164

Token 1998: '_m' (ID: 1285)
  Prédit: '_con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.35061517357826233
    2. '_' → logprob: -1.22561514377594
    3. '(' → logprob: -7.47561502456665
    4. '_(' → logprob: -7.60061502456665
    5. '_m' → logprob: -7.97561502456665
    6. '_c' → logprob: -9.225615501403809
    7. 'underscore' → logprob: -9.225615501403809
    8. ''' → logprob: -9.350615501403809
    9. '(m' → logprob: -9.350615501403809
    10. ''_' → logprob: -9.975615501403809

Token 1999: 'ora' (ID: 2505)
  Prédit: 'ora'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -0.28188979625701904
    2. 'o' → logprob: -1.406889796257019
    3. '_o' → logprob: -8.781889915466309
    4. 'or' → logprob: -9.531889915466309
    5. 'm' → logprob: -9.781889915466309
    6. '_' → logprob: -9.906889915466309
    7. '{
' → logprob: -9.906889915466309
    8. 'oras' → logprob: -10.406889915466309
    9. '	o' → logprob: -11.031889915466309
    10. ''o' → logprob: -11.031889915466309

Token 2000: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.3136477768421173
    2. '(' → logprob: -1.313647747039795
    3. '_' → logprob: -8.188648223876953
    4. '(
' → logprob: -10.438648223876953
    5. '(s' → logprob: -10.688648223876953
    6. '(_' → logprob: -10.813648223876953
    7. '(n' → logprob: -12.063648223876953
    8. ':' → logprob: -12.438648223876953
    9. '(a' → logprob: -12.813648223876953
    10. '(i' → logprob: -12.938648223876953

Token 2001: 'ora' (ID: 2505)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.1831212192773819
    2. 'ora' → logprob: -1.8081212043762207
    3. ''o' → logprob: -6.808121204376221
    4. '_o' → logprob: -7.183121204376221
    5. '_' → logprob: -8.558121681213379
    6. '```' → logprob: -8.683121681213379
    7. 'or' → logprob: -8.808121681213379
    8. 'oa' → logprob: -9.308121681213379
    9. 'о' → logprob: -9.683121681213379
    10. '('' → logprob: -9.683121681213379

Token 2002: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5163479447364807
    2. '(m' → logprob: -1.016347885131836
    3. 'm' → logprob: -3.516347885131836
    4. '):
' → logprob: -5.141347885131836
    5. '   ' → logprob: -6.016347885131836
    6. ')' → logprob: -6.766347885131836
    7. ')m' → logprob: -7.266347885131836
    8. ',m' → logprob: -7.516347885131836
    9. '[m' → logprob: -7.766347885131836
    10. '_m' → logprob: -9.141347885131836

Token 2003: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007983117830008268
    2. ' return' → logprob: -7.250798225402832
    3. ' if' → logprob: -10.625798225402832
    4. '    
' → logprob: -11.375798225402832
    5. 'return' → logprob: -11.500798225402832
    6. ' is' → logprob: -11.875798225402832
    7. '{' → logprob: -12.000798225402832
    8. '	return' → logprob: -12.125798225402832
    9. '    ' → logprob: -12.375798225402832
    10. 'def' → logprob: -12.875798225402832

Token 2004: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08279934525489807
    2. ' return' → logprob: -2.8327994346618652
    3. 'return' → logprob: -3.9577994346618652
    4. ' if' → logprob: -6.957799434661865
    5. 'is' → logprob: -8.207798957824707
    6. ' is' → logprob: -8.582798957824707
    7. 'if' → logprob: -9.707798957824707
    8. '	return' → logprob: -11.832798957824707
    9. '    ' → logprob: -12.207798957824707
    10. 'def' → logprob: -12.582798957824707

Token 2005: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038782195188105106
    2. ' return' → logprob: -6.378878116607666
    3. ' if' → logprob: -6.878878116607666
    4. 'return' → logprob: -7.253878116607666
    5. 'is' → logprob: -8.628878593444824
    6. 'if' → logprob: -9.128878593444824
    7. ' is' → logprob: -9.253878593444824
    8. '#' → logprob: -11.253878593444824
    9. 'm' → logprob: -11.503878593444824
    10. ' ' → logprob: -11.878878593444824

Token 2006: ' True' (ID: 6432)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.006266951560974121
    2. ' is' → logprob: -5.381267070770264
    3. 'check' → logprob: -7.131267070770264
    4. 'True' → logprob: -7.256267070770264
    5. '   ' → logprob: -9.631266593933105
    6. 'bool' → logprob: -10.381266593933105
    7. ' True' → logprob: -11.006266593933105
    8. ' check' → logprob: -11.506266593933105
    9. '(is' → logprob: -11.631266593933105
    10. '(' → logprob: -13.256266593933105

Token 2007: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9035245776176453
    2. '(m' → logprob: -1.27852463722229
    3. 'm' → logprob: -2.15352463722229
    4. '(' → logprob: -2.77852463722229
    5. 'is' → logprob: -3.02852463722229
    6. '(
' → logprob: -3.65352463722229
    7. 'def' → logprob: -4.278524398803711
    8. '(is' → logprob: -4.653524398803711
    9. ':' → logprob: -5.028524398803711
    10. ' is' → logprob: -5.028524398803711

Token 2008: ' mora' (ID: 47294)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.07177571207284927
    2. 'm' → logprob: -3.3217756748199463
    3. ' is' → logprob: -3.4467756748199463
    4. 'check' → logprob: -7.321775913238525
    5. '   ' → logprob: -8.071775436401367
    6. 'len' → logprob: -9.071775436401367
    7. ' check' → logprob: -9.946775436401367
    8. '(is' → logprob: -10.071775436401367
    9. ' ' → logprob: -10.696775436401367
    10. '(m' → logprob: -10.821775436401367

Token 2009: ' starts' (ID: 13217)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6146947145462036
    2. '==' → logprob: -1.8646947145462036
    3. ' ==' → logprob: -2.239694595336914
    4. '[len' → logprob: -3.114694595336914
    5. '[m' → logprob: -3.614694595336914
    6. '   ' → logprob: -3.739694595336914
    7. 'if' → logprob: -3.739694595336914
    8. '[-' → logprob: -4.114694595336914
    9. 'def' → logprob: -4.239694595336914
    10. '.startswith' → logprob: -4.614694595336914

Token 2010: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.020486297085881233
    2. ' with' → logprob: -4.145486354827881
    3. 'm' → logprob: -6.020486354827881
    4. 'if' → logprob: -7.020486354827881
    5. '(m' → logprob: -8.395485877990723
    6. '==' → logprob: -8.645485877990723
    7. '=' → logprob: -8.645485877990723
    8. '   ' → logprob: -8.770485877990723
    9. ')' → logprob: -9.270485877990723
    10. 'def' → logprob: -9.645485877990723

Token 2011: ' vo' (ID: 778)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.13114473223686218
    2. 'VOICE' → logprob: -2.3811447620391846
    3. '(' → logprob: -5.0061445236206055
    4. '('' → logprob: -5.5061445236206055
    5. 'VO' → logprob: -5.5061445236206055
    6. ' VO' → logprob: -6.1311445236206055
    7. 'a' → logprob: -6.5061445236206055
    8. 'vo' → logprob: -6.5061445236206055
    9. 'c' → logprob: -6.7561445236206055
    10. ''' → logprob: -6.8811445236206055

Token 2012: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.007182637695223093
    2. 'i' → logprob: -5.007182598114014
    3. '```' → logprob: -8.507183074951172
    4. ''' → logprob: -9.257183074951172
    5. 'ice' → logprob: -10.382183074951172
    6. 'icelo' → logprob: -11.007183074951172
    7. 'icemail' → logprob: -11.132183074951172
    8. '``' → logprob: -11.382183074951172
    9. '`' → logprob: -11.632183074951172
    10. '"' → logprob: -11.757183074951172

Token 2013: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.5897757411003113
    2. 'l' → logprob: -1.339775800704956
    3. 'el' → logprob: -2.339775800704956
    4. '```' → logprob: -3.964775800704956
    5. 'less' → logprob: -4.464775562286377
    6. 'ic' → logprob: -4.714775562286377
    7. 'e' → logprob: -4.714775562286377
    8. 'c' → logprob: -4.839775562286377
    9. '_' → logprob: -5.089775562286377
    10. '{' → logprob: -6.089775562286377

Token 2014: ' conson' (ID: 127767)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023765508085489273
    2. '_con' → logprob: -4.398765563964844
    3. 'm' → logprob: -5.148765563964844
    4. '_m' → logprob: -6.023765563964844
    5. 'con' → logprob: -6.898765563964844
    6. ')' → logprob: -7.523765563964844
    7. '(m' → logprob: -8.148765563964844
    8. '_c' → logprob: -8.273765563964844
    9. '_)' → logprob: -8.523765563964844
    10. 'c' → logprob: -9.773765563964844

Token 2015: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0022932328283786774
    2. 't' → logprob: -6.127293109893799
    3. '_' → logprob: -10.252293586730957
    4. 'nt' → logprob: -11.252293586730957
    5. '_t' → logprob: -11.502293586730957
    6. '
' → logprob: -11.627293586730957
    7. '_ant' → logprob: -11.627293586730957
    8. 'a' → logprob: -11.752293586730957
    9. '_
' → logprob: -11.877293586730957
    10. 's' → logprob: -11.877293586730957

Token 2016: ' or' (ID: 503)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.6126195192337036
    2. 'and' → logprob: -1.9876195192337036
    3. '(' → logprob: -2.237619400024414
    4. 'm' → logprob: -2.737619400024414
    5. '   ' → logprob: -2.987619400024414
    6. ' and' → logprob: -3.362619400024414
    7. '(
' → logprob: -4.112619400024414
    8. ':' → logprob: -4.237619400024414
    9. 'def' → logprob: -4.487619400024414
    10. '[' → logprob: -5.487619400024414

Token 2017: ' vo' (ID: 778)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.7368403673171997
    2. 'is' → logprob: -1.6118403673171997
    3. '(m' → logprob: -2.36184024810791
    4. 'm' → logprob: -2.36184024810791
    5. '(is' → logprob: -3.61184024810791
    6. '(check' → logprob: -3.61184024810791
    7. ' check' → logprob: -3.73684024810791
    8. ' (' → logprob: -3.86184024810791
    9. '(
' → logprob: -4.11184024810791
    10. ' is' → logprob: -4.23684024810791

Token 2018: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.00011856284982059151
    2. 'i' → logprob: -9.500118255615234
    3. '```' → logprob: -10.750118255615234
    4. 'icelo' → logprob: -12.625118255615234
    5. 'icemail' → logprob: -12.875118255615234
    6. 'il' → logprob: -13.000118255615234
    7. 'iless' → logprob: -13.375118255615234
    8. '
' → logprob: -13.625118255615234
    9. '`' → logprob: -13.875118255615234
    10. '>' → logprob: -13.875118255615234

Token 2019: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.0002955399686470628
    2. 'el' → logprob: -8.250295639038086
    3. 'e' → logprob: -11.125295639038086
    4. 'ed' → logprob: -11.375295639038086
    5. 'ele' → logprob: -12.500295639038086
    6. 'eled' → logprob: -13.500295639038086
    7. 'eles' → logprob: -13.875295639038086
    8. 'less' → logprob: -14.250295639038086
    9. '
' → logprob: -15.625295639038086
    10. 'ess' → logprob: -15.625295639038086

Token 2020: ' conson' (ID: 127767)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43145012855529785
    2. '(m' → logprob: -1.4314501285552979
    3. 'm' → logprob: -3.556450128555298
    4. ':' → logprob: -4.181449890136719
    5. '   ' → logprob: -4.306449890136719
    6. '(' → logprob: -4.556449890136719
    7. ' and' → logprob: -4.681449890136719
    8. '_m' → logprob: -5.431449890136719
    9. ' ' → logprob: -5.556449890136719
    10. '[m' → logprob: -5.806449890136719

Token 2021: 'ant' (ID: 493)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.008976164273917675
    2. 'ant' → logprob: -4.883975982666016
    3. '_t' → logprob: -6.883975982666016
    4. 'tant' → logprob: -8.758975982666016
    5. '_' → logprob: -9.258975982666016
    6. 'a' → logprob: -9.883975982666016
    7. ' t' → logprob: -10.758975982666016
    8. ''t' → logprob: -12.508975982666016
    9. '_ant' → logprob: -12.633975982666016
    10. 'nt' → logprob: -13.258975982666016

Token 2022: ' followed' (ID: 12661)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.6368822455406189
    2. 'm' → logprob: -2.1368823051452637
    3. '[' → logprob: -2.5118823051452637
    4. 'and' → logprob: -2.8868823051452637
    5. '_' → logprob: -3.1368823051452637
    6. '   ' → logprob: -3.5118823051452637
    7. '(' → logprob: -3.6368823051452637
    8. ' and' → logprob: -3.8868823051452637
    9. 's' → logprob: -3.8868823051452637
    10. 'def' → logprob: -4.136882305145264

Token 2023: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.11145784705877304
    2. ' by' → logprob: -2.3614578247070312
    3. 'with' → logprob: -4.611457824707031
    4. '_' → logprob: -7.361457824707031
    5. '_by' → logprob: -7.736457824707031
    6. ' with' → logprob: -9.861457824707031
    7. '<|end|>' → logprob: -9.861457824707031
    8. 'space' → logprob: -10.986457824707031
    9. '   ' → logprob: -11.236457824707031
    10. '_with' → logprob: -11.361457824707031

Token 2024: ' y' (ID: 342)
  Prédit: ''y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -0.39699894189834595
    2. 'y' → logprob: -1.7719988822937012
    3. 'v' → logprob: -1.8969988822937012
    4. 'vo' → logprob: -5.896998882293701
    5. '‘y' → logprob: -6.646998882293701
    6. ' vowel' → logprob: -6.771998882293701
    7. ''a' → logprob: -7.021998882293701
    8. ''' → logprob: -7.146998882293701
    9. 'a' → logprob: -7.771998882293701
    10. ' y' → logprob: -8.89699935913086

Token 2025: '
' (ID: 198)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.4257713258266449
    2. '(' → logprob: -1.9257713556289673
    3. ':' → logprob: -2.1757712364196777
    4. 'm' → logprob: -3.3007712364196777
    5. '(
' → logprob: -3.9257712364196777
    6. '   ' → logprob: -4.300771236419678
    7. 'def' → logprob: -4.675771236419678
    8. ':
' → logprob: -6.050771236419678
    9. '('' → logprob: -6.800771236419678
    10. 'if' → logprob: -6.925771236419678

Token 2026: '   ' (ID: 271)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.3776891529560089
    2. '   ' → logprob: -2.1276891231536865
    3. '(' → logprob: -2.3776891231536865
    4. ':' → logprob: -3.0026891231536865
    5. '(
' → logprob: -3.7526891231536865
    6. 'm' → logprob: -3.8776891231536865
    7. ':
' → logprob: -5.377689361572266
    8. 'def' → logprob: -6.127689361572266
    9. ' (' → logprob: -7.877689361572266
    10. '('' → logprob: -8.127689361572266

Token 2027: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010469816625118256
    2. 'return' (adapté à ' return') → logprob: -7.251047134399414
    3. ' return' → logprob: -8.501047134399414
    4. ':
' → logprob: -9.251047134399414
    5. ':' → logprob: -11.626047134399414
    6. 'if' → logprob: -12.001047134399414
    7. '(' → logprob: -12.001047134399414
    8. ' if' → logprob: -12.376047134399414
    9. 'def' → logprob: -12.626047134399414
    10. ':return' → logprob: -13.376047134399414

Token 2028: ' is' (ID: 382)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5858299732208252
    2. 'is' → logprob: -0.8358299732208252
    3. ' is' → logprob: -5.210829734802246
    4. '(m' → logprob: -5.960829734802246
    5. '(' → logprob: -7.335829734802246
    6. '(is' → logprob: -7.585829734802246
    7. ' mora' → logprob: -8.710829734802246
    8. 'len' → logprob: -8.960829734802246
    9. ' (' → logprob: -9.210829734802246
    10. '   ' → logprob: -9.460829734802246

Token 2029: '_vo' (ID: 145825)
  Prédit: '_vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vo' → logprob: -9.491498531133402e-06
    2. '_voice' → logprob: -12.375009536743164
    3. '_void' → logprob: -13.125009536743164
    4. 'vo' → logprob: -13.750009536743164
    5. '_' → logprob: -14.125009536743164
    6. '_v' → logprob: -14.625009536743164
    7. ''_' → logprob: -15.375009536743164
    8. '(vo' → logprob: -15.750009536743164
    9. '_vi' → logprob: -16.000009536743164
    10. 'Vo' → logprob: -16.125009536743164

Token 2030: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.000721487682312727
    2. 'oc' → logprob: -7.625721454620361
    3. '```' → logprob: -9.62572193145752
    4. 'vo' → logprob: -9.87572193145752
    5. 'cl' → logprob: -10.75072193145752
    6. 'ice' → logprob: -11.37572193145752
    7. '_vo' → logprob: -11.62572193145752
    8. 'o' → logprob: -12.00072193145752
    9. 'icelo' → logprob: -12.12572193145752
    10. 'i' → logprob: -12.25072193145752

Token 2031: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.013950283639132977
    2. 'el' → logprob: -4.513950347900391
    3. 'less' → logprob: -6.013950347900391
    4. 'le' → logprob: -8.88895034790039
    5. 'e' → logprob: -9.38895034790039
    6. 'ele' → logprob: -10.38895034790039
    7. 'ic' → logprob: -10.38895034790039
    8. '```' → logprob: -10.38895034790039
    9. 'veless' → logprob: -10.51395034790039
    10. 'cel' → logprob: -10.88895034790039

Token 2032: '_con' (ID: 7531)
  Prédit: '_con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.12731610238552094
    2. '_m' → logprob: -2.1273159980773926
    3. '_with' → logprob: -8.75231647491455
    4. '_cons' → logprob: -9.75231647491455
    5. 'm' → logprob: -10.00231647491455
    6. '_token' → logprob: -10.25231647491455
    7. 'con' → logprob: -10.62731647491455
    8. '(m' → logprob: -11.00231647491455
    9. '_vo' → logprob: -11.37731647491455
    10. '_tokens' → logprob: -12.25231647491455

Token 2033: 'son' (ID: 1356)
  Prédit: 'eless'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.06240098178386688
    2. 'ic' → logprob: -3.062401056289673
    3. 'el' → logprob: -4.437400817871094
    4. 'less' → logprob: -6.937400817871094
    5. 'e' → logprob: -7.812400817871094
    6. 'cel' → logprob: -8.687400817871094
    7. 'ol' → logprob: -8.937400817871094
    8. 'cl' → logprob: -9.562400817871094
    9. 'ele' → logprob: -10.687400817871094
    10. 'iless' → logprob: -10.937400817871094

Token 2034: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0666368305683136
    2. 't' → logprob: -3.066636800765991
    3. '(m' → logprob: -4.19163703918457
    4. 's' → logprob: -7.31663703918457
    5. 'ent' → logprob: -7.44163703918457
    6. 'st' → logprob: -7.94163703918457
    7. 'tant' → logprob: -8.31663703918457
    8. 'nt' → logprob: -8.44163703918457
    9. '[m' → logprob: -8.44163703918457
    10. '_m' → logprob: -8.81663703918457

Token 2035: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.10490535199642181
    2. '(' → logprob: -2.479905366897583
    3. '_' → logprob: -4.604905128479004
    4. '_(' → logprob: -5.354905128479004
    5. '_m' → logprob: -7.604905128479004
    6. '(_' → logprob: -8.604905128479004
    7. '(
' → logprob: -8.854905128479004
    8. 'm' → logprob: -9.854905128479004
    9. ' (' → logprob: -9.979905128479004
    10. '(_)' → logprob: -10.104905128479004

Token 2036: 'ora' (ID: 2505)
  Prédit: 'ora'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -7.803360495017841e-05
    2. 'm' → logprob: -9.875078201293945
    3. '(' → logprob: -11.625078201293945
    4. '(m' → logprob: -12.000078201293945
    5. ')' → logprob: -12.625078201293945
    6. '[' → logprob: -13.625078201293945
    7. '()' → logprob: -13.750078201293945
    8. 'o' → logprob: -14.250078201293945
    9. '('' → logprob: -14.625078201293945
    10. 'a' → logprob: -14.875078201293945

Token 2037: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04658703878521919
    2. '[' → logprob: -3.6715869903564453
    3. ' or' → logprob: -4.296586990356445
    4. 'or' → logprob: -5.546586990356445
    5. '[m' → logprob: -7.171586990356445
    6. ')m' → logprob: -7.546586990356445
    7. '(m' → logprob: -7.671586990356445
    8. '   ' → logprob: -8.171586990356445
    9. ',' → logprob: -9.546586990356445
    10. '+' → logprob: -9.671586990356445

Token 2038: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7429773807525635
    2. 'and' → logprob: -0.9929773807525635
    3. '[' → logprob: -2.7429773807525635
    4. ' or' → logprob: -3.2429773807525635
    5. '<|end|>' → logprob: -3.8679773807525635
    6. 'or' → logprob: -4.742977142333984
    7. '(' → logprob: -4.992977142333984
    8. 'if' → logprob: -5.367977142333984
    9. 'def' → logprob: -6.367977142333984
    10. '.' → logprob: -6.367977142333984

Token 2039: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.00861456897109747
    2. ' check' → logprob: -4.758614540100098
    3. '   ' → logprob: -16.258615493774414
    4. '	check' → logprob: -17.883615493774414
    5. '(check' → logprob: -18.008615493774414
    6. ' ' → logprob: -20.133615493774414
    7. '  ' → logprob: -21.883615493774414
    8. '    ' → logprob: -22.383615493774414
    9. '_check' → logprob: -22.508615493774414
    10. 'chec' → logprob: -22.883615493774414

Token 2040: '_vo' (ID: 145825)
  Prédit: '_vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vo' → logprob: -2.816093228830141e-06
    2. '(vo' → logprob: -13.87500286102295
    3. '_voice' → logprob: -14.12500286102295
    4. 'vo' → logprob: -14.87500286102295
    5. '_void' → logprob: -15.50000286102295
    6. '```' → logprob: -16.125001907348633
    7. '_v' → logprob: -16.625001907348633
    8. 'Vo' → logprob: -17.000001907348633
    9. '_vi' → logprob: -17.250001907348633
    10. '_y' → logprob: -17.625001907348633

Token 2041: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -5.080963092041202e-06
    2. 'icelo' → logprob: -13.500004768371582
    3. '```' → logprob: -13.625004768371582
    4. 'icemail' → logprob: -13.750004768371582
    5. 'ice' → logprob: -14.750004768371582
    6. '``' → logprob: -14.750004768371582
    7. 'ichel' → logprob: -16.1250057220459
    8. '_' → logprob: -16.3750057220459
    9. '{' → logprob: -16.7500057220459
    10. 'oc' → logprob: -17.0000057220459

Token 2042: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.2773483991622925
    2. 'ic' → logprob: -1.6523483991622925
    3. 'less' → logprob: -3.277348518371582
    4. 'iless' → logprob: -5.277348518371582
    5. 'ol' → logprob: -5.527348518371582
    6. 'o' → logprob: -6.402348518371582
    7. 'el' → logprob: -7.652348518371582
    8. 'oc' → logprob: -7.902348518371582
    9. '_less' → logprob: -8.277348518371582
    10. 'cl' → logprob: -8.277348518371582

Token 2043: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.0017882289830595255
    2. '_con' → logprob: -6.376788139343262
    3. '_y' → logprob: -9.501788139343262
    4. 'with' → logprob: -12.001788139343262
    5. '_m' → logprob: -13.001788139343262
    6. '_' → logprob: -13.751788139343262
    7. 'y' → logprob: -14.751788139343262
    8. '_WITH' → logprob: -15.501788139343262
    9. '```' → logprob: -15.876788139343262
    10. '_cons' → logprob: -16.001789093017578

Token 2044: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.2520171105861664
    2. 'y' → logprob: -1.5020171403884888
    3. 'm' → logprob: -10.0020170211792
    4. '(m' → logprob: -10.7520170211792
    5. '_m' → logprob: -11.7520170211792
    6. '_' → logprob: -12.2520170211792
    7. ''y' → logprob: -13.0020170211792
    8. ' y' → logprob: -14.3770170211792
    9. '‘y' → logprob: -14.3770170211792
    10. '(y' → logprob: -14.5020170211792

Token 2045: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.004594011232256889
    2. '(' → logprob: -6.129593849182129
    3. '_' → logprob: -6.254593849182129
    4. '_(' → logprob: -8.254593849182129
    5. 'm' → logprob: -8.879593849182129
    6. '_m' → logprob: -9.629593849182129
    7. 's' → logprob: -12.379593849182129
    8. ')' → logprob: -12.504593849182129
    9. '(_)' → logprob: -12.629593849182129
    10. '(s' → logprob: -13.254593849182129

Token 2046: 'ora' (ID: 2505)
  Prédit: 'ora'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -4.3226136767771095e-05
    2. '(' → logprob: -11.250042915344238
    3. ')' → logprob: -11.875042915344238
    4. 'm' → logprob: -12.125042915344238
    5. 'o' → logprob: -12.500042915344238
    6. '[' → logprob: -12.625042915344238
    7. '('' → logprob: -13.000042915344238
    8. '(a' → logprob: -13.625042915344238
    9. '(m' → logprob: -13.750042915344238
    10. '(o' → logprob: -14.000042915344238

Token 2047: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007879522629082203
    2. '(m' → logprob: -4.882879734039307
    3. ')m' → logprob: -8.382879257202148
    4. '[m' → logprob: -10.632879257202148
    5. 'm' → logprob: -12.007879257202148
    6. '   ' → logprob: -12.007879257202148
    7. '))' → logprob: -13.007879257202148
    8. ' )' → logprob: -13.257879257202148
    9. ',m' → logprob: -14.132879257202148
    10. ',' → logprob: -14.632879257202148

Token 2048: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6682896018028259
    2. ':' → logprob: -2.2932896614074707
    3. '(' → logprob: -2.6682896614074707
    4. ')' → logprob: -2.6682896614074707
    5. '<|end|>' → logprob: -2.6682896614074707
    6. '_' → logprob: -3.0432896614074707
    7. '\' → logprob: -3.1682896614074707
    8. '\n' → logprob: -3.7932896614074707
    9. '[' → logprob: -4.168289661407471
    10. '.' → logprob: -5.293289661407471

Token 2049: ' expand' (ID: 10791)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.8101545572280884
    2. 'main' → logprob: -1.8101545572280884
    3. 'is' → logprob: -2.310154438018799
    4. 'get' → logprob: -2.310154438018799
    5. 'split' → logprob: -2.685154438018799
    6. 'has' → logprob: -3.310154438018799
    7. ' main' → logprob: -3.310154438018799
    8. ' get' → logprob: -3.560154438018799
    9. 'to' → logprob: -3.560154438018799
    10. 'replace' → logprob: -3.560154438018799

Token 2050: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.4106537401676178
    2. '_' → logprob: -1.1606537103652954
    3. '_v' → logprob: -5.410653591156006
    4. '('_' → logprob: -5.910653591156006
    5. '(' → logprob: -6.285653591156006
    6. '_s' → logprob: -6.410653591156006
    7. 'def' → logprob: -6.660653591156006
    8. 's' → logprob: -6.910653591156006
    9. '_vo' → logprob: -7.160653591156006
    10. '_con' → logprob: -7.285653591156006

Token 2051: 'oras' (ID: 41056)
  Prédit: 'oras'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -0.021146662533283234
    2. 'ora' → logprob: -3.896146774291992
    3. 'or' → logprob: -7.896146774291992
    4. 'orras' → logprob: -10.771146774291992
    5. '=' → logprob: -10.896146774291992
    6. '_or' → logprob: -11.146146774291992
    7. '```' → logprob: -11.146146774291992
    8. 'oral' → logprob: -11.396146774291992
    9. '`' → logprob: -11.396146774291992
    10. '[' → logprob: -11.896146774291992

Token 2052: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.07612887769937515
    2. '(m' → logprob: -2.8261289596557617
    3. '(' → logprob: -4.326128959655762
    4. ':' → logprob: -8.326128959655762
    5. ' (' → logprob: -9.576128959655762
    6. '():' → logprob: -9.826128959655762
    7. '('' → logprob: -9.951128959655762
    8. '(split' → logprob: -10.076128959655762
    9. '(user' → logprob: -10.326128959655762
    10. 'def' → logprob: -10.451128959655762

Token 2053: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03561491146683693
    2. '):
' → logprob: -3.4106149673461914
    3. ')' → logprob: -7.160614967346191
    4. ',' → logprob: -7.660614967346191
    5. '   ' → logprob: -7.910614967346191
    6. '(s' → logprob: -9.160614967346191
    7. '[' → logprob: -9.535614967346191
    8. '):
' → logprob: -10.285614967346191
    9. '[s' → logprob: -10.535614967346191
    10. ''):' → logprob: -10.785614967346191

Token 2054: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05847875773906708
    2. ':' → logprob: -3.058478832244873
    3. '(s' → logprob: -5.433478832244873
    4. ':
' → logprob: -6.058478832244873
    5. '(m' → logprob: -7.433478832244873
    6. '(' → logprob: -7.683478832244873
    7. '```' → logprob: -8.058478355407715
    8. 'def' → logprob: -8.058478355407715
    9. 's' → logprob: -8.683478355407715
    10. '():' → logprob: -8.683478355407715

Token 2055: ' #' (ID: 1069)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.030658766627311707
    2. 'i' → logprob: -4.405658721923828
    3. 'mor' → logprob: -4.655658721923828
    4. '   ' → logprob: -4.905658721923828
    5. 'result' → logprob: -7.905658721923828
    6. ' mor' → logprob: -8.405658721923828
    7. 'return' → logprob: -9.405658721923828
    8. 'split' → logprob: -9.655658721923828
    9. 'res' → logprob: -9.655658721923828
    10. 's' → logprob: -9.780658721923828

Token 2056: ' Handles' (ID: 47620)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06221639737486839
    2. 'return' → logprob: -3.562216281890869
    3. '   ' → logprob: -4.312216281890869
    4. 'result' → logprob: -4.687216281890869
    5. 'mor' → logprob: -4.812216281890869
    6. 'res' → logprob: -7.187216281890869
    7. 'i' → logprob: -8.312216758728027
    8. ' mor' → logprob: -9.312216758728027
    9. 'expanded' → logprob: -11.062216758728027
    10. 'def' → logprob: -11.312216758728027

Token 2057: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7010063529014587
    2. 's' → logprob: -1.5760064125061035
    3. 'split' → logprob: -1.7010064125061035
    4. 'm' → logprob: -2.9510064125061035
    5. 'def' → logprob: -3.4510064125061035
    6. '   ' → logprob: -4.8260064125061035
    7. ' i' → logprob: -5.5760064125061035
    8. ' s' → logprob: -5.8260064125061035
    9. 'V' → logprob: -5.9510064125061035
    10. ')' → logprob: -6.0760064125061035

Token 2058: 'oku' (ID: 13454)
  Prédit: 'plit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plit' → logprob: -0.18687590956687927
    2. 'trip' → logprob: -2.936875820159912
    3. '[i' → logprob: -3.186875820159912
    4. '[' → logprob: -3.811875820159912
    5. 'pli' → logprob: -4.186875820159912
    6. '   ' → logprob: -4.936875820159912
    7. ')' → logprob: -5.311875820159912
    8. ' =' → logprob: -5.811875820159912
    9. '=' → logprob: -5.936875820159912
    10. 'p' → logprob: -6.061875820159912

Token 2059: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.049728404730558395
    2. 'o' → logprob: -3.0497283935546875
    3. '_on' → logprob: -7.5497283935546875
    4. '_o' → logprob: -8.049728393554688
    5. 'on's' → logprob: -9.674728393554688
    6. '_' → logprob: -9.799728393554688
    7. ''o' → logprob: -10.174728393554688
    8. ''' → logprob: -10.549728393554688
    9. ''on' → logprob: -10.924728393554688
    10. 'n' → logprob: -10.924728393554688

Token 2060: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4517327547073364
    2. '(s' → logprob: -1.5767327547073364
    3. '_' → logprob: -1.7017327547073364
    4. ' =' → logprob: -2.201732635498047
    5. 'def' → logprob: -3.076732635498047
    6. ' (' → logprob: -3.201732635498047
    7. '=' → logprob: -3.701732635498047
    8. '(' → logprob: -3.701732635498047
    9. ':' → logprob: -3.826732635498047
    10. ''' → logprob: -3.826732635498047

Token 2061: ' separating' (ID: 91998)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.6216257214546204
    2. 'split' → logprob: -1.1216256618499756
    3. 's' → logprob: -3.3716256618499756
    4. 'def' → logprob: -3.6216256618499756
    5. 'list' → logprob: -4.371625900268555
    6. 'import' → logprob: -4.371625900268555
    7. 'replace' → logprob: -4.746625900268555
    8. 'append' → logprob: -4.871625900268555
    9. ' splitting' → logprob: -5.496625900268555
    10. '''' → logprob: -5.496625900268555

Token 2062: ' it' (ID: 480)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0689969062805176
    2. 'result' → logprob: -1.0689969062805176
    3. 'm' → logprob: -1.6939969062805176
    4. 'expanded' → logprob: -3.1939969062805176
    5. 's' → logprob: -3.8189969062805176
    6. ' mor' → logprob: -4.318996906280518
    7. 'tokens' → logprob: -4.693996906280518
    8. '''' → logprob: -4.943996906280518
    9. 'res' → logprob: -4.943996906280518
    10. '   ' → logprob: -5.443996906280518

Token 2063: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43491846323013306
    2. '   ' → logprob: -1.9349184036254883
    3. ' =' → logprob: -2.4349184036254883
    4. ''' → logprob: -3.8099184036254883
    5. '=' → logprob: -4.059918403625488
    6. 'def' → logprob: -4.309918403625488
    7. 's' → logprob: -4.559918403625488
    8. ' _' → logprob: -4.934918403625488
    9. 'm' → logprob: -5.184918403625488
    10. ' ' → logprob: -5.309918403625488

Token 2064: ' explicit' (ID: 23141)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7684613466262817
    2. '''' → logprob: -1.3934613466262817
    3. 'm' → logprob: -1.8934613466262817
    4. 'double' → logprob: -3.143461227416992
    5. ''' → logprob: -3.518461227416992
    6. 'split' → logprob: -4.893461227416992
    7. '[' → logprob: -5.018461227416992
    8. ''''' → logprob: -5.268461227416992
    9. '#' → logprob: -5.393461227416992
    10. 'list' → logprob: -5.518461227416992

Token 2065: ' s' (ID: 265)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2535678744316101
    2. 's' → logprob: -2.378567934036255
    3. ' s' → logprob: -2.878567934036255
    4. ' ' → logprob: -3.753567934036255
    5. ''s' → logprob: -3.753567934036255
    6. ' '' → logprob: -4.128567695617676
    7. 'm' → logprob: -5.628567695617676
    8. ' mor' → logprob: -5.878567695617676
    9. ' double' → logprob: -7.253567695617676
    10. '"' → logprob: -7.378567695617676

Token 2066: 'oku' (ID: 13454)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04808157682418823
    2. ''s' → logprob: -4.298081398010254
    3. ' '' → logprob: -4.548081398010254
    4. ''p' → logprob: -4.923081398010254
    5. 'p' → logprob: -5.173081398010254
    6. '"' → logprob: -5.673081398010254
    7. ' ' → logprob: -6.173081398010254
    8. ''''' → logprob: -7.298081398010254
    9. 'plit' → logprob: -7.548081398010254
    10. 's' → logprob: -7.923081398010254

Token 2067: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.006332940887659788
    2. 'o' → logprob: -5.256332874298096
    3. ''' → logprob: -7.381332874298096
    4. ''on' → logprob: -9.256333351135254
    5. '_on' → logprob: -9.256333351135254
    6. '_' → logprob: -9.631333351135254
    7. 'ons' → logprob: -9.881333351135254
    8. 'on's' → logprob: -10.381333351135254
    9. 'ion' → logprob: -10.631333351135254
    10. 'n' → logprob: -10.756333351135254

Token 2068: ' mora' (ID: 47294)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32311031222343445
    2. '(' → logprob: -2.323110342025757
    3. ''' → logprob: -2.573110342025757
    4. '(s' → logprob: -3.948110342025757
    5. '=' → logprob: -4.198110103607178
    6. '   ' → logprob: -4.698110103607178
    7. ' =' → logprob: -4.823110103607178
    8. 's' → logprob: -5.198110103607178
    9. ')' → logprob: -5.323110103607178
    10. '('' → logprob: -5.573110103607178

Token 2069: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9366002082824707
    2. ' =' → logprob: -1.3116002082824707
    3. '=' → logprob: -1.9366002082824707
    4. '   ' → logprob: -2.3116002082824707
    5. ':' → logprob: -3.1866002082824707
    6. 'def' → logprob: -3.9366002082824707
    7. '(' → logprob: -4.811600208282471
    8. ''' → logprob: -4.811600208282471
    9. ' _' → logprob: -5.686600208282471
    10. '(s' → logprob: -5.936600208282471

Token 2070: 'represented' (ID: 112029)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11441967636346817
    2. 's' → logprob: -3.11441969871521
    3. '"' → logprob: -4.364419460296631
    4. ''s' → logprob: -4.364419460296631
    5. ' '' → logprob: -4.739419460296631
    6. ')' → logprob: -4.989419460296631
    7. ' s' → logprob: -5.114419460296631
    8. 'm' → logprob: -5.739419460296631
    9. ' ' → logprob: -5.989419460296631
    10. '[' → logprob: -5.989419460296631

Token 2071: ' as' (ID: 472)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7958944439888
    2. '=' → logprob: -1.4208943843841553
    3. '('' → logprob: -2.4208943843841553
    4. '='' → logprob: -2.6708943843841553
    5. ' =' → logprob: -3.2958943843841553
    6. '(' → logprob: -3.5458943843841553
    7. ')' → logprob: -3.6708943843841553
    8. '   ' → logprob: -3.6708943843841553
    9. 's' → logprob: -5.045894622802734
    10. ''s' → logprob: -5.545894622802734

Token 2072: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1660003364086151
    2. '"' → logprob: -2.1660003662109375
    3. '['' → logprob: -3.5410003662109375
    4. ''s' → logprob: -5.1660003662109375
    5. '["' → logprob: -6.1660003662109375
    6. '[' → logprob: -7.4160003662109375
    7. '"'' → logprob: -8.416000366210938
    8. 's' → logprob: -9.041000366210938
    9. ' '' → logprob: -9.166000366210938
    10. '"s' → logprob: -9.416000366210938

Token 2073: 'っ' (ID: 8334)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22745370864868164
    2. 'っ' → logprob: -1.6024537086486816
    3. '"' → logprob: -6.352453708648682
    4. ' '' → logprob: -9.102453231811523
    5. ''s' → logprob: -10.227453231811523
    6. '`' → logprob: -10.852453231811523
    7. '_' → logprob: -11.102453231811523
    8. '['' → logprob: -11.352453231811523
    9. '')' → logprob: -11.977453231811523
    10. 'ッ' → logprob: -11.977453231811523

Token 2074: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.022765733301639557
    2. ''' → logprob: -4.022765636444092
    3. ' ')' → logprob: -5.772765636444092
    4. '')
' → logprob: -7.147765636444092
    5. 'っ' → logprob: -7.397765636444092
    6. ' ')
' → logprob: -10.89776611328125
    7. '')
' → logprob: -11.64776611328125
    8. ' '' → logprob: -11.64776611328125
    9. '',' → logprob: -11.77276611328125
    10. ')' → logprob: -12.14776611328125

Token 2075: ' etc' (ID: 5178)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24549447000026703
    2. '')' → logprob: -2.4954943656921387
    3. ' +' → logprob: -2.7454943656921387
    4. '   ' → logprob: -3.6204943656921387
    5. ''' → logprob: -4.620494365692139
    6. ')
' → logprob: -4.870494365692139
    7. '+' → logprob: -4.870494365692139
    8. ' )' → logprob: -5.245494365692139
    9. ' if' → logprob: -5.370494365692139
    10. '       ' → logprob: -5.995494365692139

Token 2076: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9684186577796936
    2. '')' → logprob: -1.3434185981750488
    3. '   ' → logprob: -2.093418598175049
    4. ''):' → logprob: -2.343418598175049
    5. '):' → logprob: -2.593418598175049
    6. ''' → logprob: -3.218418598175049
    7. '):
' → logprob: -5.468418598175049
    8. '_' → logprob: -5.718418598175049
    9. ''):
' → logprob: -5.718418598175049
    10. '       ' → logprob: -6.343418598175049

Token 2077: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02102246694266796
    2. '(s' → logprob: -5.021022319793701
    3. 'def' → logprob: -5.271022319793701
    4. ':' → logprob: -5.646022319793701
    5. '(' → logprob: -5.896022319793701
    6. ' =' → logprob: -7.146022319793701
    7. 's' → logprob: -8.27102279663086
    8. '       ' → logprob: -8.77102279663086
    9. ' (' → logprob: -8.89602279663086
    10. '=' → logprob: -8.89602279663086

Token 2078: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8302683234214783
    2. '   ' → logprob: -0.8302683234214783
    3. ' i' → logprob: -2.580268383026123
    4. ' =' → logprob: -3.830268383026123
    5. 's' → logprob: -4.080268383026123
    6. ' s' → logprob: -5.580268383026123
    7. ':' → logprob: -6.205268383026123
    8. 'm' → logprob: -6.455268383026123
    9. '=' → logprob: -7.080268383026123
    10. ' ' → logprob: -7.455268383026123

Token 2079: ' but' (ID: 889)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05612516403198242
    2. ' i' → logprob: -3.0561251640319824
    3. 'i' → logprob: -5.181125164031982
    4. ' mor' → logprob: -6.931125164031982
    5. ' tokens' → logprob: -8.30612564086914
    6. '    
' → logprob: -8.68112564086914
    7. 'tokens' → logprob: -8.93112564086914
    8. 'm' → logprob: -9.30612564086914
    9. '   ' → logprob: -9.80612564086914
    10. ' if' → logprob: -10.18112564086914

Token 2080: ' problem' (ID: 4792)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23311778903007507
    2. ' s' → logprob: -2.3581178188323975
    3. 's' → logprob: -2.6081178188323975
    4. ' True' → logprob: -4.983117580413818
    5. 'def' → logprob: -5.483117580413818
    6. ':' → logprob: -5.483117580413818
    7. ' not' → logprob: -5.733117580413818
    8. ' False' → logprob: -6.233117580413818
    9. '       ' → logprob: -6.358117580413818
    10. 'None' → logprob: -6.358117580413818

Token 2081: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3005905151367188
    2. '=' → logprob: -1.6755905151367188
    3. ':' → logprob: -1.9255905151367188
    4. ' continues' → logprob: -2.4255905151367188
    5. '   ' → logprob: -2.8005905151367188
    6. ' =' → logprob: -3.3005905151367188
    7. '#' → logprob: -3.8005905151367188
    8. ' ' → logprob: -3.8005905151367188
    9. '...' → logprob: -4.300590515136719
    10. 's' → logprob: -4.300590515136719

Token 2082: ' does' (ID: 2226)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8622094392776489
    2. '(s' → logprob: -1.987209439277649
    3. ' =' → logprob: -2.2372093200683594
    4. 'def' → logprob: -2.4872093200683594
    5. '):' → logprob: -2.6122093200683594
    6. '=' → logprob: -2.6122093200683594
    7. '   ' → logprob: -2.9872093200683594
    8. '(' → logprob: -4.612209320068359
    9. '#' → logprob: -4.862209320068359
    10. ')' → logprob: -4.987209320068359

Token 2083: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0687069371342659
    2. 'not' → logprob: -3.06870698928833
    3. ''' → logprob: -4.69370698928833
    4. ' s' → logprob: -6.06870698928833
    5. 'n't' → logprob: -6.44370698928833
    6. 'n' → logprob: -6.44370698928833
    7. 's' → logprob: -6.69370698928833
    8. ')' → logprob: -6.81870698928833
    9. ''t' → logprob: -7.19370698928833
    10. ' ' → logprob: -7.56870698928833

Token 2084: ' have' (ID: 679)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1770540475845337
    2. ' contain' → logprob: -1.9270540475845337
    3. 'continue' → logprob: -2.302053928375244
    4. ' continue' → logprob: -2.302053928375244
    5. 's' → logprob: -2.552053928375244
    6. ' have' → logprob: -3.052053928375244
    7. ''' → logprob: -3.177053928375244
    8. 'contain' → logprob: -3.427053928375244
    9. '
' → logprob: -3.552053928375244
    10. ' include' → logprob: -4.052053928375244

Token 2085: ' '' (ID: 461)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06296214461326599
    2. ' s' → logprob: -3.187962055206299
    3. ')' → logprob: -4.687962055206299
    4. ''' → logprob: -4.812962055206299
    5. '   ' → logprob: -7.437962055206299
    6. ''s' → logprob: -7.687962055206299
    7. '')' → logprob: -7.937962055206299
    8. '       ' → logprob: -8.437962532043457
    9. ' ' → logprob: -8.812962532043457
    10. '(s' → logprob: -9.062962532043457

Token 2086: 'っ' (ID: 8334)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02636822499334812
    2. ' ' → logprob: -4.276368141174316
    3. ''s' → logprob: -4.776368141174316
    4. '')' → logprob: -6.526368141174316
    5. 's' → logprob: -7.776368141174316
    6. 'っ' → logprob: -7.901368141174316
    7. ')' → logprob: -7.901368141174316
    8. ' '' → logprob: -8.401368141174316
    9. ' ')' → logprob: -9.026368141174316
    10. '_' → logprob: -9.526368141174316

Token 2087: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.09854008257389069
    2. ''' → logprob: -2.7235400676727295
    3. ''):' → logprob: -4.348540306091309
    4. ')' → logprob: -5.098540306091309
    5. ''):
' → logprob: -5.473540306091309
    6. '')
' → logprob: -6.098540306091309
    7. ' ')' → logprob: -6.473540306091309
    8. ')'' → logprob: -7.848540306091309
    9. ' '' → logprob: -9.598540306091309
    10. ':' → logprob: -9.723540306091309

Token 2088: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6614405512809753
    2. ':' → logprob: -0.7864405512809753
    3. '{' → logprob: -4.661440372467041
    4. 'def' → logprob: -5.036440372467041
    5. ' :' → logprob: -6.161440372467041
    6. ' ' → logprob: -6.286440372467041
    7. '#' → logprob: -6.536440372467041
    8. '(' → logprob: -6.786440372467041
    9. ':return' → logprob: -7.036440372467041
    10. ':
' → logprob: -7.161440372467041

Token 2089: ' input' (ID: 3422)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2105154991149902
    2. 'explicit' → logprob: -1.2105154991149902
    3. 'input' → logprob: -2.0855154991149902
    4. 'double' → logprob: -2.4605154991149902
    5. ' s' → logprob: -4.08551549911499
    6. 'a' → logprob: -4.21051549911499
    7. 'None' → logprob: -4.21051549911499
    8. '''' → logprob: -4.58551549911499
    9. 'def' → logprob: -4.71051549911499
    10. 'all' → logprob: -4.71051549911499

Token 2090: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09044881910085678
    2. ':' → logprob: -2.5904488563537598
    3. ':
' → logprob: -5.96544885635376
    4. ',' → logprob: -6.46544885635376
    5. '
' → logprob: -6.46544885635376
    6. ' ' → logprob: -6.84044885635376
    7. '#' → logprob: -6.96544885635376
    8. '    
' → logprob: -7.09044885635376
    9. ' :' → logprob: -7.21544885635376
    10. '.' → logprob: -8.340448379516602

Token 2091: ' rather' (ID: 7542)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007940901443362236
    2. ' ' → logprob: -6.007940769195557
    3. ' if' → logprob: -6.882940769195557
    4. ' pass' → logprob: -7.007940769195557
    5. '    
' → logprob: -7.132940769195557
    6. ' return' → logprob: -7.382940769195557
    7. '#' → logprob: -7.632940769195557
    8. '    ' → logprob: -7.632940769195557
    9. ' 
' → logprob: -8.632941246032715
    10. ' #' → logprob: -8.632941246032715

Token 2092: ' doubled' (ID: 69040)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0734930038452148
    2. ' s' → logprob: -1.0734930038452148
    3. '   ' → logprob: -2.198493003845215
    4. ' ' → logprob: -2.323493003845215
    5. '#' → logprob: -4.073493003845215
    6. 'm' → logprob: -4.198493003845215
    7. '<|end|>' → logprob: -4.323493003845215
    8. '    ' → logprob: -4.948493003845215
    9. '       ' → logprob: -5.573493003845215
    10. 'c' → logprob: -5.573493003845215

Token 2093: ' conson' (ID: 127767)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.753173828125
    2. ' ' → logprob: -0.878173828125
    3. '   ' → logprob: -3.003173828125
    4. 's' → logprob: -4.503173828125
    5. ' if' → logprob: -4.503173828125
    6. ' =' → logprob: -4.753173828125
    7. 'm' → logprob: -5.128173828125
    8. ' _' → logprob: -5.128173828125
    9. '  ' → logprob: -6.003173828125
    10. 'if' → logprob: -6.003173828125

Token 2094: 'ants' (ID: 2027)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2961446046829224
    2. 't' → logprob: -1.5461446046829224
    3. '   ' → logprob: -1.5461446046829224
    4. 'ants' → logprob: -2.421144485473633
    5. 'ant' → logprob: -2.546144485473633
    6. ')' → logprob: -2.921144485473633
    7. '_' → logprob: -4.171144485473633
    8. 'a' → logprob: -4.546144485473633
    9. ''' → logprob: -4.671144485473633
    10. ' ' → logprob: -5.171144485473633

Token 2095: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013209178112447262
    2. ':' → logprob: -5.263209342956543
    3. '
' → logprob: -6.263209342956543
    4. ' i' → logprob: -6.388209342956543
    5. ' if' → logprob: -6.888209342956543
    6. ':
' → logprob: -7.388209342956543
    7. 'def' → logprob: -7.513209342956543
    8. 'if' → logprob: -7.888209342956543
    9. 'i' → logprob: -8.013209342956543
    10. '    
' → logprob: -8.138209342956543

Token 2096: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.9103618264198303
    2. 's' → logprob: -1.4103617668151855
    3. 'm' → logprob: -1.6603617668151855
    4. 'the' → logprob: -2.4103617668151855
    5. ' next' → logprob: -3.1603617668151855
    6. ' s' → logprob: -4.4103617668151855
    7. 'input' → logprob: -5.1603617668151855
    8. ' the' → logprob: -5.5353617668151855
    9. 'con' → logprob: -5.9103617668151855
    10. 'string' → logprob: -6.4103617668151855

Token 2097: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0787593126296997
    2. 'char' → logprob: -1.0787593126296997
    3. ' char' → logprob: -2.70375919342041
    4. 'token' → logprob: -3.20375919342041
    5. '_char' → logprob: -3.32875919342041
    6. ')' → logprob: -3.57875919342041
    7. ' token' → logprob: -3.70375919342041
    8. 'con' → logprob: -4.07875919342041
    9. ' conson' → logprob: -4.07875919342041
    10. ' Mora' → logprob: -4.45375919342041

Token 2098: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4610185921192169
    2. '   ' → logprob: -1.0860185623168945
    3. ':
' → logprob: -4.7110185623168945
    4. 'def' → logprob: -4.7110185623168945
    5. ' :' → logprob: -6.0860185623168945
    6. '{' → logprob: -6.5860185623168945
    7. '[' → logprob: -6.5860185623168945
    8. '#' → logprob: -6.5860185623168945
    9. ' ' → logprob: -7.2110185623168945
    10. '(' → logprob: -7.3360185623168945

Token 2099: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011687950463965535
    2. 'def' → logprob: -7.876168727874756
    3. ' i' → logprob: -8.876169204711914
    4. '
' → logprob: -9.126169204711914
    5. ' if' → logprob: -9.251169204711914
    6. 'n' → logprob: -9.501169204711914
    7. 'i' → logprob: -9.751169204711914
    8. ':' → logprob: -9.751169204711914
    9. 'if' → logprob: -10.376169204711914
    10. '    
' → logprob: -10.501169204711914

Token 2100: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012881598435342312
    2. ' if' → logprob: -5.012881755828857
    3. ' i' → logprob: -5.637881755828857
    4. '
' → logprob: -6.637881755828857
    5. 'if' → logprob: -8.5128812789917
    6. '    
' → logprob: -8.5128812789917
    7. 'i' → logprob: -8.6378812789917
    8. '```' → logprob: -8.6378812789917
    9. ' tokens' → logprob: -8.7628812789917
    10. 'n' → logprob: -9.5128812789917

Token 2101: ' We' (ID: 1416)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21265287697315216
    2. 'm' → logprob: -1.9626529216766357
    3. 'i' → logprob: -3.8376529216766357
    4. 'return' → logprob: -4.712652683258057
    5. '#' → logprob: -5.212652683258057
    6. 'if' → logprob: -5.837652683258057
    7. 'pass' → logprob: -5.962652683258057
    8. 'result' → logprob: -5.962652683258057
    9. ' mor' → logprob: -6.087652683258057
    10. 'mor' → logprob: -6.712652683258057

Token 2102: ' process' (ID: 2273)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8825283050537109
    2. 'def' → logprob: -1.257528305053711
    3. ' =' → logprob: -1.382528305053711
    4. '=' → logprob: -3.757528305053711
    5. '#' → logprob: -5.507528305053711
    6. ')' → logprob: -5.632528305053711
    7. ' ' → logprob: -6.007528305053711
    8. ' def' → logprob: -6.257528305053711
    9. '       ' → logprob: -6.382528305053711
    10. '
' → logprob: -6.632528305053711

Token 2103: ' mor' (ID: 4658)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0011595487594604
    2. 'm' → logprob: -1.6261595487594604
    3. ' i' → logprob: -2.37615966796875
    4. '   ' → logprob: -2.62615966796875
    5. 's' → logprob: -2.87615966796875
    6. ' ' → logprob: -3.00115966796875
    7. ' mor' → logprob: -3.00115966796875
    8. ' []' → logprob: -3.37615966796875
    9. ' s' → logprob: -4.00115966796875
    10. '_' → logprob: -4.62615966796875

Token 2104: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.0005625653429888189
    2. '   ' → logprob: -8.00056266784668
    3. 'def' → logprob: -9.62556266784668
    4. '```' → logprob: -10.12556266784668
    5. 's' → logprob: -10.37556266784668
    6. '       ' → logprob: -11.00056266784668
    7. 'e' → logprob: -11.50056266784668
    8. 'a' → logprob: -11.62556266784668
    9. '           ' → logprob: -11.87556266784668
    10. ' ' → logprob: -12.00056266784668

Token 2105: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5145257711410522
    2. '=' → logprob: -1.6395257711410522
    3. '(s' → logprob: -2.139525890350342
    4. '   ' → logprob: -2.764525890350342
    5. '(m' → logprob: -4.264525890350342
    6. 'def' → logprob: -5.139525890350342
    7. '(' → logprob: -6.014525890350342
    8. '_m' → logprob: -6.764525890350342
    9. '=m' → logprob: -7.139525890350342
    10. '_' → logprob: -7.264525890350342

Token 2106: ' listed' (ID: 12073)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5903804898262024
    2. 'split' → logprob: -0.8403804898262024
    3. '[]
' → logprob: -4.590380668640137
    4. 'parse' → logprob: -5.715380668640137
    5. ' []' → logprob: -7.340380668640137
    6. '[' → logprob: -9.590380668640137
    7. 'm' → logprob: -10.340380668640137
    8. 'list' → logprob: -10.590380668640137
    9. '[]}' → logprob: -10.840380668640137
    10. '[])' → logprob: -10.965380668640137

Token 2107: ' by' (ID: 656)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2714588642120361
    2. '(s' → logprob: -1.5214588642120361
    3. '(m' → logprob: -1.7714588642120361
    4. '   ' → logprob: -1.8964588642120361
    5. ':' → logprob: -3.021458864212036
    6. 'm' → logprob: -3.396458864212036
    7. '[' → logprob: -3.896458864212036
    8. ')' → logprob: -3.896458864212036
    9. '(' → logprob: -4.271458625793457
    10. '=' → logprob: -4.771458625793457

Token 2108: ' parse' (ID: 8420)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.14394327998161316
    2. 'parse' → logprob: -2.0189433097839355
    3. ' split' → logprob: -7.1439433097839355
    4. 'm' → logprob: -8.643942832946777
    5. ' parse' → logprob: -8.643942832946777
    6. 'def' → logprob: -9.893942832946777
    7. 'list' → logprob: -11.018942832946777
    8. 's' → logprob: -11.268942832946777
    9. 'spl' → logprob: -11.768942832946777
    10. 'lambda' → logprob: -12.393942832946777

Token 2109: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.024764176458120346
    2. 'm' → logprob: -3.899764060974121
    3. 'def' → logprob: -5.899764060974121
    4. ')' → logprob: -8.149764060974121
    5. '(m' → logprob: -8.274764060974121
    6. 'return' → logprob: -8.524764060974121
    7. '   ' → logprob: -8.899764060974121
    8. '(s' → logprob: -9.024764060974121
    9. 's' → logprob: -9.274764060974121
    10. '```' → logprob: -10.149764060974121

Token 2110: 'oras' (ID: 41056)
  Prédit: 'oras'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -0.010453778319060802
    2. 'def' → logprob: -5.510453701019287
    3. 'or' → logprob: -5.635453701019287
    4. 's' → logprob: -6.760453701019287
    5. 'as' → logprob: -8.260454177856445
    6. 'split' → logprob: -8.385454177856445
    7. '```' → logprob: -8.635454177856445
    8. 'm' → logprob: -9.260454177856445
    9. '   ' → logprob: -9.635454177856445
    10. 'import' → logprob: -9.635454177856445

Token 2111: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4555744528770447
    2. ':' → logprob: -1.2055745124816895
    3. '   ' → logprob: -3.2055745124816895
    4. '(s' → logprob: -4.7055745124816895
    5. '():' → logprob: -5.4555745124816895
    6. '#' → logprob: -6.3305745124816895
    7. 'pass' → logprob: -6.8305745124816895
    8. 'return' → logprob: -6.8305745124816895
    9. ':def' → logprob: -6.9555745124816895
    10. ':return' → logprob: -6.9555745124816895

Token 2112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06203288957476616
    2. 'm' → logprob: -2.93703293800354
    3. 'def' → logprob: -5.937032699584961
    4. ' mor' → logprob: -5.937032699584961
    5. '```' → logprob: -8.562032699584961
    6. '
' → logprob: -8.562032699584961
    7. ':' → logprob: -8.687032699584961
    8. '    
' → logprob: -8.937032699584961
    9. '	m' → logprob: -9.062032699584961
    10. ' m' → logprob: -9.187032699584961

Token 2113: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2274705320596695
    2. 'm' → logprob: -1.6024705171585083
    3. ' mor' → logprob: -7.852470397949219
    4. ':' → logprob: -7.977470397949219
    5. 'return' → logprob: -7.977470397949219
    6. '    
' → logprob: -8.852470397949219
    7. '	m' → logprob: -9.352470397949219
    8. 'mor' → logprob: -9.352470397949219
    9. '
' → logprob: -9.477470397949219
    10. 's' → logprob: -9.477470397949219

Token 2114: ' So' (ID: 2632)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3541319668292999
    2. '   ' → logprob: -1.2291319370269775
    3. 'return' → logprob: -6.104132175445557
    4. ' mor' → logprob: -6.604132175445557
    5. 'mor' → logprob: -7.479132175445557
    6. ':' → logprob: -8.729131698608398
    7. '    
' → logprob: -8.854131698608398
    8. '	m' → logprob: -9.229131698608398
    9. ')' → logprob: -9.229131698608398
    10. ' ' → logprob: -9.354131698608398

Token 2115: ' no' (ID: 860)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -1.1868011951446533
    2. '   ' → logprob: -1.3118011951446533
    3. 'm' → logprob: -1.4368011951446533
    4. ' mor' → logprob: -2.4368011951446533
    5. ' parse' → logprob: -3.1868011951446533
    6. 'return' → logprob: -3.6868011951446533
    7. 'parsed' → logprob: -4.561800956726074
    8. ' return' → logprob: -5.311800956726074
    9. 'def' → logprob: -5.311800956726074
    10. ' parsed' → logprob: -5.686800956726074

Token 2116: ' action' (ID: 3736)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8726691007614136
    2. '_' → logprob: -2.122669219970703
    3. 'return' → logprob: -2.497669219970703
    4. 's' → logprob: -2.622669219970703
    5. 'change' → logprob: -2.747669219970703
    6. 'def' → logprob: -3.122669219970703
    7. 'more' → logprob: -3.622669219970703
    8. '_m' → logprob: -3.872669219970703
    9. '#' → logprob: -3.997669219970703
    10. ' return' → logprob: -4.622669219970703

Token 2117: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43677711486816406
    2. '   ' → logprob: -2.186777114868164
    3. '<|end|>' → logprob: -2.561777114868164
    4. 'return' → logprob: -3.186777114868164
    5. ':return' → logprob: -3.311777114868164
    6. '#' → logprob: -3.811777114868164
    7. ')' → logprob: -4.561777114868164
    8. '<|end|>' → logprob: -4.686777114868164
    9. '_' → logprob: -4.811777114868164
    10. ' ' → logprob: -4.936777114868164

Token 2118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028728216886520386
    2. 'return' → logprob: -4.528728008270264
    3. 'def' → logprob: -4.778728008270264
    4. ':' → logprob: -5.153728008270264
    5. ' return' → logprob: -6.528728008270264
    6. ':return' → logprob: -6.903728008270264
    7. ' ' → logprob: -7.653728008270264
    8. ')' → logprob: -9.403728485107422
    9. '
' → logprob: -9.778728485107422
    10. '  ' → logprob: -10.153728485107422

Token 2119: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04182817041873932
    2. 'return' (adapté à ' return') → logprob: -3.416828155517578
    3. ' return' → logprob: -5.791828155517578
    4. 'pass' → logprob: -6.291828155517578
    5. ' pass' → logprob: -7.041828155517578
    6. ':return' → logprob: -7.041828155517578
    7. '
' → logprob: -7.791828155517578
    8. '    
' → logprob: -8.416828155517578
    9. ' ' → logprob: -8.666828155517578
    10. '	return' → logprob: -9.041828155517578

Token 2120: ' parse' (ID: 8420)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1621551364660263
    2. ' mor' → logprob: -2.1621551513671875
    3. 'mor' → logprob: -3.7871551513671875
    4. ' s' → logprob: -5.1621551513671875
    5. 'm' → logprob: -5.9121551513671875
    6. '[]' → logprob: -6.1621551513671875
    7. 'split' → logprob: -7.6621551513671875
    8. ' []' → logprob: -7.7871551513671875
    9. 'spl' → logprob: -9.412155151367188
    10. 'parse' → logprob: -9.537155151367188

Token 2121: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.5263583660125732
    2. '_' → logprob: -0.9013583660125732
    3. '(' → logprob: -6.401358604431152
    4. 's' → logprob: -7.526358604431152
    5. 'm' → logprob: -8.151358604431152
    6. ')' → logprob: -8.651358604431152
    7. '_s' → logprob: -8.776358604431152
    8. 'parse' → logprob: -9.651358604431152
    9. '```' → logprob: -9.776358604431152
    10. '_(' → logprob: -9.901358604431152

Token 2122: 'oras' (ID: 41056)
  Prédit: 'oras'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -0.0006962312036193907
    2. 'or' → logprob: -7.375696182250977
    3. 's' → logprob: -10.625696182250977
    4. 'as' → logprob: -12.250696182250977
    5. 'ora' → logprob: -12.250696182250977
    6. '_' → logprob: -12.375696182250977
    7. 'aras' → logprob: -12.500696182250977
    8. 'm' → logprob: -12.750696182250977
    9. '_or' → logprob: -13.125696182250977
    10. 'ras' → logprob: -13.125696182250977

Token 2123: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.45375245809555054
    2. '(s' → logprob: -1.0787525177001953
    3. '<|end|>' → logprob: -3.8287525177001953
    4. ')' → logprob: -6.953752517700195
    5. '<|end|>' → logprob: -7.078752517700195
    6. 's' → logprob: -7.578752517700195
    7. '(
' → logprob: -8.828752517700195
    8. '_' → logprob: -9.078752517700195
    9. '_s' → logprob: -9.328752517700195
    10. '```' → logprob: -10.078752517700195

Token 2124: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013393278641160578
    2. '(s' → logprob: -9.000133514404297
    3. '   ' → logprob: -12.250133514404297
    4. ')s' → logprob: -12.750133514404297
    5. ' )' → logprob: -14.000133514404297
    6. 's' → logprob: -14.000133514404297
    7. '(' → logprob: -14.625133514404297
    8. ')
' → logprob: -15.125133514404297
    9. ' ' → logprob: -16.250133514404297
    10. '       ' → logprob: -16.375133514404297

Token 2125: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2126: ' is' (ID: 382)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.36173757910728455
    2. 'split' → logprob: -2.7367374897003174
    3. 'to' → logprob: -3.2367374897003174
    4. ' main' → logprob: -3.8617374897003174
    5. 'parse' → logprob: -3.9867374897003174
    6. 'convert' → logprob: -3.9867374897003174
    7. 'count' → logprob: -4.3617377281188965
    8. 'get' → logprob: -4.3617377281188965
    9. 'expand' → logprob: -4.6117377281188965
    10. 'replace' → logprob: -4.7367377281188965

Token 2127: '_s' (ID: 1278)
  Prédit: '_vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vo' → logprob: -0.04620466008782387
    2. '_v' → logprob: -3.1712045669555664
    3. 'vo' → logprob: -6.421204566955566
    4. '_m' → logprob: -7.671204566955566
    5. '_s' → logprob: -8.671204566955566
    6. '_long' → logprob: -9.046204566955566
    7. '_' → logprob: -9.171204566955566
    8. '_k' → logprob: -9.296204566955566
    9. '_voice' → logprob: -9.421204566955566
    10. '_valid' → logprob: -9.421204566955566

Token 2128: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.2997289001941681
    2. '_vo' → logprob: -2.2997288703918457
    3. 'o' → logprob: -3.5497288703918457
    4. 'vo' → logprob: -3.6747288703918457
    5. 't' → logprob: -4.299728870391846
    6. 'u' → logprob: -4.924728870391846
    7. '_p' → logprob: -4.924728870391846
    8. '_v' → logprob: -5.049728870391846
    9. '_' → logprob: -5.049728870391846
    10. '_s' → logprob: -5.299728870391846

Token 2129: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.03865675628185272
    2. 'o' → logprob: -3.288656711578369
    3. '_on' → logprob: -7.538656711578369
    4. '_o' → logprob: -10.288657188415527
    5. '_' → logprob: -10.788657188415527
    6. 'on's' → logprob: -12.038657188415527
    7. 'ont' → logprob: -13.413657188415527
    8. '__' → logprob: -13.413657188415527
    9. 'n' → logprob: -13.538657188415527
    10. '`' → logprob: -13.788657188415527

Token 2130: '_follow' (ID: 110088)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43154242634773254
    2. '(' → logprob: -1.8065423965454102
    3. '_m' → logprob: -2.18154239654541
    4. '(m' → logprob: -2.80654239654541
    5. '_(' → logprob: -4.80654239654541
    6. 'm' → logprob: -6.55654239654541
    7. '('_' → logprob: -7.43154239654541
    8. '(_)' → logprob: -8.30654239654541
    9. ''' → logprob: -8.43154239654541
    10. '_token' → logprob: -8.55654239654541

Token 2131: 'ing' (ID: 289)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6457767486572266
    2. 'ing' → logprob: -1.2707767486572266
    3. 'ed' → logprob: -1.6457767486572266
    4. '_m' → logprob: -7.645776748657227
    5. 'm' → logprob: -8.020776748657227
    6. '_' → logprob: -8.395776748657227
    7. 'u' → logprob: -8.520776748657227
    8. 'er' → logprob: -9.270776748657227
    9. '_c' → logprob: -9.395776748657227
    10. '_next' → logprob: -9.520776748657227

Token 2132: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.22319327294826508
    2. '_' → logprob: -1.9731932878494263
    3. '_m' → logprob: -3.4731931686401367
    4. '(' → logprob: -3.5981931686401367
    5. '_(' → logprob: -6.973193168640137
    6. '(_' → logprob: -7.723193168640137
    7. 'm' → logprob: -7.973193168640137
    8. '(s' → logprob: -8.223193168640137
    9. '(_)' → logprob: -9.348193168640137
    10. 'underscore' → logprob: -9.473193168640137

Token 2133: 'oras' (ID: 41056)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.017223184928297997
    2. 'ora' → logprob: -4.142223358154297
    3. 'a' → logprob: -8.267223358154297
    4. '_o' → logprob: -8.517223358154297
    5. ''o' → logprob: -8.892223358154297
    6. '_' → logprob: -9.517223358154297
    7. '(o' → logprob: -9.517223358154297
    8. 'oras' → logprob: -9.642223358154297
    9. 'e' → logprob: -9.642223358154297
    10. 'or' → logprob: -9.892223358154297

Token 2134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3424380123615265
    2. '[' → logprob: -1.967437982559204
    3. ')' → logprob: -3.092437982559204
    4. '):' → logprob: -3.092437982559204
    5. '   ' → logprob: -4.342438220977783
    6. '[m' → logprob: -4.842438220977783
    7. '[idx' → logprob: -4.967438220977783
    8. '(m' → logprob: -5.217438220977783
    9. ',m' → logprob: -5.342438220977783
    10. '_,' → logprob: -6.342438220977783

Token 2135: ' i' (ID: 575)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.027304425835609436
    2. 'index' → logprob: -3.7773044109344482
    3. 'i' → logprob: -5.902304649353027
    4. ' idx' → logprob: -6.652304649353027
    5. ' index' → logprob: -10.902304649353027
    6. '   ' → logprob: -12.652304649353027
    7. 'pos' → logprob: -13.402304649353027
    8. ' i' → logprob: -13.402304649353027
    9. '	idx' → logprob: -14.902304649353027
    10. 'm' → logprob: -15.152304649353027

Token 2136: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.32253769040107727
    2. 'dx' → logprob: -1.8225376605987549
    3. 'x' → logprob: -2.447537660598755
    4. 'nd' → logprob: -4.197537899017334
    5. '):
' → logprob: -4.822537899017334
    6. 'ex' → logprob: -5.697537899017334
    7. '):' → logprob: -7.822537899017334
    8. ' +' → logprob: -8.322537422180176
    9. 'nt' → logprob: -8.947537422180176
    10. 'f' → logprob: -9.197537422180176

Token 2137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037148479372262955
    2. 'i' → logprob: -3.5371484756469727
    3. ' i' → logprob: -5.412148475646973
    4. 'm' → logprob: -7.037148475646973
    5. '(i' → logprob: -7.537148475646973
    6. '(m' → logprob: -8.162148475646973
    7. 'return' → logprob: -8.537148475646973
    8. ' ' → logprob: -8.912148475646973
    9. '       ' → logprob: -9.162148475646973
    10. 'len' → logprob: -9.287148475646973

Token 2138: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10624925792217255
    2. '   ' → logprob: -2.3562493324279785
    3. ' i' → logprob: -5.6062493324279785
    4. 'if' → logprob: -6.1062493324279785
    5. 'return' → logprob: -9.73124885559082
    6. '(i' → logprob: -10.35624885559082
    7. ' if' → logprob: -11.60624885559082
    8. ' ' → logprob: -11.85624885559082
    9. '  ' → logprob: -12.60624885559082
    10. '	i' → logprob: -12.73124885559082

Token 2139: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.3213025744771585e-05
    2. '   ' → logprob: -11.000033378601074
    3. ' i' → logprob: -11.500033378601074
    4. 'return' → logprob: -12.750033378601074
    5. '(i' → logprob: -12.875033378601074
    6. 'if' → logprob: -13.875033378601074
    7. '
' → logprob: -17.750032424926758
    8. ' ' → logprob: -18.000032424926758
    9. '	i' → logprob: -18.000032424926758
    10. '  ' → logprob: -18.125032424926758

Token 2140: 'oku' (ID: 13454)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005840637721121311
    2. ' +' → logprob: -5.38084077835083
    3. ' <' → logprob: -7.50584077835083
    4. '<len' → logprob: -8.130840301513672
    5. '+i' → logprob: -8.505840301513672
    6. '<' → logprob: -8.880840301513672
    7. '+
' → logprob: -11.755840301513672
    8. 'f' → logprob: -11.880840301513672
    9. 'i' → logprob: -12.255840301513672
    10. '+=' → logprob: -13.005840301513672

Token 2141: 'on' (ID: 263)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.18014390766620636
    2. 'on' → logprob: -1.80514395236969
    3. 'n' → logprob: -8.555144309997559
    4. '_on' → logprob: -9.930144309997559
    5. '_' → logprob: -10.180144309997559
    6. '_o' → logprob: -10.680144309997559
    7. 'on's' → logprob: -11.305144309997559
    8. 'i' → logprob: -11.555144309997559
    9. '   ' → logprob: -11.680144309997559
    10. '
' → logprob: -11.680144309997559

Token 2142: ' mora' (ID: 47294)
  Prédit: '<m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<m' → logprob: -1.3763443231582642
    2. '+' → logprob: -1.5013443231582642
    3. '<len' → logprob: -2.7513442039489746
    4. '_follow' → logprob: -2.7513442039489746
    5. 'if' → logprob: -2.8763442039489746
    6. 'i' → logprob: -3.0013442039489746
    7. ' <' → logprob: -3.1263442039489746
    8. '   ' → logprob: -3.3763442039489746
    9. ')' → logprob: -3.5013442039489746
    10. ' and' → logprob: -4.001344203948975

Token 2143: ' is' (ID: 382)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8124301433563232
    2. ' =' → logprob: -1.9374301433563232
    3. '=' → logprob: -2.1874301433563232
    4. 'def' → logprob: -2.1874301433563232
    5. '   ' → logprob: -2.4374301433563232
    6. ' and' → logprob: -2.5624301433563232
    7. ':' → logprob: -2.9374301433563232
    8. ')' → logprob: -3.5624301433563232
    9. '==' → logprob: -3.6874301433563232
    10. 'm' → logprob: -3.6874301433563232

Token 2144: ' represented' (ID: 27328)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015085102990269661
    2. 'False' → logprob: -4.765085220336914
    3. '(i' → logprob: -5.515085220336914
    4. ' i' → logprob: -6.265085220336914
    5. 'len' → logprob: -8.140085220336914
    6. ' False' → logprob: -9.890085220336914
    7. ' (' → logprob: -9.890085220336914
    8. '   ' → logprob: -10.265085220336914
    9. '(' → logprob: -10.765085220336914
    10. 'True' → logprob: -11.265085220336914

Token 2145: ' as' (ID: 472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8942906856536865
    2. ' by' → logprob: -1.8942906856536865
    3. '(m' → logprob: -1.8942906856536865
    4. 'len' → logprob: -1.8942906856536865
    5. '   ' → logprob: -2.2692906856536865
    6. ' if' → logprob: -2.3942906856536865
    7. 'def' → logprob: -2.3942906856536865
    8. 'm' → logprob: -3.1442906856536865
    9. 'by' → logprob: -4.019290924072266
    10. ' and' → logprob: -4.894290924072266

Token 2146: ' double' (ID: 3503)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.023182347416877747
    2. '(i' → logprob: -4.648182392120361
    3. 'len' → logprob: -4.648182392120361
    4. ' i' → logprob: -6.023182392120361
    5. 'False' → logprob: -7.398182392120361
    6. '(len' → logprob: -7.898182392120361
    7. ' (' → logprob: -9.023181915283203
    8. '(' → logprob: -9.648181915283203
    9. ' len' → logprob: -10.273181915283203
    10. 'True' → logprob: -10.398181915283203

Token 2147: ' conson' (ID: 127767)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.23051729798316956
    2. '_con' → logprob: -2.4805173873901367
    3. 'm' → logprob: -3.2305173873901367
    4. ''' → logprob: -3.9805173873901367
    5. '   ' → logprob: -4.105517387390137
    6. '_' → logprob: -4.355517387390137
    7. ' conson' → logprob: -4.730517387390137
    8. ' ' → logprob: -4.980517387390137
    9. 'if' → logprob: -5.355517387390137
    10. 'c' → logprob: -5.730517387390137

Token 2148: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.029333263635635376
    2. 'ants' → logprob: -3.7793333530426025
    3. 'a' → logprob: -5.279333114624023
    4. '   ' → logprob: -8.029333114624023
    5. 't' → logprob: -8.154333114624023
    6. 'm' → logprob: -8.904333114624023
    7. '[i' → logprob: -10.279333114624023
    8. 'an' → logprob: -10.404333114624023
    9. 'antd' → logprob: -11.279333114624023
    10. 'antt' → logprob: -11.279333114624023

Token 2149: ' at' (ID: 540)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9488404393196106
    2. '   ' → logprob: -1.5738403797149658
    3. 'and' → logprob: -2.073840379714966
    4. ' if' → logprob: -2.573840379714966
    5. 'def' → logprob: -2.698840379714966
    6. 'if' → logprob: -2.823840379714966
    7. '(m' → logprob: -3.698840379714966
    8. 'm' → logprob: -4.323840618133545
    9. '(i' → logprob: -4.573840618133545
    10. ':' → logprob: -5.448840618133545

Token 2150: ' start' (ID: 1604)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10982026159763336
    2. 'm' → logprob: -2.3598203659057617
    3. 'len' → logprob: -4.984820365905762
    4. '0' → logprob: -6.859820365905762
    5. 'index' → logprob: -7.609820365905762
    6. ' i' → logprob: -7.984820365905762
    7. 'mor' → logprob: -8.609820365905762
    8. ' mor' → logprob: -9.109820365905762
    9. 'the' → logprob: -9.484820365905762
    10. 'next' → logprob: -9.484820365905762

Token 2151: ' of' (ID: 328)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7777283191680908
    2. 'm' → logprob: -1.7777283191680908
    3. 'if' → logprob: -2.152728319168091
    4. 'and' → logprob: -2.527728319168091
    5. '(m' → logprob: -2.652728319168091
    6. ' if' → logprob: -3.027728319168091
    7. '   ' → logprob: -4.402728080749512
    8. 's' → logprob: -4.402728080749512
    9. ')' → logprob: -5.027728080749512
    10. ':' → logprob: -5.152728080749512

Token 2152: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011965014971792698
    2. 'mor' → logprob: -4.511964797973633
    3. ' mor' → logprob: -7.136964797973633
    4. '   ' → logprob: -10.886964797973633
    5. '(m' → logprob: -11.011964797973633
    6. '	m' → logprob: -11.511964797973633
    7. 'len' → logprob: -11.761964797973633
    8. 'i' → logprob: -11.886964797973633
    9. 'mo' → logprob: -12.074464797973633
    10. '```' → logprob: -12.136964797973633

Token 2153: ' after' (ID: 1934)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5632145404815674
    2. ' and' → logprob: -1.0632145404815674
    3. 'and' → logprob: -3.4382145404815674
    4. ' if' → logprob: -3.9382145404815674
    5. 'def' → logprob: -4.188214302062988
    6. '(m' → logprob: -5.188214302062988
    7. 'if' → logprob: -5.563214302062988
    8. 'm' → logprob: -5.938214302062988
    9. '(i' → logprob: -6.813214302062988
    10. 'i' → logprob: -6.813214302062988

Token 2154: ' current' (ID: 2208)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5970852375030518
    2. 'i' → logprob: -0.8470852375030518
    3. ' mor' → logprob: -4.097084999084473
    4. 'mor' → logprob: -6.097084999084473
    5. ' i' → logprob: -6.597084999084473
    6. '   ' → logprob: -8.847084999084473
    7. '(i' → logprob: -9.097084999084473
    8. 's' → logprob: -9.472084999084473
    9. '[i' → logprob: -9.972084999084473
    10. 'the' → logprob: -10.222084999084473

Token 2155: ' mora' (ID: 47294)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7663147449493408
    2. 'def' → logprob: -1.8913147449493408
    3. ' if' → logprob: -2.516314744949341
    4. '   ' → logprob: -2.641314744949341
    5. 'm' → logprob: -2.766314744949341
    6. ' and' → logprob: -2.891314744949341
    7. 'i' → logprob: -3.266314744949341
    8. 'and' → logprob: -4.141314506530762
    9. '(m' → logprob: -4.266314506530762
    10. ')' → logprob: -4.391314506530762

Token 2156: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14785295724868774
    2. ' and' → logprob: -2.897852897644043
    3. ' if' → logprob: -3.522852897644043
    4. '(m' → logprob: -4.147852897644043
    5. 'def' → logprob: -4.272852897644043
    6. ':' → logprob: -5.022852897644043
    7. 'and' → logprob: -5.147852897644043
    8. 'if' → logprob: -5.272852897644043
    9. 'm' → logprob: -6.397852897644043
    10. '(' → logprob: -7.272852897644043

Token 2157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6667303442955017
    2. ' and' → logprob: -0.7917303442955017
    3. 'and' → logprob: -3.4167304039001465
    4. '       ' → logprob: -8.666729927062988
    5. 'm' → logprob: -8.916729927062988
    6. '(m' → logprob: -9.166729927062988
    7. ')' → logprob: -9.541729927062988
    8. ':' → logprob: -9.666729927062988
    9. ' ' → logprob: -10.166729927062988
    10. ' if' → logprob: -10.291729927062988

Token 2158: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02472905069589615
    2. 'i' → logprob: -3.899729013442993
    3. ' i' → logprob: -6.149729251861572
    4. ' and' → logprob: -6.899729251861572
    5. 'm' → logprob: -8.024728775024414
    6. 'if' → logprob: -8.524728775024414
    7. 'and' → logprob: -8.524728775024414
    8. ' if' → logprob: -9.274728775024414
    9. '       ' → logprob: -9.899728775024414
    10. 'return' → logprob: -10.274728775024414

Token 2159: ' e' (ID: 319)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13396349549293518
    2. 'if' → logprob: -2.1339635848999023
    3. 'i' → logprob: -5.133963584899902
    4. ' if' → logprob: -6.883963584899902
    5. ' i' → logprob: -9.508963584899902
    6. 'def' → logprob: -11.008963584899902
    7. '
' → logprob: -14.383963584899902
    8. ' ' → logprob: -14.633963584899902
    9. '```' → logprob: -14.633963584899902
    10. '(i' → logprob: -15.133963584899902

Token 2160: '.g' (ID: 1940)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.753589391708374
    2. '+' → logprob: -1.753589391708374
    3. 'i' → logprob: -2.003589391708374
    4. 'm' → logprob: -2.753589391708374
    5. '==' → logprob: -3.503589391708374
    6. 'x' → logprob: -3.628589391708374
    7. '=' → logprob: -4.003589630126953
    8. '<' → logprob: -4.503589630126953
    9. 'f' → logprob: -4.628589630126953
    10. 'lif' → logprob: -4.878589630126953

Token 2161: '.' (ID: 13)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.40028807520866394
    2. ' i' → logprob: -1.4002881050109863
    3. '   ' → logprob: -2.6502881050109863
    4. 'if' → logprob: -4.900288105010986
    5. ' if' → logprob: -5.275288105010986
    6. ' ' → logprob: -9.900287628173828
    7. '
' → logprob: -11.150287628173828
    8. ' len' → logprob: -11.150287628173828
    9. 'len' → logprob: -11.275287628173828
    10. '(i' → logprob: -11.400287628173828

Token 2162: ' in' (ID: 306)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03545626625418663
    2. ' i' → logprob: -3.4104561805725098
    3. '   ' → logprob: -6.91045618057251
    4. 'len' → logprob: -7.41045618057251
    5. ' len' → logprob: -9.410456657409668
    6. 'if' → logprob: -10.160456657409668
    7. ' (' → logprob: -10.535456657409668
    8. '(i' → logprob: -10.535456657409668
    9. 'm' → logprob: -12.035456657409668
    10. 'def' → logprob: -12.160456657409668

Token 2163: ' '' (ID: 461)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.11965107917785645
    2. 'i' → logprob: -2.6196510791778564
    3. 'len' → logprob: -4.119650840759277
    4. ' mor' → logprob: -4.369650840759277
    5. 's' → logprob: -4.994650840759277
    6. 'mor' → logprob: -6.744650840759277
    7. '   ' → logprob: -6.869650840759277
    8. ' i' → logprob: -7.619650840759277
    9. 'def' → logprob: -8.369650840759277
    10. '```' → logprob: -8.932150840759277

Token 2164: 'k' (ID: 74)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3816709518432617
    2. 'i' → logprob: -1.2566709518432617
    3. 'mor' → logprob: -4.256670951843262
    4. ' mor' → logprob: -5.131670951843262
    5. 's' → logprob: -5.756670951843262
    6. 'len' → logprob: -6.131670951843262
    7. '   ' → logprob: -6.506670951843262
    8. ''' → logprob: -7.006670951843262
    9. '"' → logprob: -7.506670951843262
    10. ' i' → logprob: -7.631670951843262

Token 2165: 'ipp' (ID: 3012)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.15546275675296783
    2. 'i' → logprob: -2.6554627418518066
    3. 'yo' → logprob: -3.4054627418518066
    4. 'a' → logprob: -4.280462741851807
    5. 'yu' → logprob: -4.905462741851807
    6. 'o' → logprob: -5.280462741851807
    7. '[i' → logprob: -5.655462741851807
    8. '   ' → logprob: -6.155462741851807
    9. 'ya' → logprob: -6.280462741851807
    10. 'e' → logprob: -6.780462741851807

Token 2166: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5664365291595459
    2. 'i' → logprob: -1.066436529159546
    3. 'e' → logprob: -3.191436529159546
    4. 'a' → logprob: -3.566436529159546
    5. 'r' → logprob: -5.691436767578125
    6. ''i' → logprob: -5.816436767578125
    7. 'o' → logprob: -6.066436767578125
    8. 'n' → logprob: -6.566436767578125
    9. '   ' → logprob: -6.941436767578125
    10. ''' → logprob: -6.941436767578125

Token 2167: ''' (ID: 6)
  Prédit: ''):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.45418688654899597
    2. ''' → logprob: -1.9541869163513184
    3. '')' → logprob: -3.0791869163513184
    4. ''):' → logprob: -3.7041869163513184
    5. '[i' → logprob: -3.8291869163513184
    6. '   ' → logprob: -3.8291869163513184
    7. '':
' → logprob: -3.9541869163513184
    8. '):
' → logprob: -4.204186916351318
    9. '']:
' → logprob: -4.579186916351318
    10. '',' → logprob: -4.829186916351318

Token 2168: ' mor' (ID: 4658)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06386829912662506
    2. ' if' → logprob: -3.313868284225464
    3. 'def' → logprob: -4.563868522644043
    4. '(m' → logprob: -5.563868522644043
    5. 'if' → logprob: -5.938868522644043
    6. 'm' → logprob: -5.938868522644043
    7. ':' → logprob: -6.313868522644043
    8. ' and' → logprob: -6.563868522644043
    9. ':
' → logprob: -6.938868522644043
    10. '
' → logprob: -8.063868522644043

Token 2169: 'as' (ID: 288)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.7677745223045349
    2. 'r' → logprob: -1.5177745819091797
    3. 'i' → logprob: -1.8927745819091797
    4. 'ras' → logprob: -2.7677745819091797
    5. 'a' → logprob: -3.2677745819091797
    6. 's' → logprob: -4.14277458190918
    7. 'n' → logprob: -4.39277458190918
    8. '   ' → logprob: -4.64277458190918
    9. '[i' → logprob: -5.01777458190918
    10. 'as' → logprob: -5.39277458190918

Token 2170: ' would' (ID: 1481)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18865366280078888
    2. 'def' → logprob: -2.4386537075042725
    3. ':' → logprob: -2.9386537075042725
    4. ' =' → logprob: -4.813653469085693
    5. '):' → logprob: -5.313653469085693
    6. ' if' → logprob: -5.813653469085693
    7. '=' → logprob: -5.938653469085693
    8. ':
' → logprob: -6.188653469085693
    9. ')' → logprob: -6.688653469085693
    10. '):
' → logprob: -6.813653469085693

Token 2171: ' be' (ID: 413)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7257066369056702
    2. '=' → logprob: -1.4757065773010254
    3. ' be' → logprob: -1.8507065773010254
    4. ' i' → logprob: -2.6007065773010254
    5. 'be' → logprob: -3.7257065773010254
    6. ' =' → logprob: -4.350706577301025
    7. '=i' → logprob: -4.600706577301025
    8. 'if' → logprob: -5.850706577301025
    9. '   ' → logprob: -6.350706577301025
    10. '[i' → logprob: -6.600706577301025

Token 2172: ' ['' (ID: 5140)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.16871464252471924
    2. 's' → logprob: -2.9187145233154297
    3. ''' → logprob: -3.7937145233154297
    4. '   ' → logprob: -3.9187145233154297
    5. ' mor' → logprob: -4.04371452331543
    6. '['' → logprob: -5.04371452331543
    7. 'i' → logprob: -5.16871452331543
    8. '`' → logprob: -5.54371452331543
    9. 'if' → logprob: -5.66871452331543
    10. 'k' → logprob: -5.79371452331543

Token 2173: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.16474005579948425
    2. ''' → logprob: -2.2897400856018066
    3. 'k' → logprob: -3.7897400856018066
    4. ''i' → logprob: -4.664740085601807
    5. 'kip' → logprob: -5.164740085601807
    6. 'pi' → logprob: -5.414740085601807
    7. 'p' → logprob: -6.039740085601807
    8. ''p' → logprob: -6.039740085601807
    9. '['' → logprob: -7.789740085601807
    10. ''m' → logprob: -7.789740085601807

Token 2174: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.585917592048645
    2. '','' → logprob: -0.835917592048645
    3. 'p' → logprob: -5.3359174728393555
    4. ''' → logprob: -6.5859174728393555
    5. '+' → logprob: -6.7109174728393555
    6. ''p' → logprob: -6.8359174728393555
    7. '+p' → logprob: -7.9609174728393555
    8. 'pp' → logprob: -8.710917472839355
    9. ''',' → logprob: -8.835917472839355
    10. ',' → logprob: -8.960917472839355

Token 2175: 'p' (ID: 79)
  Prédit: 'ppu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ppu' → logprob: -0.2204473614692688
    2. ''p' → logprob: -2.095447301864624
    3. ''' → logprob: -3.345447301864624
    4. 'p' → logprob: -3.970447301864624
    5. 'pp' → logprob: -3.970447301864624
    6. '['' → logprob: -6.970447540283203
    7. ''s' → logprob: -7.595447540283203
    8. 'ppo' → logprob: -9.220447540283203
    9. '"' → logprob: -9.345447540283203
    10. 'pu' → logprob: -10.345447540283203

Token 2176: '','' (ID: 4074)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.04468274861574173
    2. 'u' → logprob: -3.419682741165161
    3. ''u' → logprob: -5.16968297958374
    4. ''p' → logprob: -6.04468297958374
    5. 'pu' → logprob: -6.29468297958374
    6. ''' → logprob: -7.16968297958374
    7. ']' → logprob: -9.794682502746582
    8. 'i' → logprob: -10.294682502746582
    9. '{'' → logprob: -10.669682502746582
    10. '']' → logprob: -10.794682502746582

Token 2177: 'pu' (ID: 5112)
  Prédit: ''p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''p' → logprob: -0.11109381914138794
    2. ''' → logprob: -2.611093759536743
    3. 'p' → logprob: -3.736093759536743
    4. ''u' → logprob: -5.611093997955322
    5. '']' → logprob: -6.736093997955322
    6. ''s' → logprob: -6.986093997955322
    7. 'pu' → logprob: -7.111093997955322
    8. ']' → logprob: -8.611093521118164
    9. '['' → logprob: -9.111093521118164
    10. '#' → logprob: -9.111093521118164

Token 2178: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.015500925481319427
    2. '','' → logprob: -5.515501022338867
    3. ']' → logprob: -5.765501022338867
    4. '']
' → logprob: -5.890501022338867
    5. '',' → logprob: -6.015501022338867
    6. '[' → logprob: -6.265501022338867
    7. ''' → logprob: -8.265501022338867
    8. 's' → logprob: -8.265501022338867
    9. '[i' → logprob: -9.515501022338867
    10. '"]' → logprob: -9.515501022338867

Token 2179: ' or' (ID: 503)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027916373685002327
    2. ' if' → logprob: -4.902916431427002
    3. ' and' → logprob: -5.527916431427002
    4. ':' → logprob: -5.652916431427002
    5. 'if' → logprob: -5.652916431427002
    6. ':
' → logprob: -5.777916431427002
    7. ' =' → logprob: -6.652916431427002
    8. '
' → logprob: -7.152916431427002
    9. 'and' → logprob: -7.152916431427002
    10. 'def' → logprob: -7.152916431427002

Token 2180: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.7615491151809692
    2. 'i' → logprob: -1.7615491151809692
    3. 'len' → logprob: -1.7615491151809692
    4. 'if' → logprob: -2.6365489959716797
    5. '[' → logprob: -4.13654899597168
    6. '[i' → logprob: -4.26154899597168
    7. 'True' → logprob: -4.38654899597168
    8. 's' → logprob: -4.51154899597168
    9. ''i' → logprob: -4.76154899597168
    10. ' i' → logprob: -4.88654899597168

Token 2181: 'ki' (ID: 3129)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1529688984155655
    2. 'pu' → logprob: -3.2779688835144043
    3. ''' → logprob: -3.5279688835144043
    4. ''i' → logprob: -3.9029688835144043
    5. ''p' → logprob: -4.027968883514404
    6. 'pi' → logprob: -4.277968883514404
    7. 'i' → logprob: -4.402968883514404
    8. 'pp' → logprob: -5.402968883514404
    9. 'ki' → logprob: -6.777968883514404
    10. ''s' → logprob: -7.152968883514404

Token 2182: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.3572734594345093
    2. '',' → logprob: -2.482273578643799
    3. 'p' → logprob: -2.857273578643799
    4. '']' → logprob: -2.982273578643799
    5. '+' → logprob: -3.232273578643799
    6. ''+' → logprob: -3.982273578643799
    7. 'i' → logprob: -3.982273578643799
    8. ''' → logprob: -4.607273578643799
    9. '[i' → logprob: -5.732273578643799
    10. ''p' → logprob: -5.857273578643799

Token 2183: 'ppu' (ID: 165635)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4308058023452759
    2. ''p' → logprob: -1.6808058023452759
    3. ''' → logprob: -1.9308058023452759
    4. 'pp' → logprob: -4.430805683135986
    5. 'ppu' → logprob: -5.805805683135986
    6. ''s' → logprob: -6.555805683135986
    7. 'pu' → logprob: -6.555805683135986
    8. ''u' → logprob: -8.305806159973145
    9. '['' → logprob: -9.180806159973145
    10. ''i' → logprob: -9.805806159973145

Token 2184: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.021396640688180923
    2. ']' → logprob: -5.021396636962891
    3. ''' → logprob: -5.521396636962891
    4. '','' → logprob: -5.646396636962891
    5. '[' → logprob: -6.146396636962891
    6. '',' → logprob: -6.146396636962891
    7. 'u' → logprob: -7.771396636962891
    8. '']
' → logprob: -7.771396636962891
    9. ''],' → logprob: -8.14639663696289
    10. 'n' → logprob: -8.64639663696289

Token 2185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02656048722565174
    2. ' and' → logprob: -4.151560306549072
    3. ':' → logprob: -5.776560306549072
    4. '       ' → logprob: -5.901560306549072
    5. 'and' → logprob: -6.651560306549072
    6. ':
' → logprob: -6.776560306549072
    7. ' if' → logprob: -7.151560306549072
    8. ''' → logprob: -8.15156078338623
    9. ' ' → logprob: -8.65156078338623
    10. 'if' → logprob: -8.77656078338623

Token 2186: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1339975893497467
    2. ' and' → logprob: -2.508997678756714
    3. ':' → logprob: -4.383997440338135
    4. 'and' → logprob: -4.883997440338135
    5. '       ' → logprob: -4.883997440338135
    6. ' if' → logprob: -5.508997440338135
    7. ':
' → logprob: -5.633997440338135
    8. 'if' → logprob: -5.758997440338135
    9. ' ' → logprob: -7.133997440338135
    10. '(' → logprob: -7.383997440338135

Token 2187: ' Our' (ID: 5339)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4104457497596741
    2. 'def' → logprob: -2.4104456901550293
    3. ' and' → logprob: -2.5354456901550293
    4. 'if' → logprob: -2.7854456901550293
    5. ' if' → logprob: -3.1604456901550293
    6. 'and' → logprob: -3.5354456901550293
    7. '       ' → logprob: -3.9104456901550293
    8. 'i' → logprob: -5.785445690155029
    9. ':' → logprob: -6.285445690155029
    10. ' i' → logprob: -6.410445690155029

Token 2188: ' parse' (ID: 8420)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20728015899658203
    2. 'def' → logprob: -2.332280158996582
    3. ' i' → logprob: -3.582280158996582
    4. 'if' → logprob: -4.082280158996582
    5. 'len' → logprob: -4.082280158996582
    6. ' def' → logprob: -4.707280158996582
    7. '
' → logprob: -5.582280158996582
    8. ')' → logprob: -5.832280158996582
    9. ' if' → logprob: -6.082280158996582
    10. 's' → logprob: -6.457280158996582

Token 2189: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.11483912914991379
    2. 'm' → logprob: -3.2398390769958496
    3. 'r' → logprob: -3.6148390769958496
    4. 's' → logprob: -4.23983907699585
    5. '   ' → logprob: -5.36483907699585
    6. 'def' → logprob: -5.48983907699585
    7. '[i' → logprob: -5.48983907699585
    8. '_' → logprob: -5.73983907699585
    9. ')' → logprob: -6.61483907699585
    10. '(i' → logprob: -6.86483907699585

Token 2190: 'oras' (ID: 41056)
  Prédit: 'oras'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -0.15505407750606537
    2. 'def' → logprob: -2.9050540924072266
    3. 'th' → logprob: -4.280054092407227
    4. '#' → logprob: -4.405054092407227
    5. 'ethod' → logprob: -4.405054092407227
    6. '_' → logprob: -4.405054092407227
    7. '```' → logprob: -5.280054092407227
    8. '[' → logprob: -5.655054092407227
    9. 'or' → logprob: -5.780054092407227
    10. '_m' → logprob: -6.030054092407227

Token 2191: ' represent' (ID: 5188)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4882325828075409
    2. '[i' → logprob: -1.9882326126098633
    3. ')' → logprob: -3.1132326126098633
    4. ' =' → logprob: -3.6132326126098633
    5. '(m' → logprob: -3.7382326126098633
    6. ':' → logprob: -3.9882326126098633
    7. '   ' → logprob: -3.9882326126098633
    8. 'm' → logprob: -4.363232612609863
    9. '[m' → logprob: -4.613232612609863
    10. 's' → logprob: -4.738232612609863

Token 2192: ' '' (ID: 461)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.42934632301330566
    2. 'i' → logprob: -1.3043463230133057
    3. 's' → logprob: -3.3043463230133057
    4. 'len' → logprob: -4.054346084594727
    5. ' mor' → logprob: -4.429346084594727
    6. 'def' → logprob: -5.179346084594727
    7. ' i' → logprob: -6.679346084594727
    8. 'next' → logprob: -7.179346084594727
    9. '   ' → logprob: -7.429346084594727
    10. 'mor' → logprob: -7.804346084594727

Token 2193: 'k' (ID: 74)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3230060636997223
    2. 'i' → logprob: -1.5730060338974
    3. ''' → logprob: -3.6980061531066895
    4. 's' → logprob: -3.8230061531066895
    5. '''' → logprob: -4.6980061531066895
    6. '')' → logprob: -6.0730061531066895
    7. ' mor' → logprob: -6.8230061531066895
    8. 'mor' → logprob: -6.9480061531066895
    9. ''''' → logprob: -6.9480061531066895
    10. ''i' → logprob: -7.0730061531066895

Token 2194: 'ipp' (ID: 3012)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6459052562713623
    2. 'i' → logprob: -0.8959052562713623
    3. 'y' → logprob: -3.6459052562713623
    4. '[' → logprob: -4.270905494689941
    5. 'u' → logprob: -4.770905494689941
    6. 'o' → logprob: -6.020905494689941
    7. 'p' → logprob: -6.270905494689941
    8. 'yo' → logprob: -6.395905494689941
    9. 'ipp' → logprob: -6.645905494689941
    10. '')' → logprob: -6.770905494689941

Token 2195: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0009166974923573434
    2. ''u' → logprob: -7.250916481018066
    3. '[u' → logprob: -8.750916481018066
    4. '(u' → logprob: -11.750916481018066
    5. '	u' → logprob: -12.125916481018066
    6. ''' → logprob: -12.125916481018066
    7. '['' → logprob: -12.250916481018066
    8. '')' → logprob: -12.375916481018066
    9. '_u' → logprob: -12.625916481018066
    10. '   ' → logprob: -13.250916481018066

Token 2196: ''' (ID: 6)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1907932013273239
    2. ''' → logprob: -3.31579327583313
    3. '')' → logprob: -3.31579327583313
    4. '[' → logprob: -3.31579327583313
    5. ')' → logprob: -4.190793037414551
    6. ']' → logprob: -4.565793037414551
    7. '']' → logprob: -5.440793037414551
    8. '[
' → logprob: -5.440793037414551
    9. '['' → logprob: -5.565793037414551
    10. '_' → logprob: -5.690793037414551

Token 2197: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6872950792312622
    2. ' if' → logprob: -1.6872950792312622
    3. 'def' → logprob: -1.8122950792312622
    4. '[i' → logprob: -2.4372949600219727
    5. ':' → logprob: -2.6872949600219727
    6. 'if' → logprob: -2.8122949600219727
    7. ' =' → logprob: -3.1872949600219727
    8. ':
' → logprob: -3.4372949600219727
    9. 'm' → logprob: -3.6872949600219727
    10. ')' → logprob: -3.8122949600219727

Token 2198: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.055505890399217606
    2. 's' → logprob: -3.9305059909820557
    3. 'm' → logprob: -4.180505752563477
    4. 'parse' → logprob: -5.180505752563477
    5. 'True' → logprob: -5.555505752563477
    6. ' ['' → logprob: -6.055505752563477
    7. 'split' → logprob: -6.680505752563477
    8. '["' → logprob: -7.055505752563477
    9. 'mor' → logprob: -7.055505752563477
    10. 'False' → logprob: -7.430505752563477

Token 2199: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.46791771054267883
    2. 'k' → logprob: -1.0929176807403564
    3. ''' → logprob: -3.3429176807403564
    4. ''s' → logprob: -6.7179179191589355
    5. 's' → logprob: -7.2179179191589355
    6. 'p' → logprob: -8.467917442321777
    7. 'ko' → logprob: -8.467917442321777
    8. 'kip' → logprob: -8.592917442321777
    9. '['' → logprob: -8.842917442321777
    10. ''i' → logprob: -9.217917442321777

Token 2200: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.029353629797697067
    2. '',' → logprob: -3.779353618621826
    3. '+' → logprob: -6.404353618621826
    4. ''' → logprob: -6.529353618621826
    5. ''+' → logprob: -7.779353618621826
    6. ''p' → logprob: -7.904353618621826
    7. '']' → logprob: -8.029354095458984
    8. ',' → logprob: -8.029354095458984
    9. '',"' → logprob: -8.154354095458984
    10. '","' → logprob: -8.404354095458984

Token 2201: 'ppu' (ID: 165635)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.053087808191776276
    2. 'pp' → logprob: -3.6780877113342285
    3. 'ppu' → logprob: -3.6780877113342285
    4. ''p' → logprob: -7.3030877113342285
    5. ''' → logprob: -8.553088188171387
    6. 'pu' → logprob: -9.053088188171387
    7. 'ppo' → logprob: -9.678088188171387
    8. 'ppa' → logprob: -10.803088188171387
    9. 'ppi' → logprob: -11.053088188171387
    10. '['' → logprob: -11.678088188171387

Token 2202: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.0038947337307035923
    2. '','' → logprob: -6.503894805908203
    3. '',' → logprob: -6.753894805908203
    4. ']' → logprob: -7.253894805908203
    5. ''' → logprob: -8.128894805908203
    6. '[' → logprob: -10.128894805908203
    7. '']
' → logprob: -10.253894805908203
    8. '"]' → logprob: -10.503894805908203
    9. ''],' → logprob: -11.253894805908203
    10. '#' → logprob: -11.503894805908203

Token 2203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0020936380606144667
    2. ':' → logprob: -6.75209379196167
    3. '       ' → logprob: -7.87709379196167
    4. ' if' → logprob: -8.877093315124512
    5. '	if' → logprob: -9.377093315124512
    6. 'if' → logprob: -9.502093315124512
    7. 'def' → logprob: -10.377093315124512
    8. ':
' → logprob: -10.877093315124512
    9. '	return' → logprob: -11.002093315124512
    10. ''' → logprob: -11.002093315124512

Token 2204: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027360436506569386
    2. '       ' → logprob: -7.0027360916137695
    3. 'if' → logprob: -7.0027360916137695
    4. ' if' → logprob: -7.5027360916137695
    5. ' and' → logprob: -8.87773609161377
    6. '
' → logprob: -9.87773609161377
    7. ':' → logprob: -10.25273609161377
    8. ':
' → logprob: -10.25273609161377
    9. 'def' → logprob: -10.37773609161377
    10. 'and' → logprob: -10.37773609161377

Token 2205: ' So' (ID: 2632)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10089111328125
    2. 'if' → logprob: -2.47589111328125
    3. ' if' → logprob: -5.22589111328125
    4. 'def' → logprob: -5.35089111328125
    5. '       ' → logprob: -6.47589111328125
    6. 'i' → logprob: -9.72589111328125
    7. 'len' → logprob: -10.10089111328125
    8. '```' → logprob: -10.35089111328125
    9. '
' → logprob: -10.72589111328125
    10. '	if' → logprob: -11.10089111328125

Token 2206: ' here' (ID: 2105)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015949439257383347
    2. '   ' → logprob: -4.765949249267578
    3. ' i' → logprob: -5.765949249267578
    4. 'len' → logprob: -5.765949249267578
    5. 'def' → logprob: -7.140949249267578
    6. 'False' → logprob: -9.140949249267578
    7. '#' → logprob: -10.515949249267578
    8. 'True' → logprob: -11.015949249267578
    9. ' len' → logprob: -11.140949249267578
    10. 'if' → logprob: -11.140949249267578

Token 2207: ' no' (ID: 860)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015752669423818588
    2. ' i' → logprob: -4.765752792358398
    3. '   ' → logprob: -5.640752792358398
    4. 'len' → logprob: -6.390752792358398
    5. 'def' → logprob: -6.640752792358398
    6. 'if' → logprob: -8.265752792358398
    7. '
' → logprob: -8.890752792358398
    8. ' len' → logprob: -9.640752792358398
    9. 'True' → logprob: -10.265752792358398
    10. 'False' → logprob: -10.390752792358398

Token 2208: ' separate' (ID: 13574)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6889766454696655
    2. ' if' → logprob: -1.8139766454696655
    3. 'if' → logprob: -2.063976764678955
    4. 'len' → logprob: -2.688976764678955
    5. ' i' → logprob: -2.813976764678955
    6. 'n' → logprob: -4.438976764678955
    7. '+' → logprob: -4.563976764678955
    8. 't' → logprob: -4.688976764678955
    9. ' len' → logprob: -4.688976764678955
    10. 'def' → logprob: -4.938976764678955

Token 2209: ' s' (ID: 265)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.30127662420272827
    2. 'if' → logprob: -2.551276683807373
    3. '_' → logprob: -2.676276683807373
    4. 'def' → logprob: -3.926276683807373
    5. 'i' → logprob: -4.051276683807373
    6. ')' → logprob: -4.301276683807373
    7. '`' → logprob: -4.801276683807373
    8. '#' → logprob: -4.801276683807373
    9. ' if' → logprob: -4.926276683807373
    10. ' ' → logprob: -5.051276683807373

Token 2210: 'oku' (ID: 13454)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0232545137405396
    2. 'oku' → logprob: -1.2732545137405396
    3. 'o' → logprob: -2.39825439453125
    4. '_' → logprob: -2.52325439453125
    5. 'e' → logprob: -2.89825439453125
    6. '#' → logprob: -3.64825439453125
    7. 'if' → logprob: -3.64825439453125
    8. 't' → logprob: -4.27325439453125
    9. 'return' → logprob: -5.02325439453125
    10. '   ' → logprob: -5.02325439453125

Token 2211: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.00028541131177917123
    2. 'o' → logprob: -8.875285148620605
    3. 'ons' → logprob: -10.125285148620605
    4. ')' → logprob: -10.625285148620605
    5. 'n' → logprob: -11.000285148620605
    6. 'on's' → logprob: -11.625285148620605
    7. '_on' → logprob: -11.625285148620605
    8. ']' → logprob: -12.125285148620605
    9. 'ont' → logprob: -12.500285148620605
    10. 'in' → logprob: -12.750285148620605

Token 2212: ' mora' (ID: 47294)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0925002098083496
    2. '_' → logprob: -1.3425002098083496
    3. ')' → logprob: -2.4675002098083496
    4. 'm' → logprob: -2.5925002098083496
    5. '   ' → logprob: -2.7175002098083496
    6. '):' → logprob: -2.7175002098083496
    7. 'def' → logprob: -3.7175002098083496
    8. '_m' → logprob: -4.09250020980835
    9. '(m' → logprob: -4.71750020980835
    10. 's' → logprob: -4.96750020980835

Token 2213: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48144951462745667
    2. '<|end|>' → logprob: -1.6064494848251343
    3. ':' → logprob: -2.481449604034424
    4. 'def' → logprob: -3.106449604034424
    5. ')' → logprob: -4.231449604034424
    6. ' ' → logprob: -4.731449604034424
    7. '#' → logprob: -4.856449604034424
    8. '<|end|>' → logprob: -5.606449604034424
    9. ']' → logprob: -5.981449604034424
    10. '[' → logprob: -6.106449604034424

Token 2214: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03949455916881561
    2. ':' → logprob: -4.039494514465332
    3. ' if' → logprob: -5.539494514465332
    4. ' ' → logprob: -5.539494514465332
    5. '#' → logprob: -5.664494514465332
    6. 'def' → logprob: -6.289494514465332
    7. 'if' → logprob: -6.664494514465332
    8. '       ' → logprob: -6.789494514465332
    9. '<|end|>' → logprob: -7.414494514465332
    10. '	if' → logprob: -7.539494514465332

Token 2215: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18116317689418793
    2. 'if' → logprob: -2.6811630725860596
    3. ' if' → logprob: -3.1811630725860596
    4. ' ' → logprob: -3.9311630725860596
    5. ')' → logprob: -4.806163311004639
    6. '<|end|>' → logprob: -5.056163311004639
    7. 'False' → logprob: -5.556163311004639
    8. '#' (adapté à ' #') → logprob: -5.931163311004639
    9. '
' → logprob: -6.306163311004639
    10. 'i' → logprob: -6.306163311004639

Token 2216: ' But' (ID: 3072)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3689725399017334
    2. '   ' → logprob: -1.9939725399017334
    3. ' if' → logprob: -2.7439725399017334
    4. 'return' → logprob: -2.9939725399017334
    5. '#' → logprob: -3.6189725399017334
    6. 'False' → logprob: -4.8689727783203125
    7. 'i' → logprob: -5.1189727783203125
    8. '
' → logprob: -5.7439727783203125
    9. 'def' → logprob: -5.8689727783203125
    10. '       ' → logprob: -6.3689727783203125

Token 2217: ' problem' (ID: 4792)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008070160634815693
    2. '#' → logprob: -5.50806999206543
    3. 'len' → logprob: -6.38306999206543
    4. ' i' → logprob: -6.50806999206543
    5. 'False' → logprob: -7.63306999206543
    6. '   ' → logprob: -8.50806999206543
    7. 'True' → logprob: -10.38306999206543
    8. ' False' → logprob: -10.63306999206543
    9. ' len' → logprob: -11.38306999206543
    10. 'if' → logprob: -11.75806999206543

Token 2218: ' states' (ID: 9407)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.692756175994873
    2. '#' → logprob: -1.442756175994873
    3. '[i' → logprob: -2.317756175994873
    4. ':' → logprob: -2.942756175994873
    5. ' continues' → logprob: -3.942756175994873
    6. 's' → logprob: -4.567756175994873
    7. '   ' → logprob: -4.567756175994873
    8. 'return' → logprob: -5.067756175994873
    9. '_' → logprob: -5.192756175994873
    10. ' is' → logprob: -5.192756175994873

Token 2219: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.037843286991119385
    2. 'False' → logprob: -4.162843227386475
    3. 'True' → logprob: -4.537843227386475
    4. 'len' → logprob: -5.287843227386475
    5. ' i' → logprob: -6.412843227386475
    6. '#' → logprob: -6.787843227386475
    7. ' True' → logprob: -6.912843227386475
    8. ' False' → logprob: -7.162843227386475
    9. 'm' → logprob: -7.662843227386475
    10. 'def' → logprob: -8.912843704223633

Token 2220: 'oku' (ID: 13454)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3826945424079895
    2. '_' → logprob: -1.8826944828033447
    3. 'i' → logprob: -2.6326944828033447
    4. 't' → logprob: -3.6326944828033447
    5. '#' → logprob: -4.382694721221924
    6. '
' → logprob: -5.007694721221924
    7. '_i' → logprob: -5.132694721221924
    8. ')' → logprob: -5.507694721221924
    9. '   ' → logprob: -5.507694721221924
    10. ']' → logprob: -5.632694721221924

Token 2221: 'on' (ID: 263)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5257299542427063
    2. 'on' → logprob: -1.7757298946380615
    3. '_' → logprob: -2.7757298946380615
    4. '#' → logprob: -3.2757298946380615
    5. ')' → logprob: -3.5257298946380615
    6. 'def' → logprob: -3.9007298946380615
    7. ''' → logprob: -4.275730133056641
    8. 'm' → logprob: -5.025730133056641
    9. ']' → logprob: -5.275730133056641
    10. 'if' → logprob: -5.525730133056641

Token 2222: ' always' (ID: 3324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3231828212738037
    2. ':' → logprob: -1.6981828212738037
    3. '   ' → logprob: -2.1981828212738037
    4. ' and' → logprob: -2.9481828212738037
    5. '<|end|>' → logprob: -2.9481828212738037
    6. 'if' → logprob: -3.1981828212738037
    7. ' if' → logprob: -3.5731828212738037
    8. ')' → logprob: -3.5731828212738037
    9. '[i' → logprob: -3.8231828212738037
    10. ' ' → logprob: -3.8231828212738037

Token 2223: ' written' (ID: 7582)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1840900182723999
    2. '   ' → logprob: -3.5590901374816895
    3. ' and' → logprob: -3.8090901374816895
    4. ' i' → logprob: -4.3090901374816895
    5. 'len' → logprob: -4.5590901374816895
    6. 'def' → logprob: -4.6840901374816895
    7. 'if' → logprob: -4.8090901374816895
    8. '=' → logprob: -4.9340901374816895
    9. '[i' → logprob: -4.9340901374816895
    10. '+' → logprob: -5.1840901374816895

Token 2224: ' as' (ID: 472)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6804269552230835
    2. ' and' → logprob: -2.055427074432373
    3. ':' → logprob: -2.430427074432373
    4. '   ' → logprob: -2.680427074432373
    5. 'if' → logprob: -2.805427074432373
    6. ' ' → logprob: -3.180427074432373
    7. 'and' → logprob: -4.055427074432373
    8. '[i' → logprob: -4.055427074432373
    9. 'def' → logprob: -4.680427074432373
    10. '<|end|>' → logprob: -4.680427074432373

Token 2225: ' double' (ID: 3503)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.26451006531715393
    2. 's' → logprob: -2.389510154724121
    3. ''' → logprob: -3.389510154724121
    4. 'i' → logprob: -4.514510154724121
    5. 'def' → logprob: -4.514510154724121
    6. ' ' → logprob: -4.764510154724121
    7. ')' → logprob: -4.764510154724121
    8. '''' → logprob: -4.764510154724121
    9. '   ' → logprob: -5.139510154724121
    10. 'd' → logprob: -5.264510154724121

Token 2226: ' conson' (ID: 127767)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7598507404327393
    2. '_' → logprob: -1.3848507404327393
    3. ''' → logprob: -2.2598507404327393
    4. '   ' → logprob: -3.6348507404327393
    5. ')' → logprob: -3.8848507404327393
    6. 'con' → logprob: -4.13485050201416
    7. 'm' → logprob: -4.25985050201416
    8. 'def' → logprob: -4.25985050201416
    9. 's' → logprob: -4.50985050201416
    10. ' _' → logprob: -4.75985050201416

Token 2227: 'ant' (ID: 493)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -1.4874794483184814
    2. 't' → logprob: -1.7374794483184814
    3. 's' → logprob: -2.1124794483184814
    4. ' ' → logprob: -2.6124794483184814
    5. 'nt' → logprob: -2.8624794483184814
    6. 'token' → logprob: -2.9874794483184814
    7. '_token' → logprob: -3.1124794483184814
    8. '   ' → logprob: -3.2374794483184814
    9. '<|end|>' → logprob: -3.4874794483184814
    10. ')' → logprob: -3.6124794483184814

Token 2228: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2229: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4482756555080414
    2. 'm' → logprob: -1.3232756853103638
    3. 'the' → logprob: -2.448275566101074
    4. ' next' → logprob: -5.948275566101074
    5. 'current' → logprob: -6.198275566101074
    6. 'def' → logprob: -6.448275566101074
    7. '#' → logprob: -7.073275566101074
    8. 'input' → logprob: -8.573275566101074
    9. 'last' → logprob: -8.573275566101074
    10. 'following' → logprob: -8.573275566101074

Token 2230: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05128568410873413
    2. '_m' → logprob: -4.801285743713379
    3. '   ' → logprob: -4.801285743713379
    4. '_' → logprob: -4.926285743713379
    5. 'if' → logprob: -5.301285743713379
    6. ' if' → logprob: -5.426285743713379
    7. 'char' → logprob: -5.676285743713379
    8. ')' → logprob: -6.051285743713379
    9. ' ' → logprob: -6.176285743713379
    10. 'def' → logprob: -7.176285743713379

Token 2231: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8259567022323608
    2. ':' → logprob: -0.9509567022323608
    3. '<|end|>' → logprob: -2.0759568214416504
    4. ')' → logprob: -3.5759568214416504
    5. '#' → logprob: -4.45095682144165
    6. '   ' → logprob: -6.32595682144165
    7. '<|end|>' → logprob: -6.82595682144165
    8. '):' → logprob: -6.82595682144165
    9. ']' → logprob: -7.20095682144165
    10. '.' → logprob: -7.20095682144165

Token 2232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04975619912147522
    2. ':' → logprob: -3.9247562885284424
    3. ')' → logprob: -4.924756050109863
    4. ' ' → logprob: -5.049756050109863
    5. '<|end|>' → logprob: -5.424756050109863
    6. '       ' → logprob: -6.049756050109863
    7. '#' → logprob: -6.674756050109863
    8. 'def' → logprob: -6.799756050109863
    9. '	' → logprob: -7.549756050109863
    10. '.' → logprob: -7.674756050109863

Token 2233: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019037019461393356
    2. ':' → logprob: -4.894037246704102
    3. ' if' → logprob: -5.019037246704102
    4. ' and' → logprob: -6.769037246704102
    5. 'if' → logprob: -6.769037246704102
    6. ':
' → logprob: -6.894037246704102
    7. '       ' → logprob: -7.519037246704102
    8. ' ' → logprob: -8.769037246704102
    9. 'def' → logprob: -9.269037246704102
    10. '[i' → logprob: -9.644037246704102

Token 2234: ' To' (ID: 2514)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8954468965530396
    2. ' if' → logprob: -1.1454468965530396
    3. ':' → logprob: -1.8954468965530396
    4. 'if' → logprob: -3.02044677734375
    5. ' ' → logprob: -3.77044677734375
    6. ':
' → logprob: -4.27044677734375
    7. ' and' → logprob: -4.64544677734375
    8. '[' → logprob: -5.27044677734375
    9. ')' → logprob: -5.77044677734375
    10. '       ' → logprob: -5.89544677734375

Token 2235: ' check' (ID: 2371)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04291582852602005
    2. ' i' → logprob: -3.2929158210754395
    3. 'len' → logprob: -5.6679158210754395
    4. ' len' → logprob: -6.9179158210754395
    5. '   ' → logprob: -9.917916297912598
    6. ')' → logprob: -9.917916297912598
    7. ' (' → logprob: -10.042916297912598
    8. 'def' → logprob: -10.042916297912598
    9. '(i' → logprob: -10.417916297912598
    10. 's' → logprob: -10.792916297912598

Token 2236: ' if' (ID: 538)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07637695968151093
    2. ' i' → logprob: -2.7013769149780273
    3. '   ' → logprob: -5.451376914978027
    4. 'len' → logprob: -6.451376914978027
    5. ' len' → logprob: -8.451376914978027
    6. 'if' → logprob: -8.951376914978027
    7. 'def' → logprob: -9.326376914978027
    8. ' ' → logprob: -10.576376914978027
    9. '(i' → logprob: -10.826376914978027
    10. ' (' → logprob: -11.076376914978027

Token 2237: ' mora' (ID: 47294)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03968385234475136
    2. ' i' → logprob: -3.2896838188171387
    3. 'len' → logprob: -6.914683818817139
    4. '   ' → logprob: -8.039684295654297
    5. ' len' → logprob: -8.789684295654297
    6. ' (' → logprob: -10.164684295654297
    7. '(i' → logprob: -10.414684295654297
    8. ' ' → logprob: -10.414684295654297
    9. 's' → logprob: -10.914684295654297
    10. 'm' → logprob: -11.164684295654297

Token 2238: ' at' (ID: 540)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.035900283604860306
    2. '   ' → logprob: -4.035900115966797
    3. ' i' → logprob: -4.660900115966797
    4. '+' → logprob: -6.035900115966797
    5. '[i' → logprob: -6.160900115966797
    6. 'len' → logprob: -6.785900115966797
    7. ' +' → logprob: -7.535900115966797
    8. 'idx' → logprob: -7.910900115966797
    9. 's' → logprob: -8.035900115966797
    10. 'index' → logprob: -8.160900115966797

Token 2239: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007942587835714221
    2. 'len' → logprob: -8.000794410705566
    3. ' i' → logprob: -8.625794410705566
    4. 'm' → logprob: -9.125794410705566
    5. '(i' → logprob: -10.250794410705566
    6. 'idx' → logprob: -10.250794410705566
    7. '```' → logprob: -10.375794410705566
    8. 'index' → logprob: -11.000794410705566
    9. 's' → logprob: -11.250794410705566
    10. '+' → logprob: -12.125794410705566

Token 2240: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011132356710731983
    2. ' +' → logprob: -4.51113224029541
    3. ' <' → logprob: -10.76113224029541
    4. '+
' → logprob: -10.88613224029541
    5. '   ' → logprob: -11.63613224029541
    6. '<len' → logprob: -11.88613224029541
    7. '<' → logprob: -12.01113224029541
    8. '+i' → logprob: -12.01113224029541
    9. 'i' → logprob: -12.51113224029541
    10. 'plus' → logprob: -12.88613224029541

Token 2241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021927160560153425
    2. '+' → logprob: -8.750219345092773
    3. 'i' → logprob: -9.875219345092773
    4. '```' → logprob: -11.875219345092773
    5. ' ' → logprob: -14.125219345092773
    6. '   ' → logprob: -14.500219345092773
    7. '`' → logprob: -15.125219345092773
    8. 'len' → logprob: -15.750219345092773
    9. '``' → logprob: -15.875219345092773
    10. '
' → logprob: -15.875219345092773

Token 2242: ' is' (ID: 382)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17587892711162567
    2. ' <' → logprob: -2.5508790016174316
    3. ' +' → logprob: -2.6758790016174316
    4. '<len' → logprob: -4.425879001617432
    5. '<' → logprob: -7.175879001617432
    6. '<n' → logprob: -7.800879001617432
    7. '+i' → logprob: -7.925879001617432
    8. '   ' → logprob: -8.050878524780273
    9. '<m' → logprob: -8.300878524780273
    10. '<i' → logprob: -10.300878524780273

Token 2243: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06334992498159409
    2. 'len' → logprob: -2.813349962234497
    3. ' i' → logprob: -6.938349723815918
    4. '(i' → logprob: -8.563349723815918
    5. ' len' → logprob: -8.938349723815918
    6. '(len' → logprob: -9.813349723815918
    7. '(' → logprob: -11.688349723815918
    8. ' (' → logprob: -11.813349723815918
    9. '   ' → logprob: -12.063349723815918
    10. ' ' → logprob: -12.188349723815918

Token 2244: 'oku' (ID: 13454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.01885209232568741
    2. '[i' → logprob: -4.393852233886719
    3. 'len' → logprob: -5.768852233886719
    4. '+' → logprob: -6.768852233886719
    5. 't' → logprob: -8.393852233886719
    6. '[len' → logprob: -8.393852233886719
    7. '<len' → logprob: -8.643852233886719
    8. '   ' → logprob: -8.768852233886719
    9. 'l' → logprob: -8.893852233886719
    10. 'u' → logprob: -9.018852233886719

Token 2245: 'on' (ID: 263)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007238718098960817
    2. ' +' → logprob: -7.500723838806152
    3. 'i' → logprob: -9.500723838806152
    4. 'n' → logprob: -10.500723838806152
    5. 'on' → logprob: -10.625723838806152
    6. '1' → logprob: -10.750723838806152
    7. '<' → logprob: -11.750723838806152
    8. '+i' → logprob: -11.875723838806152
    9. ' <' → logprob: -13.375723838806152
    10. '<n' → logprob: -13.500723838806152

Token 2246: ' in' (ID: 306)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16307683289051056
    2. ' +' → logprob: -2.413076877593994
    3. ' <' → logprob: -3.913076877593994
    4. ' and' → logprob: -4.538076877593994
    5. 'if' → logprob: -5.038076877593994
    6. '   ' → logprob: -5.163076877593994
    7. '+i' → logprob: -5.288076877593994
    8. 'and' → logprob: -5.413076877593994
    9. '<m' → logprob: -5.913076877593994
    10. ' if' → logprob: -6.913076877593994

Token 2247: ' '' (ID: 461)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9682908654212952
    2. 'range' → logprob: -1.4682908058166504
    3. 'i' → logprob: -1.7182908058166504
    4. 'm' → logprob: -1.8432908058166504
    5. 'def' → logprob: -4.09329080581665
    6. 's' → logprob: -4.71829080581665
    7. ' range' → logprob: -5.34329080581665
    8. ' i' → logprob: -5.71829080581665
    9. 'length' → logprob: -5.96829080581665
    10. '   ' → logprob: -5.96829080581665

Token 2248: 'ki' (ID: 3129)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0053184316493570805
    2. 'i' → logprob: -6.255318641662598
    3. 'mor' → logprob: -6.255318641662598
    4. ' mor' → logprob: -7.130318641662598
    5. '   ' → logprob: -8.880318641662598
    6. 's' → logprob: -9.505318641662598
    7. '```' → logprob: -9.755318641662598
    8. ' ' → logprob: -9.880318641662598
    9. '+' → logprob: -10.380318641662598
    10. 'range' → logprob: -10.630318641662598

Token 2249: ''' (ID: 6)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006159027572721243
    2. ' +' → logprob: -6.256158828735352
    3. ']' → logprob: -6.506158828735352
    4. 'f' → logprob: -6.631158828735352
    5. ']+' → logprob: -8.506158828735352
    6. 'i' → logprob: -8.631158828735352
    7. '+i' → logprob: -8.756158828735352
    8. 'n' → logprob: -9.131158828735352
    9. ' ' → logprob: -9.381158828735352
    10. '   ' → logprob: -9.381158828735352

Token 2250: ' '' (ID: 461)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06988564133644104
    2. ' +' → logprob: -2.944885730743408
    3. '   ' → logprob: -4.569885730743408
    4. 'if' → logprob: -6.444885730743408
    5. ' and' → logprob: -6.819885730743408
    6. '+i' → logprob: -7.569885730743408
    7. 'and' → logprob: -7.819885730743408
    8. 'def' → logprob: -8.31988525390625
    9. ' if' → logprob: -8.69488525390625
    10. ':
' → logprob: -9.31988525390625

Token 2251: 'ppu' (ID: 165635)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.608782172203064
    2. 'i' → logprob: -1.483782172203064
    3. 'm' → logprob: -2.6087822914123535
    4. ''+' → logprob: -2.8587822914123535
    5. ''' → logprob: -3.6087822914123535
    6. '++' → logprob: -4.1087822914123535
    7. '1' → logprob: -5.3587822914123535
    8. 'if' → logprob: -5.3587822914123535
    9. '+i' → logprob: -5.3587822914123535
    10. ']' → logprob: -5.4837822914123535

Token 2252: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.093917965888977
    2. ']' → logprob: -1.468917965888977
    3. ']'' → logprob: -1.843917965888977
    4. ')' → logprob: -2.5939178466796875
    5. ')'' → logprob: -3.0939178466796875
    6. '']' → logprob: -3.4689178466796875
    7. '+' → logprob: -3.9689178466796875
    8. '':
' → logprob: -4.0939178466796875
    9. 'm' → logprob: -4.4689178466796875
    10. 'if' → logprob: -4.4689178466796875

Token 2253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1131645068526268
    2. '       ' → logprob: -2.2381644248962402
    3. ' if' → logprob: -8.363164901733398
    4. '    ' → logprob: -10.738164901733398
    5. '```' → logprob: -10.738164901733398
    6. ' i' → logprob: -11.113164901733398
    7. '     ' → logprob: -11.863164901733398
    8. 'if' → logprob: -11.988164901733398
    9. ' return' → logprob: -11.988164901733398
    10. ' ' → logprob: -12.238164901733398

Token 2254: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022837184369564056
    2. 'i' → logprob: -6.752283573150635
    3. 'if' → logprob: -7.127283573150635
    4. ' i' → logprob: -8.877284049987793
    5. ' if' → logprob: -9.502284049987793
    6. '       ' → logprob: -9.877284049987793
    7. '```' → logprob: -10.627284049987793
    8. 'return' → logprob: -11.377284049987793
    9. ' return' → logprob: -12.627284049987793
    10. '    ' → logprob: -13.627284049987793

Token 2255: ' mora' (ID: 47294)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30676427483558655
    2. 'i' → logprob: -1.9317642450332642
    3. 'if' → logprob: -2.5567643642425537
    4. 'def' → logprob: -3.9317643642425537
    5. ' i' → logprob: -4.431764125823975
    6. ' if' → logprob: -4.931764125823975
    7. '```' → logprob: -6.931764125823975
    8. 'return' → logprob: -7.056764125823975
    9. '(i' → logprob: -8.306764602661133
    10. ' def' → logprob: -8.556764602661133

Token 2256: ' at' (ID: 540)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.42992857098579407
    2. 'def' → logprob: -2.4299285411834717
    3. 'i' → logprob: -2.6799285411834717
    4. ' =' → logprob: -2.8049285411834717
    5. '[i' → logprob: -3.4299285411834717
    6. '_length' → logprob: -4.429928779602051
    7. ')' → logprob: -4.429928779602051
    8. 'len' → logprob: -4.804928779602051
    9. '   ' → logprob: -4.929928779602051
    10. '_next' → logprob: -5.304928779602051

Token 2257: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006015266408212483
    2. ' i' → logprob: -7.500601291656494
    3. '```' → logprob: -11.125601768493652
    4. '   ' → logprob: -11.250601768493652
    5. '(i' → logprob: -11.875601768493652
    6. '+' → logprob: -12.000601768493652
    7. '`' → logprob: -13.750601768493652
    8. 'idx' → logprob: -13.875601768493652
    9. '``' → logprob: -14.375601768493652
    10. ' (' → logprob: -14.500601768493652

Token 2258: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0067756460048258305
    2. ' +' → logprob: -5.131775856018066
    3. 's' → logprob: -8.131775856018066
    4. '+i' → logprob: -8.506775856018066
    5. '   ' → logprob: -9.256775856018066
    6. 'if' → logprob: -9.506775856018066
    7. 'i' → logprob: -9.631775856018066
    8. '1' → logprob: -10.631775856018066
    9. 'def' → logprob: -10.881775856018066
    10. ']' → logprob: -11.256775856018066

Token 2259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0031977968756109476
    2. 'i' → logprob: -6.00319766998291
    3. '+' → logprob: -7.25319766998291
    4. '```' → logprob: -12.25319766998291
    5. '(i' → logprob: -12.62819766998291
    6. '2' → logprob: -13.37819766998291
    7. ' i' → logprob: -13.50319766998291
    8. ' ' → logprob: -14.00319766998291
    9. ' +' → logprob: -14.62819766998291
    10. '`' → logprob: -14.62819766998291

Token 2260: ' has' (ID: 853)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8768113255500793
    2. ')' → logprob: -2.2518112659454346
    3. '+' → logprob: -2.3768112659454346
    4. ']' → logprob: -3.1268112659454346
    5. '][' → logprob: -3.1268112659454346
    6. 'def' → logprob: -3.2518112659454346
    7. '   ' → logprob: -3.2518112659454346
    8. 'i' → logprob: -3.8768112659454346
    9. '[' → logprob: -4.251811504364014
    10. '```' → logprob: -4.251811504364014

Token 2261: ' doubled' (ID: 69040)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0014378506457433105
    2. 'm' → logprob: -6.876437664031982
    3. 'i' → logprob: -8.12643814086914
    4. ' len' → logprob: -10.37643814086914
    5. '   ' → logprob: -10.75143814086914
    6. '(len' → logprob: -10.75143814086914
    7. '2' → logprob: -11.00143814086914
    8. ' ' → logprob: -11.62643814086914
    9. '  ' → logprob: -12.62643814086914
    10. 'mor' → logprob: -12.87643814086914

Token 2262: ' conson' (ID: 127767)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7956947684288025
    2. ' ' → logprob: -1.4206948280334473
    3. '_' → logprob: -2.6706948280334473
    4. '   ' → logprob: -2.6706948280334473
    5. '[i' → logprob: -3.2956948280334473
    6. 'con' → logprob: -3.6706948280334473
    7. 'i' → logprob: -3.9206948280334473
    8. 's' → logprob: -4.295694828033447
    9. '[' → logprob: -4.420694828033447
    10. ''' → logprob: -4.920694828033447

Token 2263: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.015762759372591972
    2. 'ants' → logprob: -4.390762805938721
    3. 't' → logprob: -6.140762805938721
    4. 'ent' → logprob: -7.140762805938721
    5. 'nt' → logprob: -10.015762329101562
    6. '   ' → logprob: -10.015762329101562
    7. 'con' → logprob: -10.140762329101562
    8. 'a' → logprob: -10.265762329101562
    9. 'at' → logprob: -10.515762329101562
    10. 'tant' → logprob: -10.640762329101562

Token 2264: '?' (ID: 30)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7931231260299683
    2. '   ' → logprob: -1.0431231260299683
    3. 'def' → logprob: -3.293123245239258
    4. 'and' → logprob: -3.543123245239258
    5. ':
' → logprob: -3.543123245239258
    6. '[i' → logprob: -4.043123245239258
    7. 'm' → logprob: -4.293123245239258
    8. ':' → logprob: -4.418123245239258
    9. '[m' → logprob: -4.418123245239258
    10. '       ' → logprob: -4.418123245239258

Token 2265: ' e' (ID: 319)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14013567566871643
    2. '       ' → logprob: -3.6401357650756836
    3. 'def' → logprob: -3.6401357650756836
    4. '
' → logprob: -3.8901357650756836
    5. 'if' → logprob: -4.015135765075684
    6. ' and' → logprob: -4.515135765075684
    7. ' if' → logprob: -4.640135765075684
    8. ':
' → logprob: -5.515135765075684
    9. '):
' → logprob: -5.640135765075684
    10. 'm' → logprob: -5.890135765075684

Token 2266: '.g' (ID: 1940)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.9408130049705505
    2. 'len' → logprob: -1.0658130645751953
    3. 'n' → logprob: -1.6908130645751953
    4. 'if' → logprob: -3.5658130645751953
    5. '==' → logprob: -4.565813064575195
    6. '=len' → logprob: -5.065813064575195
    7. '=' → logprob: -5.815813064575195
    8. '   ' → logprob: -6.065813064575195
    9. '       ' → logprob: -6.065813064575195
    10. 'ne' → logprob: -6.190813064575195

Token 2267: '.' (ID: 13)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4952903091907501
    2. 'if' → logprob: -1.2452902793884277
    3. '   ' → logprob: -3.6202902793884277
    4. 'm' → logprob: -3.6202902793884277
    5. '       ' → logprob: -4.995290279388428
    6. 'def' → logprob: -5.245290279388428
    7. ' if' → logprob: -5.370290279388428
    8. '(len' → logprob: -5.495290279388428
    9. 'return' → logprob: -5.620290279388428
    10. 'r' → logprob: -5.620290279388428

Token 2268: ' two' (ID: 1920)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2924412190914154
    2. 'm' → logprob: -1.4174412488937378
    3. '   ' → logprob: -5.292441368103027
    4. 'i' → logprob: -5.292441368103027
    5. ' len' → logprob: -8.292441368103027
    6. '(len' → logprob: -8.542441368103027
    7. 'def' → logprob: -8.667441368103027
    8. '(m' → logprob: -9.167441368103027
    9. 'mor' → logprob: -9.167441368103027
    10. ' mor' → logprob: -9.792441368103027

Token 2269: ' same' (ID: 2684)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7455520033836365
    2. 'len' → logprob: -1.4955520629882812
    3. 'i' → logprob: -2.4955520629882812
    4. 'm' → logprob: -2.4955520629882812
    5. '0' → logprob: -2.8705520629882812
    6. 'and' → logprob: -3.8705520629882812
    7. '==' → logprob: -4.245552062988281
    8. '>=' → logprob: -4.620552062988281
    9. ' if' → logprob: -5.120552062988281
    10. '>' → logprob: -5.120552062988281

Token 2270: ' conson' (ID: 127767)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8110012412071228
    2. 'i' → logprob: -1.4360013008117676
    3. 'm' → logprob: -1.8110013008117676
    4. 'if' → logprob: -2.0610013008117676
    5. ' ' → logprob: -5.436001300811768
    6. ' i' → logprob: -5.811001300811768
    7. '1' → logprob: -6.186001300811768
    8. 's' → logprob: -6.186001300811768
    9. 'chars' → logprob: -6.186001300811768
    10. 'len' → logprob: -6.436001300811768

Token 2271: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.026469474658370018
    2. 't' → logprob: -4.026469707489014
    3. 'ant' → logprob: -5.151469707489014
    4. 'ts' → logprob: -6.401469707489014
    5. 'nts' → logprob: -8.401469230651855
    6. 's' → logprob: -8.776469230651855
    7. 'ats' → logprob: -8.901469230651855
    8. 'ents' → logprob: -9.151469230651855
    9. 'a' → logprob: -9.401469230651855
    10. 'm' → logprob: -9.526469230651855

Token 2272: ' at' (ID: 540)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1082547903060913
    2. '   ' → logprob: -1.7332547903060913
    3. ' if' → logprob: -1.7332547903060913
    4. ' and' → logprob: -2.858254909515381
    5. ':' → logprob: -2.858254909515381
    6. ' ' → logprob: -3.483254909515381
    7. 'if' → logprob: -3.483254909515381
    8. '[' → logprob: -3.733254909515381
    9. '[i' → logprob: -3.733254909515381
    10. ':
' → logprob: -3.983254909515381

Token 2273: ' start' (ID: 1604)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7252845029579476e-05
    2. 'index' → logprob: -11.375027656555176
    3. ' ' → logprob: -12.625027656555176
    4. 'start' → logprob: -12.625027656555176
    5. 'the' → logprob: -12.750027656555176
    6. 'm' → logprob: -13.000027656555176
    7. 'position' → logprob: -13.250027656555176
    8. 'pos' → logprob: -13.500027656555176
    9. 'idx' → logprob: -14.750027656555176
    10. '1' → logprob: -16.12502670288086

Token 2274: ' indicated' (ID: 26832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7303783297538757
    2. 'def' → logprob: -1.8553783893585205
    3. ':
' → logprob: -2.3553783893585205
    4. ' if' → logprob: -2.4803783893585205
    5. ' and' → logprob: -2.6053783893585205
    6. 'if' → logprob: -3.1053783893585205
    7. '       ' → logprob: -4.355378150939941
    8. '[i' → logprob: -4.480378150939941
    9. '[m' → logprob: -4.980378150939941
    10. 'm' → logprob: -5.355378150939941

Token 2275: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0056957006454468
    2. '   ' → logprob: -1.7556957006454468
    3. ' if' → logprob: -2.0056958198547363
    4. 'def' → logprob: -2.2556958198547363
    5. 'len' → logprob: -2.7556958198547363
    6. 'm' → logprob: -3.0056958198547363
    7. 's' → logprob: -4.255695819854736
    8. 'i' → logprob: -4.380695819854736
    9. '       ' → logprob: -4.380695819854736
    10. ' ' → logprob: -4.380695819854736

Token 2276: 'oku' (ID: 13454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.719201922416687
    2. '[i' → logprob: -1.719201922416687
    3. '[' → logprob: -2.0942020416259766
    4. '[len' → logprob: -3.0942020416259766
    5. 'len' → logprob: -3.7192020416259766
    6. 'm' → logprob: -3.7192020416259766
    7. 's' → logprob: -3.9692020416259766
    8. '[m' → logprob: -3.9692020416259766
    9. 't' → logprob: -4.094202041625977
    10. '   ' → logprob: -5.094202041625977

Token 2277: 'on' (ID: 263)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7581589818000793
    2. '   ' → logprob: -1.6331589221954346
    3. 'nt' → logprob: -2.3831589221954346
    4. '[i' → logprob: -2.5081589221954346
    5. 'if' → logprob: -3.1331589221954346
    6. 'r' → logprob: -3.5081589221954346
    7. ' ' → logprob: -4.758159160614014
    8. '       ' → logprob: -5.008159160614014
    9. ')' → logprob: -5.008159160614014
    10. '           ' → logprob: -5.133159160614014

Token 2278: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11108198761940002
    2. 'def' → logprob: -2.361082077026367
    3. 'm' → logprob: -5.611082077026367
    4. 'if' → logprob: -6.486082077026367
    5. '       ' → logprob: -6.611082077026367
    6. ' if' → logprob: -6.736082077026367
    7. ':' → logprob: -6.861082077026367
    8. ':
' → logprob: -7.611082077026367
    9. ' and' → logprob: -7.861082077026367
    10. 'import' → logprob: -8.486082077026367

Token 2279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.773889422416687
    2. ' and' → logprob: -1.148889422416687
    3. ':
' → logprob: -3.1488895416259766
    4. 'if' → logprob: -3.2738895416259766
    5. 'and' → logprob: -3.3988895416259766
    6. '(m' → logprob: -3.6488895416259766
    7. '       ' → logprob: -4.148889541625977
    8. ' if' → logprob: -4.148889541625977
    9. 'm' → logprob: -4.273889541625977
    10. ':' → logprob: -5.023889541625977

Token 2280: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009940597228705883
    2. 'def' → logprob: -5.1349406242370605
    3. 'm' → logprob: -5.8849406242370605
    4. 'if' → logprob: -8.009940147399902
    5. ':' → logprob: -8.509940147399902
    6. ':
' → logprob: -8.634940147399902
    7. ' if' → logprob: -8.884940147399902
    8. '       ' → logprob: -9.509940147399902
    9. '
' → logprob: -10.259940147399902
    10. '):
' → logprob: -10.384940147399902

Token 2281: ' But' (ID: 3072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2095387727022171
    2. 'def' → logprob: -1.9595388174057007
    3. 'if' → logprob: -3.459538698196411
    4. 'm' → logprob: -4.58453893661499
    5. ' if' → logprob: -5.58453893661499
    6. 'i' → logprob: -6.70953893661499
    7. '
' → logprob: -7.33453893661499
    8. 'import' → logprob: -8.584538459777832
    9. '       ' → logprob: -9.459538459777832
    10. '```' → logprob: -9.459538459777832

Token 2282: ' no' (ID: 860)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.673272430896759
    2. 'len' → logprob: -0.923272430896759
    3. 'False' → logprob: -2.7982723712921143
    4. 'def' → logprob: -4.673272609710693
    5. ' i' → logprob: -4.923272609710693
    6. ' False' → logprob: -5.048272609710693
    7. ' len' → logprob: -5.798272609710693
    8. 'm' → logprob: -6.423272609710693
    9. 'if' → logprob: -6.423272609710693
    10. 'True' → logprob: -7.048272609710693

Token 2283: ' direct' (ID: 2823)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7891386151313782
    2. 'if' → logprob: -1.4141385555267334
    3. 'def' → logprob: -2.1641385555267334
    4. '<|end|>' → logprob: -2.6641385555267334
    5. 's' → logprob: -3.9141385555267334
    6. ')' → logprob: -4.6641387939453125
    7. ' ' → logprob: -4.6641387939453125
    8. '#' → logprob: -4.6641387939453125
    9. '<|end|>' → logprob: -4.6641387939453125
    10. ']' → logprob: -4.7891387939453125

Token 2284: ' doubling' (ID: 122384)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3295356035232544
    2. 'def' → logprob: -2.454535484313965
    3. 'm' → logprob: -2.579535484313965
    4. ' if' → logprob: -3.454535484313965
    5. 'char' → logprob: -4.079535484313965
    6. 's' → logprob: -4.204535484313965
    7. ')' → logprob: -4.954535484313965
    8. 'c' → logprob: -5.079535484313965
    9. '
' → logprob: -5.204535484313965
    10. ':
' → logprob: -5.329535484313965

Token 2285: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2286: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.027017980813980103
    2. 'len' → logprob: -4.777018070220947
    3. ')' → logprob: -5.652018070220947
    4. 'i' → logprob: -5.902018070220947
    5. 'if' → logprob: -6.027018070220947
    6. 'def' → logprob: -6.152018070220947
    7. 's' → logprob: -6.152018070220947
    8. 'the' → logprob: -6.277018070220947
    9. 'mor' → logprob: -6.777018070220947
    10. '   ' → logprob: -8.277017593383789

Token 2287: ' representation' (ID: 22311)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43122562766075134
    2. 'def' → logprob: -2.181225538253784
    3. '   ' → logprob: -2.931225538253784
    4. '[i' → logprob: -3.056225538253784
    5. ':' → logprob: -3.681225538253784
    6. ':
' → logprob: -3.931225538253784
    7. ''' → logprob: -4.431225776672363
    8. '#' → logprob: -4.556225776672363
    9. 'if' → logprob: -4.806225776672363
    10. ' if' → logprob: -4.931225776672363

Token 2288: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09634436666965485
    2. 'def' → logprob: -3.346344470977783
    3. '       ' → logprob: -3.346344470977783
    4. ' if' → logprob: -5.221344470977783
    5. ' ' → logprob: -5.346344470977783
    6. ':' → logprob: -5.471344470977783
    7. ':
' → logprob: -5.846344470977783
    8. '[' → logprob: -6.971344470977783
    9. 'if' → logprob: -7.221344470977783
    10. '
' → logprob: -7.721344470977783

Token 2289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1595526933670044
    2. ' if' → logprob: -2.784552574157715
    3. '       ' → logprob: -3.409552574157715
    4. 'def' → logprob: -3.534552574157715
    5. 'if' → logprob: -4.409552574157715
    6. 'i' → logprob: -5.909552574157715
    7. ' i' → logprob: -6.284552574157715
    8. ' ' → logprob: -6.909552574157715
    9. '[' → logprob: -7.284552574157715
    10. ':
' → logprob: -7.409552574157715

Token 2290: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004297155828680843
    2. ' ' → logprob: -9.0004301071167
    3. '       ' → logprob: -9.0004301071167
    4. '#' (adapté à ' #') → logprob: -9.8754301071167
    5. 'return' → logprob: -10.8754301071167
    6. ')' → logprob: -11.0004301071167
    7. ' if' → logprob: -11.3754301071167
    8. '    ' → logprob: -11.3754301071167
    9. '  ' → logprob: -11.5004301071167
    10. 'if' → logprob: -11.6254301071167

Token 2291: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7244976162910461
    2. '   ' → logprob: -1.7244975566864014
    3. ' if' → logprob: -2.0994975566864014
    4. 'def' → logprob: -2.2244975566864014
    5. '#' → logprob: -3.2244975566864014
    6. 'c' → logprob: -3.3494975566864014
    7. 'i' → logprob: -4.9744977951049805
    8. 'return' → logprob: -5.0994977951049805
    9. '       ' → logprob: -5.8494977951049805
    10. '
' → logprob: -6.0994977951049805

Token 2292: ' consider' (ID: 3331)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3524661064147949
    2. '[' → logprob: -2.852466106414795
    3. '#' → logprob: -2.977466106414795
    4. '[i' → logprob: -3.602466106414795
    5. ' need' → logprob: -3.727466106414795
    6. ' continue' → logprob: -3.977466106414795
    7. ' def' → logprob: -4.477466106414795
    8. ' can' → logprob: -4.602466106414795
    9. 'continue' → logprob: -4.602466106414795
    10. '[]' → logprob: -4.852466106414795

Token 2293: ' that' (ID: 484)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.18323644995689392
    2. ' False' → logprob: -1.9332364797592163
    3. 'i' → logprob: -4.308236598968506
    4. 'm' → logprob: -5.433236598968506
    5. 'len' → logprob: -6.683236598968506
    6. 'True' → logprob: -6.683236598968506
    7. ' mor' → logprob: -7.433236598968506
    8. '   ' → logprob: -7.683236598968506
    9. ' i' → logprob: -8.183236122131348
    10. ' True' → logprob: -8.183236122131348

Token 2294: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14736957848072052
    2. 'len' → logprob: -2.647369623184204
    3. 'False' → logprob: -3.022369623184204
    4. ' i' → logprob: -5.647369384765625
    5. 'm' → logprob: -5.772369384765625
    6. '   ' → logprob: -6.022369384765625
    7. ' False' → logprob: -6.022369384765625
    8. 'def' → logprob: -6.272369384765625
    9. 'True' → logprob: -6.897369384765625
    10. '#' → logprob: -7.022369384765625

Token 2295: 'oku' (ID: 13454)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0056049879640340805
    2. 'i' → logprob: -6.255605220794678
    3. 'len' → logprob: -6.505605220794678
    4. 'if' → logprob: -7.880605220794678
    5. '[' → logprob: -8.00560474395752
    6. '[len' → logprob: -8.13060474395752
    7. '   ' → logprob: -8.38060474395752
    8. 't' → logprob: -9.13060474395752
    9. '[
' → logprob: -9.38060474395752
    10. 'ize' → logprob: -9.63060474395752

Token 2296: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.013317751698195934
    2. 'o' → logprob: -4.888317584991455
    3. '[' → logprob: -6.513317584991455
    4. 'n' → logprob: -6.763317584991455
    5. '[i' → logprob: -7.763317584991455
    6. '_' → logprob: -7.888317584991455
    7. ']' → logprob: -8.138318061828613
    8. 'on's' → logprob: -8.513318061828613
    9. 'i' → logprob: -8.763318061828613
    10. ''' → logprob: -8.888318061828613

Token 2297: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7759760022163391
    2. 's' → logprob: -1.9009759426116943
    3. ''' → logprob: -2.6509759426116943
    4. 'm' → logprob: -3.2759759426116943
    5. '_m' → logprob: -3.2759759426116943
    6. '   ' → logprob: -3.4009759426116943
    7. ')' → logprob: -3.4009759426116943
    8. ' ' → logprob: -3.7759759426116943
    9. ' is' → logprob: -4.150976181030273
    10. '[' → logprob: -4.150976181030273

Token 2298: ' represented' (ID: 27328)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7596449255943298
    2. 'False' → logprob: -0.7596449255943298
    3. 'i' → logprob: -3.1346449851989746
    4. ' False' → logprob: -4.384644985198975
    5. 'm' → logprob: -5.509644985198975
    6. '#' → logprob: -6.634644985198975
    7. ' len' → logprob: -7.009644985198975
    8. '   ' → logprob: -7.384644985198975
    9. ' i' → logprob: -7.759644985198975
    10. 'True' → logprob: -8.384644508361816

Token 2299: ' inside' (ID: 6772)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'by' → logprob: -1.1864372491836548
    2. 'm' → logprob: -1.5614372491836548
    3. ' by' → logprob: -2.4364371299743652
    4. 'as' → logprob: -2.5614371299743652
    5. ' as' → logprob: -2.6864371299743652
    6. 'def' → logprob: -2.8114371299743652
    7. '   ' → logprob: -3.1864371299743652
    8. 'if' → logprob: -3.4364371299743652
    9. '=' → logprob: -3.9364371299743652
    10. 's' → logprob: -4.061437129974365

Token 2300: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.013740777969360352
    2. 'i' → logprob: -4.763740539550781
    3. 'mor' → logprob: -6.513740539550781
    4. 's' → logprob: -6.763740539550781
    5. '''' → logprob: -7.263740539550781
    6. ')' → logprob: -7.638740539550781
    7. ' mor' → logprob: -8.013740539550781
    8. ''' → logprob: -9.138740539550781
    9. 'len' → logprob: -9.513740539550781
    10. '"' → logprob: -9.763740539550781

Token 2301: ' like' (ID: 1299)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5954427719116211
    2. '[' → logprob: -1.845442771911621
    3. '   ' → logprob: -1.970442771911621
    4. ':' → logprob: -3.220442771911621
    5. '[i' → logprob: -3.595442771911621
    6. ':
' → logprob: -4.470442771911621
    7. '[len' → logprob: -4.845442771911621
    8. ')' → logprob: -4.970442771911621
    9. ']' → logprob: -4.970442771911621
    10. '.' → logprob: -4.970442771911621

Token 2302: ' '' (ID: 461)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08741296827793121
    2. 's' → logprob: -3.2124130725860596
    3. ')' → logprob: -4.7124128341674805
    4. 'len' → logprob: -4.8374128341674805
    5. 'i' → logprob: -5.2124128341674805
    6. 'def' → logprob: -5.9624128341674805
    7. '''' → logprob: -6.0874128341674805
    8. ' s' → logprob: -6.3374128341674805
    9. 'if' → logprob: -6.4624128341674805
    10. 'True' → logprob: -6.5874128341674805

Token 2303: 'ppu' (ID: 165635)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8198866844177246
    2. '0' → logprob: -1.1948866844177246
    3. 'i' → logprob: -1.8198866844177246
    4. 's' → logprob: -4.194886684417725
    5. ''' → logprob: -4.319886684417725
    6. 'p' → logprob: -4.569886684417725
    7. ')' → logprob: -4.819886684417725
    8. '1' → logprob: -4.819886684417725
    9. 'len' → logprob: -5.194886684417725
    10. '')' → logprob: -5.944886684417725

Token 2304: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.021357083693146706
    2. '']' → logprob: -4.64635705947876
    3. ''
' → logprob: -6.64635705947876
    4. '')' → logprob: -6.77135705947876
    5. ''''' → logprob: -7.02135705947876
    6. ']'' → logprob: -7.02135705947876
    7. '':
' → logprob: -7.27135705947876
    8. 'r' → logprob: -7.52135705947876
    9. 'e' → logprob: -7.77135705947876
    10. ']' → logprob: -7.89635705947876

Token 2305: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030047254636883736
    2. 'def' → logprob: -4.780047416687012
    3. '       ' → logprob: -4.905047416687012
    4. ':' → logprob: -5.030047416687012
    5. ':
' → logprob: -6.030047416687012
    6. ' and' → logprob: -6.655047416687012
    7. ' if' → logprob: -6.780047416687012
    8. '[' → logprob: -7.155047416687012
    9. '[i' → logprob: -8.405047416687012
    10. 'if' → logprob: -8.530047416687012

Token 2306: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005146674811840057
    2. ':' → logprob: -8.50051498413086
    3. '
' → logprob: -9.37551498413086
    4. 'def' → logprob: -9.87551498413086
    5. ':
' → logprob: -10.00051498413086
    6. ' if' → logprob: -10.50051498413086
    7. 'if' (adapté à ' if') → logprob: -10.75051498413086
    8. '       ' → logprob: -11.25051498413086
    9. ')' → logprob: -11.37551498413086
    10. ' and' → logprob: -11.87551498413086

Token 2307: ' i' (ID: 575)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.33486834168434143
    2. 'i' → logprob: -1.834868311882019
    3. ' len' → logprob: -2.2098684310913086
    4. ' i' → logprob: -4.209868431091309
    5. '   ' → logprob: -8.459868431091309
    6. '(len' → logprob: -9.334868431091309
    7. ' ' → logprob: -10.959868431091309
    8. '(i' → logprob: -11.334868431091309
    9. '  ' → logprob: -12.084868431091309
    10. 'm' → logprob: -12.209868431091309

Token 2308: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017143317963927984
    2. ' +' → logprob: -6.37671422958374
    3. '<len' → logprob: -12.751714706420898
    4. '<' → logprob: -13.001714706420898
    5. '   ' → logprob: -13.126714706420898
    6. ' <' → logprob: -13.626714706420898
    7. '+i' → logprob: -13.876714706420898
    8. ']+' → logprob: -14.001714706420898
    9. ')+' → logprob: -14.876714706420898
    10. '0' → logprob: -15.626714706420898

Token 2309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001649220648687333
    2. '2' → logprob: -8.750164985656738
    3. ' ' → logprob: -13.000164985656738
    4. 'len' → logprob: -13.750164985656738
    5. 'def' → logprob: -13.875164985656738
    6. '```' → logprob: -14.500164985656738
    7. '   ' → logprob: -14.625164985656738
    8. '+' → logprob: -14.937664985656738
    9. '
' → logprob: -15.500164985656738
    10. '3' → logprob: -16.000164031982422

Token 2310: ' >=' (ID: 5064)
  Prédit: '<len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.8319718837738037
    2. '<' → logprob: -1.0819718837738037
    3. ' <' → logprob: -1.5819718837738037
    4. '<n' → logprob: -4.956972122192383
    5. ']' → logprob: -5.206972122192383
    6. '<m' → logprob: -5.331972122192383
    7. ']<' → logprob: -7.581972122192383
    8. '<s' → logprob: -7.706972122192383
    9. '+' → logprob: -7.706972122192383
    10. '][' → logprob: -8.206972122192383

Token 2311: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.023661311715841293
    2. 'n' → logprob: -3.8986613750457764
    3. ' len' → logprob: -6.148661136627197
    4. '   ' → logprob: -7.773661136627197
    5. '0' → logprob: -8.648661613464355
    6. ' n' → logprob: -8.648661613464355
    7. '1' → logprob: -9.148661613464355
    8. '(len' → logprob: -11.148661613464355
    9. '    ' → logprob: -11.523661613464355
    10. 'length' → logprob: -11.523661613464355

Token 2312: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.5766059160232544
    2. 'm' → logprob: -0.8266059160232544
    3. 'mor' → logprob: -7.826605796813965
    4. '	m' → logprob: -9.826605796813965
    5. '   ' → logprob: -9.951605796813965
    6. '```' → logprob: -10.201605796813965
    7. ' (' → logprob: -10.826605796813965
    8. ')' → logprob: -11.326605796813965
    9. '(' → logprob: -11.576605796813965
    10. 'mo' → logprob: -11.576605796813965

Token 2313: 'oras' (ID: 41056)
  Prédit: 'oras'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -0.0016992258606478572
    2. 'or' → logprob: -7.001699447631836
    3. '   ' → logprob: -9.001699447631836
    4. 's' → logprob: -9.376699447631836
    5. '#' → logprob: -9.626699447631836
    6. '+' → logprob: -10.251699447631836
    7. 'ras' → logprob: -10.376699447631836
    8. '```' → logprob: -10.626699447631836
    9. 'mor' → logprob: -10.626699447631836
    10. ' or' → logprob: -10.751699447631836

Token 2314: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1839243173599243
    2. ' and' → logprob: -1.1839243173599243
    3. 'and' → logprob: -1.4339243173599243
    4. '       ' → logprob: -2.6839241981506348
    5. '):
' → logprob: -3.0589241981506348
    6. ' or' → logprob: -4.683924198150635
    7. ':
' → logprob: -4.808924198150635
    8. ':' → logprob: -5.558924198150635
    9. '   ' → logprob: -5.808924198150635
    10. '           ' → logprob: -5.933924198150635

Token 2315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014020700938999653
    2. ':
' → logprob: -4.889020919799805
    3. ':' → logprob: -5.639020919799805
    4. ' and' → logprob: -6.389020919799805
    5. '   ' → logprob: -6.889020919799805
    6. 'and' → logprob: -9.764020919799805
    7. '           ' → logprob: -11.014020919799805
    8. ':return' → logprob: -11.139020919799805
    9. '```' → logprob: -11.764020919799805
    10. '):
' → logprob: -12.264020919799805

Token 2316: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03896602615714073
    2. '   ' → logprob: -3.288965940475464
    3. 'return' (adapté à ' return') → logprob: -7.413966178894043
    4. 'False' → logprob: -8.163966178894043
    5. ' return' → logprob: -11.413966178894043
    6. '    ' → logprob: -11.788966178894043
    7. ' False' → logprob: -12.038966178894043
    8. '     ' → logprob: -12.163966178894043
    9. '           ' → logprob: -12.913966178894043
    10. '  ' → logprob: -14.038966178894043

Token 2317: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.615255839889869e-05
    2. ' False' → logprob: -9.250096321105957
    3. '(False' → logprob: -17.87509536743164
    4. 'True' → logprob: -18.00009536743164
    5. '   ' → logprob: -18.50009536743164
    6. 'None' → logprob: -18.62509536743164
    7. '0' → logprob: -18.75009536743164
    8. '
' → logprob: -19.75009536743164
    9. 'F' → logprob: -20.12509536743164
    10. '    
' → logprob: -21.75009536743164

Token 2318: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033999159932136536
    2. '
' → logprob: -3.40899920463562
    3. '    
' → logprob: -8.0339994430542
    4. 'm' → logprob: -11.2839994430542
    5. '       ' → logprob: -12.2839994430542
    6. '  
' → logprob: -13.1589994430542
    7. '
' → logprob: -13.4089994430542
    8. '        
' → logprob: -13.5339994430542
    9. 'c' → logprob: -13.9089994430542
    10. 'def' → logprob: -14.1589994430542

Token 2319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018195280572399497
    2. '
' → logprob: -6.501819610595703
    3. '    
' → logprob: -8.751819610595703
    4. '       ' → logprob: -9.126819610595703
    5. '```' → logprob: -10.876819610595703
    6. 'if' → logprob: -12.126819610595703
    7. '   ' → logprob: -12.251819610595703
    8. ' if' → logprob: -12.376819610595703
    9. ':
' → logprob: -13.126819610595703
    10. '  
' → logprob: -13.376819610595703

Token 2320: ' m' (ID: 284)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056925710290670395
    2. 'm' (adapté à ' m') → logprob: -2.9319257736206055
    3. 'next' → logprob: -6.3069257736206055
    4. 'mor' → logprob: -9.056925773620605
    5. 's' → logprob: -10.181925773620605
    6. 'mo' → logprob: -10.931925773620605
    7. '       ' → logprob: -11.431925773620605
    8. ' mor' → logprob: -11.806925773620605
    9. ' next' → logprob: -11.806925773620605
    10. ' m' → logprob: -12.681925773620605

Token 2321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4947371780872345
    2. 'ora' → logprob: -1.244737148284912
    3. '=' → logprob: -2.619737148284912
    4. '   ' → logprob: -4.119737148284912
    5. '_next' → logprob: -5.369737148284912
    6. 'oras' → logprob: -6.119737148284912
    7. 'next' → logprob: -6.744737148284912
    8. '2' → logprob: -6.744737148284912
    9. 'or' → logprob: -6.869737148284912
    10. 'o' → logprob: -7.994737148284912

Token 2322: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00019388488726690412
    2. 'mor' → logprob: -8.87519359588623
    3. '   ' → logprob: -11.37519359588623
    4. '(m' → logprob: -11.87519359588623
    5. ' mor' → logprob: -12.25019359588623
    6. ''m' → logprob: -12.75019359588623
    7. 'mas' → logprob: -12.75019359588623
    8. 'lor' → logprob: -12.87519359588623
    9. 'maras' → logprob: -13.00019359588623
    10. '.m' → logprob: -13.37519359588623

Token 2323: 'as' (ID: 288)
  Prédit: 'oras'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -0.21770040690898895
    2. 'ras' → logprob: -1.8427003622055054
    3. 'as' → logprob: -3.342700481414795
    4. 'or' → logprob: -6.592700481414795
    5. '[' → logprob: -8.217700004577637
    6. '   ' → logprob: -9.217700004577637
    7. 'aras' → logprob: -10.092700004577637
    8. '=' → logprob: -11.092700004577637
    9. 'ora' → logprob: -11.467700004577637
    10. 's' → logprob: -11.467700004577637

Token 2324: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01307128369808197
    2. '[' → logprob: -4.388071060180664
    3. '   ' → logprob: -7.888071060180664
    4. 'i' → logprob: -8.763071060180664
    5. '(i' → logprob: -11.763071060180664
    6. ' [' → logprob: -12.013071060180664
    7. '```' → logprob: -13.263071060180664
    8. ' =' → logprob: -13.388071060180664
    9. '[m' → logprob: -13.513071060180664
    10. '=' → logprob: -13.513071060180664

Token 2325: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006522102747112513
    2. '][' → logprob: -5.256522178649902
    3. '[' → logprob: -7.631522178649902
    4. 'i' → logprob: -8.131522178649902
    5. ']' → logprob: -8.631522178649902
    6. '[i' → logprob: -9.256522178649902
    7. ' +' → logprob: -9.381522178649902
    8. '   ' → logprob: -9.631522178649902
    9. '+i' → logprob: -9.631522178649902
    10. '1' → logprob: -12.256522178649902

Token 2326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019601555541157722
    2. '+' → logprob: -6.251960277557373
    3. 'i' → logprob: -10.501959800720215
    4. ' +' → logprob: -13.751959800720215
    5. ' ' → logprob: -13.876959800720215
    6. '```' → logprob: -14.251959800720215
    7. '   ' → logprob: -14.376959800720215
    8. ']' → logprob: -16.00196075439453
    9. '
' → logprob: -16.37696075439453
    10. '[' → logprob: -16.75196075439453

Token 2327: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14504946768283844
    2. ']
' → logprob: -2.770049571990967
    3. '[' → logprob: -3.270049571990967
    4. ']' → logprob: -3.520049571990967
    5. '   ' → logprob: -5.895049571990967
    6. '
' → logprob: -7.145049571990967
    7. '].' → logprob: -7.270049571990967
    8. 'def' → logprob: -9.270049095153809
    9. '0' → logprob: -9.770049095153809
    10. ')[' → logprob: -9.895049095153809

Token 2328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005480298423208296
    2. '
' → logprob: -8.500548362731934
    3. '```' → logprob: -8.875548362731934
    4. '       ' → logprob: -9.625548362731934
    5. ':' → logprob: -10.500548362731934
    6. ' and' → logprob: -10.625548362731934
    7. 'and' → logprob: -10.750548362731934
    8. '[' → logprob: -10.750548362731934
    9. '    
' → logprob: -11.500548362731934
    10. ':
' → logprob: -11.875548362731934

Token 2329: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0657089576125145
    2. 'if' → logprob: -2.940708875656128
    3. ' if' → logprob: -5.440709114074707
    4. 'return' → logprob: -5.565709114074707
    5. 'len' → logprob: -6.440709114074707
    6. ' ' → logprob: -7.815709114074707
    7. 'c' → logprob: -8.315709114074707
    8. ' return' → logprob: -8.440709114074707
    9. 'm' → logprob: -9.690709114074707
    10. ' len' → logprob: -10.565709114074707

Token 2330: ' check' (ID: 2371)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.08230014145374298
    2. '   ' → logprob: -3.5823001861572266
    3. 'if' → logprob: -3.5823001861572266
    4. 'return' → logprob: -4.082300186157227
    5. 'm' → logprob: -5.082300186157227
    6. 'c' → logprob: -8.707300186157227
    7. '(len' → logprob: -9.707300186157227
    8. '       ' → logprob: -11.082300186157227
    9. '
' → logprob: -11.082300186157227
    10. ' len' → logprob: -11.332300186157227

Token 2331: ' if' (ID: 538)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -6.599403423024341e-05
    2. ' len' → logprob: -10.625065803527832
    3. '(len' → logprob: -11.000065803527832
    4. 'm' → logprob: -11.250065803527832
    5. '   ' → logprob: -11.500065803527832
    6. ' ' → logprob: -14.000065803527832
    7. 'if' → logprob: -14.500065803527832
    8. '  ' → logprob: -15.500065803527832
    9. '       ' → logprob: -16.62506675720215
    10. '2' → logprob: -16.75006675720215

Token 2332: ' mora' (ID: 47294)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0007566197891719639
    2. 'm' → logprob: -7.250756740570068
    3. ' len' → logprob: -10.25075626373291
    4. '(len' → logprob: -12.00075626373291
    5. '   ' → logprob: -12.62575626373291
    6. ' ' → logprob: -13.62575626373291
    7. '  ' → logprob: -15.12575626373291
    8. 'length' → logprob: -16.250757217407227
    9. '	len' → logprob: -17.250757217407227
    10. '    ' → logprob: -17.250757217407227

Token 2333: ' at' (ID: 540)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.02616199478507042
    2. 'and' → logprob: -4.526162147521973
    3. 'length' → logprob: -5.151162147521973
    4. '   ' → logprob: -6.151162147521973
    5. '[' → logprob: -6.276162147521973
    6. 'if' → logprob: -7.401162147521973
    7. ' and' → logprob: -7.401162147521973
    8. ')' → logprob: -7.776162147521973
    9. 'def' → logprob: -7.776162147521973
    10. '[:' → logprob: -7.901162147521973

Token 2334: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05136359855532646
    2. 'i' → logprob: -3.301363706588745
    3. '1' → logprob: -4.676363468170166
    4. 'len' → logprob: -6.426363468170166
    5. 'm' → logprob: -6.551363468170166
    6. ' ' → logprob: -7.926363468170166
    7. 'length' → logprob: -8.426363945007324
    8. 'index' → logprob: -9.801363945007324
    9. 'the' → logprob: -10.426363945007324
    10. ' i' → logprob: -10.551363945007324

Token 2335: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2882387042045593
    2. '1' → logprob: -1.413238763809204
    3. 'len' → logprob: -5.538238525390625
    4. '[' → logprob: -6.413238525390625
    5. ' +' → logprob: -8.288238525390625
    6. '
' → logprob: -8.413238525390625
    7. '   ' → logprob: -8.788238525390625
    8. 'i' → logprob: -8.913238525390625
    9. 'length' → logprob: -9.413238525390625
    10. 'n' → logprob: -9.788238525390625

Token 2336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011117222311440855
    2. '+' → logprob: -9.37511157989502
    3. '0' → logprob: -10.75011157989502
    4. 'i' → logprob: -13.12511157989502
    5. '2' → logprob: -14.37511157989502
    6. '```' → logprob: -15.00011157989502
    7. '   ' → logprob: -15.25011157989502
    8. '#' → logprob: -15.31261157989502
    9. '
' → logprob: -15.56261157989502
    10. ' ' → logprob: -15.93761157989502

Token 2337: ' begins' (ID: 18015)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16564393043518066
    2. 'startswith' → logprob: -2.5406439304351807
    3. '.startswith' → logprob: -3.2906439304351807
    4. '   ' → logprob: -5.040643692016602
    5. '       ' → logprob: -5.165643692016602
    6. 'length' → logprob: -5.290643692016602
    7. '[:' → logprob: -5.290643692016602
    8. 'and' → logprob: -5.415643692016602
    9. '
' → logprob: -6.040643692016602
    10. '[' → logprob: -6.165643692016602

Token 2338: ' with' (ID: 483)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011543002910912037
    2. '2' → logprob: -4.886542797088623
    3. 'm' → logprob: -6.136542797088623
    4. '0' → logprob: -7.386542797088623
    5. '   ' → logprob: -7.511542797088623
    6. '(len' → logprob: -8.261543273925781
    7. 'with' → logprob: -9.386543273925781
    8. '1' → logprob: -9.511543273925781
    9. ' len' → logprob: -9.886543273925781
    10. '       ' → logprob: -10.136543273925781

Token 2339: ' doubled' (ID: 69040)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.006037465296685696
    2. 'len' → logprob: -5.13103723526001
    3. ' m' → logprob: -10.131037712097168
    4. '(m' → logprob: -10.506037712097168
    5. 'a' → logprob: -11.631037712097168
    6. '2' → logprob: -12.131037712097168
    7. ' len' → logprob: -12.506037712097168
    8. 'mm' → logprob: -12.756037712097168
    9. ' ' → logprob: -12.756037712097168
    10. 'length' → logprob: -12.756037712097168

Token 2340: ' conson' (ID: 127767)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004242704715579748
    2. 'if' → logprob: -5.504242897033691
    3. 'c' → logprob: -9.879242897033691
    4. 'len' → logprob: -10.004242897033691
    5. '   ' → logprob: -11.004242897033691
    6. ' m' → logprob: -11.629242897033691
    7. ' ' → logprob: -12.004242897033691
    8. 'ch' → logprob: -12.504242897033691
    9. '2' → logprob: -12.629242897033691
    10. '0' → logprob: -13.004242897033691

Token 2341: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.07914016395807266
    2. 'ants' → logprob: -2.5791401863098145
    3. 'm' → logprob: -8.454139709472656
    4. 't' → logprob: -11.079139709472656
    5. 'ent' → logprob: -12.079139709472656
    6. 'a' → logprob: -12.329139709472656
    7. 's' → logprob: -13.204139709472656
    8. 'antt' → logprob: -13.704139709472656
    9. 'antd' → logprob: -13.704139709472656
    10. 'nt' → logprob: -13.829139709472656

Token 2342: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.032336022704839706
    2. 'if' → logprob: -4.032336235046387
    3. ' and' → logprob: -5.407336235046387
    4. ' if' → logprob: -6.032336235046387
    5. 'm' → logprob: -6.282336235046387
    6. 'and' → logprob: -6.782336235046387
    7. ' ' → logprob: -7.032336235046387
    8. 'len' → logprob: -7.032336235046387
    9. ' =' → logprob: -7.407336235046387
    10. '==' → logprob: -7.907336235046387

Token 2343: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024547725915908813
    2. ' and' → logprob: -4.274547576904297
    3. '       ' → logprob: -5.774547576904297
    4. 'and' → logprob: -5.899547576904297
    5. '```' → logprob: -6.899547576904297
    6. ' ' → logprob: -7.274547576904297
    7. '==' → logprob: -7.399547576904297
    8. ' if' → logprob: -7.524547576904297
    9. 'if' → logprob: -7.649547576904297
    10. 'len' → logprob: -7.774547576904297

Token 2344: ' #' (ID: 1069)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12400231510400772
    2. '   ' → logprob: -2.37400221824646
    3. 'm' → logprob: -3.99900221824646
    4. 'if' → logprob: -5.624002456665039
    5. 'return' → logprob: -6.999002456665039
    6. ' len' → logprob: -7.874002456665039
    7. '(len' → logprob: -8.874002456665039
    8. ' ' → logprob: -10.374002456665039
    9. ' m' → logprob: -10.499002456665039
    10. '
' → logprob: -11.124002456665039

Token 2345: ' mora' (ID: 47294)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.628584623336792
    2. 'len' → logprob: -1.378584623336792
    3. '   ' → logprob: -2.253584623336792
    4. 'm' → logprob: -2.378584623336792
    5. 'return' → logprob: -5.003584861755371
    6. ' if' → logprob: -5.003584861755371
    7. 'c' → logprob: -7.003584861755371
    8. ' m' → logprob: -7.253584861755371
    9. ' len' → logprob: -7.503584861755371
    10. 'for' → logprob: -7.628584861755371

Token 2346: ' length' (ID: 5517)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5287309288978577
    2. '=' → logprob: -2.278730869293213
    3. '_len' → logprob: -2.278730869293213
    4. 'startswith' → logprob: -2.403730869293213
    5. 'length' → logprob: -3.653730869293213
    6. ' =' → logprob: -3.778730869293213
    7. '_length' → logprob: -3.903730869293213
    8. '.startswith' → logprob: -4.153730869293213
    9. 'if' → logprob: -4.903730869293213
    10. '[' → logprob: -5.278730869293213

Token 2347: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.28839078545570374
    2. '>' → logprob: -1.4133907556533813
    3. 'len' → logprob: -6.538390636444092
    4. '1' → logprob: -6.788390636444092
    5. ' >=' → logprob: -6.913390636444092
    6. '2' → logprob: -7.163390636444092
    7. '<' → logprob: -7.288390636444092
    8. '=' → logprob: -7.288390636444092
    9. '```' → logprob: -8.03839111328125
    10. '   ' → logprob: -8.28839111328125

Token 2348: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.596781946020201e-05
    2. ' ' → logprob: -10.750045776367188
    3. '   ' → logprob: -11.125045776367188
    4. '>' → logprob: -12.875045776367188
    5. '3' → logprob: -13.000045776367188
    6. '```' → logprob: -13.250045776367188
    7. '1' → logprob: -13.375045776367188
    8. '
' → logprob: -15.375045776367188
    9. '>=' → logprob: -15.375045776367188
    10. '       ' → logprob: -15.625045776367188

Token 2349: ',' (ID: 11)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.647065281867981
    2. ' and' → logprob: -1.522065281867981
    3. 'if' → logprob: -2.3970651626586914
    4. '0' → logprob: -2.7720651626586914
    5. '2' → logprob: -2.8970651626586914
    6. '   ' → logprob: -3.5220651626586914
    7. '1' → logprob: -5.272065162658691
    8. 'm' → logprob: -5.272065162658691
    9. '>' → logprob: -5.522065162658691
    10. ' if' → logprob: -6.272065162658691

Token 2350: ' first' (ID: 1577)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.10619235038757324
    2. 'm' → logprob: -2.3561923503875732
    3. '2' → logprob: -5.606192588806152
    4. '   ' → logprob: -6.231192588806152
    5. 'if' → logprob: -8.481192588806152
    6. '(len' → logprob: -9.856192588806152
    7. ' len' → logprob: -10.106192588806152
    8. ' m' → logprob: -12.356192588806152
    9. '0' → logprob: -12.606192588806152
    10. '1' → logprob: -12.981192588806152

Token 2351: ' two' (ID: 1920)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.015598472207784653
    2. '1' → logprob: -4.515598297119141
    3. '>=' → logprob: -6.265598297119141
    4. ' ' → logprob: -6.640598297119141
    5. 'if' → logprob: -7.265598297119141
    6. 'len' → logprob: -8.14059829711914
    7. '>' → logprob: -9.01559829711914
    8. 'and' → logprob: -9.76559829711914
    9. '+' → logprob: -10.01559829711914
    10. ' >=' → logprob: -10.76559829711914

Token 2352: ' chars' (ID: 47991)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7183372974395752
    2. 'm' → logprob: -1.8433372974395752
    3. '0' → logprob: -2.093337297439575
    4. '>=' → logprob: -2.218337297439575
    5. 'len' → logprob: -3.468337297439575
    6. 'if' → logprob: -3.468337297439575
    7. 'chars' → logprob: -3.468337297439575
    8. '>' → logprob: -5.468337059020996
    9. '<m' → logprob: -5.593337059020996
    10. 'two' → logprob: -5.718337059020996

Token 2353: ' same' (ID: 2684)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.7788946628570557
    2. '0' → logprob: -2.2788946628570557
    3. '2' → logprob: -2.4038946628570557
    4. '[' → logprob: -2.5288946628570557
    5. 'm' → logprob: -2.6538946628570557
    6. '```' → logprob: -2.6538946628570557
    7. '   ' → logprob: -2.7788946628570557
    8. '>=' → logprob: -2.7788946628570557
    9. '=' → logprob: -3.1538946628570557
    10. 'and' → logprob: -3.2788946628570557

Token 2354: ' conson' (ID: 127767)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47823816537857056
    2. 'and' → logprob: -1.3532381057739258
    3. '   ' → logprob: -2.353238105773926
    4. 'if' → logprob: -4.103238105773926
    5. '       ' → logprob: -4.853238105773926
    6. ' if' → logprob: -6.478238105773926
    7. '           ' → logprob: -8.478238105773926
    8. ' ' → logprob: -8.853238105773926
    9. ':' → logprob: -9.353238105773926
    10. 'm' → logprob: -9.978238105773926

Token 2355: 'ant' (ID: 493)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.47423654794692993
    2. 'ant' → logprob: -1.9742364883422852
    3. ' m' → logprob: -2.224236488342285
    4. 't' → logprob: -3.099236488342285
    5. 'ants' → logprob: -3.724236488342285
    6. '=m' → logprob: -4.474236488342285
    7. 'ent' → logprob: -4.849236488342285
    8. 's' → logprob: -4.974236488342285
    9. 'a' → logprob: -5.099236488342285
    10. '(m' → logprob: -5.224236488342285

Token 2356: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3834032416343689
    2. 'and' → logprob: -1.2584033012390137
    3. 'if' → logprob: -4.133403301239014
    4. '   ' → logprob: -4.133403301239014
    5. ' if' → logprob: -7.008403301239014
    6. '       ' → logprob: -8.008402824401855
    7. 'm' → logprob: -8.633402824401855
    8. ' ' → logprob: -8.758402824401855
    9. '    ' → logprob: -9.258402824401855
    10. '           ' → logprob: -9.508402824401855

Token 2357: '   ' (ID: 271)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4919041693210602
    2. 'and' → logprob: -1.2419041395187378
    3. '   ' → logprob: -2.3669042587280273
    4. '       ' → logprob: -6.241904258728027
    5. '```' → logprob: -6.991904258728027
    6. '>' → logprob: -7.366904258728027
    7. 'if' → logprob: -7.491904258728027
    8. '==' → logprob: -7.616904258728027
    9. ' ' → logprob: -8.241904258728027
    10. ' ==' → logprob: -8.741904258728027

Token 2358: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004207563120871782
    2. 'if' (adapté à ' if') → logprob: -6.629207611083984
    3. ' and' → logprob: -6.879207611083984
    4. ' if' → logprob: -7.004207611083984
    5. 'and' → logprob: -7.004207611083984
    6. 'm' → logprob: -11.379207611083984
    7. '       ' → logprob: -12.004207611083984
    8. '	if' → logprob: -12.379207611083984
    9. '```' → logprob: -13.129207611083984
    10. ' ' → logprob: -13.129207611083984

Token 2359: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0002087853499688208
    2. ' len' → logprob: -8.625208854675293
    3. '   ' → logprob: -11.375208854675293
    4. 'm' → logprob: -11.625208854675293
    5. '(len' → logprob: -11.875208854675293
    6. ' ' → logprob: -13.375208854675293
    7. '  ' → logprob: -16.125207901000977
    8. '	len' → logprob: -17.250207901000977
    9. '(' → logprob: -17.750207901000977
    10. '2' → logprob: -17.875207901000977

Token 2360: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -9.686778503237292e-05
    2. 'm' → logprob: -9.250097274780273
    3. '[m' → logprob: -15.375097274780273
    4. '(s' → logprob: -15.875097274780273
    5. 's' → logprob: -16.875097274780273
    6. '(' → logprob: -16.875097274780273
    7. '>' → logprob: -17.125097274780273
    8. '((' → logprob: -17.125097274780273
    9. ')m' → logprob: -17.375097274780273
    10. '=m' → logprob: -17.875097274780273

Token 2361: ')' (ID: 8)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2075427919626236
    2. '(m' → logprob: -2.457542896270752
    3. ')' → logprob: -2.582542896270752
    4. '>' → logprob: -4.582542896270752
    5. '>=' → logprob: -4.582542896270752
    6. ')>=' → logprob: -5.832542896270752
    7. ')>' → logprob: -6.707542896270752
    8. ')m' → logprob: -7.582542896270752
    9. '[m' → logprob: -7.707542896270752
    10. ' >=' → logprob: -8.582542419433594

Token 2362: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.07125955075025558
    2. '>' → logprob: -2.6962594985961914
    3. ' >=' → logprob: -6.696259498596191
    4. ')>=' → logprob: -9.946259498596191
    5. ')' → logprob: -11.321259498596191
    6. '   ' → logprob: -12.196259498596191
    7. '≥' → logprob: -12.321259498596191
    8. ' >' → logprob: -12.696259498596191
    9. '<' → logprob: -12.821259498596191
    10. '[' → logprob: -12.946259498596191

Token 2363: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.250015258789062
    3. '```' → logprob: -14.125015258789062
    4. '   ' → logprob: -14.250015258789062
    5. '3' → logprob: -14.750015258789062
    6. '۲' → logprob: -16.750015258789062
    7. '  ' → logprob: -16.875015258789062
    8. '２' → logprob: -17.125015258789062
    9. '>' → logprob: -17.125015258789062
    10. '`' → logprob: -17.187515258789062

Token 2364: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -11.000019073486328
    3. '   ' → logprob: -13.500019073486328
    4. '3' → logprob: -14.125019073486328
    5. '```' → logprob: -15.375019073486328
    6. '۲' → logprob: -16.125019073486328
    7. '２' → logprob: -16.625019073486328
    8. '(' → logprob: -16.937519073486328
    9. '  ' → logprob: -17.250019073486328
    10. '1' → logprob: -17.812519073486328

Token 2365: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.1002630665898323
    2. ' and' → logprob: -2.3502631187438965
    3. '       ' → logprob: -11.100262641906738
    4. '   ' → logprob: -11.225262641906738
    5. '```' → logprob: -11.475262641906738
    6. '	and' → logprob: -11.725262641906738
    7. '>' → logprob: -12.600262641906738
    8. '==' → logprob: -13.475262641906738
    9. '=' → logprob: -13.600262641906738
    10. '           ' → logprob: -14.350262641906738

Token 2366: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.0280383548888494e-06
    2. ' m' → logprob: -13.875000953674316
    3. '   ' → logprob: -17.250001907348633
    4. '(m' → logprob: -18.000001907348633
    5. '	m' → logprob: -19.500001907348633
    6. '
' → logprob: -20.750001907348633
    7. '[' → logprob: -20.875001907348633
    8. '  ' → logprob: -20.875001907348633
    9. '[m' → logprob: -21.125001907348633
    10. ' ' → logprob: -21.125001907348633

Token 2367: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10208509862422943
    2. '0' → logprob: -2.3520851135253906
    3. '1' → logprob: -6.977085113525391
    4. '```' → logprob: -8.22708511352539
    5. '   ' → logprob: -8.47708511352539
    6. '
' → logprob: -8.97708511352539
    7. 'm' → logprob: -9.47708511352539
    8. ' ' → logprob: -9.85208511352539
    9. '[m' → logprob: -10.10208511352539
    10. '#' → logprob: -10.47708511352539

Token 2368: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004133968614041805
    2. '1' → logprob: -5.504134178161621
    3. ' ' → logprob: -10.504134178161621
    4. '[' → logprob: -11.629134178161621
    5. '   ' → logprob: -11.879134178161621
    6. '2' → logprob: -12.379134178161621
    7. 'm' → logprob: -13.129134178161621
    8. '```' → logprob: -13.254134178161621
    9. '
' → logprob: -14.504134178161621
    10. '>' → logprob: -14.629134178161621

Token 2369: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.7024973630905151
    2. ']' → logprob: -0.9524973630905151
    3. '==' → logprob: -2.2024974822998047
    4. 'm' → logprob: -4.952497482299805
    5. ' ==' → logprob: -7.702497482299805
    6. '=' → logprob: -8.077497482299805
    7. ')==' → logprob: -8.202497482299805
    8. ')' → logprob: -9.577497482299805
    9. '==
' → logprob: -9.952497482299805
    10. '']==' → logprob: -10.577497482299805

Token 2370: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1018403097987175
    2. 'm' → logprob: -2.3518402576446533
    3. ' ==' → logprob: -6.601840496063232
    4. '==
' → logprob: -9.601840019226074
    5. ']==' → logprob: -10.101840019226074
    6. ' m' → logprob: -10.226840019226074
    7. '=' → logprob: -10.476840019226074
    8. '=m' → logprob: -10.601840019226074
    9. '[m' → logprob: -10.726840019226074
    10. '[' → logprob: -11.226840019226074

Token 2371: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -4.320199877838604e-07
    2. ' m' → logprob: -14.875
    3. '   ' → logprob: -18.25
    4. '	m' → logprob: -19.875
    5. ' ' → logprob: -20.375
    6. ')m' → logprob: -21.375
    7. '  ' → logprob: -22.125
    8. 'м' → logprob: -22.5
    9. ' ' → logprob: -22.625
    10. '       ' → logprob: -22.75

Token 2372: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3450726866722107
    2. '[' → logprob: -1.3450727462768555
    3. 'm' → logprob: -3.4700727462768555
    4. '```' → logprob: -9.720072746276855
    5. ']' → logprob: -10.095072746276855
    6. ''m' → logprob: -10.845072746276855
    7. '`' → logprob: -11.470072746276855
    8. '[m' → logprob: -11.845072746276855
    9. ''' → logprob: -11.970072746276855
    10. ' m' → logprob: -12.095072746276855

Token 2373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -17.25
    3. '0' → logprob: -17.625
    4. '   ' → logprob: -18.125
    5. ' ' → logprob: -18.25
    6. '{' → logprob: -18.9375
    7. '１' → logprob: -19.0625
    8. '```' → logprob: -19.25
    9. '2' → logprob: -19.3125
    10. '`' → logprob: -19.5

Token 2374: ']' (ID: 60)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5461260080337524
    2. '<|end|>' → logprob: -2.046125888824463
    3. ':
' → logprob: -2.546125888824463
    4. ':return' → logprob: -2.921125888824463
    5. ']:
' → logprob: -3.171125888824463
    6. '<|end|>' → logprob: -3.421125888824463
    7. ']:' → logprob: -4.046125888824463
    8. '):
' → logprob: -4.546125888824463
    9. ']' → logprob: -4.546125888824463
    10. '']:
' → logprob: -5.046125888824463

Token 2375: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10161472111940384
    2. ':return' → logprob: -3.2266147136688232
    3. ':
' → logprob: -3.3516147136688232
    4. '       ' → logprob: -4.601614952087402
    5. '   ' → logprob: -5.476614952087402
    6. 'and' → logprob: -5.726614952087402
    7. ' and' → logprob: -5.726614952087402
    8. '<|end|>' → logprob: -7.351614952087402
    9. '):' → logprob: -8.976614952087402
    10. '=True' → logprob: -9.226614952087402

Token 2376: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0002736138121690601
    2. 'is' → logprob: -8.375273704528809
    3. ' m' → logprob: -10.250273704528809
    4. 's' → logprob: -13.125273704528809
    5. ' is' → logprob: -13.125273704528809
    6. '(m' → logprob: -13.500273704528809
    7. 'CON' → logprob: -15.250273704528809
    8. '	m' → logprob: -15.687773704528809
    9. '(' → logprob: -15.812773704528809
    10. 'check' → logprob: -15.812773704528809

Token 2377: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43786635994911194
    2. 'in' → logprob: -1.1878663301467896
    3. ' in' → logprob: -3.062866449356079
    4. 'm' → logprob: -6.5628662109375
    5. '0' → logprob: -7.8128662109375
    6. '```' → logprob: -8.1878662109375
    7. '   ' → logprob: -8.8128662109375
    8. '[m' → logprob: -9.4378662109375
    9. 'def' → logprob: -9.5628662109375
    10. '#' → logprob: -9.5628662109375

Token 2378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07120326161384583
    2. '1' → logprob: -2.6962032318115234
    3. '[' → logprob: -7.446203231811523
    4. '2' → logprob: -8.571203231811523
    5. ']' → logprob: -8.696203231811523
    6. ' ' → logprob: -9.821203231811523
    7. '#' → logprob: -9.821203231811523
    8. 'm' → logprob: -10.196203231811523
    9. '```' → logprob: -10.321203231811523
    10. '-' → logprob: -10.571203231811523

Token 2379: ']' (ID: 60)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4329328238964081
    2. ' in' → logprob: -1.0579328536987305
    3. ']' → logprob: -5.5579328536987305
    4. ')' → logprob: -8.30793285369873
    5. 'In' → logprob: -10.68293285369873
    6. ' ]' → logprob: -10.93293285369873
    7. '   ' → logprob: -11.18293285369873
    8. ' ' → logprob: -11.68293285369873
    9. ''in' → logprob: -11.80793285369873
    10. '	in' → logprob: -12.18293285369873

Token 2380: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.023524513468146324
    2. ' in' → logprob: -3.773524522781372
    3. 'm' → logprob: -9.523524284362793
    4. '
' → logprob: -10.023524284362793
    5. '   ' → logprob: -10.148524284362793
    6. '```' → logprob: -10.148524284362793
    7. 'and' → logprob: -11.398524284362793
    8. ')' → logprob: -12.148524284362793
    9. 'In' → logprob: -12.273524284362793
    10. 'import' → logprob: -12.398524284362793

Token 2381: ' CON' (ID: 5802)
  Prédit: 'CON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CON' → logprob: -0.6938374042510986
    2. 'VOICE' → logprob: -0.6938374042510986
    3. 'VO' → logprob: -7.5688371658325195
    4. ' CON' → logprob: -8.81883716583252
    5. 'con' → logprob: -12.06883716583252
    6. ' VO' → logprob: -12.44383716583252
    7. '{' → logprob: -12.56883716583252
    8. 'K' → logprob: -13.19383716583252
    9. '{'' → logprob: -13.19383716583252
    10. 'VOC' → logprob: -13.94383716583252

Token 2382: 'SON' (ID: 4214)
  Prédit: 'SON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SON' → logprob: -1.6240566083070007e-06
    2. 'S' → logprob: -13.500001907348633
    3. 'CON' → logprob: -16.500001907348633
    4. '#' → logprob: -17.000001907348633
    5. '{' → logprob: -17.125001907348633
    6. '```' → logprob: -17.250001907348633
    7. 'son' → logprob: -17.500001907348633
    8. 'SOR' → logprob: -17.750001907348633
    9. '``' → logprob: -18.125001907348633
    10. '**' → logprob: -19.125001907348633

Token 2383: 'ANTS' (ID: 96531)
  Prédit: 'ANTS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANTS' → logprob: -5.5027299822540954e-05
    2. '{' → logprob: -10.625055313110352
    3. 'ants' → logprob: -10.875055313110352
    4. 'TS' → logprob: -13.000055313110352
    5. 'N' → logprob: -13.000055313110352
    6. '_' → logprob: -13.375055313110352
    7. 'S' → logprob: -13.750055313110352
    8. '{}' → logprob: -14.375055313110352
    9. 'ENTS' → logprob: -14.375055313110352
    10. 'ATS' → logprob: -14.500055313110352

Token 2384: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5343369841575623
    2. '       ' → logprob: -1.159337043762207
    3. ':
' → logprob: -2.534337043762207
    4. ' and' → logprob: -4.284337043762207
    5. ':return' → logprob: -5.659337043762207
    6. 'and' → logprob: -6.034337043762207
    7. '   ' → logprob: -7.284337043762207
    8. '):
' → logprob: -8.409337043762207
    9. '):' → logprob: -8.534337043762207
    10. '      ' → logprob: -10.659337043762207

Token 2385: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003712085890583694
    2. ':
' → logprob: -8.625370979309082
    3. ':' → logprob: -8.875370979309082
    4. ' and' → logprob: -10.375370979309082
    5. '	' → logprob: -11.500370979309082
    6. '   ' → logprob: -12.875370979309082
    7. '           ' → logprob: -13.125370979309082
    8. ':return' → logprob: -13.125370979309082
    9. 'and' → logprob: -13.375370979309082
    10. '):
' → logprob: -14.875370979309082

Token 2386: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001870902779046446
    2. 'return' (adapté à ' return') → logprob: -9.000186920166016
    3. '           ' → logprob: -9.750186920166016
    4. ' return' → logprob: -12.875186920166016
    5. '   ' → logprob: -13.750186920166016
    6. '	' → logprob: -14.250186920166016
    7. '	return' → logprob: -14.375186920166016
    8. '	   ' → logprob: -16.125186920166016
    9. '     ' → logprob: -16.125186920166016
    10. '	       ' → logprob: -16.125186920166016

Token 2387: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: 0.0
    2. ' True' → logprob: -17.0
    3. 'False' → logprob: -18.75
    4. '(True' → logprob: -22.125
    5. '   ' → logprob: -22.5
    6. '=True' → logprob: -24.375
    7. 'true' → logprob: -25.0
    8. '       ' → logprob: -25.375
    9. '#' → logprob: -26.0
    10. '           ' → logprob: -26.25

Token 2388: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.435139898210764e-05
    2. '
' → logprob: -10.500083923339844
    3. '<|end|>' → logprob: -11.125083923339844
    4. '    
' → logprob: -11.500083923339844
    5. '	return' → logprob: -11.875083923339844
    6. 'return' → logprob: -12.000083923339844
    7. ')' → logprob: -12.375083923339844
    8. '.' → logprob: -12.750083923339844
    9. ':' → logprob: -13.375083923339844
    10. ' ' → logprob: -13.875083923339844

Token 2389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005133562372066081
    2. '    
' → logprob: -9.250513076782227
    3. ':' → logprob: -9.500513076782227
    4. '	' → logprob: -9.500513076782227
    5. 'False' → logprob: -10.125513076782227
    6. ' ' → logprob: -10.375513076782227
    7. '[' → logprob: -10.750513076782227
    8. '	return' → logprob: -10.875513076782227
    9. '    ' → logprob: -10.875513076782227
    10. ' ' → logprob: -11.000513076782227

Token 2390: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004167297447565943
    2. 'False' → logprob: -8.12541675567627
    3. 'return' (adapté à ' return') → logprob: -9.50041675567627
    4. '	return' → logprob: -10.50041675567627
    5. '(False' → logprob: -12.37541675567627
    6. '	' → logprob: -12.37541675567627
    7. '
' → logprob: -13.00041675567627
    8. ' ' → logprob: -13.75041675567627
    9. '.' → logprob: -13.75041675567627
    10. ' False' → logprob: -13.87541675567627

Token 2391: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.000731377920601517
    2. ' False' → logprob: -7.250731468200684
    3. 'True' → logprob: -10.750731468200684
    4. ' True' → logprob: -17.625730514526367
    5. '(False' → logprob: -19.500730514526367
    6. '   ' → logprob: -21.000730514526367
    7. '0' → logprob: -21.750730514526367
    8. 'bool' → logprob: -21.750730514526367
    9. 'None' → logprob: -22.750730514526367
    10. 'm' → logprob: -23.000730514526367

Token 2392: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2393: 'def' (ID: 1314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.341916799545288
    2. ')' → logprob: -1.466916799545288
    3. '#' → logprob: -1.591916799545288
    4. '<|end|>' → logprob: -2.091916799545288
    5. '_' → logprob: -3.341916799545288
    6. ',' → logprob: -3.716916799545288
    7. 'def' → logprob: -3.966916799545288
    8. '(' → logprob: -3.966916799545288
    9. ''' → logprob: -4.091917037963867
    10. '
' → logprob: -4.216917037963867

Token 2394: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.2294963598251343
    2. 'main' → logprob: -1.9794963598251343
    3. 'count' → logprob: -2.229496479034424
    4. 'get' → logprob: -2.729496479034424
    5. 'split' → logprob: -2.729496479034424
    6. 'starts' → logprob: -3.479496479034424
    7. 'check' → logprob: -3.479496479034424
    8. 'replace' → logprob: -3.729496479034424
    9. 'combine' → logprob: -3.854496479034424
    10. 'has' → logprob: -4.104496479034424

Token 2395: '_next' (ID: 25436)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.47831207513809204
    2. '_vo' → logprob: -1.2283120155334473
    3. '_s' → logprob: -2.8533120155334473
    4. '_con' → logprob: -5.103312015533447
    5. '_' → logprob: -5.228312015533447
    6. '_m' → logprob: -5.228312015533447
    7. '_space' → logprob: -6.603312015533447
    8. '_double' → logprob: -6.853312015533447
    9. '_wh' → logprob: -6.978312015533447
    10. '_lower' → logprob: -6.978312015533447

Token 2396: '_m' (ID: 1285)
  Prédit: '_char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.6876765489578247
    2. '_s' → logprob: -1.0626765489578247
    3. '_' → logprob: -2.187676429748535
    4. '_m' → logprob: -4.812676429748535
    5. '_vo' → logprob: -5.187676429748535
    6. '_after' → logprob: -5.562676429748535
    7. '_space' → logprob: -5.562676429748535
    8. '_token' → logprob: -5.812676429748535
    9. '_wh' → logprob: -5.812676429748535
    10. '_in' → logprob: -6.187676429748535

Token 2397: 'ora' (ID: 2505)
  Prédit: 'ora'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -0.14304004609584808
    2. 'o' → logprob: -2.1430399417877197
    3. 'a' → logprob: -4.268040180206299
    4. 'or' → logprob: -8.01803970336914
    5. 'oras' → logprob: -8.01803970336914
    6. '```' → logprob: -8.39303970336914
    7. '_' → logprob: -8.89303970336914
    8. '_o' → logprob: -9.26803970336914
    9. ''o' → logprob: -9.51803970336914
    10. '   ' → logprob: -9.89303970336914

Token 2398: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.3493889570236206
    2. '_vo' → logprob: -1.2243889570236206
    3. '_is' → logprob: -8.22438907623291
    4. '_' → logprob: -9.09938907623291
    5. 's' → logprob: -9.22438907623291
    6. '_in' → logprob: -9.34938907623291
    7. '_voice' → logprob: -9.84938907623291
    8. '_double' → logprob: -9.97438907623291
    9. '_follow' → logprob: -10.34938907623291
    10. '_after' → logprob: -10.34938907623291

Token 2399: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -5.438573680294212e-06
    2. 'o' → logprob: -13.500005722045898
    3. '```' → logprob: -13.750005722045898
    4. '``' → logprob: -13.875005722045898
    5. 'оку' → logprob: -14.500005722045898
    6. '_' → logprob: -14.875005722045898
    7. 'ok' → logprob: -15.000005722045898
    8. 't' → logprob: -15.250005722045898
    9. '`' → logprob: -16.2500057220459
    10. '[' → logprob: -17.0000057220459

Token 2400: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0002622894535306841
    2. 'n' → logprob: -9.000262260437012
    3. '_on' → logprob: -9.000262260437012
    4. 'o' → logprob: -11.500262260437012
    5. 'on's' → logprob: -13.500262260437012
    6. '_follow' → logprob: -14.000262260437012
    7. 'ont' → logprob: -14.500262260437012
    8. 'u' → logprob: -14.875262260437012
    9. '__' → logprob: -15.625262260437012
    10. 'following' → logprob: -15.625262260437012

Token 2401: '(m' (ID: 2145)
  Prédit: '_follow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_follow' → logprob: -0.0023321169428527355
    2. '(m' → logprob: -6.5023322105407715
    3. '_f' → logprob: -8.377331733703613
    4. '_(' → logprob: -8.502331733703613
    5. '_' → logprob: -8.627331733703613
    6. '(i' → logprob: -9.502331733703613
    7. '(' → logprob: -9.752331733703613
    8. '(_' → logprob: -10.627331733703613
    9. 'Following' → logprob: -11.002331733703613
    10. 'following' → logprob: -11.252331733703613

Token 2402: 'oras' (ID: 41056)
  Prédit: '_follow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_follow' → logprob: -0.7040145397186279
    2. 'o' → logprob: -1.204014539718628
    3. 'a' → logprob: -3.204014539718628
    4. 'ora' → logprob: -3.829014539718628
    5. 'Following' → logprob: -3.954014539718628
    6. ')' → logprob: -4.079014778137207
    7. '_' → logprob: -4.079014778137207
    8. '(' → logprob: -4.079014778137207
    9. '_f' → logprob: -4.079014778137207
    10. 'following' → logprob: -4.079014778137207

Token 2403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3112165629863739
    2. '(m' → logprob: -2.0612165927886963
    3. ',m' → logprob: -2.0612165927886963
    4. '):' → logprob: -5.311216354370117
    5. '_,' → logprob: -5.811216354370117
    6. '   ' → logprob: -6.561216354370117
    7. ')' → logprob: -7.186216354370117
    8. ',i' → logprob: -7.811216354370117
    9. 'm' → logprob: -7.811216354370117
    10. '[m' → logprob: -7.936216354370117

Token 2404: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00520838238298893
    2. 'idx' → logprob: -5.505208492279053
    3. ' i' → logprob: -7.005208492279053
    4. 'index' → logprob: -9.255208015441895
    5. ' idx' → logprob: -10.005208015441895
    6. 'm' → logprob: -10.255208015441895
    7. '(i' → logprob: -11.380208015441895
    8. ')' → logprob: -11.755208015441895
    9. 'len' → logprob: -11.755208015441895
    10. '   ' → logprob: -11.880208015441895

Token 2405: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.13610930740833282
    2. '):' → logprob: -2.2611093521118164
    3. '):
' → logprob: -4.261109352111816
    4. ' +' → logprob: -5.386109352111816
    5. '   ' → logprob: -6.261109352111816
    6. '+i' → logprob: -6.511109352111816
    7. ')' → logprob: -7.761109352111816
    8. ',' → logprob: -8.636109352111816
    9. '[i' → logprob: -9.761109352111816
    10. '):
' → logprob: -9.761109352111816

Token 2406: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004642736748792231
    2. '(m' → logprob: -8.50046443939209
    3. 'm' → logprob: -9.50046443939209
    4. 'return' → logprob: -9.75046443939209
    5. 'i' → logprob: -10.50046443939209
    6. ' return' → logprob: -10.50046443939209
    7. '(i' → logprob: -10.62546443939209
    8. ' i' → logprob: -10.87546443939209
    9. 'def' → logprob: -11.12546443939209
    10. ' (' → logprob: -12.62546443939209

Token 2407: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08994144201278687
    2. 'i' → logprob: -2.9649415016174316
    3. ' i' → logprob: -4.214941501617432
    4. 'return' → logprob: -4.339941501617432
    5. ' return' → logprob: -5.589941501617432
    6. '(i' → logprob: -6.339941501617432
    7. 'False' → logprob: -7.214941501617432
    8. 'm' → logprob: -8.714941024780273
    9. ' False' → logprob: -9.839941024780273
    10. ' (' → logprob: -9.964941024780273

Token 2408: ' same' (ID: 2684)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16358742117881775
    2. '   ' → logprob: -2.4135873317718506
    3. 'i' → logprob: -2.9135873317718506
    4. 'is' → logprob: -5.78858757019043
    5. 'if' → logprob: -5.78858757019043
    6. 'def' → logprob: -7.53858757019043
    7. ' return' → logprob: -7.91358757019043
    8. '```' → logprob: -9.53858757019043
    9. ' i' → logprob: -10.78858757019043
    10. '``' → logprob: -12.16358757019043

Token 2409: ' as' (ID: 472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9503530859947205
    2. '(m' → logprob: -1.8253531455993652
    3. ')' → logprob: -2.2003531455993652
    4. '(' → logprob: -2.3253531455993652
    5. 'm' → logprob: -2.7003531455993652
    6. 'return' → logprob: -3.2003531455993652
    7. '   ' → logprob: -3.7003531455993652
    8. '(
' → logprob: -3.9503531455993652
    9. 'False' → logprob: -4.075353145599365
    10. ':' → logprob: -4.200353145599365

Token 2410: ' above' (ID: 5151)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0001895935565698892
    2. 'def' → logprob: -9.750189781188965
    3. 'lambda' → logprob: -10.000189781188965
    4. ' is' → logprob: -10.250189781188965
    5. 'i' → logprob: -10.250189781188965
    6. 's' → logprob: -12.125189781188965
    7. 'False' → logprob: -12.625189781188965
    8. 'True' → logprob: -13.625189781188965
    9. '   ' → logprob: -14.000189781188965
    10. 'check' → logprob: -14.500189781188965

Token 2411: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03304245322942734
    2. 'return' → logprob: -3.9080424308776855
    3. 'def' → logprob: -4.5330424308776855
    4. ' return' → logprob: -7.7830424308776855
    5. ':
' → logprob: -7.7830424308776855
    6. '
' → logprob: -8.033042907714844
    7. 'if' → logprob: -8.533042907714844
    8. '(m' → logprob: -9.408042907714844
    9. ':' → logprob: -9.658042907714844
    10. '```' → logprob: -9.908042907714844

Token 2412: ' more' (ID: 945)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3148075044155121
    2. 'return' → logprob: -2.064807415008545
    3. ' return' → logprob: -2.064807415008545
    4. 'def' → logprob: -4.439807415008545
    5. ' def' → logprob: -6.314807415008545
    6. ' i' → logprob: -7.314807415008545
    7. 'i' → logprob: -8.064807891845703
    8. 'False' → logprob: -8.064807891845703
    9. ' True' → logprob: -8.189807891845703
    10. '    ' → logprob: -8.564807891845703

Token 2413: ' general' (ID: 5985)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006716862553730607
    2. 'i' → logprob: -8.50067138671875
    3. '   ' → logprob: -9.25067138671875
    4. '=' → logprob: -9.75067138671875
    5. ')' → logprob: -9.87567138671875
    6. 'return' → logprob: -10.25067138671875
    7. '_def' → logprob: -10.37567138671875
    8. 's' → logprob: -10.62567138671875
    9. 'm' → logprob: -11.00067138671875
    10. ' def' → logprob: -11.25067138671875

Token 2414: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6667604446411133
    2. 'def' → logprob: -0.7917604446411133
    3. '(m' → logprob: -4.416760444641113
    4. ':' → logprob: -4.916760444641113
    5. 'return' → logprob: -5.666760444641113
    6. ':
' → logprob: -5.791760444641113
    7. 'if' → logprob: -6.291760444641113
    8. '(' → logprob: -6.791760444641113
    9. ' def' → logprob: -6.916760444641113
    10. '(
' → logprob: -7.291760444641113

Token 2415: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004142626188695431
    2. 'return' → logprob: -6.754142761230469
    3. ' return' → logprob: -7.129142761230469
    4. 'def' → logprob: -7.504142761230469
    5. '```' → logprob: -7.629142761230469
    6. ':
' → logprob: -7.879142761230469
    7. ':' → logprob: -8.129142761230469
    8. '(m' → logprob: -8.879142761230469
    9. ' if' → logprob: -9.629142761230469
    10. 'if' → logprob: -9.879142761230469

Token 2416: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7090812921524048
    2. '   ' → logprob: -0.9590812921524048
    3. 'def' → logprob: -2.2090811729431152
    4. ' return' → logprob: -4.709081172943115
    5. 'if' → logprob: -5.709081172943115
    6. 'False' → logprob: -6.959081172943115
    7. '```' → logprob: -7.709081172943115
    8. ' def' → logprob: -8.584081649780273
    9. '
' → logprob: -8.584081649780273
    10. ' if' → logprob: -9.209081649780273

Token 2417: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0002973280206788331
    2. 'i' → logprob: -8.375297546386719
    3. ' is' → logprob: -9.750297546386719
    4. 'False' → logprob: -11.750297546386719
    5. 'True' → logprob: -16.12529754638672
    6. 'len' → logprob: -16.37529754638672
    7. '   ' → logprob: -16.50029754638672
    8. '	is' → logprob: -16.75029754638672
    9. '(is' → logprob: -17.00029754638672
    10. ' i' → logprob: -17.50029754638672

Token 2418: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0017619287827983499
    2. 's' → logprob: -6.6267619132995605
    3. '_next' → logprob: -7.7517619132995605
    4. 'is' → logprob: -13.001762390136719
    5. 'next' → logprob: -13.251762390136719
    6. '_' → logprob: -14.626762390136719
    7. '\' → logprob: -15.251762390136719
    8. 'Next' → logprob: -15.501762390136719
    9. '```' → logprob: -15.501762390136719
    10. '_is' → logprob: -16.25176239013672

Token 2419: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.09081835299730301
    2. '_next' → logprob: -2.965818405151367
    3. 'o' → logprob: -3.840818405151367
    4. 'ok' → logprob: -4.840818405151367
    5. 'next' → logprob: -6.215818405151367
    6. 'Next' → logprob: -7.465818405151367
    7. '_' → logprob: -7.590818405151367
    8. 'oko' → logprob: -7.840818405151367
    9. '```' → logprob: -7.840818405151367
    10. 'ocu' → logprob: -8.465818405151367

Token 2420: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.009073035791516304
    2. 'o' → logprob: -4.759073257446289
    3. '_next' → logprob: -7.884073257446289
    4. 'next' → logprob: -9.759073257446289
    5. '_o' → logprob: -11.884073257446289
    6. '_on' → logprob: -13.009073257446289
    7. '```' → logprob: -13.509073257446289
    8. 's' → logprob: -13.634073257446289
    9. 'ou' → logprob: -13.759073257446289
    10. 'Next' → logprob: -13.759073257446289

Token 2421: '_follow' (ID: 110088)
  Prédit: '_follow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_follow' → logprob: -0.004515446722507477
    2. '_' → logprob: -5.504515647888184
    3. '_f' → logprob: -9.504515647888184
    4. '(_' → logprob: -9.629515647888184
    5. '_s' → logprob: -9.629515647888184
    6. '_after' → logprob: -10.254515647888184
    7. ')' → logprob: -10.629515647888184
    8. '(' → logprob: -11.004515647888184
    9. 's' → logprob: -11.254515647888184
    10. '```' → logprob: -11.379515647888184

Token 2422: 'ing' (ID: 289)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.2356465756893158
    2. 'ow' → logprob: -2.1106464862823486
    3. 'owing' → logprob: -2.8606464862823486
    4. 'ing' → logprob: -4.235646724700928
    5. 'ollow' → logprob: -5.235646724700928
    6. 'o' → logprob: -5.485646724700928
    7. 'wing' → logprob: -5.735646724700928
    8. 'oning' → logprob: -7.110646724700928
    9. 'ol' → logprob: -7.110646724700928
    10. 'ong' → logprob: -7.610646724700928

Token 2423: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.209805428981781
    2. '(' → logprob: -1.7098054885864258
    3. '_m' → logprob: -5.209805488586426
    4. '_' → logprob: -6.209805488586426
    5. '```' → logprob: -8.334805488586426
    6. '(_)' → logprob: -9.084805488586426
    7. 'm' → logprob: -9.459805488586426
    8. '<|end|>' → logprob: -9.709805488586426
    9. '(_' → logprob: -9.834805488586426
    10. '_(' → logprob: -9.959805488586426

Token 2424: 'oras' (ID: 41056)
  Prédit: 'oras'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -2.7610454708337784e-05
    2. 'or' → logprob: -10.875027656555176
    3. '[' → logprob: -12.625027656555176
    4. 'ora' → logprob: -13.250027656555176
    5. ')' → logprob: -14.250027656555176
    6. 'ras' → logprob: -14.625027656555176
    7. ')
' → logprob: -14.750027656555176
    8. '#' → logprob: -15.000027656555176
    9. 'aras' → logprob: -15.250027656555176
    10. '=' → logprob: -15.250027656555176

Token 2425: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01254179049283266
    2. ',m' → logprob: -4.387541770935059
    3. '(m' → logprob: -11.137541770935059
    4. ' ,' → logprob: -11.637541770935059
    5. '   ' → logprob: -12.387541770935059
    6. ',i' → logprob: -13.137541770935059
    7. 'm' → logprob: -14.512541770935059
    8. ',s' → logprob: -14.637541770935059
    9. ',[' → logprob: -15.012541770935059
    10. ',
' → logprob: -15.637541770935059

Token 2426: ' i' (ID: 575)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08908973634243011
    2. 'i' → logprob: -2.4640896320343018
    3. ' i' → logprob: -9.464089393615723
    4. ' m' → logprob: -10.339089393615723
    5. ' mor' → logprob: -10.964089393615723
    6. 'mor' → logprob: -11.339089393615723
    7. ')' → logprob: -12.214089393615723
    8. '	m' → logprob: -13.464089393615723
    9. ')m' → logprob: -13.464089393615723
    10. 's' → logprob: -14.464089393615723

Token 2427: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.157039049663581e-05
    2. '+' → logprob: -10.125051498413086
    3. '   ' → logprob: -12.500051498413086
    4. ' )' → logprob: -13.000051498413086
    5. '[' → logprob: -14.125051498413086
    6. ']' → logprob: -14.750051498413086
    7. '[i' → logprob: -14.750051498413086
    8. ' +' → logprob: -14.750051498413086
    9. '())' → logprob: -14.875051498413086
    10. ')
' → logprob: -14.875051498413086

Token 2428: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.384836882352829
    2. '#' → logprob: -2.1348369121551514
    3. '<|end|>' → logprob: -2.2598369121551514
    4. ')' → logprob: -3.2598369121551514
    5. ':' → logprob: -3.8848369121551514
    6. '(' → logprob: -4.259836673736572
    7. '```' → logprob: -4.759836673736572
    8. '
' → logprob: -5.384836673736572
    9. '<|end|>' → logprob: -6.384836673736572
    10. '\' → logprob: -6.759836673736572

Token 2429: ' main' (ID: 2758)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.8406016826629639
    2. 'get' → logprob: -1.8406016826629639
    3. 'def' → logprob: -2.215601682662964
    4. 'split' → logprob: -2.590601682662964
    5. 'replace' → logprob: -2.965601682662964
    6. 'check' → logprob: -3.215601682662964
    7. 'expand' → logprob: -3.340601682662964
    8. 'parse' → logprob: -3.465601682662964
    9. 'next' → logprob: -3.465601682662964
    10. 'count' → logprob: -3.840601682662964

Token 2430: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.7159857786027715e-05
    2. '():
' → logprob: -11.000046730041504
    3. '()' → logprob: -11.250046730041504
    4. '(' → logprob: -11.250046730041504
    5. ' ():' → logprob: -12.625046730041504
    6. '_' → logprob: -15.500046730041504
    7. ':' → logprob: -15.625046730041504
    8. '()>' → logprob: -15.875046730041504
    9. '();' → logprob: -16.00004768371582
    10. 'def' → logprob: -16.25004768371582

Token 2431: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027667438611388206
    2. '```' → logprob: -4.02766752243042
    3. ' import' → logprob: -5.52766752243042
    4. ' line' → logprob: -6.65266752243042
    5. 'import' → logprob: -6.65266752243042
    6. ' input' → logprob: -6.90266752243042
    7. ' s' → logprob: -7.40266752243042
    8. '    
' → logprob: -8.277667045593262
    9. '    ' → logprob: -8.652667045593262
    10. '(' → logprob: -9.027667045593262

Token 2432: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24378889799118042
    2. ' s' → logprob: -2.368788957595825
    3. '   ' → logprob: -2.493788957595825
    4. 'import' → logprob: -3.618788957595825
    5. 'n' → logprob: -5.243788719177246
    6. ' import' → logprob: -5.368788719177246
    7. ' n' → logprob: -5.993788719177246
    8. 'S' → logprob: -8.118788719177246
    9. ' S' → logprob: -8.618788719177246
    10. 'text' → logprob: -8.993788719177246

Token 2433: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.016989873722195625
    2. ' _' → logprob: -4.516989707946777
    3. ' s' → logprob: -5.516989707946777
    4. ' ' → logprob: -6.641989707946777
    5. ' l' → logprob: -8.391989707946777
    6. '_' → logprob: -8.891989707946777
    7. 'line' → logprob: -9.016989707946777
    8. '	line' → logprob: -9.516989707946777
    9. '_line' → logprob: -11.391989707946777
    10. ' word' → logprob: -11.891989707946777

Token 2434: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06451863050460815
    2. 'in' → logprob: -2.814518690109253
    3. ' =' → logprob: -7.189518451690674
    4. '   ' → logprob: -7.689518451690674
    5. '(line' → logprob: -8.439518928527832
    6. '_' → logprob: -8.814518928527832
    7. '(' → logprob: -8.939518928527832
    8. '_in' → logprob: -9.439518928527832
    9. '[' → logprob: -9.564518928527832
    10. '():
' → logprob: -9.814518928527832

Token 2435: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10021799057722092
    2. ' sys' → logprob: -2.3502180576324463
    3. '=sys' → logprob: -11.725217819213867
    4. '(sys' → logprob: -13.850217819213867
    5. '	sys' → logprob: -14.225217819213867
    6. 'input' → logprob: -14.475217819213867
    7. '```' → logprob: -14.850217819213867
    8. 'stdin' → logprob: -15.100217819213867
    9. 'in' → logprob: -15.975217819213867
    10. ' ' → logprob: -16.225217819213867

Token 2436: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.4568299651145935
    2. '.' → logprob: -1.2068300247192383
    3. '.readline' → logprob: -2.7068300247192383
    4. '(stdin' → logprob: -8.456830024719238
    5. '().' → logprob: -8.831830024719238
    6. '.stdout' → logprob: -9.081830024719238
    7. 'stdin' → logprob: -9.331830024719238
    8. '.readlines' → logprob: -9.456830024719238
    9. '.setdefault' → logprob: -9.706830024719238
    10. '.argv' → logprob: -9.956830024719238

Token 2437: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7982394695281982
    2. '():' → logprob: -1.4232394695281982
    3. '       ' → logprob: -2.2982394695281982
    4. '.readline' → logprob: -2.7982394695281982
    5. '():
' → logprob: -2.9232394695281982
    6. '.rstrip' → logprob: -3.6732394695281982
    7. ' =' → logprob: -4.173239707946777
    8. '   ' → logprob: -4.673239707946777
    9. ':
' → logprob: -4.798239707946777
    10. ' in' → logprob: -4.923239707946777

Token 2438: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014908606186509132
    2. '       ' → logprob: -4.264908790588379
    3. '```' → logprob: -8.264908790588379
    4. ' line' → logprob: -9.014908790588379
    5. '    
' → logprob: -9.264908790588379
    6. '    ' → logprob: -9.639908790588379
    7. '<|end|>' → logprob: -10.014908790588379
    8. '#' → logprob: -11.264908790588379
    9. '<|end|>' → logprob: -11.264908790588379
    10. '`' → logprob: -11.514908790588379

Token 2439: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5200399160385132
    2. ' s' → logprob: -1.2700399160385132
    3. 's' → logprob: -2.2700400352478027
    4. ' line' → logprob: -4.270040035247803
    5. 'line' (adapté à ' line') → logprob: -5.395040035247803
    6. '   ' → logprob: -6.020040035247803
    7. ' word' → logprob: -8.895039558410645
    8. '	line' → logprob: -9.520039558410645
    9. '```' → logprob: -9.770039558410645
    10. 'word' → logprob: -10.020039558410645

Token 2440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7319654822349548
    2. '=' → logprob: -1.2319655418395996
    3. '=line' → logprob: -1.4819655418395996
    4. '.strip' → logprob: -9.356965065002441
    5. '_strip' → logprob: -11.106965065002441
    6. '.rstrip' → logprob: -11.856965065002441
    7. 'strip' → logprob: -12.106965065002441
    8. '[line' → logprob: -12.731965065002441
    9. 'rstrip' → logprob: -12.731965065002441
    10. '=str' → logprob: -13.106965065002441

Token 2441: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.014165744185447693
    2. ' line' → logprob: -4.264165878295898
    3. '(line' → logprob: -14.264165878295898
    4. '#line' → logprob: -14.264165878295898
    5. '	line' → logprob: -14.514165878295898
    6. '=line' → logprob: -14.889165878295898
    7. '[line' → logprob: -17.0141658782959
    8. '   ' → logprob: -18.0141658782959
    9. '       ' → logprob: -18.2641658782959
    10. '_line' → logprob: -18.6391658782959

Token 2442: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.10044550150632858
    2. '.rstrip' → logprob: -2.350445508956909
    3. 'strip' → logprob: -8.975445747375488
    4. 'rstrip' → logprob: -9.475445747375488
    5. '.' → logprob: -10.725445747375488
    6. '().' → logprob: -12.100445747375488
    7. '(strip' → logprob: -12.600445747375488
    8. '[:-' → logprob: -13.100445747375488
    9. '_strip' → logprob: -13.600445747375488
    10. '.replace' → logprob: -14.600445747375488

Token 2443: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008775762282311916
    2. '()
' → logprob: -4.75877571105957
    3. '       ' → logprob: -8.88377571105957
    4. '()
' → logprob: -11.50877571105957
    5. '()\' → logprob: -12.63377571105957
    6. '():
' → logprob: -12.75877571105957
    7. '()`' → logprob: -13.50877571105957
    8. '();' → logprob: -13.88377571105957
    9. '()

' → logprob: -13.88377571105957
    10. '   ' → logprob: -14.00877571105957

Token 2444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006795499939471483
    2. '   ' → logprob: -7.3756794929504395
    3. '```' → logprob: -10.750679969787598
    4. 'if' → logprob: -11.125679969787598
    5. ' if' → logprob: -11.250679969787598
    6. '        
' → logprob: -14.000679969787598
    7. '           ' → logprob: -14.125679969787598
    8. '<|end|>' → logprob: -14.250679969787598
    9. 'tokens' → logprob: -14.750679969787598
    10. '`' → logprob: -15.875679969787598

Token 2445: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5774429440498352
    2. 'm' → logprob: -0.8274429440498352
    3. '   ' → logprob: -6.9524431228637695
    4. 's' → logprob: -8.20244312286377
    5. 'mor' → logprob: -9.07744312286377
    6. ' if' → logprob: -9.70244312286377
    7. '       ' → logprob: -10.32744312286377
    8. 'n' → logprob: -11.07744312286377
    9. 'for' → logprob: -11.95244312286377
    10. 'mo' → logprob: -12.07744312286377

Token 2446: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5762950778007507
    2. 'not' → logprob: -0.8262950778007507
    3. ' line' → logprob: -8.576294898986816
    4. 'line' → logprob: -8.701294898986816
    5. '(line' → logprob: -15.451294898986816
    6. '#line' → logprob: -15.701294898986816
    7. 'len' → logprob: -16.076295852661133
    8. '   ' → logprob: -17.076295852661133
    9. '(not' → logprob: -17.201295852661133
    10. '```' → logprob: -17.951295852661133

Token 2447: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03806134685873985
    2. ' ==' → logprob: -3.2880613803863525
    3. '()==' → logprob: -11.663061141967773
    4. '=='' → logprob: -12.163061141967773
    5. '==
' → logprob: -12.663061141967773
    6. '===' → logprob: -14.038061141967773
    7. '=="' → logprob: -14.038061141967773
    8. '=' → logprob: -14.288061141967773
    9. ')==' → logprob: -15.163061141967773
    10. '.startswith' → logprob: -15.163061141967773

Token 2448: ' '#' (ID: 11284)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0239800363779068
    2. ''' → logprob: -4.023980140686035
    3. '"' → logprob: -5.898980140686035
    4. '"":' → logprob: -6.523980140686035
    5. '""' → logprob: -6.773980140686035
    6. ''ex' → logprob: -7.773980140686035
    7. ''end' → logprob: -11.648980140686035
    8. ''#' → logprob: -11.898980140686035
    9. ' '':
' → logprob: -12.773980140686035
    10. '':' → logprob: -12.898980140686035

Token 2449: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.22822874784469604
    2. '':
' → logprob: -1.6032288074493408
    3. '__':
' → logprob: -6.853228569030762
    4. '':
' → logprob: -7.228228569030762
    5. ''' → logprob: -7.853228569030762
    6. '#' → logprob: -8.478228569030762
    7. ':' → logprob: -9.228228569030762
    8. ''):
' → logprob: -9.853228569030762
    9. 'import' → logprob: -10.228228569030762
    10. '_' → logprob: -10.353228569030762

Token 2450: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.435139898210764e-05
    2. '       ' → logprob: -9.500083923339844
    3. '		' → logprob: -12.500083923339844
    4. 'break' → logprob: -13.125083923339844
    5. '	       ' → logprob: -13.500083923339844
    6. '   ' → logprob: -14.250083923339844
    7. '               ' → logprob: -14.625083923339844
    8. ' break' → logprob: -14.875083923339844
    9. '          ' → logprob: -15.125083923339844
    10. '	break' → logprob: -15.375083923339844

Token 2451: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.004738057032227516
    2. '           ' → logprob: -5.504737854003906
    3. ' break' → logprob: -8.504737854003906
    4. '       ' → logprob: -8.504737854003906
    5. '	break' → logprob: -8.754737854003906
    6. 'return' → logprob: -9.379737854003906
    7. '		' → logprob: -12.254737854003906
    8. '_break' → logprob: -12.629737854003906
    9. '               ' → logprob: -13.379737854003906
    10. '	       ' → logprob: -13.504737854003906

Token 2452: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001824408071115613
    2. '        
' → logprob: -6.626824378967285
    3. '<|end|>' → logprob: -8.251824378967285
    4. '   ' → logprob: -9.001824378967285
    5. '
' → logprob: -9.751824378967285
    6. '```' → logprob: -10.626824378967285
    7. '    
' → logprob: -11.751824378967285
    8. '<|end|>' → logprob: -12.001824378967285
    9. '           ' → logprob: -12.501824378967285
    10. '	' → logprob: -12.876824378967285

Token 2453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008883526897989213
    2. '   ' → logprob: -7.125888347625732
    3. '        
' → logprob: -9.62588882446289
    4. '```' → logprob: -12.00088882446289
    5. '<|end|>' → logprob: -12.62588882446289
    6. '    
' → logprob: -12.75088882446289
    7. '
' → logprob: -13.75088882446289
    8. '           ' → logprob: -14.00088882446289
    9. '`' → logprob: -14.62588882446289
    10. '>' → logprob: -15.00088882446289

Token 2454: ' word' (ID: 2195)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03827729821205139
    2. '       ' → logprob: -3.9132773876190186
    3. '   ' → logprob: -4.1632771492004395
    4. ' mor' → logprob: -6.7882771492004395
    5. 'words' → logprob: -8.288277626037598
    6. 's' → logprob: -8.413277626037598
    7. 'mor' → logprob: -9.288277626037598
    8. 'v' → logprob: -9.788277626037598
    9. 'tokens' → logprob: -10.038277626037598
    10. 'n' → logprob: -10.288277626037598

Token 2455: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.035953421145677567
    2. '=' → logprob: -3.7859535217285156
    3. '_tokens' → logprob: -4.535953521728516
    4. 's' → logprob: -6.535953521728516
    5. '   ' → logprob: -8.535953521728516
    6. 'tokens' → logprob: -9.160953521728516
    7. '_' → logprob: -10.410953521728516
    8. '_m' → logprob: -10.660953521728516
    9. ',' → logprob: -10.910953521728516
    10. '_parts' → logprob: -10.910953521728516

Token 2456: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0052350712940096855
    2. ' line' → logprob: -5.255235195159912
    3. '   ' → logprob: -14.755234718322754
    4. 'split' → logprob: -15.005234718322754
    5. '	line' → logprob: -15.880234718322754
    6. '(line' → logprob: -16.25523567199707
    7. 'list' → logprob: -16.38023567199707
    8. '[line' → logprob: -16.50523567199707
    9. '#line' → logprob: -16.63023567199707
    10. 'parse' → logprob: -17.13023567199707

Token 2457: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01883161999285221
    2. '   ' → logprob: -4.768831729888916
    3. 'm' → logprob: -5.393831729888916
    4. '
' → logprob: -6.018831729888916
    5. '        
' → logprob: -6.518831729888916
    6. ' =' → logprob: -7.768831729888916
    7. '    
' → logprob: -8.518831253051758
    8. '_m' → logprob: -9.018831253051758
    9. '=' → logprob: -9.143831253051758
    10. ',m' → logprob: -9.143831253051758

Token 2458: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003947079181671143
    2. '   ' → logprob: -6.1289472579956055
    3. 'm' → logprob: -6.3789472579956055
    4. '```' → logprob: -10.378947257995605
    5. '        
' → logprob: -11.128947257995605
    6. ' mor' → logprob: -13.128947257995605
    7. '	m' → logprob: -13.128947257995605
    8. '_m' → logprob: -13.503947257995605
    9. ',' → logprob: -13.628947257995605
    10. 's' → logprob: -13.878947257995605

Token 2459: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00011427151912357658
    2. '   ' → logprob: -9.625114440917969
    3. 'mor' (adapté à ' mor') → logprob: -10.750114440917969
    4. '       ' → logprob: -11.250114440917969
    5. ' mor' → logprob: -11.750114440917969
    6. 'word' → logprob: -13.500114440917969
    7. 'print' → logprob: -13.750114440917969
    8. '```' → logprob: -14.125114440917969
    9. '	m' → logprob: -15.000114440917969
    10. 'if' → logprob: -15.125114440917969

Token 2460: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -4.961759259458631e-06
    2. '_as' → logprob: -13.375004768371582
    3. '	as' → logprob: -13.375004768371582
    4. '=' → logprob: -14.250004768371582
    5. 'a' → logprob: -14.250004768371582
    6. '   ' → logprob: -15.750004768371582
    7. ' as' → logprob: -15.875004768371582
    8. ' =' → logprob: -16.3750057220459
    9. '```' → logprob: -16.8750057220459
    10. 's' → logprob: -17.0000057220459

Token 2461: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014157623052597
    2. '=' → logprob: -1.701415777206421
    3. '=[]' → logprob: -14.576416015625
    4. '   ' → logprob: -14.701416015625
    5. '＝' → logprob: -15.201416015625
    6. ',' → logprob: -15.326416015625
    7. '_' → logprob: -15.576416015625
    8. '.append' → logprob: -15.826416015625
    9. ')' → logprob: -16.201416015625
    10. '=parse' → logprob: -16.201416015625

Token 2462: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.023428086191415787
    2. 'expand' → logprob: -3.773428201675415
    3. ' parse' → logprob: -8.773427963256836
    4. 'split' → logprob: -10.648427963256836
    5. ' expand' → logprob: -12.898427963256836
    6. '(parse' → logprob: -14.648427963256836
    7. 'exp' → logprob: -14.773427963256836
    8. '	parse' → logprob: -15.398427963256836
    9. 'expanded' → logprob: -16.773427963256836
    10. ' ' → logprob: -16.898427963256836

Token 2463: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -4.9186317482963204e-05
    2. '_' → logprob: -10.125049591064453
    3. 'm' → logprob: -11.750049591064453
    4. '(' → logprob: -14.500049591064453
    5. '(m' → logprob: -16.000049591064453
    6. 's' → logprob: -16.375049591064453
    7. '\' → logprob: -16.625049591064453
    8. '_s' → logprob: -16.625049591064453
    9. '_(' → logprob: -17.000049591064453
    10. '```' → logprob: -17.125049591064453

Token 2464: 'oras' (ID: 41056)
  Prédit: 'oras'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -0.0004224515287205577
    2. 'or' → logprob: -8.250422477722168
    3. 'word' → logprob: -9.625422477722168
    4. 'm' → logprob: -9.625422477722168
    5. 's' → logprob: -11.875422477722168
    6. 'ras' → logprob: -12.500422477722168
    7. 'import' → logprob: -13.125422477722168
    8. 'as' → logprob: -13.500422477722168
    9. '```' → logprob: -13.500422477722168
    10. '[' → logprob: -13.750422477722168

Token 2465: '(word' (ID: 35459)
  Prédit: '(word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -3.392824874026701e-05
    2. '(m' → logprob: -10.37503433227539
    3. '(line' → logprob: -13.50003433227539
    4. '[word' → logprob: -14.37503433227539
    5. '(words' → logprob: -14.75003433227539
    6. 'word' → logprob: -15.87503433227539
    7. 'm' → logprob: -16.00003433227539
    8. '(w' → logprob: -16.75003433227539
    9. '(' → logprob: -18.12503433227539
    10. '(s' → logprob: -18.37503433227539

Token 2466: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14300057291984558
    2. '       ' → logprob: -2.018000602722168
    3. ')
' → logprob: -8.643000602722168
    4. '<|end|>' → logprob: -10.018000602722168
    5. '()' → logprob: -10.768000602722168
    6. '[' → logprob: -10.893000602722168
    7. '[]' → logprob: -11.393000602722168
    8. '```' → logprob: -11.893000602722168
    9. '        
' → logprob: -12.268000602722168
    10. '[::-' → logprob: -12.393000602722168

Token 2467: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21732406318187714
    2. '   ' → logprob: -1.7173240184783936
    3. 'count' → logprob: -5.092324256896973
    4. 'v' → logprob: -5.842324256896973
    5. 'for' → logprob: -5.967324256896973
    6. '```' → logprob: -7.217324256896973
    7. 'rest' → logprob: -7.967324256896973
    8. 'result' → logprob: -8.092324256896973
    9. 'idx' → logprob: -8.092324256896973
    10. 'i' → logprob: -8.217324256896973

Token 2468: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7648775577545166
    2. 'length' → logprob: -2.2648775577545166
    3. 'accent' → logprob: -2.3898775577545166
    4. 'n' → logprob: -2.5148775577545166
    5. 'count' → logprob: -2.5148775577545166
    6. 'result' → logprob: -2.7648775577545166
    7. 'res' → logprob: -3.1398775577545166
    8. 'ans' → logprob: -3.3898775577545166
    9. 'vo' → logprob: -3.3898775577545166
    10. 'stress' → logprob: -3.6398775577545166

Token 2469: ' pre' (ID: 876)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.3881648778915405
    2. 'vo' → logprob: -1.7631648778915405
    3. 'for' → logprob: -1.7631648778915405
    4. 'result' → logprob: -3.01316499710083
    5. 'idx' → logprob: -3.13816499710083
    6. 'ans' → logprob: -3.63816499710083
    7. 'length' → logprob: -3.76316499710083
    8. 'cnt' → logprob: -3.76316499710083
    9. 'i' → logprob: -3.88816499710083
    10. 'res' → logprob: -4.13816499710083

Token 2470: 'compute' (ID: 54521)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7218637466430664
    2. 'vious' → logprob: -0.7218637466430664
    3. '       ' → logprob: -4.971863746643066
    4. 'fix' → logprob: -5.221863746643066
    5. '   ' → logprob: -5.596863746643066
    6. 'vo' → logprob: -5.721863746643066
    7. 'viously' → logprob: -5.846863746643066
    8. 'sum' → logprob: -6.346863746643066
    9. 'd' → logprob: -6.971863746643066
    10. 'ced' → logprob: -7.221863746643066

Token 2471: ' is' (ID: 382)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.2320481687784195
    2. 'v' → logprob: -2.357048273086548
    3. '       ' → logprob: -3.482048273086548
    4. 'prefix' → logprob: -3.732048273086548
    5. 'length' → logprob: -4.732048034667969
    6. 'sy' → logprob: -5.107048034667969
    7. ' vo' → logprob: -5.232048034667969
    8. 's' → logprob: -5.357048034667969
    9. 'is' → logprob: -5.357048034667969
    10. 'n' → logprob: -5.482048034667969

Token 2472: ' vo' (ID: 778)
  Prédit: '_vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_vo' → logprob: -0.011426794342696667
    2. '_s' → logprob: -4.76142692565918
    3. 'vo' → logprob: -6.01142692565918
    4. '_v' → logprob: -9.51142692565918
    5. 's' → logprob: -9.76142692565918
    6. '_m' → logprob: -9.88642692565918
    7. '   ' → logprob: -9.88642692565918
    8. '	vo' → logprob: -10.38642692565918
    9. '_' → logprob: -11.01142692565918
    10. '_void' → logprob: -11.13642692565918

Token 2473: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.007371288258582354
    2. 'iced' → logprob: -5.382371425628662
    3. 'icelo' → logprob: -6.882371425628662
    4. 'ice' → logprob: -7.132371425628662
    5. '```' → logprob: -8.632370948791504
    6. '_ic' → logprob: -9.007370948791504
    7. 'cel' → logprob: -9.132370948791504
    8. '_' → logprob: -9.882370948791504
    9. '``' → logprob: -10.007370948791504
    10. 'icemail' → logprob: -10.132370948791504

Token 2474: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.00046963783097453415
    2. 'el' → logprob: -7.75046968460083
    3. 'ele' → logprob: -10.875469207763672
    4. 'ed' → logprob: -11.375469207763672
    5. 'eles' → logprob: -12.750469207763672
    6. 'eled' → logprob: -12.875469207763672
    7. 'less' → logprob: -13.750469207763672
    8. 'e' → logprob: -13.875469207763672
    9. 'ess' → logprob: -15.125469207763672
    10. 'al' → logprob: -15.375469207763672

Token 2475: ' conson' (ID: 127767)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.47232311964035034
    2. ' =' → logprob: -1.5973231792449951
    3. '_flags' → logprob: -2.472323179244995
    4. 's' → logprob: -3.722323179244995
    5. '_' → logprob: -3.972323179244995
    6. '_m' → logprob: -4.097322940826416
    7. '_con' → logprob: -4.597322940826416
    8. '   ' → logprob: -4.722322940826416
    9. '_vo' → logprob: -6.097322940826416
    10. '_arr' → logprob: -6.597322940826416

Token 2476: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.009851943701505661
    2. 'ants' → logprob: -4.634851932525635
    3. 'ent' → logprob: -10.259852409362793
    4. '   ' → logprob: -10.759852409362793
    5. 'at' → logprob: -11.509852409362793
    6. 'm' → logprob: -12.259852409362793
    7. 't' → logprob: -12.259852409362793
    8. 'nt' → logprob: -13.009852409362793
    9. '_m' → logprob: -13.259852409362793
    10. '
' → logprob: -13.259852409362793

Token 2477: ' mor' (ID: 4658)
  Prédit: '_flags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_flags' → logprob: -0.5252768397331238
    2. '_list' → logprob: -1.1502768993377686
    3. ' =' → logprob: -2.9002768993377686
    4. 's' → logprob: -3.9002768993377686
    5. 'flags' → logprob: -4.7752766609191895
    6. '_m' → logprob: -6.5252766609191895
    7. '_mask' → logprob: -6.5252766609191895
    8. '_array' → logprob: -6.6502766609191895
    9. 'list' → logprob: -7.2752766609191895
    10. '_arr' → logprob: -7.6502766609191895

Token 2478: 'as' (ID: 288)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20508912205696106
    2. 'ora' → logprob: -2.0800890922546387
    3. 'as' → logprob: -3.5800890922546387
    4. 'ent' → logprob: -4.955089092254639
    5. 'ara' → logprob: -5.205089092254639
    6. 'ra' → logprob: -5.205089092254639
    7. 'ras' → logprob: -5.705089092254639
    8. 'ents' → logprob: -6.205089092254639
    9. 'oras' → logprob: -6.205089092254639
    10. 'ant' → logprob: -6.330089092254639

Token 2479: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003872974484693259
    2. 'vo' → logprob: -8.250387191772461
    3. 'is' → logprob: -9.125387191772461
    4. 'v' → logprob: -12.500387191772461
    5. ' vo' → logprob: -12.625387191772461
    6. '   ' → logprob: -12.875387191772461
    7. '	vo' → logprob: -13.750387191772461
    8. 'flags' → logprob: -14.125387191772461
    9. '      ' → logprob: -14.500387191772461
    10. 'vc' → logprob: -14.625387191772461

Token 2480: ' easier' (ID: 11087)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.251075029373169
    2. 'vo' → logprob: -1.626075029373169
    3. '[i' → logprob: -1.876075029373169
    4. 'i' → logprob: -2.126075029373169
    5. 'len' → logprob: -2.376075029373169
    6. '_vo' → logprob: -3.126075029373169
    7. '[' → logprob: -3.501075029373169
    8. 'all' → logprob: -3.501075029373169
    9. '[len' → logprob: -4.37607479095459
    10. 'v' → logprob: -4.50107479095459

Token 2481: ' reference' (ID: 9682)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.04501248151063919
    2. 'is' → logprob: -3.9200124740600586
    3. 'flags' → logprob: -4.545012474060059
    4. 'v' → logprob: -5.295012474060059
    5. '   ' → logprob: -6.170012474060059
    6. ' vo' → logprob: -6.295012474060059
    7. '       ' → logprob: -6.545012474060059
    8. 'voice' → logprob: -7.670012474060059
    9. 'check' → logprob: -8.170012474060059
    10. 'vc' → logprob: -8.170012474060059

Token 2482: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018494461255613714
    2. 'is' → logprob: -8.875185012817383
    3. 'v' → logprob: -10.750185012817383
    4. 'vo' → logprob: -11.125185012817383
    5. 'flags' → logprob: -14.000185012817383
    6. '   ' → logprob: -14.125185012817383
    7. ' is' → logprob: -14.125185012817383
    8. ' vo' → logprob: -14.375185012817383
    9. 'vc' → logprob: -14.375185012817383
    10. '```' → logprob: -14.375185012817383

Token 2483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00073197390884161
    2. 'is' → logprob: -7.375731945037842
    3. 'vo' → logprob: -10.625732421875
    4. 'flags' → logprob: -10.625732421875
    5. 'v' → logprob: -11.000732421875
    6. '```' → logprob: -11.625732421875
    7. ' is' → logprob: -12.125732421875
    8. '`' → logprob: -12.625732421875
    9. '   ' → logprob: -13.000732421875
    10. ' vo' → logprob: -13.000732421875

Token 2484: ' #' (ID: 1069)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.3324161469936371
    2. '       ' → logprob: -1.7074161767959595
    3. 'is' → logprob: -2.33241605758667
    4. ' vo' → logprob: -6.33241605758667
    5. 'v' → logprob: -6.70741605758667
    6. '   ' → logprob: -7.95741605758667
    7. ' is' → logprob: -8.082416534423828
    8. 'flags' → logprob: -8.332416534423828
    9. 'voc' → logprob: -9.207416534423828
    10. '	vo' → logprob: -9.332416534423828

Token 2485: ' also' (ID: 1217)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.18772098422050476
    2. 'is' → logprob: -2.062721014022827
    3. '       ' → logprob: -3.187721014022827
    4. 'v' → logprob: -6.312720775604248
    5. 'flags' → logprob: -8.312721252441406
    6. '   ' → logprob: -8.437721252441406
    7. 'vc' → logprob: -8.812721252441406
    8. 'voice' → logprob: -9.437721252441406
    9. 'voc' → logprob: -9.437721252441406
    10. ' vo' → logprob: -10.312721252441406

Token 2486: ' mark' (ID: 1983)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.15548917651176453
    2. 'is' → logprob: -2.030489206314087
    3. '       ' → logprob: -5.530488967895508
    4. '#' → logprob: -6.155488967895508
    5. 'v' → logprob: -6.280488967895508
    6. 'for' → logprob: -6.905488967895508
    7. 'len' → logprob: -7.155488967895508
    8. 'voice' → logprob: -8.280488967895508
    9. 'flags' → logprob: -8.280488967895508
    10. 'n' → logprob: -8.405488967895508

Token 2487: ' vowel' (ID: 165542)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.028387730941176414
    2. '       ' → logprob: -4.403387546539307
    3. ' vo' → logprob: -4.903387546539307
    4. 'is' → logprob: -5.153387546539307
    5. 's' → logprob: -6.653387546539307
    6. ' voiced' → logprob: -8.028388023376465
    7. 'voice' → logprob: -8.653388023376465
    8. 'for' → logprob: -9.153388023376465
    9. '_vo' → logprob: -9.403388023376465
    10. 'n' → logprob: -9.528388023376465

Token 2488: ' of' (ID: 328)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.3508901596069336
    2. 'is' → logprob: -1.8508901596069336
    3. '       ' → logprob: -2.2258901596069336
    4. 'flags' → logprob: -3.7258901596069336
    5. 'v' → logprob: -6.100890159606934
    6. ' vo' → logprob: -6.600890159606934
    7. '   ' → logprob: -7.475890159606934
    8. 'status' → logprob: -7.725890159606934
    9. ' is' → logprob: -8.100890159606934
    10. 'voice' → logprob: -8.225890159606934

Token 2489: ' each' (ID: 2454)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05508922412991524
    2. 'each' → logprob: -3.055089235305786
    3. 'mor' → logprob: -5.430088996887207
    4. ' mor' → logprob: -7.305088996887207
    5. ' each' → logprob: -7.680088996887207
    6. ')m' → logprob: -8.680088996887207
    7. 'the' → logprob: -9.055088996887207
    8. '   ' → logprob: -9.180088996887207
    9. ')' → logprob: -9.555088996887207
    10. ' mora' → logprob: -9.680088996887207

Token 2490: ' mora' (ID: 47294)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7315177321434021
    2. 'vo' → logprob: -0.8565177321434021
    3. '   ' → logprob: -3.606517791748047
    4. '       ' → logprob: -3.731517791748047
    5. 'is' → logprob: -4.481517791748047
    6. 'm' → logprob: -4.856517791748047
    7. 'voc' → logprob: -5.106517791748047
    8. 'for' → logprob: -5.231517791748047
    9. 'voices' → logprob: -5.856517791748047
    10. ' vowels' → logprob: -6.731517791748047

Token 2491: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017632400849834085
    2. 'v' → logprob: -7.001763343811035
    3. 'vo' → logprob: -7.376763343811035
    4. 'is' → logprob: -9.376763343811035
    5. ' vo' → logprob: -10.626763343811035
    6. '   ' → logprob: -10.626763343811035
    7. 'n' → logprob: -11.376763343811035
    8. 'voice' → logprob: -11.376763343811035
    9. ' is' → logprob: -12.001763343811035
    10. 'm' → logprob: -12.001763343811035

Token 2492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00861729308962822
    2. 'v' → logprob: -5.258617401123047
    3. 'vo' → logprob: -6.133617401123047
    4. 'is' → logprob: -7.758617401123047
    5. 'flags' → logprob: -8.133617401123047
    6. '```' → logprob: -8.508617401123047
    7. ' vo' → logprob: -9.508617401123047
    8. ' is' → logprob: -10.383617401123047
    9. 'voice' → logprob: -10.758617401123047
    10. '   ' → logprob: -11.258617401123047

Token 2493: ' vowels' (ID: 176245)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7056194543838501
    2. 'vo' → logprob: -1.33061945438385
    3. 'flags' → logprob: -2.7056193351745605
    4. 'v' → logprob: -2.7056193351745605
    5. 'is' → logprob: -2.9556193351745605
    6. ' vo' → logprob: -3.4556193351745605
    7. ' is' → logprob: -5.0806193351745605
    8. 'voc' → logprob: -5.7056193351745605
    9. 'vc' → logprob: -5.8306193351745605
    10. 'voice' → logprob: -5.8306193351745605

Token 2494: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3647802472114563
    2. ' =' → logprob: -1.2397801876068115
    3. '_' → logprob: -4.364780426025391
    4. '_in' → logprob: -6.489780426025391
    5. 's' → logprob: -7.614780426025391
    6. '=[]' → logprob: -7.614780426025391
    7. '   ' → logprob: -8.48978042602539
    8. '_list' → logprob: -8.73978042602539
    9. ')' → logprob: -9.48978042602539
    10. '_m' → logprob: -9.73978042602539

Token 2495: ' [' (ID: 723)
  Prédit: '[m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[m' → logprob: -0.21897239983081818
    2. '[' → logprob: -1.9689724445343018
    3. '[v' → logprob: -3.4689724445343018
    4. '[]' → logprob: -4.718972206115723
    5. '[len' → logprob: -5.093972206115723
    6. '[i' → logprob: -5.593972206115723
    7. '[get' → logprob: -5.718972206115723
    8. '['' → logprob: -6.093972206115723
    9. '[list' → logprob: -6.968972206115723
    10. ' [' → logprob: -7.968972206115723

Token 2496: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.00028016636497341096
    2. ' get' → logprob: -8.750280380249023
    3. '''' → logprob: -9.125280380249023
    4. '(get' → logprob: -11.625280380249023
    5. 'm' → logprob: -13.250280380249023
    6. 'v' → logprob: -14.125280380249023
    7. 'None' → logprob: -14.625280380249023
    8. '""' → logprob: -15.250280380249023
    9. '	get' → logprob: -15.250280380249023
    10. ' ''' → logprob: -16.250280380249023

Token 2497: '_v' (ID: 5390)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.01558518409729
    2. '_m' → logprob: -1.14058518409729
    3. '_v' → logprob: -1.64058518409729
    4. 'v' → logprob: -2.14058518409729
    5. '(m' → logprob: -5.265584945678711
    6. '_' → logprob: -8.390584945678711
    7. ')' → logprob: -8.765584945678711
    8. '_c' → logprob: -9.140584945678711
    9. ' vowel' → logprob: -9.140584945678711
    10. ' mora' → logprob: -9.265584945678711

Token 2498: 'owel' (ID: 27097)
  Prédit: 'owel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owel' → logprob: -0.1575404852628708
    2. 'm' → logprob: -2.2825405597686768
    3. 'v' → logprob: -3.2825405597686768
    4. 'owe' → logprob: -6.282540321350098
    5. '_m' → logprob: -6.532540321350098
    6. 'ovel' → logprob: -7.407540321350098
    7. '(m' → logprob: -7.532540321350098
    8. 'owels' → logprob: -7.782540321350098
    9. 'ow' → logprob: -8.157540321350098
    10. 'o' → logprob: -8.282540321350098

Token 2499: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -6.153795766294934e-06
    2. '(' → logprob: -12.375005722045898
    3. 'm' → logprob: -13.875005722045898
    4. ' (' → logprob: -15.125005722045898
    5. '(v' → logprob: -15.500005722045898
    6. '(x' → logprob: -16.1250057220459
    7. '(s' → logprob: -16.1250057220459
    8. ']' → logprob: -16.7500057220459
    9. '(i' → logprob: -16.7500057220459
    10. '(c' → logprob: -17.6250057220459

Token 2500: ')' (ID: 8)
  Prédit: 'ora'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -0.6367087364196777
    2. ')' → logprob: -0.7617087364196777
    3. 'a' → logprob: -7.136708736419678
    4. ')m' → logprob: -7.136708736419678
    5. '(m' → logprob: -7.636708736419678
    6. ')]' → logprob: -7.761708736419678
    7. 'or' → logprob: -8.261709213256836
    8. ')
' → logprob: -8.261709213256836
    9. ')a' → logprob: -8.636709213256836
    10. '(a' → logprob: -9.261709213256836

Token 2501: ' for' (ID: 395)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.5776634216308594
    2. ' for' → logprob: -1.0776634216308594
    3. 'for' → logprob: -2.3276634216308594
    4. '       ' → logprob: -7.577663421630859
    5. '   ' → logprob: -8.95266342163086
    6. ')' → logprob: -9.32766342163086
    7. '           ' → logprob: -9.57766342163086
    8. '	for' → logprob: -11.07766342163086
    9. '               ' → logprob: -11.70266342163086
    10. ']' → logprob: -11.95266342163086

Token 2502: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.7146746763028204e-05
    2. ' m' → logprob: -10.50003719329834
    3. '_' → logprob: -12.87503719329834
    4. 'mor' → logprob: -13.00003719329834
    5. '_m' → logprob: -13.12503719329834
    6. ' mora' → logprob: -14.00003719329834
    7. '	m' → logprob: -14.37503719329834
    8. 'mo' → logprob: -15.50003719329834
    9. '(m' → logprob: -15.68753719329834
    10. 'v' → logprob: -16.062536239624023

Token 2503: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03506959229707718
    2. 'in' → logprob: -3.410069704055786
    3. 'm' → logprob: -6.660069465637207
    4. ' m' → logprob: -9.410069465637207
    5. ' mora' → logprob: -10.660069465637207
    6. ' ' → logprob: -11.410069465637207
    7. ')' → logprob: -12.160069465637207
    8. ' ina' → logprob: -12.785069465637207
    9. ' mor' → logprob: -13.035069465637207
    10. 'or' → logprob: -13.285069465637207

Token 2504: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0005252729752101004
    2. 'mor' → logprob: -7.62552547454834
    3. '   ' → logprob: -11.00052547454834
    4. 'maras' → logprob: -12.12552547454834
    5. 'import' → logprob: -12.62552547454834
    6. ' mor' → logprob: -12.75052547454834
    7. 'meras' → logprob: -13.75052547454834
    8. '  ' → logprob: -14.00052547454834
    9. '
' → logprob: -14.12552547454834
    10. ' ' → logprob: -14.25052547454834

Token 2505: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.00021045419271104038
    2. 'oras' → logprob: -8.500210762023926
    3. 'm' → logprob: -12.250210762023926
    4. 'ras' → logprob: -14.000210762023926
    5. 'or' → logprob: -14.625210762023926
    6. '[' → logprob: -15.375210762023926
    7. 'aras' → logprob: -15.750210762023926
    8. 'a' → logprob: -16.00020980834961
    9. 'ors' → logprob: -16.25020980834961
    10. 's' → logprob: -16.50020980834961

Token 2506: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.050648778676986694
    2. '       ' → logprob: -3.0506486892700195
    3. ' ]' → logprob: -6.4256486892700195
    4. ']
' → logprob: -7.8006486892700195
    5. '()]' → logprob: -11.42564868927002
    6. '   ' → logprob: -12.05064868927002
    7. ']
' → logprob: -12.80064868927002
    8. ')]' → logprob: -12.92564868927002
    9. ' ]
' → logprob: -13.30064868927002
    10. ']

' → logprob: -14.05064868927002

Token 2507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034261439577676356
    2. '        
' → logprob: -8.62534236907959
    3. '#' → logprob: -10.25034236907959
    4. ',' → logprob: -10.50034236907959
    5. '<|end|>' → logprob: -10.50034236907959
    6. '
' → logprob: -11.37534236907959
    7. 's' → logprob: -12.00034236907959
    8. '   ' → logprob: -12.12534236907959
    9. 'vo' → logprob: -12.25034236907959
    10. '```' → logprob: -12.62534236907959

Token 2508: ' vo' (ID: 778)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' (adapté à ' vo') → logprob: -0.006277148146182299
    2. 'is' → logprob: -6.006277084350586
    3. 'voice' → logprob: -7.131277084350586
    4. 'v' → logprob: -7.756277084350586
    5. 'voices' → logprob: -7.756277084350586
    6. 'length' → logprob: -8.006277084350586
    7. 'for' → logprob: -8.131277084350586
    8. 'con' → logprob: -8.381277084350586
    9. 'len' → logprob: -9.006277084350586
    10. 'vc' → logprob: -9.006277084350586

Token 2509: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -8.53050296427682e-05
    2. 'cel' → logprob: -10.87508487701416
    3. 'icelo' → logprob: -11.12508487701416
    4. 'ice' → logprob: -11.25008487701416
    5. '```' → logprob: -12.25008487701416
    6. '``' → logprob: -12.37508487701416
    7. '#' → logprob: -12.50008487701416
    8. '_ic' → logprob: -12.75008487701416
    9. 'iced' → logprob: -12.87508487701416
    10. '[' → logprob: -13.25008487701416

Token 2510: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -2.2246291337069124e-05
    2. 'el' → logprob: -11.625021934509277
    3. 'ele' → logprob: -11.625021934509277
    4. 'less' → logprob: -12.500021934509277
    5. 'e' → logprob: -15.500021934509277
    6. 'eles' → logprob: -15.625021934509277
    7. 'ed' → logprob: -17.000022888183594
    8. 'ess' → logprob: -17.750022888183594
    9. 'ueless' → logprob: -17.875022888183594
    10. '_less' → logprob: -18.000022888183594

Token 2511: ' =' (ID: 314)
  Prédit: '_flags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flags' → logprob: -0.2481863796710968
    2. ' =' → logprob: -1.9981863498687744
    3. 's' → logprob: -2.9981863498687744
    4. '_m' → logprob: -3.7481863498687744
    5. '_con' → logprob: -4.7481865882873535
    6. '_mask' → logprob: -7.7481865882873535
    7. '_' → logprob: -7.9981865882873535
    8. '_list' → logprob: -8.248186111450195
    9. '_map' → logprob: -8.873186111450195
    10. '_status' → logprob: -9.123186111450195

Token 2512: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008023609989322722
    2. ' [' → logprob: -7.750802516937256
    3. '[i' → logprob: -8.750802040100098
    4. '[list' → logprob: -8.750802040100098
    5. '[len' → logprob: -10.000802040100098
    6. '[item' → logprob: -13.250802040100098
    7. '   ' → logprob: -13.500802040100098
    8. '[class' → logprob: -13.875802040100098
    9. '[ind' → logprob: -14.250802040100098
    10. '[index' → logprob: -14.500802040100098

Token 2513: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -6.704273118884885e-07
    2. ' is' → logprob: -14.875000953674316
    3. '(is' → logprob: -15.500000953674316
    4. 'True' → logprob: -17.625
    5. 'False' → logprob: -18.0
    6. '"is' → logprob: -19.125
    7. '1' → logprob: -19.375
    8. 'int' → logprob: -19.5
    9. '[' → logprob: -20.75
    10. '	is' → logprob: -20.875

Token 2514: '_vo' (ID: 145825)
  Prédit: '_vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vo' → logprob: -0.0008165352046489716
    2. 'vo' → logprob: -7.125816345214844
    3. '(vo' → logprob: -11.625816345214844
    4. '_m' → logprob: -13.625816345214844
    5. '	vo' → logprob: -14.625816345214844
    6. 'm' → logprob: -15.000816345214844
    7. '_void' → logprob: -15.500816345214844
    8. '_v' → logprob: -15.500816345214844
    9. 'void' → logprob: -15.750816345214844
    10. 's' → logprob: -15.875816345214844

Token 2515: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.00021784115233458579
    2. 'eless' → logprob: -8.75021743774414
    3. 'cel' → logprob: -10.62521743774414
    4. '```' → logprob: -11.75021743774414
    5. 'iced' → logprob: -12.37521743774414
    6. 'icelo' → logprob: -12.37521743774414
    7. '``' → logprob: -13.12521743774414
    8. 'ice' → logprob: -13.12521743774414
    9. 'veless' → logprob: -13.25021743774414
    10. '{' → logprob: -13.25021743774414

Token 2516: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -4.5491004129871726e-05
    2. 'el' → logprob: -10.250045776367188
    3. 'less' → logprob: -12.000045776367188
    4. 'ele' → logprob: -13.000045776367188
    5. 'heless' → logprob: -15.125045776367188
    6. 'veless' → logprob: -15.125045776367188
    7. 'o' → logprob: -15.375045776367188
    8. 'eles' → logprob: -15.750045776367188
    9. 'ueless' → logprob: -16.000045776367188
    10. 'ol' → logprob: -16.375045776367188

Token 2517: '_m' (ID: 1285)
  Prédit: '_con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.18440578877925873
    2. '_m' → logprob: -1.80940580368042
    3. '_' → logprob: -5.55940580368042
    4. '(m' → logprob: -7.55940580368042
    5. 'con' → logprob: -9.684405326843262
    6. '_char' → logprob: -10.434405326843262
    7. '_c' → logprob: -10.434405326843262
    8. '\' → logprob: -10.934405326843262
    9. ')_' → logprob: -10.934405326843262
    10. 'm' → logprob: -11.184405326843262

Token 2518: 'ora' (ID: 2505)
  Prédit: 'ora'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -0.00016754455282352865
    2. 'm' → logprob: -9.375167846679688
    3. '[' → logprob: -10.125167846679688
    4. 'con' → logprob: -11.000167846679688
    5. 'oras' → logprob: -12.625167846679688
    6. '(' → logprob: -12.750167846679688
    7. '(m' → logprob: -13.000167846679688
    8. '_m' → logprob: -13.000167846679688
    9. '[m' → logprob: -13.500167846679688
    10. '_con' → logprob: -13.500167846679688

Token 2519: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.4987974029500037e-05
    2. '(' → logprob: -10.625024795532227
    3. ' (' → logprob: -14.750024795532227
    4. '(s' → logprob: -16.625024795532227
    5. '(i' → logprob: -17.125024795532227
    6. '(x' → logprob: -17.125024795532227
    7. '((' → logprob: -17.375024795532227
    8. 'm' → logprob: -17.625024795532227
    9. '(n' → logprob: -17.750024795532227
    10. ']' → logprob: -17.875024795532227

Token 2520: ')' (ID: 8)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.2829241156578064
    2. ')' → logprob: -1.5329241752624512
    3. 'ora' → logprob: -4.532924175262451
    4. 'ra' → logprob: -5.157924175262451
    5. 'or' → logprob: -5.657924175262451
    6. '(' → logprob: -5.657924175262451
    7. '(a' → logprob: -6.532924175262451
    8. '(r' → logprob: -6.782924175262451
    9. 'a' → logprob: -7.157924175262451
    10. '   ' → logprob: -7.282924175262451

Token 2521: ' for' (ID: 395)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.010604655370116234
    2. ' for' → logprob: -4.6356048583984375
    3. 'for' → logprob: -7.6356048583984375
    4. '(i' → logprob: -8.135604858398438
    5. '[m' → logprob: -10.760604858398438
    6. ' (' → logprob: -10.885604858398438
    7. ']' → logprob: -11.760604858398438
    8. '   ' → logprob: -12.135604858398438
    9. '[i' → logprob: -12.385604858398438
    10. '       ' → logprob: -12.510604858398438

Token 2522: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0010353106772527099
    2. ' m' → logprob: -6.876035213470459
    3. '	m' → logprob: -14.126035690307617
    4. '_' → logprob: -14.251035690307617
    5. '_m' → logprob: -15.001035690307617
    6. ' ' → logprob: -15.751035690307617
    7. '
' → logprob: -16.188535690307617
    8. 'mor' → logprob: -16.251035690307617
    9. '   ' → logprob: -16.376035690307617
    10. 'mo' → logprob: -16.813535690307617

Token 2523: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5234406590461731
    2. 'in' → logprob: -0.8984406590461731
    3. 'm' → logprob: -8.14844036102295
    4. ' m' → logprob: -11.39844036102295
    5. '(m' → logprob: -12.39844036102295
    6. ' ' → logprob: -12.89844036102295
    7. ')' → logprob: -12.89844036102295
    8. 'or' → logprob: -13.39844036102295
    9. ',' → logprob: -13.52344036102295
    10. 'oras' → logprob: -14.27344036102295

Token 2524: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002888564020395279
    2. ' mor' → logprob: -6.3778886795043945
    3. 'mor' → logprob: -6.7528886795043945
    4. '   ' → logprob: -12.627888679504395
    5. 'maras' → logprob: -12.877888679504395
    6. 'range' → logprob: -12.877888679504395
    7. ' ' → logprob: -13.127888679504395
    8. 'v' → logprob: -13.377888679504395
    9. 'mo' → logprob: -13.877888679504395
    10. '[' → logprob: -14.377888679504395

Token 2525: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.0009166974923573434
    2. 'oras' → logprob: -7.125916481018066
    3. 'ras' → logprob: -9.875916481018066
    4. 'm' → logprob: -10.375916481018066
    5. '[' → logprob: -11.750916481018066
    6. 'or' → logprob: -12.375916481018066
    7. 's' → logprob: -12.625916481018066
    8. 'vas' → logprob: -12.625916481018066
    9. 'aras' → logprob: -13.500916481018066
    10. '
' → logprob: -13.500916481018066

Token 2526: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3148918151855469
    2. '       ' → logprob: -1.3148918151855469
    3. ' ]' → logprob: -6.689891815185547
    4. ']
' → logprob: -8.564891815185547
    5. ')]' → logprob: -9.814891815185547
    6. '()]' → logprob: -10.064891815185547
    7. ')' → logprob: -10.314891815185547
    8. ',' → logprob: -10.689891815185547
    9. '           ' → logprob: -11.439891815185547
    10. '   ' → logprob: -12.689891815185547

Token 2527: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004282851587049663
    2. 'for' → logprob: -9.000428199768066
    3. '        
' → logprob: -9.375428199768066
    4. '   ' → logprob: -9.625428199768066
    5. '
' → logprob: -10.125428199768066
    6. ' for' → logprob: -10.250428199768066
    7. '```' → logprob: -10.250428199768066
    8. 'count' → logprob: -11.875428199768066
    9. '           ' → logprob: -12.125428199768066
    10. '`' → logprob: -12.375428199768066

Token 2528: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9328635334968567
    2. 'n' → logprob: -1.557863473892212
    3. 'length' → logprob: -2.682863473892212
    4. 'count' → logprob: -2.807863473892212
    5. 'idx' → logprob: -3.182863473892212
    6. 'j' → logprob: -3.432863473892212
    7. 'i' → logprob: -3.682863473892212
    8. 'cnt' → logprob: -3.807863473892212
    9. '       ' → logprob: -4.057863712310791
    10. 'len' → logprob: -4.182863712310791

Token 2529: ' we' (ID: 581)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7228319644927979
    2. 'length' → logprob: -1.9728319644927979
    3. 'n' → logprob: -2.097831964492798
    4. 'for' → logprob: -2.222831964492798
    5. 'acc' → logprob: -2.222831964492798
    6. 'accent' → logprob: -2.847831964492798
    7. 'stress' → logprob: -3.472831964492798
    8. 'len' → logprob: -3.847831964492798
    9. 'r' → logprob: -3.847831964492798
    10. 'idx' → logprob: -3.972831964492798

Token 2530: ' detect' (ID: 11839)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009377425536513329
    2. '   ' → logprob: -5.384377479553223
    3. 'len' → logprob: -6.634377479553223
    4. 'for' → logprob: -7.009377479553223
    5. ' for' → logprob: -7.634377479553223
    6. 'count' → logprob: -8.009377479553223
    7. '#' → logprob: -8.134377479553223
    8. 'continue' → logprob: -8.259377479553223
    9. ' continue' → logprob: -8.759377479553223
    10. 'n' → logprob: -9.009377479553223

Token 2531: ' long' (ID: 1701)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.48475438356399536
    2. '   ' → logprob: -1.6097543239593506
    3. 'for' → logprob: -2.1097543239593506
    4. 's' → logprob: -3.8597543239593506
    5. '       ' → logprob: -4.35975456237793
    6. 'n' → logprob: -5.23475456237793
    7. 'idx' → logprob: -5.23475456237793
    8. '#' → logprob: -5.35975456237793
    9. 'len' → logprob: -5.73475456237793
    10. 'prev' → logprob: -5.73475456237793

Token 2532: ' vowels' (ID: 176245)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1813514232635498
    2. 'v' → logprob: -2.18135142326355
    3. '_v' → logprob: -3.18135142326355
    4. '   ' → logprob: -6.306351661682129
    5. '_
' → logprob: -6.431351661682129
    6. ' _' → logprob: -6.556351661682129
    7. 'i' → logprob: -6.681351661682129
    8. 'if' → logprob: -7.181351661682129
    9. ' ' → logprob: -7.181351661682129
    10. '-' → logprob: -7.431351661682129

Token 2533: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02172086387872696
    2. 'for' → logprob: -4.396720886230469
    3. ' for' → logprob: -5.146720886230469
    4. ',' → logprob: -6.771720886230469
    5. '   ' → logprob: -7.396720886230469
    6. ' =' → logprob: -8.396720886230469
    7. ' i' → logprob: -8.521720886230469
    8. 'i' → logprob: -8.771720886230469
    9. ' and' → logprob: -8.771720886230469
    10. ':' → logprob: -8.896720886230469

Token 2534: ' checking' (ID: 19141)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30240240693092346
    2. 'i' → logprob: -1.552402377128601
    3. ' for' → logprob: -3.9274024963378906
    4. 'len' → logprob: -4.052402496337891
    5. 'prev' → logprob: -5.302402496337891
    6. '       ' → logprob: -5.927402496337891
    7. '#' → logprob: -6.552402496337891
    8. 'v' → logprob: -7.177402496337891
    9. '   ' → logprob: -7.427402496337891
    10. ' i' → logprob: -7.677402496337891

Token 2535: ' pairs' (ID: 24702)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7432937622070312
    2. 'for' → logprob: -0.7432937622070312
    3. 'len' → logprob: -3.8682937622070312
    4. 'prev' → logprob: -4.493293762207031
    5. ' for' → logprob: -5.118293762207031
    6. '       ' → logprob: -5.868293762207031
    7. '   ' → logprob: -5.868293762207031
    8. 'if' → logprob: -6.493293762207031
    9. 'previous' → logprob: -6.743293762207031
    10. 'idx' → logprob: -6.993293762207031

Token 2536: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14719147980213165
    2. 'for' → logprob: -2.2721915245056152
    3. ' for' → logprob: -3.3971915245056152
    4. '   ' → logprob: -9.522191047668457
    5. ' i' → logprob: -9.772191047668457
    6. ',' → logprob: -9.772191047668457
    7. 'i' → logprob: -10.522191047668457
    8. '           ' → logprob: -10.897191047668457
    9. '```' → logprob: -10.897191047668457
    10. ' of' → logprob: -11.272191047668457

Token 2537: ' mor' (ID: 4658)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0611502081155777
    2. 'i' → logprob: -3.561150312423706
    3. 'm' → logprob: -4.061150074005127
    4. 'v' → logprob: -5.686150074005127
    5. 'enumer' → logprob: -5.811150074005127
    6. 'for' → logprob: -6.311150074005127
    7. 'adj' → logprob: -6.936150074005127
    8. 'mor' → logprob: -7.061150074005127
    9. 'indices' → logprob: -7.311150074005127
    10. 'vo' → logprob: -7.311150074005127

Token 2538: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.020900124683976173
    2. 'for' → logprob: -4.395900249481201
    3. '   ' → logprob: -5.395900249481201
    4. '       ' → logprob: -5.770900249481201
    5. '           ' → logprob: -8.520899772644043
    6. 'ras' → logprob: -9.020899772644043
    7. 'if' → logprob: -9.270899772644043
    8. 'a' → logprob: -9.395899772644043
    9. 's' → logprob: -10.145899772644043
    10. 'from' → logprob: -10.645899772644043

Token 2539: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011812460608780384
    2. 'for' → logprob: -4.761812686920166
    3. ' for' → logprob: -5.761812686920166
    4. ',' → logprob: -11.011812210083008
    5. '   ' → logprob: -11.511812210083008
    6. '```' → logprob: -12.136812210083008
    7. '
' → logprob: -12.386812210083008
    8. '           ' → logprob: -12.636812210083008
    9. '#' → logprob: -13.386812210083008
    10. ':' → logprob: -14.011812210083008

Token 2540: 'two' (ID: 38397)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.752943217754364
    2. 'for' → logprob: -0.752943217754364
    3. ' for' → logprob: -4.00294303894043
    4. '       ' → logprob: -4.00294303894043
    5. 'if' → logprob: -5.37794303894043
    6. 'while' → logprob: -5.87794303894043
    7. 'range' → logprob: -6.00294303894043
    8. '#' → logprob: -6.12794303894043
    9. ' i' → logprob: -6.25294303894043
    10. '(i' → logprob: -6.37794303894043

Token 2541: ' vowels' (ID: 176245)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9384976625442505
    2. 'for' → logprob: -1.1884976625442505
    3. 'if' → logprob: -1.9384976625442505
    4. 'tokens' → logprob: -2.688497543334961
    5. 'm' → logprob: -3.938497543334961
    6. 'v' → logprob: -4.063497543334961
    7. ' for' → logprob: -4.188497543334961
    8. '#' → logprob: -5.063497543334961
    9. 'spaces' → logprob: -5.438497543334961
    10. ' i' → logprob: -5.438497543334961

Token 2542: ' repeated' (ID: 24161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.006980061531067
    2. 'and' → logprob: -1.256980061531067
    3. ' and' → logprob: -2.5069799423217773
    4. 'for' → logprob: -2.7569799423217773
    5. '       ' → logprob: -3.0069799423217773
    6. ',' → logprob: -3.1319799423217773
    7. '[i' → logprob: -3.1319799423217773
    8. 'that' → logprob: -4.381979942321777
    9. 'if' → logprob: -4.631979942321777
    10. '
' → logprob: -5.131979942321777

Token 2543: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0326344966888428
    2. ')' → logprob: -1.6576344966888428
    3. 'for' → logprob: -1.7826344966888428
    4. 'and' → logprob: -1.9076344966888428
    5. ' and' → logprob: -3.2826344966888428
    6. ',' → logprob: -3.2826344966888428
    7. 'in' → logprob: -4.282634735107422
    8. ' for' → logprob: -4.782634735107422
    9. '[i' → logprob: -5.157634735107422
    10. 'i' → logprob: -5.157634735107422

Token 2544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.4192871175473556e-05
    2. 'for' → logprob: -10.125054359436035
    3. ' for' → logprob: -11.625054359436035
    4. '```' → logprob: -12.875054359436035
    5. '           ' → logprob: -14.250054359436035
    6. ',' → logprob: -14.375054359436035
    7. '   ' → logprob: -14.375054359436035
    8. '        
' → logprob: -14.875054359436035
    9. '
' → logprob: -16.12505340576172
    10. '      ' → logprob: -16.50005340576172

Token 2545: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011101112700998783
    2. 'for' → logprob: -4.511101245880127
    3. ' for' → logprob: -10.761100769042969
    4. 'i' → logprob: -10.886100769042969
    5. '   ' → logprob: -11.636100769042969
    6. '           ' → logprob: -13.511100769042969
    7. '        
' → logprob: -14.261100769042969
    8. 'length' → logprob: -14.761100769042969
    9. '#' (adapté à ' #') → logprob: -15.011100769042969
    10. 'count' → logprob: -15.261100769042969

Token 2546: ' mark' (ID: 1983)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7123103737831116
    2. 'for' → logprob: -0.9623103737831116
    3. 'i' → logprob: -2.212310314178467
    4. 'j' → logprob: -4.462310314178467
    5. 'length' → logprob: -6.462310314178467
    6. 'n' → logprob: -6.462310314178467
    7. 'count' → logprob: -7.212310314178467
    8. 'prev' → logprob: -7.712310314178467
    9. 'result' → logprob: -7.962310314178467
    10. 'idx' → logprob: -7.962310314178467

Token 2547: ' which' (ID: 1118)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.09002991020679474
    2. '       ' → logprob: -3.5900299549102783
    3. 'for' → logprob: -4.465029716491699
    4. '   ' → logprob: -4.840029716491699
    5. 'length' → logprob: -4.840029716491699
    6. 'len' → logprob: -5.090029716491699
    7. 'is' → logprob: -5.840029716491699
    8. 'n' → logprob: -5.965029716491699
    9. 'l' → logprob: -6.340029716491699
    10. 'double' → logprob: -6.465029716491699

Token 2548: ' mor' (ID: 4658)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.7314708828926086
    2. ' vo' → logprob: -2.231470823287964
    3. 'i' → logprob: -2.606470823287964
    4. '   ' → logprob: -2.856470823287964
    5. 'long' → logprob: -3.356470823287964
    6. 'm' → logprob: -3.481470823287964
    7. '       ' → logprob: -3.481470823287964
    8. '#' → logprob: -3.856470823287964
    9. 'pairs' → logprob: -3.856470823287964
    10. 's' → logprob: -3.856470823287964

Token 2549: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.007420860230922699
    2. 'e' → logprob: -5.882421016693115
    3. 'a' → logprob: -6.757421016693115
    4. 'ked' → logprob: -6.882421016693115
    5. '   ' → logprob: -7.382421016693115
    6. 'k' → logprob: -8.007420539855957
    7. 'akas' → logprob: -8.382420539855957
    8. 'kas' → logprob: -8.507420539855957
    9. 's' → logprob: -8.757420539855957
    10. 'arked' → logprob: -8.882420539855957

Token 2550: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41945722699165344
    2. ' =' → logprob: -1.419457197189331
    3. '=' → logprob: -3.419457197189331
    4. 'vo' → logprob: -3.669457197189331
    5. 'visited' → logprob: -4.79445743560791
    6. 'used' → logprob: -4.79445743560791
    7. '=[' → logprob: -4.91945743560791
    8. '#' → logprob: -5.66945743560791
    9. 'can' → logprob: -6.04445743560791
    10. 'marked' → logprob: -6.54445743560791

Token 2551: ' long' (ID: 1701)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.1896473467350006
    2. 'part' → logprob: -1.8146473169326782
    3. 'the' → logprob: -5.939647197723389
    4. 'start' → logprob: -5.939647197723389
    5. ' part' → logprob: -6.064647197723389
    6. 'starting' → logprob: -7.314647197723389
    7. 'ch' → logprob: -8.439647674560547
    8. 'used' → logprob: -8.564647674560547
    9. '   ' → logprob: -8.814647674560547
    10. 'skip' → logprob: -9.064647674560547

Token 2552: ' vowel' (ID: 165542)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.2915624678134918
    2. '       ' → logprob: -1.4165624380111694
    3. 'is' → logprob: -5.541562557220459
    4. ' long' → logprob: -6.916562557220459
    5. 'length' → logprob: -6.916562557220459
    6. 'flags' → logprob: -7.041562557220459
    7. '   ' → logprob: -7.291562557220459
    8. '           ' → logprob: -7.416562557220459
    9. 'marks' → logprob: -7.791562557220459
    10. 'l' → logprob: -8.2915620803833

Token 2553: ' second' (ID: 3099)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.20666168630123138
    2. '       ' → logprob: -1.7066617012023926
    3. 'is' → logprob: -6.331661701202393
    4. '   ' → logprob: -6.956661701202393
    5. 'lv' → logprob: -7.581661701202393
    6. 'flags' → logprob: -7.581661701202393
    7. 'l' → logprob: -7.956661701202393
    8. '           ' → logprob: -8.456661224365234
    9. 'marks' → logprob: -8.831661224365234
    10. 'length' → logprob: -8.956661224365234

Token 2554: ' part' (ID: 997)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07262468338012695
    2. 'long' → logprob: -2.822624683380127
    3. '   ' → logprob: -5.572624683380127
    4. '_long' → logprob: -6.697624683380127
    5. 'marks' → logprob: -6.947624683380127
    6. 'is' → logprob: -6.947624683380127
    7. 'flags' → logprob: -7.322624683380127
    8. ' long' → logprob: -7.697624683380127
    9. '```' → logprob: -8.447624206542969
    10. '           ' → logprob: -8.447624206542969

Token 2555: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5828391313552856
    2. 'long' → logprob: -0.8328391313552856
    3. 'is' → logprob: -5.082839012145996
    4. '   ' → logprob: -9.082839012145996
    5. ' long' → logprob: -9.457839012145996
    6. 'length' → logprob: -9.582839012145996
    7. 'l' → logprob: -9.707839012145996
    8. '#' → logprob: -10.082839012145996
    9. 'flags' → logprob: -10.082839012145996
    10. 'len' → logprob: -10.457839012145996

Token 2556: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003519652644172311
    2. 'flags' → logprob: -7.253519535064697
    3. 'long' → logprob: -7.628519535064697
    4. 'for' → logprob: -7.628519535064697
    5. '#' → logprob: -7.878519535064697
    6. 'visited' → logprob: -8.003520011901855
    7. 'marks' → logprob: -8.628520011901855
    8. 'mark' → logprob: -8.878520011901855
    9. '```' → logprob: -9.253520011901855
    10. 'marked' → logprob: -9.378520011901855

Token 2557: ' long' (ID: 1701)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' (adapté à ' long') → logprob: -0.3940422534942627
    2. '       ' → logprob: -1.1440422534942627
    3. 'is' → logprob: -6.394042015075684
    4. 'l' → logprob: -6.644042015075684
    5. 'lv' → logprob: -7.144042015075684
    6. 'marked' → logprob: -7.519042015075684
    7. ' long' → logprob: -7.644042015075684
    8. '   ' → logprob: -7.894042015075684
    9. 'mark' → logprob: -8.144042015075684
    10. 'flags' → logprob: -8.894042015075684

Token 2558: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.05716508626937866
    2. '_marks' → logprob: -4.432165145874023
    3. '_flags' → logprob: -4.682165145874023
    4. '_mark' → logprob: -4.682165145874023
    5. '_m' → logprob: -5.182165145874023
    6. '_indices' → logprob: -5.682165145874023
    7. '_' → logprob: -5.807165145874023
    8. '_parts' → logprob: -6.057165145874023
    9. '_marker' → logprob: -6.307165145874023
    10. '_positions' → logprob: -6.557165145874023

Token 2559: 'owel' (ID: 27097)
  Prédit: 'owels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owels' → logprob: -0.16157211363315582
    2. 'owel' → logprob: -1.9115720987319946
    3. 'owe' → logprob: -7.286571979522705
    4. 'ow' → logprob: -7.786571979522705
    5. 'o' → logprob: -9.911572456359863
    6. 'ov' → logprob: -10.661572456359863
    7. 'v' → logprob: -10.786572456359863
    8. 'ocal' → logprob: -10.911572456359863
    9. 'al' → logprob: -11.161572456359863
    10. '[' → logprob: -11.161572456359863

Token 2560: '_idx' (ID: 15257)
  Prédit: '_flags'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flags' → logprob: -0.9941027164459229
    2. '_second' → logprob: -1.2441027164459229
    3. '_indices' → logprob: -1.9941027164459229
    4. 's' → logprob: -3.119102716445923
    5. '_idx' → logprob: -3.494102716445923
    6. '_parts' → logprob: -3.744102716445923
    7. ' =' → logprob: -3.869102716445923
    8. '_m' → logprob: -4.244102478027344
    9. '_index' → logprob: -4.244102478027344
    10. '_marks' → logprob: -4.244102478027344

Token 2561: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0358840674161911
    2. ' =' → logprob: -3.785884141921997
    3. '=' → logprob: -4.410883903503418
    4. '_s' → logprob: -8.535883903503418
    5. '   ' → logprob: -9.285883903503418
    6. '=[' → logprob: -10.535883903503418
    7. '[' → logprob: -10.910883903503418
    8. '[s' → logprob: -11.035883903503418
    9. ' s' → logprob: -11.410883903503418
    10. 'es' → logprob: -12.160883903503418

Token 2562: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.057702649384737015
    2. '[]' → logprob: -3.0577025413513184
    3. '[' → logprob: -5.307702541351318
    4. '{' → logprob: -5.682702541351318
    5. '{}' → logprob: -7.682702541351318
    6. ' set' → logprob: -8.682703018188477
    7. '[i' → logprob: -10.307703018188477
    8. '[]
' → logprob: -10.432703018188477
    9. ' []' → logprob: -11.932703018188477
    10. '[-' → logprob: -12.807703018188477

Token 2563: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005196285899728537
    2. '()
' → logprob: -5.3801960945129395
    3. '({' → logprob: -8.380196571350098
    4. '{' → logprob: -8.755196571350098
    5. '([' → logprob: -9.130196571350098
    6. '(m' → logprob: -10.755196571350098
    7. '(' → logprob: -10.880196571350098
    8. '(i' → logprob: -11.255196571350098
    9. '()

' → logprob: -12.380196571350098
    10. '()\' → logprob: -12.755196571350098

Token 2564: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40406352281570435
    2. 'for' → logprob: -1.1540634632110596
    3. ' for' → logprob: -4.279063701629639
    4. 'i' → logprob: -5.904063701629639
    5. '   ' → logprob: -8.27906322479248
    6. ' i' → logprob: -8.65406322479248
    7. '	for' → logprob: -12.02906322479248
    8. 'if' → logprob: -12.15406322479248
    9. '           ' → logprob: -12.52906322479248
    10. ' ' → logprob: -12.65406322479248

Token 2565: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00029840084607712924
    2. 'i' → logprob: -8.250298500061035
    3. '       ' → logprob: -10.250298500061035
    4. ' for' → logprob: -13.750298500061035
    5. 'n' → logprob: -14.875298500061035
    6. 'j' → logprob: -15.625298500061035
    7. 'idx' → logprob: -16.50029754638672
    8. '   ' → logprob: -17.50029754638672
    9. 'length' → logprob: -19.25029754638672
    10. 'l' → logprob: -19.37529754638672

Token 2566: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011162775568664074
    2. ' i' → logprob: -4.511162757873535
    3. 'idx' → logprob: -9.136162757873535
    4. ' idx' → logprob: -12.136162757873535
    5. 'j' → logprob: -14.011162757873535
    6. 'x' → logprob: -14.261162757873535
    7. '   ' → logprob: -16.51116371154785
    8. ' ' → logprob: -16.63616371154785
    9. 'k' → logprob: -17.01116371154785
    10. '	i' → logprob: -17.13616371154785

Token 2567: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3530873656272888
    2. 'in' → logprob: -1.2280874252319336
    3. '+' → logprob: -5.478087425231934
    4. '   ' → logprob: -9.478087425231934
    5. ' +' → logprob: -10.103087425231934
    6. ',' → logprob: -10.228087425231934
    7. ' ' → logprob: -10.353087425231934
    8. ' i' → logprob: -10.353087425231934
    9. '=' → logprob: -10.478087425231934
    10. 'i' → logprob: -10.478087425231934

Token 2568: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.919942486798391e-05
    2. ' range' → logprob: -9.750059127807617
    3. '(range' → logprob: -14.625059127807617
    4. 'len' → logprob: -14.875059127807617
    5. 'ra' → logprob: -18.375059127807617
    6. '	range' → logprob: -19.000059127807617
    7. 'rang' → logprob: -19.000059127807617
    8. '   ' → logprob: -19.125059127807617
    9. 'r' → logprob: -19.500059127807617
    10. ' ' → logprob: -20.250059127807617

Token 2569: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.08414129912853241
    2. '(len' → logprob: -2.584141254425049
    3. ' len' → logprob: -5.834141254425049
    4. '1' → logprob: -6.209141254425049
    5. '0' → logprob: -8.959141731262207
    6. '(' → logprob: -9.084141731262207
    7. '   ' → logprob: -10.084141731262207
    8. 'range' → logprob: -11.959141731262207
    9. '	len' → logprob: -12.834141731262207
    10. ' ' → logprob: -12.959141731262207

Token 2570: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0013397661969065666
    2. '-' → logprob: -7.001339912414551
    3. '(v' → logprob: -8.12633991241455
    4. 'm' → logprob: -9.50133991241455
    5. '(' → logprob: -10.12633991241455
    6. '(vo' → logprob: -12.00133991241455
    7. ' -' → logprob: -12.12633991241455
    8. '   ' → logprob: -12.62633991241455
    9. 'v' → logprob: -14.25133991241455
    10. '	m' → logprob: -14.87633991241455

Token 2571: 'oras' (ID: 41056)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.19944919645786285
    2. 'm' → logprob: -2.199449300765991
    3. ')' → logprob: -3.324449300765991
    4. '-' → logprob: -4.949449062347412
    5. 'or' → logprob: -5.074449062347412
    6. '(' → logprob: -5.199449062347412
    7. 's' → logprob: -5.824449062347412
    8. 'o' → logprob: -6.324449062347412
    9. '+' → logprob: -6.449449062347412
    10. ' ' → logprob: -6.574449062347412

Token 2572: ')-' (ID: 14080)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06276322156190872
    2. ' -' → logprob: -2.812763214111328
    3. '):
' → logprob: -7.687763214111328
    4. '):' → logprob: -8.312763214111328
    5. '       ' → logprob: -10.687763214111328
    6. ')' → logprob: -10.812763214111328
    7. '   ' → logprob: -10.812763214111328
    8. '()-' → logprob: -11.562763214111328
    9. '+' → logprob: -12.312763214111328
    10. '           ' → logprob: -12.937763214111328

Token 2573: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.75
    3. '-' → logprob: -16.625
    4. '2' → logprob: -18.125
    5. '   ' → logprob: -18.375
    6. '１' → logprob: -18.625
    7. '
' → logprob: -18.75
    8. '(' → logprob: -19.25
    9. '```' → logprob: -19.8125
    10. '`' → logprob: -20.75

Token 2574: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.053527798503637314
    2. '):' → logprob: -3.42852783203125
    3. '-' → logprob: -4.80352783203125
    4. '+' → logprob: -5.30352783203125
    5. '():
' → logprob: -6.17852783203125
    6. ':' → logprob: -6.67852783203125
    7. '       ' → logprob: -6.92852783203125
    8. ':
' → logprob: -7.05352783203125
    9. '   ' → logprob: -7.42852783203125
    10. ' -' → logprob: -8.30352783203125

Token 2575: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001367380958981812
    2. '   ' → logprob: -7.001367568969727
    3. '       ' → logprob: -8.126367568969727
    4. '```' → logprob: -9.751367568969727
    5. '	   ' → logprob: -10.626367568969727
    6. ' if' → logprob: -10.876367568969727
    7. ' ' → logprob: -11.001367568969727
    8. '	       ' → logprob: -11.001367568969727
    9. '               ' → logprob: -12.501367568969727
    10. '    	   ' → logprob: -12.751367568969727

Token 2576: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026076050475239754
    2. ' if' → logprob: -4.276075839996338
    3. '       ' → logprob: -5.026075839996338
    4. '   ' → logprob: -5.651075839996338
    5. 'if' (adapté à ' if') → logprob: -6.526075839996338
    6. ' ' → logprob: -8.276076316833496
    7. '	       ' → logprob: -11.526076316833496
    8. '               ' → logprob: -11.651076316833496
    9. '	   ' → logprob: -11.901076316833496
    10. '```' → logprob: -11.901076316833496

Token 2577: ' mor' (ID: 4658)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.03782859444618225
    2. ' is' → logprob: -3.5378286838531494
    3. 'v' → logprob: -5.03782844543457
    4. ' mor' → logprob: -7.16282844543457
    5. 'vo' → logprob: -7.91282844543457
    6. '   ' → logprob: -8.41282844543457
    7. 'm' → logprob: -9.78782844543457
    8. ' v' → logprob: -10.16282844543457
    9. 'mor' → logprob: -10.91282844543457
    10. ' vo' → logprob: -11.03782844543457

Token 2578: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.007111971266567707
    2. '[' → logprob: -6.2571120262146
    3. '[i' → logprob: -6.2571120262146
    4. '   ' → logprob: -7.0071120262146
    5. 'i' → logprob: -7.5071120262146
    6. 's' → logprob: -7.6321120262146
    7. '==' → logprob: -8.007111549377441
    8. '  ' → logprob: -9.257111549377441
    9. 'os' → logprob: -9.507111549377441
    10. 'is' → logprob: -9.507111549377441

Token 2579: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.9153885558771435e-06
    2. ' [' → logprob: -12.875005722045898
    3. '[' → logprob: -13.750005722045898
    4. '```' → logprob: -13.875005722045898
    5. '   ' → logprob: -15.000005722045898
    6. '[
' → logprob: -15.125005722045898
    7. '           ' → logprob: -15.500005722045898
    8. 'i' → logprob: -15.750005722045898
    9. '       ' → logprob: -16.6250057220459
    10. 's' → logprob: -16.8750057220459

Token 2580: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6914452314376831
    2. ']==' → logprob: -0.8164452314376831
    3. '==' → logprob: -3.4414453506469727
    4. '][' → logprob: -4.941445350646973
    5. ' ==' → logprob: -5.066445350646973
    6. '[' → logprob: -5.066445350646973
    7. '[i' → logprob: -5.566445350646973
    8. ')==' → logprob: -8.191445350646973
    9. 'in' → logprob: -8.316445350646973
    10. ' ]' → logprob: -8.441445350646973

Token 2581: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.539704442024231
    2. '==' → logprob: -0.914704442024231
    3. '[' → logprob: -4.164704322814941
    4. ' ' → logprob: -8.164704322814941
    5. ' [' → logprob: -8.789704322814941
    6. 'in' → logprob: -9.539704322814941
    7. ' in' → logprob: -9.664704322814941
    8. ']==' → logprob: -9.664704322814941
    9. '[i' → logprob: -9.789704322814941
    10. '=' → logprob: -10.164704322814941

Token 2582: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.0004399671161081642
    2. ' V' → logprob: -7.7504401206970215
    3. '{'' → logprob: -12.125439643859863
    4. '   ' → logprob: -12.625439643859863
    5. '{' → logprob: -15.875439643859863
    6. ' ' → logprob: -15.875439643859863
    7. 'VO' → logprob: -16.12544059753418
    8. '	V' → logprob: -16.37544059753418
    9. '  ' → logprob: -16.75044059753418
    10. 'long' → logprob: -17.37544059753418

Token 2583: 'OW' (ID: 5593)
  Prédit: 'OW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OW' → logprob: -0.14162519574165344
    2. 'O' → logprob: -3.141625165939331
    3. 'owels' → logprob: -3.266625165939331
    4. '{
' → logprob: -3.641625165939331
    5. '   ' → logprob: -5.26662540435791
    6. '{' → logprob: -5.64162540435791
    7. ')' → logprob: -5.89162540435791
    8. '```' → logprob: -6.26662540435791
    9. ']' → logprob: -6.51662540435791
    10. '[[' → logprob: -6.64162540435791

Token 2584: 'ELS' (ID: 88642)
  Prédit: 'ELS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ELS' → logprob: -0.08195368200540543
    2. 'OW' → logprob: -2.706953763961792
    3. 'O' → logprob: -4.581953525543213
    4. 'E' → logprob: -8.081954002380371
    5. '```' → logprob: -8.081954002380371
    6. 'W' → logprob: -8.456954002380371
    7. '
' → logprob: -8.956954002380371
    8. '   ' → logprob: -9.081954002380371
    9. '[' → logprob: -9.456954002380371
    10. '{' → logprob: -9.581954002380371

Token 2585: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.015369097702205181
    2. 'and' → logprob: -4.265368938446045
    3. '           ' → logprob: -7.265368938446045
    4. '               ' → logprob: -7.640368938446045
    5. '            ' → logprob: -12.140369415283203
    6. ' ' → logprob: -12.390369415283203
    7. '              ' → logprob: -12.890369415283203
    8. '                ' → logprob: -13.015369415283203
    9. '	and' → logprob: -13.390369415283203
    10. '                   ' → logprob: -13.640369415283203

Token 2586: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.025451822206377983
    2. ' mor' → logprob: -4.27545166015625
    3. 'mor' → logprob: -4.52545166015625
    4. 'is' → logprob: -8.65045166015625
    5. 'v' → logprob: -9.02545166015625
    6. '   ' → logprob: -10.02545166015625
    7. ' ' → logprob: -10.77545166015625
    8. '	m' → logprob: -11.65045166015625
    9. ' is' → logprob: -12.27545166015625
    10. 'get' → logprob: -12.27545166015625

Token 2587: 'as' (ID: 288)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.040456801652908325
    2. '[' → logprob: -3.790456771850586
    3. 'as' → logprob: -5.540456771850586
    4. 'oras' → logprob: -5.665456771850586
    5. '==' → logprob: -6.040456771850586
    6. 'i' → logprob: -6.040456771850586
    7. 's' → logprob: -7.165456771850586
    8. '(i' → logprob: -7.415456771850586
    9. 'es' → logprob: -7.915456771850586
    10. '   ' → logprob: -8.040456771850586

Token 2588: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.021219491958618164
    2. '==' → logprob: -4.146219253540039
    3. ' ==' → logprob: -5.521219253540039
    4. ' and' → logprob: -8.021219253540039
    5. 'and' → logprob: -8.146219253540039
    6. '[' → logprob: -8.396219253540039
    7. ' [' → logprob: -8.521219253540039
    8. '```' → logprob: -9.896219253540039
    9. '   ' → logprob: -10.771219253540039
    10. '==
' → logprob: -11.146219253540039

Token 2589: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.11297330260276794
    2. '+' → logprob: -2.487973213195801
    3. '==' → logprob: -4.237973213195801
    4. ']' → logprob: -5.362973213195801
    5. ']==' → logprob: -5.737973213195801
    6. ' ==' → logprob: -7.737973213195801
    7. '[' → logprob: -8.1129732131958
    8. '][' → logprob: -8.3629732131958
    9. '+i' → logprob: -9.3629732131958
    10. ' [' → logprob: -9.9879732131958

Token 2590: '1' (ID: 16)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.013310813345015049
    2. ']' → logprob: -5.26331090927124
    3. '1' → logprob: -5.76331090927124
    4. 'i' → logprob: -6.13831090927124
    5. 'v' → logprob: -6.63831090927124
    6. ' V' → logprob: -7.88831090927124
    7. 'm' → logprob: -8.138310432434082
    8. '+' → logprob: -8.513310432434082
    9. ' vowels' → logprob: -9.388310432434082
    10. ' ' → logprob: -9.513310432434082

Token 2591: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02452039159834385
    2. ']==' → logprob: -3.7745203971862793
    3. '==' → logprob: -7.149520397186279
    4. ' ==' → logprob: -7.774520397186279
    5. ' ]' → logprob: -10.649519920349121
    6. '[' → logprob: -11.399519920349121
    7. '[i' → logprob: -11.774519920349121
    8. '```' → logprob: -11.899519920349121
    9. '][' → logprob: -12.774519920349121
    10. 'in' → logprob: -13.149519920349121

Token 2592: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3869699537754059
    2. '==' → logprob: -1.1369699239730835
    3. ' in' → logprob: -10.136969566345215
    4. '[' → logprob: -10.386969566345215
    5. ']==' → logprob: -11.886969566345215
    6. '[i' → logprob: -12.261969566345215
    7. '==
' → logprob: -12.386969566345215
    8. '```' → logprob: -12.511969566345215
    9. 'in' → logprob: -13.136969566345215
    10. '=' → logprob: -13.386969566345215

Token 2593: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.00016277639952022582
    2. ' V' → logprob: -9.250163078308105
    3. 'm' → logprob: -10.000163078308105
    4. '{'' → logprob: -10.875163078308105
    5. '{' → logprob: -13.250163078308105
    6. ' {'' → logprob: -15.375163078308105
    7. '   ' → logprob: -16.25016212463379
    8. '	V' → logprob: -16.62516212463379
    9. '['' → logprob: -17.62516212463379
    10. '{"' → logprob: -17.87516212463379

Token 2594: 'OW' (ID: 5593)
  Prédit: 'OW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OW' → logprob: -0.07927342504262924
    2. 'V' → logprob: -2.8292734622955322
    3. 'owels' → logprob: -4.454273223876953
    4. 'O' → logprob: -6.579273223876953
    5. '[V' → logprob: -6.829273223876953
    6. '{' → logprob: -7.079273223876953
    7. 'OV' → logprob: -7.204273223876953
    8. 'W' → logprob: -7.829273223876953
    9. '{'' → logprob: -7.954273223876953
    10. '['' → logprob: -9.079273223876953

Token 2595: 'ELS' (ID: 88642)
  Prédit: 'ELS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ELS' → logprob: -0.06315365433692932
    2. 'OW' → logprob: -2.8131537437438965
    3. 'O' → logprob: -7.8131537437438965
    4. 'W' → logprob: -8.938153266906738
    5. '[' → logprob: -8.938153266906738
    6. 'E' → logprob: -9.313153266906738
    7. '{' → logprob: -9.438153266906738
    8. 'owels' → logprob: -10.063153266906738
    9. '(' → logprob: -10.188153266906738
    10. 'OV' → logprob: -10.313153266906738

Token 2596: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.006746512372046709
    2. 'and' → logprob: -5.881746292114258
    3. '               ' → logprob: -6.131746292114258
    4. '           ' → logprob: -6.381746292114258
    5. ':
' → logprob: -10.756746292114258
    6. ':' → logprob: -11.256746292114258
    7. ',' → logprob: -12.131746292114258
    8. '            ' → logprob: -12.506746292114258
    9. '              ' → logprob: -12.756746292114258
    10. '	and' → logprob: -12.881746292114258

Token 2597: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4145016372203827
    2. '               ' → logprob: -1.414501667022705
    3. ' and' → logprob: -2.414501667022705
    4. ':' → logprob: -5.414501667022705
    5. '            ' → logprob: -7.539501667022705
    6. ':
' → logprob: -7.789501667022705
    7. 'and' → logprob: -8.289501190185547
    8. '[' → logprob: -8.539501190185547
    9. ' if' → logprob: -8.539501190185547
    10. ' ' → logprob: -9.039501190185547

Token 2598: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11223950982093811
    2. '               ' → logprob: -2.6122395992279053
    3. ' if' → logprob: -3.6122395992279053
    4. 'if' (adapté à ' if') → logprob: -5.362239360809326
    5. ' ' → logprob: -6.987239360809326
    6. '   ' → logprob: -9.237239837646484
    7. '                   ' → logprob: -10.362239837646484
    8. ' ' → logprob: -10.862239837646484
    9. '         ' → logprob: -12.112239837646484
    10. '#' → logprob: -12.112239837646484

Token 2599: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.14904746413230896
    2. 'v' → logprob: -2.649047374725342
    3. ' mor' → logprob: -3.524047374725342
    4. 'mor' → logprob: -4.024047374725342
    5. 'get' → logprob: -4.274047374725342
    6. 'is' → logprob: -5.274047374725342
    7. ' get' → logprob: -7.649047374725342
    8. '   ' → logprob: -8.2740478515625
    9. 'long' → logprob: -8.7740478515625
    10. ' is' → logprob: -8.7740478515625

Token 2600: 'as' (ID: 288)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9124372005462646
    2. 'as' → logprob: -1.2874372005462646
    3. 'i' → logprob: -1.9124372005462646
    4. 'os' → logprob: -2.7874372005462646
    5. 'oras' → logprob: -2.7874372005462646
    6. '[' → logprob: -3.7874372005462646
    7. 'osas' → logprob: -5.412437438964844
    8. '(i' → logprob: -5.537437438964844
    9. 'oas' → logprob: -5.537437438964844
    10. '   ' → logprob: -5.787437438964844

Token 2601: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.522638169466518e-05
    2. '[' → logprob: -11.625024795532227
    3. ' [' → logprob: -11.875024795532227
    4. '```' → logprob: -12.500024795532227
    5. '[
' → logprob: -13.375024795532227
    6. '==' → logprob: -13.625024795532227
    7. 'i' → logprob: -14.500024795532227
    8. '           ' → logprob: -14.625024795532227
    9. '   ' → logprob: -15.125024795532227
    10. '               ' → logprob: -15.125024795532227

Token 2602: ']' (ID: 60)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.8295519948005676
    2. '[i' → logprob: -1.5795519351959229
    3. ']' → logprob: -1.7045519351959229
    4. '==' → logprob: -2.079551935195923
    5. '[' → logprob: -3.829551935195923
    6. '+' → logprob: -4.329552173614502
    7. ' ==' → logprob: -4.704552173614502
    8. '][' → logprob: -5.204552173614502
    9. '```' → logprob: -7.954552173614502
    10. '           ' → logprob: -8.204551696777344

Token 2603: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07013805210590363
    2. ' ==' → logprob: -2.6951379776000977
    3. '=' → logprob: -9.445137977600098
    4. '[' → logprob: -9.695137977600098
    5. '==
' → logprob: -10.820137977600098
    6. ']==' → logprob: -11.070137977600098
    7. ')==' → logprob: -11.445137977600098
    8. '===' → logprob: -12.320137977600098
    9. '           ' → logprob: -13.695137977600098
    10. '[i' → logprob: -13.945137977600098

Token 2604: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0032793101854622364
    2. 'mor' → logprob: -6.253279209136963
    3. ' mor' → logprob: -6.628279209136963
    4. '   ' → logprob: -10.878279685974121
    5. ' ' → logprob: -12.753279685974121
    6. 'maras' → logprob: -13.253279685974121
    7. '	m' → logprob: -14.128279685974121
    8. 'mos' → logprob: -14.753279685974121
    9. 'v' → logprob: -14.878279685974121
    10. ''m' → logprob: -15.003279685974121

Token 2605: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.03657456859946251
    2. 'V' → logprob: -4.036574363708496
    3. '           ' → logprob: -5.036574363708496
    4. 'm' → logprob: -5.786574363708496
    5. 's' → logprob: -6.286574363708496
    6. '   ' → logprob: -6.661574363708496
    7. '       ' → logprob: -6.911574363708496
    8. 'v' → logprob: -7.661574363708496
    9. '            ' → logprob: -8.036574363708496
    10. '(m' → logprob: -8.286574363708496

Token 2606: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.534558552724775e-05
    2. '[' → logprob: -11.625025749206543
    3. 'i' → logprob: -11.875025749206543
    4. '+' → logprob: -12.750025749206543
    5. '```' → logprob: -13.000025749206543
    6. '   ' → logprob: -13.375025749206543
    7. '+i' → logprob: -14.125025749206543
    8. '[
' → logprob: -14.250025749206543
    9. '(i' → logprob: -15.625025749206543
    10. '[j' → logprob: -15.750025749206543

Token 2607: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008701292099431157
    2. '[i' → logprob: -7.125870227813721
    3. '+i' → logprob: -10.250869750976562
    4. 'i' → logprob: -11.250869750976562
    5. ' +' → logprob: -11.500869750976562
    6. '+
' → logprob: -12.500869750976562
    7. ']' → logprob: -13.625869750976562
    8. '[' → logprob: -14.375869750976562
    9. '(i' → logprob: -14.875869750976562
    10. '   ' → logprob: -15.000869750976562

Token 2608: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025914251804351807
    2. 'i' → logprob: -3.900914192199707
    3. '+' → logprob: -5.275914192199707
    4. '[i' → logprob: -9.275914192199707
    5. ''i' → logprob: -10.400914192199707
    6. '```' → logprob: -10.650914192199707
    7. '+i' → logprob: -10.650914192199707
    8. '(i' → logprob: -10.900914192199707
    9. '{i' → logprob: -11.400914192199707
    10. ' ' → logprob: -11.775914192199707

Token 2609: ']' (ID: 60)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6805702447891235
    2. ']:
' → logprob: -1.3055702447891235
    3. '                   ' → logprob: -2.680570125579834
    4. ':' → logprob: -3.305570125579834
    5. ']' → logprob: -3.430570125579834
    6. ']:' → logprob: -3.680570125579834
    7. ' and' → logprob: -3.930570125579834
    8. '               ' → logprob: -4.555570125579834
    9. 'and' → logprob: -5.055570125579834
    10. '[i' → logprob: -5.055570125579834

Token 2610: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.503825306892395
    2. ' and' → logprob: -1.628825306892395
    3. ':
' → logprob: -2.2538251876831055
    4. '                   ' → logprob: -2.5038251876831055
    5. '               ' → logprob: -5.2538251876831055
    6. '           ' → logprob: -5.5038251876831055
    7. 'and' → logprob: -6.6288251876831055
    8. '                       ' → logprob: -6.8788251876831055
    9. '<|end|>' → logprob: -8.378825187683105
    10. '                           ' → logprob: -8.878825187683105

Token 2611: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.3766230046749115
    2. ' mor' → logprob: -1.5016230344772339
    3. 'mor' → logprob: -2.5016229152679443
    4. 'long' → logprob: -5.251623153686523
    5. 'v' → logprob: -6.626623153686523
    6. 'i' → logprob: -7.501623153686523
    7. '(m' → logprob: -7.501623153686523
    8. ' long' → logprob: -7.876623153686523
    9. '{' → logprob: -8.001623153686523
    10. '   ' → logprob: -8.876623153686523

Token 2612: 'as' (ID: 288)
  Prédit: 'oras'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -0.605886697769165
    2. 'as' → logprob: -0.855886697769165
    3. 'i' → logprob: -4.855886459350586
    4. '[' → logprob: -4.855886459350586
    5. '[i' → logprob: -5.355886459350586
    6. 'or' → logprob: -6.605886459350586
    7. 'oas' → logprob: -7.105886459350586
    8. '   ' → logprob: -7.230886459350586
    9. '#' → logprob: -7.355886459350586
    10. 'a' → logprob: -7.605886459350586

Token 2613: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03580183535814285
    2. 'i' → logprob: -4.660801887512207
    3. ' in' → logprob: -5.035801887512207
    4. '==' → logprob: -5.035801887512207
    5. 'in' → logprob: -5.160801887512207
    6. '{i' → logprob: -6.035801887512207
    7. ' ==' → logprob: -6.285801887512207
    8. '(i' → logprob: -7.285801887512207
    9. '{
' → logprob: -8.160801887512207
    10. ' i' → logprob: -8.160801887512207

Token 2614: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8390083909034729
    2. ']' → logprob: -0.9640083909034729
    3. '[i' → logprob: -2.339008331298828
    4. ']==' → logprob: -2.964008331298828
    5. 'in' → logprob: -4.589008331298828
    6. ' in' → logprob: -4.964008331298828
    7. '==' → logprob: -5.214008331298828
    8. '[' → logprob: -5.214008331298828
    9. 'i' → logprob: -5.839008331298828
    10. ' ==' → logprob: -6.964008331298828

Token 2615: ' in' (ID: 306)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6684870719909668
    2. ' ==' → logprob: -1.5434870719909668
    3. 'in' → logprob: -1.9184870719909668
    4. ' in' → logprob: -2.168487071990967
    5. '[' → logprob: -5.418487071990967
    6. '=='' → logprob: -5.668487071990967
    7. ' ' → logprob: -6.418487071990967
    8. ':
' → logprob: -7.668487071990967
    9. '==
' → logprob: -7.668487071990967
    10. '   ' → logprob: -7.668487071990967

Token 2616: ' {'' (ID: 11881)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -3.128163257315464e-07
    2. ' {'' → logprob: -15.75
    3. '{"' → logprob: -16.5
    4. '{' → logprob: -17.0
    5. '({'' → logprob: -18.25
    6. ''a' → logprob: -18.5
    7. '{
' → logprob: -18.5
    8. '   ' → logprob: -19.75
    9. '['' → logprob: -20.0
    10. '('' → logprob: -20.25

Token 2617: 'a' (ID: 64)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.004788003396242857
    2. '{'' → logprob: -5.504787921905518
    3. 'a' → logprob: -7.254787921905518
    4. ''ai' → logprob: -13.504788398742676
    5. ''' → logprob: -14.379788398742676
    6. ''i' → logprob: -15.879788398742676
    7. '('' → logprob: -16.25478744506836
    8. 'ai' → logprob: -16.37978744506836
    9. '’a' → logprob: -16.62978744506836
    10. ''u' → logprob: -17.12978744506836

Token 2618: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.16181470453739166
    2. '',' → logprob: -1.9118146896362305
    3. ''' → logprob: -7.4118146896362305
    4. '{'' → logprob: -7.9118146896362305
    5. 'a' → logprob: -8.03681468963623
    6. ',' → logprob: -9.03681468963623
    7. ','' → logprob: -9.41181468963623
    8. ''a' → logprob: -10.53681468963623
    9. '',"' → logprob: -10.91181468963623
    10. '',
' → logprob: -11.53681468963623

Token 2619: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05280887708067894
    2. ''i' → logprob: -3.0528087615966797
    3. 'a' → logprob: -5.67780876159668
    4. '{'' → logprob: -8.17780876159668
    5. ''' → logprob: -8.55280876159668
    6. ''a' → logprob: -8.55280876159668
    7. ''u' → logprob: -9.80280876159668
    8. 'u' → logprob: -10.92780876159668
    9. ' '' → logprob: -11.67780876159668
    10. ' i' → logprob: -11.67780876159668

Token 2620: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.03383668139576912
    2. '',' → logprob: -3.408836603164673
    3. ''' → logprob: -9.658836364746094
    4. ','' → logprob: -9.908836364746094
    5. ',' → logprob: -10.783836364746094
    6. ''}' → logprob: -11.658836364746094
    7. '',
' → logprob: -11.908836364746094
    8. 'a' → logprob: -11.908836364746094
    9. 'u' → logprob: -11.908836364746094
    10. '{'' → logprob: -12.033836364746094

Token 2621: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.12697377800941467
    2. ''u' → logprob: -2.126973867416382
    3. ''' → logprob: -10.501974105834961
    4. '
' → logprob: -11.751974105834961
    5. ' '' → logprob: -12.751974105834961
    6. '   ' → logprob: -13.126974105834961
    7. ' u' → logprob: -13.501974105834961
    8. '	u' → logprob: -13.876974105834961
    9. '{'' → logprob: -14.001974105834961
    10. ' ' → logprob: -14.626974105834961

Token 2622: ''}' (ID: 17352)
  Prédit: ''}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.05044262856245041
    2. '}' → logprob: -3.050442695617676
    3. '','' → logprob: -6.800442695617676
    4. '',' → logprob: -7.800442695617676
    5. ''}
' → logprob: -9.675442695617676
    6. ''' → logprob: -10.050442695617676
    7. '               ' → logprob: -10.550442695617676
    8. '                   ' → logprob: -10.550442695617676
    9. '           ' → logprob: -10.550442695617676
    10. '']:
' → logprob: -10.800442695617676

Token 2623: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7175045609474182
    2. '                   ' → logprob: -1.0925045013427734
    3. ':' → logprob: -1.8425045013427734
    4. '               ' → logprob: -4.717504501342773
    5. ' and' → logprob: -5.217504501342773
    6. '           ' → logprob: -6.092504501342773
    7. '                       ' → logprob: -6.592504501342773
    8. '):
' → logprob: -10.092504501342773
    9. 'and' → logprob: -10.467504501342773
    10. '                           ' → logprob: -10.467504501342773

Token 2624: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0028507597744464874
    2. '               ' → logprob: -6.002850532531738
    3. '                       ' → logprob: -8.127850532531738
    4. ':
' → logprob: -10.377850532531738
    5. '           ' → logprob: -11.627850532531738
    6. ':' → logprob: -11.752850532531738
    7. ' ' → logprob: -11.752850532531738
    8. ' and' → logprob: -12.502850532531738
    9. '   ' → logprob: -12.877850532531738
    10. '       ' → logprob: -13.127850532531738

Token 2625: ' long' (ID: 1701)
  Prédit: ' long'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' long' → logprob: -0.6512977480888367
    2. '                   ' → logprob: -1.1512978076934814
    3. '                       ' → logprob: -2.0262978076934814
    4. 'long' (adapté à ' long') → logprob: -3.5262978076934814
    5. '       ' → logprob: -7.901297569274902
    6. '   ' → logprob: -8.026297569274902
    7. '               ' → logprob: -8.526297569274902
    8. '           ' → logprob: -9.151297569274902
    9. ' ' → logprob: -10.026297569274902
    10. '                           ' → logprob: -10.151297569274902

Token 2626: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.001200827769935131
    2. '_' → logprob: -6.8762006759643555
    3. ' _' → logprob: -10.251200675964355
    4. '_i' → logprob: -10.626200675964355
    5. ''_' → logprob: -10.626200675964355
    6. '
' → logprob: -11.001200675964355
    7. ')_' → logprob: -12.001200675964355
    8. '           ' → logprob: -12.251200675964355
    9. '\' → logprob: -12.501200675964355
    10. '```' → logprob: -12.501200675964355

Token 2627: 'owel' (ID: 27097)
  Prédit: 'owel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owel' → logprob: -5.3596853831550106e-05
    2. 'owels' → logprob: -10.125053405761719
    3. 'ow' → logprob: -12.000053405761719
    4. 'ovel' → logprob: -12.750053405761719
    5. 'owe' → logprob: -13.000053405761719
    6. 'owl' → logprob: -13.750053405761719
    7. 'o' → logprob: -14.500053405761719
    8. '   ' → logprob: -15.500053405761719
    9. '_' → logprob: -16.87505340576172
    10. '       ' → logprob: -17.12505340576172

Token 2628: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.5690089639974758e-05
    2. 'idx' → logprob: -11.375015258789062
    3. '           ' → logprob: -13.875015258789062
    4. 'Idx' → logprob: -13.875015258789062
    5. '_i' → logprob: -14.750015258789062
    6. '                   ' → logprob: -14.875015258789062
    7. '_index' → logprob: -15.250015258789062
    8. '   ' → logprob: -15.875015258789062
    9. '               ' → logprob: -15.875015258789062
    10. '=' → logprob: -16.250015258789062

Token 2629: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00020389800192788243
    2. '.' → logprob: -8.500204086303711
    3. ' .' → logprob: -15.000204086303711
    4. 'add' → logprob: -17.37520408630371
    5. '.update' → logprob: -17.75020408630371
    6. '   ' → logprob: -18.00020408630371
    7. '.Add' → logprob: -18.75020408630371
    8. '.append' → logprob: -19.00020408630371
    9. '{}.' → logprob: -19.25020408630371
    10. '	add' → logprob: -19.50020408630371

Token 2630: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.758300438988954e-05
    2. 'i' → logprob: -9.250097274780273
    3. '(' → logprob: -13.875097274780273
    4. ' i' → logprob: -14.750097274780273
    5. '{i' → logprob: -17.375097274780273
    6. '((' → logprob: -17.750097274780273
    7. '(
' → logprob: -18.125097274780273
    8. ' (' → logprob: -18.250097274780273
    9. '	i' → logprob: -18.750097274780273
    10. '=i' → logprob: -19.500097274780273

Token 2631: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06831955909729004
    2. ' +' → logprob: -2.81831955909729
    3. ')' → logprob: -5.068319320678711
    4. '+)' → logprob: -10.943319320678711
    5. '+
' → logprob: -12.443319320678711
    6. ')+' → logprob: -12.943319320678711
    7. '+i' → logprob: -13.318319320678711
    8. ' )' → logprob: -13.318319320678711
    9. '   ' → logprob: -13.568319320678711
    10. ')
' → logprob: -13.818319320678711

Token 2632: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -12.750007629394531
    3. '2' → logprob: -13.250007629394531
    4. 'i' → logprob: -14.000007629394531
    5. '+' → logprob: -14.375007629394531
    6. '{' → logprob: -14.625007629394531
    7. '(' → logprob: -15.375007629394531
    8. '(i' → logprob: -15.500007629394531
    9. '```' → logprob: -15.625007629394531
    10. '   ' → logprob: -16.18750762939453

Token 2633: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012487331696320325
    2. '<|end|>' → logprob: -9.62512493133545
    3. '}' → logprob: -10.12512493133545
    4. '       ' → logprob: -12.25012493133545
    5. ')
' → logprob: -13.00012493133545
    6. '               ' → logprob: -13.12512493133545
    7. '                   ' → logprob: -13.37512493133545
    8. ']' → logprob: -13.37512493133545
    9. '')' → logprob: -13.37512493133545
    10. '           ' → logprob: -13.75012493133545

Token 2634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0116403354331851
    2. '
' → logprob: -5.386640548706055
    3. '```' → logprob: -5.511640548706055
    4. '<|end|>' → logprob: -6.761640548706055
    5. '        
' → logprob: -7.636640548706055
    6. '           ' → logprob: -7.886640548706055
    7. 'for' → logprob: -8.011640548706055
    8. ' for' → logprob: -8.386640548706055
    9. '   ' → logprob: -8.761640548706055
    10. ')' → logprob: -10.511640548706055

Token 2635: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004878404084593058
    2. 'for' → logprob: -6.379878520965576
    3. '
' → logprob: -6.504878520965576
    4. '        
' → logprob: -7.379878520965576
    5. ' for' → logprob: -7.754878520965576
    6. '   ' → logprob: -7.754878520965576
    7. '```' → logprob: -9.629878044128418
    8. '    
' → logprob: -10.504878044128418
    9. '<|end|>' → logprob: -10.504878044128418
    10. '           ' → logprob: -10.754878044128418

Token 2636: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5830298066139221
    2. ' =' → logprob: -0.8330298066139221
    3. '   ' → logprob: -5.208029747009277
    4. '       ' → logprob: -6.583029747009277
    5. '    ' → logprob: -9.958029747009277
    6. ')' → logprob: -10.083029747009277
    7. '        ' → logprob: -11.083029747009277
    8. '=len' → logprob: -11.208029747009277
    9. '  ' → logprob: -11.833029747009277
    10. ' ' → logprob: -12.083029747009277

Token 2637: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.10024700313806534
    2. 'len' → logprob: -2.3502469062805176
    3. '(len' → logprob: -10.225247383117676
    4. '=len' → logprob: -13.225247383117676
    5. '[len' → logprob: -13.350247383117676
    6. '	len' → logprob: -14.850247383117676
    7. '   ' → logprob: -15.725247383117676
    8. ',len' → logprob: -15.975247383117676
    9. ' n' → logprob: -16.60024642944336
    10. '<len' → logprob: -17.47524642944336

Token 2638: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -4.274932143744081e-05
    2. '(' → logprob: -10.375042915344238
    3. ' (' → logprob: -12.500042915344238
    4. '(s' → logprob: -13.375042915344238
    5. '(n' → logprob: -13.500042915344238
    6. 'm' → logprob: -13.500042915344238
    7. '(
' → logprob: -13.750042915344238
    8. '(v' → logprob: -14.125042915344238
    9. '(word' → logprob: -14.625042915344238
    10. '   ' → logprob: -15.250042915344238

Token 2639: 'oras' (ID: 41056)
  Prédit: 'oras'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -0.006678305566310883
    2. '()' → logprob: -6.256678104400635
    3. '(
' → logprob: -6.506678104400635
    4. '(' → logprob: -7.006678104400635
    5. ')' → logprob: -7.256678104400635
    6. 'or' → logprob: -7.756678104400635
    7. 'ora' → logprob: -8.256678581237793
    8. '(m' → logprob: -8.256678581237793
    9. '```' → logprob: -8.631678581237793
    10. '[' → logprob: -8.881678581237793

Token 2640: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6514365077018738
    2. '       ' → logprob: -0.7764365077018738
    3. '   ' → logprob: -5.1514363288879395
    4. '
' → logprob: -5.4014363288879395
    5. '-' → logprob: -5.9014363288879395
    6. '<|end|>' → logprob: -6.4014363288879395
    7. ' -' → logprob: -6.9014363288879395
    8. ')
' → logprob: -7.0264363288879395
    9. '):
' → logprob: -7.7764363288879395
    10. '<|end|>' → logprob: -7.9014363288879395

Token 2641: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0307942945510149
    2. '   ' → logprob: -3.530794382095337
    3. '```' → logprob: -7.655794143676758
    4. 'for' → logprob: -8.405794143676758
    5. ' for' → logprob: -8.530794143676758
    6. 'i' → logprob: -9.905794143676758
    7. '        
' → logprob: -10.405794143676758
    8. ' i' → logprob: -10.905794143676758
    9. '
' → logprob: -11.030794143676758
    10. '<|end|>' → logprob: -11.655794143676758

Token 2642: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6995260119438171
    2. '       ' → logprob: -1.074526071548462
    3. 'i' → logprob: -2.199526071548462
    4. 'result' → logprob: -4.574525833129883
    5. '   ' → logprob: -5.324525833129883
    6. 'idx' → logprob: -5.324525833129883
    7. 'count' → logprob: -5.449525833129883
    8. 'j' → logprob: -5.449525833129883
    9. 'pos' → logprob: -6.199525833129883
    10. 'dp' → logprob: -6.199525833129883

Token 2643: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6687895655632019
    2. 'i' → logprob: -1.0437896251678467
    3. '       ' → logprob: -2.9187896251678467
    4. 'j' → logprob: -3.7937896251678467
    5. 'idx' → logprob: -4.043789386749268
    6. 'result' → logprob: -4.543789386749268
    7. 'output' → logprob: -5.043789386749268
    8. 'count' → logprob: -5.668789386749268
    9. 'cnt' → logprob: -5.918789386749268
    10. 'out' → logprob: -6.043789386749268

Token 2644: ' rule' (ID: 10652)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004486969672143459
    2. ' i' → logprob: -5.504487037658691
    3. '   ' → logprob: -8.254487037658691
    4. '       ' → logprob: -9.629487037658691
    5. 'idx' → logprob: -10.754487037658691
    6. '_' → logprob: -11.379487037658691
    7. ' ' → logprob: -11.504487037658691
    8. '_i' → logprob: -12.129487037658691
    9. 'j' → logprob: -12.379487037658691
    10. '     ' → logprob: -12.629487037658691

Token 2645: '1' (ID: 16)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026416055858135223
    2. '   ' → logprob: -4.901415824890137
    3. ' for' → logprob: -5.026415824890137
    4. 'for' → logprob: -5.151415824890137
    5. ' =' → logprob: -6.651415824890137
    6. ' in' → logprob: -6.901415824890137
    7. '           ' → logprob: -7.026415824890137
    8. ' i' → logprob: -7.526415824890137
    9. '=' → logprob: -7.776415824890137
    10. ':' → logprob: -8.026415824890137

Token 2646: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026217855513095856
    2. ' for' → logprob: -4.651217937469482
    3. 'for' → logprob: -5.151217937469482
    4. '   ' → logprob: -5.401217937469482
    5. ' =' → logprob: -6.776217937469482
    6. '        
' → logprob: -7.151217937469482
    7. ':' → logprob: -7.276217937469482
    8. ',' → logprob: -7.901217937469482
    9. '=' → logprob: -8.151217460632324
    10. '<|end|>' → logprob: -8.151217460632324

Token 2647: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009626468643546104
    2. ' for' → logprob: -5.384626388549805
    3. '   ' → logprob: -6.134626388549805
    4. '```' → logprob: -6.884626388549805
    5. 'for' → logprob: -7.509626388549805
    6. '        
' → logprob: -8.259626388549805
    7. ' i' → logprob: -8.384626388549805
    8. '	' → logprob: -8.884626388549805
    9. '           ' → logprob: -9.009626388549805
    10. 'i' → logprob: -9.759626388549805

Token 2648: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6540932059288025
    2. '       ' → logprob: -1.5290932655334473
    3. 'i' → logprob: -2.0290932655334473
    4. ' for' → logprob: -2.7790932655334473
    5. '```' → logprob: -3.0290932655334473
    6. 'if' → logprob: -4.279093265533447
    7. ' i' → logprob: -5.404093265533447
    8. '   ' → logprob: -6.279093265533447
    9. '``' → logprob: -7.779093265533447
    10. 'idx' → logprob: -8.654092788696289

Token 2649: ' vowel' (ID: 165542)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.573065996170044
    2. 'i' → logprob: -1.198065996170044
    3. '       ' → logprob: -2.073065996170044
    4. 'if' → logprob: -5.948065757751465
    5. '   ' → logprob: -6.573065757751465
    6. 'rule' → logprob: -6.698065757751465
    7. ' for' → logprob: -7.073065757751465
    8. 'idx' → logprob: -7.073065757751465
    9. '#' → logprob: -7.448065757751465
    10. ' i' → logprob: -7.948065757751465

Token 2650: ' i' (ID: 575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9823790788650513
    2. '_idx' → logprob: -1.7323790788650513
    3. 's' → logprob: -1.9823790788650513
    4. 'for' → logprob: -2.1073789596557617
    5. '   ' → logprob: -3.4823789596557617
    6. '=' → logprob: -3.4823789596557617
    7. 'idx' → logprob: -3.6073789596557617
    8. '_counts' → logprob: -3.8573789596557617
    9. '_indices' → logprob: -4.982378959655762
    10. 'in' → logprob: -5.107378959655762

Token 2651: ',u' (ID: 80698)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.3650777339935303
    2. 's' → logprob: -1.3650777339935303
    3. ']' → logprob: -1.7400777339935303
    4. 'n' → logprob: -2.7400777339935303
    5. ' =' → logprob: -2.8650777339935303
    6. '=' → logprob: -3.1150777339935303
    7. ' ==' → logprob: -3.2400777339935303
    8. '[' → logprob: -3.6150777339935303
    9. '[n' → logprob: -4.615077972412109
    10. '_' → logprob: -4.865077972412109

Token 2652: ' short' (ID: 4022)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6990472674369812
    2. '   ' → logprob: -1.699047327041626
    3. ' =' → logprob: -2.324047327041626
    4. '       ' → logprob: -2.699047327041626
    5. ' for' → logprob: -2.824047327041626
    6. 's' → logprob: -3.324047327041626
    7. '=' → logprob: -4.574047088623047
    8. 'v' → logprob: -4.949047088623047
    9. '
' → logprob: -5.449047088623047
    10. ' and' → logprob: -5.574047088623047

Token 2653: ' vowels' (ID: 176245)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03494608402252197
    2. ':' → logprob: -5.159945964813232
    3. ' for' → logprob: -5.284945964813232
    4. ',' → logprob: -5.284945964813232
    5. '   ' → logprob: -5.784945964813232
    6. 'for' → logprob: -5.784945964813232
    7. ' if' → logprob: -5.909945964813232
    8. '
' → logprob: -6.409945964813232
    9. 'if' → logprob: -6.409945964813232
    10. ' and' → logprob: -6.784945964813232

Token 2654: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17070183157920837
    2. ':' → logprob: -3.045701742172241
    3. '<|end|>' → logprob: -3.295701742172241
    4. ' and' → logprob: -3.420701742172241
    5. '<|end|>' → logprob: -4.54570198059082
    6. '   ' → logprob: -4.67070198059082
    7. ' for' → logprob: -5.42070198059082
    8. ',' → logprob: -6.04570198059082
    9. ')' → logprob: -6.04570198059082
    10. ':
' → logprob: -6.42070198059082

Token 2655: ' enclosed' (ID: 67364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2263399064540863
    2. 'for' → logprob: -2.601339817047119
    3. ' for' → logprob: -2.976339817047119
    4. ' if' → logprob: -3.726339817047119
    5. 'if' → logprob: -3.851339817047119
    6. 'v' → logprob: -5.101339817047119
    7. ':' → logprob: -5.601339817047119
    8. '#' → logprob: -5.601339817047119
    9. ' and' → logprob: -5.726339817047119
    10. '   ' → logprob: -5.726339817047119

Token 2656: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0255192518234253
    2. 'in' → logprob: -1.4005192518234253
    3. ':' → logprob: -2.525519371032715
    4. '=' → logprob: -2.775519371032715
    5. 'for' → logprob: -2.900519371032715
    6. ' =' → logprob: -3.150519371032715
    7. 'if' → logprob: -3.150519371032715
    8. '_' → logprob: -4.025519371032715
    9. '==' → logprob: -4.275519371032715
    10. '   ' → logprob: -4.525519371032715

Token 2657: ' parentheses' (ID: 180602)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0649579763412476
    2. ''' → logprob: -1.9399579763412476
    3. '(' → logprob: -2.564958095550537
    4. 'm' → logprob: -3.314958095550537
    5. '{'' → logprob: -3.314958095550537
    6. '{' → logprob: -3.439958095550537
    7. 'range' → logprob: -3.564958095550537
    8. 'v' → logprob: -3.564958095550537
    9. 'i' → logprob: -3.689958095550537
    10. ' (' → logprob: -3.939958095550537

Token 2658: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004220147617161274
    2. 'for' → logprob: -6.129220008850098
    3. ' for' → logprob: -7.004220008850098
    4. '   ' → logprob: -8.004220008850098
    5. '        
' → logprob: -8.629220008850098
    6. ')' → logprob: -9.254220008850098
    7. ',' → logprob: -9.879220008850098
    8. '(' → logprob: -9.879220008850098
    9. 'print' → logprob: -10.004220008850098
    10. '<|end|>' → logprob: -10.254220008850098

Token 2659: ':
' (ID: 734)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9528816938400269
    2. 'v' → logprob: -1.0778816938400269
    3. 'n' → logprob: -2.2028818130493164
    4. 'm' → logprob: -2.4528818130493164
    5. 'not' → logprob: -4.077881813049316
    6. '   ' → logprob: -4.452881813049316
    7. ' i' → logprob: -4.452881813049316
    8. 'vo' → logprob: -5.077881813049316
    9. '(i' → logprob: -5.077881813049316
    10. '(' → logprob: -5.577881813049316

Token 2660: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08176914602518082
    2. 'i' → logprob: -2.9567692279815674
    3. ' i' → logprob: -4.206768989562988
    4. '   ' → logprob: -5.706768989562988
    5. 'm' → logprob: -6.456768989562988
    6. 'n' → logprob: -6.706768989562988
    7. 'v' → logprob: -6.831768989562988
    8. ' ' → logprob: -7.081768989562988
    9. '           ' → logprob: -7.206768989562988
    10. '```' → logprob: -7.456768989562988

Token 2661: ' #' (ID: 1069)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7781223654747009
    2. 'v' → logprob: -1.1531224250793457
    3. 'i' → logprob: -2.0281224250793457
    4. '       ' → logprob: -2.9031224250793457
    5. ' i' → logprob: -3.9031224250793457
    6. '   ' → logprob: -5.403122425079346
    7. 'n' → logprob: -5.403122425079346
    8. 'not' → logprob: -6.403122425079346
    9. ' v' → logprob: -6.653122425079346
    10. '           ' → logprob: -7.153122425079346

Token 2662: ' -' (ID: 533)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.4468046724796295
    2. 'm' → logprob: -1.0718046426773071
    3. 'i' → logprob: -4.821804523468018
    4. '       ' → logprob: -5.571804523468018
    5. 'n' → logprob: -6.196804523468018
    6. '   ' → logprob: -6.446804523468018
    7. 'True' → logprob: -7.696804523468018
    8. 'not' → logprob: -8.071805000305176
    9. '1' → logprob: -8.196805000305176
    10. '0' → logprob: -8.196805000305176

Token 2663: ' surrounded' (ID: 33651)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7069420218467712
    2. 'i' → logprob: -1.706942081451416
    3. 'm' → logprob: -2.831942081451416
    4. ' i' → logprob: -2.831942081451416
    5. 'vo' → logprob: -3.081942081451416
    6. ' mor' → logprob: -3.081942081451416
    7. ' vo' → logprob: -3.456942081451416
    8. 'n' → logprob: -3.706942081451416
    9. ' v' → logprob: -3.956942081451416
    10. ' n' → logprob: -4.831942081451416

Token 2664: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.5910785794258118
    2. ' by' → logprob: -1.091078519821167
    3. '_' → logprob: -3.716078519821167
    4. '==' → logprob: -3.966078519821167
    5. ' ==' → logprob: -4.216078758239746
    6. '       ' → logprob: -4.591078758239746
    7. '[' → logprob: -4.841078758239746
    8. '```' → logprob: -4.841078758239746
    9. ' and' → logprob: -5.591078758239746
    10. 'if' → logprob: -5.841078758239746

Token 2665: ' vo' (ID: 778)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.8065389394760132
    2. 'v' → logprob: -1.5565389394760132
    3. ' vo' → logprob: -1.5565389394760132
    4. 'm' → logprob: -3.9315390586853027
    5. 'i' → logprob: -4.056539058685303
    6. ' (' → logprob: -4.306539058685303
    7. ''' → logprob: -4.431539058685303
    8. ' i' → logprob: -4.556539058685303
    9. ' v' → logprob: -4.806539058685303
    10. '(' → logprob: -5.056539058685303

Token 2666: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.006221578922122717
    2. '```' → logprob: -6.381221771240234
    3. '``' → logprob: -7.006221771240234
    4. '   ' → logprob: -8.006221771240234
    5. '`' → logprob: -8.318721771240234
    6. 'icelo' → logprob: -8.443721771240234
    7. '#' → logprob: -8.568721771240234
    8. 'i' → logprob: -8.693721771240234
    9. 'cel' → logprob: -8.943721771240234
    10. '[' → logprob: -9.006221771240234

Token 2667: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.00017481597024016082
    2. 'el' → logprob: -9.250174522399902
    3. 'less' → logprob: -10.125174522399902
    4. 'ele' → logprob: -10.500174522399902
    5. '```' → logprob: -13.250174522399902
    6. 'cel' → logprob: -13.500174522399902
    7. 'ic' → logprob: -13.625174522399902
    8. 'veless' → logprob: -13.750174522399902
    9. 'ed' → logprob: -14.250174522399902
    10. 'heless' → logprob: -14.375174522399902

Token 2668: ' conson' (ID: 127767)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27615606784820557
    2. ' and' → logprob: -2.026155948638916
    3. ' _' → logprob: -3.651155948638916
    4. '_con' → logprob: -3.776155948638916
    5. '[' → logprob: -4.276155948638916
    6. 'and' → logprob: -4.776155948638916
    7. ''' → logprob: -5.151155948638916
    8. '   ' → logprob: -5.651155948638916
    9. ' ' → logprob: -5.651155948638916
    10. '_m' → logprob: -5.901155948638916

Token 2669: 'ants' (ID: 2027)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0925222635269165
    2. 't' → logprob: -1.3425222635269165
    3. ' and' → logprob: -2.592522144317627
    4. 's' → logprob: -2.717522144317627
    5. 'ents' → logprob: -2.717522144317627
    6. 'ts' → logprob: -2.842522144317627
    7. '   ' → logprob: -3.842522144317627
    8. '           ' → logprob: -4.217522144317627
    9. 'if' → logprob: -4.217522144317627
    10. 'nts' → logprob: -4.342522144317627

Token 2670: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003423427464440465
    2. ':' → logprob: -7.37842321395874
    3. ' for' → logprob: -7.87842321395874
    4. ',' → logprob: -8.003423690795898
    5. ' and' → logprob: -8.253423690795898
    6. '[' → logprob: -8.503423690795898
    7. ')' → logprob: -8.628423690795898
    8. '   ' → logprob: -8.753423690795898
    9. '[i' → logprob: -8.878423690795898
    10. '           ' → logprob: -8.878423690795898

Token 2671: ' mora' (ID: 47294)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026964502409100533
    2. 'for' → logprob: -4.2769646644592285
    3. ' for' → logprob: -5.0269646644592285
    4. 'if' → logprob: -6.6519646644592285
    5. ' if' → logprob: -6.6519646644592285
    6. '           ' → logprob: -7.1519646644592285
    7. '(' → logprob: -7.6519646644592285
    8. ' (' → logprob: -7.7769646644592285
    9. '   ' → logprob: -8.15196418762207
    10. ')' → logprob: -8.40196418762207

Token 2672: ' before' (ID: 2254)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36897072196006775
    2. ' =' → logprob: -2.4939706325531006
    3. ' in' → logprob: -3.1189706325531006
    4. 's' → logprob: -3.2439706325531006
    5. ' for' → logprob: -3.8689706325531006
    6. '[i' → logprob: -3.9939706325531006
    7. 'for' → logprob: -3.9939706325531006
    8. '=' → logprob: -4.11897087097168
    9. ' if' → logprob: -4.36897087097168
    10. '[' → logprob: -5.24397087097168

Token 2673: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09893515706062317
    2. 'and' → logprob: -2.723935127258301
    3. '       ' → logprob: -3.848935127258301
    4. ' or' → logprob: -5.598935127258301
    5. '           ' → logprob: -7.098935127258301
    6. '   ' → logprob: -7.723935127258301
    7. ')' → logprob: -7.973935127258301
    8. 'or' → logprob: -8.4739351272583
    9. '        ' → logprob: -8.5989351272583
    10. '```' → logprob: -8.9739351272583

Token 2674: ' after' (ID: 1934)
  Prédit: 'after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'after' → logprob: -0.6607831716537476
    2. 'i' → logprob: -0.7857831716537476
    3. ' after' → logprob: -4.285783290863037
    4. 'm' → logprob: -5.160783290863037
    5. 'n' → logprob: -5.410783290863037
    6. ' i' → logprob: -6.535783290863037
    7. 'vo' → logprob: -7.660783290863037
    8. '(i' → logprob: -7.910783290863037
    9. 'mor' → logprob: -8.160782814025879
    10. '#' → logprob: -8.535782814025879

Token 2675: ' vo' (ID: 778)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17404705286026
    2. ' and' → logprob: -1.9240469932556152
    3. 'and' → logprob: -4.424046993255615
    4. '           ' → logprob: -7.674046993255615
    5. ':' → logprob: -7.799046993255615
    6. '   ' → logprob: -8.549047470092773
    7. ' or' → logprob: -9.174047470092773
    8. ',' → logprob: -9.674047470092773
    9. ')' → logprob: -9.674047470092773
    10. 'for' → logprob: -9.799047470092773

Token 2676: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0006797884125262499
    2. '```' → logprob: -9.250679969787598
    3. '#' → logprob: -9.750679969787598
    4. '``' → logprob: -10.125679969787598
    5. 'icelo' → logprob: -10.125679969787598
    6. 'i' → logprob: -10.250679969787598
    7. 'ices' → logprob: -10.250679969787598
    8. '`' → logprob: -10.250679969787598
    9. 'icl' → logprob: -10.375679969787598
    10. 'icemail' → logprob: -10.750679969787598

Token 2677: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.0005199087900109589
    2. 'el' → logprob: -7.625519752502441
    3. 'less' → logprob: -10.875519752502441
    4. 'ed' → logprob: -12.750519752502441
    5. 'ess' → logprob: -13.500519752502441
    6. 'e' → logprob: -13.625519752502441
    7. 'ele' → logprob: -13.750519752502441
    8. '```' → logprob: -13.875519752502441
    9. '``' → logprob: -14.375519752502441
    10. '[' → logprob: -14.500519752502441

Token 2678: ' conson' (ID: 127767)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8730139136314392
    2. '       ' → logprob: -1.373013973236084
    3. 'and' → logprob: -1.623013973236084
    4. ' or' → logprob: -3.373013973236084
    5. 'or' → logprob: -3.998013973236084
    6. '   ' → logprob: -3.998013973236084
    7. '_m' → logprob: -4.123013973236084
    8. '_' → logprob: -4.873013973236084
    9. '(m' → logprob: -4.998013973236084
    10. 'm' → logprob: -5.123013973236084

Token 2679: 'ant' (ID: 493)
  Prédit: 'ants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.08730296790599823
    2. 'ant' → logprob: -2.8373029232025146
    3. 't' → logprob: -3.8373029232025146
    4. 'ts' → logprob: -6.337303161621094
    5. 'nts' → logprob: -6.962303161621094
    6. 'ats' → logprob: -8.087303161621094
    7. ' ants' → logprob: -9.462303161621094
    8. 'at' → logprob: -9.462303161621094
    9. 's' → logprob: -9.962303161621094
    10. '   ' → logprob: -10.212303161621094

Token 2680: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001904604840092361
    2. '
' → logprob: -7.626904487609863
    3. ' and' → logprob: -8.376904487609863
    4. ',' → logprob: -8.501904487609863
    5. '        
' → logprob: -9.001904487609863
    6. '<|end|>' → logprob: -9.126904487609863
    7. ':' → logprob: -9.251904487609863
    8. ' or' → logprob: -9.251904487609863
    9. '           ' → logprob: -9.376904487609863
    10. ')' → logprob: -9.626904487609863

Token 2681: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0085215512663126
    2. ' and' → logprob: -4.883521556854248
    3. 'and' → logprob: -7.633521556854248
    4. '           ' → logprob: -8.63352108001709
    5. ' or' → logprob: -9.75852108001709
    6. '   ' → logprob: -9.75852108001709
    7. ',' → logprob: -9.88352108001709
    8. '```' → logprob: -10.25852108001709
    9. ':' → logprob: -11.38352108001709
    10. ')' → logprob: -11.75852108001709

Token 2682: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004838553257286549
    2. ' and' → logprob: -5.504838466644287
    3. 'and' → logprob: -7.754838466644287
    4. ',' → logprob: -9.504838943481445
    5. '           ' → logprob: -9.629838943481445
    6. ':' → logprob: -10.004838943481445
    7. '   ' → logprob: -10.254838943481445
    8. '```' → logprob: -10.629838943481445
    9. ' or' → logprob: -10.754838943481445
    10. '(' → logprob: -11.754838943481445

Token 2683: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010724248364567757
    2. 'if' → logprob: -5.385724067687988
    3. 'for' → logprob: -5.510724067687988
    4. ' if' → logprob: -7.635724067687988
    5. '           ' → logprob: -7.760724067687988
    6. ' for' → logprob: -7.885724067687988
    7. 'elif' → logprob: -8.135724067687988
    8. '   ' → logprob: -8.885724067687988
    9. ':' → logprob: -9.760724067687988
    10. ' and' → logprob: -10.010724067687988

Token 2684: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.2555859088897705
    2. 'i' → logprob: -1.5055859088897705
    3. 'and' → logprob: -1.5055859088897705
    4. 'm' → logprob: -2.1305859088897705
    5. ' i' → logprob: -3.2555859088897705
    6. ' (' → logprob: -3.3805859088897705
    7. '       ' → logprob: -4.005585670471191
    8. 'n' → logprob: -4.505585670471191
    9. '(
' → logprob: -4.505585670471191
    10. '(m' → logprob: -5.380585670471191

Token 2685: ' if' (ID: 538)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1246087551116943
    2. '(m' → logprob: -1.9996087551116943
    3. 'v' → logprob: -2.2496087551116943
    4. '(i' → logprob: -2.4996087551116943
    5. 'i' → logprob: -2.6246087551116943
    6. '(' → logprob: -2.7496087551116943
    7. 'vo' → logprob: -3.1246087551116943
    8. '(v' → logprob: -3.4996087551116943
    9. '(vo' → logprob: -3.6246087551116943
    10. ' (' → logprob: -4.124608993530273

Token 2686: ' following' (ID: 3992)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2798548936843872
    2. ' vo' → logprob: -2.0298547744750977
    3. 'm' → logprob: -2.1548547744750977
    4. 'v' → logprob: -2.5298547744750977
    5. 'vo' → logprob: -2.6548547744750977
    6. 'n' → logprob: -2.6548547744750977
    7. ' i' → logprob: -2.7798547744750977
    8. ' mor' → logprob: -2.7798547744750977
    9. ' (' → logprob: -3.6548547744750977
    10. 'not' → logprob: -3.7798547744750977

Token 2687: ' mora' (ID: 47294)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6039204001426697
    2. ' ==' → logprob: -2.2289204597473145
    3. '==' → logprob: -2.6039204597473145
    4. 'i' → logprob: -2.7289204597473145
    5. '<' → logprob: -2.9789204597473145
    6. '<m' → logprob: -3.6039204597473145
    7. ' i' → logprob: -3.9789204597473145
    8. '+' → logprob: -4.2289204597473145
    9. 'm' → logprob: -4.7289204597473145
    10. '   ' → logprob: -4.9789204597473145

Token 2688: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9774897694587708
    2. '==' → logprob: -1.602489709854126
    3. ' and' → logprob: -1.727489709854126
    4. ' ==' → logprob: -2.102489709854126
    5. 'and' → logprob: -3.102489709854126
    6. '+' → logprob: -3.602489709854126
    7. ':' → logprob: -5.102489948272705
    8. ' <' → logprob: -5.102489948272705
    9. '[i' → logprob: -5.227489948272705
    10. '           ' → logprob: -5.227489948272705

Token 2689: ' s' (ID: 265)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.8120014071464539
    2. 'is' → logprob: -1.4370014667510986
    3. 'in' → logprob: -1.5620014667510986
    4. 'i' → logprob: -3.3120014667510986
    5. ' in' → logprob: -3.8120014667510986
    6. ' is' → logprob: -4.1870012283325195
    7. '   ' → logprob: -5.0620012283325195
    8. 'a' → logprob: -5.4370012283325195
    9. ' vo' → logprob: -5.4370012283325195
    10. 'm' → logprob: -5.6870012283325195

Token 2690: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.0011562933214008808
    2. 'o' → logprob: -7.501156330108643
    3. '```' → logprob: -8.876155853271484
    4. 'u' → logprob: -9.626155853271484
    5. '``' → logprob: -9.876155853271484
    6. '#' → logprob: -9.876155853271484
    7. '_' → logprob: -10.001155853271484
    8. 'ok' → logprob: -10.126155853271484
    9. '   ' → logprob: -10.501155853271484
    10. 't' → logprob: -10.751155853271484

Token 2691: 'on' (ID: 263)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20306815207004547
    2. '       ' → logprob: -2.703068256378174
    3. 'and' → logprob: -2.953068256378174
    4. '+' → logprob: -3.953068256378174
    5. '           ' → logprob: -4.453068256378174
    6. ':
' → logprob: -4.703068256378174
    7. ')' → logprob: -5.078068256378174
    8. '   ' → logprob: -5.203068256378174
    9. ' if' → logprob: -6.578068256378174
    10. ' or' → logprob: -6.703068256378174

Token 2692: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031425125780515373
    2. 'for' → logprob: -9.250314712524414
    3. '
' → logprob: -9.875314712524414
    4. '        
' → logprob: -9.875314712524414
    5. '   ' → logprob: -10.250314712524414
    6. ' for' → logprob: -10.375314712524414
    7. '<|end|>' → logprob: -11.125314712524414
    8. '           ' → logprob: -11.375314712524414
    9. '```' → logprob: -12.375314712524414
    10. '#' → logprob: -12.500314712524414

Token 2693: ' at' (ID: 540)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.090044379234314
    2. ' (' → logprob: -1.965044379234314
    3. 'v' → logprob: -2.2150444984436035
    4. 'm' → logprob: -2.5900444984436035
    5. '(vo' → logprob: -2.7150444984436035
    6. ' vo' → logprob: -2.9650444984436035
    7. '(' → logprob: -3.0900444984436035
    8. 'vo' → logprob: -3.0900444984436035
    9. '(i' → logprob: -3.7150444984436035
    10. ' mor' → logprob: -3.8400444984436035

Token 2694: ' end' (ID: 1268)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.1773846596479416
    2. ' least' → logprob: -2.427384614944458
    3. 'i' → logprob: -2.927384614944458
    4. 'n' → logprob: -5.177384853363037
    5. 'len' → logprob: -6.177384853363037
    6. '+' → logprob: -6.552384853363037
    7. '<' → logprob: -6.802384853363037
    8. ')' → logprob: -6.927384853363037
    9. '0' → logprob: -7.177384853363037
    10. '       ' → logprob: -7.427384853363037

Token 2695: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00072851701406762
    2. '<|end|>' → logprob: -8.625728607177734
    3. '        
' → logprob: -9.375728607177734
    4. '<|end|>' → logprob: -9.750728607177734
    5. ' for' → logprob: -9.875728607177734
    6. ')' → logprob: -10.000728607177734
    7. ',' → logprob: -10.125728607177734
    8. '#' → logprob: -10.125728607177734
    9. '   ' → logprob: -10.375728607177734
    10. '           ' → logprob: -10.625728607177734

Token 2696: ' word' (ID: 2195)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8069631457328796
    2. 'word' → logprob: -1.1819632053375244
    3. 'line' → logprob: -1.6819632053375244
    4. 'n' → logprob: -3.3069632053375244
    5. '_' → logprob: -5.306962966918945
    6. 's' → logprob: -6.056962966918945
    7. 'string' → logprob: -6.056962966918945
    8. 'range' → logprob: -6.056962966918945
    9. '_m' → logprob: -6.681962966918945
    10. '   ' → logprob: -6.681962966918945

Token 2697: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046618093620054424
    2. '        
' → logprob: -8.750466346740723
    3. '<|end|>' → logprob: -8.875466346740723
    4. '
' → logprob: -9.750466346740723
    5. '   ' → logprob: -9.750466346740723
    6. '<|end|>' → logprob: -11.625466346740723
    7. '#' → logprob: -11.875466346740723
    8. ',' → logprob: -12.000466346740723
    9. '           ' → logprob: -12.125466346740723
    10. 'def' → logprob: -12.500466346740723

Token 2698: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003302954835817218
    2. ' for' → logprob: -6.503303050994873
    3. 'for' → logprob: -7.003303050994873
    4. '           ' → logprob: -7.753303050994873
    5. '   ' → logprob: -8.753302574157715
    6. '```' → logprob: -9.753302574157715
    7. ')' → logprob: -10.003302574157715
    8. '        
' → logprob: -10.128302574157715
    9. ',' → logprob: -10.878302574157715
    10. '               ' → logprob: -11.503302574157715

Token 2699: ' previous' (ID: 5880)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.96817547082901
    2. ' mor' → logprob: -1.7181754112243652
    3. '       ' → logprob: -1.9681754112243652
    4. ' i' → logprob: -2.3431754112243652
    5. ' (' → logprob: -3.0931754112243652
    6. '(m' → logprob: -3.5931754112243652
    7. ' m' → logprob: -3.7181754112243652
    8. ' not' → logprob: -3.8431754112243652
    9. 'i' → logprob: -4.218175411224365
    10. ' s' → logprob: -4.343175411224365

Token 2700: ' mora' (ID: 47294)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.2010114192962646
    2. '       ' → logprob: -1.5760114192962646
    3. ' ==' → logprob: -1.9510114192962646
    4. 'if' → logprob: -2.7010114192962646
    5. ' <' → logprob: -2.7010114192962646
    6. ':
' → logprob: -3.2010114192962646
    7. '+' → logprob: -3.3260114192962646
    8. ' and' → logprob: -3.8260114192962646
    9. ' if' → logprob: -3.8260114192962646
    10. '<m' → logprob: -4.076011657714844

Token 2701: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08401986211538315
    2. ' ==' → logprob: -3.459019899368286
    3. '==' → logprob: -4.084019660949707
    4. ':' → logprob: -4.709019660949707
    5. ' and' → logprob: -4.959019660949707
    6. ' <' → logprob: -5.334019660949707
    7. ':
' → logprob: -6.334019660949707
    8. '+' → logprob: -6.459019660949707
    9. ' >=' → logprob: -6.584019660949707
    10. 'and' → logprob: -6.834019660949707

Token 2702: ' vo' (ID: 778)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.2471258044242859
    2. 'is' → logprob: -1.9971258640289307
    3. 'True' → logprob: -2.8721258640289307
    4. ' True' → logprob: -5.122125625610352
    5. 'not' → logprob: -5.497125625610352
    6. ' is' → logprob: -5.622125625610352
    7. 'i' → logprob: -5.747125625610352
    8. ' vo' → logprob: -5.872125625610352
    9. 'False' → logprob: -6.122125625610352
    10. '(vo' → logprob: -6.872125625610352

Token 2703: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.016903143376111984
    2. 'i' → logprob: -4.766902923583984
    3. '```' → logprob: -6.266902923583984
    4. 'id' → logprob: -6.516902923583984
    5. '``' → logprob: -7.516902923583984
    6. 'o' → logprob: -7.766902923583984
    7. '#' → logprob: -7.891902923583984
    8. 'ice' → logprob: -8.141902923583984
    9. '`' → logprob: -8.141902923583984
    10. '+' → logprob: -8.141902923583984

Token 2704: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.00018506382184568793
    2. 'el' → logprob: -8.625185012817383
    3. 'e' → logprob: -13.375185012817383
    4. 'ed' → logprob: -13.750185012817383
    5. 'eles' → logprob: -13.750185012817383
    6. 'less' → logprob: -15.125185012817383
    7. 'ess' → logprob: -15.125185012817383
    8. '    
' → logprob: -15.750185012817383
    9. 'elif' → logprob: -15.750185012817383
    10. 'eled' → logprob: -15.750185012817383

Token 2705: ' conson' (ID: 127767)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.8193366486229934e-05
    2. '        
' → logprob: -12.000018119812012
    3. '
' → logprob: -12.375018119812012
    4. '   ' → logprob: -12.750018119812012
    5. ' for' → logprob: -13.125018119812012
    6. '           ' → logprob: -13.875018119812012
    7. 'for' → logprob: -14.375018119812012
    8. '```' → logprob: -14.500018119812012
    9. '<|end|>' → logprob: -15.000018119812012
    10. ',' → logprob: -16.375019073486328

Token 2706: 'ant' (ID: 493)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0012510620290413499
    2. '           ' → logprob: -7.626251220703125
    3. ' t' → logprob: -8.501251220703125
    4. '[t' → logprob: -8.751251220703125
    5. '       ' → logprob: -9.501251220703125
    6. '_t' → logprob: -9.501251220703125
    7. '   ' → logprob: -9.501251220703125
    8. '               ' → logprob: -10.251251220703125
    9. '             ' → logprob: -10.876251220703125
    10. 'nt' → logprob: -11.126251220703125

Token 2707: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011291404953226447
    2. '
' → logprob: -7.376129150390625
    3. '        
' → logprob: -8.751129150390625
    4. ' for' → logprob: -9.001129150390625
    5. '```' → logprob: -10.126129150390625
    6. '<|end|>' → logprob: -10.251129150390625
    7. 'for' → logprob: -10.251129150390625
    8. '   ' → logprob: -10.501129150390625
    9. 'def' → logprob: -11.501129150390625
    10. '           ' → logprob: -11.501129150390625

Token 2708: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.490809417096898e-05
    2. '           ' → logprob: -10.750055313110352
    3. '        
' → logprob: -11.500055313110352
    4. ',' → logprob: -12.000055313110352
    5. '<|end|>' → logprob: -12.250055313110352
    6. '   ' → logprob: -13.125055313110352
    7. '```' → logprob: -13.250055313110352
    8. ')' → logprob: -13.375055313110352
    9. '
' → logprob: -13.500055313110352
    10. '<|end|>' → logprob: -13.875055313110352

Token 2709: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.9795445849886164e-05
    2. '        
' → logprob: -10.875060081481934
    3. '   ' → logprob: -10.875060081481934
    4. '
' → logprob: -11.250060081481934
    5. '           ' → logprob: -12.500060081481934
    6. 'for' → logprob: -13.625060081481934
    7. '```' → logprob: -13.875060081481934
    8. ' for' → logprob: -14.250060081481934
    9. '	' → logprob: -14.500060081481934
    10. '#' (adapté à ' #') → logprob: -15.125060081481934

Token 2710: ' Also' (ID: 8820)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006308287265710533
    2. 'for' → logprob: -8.000630378723145
    3. ' for' → logprob: -8.500630378723145
    4. '           ' → logprob: -10.375630378723145
    5. '   ' → logprob: -10.375630378723145
    6. '```' → logprob: -10.500630378723145
    7. '        
' → logprob: -15.250630378723145
    8. 'if' → logprob: -15.500630378723145
    9. '`' → logprob: -15.500630378723145
    10. '               ' → logprob: -15.625630378723145

Token 2711: ' applies' (ID: 28134)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010883049108088017
    2. ' for' → logprob: -7.3760881423950195
    3. 'for' → logprob: -8.25108814239502
    4. '   ' → logprob: -9.62608814239502
    5. '```' → logprob: -10.25108814239502
    6. '           ' → logprob: -10.50108814239502
    7. '
' → logprob: -10.62608814239502
    8. '        
' → logprob: -11.25108814239502
    9. '#' → logprob: -12.25108814239502
    10. ' ' → logprob: -12.50108814239502

Token 2712: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1494801640510559
    2. ' if' → logprob: -3.274480104446411
    3. ':' → logprob: -3.899480104446411
    4. '           ' → logprob: -4.14948034286499
    5. '   ' → logprob: -4.52448034286499
    6. '[' → logprob: -4.77448034286499
    7. 'if' → logprob: -5.39948034286499
    8. ' =' → logprob: -5.39948034286499
    9. '        
' → logprob: -5.39948034286499
    10. 'for' → logprob: -5.77448034286499

Token 2713: ' next' (ID: 2613)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1852648258209229
    2. 'v' → logprob: -1.3102648258209229
    3. ' mor' → logprob: -1.5602648258209229
    4. 'i' → logprob: -2.685264825820923
    5. ' vowels' → logprob: -3.560264825820923
    6. '(m' → logprob: -3.935264825820923
    7. 'n' → logprob: -4.060264587402344
    8. ' (' → logprob: -4.310264587402344
    9. '(i' → logprob: -4.685264587402344
    10. '   ' → logprob: -4.810264587402344

Token 2714: ' mora' (ID: 47294)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8143270015716553
    2. '_' → logprob: -1.5643270015716553
    3. '_m' → logprob: -2.3143270015716553
    4. '<m' → logprob: -2.4393270015716553
    5. '<' → logprob: -2.9393270015716553
    6. 'm' → logprob: -3.4393270015716553
    7. '==' → logprob: -3.6893270015716553
    8. ' ==' → logprob: -4.564327239990234
    9. ')' → logprob: -4.939327239990234
    10. '[i' → logprob: -5.564327239990234

Token 2715: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01984875276684761
    2. '+' → logprob: -5.519848823547363
    3. ' +' → logprob: -6.019848823547363
    4. ' if' → logprob: -6.144848823547363
    5. ' <' → logprob: -6.394848823547363
    6. ':' → logprob: -6.769848823547363
    7. ' ==' → logprob: -6.769848823547363
    8. '=' → logprob: -7.019848823547363
    9. '           ' → logprob: -7.144848823547363
    10. '	' → logprob: -7.269848823547363

Token 2716: ' vowel' (ID: 165542)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2793324887752533
    2. 'm' → logprob: -1.7793325185775757
    3. '       ' → logprob: -3.154332399368286
    4. '   ' → logprob: -4.154332637786865
    5. 'n' → logprob: -4.904332637786865
    6. '#' → logprob: -6.279332637786865
    7. 'long' → logprob: -6.779332637786865
    8. ' i' → logprob: -6.904332637786865
    9. '           ' → logprob: -7.029332637786865
    10. '(i' → logprob: -7.279332637786865

Token 2717: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026370316743850708
    2. ' for' → logprob: -4.151370525360107
    3. '   ' → logprob: -6.776370525360107
    4. ',' → logprob: -7.026370525360107
    5. ':' → logprob: -7.026370525360107
    6. '```' → logprob: -7.151370525360107
    7. 'for' → logprob: -7.151370525360107
    8. '	' → logprob: -7.401370525360107
    9. ')' → logprob: -7.526370525360107
    10. '           ' → logprob: -7.526370525360107

Token 2718: ' s' (ID: 265)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.6242448687553406
    2. 'in' → logprob: -2.4992449283599854
    3. 'i' → logprob: -2.6242449283599854
    4. 's' → logprob: -3.2492449283599854
    5. ''' → logprob: -3.3742449283599854
    6. ''i' → logprob: -3.3742449283599854
    7. 'n' → logprob: -3.7492449283599854
    8. 'len' → logprob: -3.8742449283599854
    9. '('' → logprob: -3.9992449283599854
    10. ''s' → logprob: -3.9992449283599854

Token 2719: 'oku' (ID: 13454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4426572024822235
    2. 'oku' → logprob: -2.192657232284546
    3. 'n' → logprob: -2.567657232284546
    4. 'u' → logprob: -2.942657232284546
    5. 'o' → logprob: -3.692657232284546
    6. 'ok' → logprob: -4.692656993865967
    7. 'l' → logprob: -5.192656993865967
    8. 'len' → logprob: -5.380156993865967
    9. '_' → logprob: -5.505156993865967
    10. 'e' → logprob: -5.567656993865967

Token 2720: 'on' (ID: 263)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6956838369369507
    2. 'i' → logprob: -2.6956839561462402
    3. 'if' → logprob: -2.6956839561462402
    4. 'n' → logprob: -2.8206839561462402
    5. '   ' → logprob: -3.3206839561462402
    6. 'on' → logprob: -3.4456839561462402
    7. 'u' → logprob: -3.5706839561462402
    8. '           ' → logprob: -3.9456839561462402
    9. 't' → logprob: -4.07068395614624
    10. 'e' → logprob: -4.19568395614624

Token 2721: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.084206375409849e-05
    2. '        
' → logprob: -10.875041007995605
    3. '```' → logprob: -12.000041007995605
    4. 'output' → logprob: -12.500041007995605
    5. '
' → logprob: -12.500041007995605
    6. '           ' → logprob: -13.375041007995605
    7. '<|end|>' → logprob: -13.625041007995605
    8. '#' → logprob: -13.625041007995605
    9. 'result' → logprob: -14.375041007995605
    10. ',' → logprob: -14.750041007995605

Token 2722: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004131536406930536
    2. '           ' → logprob: -9.250412940979004
    3. '
' → logprob: -9.375412940979004
    4. '   ' → logprob: -9.750412940979004
    5. '        
' → logprob: -9.875412940979004
    6. ',' → logprob: -10.875412940979004
    7. ')' → logprob: -11.125412940979004
    8. '	' → logprob: -11.125412940979004
    9. '```' → logprob: -11.125412940979004
    10. ' for' → logprob: -11.750412940979004

Token 2723: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017469677550252527
    2. ' for' → logprob: -9.625174522399902
    3. 'for' → logprob: -9.750174522399902
    4. '   ' → logprob: -10.375174522399902
    5. '
' → logprob: -11.500174522399902
    6. '```' → logprob: -12.500174522399902
    7. '           ' → logprob: -13.250174522399902
    8. '        
' → logprob: -13.625174522399902
    9. ' ' → logprob: -14.375174522399902
    10. '	' → logprob: -14.750174522399902

Token 2724: ' Also' (ID: 8820)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022976152831688523
    2. 'for' → logprob: -9.375229835510254
    3. ' for' → logprob: -9.625229835510254
    4. '           ' → logprob: -9.875229835510254
    5. '```' → logprob: -11.875229835510254
    6. '   ' → logprob: -12.000229835510254
    7. '        
' → logprob: -12.250229835510254
    8. '	' → logprob: -12.500229835510254
    9. ' i' → logprob: -13.750229835510254
    10. 'i' → logprob: -14.125229835510254

Token 2725: ' applies' (ID: 28134)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13385525345802307
    2. ' for' → logprob: -2.8838553428649902
    3. 'for' → logprob: -3.0088553428649902
    4. ' i' → logprob: -4.88385534286499
    5. '   ' → logprob: -5.75885534286499
    6. 'i' → logprob: -5.75885534286499
    7. '```' → logprob: -5.88385534286499
    8. '           ' → logprob: -7.13385534286499
    9. '
' → logprob: -7.88385534286499
    10. 'n' → logprob: -7.88385534286499

Token 2726: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037949695251882076
    2. '   ' → logprob: -7.378795146942139
    3. ' for' → logprob: -7.753795146942139
    4. '#' → logprob: -8.12879467010498
    5. '           ' → logprob: -8.12879467010498
    6. ':' → logprob: -8.12879467010498
    7. 'for' → logprob: -8.12879467010498
    8. ',' → logprob: -8.75379467010498
    9. '        
' → logprob: -8.75379467010498
    10. '(n' → logprob: -9.00379467010498

Token 2727: ' vowel' (ID: 165542)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2230268120765686
    2. ' i' → logprob: -2.473026752471924
    3. 'n' → logprob: -3.098026752471924
    4. 'm' → logprob: -3.348026752471924
    5. ' n' → logprob: -4.973026752471924
    6. ' mor' → logprob: -5.098026752471924
    7. '       ' → logprob: -5.348026752471924
    8. '   ' → logprob: -5.848026752471924
    9. 'vo' → logprob: -5.973026752471924
    10. 'v' → logprob: -5.973026752471924

Token 2728: ' mora' (ID: 47294)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.1848124265670776
    2. ' ==' → logprob: -1.9348124265670776
    3. '_idx' → logprob: -2.559812545776367
    4. '       ' → logprob: -2.684812545776367
    5. 'if' → logprob: -2.934812545776367
    6. '   ' → logprob: -3.059812545776367
    7. '_' → logprob: -3.059812545776367
    8. '[' → logprob: -3.309812545776367
    9. ' =' → logprob: -3.559812545776367
    10. '=' → logprob: -3.809812545776367

Token 2729: ' followed' (ID: 12661)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.4551622867584229
    2. '       ' → logprob: -1.7051622867584229
    3. ' if' → logprob: -1.8301622867584229
    4. ' =' → logprob: -2.080162286758423
    5. ':' → logprob: -2.830162286758423
    6. '[' → logprob: -2.955162286758423
    7. 'if' → logprob: -3.580162286758423
    8. '   ' → logprob: -3.705162286758423
    9. '[i' → logprob: -3.705162286758423
    10. '==' → logprob: -3.705162286758423

Token 2730: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.08794444054365158
    2. ' by' → logprob: -3.212944507598877
    3. '       ' → logprob: -3.587944507598877
    4. '_' → logprob: -4.962944507598877
    5. '_by' → logprob: -5.962944507598877
    6. '==' → logprob: -6.087944507598877
    7. '   ' → logprob: -6.837944507598877
    8. '=' → logprob: -7.212944507598877
    9. '           ' → logprob: -8.337944030761719
    10. '```' → logprob: -8.337944030761719

Token 2731: ' s' (ID: 265)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.24764102697372437
    2. 'i' → logprob: -1.8726410865783691
    3. 'is' → logprob: -3.872641086578369
    4. ' vo' → logprob: -5.122641086578369
    5. '(i' → logprob: -5.122641086578369
    6. 'len' → logprob: -5.372641086578369
    7. '(vo' → logprob: -5.497641086578369
    8. 'm' → logprob: -5.497641086578369
    9. 'n' → logprob: -5.622641086578369
    10. '#' → logprob: -5.997641086578369

Token 2732: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.000565541791729629
    2. 't' → logprob: -9.500565528869629
    3. 'ok' → logprob: -9.750565528869629
    4. '#' → logprob: -10.000565528869629
    5. 'i' → logprob: -10.000565528869629
    6. '   ' → logprob: -10.125565528869629
    7. 'n' → logprob: -10.500565528869629
    8. '[i' → logprob: -10.625565528869629
    9. 'if' → logprob: -11.000565528869629
    10. 'o' → logprob: -11.000565528869629

Token 2733: 'on' (ID: 263)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1748476028442383
    2. '[i' → logprob: -1.9248476028442383
    3. 'i' → logprob: -2.2998476028442383
    4. '+' → logprob: -2.9248476028442383
    5. 'n' → logprob: -2.9248476028442383
    6. '   ' → logprob: -3.0498476028442383
    7. ']' → logprob: -3.1748476028442383
    8. ')' → logprob: -3.2998476028442383
    9. '[' → logprob: -3.6748476028442383
    10. 's' → logprob: -3.7998476028442383

Token 2734: ' reference' (ID: 9682)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12947684526443481
    2. 'for' → logprob: -2.75447678565979
    3. 'result' → logprob: -3.25447678565979
    4. 'output' → logprob: -4.129477024078369
    5. ' for' → logprob: -6.754477024078369
    6. 'res' → logprob: -7.629477024078369
    7. 'out' → logprob: -8.629476547241211
    8. ' result' → logprob: -8.754476547241211
    9. 'ans' → logprob: -8.879476547241211
    10. '        
' → logprob: -9.254476547241211

Token 2735: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007664825301617384
    2. 'for' → logprob: -5.382664680480957
    3. ' for' → logprob: -6.132664680480957
    4. '        
' → logprob: -8.257664680480957
    5. '   ' → logprob: -9.007664680480957
    6. '
' → logprob: -9.007664680480957
    7. 'output' → logprob: -9.882664680480957
    8. '#' → logprob: -10.257664680480957
    9. ',' → logprob: -10.507664680480957
    10. 'v' → logprob: -10.632664680480957

Token 2736: ' problem' (ID: 4792)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.804989218711853
    2. 'm' → logprob: -1.054989218711853
    3. 'n' → logprob: -3.0549893379211426
    4. 'long' → logprob: -3.3049893379211426
    5. 'mor' → logprob: -3.4299893379211426
    6. '   ' → logprob: -3.9299893379211426
    7. 'vo' → logprob: -4.054989337921143
    8. 'v' → logprob: -4.429989337921143
    9. 'mo' → logprob: -4.804989337921143
    10. 'next' → logprob: -5.554989337921143

Token 2737: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032929708249866962
    2. 'output' → logprob: -6.378293037414551
    3. 'for' → logprob: -7.253293037414551
    4. 'result' → logprob: -7.503293037414551
    5. ' for' → logprob: -9.50329303741455
    6. '   ' → logprob: -10.00329303741455
    7. ' output' → logprob: -10.62829303741455
    8. '        
' → logprob: -10.75329303741455
    9. 'v' → logprob: -11.00329303741455
    10. '```' → logprob: -11.00329303741455

Token 2738: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008757318137213588
    2. ' for' → logprob: -8.500875473022461
    3. '   ' → logprob: -8.750875473022461
    4. '           ' → logprob: -8.875875473022461
    5. '
' → logprob: -9.000875473022461
    6. '        
' → logprob: -9.500875473022461
    7. 'for' → logprob: -9.625875473022461
    8. '```' → logprob: -10.750875473022461
    9. '	' → logprob: -10.875875473022461
    10. ',' → logprob: -11.500875473022461

Token 2739: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1362350881099701
    2. 'for' → logprob: -2.136234998703003
    3. 'result' → logprob: -5.011235237121582
    4. 'output' → logprob: -6.511235237121582
    5. ' for' → logprob: -7.511235237121582
    6. 'res' → logprob: -8.511235237121582
    7. '   ' → logprob: -9.136235237121582
    8. 'out' → logprob: -10.136235237121582
    9. 'i' → logprob: -10.886235237121582
    10. '#' (adapté à ' #') → logprob: -11.011235237121582

Token 2740: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7288388609886169
    2. 'for' → logprob: -1.1038389205932617
    3. 'result' → logprob: -1.8538389205932617
    4. 'output' → logprob: -4.228838920593262
    5. 'ans' → logprob: -6.103838920593262
    6. 'marked' → logprob: -6.228838920593262
    7. 'res' → logprob: -6.603838920593262
    8. 'marks' → logprob: -6.978838920593262
    9. 'formatted' → logprob: -6.978838920593262
    10. 'out' → logprob: -7.353838920593262

Token 2741: ' rule' (ID: 10652)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033320096554234624
    2. ' i' → logprob: -8.375332832336426
    3. 'idx' → logprob: -9.750332832336426
    4. '_' → logprob: -10.500332832336426
    5. 'j' → logprob: -12.750332832336426
    6. '```' → logprob: -12.750332832336426
    7. '_i' → logprob: -12.875332832336426
    8. '   ' → logprob: -13.125332832336426
    9. 'n' → logprob: -13.500332832336426
    10. '`' → logprob: -13.500332832336426

Token 2742: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.921833336353302
    2. '_' → logprob: -1.6718332767486572
    3. 'i' → logprob: -2.2968332767486572
    4. ' in' → logprob: -2.4218332767486572
    5. 'n' → logprob: -2.6718332767486572
    6. ':' → logprob: -3.4218332767486572
    7. '   ' → logprob: -4.046833515167236
    8. ' i' → logprob: -4.171833515167236
    9. 'for' → logprob: -4.546833515167236
    10. ' ' → logprob: -5.046833515167236

Token 2743: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001130571006797254
    2. '   ' → logprob: -8.376130104064941
    3. ':' → logprob: -9.001130104064941
    4. '
' → logprob: -9.001130104064941
    5. 'for' → logprob: -9.001130104064941
    6. '        
' → logprob: -9.001130104064941
    7. '#' → logprob: -9.251130104064941
    8. ' for' → logprob: -9.376130104064941
    9. ',' → logprob: -10.001130104064941
    10. '```' → logprob: -10.001130104064941

Token 2744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5928495486150496e-05
    2. '   ' → logprob: -11.250016212463379
    3. '#' → logprob: -14.000016212463379
    4. '        
' → logprob: -14.375016212463379
    5. 'for' → logprob: -14.500016212463379
    6. '           ' → logprob: -14.750016212463379
    7. '
' → logprob: -15.625016212463379
    8. 'import' → logprob: -15.875016212463379
    9. '```' → logprob: -16.625015258789062
    10. '	   ' → logprob: -16.875015258789062

Token 2745: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01762770488858223
    2. 'for' → logprob: -4.142627716064453
    3. 'v' → logprob: -7.392627716064453
    4. '   ' → logprob: -7.517627716064453
    5. '#' (adapté à ' #') → logprob: -8.767627716064453
    6. 'result' → logprob: -10.017627716064453
    7. 'prev' → logprob: -10.017627716064453
    8. 'rule' → logprob: -10.517627716064453
    9. 'index' → logprob: -10.892627716064453
    10. '```' → logprob: -10.892627716064453

Token 2746: ' Regarding' (ID: 103495)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050169650465250015
    2. 'for' → logprob: -3.1751697063446045
    3. 'i' → logprob: -5.800169467926025
    4. '   ' → logprob: -7.300169467926025
    5. 'v' → logprob: -7.425169467926025
    6. '```' → logprob: -7.550169467926025
    7. ' for' → logprob: -7.800169467926025
    8. 'prev' → logprob: -7.925169467926025
    9. '#' → logprob: -8.050169944763184
    10. '        
' → logprob: -8.675169944763184

Token 2747: ' vowel' (ID: 165542)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.019145131111145
    2. 'v' → logprob: -1.394145131111145
    3. 'i' → logprob: -1.644145131111145
    4. '   ' → logprob: -2.2691450119018555
    5. 'n' → logprob: -3.2691450119018555
    6. 'm' → logprob: -4.0191450119018555
    7. ' i' → logprob: -4.7691450119018555
    8. 'len' → logprob: -4.8941450119018555
    9. 'rule' → logprob: -6.1441450119018555
    10. '           ' → logprob: -6.1441450119018555

Token 2748: ' '' (ID: 461)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2139368057250977
    2. 's' → logprob: -1.8389368057250977
    3. '[' → logprob: -2.2139368057250977
    4. '   ' → logprob: -2.7139368057250977
    5. '_' → logprob: -2.8389368057250977
    6. '       ' → logprob: -2.9639368057250977
    7. '=' → logprob: -3.0889368057250977
    8. 'v' → logprob: -3.3389368057250977
    9. 'i' → logprob: -3.5889368057250977
    10. ''' → logprob: -3.9639368057250977

Token 2749: 'a' (ID: 64)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7734764218330383
    2. 'a' → logprob: -1.6484763622283936
    3. 'i' → logprob: -2.2734763622283936
    4. 'u' → logprob: -2.7734763622283936
    5. ''i' → logprob: -3.1484763622283936
    6. ''e' → logprob: -3.3984763622283936
    7. ''u' → logprob: -3.3984763622283936
    8. ''a' → logprob: -3.5234763622283936
    9. 'o' → logprob: -3.5234763622283936
    10. ''o' → logprob: -4.898476600646973

Token 2750: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0516583919525146
    2. '')' → logprob: -2.3016583919525146
    3. '       ' → logprob: -2.4266583919525146
    4. '']' → logprob: -2.6766583919525146
    5. ')' → logprob: -3.1766583919525146
    6. ']' → logprob: -3.3016583919525146
    7. '   ' → logprob: -3.5516583919525146
    8. ' ' → logprob: -4.176658630371094
    9. '':' → logprob: -4.176658630371094
    10. 'u' → logprob: -4.301658630371094

Token 2751: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2569752037525177
    2. ' =' → logprob: -2.0069751739501953
    3. '   ' → logprob: -3.2569751739501953
    4. 'for' → logprob: -4.631975173950195
    5. '=' → logprob: -5.256975173950195
    6. ':' → logprob: -5.381975173950195
    7. '_' → logprob: -5.381975173950195
    8. '        
' → logprob: -5.506975173950195
    9. ' for' → logprob: -5.631975173950195
    10. '
' → logprob: -5.756975173950195

Token 2752: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4184821546077728
    2. ''' → logprob: -1.6684821844100952
    3. ''i' → logprob: -2.5434820652008057
    4. 'u' → logprob: -4.168482303619385
    5. ' '' → logprob: -4.668482303619385
    6. 'm' → logprob: -4.793482303619385
    7. ''u' → logprob: -4.793482303619385
    8. '   ' → logprob: -5.168482303619385
    9. ' ' → logprob: -5.293482303619385
    10. 'n' → logprob: -5.793482303619385

Token 2753: 'o' (ID: 78)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.20197105407714844
    2. 'i' → logprob: -2.5769710540771484
    3. 'o' → logprob: -2.5769710540771484
    4. 'u' → logprob: -3.5769710540771484
    5. ''' → logprob: -6.701971054077148
    6. 'a' → logprob: -8.076971054077148
    7. ''u' → logprob: -8.076971054077148
    8. ''i' → logprob: -8.326971054077148
    9. 'n' → logprob: -8.451971054077148
    10. ''o' → logprob: -9.451971054077148

Token 2754: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7768753170967102
    2. '':
' → logprob: -1.6518752574920654
    3. '       ' → logprob: -2.0268752574920654
    4. '':' → logprob: -2.9018752574920654
    5. ' and' → logprob: -3.6518752574920654
    6. ':
' → logprob: -4.1518754959106445
    7. ' or' → logprob: -4.1518754959106445
    8. ':' → logprob: -4.1518754959106445
    9. ')' → logprob: -4.4018754959106445
    10. ' '' → logprob: -4.4018754959106445

Token 2755: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032196608372032642
    2. ' for' → logprob: -6.2532196044921875
    3. 'for' → logprob: -6.7532196044921875
    4. '   ' → logprob: -9.878219604492188
    5. '#' → logprob: -10.503219604492188
    6. ':' → logprob: -11.253219604492188
    7. '        
' → logprob: -12.253219604492188
    8. '           ' → logprob: -12.253219604492188
    9. '
' → logprob: -12.503219604492188
    10. 'def' → logprob: -13.253219604492188

Token 2756: ' two' (ID: 1920)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9285459518432617
    2. 'i' → logprob: -1.3035459518432617
    3. 'v' → logprob: -1.5535459518432617
    4. ' n' → logprob: -3.5535459518432617
    5. 'vo' → logprob: -3.8035459518432617
    6. ' i' → logprob: -4.053545951843262
    7. 'len' → logprob: -4.928545951843262
    8. 'True' → logprob: -5.178545951843262
    9. ' True' → logprob: -5.428545951843262
    10. 'long' → logprob: -5.553545951843262

Token 2757: ' or' (ID: 503)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.3238232135772705
    2. 'i' → logprob: -1.4488232135772705
    3. '       ' → logprob: -2.4488232135772705
    4. 'v' → logprob: -2.5738232135772705
    5. 'if' → logprob: -3.1988232135772705
    6. '#' → logprob: -3.3238232135772705
    7. ' ' → logprob: -3.4488232135772705
    8. 'for' → logprob: -3.4488232135772705
    9. '
' → logprob: -3.6988232135772705
    10. '   ' → logprob: -3.9488232135772705

Token 2758: ' more' (ID: 945)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9293220043182373
    2. 'more' → logprob: -1.1793220043182373
    3. '0' → logprob: -2.1793220043182373
    4. 'm' → logprob: -3.4293220043182373
    5. '2' → logprob: -3.6793220043182373
    6. ' more' → logprob: -3.9293220043182373
    7. '#' → logprob: -4.054322242736816
    8. 'i' → logprob: -4.304322242736816
    9. 'None' → logprob: -4.429322242736816
    10. '   ' → logprob: -4.554322242736816

Token 2759: ' mor' (ID: 4658)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5814249515533447
    2. '=' → logprob: -1.8314249515533447
    3. '   ' → logprob: -2.0814249515533447
    4. 'for' → logprob: -2.0814249515533447
    5. 'if' → logprob: -2.4564249515533447
    6. ' ' → logprob: -3.7064249515533447
    7. 'v' → logprob: -3.7064249515533447
    8. '+' → logprob: -3.7064249515533447
    9. '#' → logprob: -3.9564249515533447
    10. ')' → logprob: -4.081424713134766

Token 2760: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.21314319968223572
    2. 'ras' → logprob: -2.0881431102752686
    3. 'a' → logprob: -3.3381431102752686
    4. 'r' → logprob: -3.9631431102752686
    5. 's' → logprob: -5.338143348693848
    6. 'ra' → logprob: -5.463143348693848
    7. 'i' → logprob: -6.963143348693848
    8. 'n' → logprob: -7.963143348693848
    9. '{
' → logprob: -7.963143348693848
    10. '   ' → logprob: -8.338143348693848

Token 2761: ' in' (ID: 306)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.87882399559021
    2. '       ' → logprob: -1.87882399559021
    3. '[i' → logprob: -1.87882399559021
    4. '==' → logprob: -2.12882399559021
    5. '=' → logprob: -2.37882399559021
    6. '   ' → logprob: -2.62882399559021
    7. ' ==' → logprob: -2.87882399559021
    8. ':' → logprob: -3.12882399559021
    9. 'if' → logprob: -3.75382399559021
    10. 'for' → logprob: -3.75382399559021

Token 2762: ' a' (ID: 261)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16378922760486603
    2. ' range' → logprob: -2.9137892723083496
    3. 'v' → logprob: -3.6637892723083496
    4. 'm' → logprob: -4.28878927230835
    5. 'n' → logprob: -4.66378927230835
    6. 'long' → logprob: -5.16378927230835
    7. 'a' → logprob: -5.28878927230835
    8. 'i' → logprob: -5.41378927230835
    9. 'V' → logprob: -5.53878927230835
    10. 'for' → logprob: -5.78878927230835

Token 2763: ' row' (ID: 5225)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.054972767829895
    2. 'm' → logprob: -1.929972767829895
    3. 'if' → logprob: -2.3049726486206055
    4. 'for' → logprob: -2.8049726486206055
    5. '
' → logprob: -3.3049726486206055
    6. 'n' → logprob: -3.3049726486206055
    7. 'v' → logprob: -3.8049726486206055
    8. '==' → logprob: -3.8049726486206055
    9. ' range' → logprob: -3.8049726486206055
    10. '   ' → logprob: -3.9299726486206055

Token 2764: ' start' (ID: 1604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.9281742572784424
    2. '[' → logprob: -2.1781742572784424
    3. '[i' → logprob: -2.4281742572784424
    4. 'if' → logprob: -2.5531742572784424
    5. '==' → logprob: -2.6781742572784424
    6. '   ' → logprob: -2.6781742572784424
    7. 'for' → logprob: -2.6781742572784424
    8. ':' → logprob: -2.8031742572784424
    9. ' ==' → logprob: -2.8031742572784424
    10. '_' → logprob: -3.0531742572784424

Token 2765: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.21943552792072296
    2. '+' → logprob: -2.594435453414917
    3. '=' → logprob: -3.844435453414917
    4. '       ' → logprob: -4.094435691833496
    5. '==' → logprob: -4.094435691833496
    6. 'if' → logprob: -4.219435691833496
    7. 'in' → logprob: -4.719435691833496
    8. ' with' → logprob: -4.969435691833496
    9. '[i' → logprob: -5.219435691833496
    10. '[' → logprob: -5.344435691833496

Token 2766: ' vo' (ID: 778)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8658137321472168
    2. 'v' → logprob: -1.9908137321472168
    3. 'vo' → logprob: -2.240813732147217
    4. 'VOICE' → logprob: -2.615813732147217
    5. 'VO' → logprob: -2.990813732147217
    6. 'V' → logprob: -3.115813732147217
    7. 'm' → logprob: -3.365813732147217
    8. 'def' → logprob: -3.615813732147217
    9. '#' → logprob: -4.115813732147217
    10. 'a' → logprob: -4.240813732147217

Token 2767: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.04516095668077469
    2. 'i' → logprob: -4.17016077041626
    3. '#' → logprob: -5.42016077041626
    4. 'ice' → logprob: -5.60766077041626
    5. '```' → logprob: -6.85766077041626
    6. '``' → logprob: -6.98266077041626
    7. 'icelo' → logprob: -7.04516077041626
    8. '
' → logprob: -7.04516077041626
    9. 'icem' → logprob: -7.10766077041626
    10. 'def' → logprob: -7.17016077041626

Token 2768: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.012493294663727283
    2. 'el' → logprob: -4.512493133544922
    3. 'ele' → logprob: -7.762493133544922
    4. 'e' → logprob: -8.262493133544922
    5. 'cel' → logprob: -8.637493133544922
    6. 'less' → logprob: -9.137493133544922
    7. '```' → logprob: -9.137493133544922
    8. 'eles' → logprob: -9.887493133544922
    9. 'els' → logprob: -10.012493133544922
    10. '#' → logprob: -10.512493133544922

Token 2769: ' conson' (ID: 127767)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.24219705164432526
    2. '_con' → logprob: -1.992197036743164
    3. '   ' → logprob: -3.117197036743164
    4. ' conson' → logprob: -4.867197036743164
    5. 'm' → logprob: -4.992197036743164
    6. ' ' → logprob: -5.367197036743164
    7. ')' → logprob: -5.867197036743164
    8. '_m' → logprob: -5.992197036743164
    9. '       ' → logprob: -6.117197036743164
    10. '  ' → logprob: -6.742197036743164

Token 2770: 'ant' (ID: 493)
  Prédit: 'ants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.08898221701383591
    2. 'ant' → logprob: -2.463982105255127
    3. 'nts' → logprob: -11.963982582092285
    4. 'nants' → logprob: -12.338982582092285
    5. 's' → logprob: -12.463982582092285
    6. '
' → logprob: -12.588982582092285
    7. 'ANTS' → logprob: -12.588982582092285
    8. 'nt' → logprob: -12.713982582092285
    9. '   ' → logprob: -12.838982582092285
    10. '#' → logprob: -13.088982582092285

Token 2771: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02507103979587555
    2. 'for' → logprob: -4.650071144104004
    3. 'v' → logprob: -5.775071144104004
    4. ' for' → logprob: -6.025071144104004
    5. '   ' → logprob: -6.275071144104004
    6. 'def' → logprob: -6.650071144104004
    7. '#' → logprob: -6.900071144104004
    8. 'result' → logprob: -7.025071144104004
    9. '```' → logprob: -7.400071144104004
    10. 'i' → logprob: -7.900071144104004

Token 2772: ' same' (ID: 2684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.2283921241760254
    2. ''' → logprob: -1.6033921241760254
    3. 'v' → logprob: -2.1033921241760254
    4. ''y' → logprob: -2.1033921241760254
    5. '{' → logprob: -2.8533921241760254
    6. '   ' → logprob: -3.4783921241760254
    7. '{'' → logprob: -3.6033921241760254
    8. '#' → logprob: -3.7283921241760254
    9. 'm' → logprob: -4.103392124176025
    10. '{
' → logprob: -4.103392124176025

Token 2773: ' vowel' (ID: 165542)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.23801381886005402
    2. '{
' → logprob: -3.488013744354248
    3. '{' → logprob: -3.738013744354248
    4. '_' → logprob: -3.988013744354248
    5. 'i' → logprob: -3.988013744354248
    6. '(
' → logprob: -3.988013744354248
    7. '_v' → logprob: -4.363013744354248
    8. '   ' → logprob: -4.363013744354248
    9. 'm' → logprob: -4.738013744354248
    10. '{'' → logprob: -5.238013744354248

Token 2774: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020712384954094887
    2. 'for' → logprob: -5.395712375640869
    3. '   ' → logprob: -5.520712375640869
    4. ' for' → logprob: -6.020712375640869
    5. '
' → logprob: -6.145712375640869
    6. ',' → logprob: -6.895712375640869
    7. '        
' → logprob: -7.020712375640869
    8. 'v' → logprob: -7.395712375640869
    9. 'def' → logprob: -7.520712375640869
    10. '#' → logprob: -7.645712375640869

Token 2775: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04141101986169815
    2. '           ' → logprob: -4.41641092300415
    3. ':' → logprob: -5.41641092300415
    4. '[' → logprob: -5.66641092300415
    5. '               ' → logprob: -6.04141092300415
    6. '   ' → logprob: -6.04141092300415
    7. ' for' → logprob: -6.41641092300415
    8. '[i' → logprob: -6.41641092300415
    9. ':
' → logprob: -6.54141092300415
    10. ' if' → logprob: -6.66641092300415

Token 2776: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09195919334888458
    2. ' and' → logprob: -3.216959238052368
    3. '   ' → logprob: -3.966959238052368
    4. ''' → logprob: -5.216958999633789
    5. '           ' → logprob: -5.341958999633789
    6. ' if' → logprob: -5.716958999633789
    7. ':' → logprob: -6.091958999633789
    8. ' '' → logprob: -6.091958999633789
    9. ' for' → logprob: -6.591958999633789
    10. ' ' → logprob: -6.716958999633789

Token 2777: ' all' (ID: 722)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.037345051765442
    2. '       ' → logprob: -1.787345051765442
    3. ' and' → logprob: -2.0373449325561523
    4. 'for' → logprob: -2.6623449325561523
    5. ' or' → logprob: -2.9123449325561523
    6. ' for' → logprob: -3.0373449325561523
    7. '   ' → logprob: -3.2873449325561523
    8. ' #' → logprob: -3.6623449325561523
    9. 'while' → logprob: -4.537344932556152
    10. ' if' → logprob: -4.662344932556152

Token 2778: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31447696685791016
    2. 'i' → logprob: -2.93947696685791
    3. 'for' → logprob: -3.31447696685791
    4. '```' → logprob: -3.43947696685791
    5. '   ' → logprob: -3.93947696685791
    6. ')' → logprob: -4.06447696685791
    7. ' i' → logprob: -4.18947696685791
    8. 'while' → logprob: -4.31447696685791
    9. ' for' → logprob: -4.43947696685791
    10. '
' → logprob: -4.43947696685791

Token 2779: ' last' (ID: 2174)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3686824142932892
    2. 'first' → logprob: -1.3686823844909668
    3. 'last' → logprob: -3.368682384490967
    4. ' the' → logprob: -4.743682384490967
    5. ' first' → logprob: -4.993682384490967
    6. ' last' → logprob: -6.368682384490967
    7. 'one' → logprob: -6.743682384490967
    8. 'next' → logprob: -8.493682861328125
    9. '       ' → logprob: -8.993682861328125
    10. '   ' → logprob: -9.243682861328125

Token 2780: ' vowel' (ID: 165542)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23396673798561096
    2. '   ' → logprob: -3.108966827392578
    3. ':' → logprob: -3.358966827392578
    4. ' for' → logprob: -3.608966827392578
    5. 'for' → logprob: -4.108966827392578
    6. ':
' → logprob: -4.483966827392578
    7. '_' → logprob: -4.608966827392578
    8. ' =' → logprob: -4.608966827392578
    9. '           ' → logprob: -4.858966827392578
    10. ' if' → logprob: -5.108966827392578

Token 2781: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28176841139793396
    2. '   ' → logprob: -2.406768321990967
    3. 'for' → logprob: -2.781768321990967
    4. ' =' → logprob: -4.031768321990967
    5. 'i' → logprob: -4.406768321990967
    6. '=' → logprob: -4.406768321990967
    7. 'idx' → logprob: -4.906768321990967
    8. ' for' → logprob: -5.031768321990967
    9. ':' → logprob: -5.156768321990967
    10. '_idx' → logprob: -5.406768321990967

Token 2782: ' that' (ID: 484)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.30565762519836426
    2. 'the' → logprob: -1.8056576251983643
    3. 'range' → logprob: -2.9306576251983643
    4. 'that' → logprob: -4.180657386779785
    5. 'row' → logprob: -4.180657386779785
    6. 'sequence' → logprob: -4.680657386779785
    7. 'v' → logprob: -6.805657386779785
    8. ' a' → logprob: -7.305657386779785
    9. 'chain' → logprob: -7.805657386779785
    10. '{
' → logprob: -7.930657386779785

Token 2783: ' chain' (ID: 13464)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.30010029673576355
    2. 'row' → logprob: -1.675100326538086
    3. 'run' → logprob: -3.800100326538086
    4. ' ' → logprob: -5.050100326538086
    5. 'series' → logprob: -5.425100326538086
    6. 'a' → logprob: -5.550100326538086
    7. '   ' → logprob: -5.675100326538086
    8. '
' → logprob: -5.800100326538086
    9. 'vo' → logprob: -5.800100326538086
    10. '#' → logprob: -5.800100326538086

Token 2784: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05813509225845337
    2. '   ' → logprob: -3.6831350326538086
    3. 'for' → logprob: -5.058135032653809
    4. ':' → logprob: -5.808135032653809
    5. ' =' → logprob: -5.933135032653809
    6. ' for' → logprob: -6.058135032653809
    7. '
' → logprob: -6.058135032653809
    8. ',' → logprob: -6.058135032653809
    9. '=' → logprob: -6.308135032653809
    10. '           ' → logprob: -6.808135032653809

Token 2785: ' un' (ID: 537)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1488979160785675
    2. 're' → logprob: -4.023898124694824
    3. ' #' → logprob: -4.023898124694824
    4. '(' → logprob: -4.148898124694824
    5. 'en' → logprob: -4.648898124694824
    6. 'parent' → logprob: -4.773898124694824
    7. ''' → logprob: -5.023898124694824
    8. 'print' → logprob: -5.148898124694824
    9. 'insert' → logprob: -5.398898124694824
    10. ' surrounded' → logprob: -5.523898124694824

Token 2786: 'vo' (ID: 1190)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' → logprob: -0.011079533956944942
    2. 'vo' → logprob: -5.51107931137085
    3. 'modified' → logprob: -6.88607931137085
    4. '```' → logprob: -6.88607931137085
    5. '   ' → logprob: -7.26107931137085
    6. 'ch' → logprob: -7.38607931137085
    7. ' ' → logprob: -7.63607931137085
    8. '
' → logprob: -7.88607931137085
    9. 'checked' → logprob: -8.011079788208008
    10. 'wrapped' → logprob: -8.136079788208008

Token 2787: 'iced' (ID: 9865)
  Prédit: 'iced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iced' → logprob: -0.14304189383983612
    2. 'ic' → logprob: -2.2680418491363525
    3. '```' → logprob: -4.518042087554932
    4. 'i' → logprob: -5.518042087554932
    5. '``' → logprob: -6.268042087554932
    6. 'ed' → logprob: -6.768042087554932
    7. 'iled' → logprob: -6.893042087554932
    8. 'ited' → logprob: -6.893042087554932
    9. 'is' → logprob: -7.393042087554932
    10. 'd' → logprob: -7.393042087554932

Token 2788: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021470505744218826
    2. 'for' → logprob: -6.627147197723389
    3. '   ' → logprob: -8.50214672088623
    4. '#' → logprob: -8.75214672088623
    5. 'result' → logprob: -9.00214672088623
    6. 'def' → logprob: -9.62714672088623
    7. ' for' → logprob: -9.87714672088623
    8. 'v' → logprob: -10.50214672088623
    9. 'output' → logprob: -10.50214672088623
    10. '        
' → logprob: -10.50214672088623

Token 2789: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013137641362845898
    2. '   ' → logprob: -5.7631378173828125
    3. '#' → logprob: -6.1381378173828125
    4. ',' → logprob: -6.6381378173828125
    5. '        
' → logprob: -6.6381378173828125
    6. ' for' → logprob: -7.2631378173828125
    7. '
' → logprob: -7.3881378173828125
    8. ':' → logprob: -7.6381378173828125
    9. 'for' → logprob: -7.7631378173828125
    10. '[' → logprob: -7.7631378173828125

Token 2790: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03360869362950325
    2. 'for' → logprob: -3.7836086750030518
    3. '   ' → logprob: -5.658608913421631
    4. ' for' → logprob: -6.158608913421631
    5. 'v' → logprob: -6.783608913421631
    6. '#' (adapté à ' #') → logprob: -7.158608913421631
    7. '
' → logprob: -7.283608913421631
    8. 'i' → logprob: -7.533608913421631
    9. 'def' → logprob: -7.658608913421631
    10. '        
' → logprob: -8.283608436584473

Token 2791: ' Additionally' (ID: 25563)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014165983535349369
    2. 'for' → logprob: -4.389165878295898
    3. '   ' → logprob: -7.139165878295898
    4. 'i' → logprob: -8.014165878295898
    5. '#' → logprob: -8.139165878295898
    6. ' for' → logprob: -9.764165878295898
    7. 'def' → logprob: -10.514165878295898
    8. '```' → logprob: -10.764165878295898
    9. '        
' → logprob: -10.889165878295898
    10. 'v' → logprob: -11.139165878295898

Token 2792: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010279876179993153
    2. ' for' → logprob: -5.510279655456543
    3. '
' → logprob: -6.135279655456543
    4. 'for' → logprob: -6.510279655456543
    5. '        
' → logprob: -6.760279655456543
    6. '   ' → logprob: -7.510279655456543
    7. '#' → logprob: -8.885279655456543
    8. 'v' → logprob: -9.385279655456543
    9. '```' → logprob: -9.760279655456543
    10. '           ' → logprob: -10.010279655456543

Token 2793: ' no' (ID: 860)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48820599913597107
    2. 'for' → logprob: -1.2382060289382935
    3. ' for' → logprob: -3.113205909729004
    4. '#' → logprob: -3.613205909729004
    5. 'i' → logprob: -5.363205909729004
    6. ' #' → logprob: -5.613205909729004
    7. 'result' → logprob: -5.988205909729004
    8. '   ' → logprob: -5.988205909729004
    9. 'prev' → logprob: -6.238205909729004
    10. 'un' → logprob: -6.488205909729004

Token 2794: ' multiple' (ID: 7598)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7481645941734314
    2. '
' → logprob: -1.8731646537780762
    3. ' ' → logprob: -2.748164653778076
    4. 'n' → logprob: -3.123164653778076
    5. '   ' → logprob: -3.123164653778076
    6. 't' → logprob: -3.373164653778076
    7. 'def' → logprob: -3.623164653778076
    8. 'for' → logprob: -3.873164653778076
    9. '\n' → logprob: -3.873164653778076
    10. 'if' → logprob: -4.123164653778076

Token 2795: ' vowels' (ID: 176245)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9948907494544983
    2. '       ' → logprob: -1.7448906898498535
    3. '_' → logprob: -2.4948906898498535
    4. '
' → logprob: -2.4948906898498535
    5. ' if' → logprob: -2.6198906898498535
    6. 'for' → logprob: -2.9948906898498535
    7. '   ' → logprob: -3.8698906898498535
    8. 'v' → logprob: -4.3698906898498535
    9. '_
' → logprob: -4.3698906898498535
    10. '```' → logprob: -4.3698906898498535

Token 2796: ' un' (ID: 537)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013536872575059533
    2. 'for' → logprob: -8.50135326385498
    3. '   ' → logprob: -8.50135326385498
    4. '        
' → logprob: -8.75135326385498
    5. ' for' → logprob: -9.00135326385498
    6. 'output' → logprob: -9.25135326385498
    7. '#' → logprob: -9.50135326385498
    8. ',' → logprob: -10.06385326385498
    9. ':' → logprob: -10.31385326385498
    10. '<|end|>' → logprob: -10.37635326385498

Token 2797: 'vo' (ID: 1190)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.624048113822937
    2. '```' → logprob: -2.3740482330322266
    3. 'der' → logprob: -2.4990482330322266
    4. 'vo' → logprob: -2.6240482330322266
    5. ' ' → logprob: -2.8740482330322266
    6. 'v' → logprob: -2.8740482330322266
    7. '
' → logprob: -2.8740482330322266
    8. 'def' → logprob: -3.2490482330322266
    9. '       ' → logprob: -3.3740482330322266
    10. 'd' → logprob: -3.9990482330322266

Token 2798: 'iced' (ID: 9865)
  Prédit: 'iced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iced' → logprob: -0.034143634140491486
    2. 'ic' → logprob: -4.534143447875977
    3. '```' → logprob: -4.784143447875977
    4. 'oc' → logprob: -5.784143447875977
    5. 'w' → logprob: -6.284143447875977
    6. '``' → logprob: -7.034143447875977
    7. '#' → logprob: -7.409143447875977
    8. '>' → logprob: -7.534143447875977
    9. 'id' → logprob: -7.784143447875977
    10. 'liced' → logprob: -7.784143447875977

Token 2799: ' consecut' (ID: 32704)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.065644770860672
    2. 'result' → logprob: -3.0656447410583496
    3. 'output' → logprob: -4.94064474105835
    4. 'for' → logprob: -5.69064474105835
    5. 'un' → logprob: -6.31564474105835
    6. '#' → logprob: -6.94064474105835
    7. 'marked' → logprob: -7.44064474105835
    8. '   ' → logprob: -7.56564474105835
    9. ' result' → logprob: -8.315645217895508
    10. 'outputs' → logprob: -8.440645217895508

Token 2800: 'ively' (ID: 5861)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.47484225034713745
    2. '
' → logprob: -2.7248423099517822
    3. ')' → logprob: -3.2248423099517822
    4. '   ' → logprob: -3.3498423099517822
    5. 'if' → logprob: -3.5998423099517822
    6. 'ity' → logprob: -3.5998423099517822
    7. '\n' → logprob: -4.099842071533203
    8. '       ' → logprob: -4.474842071533203
    9. ')
' → logprob: -4.474842071533203
    10. '[u' → logprob: -4.599842071533203

Token 2801: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01210930198431015
    2. 'for' → logprob: -5.137109279632568
    3. 'result' → logprob: -5.512109279632568
    4. 'output' → logprob: -7.512109279632568
    5. '   ' → logprob: -8.387109756469727
    6. 'i' → logprob: -8.387109756469727
    7. '#' → logprob: -8.512109756469727
    8. 'marked' → logprob: -8.637109756469727
    9. 'def' → logprob: -8.887109756469727
    10. 'un' → logprob: -9.137109756469727

Token 2802: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030570924282073975
    2. '           ' → logprob: -6.75305700302124
    3. '
' → logprob: -7.37805700302124
    4. '        
' → logprob: -7.87805700302124
    5. ' for' → logprob: -8.378057479858398
    6. '               ' → logprob: -8.503057479858398
    7. '   ' → logprob: -9.503057479858398
    8. 'for' → logprob: -10.003057479858398
    9. '                   ' → logprob: -10.253057479858398
    10. ',' → logprob: -10.253057479858398

Token 2803: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08912419527769089
    2. 'for' → logprob: -3.3391242027282715
    3. 'i' → logprob: -4.2141242027282715
    4. 'prev' → logprob: -4.7141242027282715
    5. 'un' → logprob: -5.0891242027282715
    6. ' for' → logprob: -5.3391242027282715
    7. '           ' → logprob: -5.9641242027282715
    8. ' i' → logprob: -5.9641242027282715
    9. 'idx' → logprob: -6.3391242027282715
    10. '```' → logprob: -6.5891242027282715

Token 2804: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5459991097450256
    2. '       ' → logprob: -1.0459990501403809
    3. 'i' → logprob: -3.545999050140381
    4. ' for' → logprob: -4.295999050140381
    5. '   ' → logprob: -4.795999050140381
    6. 'prev' → logprob: -5.670999050140381
    7. 'idx' → logprob: -5.795999050140381
    8. 'if' → logprob: -5.795999050140381
    9. '```' → logprob: -6.170999050140381
    10. '#' → logprob: -6.545999050140381

Token 2805: ' vowel' (ID: 165542)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2607494592666626
    2. '=' → logprob: -1.6357494592666626
    3. 'if' → logprob: -2.260749340057373
    4. '#' → logprob: -2.260749340057373
    5. ' =' → logprob: -3.135749340057373
    6. '
' → logprob: -3.260749340057373
    7. ')' → logprob: -3.760749340057373
    8. '[i' → logprob: -4.010749340057373
    9. 'def' → logprob: -4.135749340057373
    10. ' ' → logprob: -4.260749340057373

Token 2806: ' is' (ID: 382)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.049329400062561
    2. ' =' → logprob: -1.549329400062561
    3. 's' → logprob: -1.924329400062561
    4. ')' → logprob: -3.1743292808532715
    5. ' ' → logprob: -3.1743292808532715
    6. '[' → logprob: -3.4243292808532715
    7. '=' → logprob: -3.9243292808532715
    8. '<|end|>' → logprob: -3.9243292808532715
    9. '<|end|>' → logprob: -4.0493292808532715
    10. '_idx' → logprob: -4.2993292808532715

Token 2807: ' un' (ID: 537)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17821411788463593
    2. '"' → logprob: -3.1782140731811523
    3. '')' → logprob: -3.9282140731811523
    4. ')' → logprob: -4.053214073181152
    5. ' '' → logprob: -4.178214073181152
    6. 'not' → logprob: -4.803214073181152
    7. 'v' → logprob: -4.928214073181152
    8. ''\' → logprob: -5.303214073181152
    9. 'False' → logprob: -5.303214073181152
    10. '(' → logprob: -5.553214073181152

Token 2808: 'vo' (ID: 1190)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.006318732164800167
    2. 'v' → logprob: -6.00631856918335
    3. 'c' → logprob: -7.88131856918335
    4. 'i' → logprob: -7.88131856918335
    5. '_v' → logprob: -7.88131856918335
    6. 'vo' → logprob: -8.006319046020508
    7. 'd' → logprob: -8.006319046020508
    8. ' ' → logprob: -8.256319046020508
    9. 'n' → logprob: -8.256319046020508
    10. ' _' → logprob: -8.506319046020508

Token 2809: 'iced' (ID: 9865)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4465230703353882
    2. 'ic' → logprob: -1.6965230703353882
    3. '_' → logprob: -2.4465231895446777
    4. 'iced' → logprob: -3.6965231895446777
    5. 'oc' → logprob: -4.196523189544678
    6. '```' → logprob: -4.571523189544678
    7. 'o' → logprob: -5.071523189544678
    8. 'c' → logprob: -5.196523189544678
    9. '#' → logprob: -6.071523189544678
    10. '``' → logprob: -6.071523189544678

Token 2810: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11505729705095291
    2. ':' → logprob: -3.1150572299957275
    3. ' =' → logprob: -3.8650572299957275
    4. ':
' → logprob: -4.490057468414307
    5. '   ' → logprob: -4.865057468414307
    6. '=' → logprob: -4.865057468414307
    7. 'for' → logprob: -5.240057468414307
    8. ' for' → logprob: -5.615057468414307
    9. 'def' → logprob: -7.115057468414307
    10. '           ' → logprob: -7.115057468414307

Token 2811: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5171965956687927
    2. 'if' → logprob: -1.0171966552734375
    3. '       ' → logprob: -4.5171966552734375
    4. '   ' → logprob: -4.8921966552734375
    5. 'for' → logprob: -5.3921966552734375
    6. '=' → logprob: -5.5171966552734375
    7. ' ' → logprob: -5.6421966552734375
    8. ' for' → logprob: -6.2671966552734375
    9. '_' → logprob: -6.3921966552734375
    10. '           ' → logprob: -6.7671966552734375

Token 2812: ' it' (ID: 480)
  Prédit: ' it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' it' → logprob: -1.0398032665252686
    2. 'it' → logprob: -2.0398032665252686
    3. ' the' → logprob: -2.2898032665252686
    4. ' (' → logprob: -2.6648032665252686
    5. '#' → logprob: -2.7898032665252686
    6. ' previous' → logprob: -3.6648032665252686
    7. 'the' → logprob: -3.6648032665252686
    8. ' next' → logprob: -3.7898032665252686
    9. '(vo' → logprob: -3.9148032665252686
    10. 'not' → logprob: -4.164803504943848

Token 2813: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.1402786672115326
    2. 'is' → logprob: -3.2652785778045654
    3. ' not' → logprob: -3.3902785778045654
    4. '#' → logprob: -4.5152788162231445
    5. ' and' → logprob: -4.5152788162231445
    6. 's' → logprob: -4.8902788162231445
    7. 'and' → logprob: -5.5152788162231445
    8. 'not' → logprob: -5.5152788162231445
    9. ')' → logprob: -5.8902788162231445
    10. ' in' → logprob: -6.0152788162231445

Token 2814: ' first' (ID: 1577)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.43631187081336975
    2. 'preced' → logprob: -1.6863118410110474
    3. 'sur' → logprob: -3.061311960220337
    4. 'either' → logprob: -3.061311960220337
    5. 'im' → logprob: -3.936311960220337
    6. 'vo' → logprob: -3.936311960220337
    7. ' not' → logprob: -5.311311721801758
    8. 'follow' → logprob: -5.311311721801758
    9. '(' → logprob: -5.436311721801758
    10. ' either' → logprob: -5.811311721801758

Token 2815: ' un' (ID: 537)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18808066844940186
    2. ' for' → logprob: -2.8130807876586914
    3. 'for' → logprob: -2.8130807876586914
    4. '   ' → logprob: -3.3130807876586914
    5. ':' → logprob: -5.563080787658691
    6. '
' → logprob: -6.688080787658691
    7. '```' → logprob: -6.688080787658691
    8. '           ' → logprob: -6.813080787658691
    9. ':
' → logprob: -7.438080787658691
    10. 'v' → logprob: -7.438080787658691

Token 2816: 'vo' (ID: 1190)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.36837655305862427
    2. 'vo' → logprob: -1.9933764934539795
    3. '_' → logprob: -2.1183764934539795
    4. 'c' → logprob: -4.243376731872559
    5. 'n' → logprob: -4.868376731872559
    6. 'd' → logprob: -5.118376731872559
    7. '_v' → logprob: -5.368376731872559
    8. 'i' → logprob: -5.868376731872559
    9. '```' → logprob: -6.368376731872559
    10. '_vo' → logprob: -6.618376731872559

Token 2817: 'iced' (ID: 9865)
  Prédit: 'iced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iced' → logprob: -0.05209340155124664
    2. 'ic' → logprob: -3.802093505859375
    3. '```' → logprob: -4.552093505859375
    4. 'i' → logprob: -5.802093505859375
    5. '#' → logprob: -6.302093505859375
    6. '``' → logprob: -6.677093505859375
    7. 'n' → logprob: -6.802093505859375
    8. '<' → logprob: -6.927093505859375
    9. 'c' → logprob: -7.052093505859375
    10. '_' → logprob: -7.427093505859375

Token 2818: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021331410855054855
    2. 'for' → logprob: -5.146331310272217
    3. 'result' → logprob: -5.396331310272217
    4. ' for' → logprob: -5.896331310272217
    5. 'un' → logprob: -6.021331310272217
    6. '#' → logprob: -6.521331310272217
    7. 'output' → logprob: -6.771331310272217
    8. '   ' → logprob: -8.021331787109375
    9. ' result' → logprob: -8.146331787109375
    10. 'def' → logprob: -8.271331787109375

Token 2819: ' previous' (ID: 5880)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.29851076006889343
    2. '#' → logprob: -2.173510789871216
    3. ' the' → logprob: -2.798510789871216
    4. 'not' → logprob: -3.423510789871216
    5. ' previous' → logprob: -4.923510551452637
    6. 'preced' → logprob: -5.048510551452637
    7. ' is' → logprob: -5.423510551452637
    8. ' only' → logprob: -6.048510551452637
    9. 'the' → logprob: -6.298510551452637
    10. 'previous' → logprob: -6.423510551452637

Token 2820: ' vowel' (ID: 165542)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0964317321777344
    2. '_v' → logprob: -1.7214317321777344
    3. ' ' → logprob: -2.2214317321777344
    4. 'v' → logprob: -2.3464317321777344
    5. '   ' → logprob: -2.9714317321777344
    6. ' <' → logprob: -3.2214317321777344
    7. 'if' → logprob: -3.5964317321777344
    8. ' if' → logprob: -3.8464317321777344
    9. ' =' → logprob: -4.346431732177734
    10. ' ==' → logprob: -4.596431732177734

Token 2821: ' was' (ID: 673)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050234273076057434
    2. 'for' → logprob: -3.550234317779541
    3. 'un' → logprob: -5.425234317779541
    4. ' for' → logprob: -5.550234317779541
    5. 'result' → logprob: -5.800234317779541
    6. '#' → logprob: -6.425234317779541
    7. 'output' → logprob: -6.925234317779541
    8. 'i' → logprob: -7.050234317779541
    9. '```' → logprob: -7.175234317779541
    10. '   ' → logprob: -7.425234317779541

Token 2822: ' voiced' (ID: 131324)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8657197952270508
    2. 'False' → logprob: -1.4907197952270508
    3. ' False' → logprob: -2.240719795227051
    4. ' '' → logprob: -2.365719795227051
    5. ' not' → logprob: -3.240719795227051
    6. ' True' → logprob: -3.865719795227051
    7. 'True' → logprob: -3.865719795227051
    8. '_' → logprob: -4.115719795227051
    9. 'not' → logprob: -4.615719795227051
    10. ' ' → logprob: -4.740719795227051

Token 2823: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03348086401820183
    2. 'result' → logprob: -3.9084808826446533
    3. 'un' → logprob: -5.408480644226074
    4. 'output' → logprob: -6.033480644226074
    5. '#' → logprob: -6.533480644226074
    6. 'for' → logprob: -6.658480644226074
    7. 'marked' → logprob: -7.533480644226074
    8. ' result' → logprob: -8.283480644226074
    9. 'out' → logprob: -8.408480644226074
    10. 'marks' → logprob: -8.533480644226074

Token 2824: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006943171378225088
    2. 'for' → logprob: -5.256943225860596
    3. ' for' → logprob: -6.881943225860596
    4. '   ' → logprob: -8.381942749023438
    5. '```' → logprob: -9.256942749023438
    6. 'un' → logprob: -9.631942749023438
    7. '        
' → logprob: -9.756942749023438
    8. '           ' → logprob: -10.131942749023438
    9. 'indent' → logprob: -10.381942749023438
    10. '#' → logprob: -10.506942749023438

Token 2825: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056537460535764694
    2. 'un' → logprob: -3.306537389755249
    3. 'for' → logprob: -4.306537628173828
    4. '#' (adapté à ' #') → logprob: -6.806537628173828
    5. '   ' → logprob: -7.056537628173828
    6. ' for' → logprob: -7.181537628173828
    7. 'v' → logprob: -8.056537628173828
    8. 'marked' → logprob: -8.306537628173828
    9. '        
' → logprob: -8.431537628173828
    10. ' un' → logprob: -8.556537628173828

Token 2826: ' We'll' (ID: 46830)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06641777604818344
    2. 'for' → logprob: -3.066417694091797
    3. 'un' → logprob: -4.691417694091797
    4. 'i' → logprob: -5.191417694091797
    5. ' for' → logprob: -7.566417694091797
    6. '#' → logprob: -7.816417694091797
    7. 'prev' → logprob: -7.816417694091797
    8. '   ' → logprob: -7.941417694091797
    9. 'v' → logprob: -7.941417694091797
    10. '        
' → logprob: -8.316417694091797

Token 2827: ' store' (ID: 4897)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5308689475059509
    2. '       ' → logprob: -1.7808690071105957
    3. ' for' → logprob: -2.2808690071105957
    4. ' i' → logprob: -3.2808690071105957
    5. 'v' → logprob: -3.5308690071105957
    6. 'i' → logprob: -3.6558690071105957
    7. '   ' → logprob: -3.9058690071105957
    8. '_' → logprob: -5.280869007110596
    9. 'n' → logprob: -5.530869007110596
    10. ' #' → logprob: -6.155869007110596

Token 2828: ' a' (ID: 261)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.015846190974116325
    2. 'vo' → logprob: -4.890846252441406
    3. '   ' → logprob: -6.140846252441406
    4. 'v' → logprob: -6.640846252441406
    5. ' un' → logprob: -6.890846252441406
    6. 'voice' → logprob: -7.640846252441406
    7. '       ' → logprob: -7.890846252441406
    8. '#' → logprob: -8.015846252441406
    9. 'result' → logprob: -8.265846252441406
    10. 'is' → logprob: -8.265846252441406

Token 2829: ' boolean' (ID: 3870)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.4994040727615356
    2. '[]' → logprob: -1.4994040727615356
    3. 'n' → logprob: -1.7494040727615356
    4. '[' → logprob: -2.499403953552246
    5. 'list' → logprob: -2.749403953552246
    6. 'pp' → logprob: -3.124403953552246
    7. 'result' → logprob: -3.749403953552246
    8. '[]
' → logprob: -3.874403953552246
    9. 'p' → logprob: -4.374403953552246
    10. '_un' → logprob: -4.499403953552246

Token 2830: ' un' (ID: 537)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7945727705955505
    2. '[' → logprob: -1.7945728302001953
    3. '_list' → logprob: -2.1695728302001953
    4. '_un' → logprob: -2.5445728302001953
    5. 'un' → logprob: -3.2945728302001953
    6. 'array' → logprob: -3.4195728302001953
    7. 'list' → logprob: -3.5445728302001953
    8. '_array' → logprob: -3.6695728302001953
    9. 's' → logprob: -4.419572830200195
    10. '_flags' → logprob: -4.419572830200195

Token 2831: 'voice' (ID: 11894)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.006151681300252676
    2. 'v' → logprob: -5.6311516761779785
    3. '_vo' → logprob: -6.6311516761779785
    4. 'voice' → logprob: -7.2561516761779785
    5. '_v' → logprob: -8.131152153015137
    6. 'voc' → logprob: -9.756152153015137
    7. 'voices' → logprob: -10.756152153015137
    8. 'vised' → logprob: -10.756152153015137
    9. '_voice' → logprob: -11.131152153015137
    10. 'vc' → logprob: -11.381152153015137

Token 2832: ' flags' (ID: 17376)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10190296173095703
    2. '_flags' → logprob: -3.101902961730957
    3. '_flag' → logprob: -3.226902961730957
    4. 's' → logprob: -5.851902961730957
    5. '_mask' → logprob: -6.101902961730957
    6. 'ed' → logprob: -6.726902961730957
    7. '_list' → logprob: -6.976902961730957
    8. '_state' → logprob: -7.476902961730957
    9. '[]' → logprob: -7.476902961730957
    10. '_d' → logprob: -7.601902961730957

Token 2833: ' per' (ID: 777)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0654809474945068
    2. '_' → logprob: -1.3154809474945068
    3. 's' → logprob: -1.6904809474945068
    4. '=' → logprob: -2.440480947494507
    5. '_un' → logprob: -3.440480947494507
    6. '_flags' → logprob: -3.440480947494507
    7. '_list' → logprob: -4.690481185913086
    8. '[' → logprob: -4.815481185913086
    9. '[]' → logprob: -4.940481185913086
    10. 'flags' → logprob: -5.190481185913086

Token 2834: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04217451438307762
    2. 'v' → logprob: -3.7921745777130127
    3. '[i' → logprob: -4.917174339294434
    4. '[' → logprob: -5.417174339294434
    5. '[v' → logprob: -6.417174339294434
    6. 'i' → logprob: -6.542174339294434
    7. ' [' → logprob: -6.542174339294434
    8. '[m' → logprob: -7.042174339294434
    9. '_m' → logprob: -8.167174339294434
    10. '   ' → logprob: -8.667174339294434

Token 2835: '
' (ID: 198)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.14351974427700043
    2. '       ' → logprob: -2.018519639968872
    3. '   ' → logprob: -8.018519401550293
    4. ' un' → logprob: -8.393519401550293
    5. '	un' → logprob: -10.268519401550293
    6. 'n' → logprob: -10.393519401550293
    7. 'flags' → logprob: -10.518519401550293
    8. '
' → logprob: -10.643519401550293
    9. 'is' → logprob: -10.643519401550293
    10. '```' → logprob: -11.143519401550293

Token 2836: '       ' (ID: 309)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.6776723265647888
    2. '       ' → logprob: -0.9276723265647888
    3. ' =' → logprob: -3.5526723861694336
    4. ' un' → logprob: -3.8026723861694336
    5. '_un' → logprob: -4.302672386169434
    6. '   ' → logprob: -4.552672386169434
    7. '_' → logprob: -4.677672386169434
    8. '
' → logprob: -6.052672386169434
    9. '=' → logprob: -6.177672386169434
    10. '	un' → logprob: -6.677672386169434

Token 2837: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' (adapté à ' un') → logprob: -0.043997958302497864
    2. '       ' → logprob: -3.4189980030059814
    3. '   ' → logprob: -4.668997764587402
    4. ' un' → logprob: -7.293997764587402
    5. '	un' → logprob: -9.293997764587402
    6. ' ' → logprob: -11.168997764587402
    7. '        
' → logprob: -11.293997764587402
    8. 'unis' → logprob: -11.418997764587402
    9. '_un' → logprob: -11.543997764587402
    10. 'voice' → logprob: -11.668997764587402

Token 2838: 'vo' (ID: 1190)
  Prédit: 'voice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'voice' → logprob: -0.060866579413414
    2. 'vo' → logprob: -3.310866594314575
    3. '_voice' → logprob: -3.935866594314575
    4. '_vo' → logprob: -6.185866355895996
    5. 'v' → logprob: -7.435866355895996
    6. '_' → logprob: -8.685866355895996
    7. 'voices' → logprob: -9.185866355895996
    8. '_v' → logprob: -9.810866355895996
    9. '.voice' → logprob: -11.560866355895996
    10. '
' → logprob: -11.935866355895996

Token 2839: 'iced' (ID: 9865)
  Prédit: 'iced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iced' → logprob: -0.3160700500011444
    2. 'ice' → logprob: -1.3160700798034668
    3. 'ic' → logprob: -6.691070079803467
    4. '_' → logprob: -6.816070079803467
    5. 'icing' → logprob: -9.441069602966309
    6. '```' → logprob: -9.816069602966309
    7. 'ices' → logprob: -9.941069602966309
    8. 'i' → logprob: -10.066069602966309
    9. '_i' → logprob: -10.566069602966309
    10. '__' → logprob: -10.941069602966309

Token 2840: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6341871619224548
    2. '=' → logprob: -0.7591871619224548
    3. '_' → logprob: -6.6341872215271
    4. 's' → logprob: -9.009186744689941
    5. '_flags' → logprob: -9.509186744689941
    6. '_=' → logprob: -10.384186744689941
    7. ' ' → logprob: -11.509186744689941
    8. '=[' → logprob: -11.634186744689941
    9. '=[]' → logprob: -12.009186744689941
    10. '   ' → logprob: -12.009186744689941

Token 2841: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002065330045297742
    2. '[n' → logprob: -6.502065181732178
    3. ' [' → logprob: -7.502065181732178
    4. '   ' → logprob: -12.127065658569336
    5. '[len' → logprob: -13.002065658569336
    6. '[i' → logprob: -14.002065658569336
    7. '[num' → logprob: -15.127065658569336
    8. '[name' → logprob: -15.127065658569336
    9. ' ' → logprob: -15.252065658569336
    10. '[N' → logprob: -15.252065658569336

Token 2842: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.320199877838604e-07
    2. ' False' → logprob: -15.0
    3. '(False' → logprob: -18.125
    4. '   ' → logprob: -19.75
    5. 'True' → logprob: -21.375
    6. '[' → logprob: -22.75
    7. '=False' → logprob: -22.875
    8. '0' → logprob: -22.875
    9. 'false' → logprob: -23.25
    10. '       ' → logprob: -23.75

Token 2843: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08815238624811172
    2. 'for' → logprob: -2.7131524085998535
    3. ']' → logprob: -4.0881524085998535
    4. '       ' → logprob: -7.4631524085998535
    5. ']*' → logprob: -7.8381524085998535
    6. ')' → logprob: -8.963151931762695
    7. '	for' → logprob: -10.213151931762695
    8. '   ' → logprob: -10.588151931762695
    9. ' ]' → logprob: -10.588151931762695
    10. '*' → logprob: -10.838151931762695

Token 2844: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011045700375689194
    2. 'len' → logprob: -9.125110626220703
    3. '(n' → logprob: -14.000110626220703
    4. ' n' → logprob: -14.500110626220703
    5. '   ' → logprob: -16.875110626220703
    6. '(len' → logprob: -17.250110626220703
    7. '```' → logprob: -17.375110626220703
    8. '`' → logprob: -19.000110626220703
    9. '	n' → logprob: -19.375110626220703
    10. ' len' → logprob: -20.000110626220703

Token 2845: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4601610600948334
    2. ' for' → logprob: -1.3351610898971558
    3. '       ' → logprob: -2.835160970687866
    4. '   ' → logprob: -3.210160970687866
    5. '
' → logprob: -5.710161209106445
    6. '	for' → logprob: -6.835161209106445
    7. '        
' → logprob: -7.335161209106445
    8. '    
' → logprob: -7.460161209106445
    9. '<|end|>' → logprob: -8.460161209106445
    10. 'def' → logprob: -8.585161209106445

Token 2846: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02628183737397194
    2. 'for' → logprob: -4.401281833648682
    3. ' for' → logprob: -4.526281833648682
    4. '   ' → logprob: -6.651281833648682
    5. ' i' → logprob: -7.401281833648682
    6. 'i' → logprob: -7.526281833648682
    7. '        
' → logprob: -8.65128231048584
    8. '        ' → logprob: -10.02628231048584
    9. '	for' → logprob: -10.02628231048584
    10. '```' → logprob: -10.15128231048584

Token 2847: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004080897197127342
    2. '       ' → logprob: -5.754080772399902
    3. 'i' → logprob: -7.254080772399902
    4. ' for' → logprob: -8.629080772399902
    5. 'v' → logprob: -11.879080772399902
    6. '```' → logprob: -12.754080772399902
    7. '#' (adapté à ' #') → logprob: -12.879080772399902
    8. '   ' → logprob: -13.504080772399902
    9. 'j' → logprob: -13.629080772399902
    10. '	for' → logprob: -14.629080772399902

Token 2848: ' Helper' (ID: 31006)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015121969394385815
    2. 'i' → logprob: -4.265121936798096
    3. '       ' → logprob: -7.015121936798096
    4. '#' → logprob: -10.765122413635254
    5. ' for' → logprob: -11.140122413635254
    6. 'prev' → logprob: -11.765122413635254
    7. 'v' → logprob: -12.265122413635254
    8. 'j' → logprob: -12.265122413635254
    9. 'idx' → logprob: -12.265122413635254
    10. '```' → logprob: -14.140122413635254

Token 2849: ':' (ID: 25)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10219025611877441
    2. 'for' → logprob: -2.9771902561187744
    3. 'i' → logprob: -4.602190017700195
    4. '
' → logprob: -4.727190017700195
    5. ' def' → logprob: -4.852190017700195
    6. ' for' → logprob: -5.352190017700195
    7. '#' → logprob: -5.477190017700195
    8. '_' → logprob: -6.477190017700195
    9. 'idx' → logprob: -6.727190017700195
    10. 'v' → logprob: -6.977190017700195

Token 2850: ' check' (ID: 2371)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24068769812583923
    2. 'for' → logprob: -1.6156877279281616
    3. '       ' → logprob: -4.990687847137451
    4. 'prev' → logprob: -5.115687847137451
    5. 'i' → logprob: -7.240687847137451
    6. '   ' → logprob: -7.865687847137451
    7. 'j' → logprob: -8.365687370300293
    8. 'v' → logprob: -8.490687370300293
    9. '#' → logprob: -8.615687370300293
    10. ' for' → logprob: -8.740687370300293

Token 2851: ' previous' (ID: 5880)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15602049231529236
    2. 'i' → logprob: -2.781020402908325
    3. 'lambda' → logprob: -3.031020402908325
    4. 'for' → logprob: -4.281020641326904
    5. '
' → logprob: -5.031020641326904
    6. 'idx' → logprob: -6.156020641326904
    7. '(lambda' → logprob: -6.406020641326904
    8. 'next' → logprob: -6.781020641326904
    9. ' lambda' → logprob: -7.281020641326904
    10. ' i' → logprob: -7.281020641326904

Token 2852: ' vowel' (ID: 165542)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1960150003433228
    2. 'v' → logprob: -1.1960150003433228
    3. '_v' → logprob: -1.9460150003433228
    4. '_vo' → logprob: -2.821014881134033
    5. '_m' → logprob: -3.321014881134033
    6. 'm' → logprob: -3.696014881134033
    7. 'idx' → logprob: -3.696014881134033
    8. 'vo' → logprob: -3.946014881134033
    9. ' =' → logprob: -4.071014881134033
    10. 'if' → logprob: -4.571014881134033

Token 2853: ' un' (ID: 537)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7316970825195312
    2. 'prev' → logprob: -1.7316970825195312
    3. '_v' → logprob: -1.9816970825195312
    4. '_prev' → logprob: -2.1066970825195312
    5. 'def' → logprob: -3.8566970825195312
    6. '       ' → logprob: -4.106697082519531
    7. 'for' → logprob: -4.481697082519531
    8. ' =' → logprob: -4.731697082519531
    9. 'idx' → logprob: -4.981697082519531
    10. '_vo' → logprob: -6.231697082519531

Token 2854: 'vo' (ID: 1190)
  Prédit: 'vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.01078734453767538
    2. '_vo' → logprob: -5.385787487030029
    3. 'v' → logprob: -6.260787487030029
    4. 'o' → logprob: -6.635787487030029
    5. 'voice' → logprob: -7.260787487030029
    6. '_' → logprob: -7.635787487030029
    7. '_v' → logprob: -7.635787487030029
    8. 'oc' → logprob: -8.135787010192871
    9. 'voc' → logprob: -8.885787010192871
    10. '_voice' → logprob: -8.885787010192871

Token 2855: 'iced' (ID: 9865)
  Prédit: 'iced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iced' → logprob: -0.0006071255193091929
    2. 'ic' → logprob: -8.62560749053955
    3. 'ice' → logprob: -9.00060749053955
    4. '   ' → logprob: -9.00060749053955
    5. 'n' → logprob: -11.00060749053955
    6. 'un' → logprob: -11.00060749053955
    7. 'icing' → logprob: -11.12560749053955
    8. '#' → logprob: -11.12560749053955
    9. 'liced' → logprob: -11.37560749053955
    10. '_' → logprob: -11.87560749053955

Token 2856: ' or' (ID: 503)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.1272619515657425
    2. '       ' → logprob: -2.2522618770599365
    3. '_prev' → logprob: -5.377262115478516
    4. 'def' → logprob: -6.002262115478516
    5. 'for' → logprob: -6.127262115478516
    6. 'previous' → logprob: -6.377262115478516
    7. 'last' → logprob: -6.627262115478516
    8. 'v' → logprob: -6.877262115478516
    9. 'p' → logprob: -8.002262115478516
    10. ' prev' → logprob: -8.752262115478516

Token 2857: ' not' (ID: 625)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.7878038883209229
    2. 'True' → logprob: -1.4128038883209229
    3. 'un' → logprob: -1.9128038883209229
    4. '(i' → logprob: -3.037803888320923
    5. 'i' → logprob: -3.412803888320923
    6. '(vo' → logprob: -3.912803888320923
    7. 'vo' → logprob: -4.287803649902344
    8. '(un' → logprob: -5.037803649902344
    9. ' False' → logprob: -5.037803649902344
    10. ' True' → logprob: -5.162803649902344

Token 2858: '
' (ID: 198)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0702507346868515
    2. '       ' → logprob: -2.8202507495880127
    3. 'previous' → logprob: -6.320250511169434
    4. 'def' → logprob: -6.320250511169434
    5. '_prev' → logprob: -6.320250511169434
    6. 'last' → logprob: -7.195250511169434
    7. 'for' → logprob: -7.320250511169434
    8. ' prev' → logprob: -7.820250511169434
    9. 'un' → logprob: -7.945250511169434
    10. '	prev' → logprob: -8.820250511169434

Token 2859: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6244562268257141
    2. 'prev' → logprob: -1.6244561672210693
    3. 'for' → logprob: -1.6244561672210693
    4. 'def' → logprob: -3.9994561672210693
    5. '```' → logprob: -3.9994561672210693
    6. '   ' → logprob: -4.749456405639648
    7. 'i' → logprob: -5.124456405639648
    8. '_prev' → logprob: -5.249456405639648
    9. '_' → logprob: -5.874456405639648
    10. ' for' → logprob: -6.124456405639648

Token 2860: ' last' (ID: 2174)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.4027160406112671
    2. 'for' → logprob: -1.527716040611267
    3. '       ' → logprob: -2.5277161598205566
    4. 'def' → logprob: -3.6527161598205566
    5. 'j' → logprob: -5.152716159820557
    6. '   ' → logprob: -7.152716159820557
    7. 'last' (adapté à ' last') → logprob: -7.277716159820557
    8. 'previous' → logprob: -7.902716159820557
    9. 'p' → logprob: -8.652715682983398
    10. 'i' → logprob: -8.902715682983398

Token 2861: '_un' (ID: 11119)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.11362258344888687
    2. '_un' → logprob: -2.3636226654052734
    3. '_vo' → logprob: -4.613622665405273
    4. '_' → logprob: -6.113622665405273
    5. '_voice' → logprob: -8.113622665405273
    6. '_u' → logprob: -8.238622665405273
    7. ' =' → logprob: -8.988622665405273
    8. '_is' → logprob: -9.113622665405273
    9. '_flag' → logprob: -9.363622665405273
    10. 'V' → logprob: -10.238622665405273

Token 2862: 'vo' (ID: 1190)
  Prédit: 'vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.03818757086992264
    2. 'voice' → logprob: -3.2881875038146973
    3. 'v' → logprob: -9.413187980651855
    4. '_vo' → logprob: -10.038187980651855
    5. '_voice' → logprob: -11.038187980651855
    6. 'vox' → logprob: -13.788187980651855
    7. ' voiced' → logprob: -14.163187980651855
    8. 'voi' → logprob: -14.413187980651855
    9. 'voc' → logprob: -14.788187980651855
    10. 'voices' → logprob: -14.913187980651855

Token 2863: 'iced' (ID: 9865)
  Prédit: 'iced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iced' → logprob: -0.000182921823579818
    2. 'ice' → logprob: -8.87518310546875
    3. 'ic' → logprob: -11.12518310546875
    4. '   ' → logprob: -12.25018310546875
    5. '#' → logprob: -12.75018310546875
    6. 'ced' → logprob: -12.75018310546875
    7. '
' → logprob: -12.87518310546875
    8. '```' → logprob: -12.87518310546875
    9. '``' → logprob: -13.87518310546875
    10. '{
' → logprob: -13.87518310546875

Token 2864: '_idx' (ID: 15257)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08178046345710754
    2. '=' → logprob: -2.706780433654785
    3. '_v' → logprob: -4.956780433654785
    4. '_index' → logprob: -5.706780433654785
    5. '_idx' → logprob: -6.831780433654785
    6. '_' → logprob: -9.331780433654785
    7. ' ' → logprob: -9.581780433654785
    8. '_flag' → logprob: -9.956780433654785
    9. 'v' → logprob: -10.581780433654785
    10. '=False' → logprob: -11.206780433654785

Token 2865: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132815659046173
    2. '=' → logprob: -1.313281536102295
    3. '=None' → logprob: -11.688282012939453
    4. '=-' → logprob: -11.688282012939453
    5. '=False' → logprob: -13.563282012939453
    6. ' ' → logprob: -14.813282012939453
    7. '_' → logprob: -15.063282012939453
    8. '=True' → logprob: -15.813282012939453
    9. ' None' → logprob: -15.938282012939453
    10. ',' → logprob: -16.063282012939453

Token 2866: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001983948517590761
    2. ' -' → logprob: -6.251984119415283
    3. 'None' → logprob: -9.876983642578125
    4. ' None' → logprob: -12.501983642578125
    5. '-none' → logprob: -16.251983642578125
    6. ' ' → logprob: -16.501983642578125
    7. '-n' → logprob: -16.501983642578125
    8. '   ' → logprob: -17.751983642578125
    9. '-s' → logprob: -17.876983642578125
    10. '  ' → logprob: -19.626983642578125

Token 2867: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '2' → logprob: -16.625
    3. ' ' → logprob: -17.0
    4. '   ' → logprob: -20.0
    5. '
' → logprob: -20.875
    6. '１' → logprob: -20.875
    7. '-' → logprob: -21.375
    8. '       ' → logprob: -22.125
    9. '۱' → logprob: -22.125
    10. '0' → logprob: -22.125

Token 2868: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12479201704263687
    2. '       ' → logprob: -2.3747920989990234
    3. ' for' → logprob: -4.999792098999023
    4. '        
' → logprob: -5.124792098999023
    5. '<|end|>' → logprob: -5.499792098999023
    6. ' 
' → logprob: -6.374792098999023
    7. 'for' → logprob: -6.749792098999023
    8. '    
' → logprob: -7.499792098999023
    9. '  
' → logprob: -7.499792098999023
    10. '<|end|>' → logprob: -7.749792098999023

Token 2869: ' far' (ID: 4150)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7180200219154358
    2. '0' → logprob: -1.593019962310791
    3. ' for' → logprob: -2.218019962310791
    4. '1' → logprob: -2.343019962310791
    5. 'i' → logprob: -2.968019962310791
    6. '       ' → logprob: -4.093019962310791
    7. ')' → logprob: -4.718019962310791
    8. 'n' → logprob: -5.343019962310791
    9. ' i' → logprob: -5.593019962310791
    10. '+' → logprob: -5.593019962310791

Token 2870: ' away' (ID: 4194)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42796820402145386
    2. '1' → logprob: -1.5529682636260986
    3. 'for' → logprob: -3.3029682636260986
    4. '       ' → logprob: -3.5529682636260986
    5. ' +' → logprob: -3.5529682636260986
    6. '```' → logprob: -4.5529680252075195
    7. '
' → logprob: -5.1779680252075195
    8. ' for' → logprob: -5.1779680252075195
    9. ')' → logprob: -5.5529680252075195
    10. '-' → logprob: -5.6779680252075195

Token 2871: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.013788280077278614
    2. ' for' → logprob: -4.388788223266602
    3. '       ' → logprob: -7.263788223266602
    4. '```' → logprob: -7.513788223266602
    5. 'i' → logprob: -10.763788223266602
    6. '   ' → logprob: -12.263788223266602
    7. '
' → logprob: -13.888788223266602
    8. 'def' → logprob: -13.888788223266602
    9. '	for' → logprob: -13.888788223266602
    10. '``' → logprob: -14.263788223266602

Token 2872: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006277978885918856
    2. 'for' → logprob: -5.131278038024902
    3. ' for' → logprob: -8.131278038024902
    4. '   ' → logprob: -10.131278038024902
    5. '```' → logprob: -11.381278038024902
    6. '           ' → logprob: -14.131278038024902
    7. '        
' → logprob: -14.381278038024902
    8. 'def' → logprob: -14.381278038024902
    9. '
' → logprob: -14.506278038024902
    10. 'i' → logprob: -15.131278038024902

Token 2873: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023552225902676582
    2. '       ' → logprob: -3.773552179336548
    3. ' for' → logprob: -8.148551940917969
    4. '```' → logprob: -11.898551940917969
    5. 'i' → logprob: -12.273551940917969
    6. '   ' → logprob: -12.398551940917969
    7. '
' → logprob: -13.648551940917969
    8. '#' (adapté à ' #') → logprob: -15.273551940917969
    9. 'import' → logprob: -15.898551940917969
    10. '	for' → logprob: -16.02355194091797

Token 2874: ' Process' (ID: 12482)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05646107718348503
    2. 'for' → logprob: -3.0564610958099365
    3. 'i' → logprob: -5.181460857391357
    4. ' for' → logprob: -6.806460857391357
    5. '   ' → logprob: -7.056460857391357
    6. ' i' → logprob: -9.306461334228516
    7. '```' → logprob: -9.431461334228516
    8. '#' → logprob: -9.931461334228516
    9. 'def' → logprob: -10.806461334228516
    10. 'idx' → logprob: -12.056461334228516

Token 2875: ' rule' (ID: 10652)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12595176696777344
    2. '       ' → logprob: -3.0009517669677734
    3. 'for' → logprob: -3.2509517669677734
    4. ' for' → logprob: -4.000951766967773
    5. ' i' → logprob: -4.500951766967773
    6. '   ' → logprob: -8.750951766967773
    7. '```' → logprob: -8.875951766967773
    8. '#' → logprob: -10.500951766967773
    9. '_' → logprob: -10.500951766967773
    10. 'idx' → logprob: -11.000951766967773

Token 2876: '1' (ID: 16)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5949728488922119
    2. '1' → logprob: -1.719972848892212
    3. '=' → logprob: -2.344972848892212
    4. '       ' → logprob: -2.719972848892212
    5. 'for' → logprob: -2.969972848892212
    6. '   ' → logprob: -4.219972610473633
    7. ' for' → logprob: -4.594972610473633
    8. '_for' → logprob: -4.594972610473633
    9. '_idx' → logprob: -5.219972610473633
    10. '_' → logprob: -5.844972610473633

Token 2877: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013632361777126789
    2. ' for' → logprob: -4.763632297515869
    3. 'for' → logprob: -5.513632297515869
    4. '   ' → logprob: -8.013632774353027
    5. '        
' → logprob: -8.638632774353027
    6. '```' → logprob: -9.013632774353027
    7. '
' → logprob: -9.138632774353027
    8. ':' → logprob: -9.888632774353027
    9. ' i' → logprob: -9.888632774353027
    10. '           ' → logprob: -10.388632774353027

Token 2878: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006226073601283133
    2. 'v' → logprob: -8.125622749328613
    3. ' i' → logprob: -8.750622749328613
    4. 'idx' → logprob: -9.250622749328613
    5. 'range' → logprob: -10.500622749328613
    6. 'un' → logprob: -11.125622749328613
    7. '_' → logprob: -11.750622749328613
    8. '_i' → logprob: -12.375622749328613
    9. 'each' → logprob: -12.375622749328613
    10. '```' → logprob: -13.500622749328613

Token 2879: ',u' (ID: 80698)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.032625794410705566
    2. 'n' → logprob: -3.657625675201416
    3. 'in' → logprob: -5.907625675201416
    4. 'for' → logprob: -6.532625675201416
    5. 'f' → logprob: -6.782625675201416
    6. 'i' → logprob: -7.657625675201416
    7. 'range' → logprob: -9.532626152038574
    8. '<n' → logprob: -9.532626152038574
    9. ' for' → logprob: -9.907626152038574
    10. ' n' → logprob: -9.907626152038574

Token 2880: ' vowels' (ID: 176245)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12574584782123566
    2. 'for' → logprob: -2.2507457733154297
    3. ' for' → logprob: -4.37574577331543
    4. '   ' → logprob: -9.00074577331543
    5. '        
' → logprob: -10.25074577331543
    6. 'i' → logprob: -10.62574577331543
    7. '
' → logprob: -10.75074577331543
    8. '	for' → logprob: -11.25074577331543
    9. '```' → logprob: -11.25074577331543
    10. 'def' → logprob: -12.00074577331543

Token 2881: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006472678505815566
    2. 'for' → logprob: -7.375647068023682
    3. ' for' → logprob: -11.50064754486084
    4. '   ' → logprob: -11.50064754486084
    5. 'def' → logprob: -15.50064754486084
    6. '        
' → logprob: -16.625646591186523
    7. '	for' → logprob: -17.000646591186523
    8. '```' → logprob: -17.125646591186523
    9. '           ' → logprob: -17.250646591186523
    10. '#' → logprob: -17.375646591186523

Token 2882: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002007987059187144
    2. 'for' → logprob: -9.000201225280762
    3. '   ' → logprob: -9.500201225280762
    4. ' for' → logprob: -13.000201225280762
    5. '```' → logprob: -15.875201225280762
    6. '           ' → logprob: -17.250200271606445
    7. '	for' → logprob: -17.375200271606445
    8. '        
' → logprob: -17.750200271606445
    9. ' ' → logprob: -18.125200271606445
    10. 'i' → logprob: -18.250200271606445

Token 2883: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1607014387845993
    2. 'for' → logprob: -1.9107013940811157
    3. ' for' → logprob: -7.910701274871826
    4. '   ' → logprob: -9.160701751708984
    5. 'i' → logprob: -12.785701751708984
    6. '```' → logprob: -13.285701751708984
    7. '	for' → logprob: -14.910701751708984
    8. '           ' → logprob: -15.785701751708984
    9. '        
' → logprob: -17.285701751708984
    10. '
' → logprob: -17.535701751708984

Token 2884: ' Note' (ID: 12225)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.252634733915329
    2. '       ' → logprob: -1.5026347637176514
    3. 'i' → logprob: -7.502634525299072
    4. ' for' → logprob: -9.00263500213623
    5. '   ' → logprob: -10.50263500213623
    6. '#' → logprob: -14.25263500213623
    7. '	for' → logprob: -14.25263500213623
    8. '```' → logprob: -14.25263500213623
    9. '        
' → logprob: -14.75263500213623
    10. ' i' → logprob: -15.00263500213623

Token 2885: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3255653381347656
    2. 'for' → logprob: -2.0755653381347656
    3. ' for' → logprob: -2.5755653381347656
    4. ':' → logprob: -2.8255653381347656
    5. '=' → logprob: -5.075565338134766
    6. ' =' → logprob: -5.325565338134766
    7. ':
' → logprob: -6.200565338134766
    8. '   ' → logprob: -6.950565338134766
    9. '        
' → logprob: -7.450565338134766
    10. '#' → logprob: -7.575565338134766

Token 2886: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17195582389831543
    2. ' for' → logprob: -2.4219558238983154
    3. '       ' → logprob: -2.6719558238983154
    4. 'i' → logprob: -9.921956062316895
    5. ' i' → logprob: -10.546956062316895
    6. '   ' → logprob: -10.921956062316895
    7. '```' → logprob: -11.171956062316895
    8. '#' → logprob: -11.796956062316895
    9. '	for' → logprob: -13.921956062316895
    10. '``' → logprob: -14.171956062316895

Token 2887: ' problem' (ID: 4792)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021821295842528343
    2. 'i' → logprob: -4.39682149887085
    3. ' for' → logprob: -5.14682149887085
    4. 'v' → logprob: -6.27182149887085
    5. '       ' → logprob: -7.27182149887085
    6. '```' → logprob: -7.89682149887085
    7. '#' → logprob: -8.396821022033691
    8. 'def' → logprob: -9.521821022033691
    9. '   ' → logprob: -10.146821022033691
    10. '
' → logprob: -10.771821022033691

Token 2888: ' says' (ID: 5003)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17983724176883698
    2. 'for' → logprob: -2.554837226867676
    3. '#' → logprob: -4.179837226867676
    4. ':' → logprob: -4.304837226867676
    5. '[i' → logprob: -4.554837226867676
    6. ' for' → logprob: -4.554837226867676
    7. 'v' → logprob: -4.929837226867676
    8. '
' → logprob: -5.054837226867676
    9. ' continues' → logprob: -5.804837226867676
    10. 'i' → logprob: -6.304837226867676

Token 2889: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.44686248898506165
    2. 'for' → logprob: -1.4468624591827393
    3. 'i' → logprob: -2.9468624591827393
    4. '       ' → logprob: -3.0718624591827393
    5. ' i' → logprob: -4.821862697601318
    6. 'v' → logprob: -4.946862697601318
    7. '#' → logprob: -5.571862697601318
    8. '   ' → logprob: -6.446862697601318
    9. '```' → logprob: -6.446862697601318
    10. '...' → logprob: -7.196862697601318

Token 2890: ' vowel' (ID: 165542)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9474124312400818
    2. 'for' → logprob: -1.4474124908447266
    3. '       ' → logprob: -1.8224124908447266
    4. 'v' → logprob: -2.0724124908447266
    5. ' for' → logprob: -2.6974124908447266
    6. '   ' → logprob: -5.072412490844727
    7. ' i' → logprob: -5.322412490844727
    8. '#' → logprob: -6.197412490844727
    9. '```' → logprob: -6.197412490844727
    10. 'if' → logprob: -6.447412490844727

Token 2891: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0987039804458618
    2. ' =' → logprob: -1.5987039804458618
    3. 'v' → logprob: -2.3487038612365723
    4. '=' → logprob: -2.8487038612365723
    5. ' ==' → logprob: -3.2237038612365723
    6. ' in' → logprob: -3.4737038612365723
    7. 'idx' → logprob: -3.7237038612365723
    8. 'for' → logprob: -3.8487038612365723
    9. 'in' → logprob: -3.9737038612365723
    10. '_idx' → logprob: -4.223703861236572

Token 2892: ' un' (ID: 537)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0865442752838135
    2. ''' → logprob: -1.2115442752838135
    3. ' '' → logprob: -2.2115442752838135
    4. ''i' → logprob: -2.4615442752838135
    5. ' in' → logprob: -3.3365442752838135
    6. 'in' → logprob: -3.7115442752838135
    7. ' i' → logprob: -3.7115442752838135
    8. ')' → logprob: -4.211544036865234
    9. ' not' → logprob: -4.461544036865234
    10. 'v' → logprob: -4.586544036865234

Token 2893: 'vo' (ID: 1190)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3697480857372284
    2. 'vo' → logprob: -1.3697481155395508
    3. '_' → logprob: -3.244748115539551
    4. '_v' → logprob: -4.869748115539551
    5. 'i' → logprob: -5.869748115539551
    6. '_vo' → logprob: -5.869748115539551
    7. ' ' → logprob: -7.244748115539551
    8. '   ' → logprob: -7.369748115539551
    9. '       ' → logprob: -8.49474811553955
    10. '_i' → logprob: -8.61974811553955

Token 2894: 'iced' (ID: 9865)
  Prédit: 'iced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iced' → logprob: -0.058895692229270935
    2. 'ic' → logprob: -2.9338955879211426
    3. '```' → logprob: -6.558895587921143
    4. 'i' → logprob: -7.183895587921143
    5. '   ' → logprob: -7.308895587921143
    6. '``' → logprob: -8.6838960647583
    7. '#' → logprob: -8.8088960647583
    8. 'ice' → logprob: -8.8088960647583
    9. ' ' → logprob: -9.1838960647583
    10. '`' → logprob: -9.4338960647583

Token 2895: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6791400909423828
    2. '       ' → logprob: -1.4291400909423828
    3. 'for' → logprob: -1.4291400909423828
    4. '   ' → logprob: -5.679140090942383
    5. '        
' → logprob: -6.554140090942383
    6. '#' → logprob: -7.054140090942383
    7. ' ' → logprob: -7.054140090942383
    8. ' in' → logprob: -7.179140090942383
    9. ' if' → logprob: -7.304140090942383
    10. '
' → logprob: -7.304140090942383

Token 2896: ':
' (ID: 734)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7825306057929993
    2. 'v' → logprob: -1.7825305461883545
    3. ' mor' → logprob: -2.0325305461883545
    4. 'm' → logprob: -2.4075305461883545
    5. ' i' → logprob: -2.6575305461883545
    6. 'un' → logprob: -3.4075305461883545
    7. 'c' → logprob: -4.282530784606934
    8. ' un' → logprob: -4.907530784606934
    9. ' c' → logprob: -5.407530784606934
    10. ' (' → logprob: -5.657530784606934

Token 2897: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4444417357444763
    2. 'i' → logprob: -1.694441795349121
    3. ' i' → logprob: -2.069441795349121
    4. '#' → logprob: -4.444441795349121
    5. '           ' → logprob: -4.569441795349121
    6. 'm' → logprob: -4.819441795349121
    7. 'v' → logprob: -5.444441795349121
    8. '   ' → logprob: -5.569441795349121
    9. ' True' → logprob: -6.694441795349121
    10. '(i' → logprob: -6.819441795349121

Token 2898: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.239189624786377
    2. 'i' → logprob: -1.364189624786377
    3. ' i' → logprob: -1.614189624786377
    4. '#' (adapté à ' #') → logprob: -1.614189624786377
    5. '           ' → logprob: -4.239189624786377
    6. ' #' → logprob: -4.489189624786377
    7. ' True' → logprob: -4.864189624786377
    8. 'True' → logprob: -4.989189624786377
    9. 'm' → logprob: -5.489189624786377
    10. 'v' → logprob: -5.614189624786377

Token 2899: ' "' (ID: 392)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.38304591178894043
    2. 'c' → logprob: -2.0080459117889404
    3. 'm' → logprob: -2.5080459117889404
    4. 'i' → logprob: -2.7580459117889404
    5. '#' → logprob: -4.5080461502075195
    6. 'True' → logprob: -4.5080461502075195
    7. '   ' → logprob: -5.2580461502075195
    8. '       ' → logprob: -5.7580461502075195
    9. ' True' → logprob: -6.5080461502075195
    10. ' mor' → logprob: -6.7580461502075195

Token 2900: '母' (ID: 37600)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.075756311416626
    2. 'i' → logprob: -1.325756311416626
    3. '       ' → logprob: -1.825756311416626
    4. 'v' → logprob: -2.200756311416626
    5. ' for' → logprob: -2.700756311416626
    6. 'for' → logprob: -4.075756072998047
    7. ')' → logprob: -4.700756072998047
    8. '           ' → logprob: -5.825756072998047
    9. ' True' → logprob: -5.825756072998047
    10. '   ' → logprob: -5.825756072998047

Token 2901: '音' (ID: 15082)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4429242610931396
    2. ')' → logprob: -1.5679242610931396
    3. '   ' → logprob: -2.5679242610931396
    4. ']' → logprob: -2.6929242610931396
    5. ')
' → logprob: -3.0679242610931396
    6. 'i' → logprob: -3.1929242610931396
    7. '[' → logprob: -3.6929242610931396
    8. 's' → logprob: -3.9429242610931396
    9. '=' → logprob: -3.9429242610931396
    10. 'a' → logprob: -3.9429242610931396

Token 2902: '「' (ID: 6055)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.012136697769165
    2. 'が' → logprob: -1.887136697769165
    3. ' ==' → logprob: -2.512136697769165
    4. ']' → logprob: -3.137136697769165
    5. 's' → logprob: -3.637136697769165
    6. ' in' → logprob: -3.637136697769165
    7. '   ' → logprob: -3.762136697769165
    8. '[' → logprob: -3.762136697769165
    9. '[m' → logprob: -3.762136697769165
    10. '       ' → logprob: -3.887136697769165

Token 2903: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010047290474176407
    2. 'い' → logprob: -5.635047435760498
    3. ''' → logprob: -5.760047435760498
    4. ''i' → logprob: -6.135047435760498
    5. 'a' → logprob: -8.01004695892334
    6. ' i' → logprob: -8.88504695892334
    7. '"' → logprob: -9.38504695892334
    8. '`' → logprob: -9.63504695892334
    9. 'e' → logprob: -9.88504695892334
    10. '['' → logprob: -10.38504695892334

Token 2904: '」「' (ID: 50032)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8317583203315735
    2. '」' → logprob: -1.3317582607269287
    3. '」「' → logprob: -2.9567582607269287
    4. '」と' → logprob: -3.2067582607269287
    5. ',' → logprob: -3.5817582607269287
    6. '"' → logprob: -3.5817582607269287
    7. '",' → logprob: -3.8317582607269287
    8. '","' → logprob: -3.9567582607269287
    9. '"]' → logprob: -4.081758499145508
    10. '']' → logprob: -4.081758499145508

Token 2905: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.001409282092936337
    2. ''u' → logprob: -6.87640905380249
    3. '」' → logprob: -8.626409530639648
    4. '"' → logprob: -9.751409530639648
    5. ''' → logprob: -9.876409530639648
    6. '"]' → logprob: -10.751409530639648
    7. ',u' → logprob: -11.751409530639648
    8. ',' → logprob: -12.126409530639648
    9. '']' → logprob: -12.251409530639648
    10. 'う' → logprob: -12.251409530639648

Token 2906: '」の' (ID: 90255)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.45482707023620605
    2. ']' → logprob: -2.204827070236206
    3. '']' → logprob: -2.204827070236206
    4. '」' → logprob: -2.454827070236206
    5. '```' → logprob: -4.829827308654785
    6. '」の' → logprob: -5.329827308654785
    7. '`]' → logprob: -5.704827308654785
    8. '"]
' → logprob: -5.829827308654785
    9. 'if' → logprob: -5.829827308654785
    10. ''' → logprob: -6.079827308654785

Token 2907: '短' (ID: 40730)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7059993147850037
    2. 'i' → logprob: -1.8309993743896484
    3. ' in' → logprob: -2.3309993743896484
    4. 'in' → logprob: -2.8309993743896484
    5. 'for' → logprob: -2.9559993743896484
    6. 'm' → logprob: -3.8309993743896484
    7. '"' → logprob: -3.9559993743896484
    8. ' for' → logprob: -4.080999374389648
    9. '#' → logprob: -4.580999374389648
    10. 'un' → logprob: -5.330999374389648

Token 2908: '音' (ID: 15082)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.831506609916687
    2. '```' → logprob: -2.2065067291259766
    3. ' '' → logprob: -2.3315067291259766
    4. '"' → logprob: -2.4565067291259766
    5. ' ' → logprob: -2.8315067291259766
    6. '   ' → logprob: -3.2065067291259766
    7. 'い' → logprob: -3.9565067291259766
    8. ' "' → logprob: -4.331506729125977
    9. '）' → logprob: -4.331506729125977
    10. '']' → logprob: -4.331506729125977

Token 2909: 'について' (ID: 94408)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.301589846611023
    2. ']' → logprob: -1.801589846611023
    3. ':
' → logprob: -2.3015899658203125
    4. ' in' → logprob: -2.6765899658203125
    5. ' ==' → logprob: -3.0515899658203125
    6. ' and' → logprob: -3.0515899658203125
    7. '           ' → logprob: -3.4265899658203125
    8. ' if' → logprob: -3.6765899658203125
    9. '][' → logprob: -3.8015899658203125
    10. '   ' → logprob: -4.0515899658203125

Token 2910: '，' (ID: 979)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3910999298095703
    2. ' for' → logprob: -1.5160999298095703
    3. ' in' → logprob: -2.0160999298095703
    4. 'in' → logprob: -2.6410999298095703
    5. '       ' → logprob: -2.6410999298095703
    6. 'i' → logprob: -2.7660999298095703
    7. 'range' → logprob: -2.8910999298095703
    8. ' i' → logprob: -3.0160999298095703
    9. ' range' → logprob: -3.3910999298095703
    10. ')' → logprob: -4.51609992980957

Token 2911: 'その' (ID: 32894)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43048498034477234
    2. 'i' → logprob: -1.3054850101470947
    3. '       ' → logprob: -3.5554850101470947
    4. ' for' → logprob: -3.8054850101470947
    5. 'v' → logprob: -4.430484771728516
    6. 'range' → logprob: -4.805484771728516
    7. 'True' → logprob: -6.055484771728516
    8. ' i' → logprob: -6.430484771728516
    9. '   ' → logprob: -7.055484771728516
    10. ')' → logprob: -7.055484771728516

Token 2912: '母' (ID: 37600)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.29998618364334106
    2. 'v' → logprob: -1.6749861240386963
    3. '前' → logprob: -4.299986362457275
    4. 'm' → logprob: -4.549986362457275
    5. 'vo' → logprob: -4.799986362457275
    6. 'prev' → logprob: -5.174986362457275
    7. 'for' → logprob: -5.549986362457275
    8. 'c' → logprob: -5.674986362457275
    9. ' i' → logprob: -5.674986362457275
    10. 'n' → logprob: -5.674986362457275

Token 2913: '音' (ID: 15082)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5515324473381042
    2. 'for' → logprob: -1.551532506942749
    3. 'v' → logprob: -2.176532506942749
    4. 'if' → logprob: -3.426532506942749
    5. ']' → logprob: -3.926532506942749
    6. ' for' → logprob: -4.42653226852417
    7. '   ' → logprob: -4.92653226852417
    8. '```' → logprob: -5.30153226852417
    9. '#' → logprob: -5.80153226852417
    10. '=' → logprob: -5.92653226852417

Token 2914: 'が' (ID: 6632)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.3106200695037842
    2. ' in' → logprob: -1.9356200695037842
    3. 'が' → logprob: -2.060620069503784
    4. '       ' → logprob: -2.810620069503784
    5. '==' → logprob: -3.060620069503784
    6. '   ' → logprob: -3.060620069503784
    7. ']' → logprob: -3.060620069503784
    8. 'の' → logprob: -3.310620069503784
    9. ' ==' → logprob: -3.435620069503784
    10. 'if' → logprob: -3.685620069503784

Token 2915: '無' (ID: 10205)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.32156047224998474
    2. 'i' → logprob: -1.6965605020523071
    3. 'v' → logprob: -3.6965603828430176
    4. 'm' → logprob: -3.9465603828430176
    5. 'in' → logprob: -4.196560382843018
    6. 'un' → logprob: -4.321560382843018
    7. '0' → logprob: -5.446560382843018
    8. 'mor' → logprob: -6.321560382843018
    9. ' vo' → logprob: -6.571560382843018
    10. 'n' → logprob: -6.571560382843018

Token 2916: '声' (ID: 26968)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0642141103744507
    2. '
' → logprob: -2.1892142295837402
    3. 'の' → logprob: -2.4392142295837402
    4. 'vo' → logprob: -2.6892142295837402
    5. '声' → logprob: -3.1892142295837402
    6. '```' → logprob: -3.5642142295837402
    7. '"' → logprob: -3.6892142295837402
    8. '　' → logprob: -3.6892142295837402
    9. '空' → logprob: -3.8142142295837402
    10. ')' → logprob: -3.9392142295837402

Token 2917: '子' (ID: 7407)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.42596301436424255
    2. '_' → logprob: -2.3009629249572754
    3. ']' → logprob: -2.6759629249572754
    4. 'の' → logprob: -3.9259629249572754
    5. '_con' → logprob: -3.9259629249572754
    6. '   ' → logprob: -4.175962924957275
    7. '```' → logprob: -4.175962924957275
    8. ']_' → logprob: -4.550962924957275
    9. '       ' → logprob: -4.675962924957275
    10. 'm' → logprob: -4.675962924957275

Token 2918: '音' (ID: 15082)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.998380720615387
    2. 'con' → logprob: -1.4983806610107422
    3. 'if' → logprob: -1.4983806610107422
    4. ']' → logprob: -3.248380661010742
    5. '       ' → logprob: -4.123380661010742
    6. 'oc' → logprob: -4.248380661010742
    7. ']
' → logprob: -4.373380661010742
    8. '   ' → logprob: -4.498380661010742
    9. 'の' → logprob: -5.248380661010742
    10. ')' → logprob: -5.373380661010742

Token 2919: 'には' (ID: 68857)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'の' → logprob: -1.055858850479126
    2. 'と' → logprob: -1.930858850479126
    3. 'で' → logprob: -2.430858850479126
    4. 'が' → logprob: -2.680858850479126
    5. ']' → logprob: -2.930858850479126
    6. 'を' → logprob: -2.930858850479126
    7. 'に' → logprob: -3.680858850479126
    8. ' and' → logprob: -3.805858850479126
    9. 'in' → logprob: -3.930858850479126
    10. ' in' → logprob: -4.055858612060547

Token 2920: 'さ' (ID: 7500)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1423381567001343
    2. ' '' → logprob: -1.3923381567001343
    3. ' and' → logprob: -1.8923381567001343
    4. ' not' → logprob: -2.392338275909424
    5. ' (' → logprob: -3.142338275909424
    6. ' True' → logprob: -4.267338275909424
    7. '_' → logprob: -4.392338275909424
    8. ' ' → logprob: -4.392338275909424
    9. '"' → logprob: -4.392338275909424
    10. 'not' → logprob: -5.017338275909424

Token 2921: 'ま' (ID: 5042)
  Prédit: 'ま'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ま' → logprob: -0.2756415903568268
    2. 'さ' → logprob: -1.5256415605545044
    3. 'り' → logprob: -5.025641441345215
    4. 'ら' → logprob: -5.400641441345215
    5. ''' → logprob: -5.650641441345215
    6. '           ' → logprob: -5.900641441345215
    7. 'か' → logprob: -6.025641441345215
    8. '       ' → logprob: -7.775641441345215
    9. '\xe3\x82' → logprob: -7.775641441345215
    10. 'れ' → logprob: -7.900641441345215

Token 2922: 'れ' (ID: 9472)
  Prédit: 'ま'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ま' → logprob: -0.7541363835334778
    2. 'れ' → logprob: -1.754136323928833
    3. 'れて' → logprob: -1.754136323928833
    4. 'さ' → logprob: -2.379136323928833
    5. 'り' → logprob: -3.754136323928833
    6. '           ' → logprob: -3.754136323928833
    7. 'ら' → logprob: -4.004136562347412
    8. '       ' → logprob: -4.629136562347412
    9. 'に' → logprob: -6.004136562347412
    10. '```' → logprob: -6.129136562347412

Token 2923: 'た' (ID: 5598)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5241783857345581
    2. '       ' → logprob: -2.5241785049438477
    3. 'れ' → logprob: -2.5241785049438477
    4. 'れて' → logprob: -3.3991785049438477
    5. '           ' → logprob: -3.5241785049438477
    6. 'd' → logprob: -3.8991785049438477
    7. 'if' → logprob: -3.8991785049438477
    8. '=' → logprob: -4.149178504943848
    9. 'て' → logprob: -4.149178504943848
    10. 'た' → logprob: -4.774178504943848

Token 2924: 'と' (ID: 5330)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7031503915786743
    2. ':
' → logprob: -2.0781502723693848
    3. 'in' → logprob: -2.4531502723693848
    4. ' in' → logprob: -2.5781502723693848
    5. 'i' → logprob: -2.9531502723693848
    6. '       ' → logprob: -3.0781502723693848
    7. '```' → logprob: -3.0781502723693848
    8. ' and' → logprob: -3.2031502723693848
    9. ':' → logprob: -3.2031502723693848
    10. ' for' → logprob: -3.3281502723693848

Token 2925: 'き' (ID: 11852)
  Prédit: 'き'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'き' → logprob: -0.18728584051132202
    2. 'i' → logprob: -3.687285900115967
    3. '```' → logprob: -3.812285900115967
    4. 'り' → logprob: -4.062285900115967
    5. 'れ' → logprob: -4.312285900115967
    6. 'け' → logprob: -4.437285900115967
    7. 'た' → logprob: -4.812285900115967
    8. '_' → logprob: -4.812285900115967
    9. 'て' → logprob: -4.812285900115967
    10. 'か' → logprob: -4.937285900115967

Token 2926: '，' (ID: 979)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08315581828355789
    2. 'for' → logprob: -3.583155870437622
    3. ' for' → logprob: -3.833155870437622
    4. ' and' → logprob: -4.958155632019043
    5. ' or' → logprob: -5.583155632019043
    6. '
' → logprob: -5.708155632019043
    7. '#' → logprob: -6.208155632019043
    8. 'if' → logprob: -6.708155632019043
    9. ' if' → logprob: -6.833155632019043
    10. 'i' → logprob: -7.083155632019043

Token 2927: '"
' (ID: 1092)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4359103739261627
    2. ' for' → logprob: -1.6859103441238403
    3. '       ' → logprob: -1.9359103441238403
    4. 'i' → logprob: -4.685910224914551
    5. ' i' → logprob: -5.185910224914551
    6. '
' → logprob: -5.810910224914551
    7. '#' → logprob: -6.185910224914551
    8. ')' → logprob: -6.810910224914551
    9. '```' → logprob: -8.06091022491455
    10. '        
' → logprob: -8.18591022491455

Token 2928: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04426087811589241
    2. ' for' → logprob: -4.0442609786987305
    3. '           ' → logprob: -4.7942609786987305
    4. ' if' → logprob: -5.6692609786987305
    5. 'for' → logprob: -5.7942609786987305
    6. ' continue' → logprob: -6.1692609786987305
    7. ' ' → logprob: -6.5442609786987305
    8. ' (' → logprob: -6.7942609786987305
    9. '        
' → logprob: -7.0442609786987305
    10. '               ' → logprob: -7.1692609786987305

Token 2929: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10672326385974884
    2. ' for' → logprob: -3.2317233085632324
    3. 'for' → logprob: -3.3567233085632324
    4. '#' (adapté à ' #') → logprob: -3.8567233085632324
    5. '        
' → logprob: -7.106723308563232
    6. '   ' → logprob: -7.481723308563232
    7. ' and' → logprob: -7.481723308563232
    8. ' continue' → logprob: -7.731723308563232
    9. ' i' → logprob: -7.856723308563232
    10. ' #' → logprob: -7.981723308563232

Token 2930: ' "' (ID: 392)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9556230306625366
    2. ' for' → logprob: -1.2056230306625366
    3. 'for' → logprob: -2.080623149871826
    4. ' if' → logprob: -3.080623149871826
    5. 'i' → logprob: -3.455623149871826
    6. '#' → logprob: -3.705623149871826
    7. ' i' → logprob: -3.830623149871826
    8. 'if' → logprob: -3.830623149871826
    9. '           ' → logprob: -4.580623149871826
    10. 'v' → logprob: -5.705623149871826

Token 2931: 'また' (ID: 34803)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.4927645921707153
    2. '[' → logprob: -1.8677645921707153
    3. '[i' → logprob: -2.242764472961426
    4. 'if' → logprob: -2.492764472961426
    5. '       ' → logprob: -2.492764472961426
    6. '[
' → logprob: -2.492764472961426
    7. ':' → logprob: -3.117764472961426
    8. ' if' → logprob: -3.242764472961426
    9. 'for' → logprob: -3.742764472961426
    10. ''' → logprob: -4.242764472961426

Token 2932: 'は' (ID: 5205)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5814686417579651
    2. ' i' → logprob: -1.7064685821533203
    3. '       ' → logprob: -2.3314685821533203
    4. 'if' → logprob: -2.8314685821533203
    5. ' if' → logprob: -3.8314685821533203
    6. ' (' → logprob: -4.20646858215332
    7. '(i' → logprob: -4.20646858215332
    8. '           ' → logprob: -4.58146858215332
    9. '   ' → logprob: -4.70646858215332
    10. '#' → logprob: -4.70646858215332

Token 2933: '無' (ID: 10205)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09114378690719604
    2. ' i' → logprob: -2.841143846511841
    3. 'm' → logprob: -4.216143608093262
    4. '(i' → logprob: -5.341143608093262
    5. ' mor' → logprob: -6.341143608093262
    6. '(' → logprob: -6.591143608093262
    7. ' (' → logprob: -6.716143608093262
    8. '       ' → logprob: -6.966143608093262
    9. 'next' → logprob: -7.591143608093262
    10. '   ' → logprob: -7.591143608093262

Token 2934: '声' (ID: 26968)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.5970633625984192
    2. 'oc' → logprob: -1.2220633029937744
    3. 'o' → logprob: -1.9720633029937744
    4. 'ic' → logprob: -5.9720635414123535
    5. '   ' → logprob: -6.0970635414123535
    6. '       ' → logprob: -6.3470635414123535
    7. 'i' → logprob: -6.4720635414123535
    8. 'oce' → logprob: -6.8470635414123535
    9. '
' → logprob: -7.4720635414123535
    10. ')' → logprob: -7.9095635414123535

Token 2935: '子' (ID: 7407)
  Prédit: '_con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.344795823097229
    2. '_v' → logprob: -2.2197957038879395
    3. 'v' → logprob: -2.5947957038879395
    4. 'con' → logprob: -2.8447957038879395
    5. ' conson' → logprob: -4.3447957038879395
    6. '_m' → logprob: -4.7197957038879395
    7. '_' → logprob: -5.0947957038879395
    8. ')' → logprob: -5.4697957038879395
    9. '   ' → logprob: -5.5947957038879395
    10. '       ' → logprob: -5.5947957038879395

Token 2936: '音' (ID: 15082)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028502207249403
    2. '_con' → logprob: -4.153501987457275
    3. ' _' → logprob: -4.778501987457275
    4. ''' → logprob: -6.653501987457275
    5. '_
' → logprob: -7.653501987457275
    6. 'con' → logprob: -7.778501987457275
    7. '"' → logprob: -8.153502464294434
    8. ')' → logprob: -8.528502464294434
    9. '_m' → logprob: -9.028502464294434
    10. 'm' → logprob: -9.403502464294434

Token 2937: 'の' (ID: 3385)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.4950636625289917
    2. '[i' → logprob: -2.2450637817382812
    3. 'and' → logprob: -2.6200637817382812
    4. 'if' → logprob: -2.7450637817382812
    5. ':
' → logprob: -3.1200637817382812
    6. '       ' → logprob: -3.1200637817382812
    7. '[' → logprob: -3.1200637817382812
    8. 'in' → logprob: -3.2450637817382812
    9. ':' → logprob: -3.2450637817382812
    10. 'と' → logprob: -3.4950637817382812

Token 2938: '直' (ID: 9455)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4211413860321045
    2. 'm' → logprob: -3.0461413860321045
    3. 'next' → logprob: -3.2961413860321045
    4. '前' → logprob: -3.2961413860321045
    5. '次' → logprob: -3.5461413860321045
    6. '1' → logprob: -3.5461413860321045
    7. ')' → logprob: -3.6711413860321045
    8. '#' → logprob: -4.171141624450684
    9. 'if' → logprob: -4.296141624450684
    10. ' ' → logprob: -4.546141624450684

Token 2939: '後' (ID: 27379)
  Prédit: '後'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '後' → logprob: -0.011738711968064308
    2. '前' → logprob: -4.5117387771606445
    3. '#' → logprob: -8.261738777160645
    4. '下' → logprob: -9.511738777160645
    5. '\xe9\x9a' → logprob: -9.511738777160645
    6. '続' → logprob: -10.011738777160645
    7. '接' → logprob: -10.136738777160645
    8. 'ち' → logprob: -10.511738777160645
    9. 'following' → logprob: -11.136738777160645
    10. 'Following' → logprob: -11.261738777160645

Token 2940: 'で' (ID: 4344)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.41042450070381165
    2. 'and' → logprob: -1.4104244709014893
    3. '       ' → logprob: -3.1604244709014893
    4. 'が' → logprob: -4.785424709320068
    5. ' or' → logprob: -5.035424709320068
    6. 'と' → logprob: -5.160424709320068
    7. 'の' → logprob: -5.285424709320068
    8. '==' → logprob: -5.410424709320068
    9. '           ' → logprob: -6.285424709320068
    10. 'また' → logprob: -6.410424709320068

Token 2941: 'しか' (ID: 46105)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5946345925331116
    2. 'm' → logprob: -2.969634532928467
    3. 'u' → logprob: -3.344634532928467
    4. '続' → logprob: -3.344634532928467
    5. 'n' → logprob: -3.469634532928467
    6. '(' → logprob: -3.469634532928467
    7. 'す' → logprob: -3.969634532928467
    8. '#' → logprob: -3.969634532928467
    9. 'v' → logprob: -4.094634532928467
    10. 'True' → logprob: -4.094634532928467

Token 2942: 'も' (ID: 8446)
  Prédit: 'な'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'な' → logprob: -1.5039985179901123
    2. 'す' → logprob: -1.7539985179901123
    3. 'ない' → logprob: -1.8789985179901123
    4. 'た' → logprob: -2.1289985179901123
    5. 'ら' → logprob: -2.6289985179901123
    6. 'い' → logprob: -3.5039985179901123
    7. '続' → logprob: -3.7539985179901123
    8. 'り' → logprob: -3.7539985179901123
    9. 'ありません' → logprob: -4.003998756408691
    10. '```' → logprob: -4.003998756408691

Token 2943: '語' (ID: 40909)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12100543826818466
    2. '(i' → logprob: -2.4960055351257324
    3. ' (' → logprob: -5.246005535125732
    4. '(' → logprob: -5.246005535125732
    5. ' i' → logprob: -5.496005535125732
    6. '((' → logprob: -5.621005535125732
    7. '(next' → logprob: -5.746005535125732
    8. 'next' → logprob: -5.996005535125732
    9. '(
' → logprob: -6.496005535125732
    10. 'len' → logprob: -6.996005535125732

Token 2944: '句' (ID: 48801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6803135871887207
    2. '=' → logprob: -1.9303135871887207
    3. 'if' → logprob: -2.5553135871887207
    4. '==' → logprob: -2.6803135871887207
    5. '           ' → logprob: -3.8053135871887207
    6. '[i' → logprob: -4.180313587188721
    7. ' ==' → logprob: -4.180313587188721
    8. '続' → logprob: -4.680313587188721
    9. '[' → logprob: -4.805313587188721
    10. '_' → logprob: -5.055313587188721

Token 2945: 'の' (ID: 3385)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5541688203811646
    2. '       ' → logprob: -1.6791688203811646
    3. '[' → logprob: -2.304168701171875
    4. '==' → logprob: -3.429168701171875
    5. ':
' → logprob: -4.304168701171875
    6. '[
' → logprob: -4.429168701171875
    7. ' ==' → logprob: -4.679168701171875
    8. '[j' → logprob: -4.929168701171875
    9. '           ' → logprob: -5.054168701171875
    10. '=' → logprob: -5.304168701171875

Token 2946: '末' (ID: 56534)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5057839155197144
    2. 'i' → logprob: -1.2557839155197144
    3. '終' → logprob: -3.380784034729004
    4. 'end' → logprob: -4.755784034729004
    5. '末' → logprob: -4.880784034729004
    6. '#' → logprob: -4.880784034729004
    7. 'n' → logprob: -5.005784034729004
    8. 'length' → logprob: -5.005784034729004
    9. '```' → logprob: -5.255784034729004
    10. '   ' → logprob: -5.755784034729004

Token 2947: '尾' (ID: 59728)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.709867238998413
    2. '端' → logprob: -1.834867238998413
    3. 'n' → logprob: -2.084867238998413
    4. 'nd' → logprob: -2.209867238998413
    5. 'わ' → logprob: -2.834867238998413
    6. '点' → logprob: -3.459867238998413
    7. '尾' → logprob: -3.584867238998413
    8. 'れ' → logprob: -3.834867238998413
    9. 'ん' → logprob: -3.834867238998413
    10. '0' → logprob: -4.209867477416992

Token 2948: 'に' (ID: 5280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28369224071502686
    2. 'if' → logprob: -2.7836923599243164
    3. '[i' → logprob: -3.2836923599243164
    4. ' if' → logprob: -3.4086923599243164
    5. ':
' → logprob: -3.7836923599243164
    6. '           ' → logprob: -4.033692359924316
    7. ' and' → logprob: -4.658692359924316
    8. '   ' → logprob: -4.783692359924316
    9. ':' → logprob: -5.033692359924316
    10. '+' → logprob: -5.033692359924316

Token 2949: 'ある' (ID: 73977)
  Prédit: 'な'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'な' → logprob: -1.4170781373977661
    2. ''' → logprob: -2.1670780181884766
    3. '==' → logprob: -2.2920780181884766
    4. 'i' → logprob: -2.2920780181884766
    5. ':' → logprob: -3.2920780181884766
    6. 'なる' → logprob: -3.5420780181884766
    7. '続' → logprob: -3.5420780181884766
    8. '1' → logprob: -3.6670780181884766
    9. ' ==' → logprob: -3.7920780181884766
    10. ':
' → logprob: -3.7920780181884766

Token 2950: 'と' (ID: 5330)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3577262163162231
    2. '       ' → logprob: -1.6077262163162231
    3. ':
' → logprob: -1.7327262163162231
    4. 'for' → logprob: -2.8577260971069336
    5. ' if' → logprob: -2.9827260971069336
    6. '[i' → logprob: -3.1077260971069336
    7. '+' → logprob: -3.3577260971069336
    8. ':' → logprob: -3.9827260971069336
    9. '   ' → logprob: -4.107726097106934
    10. 'i' → logprob: -4.232726097106934

Token 2951: 'き' (ID: 11852)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8234585523605347
    2. 'i' → logprob: -1.8234585523605347
    3. '```' → logprob: -2.448458671569824
    4. '1' → logprob: -2.573458671569824
    5. '       ' → logprob: -2.823458671569824
    6. '=' → logprob: -3.073458671569824
    7. ':
' → logprob: -3.198458671569824
    8. '#' → logprob: -3.198458671569824
    9. 'き' → logprob: -3.698458671569824
    10. 'て' → logprob: -3.698458671569824

Token 2952: '．' (ID: 32217)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39773476123809814
    2. ' for' → logprob: -2.1477346420288086
    3. 'for' → logprob: -2.5227346420288086
    4. 'if' → logprob: -3.3977346420288086
    5. ' if' → logprob: -3.6477346420288086
    6. 'i' → logprob: -3.7727346420288086
    7. ' i' → logprob: -4.647734642028809
    8. 'v' → logprob: -5.022734642028809
    9. '           ' → logprob: -5.022734642028809
    10. '   ' → logprob: -5.397734642028809

Token 2953: '"
' (ID: 1092)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006359116639941931
    2. ' for' → logprob: -6.131359100341797
    3. 'for' → logprob: -6.131359100341797
    4. ' i' → logprob: -7.006359100341797
    5. '   ' → logprob: -8.256359100341797
    6. 'i' → logprob: -8.256359100341797
    7. '           ' → logprob: -9.256359100341797
    8. ')' → logprob: -9.256359100341797
    9. '```' → logprob: -9.381359100341797
    10. '#' → logprob: -9.381359100341797

Token 2954: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.698698704596609e-05
    2. '```' → logprob: -10.000097274780273
    3. '        
' → logprob: -11.000097274780273
    4. '
' → logprob: -11.375097274780273
    5. ' for' → logprob: -11.500097274780273
    6. 'for' → logprob: -12.000097274780273
    7. 'import' → logprob: -13.125097274780273
    8. '           ' → logprob: -13.625097274780273
    9. '   ' → logprob: -14.000097274780273
    10. '#' → logprob: -14.250097274780273

Token 2955: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5986912250518799
    2. '       ' → logprob: -0.8486912250518799
    3. 'i' → logprob: -3.97369122505188
    4. ' for' → logprob: -5.723690986633301
    5. '   ' → logprob: -8.9736909866333
    6. ' i' → logprob: -9.3486909866333
    7. '```' → logprob: -9.4736909866333
    8. '#' (adapté à ' #') → logprob: -9.5986909866333
    9. 'def' → logprob: -11.5986909866333
    10. 'v' → logprob: -11.7236909866333

Token 2956: ' Also' (ID: 8820)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20864762365818024
    2. 'for' → logprob: -2.2086477279663086
    3. 'i' → logprob: -2.5836477279663086
    4. ' for' → logprob: -6.083647727966309
    5. ' i' → logprob: -8.083647727966309
    6. '   ' → logprob: -8.833647727966309
    7. '```' → logprob: -9.083647727966309
    8. 'v' → logprob: -9.958647727966309
    9. '#' → logprob: -10.833647727966309
    10. 'idx' → logprob: -11.208647727966309

Token 2957: ' applies' (ID: 28134)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9948592782020569
    2. 'for' → logprob: -0.9948592782020569
    3. '       ' → logprob: -1.494859218597412
    4. ' i' → logprob: -4.369859218597412
    5. 'i' → logprob: -4.744859218597412
    6. '#' → logprob: -5.369859218597412
    7. ' if' → logprob: -5.494859218597412
    8. 'if' → logprob: -5.869859218597412
    9. '```' → logprob: -7.244859218597412
    10. '   ' → logprob: -7.744859218597412

Token 2958: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05804510787129402
    2. ' for' → logprob: -3.5580451488494873
    3. 'for' → logprob: -4.058044910430908
    4. 'v' → logprob: -5.558044910430908
    5. 'i' → logprob: -6.808044910430908
    6. ' i' → logprob: -7.183044910430908
    7. 'def' → logprob: -7.308044910430908
    8. ')' → logprob: -7.433044910430908
    9. ' in' → logprob: -7.808044910430908
    10. '```' → logprob: -7.933044910430908

Token 2959: ' next' (ID: 2613)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16630573570728302
    2. ' i' → logprob: -1.9163057804107666
    3. ' (' → logprob: -6.5413055419921875
    4. ' mor' → logprob: -6.5413055419921875
    5. '(i' → logprob: -7.4163055419921875
    6. 's' → logprob: -7.7913055419921875
    7. 'm' → logprob: -8.166305541992188
    8. 'len' → logprob: -8.166305541992188
    9. 'is' → logprob: -8.416305541992188
    10. '#' → logprob: -8.666305541992188

Token 2960: ' mora' (ID: 47294)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.5328998565673828
    2. '_idx' → logprob: -2.032899856567383
    3. '_v' → logprob: -2.657899856567383
    4. '_i' → logprob: -3.032899856567383
    5. 'm' → logprob: -3.157899856567383
    6. '_token' → logprob: -3.407899856567383
    7. '_' → logprob: -3.907899856567383
    8. 'i' → logprob: -4.282899856567383
    9. 'idx' → logprob: -4.407899856567383
    10. 'v' → logprob: -4.657899856567383

Token 2961: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4972164630889893
    2. 'if' → logprob: -1.4972164630889893
    3. '[i' → logprob: -1.9972164630889893
    4. ' if' → logprob: -2.7472164630889893
    5. '+' → logprob: -2.7472164630889893
    6. '==' → logprob: -2.8722164630889893
    7. '           ' → logprob: -3.3722164630889893
    8. ' ==' → logprob: -3.6222164630889893
    9. 'for' → logprob: -3.6222164630889893
    10. '   ' → logprob: -4.12221622467041

Token 2962: ' vowel' (ID: 165542)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005953448358923197
    2. 'm' → logprob: -5.505953311920166
    3. 'un' → logprob: -7.505953311920166
    4. '       ' → logprob: -8.255953788757324
    5. ' i' → logprob: -8.380953788757324
    6. '   ' → logprob: -8.755953788757324
    7. 'v' → logprob: -8.880953788757324
    8. ')' → logprob: -9.130953788757324
    9. 'vo' → logprob: -9.880953788757324
    10. '#' → logprob: -10.005953788757324

Token 2963: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2686832547187805
    2. 'for' → logprob: -1.6436831951141357
    3. ' for' → logprob: -4.018683433532715
    4. 'i' → logprob: -4.768683433532715
    5. 'if' → logprob: -5.143683433532715
    6. 'v' → logprob: -5.143683433532715
    7. '   ' → logprob: -6.893683433532715
    8. '```' → logprob: -7.393683433532715
    9. ' i' → logprob: -7.768683433532715
    10. '           ' → logprob: -7.768683433532715

Token 2964: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03486952558159828
    2. ''s' → logprob: -4.15986967086792
    3. 'is' → logprob: -5.28486967086792
    4. ''' → logprob: -5.28486967086792
    5. 'True' → logprob: -5.65986967086792
    6. ''_' → logprob: -6.28486967086792
    7. '_s' → logprob: -7.15986967086792
    8. ' s' → logprob: -7.78486967086792
    9. 'm' → logprob: -7.90986967086792
    10. ' True' → logprob: -8.284869194030762

Token 2965: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.04608548432588577
    2. ''' → logprob: -4.421085357666016
    3. 'i' → logprob: -5.171085357666016
    4. '   ' → logprob: -5.296085357666016
    5. ')' → logprob: -5.671085357666016
    6. '[i' → logprob: -5.796085357666016
    7. ']' → logprob: -6.796085357666016
    8. ' ' → logprob: -6.921085357666016
    9. '       ' → logprob: -7.046085357666016
    10. ''s' → logprob: -7.233585357666016

Token 2966: 'on' (ID: 263)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.999540388584137
    2. '       ' → logprob: -1.2495403289794922
    3. ']' → logprob: -2.249540328979492
    4. '   ' → logprob: -3.124540328979492
    5. '           ' → logprob: -3.374540328979492
    6. ']_' → logprob: -3.999540328979492
    7. ':' → logprob: -4.124540328979492
    8. ' and' → logprob: -4.499540328979492
    9. 'n' → logprob: -4.874540328979492
    10. ')' → logprob: -4.874540328979492

Token 2967: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0522109679877758
    2. 'for' → logprob: -3.052211046218872
    3. ' for' → logprob: -5.677210807800293
    4. 'i' → logprob: -9.052210807800293
    5. '   ' → logprob: -10.302210807800293
    6. 'def' → logprob: -11.427210807800293
    7. '#' → logprob: -11.677210807800293
    8. ' i' → logprob: -12.177210807800293
    9. 'v' → logprob: -12.552210807800293
    10. '           ' → logprob: -12.802210807800293

Token 2968: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25262659788131714
    2. 'for' → logprob: -1.502626657485962
    3. ' for' → logprob: -7.877626419067383
    4. 'i' → logprob: -8.252626419067383
    5. '   ' → logprob: -10.252626419067383
    6. '#' → logprob: -11.877626419067383
    7. 'def' → logprob: -12.627626419067383
    8. '        
' → logprob: -12.752626419067383
    9. '```' → logprob: -12.877626419067383
    10. '           ' → logprob: -13.002626419067383

Token 2969: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10060484707355499
    2. 'for' → logprob: -2.350604772567749
    3. ' for' → logprob: -7.975605010986328
    4. 'i' → logprob: -10.475605010986328
    5. '   ' → logprob: -10.975605010986328
    6. '#' (adapté à ' #') → logprob: -13.225605010986328
    7. '        
' → logprob: -13.225605010986328
    8. '	for' → logprob: -13.350605010986328
    9. 'import' → logprob: -13.975605010986328
    10. 'def' → logprob: -14.225605010986328

Token 2970: ' Let's' (ID: 41021)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39536669850349426
    2. 'for' → logprob: -1.1453666687011719
    3. 'i' → logprob: -5.270366668701172
    4. ' for' → logprob: -5.770366668701172
    5. ' i' → logprob: -8.895366668701172
    6. '   ' → logprob: -10.520366668701172
    7. 'def' → logprob: -11.145366668701172
    8. '```' → logprob: -12.020366668701172
    9. '	for' → logprob: -12.395366668701172
    10. '#' → logprob: -12.395366668701172

Token 2971: ' process' (ID: 2273)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019432969391345978
    2. ' for' → logprob: -4.14443302154541
    3. '       ' → logprob: -5.76943302154541
    4. 'i' → logprob: -8.76943302154541
    5. 'range' → logprob: -10.51943302154541
    6. 'def' → logprob: -10.76943302154541
    7. 'continue' → logprob: -10.89443302154541
    8. '#' → logprob: -11.14443302154541
    9. '   ' → logprob: -11.64443302154541
    10. ' i' → logprob: -11.64443302154541

Token 2972: ' rule' (ID: 10652)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6753745079040527
    2. '       ' → logprob: -0.9253745079040527
    3. ' for' → logprob: -2.4253745079040527
    4. 'i' → logprob: -5.300374507904053
    5. ' i' → logprob: -7.300374507904053
    6. '#' → logprob: -8.675374984741211
    7. 'v' → logprob: -8.925374984741211
    8. '   ' → logprob: -9.550374984741211
    9. '```' → logprob: -9.800374984741211
    10. '	for' → logprob: -10.425374984741211

Token 2973: '1' (ID: 16)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4830794930458069
    2. 'for' → logprob: -1.233079433441162
    3. ' for' → logprob: -3.483079433441162
    4. '1' → logprob: -3.608079433441162
    5. ':' → logprob: -4.608079433441162
    6. '```' → logprob: -4.733079433441162
    7. 'i' → logprob: -5.733079433441162
    8. '#' → logprob: -5.983079433441162
    9. '[i' → logprob: -6.483079433441162
    10. '   ' → logprob: -6.608079433441162

Token 2974: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07970601320266724
    2. 'for' → logprob: -2.5797059535980225
    3. 'i' → logprob: -7.829706192016602
    4. ' for' → logprob: -8.079706192016602
    5. '   ' → logprob: -9.454706192016602
    6. 'def' → logprob: -10.829706192016602
    7. ' i' → logprob: -12.579706192016602
    8. '```' → logprob: -12.954706192016602
    9. '	for' → logprob: -13.579706192016602
    10. '#' → logprob: -13.704706192016602

Token 2975: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010106532834470272
    2. 'for' → logprob: -4.635106563568115
    3. ' for' → logprob: -8.135106086730957
    4. 'i' → logprob: -10.635106086730957
    5. '   ' → logprob: -10.885106086730957
    6. '```' → logprob: -11.635106086730957
    7. 'def' → logprob: -13.260106086730957
    8. ' i' → logprob: -13.260106086730957
    9. '#' → logprob: -14.510106086730957
    10. '        
' → logprob: -14.635106086730957

Token 2976: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030936390976421535
    2. 'for' → logprob: -8.500308990478516
    3. '   ' → logprob: -9.375308990478516
    4. ' for' → logprob: -10.875308990478516
    5. 'i' → logprob: -13.375308990478516
    6. '           ' → logprob: -15.625308990478516
    7. '        
' → logprob: -15.875308990478516
    8. ' i' → logprob: -16.000308990478516
    9. '	for' → logprob: -16.500308990478516
    10. '```' → logprob: -16.500308990478516

Token 2977: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017345597734674811
    2. 'for' → logprob: -6.376734733581543
    3. ' for' → logprob: -10.876734733581543
    4. '   ' → logprob: -11.501734733581543
    5. 'i' → logprob: -13.501734733581543
    6. 'def' → logprob: -13.626734733581543
    7. '#' (adapté à ' #') → logprob: -15.626734733581543
    8. '        
' → logprob: -16.126733779907227
    9. '```' → logprob: -16.251733779907227
    10. 'import' → logprob: -16.501733779907227

Token 2978: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038596197962760925
    2. 'for' → logprob: -3.2885961532592773
    3. ' for' → logprob: -7.788596153259277
    4. '   ' → logprob: -9.038596153259277
    5. 'i' → logprob: -11.163596153259277
    6. 'def' → logprob: -13.163596153259277
    7. '```' → logprob: -13.288596153259277
    8. '	for' → logprob: -13.413596153259277
    9. '#' → logprob: -14.038596153259277
    10. ' i' → logprob: -14.788596153259277

Token 2979: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00016229959146585315
    2. ' i' → logprob: -8.750162124633789
    3. 'idx' → logprob: -13.125162124633789
    4. 'v' → logprob: -14.000162124633789
    5. '```' → logprob: -14.875162124633789
    6. '	i' → logprob: -15.500162124633789
    7. ' ' → logprob: -16.12516212463379
    8. '   ' → logprob: -16.62516212463379
    9. 'j' → logprob: -17.00016212463379
    10. '_i' → logprob: -17.12516212463379

Token 2980: ' mora' (ID: 47294)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0008302362984977663
    2. ' i' → logprob: -7.375830173492432
    3. 'idx' → logprob: -8.62583065032959
    4. 'v' → logprob: -11.75083065032959
    5. '       ' → logprob: -12.37583065032959
    6. '   ' → logprob: -13.37583065032959
    7. ' in' → logprob: -13.50083065032959
    8. ' idx' → logprob: -13.50083065032959
    9. '```' → logprob: -13.62583065032959
    10. 'in' → logprob: -13.87583065032959

Token 2981: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48031336069107056
    2. 'i' → logprob: -1.8553133010864258
    3. ' in' → logprob: -2.105313301086426
    4. 'in' → logprob: -3.230313301086426
    5. 'for' → logprob: -3.730313301086426
    6. ' i' → logprob: -3.980313301086426
    7. ' for' → logprob: -4.605313301086426
    8. ':' → logprob: -6.230313301086426
    9. '(i' → logprob: -6.355313301086426
    10. ')' → logprob: -6.480313301086426

Token 2982: ' vowel' (ID: 165542)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18723909556865692
    2. 'm' → logprob: -2.312239170074463
    3. 'v' → logprob: -2.687239170074463
    4. 'len' → logprob: -6.687239170074463
    5. 'get' → logprob: -7.312239170074463
    6. 'un' → logprob: -7.812239170074463
    7. ' i' → logprob: -8.062238693237305
    8. '0' → logprob: -8.187238693237305
    9. 'idx' → logprob: -8.187238693237305
    10. 'is' → logprob: -9.562238693237305

Token 2983: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7449618577957153
    2. 'i' → logprob: -1.2449618577957153
    3. 'for' → logprob: -2.994961738586426
    4. ' in' → logprob: -2.994961738586426
    5. 'v' → logprob: -3.369961738586426
    6. ' i' → logprob: -3.494961738586426
    7. ' for' → logprob: -3.619961738586426
    8. 'in' → logprob: -3.869961738586426
    9. 'range' → logprob: -4.744961738586426
    10. '   ' → logprob: -5.869961738586426

Token 2984: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0879572182893753
    2. 'n' → logprob: -3.7129571437835693
    3. 'for' → logprob: -3.7129571437835693
    4. 'f' → logprob: -4.087957382202148
    5. ' in' → logprob: -5.587957382202148
    6. '=' → logprob: -5.837957382202148
    7. '   ' → logprob: -5.962957382202148
    8. ':' → logprob: -6.212957382202148
    9. '           ' → logprob: -6.212957382202148
    10. ' =' → logprob: -6.962957382202148

Token 2985: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.002077932469546795
    2. ''u' → logprob: -6.627078056335449
    3. ' u' → logprob: -7.377078056335449
    4. ''' → logprob: -9.12707805633545
    5. ' '' → logprob: -12.00207805633545
    6. '   ' → logprob: -12.12707805633545
    7. ' ' → logprob: -13.25207805633545
    8. '_u' → logprob: -13.75207805633545
    9. '	u' → logprob: -14.25207805633545
    10. '```' → logprob: -14.50207805633545

Token 2986: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15076903998851776
    2. 'for' → logprob: -2.275768995285034
    3. ' for' → logprob: -4.650769233703613
    4. 'i' → logprob: -4.900769233703613
    5. 'in' → logprob: -4.900769233703613
    6. ' in' → logprob: -5.525769233703613
    7. ':' → logprob: -5.650769233703613
    8. '   ' → logprob: -6.150769233703613
    9. 'range' → logprob: -6.900769233703613
    10. ' i' → logprob: -7.025769233703613

Token 2987: ' check' (ID: 2371)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16252495348453522
    2. 'for' → logprob: -2.287524938583374
    3. ' for' → logprob: -3.037524938583374
    4. ' i' → logprob: -8.662525177001953
    5. '   ' → logprob: -9.037525177001953
    6. '           ' → logprob: -9.662525177001953
    7. ':' → logprob: -9.662525177001953
    8. 'i' → logprob: -9.662525177001953
    9. ' ' → logprob: -12.037525177001953
    10. 'if' → logprob: -12.037525177001953

Token 2988: ' condition' (ID: 7060)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.048734527081251144
    2. ' i' → logprob: -3.173734426498413
    3. 'm' → logprob: -5.923734664916992
    4. 'v' → logprob: -7.048734664916992
    5. '       ' → logprob: -7.173734664916992
    6. 'range' → logprob: -7.798734664916992
    7. 'idx' → logprob: -8.423734664916992
    8. ' mor' → logprob: -8.423734664916992
    9. ' range' → logprob: -8.923734664916992
    10. '   ' → logprob: -9.048734664916992

Token 2989: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009450407698750496
    2. 'for' → logprob: -4.884450435638428
    3. ' for' → logprob: -6.509450435638428
    4. '   ' → logprob: -9.13444995880127
    5. '           ' → logprob: -10.00944995880127
    6. ':' → logprob: -10.00944995880127
    7. 'i' → logprob: -10.38444995880127
    8. ')' → logprob: -10.38444995880127
    9. '```' → logprob: -11.38444995880127
    10. ',' → logprob: -11.63444995880127

Token 2990: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.259079363080673e-05
    2. 'for' → logprob: -12.250012397766113
    3. '```' → logprob: -12.625012397766113
    4. ' for' → logprob: -13.000012397766113
    5. '   ' → logprob: -13.625012397766113
    6. '           ' → logprob: -14.125012397766113
    7. ')' → logprob: -16.50001335144043
    8. ',' → logprob: -17.25001335144043
    9. 'i' → logprob: -17.37501335144043
    10. '	' → logprob: -17.62501335144043

Token 2991: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10034049302339554
    2. 'for' → logprob: -2.3503406047821045
    3. ' for' → logprob: -8.975340843200684
    4. '   ' → logprob: -12.100340843200684
    5. 'i' → logprob: -13.975340843200684
    6. '	for' → logprob: -14.975340843200684
    7. '           ' → logprob: -15.225340843200684
    8. '```' → logprob: -15.725340843200684
    9. '        
' → logprob: -16.725339889526367
    10. '#' (adapté à ' #') → logprob: -17.100339889526367

Token 2992: ' Need' (ID: 19792)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030387628823518753
    2. 'for' → logprob: -3.5303876399993896
    3. ' for' → logprob: -7.4053874015808105
    4. '```' → logprob: -11.530387878417969
    5. '   ' → logprob: -11.655387878417969
    6. 'i' → logprob: -11.905387878417969
    7. ' i' → logprob: -13.905387878417969
    8. '#' → logprob: -14.030387878417969
    9. '           ' → logprob: -14.530387878417969
    10. 'def' → logprob: -14.780387878417969

Token 2993: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9915136694908142
    2. 'for' → logprob: -1.241513729095459
    3. '       ' → logprob: -1.366513729095459
    4. ' to' → logprob: -2.866513729095459
    5. '_' → logprob: -4.866513729095459
    6. ' i' → logprob: -5.616513729095459
    7. '   ' → logprob: -5.866513729095459
    8. 'def' → logprob: -6.116513729095459
    9. '=' → logprob: -6.366513729095459
    10. ' in' → logprob: -6.616513729095459

Token 2994: ' know' (ID: 1761)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008021683432161808
    2. ' for' → logprob: -5.758021831512451
    3. 'def' → logprob: -5.883021831512451
    4. 'range' → logprob: -6.508021831512451
    5. 'continue' → logprob: -8.633021354675293
    6. 'len' → logprob: -8.883021354675293
    7. '       ' → logprob: -9.633021354675293
    8. '#' → logprob: -9.883021354675293
    9. '```' → logprob: -10.758021354675293
    10. ':' → logprob: -11.133021354675293

Token 2995: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29896172881126404
    2. 'i' → logprob: -2.298961639404297
    3. ' for' → logprob: -2.548961639404297
    4. '       ' → logprob: -3.173961639404297
    5. 'def' → logprob: -4.548961639404297
    6. 'v' → logprob: -4.923961639404297
    7. ')' → logprob: -5.423961639404297
    8. '#' → logprob: -5.423961639404297
    9. ' i' → logprob: -6.048961639404297
    10. 'idx' → logprob: -6.298961639404297

Token 2996: ' the' (ID: 290)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11810964345932007
    2. 'vo' → logprob: -2.993109703063965
    3. 'm' → logprob: -3.493109703063965
    4. 'v' → logprob: -4.493109703063965
    5. 'un' → logprob: -4.618109703063965
    6. 'mor' → logprob: -5.618109703063965
    7. ' i' → logprob: -6.243109703063965
    8. 'mo' → logprob: -6.993109703063965
    9. ' mor' → logprob: -6.993109703063965
    10. ' vo' → logprob: -7.368109703063965

Token 2997: ' next' (ID: 2613)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24197079241275787
    2. 'm' → logprob: -1.7419707775115967
    3. 'v' → logprob: -3.7419707775115967
    4. 'current' → logprob: -5.741971015930176
    5. 'un' → logprob: -5.866971015930176
    6. ' i' → logprob: -6.116971015930176
    7. 'next' → logprob: -6.116971015930176
    8. ' mor' → logprob: -6.866971015930176
    9. ' current' → logprob: -6.991971015930176
    10. ' next' → logprob: -7.241971015930176

Token 2998: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.052305668592453
    2. 'v' → logprob: -4.177305698394775
    3. 'i' → logprob: -4.802305698394775
    4. 'idx' → logprob: -5.302305698394775
    5. 'token' → logprob: -5.427305698394775
    6. 'if' → logprob: -5.927305698394775
    7. ' mora' → logprob: -6.302305698394775
    8. ' if' → logprob: -6.802305698394775
    9. ')' → logprob: -6.927305698394775
    10. ' ' → logprob: -7.177305698394775

Token 2999: ' after' (ID: 1934)
  Prédit: 'after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'after' → logprob: -1.0638084411621094
    2. '+' → logprob: -1.1888084411621094
    3. 's' → logprob: -2.8138084411621094
    4. 'is' → logprob: -3.1888084411621094
    5. '   ' → logprob: -3.1888084411621094
    6. 'i' → logprob: -3.1888084411621094
    7. 'idx' → logprob: -3.6888084411621094
    8. '_after' → logprob: -3.6888084411621094
    9. 'def' → logprob: -3.9388084411621094
    10. '       ' → logprob: -4.063808441162109

Token 3000: ' this' (ID: 495)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0021148123778402805
    2. 'm' → logprob: -6.377114772796631
    3. 'idx' → logprob: -9.002115249633789
    4. ' i' → logprob: -9.252115249633789
    5. '   ' → logprob: -9.877115249633789
    6. 'v' → logprob: -10.377115249633789
    7. '#' → logprob: -10.752115249633789
    8. 'current' → logprob: -11.127115249633789
    9. '       ' → logprob: -11.752115249633789
    10. 'mor' → logprob: -11.877115249633789

Token 3001: ' vowel' (ID: 165542)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5274789929389954
    2. '       ' → logprob: -2.2774789333343506
    3. 'for' → logprob: -2.6524789333343506
    4. ' for' → logprob: -2.9024789333343506
    5. '<m' → logprob: -3.1524789333343506
    6. 'i' → logprob: -3.9024789333343506
    7. ' in' → logprob: -4.52747917175293
    8. 'if' → logprob: -4.65247917175293
    9. 'idx' → logprob: -4.77747917175293
    10. 'm' → logprob: -4.90247917175293

Token 3002: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0653823614120483
    2. '+' → logprob: -1.9403823614120483
    3. 'if' → logprob: -2.440382480621338
    4. ' ==' → logprob: -2.565382480621338
    5. '==' → logprob: -2.940382480621338
    6. ']' → logprob: -3.315382480621338
    7. 'v' → logprob: -3.690382480621338
    8. ' +' → logprob: -4.065382480621338
    9. '           ' → logprob: -4.065382480621338
    10. ' if' → logprob: -4.065382480621338

Token 3003: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5368918180465698
    2. ''i' → logprob: -1.5368918180465698
    3. 's' → logprob: -2.4118919372558594
    4. ''u' → logprob: -3.9118919372558594
    5. 'a' → logprob: -4.036891937255859
    6. ''a' → logprob: -4.161891937255859
    7. ''s' → logprob: -4.286891937255859
    8. ''' → logprob: -4.536891937255859
    9. ' i' → logprob: -5.161891937255859
    10. 'v' → logprob: -5.286891937255859

Token 3004: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.27601245045661926
    2. 'i' → logprob: -2.901012420654297
    3. '[i' → logprob: -3.276012420654297
    4. 'len' → logprob: -3.651012420654297
    5. '   ' → logprob: -3.651012420654297
    6. 'ize' → logprob: -4.401012420654297
    7. 'u' → logprob: -4.401012420654297
    8. '1' → logprob: -4.401012420654297
    9. '+' → logprob: -5.151012420654297
    10. 'n' → logprob: -5.526012420654297

Token 3005: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -4.656383680412546e-05
    2. 'u' → logprob: -11.000046730041504
    3. 'un' → logprob: -11.625046730041504
    4. 'uon' → logprob: -12.000046730041504
    5. 'o' → logprob: -12.125046730041504
    6. '_on' → logprob: -12.375046730041504
    7. 'on's' → logprob: -13.250046730041504
    8. 'oin' → logprob: -14.500046730041504
    9. '   ' → logprob: -14.625046730041504
    10. '```' → logprob: -15.250046730041504

Token 3006: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016091243596747518
    2. 'for' → logprob: -6.7516093254089355
    3. ' for' → logprob: -8.251608848571777
    4. 'def' → logprob: -9.001608848571777
    5. '   ' → logprob: -10.751608848571777
    6. '#' → logprob: -11.876608848571777
    7. '           ' → logprob: -12.001608848571777
    8. 'import' → logprob: -12.376608848571777
    9. ')' → logprob: -12.626608848571777
    10. '```' → logprob: -12.751608848571777

Token 3007: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.9807766079902649
    2. 'next' → logprob: -1.2307765483856201
    3. 'if' → logprob: -2.85577654838562
    4. 'long' → logprob: -2.85577654838562
    5. 'i' → logprob: -3.85577654838562
    6. '#' → logprob: -3.85577654838562
    7. 'm' → logprob: -3.85577654838562
    8. '(i' → logprob: -3.98077654838562
    9. 'possibly' → logprob: -4.105776786804199
    10. 'is' → logprob: -4.355776786804199

Token 3008: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003493161639198661
    2. 'for' → logprob: -6.253493309020996
    3. ' for' → logprob: -7.378493309020996
    4. '   ' → logprob: -8.628493309020996
    5. '           ' → logprob: -9.128493309020996
    6. ' i' → logprob: -9.378493309020996
    7. '[i' → logprob: -9.503493309020996
    8. 'i' → logprob: -9.503493309020996
    9. '```' → logprob: -10.003493309020996
    10. ')' → logprob: -10.003493309020996

Token 3009: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00203475309535861
    2. '```' → logprob: -7.127034664154053
    3. ' for' → logprob: -7.377034664154053
    4. 'for' → logprob: -7.502034664154053
    5. '           ' → logprob: -10.877035140991211
    6. '   ' → logprob: -11.252035140991211
    7. '
' → logprob: -11.752035140991211
    8. 'i' → logprob: -12.752035140991211
    9. '``' → logprob: -12.877035140991211
    10. '`' → logprob: -13.502035140991211

Token 3010: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06857059895992279
    2. ' for' → logprob: -2.943570613861084
    3. 'for' → logprob: -4.568570613861084
    4. ' i' → logprob: -6.568570613861084
    5. '#' (adapté à ' #') → logprob: -7.068570613861084
    6. '   ' → logprob: -8.693570137023926
    7. '```' → logprob: -8.693570137023926
    8. '           ' → logprob: -8.818570137023926
    9. 'i' → logprob: -8.943570137023926
    10. ' next' → logprob: -10.443570137023926

Token 3011: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03584898263216019
    2. 'for' → logprob: -3.410849094390869
    3. ' for' → logprob: -6.410849094390869
    4. '```' → logprob: -8.160848617553711
    5. '#' → logprob: -8.910848617553711
    6. 'i' → logprob: -10.035848617553711
    7. '   ' → logprob: -10.285848617553711
    8. 'def' → logprob: -11.285848617553711
    9. ' i' → logprob: -11.410848617553711
    10. '           ' → logprob: -11.410848617553711

Token 3012: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.23169279098510742
    2. '[i' → logprob: -2.3566927909851074
    3. 'i' → logprob: -3.9816927909851074
    4. '=i' → logprob: -4.481692790985107
    5. '+' → logprob: -4.981692790985107
    6. '_idx' → logprob: -5.106692790985107
    7. 'idx' → logprob: -5.481692790985107
    8. 't' → logprob: -5.481692790985107
    9. 'ize' → logprob: -5.481692790985107
    10. 'e' → logprob: -5.606692790985107

Token 3013: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0037675397470593452
    2. 'n' → logprob: -6.128767490386963
    3. 'o' → logprob: -6.503767490386963
    4. '_' → logprob: -11.128767967224121
    5. 'i' → logprob: -11.628767967224121
    6. '_on' → logprob: -11.628767967224121
    7. '_n' → logprob: -11.628767967224121
    8. ')' → logprob: -11.753767967224121
    9. 'ons' → logprob: -12.378767967224121
    10. 'con' → logprob: -12.628767967224121

Token 3014: ' condition' (ID: 7060)
  Prédit: '_follow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_follow' → logprob: -0.8269323110580444
    2. '_' → logprob: -1.3269323110580444
    3. '_m' → logprob: -1.5769323110580444
    4. '_after' → logprob: -4.201932430267334
    5. 's' → logprob: -4.451932430267334
    6. ' =' → logprob: -4.701932430267334
    7. ')' → logprob: -4.701932430267334
    8. '_is' → logprob: -5.201932430267334
    9. '=' → logprob: -5.451932430267334
    10. '_check' → logprob: -5.576932430267334

Token 3015: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06308146566152573
    2. 'for' → logprob: -3.9380815029144287
    3. ' for' → logprob: -4.18808126449585
    4. '   ' → logprob: -5.06308126449585
    5. '
' → logprob: -5.31308126449585
    6. ' =' → logprob: -5.43808126449585
    7. 'def' → logprob: -6.31308126449585
    8. ')' → logprob: -7.31308126449585
    9. '           ' → logprob: -7.31308126449585
    10. ' if' → logprob: -7.31308126449585

Token 3016: ' next' (ID: 2613)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5568917989730835
    2. '       ' → logprob: -1.3068917989730835
    3. ' i' → logprob: -2.681891918182373
    4. '   ' → logprob: -2.931891918182373
    5. ' for' → logprob: -4.181891918182373
    6. 'for' → logprob: -4.431891918182373
    7. '```' → logprob: -6.306891918182373
    8. 'idx' → logprob: -6.806891918182373
    9. 'if' → logprob: -7.181891918182373
    10. 'def' → logprob: -7.306891918182373

Token 3017: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5788170099258423
    2. '_m' → logprob: -1.0788170099258423
    3. '+' → logprob: -3.5788168907165527
    4. ' <' → logprob: -4.828816890716553
    5. '_idx' → logprob: -5.078816890716553
    6. 'i' → logprob: -5.453816890716553
    7. ')' → logprob: -5.453816890716553
    8. '_' → logprob: -5.578816890716553
    9. '<m' → logprob: -5.578816890716553
    10. '==' → logprob: -5.703816890716553

Token 3018: ' has' (ID: 853)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.8507764339447021
    2. 'after' → logprob: -2.100776433944702
    3. 'and' → logprob: -2.225776433944702
    4. '[' → logprob: -2.225776433944702
    5. '```' → logprob: -2.350776433944702
    6. '   ' → logprob: -3.100776433944702
    7. '.startswith' → logprob: -3.100776433944702
    8. 'len' → logprob: -3.475776433944702
    9. 'def' → logprob: -3.600776433944702
    10. 'startswith' → logprob: -3.725776433944702

Token 3019: ' doubled' (ID: 69040)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.018235746771097183
    2. 'length' → logprob: -4.018235683441162
    3. ' len' → logprob: -10.64323616027832
    4. ' length' → logprob: -11.14323616027832
    5. 'm' → logprob: -11.39323616027832
    6. 'a' → logprob: -11.51823616027832
    7. ' ' → logprob: -11.89323616027832
    8. '   ' → logprob: -12.01823616027832
    9. 'leng' → logprob: -13.26823616027832
    10. '2' → logprob: -13.39323616027832

Token 3020: ' conson' (ID: 127767)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.9389636516571045
    2. '   ' → logprob: -1.1889636516571045
    3. '       ' → logprob: -2.1889636516571045
    4. 'm' → logprob: -2.4389636516571045
    5. ')' → logprob: -3.9389636516571045
    6. ']' → logprob: -4.188963890075684
    7. '           ' → logprob: -4.313963890075684
    8. ' ' → logprob: -4.438963890075684
    9. 'if' → logprob: -5.438963890075684
    10. ' conson' → logprob: -5.688963890075684

Token 3021: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.7924029231071472
    2. '   ' → logprob: -1.042402982711792
    3. '[i' → logprob: -3.417402982711792
    4. ']' → logprob: -3.792402982711792
    5. ')' → logprob: -3.917402982711792
    6. '           ' → logprob: -4.042402744293213
    7. '[' → logprob: -4.292402744293213
    8. '       ' → logprob: -4.667402744293213
    9. ' ' → logprob: -4.667402744293213
    10. 'ants' → logprob: -4.917402744293213

Token 3022: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04470805451273918
    2. ' for' → logprob: -4.044708251953125
    3. 'for' → logprob: -4.169708251953125
    4. ' if' → logprob: -6.294708251953125
    5. '   ' → logprob: -6.419708251953125
    6. 'if' → logprob: -6.669708251953125
    7. '           ' → logprob: -6.919708251953125
    8. ':' → logprob: -6.919708251953125
    9. 'v' → logprob: -7.169708251953125
    10. ' in' → logprob: -7.794708251953125

Token 3023: ' two' (ID: 1920)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001998819876462221
    2. ' for' → logprob: -7.2519989013671875
    3. 'for' → logprob: -7.6269989013671875
    4. '   ' → logprob: -7.8769989013671875
    5. '           ' → logprob: -9.376998901367188
    6. '[i' → logprob: -9.751998901367188
    7. ')' → logprob: -9.876998901367188
    8. '[' → logprob: -10.376998901367188
    9. ' i' → logprob: -10.876998901367188
    10. '        
' → logprob: -10.876998901367188

Token 3024: ' chars' (ID: 47991)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2607429027557373
    2. ']' → logprob: -2.0107429027557373
    3. '   ' → logprob: -2.2607429027557373
    4. ' ' → logprob: -2.3857429027557373
    5. '       ' → logprob: -2.6357429027557373
    6. 'if' → logprob: -3.1357429027557373
    7. '][' → logprob: -3.2607429027557373
    8. '_' → logprob: -3.3857429027557373
    9. '+' → logprob: -3.6357429027557373
    10. '=' → logprob: -3.7607429027557373

Token 3025: ' same' (ID: 2684)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012599009089171886
    2. 'for' → logprob: -5.762598991394043
    3. ' for' → logprob: -6.012598991394043
    4. ' i' → logprob: -6.137598991394043
    5. 'i' → logprob: -6.387598991394043
    6. '   ' → logprob: -7.012598991394043
    7. '           ' → logprob: -7.762598991394043
    8. ':' → logprob: -7.887598991394043
    9. ')' → logprob: -8.137598991394043
    10. 'v' → logprob: -8.512598991394043

Token 3026: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030614540446549654
    2. ' for' → logprob: -9.250306129455566
    3. '   ' → logprob: -9.500306129455566
    4. 'for' → logprob: -9.500306129455566
    5. '           ' → logprob: -10.625306129455566
    6. ')' → logprob: -12.000306129455566
    7. '```' → logprob: -12.375306129455566
    8. ' ' → logprob: -12.500306129455566
    9. 'import' → logprob: -12.750306129455566
    10. '[i' → logprob: -13.000306129455566

Token 3027: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010617482475936413
    2. '           ' → logprob: -8.12606143951416
    3. 'for' → logprob: -8.62606143951416
    4. ' for' → logprob: -9.00106143951416
    5. '   ' → logprob: -9.12606143951416
    6. '        
' → logprob: -9.25106143951416
    7. '[' → logprob: -9.37606143951416
    8. '```' → logprob: -10.62606143951416
    9. '               ' → logprob: -11.00106143951416
    10. ',' → logprob: -11.00106143951416

Token 3028: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024524700711481273
    2. 'for' → logprob: -8.375245094299316
    3. '   ' → logprob: -12.250245094299316
    4. ' for' → logprob: -12.625245094299316
    5. '```' → logprob: -12.625245094299316
    6. '           ' → logprob: -13.000245094299316
    7. 'i' → logprob: -15.125245094299316
    8. '
' → logprob: -15.250245094299316
    9. 'import' → logprob: -15.875245094299316
    10. '        
' → logprob: -16.375246047973633

Token 3029: ' Create' (ID: 6585)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028781031724065542
    2. 'for' → logprob: -5.877878189086914
    3. ' for' → logprob: -9.627878189086914
    4. '   ' → logprob: -12.752878189086914
    5. '```' → logprob: -13.127878189086914
    6. '           ' → logprob: -13.877878189086914
    7. 'i' → logprob: -14.627878189086914
    8. '#' → logprob: -15.252878189086914
    9. 'def' → logprob: -15.627878189086914
    10. ' i' → logprob: -16.002878189086914

Token 3030: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14027059078216553
    2. 'def' → logprob: -3.015270709991455
    3. 'i' → logprob: -4.015270709991455
    4. 'un' → logprob: -4.015270709991455
    5. 'a' → logprob: -4.765270709991455
    6. '```' → logprob: -4.765270709991455
    7. '#' → logprob: -5.265270709991455
    8. 'n' → logprob: -5.765270709991455
    9. 'prev' → logprob: -5.890270709991455
    10. 's' → logprob: -6.015270709991455

Token 3031: ' helper' (ID: 25246)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0029525011777877808
    2. 'def' → logprob: -6.002952575683594
    3. ' for' → logprob: -7.752952575683594
    4. '```' → logprob: -10.877952575683594
    5. 'range' → logprob: -12.002952575683594
    6. '#' → logprob: -12.252952575683594
    7. 'prev' → logprob: -12.502952575683594
    8. '       ' → logprob: -13.377952575683594
    9. 'set' → logprob: -13.752952575683594
    10. 'queue' → logprob: -14.002952575683594

Token 3032: ' function' (ID: 1114)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016039764508605003
    2. 'for' → logprob: -4.641039848327637
    3. ' def' → logprob: -5.891039848327637
    4. '
' → logprob: -6.516039848327637
    5. 'idx' → logprob: -7.891039848327637
    6. 'i' → logprob: -8.016039848327637
    7. ' for' → logprob: -8.266039848327637
    8. 'un' → logprob: -8.516039848327637
    9. '       ' → logprob: -9.266039848327637
    10. 'n' → logprob: -9.641039848327637

Token 3033: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0025643608532845974
    2. '       ' → logprob: -6.127564430236816
    3. ' def' → logprob: -8.377564430236816
    4. '   ' → logprob: -9.877564430236816
    5. '```' → logprob: -10.002564430236816
    6. '
' → logprob: -10.502564430236816
    7. 'for' → logprob: -11.377564430236816
    8. '`' → logprob: -12.127564430236816
    9. '	def' → logprob: -12.252564430236816
    10. '           ' → logprob: -14.252564430236816

Token 3034: ' s' (ID: 265)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6990041136741638
    2. 'i' → logprob: -1.0740041732788086
    3. 'def' → logprob: -2.6990041732788086
    4. 'checking' → logprob: -2.8240041732788086
    5. 'idx' → logprob: -4.324004173278809
    6. 'check' → logprob: -4.824004173278809
    7. 'next' → logprob: -5.699004173278809
    8. ' is' → logprob: -6.449004173278809
    9. 'lambda' → logprob: -6.824004173278809
    10. 'index' → logprob: -6.824004173278809

Token 3035: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.007106886710971594
    2. 'def' → logprob: -6.132106781005859
    3. '_' → logprob: -7.257106781005859
    4. 't' → logprob: -7.507106781005859
    5. '_next' → logprob: -7.757106781005859
    6. 'e' → logprob: -8.00710678100586
    7. '#' → logprob: -8.00710678100586
    8. 'ize' → logprob: -8.63210678100586
    9. '_len' → logprob: -8.75710678100586
    10. 'o' → logprob: -9.00710678100586

Token 3036: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0001519325451226905
    2. 'con' → logprob: -9.250151634216309
    3. 'o' → logprob: -11.000151634216309
    4. '_on' → logprob: -11.500151634216309
    5. 'on's' → logprob: -12.625151634216309
    6. 'ion' → logprob: -12.875151634216309
    7. '```' → logprob: -13.375151634216309
    8. 'ons' → logprob: -13.625151634216309
    9. 'oon' → logprob: -13.750151634216309
    10. '
' → logprob: -13.750151634216309

Token 3037: ' check' (ID: 2371)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0022379241418093443
    2. '   ' → logprob: -6.627237796783447
    3. '
' → logprob: -7.377237796783447
    4. '```' → logprob: -9.377238273620605
    5. '       ' → logprob: -9.627238273620605
    6. 'is' → logprob: -10.002238273620605
    7. ' def' → logprob: -10.627238273620605
    8. ')' → logprob: -10.752238273620605
    9. '_def' → logprob: -11.627238273620605
    10. '`' → logprob: -11.877238273620605

Token 3038: ' on' (ID: 402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3193879723548889
    2. '       ' → logprob: -1.3193879127502441
    3. '   ' → logprob: -5.819387912750244
    4. '
' → logprob: -6.569387912750244
    5. '```' → logprob: -7.069387912750244
    6. ' def' → logprob: -7.944387912750244
    7. '        
' → logprob: -9.069388389587402
    8. ')' → logprob: -9.444388389587402
    9. '`' → logprob: -9.694388389587402
    10. '           ' → logprob: -10.069388389587402

Token 3039: ' next' (ID: 2613)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.014459753409028053
    2. ' mor' → logprob: -4.764459609985352
    3. 'i' → logprob: -5.764459609985352
    4. 'mor' → logprob: -6.389459609985352
    5. ')' → logprob: -7.389459609985352
    6. '   ' → logprob: -9.889459609985352
    7. ')m' → logprob: -10.014459609985352
    8. 'range' → logprob: -10.139459609985352
    9. ' i' → logprob: -10.389459609985352
    10. 'def' → logprob: -10.389459609985352

Token 3040: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.1632776260375977
    2. 'def' → logprob: -1.1632776260375977
    3. '_m' → logprob: -2.1632776260375977
    4. ')' → logprob: -2.2882776260375977
    5. '_idx' → logprob: -3.9132776260375977
    6. '(i' → logprob: -4.663277626037598
    7. '(m' → logprob: -4.663277626037598
    8. 'idx' → logprob: -4.663277626037598
    9. '_token' → logprob: -4.788277626037598
    10. '`' → logprob: -4.788277626037598

Token 3041: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.43745023012161255
    2. '       ' → logprob: -1.0624501705169678
    3. '
' → logprob: -5.187450408935547
    4. '```' → logprob: -6.062450408935547
    5. '   ' → logprob: -8.312450408935547
    6. 'for' → logprob: -9.187450408935547
    7. ' def' → logprob: -9.562450408935547
    8. '           ' → logprob: -9.687450408935547
    9. 'is' → logprob: -9.812450408935547
    10. '`' → logprob: -9.937450408935547

Token 3042: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4447645843029022
    2. 'def' → logprob: -1.1947646141052246
    3. '
' → logprob: -2.9447646141052246
    4. '        
' → logprob: -6.694764614105225
    5. '```' → logprob: -6.694764614105225
    6. '   ' → logprob: -7.569764614105225
    7. 'for' → logprob: -8.569764137268066
    8. ' def' → logprob: -8.694764137268066
    9. '`' → logprob: -9.819764137268066
    10. '           ' → logprob: -9.944764137268066

Token 3043: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002423217985779047
    2. 'for' → logprob: -6.252423286437988
    3. '```' → logprob: -8.502423286437988
    4. 'def' (adapté à ' def') → logprob: -8.877423286437988
    5. ' for' → logprob: -9.502423286437988
    6. '   ' → logprob: -9.627423286437988
    7. '
' → logprob: -12.377423286437988
    8. '           ' → logprob: -12.752423286437988
    9. '        
' → logprob: -13.127423286437988
    10. '`' → logprob: -14.127423286437988

Token 3044: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0007064753444865346
    2. 's' → logprob: -8.500706672668457
    3. 'has' → logprob: -8.875706672668457
    4. 'check' → logprob: -9.375706672668457
    5. 'next' → logprob: -9.375706672668457
    6. ' is' → logprob: -9.625706672668457
    7. 'should' → logprob: -9.750706672668457
    8. 'def' → logprob: -10.500706672668457
    9. 'can' → logprob: -11.125706672668457
    10. '_is' → logprob: -11.875706672668457

Token 3045: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.5306112170219421
    2. '_next' → logprob: -0.9056112170219421
    3. '_vo' → logprob: -4.905611038208008
    4. 'next' → logprob: -10.905611038208008
    5. 's' → logprob: -11.655611038208008
    6. 'Next' → logprob: -12.030611038208008
    7. '_voice' → logprob: -12.280611038208008
    8. '_' → logprob: -12.530611038208008
    9. '_v' → logprob: -12.780611038208008
    10. 'vo' → logprob: -13.655611038208008

Token 3046: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.0007252985378727317
    2. 'ok' → logprob: -8.750725746154785
    3. '```' → logprob: -9.250725746154785
    4. '_' → logprob: -9.500725746154785
    5. 'oko' → logprob: -9.625725746154785
    6. 'o' → logprob: -9.750725746154785
    7. 'оку' → logprob: -9.750725746154785
    8. '``' → logprob: -10.500725746154785
    9. 'next' → logprob: -10.750725746154785
    10. '_next' → logprob: -10.875725746154785

Token 3047: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -9.424530435353518e-05
    2. 'o' → logprob: -9.875094413757324
    3. '_on' → logprob: -10.250094413757324
    4. 'n' → logprob: -13.000094413757324
    5. '_' → logprob: -13.750094413757324
    6. 'on's' → logprob: -14.125094413757324
    7. 'ont' → logprob: -14.375094413757324
    8. 'он' → logprob: -14.875094413757324
    9. 'onor' → logprob: -15.000094413757324
    10. '_n' → logprob: -15.500094413757324

Token 3048: '_after' (ID: 46788)
  Prédit: '_follow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_follow' → logprob: -4.894790981779806e-05
    2. '_next' → logprob: -11.000048637390137
    3. '_after' → logprob: -11.500048637390137
    4. 'following' → logprob: -11.875048637390137
    5. ')' → logprob: -12.750048637390137
    6. '_' → logprob: -13.125048637390137
    7. '```' → logprob: -14.125048637390137
    8. '
' → logprob: -14.375048637390137
    9. '   ' → logprob: -14.375048637390137
    10. 'follow' → logprob: -14.500048637390137

Token 3049: '(i' (ID: 3649)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.32022184133529663
    2. '(i' → logprob: -1.8202219009399414
    3. '_m' → logprob: -3.6952219009399414
    4. 'idx' → logprob: -4.320221900939941
    5. '_follow' → logprob: -4.445221900939941
    6. 's' → logprob: -5.070221900939941
    7. ')' → logprob: -5.195221900939941
    8. '(' → logprob: -5.445221900939941
    9. 'm' → logprob: -5.445221900939941
    10. '):' → logprob: -5.695221900939941

Token 3050: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9043105244636536
    2. '):' → logprob: -1.0293104648590088
    3. '+' → logprob: -1.5293104648590088
    4. '(m' → logprob: -4.904310703277588
    5. ' +' → logprob: -5.154310703277588
    6. '   ' → logprob: -5.779310703277588
    7. '):
' → logprob: -6.529310703277588
    8. '       ' → logprob: -7.154310703277588
    9. '+m' → logprob: -7.279310703277588
    10. ')' → logprob: -7.404310703277588

Token 3051: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1146656721830368
    2. '(i' → logprob: -2.9896657466888428
    3. '       ' → logprob: -3.8646657466888428
    4. '        ' → logprob: -4.614665508270264
    5. '   ' → logprob: -4.989665508270264
    6. '(' → logprob: -4.989665508270264
    7. ' (' → logprob: -5.739665508270264
    8. ' ' → logprob: -6.239665508270264
    9. '            ' → logprob: -6.489665508270264
    10. '    ' → logprob: -6.739665508270264

Token 3052: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4302273690700531
    2. '   ' → logprob: -1.6802273988723755
    3. 'i' → logprob: -2.430227279663086
    4. ' i' → logprob: -2.930227279663086
    5. 'return' → logprob: -4.430227279663086
    6. ' return' → logprob: -5.305227279663086
    7. '           ' → logprob: -6.305227279663086
    8. '    ' → logprob: -7.055227279663086
    9. 'if' → logprob: -7.430227279663086
    10. ' ' → logprob: -7.430227279663086

Token 3053: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.27399757504463196
    2. '   ' → logprob: -2.5239975452423096
    3. '       ' → logprob: -2.7739975452423096
    4. 'i' → logprob: -3.1489975452423096
    5. ' return' → logprob: -3.3989975452423096
    6. 'if' → logprob: -4.398997783660889
    7. ' i' → logprob: -5.273997783660889
    8. '           ' → logprob: -6.398997783660889
    9. ' if' → logprob: -6.523997783660889
    10. '(i' → logprob: -9.27399730682373

Token 3054: ' mora' (ID: 47294)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0011241449974477291
    2. '(i' → logprob: -7.376124382019043
    3. ' i' → logprob: -7.876124382019043
    4. '   ' → logprob: -9.251124382019043
    5. ' (' → logprob: -10.876124382019043
    6. '     ' → logprob: -14.501124382019043
    7. '(' → logprob: -14.751124382019043
    8. ' ' → logprob: -14.751124382019043
    9. '       ' → logprob: -15.001124382019043
    10. '  ' → logprob: -15.001124382019043

Token 3055: ' at' (ID: 540)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09346991032361984
    2. '[i' → logprob: -2.8434698581695557
    3. 's' → logprob: -3.7184698581695557
    4. '   ' → logprob: -5.843470096588135
    5. '(i' → logprob: -6.843470096588135
    6. ' i' → logprob: -6.968470096588135
    7. '       ' → logprob: -7.593470096588135
    8. '+' → logprob: -8.218469619750977
    9. 'idx' → logprob: -8.718469619750977
    10. '
' → logprob: -8.843469619750977

Token 3056: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.9385402993066236e-05
    2. '   ' → logprob: -11.375019073486328
    3. ' i' → logprob: -11.875019073486328
    4. '(i' → logprob: -15.125019073486328
    5. '```' → logprob: -15.250019073486328
    6. '       ' → logprob: -16.500019073486328
    7. 'idx' → logprob: -16.875019073486328
    8. '  ' → logprob: -17.125019073486328
    9. '_i' → logprob: -17.125019073486328
    10. '
' → logprob: -17.375019073486328

Token 3057: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006278486107476056
    2. ' +' → logprob: -7.3756279945373535
    3. '+i' → logprob: -13.750627517700195
    4. '   ' → logprob: -16.000627517700195
    5. '()+' → logprob: -17.000627517700195
    6. '＋' → logprob: -17.250627517700195
    7. ']' → logprob: -17.250627517700195
    8. '       ' → logprob: -18.625627517700195
    9. ']+' → logprob: -18.625627517700195
    10. '1' → logprob: -18.875627517700195

Token 3058: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -14.750000953674316
    3. '+' → logprob: -15.625000953674316
    4. ' ' → logprob: -15.750000953674316
    5. 'i' → logprob: -18.5
    6. '2' → logprob: -19.375
    7. '``' → logprob: -19.375
    8. '１' → logprob: -19.75
    9. '`' → logprob: -20.25
    10. '
' → logprob: -20.5

Token 3059: ' exists' (ID: 13031)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24302040040493011
    2. ']' → logprob: -2.3680202960968018
    3. ' +' → logprob: -2.6180202960968018
    4. ' <' → logprob: -4.118020534515381
    5. '<len' → logprob: -4.243020534515381
    6. '<n' → logprob: -5.618020534515381
    7. '   ' → logprob: -5.868020534515381
    8. '==' → logprob: -6.118020534515381
    9. '```' → logprob: -6.493020534515381
    10. '<' → logprob: -6.618020534515381

Token 3060: ' and' (ID: 326)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.648811399936676
    2. ' +' → logprob: -2.0238113403320312
    3. '(i' → logprob: -2.1488113403320312
    4. ' <' → logprob: -2.3988113403320312
    5. '       ' → logprob: -3.3988113403320312
    6. '==' → logprob: -3.8988113403320312
    7. ' ==' → logprob: -4.023811340332031
    8. '+i' → logprob: -4.273811340332031
    9. '<i' → logprob: -4.398811340332031
    10. '           ' → logprob: -4.523811340332031

Token 3061: ' starts' (ID: 13217)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.32043755054473877
    2. 'i' → logprob: -1.3204375505447388
    3. 'is' → logprob: -5.820437431335449
    4. 'm' → logprob: -6.195437431335449
    5. '(len' → logprob: -6.820437431335449
    6. '(i' → logprob: -7.945437431335449
    7. ' len' → logprob: -7.945437431335449
    8. ' i' → logprob: -9.19543743133545
    9. '(' → logprob: -10.07043743133545
    10. '   ' → logprob: -10.19543743133545

Token 3062: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.01453414000570774
    2. ' with' → logprob: -5.264533996582031
    3. '==' → logprob: -5.514533996582031
    4. 'm' → logprob: -6.514533996582031
    5. 'i' → logprob: -7.014533996582031
    6. 's' → logprob: -7.389533996582031
    7. '(m' → logprob: -7.514533996582031
    8. '(i' → logprob: -7.639533996582031
    9. 'def' → logprob: -8.014533996582031
    10. '       ' → logprob: -8.514533996582031

Token 3063: ' doubled' (ID: 69040)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03897050395607948
    2. 'mor' → logprob: -3.288970470428467
    3. 'i' → logprob: -7.413970470428467
    4. ' mor' → logprob: -8.913970947265625
    5. 'mo' → logprob: -9.788970947265625
    6. '   ' → logprob: -10.663970947265625
    7. 's' → logprob: -10.788970947265625
    8. 'v' → logprob: -11.163970947265625
    9. '	m' → logprob: -11.538970947265625
    10. ''m' → logprob: -11.788970947265625

Token 3064: ' conson' (ID: 127767)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.023293538717553e-05
    2. 'mor' → logprob: -11.500030517578125
    3. '   ' → logprob: -11.625030517578125
    4. '(m' → logprob: -12.250030517578125
    5. 'con' → logprob: -13.125030517578125
    6. ' m' → logprob: -13.375030517578125
    7. '	m' → logprob: -13.875030517578125
    8. ' ' → logprob: -14.500030517578125
    9. 's' → logprob: -15.125030517578125
    10. 'c' → logprob: -15.375030517578125

Token 3065: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.009830465540289879
    2. 'ants' → logprob: -4.634830474853516
    3. 'm' → logprob: -10.259830474853516
    4. 'ent' → logprob: -11.259830474853516
    5. 't' → logprob: -12.134830474853516
    6. 'con' → logprob: -12.509830474853516
    7. '   ' → logprob: -12.634830474853516
    8. 'antt' → logprob: -13.384830474853516
    9. '(m' → logprob: -13.884830474853516
    10. '_m' → logprob: -13.884830474853516

Token 3066: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16421912610530853
    2. 'and' → logprob: -2.1642191410064697
    3. '       ' → logprob: -4.164218902587891
    4. ':' → logprob: -5.289218902587891
    5. ':
' → logprob: -5.289218902587891
    6. '           ' → logprob: -5.414218902587891
    7. '   ' → logprob: -7.039218902587891
    8. ')' → logprob: -7.164218902587891
    9. '==' → logprob: -7.164218902587891
    10. '(i' → logprob: -7.164218902587891

Token 3067: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4306532144546509
    2. '():
' → logprob: -2.0556530952453613
    3. ':
' → logprob: -2.5556530952453613
    4. '   ' → logprob: -3.0556530952453613
    5. '):
' → logprob: -3.5556530952453613
    6. ':' → logprob: -3.9306530952453613
    7. '(i' → logprob: -4.180653095245361
    8. '():' → logprob: -4.305653095245361
    9. '(' → logprob: -5.180653095245361
    10. '):' → logprob: -5.680653095245361

Token 3068: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7180344462394714
    2. 'if' (adapté à ' if') → logprob: -1.3430345058441162
    3. ' if' → logprob: -1.5930345058441162
    4. '           ' → logprob: -3.593034505844116
    5. '   ' → logprob: -4.468034267425537
    6. 'return' → logprob: -5.093034267425537
    7. 'i' → logprob: -6.843034267425537
    8. ' return' → logprob: -7.093034267425537
    9. ' ' → logprob: -8.093034744262695
    10. '               ' → logprob: -8.593034744262695

Token 3069: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009386985562741756
    2. ' i' → logprob: -4.884387016296387
    3. '(i' → logprob: -6.509387016296387
    4. ' (' → logprob: -8.384387016296387
    5. '   ' → logprob: -9.759387016296387
    6. ' ' → logprob: -13.509387016296387
    7. '(' → logprob: -14.134387016296387
    8. '  ' → logprob: -14.509387016296387
    9. '     ' → logprob: -15.259387016296387
    10. '    ' → logprob: -15.384387016296387

Token 3070: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017202809685841203
    2. ' +' → logprob: -6.376720428466797
    3. '+i' → logprob: -12.001720428466797
    4. '<' → logprob: -12.501720428466797
    5. '<len' → logprob: -12.626720428466797
    6. '+
' → logprob: -14.126720428466797
    7. '+[' → logprob: -14.376720428466797
    8. ' <' → logprob: -14.626720428466797
    9. '()+' → logprob: -14.751720428466797
    10. '   ' → logprob: -14.876720428466797

Token 3071: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '2' → logprob: -13.500001907348633
    3. ' ' → logprob: -14.750001907348633
    4. '+' → logprob: -15.250001907348633
    5. '```' → logprob: -16.625001907348633
    6. '
' → logprob: -18.750001907348633
    7. '[' → logprob: -19.000001907348633
    8. 'len' → logprob: -19.125001907348633
    9. '0' → logprob: -19.375001907348633
    10. '=' → logprob: -19.562501907348633

Token 3072: ' >=' (ID: 5064)
  Prédit: '<len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<len' → logprob: -0.12019709497690201
    2. ' <' → logprob: -2.620197057723999
    3. '<' → logprob: -3.495197057723999
    4. '<n' → logprob: -4.745197296142578
    5. ']' → logprob: -8.245197296142578
    6. '<i' → logprob: -8.370197296142578
    7. '<m' → logprob: -8.620197296142578
    8. '<size' → logprob: -8.620197296142578
    9. '<int' → logprob: -8.870197296142578
    10. 'in' → logprob: -9.495197296142578

Token 3073: ' n' (ID: 297)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.03813134506344795
    2. 'n' → logprob: -3.2881312370300293
    3. ' len' → logprob: -9.538131713867188
    4. ' n' → logprob: -11.038131713867188
    5. '           ' → logprob: -14.163131713867188
    6. '(len' → logprob: -15.163131713867188
    7. 'length' → logprob: -15.538131713867188
    8. '   ' → logprob: -15.538131713867188
    9. '       ' → logprob: -15.788131713867188
    10. '	len' → logprob: -16.788131713867188

Token 3074: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2769605219364166
    2. 'and' → logprob: -1.7769604921340942
    3. ':
' → logprob: -2.901960611343384
    4. ':' → logprob: -4.651960372924805
    5. '           ' → logprob: -5.651960372924805
    6. '       ' → logprob: -6.151960372924805
    7. ')' → logprob: -6.526960372924805
    8. '):
' → logprob: -8.026960372924805
    9. ':return' → logprob: -8.026960372924805
    10. '               ' → logprob: -8.776960372924805

Token 3075: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007680560229346156
    2. '           ' → logprob: -7.375768184661865
    3. ' return' → logprob: -10.250767707824707
    4. 'return' → logprob: -10.250767707824707
    5. ' and' → logprob: -10.875767707824707
    6. '             ' → logprob: -11.750767707824707
    7. ':
' → logprob: -12.125767707824707
    8. '                   ' → logprob: -12.250767707824707
    9. ' ' → logprob: -12.250767707824707
    10. '              ' → logprob: -12.375767707824707

Token 3076: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05465340614318848
    2. 'False' → logprob: -3.5546534061431885
    3. '               ' → logprob: -3.8046534061431885
    4. '           ' → logprob: -6.554653167724609
    5. ' return' → logprob: -7.429653167724609
    6. '                   ' → logprob: -8.92965316772461
    7. 'True' → logprob: -9.30465316772461
    8. '   ' → logprob: -9.80465316772461
    9. ' False' → logprob: -11.55465316772461
    10. '       ' → logprob: -11.55465316772461

Token 3077: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.1279553291387856e-05
    2. ' False' → logprob: -11.500011444091797
    3. 'True' → logprob: -13.750011444091797
    4. '(False' → logprob: -18.500011444091797
    5. '
' → logprob: -21.500011444091797
    6. '   ' → logprob: -22.375011444091797
    7. 'F' → logprob: -22.875011444091797
    8. 'false' → logprob: -23.125011444091797
    9. '0' → logprob: -23.500011444091797
    10. '=False' → logprob: -23.500011444091797

Token 3078: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02418799325823784
    2. '               ' → logprob: -4.399188041687012
    3. ':
' → logprob: -5.399188041687012
    4. ':' → logprob: -5.774188041687012
    5. '       ' → logprob: -5.899188041687012
    6. ')' → logprob: -8.274188041687012
    7. '):
' → logprob: -8.274188041687012
    8. '):' → logprob: -8.399188041687012
    9. ' and' → logprob: -8.774188041687012
    10. '   ' → logprob: -9.024188041687012

Token 3079: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07154247164726257
    2. '       ' → logprob: -3.321542501449585
    3. '   ' → logprob: -3.696542501449585
    4. '               ' → logprob: -5.321542263031006
    5. 'if' → logprob: -7.196542263031006
    6. '
' → logprob: -7.571542263031006
    7. ' ' → logprob: -7.696542263031006
    8. ' if' → logprob: -7.696542263031006
    9. '```' → logprob: -7.696542263031006
    10. ')' → logprob: -9.071542739868164

Token 3080: ' m' (ID: 284)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6713410019874573
    2. 'm' (adapté à ' m') → logprob: -0.9213410019874573
    3. '   ' → logprob: -3.4213409423828125
    4. ' if' → logprob: -3.9213409423828125
    5. 'if' → logprob: -3.9213409423828125
    6. ' ' → logprob: -4.4213409423828125
    7. 'return' → logprob: -5.7963409423828125
    8. ' m' → logprob: -7.0463409423828125
    9. '           ' → logprob: -7.1713409423828125
    10. ' return' → logprob: -7.9213409423828125

Token 3081: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6242002248764038
    2. ' =' → logprob: -1.6242002248764038
    3. '[i' → logprob: -1.8742002248764038
    4. '[' → logprob: -2.2492003440856934
    5. '=i' → logprob: -5.874200344085693
    6. '   ' → logprob: -5.999200344085693
    7. '=[' → logprob: -6.749200344085693
    8. 'i' → logprob: -7.374200344085693
    9. 'm' → logprob: -7.499200344085693
    10. '(i' → logprob: -8.999199867248535

Token 3082: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002669949783012271
    2. 'mor' → logprob: -6.002669811248779
    3. ' mor' → logprob: -9.752670288085938
    4. '   ' → logprob: -9.877670288085938
    5. 'n' → logprob: -11.127670288085938
    6. 'import' → logprob: -11.627670288085938
    7. 'maras' → logprob: -11.627670288085938
    8. 'lor' → logprob: -12.002670288085938
    9. '(m' → logprob: -12.127670288085938
    10. 'meras' → logprob: -12.377670288085938

Token 3083: 'as' (ID: 288)
  Prédit: 'oras'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -0.0028596781194210052
    2. 'or' → logprob: -6.627859592437744
    3. '[' → logprob: -7.002859592437744
    4. 'as' → logprob: -7.502859592437744
    5. 'ras' → logprob: -10.377860069274902
    6. 'ors' → logprob: -11.752860069274902
    7. 'aras' → logprob: -12.627860069274902
    8. '#' → logprob: -12.627860069274902
    9. 'oas' → logprob: -12.752860069274902
    10. '=' → logprob: -12.877860069274902

Token 3084: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.36574100604048e-06
    2. 'i' → logprob: -12.875004768371582
    3. '   ' → logprob: -14.375004768371582
    4. '[' → logprob: -14.875004768371582
    5. '           ' → logprob: -14.875004768371582
    6. '       ' → logprob: -15.375004768371582
    7. ' [' → logprob: -16.000003814697266
    8. '(i' → logprob: -17.000003814697266
    9. '```' → logprob: -17.000003814697266
    10. '
' → logprob: -17.250003814697266

Token 3085: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000321995816193521
    2. '][' → logprob: -8.625322341918945
    3. '[' → logprob: -9.250322341918945
    4. ' +' → logprob: -10.750322341918945
    5. '+i' → logprob: -11.625322341918945
    6. 'i' → logprob: -12.250322341918945
    7. '[i' → logprob: -12.750322341918945
    8. ']' → logprob: -13.000322341918945
    9. '1' → logprob: -13.500322341918945
    10. '   ' → logprob: -13.750322341918945

Token 3086: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014964265748858452
    2. 'i' → logprob: -4.2649641036987305
    3. '+' → logprob: -7.1399641036987305
    4. ' i' → logprob: -13.13996410369873
    5. '```' → logprob: -13.13996410369873
    6. '[i' → logprob: -13.88996410369873
    7. ' ' → logprob: -14.01496410369873
    8. '(i' → logprob: -14.26496410369873
    9. '   ' → logprob: -14.76496410369873
    10. ' +' → logprob: -15.38996410369873

Token 3087: ']
' (ID: 1592)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.24174100160598755
    2. ']
' → logprob: -1.9917409420013428
    3. ']' → logprob: -2.6167409420013428
    4. '[' → logprob: -5.491741180419922
    5. '].' → logprob: -7.616741180419922
    6. '           ' → logprob: -8.741741180419922
    7. ']
' → logprob: -9.616741180419922
    8. ']:
' → logprob: -9.616741180419922
    9. '   ' → logprob: -9.741741180419922
    10. '0' → logprob: -9.741741180419922

Token 3088: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020077454391866922
    2. '       ' → logprob: -6.502007961273193
    3. '   ' → logprob: -8.502007484436035
    4. 'if' → logprob: -8.627007484436035
    5. '```' → logprob: -9.877007484436035
    6. ' if' → logprob: -10.502007484436035
    7. '
' → logprob: -10.877007484436035
    8. '               ' → logprob: -11.252007484436035
    9. 'return' → logprob: -12.502007484436035
    10. ' ' → logprob: -12.627007484436035

Token 3089: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.08127766847610474
    2. ' if' → logprob: -2.95627760887146
    3. '           ' → logprob: -3.70627760887146
    4. 'len' → logprob: -7.081277847290039
    5. '   ' → logprob: -8.831277847290039
    6. 'return' → logprob: -8.956277847290039
    7. '       ' → logprob: -9.331277847290039
    8. ' len' → logprob: -9.581277847290039
    9. ' ' → logprob: -9.706277847290039
    10. '(len' → logprob: -9.706277847290039

Token 3090: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -8.840432565193623e-05
    2. ' len' → logprob: -9.375088691711426
    3. '(len' → logprob: -13.000088691711426
    4. ' ' → logprob: -14.125088691711426
    5. '   ' → logprob: -15.375088691711426
    6. 'm' → logprob: -15.875088691711426
    7. '  ' → logprob: -16.62508773803711
    8. '	len' → logprob: -17.75008773803711
    9. 'length' → logprob: -18.37508773803711
    10. '
' → logprob: -18.75008773803711

Token 3091: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.4855663721391466e-05
    2. 'm' → logprob: -11.125015258789062
    3. '(' → logprob: -16.500015258789062
    4. '[m' → logprob: -17.625015258789062
    5. ' (' → logprob: -18.500015258789062
    6. '(
' → logprob: -18.625015258789062
    7. ' m' → logprob: -19.375015258789062
    8. '(s' → logprob: -19.500015258789062
    9. '_m' → logprob: -19.750015258789062
    10. '	m' → logprob: -19.750015258789062

Token 3092: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005475651938468218
    2. ')>=' → logprob: -5.2554755210876465
    3. 'm' → logprob: -9.005475997924805
    4. ')>' → logprob: -10.005475997924805
    5. '>=' → logprob: -10.755475997924805
    6. '(m' → logprob: -11.505475997924805
    7. ')m' → logprob: -11.505475997924805
    8. '[' → logprob: -11.755475997924805
    9. '[m' → logprob: -12.380475997924805
    10. ']>=' → logprob: -12.630475997924805

Token 3093: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.012256975285708904
    2. '>' → logprob: -5.387257099151611
    3. ')>=' → logprob: -5.512257099151611
    4. ' >=' → logprob: -5.887257099151611
    5. ']>=' → logprob: -7.762257099151611
    6. ')' → logprob: -8.387256622314453
    7. '```' → logprob: -10.637256622314453
    8. '[' → logprob: -10.887256622314453
    9. 'and' → logprob: -11.137256622314453
    10. '≥' → logprob: -11.262256622314453

Token 3094: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.50001335144043
    3. '```' → logprob: -13.62501335144043
    4. '   ' → logprob: -13.75001335144043
    5. '۲' → logprob: -15.68751335144043
    6. '1' → logprob: -16.00001335144043
    7. '２' → logprob: -16.31251335144043
    8. 'def' → logprob: -16.62501335144043
    9. '२' → logprob: -16.81251335144043
    10. '`' → logprob: -16.87501335144043

Token 3095: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2842308680992573e-05
    2. ' ' → logprob: -10.875022888183594
    3. '```' → logprob: -13.750022888183594
    4. '   ' → logprob: -13.812522888183594
    5. 'def' → logprob: -15.312522888183594
    6. '۲' → logprob: -15.500022888183594
    7. '1' → logprob: -15.562522888183594
    8. '２' → logprob: -16.250022888183594
    9. '=' → logprob: -16.500022888183594
    10. '...' → logprob: -16.937522888183594

Token 3096: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.03808050975203514
    2. ' and' → logprob: -3.2880804538726807
    3. '           ' → logprob: -10.288080215454102
    4. '          ' → logprob: -13.413080215454102
    5. '               ' → logprob: -13.788080215454102
    6. '       ' → logprob: -14.288080215454102
    7. '	and' → logprob: -14.413080215454102
    8. '```' → logprob: -14.913080215454102
    9. '              ' → logprob: -15.288080215454102
    10. '      ' → logprob: -15.663080215454102

Token 3097: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.988221684878226e-06
    2. ' m' → logprob: -11.875006675720215
    3. '(m' → logprob: -17.37500762939453
    4. '	m' → logprob: -18.75000762939453
    5. '[m' → logprob: -20.00000762939453
    6. '{' → logprob: -20.12500762939453
    7. '[' → logprob: -20.62500762939453
    8. '   ' → logprob: -21.25000762939453
    9. '#' → logprob: -21.50000762939453
    10. '_m' → logprob: -21.62500762939453

Token 3098: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00022547018306795508
    2. '0' → logprob: -9.250225067138672
    3. '```' → logprob: -9.375225067138672
    4. 'm' → logprob: -11.000225067138672
    5. '#' → logprob: -11.875225067138672
    6. '[m' → logprob: -12.375225067138672
    7. ' [' → logprob: -12.500225067138672
    8. '][' → logprob: -13.000225067138672
    9. ' ' → logprob: -13.375225067138672
    10. '``' → logprob: -13.625225067138672

Token 3099: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3915141355246305e-05
    2. '1' → logprob: -10.87502384185791
    3. ' ' → logprob: -13.25002384185791
    4. '[' → logprob: -13.62502384185791
    5. '   ' → logprob: -14.50002384185791
    6. '```' → logprob: -15.50002384185791
    7. '#' → logprob: -15.68752384185791
    8. '
' → logprob: -15.81252384185791
    9. '۰' → logprob: -15.93752384185791
    10. 'i' → logprob: -16.000024795532227

Token 3100: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.045798372477293015
    2. ']==' → logprob: -3.5457983016967773
    3. '==' → logprob: -4.795798301696777
    4. ' ==' → logprob: -4.920798301696777
    5. 'm' → logprob: -8.920798301696777
    6. '```' → logprob: -9.170798301696777
    7. '[' → logprob: -10.545798301696777
    8. '#' → logprob: -10.670798301696777
    9. ')' → logprob: -10.920798301696777
    10. ' ]' → logprob: -11.295798301696777

Token 3101: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011213334277272224
    2. ' ==' → logprob: -4.511213302612305
    3. 'm' → logprob: -9.511213302612305
    4. '==
' → logprob: -10.261213302612305
    5. '=' → logprob: -10.386213302612305
    6. ']==' → logprob: -11.011213302612305
    7. '```' → logprob: -12.261213302612305
    8. ')==' → logprob: -13.761213302612305
    9. '===' → logprob: -13.761213302612305
    10. '#' → logprob: -14.261213302612305

Token 3102: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.1008713702030946e-06
    2. ' m' → logprob: -13.125001907348633
    3. '<|end|>' → logprob: -18.625001907348633
    4. '	m' → logprob: -19.750001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '<|end|>' → logprob: -20.000001907348633
    7. ' ' → logprob: -20.375001907348633
    8. ')m' → logprob: -20.625001907348633
    9. 'м' → logprob: -21.875001907348633
    10. ''m' → logprob: -22.000001907348633

Token 3103: '[' (ID: 58)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.049526043236255646
    2. '[' → logprob: -3.0495259761810303
    3. ']' → logprob: -7.549526214599609
    4. '1' → logprob: -8.29952621459961
    5. '][' → logprob: -9.67452621459961
    6. ' m' → logprob: -10.79952621459961
    7. '```' → logprob: -11.17452621459961
    8. '[m' → logprob: -11.67452621459961
    9. '_m' → logprob: -11.92452621459961
    10. 'м' → logprob: -12.17452621459961

Token 3104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -18.125
    3. 'i' → logprob: -18.375
    4. '   ' → logprob: -18.5
    5. 'm' → logprob: -18.75
    6. '```' → logprob: -18.8125
    7. '
' → logprob: -19.125
    8. ' ' → logprob: -19.1875
    9. '[' → logprob: -19.25
    10. ']' → logprob: -19.375

Token 3105: ']' (ID: 60)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.9103454947471619
    2. ' and' → logprob: -1.4103455543518066
    3. ']:
' → logprob: -1.7853455543518066
    4. ':' → logprob: -2.6603455543518066
    5. ':
' → logprob: -2.9103455543518066
    6. ']' → logprob: -3.4103455543518066
    7. ']:' → logprob: -4.160345554351807
    8. ':return' → logprob: -6.160345554351807
    9. ']==' → logprob: -6.660345554351807
    10. '       ' → logprob: -6.785345554351807

Token 3106: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5834176540374756
    2. 'and' → logprob: -0.8334176540374756
    3. ':
' → logprob: -5.208417892456055
    4. ':' → logprob: -6.708417892456055
    5. '       ' → logprob: -8.208417892456055
    6. '           ' → logprob: -8.458417892456055
    7. 'in' → logprob: -9.083417892456055
    8. '               ' → logprob: -9.583417892456055
    9. ' in' → logprob: -11.458417892456055
    10. '          ' → logprob: -11.458417892456055

Token 3107: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.157039049663581e-05
    2. ' m' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.125051498413086
    4. '	m' → logprob: -18.250051498413086
    5. ' ' → logprob: -18.500051498413086
    6. '           ' → logprob: -18.500051498413086
    7. '(m' → logprob: -18.750051498413086
    8. ' ' → logprob: -19.375051498413086
    9. '       ' → logprob: -19.500051498413086
    10. '
' → logprob: -20.000051498413086

Token 3108: '[' (ID: 58)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.2906703054904938
    2. 'in' → logprob: -1.7906702756881714
    3. '[' → logprob: -2.790670394897461
    4. ' in' → logprob: -4.165670394897461
    5. ']' → logprob: -5.540670394897461
    6. ')' → logprob: -6.415670394897461
    7. '[m' → logprob: -6.790670394897461
    8. '```' → logprob: -7.540670394897461
    9. ')m' → logprob: -8.165670394897461
    10. ' m' → logprob: -8.790670394897461

Token 3109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0053716679103672504
    2. '1' → logprob: -5.380371570587158
    3. 'm' → logprob: -8.130372047424316
    4. '[' → logprob: -8.630372047424316
    5. 'i' → logprob: -8.755372047424316
    6. ']' → logprob: -9.630372047424316
    7. '```' → logprob: -10.755372047424316
    8. '
' → logprob: -11.630372047424316
    9. '2' → logprob: -12.130372047424316
    10. '][' → logprob: -13.192872047424316

Token 3110: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0242226123809814
    2. 'in' → logprob: -1.0242226123809814
    3. ' in' → logprob: -1.2742226123809814
    4. ')' → logprob: -7.274222373962402
    5. 'import' → logprob: -7.524222373962402
    6. 'In' → logprob: -8.149222373962402
    7. ' ]' → logprob: -9.274222373962402
    8. '[' → logprob: -9.399222373962402
    9. '```' → logprob: -9.399222373962402
    10. '           ' → logprob: -9.899222373962402

Token 3111: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38694438338279724
    2. 'in' → logprob: -1.1369444131851196
    3. ')' → logprob: -11.261944770812988
    4. 'import' → logprob: -11.511944770812988
    5. 'In' → logprob: -12.011944770812988
    6. '```' → logprob: -12.011944770812988
    7. '
' → logprob: -12.136944770812988
    8. '[' → logprob: -12.261944770812988
    9. ']' → logprob: -12.511944770812988
    10. '           ' → logprob: -12.761944770812988

Token 3112: ' CON' (ID: 5802)
  Prédit: 'CON'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CON' → logprob: 0.0
    2. ' CON' → logprob: -16.75
    3. '(CON' → logprob: -21.25
    4. '_CON' → logprob: -21.75
    5. '   ' → logprob: -22.875
    6. '.CON' → logprob: -24.0
    7. 'C' → logprob: -24.0
    8. 'CONS' → logprob: -24.125
    9. 'CONT' → logprob: -24.375
    10. 'COM' → logprob: -25.125

Token 3113: 'SON' (ID: 4214)
  Prédit: 'SON'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SON' → logprob: -1.1472419600977446e-06
    2. 'son' → logprob: -14.250000953674316
    3. 'S' → logprob: -14.750000953674316
    4. 'CON' → logprob: -18.250001907348633
    5. '```' → logprob: -18.500001907348633
    6. 'SOR' → logprob: -19.000001907348633
    7. '#' → logprob: -19.875001907348633
    8. 'ONS' → logprob: -20.000001907348633
    9. '``' → logprob: -20.000001907348633
    10. 'CONS' → logprob: -20.000001907348633

Token 3114: 'ANTS' (ID: 96531)
  Prédit: 'ANTS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANTS' → logprob: -6.360996485454962e-05
    2. 'ants' → logprob: -10.8750638961792
    3. 'N' → logprob: -11.2500638961792
    4. '{' → logprob: -11.6250638961792
    5. 'S' → logprob: -12.0000638961792
    6. '#' → logprob: -12.8750638961792
    7. 'ENTS' → logprob: -13.1250638961792
    8. '
' → logprob: -13.1250638961792
    9. '_' → logprob: -13.3750638961792
    10. '{'' → logprob: -13.6250638961792

Token 3115: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12994925677776337
    2. ':' → logprob: -2.5049493312835693
    3. '               ' → logprob: -3.7549493312835693
    4. ' and' → logprob: -4.62994909286499
    5. 'and' → logprob: -5.62994909286499
    6. '           ' → logprob: -6.37994909286499
    7. ':return' → logprob: -6.87994909286499
    8. '):
' → logprob: -7.87994909286499
    9. '       ' → logprob: -8.629949569702148
    10. '():
' → logprob: -10.504949569702148

Token 3116: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013636123389005661
    2. ':' → logprob: -5.263636112213135
    3. ':
' → logprob: -5.263636112213135
    4. '           ' → logprob: -6.013636112213135
    5. '       ' → logprob: -7.513636112213135
    6. ' and' → logprob: -9.138636589050293
    7. ':return' → logprob: -10.263636589050293
    8. '                   ' → logprob: -10.888636589050293
    9. '```' → logprob: -11.763636589050293
    10. '):
' → logprob: -12.013636589050293

Token 3117: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.031688351184129715
    2. ' return' → logprob: -3.7816884517669678
    3. '               ' → logprob: -4.781688213348389
    4. '                   ' → logprob: -10.781688690185547
    5. '	return' → logprob: -13.156688690185547
    6. 'True' → logprob: -14.156688690185547
    7. ':return' → logprob: -14.656688690185547
    8. '   ' → logprob: -14.781688690185547
    9. '           ' → logprob: -15.031688690185547
    10. '```' → logprob: -15.281688690185547

Token 3118: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.842555426876061e-06
    2. ' True' → logprob: -12.250004768371582
    3. '(True' → logprob: -20.0000057220459
    4. 'False' → logprob: -20.1250057220459
    5. '   ' → logprob: -21.3750057220459
    6. '=True' → logprob: -22.7500057220459
    7. '           ' → logprob: -23.7500057220459
    8. '
' → logprob: -24.1250057220459
    9. 'true' → logprob: -24.3750057220459
    10. '[' → logprob: -24.6250057220459

Token 3119: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02492569573223591
    2. '       ' → logprob: -4.649925708770752
    3. ')' → logprob: -4.899925708770752
    4. '               ' → logprob: -6.024925708770752
    5. '<|end|>' → logprob: -6.399925708770752
    6. '#' → logprob: -7.024925708770752
    7. ':' → logprob: -7.149925708770752
    8. '```' → logprob: -7.524925708770752
    9. ':return' → logprob: -8.899925231933594
    10. '		' → logprob: -9.149925231933594

Token 3120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023357603640761226
    2. '
' → logprob: -9.25023365020752
    3. '       ' → logprob: -9.37523365020752
    4. '		' → logprob: -10.75023365020752
    5. 'return' → logprob: -11.62523365020752
    6. '            
' → logprob: -12.25023365020752
    7. '               ' → logprob: -12.37523365020752
    8. '          ' → logprob: -12.87523365020752
    9. '    
' → logprob: -13.37523365020752
    10. '   ' → logprob: -13.37523365020752

Token 3121: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0065761045552790165
    2. '       ' → logprob: -5.881576061248779
    3. '		' → logprob: -6.506576061248779
    4. '	' → logprob: -6.506576061248779
    5. '
' → logprob: -8.006576538085938
    6. 'return' (adapté à ' return') → logprob: -9.131576538085938
    7. '               ' → logprob: -10.006576538085938
    8. ' ' → logprob: -10.006576538085938
    9. '​' → logprob: -10.131576538085938
    10. '   ' → logprob: -10.381576538085938

Token 3122: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.38764575123786926
    2. 'True' → logprob: -1.1376457214355469
    3. ' True' → logprob: -7.637645721435547
    4. ' False' → logprob: -8.137645721435547
    5. '(True' → logprob: -16.262645721435547
    6. '   ' → logprob: -16.887645721435547
    7. '(False' → logprob: -18.262645721435547
    8. '    ' → logprob: -19.762645721435547
    9. '           ' → logprob: -20.137645721435547
    10. '=True' → logprob: -20.387645721435547

Token 3123: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005395138170570135
    2. ')' → logprob: -6.00539493560791
    3. '        
' → logprob: -6.75539493560791
    4. '<|end|>' → logprob: -7.13039493560791
    5. '
' → logprob: -8.50539493560791
    6. '           ' → logprob: -9.25539493560791
    7. '```' → logprob: -9.50539493560791
    8. ':' → logprob: -9.63039493560791
    9. '   ' → logprob: -9.75539493560791
    10. '    
' → logprob: -10.00539493560791

Token 3124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00157437555026263
    2. '        
' → logprob: -7.251574516296387
    3. '
' → logprob: -7.376574516296387
    4. '```' → logprob: -9.876574516296387
    5. 'for' → logprob: -10.126574516296387
    6. '           ' → logprob: -10.501574516296387
    7. '   ' → logprob: -10.501574516296387
    8. ' for' → logprob: -11.001574516296387
    9. ')' → logprob: -11.376574516296387
    10. '<|end|>' → logprob: -11.501574516296387

Token 3125: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003192804753780365
    2. 'for' (adapté à ' for') → logprob: -6.003192901611328
    3. ' for' → logprob: -7.503192901611328
    4. '   ' → logprob: -9.878192901611328
    5. '           ' → logprob: -10.253192901611328
    6. ')' → logprob: -10.628192901611328
    7. '        
' → logprob: -10.753192901611328
    8. '```' → logprob: -11.503192901611328
    9. '`' → logprob: -12.753192901611328
    10. 'i' → logprob: -12.753192901611328

Token 3126: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04859315976500511
    2. ' i' → logprob: -3.048593044281006
    3. '       ' → logprob: -12.923593521118164
    4. '   ' → logprob: -13.673593521118164
    5. 'idx' → logprob: -13.673593521118164
    6. '	i' → logprob: -15.298593521118164
    7. ' ' → logprob: -15.798593521118164
    8. '_i' → logprob: -15.798593521118164
    9. ' idx' → logprob: -15.923593521118164
    10. ')' → logprob: -16.673593521118164

Token 3127: ',m' (ID: 26648)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16030952334403992
    2. 'in' → logprob: -1.9103095531463623
    3. '+' → logprob: -10.660309791564941
    4. ',' → logprob: -11.160309791564941
    5. ' ' → logprob: -11.535309791564941
    6. '        ' → logprob: -12.410309791564941
    7. '	in' → logprob: -12.535309791564941
    8. '=' → logprob: -12.910309791564941
    9. '       ' → logprob: -13.035309791564941
    10. '_in' → logprob: -13.035309791564941

Token 3128: 'ora' (ID: 2505)
  Prédit: 'ora'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -0.42311882972717285
    2. 'oras' → logprob: -2.423118829727173
    3. 'in' → logprob: -2.923118829727173
    4. ' in' → logprob: -2.923118829727173
    5. '=' → logprob: -3.173118829727173
    6. '[' → logprob: -3.298118829727173
    7. 'or' → logprob: -3.923118829727173
    8. ' =' → logprob: -4.048118591308594
    9. '[i' → logprob: -4.798118591308594
    10. ')' → logprob: -5.048118591308594

Token 3129: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6178575158119202
    2. '[' → logprob: -1.6178574562072754
    3. 'in' → logprob: -1.6178574562072754
    4. '[i' → logprob: -3.6178574562072754
    5. ')' → logprob: -3.7428574562072754
    6. ':' → logprob: -6.242857456207275
    7. ',' → logprob: -6.367857456207275
    8. ':
' → logprob: -6.492857456207275
    9. '):
' → logprob: -6.617857456207275
    10. '[in' → logprob: -6.617857456207275

Token 3130: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.20264694094657898
    2. 'm' → logprob: -2.3276469707489014
    3. ' enumerate' → logprob: -2.5776469707489014
    4. 'in' → logprob: -5.577646732330322
    5. 'range' → logprob: -5.702646732330322
    6. 'mor' → logprob: -6.702646732330322
    7. 'v' → logprob: -7.702646732330322
    8. 'parse' → logprob: -7.952646732330322
    9. 'mo' → logprob: -8.20264720916748
    10. ' mor' → logprob: -8.45264720916748

Token 3131: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.2162918597459793
    2. 'm' → logprob: -1.716291904449463
    3. ')' → logprob: -4.466291904449463
    4. ' (' → logprob: -5.966291904449463
    5. '   ' → logprob: -8.966291427612305
    6. ')m' → logprob: -9.091291427612305
    7. '       ' → logprob: -9.341291427612305
    8. '):' → logprob: -9.466291427612305
    9. '(' → logprob: -10.341291427612305
    10. '):
' → logprob: -10.466291427612305

Token 3132: 'oras' (ID: 41056)
  Prédit: 'ora'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -0.5445645451545715
    2. '):' → logprob: -1.7945644855499268
    3. '):
' → logprob: -1.9195644855499268
    4. ')' → logprob: -3.0445644855499268
    5. '[' → logprob: -4.169564723968506
    6. 'or' → logprob: -4.419564723968506
    7. 'oras' → logprob: -4.544564723968506
    8. '   ' → logprob: -5.044564723968506
    9. '[i' → logprob: -5.419564723968506
    10. '(i' → logprob: -7.169564723968506

Token 3133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11748865246772766
    2. '):
' → logprob: -2.3674886226654053
    3. ':' → logprob: -4.242488861083984
    4. '       ' → logprob: -6.492488861083984
    5. '[' → logprob: -7.867488861083984
    6. ':
' → logprob: -8.617488861083984
    7. '           ' → logprob: -8.617488861083984
    8. '   ' → logprob: -8.742488861083984
    9. ')' → logprob: -9.742488861083984
    10. ',' → logprob: -9.992488861083984

Token 3134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6088693141937256
    2. '       ' → logprob: -0.8588693141937256
    3. '   ' → logprob: -3.4838693141937256
    4. '```' → logprob: -6.983869552612305
    5. ':' → logprob: -7.983869552612305
    6. '         ' → logprob: -9.608869552612305
    7. '	   ' → logprob: -9.858869552612305
    8. ' ' → logprob: -10.108869552612305
    9. '#' → logprob: -10.358869552612305
    10. '	       ' → logprob: -10.608869552612305

Token 3135: ' v' (ID: 323)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3795910179615021
    2. 'v' (adapté à ' v') → logprob: -1.7545909881591797
    3. '       ' → logprob: -2.2545909881591797
    4. 'if' → logprob: -3.8795909881591797
    5. ' if' → logprob: -4.37959098815918
    6. '   ' → logprob: -5.62959098815918
    7. ' v' → logprob: -8.00459098815918
    8. '```' → logprob: -8.62959098815918
    9. ' vowel' → logprob: -9.00459098815918
    10. '	v' → logprob: -9.25459098815918

Token 3136: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31251874566078186
    2. ' =' → logprob: -1.5625187158584595
    3. 'owel' → logprob: -2.937518835067749
    4. 'al' → logprob: -6.56251859664917
    5. '   ' → logprob: -6.93751859664917
    6. '=v' → logprob: -7.18751859664917
    7. 'owels' → logprob: -7.31251859664917
    8. '       ' → logprob: -7.68751859664917
    9. 'ow' → logprob: -7.93751859664917
    10. 'v' → logprob: -8.687519073486328

Token 3137: ' vowels' (ID: 176245)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.4765644669532776
    2. 'v' → logprob: -0.9765644669532776
    3. 'm' → logprob: -6.476564407348633
    4. ' get' → logprob: -7.101564407348633
    5. ' vowels' → logprob: -9.351564407348633
    6. '(get' → logprob: -11.226564407348633
    7. ' v' → logprob: -11.851564407348633
    8. '   ' → logprob: -12.351564407348633
    9. '`' → logprob: -13.226564407348633
    10. '.get' → logprob: -13.476564407348633

Token 3138: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020294437126722187
    2. '           ' → logprob: -9.000203132629395
    3. 'i' → logprob: -10.000203132629395
    4. '(i' → logprob: -10.875203132629395
    5. '{i' → logprob: -12.500203132629395
    6. '```' → logprob: -13.000203132629395
    7. '=i' → logprob: -13.125203132629395
    8. ')' → logprob: -13.250203132629395
    9. ' =' → logprob: -13.625203132629395
    10. ' i' → logprob: -14.375203132629395

Token 3139: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41326525807380676
    2. ']
' → logprob: -1.4132652282714844
    3. '           ' → logprob: -2.6632652282714844
    4. ')' → logprob: -4.038265228271484
    5. ')
' → logprob: -4.913265228271484
    6. '])' → logprob: -9.413265228271484
    7. ')]' → logprob: -9.413265228271484
    8. '       ' → logprob: -9.538265228271484
    9. '               ' → logprob: -9.663265228271484
    10. '   ' → logprob: -10.538265228271484

Token 3140: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00043615259346552193
    2. '               ' → logprob: -9.000435829162598
    3. ':' → logprob: -9.375435829162598
    4. '            ' → logprob: -9.625435829162598
    5. ' if' → logprob: -9.875435829162598
    6. ' ' → logprob: -10.875435829162598
    7. '	       ' → logprob: -10.875435829162598
    8. '          ' → logprob: -11.000435829162598
    9. ' and' → logprob: -11.750435829162598
    10. '<|end|>' → logprob: -11.875435829162598

Token 3141: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000528606993611902
    2. ' if' → logprob: -8.125528335571289
    3. 'if' (adapté à ' if') → logprob: -8.375528335571289
    4. '   ' → logprob: -14.875528335571289
    5. ' ' → logprob: -15.000528335571289
    6. '               ' → logprob: -15.250528335571289
    7. '            
' → logprob: -15.250528335571289
    8. '          ' → logprob: -15.500528335571289
    9. '            ' → logprob: -15.625528335571289
    10. '		' → logprob: -15.750528335571289

Token 3142: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.1004125103354454
    2. ' v' → logprob: -2.350412607192993
    3. '(v' → logprob: -8.975412368774414
    4. '           ' → logprob: -9.725412368774414
    5. ' (' → logprob: -11.350412368774414
    6. '(' → logprob: -12.725412368774414
    7. '   ' → logprob: -13.975412368774414
    8. '	v' → logprob: -14.225412368774414
    9. ' ' → logprob: -14.350412368774414
    10. 'i' → logprob: -14.725412368774414

Token 3143: ' not' (ID: 625)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.44402170181274414
    2. '==' → logprob: -1.3190217018127441
    3. ' in' → logprob: -2.444021701812744
    4. 'in' → logprob: -5.819021701812744
    5. '=='' → logprob: -6.694021701812744
    6. ' =='' → logprob: -9.944021224975586
    7. '           ' → logprob: -10.819021224975586
    8. ' !=' → logprob: -11.069021224975586
    9. '=="' → logprob: -11.819021224975586
    10. '```' → logprob: -11.944021224975586

Token 3144: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.101719930768013
    2. 'in' → logprob: -2.601719856262207
    3. ' ==' → logprob: -4.351719856262207
    4. '==' → logprob: -4.726719856262207
    5. ')' → logprob: -8.351719856262207
    6. '=' → logprob: -8.726719856262207
    7. ' ' → logprob: -9.851719856262207
    8. '[' → logprob: -10.226719856262207
    9. 'v' → logprob: -10.351719856262207
    10. '=='' → logprob: -10.351719856262207

Token 3145: ' {'' (ID: 11881)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -0.0008260641479864717
    2. ' {'' → logprob: -7.250825881958008
    3. ''i' → logprob: -9.625825881958008
    4. '{i' → logprob: -10.625825881958008
    5. '{"' → logprob: -11.500825881958008
    6. 'i' → logprob: -12.375825881958008
    7. ''' → logprob: -12.625825881958008
    8. '{' → logprob: -13.000825881958008
    9. 'V' → logprob: -13.250825881958008
    10. '({'' → logprob: -13.250825881958008

Token 3146: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000561969296541065
    2. ''i' → logprob: -7.5005621910095215
    3. ' i' → logprob: -12.500561714172363
    4. ''' → logprob: -13.000561714172363
    5. 'iu' → logprob: -13.125561714172363
    6. ''u' → logprob: -14.125561714172363
    7. 'u' → logprob: -15.125561714172363
    8. '‘i' → logprob: -17.12556266784668
    9. '"' → logprob: -17.75056266784668
    10. '	i' → logprob: -18.12556266784668

Token 3147: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.10144466906785965
    2. '',' → logprob: -2.351444721221924
    3. ''' → logprob: -7.601444721221924
    4. ',' → logprob: -8.226444244384766
    5. 'u' → logprob: -8.851444244384766
    6. ',u' → logprob: -9.226444244384766
    7. ''u' → logprob: -9.351444244384766
    8. ','' → logprob: -9.351444244384766
    9. '',"' → logprob: -11.101444244384766
    10. '',
' → logprob: -11.476444244384766

Token 3148: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.000307575857732445
    2. ''u' → logprob: -8.2503080368042
    3. ' u' → logprob: -10.0003080368042
    4. ''' → logprob: -14.8753080368042
    5. '	u' → logprob: -15.2503080368042
    6. ',u' → logprob: -15.3753080368042
    7. '   ' → logprob: -16.875307083129883
    8. '_u' → logprob: -17.250307083129883
    9. ' ' → logprob: -17.750307083129883
    10. ' '' → logprob: -17.875307083129883

Token 3149: ''}' (ID: 17352)
  Prédit: ''}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.09316576272249222
    2. '}' → logprob: -2.468165874481201
    3. '           ' → logprob: -6.843165874481201
    4. '',' → logprob: -7.218165874481201
    5. '               ' → logprob: -7.593165874481201
    6. '','' → logprob: -7.593165874481201
    7. ''' → logprob: -7.718165874481201
    8. '':' → logprob: -8.718165397644043
    9. ',' → logprob: -8.843165397644043
    10. '':
' → logprob: -8.843165397644043

Token 3150: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.42872628569602966
    2. ':' → logprob: -1.428726315498352
    3. '               ' → logprob: -3.1787261962890625
    4. '           ' → logprob: -3.5537261962890625
    5. ':
' → logprob: -3.5537261962890625
    6. 'and' → logprob: -4.8037261962890625
    7. '              ' → logprob: -7.9287261962890625
    8. ' or' → logprob: -8.178726196289062
    9. '       ' → logprob: -8.428726196289062
    10. '          ' → logprob: -8.553726196289062

Token 3151: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10950232297182083
    2. ' and' → logprob: -3.1095023155212402
    3. ':
' → logprob: -3.2345023155212402
    4. ':' → logprob: -3.9845023155212402
    5. '           ' → logprob: -8.109502792358398
    6. 'and' → logprob: -8.359502792358398
    7. ' or' → logprob: -9.109502792358398
    8. ' continue' → logprob: -9.359502792358398
    9. '                   ' → logprob: -9.859502792358398
    10. ' ==' → logprob: -9.859502792358398

Token 3152: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.13638871908187866
    2. 'continue' (adapté à ' continue') → logprob: -2.6363887786865234
    3. '               ' → logprob: -2.8863887786865234
    4. '           ' → logprob: -10.136388778686523
    5. '	continue' → logprob: -10.136388778686523
    6. '_continue' → logprob: -11.761388778686523
    7. '                   ' → logprob: -12.386388778686523
    8. ' continues' → logprob: -12.511388778686523
    9. '   ' → logprob: -13.386388778686523
    10. 'contin' → logprob: -14.261388778686523

Token 3153: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006758584058843553
    2. '               ' → logprob: -8.875676155090332
    3. '            
' → logprob: -9.000676155090332
    4. '       ' → logprob: -9.125676155090332
    5. '
' → logprob: -9.750676155090332
    6. '<|end|>' → logprob: -10.250676155090332
    7. ' 
' → logprob: -10.625676155090332
    8. ' ' → logprob: -10.750676155090332
    9. '   ' → logprob: -10.750676155090332
    10. ' if' → logprob: -10.875676155090332

Token 3154: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006651374278590083
    2. '       ' → logprob: -7.875665187835693
    3. '            
' → logprob: -9.625664710998535
    4. '
' → logprob: -10.250664710998535
    5. '   ' → logprob: -10.250664710998535
    6. '        
' → logprob: -10.375664710998535
    7. '               ' → logprob: -10.625664710998535
    8. '    
' → logprob: -10.750664710998535
    9. '<|end|>' → logprob: -11.000664710998535
    10. '```' → logprob: -11.250664710998535

Token 3155: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07062359899282455
    2. 'prev' → logprob: -3.1956236362457275
    3. 'if' → logprob: -3.6956236362457275
    4. 'p' → logprob: -7.320623397827148
    5. '#' (adapté à ' #') → logprob: -7.695623397827148
    6. ' prev' → logprob: -8.195623397827148
    7. ' if' → logprob: -8.570623397827148
    8. 'b' → logprob: -8.820623397827148
    9. 'left' → logprob: -8.945623397827148
    10. 'l' → logprob: -9.570623397827148

Token 3156: ' morph' (ID: 48995)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7258585095405579
    2. 'prev' → logprob: -0.8508585095405579
    3. '           ' → logprob: -2.475858449935913
    4. '#' → logprob: -5.725858688354492
    5. 'pred' → logprob: -7.975858688354492
    6. 'left' → logprob: -8.225858688354492
    7. 'j' → logprob: -8.225858688354492
    8. 'p' → logprob: -8.600858688354492
    9. 'before' → logprob: -9.475858688354492
    10. ' prev' → logprob: -9.600858688354492

Token 3157: ' length' (ID: 5517)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16422873735427856
    2. 'if' → logprob: -3.414228677749634
    3. '=' → logprob: -3.539228677749634
    4. 'e' → logprob: -3.914228677749634
    5. '       ' → logprob: -4.039228916168213
    6. 'ology' → logprob: -4.289228916168213
    7. 'a' → logprob: -4.414228916168213
    8. 'o' → logprob: -4.789228916168213
    9. ' =' → logprob: -5.664228916168213
    10. '   ' → logprob: -5.789228916168213

Token 3158: ' check' (ID: 2371)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6751818656921387
    2. '==' → logprob: -1.0501818656921387
    3. '           ' → logprob: -2.5501818656921387
    4. ' <=' → logprob: -3.9251818656921387
    5. ' <' → logprob: -4.425181865692139
    6. '<=' → logprob: -4.925181865692139
    7. '>' → logprob: -5.675181865692139
    8. ')' → logprob: -5.925181865692139
    9. '<len' → logprob: -6.050181865692139
    10. '          ' → logprob: -6.300181865692139

Token 3159: ' only' (ID: 1606)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3711017370223999
    2. ' ==' → logprob: -1.4961017370224
    3. ' =' → logprob: -3.4961018562316895
    4. '==' → logprob: -4.1211018562316895
    5. ' if' → logprob: -4.2461018562316895
    6. 'if' → logprob: -5.8711018562316895
    7. '=' → logprob: -5.8711018562316895
    8. ' >=' → logprob: -5.8711018562316895
    9. ':' → logprob: -6.1211018562316895
    10. ' ' → logprob: -6.2461018562316895

Token 3160: ' short' (ID: 4022)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006021230015903711
    2. ' if' → logprob: -5.381021022796631
    3. 'if' → logprob: -7.756021022796631
    4. ' and' → logprob: -7.881021022796631
    5. ':' → logprob: -9.131021499633789
    6. '   ' → logprob: -9.381021499633789
    7. ' ' → logprob: -9.756021499633789
    8. '       ' → logprob: -10.006021499633789
    9. ' #' → logprob: -10.381021499633789
    10. ',' → logprob: -10.506021499633789

Token 3161: ' vowel' (ID: 165542)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11308850347995758
    2. ' if' → logprob: -2.363088607788086
    3. ' and' → logprob: -5.238088607788086
    4. 'if' → logprob: -5.488088607788086
    5. ')' → logprob: -7.613088607788086
    6. ',' → logprob: -7.863088607788086
    7. 'and' → logprob: -8.113088607788086
    8. ' =' → logprob: -8.238088607788086
    9. ' ' → logprob: -8.363088607788086
    10. ' (' → logprob: -8.488088607788086

Token 3162: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02206212654709816
    2. ' if' → logprob: -4.022062301635742
    3. '       ' → logprob: -6.897062301635742
    4. 'if' → logprob: -7.522062301635742
    5. '<|end|>' → logprob: -7.772062301635742
    6. '```' → logprob: -8.272062301635742
    7. ',' → logprob: -8.397062301635742
    8. ' ' → logprob: -8.522062301635742
    9. ' and' → logprob: -8.647062301635742
    10. '          ' → logprob: -8.897062301635742

Token 3163: 'not' (ID: 2878)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3660292625427246
    2. '==' → logprob: -1.4910292625427246
    3. ')' → logprob: -3.2410292625427246
    4. ' and' → logprob: -4.616029262542725
    5. '):
' → logprob: -5.616029262542725
    6. '>' → logprob: -5.741029262542725
    7. '1' → logprob: -5.741029262542725
    8. '):' → logprob: -5.991029262542725
    9. 'and' → logprob: -5.991029262542725
    10. ' )' → logprob: -6.241029262542725

Token 3164: ' long' (ID: 1701)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.2243702411651611
    2. 'in' → logprob: -1.5993702411651611
    3. 'len' → logprob: -1.8493702411651611
    4. 'v' → logprob: -2.599370241165161
    5. ' (' → logprob: -3.099370241165161
    6. 'long' → logprob: -3.224370241165161
    7. '(v' → logprob: -3.224370241165161
    8. '(len' → logprob: -3.724370241165161
    9. ' long' → logprob: -3.974370241165161
    10. '(m' → logprob: -4.224370002746582

Token 3165: ')
' (ID: 446)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.5188482999801636
    2. 'if' → logprob: -1.5188482999801636
    3. '           ' → logprob: -1.7688482999801636
    4. ')' → logprob: -2.143848419189453
    5. 'and' → logprob: -2.393848419189453
    6. ' if' → logprob: -2.893848419189453
    7. ':
' → logprob: -3.768848419189453
    8. '):
' → logprob: -4.018848419189453
    9. '):' → logprob: -4.518848419189453
    10. ':' → logprob: -4.518848419189453

Token 3166: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011921331752091646
    2. ' if' → logprob: -7.126192092895508
    3. '```' → logprob: -9.126192092895508
    4. '       ' → logprob: -9.376192092895508
    5. '               ' → logprob: -10.001192092895508
    6. '   ' → logprob: -10.126192092895508
    7. ' ' → logprob: -10.626192092895508
    8. ',' → logprob: -10.751192092895508
    9. 'if' → logprob: -11.251192092895508
    10. ')' → logprob: -11.876192092895508

Token 3167: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7868191599845886
    2. ' if' → logprob: -1.0368192195892334
    3. 'if' → logprob: -1.6618192195892334
    4. '   ' → logprob: -8.661819458007812
    5. '       ' → logprob: -10.161819458007812
    6. ' ' → logprob: -10.161819458007812
    7. '               ' → logprob: -10.911819458007812
    8. '```' → logprob: -11.661819458007812
    9. 'length' → logprob: -12.036819458007812
    10. ' and' → logprob: -12.411819458007812

Token 3168: ' long' (ID: 1701)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37873199582099915
    2. '           ' → logprob: -1.5037319660186768
    3. ' if' → logprob: -2.3787319660186768
    4. '```' → logprob: -9.003731727600098
    5. '   ' → logprob: -9.128731727600098
    6. ' ' → logprob: -10.503731727600098
    7. '       ' → logprob: -11.128731727600098
    8. '               ' → logprob: -12.003731727600098
    9. 'continue' → logprob: -12.628731727600098
    10. '#' → logprob: -12.628731727600098

Token 3169: ' vowels' (ID: 176245)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46525701880455017
    2. 'if' → logprob: -1.0902570486068726
    3. 'v' → logprob: -4.590257167816162
    4. ' if' → logprob: -4.590257167816162
    5. '_v' → logprob: -4.965257167816162
    6. '       ' → logprob: -6.215257167816162
    7. '               ' → logprob: -7.090257167816162
    8. '          ' → logprob: -7.340257167816162
    9. '=' → logprob: -7.340257167816162
    10. '   ' → logprob: -7.715257167816162

Token 3170: ' are' (ID: 553)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8259989619255066
    2. ' if' → logprob: -1.9509990215301514
    3. '           ' → logprob: -2.0759990215301514
    4. ' and' → logprob: -2.8259990215301514
    5. '==' → logprob: -3.0759990215301514
    6. 'and' → logprob: -3.0759990215301514
    7. ' ==' → logprob: -3.5759990215301514
    8. ':' → logprob: -3.7009990215301514
    9. '=' → logprob: -4.200998783111572
    10. ' =' → logprob: -4.450998783111572

Token 3171: ' repeated' (ID: 24161)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0842446088790894
    2. 'len' → logprob: -1.5842446088790894
    3. 'not' → logprob: -1.7092446088790894
    4. '(i' → logprob: -2.584244728088379
    5. 'v' → logprob: -2.959244728088379
    6. 'False' → logprob: -3.209244728088379
    7. '(len' → logprob: -3.834244728088379
    8. ' not' → logprob: -3.834244728088379
    9. ' (' → logprob: -4.584244728088379
    10. 'un' → logprob: -4.584244728088379

Token 3172: ' vowels' (ID: 176245)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7476725578308105
    2. ' if' → logprob: -0.7476725578308105
    3. ' and' → logprob: -3.9976725578308105
    4. '       ' → logprob: -4.4976725578308105
    5. 'if' → logprob: -4.7476725578308105
    6. ',' → logprob: -5.7476725578308105
    7. ')' → logprob: -6.1226725578308105
    8. ' ' → logprob: -6.9976725578308105
    9. '   ' → logprob: -6.9976725578308105
    10. ' (' → logprob: -7.4976725578308105

Token 3173: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05053624138236046
    2. ' if' → logprob: -3.4255361557006836
    3. '       ' → logprob: -5.300536155700684
    4. ':' → logprob: -5.925536155700684
    5. ' ' → logprob: -6.425536155700684
    6. 'if' → logprob: -6.675536155700684
    7. '   ' → logprob: -7.050536155700684
    8. ')' → logprob: -7.050536155700684
    9. '               ' → logprob: -7.800536155700684
    10. '<|end|>' → logprob: -7.800536155700684

Token 3174: ' so' (ID: 813)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1661902517080307
    2. '           ' → logprob: -2.0411901473999023
    3. 'if' → logprob: -3.7911901473999023
    4. ' continue' → logprob: -8.666190147399902
    5. ' and' → logprob: -9.041190147399902
    6. '               ' → logprob: -9.041190147399902
    7. ' not' → logprob: -9.541190147399902
    8. '            ' → logprob: -10.666190147399902
    9. 'continue' → logprob: -10.666190147399902
    10. 'and' → logprob: -10.916190147399902

Token 3175: ' check' (ID: 2371)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.054847240447998
    2. ' i' → logprob: -1.554847240447998
    3. 'i' → logprob: -1.679847240447998
    4. 'not' → logprob: -2.679847240447998
    5. ' (' → logprob: -2.929847240447998
    6. ' v' → logprob: -3.179847240447998
    7. 'v' → logprob: -4.054847240447998
    8. ' if' → logprob: -4.179847240447998
    9. 'if' → logprob: -4.304847240447998
    10. '(i' → logprob: -4.554847240447998

Token 3176: ' next' (ID: 2613)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.709668517112732
    2. 'i' → logprob: -2.0846686363220215
    3. ' i' → logprob: -2.0846686363220215
    4. 'if' → logprob: -2.0846686363220215
    5. 'not' → logprob: -2.2096686363220215
    6. ' if' → logprob: -2.3346686363220215
    7. '           ' → logprob: -2.7096686363220215
    8. 'v' → logprob: -3.2096686363220215
    9. ' v' → logprob: -3.3346686363220215
    10. 'len' → logprob: -3.5846686363220215

Token 3177: ' mora' (ID: 47294)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8604544997215271
    2. '           ' → logprob: -1.6104545593261719
    3. ' if' → logprob: -1.6104545593261719
    4. 'and' → logprob: -2.360454559326172
    5. ' and' → logprob: -3.360454559326172
    6. ' <' → logprob: -4.360454559326172
    7. 'token' → logprob: -5.360454559326172
    8. '+' → logprob: -5.610454559326172
    9. '_token' → logprob: -5.735454559326172
    10. 'tokens' → logprob: -5.860454559326172

Token 3178: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09739524126052856
    2. ' if' → logprob: -2.472395181655884
    3. 'if' → logprob: -6.347395420074463
    4. '       ' → logprob: -6.597395420074463
    5. ',' → logprob: -6.847395420074463
    6. ':' → logprob: -7.347395420074463
    7. ' and' → logprob: -7.597395420074463
    8. '               ' → logprob: -7.847395420074463
    9. ':
' → logprob: -8.097394943237305
    10. '            ' → logprob: -8.347394943237305

Token 3179: ' exclude' (ID: 39566)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.393147349357605
    2. 'if' → logprob: -1.893147349357605
    3. 'i' → logprob: -2.6431474685668945
    4. ' if' → logprob: -3.8931474685668945
    5. ' ==' → logprob: -4.5181474685668945
    6. '=' → logprob: -4.6431474685668945
    7. ')' → logprob: -4.8931474685668945
    8. 's' → logprob: -4.8931474685668945
    9. '!=' → logprob: -5.1431474685668945
    10. 'in' → logprob: -5.3931474685668945

Token 3180: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3758837878704071
    2. ' if' → logprob: -1.2508838176727295
    3. 'if' → logprob: -4.00088357925415
    4. '       ' → logprob: -5.37588357925415
    5. ' ' → logprob: -7.25088357925415
    6. '   ' → logprob: -7.62588357925415
    7. '[' → logprob: -7.75088357925415
    8. ':' → logprob: -7.87588357925415
    9. '               ' → logprob: -8.125884056091309
    10. '          ' → logprob: -8.125884056091309

Token 3181: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01054863166064024
    2. ' if' → logprob: -4.7605485916137695
    3. '               ' → logprob: -7.2605485916137695
    4. '```' → logprob: -7.7605485916137695
    5. 'if' → logprob: -8.01054859161377
    6. ' and' → logprob: -9.13554859161377
    7. '       ' → logprob: -9.38554859161377
    8. ' ' → logprob: -9.76054859161377
    9. '   ' → logprob: -9.76054859161377
    10. ',' → logprob: -10.38554859161377

Token 3182: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7945986986160278
    2. ' if' → logprob: -1.2945986986160278
    3. 'if' (adapté à ' if') → logprob: -1.2945986986160278
    4. '       ' → logprob: -9.544598579406738
    5. '               ' → logprob: -10.169598579406738
    6. '   ' → logprob: -10.419598579406738
    7. '```' → logprob: -10.544598579406738
    8. 'continue' → logprob: -11.419598579406738
    9. ' ' → logprob: -11.794598579406738
    10. ' continue' → logprob: -11.794598579406738

Token 3183: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.013251169584691525
    2. '(i' → logprob: -4.513251304626465
    3. ' i' → logprob: -6.388251304626465
    4. ' (' → logprob: -8.638251304626465
    5. 'v' → logprob: -9.013251304626465
    6. 'not' → logprob: -9.638251304626465
    7. '(' → logprob: -9.888251304626465
    8. '   ' → logprob: -10.763251304626465
    9. 'long' → logprob: -11.013251304626465
    10. ' ' → logprob: -11.138251304626465

Token 3184: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17317283153533936
    2. ' +' → logprob: -2.048172950744629
    3. ' <' → logprob: -3.673172950744629
    4. '<' → logprob: -6.173172950744629
    5. '<len' → logprob: -6.923172950744629
    6. ' !=' → logprob: -7.798172950744629
    7. '+i' → logprob: -8.298172950744629
    8. '<n' → logprob: -8.548172950744629
    9. ' ==' → logprob: -8.923172950744629
    10. '==' → logprob: -9.548172950744629

Token 3185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. '0' → logprob: -11.875012397766113
    3. ' ' → logprob: -12.375012397766113
    4. '```' → logprob: -14.000012397766113
    5. '2' → logprob: -15.625012397766113
    6. '   ' → logprob: -15.750012397766113
    7. '+' → logprob: -17.37501335144043
    8. '
' → logprob: -17.50001335144043
    9. '[' → logprob: -17.50001335144043
    10. '``' → logprob: -18.25001335144043

Token 3186: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1499006748199463
    2. '<' → logprob: -2.0249006748199463
    3. '<len' → logprob: -5.149900436401367
    4. '<n' → logprob: -7.524900436401367
    5. ' not' → logprob: -9.149900436401367
    6. 'in' → logprob: -9.149900436401367
    7. '<m' → logprob: -9.524900436401367
    8. ' in' → logprob: -9.649900436401367
    9. '[' → logprob: -9.649900436401367
    10. '>=' → logprob: -9.899900436401367

Token 3187: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0031897129956632853
    2. ' n' → logprob: -5.878189563751221
    3. 'len' → logprob: -7.878189563751221
    4. ' len' → logprob: -12.253190040588379
    5. '```' → logprob: -15.128190040588379
    6. '   ' → logprob: -15.753190040588379
    7. '<n' → logprob: -15.878190040588379
    8. '	n' → logprob: -16.628189086914062
    9. '`' → logprob: -16.628189086914062
    10. ')n' → logprob: -16.878189086914062

Token 3188: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4741096794605255
    2. 'and' → logprob: -0.9741096496582031
    3. '           ' → logprob: -11.724109649658203
    4. '	and' → logprob: -11.724109649658203
    5. '```' → logprob: -12.099109649658203
    6. '<|end|>' → logprob: -13.224109649658203
    7. '       ' → logprob: -13.349109649658203
    8. ':
' → logprob: -13.724109649658203
    9. '   ' → logprob: -13.724109649658203
    10. '          ' → logprob: -13.849109649658203

Token 3189: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.08836553245782852
    2. 'long' → logprob: -2.9633655548095703
    3. 'v' → logprob: -3.8383655548095703
    4. 'mor' → logprob: -4.83836555480957
    5. 'un' → logprob: -5.83836555480957
    6. ' mor' → logprob: -8.58836555480957
    7. '(m' → logprob: -8.58836555480957
    8. 'not' → logprob: -10.21336555480957
    9. ' long' → logprob: -10.33836555480957
    10. '(v' → logprob: -10.46336555480957

Token 3190: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.09775812178850174
    2. 'oras' → logprob: -2.4727580547332764
    3. 'ras' → logprob: -5.8477582931518555
    4. 'or' → logprob: -6.0977582931518555
    5. '[' → logprob: -6.2227582931518555
    6. 'osas' → logprob: -7.5977582931518555
    7. 's' → logprob: -9.347758293151855
    8. '=' → logprob: -9.347758293151855
    9. ']' → logprob: -9.472758293151855
    10. '>' → logprob: -9.597758293151855

Token 3191: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011629798245849088
    2. '==' → logprob: -9.250116348266602
    3. '```' → logprob: -11.625116348266602
    4. ' ==' → logprob: -12.000116348266602
    5. 'i' → logprob: -13.125116348266602
    6. ' [' → logprob: -13.750116348266602
    7. '[' → logprob: -14.500116348266602
    8. '[
' → logprob: -14.750116348266602
    9. '`' → logprob: -15.750116348266602
    10. '``' → logprob: -15.875116348266602

Token 3192: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31164437532424927
    2. '[i' → logprob: -1.9366443157196045
    3. ']==' → logprob: -2.6866443157196045
    4. '][' → logprob: -3.3116443157196045
    5. '+' → logprob: -4.186644554138184
    6. 'i' → logprob: -6.061644554138184
    7. '```' → logprob: -7.811644554138184
    8. '(i' → logprob: -8.561644554138184
    9. '+i' → logprob: -8.561644554138184
    10. '==' → logprob: -8.811644554138184

Token 3193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3080716346157715e-05
    2. '+' → logprob: -11.250022888183594
    3. 'i' → logprob: -12.375022888183594
    4. ' ' → logprob: -12.750022888183594
    5. '   ' → logprob: -14.250022888183594
    6. ']' → logprob: -14.250022888183594
    7. '```' → logprob: -14.375022888183594
    8. '0' → logprob: -15.750022888183594
    9. '
' → logprob: -15.875022888183594
    10. '...' → logprob: -16.625022888183594

Token 3194: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.21690362691879272
    2. ' ==' → logprob: -2.3419036865234375
    3. ']==' → logprob: -2.8419036865234375
    4. ']' → logprob: -3.3419036865234375
    5. '[' → logprob: -5.3419036865234375
    6. '```' → logprob: -9.091903686523438
    7. ')==' → logprob: -9.716903686523438
    8. ' ]' → logprob: -10.716903686523438
    9. '][' → logprob: -10.841903686523438
    10. '[i' → logprob: -10.841903686523438

Token 3195: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3995259702205658
    2. ' ==' → logprob: -1.1495260000228882
    3. '[' → logprob: -4.399526119232178
    4. ']==' → logprob: -10.02452564239502
    5. ' ' → logprob: -10.14952564239502
    6. '```' → logprob: -10.27452564239502
    7. '=' → logprob: -10.39952564239502
    8. '=='' → logprob: -10.52452564239502
    9. ')' → logprob: -10.52452564239502
    10. ')==' → logprob: -10.77452564239502

Token 3196: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.633179783821106
    2. 'v' → logprob: -0.758179783821106
    3. 'mor' → logprob: -7.508179664611816
    4. 'mo' → logprob: -11.633179664611816
    5. ' mora' → logprob: -12.258179664611816
    6. ' v' → logprob: -12.258179664611816
    7. ' mor' → logprob: -13.008179664611816
    8. '	m' → logprob: -13.758179664611816
    9. '   ' → logprob: -13.758179664611816
    10. 'mos' → logprob: -14.133179664611816

Token 3197: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6088457703590393
    2. ':
' → logprob: -1.4838457107543945
    3. '[i' → logprob: -1.6088457107543945
    4. ' and' → logprob: -4.9838457107543945
    5. '[' → logprob: -5.1088457107543945
    6. 'and' → logprob: -5.2338457107543945
    7. '           ' → logprob: -5.8588457107543945
    8. '               ' → logprob: -6.1088457107543945
    9. '       ' → logprob: -6.8588457107543945
    10. '):' → logprob: -6.8588457107543945

Token 3198: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0722331702709198
    2. ':
' → logprob: -3.322233200073242
    3. ':' → logprob: -3.697233200073242
    4. ' and' → logprob: -5.197233200073242
    5. '           ' → logprob: -6.572233200073242
    6. ' continue' → logprob: -6.947233200073242
    7. '                   ' → logprob: -8.447233200073242
    8. 'continue' → logprob: -9.072233200073242
    9. '                       ' → logprob: -9.697233200073242
    10. ',' → logprob: -10.072233200073242

Token 3199: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5278361439704895
    2. ' continue' → logprob: -1.5278360843658447
    3. 'continue' → logprob: -1.6528360843658447
    4. '                   ' → logprob: -7.652836322784424
    5. 'i' → logprob: -7.777836322784424
    6. ' i' → logprob: -8.527835845947266
    7. '   ' → logprob: -8.652835845947266
    8. '           ' → logprob: -8.652835845947266
    9. '	continue' → logprob: -10.402835845947266
    10. 'un' → logprob: -10.402835845947266

Token 3200: ' long' (ID: 1701)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1410692036151886
    2. ' continue' → logprob: -2.516069173812866
    3. '           ' → logprob: -3.516069173812866
    4. '               ' → logprob: -4.016069412231445
    5. '   ' → logprob: -6.391069412231445
    6. 'un' → logprob: -7.766069412231445
    7. '                   ' → logprob: -8.016069412231445
    8. '	continue' → logprob: -8.141069412231445
    9. '       ' → logprob: -9.141069412231445
    10. 'i' → logprob: -9.391069412231445

Token 3201: ' vowel' (ID: 165542)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.1631249338388443
    2. ':
' → logprob: -3.1631250381469727
    3. '           ' → logprob: -4.038125038146973
    4. '_' → logprob: -4.288125038146973
    5. ')' → logprob: -4.538125038146973
    6. '                   ' → logprob: -4.663125038146973
    7. '               ' → logprob: -4.788125038146973
    8. 'v' → logprob: -4.913125038146973
    9. '   ' → logprob: -5.038125038146973
    10. ':' → logprob: -5.538125038146973

Token 3202: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5157716870307922
    2. '               ' → logprob: -1.8907716274261475
    3. ' continue' → logprob: -2.6407716274261475
    4. ':' → logprob: -2.8907716274261475
    5. '                   ' → logprob: -2.8907716274261475
    6. '           ' → logprob: -3.0157716274261475
    7. 'continue' → logprob: -4.015771865844727
    8. ':
' → logprob: -7.390771865844727
    9. ' continues' → logprob: -8.015771865844727
    10. '	continue' → logprob: -8.265771865844727

Token 3203: ' skip' (ID: 16677)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7342813611030579
    2. '           ' → logprob: -1.109281301498413
    3. 'continue' → logprob: -2.359281301498413
    4. '               ' → logprob: -2.359281301498413
    5. '   ' → logprob: -7.484281539916992
    6. '                   ' → logprob: -7.859281539916992
    7. '	continue' → logprob: -8.109281539916992
    8. '_continue' → logprob: -10.734281539916992
    9. ' continues' → logprob: -11.359281539916992
    10. '             ' → logprob: -11.484281539916992

Token 3204: ' per' (ID: 777)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3540098965167999
    2. '           ' → logprob: -1.2290098667144775
    3. 'continue' → logprob: -5.729010105133057
    4. ' continue' → logprob: -6.479010105133057
    5. '                   ' → logprob: -7.354010105133057
    6. '		' → logprob: -11.229009628295898
    7. '       ' → logprob: -11.479009628295898
    8. ':' → logprob: -11.604009628295898
    9. '\n' → logprob: -11.604009628295898
    10. '	continue' → logprob: -11.729009628295898

Token 3205: ' problem' (ID: 4792)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0031755755189806223
    2. '           ' → logprob: -6.378175735473633
    3. '       ' → logprob: -8.003175735473633
    4. '   ' → logprob: -8.628175735473633
    5. ' continue' → logprob: -8.628175735473633
    6. '```' → logprob: -8.878175735473633
    7. 't' → logprob: -9.003175735473633
    8. 'cont' → logprob: -9.003175735473633
    9. 'ont' → logprob: -9.253175735473633
    10. '               ' → logprob: -9.503175735473633

Token 3206: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.30101823806762695
    2. '           ' → logprob: -1.551018238067627
    3. '                   ' → logprob: -3.926018238067627
    4. ' continue' → logprob: -4.426018238067627
    5. ':' → logprob: -4.676018238067627
    6. ':
' → logprob: -5.551018238067627
    7. 'continue' → logprob: -5.926018238067627
    8. '		' → logprob: -10.051017761230469
    9. ' continues' → logprob: -10.176017761230469
    10. '	continue' → logprob: -10.176017761230469

Token 3207: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005831860937178135
    2. '                   ' → logprob: -5.755831718444824
    3. '           ' → logprob: -6.130831718444824
    4. 'continue' → logprob: -8.005831718444824
    5. ' continue' → logprob: -9.005831718444824
    6. '   ' → logprob: -11.380831718444824
    7. '       ' → logprob: -13.005831718444824
    8. '	continue' → logprob: -14.130831718444824
    9. '```' → logprob: -14.255831718444824
    10. '                ' → logprob: -14.380831718444824

Token 3208: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8054940700531006
    2. '           ' → logprob: -1.3054940700531006
    3. 'continue' (adapté à ' continue') → logprob: -1.3054940700531006
    4. ' continue' → logprob: -4.80549430847168
    5. '                   ' → logprob: -5.93049430847168
    6. '   ' → logprob: -8.68049430847168
    7. '	continue' → logprob: -10.93049430847168
    8. '       ' → logprob: -12.05549430847168
    9. '		' → logprob: -12.18049430847168
    10. '			' → logprob: -13.18049430847168

Token 3209: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015102163888514042
    2. '
' → logprob: -6.501510143280029
    3. '            
' → logprob: -13.001510620117188
    4. '               ' → logprob: -13.126510620117188
    5. '
' → logprob: -13.751510620117188
    6. '       ' → logprob: -13.876510620117188
    7. 'import' → logprob: -14.376510620117188
    8. '		' → logprob: -15.501510620117188
    9. '```' → logprob: -15.751510620117188
    10. '        
' → logprob: -16.001510620117188

Token 3210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002072357019642368
    2. '
' → logprob: -8.87520694732666
    3. '            
' → logprob: -10.37520694732666
    4. '       ' → logprob: -11.37520694732666
    5. '		' → logprob: -12.00020694732666
    6. '               ' → logprob: -12.50020694732666
    7. '        
' → logprob: -12.75020694732666
    8. '   ' → logprob: -13.12520694732666
    9. '	       ' → logprob: -13.50020694732666
    10. '    
' → logprob: -13.62520694732666

Token 3211: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015910346992313862
    2. '
' → logprob: -6.626591205596924
    3. 'if' → logprob: -9.376590728759766
    4. '       ' → logprob: -9.376590728759766
    5. '            
' → logprob: -10.001590728759766
    6. '        
' → logprob: -11.001590728759766
    7. '   ' → logprob: -11.876590728759766
    8. '
' → logprob: -12.501590728759766
    9. '    
' → logprob: -12.751590728759766
    10. ' if' → logprob: -13.001590728759766

Token 3212: ' check' (ID: 2371)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.5128215551376343
    2. 'if' → logprob: -1.0128215551376343
    3. '           ' → logprob: -3.637821674346924
    4. '#' → logprob: -5.387821674346924
    5. '       ' → logprob: -6.137821674346924
    6. 'cond' → logprob: -6.262821674346924
    7. 'left' → logprob: -7.262821674346924
    8. 'pred' → logprob: -7.637821674346924
    9. 'before' → logprob: -7.887821674346924
    10. 'pre' → logprob: -7.887821674346924

Token 3213: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38609907031059265
    2. ' prev' → logprob: -1.886099100112915
    3. ' (' → logprob: -3.136099100112915
    4. ' if' → logprob: -3.386099100112915
    5. 'prev' → logprob: -3.761099100112915
    6. ' (
' → logprob: -4.011098861694336
    7. ' i' → logprob: -4.136098861694336
    8. 'if' → logprob: -4.511098861694336
    9. '(
' → logprob: -5.261098861694336
    10. '(' → logprob: -5.636098861694336

Token 3214: ' mora' (ID: 47294)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1027752161026
    2. '(i' → logprob: -1.4777752161026
    3. ' (' → logprob: -1.7277752161026
    4. ' i' → logprob: -2.3527750968933105
    5. '(' → logprob: -2.7277750968933105
    6. '(
' → logprob: -2.9777750968933105
    7. 'vo' → logprob: -4.2277750968933105
    8. 'un' → logprob: -4.6027750968933105
    9. '(vo' → logprob: -4.8527750968933105
    10. '((' → logprob: -4.9777750968933105

Token 3215: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0084041357040405
    2. 's' → logprob: -2.00840425491333
    3. '.startswith' → logprob: -3.00840425491333
    4. '==' → logprob: -3.13340425491333
    5. 'v' → logprob: -3.13340425491333
    6. ' ==' → logprob: -3.38340425491333
    7. '_before' → logprob: -3.50840425491333
    8. ' at' → logprob: -3.50840425491333
    9. '[i' → logprob: -3.50840425491333
    10. ' before' → logprob: -3.63340425491333

Token 3216: ' surrounded' (ID: 33651)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.890614926815033
    2. 'i' → logprob: -1.3906149864196777
    3. ' surrounded' → logprob: -2.1406149864196777
    4. ' vo' → logprob: -2.2656149864196777
    5. 'vo' → logprob: -3.3906149864196777
    6. ' (' → logprob: -3.7656149864196777
    7. 'un' → logprob: -4.390614986419678
    8. '(' → logprob: -4.515614986419678
    9. ' (
' → logprob: -4.890614986419678
    10. '(
' → logprob: -4.890614986419678

Token 3217: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.2082458883523941
    2. 'by' → logprob: -2.2082459926605225
    3. ' and' → logprob: -3.0832459926605225
    4. 'and' → logprob: -4.083245754241943
    5. 'if' → logprob: -5.083245754241943
    6. ' if' → logprob: -5.458245754241943
    7. ':' → logprob: -7.208245754241943
    8. 'in' → logprob: -7.833245754241943
    9. '           ' → logprob: -7.958245754241943
    10. '==' → logprob: -7.958245754241943

Token 3218: ' vo' (ID: 778)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.413836270570755
    2. 'i' → logprob: -1.4138362407684326
    3. '(i' → logprob: -2.6638362407684326
    4. 'True' → logprob: -4.538836479187012
    5. '(vo' → logprob: -4.788836479187012
    6. '(' → logprob: -6.038836479187012
    7. '(True' → logprob: -6.913836479187012
    8. ' vo' → logprob: -7.163836479187012
    9. ' (' → logprob: -7.163836479187012
    10. '((' → logprob: -7.413836479187012

Token 3219: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0005981888971291482
    2. '```' → logprob: -8.625597953796387
    3. '``' → logprob: -9.750597953796387
    4. '`' → logprob: -9.875597953796387
    5. 'iced' → logprob: -10.375597953796387
    6. '
' → logprob: -10.625597953796387
    7. '#' → logprob: -10.875597953796387
    8. '[' → logprob: -11.000597953796387
    9. 'i' → logprob: -11.250597953796387
    10. 'icelo' → logprob: -11.313097953796387

Token 3220: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.0006540587637573481
    2. 'el' → logprob: -7.500654220581055
    3. 'ic' → logprob: -10.000654220581055
    4. 'ele' → logprob: -11.000654220581055
    5. 'e' → logprob: -12.125654220581055
    6. 'less' → logprob: -12.125654220581055
    7. 'eled' → logprob: -12.625654220581055
    8. 'veless' → logprob: -12.750654220581055
    9. 'eles' → logprob: -12.875654220581055
    10. 'cel' → logprob: -12.875654220581055

Token 3221: ' conson' (ID: 127767)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6649593114852905
    2. '_con' → logprob: -0.7899593114852905
    3. ' conson' → logprob: -4.28995943069458
    4. ' _' → logprob: -4.41495943069458
    5. ' ' → logprob: -6.78995943069458
    6. 'con' → logprob: -6.91495943069458
    7. ' if' → logprob: -7.03995943069458
    8. 'if' → logprob: -7.41495943069458
    9. ')' → logprob: -7.66495943069458
    10. '   ' → logprob: -7.91495943069458

Token 3222: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.012289006263017654
    2. 'ant' → logprob: -4.637289047241211
    3. 'nts' → logprob: -7.137289047241211
    4. '_' → logprob: -7.262289047241211
    5. 's' → logprob: -8.137289047241211
    6. ' ants' → logprob: -8.637289047241211
    7. 'ts' → logprob: -8.762289047241211
    8. 't' → logprob: -9.262289047241211
    9. '   ' → logprob: -9.637289047241211
    10. ')' → logprob: -10.387289047241211

Token 3223: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004173252731561661
    2. ' and' → logprob: -6.629173278808594
    3. ' if' → logprob: -6.879173278808594
    4. ':' → logprob: -7.629173278808594
    5. 'if' → logprob: -7.629173278808594
    6. 'and' → logprob: -8.504173278808594
    7. ' =' → logprob: -8.629173278808594
    8. '       ' → logprob: -8.754173278808594
    9. '   ' → logprob: -9.879173278808594
    10. ',' → logprob: -10.004173278808594

Token 3224: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023189915344119072
    2. ' and' → logprob: -4.273190021514893
    3. ' if' → logprob: -5.523190021514893
    4. '       ' → logprob: -6.523190021514893
    5. 'if' → logprob: -6.898190021514893
    6. 'and' → logprob: -7.148190021514893
    7. '   ' → logprob: -8.023189544677734
    8. ',' → logprob: -8.273189544677734
    9. ' (' → logprob: -8.273189544677734
    10. ':' → logprob: -8.398189544677734

Token 3225: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6439852118492126
    2. '           ' → logprob: -0.7689852118492126
    3. 'prev' → logprob: -4.893985271453857
    4. ' if' → logprob: -5.643985271453857
    5. '   ' → logprob: -9.6439847946167
    6. 'left' → logprob: -9.6439847946167
    7. ' prev' → logprob: -10.2689847946167
    8. '       ' → logprob: -10.5189847946167
    9. '#' (adapté à ' #') → logprob: -11.1439847946167
    10. ' ' → logprob: -11.6439847946167

Token 3226: ' previous' (ID: 5880)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17514006793498993
    2. '           ' → logprob: -1.9251400232315063
    3. 'prev' → logprob: -4.425139904022217
    4. ' if' → logprob: -5.925139904022217
    5. '   ' → logprob: -10.425140380859375
    6. 'left' → logprob: -10.550140380859375
    7. ' prev' → logprob: -10.800140380859375
    8. '#' → logprob: -11.175140380859375
    9. '```' → logprob: -11.550140380859375
    10. '       ' → logprob: -11.925140380859375

Token 3227: ' mora' (ID: 47294)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.9456710815429688
    2. ' >=' → logprob: -2.0706710815429688
    3. 'if' → logprob: -2.1956710815429688
    4. 'i' → logprob: -2.1956710815429688
    5. 'idx' → logprob: -2.5706710815429688
    6. ' ==' → logprob: -2.6956710815429688
    7. ' if' → logprob: -3.0706710815429688
    8. 'v' → logprob: -3.1956710815429688
    9. ' and' → logprob: -3.1956710815429688
    10. '>=' → logprob: -3.3206710815429688

Token 3228: ' vo' (ID: 778)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7303809523582458
    2. 'idx' → logprob: -1.7303810119628906
    3. '_idx' → logprob: -2.8553810119628906
    4. 'is' → logprob: -3.6053810119628906
    5. '_ok' → logprob: -3.7303810119628906
    6. 'ok' → logprob: -3.8553810119628906
    7. '=' → logprob: -4.105381011962891
    8. 'v' → logprob: -4.230381011962891
    9. '_exists' → logprob: -4.230381011962891
    10. ' in' → logprob: -4.355381011962891

Token 3229: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0007823493797332048
    2. 'iced' → logprob: -8.125782012939453
    3. 'oc' → logprob: -9.375782012939453
    4. 'o' → logprob: -9.375782012939453
    5. '   ' → logprob: -10.500782012939453
    6. 'ices' → logprob: -10.500782012939453
    7. 'iless' → logprob: -10.750782012939453
    8. 'ice' → logprob: -11.000782012939453
    9. 'icelo' → logprob: -11.125782012939453
    10. 'i' → logprob: -11.125782012939453

Token 3230: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.005526273511350155
    2. 'less' → logprob: -5.630526065826416
    3. 'ess' → logprob: -7.130526065826416
    4. 'el' → logprob: -7.755526065826416
    5. 'ed' → logprob: -7.880526065826416
    6. 'eled' → logprob: -9.505526542663574
    7. 'essed' → logprob: -9.755526542663574
    8. 'e' → logprob: -10.255526542663574
    9. 'oded' → logprob: -10.880526542663574
    10. 'es' → logprob: -11.005526542663574

Token 3231: ' conson' (ID: 127767)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12720327079296112
    2. 'and' → logprob: -2.3772032260894775
    3. ' if' → logprob: -4.627203464508057
    4. 'if' → logprob: -4.877203464508057
    5. '           ' → logprob: -5.002203464508057
    6. '       ' → logprob: -6.752203464508057
    7. ' =' → logprob: -8.252202987670898
    8. ' or' → logprob: -8.252202987670898
    9. ':' → logprob: -8.877202987670898
    10. ',' → logprob: -9.002202987670898

Token 3232: 'ant' (ID: 493)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1101066842675209
    2. 'ant' → logprob: -2.3601067066192627
    3. '
' → logprob: -6.110106468200684
    4. '   ' → logprob: -6.235106468200684
    5. 'tant' → logprob: -6.735106468200684
    6. 'at' → logprob: -7.360106468200684
    7. 'nt' → logprob: -7.860106468200684
    8. '_t' → logprob: -7.860106468200684
    9. '[t' → logprob: -7.860106468200684
    10. ''t' → logprob: -7.985106468200684

Token 3233: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.13150714337825775
    2. 'and' → logprob: -2.256507158279419
    3. ' =' → logprob: -5.38150691986084
    4. 'if' → logprob: -5.63150691986084
    5. ' if' → logprob: -5.63150691986084
    6. '=' → logprob: -6.25650691986084
    7. '       ' → logprob: -6.63150691986084
    8. '           ' → logprob: -6.75650691986084
    9. ' or' → logprob: -7.38150691986084
    10. '   ' → logprob: -7.38150691986084

Token 3234: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033798301592469215
    2. ' and' → logprob: -5.878379821777344
    3. 'and' → logprob: -8.253379821777344
    4. '       ' → logprob: -9.503379821777344
    5. ',' → logprob: -9.628379821777344
    6. ' or' → logprob: -10.003379821777344
    7. '          ' → logprob: -10.753379821777344
    8. ' =' → logprob: -10.878379821777344
    9. '   ' → logprob: -11.253379821777344
    10. '		' → logprob: -11.378379821777344

Token 3235: ' prev' (ID: 10258)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2246161848306656
    2. 'if' → logprob: -1.8496161699295044
    3. ' if' → logprob: -3.224616289138794
    4. ' and' → logprob: -6.724616050720215
    5. ' or' → logprob: -6.974616050720215
    6. 'and' → logprob: -7.224616050720215
    7. '       ' → logprob: -7.474616050720215
    8. 'or' → logprob: -8.474616050720215
    9. 'prev' (adapté à ' prev') → logprob: -8.599616050720215
    10. 'elif' → logprob: -8.849616050720215

Token 3236: '_vo' (ID: 145825)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.8891605138778687
    2. '_idx' → logprob: -1.2641605138778687
    3. ' =' → logprob: -2.514160633087158
    4. '>=' → logprob: -2.889160633087158
    5. '=' → logprob: -3.389160633087158
    6. ' >=' → logprob: -3.514160633087158
    7. '_' → logprob: -4.139160633087158
    8. 'm' → logprob: -4.389160633087158
    9. '==' → logprob: -4.389160633087158
    10. ' ==' → logprob: -5.014160633087158

Token 3237: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.00019579214858822525
    2. '[' → logprob: -9.625195503234863
    3. '```' → logprob: -10.625195503234863
    4. '``' → logprob: -11.125195503234863
    5. '`' → logprob: -11.750195503234863
    6. '=' → logprob: -11.750195503234863
    7. ' =' → logprob: -11.875195503234863
    8. '#' → logprob: -12.125195503234863
    9. '{' → logprob: -12.375195503234863
    10. 'cel' → logprob: -12.375195503234863

Token 3238: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.046960968524217606
    2. 'less' → logprob: -3.1719610691070557
    3. 'ess' → logprob: -6.046960830688477
    4. 'ed' → logprob: -7.171960830688477
    5. 'essed' → logprob: -7.796960830688477
    6. 'el' → logprob: -8.296960830688477
    7. '[' → logprob: -10.546960830688477
    8. 'els' → logprob: -10.796960830688477
    9. 'eled' → logprob: -11.171960830688477
    10. '_less' → logprob: -11.171960830688477

Token 3239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2835662066936493
    2. '=' → logprob: -1.5335662364959717
    3. '_idx' → logprob: -3.7835662364959717
    4. '_flag' → logprob: -5.158565998077393
    5. '   ' → logprob: -7.033565998077393
    6. 'idx' → logprob: -7.533565998077393
    7. '_index' → logprob: -8.03356647491455
    8. '       ' → logprob: -8.65856647491455
    9. '_ok' → logprob: -9.28356647491455
    10. '_' → logprob: -9.28356647491455

Token 3240: ' (' (ID: 350)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.6909949779510498
    2. '(vo' → logprob: -1.3159949779510498
    3. '(i' → logprob: -2.31599497795105
    4. 'un' → logprob: -2.56599497795105
    5. '(un' → logprob: -4.065995216369629
    6. ' vo' → logprob: -4.315995216369629
    7. 'False' → logprob: -4.565995216369629
    8. 'i' → logprob: -5.315995216369629
    9. ' (' → logprob: -5.690995216369629
    10. 'last' → logprob: -6.690995216369629

Token 3241: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009711001068353653
    2. '(i' → logprob: -4.759710788726807
    3. 'vo' → logprob: -8.009711265563965
    4. ' i' → logprob: -8.134711265563965
    5. 'True' → logprob: -8.634711265563965
    6. 'un' → logprob: -9.009711265563965
    7. '0' → logprob: -10.134711265563965
    8. 'False' → logprob: -10.259711265563965
    9. '   ' → logprob: -10.509711265563965
    10. ' (' → logprob: -10.884711265563965

Token 3242: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.46086302399635315
    2. ' >' → logprob: -1.5858629941940308
    3. '-' → logprob: -1.8358629941940308
    4. ' -' → logprob: -5.33586311340332
    5. '0' → logprob: -9.58586311340332
    6. '>=' → logprob: -10.21086311340332
    7. '>-' → logprob: -10.33586311340332
    8. '1' → logprob: -10.83586311340332
    9. '   ' → logprob: -11.71086311340332
    10. ' >=' → logprob: -12.33586311340332

Token 3243: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001955537445610389
    2. ' ' → logprob: -9.000195503234863
    3. '=' → logprob: -10.125195503234863
    4. '-' → logprob: -10.500195503234863
    5. '>' → logprob: -14.000195503234863
    6. '   ' → logprob: -14.125195503234863
    7. '
' → logprob: -14.250195503234863
    8. ')' → logprob: -14.500195503234863
    9. '```' → logprob: -15.000195503234863
    10. 'i' → logprob: -15.125195503234863

Token 3244: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.47515976428985596
    2. ' and' → logprob: -0.975159764289856
    3. ')' → logprob: -6.850159645080566
    4. '           ' → logprob: -11.725159645080566
    5. '       ' → logprob: -12.350159645080566
    6. '          ' → logprob: -12.475159645080566
    7. '      ' → logprob: -13.725159645080566
    8. '        ' → logprob: -13.975159645080566
    9. '              ' → logprob: -13.975159645080566
    10. '            ' → logprob: -14.100159645080566

Token 3245: ' vo' (ID: 778)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -9.710618905955926e-05
    2. ' vo' → logprob: -9.250097274780273
    3. '   ' → logprob: -15.000097274780273
    4. '       ' → logprob: -15.375097274780273
    5. 'un' → logprob: -16.250097274780273
    6. '	vo' → logprob: -16.375097274780273
    7. '     ' → logprob: -16.875097274780273
    8. '           ' → logprob: -17.000097274780273
    9. '(vo' → logprob: -17.125097274780273
    10. 'v' → logprob: -17.875097274780273

Token 3246: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -4.084206375409849e-05
    2. '[' → logprob: -11.375041007995605
    3. 'eless' → logprob: -12.250041007995605
    4. 'cel' → logprob: -12.500041007995605
    5. 'iced' → logprob: -12.750041007995605
    6. '`' → logprob: -13.375041007995605
    7. 'ice' → logprob: -13.500041007995605
    8. 'iless' → logprob: -13.500041007995605
    9. '``' → logprob: -13.500041007995605
    10. 'icelo' → logprob: -13.625041007995605

Token 3247: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.0002258277963846922
    2. 'less' → logprob: -9.375226020812988
    3. 'ic' → logprob: -9.625226020812988
    4. 'ele' → logprob: -10.250226020812988
    5. 'el' → logprob: -10.875226020812988
    6. 'ueless' → logprob: -12.250226020812988
    7. 'veless' → logprob: -12.750226020812988
    8. 'cel' → logprob: -12.750226020812988
    9. '[' → logprob: -13.125226020812988
    10. 'heless' → logprob: -13.250226020812988

Token 3248: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.8232690460281447e-05
    2. 'and' → logprob: -10.625048637390137
    3. ' and' → logprob: -11.250048637390137
    4. '(i' → logprob: -12.500048637390137
    5. ')' → logprob: -13.000048637390137
    6. ' [' → logprob: -13.000048637390137
    7. ')[' → logprob: -14.250048637390137
    8. '[' → logprob: -14.500048637390137
    9. 'i' → logprob: -15.250048637390137
    10. '[
' → logprob: -15.625048637390137

Token 3249: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.780830830801278e-05
    2. ' -' → logprob: -9.37508773803711
    3. ']' → logprob: -13.50008773803711
    4. 'i' → logprob: -14.50008773803711
    5. '[i' → logprob: -15.25008773803711
    6. '1' → logprob: -15.87508773803711
    7. ']-' → logprob: -16.00008773803711
    8. '−' → logprob: -16.12508773803711
    9. '   ' → logprob: -16.25008773803711
    10. '[' → logprob: -16.37508773803711

Token 3250: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. ']' → logprob: -17.125
    4. 'i' → logprob: -17.25
    5. '```' → logprob: -17.25
    6. '   ' → logprob: -17.5
    7. '１' → logprob: -18.9375
    8. '0' → logprob: -19.3125
    9. ')' → logprob: -19.4375
    10. '-' → logprob: -19.5

Token 3251: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.36981523036956787
    2. ')' → logprob: -1.9948152303695679
    3. 'and' → logprob: -2.7448153495788574
    4. ' and' → logprob: -2.8698153495788574
    5. ']' → logprob: -3.2448153495788574
    6. '])
' → logprob: -4.994815349578857
    7. ']==' → logprob: -5.494815349578857
    8. '==' → logprob: -7.369815349578857
    9. '           ' → logprob: -7.619815349578857
    10. ')
' → logprob: -7.869815349578857

Token 3252: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03386087343096733
    2. 'and' → logprob: -3.658860921859741
    3. '           ' → logprob: -4.908860683441162
    4. '       ' → logprob: -9.78386116027832
    5. '```' → logprob: -10.78386116027832
    6. ')' → logprob: -10.90886116027832
    7. '            ' → logprob: -11.03386116027832
    8. ' or' → logprob: -11.40886116027832
    9. '          ' → logprob: -11.40886116027832
    10. '               ' → logprob: -12.28386116027832

Token 3253: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.3860604166984558
    2. 'and' → logprob: -1.5110604763031006
    3. ' and' → logprob: -2.7610604763031006
    4. ' next' → logprob: -3.7610604763031006
    5. '           ' → logprob: -4.5110602378845215
    6. '       ' → logprob: -6.5110602378845215
    7. 'curr' → logprob: -7.8860602378845215
    8. 'current' → logprob: -10.13606071472168
    9. ',next' → logprob: -10.51106071472168
    10. ',' → logprob: -10.51106071472168

Token 3254: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.001971577061340213
    2. ' next' → logprob: -6.37697172164917
    3. '       ' → logprob: -8.751971244812012
    4. 'post' → logprob: -9.876971244812012
    5. 'curr' → logprob: -10.876971244812012
    6. 'n' → logprob: -11.126971244812012
    7. ' nxt' → logprob: -12.126971244812012
    8. '(next' → logprob: -12.626971244812012
    9. 'following' → logprob: -12.876971244812012
    10. '   ' → logprob: -13.376971244812012

Token 3255: ' mora' (ID: 47294)
  Prédit: '_vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_vo' → logprob: -0.0027077500708401203
    2. 'vo' → logprob: -6.0027079582214355
    3. 'm' → logprob: -9.502707481384277
    4. '_m' → logprob: -10.252707481384277
    5. '_v' → logprob: -11.252707481384277
    6. '==' → logprob: -11.377707481384277
    7. '   ' → logprob: -11.627707481384277
    8. '	vo' → logprob: -11.752707481384277
    9. '_voice' → logprob: -11.752707481384277
    10. '>=' → logprob: -11.877707481384277

Token 3256: ' vo' (ID: 778)
  Prédit: '_vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vo' → logprob: -0.28018128871917725
    2. 'vo' → logprob: -1.5301812887191772
    3. '=' → logprob: -4.780181407928467
    4. ' =' → logprob: -5.155181407928467
    5. '==' → logprob: -5.280181407928467
    6. 'is' → logprob: -5.905181407928467
    7. ' vo' → logprob: -6.905181407928467
    8. ' is' → logprob: -7.280181407928467
    9. ')' → logprob: -7.780181407928467
    10. 'in' → logprob: -7.905181407928467

Token 3257: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -1.9146995327901095e-05
    2. 'icelo' → logprob: -11.625019073486328
    3. 'iced' → logprob: -12.875019073486328
    4. 'icemail' → logprob: -13.125019073486328
    5. 'cel' → logprob: -14.000019073486328
    6. 'ice' → logprob: -14.250019073486328
    7. 'icem' → logprob: -14.375019073486328
    8. 'icing' → logprob: -14.625019073486328
    9. '```' → logprob: -14.625019073486328
    10. '``' → logprob: -14.750019073486328

Token 3258: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.00025430647656321526
    2. 'ed' → logprob: -9.25025463104248
    3. 'less' → logprob: -9.62525463104248
    4. 'el' → logprob: -9.75025463104248
    5. 'cel' → logprob: -11.75025463104248
    6. 'ic' → logprob: -11.87525463104248
    7. 'ele' → logprob: -12.75025463104248
    8. 'e' → logprob: -13.00025463104248
    9. 'ueless' → logprob: -13.12525463104248
    10. 'iless' → logprob: -13.25025463104248

Token 3259: ' conson' (ID: 127767)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4221884310245514
    2. ' =' → logprob: -1.797188401222229
    3. 'and' → logprob: -2.1721885204315186
    4. '[i' → logprob: -3.4221885204315186
    5. '=' → logprob: -4.1721882820129395
    6. '       ' → logprob: -5.1721882820129395
    7. '           ' → logprob: -6.1721882820129395
    8. '>' → logprob: -6.2971882820129395
    9. '==' → logprob: -6.2971882820129395
    10. '_vo' → logprob: -6.6721882820129395

Token 3260: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.002299536019563675
    2. 't' → logprob: -6.6272993087768555
    3. 'ent' → logprob: -7.7522993087768555
    4. 'at' → logprob: -8.627299308776855
    5. 'tant' → logprob: -8.877299308776855
    6. 'nt' → logprob: -9.002299308776855
    7. 'ants' → logprob: -10.377299308776855
    8. '   ' → logprob: -10.752299308776855
    9. 'ont' → logprob: -12.127299308776855
    10. '           ' → logprob: -12.252299308776855

Token 3261: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.028506841510534286
    2. 'and' → logprob: -3.7785067558288574
    3. ' =' → logprob: -5.778506755828857
    4. '           ' → logprob: -7.028506755828857
    5. '=' → logprob: -7.153506755828857
    6. ' (' → logprob: -8.153507232666016
    7. '       ' → logprob: -9.403507232666016
    8. '(i' → logprob: -10.028507232666016
    9. '(' → logprob: -11.403507232666016
    10. ',' → logprob: -12.028507232666016

Token 3262: ' s' (ID: 265)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.21101804077625275
    2. ' (' → logprob: -1.7110180854797363
    3. 'is' → logprob: -5.711018085479736
    4. '((' → logprob: -6.836018085479736
    5. '(is' → logprob: -6.961018085479736
    6. ' is' → logprob: -6.961018085479736
    7. '(' → logprob: -7.461018085479736
    8. ' i' → logprob: -7.961018085479736
    9. 's' → logprob: -8.086017608642578
    10. 'i' → logprob: -8.086017608642578

Token 3263: 'oku' (ID: 13454)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.42193010449409485
    2. 'vo' → logprob: -1.2969300746917725
    3. 'oi' → logprob: -3.4219300746917725
    4. '_vo' → logprob: -4.421930313110352
    5. '(vo' → logprob: -5.546930313110352
    6. 'oci' → logprob: -5.796930313110352
    7. ' vo' → logprob: -6.546930313110352
    8. '=' → logprob: -6.796930313110352
    9. 'oc' → logprob: -6.984430313110352
    10. '
' → logprob: -7.046930313110352

Token 3264: 'on' (ID: 263)
  Prédit: 'eless'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.8380573391914368
    2. 'less' → logprob: -0.9630573391914368
    3. 'el' → logprob: -2.213057279586792
    4. 'ent' → logprob: -3.088057279586792
    5. 'ess' → logprob: -5.338057518005371
    6. 'ol' → logprob: -5.463057518005371
    7. 'ic' → logprob: -5.463057518005371
    8. 'ient' → logprob: -5.713057518005371
    9. 'iless' → logprob: -5.963057518005371
    10. 'l' → logprob: -6.213057518005371

Token 3265: ' mora' (ID: 47294)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4138050973415375
    2. ' and' → logprob: -1.5388051271438599
    3. '=' → logprob: -3.0388050079345703
    4. '           ' → logprob: -3.2888050079345703
    5. 'and' → logprob: -3.7888050079345703
    6. '       ' → logprob: -4.91380500793457
    7. ' or' → logprob: -4.91380500793457
    8. ' (' → logprob: -7.66380500793457
    9. '=True' → logprob: -7.91380500793457
    10. 'or' → logprob: -8.53880500793457

Token 3266: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2479698359966278
    2. 'and' → logprob: -2.12296986579895
    3. ' =' → logprob: -3.12296986579895
    4. '           ' → logprob: -3.74796986579895
    5. '=' → logprob: -4.372969627380371
    6. '       ' → logprob: -4.747969627380371
    7. ' or' → logprob: -4.747969627380371
    8. 'or' → logprob: -7.497969627380371
    9. ' (' → logprob: -7.497969627380371
    10. '```' → logprob: -8.372969627380371

Token 3267: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05712522938847542
    2. ' and' → logprob: -2.9321253299713135
    3. 'and' → logprob: -6.807125091552734
    4. ' or' → logprob: -7.682125091552734
    5. ' =' → logprob: -7.807125091552734
    6. ',' → logprob: -9.557125091552734
    7. '=' → logprob: -9.557125091552734
    8. ' (' → logprob: -10.682125091552734
    9. '```' → logprob: -10.807125091552734
    10. '          ' → logprob: -11.057125091552734

Token 3268: ' next' (ID: 2613)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.333918809890747
    2. ' =' → logprob: -1.708918809890747
    3. ' (' → logprob: -1.708918809890747
    4. 'next' (adapté à ' next') → logprob: -1.833918809890747
    5. ' next' → logprob: -2.083918809890747
    6. '=' → logprob: -3.083918809890747
    7. '(next' → logprob: -4.083918571472168
    8. '       ' → logprob: -4.833918571472168
    9. '           ' → logprob: -5.333918571472168
    10. '=(' → logprob: -5.333918571472168

Token 3269: '_vo' (ID: 145825)
  Prédit: '_vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vo' → logprob: -9.849109119386412e-06
    2. '_m' → logprob: -12.750009536743164
    3. '_v' → logprob: -13.250009536743164
    4. '_voice' → logprob: -13.625009536743164
    5. '_' → logprob: -13.750009536743164
    6. '```' → logprob: -14.625009536743164
    7. '_is' → logprob: -15.125009536743164
    8. '_con' → logprob: -15.125009536743164
    9. 'vo' → logprob: -15.125009536743164
    10. '_vi' → logprob: -15.375009536743164

Token 3270: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -9.014684110297821e-06
    2. 'iced' → logprob: -12.750008583068848
    3. 'icelo' → logprob: -13.000008583068848
    4. 'cel' → logprob: -13.625008583068848
    5. 'ice' → logprob: -14.625008583068848
    6. '``' → logprob: -15.000008583068848
    7. '
' → logprob: -15.125008583068848
    8. '```' → logprob: -15.500008583068848
    9. '#' → logprob: -15.750008583068848
    10. 'icemail' → logprob: -16.000009536743164

Token 3271: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.00011760921915993094
    2. 'ed' → logprob: -10.000117301940918
    3. 'el' → logprob: -10.125117301940918
    4. 'less' → logprob: -10.875117301940918
    5. 'ele' → logprob: -12.125117301940918
    6. 'iless' → logprob: -12.875117301940918
    7. 'ic' → logprob: -13.125117301940918
    8. 'eles' → logprob: -14.125117301940918
    9. 'heless' → logprob: -14.500117301940918
    10. 'ueless' → logprob: -14.750117301940918

Token 3272: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931617259979248
    2. ' =' → logprob: -0.6931617259979248
    3. '   ' → logprob: -12.193161964416504
    4. ' ' → logprob: -13.068161964416504
    5. '=True' → logprob: -13.693161964416504
    6. '           ' → logprob: -14.068161964416504
    7. '=(' → logprob: -14.068161964416504
    8. '=False' → logprob: -14.193161964416504
    9. ')' → logprob: -14.568161964416504
    10. '    ' → logprob: -14.818161964416504

Token 3273: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5759943127632141
    2. ' (' → logprob: -0.8259943127632141
    3. ' i' → logprob: -10.325994491577148
    4. 'i' → logprob: -11.200994491577148
    5. '(True' → logprob: -12.325994491577148
    6. '(' → logprob: -13.325994491577148
    7. '   ' → logprob: -14.450994491577148
    8. ' ' → logprob: -14.575994491577148
    9. ' True' → logprob: -14.700994491577148
    10. 'True' → logprob: -14.950994491577148

Token 3274: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07976874709129333
    2. '(i' → logprob: -2.579768657684326
    3. ' i' → logprob: -7.329768657684326
    4. ' (' → logprob: -8.454769134521484
    5. '   ' → logprob: -12.204769134521484
    6. '(' → logprob: -13.829769134521484
    7. '     ' → logprob: -14.579769134521484
    8. '[i' → logprob: -14.579769134521484
    9. '           ' → logprob: -14.704769134521484
    10. '       ' → logprob: -14.704769134521484

Token 3275: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005931860650889575
    2. '>' → logprob: -8.250593185424805
    3. ' +' → logprob: -8.375593185424805
    4. '<' → logprob: -9.250593185424805
    5. '-' → logprob: -14.000593185424805
    6. '1' → logprob: -14.125593185424805
    7. '[' → logprob: -14.250593185424805
    8. ' <' → logprob: -14.375593185424805
    9. '<len' → logprob: -14.500593185424805
    10. '+
' → logprob: -14.625593185424805

Token 3276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.250001907348633
    3. '
' → logprob: -15.750001907348633
    4. '```' → logprob: -15.875001907348633
    5. '2' → logprob: -17.250001907348633
    6. '`' → logprob: -17.312501907348633
    7. '   ' → logprob: -17.500001907348633
    8. '+' → logprob: -17.812501907348633
    9. '<|end|>' → logprob: -17.937501907348633
    10. '[' → logprob: -18.062501907348633

Token 3277: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.47519177198410034
    2. '<' → logprob: -0.9751917719841003
    3. '<len' → logprob: -7.100191593170166
    4. '<size' → logprob: -9.350192070007324
    5. '<n' → logprob: -9.600192070007324
    6. 'and' → logprob: -9.975192070007324
    7. ')<' → logprob: -11.100192070007324
    8. '<int' → logprob: -11.350192070007324
    9. ')' → logprob: -11.350192070007324
    10. ' and' → logprob: -12.100192070007324

Token 3278: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007102862582542002
    2. ' n' → logprob: -7.250710487365723
    3. 'len' → logprob: -15.375710487365723
    4. '	n' → logprob: -16.875709533691406
    5. ')n' → logprob: -16.875709533691406
    6. '_n' → logprob: -19.000709533691406
    7. '$n' → logprob: -20.000709533691406
    8. '=n' → logprob: -20.125709533691406
    9. ' len' → logprob: -20.250709533691406
    10. '[n' → logprob: -20.375709533691406

Token 3279: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2520216405391693
    2. 'and' → logprob: -1.5020216703414917
    3. ')' → logprob: -10.127021789550781
    4. '           ' → logprob: -10.252021789550781
    5. '	and' → logprob: -11.752021789550781
    6. '            ' → logprob: -13.127021789550781
    7. '```' → logprob: -13.377021789550781
    8. '          ' → logprob: -13.377021789550781
    9. '        ' → logprob: -14.002021789550781
    10. '       ' → logprob: -14.627021789550781

Token 3280: ' vo' (ID: 778)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.0017101633129641414
    2. ' vo' → logprob: -6.376709938049316
    3. '(vo' → logprob: -11.876709938049316
    4. '   ' → logprob: -14.876709938049316
    5. '	vo' → logprob: -15.251709938049316
    6. ' ' → logprob: -16.626710891723633
    7. '.vo' → logprob: -16.626710891723633
    8. '
' → logprob: -16.751710891723633
    9. '       ' → logprob: -16.751710891723633
    10. '     ' → logprob: -17.501710891723633

Token 3281: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.00022725824965164065
    2. 'iced' → logprob: -10.250226974487305
    3. 'icelo' → logprob: -10.375226974487305
    4. '```' → logprob: -10.875226974487305
    5. 'icemail' → logprob: -11.000226974487305
    6. '``' → logprob: -11.000226974487305
    7. 'ice' → logprob: -11.125226974487305
    8. 'oc' → logprob: -11.750226974487305
    9. 'lic' → logprob: -11.750226974487305
    10. 'il' → logprob: -11.812726974487305

Token 3282: 'eless' (ID: 12279)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.5818122029304504
    2. 'eless' → logprob: -0.8318122029304504
    3. 'cel' → logprob: -6.206812381744385
    4. 'el' → logprob: -6.331812381744385
    5. 'less' → logprob: -7.456812381744385
    6. 'ele' → logprob: -8.331811904907227
    7. 'e' → logprob: -8.331811904907227
    8. 'al' → logprob: -8.831811904907227
    9. 'cl' → logprob: -9.206811904907227
    10. 'ed' → logprob: -9.331811904907227

Token 3283: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.7014437364414334e-05
    2. '[' → logprob: -10.75002670288086
    3. ' [' → logprob: -12.75002670288086
    4. '[
' → logprob: -13.62502670288086
    5. '```' → logprob: -14.75002670288086
    6. '(i' → logprob: -15.00002670288086
    7. ')' → logprob: -15.50002670288086
    8. ')[' → logprob: -16.25002670288086
    9. '   ' → logprob: -17.12502670288086
    10. 'i' → logprob: -17.25002670288086

Token 3284: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.923874702304602e-05
    2. '[' → logprob: -9.500089645385742
    3. ' +' → logprob: -11.375089645385742
    4. '+
' → logprob: -14.000089645385742
    5. '+[' → logprob: -14.125089645385742
    6. '[i' → logprob: -14.250089645385742
    7. '+i' → logprob: -15.875089645385742
    8. '[
' → logprob: -16.250089645385742
    9. '＋' → logprob: -16.500089645385742
    10. '1' → logprob: -16.500089645385742

Token 3285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00976482592523098
    2. '+' → logprob: -4.634764671325684
    3. 'i' → logprob: -12.634764671325684
    4. '
' → logprob: -13.384764671325684
    5. '```' → logprob: -13.634764671325684
    6. '[' → logprob: -14.509764671325684
    7. ' ' → logprob: -14.509764671325684
    8. '   ' → logprob: -15.134764671325684
    9. ' +' → logprob: -15.259764671325684
    10. 'next' → logprob: -15.759764671325684

Token 3286: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012265690602362156
    2. '])' → logprob: -4.512265682220459
    3. ')
' → logprob: -7.137265682220459
    4. ']' → logprob: -9.387266159057617
    5. ' and' → logprob: -9.387266159057617
    6. '           ' → logprob: -9.512266159057617
    7. ' )' → logprob: -10.012266159057617
    8. '       ' → logprob: -10.637266159057617
    9. ')]' → logprob: -10.637266159057617
    10. ')])' → logprob: -10.637266159057617

Token 3287: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04793216288089752
    2. ' and' → logprob: -3.1729321479797363
    3. ' or' → logprob: -6.047932147979736
    4. 'and' → logprob: -6.297932147979736
    5. ')' → logprob: -7.922932147979736
    6. '       ' → logprob: -8.797932624816895
    7. 'or' → logprob: -9.422932624816895
    8. '               ' → logprob: -10.172932624816895
    9. '          ' → logprob: -10.922932624816895
    10. '            ' → logprob: -11.422932624816895

Token 3288: ' next' (ID: 2613)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01562557741999626
    2. 'if' → logprob: -5.640625476837158
    3. 'and' → logprob: -5.640625476837158
    4. ' and' → logprob: -5.890625476837158
    5. ' if' → logprob: -6.015625476837158
    6. ' or' → logprob: -6.265625476837158
    7. 'or' → logprob: -7.765625476837158
    8. 'next' (adapté à ' next') → logprob: -8.015625953674316
    9. ' next' → logprob: -8.765625953674316
    10. '       ' → logprob: -9.765625953674316

Token 3289: '_s' (ID: 1278)
  Prédit: '_vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vo' → logprob: -0.4934104382991791
    2. '_s' → logprob: -0.9934104681015015
    3. '_' → logprob: -4.493410587310791
    4. '_is' → logprob: -5.243410587310791
    5. 's' → logprob: -7.993410587310791
    6. '_v' → logprob: -8.243410110473633
    7. '=' → logprob: -8.368410110473633
    8. ' =' → logprob: -8.493410110473633
    9. '==' → logprob: -8.618410110473633
    10. '_has' → logprob: -8.868410110473633

Token 3290: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.009491032920777798
    2. 'o' → logprob: -6.009490966796875
    3. 'ok' → logprob: -6.009490966796875
    4. '```' → logprob: -6.884490966796875
    5. 'оку' → logprob: -7.259490966796875
    6. 'ocu' → logprob: -7.759490966796875
    7. '_vo' → logprob: -8.009490966796875
    8. '``' → logprob: -8.509490966796875
    9. 'oko' → logprob: -8.509490966796875
    10. '_' → logprob: -8.634490966796875

Token 3291: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -3.292907877039397e-06
    2. '_on' → logprob: -13.62500286102295
    3. 'n' → logprob: -14.12500286102295
    4. 'on's' → logprob: -14.37500286102295
    5. 'ont' → logprob: -15.37500286102295
    6. 'con' → logprob: -16.125003814697266
    7. 'vo' → logprob: -16.375003814697266
    8. 'он' → logprob: -17.000003814697266
    9. '_vo' → logprob: -17.250003814697266
    10. 'ons' → logprob: -17.500003814697266

Token 3292: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3137797713279724
    2. ' =' → logprob: -1.3137798309326172
    3. '=True' → logprob: -8.313779830932617
    4. ')' → logprob: -8.813779830932617
    5. '_' → logprob: -9.938779830932617
    6. '=False' → logprob: -10.188779830932617
    7. ']' → logprob: -12.313779830932617
    8. '_=' → logprob: -12.313779830932617
    9. '==' → logprob: -12.563779830932617
    10. ' ' → logprob: -12.563779830932617

Token 3293: ' is' (ID: 382)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5839793086051941
    2. ' (' → logprob: -0.9589793086051941
    3. 'is' → logprob: -3.083979368209839
    4. ' is' → logprob: -4.95897912979126
    5. '(is' → logprob: -6.08397912979126
    6. ' i' → logprob: -6.20897912979126
    7. 'i' → logprob: -6.33397912979126
    8. '(' → logprob: -9.333979606628418
    9. '   ' → logprob: -10.208979606628418
    10. '           ' → logprob: -11.583979606628418

Token 3294: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00023214559769257903
    2. 's' → logprob: -8.375231742858887
    3. '_next' → logprob: -14.750231742858887
    4. '```' → logprob: -15.000231742858887
    5. '\' → logprob: -16.375232696533203
    6. '_' → logprob: -16.625232696533203
    7. '_vo' → logprob: -16.625232696533203
    8. ')' → logprob: -17.250232696533203
    9. '_after' → logprob: -17.250232696533203
    10. ''s' → logprob: -17.375232696533203

Token 3295: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.0016428076196461916
    2. 'ok' → logprob: -6.87664270401001
    3. 'o' → logprob: -7.75164270401001
    4. 'oko' → logprob: -9.501643180847168
    5. 'оку' → logprob: -10.501643180847168
    6. '_' → logprob: -11.126643180847168
    7. 'k' → logprob: -11.251643180847168
    8. '```' → logprob: -11.376643180847168
    9. ' oku' → logprob: -12.001643180847168
    10. '``' → logprob: -12.501643180847168

Token 3296: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.00011367550177965313
    2. 'o' → logprob: -9.375113487243652
    3. 'on's' → logprob: -12.000113487243652
    4. '
' → logprob: -12.750113487243652
    5. '```' → logprob: -13.000113487243652
    6. 'он' → logprob: -13.000113487243652
    7. 'n' → logprob: -13.687613487243652
    8. 'ont' → logprob: -13.875113487243652
    9. 'next' → logprob: -14.000113487243652
    10. 'after' → logprob: -14.562613487243652

Token 3297: '_after' (ID: 46788)
  Prédit: '_after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_after' → logprob: -0.0003466673369985074
    2. '_follow' → logprob: -8.625347137451172
    3. 'After' → logprob: -9.375347137451172
    4. 'after' → logprob: -9.625347137451172
    5. '```' → logprob: -12.625347137451172
    6. '_' → logprob: -13.000347137451172
    7. '
' → logprob: -13.875347137451172
    8. '`' → logprob: -13.875347137451172
    9. '_af' → logprob: -13.875347137451172
    10. '_AFTER' → logprob: -14.000347137451172

Token 3298: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.014684110297821e-06
    2. '(' → logprob: -11.750008583068848
    3. ' (' → logprob: -14.375008583068848
    4. '(
' → logprob: -15.750008583068848
    5. ')' → logprob: -16.000009536743164
    6. '   ' → logprob: -17.000009536743164
    7. '(m' → logprob: -17.250009536743164
    8. '```' → logprob: -17.250009536743164
    9. '(n' → logprob: -17.375009536743164
    10. '((' → logprob: -17.625009536743164

Token 3299: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7317827343940735
    2. '+' → logprob: -0.7317827343940735
    3. ')
' → logprob: -3.3567826747894287
    4. ' +' → logprob: -6.106782913208008
    5. '           ' → logprob: -7.356782913208008
    6. '       ' → logprob: -9.481782913208008
    7. '+)' → logprob: -10.231782913208008
    8. ')+' → logprob: -11.106782913208008
    9. ' )' → logprob: -11.481782913208008
    10. ']' → logprob: -12.231782913208008

Token 3300: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.221884101862088e-05
    2. '            
' → logprob: -9.500092506408691
    3. '```' → logprob: -12.000092506408691
    4. '		' → logprob: -13.125092506408691
    5. '
' → logprob: -13.375092506408691
    6. ')' → logprob: -13.500092506408691
    7. '{
' → logprob: -14.250092506408691
    8. ',' → logprob: -14.375092506408691
    9. '          ' → logprob: -14.375092506408691
    10. '       ' → logprob: -14.625092506408691

Token 3301: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00045843268162570894
    2. 'if' → logprob: -7.750458240509033
    3. ' if' → logprob: -10.875458717346191
    4. '            
' → logprob: -12.125458717346191
    5. '
' → logprob: -13.250458717346191
    6. '```' → logprob: -14.625458717346191
    7. '   ' → logprob: -14.750458717346191
    8. '       ' → logprob: -15.625458717346191
    9. '		' → logprob: -16.375457763671875
    10. '#' (adapté à ' #') → logprob: -16.625457763671875

Token 3302: ' Also' (ID: 8820)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3527614176273346
    2. '           ' → logprob: -1.2277613878250122
    3. ' if' → logprob: -5.477761268615723
    4. '```' → logprob: -9.477761268615723
    5. '#' → logprob: -10.977761268615723
    6. 'un' → logprob: -11.477761268615723
    7. '            
' → logprob: -12.102761268615723
    8. '{
' → logprob: -12.102761268615723
    9. '       ' → logprob: -12.852761268615723
    10. '
' → logprob: -12.852761268615723

Token 3303: ' condition' (ID: 7060)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8074872493743896
    2. ' if' → logprob: -0.8074872493743896
    3. 'if' → logprob: -2.4324872493743896
    4. '
' → logprob: -4.807487487792969
    5. ' next' → logprob: -5.557487487792969
    6. '#' → logprob: -6.557487487792969
    7. 'next' → logprob: -6.682487487792969
    8. '       ' → logprob: -6.932487487792969
    9. ' or' → logprob: -6.932487487792969
    10. ' continue' → logprob: -7.182487487792969

Token 3304: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10657721757888794
    2. ' and' → logprob: -3.106577157974243
    3. ' =' → logprob: -3.856577157974243
    4. ' if' → logprob: -4.356577396392822
    5. ':' → logprob: -5.106577396392822
    6. 'and' → logprob: -5.481577396392822
    7. ':
' → logprob: -5.731577396392822
    8. ' or' → logprob: -6.231577396392822
    9. '=' → logprob: -6.481577396392822
    10. '       ' → logprob: -7.231577396392822

Token 3305: ' "' (ID: 392)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.35323548316955566
    2. '(i' → logprob: -2.1032354831695557
    3. '           ' → logprob: -2.4782354831695557
    4. '(next' → logprob: -3.2282354831695557
    5. ' next' → logprob: -4.103235244750977
    6. ' if' → logprob: -4.478235244750977
    7. 'next' → logprob: -5.353235244750977
    8. ' ((' → logprob: -5.353235244750977
    9. 'if' → logprob: -5.478235244750977
    10. ' i' → logprob: -5.603235244750977

Token 3306: '無' (ID: 10205)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25443992018699646
    2. '((' → logprob: -2.7544398307800293
    3. '(prev' → logprob: -3.0044398307800293
    4. '(next' → logprob: -3.6294398307800293
    5. '(i' → logprob: -3.6294398307800293
    6. '           ' → logprob: -4.129439830780029
    7. ' (' → logprob: -4.379439830780029
    8. ' if' → logprob: -5.004439830780029
    9. '       ' → logprob: -5.254439830780029
    10. '(
' → logprob: -5.379439830780029

Token 3307: '声' (ID: 26968)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.5619734525680542
    2. '声' → logprob: -2.1869735717773438
    3. 'voice' → logprob: -2.5619735717773438
    4. 'next' → logprob: -2.8119735717773438
    5. '_next' → logprob: -3.5619735717773438
    6. '
' → logprob: -3.6869735717773438
    7. '_vo' → logprob: -3.8119735717773438
    8. '```' → logprob: -3.9369735717773438
    9. ' next' → logprob: -4.186973571777344
    10. 'o' → logprob: -4.436973571777344

Token 3308: '子' (ID: 7407)
  Prédit: '_con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.06311526149511337
    2. '_' → logprob: -3.063115358352661
    3. 'con' → logprob: -5.188115119934082
    4. '子' → logprob: -5.688115119934082
    5. ' conson' → logprob: -6.938115119934082
    6. '_c' → logprob: -7.438115119934082
    7. ')' → logprob: -7.563115119934082
    8. '
' → logprob: -7.563115119934082
    9. 'コ' → logprob: -7.688115119934082
    10. '_s' → logprob: -8.313115119934082

Token 3309: '音' (ID: 15082)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.7398150563240051
    2. '_con' → logprob: -1.4898149967193604
    3. '音' → logprob: -1.7398149967193604
    4. '_' → logprob: -3.2398149967193604
    5. ' conson' → logprob: -3.2398149967193604
    6. 'コン' → logprob: -4.2398152351379395
    7. '子' → logprob: -4.9898152351379395
    8. 'コ' → logprob: -5.1148152351379395
    9. '#' → logprob: -5.4898152351379395
    10. '   ' → logprob: -5.8648152351379395

Token 3310: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.20945368707180023
    2. 'に' → logprob: -2.334453582763672
    3. 'と' → logprob: -3.334453582763672
    4. 'には' → logprob: -3.834453582763672
    5. 'で' → logprob: -4.459453582763672
    6. 'が' → logprob: -4.709453582763672
    7. 'か' → logprob: -5.959453582763672
    8. 'and' → logprob: -6.584453582763672
    9. '```' → logprob: -6.584453582763672
    10. '[i' → logprob: -6.584453582763672

Token 3311: '直' (ID: 9455)
  Prédit: '直'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '直' → logprob: -0.007631232030689716
    2. 'す' → logprob: -6.007631301879883
    3. '後' → logprob: -6.382631301879883
    4. ' ' → logprob: -6.507631301879883
    5. '次' → logprob: -8.257631301879883
    6. 'straight' → logprob: -8.632631301879883
    7. '```' → logprob: -9.007631301879883
    8. '前' → logprob: -9.007631301879883
    9. 'ま' → logprob: -9.507631301879883
    10. 'あと' → logprob: -9.632631301879883

Token 3312: '後' (ID: 27379)
  Prédit: '後'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '後' → logprob: -0.00017314712749794126
    2. '#' → logprob: -9.625173568725586
    3. '前' → logprob: -10.125173568725586
    4. '直' → logprob: -11.250173568725586
    5. ' \xe5\xbe' → logprob: -12.250173568725586
    6. '接' → logprob: -12.250173568725586
    7. '以' → logprob: -12.375173568725586
    8. '```' → logprob: -12.500173568725586
    9. '后' → logprob: -12.750173568725586
    10. '_' → logprob: -12.750173568725586

Token 3313: 'で' (ID: 4344)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.7134221792221069
    2. ' and' → logprob: -1.088422179222107
    3. 'で' → logprob: -1.838422179222107
    4. 'か' → logprob: -5.7134222984313965
    5. 'と' → logprob: -5.7134222984313965
    6. 'が' → logprob: -6.3384222984313965
    7. '```' → logprob: -7.0884222984313965
    8. 'に' → logprob: -7.5884222984313965
    9. 'の' → logprob: -7.5884222984313965
    10. 'or' → logprob: -8.213421821594238

Token 3314: 'しか' (ID: 46105)
  Prédit: 'か'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'か' → logprob: -0.1899392008781433
    2. 'しか' → logprob: -2.814939260482788
    3. 'も' → logprob: -2.939939260482788
    4. 'and' → logprob: -3.439939260482788
    5. 'i' → logprob: -4.439939022064209
    6. '且' → logprob: -4.814939022064209
    7. ' and' → logprob: -6.314939022064209
    8. '&&' → logprob: -6.439939022064209
    9. 'also' → logprob: -7.064939022064209
    10. 'そして' → logprob: -7.439939022064209

Token 3315: 'も' (ID: 8446)
  Prédit: 'も'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'も' → logprob: -0.001954563893377781
    2. 'and' → logprob: -6.751954555511475
    3. 'also' → logprob: -8.751955032348633
    4. 'm' → logprob: -9.126955032348633
    5. '```' → logprob: -9.376955032348633
    6. ' ' → logprob: -9.751955032348633
    7. '&' → logprob: -9.751955032348633
    8. '   ' → logprob: -10.126955032348633
    9. 'つ' → logprob: -10.501955032348633
    10. 'き' → logprob: -10.626955032348633

Token 3316: '語' (ID: 40909)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6320533752441406
    2. '(i' → logprob: -0.8820533752441406
    3. '(' → logprob: -3.8820533752441406
    4. ' (' → logprob: -4.632053375244141
    5. '語' → logprob: -5.132053375244141
    6. 'len' → logprob: -5.257053375244141
    7. ' i' → logprob: -5.507053375244141
    8. '(len' → logprob: -5.632053375244141
    9. '#' → logprob: -6.632053375244141
    10. '（' → logprob: -7.257053375244141

Token 3317: '句' (ID: 48801)
  Prédit: '末'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '末' → logprob: -1.077876091003418
    2. 'i' → logprob: -1.202876091003418
    3. '尾' → logprob: -1.702876091003418
    4. '句' → logprob: -2.202876091003418
    5. '(i' → logprob: -3.452876091003418
    6. '終' → logprob: -5.327876091003418
    7. '```' → logprob: -5.327876091003418
    8. '   ' → logprob: -6.202876091003418
    9. '=i' → logprob: -6.327876091003418
    10. 'が' → logprob: -6.452876091003418

Token 3318: 'の' (ID: 3385)
  Prédit: 'の'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.00017982252757064998
    2. 'が' → logprob: -9.2501802444458
    3. '末' → logprob: -10.5001802444458
    4. ' の' → logprob: -10.8751802444458
    5. '   ' → logprob: -11.3751802444458
    6. '```' → logprob: -12.1251802444458
    7. '#' → logprob: -13.1251802444458
    8. '`' → logprob: -13.1251802444458
    9. '
' → logprob: -13.3751802444458
    10. 'で' → logprob: -13.3751802444458

Token 3319: '末' (ID: 56534)
  Prédit: '末'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '末' → logprob: -0.036743391305208206
    2. '終' → logprob: -3.411743402481079
    3. 'す' → logprob: -6.6617431640625
    4. 'i' → logprob: -7.6617431640625
    5. '```' → logprob: -8.4117431640625
    6. '続' → logprob: -8.4117431640625
    7. '#' → logprob: -8.9117431640625
    8. '1' → logprob: -9.5367431640625
    9. '次' → logprob: -10.0367431640625
    10. '最後' → logprob: -10.0367431640625

Token 3320: '尾' (ID: 59728)
  Prédit: '尾'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '尾' → logprob: -0.0443698950111866
    2. '端' → logprob: -3.54436993598938
    3. '```' → logprob: -4.419369697570801
    4. 'ろ' → logprob: -8.0443696975708
    5. '界' → logprob: -8.1693696975708
    6. '辺' → logprob: -8.2943696975708
    7. '{
' → logprob: -8.7943696975708
    8. '終' → logprob: -8.7943696975708
    9. '葉' → logprob: -9.2943696975708
    10. '末' → logprob: -9.4193696975708

Token 3321: 'に' (ID: 5280)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.7414589524269104
    2. 'で' → logprob: -1.6164588928222656
    3. 'か' → logprob: -2.2414588928222656
    4. ' and' → logprob: -2.3664588928222656
    5. 'に' → logprob: -2.7414588928222656
    6. 'の場合' → logprob: -3.7414588928222656
    7. '==' → logprob: -4.866458892822266
    8. 'の' → logprob: -5.116458892822266
    9. 'と' → logprob: -5.366458892822266
    10. 'お' → logprob: -5.991458892822266

Token 3322: 'ある' (ID: 73977)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6950186491012573
    2. '(i' → logprob: -0.8200186491012573
    3. ' (' → logprob: -4.195018768310547
    4. ' i' → logprob: -4.570018768310547
    5. 'True' → logprob: -4.945018768310547
    6. '1' → logprob: -5.195018768310547
    7. '(' → logprob: -5.195018768310547
    8. ' True' → logprob: -5.820018768310547
    9. 'and' → logprob: -5.945018768310547
    10. '(True' → logprob: -6.195018768310547

Token 3323: 'と' (ID: 5330)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.4177102744579315
    2. ' and' → logprob: -1.167710304260254
    3. '(i' → logprob: -5.042710304260254
    4. '       ' → logprob: -5.417710304260254
    5. '```' → logprob: -5.792710304260254
    6. 'と' → logprob: -6.042710304260254
    7. '==' → logprob: -6.167710304260254
    8. 'か' → logprob: -6.167710304260254
    9. '           ' → logprob: -6.292710304260254
    10. ':
' → logprob: -7.042710304260254

Token 3324: 'き' (ID: 11852)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8469465970993042
    2. 'n' → logprob: -1.4719465970993042
    3. 'True' → logprob: -1.5969465970993042
    4. ' True' → logprob: -3.0969467163085938
    5. '1' → logprob: -4.096946716308594
    6. '   ' → logprob: -4.596946716308594
    7. '(' → logprob: -4.971946716308594
    8. '(i' → logprob: -4.971946716308594
    9. 's' → logprob: -5.096946716308594
    10. '       ' → logprob: -5.471946716308594

Token 3325: '"
' (ID: 1092)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.864718496799469
    2. 'and' → logprob: -1.8647184371948242
    3. '"' → logprob: -2.114718437194824
    4. '           ' → logprob: -2.239718437194824
    5. '       ' → logprob: -2.489718437194824
    6. '"
' → logprob: -2.614718437194824
    7. '":
' → logprob: -4.739718437194824
    8. ':
' → logprob: -5.114718437194824
    9. '```' → logprob: -5.489718437194824
    10. '":' → logprob: -5.864718437194824

Token 3326: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034315004013478756
    2. ' and' → logprob: -6.00343132019043
    3. ' if' → logprob: -8.00343132019043
    4. ' (' → logprob: -8.62843132019043
    5. '       ' → logprob: -9.00343132019043
    6. '          ' → logprob: -9.37843132019043
    7. ':
' → logprob: -10.25343132019043
    8. '(' → logprob: -10.50343132019043
    9. '
' → logprob: -10.50343132019043
    10. '```' → logprob: -10.75343132019043

Token 3327: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06013118848204613
    2. '       ' → logprob: -3.560131072998047
    3. '           ' → logprob: -3.935131072998047
    4. ' if' → logprob: -5.310131072998047
    5. 'end' → logprob: -5.435131072998047
    6. 'is' → logprob: -7.685131072998047
    7. 'next' → logprob: -7.935131072998047
    8. 'tail' → logprob: -8.935131072998047
    9. 'last' → logprob: -11.060131072998047
    10. 'at' → logprob: -11.310131072998047

Token 3328: ' that' (ID: 484)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.7244061231613159
    2. 'if' → logprob: -1.099406123161316
    3. '(next' → logprob: -2.3494062423706055
    4. ' next' → logprob: -3.8494062423706055
    5. 'is' → logprob: -3.8494062423706055
    6. '           ' → logprob: -4.0994062423706055
    7. '       ' → logprob: -4.8494062423706055
    8. 'end' → logprob: -4.9744062423706055
    9. ' if' → logprob: -5.9744062423706055
    10. 'last' → logprob: -6.4744062423706055

Token 3329: ' is' (ID: 382)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1036828756332397
    2. 'i' → logprob: -1.4786828756332397
    3. ' is' → logprob: -1.8536828756332397
    4. ' if' → logprob: -2.3536829948425293
    5. '           ' → logprob: -2.7286829948425293
    6. 'is' → logprob: -3.6036829948425293
    7. ' i' → logprob: -3.6036829948425293
    8. '=' → logprob: -4.478682994842529
    9. '       ' → logprob: -4.853682994842529
    10. 'は' → logprob: -5.353682994842529

Token 3330: ' mora' (ID: 47294)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3327270746231079
    2. ' i' → logprob: -1.332727074623108
    3. ' (' → logprob: -4.332726955413818
    4. '(i' → logprob: -5.207726955413818
    5. ' next' → logprob: -8.957727432250977
    6. '(' → logprob: -9.082727432250977
    7. ' not' → logprob: -9.082727432250977
    8. ' len' → logprob: -9.207727432250977
    9. 'len' → logprob: -9.707727432250977
    10. 'not' → logprob: -10.082727432250977

Token 3331: ' after' (ID: 1934)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2955193817615509
    2. '==' → logprob: -1.5455193519592285
    3. '+' → logprob: -5.0455193519592285
    4. '[i' → logprob: -5.0455193519592285
    5. ' at' → logprob: -5.5455193519592285
    6. '_index' → logprob: -5.5455193519592285
    7. '_idx' → logprob: -6.0455193519592285
    8. '           ' → logprob: -6.0455193519592285
    9. 'i' → logprob: -6.5455193519592285
    10. 's' → logprob: -6.5455193519592285

Token 3332: ' is' (ID: 382)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.031225938349962234
    2. ' i' → logprob: -4.53122615814209
    3. ' =' → logprob: -5.53122615814209
    4. 'm' → logprob: -5.65622615814209
    5. '(i' → logprob: -6.40622615814209
    6. 's' → logprob: -6.53122615814209
    7. ' (' → logprob: -6.53122615814209
    8. '=' → logprob: -6.78122615814209
    9. '           ' → logprob: -6.90622615814209
    10. '+' → logprob: -7.03122615814209

Token 3333: ' vowel' (ID: 165542)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24585233628749847
    2. ' n' → logprob: -2.24585223197937
    3. 'i' → logprob: -3.24585223197937
    4. 'len' → logprob: -3.37085223197937
    5. ' (' → logprob: -4.870852470397949
    6. '(n' → logprob: -5.370852470397949
    7. ' len' → logprob: -5.495852470397949
    8. ' i' → logprob: -5.620852470397949
    9. 'True' → logprob: -5.620852470397949
    10. ' True' → logprob: -6.120852470397949

Token 3334: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.44307535886764526
    2. '           ' → logprob: -1.31807541847229
    3. 'and' → logprob: -2.56807541847229
    4. ' or' → logprob: -5.068075180053711
    5. '       ' → logprob: -5.443075180053711
    6. ' if' → logprob: -6.818075180053711
    7. 'or' → logprob: -8.068075180053711
    8. 'if' → logprob: -8.318075180053711
    9. ':
' → logprob: -8.568075180053711
    10. ' (' → logprob: -8.693075180053711

Token 3335: ' mora' (ID: 47294)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8817979693412781
    2. ' and' → logprob: -1.3817980289459229
    3. 'and' → logprob: -2.006798028945923
    4. '           ' → logprob: -2.256798028945923
    5. ' i' → logprob: -3.256798028945923
    6. '(i' → logprob: -4.256797790527344
    7. ' or' → logprob: -4.381797790527344
    8. '       ' → logprob: -5.006797790527344
    9. 'or' → logprob: -5.381797790527344
    10. '#' → logprob: -5.631797790527344

Token 3336: ' i' (ID: 575)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.482807993888855
    2. '+' → logprob: -1.857807993888855
    3. ' ==' → logprob: -2.2328081130981445
    4. '           ' → logprob: -2.3578081130981445
    5. '[i' → logprob: -2.6078081130981445
    6. ' at' → logprob: -2.7328081130981445
    7. 's' → logprob: -2.9828081130981445
    8. '       ' → logprob: -3.7328081130981445
    9. ' and' → logprob: -4.1078081130981445
    10. 'at' → logprob: -4.2328081130981445

Token 3337: ' is' (ID: 382)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03767900913953781
    2. '==' → logprob: -4.287679195404053
    3. ' ==' → logprob: -5.412679195404053
    4. 's' → logprob: -5.412679195404053
    5. ' +' → logprob: -5.662679195404053
    6. '<len' → logprob: -6.037679195404053
    7. ' <' → logprob: -6.162679195404053
    8. '<' → logprob: -6.287679195404053
    9. ' and' → logprob: -7.537679195404053
    10. 'and' → logprob: -7.787679195404053

Token 3338: ' vowel' (ID: 165542)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.089163064956665
    2. 'n' → logprob: -1.214163064956665
    3. 'the' → logprob: -2.714163064956665
    4. ' last' → logprob: -2.964163064956665
    5. 'un' → logprob: -2.964163064956665
    6. 'len' → logprob: -2.964163064956665
    7. 'i' → logprob: -3.339163064956665
    8. ' at' → logprob: -3.464163064956665
    9. 'at' → logprob: -3.839163064956665
    10. ' the' → logprob: -4.089162826538086

Token 3339: ',' (ID: 11)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.8670002222061157
    2. '           ' → logprob: -0.9920002222061157
    3. ' and' → logprob: -1.6170002222061157
    4. '       ' → logprob: -5.742000102996826
    5. 'if' → logprob: -5.867000102996826
    6. ' if' → logprob: -6.367000102996826
    7. '```' → logprob: -7.617000102996826
    8. 'or' → logprob: -7.867000102996826
    9. ' or' → logprob: -8.117000579833984
    10. ',' → logprob: -8.492000579833984

Token 3340: ' preceding' (ID: 76774)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7107171416282654
    2. ' and' → logprob: -1.0857172012329102
    3. 'and' → logprob: -2.08571720123291
    4. ' i' → logprob: -3.71071720123291
    5. 'i' → logprob: -4.33571720123291
    6. ' if' → logprob: -6.33571720123291
    7. ' (' → logprob: -6.58571720123291
    8. '       ' → logprob: -6.58571720123291
    9. '(i' → logprob: -7.08571720123291
    10. ' next' → logprob: -7.46071720123291

Token 3341: ' mora' (ID: 47294)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.6525461673736572
    2. 'if' → logprob: -1.6525461673736572
    3. ' if' → logprob: -1.7775461673736572
    4. 'i' → logprob: -2.5275461673736572
    5. ' and' → logprob: -3.0275461673736572
    6. '==' → logprob: -3.1525461673736572
    7. 'vo' → logprob: -3.4025461673736572
    8. ' mora' → logprob: -3.4025461673736572
    9. ')' → logprob: -3.9025461673736572
    10. 'and' → logprob: -4.152545928955078

Token 3342: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.0299378633499146
    2. ' and' → logprob: -1.2799378633499146
    3. '           ' → logprob: -1.7799378633499146
    4. '==' → logprob: -1.9049378633499146
    5. ' or' → logprob: -4.529937744140625
    6. 'and' → logprob: -4.904937744140625
    7. ':
' → logprob: -5.154937744140625
    8. '       ' → logprob: -5.529937744140625
    9. '+' → logprob: -5.904937744140625
    10. '```' → logprob: -6.279937744140625

Token 3343: ' vo' (ID: 778)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.026723112910985947
    2. ' vo' → logprob: -3.6517231464385986
    3. 'True' → logprob: -8.90172290802002
    4. 'i' → logprob: -9.15172290802002
    5. '   ' → logprob: -10.52672290802002
    6. ' True' → logprob: -10.52672290802002
    7. '	vo' → logprob: -10.52672290802002
    8. '```' → logprob: -10.90172290802002
    9. 'm' → logprob: -11.15172290802002
    10. '(vo' → logprob: -11.27672290802002

Token 3344: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.006537861656397581
    2. 'ice' → logprob: -6.381537914276123
    3. '+' → logprob: -6.881537914276123
    4. '```' → logprob: -7.631537914276123
    5. 'icelo' → logprob: -7.631537914276123
    6. '``' → logprob: -7.881537914276123
    7. 'i' → logprob: -8.506537437438965
    8. '`' → logprob: -8.506537437438965
    9. 'cel' → logprob: -8.631537437438965
    10. '#' → logprob: -8.819037437438965

Token 3345: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.00040004486800171435
    2. 'ed' → logprob: -8.375399589538574
    3. 'el' → logprob: -9.250399589538574
    4. 'ess' → logprob: -10.000399589538574
    5. 'e' → logprob: -11.500399589538574
    6. '```' → logprob: -12.250399589538574
    7. 'eled' → logprob: -12.875399589538574
    8. '#' → logprob: -13.125399589538574
    9. 'less' → logprob: -14.000399589538574
    10. 'essed' → logprob: -14.000399589538574

Token 3346: ' conson' (ID: 127767)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05120425298810005
    2. ' and' → logprob: -3.426204204559326
    3. ' if' → logprob: -4.801204204559326
    4. '       ' → logprob: -6.051204204559326
    5. 'and' → logprob: -6.551204204559326
    6. ' or' → logprob: -6.801204204559326
    7. ',' → logprob: -7.176204204559326
    8. ')' → logprob: -7.426204204559326
    9. '```' → logprob: -7.426204204559326
    10. ':
' → logprob: -7.926204204559326

Token 3347: 'ant' (ID: 493)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.052408616989851
    2. 'ant' → logprob: -3.3024086952209473
    3. '
' → logprob: -5.052408695220947
    4. '   ' → logprob: -6.177408695220947
    5. 'ont' → logprob: -6.677408695220947
    6. 'tant' → logprob: -7.052408695220947
    7. 'т' → logprob: -8.052408218383789
    8. '           ' → logprob: -8.052408218383789
    9. 's' → logprob: -8.552408218383789
    10. '               ' → logprob: -8.927408218383789

Token 3348: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29598164558410645
    2. ' and' → logprob: -1.9209816455841064
    3. 'and' → logprob: -2.7959816455841064
    4. ' if' → logprob: -3.2959816455841064
    5. 'if' → logprob: -5.545981407165527
    6. ' or' → logprob: -5.920981407165527
    7. '       ' → logprob: -6.670981407165527
    8. ',' → logprob: -7.170981407165527
    9. 'or' → logprob: -7.670981407165527
    10. '```' → logprob: -7.670981407165527

Token 3349: ' mora' (ID: 47294)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0733812227845192
    2. '(i' → logprob: -3.823381185531616
    3. ' i' → logprob: -3.948381185531616
    4. 'next' → logprob: -4.198381423950195
    5. ' next' → logprob: -5.448381423950195
    6. ' (' → logprob: -5.948381423950195
    7. '#' → logprob: -6.073381423950195
    8. 'line' → logprob: -6.073381423950195
    9. '(next' → logprob: -7.448381423950195
    10. 'len' → logprob: -7.448381423950195

Token 3350: ' i' (ID: 575)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.558836042881012
    2. '+' → logprob: -1.4338359832763672
    3. '==' → logprob: -2.183835983276367
    4. ' ==' → logprob: -2.808835983276367
    5. '[i' → logprob: -5.433835983276367
    6. '```' → logprob: -6.058835983276367
    7. 'i' → logprob: -6.558835983276367
    8. '(i' → logprob: -6.683835983276367
    9. ' +' → logprob: -6.808835983276367
    10. '       ' → logprob: -7.058835983276367

Token 3351: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7589179277420044
    2. '==' → logprob: -1.1339179277420044
    3. '+' → logprob: -1.7589179277420044
    4. ' <' → logprob: -3.883917808532715
    5. '<len' → logprob: -5.008917808532715
    6. '           ' → logprob: -5.508917808532715
    7. ' +' → logprob: -6.133917808532715
    8. '       ' → logprob: -6.758917808532715
    9. '```' → logprob: -7.133917808532715
    10. '<' → logprob: -7.883917808532715

Token 3352: ' last' (ID: 2174)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24159683287143707
    2. '(i' → logprob: -2.9915969371795654
    3. ' (' → logprob: -3.3665969371795654
    4. 'True' → logprob: -3.7415969371795654
    5. ' i' → logprob: -4.241596698760986
    6. ' True' → logprob: -4.366596698760986
    7. ' at' → logprob: -4.366596698760986
    8. '(True' → logprob: -4.491596698760986
    9. 'len' → logprob: -4.616596698760986
    10. 'at' → logprob: -4.741596698760986

Token 3353: ' mora' (ID: 47294)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1252981275320053
    2. '           ' → logprob: -2.250298023223877
    3. 'and' → logprob: -4.625298023223877
    4. '       ' → logprob: -6.500298023223877
    5. ' if' → logprob: -7.250298023223877
    6. ':
' → logprob: -9.125298500061035
    7. '          ' → logprob: -10.125298500061035
    8. 'if' → logprob: -10.375298500061035
    9. '```' → logprob: -10.500298500061035
    10. ' or' → logprob: -10.500298500061035

Token 3354: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3097122609615326
    2. ' and' → logprob: -1.684712290763855
    3. 'and' → logprob: -2.5597121715545654
    4. '       ' → logprob: -6.3097124099731445
    5. ' if' → logprob: -7.6847124099731445
    6. 'if' → logprob: -7.8097124099731445
    7. '```' → logprob: -8.309712409973145
    8. ' or' → logprob: -9.059712409973145
    9. ':' → logprob: -9.559712409973145
    10. ',' → logprob: -9.559712409973145

Token 3355: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5884109139442444
    2. '           ' → logprob: -0.8384109139442444
    3. '```' → logprob: -5.5884108543396
    4. ' or' → logprob: -5.7134108543396
    5. ' if' → logprob: -6.3384108543396
    6. 'and' → logprob: -6.5884108543396
    7. '       ' → logprob: -7.3384108543396
    8. '          ' → logprob: -7.8384108543396
    9. ',' → logprob: -8.463411331176758
    10. ' (' → logprob: -9.088411331176758

Token 3356: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13870134949684143
    2. ' if' → logprob: -2.2637014389038086
    3. 'if' → logprob: -4.638701438903809
    4. '```' → logprob: -4.888701438903809
    5. ' and' → logprob: -5.638701438903809
    6. '       ' → logprob: -5.888701438903809
    7. ' or' → logprob: -8.513701438903809
    8. ',' → logprob: -8.638701438903809
    9. '               ' → logprob: -8.638701438903809
    10. 'and' → logprob: -8.888701438903809

Token 3357: ' check' (ID: 2371)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1445034295320511
    2. ' if' → logprob: -2.269503355026245
    3. 'if' → logprob: -4.269503593444824
    4. '       ' → logprob: -4.269503593444824
    5. '```' → logprob: -6.144503593444824
    6. ' and' → logprob: -8.519503593444824
    7. '               ' → logprob: -9.269503593444824
    8. '   ' → logprob: -9.519503593444824
    9. '``' → logprob: -9.519503593444824
    10. 'elif' → logprob: -9.769503593444824

Token 3358: ' if' (ID: 538)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7372533082962036
    2. ' (' → logprob: -1.9872533082962036
    3. '           ' → logprob: -2.112253189086914
    4. ' i' → logprob: -2.237253189086914
    5. 'i' → logprob: -2.737253189086914
    6. '       ' → logprob: -3.612253189086914
    7. ' next' → logprob: -4.237253189086914
    8. 'next' → logprob: -4.362253189086914
    9. '(next' → logprob: -4.487253189086914
    10. 'not' → logprob: -5.487253189086914

Token 3359: ' previous' (ID: 5880)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1947387009859085
    2. ' i' → logprob: -2.3197386264801025
    3. '(i' → logprob: -3.0697386264801025
    4. 'next' → logprob: -4.319738864898682
    5. ' (' → logprob: -4.569738864898682
    6. ' next' → logprob: -4.944738864898682
    7. '(next' → logprob: -7.819738864898682
    8. '       ' → logprob: -7.944738864898682
    9. '   ' → logprob: -8.569738388061523
    10. 'not' → logprob: -8.944738388061523

Token 3360: ' mora' (ID: 47294)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -1.274340271949768
    2. '+' → logprob: -2.0243401527404785
    3. '_vo' → logprob: -2.3993401527404785
    4. '>' → logprob: -2.5243401527404785
    5. '<' → logprob: -2.5243401527404785
    6. '   ' → logprob: -2.6493401527404785
    7. ' +' → logprob: -3.0243401527404785
    8. '>=' → logprob: -3.3993401527404785
    9. ' >=' → logprob: -3.6493401527404785
    10. 'i' → logprob: -3.7743401527404785

Token 3361: ' vo' (ID: 778)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5836883783340454
    2. '==' → logprob: -2.458688259124756
    3. ' ==' → logprob: -2.583688259124756
    4. '       ' → logprob: -2.708688259124756
    5. '   ' → logprob: -3.708688259124756
    6. '           ' → logprob: -3.958688259124756
    7. '=' → logprob: -4.208688259124756
    8. '_vo' → logprob: -4.208688259124756
    9. ' >' → logprob: -4.333688259124756
    10. '-' → logprob: -4.333688259124756

Token 3362: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.00790057610720396
    2. 'ice' → logprob: -6.257900714874268
    3. '+' → logprob: -6.882900714874268
    4. 'iced' → logprob: -7.007900714874268
    5. 'id' → logprob: -7.257900714874268
    6. '=' → logprob: -7.632900714874268
    7. '>' → logprob: -7.882900714874268
    8. 'ices' → logprob: -8.13290023803711
    9. '``' → logprob: -8.13290023803711
    10. '#' → logprob: -8.38290023803711

Token 3363: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.0037619518116116524
    2. 'ed' → logprob: -5.7537617683410645
    3. 'el' → logprob: -7.6287617683410645
    4. 'eled' → logprob: -9.878762245178223
    5. 'less' → logprob: -11.128762245178223
    6. 'e' → logprob: -11.128762245178223
    7. '```' → logprob: -12.128762245178223
    8. 'ele' → logprob: -13.128762245178223
    9. '``' → logprob: -13.253762245178223
    10. 'eles' → logprob: -13.878762245178223

Token 3364: ' conson' (ID: 127767)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03126024454832077
    2. 'and' → logprob: -3.6562602519989014
    3. '           ' → logprob: -5.656260013580322
    4. '```' → logprob: -7.781260013580322
    5. '       ' → logprob: -7.906260013580322
    6. '==' → logprob: -8.78126049041748
    7. ' ==' → logprob: -9.03126049041748
    8. ':
' → logprob: -9.28126049041748
    9. '=' → logprob: -9.90626049041748
    10. ' =' → logprob: -10.40626049041748

Token 3365: 'ant' (ID: 493)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.04554850235581398
    2. 'ant' → logprob: -3.170548439025879
    3. '   ' → logprob: -7.170548439025879
    4. 'tant' → logprob: -7.795548439025879
    5. 'т' → logprob: -8.420548439025879
    6. '           ' → logprob: -8.545548439025879
    7. 'at' → logprob: -8.670548439025879
    8. 'a' → logprob: -9.420548439025879
    9. '
' → logprob: -9.545548439025879
    10. '       ' → logprob: -9.670548439025879

Token 3366: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17141714692115784
    2. '           ' → logprob: -2.171417236328125
    3. 'and' → logprob: -3.171417236328125
    4. '       ' → logprob: -6.921417236328125
    5. '```' → logprob: -9.171417236328125
    6. ',' → logprob: -9.296417236328125
    7. ':
' → logprob: -9.421417236328125
    8. '   ' → logprob: -10.171417236328125
    9. ':' → logprob: -10.296417236328125
    10. ' or' → logprob: -10.671417236328125

Token 3367: ' mora' (ID: 47294)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8035929203033447
    2. 'i' → logprob: -1.3035929203033447
    3. ' (' → logprob: -1.5535929203033447
    4. ' i' → logprob: -2.8035929203033447
    5. '((' → logprob: -5.678592681884766
    6. '(' → logprob: -5.803592681884766
    7. ' ((' → logprob: -6.928592681884766
    8. '(
' → logprob: -8.428592681884766
    9. '(m' → logprob: -9.303592681884766
    10. 'len' → logprob: -9.303592681884766

Token 3368: ' i' (ID: 575)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8092446327209473
    2. '==' → logprob: -1.3092446327209473
    3. 'i' → logprob: -1.6842446327209473
    4. ' i' → logprob: -2.8092446327209473
    5. '+' → logprob: -4.184244632720947
    6. '[i' → logprob: -5.184244632720947
    7. 's' → logprob: -5.434244632720947
    8. '(i' → logprob: -6.059244632720947
    9. '           ' → logprob: -6.309244632720947
    10. ')' → logprob: -6.434244632720947

Token 3369: ' is' (ID: 382)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8498958349227905
    2. ' ==' → logprob: -1.0998958349227905
    3. '==' → logprob: -1.5998958349227905
    4. ' <' → logprob: -4.09989595413208
    5. '<len' → logprob: -4.72489595413208
    6. ' +' → logprob: -5.22489595413208
    7. '```' → logprob: -6.22489595413208
    8. ' !=' → logprob: -6.59989595413208
    9. '<' → logprob: -7.09989595413208
    10. '<n' → logprob: -7.34989595413208

Token 3370: ' last' (ID: 2174)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014263052493333817
    2. 'len' → logprob: -4.639263153076172
    3. ' n' → logprob: -5.889263153076172
    4. 'i' → logprob: -7.139263153076172
    5. '(n' → logprob: -7.264263153076172
    6. '==' → logprob: -9.014263153076172
    7. ' len' → logprob: -10.639263153076172
    8. ' (' → logprob: -10.639263153076172
    9. '=n' → logprob: -11.389263153076172
    10. '(len' → logprob: -11.639263153076172

Token 3371: ' mora' (ID: 47294)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.14007610082626343
    2. 'and' → logprob: -2.265076160430908
    3. '==' → logprob: -4.515076160430908
    4. ' ==' → logprob: -4.640076160430908
    5. '       ' → logprob: -6.140076160430908
    6. '           ' → logprob: -6.515076160430908
    7. '+' → logprob: -6.890076160430908
    8. ':
' → logprob: -7.265076160430908
    9. ' or' → logprob: -8.26507568359375
    10. '```' → logprob: -9.01507568359375

Token 3372: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1769121289253235
    2. 'and' → logprob: -2.5519120693206787
    3. '           ' → logprob: -2.5519120693206787
    4. '       ' → logprob: -5.176912307739258
    5. '```' → logprob: -7.801912307739258
    6. '          ' → logprob: -9.801912307739258
    7. ' or' → logprob: -9.926912307739258
    8. '        ' → logprob: -10.926912307739258
    9. '``' → logprob: -11.551912307739258
    10. '(' → logprob: -11.676912307739258

Token 3373: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020952196791768074
    2. ' and' → logprob: -4.895952224731445
    3. ' if' → logprob: -5.145952224731445
    4. '       ' → logprob: -5.395952224731445
    5. '```' → logprob: -6.145952224731445
    6. 'if' → logprob: -8.770952224731445
    7. ':
' → logprob: -9.145952224731445
    8. ',' → logprob: -9.270952224731445
    9. '               ' → logprob: -9.520952224731445
    10. 'and' → logprob: -9.770952224731445

Token 3374: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5577415823936462
    2. 'if' → logprob: -1.307741641998291
    3. ' if' → logprob: -2.432741641998291
    4. '       ' → logprob: -2.682741641998291
    5. '```' → logprob: -7.432741641998291
    6. ' and' → logprob: -9.682741165161133
    7. '   ' → logprob: -9.682741165161133
    8. 'and' → logprob: -10.557741165161133
    9. 'elif' → logprob: -10.682741165161133
    10. ' ' → logprob: -10.932741165161133

Token 3375: ' also' (ID: 1217)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34658485651016235
    2. 'if' → logprob: -1.4715847969055176
    3. '       ' → logprob: -3.0965847969055176
    4. ' if' → logprob: -4.596584796905518
    5. '```' → logprob: -5.596584796905518
    6. 'and' → logprob: -6.096584796905518
    7. ' and' → logprob: -6.471584796905518
    8. '   ' → logprob: -9.721585273742676
    9. 'elif' → logprob: -9.721585273742676
    10. 'i' → logprob: -10.096585273742676

Token 3376: ' applies' (ID: 28134)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6155239939689636
    2. ' if' → logprob: -1.1155240535736084
    3. 'if' → logprob: -2.1155240535736084
    4. '       ' → logprob: -5.115523815155029
    5. 'elif' → logprob: -6.365523815155029
    6. 'and' → logprob: -7.365523815155029
    7. ' continue' → logprob: -7.740523815155029
    8. '```' → logprob: -7.740523815155029
    9. 'continue' → logprob: -7.990523815155029
    10. ' and' → logprob: -7.990523815155029

Token 3377: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03598181530833244
    2. ' and' → logprob: -3.5359818935394287
    3. '       ' → logprob: -5.78598165512085
    4. 'and' → logprob: -6.16098165512085
    5. ' if' → logprob: -7.91098165512085
    6. '```' → logprob: -8.660982131958008
    7. ' or' → logprob: -8.785982131958008
    8. ',' → logprob: -9.535982131958008
    9. '&&' → logprob: -9.785982131958008
    10. '               ' → logprob: -10.535982131958008

Token 3378: ' next' (ID: 2613)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3426242172718048
    2. '(i' → logprob: -2.2176241874694824
    3. 'next' → logprob: -2.7176241874694824
    4. ' i' → logprob: -3.2176241874694824
    5. ' next' → logprob: -3.4676241874694824
    6. ' (' → logprob: -3.7176241874694824
    7. '(next' → logprob: -4.592624187469482
    8. 'not' → logprob: -6.717624187469482
    9. 'n' → logprob: -7.092624187469482
    10. 'len' → logprob: -7.217624187469482

Token 3379: 's' (ID: 82)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -1.3216986656188965
    2. '+' → logprob: -1.5716986656188965
    3. '<' → logprob: -1.9466986656188965
    4. '==' → logprob: -2.5716986656188965
    5. '_i' → logprob: -2.5716986656188965
    6. '<m' → logprob: -2.6966986656188965
    7. ' <' → logprob: -2.6966986656188965
    8. 'm' → logprob: -3.8216986656188965
    9. 'i' → logprob: -4.1966986656188965
    10. '<i' → logprob: -4.3216986656188965

Token 3380: ' are' (ID: 553)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1647859513759613
    2. '==' → logprob: -3.039785861968994
    3. ' <' → logprob: -3.539785861968994
    4. ' +' → logprob: -3.664785861968994
    5. '<' → logprob: -4.164785861968994
    6. '_m' → logprob: -4.789785861968994
    7. '<m' → logprob: -5.164785861968994
    8. ' ==' → logprob: -5.414785861968994
    9. '_' → logprob: -5.664785861968994
    10. '+i' → logprob: -6.539785861968994

Token 3381: ' s' (ID: 265)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2003934532403946
    2. ' i' → logprob: -3.3253934383392334
    3. 'not' → logprob: -3.5753934383392334
    4. 'n' → logprob: -3.7003934383392334
    5. '(i' → logprob: -3.9503934383392334
    6. ' not' → logprob: -4.3253936767578125
    7. 'next' → logprob: -4.4503936767578125
    8. ' (' → logprob: -4.9503936767578125
    9. ' next' → logprob: -5.0753936767578125
    10. 'False' → logprob: -5.2003936767578125

Token 3382: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.0926409512758255
    2. '+' → logprob: -2.5926408767700195
    3. ' +' → logprob: -5.9676408767700195
    4. '   ' → logprob: -6.4676408767700195
    5. '==' → logprob: -6.7176408767700195
    6. 'ok' → logprob: -7.3426408767700195
    7. ']' → logprob: -7.3426408767700195
    8. '<' → logprob: -7.4676408767700195
    9. '[' → logprob: -7.8426408767700195
    10. '-' → logprob: -7.8426408767700195

Token 3383: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.00013166792632546276
    2. 'n' → logprob: -9.875131607055664
    3. 'ion' → logprob: -11.125131607055664
    4. 'on's' → logprob: -11.375131607055664
    5. 'o' → logprob: -11.500131607055664
    6. 'in' → logprob: -11.750131607055664
    7. 'ons' → logprob: -12.250131607055664
    8. '
' → logprob: -12.375131607055664
    9. '_on' → logprob: -12.750131607055664
    10. '   ' → logprob: -13.000131607055664

Token 3384: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38499903678894043
    2. '       ' → logprob: -1.2599990367889404
    3. ' and' → logprob: -3.7599990367889404
    4. ':' → logprob: -6.1349992752075195
    5. '               ' → logprob: -6.2599992752075195
    6. ':
' → logprob: -6.8849992752075195
    7. ' if' → logprob: -6.8849992752075195
    8. '```' → logprob: -6.8849992752075195
    9. ')' → logprob: -7.0099992752075195
    10. ' or' → logprob: -7.6349992752075195

Token 3385: ' word' (ID: 2195)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.2904881238937378
    2. 'i' → logprob: -1.4154881238937378
    3. ' next' → logprob: -1.9154881238937378
    4. 'vo' → logprob: -2.7904882431030273
    5. ' (' → logprob: -3.0404882431030273
    6. '(i' → logprob: -3.2904882431030273
    7. ' vo' → logprob: -3.4154882431030273
    8. ' i' → logprob: -3.9154882431030273
    9. 'len' → logprob: -4.290488243103027
    10. '#' → logprob: -4.415488243103027

Token 3386: ' end' (ID: 1268)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30004456639289856
    2. ' and' → logprob: -1.9250445365905762
    3. '       ' → logprob: -2.300044536590576
    4. 'and' → logprob: -5.175044536590576
    5. ':
' → logprob: -6.550044536590576
    6. '==' → logprob: -6.925044536590576
    7. ' ==' → logprob: -6.925044536590576
    8. ':' → logprob: -7.050044536590576
    9. ' or' → logprob: -7.300044536590576
    10. '```' → logprob: -7.925044536590576

Token 3387: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36193710565567017
    2. '       ' → logprob: -1.6119370460510254
    3. ' and' → logprob: -2.3619370460510254
    4. ':
' → logprob: -6.111937046051025
    5. 'and' → logprob: -6.486937046051025
    6. ' if' → logprob: -6.486937046051025
    7. '   ' → logprob: -6.611937046051025
    8. '               ' → logprob: -7.611937046051025
    9. ' or' → logprob: -7.861937046051025
    10. ':' → logprob: -8.111937522888184

Token 3388: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010280465940013528
    2. '```' → logprob: -7.501028060913086
    3. '       ' → logprob: -8.376028060913086
    4. ' if' → logprob: -8.626028060913086
    5. ',' → logprob: -11.126028060913086
    6. 'if' → logprob: -11.501028060913086
    7. '               ' → logprob: -11.626028060913086
    8. '   ' → logprob: -12.001028060913086
    9. '		' → logprob: -12.626028060913086
    10. ':
' → logprob: -13.001028060913086

Token 3389: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000158842682139948
    2. ' if' → logprob: -9.12515926361084
    3. '       ' → logprob: -10.75015926361084
    4. 'if' → logprob: -11.25015926361084
    5. '```' → logprob: -12.50015926361084
    6. ',' → logprob: -12.75015926361084
    7. '               ' → logprob: -12.87515926361084
    8. '		' → logprob: -13.25015926361084
    9. '   ' → logprob: -13.75015926361084
    10. '	       ' → logprob: -14.62515926361084

Token 3390: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.7686638236045837
    2. '_' → logprob: -2.1436638832092285
    3. 'e' → logprob: -2.1436638832092285
    4. 'i' → logprob: -2.6436638832092285
    5. '=' → logprob: -3.0186638832092285
    6. ' ' → logprob: -3.7686638832092285
    7. '_word' → logprob: -3.7686638832092285
    8. '   ' → logprob: -4.2686638832092285
    9. '_last' → logprob: -4.3936638832092285
    10. 'end' → logprob: -4.6436638832092285

Token 3391: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08469139039516449
    2. '==' → logprob: -3.209691286087036
    3. ' =' → logprob: -3.459691286087036
    4. ' and' → logprob: -5.459691524505615
    5. '=' → logprob: -6.584691524505615
    6. '           ' → logprob: -6.584691524505615
    7. ':
' → logprob: -7.584691524505615
    8. ':' → logprob: -8.209691047668457
    9. ' ' → logprob: -8.209691047668457
    10. '       ' → logprob: -8.209691047668457

Token 3392: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9177016019821167
    2. ' i' → logprob: -1.0427016019821167
    3. '(i' → logprob: -1.9177016019821167
    4. 'i' → logprob: -2.2927017211914062
    5. '(' → logprob: -9.667701721191406
    6. '   ' → logprob: -11.167701721191406
    7. ' len' → logprob: -11.417701721191406
    8. '           ' → logprob: -11.792701721191406
    9. 'len' → logprob: -12.042701721191406
    10. ' True' → logprob: -12.167701721191406

Token 3393: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012106612848583609
    2. ' i' → logprob: -9.125121116638184
    3. '   ' → logprob: -11.875121116638184
    4. ')' → logprob: -13.000121116638184
    5. '       ' → logprob: -14.500121116638184
    6. '           ' → logprob: -14.625121116638184
    7. 'len' → logprob: -14.875121116638184
    8. '(i' → logprob: -15.000121116638184
    9. 'n' → logprob: -15.125121116638184
    10. ')i' → logprob: -15.625121116638184

Token 3394: ' ==' (ID: 951)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.797002911567688
    2. ' ==' → logprob: -1.297002911567688
    3. '==' → logprob: -1.297002911567688
    4. ' +' → logprob: -6.047002792358398
    5. ')' → logprob: -9.047002792358398
    6. ')==' → logprob: -10.422002792358398
    7. '<len' → logprob: -10.797002792358398
    8. '<' → logprob: -11.047002792358398
    9. ']==' → logprob: -11.297002792358398
    10. '```' → logprob: -11.547002792358398

Token 3395: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0021313487086445093
    2. 'len' → logprob: -6.377131462097168
    3. ' n' → logprob: -7.877131462097168
    4. '           ' → logprob: -10.752131462097168
    5. '(n' → logprob: -11.627131462097168
    6. '               ' → logprob: -11.877131462097168
    7. '                   ' → logprob: -12.877131462097168
    8. '       ' → logprob: -12.877131462097168
    9. '   ' → logprob: -13.002131462097168
    10. ' len' → logprob: -13.877131462097168

Token 3396: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00034821697045117617
    2. ' -' → logprob: -8.000348091125488
    3. '1' → logprob: -11.750348091125488
    4. ')-' → logprob: -13.875348091125488
    5. ')' → logprob: -14.250348091125488
    6. '       ' → logprob: -14.250348091125488
    7. '()-' → logprob: -14.375348091125488
    8. '   ' → logprob: -14.375348091125488
    9. '           ' → logprob: -14.750348091125488
    10. '−' → logprob: -15.375348091125488

Token 3397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002981624274980277
    2. '2' → logprob: -8.125298500061035
    3. ' ' → logprob: -13.750298500061035
    4. '   ' → logprob: -14.250298500061035
    5. '
' → logprob: -15.250298500061035
    6. '       ' → logprob: -16.00029754638672
    7. '```' → logprob: -17.37529754638672
    8. '           ' → logprob: -17.62529754638672
    9. '１' → logprob: -18.18779754638672
    10. '3' → logprob: -18.50029754638672

Token 3398: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31378743052482605
    2. ')' → logprob: -1.3137874603271484
    3. '       ' → logprob: -7.688787460327148
    4. ')

' → logprob: -10.938787460327148
    5. '           ' → logprob: -11.063787460327148
    6. ')
' → logprob: -11.188787460327148
    7. ' or' → logprob: -11.563787460327148
    8. '   ' → logprob: -12.688787460327148
    9. ')#' → logprob: -12.938787460327148
    10. ' )
' → logprob: -13.438787460327148

Token 3399: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.811348480870947e-05
    2. '```' → logprob: -11.25004768371582
    3. '
' → logprob: -11.37504768371582
    4. '            
' → logprob: -12.00004768371582
    5. '       ' → logprob: -12.12504768371582
    6. ',' → logprob: -12.75004768371582
    7. '               ' → logprob: -13.00004768371582
    8. '<|end|>' → logprob: -13.62504768371582
    9. '   ' → logprob: -13.75004768371582
    10. ' ' → logprob: -14.37504768371582

Token 3400: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0045108194462955
    2. 'if' → logprob: -5.879510879516602
    3. ' if' → logprob: -6.379510879516602
    4. '```' → logprob: -12.879510879516602
    5. '       ' → logprob: -13.129510879516602
    6. '               ' → logprob: -13.629510879516602
    7. '   ' → logprob: -14.004510879516602
    8. 'un' → logprob: -14.504510879516602
    9. '
' → logprob: -14.879510879516602
    10. '            
' → logprob: -15.254510879516602

Token 3401: ' guaranteed' (ID: 21862)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016830360982567072
    2. ' if' → logprob: -6.626683235168457
    3. 'if' → logprob: -8.376683235168457
    4. '       ' → logprob: -10.126683235168457
    5. '```' → logprob: -10.501683235168457
    6. '            
' → logprob: -11.626683235168457
    7. '
' → logprob: -11.626683235168457
    8. '               ' → logprob: -12.126683235168457
    9. '{
' → logprob: -12.376683235168457
    10. '   ' → logprob: -12.501683235168457

Token 3402: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003227148437872529
    2. ' if' → logprob: -6.003227233886719
    3. '<|end|>' → logprob: -8.753227233886719
    4. '       ' → logprob: -9.003227233886719
    5. 'if' → logprob: -9.253227233886719
    6. '               ' → logprob: -9.503227233886719
    7. '            
' → logprob: -10.003227233886719
    8. '{
' → logprob: -10.128227233886719
    9. ',' → logprob: -10.253227233886719
    10. '{' → logprob: -10.753227233886719

Token 3403: ' problem' (ID: 4792)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1065490245819092
    2. 'at' → logprob: -2.231549024581909
    3. '   ' → logprob: -2.981549024581909
    4. 'next' → logprob: -2.981549024581909
    5. 'prev' → logprob: -3.231549024581909
    6. ' at' → logprob: -3.231549024581909
    7. '       ' → logprob: -3.231549024581909
    8. '           ' → logprob: -3.356549024581909
    9. 'not' → logprob: -3.356549024581909
    10. ' if' → logprob: -3.731549024581909

Token 3404: ' that' (ID: 484)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002373035065829754
    2. '       ' → logprob: -7.002373218536377
    3. '
' → logprob: -8.127372741699219
    4. '<|end|>' → logprob: -8.252372741699219
    5. ':
' → logprob: -8.877372741699219
    6. ',' → logprob: -9.127372741699219
    7. ':' → logprob: -9.252372741699219
    8. ' if' → logprob: -9.377372741699219
    9. '```' → logprob: -9.377372741699219
    10. '{
' → logprob: -9.627372741699219

Token 3405: ' s' (ID: 265)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.5852547883987427
    2. ' prev' → logprob: -1.8352547883987427
    3. '(prev' → logprob: -2.210254669189453
    4. 'at' → logprob: -3.210254669189453
    5. '           ' → logprob: -3.210254669189453
    6. ' at' → logprob: -3.710254669189453
    7. ' (' → logprob: -4.335254669189453
    8. ' next' → logprob: -4.835254669189453
    9. '(at' → logprob: -4.835254669189453
    10. 'next' → logprob: -4.960254669189453

Token 3406: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.6686467528343201
    2. '   ' → logprob: -1.0436468124389648
    3. 'ize' → logprob: -3.168646812438965
    4. '       ' → logprob: -3.668646812438965
    5. '[i' → logprob: -4.168646812438965
    6. '#' → logprob: -4.418646812438965
    7. 'ur' → logprob: -5.293646812438965
    8. 't' → logprob: -5.418646812438965
    9. 'ok' → logprob: -5.418646812438965
    10. 'uffix' → logprob: -5.418646812438965

Token 3407: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.0015624772058799863
    2. 'n' → logprob: -7.626562595367432
    3. '_' → logprob: -7.876562595367432
    4. 'ん' → logprob: -8.376562118530273
    5. 'o' → logprob: -9.126562118530273
    6. '_on' → logprob: -9.376562118530273
    7. 'ン' → logprob: -10.376562118530273
    8. ')' → logprob: -10.501562118530273
    9. '```' → logprob: -10.751562118530273
    10. 'う' → logprob: -11.001562118530273

Token 3408: ' never' (ID: 3779)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4014871418476105
    2. ':' → logprob: -2.276487112045288
    3. '       ' → logprob: -2.401487112045288
    4. ':
' → logprob: -2.776487112045288
    5. '           ' → logprob: -4.276487350463867
    6. 'and' → logprob: -4.401487350463867
    7. '   ' → logprob: -4.901487350463867
    8. ')' → logprob: -5.026487350463867
    9. ' if' → logprob: -5.526487350463867
    10. '=' → logprob: -5.651487350463867

Token 3409: ' first' (ID: 1577)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.9523701667785645
    2. 'appe' → logprob: -2.3273701667785645
    3. 'is' → logprob: -2.4523701667785645
    4. ' at' → logprob: -2.7023701667785645
    5. 'in' → logprob: -2.8273701667785645
    6. 'at' → logprob: -2.9523701667785645
    7. 'or' → logprob: -2.9523701667785645
    8. 'appear' → logprob: -3.3273701667785645
    9. 'ends' → logprob: -3.5773701667785645
    10. '#' → logprob: -3.9523701667785645

Token 3410: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020652047533076257
    2. ' and' → logprob: -9.37520694732666
    3. '<|end|>' → logprob: -10.25020694732666
    4. ' if' → logprob: -10.87520694732666
    5. ',' → logprob: -10.87520694732666
    6. '       ' → logprob: -11.62520694732666
    7. '            
' → logprob: -11.62520694732666
    8. '
' → logprob: -12.37520694732666
    9. '   ' → logprob: -12.62520694732666
    10. '```' → logprob: -12.87520694732666

Token 3411: ' last' (ID: 2174)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2503560185432434
    2. '#' → logprob: -3.1253559589385986
    3. '1' → logprob: -3.1253559589385986
    4. ' i' → logprob: -3.7503559589385986
    5. '```' → logprob: -3.8753559589385986
    6. 'n' → logprob: -4.375356197357178
    7. 'True' → logprob: -4.500356197357178
    8. '0' → logprob: -4.875356197357178
    9. ' True' → logprob: -5.250356197357178
    10. 'not' → logprob: -5.250356197357178

Token 3412: ' mora' (ID: 47294)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.058852534741163254
    2. ' and' → logprob: -3.183852434158325
    3. '       ' → logprob: -5.183852672576904
    4. ' if' → logprob: -5.558852672576904
    5. ':
' → logprob: -6.058852672576904
    6. ':' → logprob: -6.933852672576904
    7. '
' → logprob: -7.558852672576904
    8. '   ' → logprob: -7.808852672576904
    9. ')' → logprob: -7.933852672576904
    10. '               ' → logprob: -8.308852195739746

Token 3413: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017317157238721848
    2. ' and' → logprob: -4.142317295074463
    3. ':' → logprob: -7.392317295074463
    4. '       ' → logprob: -8.267316818237305
    5. '               ' → logprob: -9.017316818237305
    6. ':
' → logprob: -9.267316818237305
    7. 'and' → logprob: -9.517316818237305
    8. '		' → logprob: -10.892316818237305
    9. ',' → logprob: -10.892316818237305
    10. '   ' → logprob: -11.142316818237305

Token 3414: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005890139145776629
    2. '       ' → logprob: -8.625589370727539
    3. '```' → logprob: -9.250589370727539
    4. ' and' → logprob: -9.500589370727539
    5. '
' → logprob: -9.750589370727539
    6. ',' → logprob: -9.750589370727539
    7. ' if' → logprob: -10.250589370727539
    8. '<|end|>' → logprob: -11.125589370727539
    9. '               ' → logprob: -11.250589370727539
    10. ')' → logprob: -11.625589370727539

Token 3415: ' cond' (ID: 4664)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.165027217415627e-05
    2. ' if' → logprob: -11.875021934509277
    3. '```' → logprob: -12.500021934509277
    4. '       ' → logprob: -12.625021934509277
    5. 'if' → logprob: -13.000021934509277
    6. '
' → logprob: -13.750021934509277
    7. ',' → logprob: -13.750021934509277
    8. '   ' → logprob: -14.375021934509277
    9. '               ' → logprob: -14.750021934509277
    10. '#' → logprob: -14.875021934509277

Token 3416: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.052590835839509964
    2. '=' → logprob: -3.052590847015381
    3. '           ' → logprob: -6.177590847015381
    4. 'd' → logprob: -7.302590847015381
    5. '=True' → logprob: -8.177590370178223
    6. '       ' → logprob: -8.677590370178223
    7. '1' → logprob: -8.802590370178223
    8. '   ' → logprob: -8.927590370178223
    9. 's' → logprob: -9.302590370178223
    10. '               ' → logprob: -9.427590370178223

Token 3417: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007966801524162292
    2. '=' → logprob: -5.382966995239258
    3. '           ' → logprob: -5.882966995239258
    4. ' ==' → logprob: -8.757966995239258
    5. ' and' → logprob: -9.257966995239258
    6. '=True' → logprob: -9.757966995239258
    7. ':' → logprob: -10.007966995239258
    8. '       ' → logprob: -10.257966995239258
    9. ')' → logprob: -11.007966995239258
    10. ' ' → logprob: -11.007966995239258

Token 3418: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.6000189185142517
    2. ' prev' → logprob: -0.8500189185142517
    3. '(prev' → logprob: -3.8500189781188965
    4. ' (' → logprob: -6.3500189781188965
    5. '(' → logprob: -7.4750189781188965
    6. '   ' → logprob: -9.850018501281738
    7. '	prev' → logprob: -10.600018501281738
    8. '((' → logprob: -10.850018501281738
    9. '(v' → logprob: -11.350018501281738
    10. 'vo' → logprob: -11.475018501281738

Token 3419: '_vo' (ID: 145825)
  Prédit: '_vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vo' → logprob: -7.862962229410186e-05
    2. ' and' → logprob: -10.375078201293945
    3. '   ' → logprob: -11.750078201293945
    4. '>' → logprob: -12.125078201293945
    5. 'vo' → logprob: -12.125078201293945
    6. '==' → logprob: -12.250078201293945
    7. '_' → logprob: -12.625078201293945
    8. '	vo' → logprob: -12.875078201293945
    9. '_v' → logprob: -13.250078201293945
    10. ' _' → logprob: -13.375078201293945

Token 3420: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -3.6550729419104755e-05
    2. 'cel' → logprob: -12.125036239624023
    3. '```' → logprob: -12.500036239624023
    4. 'iced' → logprob: -12.750036239624023
    5. 'ice' → logprob: -13.000036239624023
    6. '(' → logprob: -13.000036239624023
    7. 'icelo' → logprob: -13.000036239624023
    8. '[' → logprob: -13.250036239624023
    9. '``' → logprob: -13.250036239624023
    10. '`' → logprob: -13.375036239624023

Token 3421: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.004014411009848118
    2. 'ol' → logprob: -6.504014492034912
    3. 'cel' → logprob: -6.504014492034912
    4. 'ic' → logprob: -7.879014492034912
    5. 'veless' → logprob: -8.754014015197754
    6. 'el' → logprob: -9.004014015197754
    7. 'less' → logprob: -9.379014015197754
    8. 'ess' → logprob: -10.129014015197754
    9. 'heless' → logprob: -10.254014015197754
    10. 'iless' → logprob: -10.629014015197754

Token 3422: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.049424491822719574
    2. 'and' → logprob: -3.049424409866333
    3. ' or' → logprob: -7.174424648284912
    4. '   ' → logprob: -10.924424171447754
    5. '           ' → logprob: -11.299424171447754
    6. '       ' → logprob: -11.424424171447754
    7. 'or' → logprob: -12.174424171447754
    8. ')' → logprob: -12.174424171447754
    9. '    ' → logprob: -12.424424171447754
    10. '	and' → logprob: -12.674424171447754

Token 3423: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4404633641242981
    2. ' next' → logprob: -1.4404633045196533
    3. '(next' → logprob: -2.3154633045196533
    4. ' (' → logprob: -4.815463542938232
    5. '(' → logprob: -5.190463542938232
    6. '(vo' → logprob: -5.815463542938232
    7. '(v' → logprob: -6.690463542938232
    8. 'vo' → logprob: -6.815463542938232
    9. '((' → logprob: -7.565463542938232
    10. 'v' → logprob: -8.065463066101074

Token 3424: '_vo' (ID: 145825)
  Prédit: '_vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vo' → logprob: -0.00010127831774298102
    2. 'vo' → logprob: -9.375101089477539
    3. '==' → logprob: -12.375101089477539
    4. '_m' → logprob: -12.750101089477539
    5. '_' → logprob: -13.500101089477539
    6. 'in' → logprob: -13.875101089477539
    7. '	vo' → logprob: -14.125101089477539
    8. '_void' → logprob: -14.250101089477539
    9. 'm' → logprob: -14.375101089477539
    10. '_voice' → logprob: -14.500101089477539

Token 3425: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.002913288539275527
    2. 'eless' → logprob: -6.377913475036621
    3. 'cel' → logprob: -7.627913475036621
    4. 'less' → logprob: -8.002913475036621
    5. 'iless' → logprob: -9.252913475036621
    6. 'cl' → logprob: -10.127913475036621
    7. 'o' → logprob: -10.502913475036621
    8. 'iced' → logprob: -10.627913475036621
    9. 'al' → logprob: -10.752913475036621
    10. 'ol' → logprob: -10.877913475036621

Token 3426: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.010412851348519325
    2. 'less' → logprob: -5.260412693023682
    3. 'ic' → logprob: -6.385412693023682
    4. 'el' → logprob: -6.885412693023682
    5. 'ed' → logprob: -7.260412693023682
    6. 'iless' → logprob: -7.260412693023682
    7. 'ol' → logprob: -7.885412693023682
    8. 'o' → logprob: -8.88541316986084
    9. 'ess' → logprob: -9.38541316986084
    10. 'ueless' → logprob: -9.76041316986084

Token 3427: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4314490854740143
    2. ' or' → logprob: -1.681449055671692
    3. 'and' → logprob: -1.931449055671692
    4. 'or' → logprob: -4.056448936462402
    5. '           ' → logprob: -6.556448936462402
    6. '       ' → logprob: -8.056448936462402
    7. '   ' → logprob: -8.556448936462402
    8. '	or' → logprob: -10.431448936462402
    9. '	and' → logprob: -10.931448936462402
    10. '          ' → logprob: -11.181448936462402

Token 3428: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2491893321275711
    2. ' or' → logprob: -1.7491893768310547
    3. '           ' → logprob: -3.1241893768310547
    4. 'and' → logprob: -6.499189376831055
    5. '       ' → logprob: -7.249189376831055
    6. 'or' → logprob: -8.124189376831055
    7. ')' → logprob: -10.624189376831055
    8. '          ' → logprob: -10.624189376831055
    9. '               ' → logprob: -10.749189376831055
    10. '```' → logprob: -10.874189376831055

Token 3429: ' cond' (ID: 4664)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8578712940216064
    2. ' or' → logprob: -1.2328712940216064
    3. ' and' → logprob: -1.4828712940216064
    4. 'and' → logprob: -3.6078712940216064
    5. 'or' → logprob: -3.9828712940216064
    6. 'cond' (adapté à ' cond') → logprob: -4.857871055603027
    7. ' cond' → logprob: -6.232871055603027
    8. ' if' → logprob: -7.107871055603027
    9. '       ' → logprob: -7.232871055603027
    10. 'if' → logprob: -8.857871055603027

Token 3430: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003461444517597556
    2. '=' → logprob: -6.2534613609313965
    3. ' =' → logprob: -6.5034613609313965
    4. '=True' → logprob: -11.128461837768555
    5. '_' → logprob: -12.503461837768555
    6. '=_' → logprob: -12.503461837768555
    7. '           ' → logprob: -13.253461837768555
    8. '   ' → logprob: -13.378461837768555
    9. '==' → logprob: -13.503461837768555
    10. '2' → logprob: -13.503461837768555

Token 3431: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008642701432108879
    2. '=' → logprob: -4.758642673492432
    3. ' or' → logprob: -11.25864315032959
    4. ' and' → logprob: -11.50864315032959
    5. ' ' → logprob: -13.13364315032959
    6. ' ==' → logprob: -14.63364315032959
    7. ' =(' → logprob: -14.63364315032959
    8. ':' → logprob: -14.88364315032959
    9. '           ' → logprob: -15.25864315032959
    10. '＝' → logprob: -15.38364315032959

Token 3432: ' prev' (ID: 10258)
  Prédit: ' prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prev' → logprob: -1.5479413270950317
    2. '(prev' → logprob: -1.6729413270950317
    3. ' next' → logprob: -2.172941207885742
    4. ' (' → logprob: -2.297941207885742
    5. 'prev' → logprob: -2.297941207885742
    6. '(' → logprob: -2.422941207885742
    7. '(at' → logprob: -2.547941207885742
    8. 'next' → logprob: -3.297941207885742
    9. ' at' → logprob: -3.422941207885742
    10. '(next' → logprob: -3.547941207885742

Token 3433: '_vo' (ID: 145825)
  Prédit: '_vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vo' → logprob: -3.547789674485102e-05
    2. '+' → logprob: -11.375035285949707
    3. 'vo' → logprob: -11.500035285949707
    4. '==' → logprob: -12.000035285949707
    5. '   ' → logprob: -13.625035285949707
    6. 's' → logprob: -13.625035285949707
    7. '_voice' → logprob: -13.750035285949707
    8. '```' → logprob: -14.250035285949707
    9. '	vo' → logprob: -14.500035285949707
    10. '-' → logprob: -15.125035285949707

Token 3434: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -3.054500666621607e-06
    2. 'icelo' → logprob: -13.87500286102295
    3. '```' → logprob: -14.12500286102295
    4. 'ice' → logprob: -15.25000286102295
    5. 'icemail' → logprob: -15.37500286102295
    6. '``' → logprob: -15.50000286102295
    7. '[' → logprob: -15.87500286102295
    8. '`' → logprob: -16.375003814697266
    9. 'cel' → logprob: -16.750003814697266
    10. 'iced' → logprob: -16.750003814697266

Token 3435: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.00024048985505942255
    2. 'less' → logprob: -8.875240325927734
    3. 'el' → logprob: -9.375240325927734
    4. 'ed' → logprob: -12.250240325927734
    5. 'ueless' → logprob: -13.250240325927734
    6. 'ele' → logprob: -13.500240325927734
    7. 'ess' → logprob: -13.500240325927734
    8. 'heless' → logprob: -13.750240325927734
    9. 'veless' → logprob: -13.750240325927734
    10. 'iless' → logprob: -13.875240325927734

Token 3436: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10028959065675735
    2. 'and' → logprob: -2.3502895832061768
    3. ' or' → logprob: -9.725289344787598
    4. ' ' → logprob: -11.850289344787598
    5. '<|end|>' → logprob: -12.225289344787598
    6. '	and' → logprob: -12.475289344787598
    7. '&' → logprob: -13.350289344787598
    8. ' &' → logprob: -13.975289344787598
    9. '   ' → logprob: -14.100289344787598
    10. '  ' → logprob: -14.350289344787598

Token 3437: ' at' (ID: 540)
  Prédit: '(at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(at' → logprob: -0.15556581318378448
    2. 'at' → logprob: -2.4055657386779785
    3. ' (' → logprob: -3.1555657386779785
    4. ' at' → logprob: -5.2805657386779785
    5. '(' → logprob: -5.5305657386779785
    6. '((' → logprob: -6.6555657386779785
    7. '(next' → logprob: -8.280566215515137
    8. '(
' → logprob: -9.155566215515137
    9. '   ' → logprob: -9.280566215515137
    10. '(not' → logprob: -9.530566215515137

Token 3438: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.4776283800601959
    2. 'end' → logprob: -0.9776283502578735
    3. 'End' → logprob: -6.852628231048584
    4. '```' → logprob: -7.102628231048584
    5. '_END' → logprob: -7.852628231048584
    6. 'n' → logprob: -8.602628707885742
    7. '+' → logprob: -9.102628707885742
    8. '1' → logprob: -9.227628707885742
    9. '<|end|>' → logprob: -9.227628707885742
    10. 'END' → logprob: -9.352628707885742

Token 3439: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4740736782550812
    2. ' or' → logprob: -1.0990736484527588
    3. ' and' → logprob: -3.224073648452759
    4. '       ' → logprob: -6.974073886871338
    5. '
' → logprob: -7.349073886871338
    6. '               ' → logprob: -7.599073886871338
    7. ':
' → logprob: -7.724073886871338
    8. 'or' → logprob: -7.974073886871338
    9. ')' → logprob: -8.09907341003418
    10. '          ' → logprob: -8.09907341003418

Token 3440: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008473681285977364
    2. ' and' → logprob: -5.008473873138428
    3. '       ' → logprob: -7.008473873138428
    4. '               ' → logprob: -8.38347339630127
    5. ':' → logprob: -9.00847339630127
    6. ':
' → logprob: -9.38347339630127
    7. '```' → logprob: -9.38347339630127
    8. '   ' → logprob: -9.63347339630127
    9. ' or' → logprob: -9.75847339630127
    10. '          ' → logprob: -10.25847339630127

Token 3441: ' cond' (ID: 4664)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015002215513959527
    2. 'if' → logprob: -7.126500129699707
    3. ' if' → logprob: -7.376500129699707
    4. 'un' → logprob: -10.251500129699707
    5. ' un' → logprob: -10.751500129699707
    6. '   ' → logprob: -12.501500129699707
    7. '       ' → logprob: -12.626500129699707
    8. '```' → logprob: -13.126500129699707
    9. '            
' → logprob: -14.001500129699707
    10. '
' → logprob: -14.126500129699707

Token 3442: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.017477652058005333
    2. ' =' → logprob: -4.892477512359619
    3. '1' → logprob: -5.142477512359619
    4. '=' → logprob: -6.267477512359619
    5. '=True' → logprob: -7.142477512359619
    6. '   ' → logprob: -7.767477512359619
    7. 'inue' → logprob: -8.142477989196777
    8. '           ' → logprob: -9.017477989196777
    9. '       ' → logprob: -9.142477989196777
    10. '=False' → logprob: -9.642477989196777

Token 3443: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889419049024582
    2. '=' → logprob: -2.5788941383361816
    3. ' ' → logprob: -13.82889461517334
    4. '   ' → logprob: -14.07889461517334
    5. '    ' → logprob: -14.82889461517334
    6. ' =
' → logprob: -14.95389461517334
    7. ' ==' → logprob: -14.95389461517334
    8. '=
' → logprob: -15.07889461517334
    9. '＝' → logprob: -15.70389461517334
    10. ':' → logprob: -15.82889461517334

Token 3444: ' cond' (ID: 4664)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.39019301533699036
    2. ' next' → logprob: -1.140192985534668
    3. '(next' → logprob: -5.890192985534668
    4. ' (' → logprob: -8.390192985534668
    5. '(' → logprob: -8.890192985534668
    6. 'is' → logprob: -9.890192985534668
    7. 'prev' → logprob: -10.140192985534668
    8. '   ' → logprob: -10.515192985534668
    9. ' is' → logprob: -10.890192985534668
    10. ' prev' → logprob: -11.640192985534668

Token 3445: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03993714228272438
    2. '2' → logprob: -3.2899372577667236
    3. '1' → logprob: -6.5399370193481445
    4. 'ition' → logprob: -8.539937019348145
    5. 'itions' → logprob: -9.539937019348145
    6. 's' → logprob: -9.914937019348145
    7. '_' → logprob: -10.664937019348145
    8. 'd' → logprob: -11.039937019348145
    9. '=True' → logprob: -11.164937019348145
    10. '_s' → logprob: -11.414937019348145

Token 3446: '
' (ID: 198)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03365330398082733
    2. 'or' → logprob: -3.4086532592773438
    3. '	or' → logprob: -13.033653259277344
    4. '   ' → logprob: -13.783653259277344
    5. ' ' → logprob: -14.158653259277344
    6. '|' → logprob: -14.533653259277344
    7. '    ' → logprob: -14.658653259277344
    8. '           ' → logprob: -15.033653259277344
    9. ''or' → logprob: -15.158653259277344
    10. '```' → logprob: -15.158653259277344

Token 3447: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1680005043745041
    2. ' or' → logprob: -1.9180004596710205
    3. ' and' → logprob: -5.1680006980896
    4. '
' → logprob: -6.9180006980896
    5. 'or' → logprob: -7.6680006980896
    6. '       ' → logprob: -9.043000221252441
    7. '   ' → logprob: -9.418000221252441
    8. 'and' → logprob: -9.543000221252441
    9. '            
' → logprob: -9.668000221252441
    10. '               ' → logprob: -10.293000221252441

Token 3448: ' cond' (ID: 4664)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0039139497093856335
    2. 'if' → logprob: -6.378913879394531
    3. ' if' → logprob: -7.003913879394531
    4. ' and' → logprob: -7.503913879394531
    5. 'and' → logprob: -8.128913879394531
    6. '       ' → logprob: -9.128913879394531
    7. '```' → logprob: -9.753913879394531
    8. '               ' → logprob: -10.003913879394531
    9. 'for' → logprob: -10.128913879394531
    10. '
' → logprob: -10.128913879394531

Token 3449: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.19498668611049652
    2. '2' → logprob: -1.8199867010116577
    3. '=' → logprob: -4.944986820220947
    4. ' =' → logprob: -5.569986820220947
    5. '+=' → logprob: -7.069986820220947
    6. '1' → logprob: -7.319986820220947
    7. ' +=' → logprob: -8.069986343383789
    8. '   ' → logprob: -8.069986343383789
    9. '
' → logprob: -8.069986343383789
    10. '=True' → logprob: -8.194986343383789

Token 3450: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47556304931640625
    2. '=' → logprob: -0.9755630493164062
    3. ' ==' → logprob: -8.475563049316406
    4. '=True' → logprob: -8.475563049316406
    5. '           ' → logprob: -8.600563049316406
    6. ' and' → logprob: -8.600563049316406
    7. ' ' → logprob: -8.850563049316406
    8. '   ' → logprob: -8.850563049316406
    9. '==' → logprob: -9.600563049316406
    10. ' if' → logprob: -9.975563049316406

Token 3451: ' prev' (ID: 10258)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.6261822581291199
    2. 'next' → logprob: -0.8761822581291199
    3. '(next' → logprob: -3.2511823177337646
    4. ' (' → logprob: -5.0011820793151855
    5. '(' → logprob: -7.0011820793151855
    6. 'is' → logprob: -7.2511820793151855
    7. ' is' → logprob: -7.5011820793151855
    8. '(is' → logprob: -8.001182556152344
    9. '   ' → logprob: -8.751182556152344
    10. '(i' → logprob: -8.751182556152344

Token 3452: '_vo' (ID: 145825)
  Prédit: '_vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vo' → logprob: -0.004386560060083866
    2. '+' → logprob: -5.7543864250183105
    3. '_' → logprob: -6.8793864250183105
    4. 'vo' → logprob: -10.004386901855469
    5. ' +' → logprob: -10.504386901855469
    6. '==' → logprob: -10.629386901855469
    7. '   ' → logprob: -11.379386901855469
    8. '<' → logprob: -11.504386901855469
    9. '-' → logprob: -11.879386901855469
    10. '```' → logprob: -12.004386901855469

Token 3453: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -5.204720582696609e-05
    2. '```' → logprob: -11.250052452087402
    3. 'cel' → logprob: -11.875052452087402
    4. 'icelo' → logprob: -12.625052452087402
    5. '`' → logprob: -13.125052452087402
    6. 'iced' → logprob: -13.250052452087402
    7. 'ice' → logprob: -13.375052452087402
    8. '``' → logprob: -13.375052452087402
    9. 'o' → logprob: -13.500052452087402
    10. 'iless' → logprob: -13.750052452087402

Token 3454: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.010276220738887787
    2. 'less' → logprob: -4.6352763175964355
    3. 'ueless' → logprob: -8.635275840759277
    4. 'iless' → logprob: -8.760275840759277
    5. 'ous' → logprob: -9.885275840759277
    6. 'el' → logprob: -10.135275840759277
    7. 'ess' → logprob: -10.260275840759277
    8. 'owels' → logprob: -11.260275840759277
    9. 'heless' → logprob: -11.885275840759277
    10. 'o' → logprob: -11.885275840759277

Token 3455: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.014430851675570011
    2. 'and' → logprob: -4.514430999755859
    3. '<|end|>' → logprob: -6.014430999755859
    4. '           ' → logprob: -7.889430999755859
    5. '       ' → logprob: -9.01443099975586
    6. '   ' → logprob: -9.26443099975586
    7. '<|end|>' → logprob: -9.38943099975586
    8. ' ' → logprob: -10.26443099975586
    9. ' or' → logprob: -10.38943099975586
    10. '==' → logprob: -10.51443099975586

Token 3456: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.4755229651927948
    2. '(next' → logprob: -1.4755229949951172
    3. ' next' → logprob: -2.350522994995117
    4. ' (' → logprob: -3.850522994995117
    5. '(is' → logprob: -4.100522994995117
    6. 'is' → logprob: -4.350522994995117
    7. ' is' → logprob: -6.600522994995117
    8. '(at' → logprob: -7.475522994995117
    9. '(' → logprob: -7.850522994995117
    10. '((' → logprob: -8.100522994995117

Token 3457: '_s' (ID: 1278)
  Prédit: '_vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vo' → logprob: -0.11935149878263474
    2. '_s' → logprob: -2.369351387023926
    3. '+' → logprob: -4.869351387023926
    4. '<' → logprob: -5.619351387023926
    5. '_' → logprob: -5.869351387023926
    6. '==' → logprob: -6.744351387023926
    7. ' <' → logprob: -7.119351387023926
    8. 's' → logprob: -7.369351387023926
    9. '_m' → logprob: -8.244351387023926
    10. 'vo' → logprob: -8.494351387023926

Token 3458: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.0004129152512177825
    2. 'ok' → logprob: -8.250412940979004
    3. 'o' → logprob: -9.375412940979004
    4. 'оку' → logprob: -11.250412940979004
    5. 'ku' → logprob: -11.875412940979004
    6. ' oku' → logprob: -12.000412940979004
    7. 'uku' → logprob: -12.250412940979004
    8. 'u' → logprob: -12.375412940979004
    9. 'k' → logprob: -12.375412940979004
    10. 'Oku' → logprob: -12.500412940979004

Token 3459: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -6.392202976712724e-06
    2. '_on' → logprob: -12.250006675720215
    3. 'он' → logprob: -14.875006675720215
    4. 'o' → logprob: -15.000006675720215
    5. 'on's' → logprob: -15.375006675720215
    6. 'On' → logprob: -15.500006675720215
    7. 'n' → logprob: -16.3750057220459
    8. 'ون' → logprob: -16.3750057220459
    9. '
' → logprob: -16.5000057220459
    10. '1' → logprob: -16.8750057220459

Token 3460: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.648423969745636
    2. '           ' → logprob: -0.773423969745636
    3. ':' → logprob: -5.02342414855957
    4. ':
' → logprob: -5.02342414855957
    5. '       ' → logprob: -7.02342414855957
    6. '   ' → logprob: -8.02342414855957
    7. ')' → logprob: -8.14842414855957
    8. 'and' → logprob: -8.52342414855957
    9. '
' → logprob: -8.77342414855957
    10. '<|end|>' → logprob: -9.14842414855957

Token 3461: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4305495321750641
    2. ' and' → logprob: -1.0555495023727417
    3. 'and' → logprob: -6.930549621582031
    4. '       ' → logprob: -7.805549621582031
    5. '
' → logprob: -8.680549621582031
    6. '   ' → logprob: -9.180549621582031
    7. '               ' → logprob: -10.305549621582031
    8. ' or' → logprob: -10.805549621582031
    9. ':
' → logprob: -10.930549621582031
    10. ':' → logprob: -11.305549621582031

Token 3462: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017261108150705695
    2. 'if' (adapté à ' if') → logprob: -6.751726150512695
    3. ' if' → logprob: -7.876726150512695
    4. '
' → logprob: -8.751726150512695
    5. '            
' → logprob: -12.001726150512695
    6. '   ' → logprob: -12.251726150512695
    7. '       ' → logprob: -13.376726150512695
    8. '```' → logprob: -13.501726150512695
    9. '{
' → logprob: -13.751726150512695
    10. ' and' → logprob: -14.501726150512695

Token 3463: ' cond' (ID: 4664)
  Prédit: 'cond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cond' → logprob: -0.062140777707099915
    2. ' cond' → logprob: -2.812140703201294
    3. '(cond' → logprob: -8.812140464782715
    4. '   ' → logprob: -11.562140464782715
    5. '           ' → logprob: -11.562140464782715
    6. '       ' → logprob: -13.562140464782715
    7. '    ' → logprob: -13.687140464782715
    8. '(' → logprob: -14.187140464782715
    9. '        ' → logprob: -14.312140464782715
    10. '            ' → logprob: -14.812140464782715

Token 3464: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.17212112247943878
    2. '4' → logprob: -1.9221211671829224
    3. '3' → logprob: -4.922121047973633
    4. ' or' → logprob: -6.297121047973633
    5. '==' → logprob: -7.422121047973633
    6. ' and' → logprob: -7.547121047973633
    7. '```' → logprob: -7.922121047973633
    8. '2' → logprob: -8.672121047973633
    9. ' ==' → logprob: -8.797121047973633
    10. '=' → logprob: -9.047121047973633

Token 3465: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.15774576365947723
    2. ':' → logprob: -2.157745838165283
    3. 'or' → logprob: -4.532745838165283
    4. ' and' → logprob: -4.907745838165283
    5. '==' → logprob: -5.282745838165283
    6. '           ' → logprob: -5.907745838165283
    7. 'and' → logprob: -6.782745838165283
    8. ':
' → logprob: -6.782745838165283
    9. '       ' → logprob: -7.157745838165283
    10. '|' → logprob: -8.157745361328125

Token 3466: ' cond' (ID: 4664)
  Prédit: 'cond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cond' → logprob: -0.34879371523857117
    2. ' cond' → logprob: -1.2237937450408936
    3. '(cond' → logprob: -8.348793983459473
    4. '           ' → logprob: -9.723793983459473
    5. 'prev' → logprob: -10.973793983459473
    6. '   ' → logprob: -11.723793983459473
    7. '            ' → logprob: -12.098793983459473
    8. '        ' → logprob: -12.473793983459473
    9. '       ' → logprob: -12.473793983459473
    10. ' prev' → logprob: -12.598793983459473

Token 3467: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.03805435076355934
    2. '2' → logprob: -3.2880544662475586
    3. ' ' → logprob: -12.913054466247559
    4. '(' → logprob: -13.163054466247559
    5. '_' → logprob: -13.538054466247559
    6. '3' → logprob: -13.788054466247559
    7. 'cond' → logprob: -13.788054466247559
    8. '```' → logprob: -13.788054466247559
    9. '   ' → logprob: -14.288054466247559
    10. '(i' → logprob: -14.663054466247559

Token 3468: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.001547479536384344
    2. 'or' → logprob: -6.626547336578369
    3. '           ' → logprob: -9.501547813415527
    4. ':' → logprob: -9.501547813415527
    5. ':
' → logprob: -10.001547813415527
    6. '	or' → logprob: -11.501547813415527
    7. '               ' → logprob: -12.126547813415527
    8. '<|end|>' → logprob: -12.876547813415527
    9. ' ' → logprob: -13.501547813415527
    10. '       ' → logprob: -13.626547813415527

Token 3469: ' cond' (ID: 4664)
  Prédit: 'cond'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cond' → logprob: -0.011056780815124512
    2. ' cond' → logprob: -4.511056900024414
    3. '(cond' → logprob: -12.761056900024414
    4. '   ' → logprob: -13.136056900024414
    5. '           ' → logprob: -13.136056900024414
    6. '       ' → logprob: -14.136056900024414
    7. '        ' → logprob: -15.011056900024414
    8. '            ' → logprob: -15.636056900024414
    9. '         ' → logprob: -15.761056900024414
    10. '          ' → logprob: -15.886056900024414

Token 3470: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.007627330720424652
    2. '3' → logprob: -4.882627487182617
    3. '   ' → logprob: -12.382627487182617
    4. '1' → logprob: -12.507627487182617
    5. '(i' → logprob: -12.507627487182617
    6. 'next' → logprob: -13.257627487182617
    7. 'i' → logprob: -13.757627487182617
    8. '(' → logprob: -13.757627487182617
    9. '
' → logprob: -14.007627487182617
    10. ' ' → logprob: -14.382627487182617

Token 3471: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5244752764701843
    2. ':' → logprob: -0.8994752764701843
    3. '               ' → logprob: -7.52447509765625
    4. '           ' → logprob: -7.52447509765625
    5. ' and' → logprob: -9.02447509765625
    6. '==' → logprob: -9.89947509765625
    7. '       ' → logprob: -10.27447509765625
    8. '[' → logprob: -11.27447509765625
    9. '):
' → logprob: -11.77447509765625
    10. '=' → logprob: -11.89947509765625

Token 3472: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029699765145778656
    2. '           ' → logprob: -6.002969741821289
    3. ':' → logprob: -8.502969741821289
    4. ':
' → logprob: -9.127969741821289
    5. '                   ' → logprob: -9.627969741821289
    6. 'un' → logprob: -10.377969741821289
    7. '```' → logprob: -10.502969741821289
    8. ' un' → logprob: -10.877969741821289
    9. '                       ' → logprob: -12.127969741821289
    10. '                               ' → logprob: -12.127969741821289

Token 3473: ' #' (ID: 1069)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.20552057027816772
    2. '               ' → logprob: -1.7055206298828125
    3. '           ' → logprob: -6.0805206298828125
    4. ' un' → logprob: -6.4555206298828125
    5. '   ' → logprob: -8.955520629882812
    6. '                   ' → logprob: -9.455520629882812
    7. '	un' → logprob: -10.830520629882812
    8. '```' → logprob: -12.830520629882812
    9. '             ' → logprob: -13.080520629882812
    10. '       ' → logprob: -13.205520629882812

Token 3474: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.0013378625735640526
    2. '               ' → logprob: -6.751338005065918
    3. '           ' → logprob: -9.001338005065918
    4. ' un' → logprob: -10.876338005065918
    5. '                   ' → logprob: -11.251338005065918
    6. '```' → logprob: -11.501338005065918
    7. '                       ' → logprob: -14.251338005065918
    8. '   ' → logprob: -15.001338005065918
    9. '                           ' → logprob: -15.001338005065918
    10. '	un' → logprob: -15.126338005065918

Token 3475: 'voice' (ID: 11894)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.0005826997803524137
    2. 'v' → logprob: -7.750582695007324
    3. '_vo' → logprob: -9.500582695007324
    4. 'voice' → logprob: -10.125582695007324
    5. 'voc' → logprob: -11.125582695007324
    6. 'vised' → logprob: -12.250582695007324
    7. '_v' → logprob: -12.500582695007324
    8. 'voices' → logprob: -12.750582695007324
    9. 'vi' → logprob: -13.500582695007324
    10. '_' → logprob: -13.625582695007324

Token 3476: '
' (ID: 198)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.363617962459102e-05
    2. '[' → logprob: -10.250083923339844
    3. '               ' → logprob: -11.000083923339844
    4. ' =' → logprob: -11.500083923339844
    5. '=True' → logprob: -11.750083923339844
    6. '           ' → logprob: -12.375083923339844
    7. 'True' → logprob: -12.500083923339844
    8. '                   ' → logprob: -12.875083923339844
    9. ' [' → logprob: -13.375083923339844
    10. ' True' → logprob: -14.625083923339844

Token 3477: '               ' (ID: 506)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.013929132372140884
    2. '                   ' → logprob: -4.76392936706543
    3. '               ' → logprob: -5.26392936706543
    4. '           ' → logprob: -9.51392936706543
    5. '[' → logprob: -10.38892936706543
    6. '                       ' → logprob: -12.01392936706543
    7. '```' → logprob: -12.38892936706543
    8. '                ' → logprob: -13.38892936706543
    9. '                 ' → logprob: -13.63892936706543
    10. '[idx' → logprob: -13.63892936706543

Token 3478: ' #' (ID: 1069)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.011137197725474834
    2. '               ' → logprob: -4.761137008666992
    3. ' un' → logprob: -6.261137008666992
    4. '           ' → logprob: -8.136137008666992
    5. '                   ' → logprob: -8.136137008666992
    6. '   ' → logprob: -11.261137008666992
    7. '```' → logprob: -12.386137008666992
    8. '                       ' → logprob: -12.761137008666992
    9. '	un' → logprob: -13.761137008666992
    10. '             ' → logprob: -14.136137008666992

Token 3479: ' apply' (ID: 6096)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.0006439301068894565
    2. '               ' → logprob: -8.125643730163574
    3. '           ' → logprob: -8.500643730163574
    4. ' un' → logprob: -9.000643730163574
    5. '                   ' → logprob: -11.000643730163574
    6. '```' → logprob: -13.750643730163574
    7. '                       ' → logprob: -14.125643730163574
    8. '                           ' → logprob: -14.750643730163574
    9. '   ' → logprob: -14.875643730163574
    10. '	un' → logprob: -15.000643730163574

Token 3480: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.000688486616127193
    2. ' un' → logprob: -8.125688552856445
    3. 'True' → logprob: -8.500688552856445
    4. '           ' → logprob: -9.375688552856445
    5. '               ' → logprob: -10.000688552856445
    6. '                   ' → logprob: -10.625688552856445
    7. ' True' → logprob: -11.000688552856445
    8. '(un' → logprob: -12.250688552856445
    9. '=True' → logprob: -12.875688552856445
    10. '
' → logprob: -13.750688552856445

Token 3481: 'vo' (ID: 1190)
  Prédit: 'vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -4.203409844194539e-05
    2. 'v' → logprob: -10.375041961669922
    3. '_vo' → logprob: -11.875041961669922
    4. 'voice' → logprob: -12.750041961669922
    5. 'voices' → logprob: -15.250041961669922
    6. 'voc' → logprob: -15.500041961669922
    7. '(vo' → logprob: -16.750041961669922
    8. '	vo' → logprob: -16.875041961669922
    9. ' voiced' → logprob: -17.000041961669922
    10. 'voi' → logprob: -17.125041961669922

Token 3482: 'icing' (ID: 10887)
  Prédit: 'iced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iced' → logprob: -0.0002028251619776711
    2. 'ic' → logprob: -8.750203132629395
    3. 'ice' → logprob: -11.625203132629395
    4. 'icing' → logprob: -11.875203132629395
    5. '#' → logprob: -12.625203132629395
    6. '   ' → logprob: -13.000203132629395
    7. 'ced' → logprob: -13.250203132629395
    8. '               ' → logprob: -13.250203132629395
    9. '```' → logprob: -13.250203132629395
    10. '[' → logprob: -13.500203132629395

Token 3483: ' only' (ID: 1606)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6552280187606812
    2. '           ' → logprob: -0.9052280187606812
    3. '[i' → logprob: -3.5302281379699707
    4. '                   ' → logprob: -3.5302281379699707
    5. '[' → logprob: -4.155228137969971
    6. '                       ' → logprob: -8.655227661132812
    7. '
' → logprob: -8.780227661132812
    8. ' =' → logprob: -8.905227661132812
    9. ')' → logprob: -9.030227661132812
    10. '   ' → logprob: -9.155227661132812

Token 3484: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.619824230670929
    2. '[' → logprob: -1.3698241710662842
    3. '[i' → logprob: -1.8698241710662842
    4. '           ' → logprob: -3.619824171066284
    5. '                   ' → logprob: -3.744824171066284
    6. '```' → logprob: -7.744824409484863
    7. '[u' → logprob: -8.119824409484863
    8. 'un' → logprob: -8.119824409484863
    9. '       ' → logprob: -8.369824409484863
    10. '[
' → logprob: -8.744824409484863

Token 3485: ' previous' (ID: 5880)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.2593388259410858
    2. 'not' → logprob: -2.009338855743408
    3. '(last' → logprob: -3.509338855743408
    4. '(not' → logprob: -3.509338855743408
    5. ' last' → logprob: -3.634338855743408
    6. ' not' → logprob: -5.384338855743408
    7. '(i' → logprob: -6.759338855743408
    8. 'un' → logprob: -6.884338855743408
    9. 'i' → logprob: -7.384338855743408
    10. '           ' → logprob: -8.38433837890625

Token 3486: ' vowel' (ID: 165542)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.18465279042720795
    2. 'vo' → logprob: -2.434652805328369
    3. '_un' → logprob: -3.309652805328369
    4. '_vo' → logprob: -4.434652805328369
    5. 'not' → logprob: -5.184652805328369
    6. 'i' → logprob: -5.309652805328369
    7. ' and' → logprob: -5.434652805328369
    8. '==' → logprob: -6.309652805328369
    9. ' un' → logprob: -6.309652805328369
    10. 'if' → logprob: -6.684652805328369

Token 3487: ' was' (ID: 673)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.44789040088653564
    2. '[i' → logprob: -1.3228904008865356
    3. ' ==' → logprob: -3.822890281677246
    4. '           ' → logprob: -3.947890281677246
    5. '               ' → logprob: -4.322890281677246
    6. ':' → logprob: -4.822890281677246
    7. '[' → logprob: -5.072890281677246
    8. '==' → logprob: -5.072890281677246
    9. 'and' → logprob: -5.197890281677246
    10. ':
' → logprob: -5.822890281677246

Token 3488: ' voiced' (ID: 131324)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.42765164375305176
    2. 'True' → logprob: -1.8026516437530518
    3. 'i' → logprob: -2.9276516437530518
    4. ' not' → logprob: -2.9276516437530518
    5. 'un' → logprob: -3.9276516437530518
    6. '(not' → logprob: -3.9276516437530518
    7. 'False' → logprob: -4.177651405334473
    8. 'last' → logprob: -4.927651405334473
    9. ' True' → logprob: -5.052651405334473
    10. '(i' → logprob: -6.427651405334473

Token 3489: ' or' (ID: 503)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23222528398036957
    2. '           ' → logprob: -1.6072252988815308
    3. ' if' → logprob: -5.98222541809082
    4. '                   ' → logprob: -6.60722541809082
    5. ' =' → logprob: -7.98222541809082
    6. '            ' → logprob: -7.98222541809082
    7. '                
' → logprob: -8.10722541809082
    8. ' and' → logprob: -8.23222541809082
    9. ' (' → logprob: -8.48222541809082
    10. '            
' → logprob: -8.73222541809082

Token 3490: ' this' (ID: 495)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.8124319314956665
    2. 'not' → logprob: -1.6874319314956665
    3. '(last' → logprob: -1.6874319314956665
    4. '(not' → logprob: -1.8124319314956665
    5. '(i' → logprob: -4.687431812286377
    6. '(un' → logprob: -5.187431812286377
    7. 'un' → logprob: -5.562431812286377
    8. ' last' → logprob: -6.187431812286377
    9. ' not' → logprob: -6.937431812286377
    10. 'i' → logprob: -7.687431812286377

Token 3491: ' is' (ID: 382)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6276953220367432
    2. ' and' → logprob: -1.8776953220367432
    3. '==' → logprob: -2.252695322036743
    4. ' ==' → logprob: -2.377695322036743
    5. '               ' → logprob: -2.502695322036743
    6. ':
' → logprob: -2.752695322036743
    7. 'and' → logprob: -2.877695322036743
    8. 'un' → logprob: -3.002695322036743
    9. '           ' → logprob: -3.377695322036743
    10. ' un' → logprob: -3.877695322036743

Token 3492: ' first' (ID: 1577)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.05896288901567459
    2. 'False' → logprob: -3.683962821960449
    3. 'not' → logprob: -4.183962821960449
    4. ' True' → logprob: -4.183962821960449
    5. 'i' → logprob: -7.308962821960449
    6. ' not' → logprob: -7.558962821960449
    7. ' False' → logprob: -9.05896282196045
    8. '           ' → logprob: -9.05896282196045
    9. '       ' → logprob: -9.55896282196045
    10. '   ' → logprob: -9.80896282196045

Token 3493: ' un' (ID: 537)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7036218047142029
    2. '               ' → logprob: -0.9536218047142029
    3. '[i' → logprob: -3.5786218643188477
    4. '           ' → logprob: -3.5786218643188477
    5. '                   ' → logprob: -3.5786218643188477
    6. ':
' → logprob: -3.9536218643188477
    7. '[' → logprob: -5.328621864318848
    8. 'and' → logprob: -5.578621864318848
    9. ' if' → logprob: -6.078621864318848
    10. 'if' → logprob: -6.953621864318848

Token 3494: 'vo' (ID: 1190)
  Prédit: 'vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.007080371491611004
    2. 'v' → logprob: -5.132080554962158
    3. '_vo' → logprob: -7.632080554962158
    4. 'voice' → logprob: -7.757080554962158
    5. 'vised' → logprob: -10.382080078125
    6. 'visited' → logprob: -10.382080078125
    7. '_v' → logprob: -10.632080078125
    8. ' voiced' → logprob: -10.757080078125
    9. '```' → logprob: -10.757080078125
    10. 'voc' → logprob: -11.007080078125

Token 3495: 'iced' (ID: 9865)
  Prédit: 'iced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iced' → logprob: -0.008793015964329243
    2. 'ic' → logprob: -4.883792877197266
    3. 'i' → logprob: -7.508792877197266
    4. 'ice' → logprob: -8.633792877197266
    5. '_' → logprob: -9.008792877197266
    6. '```' → logprob: -9.133792877197266
    7. 'n' → logprob: -10.383792877197266
    8. '``' → logprob: -10.633792877197266
    9. 'icing' → logprob: -10.883792877197266
    10. 'ised' → logprob: -11.133792877197266

Token 3496: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2147926688194275
    2. '               ' → logprob: -2.0897927284240723
    3. ' if' → logprob: -2.8397927284240723
    4. '       ' → logprob: -5.964792728424072
    5. ' and' → logprob: -6.464792728424072
    6. '[' → logprob: -7.089792728424072
    7. '
' → logprob: -7.214792728424072
    8. ' =' → logprob: -7.339792728424072
    9. ' 
' → logprob: -7.464792728424072
    10. '            
' → logprob: -7.714792728424072

Token 3497: ' a' (ID: 261)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8642581701278687
    2. 'a' → logprob: -0.9892581701278687
    3. 'sequence' → logprob: -2.739258289337158
    4. '[i' → logprob: -2.989258289337158
    5. 'i' → logprob: -3.114258289337158
    6. 'un' → logprob: -3.739258289337158
    7. 'the' → logprob: -4.864258289337158
    8. 'True' → logprob: -5.614258289337158
    9. 'this' → logprob: -5.739258289337158
    10. '[' → logprob: -6.739258289337158

Token 3498: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.004736041650176048
    2. ' row' → logprob: -5.379735946655273
    3. 'sequence' → logprob: -9.629735946655273
    4. 'run' → logprob: -10.379735946655273
    5. '_row' → logprob: -12.004735946655273
    6. '
' → logprob: -12.504735946655273
    7. ' ' → logprob: -13.004735946655273
    8. '	row' → logprob: -14.004735946655273
    9. 'chain' → logprob: -14.129735946655273
    10. 'rown' → logprob: -14.379735946655273

Token 3499: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010261351242661476
    2. '               ' → logprob: -4.635261535644531
    3. ' if' → logprob: -8.135261535644531
    4. 'if' → logprob: -9.760261535644531
    5. '   ' → logprob: -10.010261535644531
    6. '       ' → logprob: -10.010261535644531
    7. '                   ' → logprob: -11.510261535644531
    8. ' ' → logprob: -11.635261535644531
    9. '```' → logprob: -11.760261535644531
    10. '            ' → logprob: -12.135261535644531

Token 3500: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4586709439754486
    2. '                   ' → logprob: -1.208670973777771
    3. '[' → logprob: -3.8336708545684814
    4. 'un' → logprob: -4.5836710929870605
    5. '           ' → logprob: -4.7086710929870605
    6. '(un' → logprob: -5.2086710929870605
    7. '                       ' → logprob: -5.3336710929870605
    8. '```' → logprob: -5.8336710929870605
    9. ' un' → logprob: -6.3336710929870605
    10. '                ' → logprob: -6.4586710929870605

Token 3501: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5320346355438232
    2. ' if' → logprob: -0.9070346355438232
    3. '               ' → logprob: -5.032034873962402
    4. '                   ' → logprob: -6.782034873962402
    5. '           ' → logprob: -7.782034873962402
    6. 'un' → logprob: -8.157034873962402
    7. ' i' → logprob: -8.907034873962402
    8. '```' → logprob: -9.282034873962402
    9. 'i' → logprob: -9.782034873962402
    10. '                       ' → logprob: -10.157034873962402

Token 3502: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.19075115025043488
    2. 'i' → logprob: -2.065751075744629
    3. ' last' → logprob: -3.565751075744629
    4. '(last' → logprob: -4.565751075744629
    5. '(i' → logprob: -5.690751075744629
    6. 'not' → logprob: -6.440751075744629
    7. ' i' → logprob: -6.690751075744629
    8. '           ' → logprob: -6.940751075744629
    9. ' (' → logprob: -7.690751075744629
    10. '(not' → logprob: -8.815751075744629

Token 3503: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -0.00035810720873996615
    2. 'un' → logprob: -9.000358581542969
    3. '_' → logprob: -9.250358581542969
    4. '_vo' → logprob: -10.250358581542969
    5. '+' → logprob: -10.750358581542969
    6. '!=' → logprob: -11.875358581542969
    7. ' _' → logprob: -11.875358581542969
    8. ' un' → logprob: -12.000358581542969
    9. '_u' → logprob: -12.125358581542969
    10. '_unc' → logprob: -12.125358581542969

Token 3504: 'vo' (ID: 1190)
  Prédit: 'vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.0014519019750878215
    2. '_vo' → logprob: -7.1264519691467285
    3. 'v' → logprob: -7.5014519691467285
    4. 'voc' → logprob: -10.25145149230957
    5. '_v' → logprob: -10.75145149230957
    6. '_' → logprob: -12.25145149230957
    7. '```' → logprob: -12.75145149230957
    8. 'o' → logprob: -13.00145149230957
    9. '``' → logprob: -13.00145149230957
    10. 'vised' → logprob: -13.12645149230957

Token 3505: 'iced' (ID: 9865)
  Prédit: 'iced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iced' → logprob: -0.017719989642500877
    2. 'ic' → logprob: -4.5177202224731445
    3. 'i' → logprob: -5.2677202224731445
    4. 'o' → logprob: -8.017720222473145
    5. 'oc' → logprob: -8.392720222473145
    6. '_' → logprob: -8.892720222473145
    7. 'n' → logprob: -9.017720222473145
    8. '_i' → logprob: -9.392720222473145
    9. '   ' → logprob: -9.517720222473145
    10. '```' → logprob: -9.642720222473145

Token 3506: '_idx' (ID: 15257)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.707062840461731
    2. ' !=' → logprob: -1.832062840461731
    3. '+' → logprob: -2.0820627212524414
    4. '==' → logprob: -2.2070627212524414
    5. '[i' → logprob: -3.2070627212524414
    6. '_idx' → logprob: -3.3320627212524414
    7. ' ==' → logprob: -4.457062721252441
    8. ' +' → logprob: -4.707062721252441
    9. '```' → logprob: -5.832062721252441
    10. '_' → logprob: -6.707062721252441

Token 3507: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -1.0731980800628662
    2. ' !=' → logprob: -1.3231980800628662
    3. '<' → logprob: -1.5731980800628662
    4. '+' → logprob: -2.823198080062866
    5. '==' → logprob: -2.823198080062866
    6. ' <' → logprob: -3.198198080062866
    7. ' ==' → logprob: -4.323198318481445
    8. ' +' → logprob: -4.823198318481445
    9. '<=' → logprob: -7.198198318481445
    10. ' ' → logprob: -7.573198318481445

Token 3508: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05808527022600174
    2. 'i' → logprob: -3.0580852031707764
    3. ' -' → logprob: -4.6830854415893555
    4. '-i' → logprob: -9.683085441589355
    5. '(i' → logprob: -10.433085441589355
    6. ' i' → logprob: -10.933085441589355
    7. '0' → logprob: -10.933085441589355
    8. '   ' → logprob: -11.058085441589355
    9. ' ' → logprob: -11.308085441589355
    10. 'None' → logprob: -11.558085441589355

Token 3509: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07906240969896317
    2. '10' → logprob: -2.5790624618530273
    3. '2' → logprob: -9.454062461853027
    4. ' ' → logprob: -9.579062461853027
    5. '5' → logprob: -11.954062461853027
    6. '100' → logprob: -12.329062461853027
    7. '9' → logprob: -12.829062461853027
    8. '   ' → logprob: -13.954062461853027
    9. '
' → logprob: -14.079062461853027
    10. '         ' → logprob: -14.141562461853027

Token 3510: ' or' (ID: 503)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5064720511436462
    2. ' +' → logprob: -1.006472110748291
    3. ' or' → logprob: -3.506472110748291
    4. '                   ' → logprob: -7.381472110748291
    5. 'or' → logprob: -8.631471633911133
    6. '                       ' → logprob: -8.756471633911133
    7. ':
' → logprob: -8.756471633911133
    8. '                ' → logprob: -9.131471633911133
    9. '               ' → logprob: -9.131471633911133
    10. '                    ' → logprob: -9.256471633911133

Token 3511: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.5192423462867737
    2. 'i' → logprob: -1.019242286682129
    3. '(i' → logprob: -3.644242286682129
    4. '(last' → logprob: -4.769242286682129
    5. 'un' → logprob: -5.644242286682129
    6. 'not' → logprob: -6.269242286682129
    7. ' last' → logprob: -6.519242286682129
    8. ' (' → logprob: -7.394242286682129
    9. ' i' → logprob: -8.144242286682129
    10. '(' → logprob: -8.144242286682129

Token 3512: '_un' (ID: 11119)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.5317436456680298
    2. '_un' → logprob: -1.7817436456680298
    3. 'i' → logprob: -2.4067435264587402
    4. '_' → logprob: -2.9067435264587402
    5. '[i' → logprob: -3.1567435264587402
    6. '```' → logprob: -4.65674352645874
    7. '+' → logprob: -5.03174352645874
    8. '_i' → logprob: -5.03174352645874
    9. ' _' → logprob: -5.28174352645874
    10. ' un' → logprob: -5.40674352645874

Token 3513: 'vo' (ID: 1190)
  Prédit: 'vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -7.421908958349377e-05
    2. 'v' → logprob: -10.00007438659668
    3. '_vo' → logprob: -11.50007438659668
    4. 'i' → logprob: -11.75007438659668
    5. 'voc' → logprob: -12.25007438659668
    6. 'vised' → logprob: -13.00007438659668
    7. 'voice' → logprob: -14.75007438659668
    8. 'vi' → logprob: -15.12507438659668
    9. 'vol' → logprob: -15.25007438659668
    10. 'voices' → logprob: -15.37507438659668

Token 3514: 'iced' (ID: 9865)
  Prédit: 'iced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iced' → logprob: -0.0035366364754736423
    2. 'o' → logprob: -5.878536701202393
    3. 'oc' → logprob: -7.503536701202393
    4. 'i' → logprob: -10.503536224365234
    5. 'ic' → logprob: -10.503536224365234
    6. 'ced' → logprob: -10.628536224365234
    7. '```' → logprob: -11.253536224365234
    8. 'I' → logprob: -12.003536224365234
    9. ' iced' → logprob: -12.003536224365234
    10. '>' → logprob: -12.128536224365234

Token 3515: '_idx' (ID: 15257)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.703836977481842
    2. '_idx' → logprob: -0.953836977481842
    3. '!=' → logprob: -3.4538369178771973
    4. ' +' → logprob: -3.8288369178771973
    5. ' !=' → logprob: -3.8288369178771973
    6. '<i' → logprob: -4.078836917877197
    7. '+i' → logprob: -4.953836917877197
    8. '_' → logprob: -5.203836917877197
    9. '_i' → logprob: -5.203836917877197
    10. 'i' → logprob: -6.203836917877197

Token 3516: ' !=' (ID: 1666)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.30165475606918335
    2. ' +' → logprob: -1.5516548156738281
    3. '!=' → logprob: -4.051654815673828
    4. ' !=' → logprob: -4.426654815673828
    5. '<' → logprob: -4.551654815673828
    6. ' <' → logprob: -4.926654815673828
    7. '==' → logprob: -7.301654815673828
    8. ' ' → logprob: -8.176654815673828
    9. ' ==' → logprob: -9.426654815673828
    10. '```' → logprob: -10.051654815673828

Token 3517: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0009223000961355865
    2. ' i' → logprob: -7.125922203063965
    3. '(i' → logprob: -10.750922203063965
    4. '                           ' → logprob: -11.000922203063965
    5. '   ' → logprob: -11.125922203063965
    6. '           ' → logprob: -11.375922203063965
    7. '                   ' → logprob: -11.375922203063965
    8. '1' → logprob: -11.875922203063965
    9. '       ' → logprob: -12.000922203063965
    10. '                       ' → logprob: -12.250922203063965

Token 3518: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08784421533346176
    2. ' +' → logprob: -3.212844133377075
    3. '-' → logprob: -3.337844133377075
    4. ' -' → logprob: -4.837844371795654
    5. '           ' → logprob: -8.587843894958496
    6. '               ' → logprob: -10.087843894958496
    7. '1' → logprob: -10.337843894958496
    8. '+i' → logprob: -10.712843894958496
    9. '          ' → logprob: -10.962843894958496
    10. '```' → logprob: -11.087843894958496

Token 3519: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.394135612528771e-05
    2. ' ' → logprob: -10.250043869018555
    3. '2' → logprob: -11.875043869018555
    4. '```' → logprob: -14.625043869018555
    5. '
' → logprob: -15.250043869018555
    6. '   ' → logprob: -15.312543869018555
    7. 'i' → logprob: -16.125043869018555
    8. '۱' → logprob: -16.812543869018555
    9. '    ' → logprob: -17.125043869018555
    10. '11' → logprob: -17.250043869018555

Token 3520: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.641440749168396
    2. ':
' → logprob: -0.766440749168396
    3. '           ' → logprob: -6.0164408683776855
    4. '+' → logprob: -6.2664408683776855
    5. '               ' → logprob: -6.8914408683776855
    6. '                   ' → logprob: -7.5164408683776855
    7. ' or' → logprob: -7.8914408683776855
    8. '==' → logprob: -8.266440391540527
    9. '```' → logprob: -8.266440391540527
    10. '                       ' → logprob: -8.391440391540527

Token 3521: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.377372145652771
    2. '               ' → logprob: -1.752372145652771
    3. ' un' → logprob: -3.1273722648620605
    4. '                       ' → logprob: -3.7523722648620605
    5. '[' → logprob: -4.2523722648620605
    6. '                               ' → logprob: -4.2523722648620605
    7. '                ' → logprob: -4.3773722648620605
    8. '                           ' → logprob: -4.8773722648620605
    9. '```' → logprob: -4.8773722648620605
    10. ' ' → logprob: -5.8773722648620605

Token 3522: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' (adapté à ' un') → logprob: -0.007577989250421524
    2. '               ' → logprob: -5.257577896118164
    3. ' un' → logprob: -6.257577896118164
    4. '                   ' → logprob: -7.882577896118164
    5. '```' → logprob: -10.882577896118164
    6. '           ' → logprob: -11.382577896118164
    7. '                       ' → logprob: -11.632577896118164
    8. '   ' → logprob: -12.382577896118164
    9. '	un' → logprob: -13.132577896118164
    10. '                           ' → logprob: -13.882577896118164

Token 3523: 'vo' (ID: 1190)
  Prédit: 'vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -2.7610454708337784e-05
    2. '_vo' → logprob: -10.625027656555176
    3. 'voice' → logprob: -13.625027656555176
    4. 'voices' → logprob: -14.625027656555176
    5. 'v' → logprob: -14.875027656555176
    6. 'voc' → logprob: -14.875027656555176
    7. '	vo' → logprob: -15.750027656555176
    8. '(vo' → logprob: -16.00002670288086
    9. 'vised' → logprob: -16.12502670288086
    10. ' vo' → logprob: -16.37502670288086

Token 3524: 'iced' (ID: 9865)
  Prédit: 'iced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iced' → logprob: -0.002709415275603533
    2. 'ic' → logprob: -6.00270938873291
    3. 'ced' → logprob: -10.12770938873291
    4. 'oc' → logprob: -10.62770938873291
    5. '                 ' → logprob: -10.75270938873291
    6. 'c' → logprob: -10.87770938873291
    7. '   ' → logprob: -11.37770938873291
    8. '                   ' → logprob: -11.37770938873291
    9. 'liced' → logprob: -11.37770938873291
    10. 'ed' → logprob: -11.62770938873291

Token 3525: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.008641989901661873
    2. '[' → logprob: -4.758642196655273
    3. '\[' → logprob: -12.133642196655273
    4. '[
' → logprob: -12.383642196655273
    5. '```' → logprob: -12.508642196655273
    6. '[I' → logprob: -13.008642196655273
    7. '=True' → logprob: -13.133642196655273
    8. ' [' → logprob: -13.133642196655273
    9. '
' → logprob: -13.383642196655273
    10. '=' → logprob: -13.508642196655273

Token 3526: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19346658885478973
    2. ']' → logprob: -2.0684666633605957
    3. ' =' → logprob: -3.1934666633605957
    4. ']=' → logprob: -4.818466663360596
    5. '=True' → logprob: -7.943466663360596
    6. ' ]' → logprob: -10.693466186523438
    7. '[' → logprob: -11.068466186523438
    8. ')' → logprob: -11.818466186523438
    9. '=
' → logprob: -12.568466186523438
    10. '<|end|>' → logprob: -12.693466186523438

Token 3527: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005773392622359097
    2. ' =' → logprob: -7.500577449798584
    3. '=True' → logprob: -10.625576972961426
    4. '=
' → logprob: -17.625577926635742
    5. '[' → logprob: -19.250577926635742
    6. '   ' → logprob: -19.375577926635742
    7. '=true' → logprob: -19.500577926635742
    8. '＝' → logprob: -20.000577926635742
    9. '           ' → logprob: -20.250577926635742
    10. '       ' → logprob: -20.375577926635742

Token 3528: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.5048530030981055e-06
    2. ' True' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.500001907348633
    4. '(True' → logprob: -20.250001907348633
    5. '=True' → logprob: -22.500001907348633
    6. '1' → logprob: -22.625001907348633
    7. 'true' → logprob: -23.250001907348633
    8. '       ' → logprob: -23.375001907348633
    9. '           ' → logprob: -24.875001907348633
    10. 'False' → logprob: -25.125001907348633

Token 3529: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3530: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14348454773426056
    2. '<|end|>' → logprob: -2.518484592437744
    3. '               ' → logprob: -3.518484592437744
    4. '           ' → logprob: -4.518484592437744
    5. '       ' → logprob: -5.143484592437744
    6. ')' → logprob: -6.518484592437744
    7. '                    ' → logprob: -7.143484592437744
    8. '                ' → logprob: -7.643484592437744
    9. '                       ' → logprob: -7.893484592437744
    10. ' ' → logprob: -7.893484592437744

Token 3531: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.008087425492703915
    2. '                   ' → logprob: -5.258087635040283
    3. '           ' → logprob: -6.133087635040283
    4. ' last' → logprob: -7.383087635040283
    5. '               ' → logprob: -10.508087158203125
    6. '                       ' → logprob: -10.758087158203125
    7. '       ' → logprob: -12.633087158203125
    8. '                           ' → logprob: -13.008087158203125
    9. '```' → logprob: -14.008087158203125
    10. '   ' → logprob: -14.258087158203125

Token 3532: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -1.1637164789135568e-05
    2. 'un' → logprob: -12.125011444091797
    3. '_unc' → logprob: -13.375011444091797
    4. '_' → logprob: -13.625011444091797
    5. '```' → logprob: -14.375011444091797
    6. '_UN' → logprob: -14.625011444091797
    7. 'Un' → logprob: -14.875011444091797
    8. '_vo' → logprob: -14.875011444091797
    9. '_uns' → logprob: -15.000011444091797
    10. '_unref' → logprob: -15.125011444091797

Token 3533: 'vo' (ID: 1190)
  Prédit: 'vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.00014656837447546422
    2. '_vo' → logprob: -9.000146865844727
    3. 'v' → logprob: -11.750146865844727
    4. 'voc' → logprob: -12.250146865844727
    5. 'i' → logprob: -13.125146865844727
    6. 'voice' → logprob: -13.375146865844727
    7. '_' → logprob: -13.750146865844727
    8. '_v' → logprob: -14.125146865844727
    9. '
' → logprob: -14.250146865844727
    10. 'vised' → logprob: -14.250146865844727

Token 3534: 'iced' (ID: 9865)
  Prédit: 'iced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iced' → logprob: -0.004303833935409784
    2. 'o' → logprob: -5.504303932189941
    3. 'oc' → logprob: -9.004303932189941
    4. 'ic' → logprob: -9.879303932189941
    5. 'vo' → logprob: -11.504303932189941
    6. 'i' → logprob: -12.004303932189941
    7. '```' → logprob: -12.254303932189941
    8. '
' → logprob: -12.504303932189941
    9. 'liced' → logprob: -12.629303932189941
    10. '_' → logprob: -12.754303932189941

Token 3535: '_idx' (ID: 15257)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1467137485742569
    2. ' =' → logprob: -2.0217137336730957
    3. '=i' → logprob: -5.646713733673096
    4. '_=' → logprob: -8.271714210510254
    5. '_' → logprob: -9.021714210510254
    6. '_idx' → logprob: -9.771714210510254
    7. '=_' → logprob: -10.646714210510254
    8. ' _' → logprob: -11.021714210510254
    9. ' ' → logprob: -12.396714210510254
    10. '	' → logprob: -12.521714210510254

Token 3536: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3135400116443634
    2. ' =' → logprob: -1.313539981842041
    3. '=i' → logprob: -8.1885404586792
    4. '＝' → logprob: -16.063539505004883
    5. ' ' → logprob: -16.688539505004883
    6. '=int' → logprob: -17.188539505004883
    7. '=
' → logprob: -17.688539505004883
    8. '=u' → logprob: -18.188539505004883
    9. '=s' → logprob: -18.188539505004883
    10. '	' → logprob: -18.438539505004883

Token 3537: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.5491004129871726e-05
    2. ' i' → logprob: -10.000045776367188
    3. '	i' → logprob: -18.125045776367188
    4. '$i' → logprob: -20.000045776367188
    5. '*i' → logprob: -20.500045776367188
    6. '=i' → logprob: -21.500045776367188
    7. '{i' → logprob: -22.125045776367188
    8. '_i' → logprob: -22.875045776367188
    9. '   ' → logprob: -23.000045776367188
    10. ')i' → logprob: -23.125045776367188

Token 3538: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3539: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3540: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004085878375917673
    2. 'for' → logprob: -6.254086017608643
    3. ' for' → logprob: -7.254086017608643
    4. '   ' → logprob: -7.379086017608643
    5. '<|end|>' → logprob: -7.629086017608643
    6. '```' → logprob: -8.379085540771484
    7. '        
' → logprob: -9.879085540771484
    8. '           ' → logprob: -10.879085540771484
    9. ')' → logprob: -12.004085540771484
    10. '#' (adapté à ' #') → logprob: -12.504085540771484

Token 3541: ' Process' (ID: 12482)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012557090260088444
    2. 'for' → logprob: -4.637557029724121
    3. '#' → logprob: -5.887557029724121
    4. '```' → logprob: -11.387557029724121
    5. '   ' → logprob: -11.637557029724121
    6. ' for' → logprob: -13.512557029724121
    7. '        
' → logprob: -14.262557029724121
    8. '
' → logprob: -14.762557029724121
    9. '           ' → logprob: -15.012557029724121
    10. 'def' → logprob: -16.262557983398438

Token 3542: ' rule' (ID: 10652)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7010012269020081
    2. '#' → logprob: -0.8260012269020081
    3. '   ' → logprob: -3.8260011672973633
    4. 'for' → logprob: -3.8260011672973633
    5. 'i' → logprob: -4.076001167297363
    6. 'len' → logprob: -6.451001167297363
    7. '       ' → logprob: -6.701001167297363
    8. 'n' → logprob: -6.826001167297363
    9. 'range' → logprob: -7.826001167297363
    10. '```' → logprob: -7.826001167297363

Token 3543: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0724148079752922
    2. '3' → logprob: -2.6974148750305176
    3. '#' → logprob: -6.072414875030518
    4. '   ' → logprob: -9.44741439819336
    5. 'for' → logprob: -10.32241439819336
    6. '       ' → logprob: -10.57241439819336
    7. '1' → logprob: -11.57241439819336
    8. '```' → logprob: -11.57241439819336
    9. '4' → logprob: -12.57241439819336
    10. '``' → logprob: -12.82241439819336

Token 3544: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6434769630432129
    2. 'for' → logprob: -0.8934769630432129
    3. 'i' → logprob: -3.143476963043213
    4. 'v' → logprob: -5.393476963043213
    5. '#' → logprob: -5.518476963043213
    6. 'idx' → logprob: -5.893476963043213
    7. 'start' → logprob: -6.143476963043213
    8. '   ' → logprob: -6.268476963043213
    9. 'chain' → logprob: -6.768476963043213
    10. 'j' → logprob: -6.768476963043213

Token 3545: ' vowels' (ID: 176245)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04244932904839516
    2. 'v' → logprob: -4.417449474334717
    3. 'j' → logprob: -4.542449474334717
    4. 'vo' → logprob: -4.667449474334717
    5. 'a' → logprob: -5.542449474334717
    6. 'range' → logprob: -5.792449474334717
    7. '#' → logprob: -7.542449474334717
    8. 'o' → logprob: -8.167448997497559
    9. '```' → logprob: -8.167448997497559
    10. '   ' → logprob: -8.292448997497559

Token 3546: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5615195631980896
    2. '       ' → logprob: -1.1865196228027344
    3. 'a' → logprob: -3.3115196228027344
    4. 'i' → logprob: -3.3115196228027344
    5. '   ' → logprob: -3.3115196228027344
    6. 'v' → logprob: -4.686519622802734
    7. '#' → logprob: -6.811519622802734
    8. 'idx' → logprob: -6.811519622802734
    9. '{'' → logprob: -6.936519622802734
    10. '```' → logprob: -7.186519622802734

Token 3547: ',o' (ID: 97273)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3800498247146606
    2. 'for' → logprob: -2.255049705505371
    3. ' =' → logprob: -2.255049705505371
    4. ',u' → logprob: -2.505049705505371
    5. 'or' → logprob: -2.630049705505371
    6. ',i' → logprob: -2.755049705505371
    7. '='' → logprob: -2.880049705505371
    8. 'and' → logprob: -3.255049705505371
    9. 'u' → logprob: -3.255049705505371
    10. '=' → logprob: -3.630049705505371

Token 3548: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014534479705616832
    2. '
' → logprob: -7.001453399658203
    3. 'for' → logprob: -8.001453399658203
    4. '   ' → logprob: -9.251453399658203
    5. '        
' → logprob: -10.251453399658203
    6. 'v' → logprob: -10.501453399658203
    7. '```' → logprob: -11.251453399658203
    8. 'i' → logprob: -11.751453399658203
    9. '#' → logprob: -12.126453399658203
    10. 'a' → logprob: -12.251453399658203

Token 3549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017605057219043374
    2. 'for' → logprob: -6.876760482788086
    3. '   ' → logprob: -8.001760482788086
    4. 'i' → logprob: -8.626760482788086
    5. 'v' → logprob: -9.251760482788086
    6. 'start' → logprob: -10.001760482788086
    7. '#' → logprob: -11.376760482788086
    8. '```' → logprob: -11.376760482788086
    9. 'chain' → logprob: -11.501760482788086
    10. 'current' → logprob: -11.876760482788086

Token 3550: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4681508243083954
    2. 'for' → logprob: -1.4681508541107178
    3. '   ' → logprob: -3.0931508541107178
    4. 'start' → logprob: -3.7181508541107178
    5. 'chain' → logprob: -3.8431508541107178
    6. '       ' → logprob: -4.343150615692139
    7. 'idx' → logprob: -4.468150615692139
    8. 'a' → logprob: -4.468150615692139
    9. 'seq' → logprob: -4.843150615692139
    10. 'j' → logprob: -5.718150615692139

Token 3551: ' "' (ID: 392)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7711185216903687
    2. '       ' → logprob: -1.3961185216903687
    3. 'i' → logprob: -1.5211185216903687
    4. 'start' → logprob: -3.646118640899658
    5. 'j' → logprob: -4.521118640899658
    6. 'idx' → logprob: -4.771118640899658
    7. '   ' → logprob: -4.771118640899658
    8. 'seq' → logprob: -4.896118640899658
    9. 'chain' → logprob: -5.646118640899658
    10. 'a' → logprob: -6.021118640899658

Token 3552: '母' (ID: 37600)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1240779161453247
    2. 'for' → logprob: -1.2490779161453247
    3. 'start' → logprob: -2.124077796936035
    4. '   ' → logprob: -2.499077796936035
    5. 'a' → logprob: -3.249077796936035
    6. 'seq' → logprob: -3.624077796936035
    7. 'idx' → logprob: -3.624077796936035
    8. 'chain' → logprob: -4.124077796936035
    9. '       ' → logprob: -4.249077796936035
    10. 'v' → logprob: -4.374077796936035

Token 3553: '音' (ID: 15082)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.331652045249939
    2. '   ' → logprob: -1.331652045249939
    3. '[i' → logprob: -1.456652045249939
    4. 'i' → logprob: -2.7066521644592285
    5. 'o' → logprob: -3.3316521644592285
    6. '_u' → logprob: -3.7066521644592285
    7. 'vo' → logprob: -3.9566521644592285
    8. '[' → logprob: -4.8316521644592285
    9. '_' → logprob: -4.9566521644592285
    10. ']' → logprob: -4.9566521644592285

Token 3554: '「' (ID: 6055)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.8365914821624756
    2. ' =' → logprob: -1.3365914821624756
    3. 'a' → logprob: -2.3365914821624756
    4. '=' → logprob: -2.3365914821624756
    5. 'i' → logprob: -3.5865914821624756
    6. 'for' → logprob: -4.211591720581055
    7. 's' → logprob: -4.586591720581055
    8. '   ' → logprob: -4.836591720581055
    9. 'u' → logprob: -5.211591720581055
    10. ' in' → logprob: -5.211591720581055

Token 3555: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04188418760895729
    2. ''a' → logprob: -3.916884183883667
    3. 'i' → logprob: -5.041884422302246
    4. 'o' → logprob: -5.416884422302246
    5. '{'' → logprob: -5.916884422302246
    6. ''' → logprob: -6.041884422302246
    7. 'u' → logprob: -6.916884422302246
    8. ''i' → logprob: -7.041884422302246
    9. ''u' → logprob: -7.166884422302246
    10. '['' → logprob: -7.416884422302246

Token 3556: '」「' (ID: 50032)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -1.277928113937378
    2. '[i' → logprob: -1.527928113937378
    3. '']' → logprob: -2.527928113937378
    4. '"]' → logprob: -3.277928113937378
    5. '][' → logprob: -3.402928113937378
    6. 'u' → logprob: -3.527928113937378
    7. '
' → logprob: -3.527928113937378
    8. '」' → logprob: -3.902928113937378
    9. 'if' → logprob: -3.902928113937378
    10. '```' → logprob: -4.027928352355957

Token 3557: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.00010032468708232045
    2. '
' → logprob: -10.875100135803223
    3. ''o' → logprob: -11.000100135803223
    4. 'u' → logprob: -11.250100135803223
    5. 'i' → logprob: -11.875100135803223
    6. 'a' → logprob: -12.125100135803223
    7. 'e' → logprob: -12.125100135803223
    8. '{o' → logprob: -12.250100135803223
    9. '```' → logprob: -12.625100135803223
    10. 'お' → logprob: -12.875100135803223

Token 3558: '」' (ID: 5252)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5428867936134338
    2. '[i' → logprob: -2.417886734008789
    3. ' in' → logprob: -3.042886734008789
    4. 'in' → logprob: -3.292886734008789
    5. '"]' → logprob: -3.792886734008789
    6. '」' → logprob: -3.917886734008789
    7. '']' → logprob: -4.042886734008789
    8. '==' → logprob: -4.042886734008789
    9. 'の' → logprob: -4.167886734008789
    10. '```' → logprob: -4.167886734008789

Token 3559: 'について' (ID: 94408)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7080859541893005
    2. '[i' → logprob: -1.5830860137939453
    3. ' for' → logprob: -2.2080860137939453
    4. ':' → logprob: -3.5830860137939453
    5. 'の' → logprob: -3.9580860137939453
    6. ' in' → logprob: -4.083086013793945
    7. '   ' → logprob: -4.208086013793945
    8. 'で' → logprob: -4.583086013793945
    9. 'を' → logprob: -4.708086013793945
    10. '
' → logprob: -4.708086013793945

Token 3560: '，同' (ID: 158812)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7044705152511597
    2. ':
' → logprob: -1.8294705152511597
    3. 'for' → logprob: -2.079470634460449
    4. '#' → logprob: -2.079470634460449
    5. ':' → logprob: -4.204470634460449
    6. 'の' → logprob: -4.204470634460449
    7. ' for' → logprob: -4.329470634460449
    8. '   ' → logprob: -4.329470634460449
    9. 'は' → logprob: -5.079470634460449
    10. '続' → logprob: -5.079470634460449

Token 3561: '一' (ID: 2432)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4751805067062378
    2. 'if' → logprob: -2.1001806259155273
    3. '
' → logprob: -2.2251806259155273
    4. 'for' → logprob: -2.4751806259155273
    5. 'じ' → logprob: -2.7251806259155273
    6. 'def' → logprob: -3.1001806259155273
    7. 'vo' → logprob: -3.3501806259155273
    8. '       ' → logprob: -3.4751806259155273
    9. '一' → logprob: -3.7251806259155273
    10. '   ' → logprob: -4.225180625915527

Token 3562: 'の' (ID: 3385)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3433261811733246
    2. 'i' → logprob: -2.2183260917663574
    3. 'm' → logprob: -3.0933260917663574
    4. '   ' → logprob: -3.5933260917663574
    5. '{'' → logprob: -3.5933260917663574
    6. '{
' → logprob: -4.468326091766357
    7. '
' → logprob: -4.843326091766357
    8. 'in' → logprob: -4.843326091766357
    9. 'def' → logprob: -5.218326091766357
    10. 'vo' → logprob: -5.468326091766357

Token 3563: '母' (ID: 37600)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.12414374202489853
    2. 'vo' → logprob: -2.3741438388824463
    3. 'm' → logprob: -4.249143600463867
    4. 'con' → logprob: -6.124143600463867
    5. '
' → logprob: -6.249143600463867
    6. '   ' → logprob: -6.374143600463867
    7. '#' → logprob: -6.999143600463867
    8. 'def' → logprob: -7.624143600463867
    9. '```' → logprob: -8.499143600463867
    10. 'c' → logprob: -8.749143600463867

Token 3564: '音' (ID: 15082)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.025617241859436
    2. 'v' → logprob: -1.275617241859436
    3. 'i' → logprob: -2.6506171226501465
    4. 'vo' → logprob: -2.9006171226501465
    5. '{
' → logprob: -3.0256171226501465
    6. ']' → logprob: -3.2756171226501465
    7. '[i' → logprob: -3.4006171226501465
    8. '[' → logprob: -3.9006171226501465
    9. '][' → logprob: -4.2756171226501465
    10. '       ' → logprob: -4.2756171226501465

Token 3565: 'が' (ID: 6632)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6405810713768005
    2. 'i' → logprob: -1.8905811309814453
    3. 'が' → logprob: -1.8905811309814453
    4. '   ' → logprob: -3.2655811309814453
    5. 'の' → logprob: -3.2655811309814453
    6. 'a' → logprob: -4.515581130981445
    7. '
' → logprob: -4.640581130981445
    8. ' in' → logprob: -4.640581130981445
    9. 'for' → logprob: -4.890581130981445
    10. 'idx' → logprob: -4.890581130981445

Token 3566: '無' (ID: 10205)
  Prédit: '連'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '連' → logprob: -0.22754374146461487
    2. '続' → logprob: -2.602543830871582
    3. 'n' → logprob: -3.227543830871582
    4. 'i' → logprob: -3.727543830871582
    5. '\xe8\xa4' → logprob: -4.477543830871582
    6. '#' → logprob: -5.102543830871582
    7. '2' → logprob: -5.102543830871582
    8. '   ' → logprob: -5.227543830871582
    9. '一' → logprob: -5.352543830871582
    10. '```' → logprob: -5.602543830871582

Token 3567: '声' (ID: 26968)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.10817304253578186
    2. '
' → logprob: -3.483173131942749
    3. '       ' → logprob: -4.60817289352417
    4. '   ' → logprob: -4.73317289352417
    5. '{
' → logprob: -4.73317289352417
    6. '```' → logprob: -4.73317289352417
    7. '{'' → logprob: -4.98317289352417
    8. 'o' → logprob: -5.60817289352417
    9. '#' → logprob: -5.98317289352417
    10. '``' → logprob: -6.10817289352417

Token 3568: '子' (ID: 7407)
  Prédit: '_con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.5005146265029907
    2. '_' → logprob: -2.125514507293701
    3. '   ' → logprob: -2.250514507293701
    4. '_m' → logprob: -3.500514507293701
    5. 'con' → logprob: -3.625514507293701
    6. ' ' → logprob: -3.750514507293701
    7. ']' → logprob: -4.125514507293701
    8. '）' → logprob: -4.250514507293701
    9. '       ' → logprob: -4.875514507293701
    10. ')' → logprob: -5.000514507293701

Token 3569: '音' (ID: 15082)
  Prédit: '音'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '音' → logprob: -0.5407754778862
    2. '続' → logprob: -1.9157755374908447
    3. '連' → logprob: -1.9157755374908447
    4. 'で' → logprob: -4.290775299072266
    5. '母' → logprob: -4.540775299072266
    6. '[i' → logprob: -4.790775299072266
    7. '[' → logprob: -5.040775299072266
    8. 'も' → logprob: -5.040775299072266
    9. '供' → logprob: -5.040775299072266
    10. '\xe8\xa4' → logprob: -5.415775299072266

Token 3570: 'と' (ID: 5330)
  Prédit: 'で'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'で' → logprob: -0.8696025013923645
    2. '[i' → logprob: -1.8696024417877197
    3. '_' → logprob: -2.3696024417877197
    4. 'と' → logprob: -2.6196024417877197
    5. ']' → logprob: -3.2446024417877197
    6. 'が' → logprob: -3.4946024417877197
    7. '```' → logprob: -3.4946024417877197
    8. 'の' → logprob: -3.8696024417877197
    9. 's' → logprob: -3.9946024417877197
    10. 'and' → logprob: -4.744602680206299

Token 3571: 'とも' (ID: 161177)
  Prédit: '連'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '連' → logprob: -1.563192367553711
    2. 'y' → logprob: -2.188192367553711
    3. '続' → logprob: -2.313192367553711
    4. '{'' → logprob: -2.438192367553711
    5. 's' → logprob: -2.813192367553711
    6. '#' → logprob: -2.813192367553711
    7. ''' → logprob: -2.813192367553711
    8. '{' → logprob: -3.313192367553711
    9. '{
' → logprob: -3.438192367553711
    10. '('' → logprob: -3.813192367553711

Token 3572: 'に' (ID: 5280)
  Prédit: 'いて'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'いて' → logprob: -1.3277063369750977
    2. '```' → logprob: -1.9527063369750977
    3. 'して' → logprob: -2.0777063369750977
    4. 'れて' → logprob: -2.2027063369750977
    5. 'な' → logprob: -2.4527063369750977
    6. '   ' → logprob: -3.2027063369750977
    7. 'り' → logprob: -3.4527063369750977
    8. '       ' → logprob: -3.5777063369750977
    9. '続' → logprob: -3.5777063369750977
    10. '           ' → logprob: -4.202706336975098

Token 3573: '連' (ID: 37660)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.098670482635498
    2. '[' → logprob: -1.598670482635498
    3. '連' → logprob: -2.098670482635498
    4. '一' → logprob: -2.723670482635498
    5. 'i' → logprob: -2.848670482635498
    6. '[
' → logprob: -3.598670482635498
    7. 'in' → logprob: -3.723670482635498
    8. '['' → logprob: -4.098670482635498
    9. ' ' → logprob: -4.223670482635498
    10. '{'' → logprob: -4.348670482635498

Token 3574: '続' (ID: 47554)
  Prédit: '続'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '続' → logprob: -0.07844417542219162
    2. 'な' → logprob: -3.453444242477417
    3. '```' → logprob: -4.578444004058838
    4. '
' → logprob: -4.953444004058838
    5. '   ' → logprob: -5.078444004058838
    6. '       ' → logprob: -5.828444004058838
    7. 'り' → logprob: -6.203444004058838
    8. '{
' → logprob: -6.578444004058838
    9. 'れ' → logprob: -6.703444004058838
    10. 'が' → logprob: -6.703444004058838

Token 3575: 'する' (ID: 39065)
  Prédit: 'で'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'で' → logprob: -0.03076235018670559
    2. '_' → logprob: -4.530762195587158
    3. 'して' → logprob: -5.780762195587158
    4. 'を' → logprob: -6.030762195587158
    5. 'に' → logprob: -6.280762195587158
    6. '   ' → logprob: -6.280762195587158
    7. 'i' → logprob: -6.655762195587158
    8. '[i' → logprob: -7.030762195587158
    9. 'が' → logprob: -7.405762195587158
    10. '[' → logprob: -7.655762195587158

Token 3576: '2' (ID: 17)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.122939109802246
    2. 'for' → logprob: -1.122939109802246
    3. 'i' → logprob: -1.997939109802246
    4. '   ' → logprob: -2.622939109802246
    5. '```' → logprob: -3.747939109802246
    6. ' for' → logprob: -3.872939109802246
    7. 'idx' → logprob: -4.497939109802246
    8. '
' → logprob: -4.497939109802246
    9. 'v' → logprob: -4.997939109802246
    10. 'def' → logprob: -4.997939109802246

Token 3577: 'つ' (ID: 18290)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.714677631855011
    2. 'つ' → logprob: -1.5896775722503662
    3. '+
' → logprob: -2.839677572250366
    4. '{
' → logprob: -3.339677572250366
    5. 'u' → logprob: -3.714677572250366
    6. 'o' → logprob: -3.964677572250366
    7. '
' → logprob: -3.964677572250366
    8. ':' → logprob: -4.214677810668945
    9. '続' → logprob: -4.214677810668945
    10. '-' → logprob: -4.714677810668945

Token 3578: '以上' (ID: 27177)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7858728170394897
    2. ':' → logprob: -1.9108728170394897
    3. '[i' → logprob: -2.0358729362487793
    4. 'for' → logprob: -2.4108729362487793
    5. ' and' → logprob: -2.7858729362487793
    6. ':
' → logprob: -2.9108729362487793
    7. '
' → logprob: -3.1608729362487793
    8. 'if' → logprob: -3.4108729362487793
    9. '+' → logprob: -3.4108729362487793
    10. '#' → logprob: -3.4108729362487793

Token 3579: 'の' (ID: 3385)
  Prédit: 'で'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'で' → logprob: -1.1958943605422974
    2. 'in' → logprob: -1.4458943605422974
    3. 'の' → logprob: -1.8208943605422974
    4. '       ' → logprob: -2.445894241333008
    5. '   ' → logprob: -2.945894241333008
    6. '以上' → logprob: -2.945894241333008
    7. 'for' → logprob: -3.820894241333008
    8. '```' → logprob: -4.445894241333008
    9. 'が' → logprob: -4.820894241333008
    10. 'として' → logprob: -5.070894241333008

Token 3580: '拍' (ID: 10092)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.21054567396640778
    2. '連' → logprob: -2.710545778274536
    3. 'for' → logprob: -3.585545778274536
    4. 'mor' → logprob: -3.960545778274536
    5. 'v' → logprob: -4.085545539855957
    6. 'モ' → logprob: -4.210545539855957
    7. '行' → logprob: -5.210545539855957
    8. '列' → logprob: -5.210545539855957
    9. '#' → logprob: -5.210545539855957
    10. 'i' → logprob: -5.335545539855957

Token 3581: 'で' (ID: 4344)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.673283576965332
    2. 'i' → logprob: -1.423283576965332
    3. 'for' → logprob: -1.673283576965332
    4. '   ' → logprob: -4.048283576965332
    5. 'で' → logprob: -5.423283576965332
    6. 'idx' → logprob: -5.423283576965332
    7. 'def' → logprob: -5.548283576965332
    8. 'の' → logprob: -5.548283576965332
    9. 'while' → logprob: -5.673283576965332
    10. 'v' → logprob: -5.673283576965332

Token 3582: '現' (ID: 44159)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9972698092460632
    2. '続' → logprob: -1.122269868850708
    3. '```' → logprob: -2.497269868850708
    4. '#' → logprob: -2.497269868850708
    5. 'while' → logprob: -3.747269868850708
    6. '続きを' → logprob: -4.122269630432129
    7. '連' → logprob: -4.122269630432129
    8. 'は' → logprob: -4.497269630432129
    9. '       ' → logprob: -4.622269630432129
    10. '   ' → logprob: -4.747269630432129

Token 3583: 'れ' (ID: 9472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2829723358154297
    2. 'れ' → logprob: -1.2829723358154297
    3. '   ' → logprob: -1.7829723358154297
    4. 'れて' → logprob: -2.1579723358154297
    5. 'れる' → logprob: -3.2829723358154297
    6. 'る' → logprob: -3.5329723358154297
    7. '続' → logprob: -3.6579723358154297
    8. 'た' → logprob: -4.40797233581543
    9. '```' → logprob: -4.78297233581543
    10. '=' → logprob: -5.40797233581543

Token 3584: 'た' (ID: 5598)
  Prédit: 'て'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'て' → logprob: -1.4949945211410522
    2. 'た' → logprob: -1.6199945211410522
    3. '=' → logprob: -1.7449945211410522
    4. '       ' → logprob: -2.619994640350342
    5. ',' → logprob: -2.869994640350342
    6. 'る' → logprob: -2.869994640350342
    7. 'i' → logprob: -3.494994640350342
    8. ':
' → logprob: -3.744994640350342
    9. '```' → logprob: -3.869994640350342
    10. '           ' → logprob: -3.994994640350342

Token 3585: 'と' (ID: 5330)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31459611654281616
    2. 'i' → logprob: -1.814596176147461
    3. 'for' → logprob: -2.814596176147461
    4. ' for' → logprob: -4.689596176147461
    5. 'idx' → logprob: -5.064596176147461
    6. 'v' → logprob: -5.189596176147461
    7. '   ' → logprob: -5.439596176147461
    8. ' i' → logprob: -5.564596176147461
    9. '=' → logprob: -5.689596176147461
    10. '```' → logprob: -5.939596176147461

Token 3586: 'き' (ID: 11852)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -2.020193338394165
    2. 'す' → logprob: -2.520193338394165
    3. 'い' → logprob: -2.645193338394165
    4. 'よ' → logprob: -2.645193338394165
    5. 'ら' → logprob: -3.020193338394165
    6. 'for' → logprob: -3.020193338394165
    7. 'き' → logprob: -3.020193338394165
    8. 'しょう' → logprob: -3.020193338394165
    9. 'enumer' → logprob: -3.145193338394165
    10. 'う' → logprob: -3.270193338394165

Token 3587: '．' (ID: 32217)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025565238669514656
    2. ':' → logprob: -4.025565147399902
    3. ':
' → logprob: -6.150565147399902
    4. '           ' → logprob: -6.525565147399902
    5. ',' → logprob: -7.025565147399902
    6. 'for' → logprob: -7.150565147399902
    7. ' for' → logprob: -7.275565147399902
    8. '(' → logprob: -8.650565147399902
    9. '{' → logprob: -8.900565147399902
    10. '#' → logprob: -8.900565147399902

Token 3588: 'ただ' (ID: 56076)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013118226081132889
    2. 'for' → logprob: -4.513118267059326
    3. '
' → logprob: -6.638118267059326
    4. ' for' → logprob: -8.638117790222168
    5. '```' → logprob: -9.138117790222168
    6. '        
' → logprob: -9.513117790222168
    7. 'prev' → logprob: -9.638117790222168
    8. '#' → logprob: -9.763117790222168
    9. 'v' → logprob: -10.263117790222168
    10. '           ' → logprob: -10.263117790222168

Token 3589: 'し' (ID: 3829)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.272831678390503
    2. '           ' → logprob: -1.772831678390503
    3. 'for' → logprob: -1.897831678390503
    4. 'け' → logprob: -2.147831678390503
    5. '```' → logprob: -2.272831678390503
    6. 'i' → logprob: -2.772831678390503
    7. '   ' → logprob: -4.022831916809082
    8. 's' → logprob: -4.147831916809082
    9. '``' → logprob: -4.647831916809082
    10. 'は' → logprob: -4.647831916809082

Token 3590: '，' (ID: 979)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20306523144245148
    2. 'len' → logprob: -2.3280651569366455
    3. 'True' → logprob: -3.3280651569366455
    4. '#' → logprob: -4.203065395355225
    5. 'last' → logprob: -4.453065395355225
    6. 'n' → logprob: -4.953065395355225
    7. '       ' → logprob: -5.453065395355225
    8. ' i' → logprob: -5.828065395355225
    9. ' True' → logprob: -6.203065395355225
    10. '1' → logprob: -6.828065395355225

Token 3591: 'その' (ID: 32894)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.742206335067749
    2. '#' → logprob: -1.367206335067749
    3. 'last' → logprob: -1.492206335067749
    4. 'len' → logprob: -3.742206335067749
    5. 'prev' → logprob: -5.117206573486328
    6. 'True' → logprob: -5.867206573486328
    7. 'a' → logprob: -5.992206573486328
    8. '       ' → logprob: -6.242206573486328
    9. '   ' → logprob: -7.117206573486328
    10. '(i' → logprob: -7.117206573486328

Token 3592: '連' (ID: 37660)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1953638643026352
    2. 'previous' → logprob: -3.320363759994507
    3. 'last' → logprob: -3.445363759994507
    4. 'un' → logprob: -3.445363759994507
    5. 'a' → logprob: -3.820363759994507
    6. 'prev' → logprob: -4.320363998413086
    7. 'v' → logprob: -4.695363998413086
    8. '前' → logprob: -5.070363998413086
    9. '   ' → logprob: -5.695363998413086
    10. 'current' → logprob: -5.945363998413086

Token 3593: '続' (ID: 47554)
  Prédit: '続'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '続' → logprob: -0.015267443843185902
    2. '   ' → logprob: -5.765267372131348
    3. '続きを' → logprob: -6.140267372131348
    4. 'vo' → logprob: -6.765267372131348
    5. '       ' → logprob: -6.890267372131348
    6. 'for' → logprob: -7.390267372131348
    7. 'continued' → logprob: -7.390267372131348
    8. 'if' → logprob: -7.890267372131348
    9. 'continu' → logprob: -7.890267372131348
    10. '續' → logprob: -8.015267372131348

Token 3594: 'する' (ID: 39065)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28736430406570435
    2. 'if' → logprob: -2.9123642444610596
    3. 'が' → logprob: -3.5373642444610596
    4. 'i' → logprob: -3.5373642444610596
    5. '   ' → logprob: -4.162364482879639
    6. '       ' → logprob: -4.162364482879639
    7. '=' → logprob: -4.537364482879639
    8. '[i' → logprob: -4.787364482879639
    9. 'while' → logprob: -4.787364482879639
    10. 'with' → logprob: -4.787364482879639

Token 3595: '拍' (ID: 10092)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6058363318443298
    2. 'v' → logprob: -1.4808363914489746
    3. 'idx' → logprob: -2.3558363914489746
    4. 'for' → logprob: -2.6058363914489746
    5. '```' → logprob: -4.480836391448975
    6. 'while' → logprob: -4.605836391448975
    7. 'start' → logprob: -4.605836391448975
    8. 'j' → logprob: -5.480836391448975
    9. 'count' → logprob: -5.855836391448975
    10. '   ' → logprob: -6.230836391448975

Token 3596: 'の' (ID: 3385)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2273204326629639
    2. '       ' → logprob: -1.3523204326629639
    3. '+' → logprob: -1.8523204326629639
    4. 'for' → logprob: -2.602320432662964
    5. 's' → logprob: -2.977320432662964
    6. ' <' → logprob: -3.852320432662964
    7. '   ' → logprob: -3.852320432662964
    8. '<len' → logprob: -4.227320671081543
    9. '>' → logprob: -4.602320671081543
    10. '[j' → logprob: -4.852320671081543

Token 3597: 'う' (ID: 8574)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5314356684684753
    2. 'start' → logprob: -1.9064357280731201
    3. 'i' → logprob: -2.53143572807312
    4. '前' → logprob: -3.15643572807312
    5. '#' → logprob: -3.90643572807312
    6. 'last' → logprob: -4.156435489654541
    7. '```' → logprob: -4.156435489654541
    8. '先' → logprob: -4.281435489654541
    9. 'prev' → logprob: -4.531435489654541
    10. 'length' → logprob: -4.906435489654541

Token 3598: 'ち' (ID: 15376)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0530632734298706
    2. 'n' → logprob: -2.30306339263916
    3. 'for' → logprob: -2.30306339263916
    4. 'if' → logprob: -2.42806339263916
    5. '[i' → logprob: -2.67806339263916
    6. '   ' → logprob: -2.92806339263916
    7. 'nder' → logprob: -3.17806339263916
    8. 'f' → logprob: -3.55306339263916
    9. '
' → logprob: -3.55306339263916
    10. '```' → logprob: -3.92806339263916

Token 3599: 'で' (ID: 4344)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.24794788658618927
    2. 'len' → logprob: -2.622947931289673
    3. '#' → logprob: -3.122947931289673
    4. '1' → logprob: -3.497947931289673
    5. 'True' → logprob: -3.622947931289673
    6. '0' → logprob: -4.747947692871094
    7. 'for' → logprob: -5.247947692871094
    8. 'j' → logprob: -5.372947692871094
    9. '   ' → logprob: -5.622947692871094
    10. '```' → logprob: -5.872947692871094

Token 3600: '最後' (ID: 161045)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5500730276107788
    2. 'un' → logprob: -1.1750730276107788
    3. 'len' → logprob: -3.3000731468200684
    4. 'vo' → logprob: -3.6750731468200684
    5. 'last' → logprob: -4.675073146820068
    6. 'long' → logprob: -4.800073146820068
    7. 'True' → logprob: -5.300073146820068
    8. '#' → logprob: -5.425073146820068
    9. 'm' → logprob: -5.550073146820068
    10. '   ' → logprob: -5.800073146820068

Token 3601: 'の' (ID: 3385)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8422346115112305
    2. 'の' → logprob: -2.0922346115112305
    3. '[i' → logprob: -3.2172346115112305
    4. ' ' → logprob: -3.2172346115112305
    5. '```' → logprob: -3.3422346115112305
    6. '[' → logprob: -3.4672346115112305
    7. '<' → logprob: -3.9672346115112305
    8. '+' → logprob: -4.0922346115112305
    9. 'は' → logprob: -4.2172346115112305
    10. 'in' → logprob: -4.2172346115112305

Token 3602: 'もの' (ID: 122636)
  Prédit: '一'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '一' → logprob: -0.25093701481819153
    2. '1' → logprob: -2.250936985015869
    3. 'i' → logprob: -3.625936985015869
    4. '```' → logprob: -4.125936985015869
    5. 'm' → logprob: -4.250936985015869
    6. '2' → logprob: -4.750936985015869
    7. 'a' → logprob: -5.000936985015869
    8. 'つ' → logprob: -5.125936985015869
    9. '番' → logprob: -5.250936985015869
    10. '#' → logprob: -5.750936985015869

Token 3603: 'について' (ID: 94408)
  Prédit: 'まで'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'まで' → logprob: -0.9008945822715759
    2. 'は' → logprob: -1.5258946418762207
    3. 'が' → logprob: -2.6508946418762207
    4. 'の' → logprob: -2.7758946418762207
    5. 'のみ' → logprob: -2.7758946418762207
    6. 'だけ' → logprob: -3.5258946418762207
    7. 'を' → logprob: -3.5258946418762207
    8. '以' → logprob: -4.150894641876221
    9. 'に' → logprob: -4.400894641876221
    10. 'not' → logprob: -4.400894641876221

Token 3604: 'は' (ID: 5205)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6525235772132874
    2. 'not' → logprob: -1.6525235176086426
    3. '#' → logprob: -2.6525235176086426
    4. 'i' → logprob: -2.9025235176086426
    5. ' un' → logprob: -3.4025235176086426
    6. 'un' → logprob: -3.6525235176086426
    7. '   ' → logprob: -4.152523517608643
    8. 'は' → logprob: -4.152523517608643
    9. ' True' → logprob: -4.402523517608643
    10. ' i' → logprob: -4.902523517608643

Token 3605: '除' (ID: 18593)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5463082790374756
    2. 'un' → logprob: -1.4213082790374756
    3. 'True' → logprob: -2.9213082790374756
    4. ' un' → logprob: -3.1713082790374756
    5. 'not' → logprob: -3.9213082790374756
    6. ' True' → logprob: -4.171308517456055
    7. '```' → logprob: -4.171308517456055
    8. 'False' → logprob: -4.796308517456055
    9. '
' → logprob: -5.046308517456055
    10. 'if' → logprob: -5.671308517456055

Token 3606: '外' (ID: 10727)
  Prédit: '外'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '外' → logprob: -0.01562440488487482
    2. 'か' → logprob: -4.515624523162842
    3. 'く' → logprob: -6.265624523162842
    4. 'い' → logprob: -6.515624523162842
    5. 'いて' → logprob: -6.890624523162842
    6. 'き' → logprob: -10.265624046325684
    7. 'かな' → logprob: -10.265624046325684
    8. '```' → logprob: -10.390624046325684
    9. 'いた' → logprob: -11.265624046325684
    10. '외' → logprob: -11.640624046325684

Token 3607: 'され' (ID: 64598)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14729827642440796
    2. ':
' → logprob: -2.8972983360290527
    3. ':' → logprob: -3.2722983360290527
    4. ' for' → logprob: -4.272298336029053
    5. 'for' → logprob: -4.272298336029053
    6. ',' → logprob: -5.897298336029053
    7. '.' → logprob: -6.022298336029053
    8. '           ' → logprob: -6.147298336029053
    9. '[i' → logprob: -6.272298336029053
    10. ')' → logprob: -6.772298336029053

Token 3608: 'る' (ID: 6996)
  Prédit: 'て'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'て' → logprob: -1.1696110963821411
    2. 'す' → logprob: -1.6696110963821411
    3. 'ます' → logprob: -2.1696109771728516
    4. 'る' → logprob: -2.2946109771728516
    5. 'True' → logprob: -2.6696109771728516
    6. 'i' → logprob: -3.4196109771728516
    7. ' True' → logprob: -3.9196109771728516
    8. '#' → logprob: -3.9196109771728516
    9. 'ず' → logprob: -3.9196109771728516
    10. ',' → logprob: -4.294610977172852

Token 3609: '．' (ID: 32217)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012746386928483844
    2. ',' → logprob: -8.251275062561035
    3. ')' → logprob: -8.376275062561035
    4. '
' → logprob: -8.501275062561035
    5. '.' → logprob: -9.001275062561035
    6. 'for' → logprob: -9.501275062561035
    7. '        
' → logprob: -9.751275062561035
    8. ' for' → logprob: -10.251275062561035
    9. '#' → logprob: -10.251275062561035
    10. ':' → logprob: -10.501275062561035

Token 3610: '"
' (ID: 1092)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16422763466835022
    2. 'for' → logprob: -2.0392277240753174
    3. 'i' → logprob: -4.164227485656738
    4. 'prev' → logprob: -6.539227485656738
    5. 'v' → logprob: -6.664227485656738
    6. 'idx' → logprob: -7.414227485656738
    7. 'start' → logprob: -7.539227485656738
    8. '   ' → logprob: -8.164227485656738
    9. '
' → logprob: -8.164227485656738
    10. ' for' → logprob: -8.414227485656738

Token 3611: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008790657739154994
    2. '
' → logprob: -7.750879287719727
    3. 'for' → logprob: -8.250879287719727
    4. '        
' → logprob: -9.375879287719727
    5. '```' → logprob: -10.375879287719727
    6. ' for' → logprob: -10.500879287719727
    7. '           ' → logprob: -11.500879287719727
    8. '   ' → logprob: -11.500879287719727
    9. ',' → logprob: -12.250879287719727
    10. '#' → logprob: -12.750879287719727

Token 3612: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07345753163099289
    2. 'for' → logprob: -2.6984574794769287
    3. 'i' → logprob: -6.573457717895508
    4. '```' → logprob: -7.073457717895508
    5. '
' → logprob: -7.198457717895508
    6. '   ' → logprob: -9.073457717895508
    7. ' for' → logprob: -9.198457717895508
    8. 'prev' → logprob: -9.448457717895508
    9. '           ' → logprob: -10.073457717895508
    10. 'start' → logprob: -10.073457717895508

Token 3613: ' consecutive' (ID: 40840)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3981957733631134
    2. 'i' → logprob: -1.523195743560791
    3. '       ' → logprob: -3.273195743560791
    4. 'start' → logprob: -3.398195743560791
    5. 'j' → logprob: -4.273195743560791
    6. 'idx' → logprob: -4.898195743560791
    7. 'chain' → logprob: -5.398195743560791
    8. '   ' → logprob: -5.648195743560791
    9. 'seq' → logprob: -5.898195743560791
    10. 'l' → logprob: -6.773195743560791

Token 3614: ' mor' (ID: 4658)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6798162460327148
    2. 'i' → logprob: -1.3048162460327148
    3. 'if' → logprob: -2.804816246032715
    4. 'v' → logprob: -3.304816246032715
    5. ' for' → logprob: -3.429816246032715
    6. '
' → logprob: -4.429816246032715
    7. 'un' → logprob: -4.804816246032715
    8. '#' → logprob: -5.054816246032715
    9. '   ' → logprob: -5.179816246032715
    10. '```' → logprob: -5.179816246032715

Token 3615: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.19922202825546265
    2. 'a' → logprob: -1.9492220878601074
    3. '   ' → logprob: -3.6992220878601074
    4. 's' → logprob: -4.699222087860107
    5. 'for' → logprob: -6.199222087860107
    6. '       ' → logprob: -7.574222087860107
    7. ' ' → logprob: -7.824222087860107
    8. '           ' → logprob: -8.19922161102295
    9. '```' → logprob: -9.19922161102295
    10. '[' → logprob: -9.19922161102295

Token 3616: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1537163406610489
    2. 'i' → logprob: -2.4037163257598877
    3. 'for' → logprob: -3.4037163257598877
    4. 'v' → logprob: -4.778716564178467
    5. 'idx' → logprob: -5.278716564178467
    6. 'a' → logprob: -6.278716564178467
    7. 'prev' → logprob: -6.653716564178467
    8. '   ' → logprob: -6.903716564178467
    9. 'start' → logprob: -8.278716087341309
    10. '```' → logprob: -8.528716087341309

Token 3617: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.07240316271781921
    2. '[i' → logprob: -3.0724031925201416
    3. '[' → logprob: -4.5724029541015625
    4. 'i' → logprob: -5.0724029541015625
    5. '   ' → logprob: -6.4474029541015625
    6. 'have' → logprob: -6.4474029541015625
    7. '
' → logprob: -7.4474029541015625
    8. ' start' → logprob: -7.5724029541015625
    9. '#' → logprob: -7.6974029541015625
    10. 'and' → logprob: -8.072402954101562

Token 3618: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.0007475639577023685
    2. '       ' → logprob: -8.000747680664062
    3. ' with' → logprob: -9.125747680664062
    4. 's' → logprob: -9.125747680664062
    5. 'if' → logprob: -9.750747680664062
    6. '=' → logprob: -10.000747680664062
    7. 'm' → logprob: -11.375747680664062
    8. '   ' → logprob: -11.375747680664062
    9. '==' → logprob: -11.750747680664062
    10. '```' → logprob: -11.875747680664062

Token 3619: ' vo' (ID: 778)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.01238897442817688
    2. '#' → logprob: -5.637389183044434
    3. 'is' → logprob: -5.637389183044434
    4. 'def' → logprob: -5.762389183044434
    5. 'a' → logprob: -7.387389183044434
    6. ' vo' → logprob: -7.762389183044434
    7. '
' → logprob: -8.262389183044434
    8. '   ' → logprob: -8.762389183044434
    9. '(vo' → logprob: -9.387389183044434
    10. 'if' → logprob: -9.637389183044434

Token 3620: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0011883260449394584
    2. 'i' → logprob: -7.001188278198242
    3. '
' → logprob: -9.126188278198242
    4. '```' → logprob: -10.251188278198242
    5. '#' → logprob: -10.376188278198242
    6. 'if' → logprob: -11.876188278198242
    7. 'o' → logprob: -11.876188278198242
    8. 'il' → logprob: -11.876188278198242
    9. '``' → logprob: -12.001188278198242
    10. 'ice' → logprob: -12.126188278198242

Token 3621: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -7.719917630311102e-05
    2. 'ess' → logprob: -10.250077247619629
    3. 'el' → logprob: -11.125077247619629
    4. 'ol' → logprob: -11.750077247619629
    5. 'less' → logprob: -12.125077247619629
    6. '```' → logprob: -12.375077247619629
    7. 'o' → logprob: -13.250077247619629
    8. '{' → logprob: -13.750077247619629
    9. '#' → logprob: -14.000077247619629
    10. 'e' → logprob: -14.125077247619629

Token 3622: ' conson' (ID: 127767)
  Prédit: '_con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.5291934609413147
    2. '_' → logprob: -2.40419340133667
    3. '       ' → logprob: -2.52919340133667
    4. ' conson' → logprob: -2.77919340133667
    5. 'con' → logprob: -3.02919340133667
    6. '   ' → logprob: -3.65419340133667
    7. ' =' → logprob: -3.90419340133667
    8. '           ' → logprob: -4.90419340133667
    9. '_c' → logprob: -5.02919340133667
    10. '_vo' → logprob: -5.15419340133667

Token 3623: 'ant' (ID: 493)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4174036681652069
    2. '[i' → logprob: -1.5424036979675293
    3. '           ' → logprob: -3.5424036979675293
    4. 'if' → logprob: -4.042403697967529
    5. '   ' → logprob: -4.167403697967529
    6. ':
' → logprob: -4.542403697967529
    7. 'and' → logprob: -4.667403697967529
    8. ' and' → logprob: -5.167403697967529
    9. 'for' → logprob: -5.542403697967529
    10. '               ' → logprob: -5.792403697967529

Token 3624: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05375602841377258
    2. 'v' → logprob: -4.053756237030029
    3. 'i' → logprob: -4.178756237030029
    4. 'for' → logprob: -4.678756237030029
    5. '   ' → logprob: -6.053756237030029
    6. 'idx' → logprob: -6.053756237030029
    7. 'start' → logprob: -6.553756237030029
    8. '```' → logprob: -6.928756237030029
    9. 'prev' → logprob: -7.178756237030029
    10. '
' → logprob: -7.803756237030029

Token 3625: ' vowel' (ID: 165542)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.013437848538160324
    2. 'get' → logprob: -4.388437747955322
    3. 'a' → logprob: -8.13843822479248
    4. ' vowels' → logprob: -9.13843822479248
    5. 'same' → logprob: -9.26343822479248
    6. '   ' → logprob: -9.38843822479248
    7. '{' → logprob: -9.51343822479248
    8. '#' → logprob: -9.76343822479248
    9. ' ' → logprob: -10.26343822479248
    10. '{
' → logprob: -10.51343822479248

Token 3626: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11902348697185516
    2. 'for' → logprob: -3.119023561477661
    3. 'v' → logprob: -3.244023561477661
    4. 'i' → logprob: -4.244023323059082
    5. '   ' → logprob: -5.619023323059082
    6. 'idx' → logprob: -6.119023323059082
    7. 'a' → logprob: -6.494023323059082
    8. '```' → logprob: -6.494023323059082
    9. ' for' → logprob: -7.119023323059082
    10. 'prev' → logprob: -7.369023323059082

Token 3627: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07337334752082825
    2. 'for' → logprob: -4.573373317718506
    3. '           ' → logprob: -4.823373317718506
    4. '   ' → logprob: -5.073373317718506
    5. ' in' → logprob: -5.323373317718506
    6. 'in' → logprob: -5.448373317718506
    7. ':
' → logprob: -5.573373317718506
    8. ' for' → logprob: -5.573373317718506
    9. '{'' → logprob: -5.698373317718506
    10. ' and' → logprob: -5.948373317718506

Token 3628: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.062356628477573395
    2. ''o' → logprob: -3.56235671043396
    3. '{'' → logprob: -4.062356472015381
    4. '{o' → logprob: -4.437356472015381
    5. ' o' → logprob: -7.062356472015381
    6. 'a' → logprob: -7.687356472015381
    7. ' {'' → logprob: -7.812356472015381
    8. '{' → logprob: -8.312356948852539
    9. '['' → logprob: -8.812356948852539
    10. ''' → logprob: -8.937356948852539

Token 3629: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00038288687937892973
    2. 'i' → logprob: -9.250382423400879
    3. 'v' → logprob: -9.375382423400879
    4. 'for' → logprob: -9.750382423400879
    5. '   ' → logprob: -10.000382423400879
    6. '```' → logprob: -10.750382423400879
    7. '        
' → logprob: -11.125382423400879
    8. 'start' → logprob: -11.750382423400879
    9. 's' → logprob: -12.250382423400879
    10. 'def' → logprob: -12.375382423400879

Token 3630: ' same' (ID: 2684)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6591113805770874
    2. 'v' → logprob: -1.2841113805770874
    3. ' #' → logprob: -3.534111499786377
    4. '       ' → logprob: -3.659111499786377
    5. ' are' → logprob: -4.034111499786377
    6. '   ' → logprob: -4.034111499786377
    7. 'm' → logprob: -4.534111499786377
    8. ' v' → logprob: -4.534111499786377
    9. 'for' → logprob: -4.534111499786377
    10. 'are' → logprob: -4.784111499786377

Token 3631: ' vowel' (ID: 165542)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17771893739700317
    2. 'for' → logprob: -2.3027188777923584
    3. 'v' → logprob: -3.5527188777923584
    4. '   ' → logprob: -4.3027191162109375
    5. ' for' → logprob: -5.1777191162109375
    6. 'i' → logprob: -5.6777191162109375
    7. '```' → logprob: -6.3027191162109375
    8. 'a' → logprob: -6.5527191162109375
    9. '
' → logprob: -6.8027191162109375
    10. '#' → logprob: -7.1777191162109375

Token 3632: ' repeated' (ID: 24161)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11621200293302536
    2. 'i' → logprob: -2.7412118911743164
    3. 'for' → logprob: -4.616211891174316
    4. 'v' → logprob: -4.741211891174316
    5. 'idx' → logprob: -4.741211891174316
    6. 'start' → logprob: -4.866211891174316
    7. 'seq' → logprob: -5.616211891174316
    8. 'a' → logprob: -6.491211891174316
    9. 'prev' → logprob: -6.491211891174316
    10. '   ' → logprob: -7.491211891174316

Token 3633: ' twice' (ID: 18370)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004606707487255335
    2. 'i' → logprob: -6.5046067237854
    3. 'v' → logprob: -6.6296067237854
    4. 'for' → logprob: -7.2546067237854
    5. '   ' → logprob: -7.5046067237854
    6. '```' → logprob: -9.004606246948242
    7. 'def' → logprob: -9.629606246948242
    8. 'a' → logprob: -10.004606246948242
    9. 'idx' → logprob: -10.129606246948242
    10. 'start' → logprob: -10.379606246948242

Token 3634: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04818450286984444
    2. 'i' → logprob: -3.798184394836426
    3. 'for' → logprob: -4.173184394836426
    4. 'v' → logprob: -5.298184394836426
    5. 'idx' → logprob: -6.673184394836426
    6. 'prev' → logprob: -6.923184394836426
    7. '   ' → logprob: -7.673184394836426
    8. 'a' → logprob: -7.673184394836426
    9. 'start' → logprob: -8.048184394836426
    10. '```' → logprob: -8.298184394836426

Token 3635: ' more' (ID: 945)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8297038078308105
    2. '       ' → logprob: -1.8297038078308105
    3. '#' → logprob: -2.4547038078308105
    4. 'or' → logprob: -3.0797038078308105
    5. ' for' → logprob: -3.2047038078308105
    6. '{
' → logprob: -3.3297038078308105
    7. '   ' → logprob: -3.7047038078308105
    8. '           ' → logprob: -3.9547038078308105
    9. ''' → logprob: -4.0797038078308105
    10. ' or' → logprob: -4.7047038078308105

Token 3636: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27077850699424744
    2. 'i' → logprob: -1.8957785367965698
    3. 'for' → logprob: -2.7707784175872803
    4. 'v' → logprob: -4.770778656005859
    5. 'idx' → logprob: -5.020778656005859
    6. 'start' → logprob: -5.520778656005859
    7. 'a' → logprob: -6.895778656005859
    8. 'seq' → logprob: -7.020778656005859
    9. '   ' → logprob: -7.395778656005859
    10. 'prev' → logprob: -7.645778656005859

Token 3637: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015617619501426816
    2. 'i' → logprob: -8.001562118530273
    3. 'v' → logprob: -8.001562118530273
    4. 'start' → logprob: -8.251562118530273
    5. 'prev' → logprob: -8.501562118530273
    6. 'a' → logprob: -9.251562118530273
    7. 'idx' → logprob: -9.626562118530273
    8. '   ' → logprob: -10.001562118530273
    9. 'for' → logprob: -10.001562118530273
    10. 'next' → logprob: -10.626562118530273

Token 3638: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1679951697587967
    2. 'for' → logprob: -2.6679952144622803
    3. 'i' → logprob: -2.7929952144622803
    4. 'start' → logprob: -4.792994976043701
    5. '```' → logprob: -5.292994976043701
    6. 'v' → logprob: -5.792994976043701
    7. '   ' → logprob: -6.167994976043701
    8. 'idx' → logprob: -6.792994976043701
    9. '``' → logprob: -6.792994976043701
    10. 'chain' → logprob: -6.917994976043701

Token 3639: ' long' (ID: 1701)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9186586737632751
    2. 'i' → logprob: -1.16865873336792
    3. '       ' → logprob: -1.79365873336792
    4. 'start' → logprob: -2.54365873336792
    5. 'v' → logprob: -4.29365873336792
    6. 'j' → logprob: -4.29365873336792
    7. 'idx' → logprob: -4.66865873336792
    8. '   ' → logprob: -6.16865873336792
    9. 'l' → logprob: -6.29365873336792
    10. 'prev' → logprob: -6.79365873336792

Token 3640: ' vowels' (ID: 176245)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.2955344021320343
    2. 'for' → logprob: -1.545534372329712
    3. '_' → logprob: -4.045534610748291
    4. 'v' → logprob: -5.670534610748291
    5. 'if' → logprob: -5.670534610748291
    6. '```' → logprob: -5.920534610748291
    7. '   ' → logprob: -6.045534610748291
    8. ' for' → logprob: -6.670534610748291
    9. '[i' → logprob: -7.170534610748291
    10. '#' → logprob: -7.170534610748291

Token 3641: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13687433302402496
    2. 'for' → logprob: -2.2618744373321533
    3. 'i' → logprob: -4.261874198913574
    4. '   ' → logprob: -5.636874198913574
    5. ' for' → logprob: -6.011874198913574
    6. 'v' → logprob: -6.261874198913574
    7. '```' → logprob: -7.386874198913574
    8. 'idx' → logprob: -8.136874198913574
    9. 'def' → logprob: -8.761874198913574
    10. '           ' → logprob: -9.386874198913574

Token 3642: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5733264684677124
    2. '       ' → logprob: -1.9483264684677124
    3. '           ' → logprob: -2.573326587677002
    4. ''' → logprob: -2.948326587677002
    5. '[i' → logprob: -2.948326587677002
    6. ':
' → logprob: -2.948326587677002
    7. '{
' → logprob: -3.073326587677002
    8. ' for' → logprob: -3.073326587677002
    9. 'i' → logprob: -3.198326587677002
    10. '   ' → logprob: -3.448326587677002

Token 3643: 'oku' (ID: 13454)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.4613717794418335
    2. ']' → logprob: -1.9613717794418335
    3. '       ' → logprob: -1.9613717794418335
    4. 'i' → logprob: -2.461371898651123
    5. '           ' → logprob: -2.836371898651123
    6. '[i' → logprob: -2.961371898651123
    7. ':
' → logprob: -3.211371898651123
    8. '   ' → logprob: -3.461371898651123
    9. '=' → logprob: -3.836371898651123
    10. ')' → logprob: -3.961371898651123

Token 3644: 'on' (ID: 263)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0965484231710434
    2. 'for' → logprob: -3.221548318862915
    3. ' for' → logprob: -4.221548557281494
    4. ':
' → logprob: -4.596548557281494
    5. '   ' → logprob: -5.096548557281494
    6. '           ' → logprob: -5.596548557281494
    7. ':' → logprob: -5.846548557281494
    8. '[i' → logprob: -5.971548557281494
    9. '=' → logprob: -6.596548557281494
    10. ']' → logprob: -6.721548557281494

Token 3645: ' excluded' (ID: 52015)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09123443067073822
    2. 'i' → logprob: -3.3412344455718994
    3. 'for' → logprob: -3.3412344455718994
    4. 'v' → logprob: -5.34123420715332
    5. '   ' → logprob: -5.59123420715332
    6. ' for' → logprob: -6.59123420715332
    7. 'idx' → logprob: -6.59123420715332
    8. '
' → logprob: -6.96623420715332
    9. '```' → logprob: -7.21623420715332
    10. 'prev' → logprob: -7.34123420715332

Token 3646: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3100334405899048
    2. 'i' → logprob: -1.9350334405899048
    3. 'for' → logprob: -2.1850333213806152
    4. 'v' → logprob: -5.685033321380615
    5. 'idx' → logprob: -6.185033321380615
    6. 'prev' → logprob: -6.560033321380615
    7. '   ' → logprob: -6.935033321380615
    8. 'start' → logprob: -7.310033321380615
    9. 'j' → logprob: -8.560033798217773
    10. '```' → logprob: -8.810033798217773

Token 3647: ' no' (ID: 860)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0832526758313179
    2. 'i' → logprob: -2.8332526683807373
    3. 'v' → logprob: -4.458252906799316
    4. 'for' → logprob: -5.708252906799316
    5. 'idx' → logprob: -5.833252906799316
    6. 'prev' → logprob: -6.958252906799316
    7. '#' → logprob: -7.833252906799316
    8. 'j' → logprob: -8.083252906799316
    9. 'start' → logprob: -8.208252906799316
    10. '   ' → logprob: -8.208252906799316

Token 3648: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1348510980606079
    2. 'for' → logprob: -2.5098509788513184
    3. ' for' → logprob: -3.8848509788513184
    4. 'i' → logprob: -5.009850978851318
    5. 'v' → logprob: -5.134850978851318
    6. '   ' → logprob: -5.259850978851318
    7. '
' → logprob: -5.884850978851318
    8. '```' → logprob: -6.259850978851318
    9. ' i' → logprob: -8.009851455688477
    10. '           ' → logprob: -8.259851455688477

Token 3649: 'oku' (ID: 13454)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0552888885140419
    2. 'for' → logprob: -3.430288791656494
    3. '           ' → logprob: -5.180288791656494
    4. '
' → logprob: -5.180288791656494
    5. '   ' → logprob: -6.430288791656494
    6. ' for' → logprob: -6.930288791656494
    7. '```' → logprob: -6.930288791656494
    8. '               ' → logprob: -7.180288791656494
    9. 'x' → logprob: -7.305288791656494
    10. 't' → logprob: -7.680288791656494

Token 3650: 'on' (ID: 263)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019763201475143433
    2. 'for' → logprob: -4.519762992858887
    3. ' for' → logprob: -5.894762992858887
    4. '   ' → logprob: -6.019762992858887
    5. '           ' → logprob: -6.894762992858887
    6. '        
' → logprob: -7.519762992858887
    7. '
' → logprob: -7.644762992858887
    8. ':
' → logprob: -8.644762992858887
    9. '```' → logprob: -8.644762992858887
    10. '               ' → logprob: -9.144762992858887

Token 3651: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009858200326561928
    2. 'i' → logprob: -5.384858131408691
    3. 'for' → logprob: -5.634858131408691
    4. 'v' → logprob: -7.259858131408691
    5. 'prev' → logprob: -7.884858131408691
    6. 'idx' → logprob: -8.884858131408691
    7. 'start' → logprob: -9.259858131408691
    8. '```' → logprob: -9.384858131408691
    9. '   ' → logprob: -9.634858131408691
    10. 'a' → logprob: -10.134858131408691

Token 3652: ' long' (ID: 1701)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4576627016067505
    2. 'for' → logprob: -1.5826627016067505
    3. '#' → logprob: -2.082662582397461
    4. ' for' → logprob: -2.207662582397461
    5. '
' → logprob: -2.582662582397461
    6. 'v' → logprob: -3.582662582397461
    7. 'True' → logprob: -3.582662582397461
    8. '   ' → logprob: -3.707662582397461
    9. ':
' → logprob: -3.707662582397461
    10. '           ' → logprob: -4.207662582397461

Token 3653: ' vowel' (ID: 165542)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005554844159632921
    2. 'for' → logprob: -6.005554676055908
    3. ' for' → logprob: -6.755554676055908
    4. '   ' → logprob: -7.380554676055908
    5. '        
' → logprob: -7.880554676055908
    6. '
' → logprob: -8.130555152893066
    7. 'i' → logprob: -9.005555152893066
    8. ' i' → logprob: -9.380555152893066
    9. 'v' → logprob: -9.755555152893066
    10. 'def' → logprob: -9.755555152893066

Token 3654: ' inside' (ID: 6772)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09304650872945786
    2. 'i' → logprob: -3.0930464267730713
    3. 'for' → logprob: -3.5930464267730713
    4. 'v' → logprob: -4.96804666519165
    5. 'start' → logprob: -5.59304666519165
    6. 'idx' → logprob: -6.21804666519165
    7. 'prev' → logprob: -6.71804666519165
    8. '   ' → logprob: -7.59304666519165
    9. '```' → logprob: -8.468046188354492
    10. 'pos' → logprob: -8.468046188354492

Token 3655: ' such' (ID: 2238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1618231236934662
    2. 'for' → logprob: -2.411823034286499
    3. 'i' → logprob: -3.036823034286499
    4. 'v' → logprob: -5.786823272705078
    5. 'start' → logprob: -5.786823272705078
    6. 'idx' → logprob: -6.161823272705078
    7. 'prev' → logprob: -6.661823272705078
    8. 'pos' → logprob: -7.786823272705078
    9. 'seq' → logprob: -7.911823272705078
    10. 'j' → logprob: -8.036823272705078

Token 3656: ' sequence' (ID: 16281)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056632641702890396
    2. 'for' → logprob: -3.3066327571868896
    3. ' for' → logprob: -4.8066325187683105
    4. 'i' → logprob: -5.6816325187683105
    5. 'v' → logprob: -5.9316325187683105
    6. '   ' → logprob: -6.1816325187683105
    7. '
' → logprob: -7.4316325187683105
    8. '        
' → logprob: -8.181632995605469
    9. '```' → logprob: -8.556632995605469
    10. ' i' → logprob: -8.681632995605469

Token 3657: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5788955688476562
    2. 'i' → logprob: -1.4538955688476562
    3. 'for' → logprob: -1.7038955688476562
    4. 'v' → logprob: -4.703895568847656
    5. 'idx' → logprob: -5.078895568847656
    6. 'start' → logprob: -5.828895568847656
    7. 'prev' → logprob: -6.328895568847656
    8. 'seq' → logprob: -6.703895568847656
    9. '   ' → logprob: -7.453895568847656
    10. 'j' → logprob: -7.453895568847656

Token 3658: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027318825013935566
    2. 'for' → logprob: -6.752731800079346
    3. '
' → logprob: -7.127731800079346
    4. '        
' → logprob: -8.127732276916504
    5. '   ' → logprob: -8.627732276916504
    6. ' for' → logprob: -8.877732276916504
    7. '```' → logprob: -9.627732276916504
    8. 'i' → logprob: -10.502732276916504
    9. '           ' → logprob: -10.877732276916504
    10. '    
' → logprob: -11.877732276916504

Token 3659: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05293732509016991
    2. 'for' → logprob: -3.3029372692108154
    3. 'i' (adapté à ' i') → logprob: -4.3029375076293945
    4. '
' → logprob: -8.302937507629395
    5. '   ' → logprob: -8.302937507629395
    6. '```' → logprob: -8.552937507629395
    7. 'v' → logprob: -8.802937507629395
    8. 'start' → logprob: -9.427937507629395
    9. 'prev' → logprob: -9.427937507629395
    10. 'idx' → logprob: -9.927937507629395

Token 3660: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05692627653479576
    2. ' =' → logprob: -3.1819262504577637
    3. '+=' → logprob: -4.806926250457764
    4. ' +=' → logprob: -5.181926250457764
    5. '+' → logprob: -11.431926727294922
    6. 'while' → logprob: -11.556926727294922
    7. ':' → logprob: -12.931926727294922
    8. '   ' → logprob: -13.181926727294922
    9. '
' → logprob: -13.306926727294922
    10. '=i' → logprob: -13.306926727294922

Token 3661: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -17.7500057220459
    4. '=' → logprob: -18.6250057220459
    5. '   ' → logprob: -18.8750057220459
    6. '۰' → logprob: -19.2500057220459
    7. 'i' → logprob: -19.7500057220459
    8. '[' → logprob: -19.8750057220459
    9. '(' → logprob: -19.8750057220459
    10. '０' → logprob: -20.0000057220459

Token 3662: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.625004768371582
    3. 'n' → logprob: -14.625004768371582
    4. '=' → logprob: -15.500004768371582
    5. 'i' → logprob: -15.625004768371582
    6. '```' → logprob: -16.125003814697266
    7. '[' → logprob: -17.062503814697266
    8. 'def' → logprob: -17.062503814697266
    9. '#' → logprob: -17.250003814697266
    10. '   ' → logprob: -17.812503814697266

Token 3663: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0005230080569162965
    2. ' while' → logprob: -8.12552261352539
    3. '
' → logprob: -9.00052261352539
    4. 'n' → logprob: -9.62552261352539
    5. '```' → logprob: -10.25052261352539
    6. 'While' → logprob: -13.62552261352539
    7. '<n' → logprob: -15.00052261352539
    8. ' n' → logprob: -15.62552261352539
    9. '	while' → logprob: -16.12552261352539
    10. '``' → logprob: -16.50052261352539

Token 3664: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.009360295720398426
    2. 'n' → logprob: -4.759360313415527
    3. ' while' → logprob: -7.509360313415527
    4. '
' → logprob: -9.259360313415527
    5. '```' → logprob: -9.259360313415527
    6. ' n' → logprob: -12.509360313415527
    7. '``' → logprob: -14.134360313415527
    8. '   ' → logprob: -14.259360313415527
    9. 'While' → logprob: -14.259360313415527
    10. '	while' → logprob: -14.634360313415527

Token 3665: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0019299437990412116
    2. 'n' → logprob: -6.251929759979248
    3. ' while' → logprob: -14.001930236816406
    4. '```' → logprob: -15.251930236816406
    5. '
' → logprob: -15.376930236816406
    6. 'While' → logprob: -17.501930236816406
    7. '	while' → logprob: -17.751930236816406
    8. '   ' → logprob: -19.251930236816406
    9. '``' → logprob: -19.876930236816406
    10. 'length' → logprob: -20.001930236816406

Token 3666: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002036595979006961
    2. ' i' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.875204086303711
    4. '	i' → logprob: -17.50020408630371
    5. ' ' → logprob: -19.87520408630371
    6. ' ' → logprob: -21.37520408630371
    7. '```' → logprob: -21.62520408630371
    8. '(i' → logprob: -21.87520408630371
    9. '  ' → logprob: -22.00020408630371
    10. '       ' → logprob: -22.50020408630371

Token 3667: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6488980650901794
    2. '<' → logprob: -0.7738980650901794
    3. '<len' → logprob: -4.898898124694824
    4. '<n' → logprob: -5.148898124694824
    5. '<=' → logprob: -6.398898124694824
    6. ' <=' → logprob: -7.148898124694824
    7. '<i' → logprob: -8.398898124694824
    8. '<size' → logprob: -10.148898124694824
    9. '<N' → logprob: -10.398898124694824
    10. ' <
' → logprob: -10.648898124694824

Token 3668: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002712297427933663
    2. 'len' → logprob: -8.25027084350586
    3. ' n' → logprob: -11.62527084350586
    4. '   ' → logprob: -14.25027084350586
    5. '       ' → logprob: -15.87527084350586
    6. '```' → logprob: -16.87527084350586
    7. '(n' → logprob: -17.37527084350586
    8. '	n' → logprob: -17.50027084350586
    9. ' len' → logprob: -17.87527084350586
    10. '<n' → logprob: -18.25027084350586

Token 3669: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1676701158285141
    2. ':' → logprob: -2.0426700115203857
    3. '       ' → logprob: -4.542670249938965
    4. '           ' → logprob: -4.917670249938965
    5. ' and' → logprob: -6.292670249938965
    6. '   ' → logprob: -6.292670249938965
    7. 'and' → logprob: -7.542670249938965
    8. '=' → logprob: -7.667670249938965
    9. '```' → logprob: -7.917670249938965
    10. ' ' → logprob: -8.542670249938965

Token 3670: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7257660627365112
    2. '       ' → logprob: -0.7257660627365112
    3. '```' → logprob: -3.850766181945801
    4. '           ' → logprob: -5.350766181945801
    5. ' ' → logprob: -5.850766181945801
    6. ' if' → logprob: -6.100766181945801
    7. 'if' → logprob: -7.475766181945801
    8. '``' → logprob: -9.3507661819458
    9. ':' → logprob: -9.8507661819458
    10. '
' → logprob: -9.9757661819458

Token 3671: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20571322739124298
    2. '   ' → logprob: -2.5807132720947266
    3. 'j' → logprob: -3.0807132720947266
    4. '       ' → logprob: -3.5807132720947266
    5. '           ' → logprob: -3.5807132720947266
    6. '```' → logprob: -5.455713272094727
    7. ' if' → logprob: -5.955713272094727
    8. '#' (adapté à ' #') → logprob: -7.080713272094727
    9. 'l' → logprob: -8.830713272094727
    10. 'm' → logprob: -9.330713272094727

Token 3672: ' skip' (ID: 16677)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006910025607794523
    2. '           ' → logprob: -5.7569098472595215
    3. '       ' → logprob: -6.2569098472595215
    4. '   ' → logprob: -7.1319098472595215
    5. ' if' → logprob: -7.7569098472595215
    6. 'v' → logprob: -8.00691032409668
    7. 'c' → logprob: -9.75691032409668
    8. 'j' → logprob: -9.88191032409668
    9. 'start' → logprob: -10.13191032409668
    10. '```' → logprob: -10.38191032409668

Token 3673: ' non' (ID: 2893)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.43351781368255615
    2. 'i' → logprob: -1.8085178136825562
    3. 'not' → logprob: -2.8085179328918457
    4. 'n' → logprob: -2.8085179328918457
    5. '1' → logprob: -3.1835179328918457
    6. 'un' → logprob: -4.558517932891846
    7. '           ' → logprob: -5.808517932891846
    8. ' if' → logprob: -6.058517932891846
    9. 'while' → logprob: -6.058517932891846
    10. 'True' → logprob: -6.558517932891846

Token 3674: ' a' (ID: 261)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.003519652644172311
    2. 'vo' → logprob: -6.003519535064697
    3. '_v' → logprob: -8.503520011901855
    4. 'i' → logprob: -8.503520011901855
    5. ' vowels' → logprob: -8.878520011901855
    6. 'if' → logprob: -9.128520011901855
    7. '_vo' → logprob: -9.628520011901855
    8. 'm' → logprob: -9.878520011901855
    9. 'while' → logprob: -10.503520011901855
    10. '```' → logprob: -10.503520011901855

Token 3675: '/o' (ID: 30506)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.35492706298828125
    2. 'nd' → logprob: -2.2299270629882812
    3. 'a' → logprob: -2.9799270629882812
    4. 'or' → logprob: -3.1049270629882812
    5. 'if' → logprob: -3.8549270629882812
    6. ' and' → logprob: -4.104927062988281
    7. 'i' → logprob: -4.729927062988281
    8. '           ' → logprob: -4.979927062988281
    9. '       ' → logprob: -5.229927062988281
    10. 'and' → logprob: -5.479927062988281

Token 3676: ' vowels' (ID: 176245)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.557228684425354
    2. 'if' → logprob: -1.432228684425354
    3. ' if' → logprob: -2.8072285652160645
    4. ' and' → logprob: -3.0572285652160645
    5. ' or' → logprob: -3.9322285652160645
    6. ':
' → logprob: -4.0572285652160645
    7. '               ' → logprob: -4.4322285652160645
    8. '          ' → logprob: -5.1822285652160645
    9. 'v' → logprob: -5.3072285652160645
    10. '       ' → logprob: -5.4322285652160645

Token 3677: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03376983106136322
    2. 'if' → logprob: -4.783769607543945
    3. ' if' → logprob: -5.158769607543945
    4. 'i' → logprob: -5.283769607543945
    5. '
' → logprob: -5.533769607543945
    6. ':
' → logprob: -5.658769607543945
    7. '=' → logprob: -6.783769607543945
    8. ':' → logprob: -6.783769607543945
    9. '               ' → logprob: -7.033769607543945
    10. '       ' → logprob: -7.408769607543945

Token 3678: ' vowels' (ID: 176245)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0640590712428093
    2. '(not' → logprob: -2.939059019088745
    3. ' not' → logprob: -5.564059257507324
    4. 'vo' → logprob: -6.064059257507324
    5. '(vo' → logprob: -6.689059257507324
    6. '(i' → logprob: -7.439059257507324
    7. 'i' → logprob: -7.564059257507324
    8. 'un' → logprob: -8.439059257507324
    9. '(' → logprob: -9.564059257507324
    10. 'is' → logprob: -9.939059257507324

Token 3679: ' not' (ID: 625)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9375689625740051
    2. '           ' → logprob: -1.5625689029693604
    3. ' if' → logprob: -1.9375689029693604
    4. ' or' → logprob: -2.3125689029693604
    5. '[i' → logprob: -2.4375689029693604
    6. '==' → logprob: -3.9375689029693604
    7. 'or' → logprob: -4.8125691413879395
    8. '               ' → logprob: -5.0625691413879395
    9. ':
' → logprob: -5.3125691413879395
    10. ' and' → logprob: -5.4375691413879395

Token 3680: ' at' (ID: 540)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.005382453091442585
    2. 'vo' → logprob: -6.005382537841797
    3. ' in' → logprob: -6.255382537841797
    4. '{'' → logprob: -8.130382537841797
    5. ''in' → logprob: -8.630382537841797
    6. '('' → logprob: -8.630382537841797
    7. 'a' → logprob: -9.005382537841797
    8. ''' → logprob: -9.880382537841797
    9. 'i' → logprob: -10.630382537841797
    10. ''a' → logprob: -10.880382537841797

Token 3681: ' start' (ID: 1604)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009953108616173267
    2. 'm' → logprob: -5.509953022003174
    3. 'vo' → logprob: -6.134953022003174
    4. 'start' → logprob: -6.509953022003174
    5. 'current' → logprob: -6.759953022003174
    6. '0' → logprob: -7.884953022003174
    7. 'index' → logprob: -8.759953498840332
    8. 'position' → logprob: -8.884953498840332
    9. ' i' → logprob: -9.509953498840332
    10. 'positions' → logprob: -10.009953498840332

Token 3682: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7645302414894104
    2. 'if' → logprob: -1.5145301818847656
    3. ' if' → logprob: -2.5145301818847656
    4. 'of' → logprob: -2.7645301818847656
    5. ' of' → logprob: -3.1395301818847656
    6. ':
' → logprob: -3.8895301818847656
    7. '=' → logprob: -4.014530181884766
    8. '               ' → logprob: -4.264530181884766
    9. 'm' → logprob: -4.389530181884766
    10. 'in' → logprob: -4.889530181884766

Token 3683: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0033538052812218666
    2. ' mora' → logprob: -7.003353595733643
    3. 'vo' → logprob: -7.753353595733643
    4. 'word' → logprob: -8.0033540725708
    5. 'mor' → logprob: -8.0033540725708
    6. '   ' → logprob: -8.3783540725708
    7. ' ' → logprob: -8.8783540725708
    8. ' mor' → logprob: -9.0033540725708
    9. 'line' → logprob: -9.0033540725708
    10. 'v' → logprob: -9.1283540725708

Token 3684: 'as' (ID: 288)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10278428345918655
    2. 'as' → logprob: -2.3527843952178955
    3. '   ' → logprob: -6.852784156799316
    4. 'm' → logprob: -7.602784156799316
    5. 's' → logprob: -8.727784156799316
    6. '           ' → logprob: -8.977784156799316
    7. 'ra' → logprob: -9.102784156799316
    8. '
' → logprob: -9.602784156799316
    9. '{
' → logprob: -9.602784156799316
    10. '(m' → logprob: -9.852784156799316

Token 3685: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14961935579776764
    2. ':
' → logprob: -2.6496193408966064
    3. ' if' → logprob: -3.5246193408966064
    4. 'if' → logprob: -3.7746193408966064
    5. ':' → logprob: -5.3996195793151855
    6. '       ' → logprob: -5.6496195793151855
    7. ' and' → logprob: -6.3996195793151855
    8. '               ' → logprob: -6.6496195793151855
    9. '=' → logprob: -7.1496195793151855
    10. '[i' → logprob: -7.2746195793151855

Token 3686: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026229120790958405
    2. ':
' → logprob: -4.901228904724121
    3. ' if' → logprob: -5.276228904724121
    4. '               ' → logprob: -5.776228904724121
    5. '```' → logprob: -5.901228904724121
    6. ' and' → logprob: -6.151228904724121
    7. 'if' → logprob: -6.776228904724121
    8. ':' → logprob: -7.026228904724121
    9. '   ' → logprob: -7.151228904724121
    10. '       ' → logprob: -7.776228904724121

Token 3687: ' v' (ID: 323)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021782217547297478
    2. ' if' → logprob: -4.271782398223877
    3. 'if' → logprob: -5.021782398223877
    4. '   ' → logprob: -7.521782398223877
    5. ' ' → logprob: -8.271781921386719
    6. '               ' → logprob: -9.271781921386719
    7. '       ' → logprob: -9.521781921386719
    8. '```' → logprob: -11.271781921386719
    9. '  ' → logprob: -13.021781921386719
    10. '          ' → logprob: -13.146781921386719

Token 3688: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36709141731262207
    2. '=' → logprob: -1.242091417312622
    3. '=i' → logprob: -5.242091178894043
    4. 'f' → logprob: -5.742091178894043
    5. '           ' → logprob: -6.117091178894043
    6. '=v' → logprob: -6.492091178894043
    7. 'v' → logprob: -6.742091178894043
    8. '[i' → logprob: -7.617091178894043
    9. ')' → logprob: -7.742091178894043
    10. ' ==' → logprob: -7.867091178894043

Token 3689: ' vowels' (ID: 176245)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0048133921809494495
    2. ' vowels' → logprob: -5.379813194274902
    3. 'get' → logprob: -8.629813194274902
    4. ' get' → logprob: -12.129813194274902
    5. ' v' → logprob: -12.504813194274902
    6. '   ' → logprob: -13.004813194274902
    7. '''' → logprob: -13.629813194274902
    8. '(v' → logprob: -14.504813194274902
    9. 'votes' → logprob: -15.629813194274902
    10. '	v' → logprob: -15.754813194274902

Token 3690: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.961759259458631e-06
    2. '[' → logprob: -13.750004768371582
    3. 'i' → logprob: -13.750004768371582
    4. '```' → logprob: -14.000004768371582
    5. '[
' → logprob: -14.125004768371582
    6. '           ' → logprob: -14.625004768371582
    7. ' [' → logprob: -14.875004768371582
    8. '   ' → logprob: -15.875004768371582
    9. '       ' → logprob: -16.7500057220459
    10. '
' → logprob: -16.8750057220459

Token 3691: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.20261405408382416
    2. ']' → logprob: -1.7026140689849854
    3. '           ' → logprob: -6.827613830566406
    4. '[i' → logprob: -9.577613830566406
    5. ']==' → logprob: -11.202613830566406
    6. ']
' → logprob: -11.452613830566406
    7. '       ' → logprob: -11.827613830566406
    8. 'if' → logprob: -12.702613830566406
    9. 'i' → logprob: -13.702613830566406
    10. '               ' → logprob: -13.702613830566406

Token 3692: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.033373404294252396
    2. ' ==' → logprob: -4.1583733558654785
    3. '==' → logprob: -4.1583733558654785
    4. '```' → logprob: -7.1583733558654785
    5. '
' → logprob: -8.533373832702637
    6. 'if' → logprob: -9.283373832702637
    7. ' =' → logprob: -9.658373832702637
    8. ' if' → logprob: -9.908373832702637
    9. '{
' → logprob: -10.033373832702637
    10. '[i' → logprob: -10.158373832702637

Token 3693: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9769356846809387
    2. 'if' (adapté à ' if') → logprob: -1.226935625076294
    3. 'v' → logprob: -1.601935625076294
    4. '==' → logprob: -2.976935625076294
    5. 'in' → logprob: -3.976935625076294
    6. ' if' → logprob: -3.976935625076294
    7. '!=' → logprob: -4.726935863494873
    8. 'not' → logprob: -4.851935863494873
    9. ' not' → logprob: -5.476935863494873
    10. ' in' → logprob: -5.476935863494873

Token 3694: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.023522648960351944
    2. ' v' → logprob: -3.7735226154327393
    3. 'not' → logprob: -9.14852237701416
    4. '   ' → logprob: -9.77352237701416
    5. ' not' → logprob: -10.14852237701416
    6. '           ' → logprob: -10.27352237701416
    7. '(v' → logprob: -11.14852237701416
    8. '    ' → logprob: -12.39852237701416
    9. '       ' → logprob: -12.64852237701416
    10. 'vo' → logprob: -12.77352237701416

Token 3695: ' not' (ID: 625)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11542601883411407
    2. 'in' → logprob: -2.2404260635375977
    3. '==' → logprob: -6.615426063537598
    4. ' ==' → logprob: -7.240426063537598
    5. ' not' → logprob: -8.490426063537598
    6. ' ' → logprob: -9.990426063537598
    7. '=='' → logprob: -10.115426063537598
    8. '           ' → logprob: -10.240426063537598
    9. 'not' → logprob: -10.240426063537598
    10. '```' → logprob: -10.490426063537598

Token 3696: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2816372811794281
    2. 'in' → logprob: -1.4066373109817505
    3. ' {'' → logprob: -8.656637191772461
    4. '{'' → logprob: -8.906637191772461
    5. ',' → logprob: -10.656637191772461
    6. '           ' → logprob: -11.031637191772461
    7. '['' → logprob: -11.281637191772461
    8. 'to' → logprob: -11.406637191772461
    9. 'In' → logprob: -11.656637191772461
    10. ')' → logprob: -11.781637191772461

Token 3697: ' {'' (ID: 11881)
  Prédit: '{''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{'' → logprob: -3.7697225252486533e-06
    2. ' {'' → logprob: -12.750003814697266
    3. '{' → logprob: -14.750003814697266
    4. '('' → logprob: -15.750003814697266
    5. '({'' → logprob: -16.125003814697266
    6. '{"' → logprob: -16.750003814697266
    7. '{
' → logprob: -16.875003814697266
    8. '['' → logprob: -17.250003814697266
    9. ''a' → logprob: -17.500003814697266
    10. '   ' → logprob: -17.750003814697266

Token 3698: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0031813981477171183
    2. ''a' → logprob: -5.753181457519531
    3. ' a' → logprob: -13.253181457519531
    4. ''' → logprob: -14.128181457519531
    5. '{'' → logprob: -14.128181457519531
    6. '['' → logprob: -15.503181457519531
    7. '('' → logprob: -17.50318145751953
    8. '   ' → logprob: -17.50318145751953
    9. '	a' → logprob: -17.62818145751953
    10. ' ' → logprob: -17.75318145751953

Token 3699: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.026662399992346764
    2. '',' → logprob: -3.6516623497009277
    3. ',' → logprob: -8.901662826538086
    4. ''' → logprob: -9.276662826538086
    5. ','' → logprob: -10.026662826538086
    6. '',
' → logprob: -10.276662826538086
    7. 'a' → logprob: -11.151662826538086
    8. '',"' → logprob: -11.401662826538086
    9. ''o' → logprob: -11.651662826538086
    10. 'o' → logprob: -12.151662826538086

Token 3700: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -7.290784560609609e-05
    2. ''o' → logprob: -10.000072479248047
    3. ' o' → logprob: -11.000072479248047
    4. 'i' → logprob: -12.000072479248047
    5. ''' → logprob: -13.875072479248047
    6. '
' → logprob: -14.000072479248047
    7. ' ' → logprob: -14.250072479248047
    8. '	o' → logprob: -14.625072479248047
    9. '   ' → logprob: -14.875072479248047
    10. ',o' → logprob: -15.375072479248047

Token 3701: ''}' (ID: 17352)
  Prédit: ''}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.029740653932094574
    2. '}' → logprob: -4.029740810394287
    3. '','' → logprob: -4.654740810394287
    4. '',' → logprob: -6.529740810394287
    5. ','' → logprob: -8.654740333557129
    6. '':
' → logprob: -8.904740333557129
    7. '']:
' → logprob: -9.654740333557129
    8. ''' → logprob: -9.779740333557129
    9. ''}
' → logprob: -10.404740333557129
    10. ',' → logprob: -11.029740333557129

Token 3702: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.02506103925406933
    2. ':' → logprob: -4.400061130523682
    3. ' and' → logprob: -5.150061130523682
    4. '               ' → logprob: -5.650061130523682
    5. '           ' → logprob: -5.900061130523682
    6. ' or' → logprob: -8.525060653686523
    7. 'and' → logprob: -9.275060653686523
    8. '       ' → logprob: -10.400060653686523
    9. '):
' → logprob: -10.900060653686523
    10. '              ' → logprob: -11.150060653686523

Token 3703: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5076344609260559
    2. ' and' → logprob: -1.5076344013214111
    3. '           ' → logprob: -2.132634401321411
    4. ':
' → logprob: -3.007634401321411
    5. ':' → logprob: -5.63263463973999
    6. 'and' → logprob: -6.00763463973999
    7. '```' → logprob: -7.38263463973999
    8. '{
' → logprob: -7.88263463973999
    9. '                   ' → logprob: -8.132634162902832
    10. ' ' → logprob: -8.507634162902832

Token 3704: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.024097580462694168
    2. '               ' → logprob: -4.149097442626953
    3. '           ' → logprob: -5.024097442626953
    4. '   ' → logprob: -7.399097442626953
    5. '                   ' → logprob: -8.024097442626953
    6. ' i' → logprob: -8.399097442626953
    7. 'if' → logprob: -9.899097442626953
    8. '       ' → logprob: -10.024097442626953
    9. '```' → logprob: -10.024097442626953
    10. '             ' → logprob: -10.899097442626953

Token 3705: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018150413408875465
    2. ' +=' → logprob: -4.018150329589844
    3. ']+=' → logprob: -15.143150329589844
    4. '=' → logprob: -16.268150329589844
    5. '+' → logprob: -16.893150329589844
    6. '   ' → logprob: -17.018150329589844
    7. '```' → logprob: -18.268150329589844
    8. '       ' → logprob: -18.893150329589844
    9. '+="' → logprob: -19.268150329589844
    10. 'i' → logprob: -19.393150329589844

Token 3706: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -16.25
    4. '   ' → logprob: -19.125
    5. '１' → logprob: -19.5
    6. '۱' → logprob: -20.5
    7. '(' → logprob: -21.0
    8. '`' → logprob: -21.4375
    9. '=' → logprob: -21.5
    10. '0' → logprob: -21.6875

Token 3707: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.5
    3. '```' → logprob: -16.625
    4. '１' → logprob: -19.25
    5. '=' → logprob: -19.875
    6. 'def' → logprob: -20.25
    7. '۱' → logprob: -20.875
    8. '   ' → logprob: -20.875
    9. 's' → logprob: -21.125
    10. 'a' → logprob: -21.25

Token 3708: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007145775598473847
    2. '           ' → logprob: -7.8757147789001465
    3. '                   ' → logprob: -8.750714302062988
    4. 'continue' → logprob: -9.750714302062988
    5. ' continue' → logprob: -10.625714302062988
    6. '
' → logprob: -11.375714302062988
    7. ' ' → logprob: -11.375714302062988
    8. ':
' → logprob: -11.500714302062988
    9. '```' → logprob: -11.750714302062988
    10. '   ' → logprob: -11.875714302062988

Token 3709: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07326822727918625
    2. ':
' → logprob: -2.823268175125122
    3. '           ' → logprob: -5.448268413543701
    4. ':' → logprob: -5.948268413543701
    5. ' and' → logprob: -6.073268413543701
    6. '                   ' → logprob: -7.198268413543701
    7. '```' → logprob: -7.448268413543701
    8. ' ' → logprob: -8.698267936706543
    9. 'and' → logprob: -8.698267936706543
    10. '   ' → logprob: -9.448267936706543

Token 3710: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.01736905798316002
    2. '               ' → logprob: -4.142369270324707
    3. ' continue' → logprob: -6.767369270324707
    4. '           ' → logprob: -8.892369270324707
    5. '	continue' → logprob: -10.517369270324707
    6. '                   ' → logprob: -12.017369270324707
    7. '
' → logprob: -13.017369270324707
    8. 'contin' → logprob: -13.017369270324707
    9. '              ' → logprob: -13.267369270324707
    10. '   ' → logprob: -13.392369270324707

Token 3711: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12703078985214233
    2. 'j' → logprob: -2.502030849456787
    3. 'if' → logprob: -3.877030849456787
    4. '```' → logprob: -4.877030849456787
    5. ' j' → logprob: -5.752030849456787
    6. '               ' → logprob: -6.627030849456787
    7. ' if' → logprob: -6.877030849456787
    8. '
' → logprob: -7.252030849456787
    9. '{
' → logprob: -7.752030849456787
    10. '+' → logprob: -8.002030372619629

Token 3712: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021746519953012466
    2. '```' → logprob: -4.271746635437012
    3. 'if' → logprob: -5.646746635437012
    4. 'j' → logprob: -5.896746635437012
    5. '   ' → logprob: -7.896746635437012
    6. ' if' → logprob: -8.521746635437012
    7. ' ' → logprob: -8.896746635437012
    8. '``' → logprob: -9.021746635437012
    9. ' j' → logprob: -9.146746635437012
    10. '               ' → logprob: -9.396746635437012

Token 3713: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45157450437545776
    2. 'if' → logprob: -1.0765745639801025
    3. 'j' → logprob: -4.076574325561523
    4. '#' (adapté à ' #') → logprob: -5.576574325561523
    5. ' if' → logprob: -7.326574325561523
    6. 'start' → logprob: -7.701574325561523
    7. '   ' → logprob: -8.076574325561523
    8. '```' → logprob: -8.576574325561523
    9. 'length' → logprob: -10.076574325561523
    10. 'count' → logprob: -10.701574325561523

Token 3714: ' mora' (ID: 47294)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2598642110824585
    2. '           ' → logprob: -1.5098642110824585
    3. '#' → logprob: -5.759864330291748
    4. 'j' → logprob: -6.009864330291748
    5. 'start' → logprob: -6.384864330291748
    6. ' if' → logprob: -8.13486385345459
    7. '   ' → logprob: -8.88486385345459
    8. '```' → logprob: -9.63486385345459
    9. 'while' → logprob: -11.38486385345459
    10. '	if' → logprob: -11.63486385345459

Token 3715: ' must' (ID: 2804)
  Prédit: '_start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.7264585494995117
    2. 'start' → logprob: -1.7264585494995117
    3. 'starts' → logprob: -2.2264585494995117
    4. 'startswith' → logprob: -2.3514585494995117
    5. ' =' → logprob: -2.7264585494995117
    6. '=' → logprob: -3.3514585494995117
    7. '           ' → logprob: -4.476458549499512
    8. '.startswith' → logprob: -5.101458549499512
    9. '_first' → logprob: -5.976458549499512
    10. 'if' → logprob: -6.476458549499512

Token 3716: ' start' (ID: 1604)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.0400341749191284
    2. 'start' → logprob: -1.5400341749191284
    3. ' in' → logprob: -2.415034294128418
    4. 'in' → logprob: -2.665034294128418
    5. '_start' → logprob: -2.790034294128418
    6. ' start' → logprob: -2.790034294128418
    7. '.startswith' → logprob: -3.415034294128418
    8. '[i' → logprob: -3.540034294128418
    9. ' have' → logprob: -3.915034294128418
    10. 'have' → logprob: -4.415034294128418

Token 3717: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.03947485238313675
    2. 's' → logprob: -3.4144749641418457
    3. '=' → logprob: -6.664474964141846
    4. 'if' → logprob: -6.914474964141846
    5. ' with' → logprob: -7.039474964141846
    6. '(s' → logprob: -7.539474964141846
    7. '(m' → logprob: -7.539474964141846
    8. 'm' → logprob: -8.289474487304688
    9. '==' → logprob: -8.664474487304688
    10. '           ' → logprob: -8.789474487304688

Token 3718: ' vo' (ID: 778)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.0046733953058719635
    2. 'm' → logprob: -6.754673480987549
    3. ' vo' → logprob: -7.004673480987549
    4. 'len' → logprob: -7.254673480987549
    5. '''' → logprob: -8.00467300415039
    6. '(vo' → logprob: -8.00467300415039
    7. 'any' → logprob: -8.50467300415039
    8. 'True' → logprob: -8.62967300415039
    9. 'i' → logprob: -9.00467300415039
    10. 'a' → logprob: -9.00467300415039

Token 3719: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.007908730767667294
    2. 'oc' → logprob: -5.757908821105957
    3. 'c' → logprob: -6.382908821105957
    4. 'i' → logprob: -7.382908821105957
    5. 'o' → logprob: -8.132908821105957
    6. '```' → logprob: -8.132908821105957
    7. 'vo' → logprob: -8.632908821105957
    8. ' ' → logprob: -8.882908821105957
    9. ' vo' → logprob: -8.945408821105957
    10. 'owel' → logprob: -9.132908821105957

Token 3720: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.009305736981332302
    2. 'el' → logprob: -5.384305953979492
    3. 'less' → logprob: -5.634305953979492
    4. 'ol' → logprob: -8.134305953979492
    5. 'on' → logprob: -8.259305953979492
    6. 'cel' → logprob: -8.884305953979492
    7. 'o' → logprob: -9.009305953979492
    8. 'ed' → logprob: -10.134305953979492
    9. 'ess' → logprob: -10.134305953979492
    10. 'oc' → logprob: -10.259305953979492

Token 3721: ' conson' (ID: 127767)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.44206708669662476
    2. '_con' → logprob: -1.8170671463012695
    3. 'm' → logprob: -2.9420671463012695
    4. '_m' → logprob: -3.4420671463012695
    5. 'con' → logprob: -3.8170671463012695
    6. ')' → logprob: -4.0670671463012695
    7. '[i' → logprob: -4.3170671463012695
    8. '(m' → logprob: -4.5670671463012695
    9. 'if' → logprob: -4.9420671463012695
    10. '[m' → logprob: -4.9420671463012695

Token 3722: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.04924406483769417
    2. 't' → logprob: -3.0492441654205322
    3. ' t' → logprob: -8.299243927001953
    4. 'nt' → logprob: -9.049243927001953
    5. 'ants' → logprob: -9.424243927001953
    6. 'tant' → logprob: -9.549243927001953
    7. 'con' → logprob: -9.799243927001953
    8. ' conson' → logprob: -10.924243927001953
    9. 'm' → logprob: -11.174243927001953
    10. 'ont' → logprob: -11.174243927001953

Token 3723: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.21801389753818512
    2. 'and' → logprob: -1.968013882637024
    3. '           ' → logprob: -3.5930140018463135
    4. 'if' → logprob: -4.468013763427734
    5. ' if' → logprob: -4.968013763427734
    6. ' =' → logprob: -5.468013763427734
    7. '=' → logprob: -6.968013763427734
    8. '       ' → logprob: -7.093013763427734
    9. '   ' → logprob: -7.218013763427734
    10. ':
' → logprob: -7.218013763427734

Token 3724: ' vowel' (ID: 165542)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.02987070195376873
    2. 'vo' → logprob: -4.904870510101318
    3. '(v' → logprob: -4.904870510101318
    4. 'len' → logprob: -5.029870510101318
    5. 'i' → logprob: -6.279870510101318
    6. ' v' → logprob: -6.654870510101318
    7. 'm' → logprob: -7.404870510101318
    8. '(i' → logprob: -7.529870510101318
    9. '(' → logprob: -7.654870510101318
    10. ' (' → logprob: -7.654870510101318

Token 3725: ' a' (ID: 261)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3297884464263916
    2. '           ' → logprob: -2.2047884464263916
    3. ' if' → logprob: -2.7047884464263916
    4. 'if' → logprob: -3.0797884464263916
    5. 'and' → logprob: -3.7047884464263916
    6. ' =' → logprob: -4.4547882080078125
    7. ':
' → logprob: -4.5797882080078125
    8. '=' → logprob: -6.3297882080078125
    9. ' ==' → logprob: -6.4547882080078125
    10. '==' → logprob: -6.5797882080078125

Token 3726: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3600272536277771
    2. '           ' → logprob: -1.7350273132324219
    3. 'and' → logprob: -2.735027313232422
    4. ' or' → logprob: -3.860027313232422
    5. 'if' → logprob: -4.610027313232422
    6. 'in' → logprob: -4.860027313232422
    7. ' if' → logprob: -5.110027313232422
    8. ' in' → logprob: -5.735027313232422
    9. '       ' → logprob: -5.860027313232422
    10. ':
' → logprob: -5.860027313232422

Token 3727: ' o' (ID: 293)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.00014001218369230628
    2. ' o' → logprob: -9.125140190124512
    3. 'i' → logprob: -12.000140190124512
    4. 'v' → logprob: -12.500140190124512
    5. '
' → logprob: -12.500140190124512
    6. ' ' → logprob: -12.500140190124512
    7. '   ' → logprob: -13.000140190124512
    8. ''o' → logprob: -13.000140190124512
    9. '       ' → logprob: -13.375140190124512
    10. '           ' → logprob: -13.625140190124512

Token 3728: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2621023952960968
    2. 'if' → logprob: -2.5121023654937744
    3. ' and' → logprob: -2.7621023654937744
    4. 'and' → logprob: -3.3871023654937744
    5. ' =' → logprob: -4.0121026039123535
    6. ' if' → logprob: -4.2621026039123535
    7. '=' → logprob: -5.0121026039123535
    8. '       ' → logprob: -5.0121026039123535
    9. ' or' → logprob: -6.1371026039123535
    10. '==' → logprob: -6.6371026039123535

Token 3729: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00605381652712822
    2. ' and' → logprob: -5.381053924560547
    3. 'and' → logprob: -7.756053924560547
    4. '       ' → logprob: -8.506053924560547
    5. 'if' → logprob: -8.506053924560547
    6. ' if' → logprob: -8.506053924560547
    7. ':
' → logprob: -9.256053924560547
    8. '               ' → logprob: -9.756053924560547
    9. ':' → logprob: -9.881053924560547
    10. '		' → logprob: -10.381053924560547

Token 3730: ' m' (ID: 284)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18966519832611084
    2. '           ' → logprob: -1.8146651983261108
    3. ' if' → logprob: -4.6896653175354
    4. 'm' (adapté à ' m') → logprob: -7.8146653175354
    5. '   ' → logprob: -9.814664840698242
    6. 'and' → logprob: -9.939664840698242
    7. ' ' → logprob: -10.689664840698242
    8. '```' → logprob: -10.689664840698242
    9. 'v' → logprob: -10.939664840698242
    10. ' and' → logprob: -11.189664840698242

Token 3731: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06984317302703857
    2. '=' → logprob: -2.819843292236328
    3. '=m' → logprob: -5.944843292236328
    4. 'a' → logprob: -6.569843292236328
    5. '   ' → logprob: -6.694843292236328
    6. 'ora' → logprob: -6.694843292236328
    7. '[i' → logprob: -7.194843292236328
    8. '=i' → logprob: -8.694843292236328
    9. '=a' → logprob: -9.319843292236328
    10. 'o' → logprob: -9.444843292236328

Token 3732: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0010475777089595795
    2. ' mor' → logprob: -7.251047611236572
    3. 'mor' → logprob: -8.126047134399414
    4. '   ' → logprob: -10.876047134399414
    5. 'maras' → logprob: -12.001047134399414
    6. ' ' → logprob: -12.626047134399414
    7. '  ' → logprob: -13.126047134399414
    8. '	m' → logprob: -13.501047134399414
    9. '```' → logprob: -13.626047134399414
    10. '(m' → logprob: -13.626047134399414

Token 3733: 'as' (ID: 288)
  Prédit: 'oras'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -0.004787765443325043
    2. 'as' → logprob: -5.754787921905518
    3. 'or' → logprob: -7.004787921905518
    4. 'ora' → logprob: -8.12978744506836
    5. 'ras' → logprob: -8.62978744506836
    6. 'oas' → logprob: -9.75478744506836
    7. '[' → logprob: -9.87978744506836
    8. '   ' → logprob: -10.75478744506836
    9. 'aras' → logprob: -11.00478744506836
    10. 'a' → logprob: -11.62978744506836

Token 3734: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. 'i' → logprob: -12.87500286102295
    3. '   ' → logprob: -15.87500286102295
    4. ' [' → logprob: -16.250003814697266
    5. '```' → logprob: -16.750003814697266
    6. '           ' → logprob: -17.250003814697266
    7. ' i' → logprob: -17.625003814697266
    8. '       ' → logprob: -17.875003814697266
    9. ' =' → logprob: -18.125003814697266
    10. '(i' → logprob: -18.375003814697266

Token 3735: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5750573873519897
    2. '][' → logprob: -1.0750573873519897
    3. ']' → logprob: -2.9500575065612793
    4. '[' → logprob: -3.2000575065612793
    5. '           ' → logprob: -6.450057506561279
    6. '[i' → logprob: -8.075057029724121
    7. '].' → logprob: -8.325057029724121
    8. ')
' → logprob: -8.825057029724121
    9. ']:
' → logprob: -9.575057029724121
    10. '   ' → logprob: -9.950057029724121

Token 3736: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00024084746837615967
    2. ' =' → logprob: -10.25024127960205
    3. ' if' → logprob: -10.25024127960205
    4. '=' → logprob: -10.50024127960205
    5. '               ' → logprob: -10.50024127960205
    6. '```' → logprob: -10.62524127960205
    7. '	       ' → logprob: -10.87524127960205
    8. '       ' → logprob: -11.25024127960205
    9. '		' → logprob: -11.37524127960205
    10. '          ' → logprob: -11.62524127960205

Token 3737: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004056910052895546
    2. 'not' → logprob: -6.254056930541992
    3. ' if' → logprob: -7.129056930541992
    4. 'len' → logprob: -7.754056930541992
    5. 'm' → logprob: -8.129056930541992
    6. 'is' → logprob: -8.379056930541992
    7. '           ' → logprob: -8.629056930541992
    8. '   ' → logprob: -8.879056930541992
    9. '       ' → logprob: -10.754056930541992
    10. '
' → logprob: -12.504056930541992

Token 3738: ' mora' (ID: 47294)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.311631977558136
    2. 'not' → logprob: -1.6866319179534912
    3. 'is' → logprob: -2.561631917953491
    4. 'len' → logprob: -5.81163215637207
    5. ' if' → logprob: -7.31163215637207
    6. ' not' → logprob: -7.68663215637207
    7. '(not' → logprob: -8.18663215637207
    8. 'm' → logprob: -8.31163215637207
    9. '(is' → logprob: -8.56163215637207
    10. '(len' → logprob: -9.06163215637207

Token 3739: ' must' (ID: 2804)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.8395352959632874
    2. 'startswith' → logprob: -0.9645352959632874
    3. 'and' → logprob: -2.7145352363586426
    4. '=' → logprob: -3.2145352363586426
    5. ' and' → logprob: -3.7145352363586426
    6. ' =' → logprob: -4.089535236358643
    7. 'starts' → logprob: -4.589535236358643
    8. '[' → logprob: -4.714535236358643
    9. 'len' → logprob: -5.339535236358643
    10. '           ' → logprob: -6.214535236358643

Token 3740: ' NOT' (ID: 7116)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.44590967893600464
    2. '=' → logprob: -2.1959097385406494
    3. 'in' → logprob: -2.1959097385406494
    4. 'and' → logprob: -2.9459097385406494
    5. 'startswith' → logprob: -3.4459097385406494
    6. '.startswith' → logprob: -4.19590950012207
    7. 'start' → logprob: -4.57090950012207
    8. ' and' → logprob: -4.69590950012207
    9. '[' → logprob: -5.69590950012207
    10. '       ' → logprob: -6.44590950012207

Token 3741: ' be' (ID: 413)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9227221608161926
    2. 'in' → logprob: -2.047722101211548
    3. '==' → logprob: -2.047722101211548
    4. ' (' → logprob: -2.422722101211548
    5. '(' → logprob: -2.922722101211548
    6. '(len' → logprob: -3.047722101211548
    7. '[' → logprob: -3.297722101211548
    8. ' in' → logprob: -3.422722101211548
    9. ' be' → logprob: -4.172722339630127
    10. ' or' → logprob: -4.797722339630127

Token 3742: ' vowel' (ID: 165542)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5533424019813538
    2. 'is' → logprob: -1.803342342376709
    3. '''' → logprob: -2.928342342376709
    4. '(m' → logprob: -2.928342342376709
    5. '(len' → logprob: -2.928342342376709
    6. '(i' → logprob: -4.053342342376709
    7. '(is' → logprob: -4.303342342376709
    8. '(' → logprob: -4.553342342376709
    9. '('' → logprob: -4.553342342376709
    10. ' (' → logprob: -4.678342342376709

Token 3743: ' alone' (ID: 11238)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0387601852416992
    2. '           ' → logprob: -1.1637601852416992
    3. ' if' → logprob: -1.9137601852416992
    4. 'if' → logprob: -2.538760185241699
    5. ':
' → logprob: -3.663760185241699
    6. '               ' → logprob: -4.663760185241699
    7. ' =' → logprob: -4.663760185241699
    8. '[' → logprob: -4.788760185241699
    9. '[i' → logprob: -5.038760185241699
    10. '       ' → logprob: -5.163760185241699

Token 3744: ' to' (ID: 316)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3609159290790558
    2. '           ' → logprob: -1.4859158992767334
    3. 'and' → logprob: -3.4859158992767334
    4. ' if' → logprob: -3.9859158992767334
    5. 'if' → logprob: -4.1109161376953125
    6. '       ' → logprob: -5.2359161376953125
    7. ':
' → logprob: -6.6109161376953125
    8. '```' → logprob: -6.6109161376953125
    9. '               ' → logprob: -7.4859161376953125
    10. '[' → logprob: -7.6109161376953125

Token 3745: ' count' (ID: 3605)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6713235974311829
    2. 'if' → logprob: -2.171323537826538
    3. ' continue' → logprob: -2.171323537826538
    4. 't' → logprob: -3.546323537826538
    5. 'startswith' → logprob: -3.921323537826538
    6. 'in' → logprob: -3.921323537826538
    7. 'i' → logprob: -4.046323776245117
    8. '=' → logprob: -4.046323776245117
    9. 'not' → logprob: -4.171323776245117
    10. 'len' → logprob: -4.171323776245117

Token 3746: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3004806339740753
    2. 'not' → logprob: -1.550480604171753
    3. 'or' → logprob: -3.675480604171753
    4. 'len' → logprob: -4.925480842590332
    5. '           ' → logprob: -5.300480842590332
    6. ' or' → logprob: -5.800480842590332
    7. ' if' → logprob: -5.925480842590332
    8. ' not' → logprob: -6.050480842590332
    9. '   ' → logprob: -7.925480842590332
    10. 'and' → logprob: -8.050480842590332

Token 3747: 'v' (ID: 85)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.08882603794336319
    2. 'm' → logprob: -3.4638259410858154
    3. 'not' → logprob: -3.5888259410858154
    4. 'i' → logprob: -4.9638261795043945
    5. ' len' → logprob: -5.0888261795043945
    6. 'is' → logprob: -5.7138261795043945
    7. '(len' → logprob: -6.0888261795043945
    8. ' not' → logprob: -6.2138261795043945
    9. ')' → logprob: -7.0888261795043945
    10. 'if' → logprob: -7.2138261795043945

Token 3748: 'owel' (ID: 27097)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6919682025909424
    2. ' and' → logprob: -1.3169682025909424
    3. ')' → logprob: -2.3169682025909424
    4. ' not' → logprob: -3.1919682025909424
    5. 'in' → logprob: -4.066967964172363
    6. ' !=' → logprob: -4.316967964172363
    7. 'and' → logprob: -4.816967964172363
    8. 'if' → logprob: -5.316967964172363
    9. 'not' → logprob: -5.441967964172363
    10. '==' → logprob: -5.566967964172363

Token 3749: ' alone' (ID: 11238)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5688885450363159
    2. ')' → logprob: -2.6938886642456055
    3. ' in' → logprob: -2.6938886642456055
    4. ' !=' → logprob: -2.9438886642456055
    5. '==' → logprob: -2.9438886642456055
    6. ' not' → logprob: -3.0688886642456055
    7. ' ==' → logprob: -3.8188886642456055
    8. 'in' → logprob: -4.1938886642456055
    9. 'and' → logprob: -4.1938886642456055
    10. ' or' → logprob: -4.1938886642456055

Token 3750: ' not' (ID: 625)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1053018793463707
    2. 'and' → logprob: -2.605301856994629
    3. ' or' → logprob: -4.480301856994629
    4. ')' → logprob: -4.980301856994629
    5. '           ' → logprob: -5.980301856994629
    6. ' not' → logprob: -7.230301856994629
    7. 'if' → logprob: -7.480301856994629
    8. 'not' → logprob: -7.730301856994629
    9. ':' → logprob: -7.855301856994629
    10. '```' → logprob: -7.980301856994629

Token 3751: ' starts' (ID: 13217)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12768475711345673
    2. ' in' → logprob: -2.1276848316192627
    3. '=' → logprob: -8.877684593200684
    4. '==' → logprob: -9.627684593200684
    5. 'startswith' → logprob: -9.752684593200684
    6. 'v' → logprob: -9.877684593200684
    7. 'm' → logprob: -10.002684593200684
    8. 'i' → logprob: -10.377684593200684
    9. 'len' → logprob: -10.502684593200684
    10. 'n' → logprob: -10.627684593200684

Token 3752: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.007943148724734783
    2. ' with' → logprob: -5.257943153381348
    3. ')' → logprob: -6.882943153381348
    4. '=' → logprob: -7.132943153381348
    5. 's' → logprob: -8.632943153381348
    6. '```' → logprob: -9.007943153381348
    7. 'in' → logprob: -9.257943153381348
    8. 'w' → logprob: -9.382943153381348
    9. '==' → logprob: -9.882943153381348
    10. '
' → logprob: -9.882943153381348

Token 3753: ' conson' (ID: 127767)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.8631176352500916
    2. 'a' → logprob: -1.3631176948547363
    3. 'CON' → logprob: -1.6131176948547363
    4. 'm' → logprob: -3.2381176948547363
    5. 'con' → logprob: -3.4881176948547363
    6. 'v' → logprob: -3.9881176948547363
    7. 'VO' → logprob: -4.738117694854736
    8. '''' → logprob: -5.238117694854736
    9. ')' → logprob: -5.238117694854736
    10. 'c' → logprob: -5.738117694854736

Token 3754: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.06449861824512482
    2. 'on' → logprob: -3.8144986629486084
    3. 'son' → logprob: -4.189498424530029
    4. 's' → logprob: -4.314498424530029
    5. 'ont' → logprob: -5.814498424530029
    6. 'a' → logprob: -6.564498424530029
    7. 't' → logprob: -6.564498424530029
    8. ')' → logprob: -6.689498424530029
    9. 'con' → logprob: -6.939498424530029
    10. 'tant' → logprob: -6.939498424530029

Token 3755: ')
' (ID: 446)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5596433877944946
    2. ' or' → logprob: -1.0596433877944946
    3. 'and' → logprob: -2.934643268585205
    4. ':
' → logprob: -4.309643268585205
    5. ')' → logprob: -5.184643268585205
    6. '           ' → logprob: -5.809643268585205
    7. 'or' → logprob: -5.934643268585205
    8. '       ' → logprob: -7.309643268585205
    9. 'if' → logprob: -7.309643268585205
    10. '   ' → logprob: -7.684643268585205

Token 3756: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16726356744766235
    2. ' and' → logprob: -1.9172635078430176
    3. 'and' → logprob: -6.417263507843018
    4. ':
' → logprob: -6.417263507843018
    5. '               ' → logprob: -7.167263507843018
    6. '       ' → logprob: -7.542263507843018
    7. '```' → logprob: -7.542263507843018
    8. ' or' → logprob: -7.792263507843018
    9. '		' → logprob: -8.167263984680176
    10. ' if' → logprob: -8.292263984680176

Token 3757: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013139873743057251
    2. ' if' → logprob: -4.888139724731445
    3. '           ' → logprob: -5.388139724731445
    4. 'not' → logprob: -7.263139724731445
    5. '```' → logprob: -9.138139724731445
    6. 'len' → logprob: -10.263139724731445
    7. ' not' → logprob: -10.513139724731445
    8. '   ' → logprob: -10.888139724731445
    9. 'and' → logprob: -10.888139724731445
    10. ' and' → logprob: -11.513139724731445

Token 3758: ' or' (ID: 503)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5437779426574707
    2. ' and' → logprob: -1.4187779426574707
    3. 'and' → logprob: -3.1687779426574707
    4. ' if' → logprob: -3.5437779426574707
    5. '           ' → logprob: -3.6687779426574707
    6. 'not' → logprob: -3.7937779426574707
    7. 'len' → logprob: -4.168777942657471
    8. 'i' → logprob: -4.543777942657471
    9. ' not' → logprob: -4.543777942657471
    10. 'm' → logprob: -4.668777942657471

Token 3759: ' problem' (ID: 4792)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -1.2026759386062622
    2. 'not' → logprob: -1.5776759386062622
    3. '(m' → logprob: -1.7026759386062622
    4. 'len' → logprob: -1.8276759386062622
    5. '(not' → logprob: -2.5776758193969727
    6. 'm' → logprob: -3.9526758193969727
    7. ' not' → logprob: -4.327675819396973
    8. '(i' → logprob: -4.452675819396973
    9. ' (' → logprob: -4.452675819396973
    10. '(' → logprob: -5.702675819396973

Token 3760: ' says' (ID: 5003)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.16964681446552277
    2. '==' → logprob: -3.044646739959717
    3. 'if' → logprob: -3.669646739959717
    4. '           ' → logprob: -4.419646739959717
    5. '```' → logprob: -4.544646739959717
    6. '[' → logprob: -4.669646739959717
    7. ' ==' → logprob: -4.669646739959717
    8. ' and' → logprob: -4.919646739959717
    9. ' if' → logprob: -5.044646739959717
    10. '=' → logprob: -5.669646739959717

Token 3761: ':' (ID: 25)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3509247303009033
    2. ' if' → logprob: -1.3509247303009033
    3. ' not' → logprob: -4.350924491882324
    4. 'not' → logprob: -4.600924491882324
    5. 'm' → logprob: -5.225924491882324
    6. '           ' → logprob: -5.475924491882324
    7. 'len' → logprob: -6.475924491882324
    8. ' m' → logprob: -7.100924491882324
    9. 'i' → logprob: -7.600924491882324
    10. '(m' → logprob: -8.600924491882324

Token 3762: ' "' (ID: 392)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.29614007472991943
    2. 'not' → logprob: -2.171140193939209
    3. 'if' → logprob: -2.421140193939209
    4. 'len' → logprob: -3.921140193939209
    5. 'is' → logprob: -4.671140193939209
    6. ' not' → logprob: -5.296140193939209
    7. ' m' → logprob: -5.296140193939209
    8. '(m' → logprob: -5.546140193939209
    9. 'True' → logprob: -5.671140193939209
    10. ' if' → logprob: -6.171140193939209

Token 3763: '母' (ID: 37600)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7987679243087769
    2. ' if' → logprob: -0.9237679243087769
    3. ' and' → logprob: -3.0487680435180664
    4. 'i' → logprob: -3.5487680435180664
    5. 'm' → logprob: -4.673768043518066
    6. ' i' → logprob: -5.173768043518066
    7. ' (' → logprob: -5.173768043518066
    8. ' ' → logprob: -5.298768043518066
    9. ' in' → logprob: -5.423768043518066
    10. 'in' → logprob: -5.548768043518066

Token 3764: '音' (ID: 15082)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4218554198741913
    2. ')' → logprob: -1.6718554496765137
    3. ')
' → logprob: -3.7968554496765137
    4. ']' → logprob: -3.9218554496765137
    5. 'a' → logprob: -4.171855449676514
    6. '   ' → logprob: -4.171855449676514
    7. '```' → logprob: -4.421855449676514
    8. 'ora' → logprob: -4.671855449676514
    9. '_' → logprob: -5.046855449676514
    10. 'i' → logprob: -5.296855449676514

Token 3765: '「' (ID: 6055)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.6259080171585083
    2. ')' → logprob: -2.7509078979492188
    3. '[m' → logprob: -2.8759078979492188
    4. '```' → logprob: -3.1259078979492188
    5. '[' → logprob: -3.2509078979492188
    6. ':
' → logprob: -3.6259078979492188
    7. 'if' → logprob: -3.7509078979492188
    8. '==' → logprob: -4.000907897949219
    9. 'm' → logprob: -4.000907897949219
    10. ']' → logprob: -4.125907897949219

Token 3766: 'a' (ID: 64)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9064368605613708
    2. 'a' → logprob: -1.0314369201660156
    3. '"' → logprob: -3.2814369201660156
    4. 'i' → logprob: -3.6564369201660156
    5. '」' → logprob: -3.6564369201660156
    6. ']' → logprob: -3.9064369201660156
    7. ' '' → logprob: -3.9064369201660156
    8. '']' → logprob: -4.031436920166016
    9. 'm' → logprob: -4.156436920166016
    10. ')' → logprob: -4.781436920166016

Token 3767: '」「' (ID: 50032)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5438570976257324
    2. '」' → logprob: -1.7938570976257324
    3. '）' → logprob: -2.9188570976257324
    4. '"' → logprob: -3.2938570976257324
    5. '}' → logprob: -4.043857097625732
    6. '']' → logprob: -4.168857097625732
    7. ' and' → logprob: -4.293857097625732
    8. ')' → logprob: -4.418857097625732
    9. ''}' → logprob: -4.793857097625732
    10. 'nd' → logprob: -4.918857097625732

Token 3768: 'o' (ID: 78)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2847951054573059
    2. ')' → logprob: -2.409795045852661
    3. '"' → logprob: -3.784795045852661
    4. '')' → logprob: -4.03479528427124
    5. '']' → logprob: -4.03479528427124
    6. ']' → logprob: -4.40979528427124
    7. '）' → logprob: -4.65979528427124
    8. 'p' → logprob: -4.78479528427124
    9. 'i' → logprob: -5.15979528427124
    10. ')
' → logprob: -5.28479528427124

Token 3769: '」' (ID: 5252)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.103712558746338
    2. '」' → logprob: -1.353712558746338
    3. '"' → logprob: -2.728712558746338
    4. '")' → logprob: -2.978712558746338
    5. '）' → logprob: -2.978712558746338
    6. ')' → logprob: -3.103712558746338
    7. '）」' → logprob: -3.978712558746338
    8. '```' → logprob: -4.103712558746338
    9. '')' → logprob: -4.228712558746338
    10. 'が' → logprob: -4.353712558746338

Token 3770: 'について' (ID: 94408)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.2677695751190186
    2. '```' → logprob: -2.3927695751190186
    3. ' in' → logprob: -2.8927695751190186
    4. ' and' → logprob: -3.0177695751190186
    5. ':
' → logprob: -3.1427695751190186
    6. ')' → logprob: -3.1427695751190186
    7. 'not' → logprob: -3.2677695751190186
    8. ''' → logprob: -3.2677695751190186
    9. 'and' → logprob: -3.2677695751190186
    10. '[i' → logprob: -3.2677695751190186

Token 3771: '，同' (ID: 158812)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9744576811790466
    2. 'if' → logprob: -1.4744577407836914
    3. ':
' → logprob: -2.3494577407836914
    4. '           ' → logprob: -2.4744577407836914
    5. ' if' → logprob: -2.7244577407836914
    6. 'and' → logprob: -3.3494577407836914
    7. 'in' → logprob: -3.5994577407836914
    8. ' i' → logprob: -4.099457740783691
    9. ' in' → logprob: -4.349457740783691
    10. 'i' → logprob: -4.474457740783691

Token 3772: '一' (ID: 2432)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.29495206475257874
    2. 'if' → logprob: -2.294952154159546
    3. '[i' → logprob: -2.544952154159546
    4. 'm' → logprob: -3.294952154159546
    5. '           ' → logprob: -5.044951915740967
    6. '#' → logprob: -5.669951915740967
    7. '(i' → logprob: -5.669951915740967
    8. 'vo' → logprob: -5.919951915740967
    9. ']' → logprob: -6.169951915740967
    10. 'len' → logprob: -6.294951915740967

Token 3773: 'の' (ID: 3385)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3657022714614868
    2. 'in' → logprob: -1.6157022714614868
    3. 'if' → logprob: -2.1157021522521973
    4. ']' → logprob: -2.6157021522521973
    5. '   ' → logprob: -2.6157021522521973
    6. 'm' → logprob: -2.8657021522521973
    7. ' in' → logprob: -3.2407021522521973
    8. 'v' → logprob: -3.6157021522521973
    9. '][' → logprob: -4.365702152252197
    10. 'c' → logprob: -4.490702152252197

Token 3774: '母' (ID: 37600)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.10599144548177719
    2. 'm' → logprob: -2.9809913635253906
    3. 'v' → logprob: -3.2309913635253906
    4. '
' → logprob: -6.230991363525391
    5. 'c' → logprob: -6.730991363525391
    6. ' vo' → logprob: -6.855991363525391
    7. 'voi' → logprob: -7.105991363525391
    8. 'voz' → logprob: -7.480991363525391
    9. '   ' → logprob: -7.855991363525391
    10. 'voice' → logprob: -8.04349136352539

Token 3775: '音' (ID: 15082)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2544143199920654
    2. '   ' → logprob: -2.3794143199920654
    3. 'm' → logprob: -2.5044143199920654
    4. '```' → logprob: -2.8794143199920654
    5. '{
' → logprob: -3.1294143199920654
    6. 'v' → logprob: -3.1294143199920654
    7. '
' → logprob: -3.1294143199920654
    8. ')' → logprob: -3.3794143199920654
    9. '           ' → logprob: -3.3794143199920654
    10. '[i' → logprob: -3.7544143199920654

Token 3776: 'が' (ID: 6632)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4573955237865448
    2. '==' → logprob: -2.457395553588867
    3. 'if' → logprob: -2.707395553588867
    4. ' ==' → logprob: -2.957395553588867
    5. '.startswith' → logprob: -3.457395553588867
    6. ' and' → logprob: -3.832395553588867
    7. ':
' → logprob: -4.207395553588867
    8. 'and' → logprob: -4.582395553588867
    9. 'in' → logprob: -4.707395553588867
    10. '           ' → logprob: -4.957395553588867

Token 3777: '無' (ID: 10205)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.46076151728630066
    2. 'm' → logprob: -1.710761547088623
    3. 'i' → logprob: -2.460761547088623
    4. 'in' → logprob: -2.710761547088623
    5. 'v' → logprob: -4.585761547088623
    6. ' in' → logprob: -5.085761547088623
    7. ' vo' → logprob: -5.210761547088623
    8. 'mor' → logprob: -5.960761547088623
    9. '
' → logprob: -6.460761547088623
    10. 'is' → logprob: -7.085761547088623

Token 3778: '声' (ID: 26968)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.7630661129951477
    2. 'vo' → logprob: -1.513066053390503
    3. 'oi' → logprob: -2.013066053390503
    4. '```' → logprob: -3.138066053390503
    5. '声' → logprob: -3.138066053390503
    6. 'ic' → logprob: -4.138066291809082
    7. 'oc' → logprob: -4.263066291809082
    8. '``' → logprob: -4.513066291809082
    9. '
' → logprob: -4.638066291809082
    10. '_' → logprob: -5.513066291809082

Token 3779: '子' (ID: 7407)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5628392696380615
    2. '_con' → logprob: -1.0628392696380615
    3. '_m' → logprob: -2.5628392696380615
    4. '_
' → logprob: -6.312839508056641
    5. 'con' → logprob: -6.687839508056641
    6. ')' → logprob: -7.062839508056641
    7. '```' → logprob: -7.187839508056641
    8. 'm' → logprob: -7.312839508056641
    9. '_vo' → logprob: -7.812839508056641
    10. ' _' → logprob: -7.812839508056641

Token 3780: '音' (ID: 15082)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.49846717715263367
    2. '_con' → logprob: -1.248467206954956
    3. ' conson' → logprob: -2.373467206954956
    4. '_m' → logprob: -5.748466968536377
    5. 'm' → logprob: -6.123466968536377
    6. 'i' → logprob: -6.373466968536377
    7. '_' → logprob: -6.748466968536377
    8. ')' → logprob: -7.498466968536377
    9. ' ' → logprob: -7.748466968536377
    10. ' i' → logprob: -7.873466968536377

Token 3781: 'と' (ID: 5330)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.17569734156131744
    2. ' and' → logprob: -2.1756973266601562
    3. '[i' → logprob: -4.050697326660156
    4. '[m' → logprob: -5.050697326660156
    5. 'と' → logprob: -5.300697326660156
    6. '==' → logprob: -6.050697326660156
    7. 'm' → logprob: -6.175697326660156
    8. '```' → logprob: -6.425697326660156
    9. 'in' → logprob: -6.550697326660156
    10. ':
' → logprob: -6.675697326660156

Token 3782: 'とも' (ID: 161177)
  Prédit: 'み'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'み' → logprob: -0.5047888159751892
    2. 'とも' → logprob: -1.629788875579834
    3. '```' → logprob: -3.004788875579834
    4. 'は' → logprob: -3.629788875579834
    5. '   ' → logprob: -3.754788875579834
    6. 'も' → logprob: -3.879788875579834
    7. 'start' → logprob: -4.629788875579834
    8. 'is' → logprob: -4.754788875579834
    9. '``' → logprob: -4.879788875579834
    10. '       ' → logprob: -5.004788875579834

Token 3783: 'に' (ID: 5280)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.29542815685272217
    2. 'i' → logprob: -3.5454282760620117
    3. '           ' → logprob: -3.7954282760620117
    4. 'さ' → logprob: -3.9204282760620117
    5. 'be' → logprob: -4.170428276062012
    6. 'with' → logprob: -4.295428276062012
    7. 's' → logprob: -4.420428276062012
    8. '=' → logprob: -4.420428276062012
    9. 'み' → logprob: -4.420428276062012
    10. ' be' → logprob: -4.545428276062012

Token 3784: '連' (ID: 37660)
  Prédit: 'み'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'み' → logprob: -0.13317298889160156
    2. 'start' → logprob: -3.6331729888916016
    3. '連' → logprob: -3.6331729888916016
    4. '
' → logprob: -4.258172988891602
    5. '```' → logprob: -4.383172988891602
    6. '続' → logprob: -4.758172988891602
    7. '{
' → logprob: -4.883172988891602
    8. 'は' → logprob: -5.133172988891602
    9. 'appear' → logprob: -6.008172988891602
    10. '{' → logprob: -6.133172988891602

Token 3785: '続' (ID: 47554)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.07636094838380814
    2. 'secut' → logprob: -4.076361179351807
    3. '続' → logprob: -4.451361179351807
    4. 's' → logprob: -4.701361179351807
    5. 'secutive' → logprob: -5.201361179351807
    6. '声' → logprob: -5.451361179351807
    7. '{
' → logprob: -5.951361179351807
    8. '{'' → logprob: -6.076361179351807
    9. '```' → logprob: -6.201361179351807
    10. 'son' → logprob: -6.201361179351807

Token 3786: 'する' (ID: 39065)
  Prédit: 'する'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'する' → logprob: -1.7744725942611694
    2. 's' → logprob: -2.024472713470459
    3. 'with' → logprob: -2.149472713470459
    4. 'i' → logprob: -2.399472713470459
    5. '```' → logprob: -2.399472713470459
    6. '   ' → logprob: -2.524472713470459
    7. '_' → logprob: -2.649472713470459
    8. '       ' → logprob: -3.149472713470459
    9. 'con' → logprob: -3.149472713470459
    10. '続' → logprob: -4.149472713470459

Token 3787: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42029303312301636
    2. 'while' → logprob: -1.1702930927276611
    3. 'i' → logprob: -4.420292854309082
    4. '1' → logprob: -5.170292854309082
    5. 'm' → logprob: -5.295292854309082
    6. '   ' → logprob: -6.670292854309082
    7. ' while' → logprob: -6.920292854309082
    8. '#' → logprob: -7.045292854309082
    9. 'count' → logprob: -7.295292854309082
    10. 'n' → logprob: -7.295292854309082

Token 3788: 'つ' (ID: 18290)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -1.317399024963379
    2. '>' → logprob: -2.067399024963379
    3. 'つ' → logprob: -2.442399024963379
    4. ' >=' → logprob: -2.567399024963379
    5. '続' → logprob: -3.067399024963379
    6. '+' → logprob: -3.317399024963379
    7. '       ' → logprob: -3.567399024963379
    8. '           ' → logprob: -3.567399024963379
    9. '```' → logprob: -3.692399024963379
    10. 'の' → logprob: -4.067399024963379

Token 3789: '以上' (ID: 27177)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6437198519706726
    2. '+' → logprob: -0.8937198519706726
    3. '+
' → logprob: -3.7687199115753174
    4. ' +=' → logprob: -4.518719673156738
    5. '=' → logprob: -4.518719673156738
    6. '```' → logprob: -5.018719673156738
    7. '==' → logprob: -6.018719673156738
    8. '>' → logprob: -6.768719673156738
    9. '<=' → logprob: -7.143719673156738
    10. 'i' → logprob: -7.143719673156738

Token 3790: 'の' (ID: 3385)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.147552251815796
    2. 'while' → logprob: -2.022552251815796
    3. ' <' → logprob: -2.397552251815796
    4. 'and' → logprob: -2.522552251815796
    5. ' and' → logprob: -3.272552251815796
    6. 'in' → logprob: -3.272552251815796
    7. '=' → logprob: -3.522552251815796
    8. '```' → logprob: -3.772552251815796
    9. 'i' → logprob: -3.897552251815796
    10. '<m' → logprob: -3.897552251815796

Token 3791: '拍' (ID: 10092)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.030039729550480843
    2. 'mor' → logprob: -3.7800397872924805
    3. 'while' → logprob: -6.1550397872924805
    4. 'v' → logprob: -7.4050397872924805
    5. 'char' → logprob: -7.6550397872924805
    6. 'i' → logprob: -7.6550397872924805
    7. '
' → logprob: -7.6550397872924805
    8. 'vo' → logprob: -7.9050397872924805
    9. '拍' → logprob: -8.65503978729248
    10. '{
' → logprob: -9.03003978729248

Token 3792: 'で' (ID: 4344)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8636183738708496
    2. '[i' → logprob: -0.8636183738708496
    3. 'and' → logprob: -2.9886183738708496
    4. '==' → logprob: -3.6136183738708496
    5. '```' → logprob: -3.9886183738708496
    6. ':
' → logprob: -4.36361837387085
    7. '           ' → logprob: -4.61361837387085
    8. '+' → logprob: -5.36361837387085
    9. '   ' → logprob: -5.48861837387085
    10. ')' → logprob: -5.61361837387085

Token 3793: '現' (ID: 44159)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9111968278884888
    2. 'while' → logprob: -1.6611968278884888
    3. 'n' → logprob: -2.536196708679199
    4. ' ' → logprob: -3.286196708679199
    5. '   ' → logprob: -3.286196708679199
    6. 't' → logprob: -3.411196708679199
    7. '続' → logprob: -3.661196708679199
    8. 'r' → logprob: -3.661196708679199
    9. '{
' → logprob: -3.786196708679199
    10. 's' → logprob: -3.911196708679199

Token 3794: 'れ' (ID: 9472)
  Prédit: 'れ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'れ' → logprob: -0.007971771992743015
    2. 'れる' → logprob: -4.88297176361084
    3. 'れて' → logprob: -8.38297176361084
    4. 'われ' → logprob: -9.13297176361084
    5. '           ' → logprob: -10.88297176361084
    6. '   ' → logprob: -12.63297176361084
    7. 'わ' → logprob: -13.13297176361084
    8. '```' → logprob: -13.25797176361084
    9. '       ' → logprob: -14.50797176361084
    10. '     ' → logprob: -14.88297176361084

Token 3795: 'た' (ID: 5598)
  Prédit: 'る'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'る' → logprob: -1.2764312028884888
    2. 'て' → logprob: -1.9014312028884888
    3. 'た' → logprob: -2.276431083679199
    4. '       ' → logprob: -2.401431083679199
    5. 'り' → logprob: -2.776431083679199
    6. '   ' → logprob: -2.776431083679199
    7. 'い' → logprob: -2.776431083679199
    8. '           ' → logprob: -3.401431083679199
    9. 'たり' → logprob: -3.526431083679199
    10. '```' → logprob: -4.276431083679199

Token 3796: 'と' (ID: 5330)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018412601202726364
    2. '           ' → logprob: -4.8934125900268555
    3. 'i' → logprob: -5.3934125900268555
    4. '   ' → logprob: -6.0184125900268555
    5. ' ' → logprob: -7.0184125900268555
    6. '       ' → logprob: -7.1434125900268555
    7. ':
' → logprob: -7.5184125900268555
    8. '```' → logprob: -8.018412590026855
    9. '               ' → logprob: -8.143412590026855
    10. 'continue' → logprob: -8.518412590026855

Token 3797: 'き' (ID: 11852)
  Prédit: 'ら'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ら' → logprob: -0.17364411056041718
    2. 'す' → logprob: -2.5486440658569336
    3. 'い' → logprob: -3.6736440658569336
    4. '```' → logprob: -4.298644065856934
    5. 'り' → logprob: -4.423644065856934
    6. 'き' → logprob: -5.048644065856934
    7. 'ろ' → logprob: -5.423644065856934
    8. 'れ' → logprob: -5.798644065856934
    9. 'i' → logprob: -6.048644065856934
    10. 'いて' → logprob: -6.298644065856934

Token 3798: '"
' (ID: 1092)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0141881899908185
    2. '```' → logprob: -4.514188289642334
    3. 'if' → logprob: -6.514188289642334
    4. ' if' → logprob: -6.889188289642334
    5. '               ' → logprob: -8.139187812805176
    6. '   ' → logprob: -9.639187812805176
    7. '       ' → logprob: -9.889187812805176
    8. '            
' → logprob: -10.139187812805176
    9. 'j' → logprob: -10.764187812805176
    10. 'i' → logprob: -11.014187812805176

Token 3799: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04023868590593338
    2. '       ' → logprob: -3.915238618850708
    3. '```' → logprob: -5.040238857269287
    4. ' if' → logprob: -5.290238857269287
    5. 'if' → logprob: -5.415238857269287
    6. '   ' → logprob: -6.540238857269287
    7. '               ' → logprob: -6.790238857269287
    8. '{
' → logprob: -8.290238380432129
    9. '``' → logprob: -8.665238380432129
    10. ' ' → logprob: -9.290238380432129

Token 3800: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44680678844451904
    2. 'if' → logprob: -1.446806788444519
    3. ' if' → logprob: -2.3218069076538086
    4. 'while' → logprob: -4.696806907653809
    5. '       ' → logprob: -5.196806907653809
    6. '               ' → logprob: -5.696806907653809
    7. '{
' → logprob: -6.071806907653809
    8. ' while' → logprob: -6.446806907653809
    9. '```' → logprob: -6.571806907653809
    10. '   ' → logprob: -7.196806907653809

Token 3801: ' so' (ID: 813)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17145279049873352
    2. 'if' → logprob: -2.046452760696411
    3. 'while' → logprob: -4.29645299911499
    4. ' if' → logprob: -5.04645299911499
    5. '       ' → logprob: -5.79645299911499
    6. '   ' → logprob: -5.92145299911499
    7. '#' → logprob: -7.29645299911499
    8. 'j' → logprob: -7.67145299911499
    9. ' while' → logprob: -7.92145299911499
    10. '```' → logprob: -8.046452522277832

Token 3802: ' mora' (ID: 47294)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5914778113365173
    2. 'i' → logprob: -2.216477870941162
    3. 'while' → logprob: -2.591477870941162
    4. '#' → logprob: -2.716477870941162
    5. 'if' → logprob: -2.841477870941162
    6. ' i' → logprob: -3.466477870941162
    7. '   ' → logprob: -4.091477870941162
    8. 'not' → logprob: -4.216477870941162
    9. ' not' → logprob: -4.341477870941162
    10. 'start' → logprob: -4.466477870941162

Token 3803: ' should' (ID: 1757)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -1.1724926233291626
    2. '[i' → logprob: -1.4224926233291626
    3. '_start' → logprob: -1.9224926233291626
    4. '           ' → logprob: -2.672492504119873
    5. 'startswith' → logprob: -2.672492504119873
    6. ' =' → logprob: -3.172492504119873
    7. 'starts' → logprob: -3.922492504119873
    8. 'must' → logprob: -4.172492504119873
    9. 'i' → logprob: -4.297492504119873
    10. '=' → logprob: -5.047492504119873

Token 3804: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5079358816146851
    2. 'startswith' → logprob: -1.132935881614685
    3. '.startswith' → logprob: -3.6329360008239746
    4. 'not' → logprob: -4.382936000823975
    5. ' start' → logprob: -4.757936000823975
    6. 'len' → logprob: -4.882936000823975
    7. ' not' → logprob: -5.257936000823975
    8. '[' → logprob: -5.632936000823975
    9. ' be' → logprob: -6.257936000823975
    10. '[i' → logprob: -6.382936000823975

Token 3805: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.0006116442382335663
    2. ' with' → logprob: -7.625611782073975
    3. 'if' → logprob: -9.750611305236816
    4. 'while' → logprob: -10.875611305236816
    5. 's' → logprob: -11.000611305236816
    6. 'm' → logprob: -11.625611305236816
    7. '       ' → logprob: -12.375611305236816
    8. '           ' → logprob: -12.625611305236816
    9. '_with' → logprob: -13.000611305236816
    10. 'in' → logprob: -13.000611305236816

Token 3806: ' vo' (ID: 778)
  Prédit: 'vo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.3695664703845978
    2. 'a' → logprob: -1.2445664405822754
    3. 'm' → logprob: -4.994566440582275
    4. 'VOICE' → logprob: -5.119566440582275
    5. 'VO' → logprob: -6.119566440582275
    6. 'v' → logprob: -7.119566440582275
    7. 'def' → logprob: -7.119566440582275
    8. 'len' → logprob: -7.494566440582275
    9. 'any' → logprob: -7.619566440582275
    10. 's' → logprob: -7.744566440582275

Token 3807: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0016907735262066126
    2. '```' → logprob: -7.626690864562988
    3. 'icelo' → logprob: -8.376690864562988
    4. 'c' → logprob: -8.626690864562988
    5. '``' → logprob: -8.626690864562988
    6. '#' → logprob: -9.626690864562988
    7. '`' → logprob: -9.876690864562988
    8. 'icemail' → logprob: -10.001690864562988
    9. 'i' → logprob: -10.126690864562988
    10. 'ice' → logprob: -10.376690864562988

Token 3808: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.006186875980347395
    2. 'ic' → logprob: -6.3811869621276855
    3. 'less' → logprob: -6.3811869621276855
    4. 'cel' → logprob: -7.2561869621276855
    5. 'veless' → logprob: -7.6311869621276855
    6. 'el' → logprob: -7.7561869621276855
    7. 'ol' → logprob: -8.006186485290527
    8. 'owels' → logprob: -8.881186485290527
    9. 'heless' → logprob: -9.006186485290527
    10. 'o' → logprob: -9.131186485290527

Token 3809: ' conson' (ID: 127767)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0520641803741455
    2. '_con' → logprob: -1.0520641803741455
    3. ' conson' → logprob: -1.3020641803741455
    4. 'con' → logprob: -4.177063941955566
    5. ')' → logprob: -5.302063941955566
    6. ' _' → logprob: -5.427063941955566
    7. ' ' → logprob: -7.302063941955566
    8. ' )' → logprob: -7.427063941955566
    9. 'm' → logprob: -7.427063941955566
    10. ' m' → logprob: -7.677063941955566

Token 3810: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0002929174806922674
    2. 'ants' → logprob: -8.250292778015137
    3. 't' → logprob: -10.875292778015137
    4. 'a' → logprob: -13.125292778015137
    5. 'tant' → logprob: -13.125292778015137
    6. 'nt' → logprob: -13.250292778015137
    7. 'ont' → logprob: -13.625292778015137
    8. '_ant' → logprob: -13.875292778015137
    9. 'con' → logprob: -14.250292778015137
    10. '   ' → logprob: -14.500292778015137

Token 3811: ' +' (ID: 659)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4836593270301819
    2. ' and' → logprob: -1.983659267425537
    3. ' if' → logprob: -2.608659267425537
    4. '           ' → logprob: -2.733659267425537
    5. 'and' → logprob: -2.858659267425537
    6. '       ' → logprob: -3.483659267425537
    7. ':
' → logprob: -5.358659267425537
    8. '=' → logprob: -5.358659267425537
    9. ' =' → logprob: -6.858659267425537
    10. '==' → logprob: -6.858659267425537

Token 3812: ' that' (ID: 484)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0018768743611872196
    2. 'm' → logprob: -6.3768768310546875
    3. 'a' → logprob: -9.376876831054688
    4. ' vowel' → logprob: -10.376876831054688
    5. '
' → logprob: -10.751876831054688
    6. 'V' → logprob: -11.626876831054688
    7. 'vo' → logprob: -11.751876831054688
    8. ' v' → logprob: -12.251876831054688
    9. '#' → logprob: -12.376876831054688
    10. 'the' → logprob: -13.751876831054688

Token 3813: ' vowel' (ID: 165542)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6187390685081482
    2. ' if' → logprob: -1.118739128112793
    3. ' and' → logprob: -2.618739128112793
    4. '[i' → logprob: -4.243739128112793
    5. 'm' → logprob: -4.743739128112793
    6. ' in' → logprob: -5.368739128112793
    7. 'in' → logprob: -5.368739128112793
    8. '[' → logprob: -5.368739128112793
    9. 'and' → logprob: -5.618739128112793
    10. '   ' → logprob: -5.743739128112793

Token 3814: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2535480558872223
    2. 'if' → logprob: -2.1285481452941895
    3. ' if' → logprob: -2.6285481452941895
    4. ' and' → logprob: -3.8785481452941895
    5. 'and' → logprob: -5.0035481452941895
    6. '       ' → logprob: -6.3785481452941895
    7. ' =' → logprob: -6.7535481452941895
    8. ':
' → logprob: -7.7535481452941895
    9. '=' → logprob: -8.003547668457031
    10. ':' → logprob: -8.253547668457031

Token 3815: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10130593180656433
    2. ' if' → logprob: -3.2263059616088867
    3. '   ' → logprob: -3.4763059616088867
    4. '       ' → logprob: -4.351305961608887
    5. 'if' → logprob: -4.851305961608887
    6. '```' → logprob: -6.851305961608887
    7. '{
' → logprob: -7.476305961608887
    8. ' ' → logprob: -7.476305961608887
    9. '               ' → logprob: -7.851305961608887
    10. ' while' → logprob: -8.351305961608887

Token 3816: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38786739110946655
    2. 'if' → logprob: -1.1378674507141113
    3. ' if' → logprob: -7.012867450714111
    4. 'while' → logprob: -10.512866973876953
    5. '   ' → logprob: -10.762866973876953
    6. '```' → logprob: -10.762866973876953
    7. '	if' → logprob: -12.012866973876953
    8. '       ' → logprob: -12.137866973876953
    9. '	       ' → logprob: -12.637866973876953
    10. '	   ' → logprob: -12.762866973876953

Token 3817: ' so' (ID: 813)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01202791091054678
    2. 'while' → logprob: -4.637027740478516
    3. '   ' → logprob: -6.887027740478516
    4. ' if' → logprob: -7.387027740478516
    5. '           ' → logprob: -8.387027740478516
    6. 'not' → logprob: -9.262027740478516
    7. 'm' → logprob: -9.512027740478516
    8. 'i' → logprob: -9.637027740478516
    9. '       ' → logprob: -9.637027740478516
    10. '
' → logprob: -10.762027740478516

Token 3818: ' mora' (ID: 47294)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7974551916122437
    2. 'len' → logprob: -0.9224551916122437
    3. ' not' → logprob: -2.672455310821533
    4. 'm' → logprob: -3.172455310821533
    5. ' len' → logprob: -4.297455310821533
    6. '(len' → logprob: -4.672455310821533
    7. '(m' → logprob: -4.922455310821533
    8. 'is' → logprob: -6.047455310821533
    9. '(not' → logprob: -6.047455310821533
    10. ' (' → logprob: -6.672455310821533

Token 3819: ' has' (ID: 853)
  Prédit: '.startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.startswith' → logprob: -0.03456830978393555
    2. 'startswith' → logprob: -3.7845683097839355
    3. '[' → logprob: -4.5345683097839355
    4. 'starts' → logprob: -9.034568786621094
    5. 'start' → logprob: -9.159568786621094
    6. 'and' → logprob: -9.909568786621094
    7. '[:' → logprob: -10.034568786621094
    8. '=' → logprob: -10.159568786621094
    9. '```' → logprob: -10.159568786621094
    10. '.starts' → logprob: -10.784568786621094

Token 3820: ' length' (ID: 5517)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0016586360288783908
    2. ' len' → logprob: -6.5016584396362305
    3. 'length' → logprob: -9.12665843963623
    4. '(len' → logprob: -10.87665843963623
    5. '
' → logprob: -11.00165843963623
    6. '   ' → logprob: -12.87665843963623
    7. '>' → logprob: -12.87665843963623
    8. ' length' → logprob: -13.00165843963623
    9. '0' → logprob: -14.12665843963623
    10. 'm' → logprob: -14.12665843963623

Token 3821: '>=' (ID: 20974)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.768566370010376
    2. '>=' → logprob: -0.893566370010376
    3. '==' → logprob: -2.393566370010376
    4. ' >=' → logprob: -4.018566131591797
    5. '=' → logprob: -4.643566131591797
    6. ' ==' → logprob: -5.768566131591797
    7. ' >' → logprob: -6.143566131591797
    8. ')' → logprob: -6.893566131591797
    9. ' =' → logprob: -7.768566131591797
    10. '<=' → logprob: -8.643566131591797

Token 3822: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.857719275401905e-05
    2. '3' → logprob: -10.875038146972656
    3. ' ' → logprob: -11.250038146972656
    4. '1' → logprob: -12.250038146972656
    5. '   ' → logprob: -14.375038146972656
    6. '=' → logprob: -14.750038146972656
    7. '
' → logprob: -15.125038146972656
    8. '```' → logprob: -15.375038146972656
    9. '>' → logprob: -16.000038146972656
    10. '２' → logprob: -16.875038146972656

Token 3823: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5083376169204712
    2. ' and' → logprob: -1.6333376169204712
    3. 'and' → logprob: -1.8833376169204712
    4. '           ' → logprob: -2.0083374977111816
    5. '>=' → logprob: -2.2583374977111816
    6. '==' → logprob: -2.7583374977111816
    7. '>' → logprob: -3.5083374977111816
    8. ' if' → logprob: -3.8833374977111816
    9. ' >=' → logprob: -3.8833374977111816
    10. ' ==' → logprob: -4.008337497711182

Token 3824: ' first' (ID: 1577)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -1.1009615659713745
    2. 'if' → logprob: -1.2259615659713745
    3. ' and' → logprob: -1.2259615659713745
    4. 'len' → logprob: -2.850961685180664
    5. ' if' → logprob: -4.350961685180664
    6. 'm' → logprob: -5.975961685180664
    7. '           ' → logprob: -6.475961685180664
    8. '
' → logprob: -6.725961685180664
    9. '```' → logprob: -6.850961685180664
    10. ' len' → logprob: -7.100961685180664

Token 3825: ' char' (ID: 1826)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6500701308250427
    2. '(m' → logprob: -2.0250701904296875
    3. 'char' → logprob: -2.5250701904296875
    4. ' and' → logprob: -3.4000701904296875
    5. 'if' → logprob: -3.4000701904296875
    6. ' >=' → logprob: -3.5250701904296875
    7. ' ==' → logprob: -3.6500701904296875
    8. 'c' → logprob: -3.9000701904296875
    9. ' m' → logprob: -3.9000701904296875
    10. '>=' → logprob: -4.0250701904296875

Token 3826: ' vo' (ID: 778)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.3263123035430908
    2. ' >=' → logprob: -1.7013123035430908
    3. '==' → logprob: -2.826312303543091
    4. '>' → logprob: -4.326312065124512
    5. ' ==' → logprob: -4.701312065124512
    6. 'm' → logprob: -4.701312065124512
    7. '```' → logprob: -6.326312065124512
    8. ' in' → logprob: -7.451312065124512
    9. 'in' → logprob: -7.826312065124512
    10. ' >' → logprob: -8.076312065124512

Token 3827: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.003994342405349016
    2. 'i' → logprob: -7.003994464874268
    3. ' ' → logprob: -7.128994464874268
    4. '```' → logprob: -7.753994464874268
    5. '   ' → logprob: -8.12899398803711
    6. 'ice' → logprob: -8.25399398803711
    7. 'if' → logprob: -8.50399398803711
    8. 'oc' → logprob: -8.75399398803711
    9. 'c' → logprob: -8.87899398803711
    10. '``' → logprob: -9.50399398803711

Token 3828: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.0003156817110721022
    2. 'el' → logprob: -8.12531566619873
    3. 'less' → logprob: -11.87531566619873
    4. 'e' → logprob: -12.50031566619873
    5. '```' → logprob: -13.12531566619873
    6. 'elif' → logprob: -14.12531566619873
    7. '``' → logprob: -14.12531566619873
    8. 'els' → logprob: -14.37531566619873
    9. 'eles' → logprob: -14.75031566619873
    10. '#' → logprob: -14.75031566619873

Token 3829: ' conson' (ID: 127767)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.801612913608551
    2. ' if' → logprob: -1.6766128540039062
    3. ' and' → logprob: -2.0516128540039062
    4. '   ' → logprob: -2.8016128540039062
    5. '==' → logprob: -3.1766128540039062
    6. 'and' → logprob: -3.4266128540039062
    7. ' =' → logprob: -3.8016128540039062
    8. ' ==' → logprob: -3.9266128540039062
    9. '=' → logprob: -4.051612854003906
    10. ':
' → logprob: -4.426612854003906

Token 3830: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.043967727571725845
    2. 't' → logprob: -3.1689677238464355
    3. 'ants' → logprob: -7.0439677238464355
    4. 'tant' → logprob: -9.418968200683594
    5. 'at' → logprob: -12.418968200683594
    6. '   ' → logprob: -12.543968200683594
    7. 'nt' → logprob: -13.918968200683594
    8. ' t' → logprob: -14.043968200683594
    9. 'a' → logprob: -14.418968200683594
    10. 'т' → logprob: -14.418968200683594

Token 3831: ',' (ID: 11)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.8641156554222107
    2. ' and' → logprob: -0.9891156554222107
    3. '   ' → logprob: -2.1141157150268555
    4. 'if' → logprob: -2.7391157150268555
    5. ' if' → logprob: -4.6141157150268555
    6. '       ' → logprob: -5.6141157150268555
    7. '=' → logprob: -6.7391157150268555
    8. ':
' → logprob: -6.7391157150268555
    9. ':' → logprob: -7.2391157150268555
    10. '==' → logprob: -7.3641157150268555

Token 3832: ' last' (ID: 2174)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.26213183999061584
    2. 'and' → logprob: -2.137131929397583
    3. 'm' → logprob: -2.762131929397583
    4. '   ' → logprob: -4.012131690979004
    5. '2' → logprob: -4.012131690979004
    6. ' and' → logprob: -5.512131690979004
    7. 's' → logprob: -6.262131690979004
    8. 'second' → logprob: -6.387131690979004
    9. 'v' → logprob: -6.637131690979004
    10. 'if' → logprob: -7.137131690979004

Token 3833: ' char' (ID: 1826)
  Prédit: ' ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ch' → logprob: -0.5604284405708313
    2. 'char' → logprob: -1.6854283809661865
    3. ' char' → logprob: -1.8104283809661865
    4. ' ' → logprob: -3.3104283809661865
    5. '_char' → logprob: -4.185428619384766
    6. 'ch' → logprob: -5.060428619384766
    7. ' (' → logprob: -5.185428619384766
    8. ']' → logprob: -5.310428619384766
    9. ')' → logprob: -6.060428619384766
    10. '()' → logprob: -6.810428619384766

Token 3834: ' vowel' (ID: 165542)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5284380912780762
    2. ' in' → logprob: -1.1534380912780762
    3. '==' → logprob: -3.028438091278076
    4. ' ==' → logprob: -3.403438091278076
    5. 'v' → logprob: -4.903438091278076
    6. ')' → logprob: -6.403438091278076
    7. '[' → logprob: -7.528438091278076
    8. 'if' → logprob: -7.903438091278076
    9. '```' → logprob: -7.903438091278076
    10. ' v' → logprob: -8.028438568115234

Token 3835: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29259809851646423
    2. ' and' → logprob: -2.542598009109497
    3. 'if' → logprob: -2.792598009109497
    4. ' if' → logprob: -3.167598009109497
    5. 'and' → logprob: -3.542598009109497
    6. ':
' → logprob: -4.667598247528076
    7. ':' → logprob: -4.917598247528076
    8. '       ' → logprob: -5.417598247528076
    9. '   ' → logprob: -5.542598247528076
    10. '```' → logprob: -6.042598247528076

Token 3836: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011770292185246944
    2. '       ' → logprob: -5.511770248413086
    3. ' if' → logprob: -5.886770248413086
    4. ' and' → logprob: -6.636770248413086
    5. '   ' → logprob: -6.761770248413086
    6. 'if' → logprob: -6.761770248413086
    7. ':' → logprob: -8.261770248413086
    8. '{
' → logprob: -8.636770248413086
    9. '               ' → logprob: -8.636770248413086
    10. 'and' → logprob: -8.886770248413086

Token 3837: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0916074812412262
    2. '           ' → logprob: -2.5916075706481934
    3. ' if' → logprob: -4.966607570648193
    4. '       ' → logprob: -5.341607570648193
    5. '```' → logprob: -8.216607093811035
    6. '   ' → logprob: -8.341607093811035
    7. '	if' → logprob: -8.716607093811035
    8. ' ' → logprob: -9.716607093811035
    9. 'while' → logprob: -9.716607093811035
    10. '               ' → logprob: -11.091607093811035

Token 3838: ' must' (ID: 2804)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.364814817905426
    2. ' if' → logprob: -1.8648147583007812
    3. '           ' → logprob: -1.9898147583007812
    4. '       ' → logprob: -5.364814758300781
    5. '	if' → logprob: -6.114814758300781
    6. '   ' → logprob: -6.114814758300781
    7. 'while' → logprob: -6.864814758300781
    8. ' ' → logprob: -7.114814758300781
    9. '{
' → logprob: -7.864814758300781
    10. '               ' → logprob: -7.864814758300781

Token 3839: ' not' (ID: 625)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8512293100357056
    2. '=len' → logprob: -0.9762293100357056
    3. '=' → logprob: -1.7262293100357056
    4. '(len' → logprob: -4.351229190826416
    5. '>=' → logprob: -6.476229190826416
    6. ' len' → logprob: -6.726229190826416
    7. '<len' → logprob: -7.101229190826416
    8. 'm' → logprob: -8.101229667663574
    9. ' =' → logprob: -8.101229667663574
    10. '[len' → logprob: -8.101229667663574

Token 3840: ' be' (ID: 413)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.40051954984664917
    2. 'len' → logprob: -1.400519609451294
    3. 'not' → logprob: -2.650519609451294
    4. '(not' → logprob: -5.525519371032715
    5. '(m' → logprob: -5.650519371032715
    6. ' not' → logprob: -6.525519371032715
    7. ' len' → logprob: -6.650519371032715
    8. ' (' → logprob: -6.650519371032715
    9. '=len' → logprob: -8.025519371032715
    10. '(
' → logprob: -8.400519371032715

Token 3841: ' s' (ID: 265)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.5989431142807007
    2. 'len' → logprob: -0.8489431142807007
    3. 'not' → logprob: -4.47394323348999
    4. ' len' → logprob: -5.22394323348999
    5. ' not' → logprob: -6.22394323348999
    6. '(not' → logprob: -6.59894323348999
    7. '(i' → logprob: -6.84894323348999
    8. ' (' → logprob: -7.09894323348999
    9. '(m' → logprob: -7.97394323348999
    10. '   ' → logprob: -9.598942756652832

Token 3842: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.6970138549804688
    2. 'v' → logprob: -1.4470138549804688
    3. 'len' → logprob: -2.6970138549804688
    4. 'vo' → logprob: -2.9470138549804688
    5. 't' → logprob: -3.3220138549804688
    6. 'length' → logprob: -4.447013854980469
    7. 'ize' → logprob: -4.572013854980469
    8. 'o' → logprob: -4.947013854980469
    9. 'ok' → logprob: -5.072013854980469
    10. 'uffix' → logprob: -5.072013854980469

Token 3843: 'on' (ID: 263)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.5626287460327148
    2. 'i' → logprob: -2.187628746032715
    3. '   ' → logprob: -2.312628746032715
    4. 'n' → logprob: -2.312628746032715
    5. 'l' → logprob: -2.437628746032715
    6. '           ' → logprob: -2.812628746032715
    7. 'if' → logprob: -2.937628746032715
    8. 'm' → logprob: -3.437628746032715
    9. '       ' → logprob: -3.687628746032715
    10. '=' → logprob: -3.812628746032715

Token 3844: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07631611078977585
    2. 'if' → logprob: -2.7013161182403564
    3. ' if' → logprob: -5.201315879821777
    4. '   ' → logprob: -7.326315879821777
    5. '		' → logprob: -9.951315879821777
    6. '       ' → logprob: -10.201315879821777
    7. '	if' → logprob: -10.326315879821777
    8. '```' → logprob: -10.451315879821777
    9. '	   ' → logprob: -11.451315879821777
    10. ' ' → logprob: -11.451315879821777

Token 3845: ' long' (ID: 1701)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5436531901359558
    2. 'm' → logprob: -2.0436532497406006
    3. 'len' → logprob: -2.2936532497406006
    4. 'v' → logprob: -3.0436532497406006
    5. ' y' → logprob: -3.5436532497406006
    6. ''' → logprob: -4.0436530113220215
    7. '(m' → logprob: -4.4186530113220215
    8. ''y' → logprob: -4.9186530113220215
    9. 'next' → logprob: -4.9186530113220215
    10. '#' → logprob: -5.1686530113220215

Token 3846: ' vowel' (ID: 165542)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.578079104423523
    2. 'if' → logprob: -1.078079104423523
    3. ' if' → logprob: -2.8280792236328125
    4. '       ' → logprob: -4.9530792236328125
    5. '               ' → logprob: -5.2030792236328125
    6. ':
' → logprob: -5.5780792236328125
    7. '   ' → logprob: -5.5780792236328125
    8. '=' → logprob: -5.5780792236328125
    9. '>=' → logprob: -6.3280792236328125
    10. ' =' → logprob: -6.4530792236328125

Token 3847: ' mor' (ID: 4658)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2550763785839081
    2. 'if' → logprob: -2.2550764083862305
    3. ' if' → logprob: -3.0050764083862305
    4. '       ' → logprob: -4.0050764083862305
    5. '               ' → logprob: -4.3800764083862305
    6. '   ' → logprob: -4.7550764083862305
    7. ':
' → logprob: -5.1300764083862305
    8. ' and' → logprob: -5.2550764083862305
    9. ':' → logprob: -5.5050764083862305
    10. '                   ' → logprob: -6.2550764083862305

Token 3848: 'as' (ID: 288)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.018314290791749954
    2. 'as' → logprob: -4.018314361572266
    3. 'len' → logprob: -10.268314361572266
    4. 'e' → logprob: -10.518314361572266
    5. 'length' → logprob: -10.518314361572266
    6. 'def' → logprob: -11.143314361572266
    7. 'ph' → logprob: -11.268314361572266
    8. 'ora' → logprob: -11.393314361572266
    9. '```' → logprob: -12.768314361572266
    10. 'ah' → logprob: -12.893314361572266

Token 3849: ' inside' (ID: 6772)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04356907308101654
    2. '       ' → logprob: -3.5435690879821777
    3. '   ' → logprob: -5.418569087982178
    4. '               ' → logprob: -5.793569087982178
    5. ' if' → logprob: -6.418569087982178
    6. 'if' → logprob: -7.168569087982178
    7. '{
' → logprob: -7.543569087982178
    8. '```' → logprob: -7.668569087982178
    9. '                   ' → logprob: -8.04356861114502
    10. '[i' → logprob: -8.91856861114502

Token 3850: ' sequence' (ID: 16281)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030936971306800842
    2. '```' → logprob: -6.628093719482422
    3. ' if' → logprob: -7.628093719482422
    4. '       ' → logprob: -7.628093719482422
    5. 'if' → logprob: -8.003093719482422
    6. '               ' → logprob: -8.753093719482422
    7. '   ' → logprob: -8.878093719482422
    8. '		' → logprob: -10.378093719482422
    9. '
' → logprob: -11.128093719482422
    10. ',' → logprob: -11.253093719482422

Token 3851: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04679488763213158
    2. 'if' → logprob: -3.921794891357422
    3. ' if' → logprob: -4.171794891357422
    4. '       ' → logprob: -5.046794891357422
    5. '               ' → logprob: -6.921794891357422
    6. 'while' → logprob: -7.546794891357422
    7. '   ' → logprob: -7.671794891357422
    8. '```' → logprob: -8.046794891357422
    9. '		' → logprob: -8.296794891357422
    10. '{
' → logprob: -8.296794891357422

Token 3852: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011275111697614193
    2. '```' → logprob: -4.511275291442871
    3. 'if' → logprob: -9.136275291442871
    4. '       ' → logprob: -9.886275291442871
    5. ' if' → logprob: -10.136275291442871
    6. '               ' → logprob: -11.261275291442871
    7. '``' → logprob: -12.636275291442871
    8. 'If' → logprob: -12.761275291442871
    9. '   ' → logprob: -12.761275291442871
    10. '		' → logprob: -13.386275291442871

Token 3853: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07572757452726364
    2. 'if' (adapté à ' if') → logprob: -2.7007274627685547
    3. ' if' → logprob: -5.450727462768555
    4. '       ' → logprob: -7.700727462768555
    5. '   ' → logprob: -7.825727462768555
    6. '```' → logprob: -8.075727462768555
    7. 'while' → logprob: -8.450727462768555
    8. ' ' → logprob: -9.950727462768555
    9. '	if' → logprob: -10.950727462768555
    10. '	   ' → logprob: -11.825727462768555

Token 3854: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2544371783733368
    2. 'not' → logprob: -1.7544372081756592
    3. ' not' → logprob: -3.504437208175659
    4. ' len' → logprob: -4.12943696975708
    5. '(len' → logprob: -5.37943696975708
    6. '   ' → logprob: -7.62943696975708
    7. '(not' → logprob: -8.754437446594238
    8. 'i' → logprob: -9.379437446594238
    9. '  ' → logprob: -10.379437446594238
    10. ' ' → logprob: -10.504437446594238

Token 3855: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.868328920158092e-05
    2. 'm' → logprob: -10.750028610229492
    3. '(s' → logprob: -12.125028610229492
    4. '(' → logprob: -14.500028610229492
    5. ' (' → logprob: -15.125028610229492
    6. '[m' → logprob: -15.375028610229492
    7. 's' → logprob: -15.500028610229492
    8. '(v' → logprob: -16.625028610229492
    9. '(
' → logprob: -16.875028610229492
    10. '	m' → logprob: -16.875028610229492

Token 3856: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24293671548366547
    2. ' >=' → logprob: -1.7429367303848267
    3. '>=' → logprob: -3.617936611175537
    4. ')>=' → logprob: -4.742936611175537
    5. '[m' → logprob: -5.992936611175537
    6. ' <' → logprob: -7.242936611175537
    7. '<m' → logprob: -7.742936611175537
    8. 'm' → logprob: -8.117937088012695
    9. '>' → logprob: -8.117937088012695
    10. '(m' → logprob: -8.867937088012695

Token 3857: ' <' (ID: 464)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.1442946046590805
    2. ' >=' → logprob: -2.644294500350952
    3. '<' → logprob: -3.019294500350952
    4. '>' → logprob: -5.019294738769531
    5. ' <' → logprob: -5.269294738769531
    6. '==' → logprob: -6.144294738769531
    7. ')' → logprob: -9.019294738769531
    8. '```' → logprob: -9.144294738769531
    9. '<=' → logprob: -9.644294738769531
    10. ' ==' → logprob: -9.769294738769531

Token 3858: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0012133294949308038
    2. ' ' → logprob: -6.751213550567627
    3. '   ' → logprob: -11.001213073730469
    4. '3' → logprob: -11.626213073730469
    5. '1' → logprob: -12.063713073730469
    6. '```' → logprob: -12.313713073730469
    7. '>' → logprob: -13.501213073730469
    8. '  ' → logprob: -14.251213073730469
    9. '=' → logprob: -14.313713073730469
    10. '
' → logprob: -14.626213073730469

Token 3859: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8206473871250637e-05
    2. ' ' → logprob: -10.625028610229492
    3. '```' → logprob: -13.250028610229492
    4. '   ' → logprob: -14.750028610229492
    5. '=' → logprob: -15.250028610229492
    6. '1' → logprob: -15.312528610229492
    7. '3' → logprob: -15.312528610229492
    8. '>' → logprob: -15.625028610229492
    9. '``' → logprob: -16.437528610229492
    10. '
' → logprob: -16.500028610229492

Token 3860: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.040175363421440125
    2. 'or' → logprob: -3.290175437927246
    3. '           ' → logprob: -7.040175437927246
    4. ':' → logprob: -7.665175437927246
    5. ':
' → logprob: -7.915175437927246
    6. '               ' → logprob: -8.790175437927246
    7. '       ' → logprob: -8.915175437927246
    8. '	or' → logprob: -10.040175437927246
    9. ' and' → logprob: -10.790175437927246
    10. '```' → logprob: -11.165175437927246

Token 3861: ' not' (ID: 625)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.008705805987119675
    2. 'not' → logprob: -4.7587056159973145
    3. '(m' → logprob: -10.258706092834473
    4. ' m' → logprob: -11.133706092834473
    5. ' not' → logprob: -11.383706092834473
    6. 'is' → logprob: -11.883706092834473
    7. '(not' → logprob: -12.008706092834473
    8. 'mor' → logprob: -12.133706092834473
    9. 'mo' → logprob: -13.008706092834473
    10. 'vo' → logprob: -13.258706092834473

Token 3862: ' is' (ID: 382)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.16136498749256134
    2. 'm' → logprob: -2.036365032196045
    3. 'is' → logprob: -4.286365032196045
    4. '(vo' → logprob: -6.411365032196045
    5. ' (' → logprob: -6.536365032196045
    6. '(is' → logprob: -7.661365032196045
    7. 'vo' → logprob: -7.911365032196045
    8. 'mor' → logprob: -8.286364555358887
    9. '(' → logprob: -8.661364555358887
    10. '(v' → logprob: -9.286364555358887

Token 3863: '_vo' (ID: 145825)
  Prédit: '_vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vo' → logprob: -0.010190204717218876
    2. 'vo' → logprob: -4.635190010070801
    3. 'm' → logprob: -8.1351900100708
    4. '(vo' → logprob: -10.0101900100708
    5. '(m' → logprob: -10.3851900100708
    6. '	vo' → logprob: -10.6351900100708
    7. 'voi' → logprob: -11.5101900100708
    8. '_m' → logprob: -11.8851900100708
    9. 'is' → logprob: -12.8851900100708
    10. '_v' → logprob: -12.8851900100708

Token 3864: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.00012070851516909897
    2. '```' → logprob: -10.250121116638184
    3. 'icelo' → logprob: -10.625121116638184
    4. '``' → logprob: -10.875121116638184
    5. 'ice' → logprob: -11.500121116638184
    6. 'icemail' → logprob: -12.000121116638184
    7. 'oc' → logprob: -12.500121116638184
    8. 'cel' → logprob: -12.875121116638184
    9. '
' → logprob: -13.250121116638184
    10. 'ices' → logprob: -13.375121116638184

Token 3865: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.0007612687186338007
    2. 'cel' → logprob: -8.500761032104492
    3. 'ele' → logprob: -8.750761032104492
    4. 'el' → logprob: -9.000761032104492
    5. 'less' → logprob: -9.250761032104492
    6. 'e' → logprob: -9.875761032104492
    7. 'veless' → logprob: -9.875761032104492
    8. 'ic' → logprob: -10.125761032104492
    9. 'heless' → logprob: -11.250761032104492
    10. 'ueless' → logprob: -11.625761032104492

Token 3866: '_m' (ID: 1285)
  Prédit: '_con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_con' → logprob: -0.2186417579650879
    2. '_m' → logprob: -1.718641757965088
    3. 'm' → logprob: -4.468641757965088
    4. 'con' → logprob: -5.343641757965088
    5. '(m' → logprob: -7.593641757965088
    6. '_' → logprob: -8.84364128112793
    7. '_c' → logprob: -10.59364128112793
    8. ')' → logprob: -10.84364128112793
    9. ' conson' → logprob: -10.96864128112793
    10. 'Con' → logprob: -11.21864128112793

Token 3867: 'ora' (ID: 2505)
  Prédit: 'ora'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -0.6439806222915649
    2. 'm' → logprob: -1.018980622291565
    3. '_con' → logprob: -3.1439805030822754
    4. '_m' → logprob: -3.5189805030822754
    5. 'con' → logprob: -3.8939805030822754
    6. '(m' → logprob: -4.268980503082275
    7. '[m' → logprob: -7.643980503082275
    8. ')m' → logprob: -7.768980503082275
    9. 'n' → logprob: -8.081480979919434
    10. 'mor' → logprob: -8.206480979919434

Token 3868: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -2.3676733690081164e-05
    2. 'm' → logprob: -11.25002384185791
    3. '[m' → logprob: -12.75002384185791
    4. '(' → logprob: -13.00002384185791
    5. ' (' → logprob: -13.12502384185791
    6. ')' → logprob: -13.75002384185791
    7. '(s' → logprob: -15.00002384185791
    8. '   ' → logprob: -15.00002384185791
    9. ')m' → logprob: -15.00002384185791
    10. '(
' → logprob: -15.50002384185791

Token 3869: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.15560418367385864
    2. ')' → logprob: -2.905604124069214
    3. '[i' → logprob: -3.405604124069214
    4. '):' → logprob: -3.655604124069214
    5. '[m' → logprob: -4.030604362487793
    6. '[' → logprob: -4.905604362487793
    7. '   ' → logprob: -6.280604362487793
    8. '       ' → logprob: -7.530604362487793
    9. ' or' → logprob: -7.530604362487793
    10. ')[' → logprob: -8.155604362487793

Token 3870: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04812350496649742
    2. '       ' → logprob: -4.048123359680176
    3. 'or' → logprob: -4.173123359680176
    4. ':
' → logprob: -4.423123359680176
    5. ':' → logprob: -6.798123359680176
    6. '           ' → logprob: -7.548123359680176
    7. '   ' → logprob: -8.173123359680176
    8. '      ' → logprob: -10.423123359680176
    9. '               ' → logprob: -10.423123359680176
    10. '```' → logprob: -10.423123359680176

Token 3871: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06061452254652977
    2. 'm' → logprob: -2.935614585876465
    3. '(m' → logprob: -6.185614585876465
    4. '(v' → logprob: -6.435614585876465
    5. ' v' → logprob: -7.060614585876465
    6. 'get' → logprob: -7.810614585876465
    7. ' vowels' → logprob: -7.810614585876465
    8. ' m' → logprob: -9.060614585876465
    9. '   ' → logprob: -9.685614585876465
    10. 'not' → logprob: -10.185614585876465

Token 3872: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1882021427154541
    2. ' ==' → logprob: -1.813202142715454
    3. ' in' → logprob: -5.063201904296875
    4. 'in' → logprob: -6.563201904296875
    5. '==
' → logprob: -8.188201904296875
    6. '=' → logprob: -8.313201904296875
    7. '=='' → logprob: -9.188201904296875
    8. ')' → logprob: -10.688201904296875
    9. '```' → logprob: -11.938201904296875
    10. '{'' → logprob: -12.563201904296875

Token 3873: ' get' (ID: 717)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9423742294311523
    2. ''a' → logprob: -1.3173742294311523
    3. 'a' → logprob: -1.4423742294311523
    4. '{'' → logprob: -2.5673742294311523
    5. 'v' → logprob: -3.9423742294311523
    6. ''m' → logprob: -5.692374229431152
    7. ''' → logprob: -6.192374229431152
    8. '{' → logprob: -6.692374229431152
    9. ' m' → logprob: -6.942374229431152
    10. ' a' → logprob: -7.317374229431152

Token 3874: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.004098227713257074
    2. 'v' → logprob: -6.004098415374756
    3. '_m' → logprob: -6.879098415374756
    4. 'm' → logprob: -7.879098415374756
    5. '(m' → logprob: -8.629097938537598
    6. '(v' → logprob: -12.129097938537598
    7. ' vowel' → logprob: -12.254097938537598
    8. '```' → logprob: -12.379097938537598
    9. '`' → logprob: -12.754097938537598
    10. '_vocab' → logprob: -12.879097938537598

Token 3875: 'owel' (ID: 27097)
  Prédit: 'owel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owel' → logprob: -0.015570302493870258
    2. 'owels' → logprob: -4.390570163726807
    3. 'v' → logprob: -7.015570163726807
    4. 'ow' → logprob: -7.390570163726807
    5. 'ovel' → logprob: -7.890570163726807
    6. 'owe' → logprob: -7.890570163726807
    7. 'm' → logprob: -8.640570640563965
    8. 'o' → logprob: -9.265570640563965
    9. 'owl' → logprob: -9.390570640563965
    10. '```' → logprob: -9.640570640563965

Token 3876: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -5.7292167184641585e-05
    2. 'm' → logprob: -9.875057220458984
    3. '[m' → logprob: -13.375057220458984
    4. '(' → logprob: -13.625057220458984
    5. '```' → logprob: -14.375057220458984
    6. ')m' → logprob: -15.125057220458984
    7. ' (' → logprob: -15.125057220458984
    8. '(
' → logprob: -15.500057220458984
    9. '((' → logprob: -15.625057220458984
    10. '(v' → logprob: -15.750057220458984

Token 3877: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1469927728176117
    2. '):' → logprob: -2.1469926834106445
    3. ')' → logprob: -4.3969926834106445
    4. 'm' → logprob: -5.7719926834106445
    5. '[m' → logprob: -7.1469926834106445
    6. '           ' → logprob: -7.2719926834106445
    7. '(m' → logprob: -7.2719926834106445
    8. '[i' → logprob: -7.7719926834106445
    9. ')m' → logprob: -8.021992683410645
    10. ')[' → logprob: -8.021992683410645

Token 3878: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0855783075094223
    2. '           ' → logprob: -3.085578203201294
    3. '       ' → logprob: -3.335578203201294
    4. ':
' → logprob: -8.210577964782715
    5. '```' → logprob: -8.335577964782715
    6. '                   ' → logprob: -9.710577964782715
    7. 'i' → logprob: -9.960577964782715
    8. ':' → logprob: -10.585577964782715
    9. '   ' → logprob: -10.710577964782715
    10. '              ' → logprob: -11.460577964782715

Token 3879: ' i' (ID: 575)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14878728985786438
    2. 'i' (adapté à ' i') → logprob: -2.023787260055542
    3. '           ' → logprob: -5.648787498474121
    4. '   ' → logprob: -7.023787498474121
    5. ' i' → logprob: -7.273787498474121
    6. '       ' → logprob: -7.398787498474121
    7. '                   ' → logprob: -8.148787498474121
    8. '	i' → logprob: -11.023787498474121
    9. '```' → logprob: -11.148787498474121
    10. 'continue' → logprob: -11.273787498474121

Token 3880: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.029751762747764587
    2. ' +=' → logprob: -3.529751777648926
    3. '   ' → logprob: -14.404751777648926
    4. '+' → logprob: -15.279751777648926
    5. '```' → logprob: -15.404751777648926
    6. '=' → logprob: -15.904751777648926
    7. ']+=' → logprob: -16.40475082397461
    8. '    ' → logprob: -17.27975082397461
    9. '	' → logprob: -17.40475082397461
    10. ' ' → logprob: -18.15475082397461

Token 3881: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -15.250040054321289
    4. '   ' → logprob: -17.87504005432129
    5. '2' → logprob: -18.62504005432129
    6. '+' → logprob: -19.50004005432129
    7. '0' → logprob: -19.87504005432129
    8. '１' → logprob: -20.00004005432129
    9. '  ' → logprob: -20.43754005432129
    10. '=' → logprob: -20.56254005432129

Token 3882: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -15.375000953674316
    4. '   ' → logprob: -18.875001907348633
    5. '2' → logprob: -19.125001907348633
    6. '１' → logprob: -19.625001907348633
    7. '+' → logprob: -20.000001907348633
    8. '
' → logprob: -20.000001907348633
    9. '0' → logprob: -20.125001907348633
    10. '=' → logprob: -20.812501907348633

Token 3883: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3552643358707428
    2. '           ' → logprob: -1.3552643060684204
    3. '                   ' → logprob: -3.23026442527771
    4. ':
' → logprob: -7.730264186859131
    5. '```' → logprob: -7.730264186859131
    6. 'continue' → logprob: -9.480264663696289
    7. ':' → logprob: -9.480264663696289
    8. ' continue' → logprob: -9.480264663696289
    9. '                       ' → logprob: -9.605264663696289
    10. '       ' → logprob: -9.855264663696289

Token 3884: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09564431756734848
    2. '               ' → logprob: -2.720644235610962
    3. '```' → logprob: -4.095644474029541
    4. '                   ' → logprob: -4.970644474029541
    5. 'continue' → logprob: -7.845644474029541
    6. ':
' → logprob: -7.970644474029541
    7. '       ' → logprob: -8.470643997192383
    8. '                       ' → logprob: -8.720643997192383
    9. '   ' → logprob: -8.845643997192383
    10. '	       ' → logprob: -9.220643997192383

Token 3885: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.07882599532604218
    2. '               ' → logprob: -2.9538259506225586
    3. '           ' → logprob: -4.203825950622559
    4. '                   ' → logprob: -5.203825950622559
    5. ' continue' → logprob: -5.828825950622559
    6. '	continue' → logprob: -8.953825950622559
    7. '   ' → logprob: -9.703825950622559
    8. '       ' → logprob: -10.453825950622559
    9. '```' → logprob: -10.953825950622559
    10. '             ' → logprob: -11.578825950622559

Token 3886: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012640443164855242
    2. 'j' → logprob: -7.7512640953063965
    3. '               ' → logprob: -7.7512640953063965
    4. '```' → logprob: -8.501263618469238
    5. 'continue' → logprob: -10.001263618469238
    6. '
' → logprob: -10.126263618469238
    7. '            
' → logprob: -11.126263618469238
    8. '   ' → logprob: -11.126263618469238
    9. '       ' → logprob: -11.626263618469238
    10. 'start' → logprob: -11.751263618469238

Token 3887: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0077811297960579395
    2. '```' → logprob: -5.007781028747559
    3. '               ' → logprob: -7.757781028747559
    4. 'j' → logprob: -8.257781028747559
    5. 'continue' → logprob: -9.257781028747559
    6. 'i' → logprob: -9.507781028747559
    7. '   ' → logprob: -10.132781028747559
    8. '                   ' → logprob: -10.757781028747559
    9. '       ' → logprob: -10.882781028747559
    10. ' continue' → logprob: -11.132781028747559

Token 3888: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5605981349945068
    2. 'start' → logprob: -1.0605981349945068
    3. 'j' → logprob: -2.685598134994507
    4. 'seq' → logprob: -4.810598373413086
    5. 'count' → logprob: -5.810598373413086
    6. 'length' → logprob: -6.060598373413086
    7. 'chain' → logprob: -7.560598373413086
    8. 'run' → logprob: -8.435598373413086
    9. '#' (adapté à ' #') → logprob: -9.310598373413086
    10. 'sequence' → logprob: -9.310598373413086

Token 3889: ' start' (ID: 1604)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.19727711379528046
    2. 'start' → logprob: -2.197277069091797
    3. '           ' → logprob: -2.697277069091797
    4. 'seq' → logprob: -8.072277069091797
    5. ' j' → logprob: -9.697277069091797
    6. 'length' → logprob: -9.947277069091797
    7. '```' → logprob: -10.572277069091797
    8. '#' → logprob: -10.697277069091797
    9. 'run' → logprob: -10.947277069091797
    10. '_j' → logprob: -12.197277069091797

Token 3890: ' of' (ID: 328)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1456991732120514
    2. 'idx' → logprob: -2.8956992626190186
    3. '=' → logprob: -3.7706992626190186
    4. '           ' → logprob: -3.8956992626190186
    5. 'while' → logprob: -4.6456990242004395
    6. ' =' → logprob: -5.3956990242004395
    7. 'pos' → logprob: -5.5206990242004395
    8. 'start' → logprob: -5.5206990242004395
    9. 'seq' → logprob: -5.5206990242004395
    10. '_j' → logprob: -6.0206990242004395

Token 3891: ' potential' (ID: 6451)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.33178064227104187
    2. 'sequence' → logprob: -2.3317806720733643
    3. 'i' → logprob: -2.7067806720733643
    4. 'j' → logprob: -3.2067806720733643
    5. 'seq' → logprob: -3.4567806720733643
    6. 'a' → logprob: -4.206780433654785
    7. '1' → logprob: -4.706780433654785
    8. 'run' → logprob: -4.831780433654785
    9. '#' → logprob: -5.831780433654785
    10. 'un' → logprob: -6.331780433654785

Token 3892: ' chain' (ID: 13464)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6937764286994934
    2. 'chain' → logprob: -1.1937763690948486
    3. 'seq' → logprob: -1.6937763690948486
    4. 'sequence' → logprob: -4.693776607513428
    5. 'start' → logprob: -5.943776607513428
    6. 'run' → logprob: -7.318776607513428
    7. '   ' → logprob: -8.06877613067627
    8. ' j' → logprob: -8.56877613067627
    9. '```' → logprob: -8.56877613067627
    10. 'segment' → logprob: -10.06877613067627

Token 3893: ' of' (ID: 328)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12729720771312714
    2. '           ' → logprob: -2.1272971630096436
    3. ' j' → logprob: -8.752297401428223
    4. '```' → logprob: -9.377297401428223
    5. 'start' → logprob: -9.752297401428223
    6. ',j' → logprob: -10.627297401428223
    7. '_j' → logprob: -11.377297401428223
    8. '	j' → logprob: -12.252297401428223
    9. '   ' → logprob: -12.502297401428223
    10. 'count' → logprob: -12.627297401428223

Token 3894: ' same' (ID: 2684)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.32027894258499146
    2. 'un' → logprob: -1.8202788829803467
    3. 'con' → logprob: -2.5702788829803467
    4. '1' → logprob: -4.695279121398926
    5. 'chain' → logprob: -5.070279121398926
    6. 'vo' → logprob: -5.320279121398926
    7. 'length' → logprob: -5.570279121398926
    8. 'sequence' → logprob: -5.570279121398926
    9. 'while' → logprob: -6.320279121398926
    10. 'same' → logprob: -6.570279121398926

Token 3895: ' vowel' (ID: 165542)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005319139454513788
    2. 'm' → logprob: -5.380319118499756
    3. '_v' → logprob: -8.755319595336914
    4. '   ' → logprob: -9.130319595336914
    5. '```' → logprob: -9.380319595336914
    6. 'token' → logprob: -9.755319595336914
    7. ' vowel' → logprob: -10.005319595336914
    8. '           ' → logprob: -10.130319595336914
    9. '       ' → logprob: -10.380319595336914
    10. '
' → logprob: -10.505319595336914

Token 3896: ' vo' (ID: 778)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.579926073551178
    2. 'j' → logprob: -0.829926073551178
    3. '```' → logprob: -6.579926013946533
    4. ' j' → logprob: -6.954926013946533
    5. ',j' → logprob: -7.204926013946533
    6. '_j' → logprob: -8.204926490783691
    7. ',' → logprob: -8.329926490783691
    8. '
' → logprob: -9.204926490783691
    9. '+j' → logprob: -10.329926490783691
    10. '	j' → logprob: -10.454926490783691

Token 3897: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.004543692339211702
    2. '```' → logprob: -6.254543781280518
    3. 'i' → logprob: -6.504543781280518
    4. '#' → logprob: -7.629543781280518
    5. '``' → logprob: -8.37954330444336
    6. '`' → logprob: -9.75454330444336
    7. 'icelo' → logprob: -10.00454330444336
    8. 'ice' → logprob: -10.62954330444336
    9. 'icemail' → logprob: -10.62954330444336
    10. 'iced' → logprob: -10.87954330444336

Token 3898: 'eless' (ID: 12279)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.03322489559650421
    2. 'eless' → logprob: -3.6582248210906982
    3. 'cel' → logprob: -5.658225059509277
    4. 'iced' → logprob: -7.033225059509277
    5. 'ele' → logprob: -7.283225059509277
    6. 'cl' → logprob: -7.658225059509277
    7. 'less' → logprob: -7.658225059509277
    8. 'el' → logprob: -8.408225059509277
    9. 'ol' → logprob: -8.908225059509277
    10. 'veless' → logprob: -9.158225059509277

Token 3899: ' mor' (ID: 4658)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.33534303307533264
    2. '```' → logprob: -2.0853431224823
    3. '           ' → logprob: -3.2103431224823
    4. '{
' → logprob: -3.8353431224823
    5. ' j' → logprob: -4.210342884063721
    6. '+' → logprob: -4.210342884063721
    7. '_j' → logprob: -4.710342884063721
    8. '=' → logprob: -4.960342884063721
    9. 'while' → logprob: -5.210342884063721
    10. 'i' → logprob: -5.335342884063721

Token 3900: 'as' (ID: 288)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.31753236055374146
    2. 'as' → logprob: -1.3175323009490967
    3. '   ' → logprob: -5.692532539367676
    4. 'ra' → logprob: -8.567532539367676
    5. '{
' → logprob: -8.817532539367676
    6. 'ras' → logprob: -9.067532539367676
    7. '```' → logprob: -9.692532539367676
    8. 'con' → logprob: -9.942532539367676
    9. '
' → logprob: -10.067532539367676
    10. '  ' → logprob: -10.442532539367676

Token 3901: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04997258633375168
    2. 'j' → logprob: -3.0499725341796875
    3. ' j' → logprob: -7.0499725341796875
    4. '```' → logprob: -8.674972534179688
    5. ',j' → logprob: -9.174972534179688
    6. ',' → logprob: -9.299972534179688
    7. 'i' → logprob: -9.299972534179688
    8. 'next' → logprob: -12.174972534179688
    9. '+' → logprob: -12.549972534179688
    10. 'pos' → logprob: -12.799972534179688

Token 3902: '           ' (ID: 352)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.488811731338501
    2. '           ' → logprob: -0.988811731338501
    3. '```' → logprob: -4.738811492919922
    4. ' j' → logprob: -5.613811492919922
    5. 'i' → logprob: -7.113811492919922
    6. ',j' → logprob: -7.988811492919922
    7. '               ' → logprob: -8.613811492919922
    8. '   ' → logprob: -8.738811492919922
    9. ',' → logprob: -8.863811492919922
    10. '``' → logprob: -8.988811492919922

Token 3903: ' start' (ID: 1604)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.051819633692502975
    2. '           ' → logprob: -3.3018195629119873
    3. 'start' (adapté à ' start') → logprob: -4.426819801330566
    4. 'chain' → logprob: -7.176819801330566
    5. 'length' → logprob: -8.301819801330566
    6. '```' → logprob: -8.551819801330566
    7. '       ' → logprob: -8.676819801330566
    8. 'count' → logprob: -9.051819801330566
    9. '   ' → logprob: -9.176819801330566
    10. ' j' → logprob: -10.301819801330566

Token 3904: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16447483003139496
    2. '=' → logprob: -2.0394747257232666
    3. '=i' → logprob: -4.289474964141846
    4. ' +=' → logprob: -6.039474964141846
    5. '_idx' → logprob: -6.164474964141846
    6. '+=' → logprob: -6.539474964141846
    7. '_tokens' → logprob: -8.039474487304688
    8. '+' → logprob: -8.039474487304688
    9. '           ' → logprob: -8.289474487304688
    10. '```' → logprob: -8.664474487304688

Token 3905: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.704273118884885e-07
    2. ' i' → logprob: -14.250000953674316
    3. ')i' → logprob: -19.125
    4. '	i' → logprob: -19.5
    5. '=i' → logprob: -20.125
    6. '{i' → logprob: -20.125
    7. '$i' → logprob: -20.75
    8. '```' → logprob: -20.875
    9. '_i' → logprob: -21.0
    10. '[i' → logprob: -21.875

Token 3906: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35035261511802673
    2. '           ' → logprob: -1.2253526449203491
    3. ' i' → logprob: -7.100352764129639
    4. '```' → logprob: -8.22535228729248
    5. ',i' → logprob: -8.85035228729248
    6. ',' → logprob: -8.97535228729248
    7. '+' → logprob: -8.97535228729248
    8. 'j' → logprob: -9.35035228729248
    9. '=i' → logprob: -9.47535228729248
    10. '+i' → logprob: -9.60035228729248

Token 3907: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10168364644050598
    2. 'i' → logprob: -2.3516836166381836
    3. ' i' → logprob: -7.601683616638184
    4. '```' → logprob: -7.726683616638184
    5. 'j' → logprob: -8.226683616638184
    6. ',' → logprob: -9.851683616638184
    7. '               ' → logprob: -10.101683616638184
    8. '+' → logprob: -10.726683616638184
    9. ',i' → logprob: -10.976683616638184
    10. '	       ' → logprob: -10.976683616638184

Token 3908: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' (adapté à ' j') → logprob: -0.46197229623794556
    2. 'i' → logprob: -1.5869722366333008
    3. '           ' → logprob: -1.9619722366333008
    4. 'end' → logprob: -3.711972236633301
    5. 'idx' → logprob: -9.0869722366333
    6. 'count' → logprob: -9.9619722366333
    7. '```' → logprob: -9.9619722366333
    8. ' j' → logprob: -10.2119722366333
    9. 'pos' → logprob: -10.5869722366333
    10. 'while' → logprob: -10.7119722366333

Token 3909: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01149267889559269
    2. ' =' → logprob: -4.511492729187012
    3. '+=' → logprob: -7.761492729187012
    4. ' +=' → logprob: -11.136492729187012
    5. '=i' → logprob: -13.011492729187012
    6. '=j' → logprob: -13.136492729187012
    7. '   ' → logprob: -15.761492729187012
    8. '＝' → logprob: -17.761491775512695
    9. '=
' → logprob: -18.011491775512695
    10. '+' → logprob: -18.136491775512695

Token 3910: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.127333340875339e-06
    2. ' i' → logprob: -12.500003814697266
    3. 'start' → logprob: -14.875003814697266
    4. '```' → logprob: -18.250003814697266
    5. '   ' → logprob: -18.375003814697266
    6. '	i' → logprob: -19.500003814697266
    7. '           ' → logprob: -20.500003814697266
    8. 'j' → logprob: -20.625003814697266
    9. '(i' → logprob: -20.875003814697266
    10. '{i' → logprob: -21.000003814697266

Token 3911: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002088758163154125
    2. ' +' → logprob: -6.25208854675293
    3. '+
' → logprob: -8.87708854675293
    4. '+i' → logprob: -11.37708854675293
    5. '+j' → logprob: -12.00208854675293
    6. '+=' → logprob: -13.75208854675293
    7. '```' → logprob: -14.50208854675293
    8. '           ' → logprob: -14.75208854675293
    9. '++' → logprob: -15.25208854675293
    10. ' +
' → logprob: -15.37708854675293

Token 3912: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008384907618165016
    2. 'i' → logprob: -5.008384704589844
    3. '2' → logprob: -7.008384704589844
    4. 'j' → logprob: -7.633384704589844
    5. '+' → logprob: -9.508384704589844
    6. 'start' → logprob: -9.633384704589844
    7. '0' → logprob: -10.008384704589844
    8. 'n' → logprob: -10.383384704589844
    9. '(' → logprob: -11.258384704589844
    10. '```' → logprob: -11.258384704589844

Token 3913: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0839829295873642
    2. 'while' → logprob: -2.7089829444885254
    3. '
' → logprob: -4.958982944488525
    4. '```' → logprob: -5.958982944488525
    5. ' while' → logprob: -6.208982944488525
    6. '       ' → logprob: -7.083982944488525
    7. '	while' → logprob: -8.083982467651367
    8. '               ' → logprob: -8.083982467651367
    9. '   ' → logprob: -8.958982467651367
    10. '+' → logprob: -9.208982467651367

Token 3914: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06362167000770569
    2. '```' → logprob: -3.313621759414673
    3. 'while' → logprob: -3.813621759414673
    4. '               ' → logprob: -6.563621520996094
    5. '       ' → logprob: -7.563621520996094
    6. ' while' → logprob: -7.938621520996094
    7. '``' → logprob: -8.063621520996094
    8. '                   ' → logprob: -8.563621520996094
    9. '+' → logprob: -9.313621520996094
    10. '
' → logprob: -9.438621520996094

Token 3915: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.006740119773894548
    2. '           ' → logprob: -5.006740093231201
    3. ' while' → logprob: -11.13174057006836
    4. '       ' → logprob: -11.88174057006836
    5. '```' → logprob: -13.13174057006836
    6. '               ' → logprob: -14.25674057006836
    7. '   ' → logprob: -15.75674057006836
    8. '	while' → logprob: -15.88174057006836
    9. '#' → logprob: -16.00674057006836
    10. '                   ' → logprob: -16.50674057006836

Token 3916: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0921942703134846e-05
    2. ' j' → logprob: -11.75001049041748
    3. '(j' → logprob: -13.00001049041748
    4. '   ' → logprob: -14.12501049041748
    5. '(' → logprob: -17.375011444091797
    6. '$j' → logprob: -17.500011444091797
    7. '	j' → logprob: -17.875011444091797
    8. '(
' → logprob: -18.875011444091797
    9. '    ' → logprob: -19.000011444091797
    10. '_j' → logprob: -19.000011444091797

Token 3917: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3790445923805237
    2. ' <' → logprob: -1.629044532775879
    3. '<n' → logprob: -2.379044532775879
    4. '<len' → logprob: -3.629044532775879
    5. '<m' → logprob: -9.754044532775879
    6. '<size' → logprob: -10.879044532775879
    7. '<N' → logprob: -10.879044532775879
    8. '<s' → logprob: -11.379044532775879
    9. '<=' → logprob: -11.504044532775879
    10. '<int' → logprob: -11.504044532775879

Token 3918: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.8624639324116288e-06
    2. ' n' → logprob: -13.250001907348633
    3. 'len' → logprob: -17.375001907348633
    4. ')n' → logprob: -18.125001907348633
    5. '	n' → logprob: -18.500001907348633
    6. '<n' → logprob: -18.500001907348633
    7. '_n' → logprob: -18.750001907348633
    8. 'j' → logprob: -19.000001907348633
    9. '```' → logprob: -19.250001907348633
    10. '   ' → logprob: -19.625001907348633

Token 3919: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.201535165309906
    2. 'and' → logprob: -1.7015352249145508
    3. '           ' → logprob: -9.32653522491455
    4. '               ' → logprob: -11.07653522491455
    5. ':
' → logprob: -12.57653522491455
    6. '	and' → logprob: -12.82653522491455
    7. '          ' → logprob: -12.95153522491455
    8. '            ' → logprob: -13.32653522491455
    9. '                   ' → logprob: -13.32653522491455
    10. '              ' → logprob: -13.70153522491455

Token 3920: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5927321314811707
    2. ' and' → logprob: -1.5927321910858154
    3. 'and' → logprob: -1.8427321910858154
    4. '           ' → logprob: -2.4677321910858154
    5. ':
' → logprob: -8.342732429504395
    6. '```' → logprob: -8.842732429504395
    7. 'if' → logprob: -9.217732429504395
    8. '``' → logprob: -10.467732429504395
    9. ' if' → logprob: -10.592732429504395
    10. ':' → logprob: -10.717732429504395

Token 3921: ' mv' (ID: 40274)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0036929550115019083
    2. ' if' → logprob: -6.128693103790283
    3. 'and' → logprob: -7.878693103790283
    4. 'm' → logprob: -8.003692626953125
    5. '                   ' → logprob: -8.128692626953125
    6. '```' → logprob: -8.503692626953125
    7. '               ' → logprob: -9.378692626953125
    8. '           ' → logprob: -9.503692626953125
    9. '``' → logprob: -9.628692626953125
    10. ' and' → logprob: -10.628692626953125

Token 3922: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31917107105255127
    2. '=' → logprob: -1.3191710710525513
    3. '=m' → logprob: -5.944170951843262
    4. 'or' → logprob: -6.319170951843262
    5. '   ' → logprob: -7.569170951843262
    6. 'oras' → logprob: -8.694170951843262
    7. 's' → logprob: -8.944170951843262
    8. '       ' → logprob: -9.694170951843262
    9. 'ors' → logprob: -10.069170951843262
    10. '[' → logprob: -10.069170951843262

Token 3923: ' vowels' (ID: 176245)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.007009817287325859
    2. 'm' → logprob: -5.007009983062744
    3. 'get' → logprob: -8.257009506225586
    4. 'j' → logprob: -11.132009506225586
    5. ' vowels' → logprob: -11.757009506225586
    6. ' v' → logprob: -12.507009506225586
    7. 'vj' → logprob: -12.882009506225586
    8. 'mo' → logprob: -13.632009506225586
    9. 'mor' → logprob: -13.882009506225586
    10. 'vl' → logprob: -14.632009506225586

Token 3924: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.5776860184123507e-06
    2. 'j' → logprob: -13.50000286102295
    3. '```' → logprob: -14.62500286102295
    4. '[m' → logprob: -15.62500286102295
    5. '[' → logprob: -15.87500286102295
    6. ']' → logprob: -16.375001907348633
    7. '[i' → logprob: -16.375001907348633
    8. '][' → logprob: -16.875001907348633
    9. '[
' → logprob: -17.750001907348633
    10. ')' → logprob: -17.875001907348633

Token 3925: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3748150169849396
    2. '[j' → logprob: -1.2498149871826172
    3. ']
' → logprob: -4.124814987182617
    4. ']==' → logprob: -4.749814987182617
    5. ']:
' → logprob: -8.249814987182617
    6. 'j' → logprob: -8.624814987182617
    7. '```' → logprob: -8.624814987182617
    8. '[i' → logprob: -8.749814987182617
    9. '][' → logprob: -8.999814987182617
    10. '[m' → logprob: -9.624814987182617

Token 3926: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7013634443283081
    2. 'and' → logprob: -0.8263634443283081
    3. '                   ' → logprob: -3.2013635635375977
    4. '==' → logprob: -4.576363563537598
    5. ' ==' → logprob: -5.576363563537598
    6. '                       ' → logprob: -5.951363563537598
    7. '               ' → logprob: -5.951363563537598
    8. '```' → logprob: -5.951363563537598
    9. 'if' → logprob: -6.826363563537598
    10. ' if' → logprob: -7.076363563537598

Token 3927: ' mm' (ID: 8957)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04626886546611786
    2. 'm' → logprob: -3.171268939971924
    3. 'j' → logprob: -6.796268939971924
    4. ' if' → logprob: -7.171268939971924
    5. 'and' → logprob: -7.671268939971924
    6. 'v' → logprob: -7.921268939971924
    7. '                   ' → logprob: -8.171268463134766
    8. '               ' → logprob: -9.046268463134766
    9. 'mv' → logprob: -9.921268463134766
    10. 'mor' → logprob: -11.421268463134766

Token 3928: ' =' (ID: 314)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.24108485877513885
    2. ' =' → logprob: -2.4910848140716553
    3. '[i' → logprob: -2.8660848140716553
    4. '=' → logprob: -3.2410848140716553
    5. '[m' → logprob: -3.9910848140716553
    6. '               ' → logprob: -5.616085052490234
    7. '           ' → logprob: -5.991085052490234
    8. '[' → logprob: -6.116085052490234
    9. '                   ' → logprob: -6.491085052490234
    10. '=j' → logprob: -6.866085052490234

Token 3929: ' mor' (ID: 4658)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.001047339290380478
    2. 'mor' → logprob: -7.001047134399414
    3. 's' → logprob: -10.751047134399414
    4. '   ' → logprob: -10.876047134399414
    5. '`' → logprob: -11.001047134399414
    6. ' mor' → logprob: -11.001047134399414
    7. ''m' → logprob: -11.126047134399414
    8. 'maras' → logprob: -11.501047134399414
    9. '  ' → logprob: -12.501047134399414
    10. '	m' → logprob: -12.626047134399414

Token 3930: 'as' (ID: 288)
  Prédit: 'oras'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oras' → logprob: -0.03034195490181446
    2. 'or' → logprob: -4.530342102050781
    3. '[m' → logprob: -5.155342102050781
    4. 'm' → logprob: -5.780342102050781
    5. 's' → logprob: -5.780342102050781
    6. 'ras' → logprob: -6.030342102050781
    7. '[j' → logprob: -6.280342102050781
    8. '[' → logprob: -7.280342102050781
    9. 'mor' → logprob: -7.780342102050781
    10. 'as' → logprob: -8.780342102050781

Token 3931: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00029601677670143545
    2. 'j' → logprob: -8.250295639038086
    3. '[m' → logprob: -11.125295639038086
    4. '```' → logprob: -11.500295639038086
    5. '[i' → logprob: -12.625295639038086
    6. '
' → logprob: -13.500295639038086
    7. '[
' → logprob: -13.625295639038086
    8. ')' → logprob: -14.250295639038086
    9. '[' → logprob: -14.500295639038086
    10. ']' → logprob: -15.375295639038086

Token 3932: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.031703364104032516
    2. ']' → logprob: -4.531703472137451
    3. '[j' → logprob: -4.656703472137451
    4. '               ' → logprob: -5.156703472137451
    5. '[i' → logprob: -5.656703472137451
    6. ')
' → logprob: -7.406703472137451
    7. '           ' → logprob: -8.531702995300293
    8. 'if' → logprob: -8.781702995300293
    9. '                   ' → logprob: -9.031702995300293
    10. '
' → logprob: -9.031702995300293

Token 3933: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011594493873417377
    2. '                   ' → logprob: -4.761594295501709
    3. '```' → logprob: -6.386594295501709
    4. ' if' → logprob: -7.386594295501709
    5. ' and' → logprob: -8.136594772338867
    6. ':
' → logprob: -9.511594772338867
    7. 'if' → logprob: -10.011594772338867
    8. ' ' → logprob: -10.261594772338867
    9. '                       ' → logprob: -10.261594772338867
    10. '=' → logprob: -10.636594772338867

Token 3934: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011692403815686703
    2. ' if' → logprob: -4.511692523956299
    3. '               ' → logprob: -7.761692523956299
    4. 'not' → logprob: -8.76169204711914
    5. '                   ' → logprob: -10.51169204711914
    6. 'and' → logprob: -10.63669204711914
    7. '```' → logprob: -13.26169204711914
    8. ' and' → logprob: -13.51169204711914
    9. '
' → logprob: -13.63669204711914
    10. '   ' → logprob: -13.63669204711914

Token 3935: ' exclude' (ID: 39566)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007940547540783882
    2. '                   ' → logprob: -5.632940769195557
    3. ' if' → logprob: -5.632940769195557
    4. '               ' → logprob: -8.007940292358398
    5. '```' → logprob: -8.757940292358398
    6. 'If' → logprob: -9.632940292358398
    7. '{
' → logprob: -10.257940292358398
    8. 'v' → logprob: -10.382940292358398
    9. '   ' → logprob: -10.507940292358398
    10. '#' → logprob: -10.882940292358398

Token 3936: ' if' (ID: 538)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.27556729316711426
    2. 'if' → logprob: -2.5255672931671143
    3. 'mv' → logprob: -2.5255672931671143
    4. 'len' → logprob: -3.5255672931671143
    5. ' not' → logprob: -4.025567054748535
    6. 'mm' → logprob: -4.400567054748535
    7. 'is' → logprob: -4.775567054748535
    8. '(not' → logprob: -5.650567054748535
    9. ' if' → logprob: -6.525567054748535
    10. '(len' → logprob: -6.525567054748535

Token 3937: ' s' (ID: 265)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2201448529958725
    2. 'len' → logprob: -1.7201448678970337
    3. 'mv' → logprob: -4.470144748687744
    4. ' not' → logprob: -5.470144748687744
    5. 'mm' → logprob: -6.970144748687744
    6. '(not' → logprob: -7.220144748687744
    7. '(len' → logprob: -7.970144748687744
    8. ' len' → logprob: -8.220145225524902
    9. 'is' → logprob: -9.095145225524902
    10. ' mv' → logprob: -9.220145225524902

Token 3938: 'oku' (ID: 13454)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.011265210807323456
    2. 'et' → logprob: -5.761265277862549
    3. '[i' → logprob: -6.011265277862549
    4. '[' → logprob: -6.261265277862549
    5. '[m' → logprob: -6.761265277862549
    6. 't' → logprob: -7.386265277862549
    7. '[l' → logprob: -7.886265277862549
    8. 'len' → logprob: -7.886265277862549
    9. '[len' → logprob: -8.01126480102539
    10. '[
' → logprob: -8.76126480102539

Token 3939: 'on' (ID: 263)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.006719946861267
    2. '[j' → logprob: -1.381719946861267
    3. 'ok' → logprob: -1.756719946861267
    4. 'oku' → logprob: -1.881719946861267
    5. 'm' → logprob: -4.756720066070557
    6. 'k' → logprob: -5.131720066070557
    7. '```' → logprob: -5.131720066070557
    8. '               ' → logprob: -5.631720066070557
    9. 'u' → logprob: -5.631720066070557
    10. ')' → logprob: -5.631720066070557

Token 3940: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.22054211795330048
    2. 'or' → logprob: -2.5955421924591064
    3. '               ' → logprob: -2.7205421924591064
    4. '                   ' → logprob: -3.7205421924591064
    5. 'if' → logprob: -4.470541954040527
    6. 'and' → logprob: -5.345541954040527
    7. ' and' → logprob: -5.470541954040527
    8. '==' → logprob: -5.595541954040527
    9. ':
' → logprob: -5.970541954040527
    10. ' if' → logprob: -6.595541954040527

Token 3941: ' long' (ID: 1701)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4103662371635437
    2. 'not' → logprob: -2.2853662967681885
    3. 'mm' → logprob: -2.4103662967681885
    4. 'is' → logprob: -2.5353662967681885
    5. 'mv' → logprob: -3.2853662967681885
    6. '(len' → logprob: -5.285366058349609
    7. ' len' → logprob: -5.285366058349609
    8. ' not' → logprob: -5.535366058349609
    9. '(mm' → logprob: -5.660366058349609
    10. '(not' → logprob: -5.910366058349609

Token 3942: ' vowel' (ID: 165542)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3890744149684906
    2. '_v' → logprob: -2.3890743255615234
    3. ')' → logprob: -2.8890743255615234
    4. 'if' → logprob: -3.1390743255615234
    5. '_con' → logprob: -3.1390743255615234
    6. 'm' → logprob: -3.7640743255615234
    7. '_m' → logprob: -4.139074325561523
    8. 'con' → logprob: -4.889074325561523
    9. '_char' → logprob: -5.389074325561523
    10. '```' → logprob: -5.389074325561523

Token 3943: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7327507138252258
    2. '               ' → logprob: -0.8577507138252258
    3. '                   ' → logprob: -3.232750654220581
    4. 'or' → logprob: -4.10775089263916
    5. 'if' → logprob: -4.60775089263916
    6. ':
' → logprob: -4.73275089263916
    7. '==' → logprob: -4.98275089263916
    8. ' if' → logprob: -5.85775089263916
    9. 'and' → logprob: -6.23275089263916
    10. ' and' → logprob: -6.35775089263916

Token 3944: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.03694721311330795
    2. '(not' → logprob: -4.536947250366211
    3. 'mv' → logprob: -4.911947250366211
    4. 'mm' → logprob: -5.036947250366211
    5. 'len' → logprob: -5.411947250366211
    6. ' not' → logprob: -6.036947250366211
    7. '(mm' → logprob: -6.536947250366211
    8. 'is' → logprob: -6.786947250366211
    9. '#' → logprob: -6.911947250366211
    10. '(m' → logprob: -8.161947250366211

Token 3945: ' vo' (ID: 778)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9216499328613281
    2. 'if' → logprob: -1.5466499328613281
    3. ' not' → logprob: -1.5466499328613281
    4. 'not' → logprob: -2.296649932861328
    5. '               ' → logprob: -3.546649932861328
    6. 'mv' → logprob: -3.921649932861328
    7. ' mv' → logprob: -5.046649932861328
    8. 'm' → logprob: -5.296649932861328
    9. 'mm' → logprob: -5.546649932861328
    10. ' mm' → logprob: -6.171649932861328

Token 3946: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.00604587746784091
    2. 'i' → logprob: -6.131045818328857
    3. 'ice' → logprob: -6.756045818328857
    4. 'icelo' → logprob: -7.506045818328857
    5. 'icemail' → logprob: -8.006046295166016
    6. 'il' → logprob: -8.631046295166016
    7. 'icem' → logprob: -8.881046295166016
    8. '```' → logprob: -9.006046295166016
    9. 'icl' → logprob: -9.131046295166016
    10. 'j' → logprob: -9.256046295166016

Token 3947: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.00046630011638626456
    2. 'less' → logprob: -8.500466346740723
    3. 'heless' → logprob: -9.750466346740723
    4. 'el' → logprob: -10.125466346740723
    5. 'ele' → logprob: -10.250466346740723
    6. 'ic' → logprob: -10.375466346740723
    7. 'veless' → logprob: -10.375466346740723
    8. 'o' → logprob: -10.750466346740723
    9. 'cel' → logprob: -10.750466346740723
    10. 'ol' → logprob: -11.500466346740723

Token 3948: ' conson' (ID: 127767)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.04745367541909218
    2. '_con' → logprob: -3.9224536418914795
    3. 'm' → logprob: -4.547453880310059
    4. '_j' → logprob: -6.047453880310059
    5. ' or' → logprob: -6.172453880310059
    6. '[j' → logprob: -6.297453880310059
    7. 'or' → logprob: -6.547453880310059
    8. '[m' → logprob: -6.797453880310059
    9. 'con' → logprob: -7.047453880310059
    10. '_vo' → logprob: -7.172453880310059

Token 3949: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.00042768914136104286
    2. 'ants' → logprob: -8.00042724609375
    3. 'nt' → logprob: -11.25042724609375
    4. '[m' → logprob: -11.50042724609375
    5. 't' → logprob: -11.75042724609375
    6. 'ent' → logprob: -11.87542724609375
    7. 'antt' → logprob: -11.87542724609375
    8. 'm' → logprob: -12.00042724609375
    9. '
' → logprob: -12.12542724609375
    10. 'tant' → logprob: -12.25042724609375

Token 3950: ' +' (ID: 659)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.4020901024341583
    2. ' or' → logprob: -1.277090072631836
    3. 'not' → logprob: -3.777090072631836
    4. '               ' → logprob: -3.777090072631836
    5. 'if' → logprob: -5.652090072631836
    6. '                   ' → logprob: -7.402090072631836
    7. ' not' → logprob: -7.652090072631836
    8. '```' → logprob: -8.152090072631836
    9. 'is' → logprob: -8.277090072631836
    10. 'len' → logprob: -8.402090072631836

Token 3951: ' same' (ID: 2684)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.17171898484230042
    2. 'mv' → logprob: -2.0467190742492676
    3. 'mm' → logprob: -4.171719074249268
    4. 'get' → logprob: -4.421719074249268
    5. 'm' → logprob: -7.921719074249268
    6. 'vv' → logprob: -8.17171859741211
    7. '#' → logprob: -9.42171859741211
    8. '
' → logprob: -9.67171859741211
    9. '```' → logprob: -9.79671859741211
    10. 'vj' → logprob: -10.17171859741211

Token 3952: ' vowel' (ID: 165542)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0015890118665993214
    2. 'get' → logprob: -7.376588821411133
    3. '_v' → logprob: -7.751588821411133
    4. 'm' → logprob: -8.501588821411133
    5. 'mv' → logprob: -9.376588821411133
    6. '
' → logprob: -10.001588821411133
    7. 'vv' → logprob: -10.126588821411133
    8. 'mm' → logprob: -10.376588821411133
    9. '   ' → logprob: -10.626588821411133
    10. ' vowel' → logprob: -10.626588821411133

Token 3953: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28200167417526245
    2. 'if' → logprob: -1.7820017337799072
    3. ' if' → logprob: -3.7820017337799072
    4. '==' → logprob: -4.407001495361328
    5. '                   ' → logprob: -4.657001495361328
    6. ':
' → logprob: -4.657001495361328
    7. ' and' → logprob: -5.282001495361328
    8. ' or' → logprob: -5.532001495361328
    9. 'and' → logprob: -6.032001495361328
    10. '```' → logprob: -6.032001495361328

Token 3954: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6158443689346313
    2. ' or' → logprob: -0.8658443689346313
    3. ' and' → logprob: -3.990844249725342
    4. '                       ' → logprob: -5.115844249725342
    5. '               ' → logprob: -5.490844249725342
    6. ':
' → logprob: -5.615844249725342
    7. 'and' → logprob: -6.240844249725342
    8. 'or' → logprob: -6.365844249725342
    9. '```' → logprob: -6.865844249725342
    10. ':' → logprob: -7.740844249725342

Token 3955: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27280279994010925
    2. 'not' → logprob: -1.5228028297424316
    3. '               ' → logprob: -4.147802829742432
    4. ' if' → logprob: -5.647802829742432
    5. ' not' → logprob: -6.897802829742432
    6. '(not' → logprob: -8.897802352905273
    7. '                   ' → logprob: -9.522802352905273
    8. 'len' → logprob: -9.897802352905273
    9. 'is' → logprob: -10.897802352905273
    10. '(len' → logprob: -11.897802352905273

Token 3956: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01667666994035244
    2. ' if' → logprob: -4.891676902770996
    3. '               ' → logprob: -5.391676902770996
    4. 'not' → logprob: -5.641676902770996
    5. 'mv' → logprob: -7.391676902770996
    6. '
' → logprob: -9.641676902770996
    7. '                   ' → logprob: -10.016676902770996
    8. ' not' → logprob: -10.016676902770996
    9. '```' → logprob: -10.016676902770996
    10. 'mm' → logprob: -10.766676902770996

Token 3957: 'oku' (ID: 13454)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.8565218448638916
    2. 'if' → logprob: -1.2315218448638916
    3. '[i' → logprob: -1.4815218448638916
    4. 'ize' → logprob: -4.2315216064453125
    5. 't' → logprob: -5.2315216064453125
    6. 'j' → logprob: -5.4815216064453125
    7. 'len' → logprob: -5.9815216064453125
    8. '==' → logprob: -5.9815216064453125
    9. ' if' → logprob: -5.9815216064453125
    10. ']' → logprob: -6.1065216064453125

Token 3958: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.5795068144798279
    2. '[j' → logprob: -2.2045068740844727
    3. 'ok' → logprob: -2.7045068740844727
    4. 'm' → logprob: -3.0795068740844727
    5. 'v' → logprob: -3.4545068740844727
    6. ')' → logprob: -3.4545068740844727
    7. '```' → logprob: -4.079506874084473
    8. 'con' → logprob: -4.204506874084473
    9. '==' → logprob: -4.454506874084473
    10. 'j' → logprob: -4.579506874084473

Token 3959: ' or' (ID: 503)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3998733162879944
    2. 'if' → logprob: -2.1498732566833496
    3. '=' → logprob: -2.7748732566833496
    4. ' not' → logprob: -3.3998732566833496
    5. '           ' → logprob: -3.8998732566833496
    6. 'or' → logprob: -4.52487325668335
    7. ' =' → logprob: -4.52487325668335
    8. ':' → logprob: -4.52487325668335
    9. ')' → logprob: -4.64987325668335
    10. ' if' → logprob: -5.02487325668335

Token 3960: ' long' (ID: 1701)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.9346043467521667
    2. 'long' → logprob: -1.4346044063568115
    3. 'mm' → logprob: -2.0596044063568115
    4. '(mm' → logprob: -2.6846044063568115
    5. '(m' → logprob: -3.1846044063568115
    6. '(len' → logprob: -3.4346044063568115
    7. 'not' → logprob: -3.4346044063568115
    8. ' (' → logprob: -4.184604167938232
    9. '(' → logprob: -4.809604167938232
    10. 'is' → logprob: -4.934604167938232

Token 3961: ' vowel' (ID: 165542)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3012421429157257
    2. '_v' → logprob: -1.6762421131134033
    3. 'con' → logprob: -3.8012421131134033
    4. 'm' → logprob: -4.176242351531982
    5. '_con' → logprob: -4.801242351531982
    6. '_m' → logprob: -5.176242351531982
    7. ')' → logprob: -5.426242351531982
    8. 'if' → logprob: -5.801242351531982
    9. '==' → logprob: -5.801242351531982
    10. '           ' → logprob: -5.926242351531982

Token 3962: ' mor' (ID: 4658)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.4422266483306885
    2. '==' → logprob: -1.5672266483306885
    3. ' not' → logprob: -2.0672266483306885
    4. 'not' → logprob: -2.3172266483306885
    5. '               ' → logprob: -3.3172266483306885
    6. ' if' → logprob: -3.3172266483306885
    7. '!=' → logprob: -3.4422266483306885
    8. '=' → logprob: -3.6922266483306885
    9. '           ' → logprob: -3.6922266483306885
    10. '                   ' → logprob: -3.6922266483306885

Token 3963: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.005877836607396603
    2. 'a' → logprob: -5.88087797164917
    3. '=' → logprob: -6.38087797164917
    4. '[j' → logprob: -8.255877494812012
    5. '==' → logprob: -8.255877494812012
    6. 's' → logprob: -8.505877494812012
    7. '[' → logprob: -8.755877494812012
    8. ' =' → logprob: -8.880877494812012
    9. '   ' → logprob: -10.130877494812012
    10. '```' → logprob: -10.130877494812012

Token 3964: ' excluded' (ID: 52015)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5513558387756348
    2. ':
' → logprob: -2.1763558387756348
    3. ' or' → logprob: -2.5513558387756348
    4. 'if' → logprob: -2.6763558387756348
    5. '==' → logprob: -3.1763558387756348
    6. ':' → logprob: -3.3013558387756348
    7. '                   ' → logprob: -3.5513558387756348
    8. '=' → logprob: -4.551355838775635
    9. 'or' → logprob: -4.551355838775635
    10. 'not' → logprob: -4.926355838775635

Token 3965: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04136206954717636
    2. 'if' → logprob: -3.5413620471954346
    3. ' if' → logprob: -4.666362285614014
    4. '                   ' → logprob: -6.666362285614014
    5. '```' → logprob: -8.166361808776855
    6. '           ' → logprob: -8.916361808776855
    7. ' and' → logprob: -9.166361808776855
    8. 'and' → logprob: -10.041361808776855
    9. '              ' → logprob: -10.041361808776855
    10. '                ' → logprob: -10.041361808776855

Token 3966: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05719964578747749
    2. ' if' → logprob: -3.807199716567993
    3. '               ' → logprob: -4.182199478149414
    4. '                       ' → logprob: -4.932199478149414
    5. '```' → logprob: -5.432199478149414
    6. 'if' → logprob: -6.432199478149414
    7. ' and' → logprob: -6.807199478149414
    8. '                               ' → logprob: -6.932199478149414
    9. ':
' → logprob: -7.682199478149414
    10. '{
' → logprob: -7.807199478149414

Token 3967: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.250929594039917
    2. ' if' → logprob: -1.750929594039917
    3. '               ' → logprob: -3.250929594039917
    4. '                   ' → logprob: -4.750929832458496
    5. '   ' → logprob: -7.875929832458496
    6. ' ' → logprob: -8.625929832458496
    7. '```' → logprob: -9.125929832458496
    8. '{
' → logprob: -9.625929832458496
    9. '                       ' → logprob: -10.000929832458496
    10. '           ' → logprob: -10.250929832458496

Token 3968: ' Long' (ID: 7790)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016131967306137085
    2. '               ' → logprob: -4.39113187789917
    3. ' if' → logprob: -5.64113187789917
    4. '                   ' → logprob: -10.641132354736328
    5. 'while' → logprob: -10.891132354736328
    6. '#' → logprob: -12.016132354736328
    7. '           ' → logprob: -12.141132354736328
    8. '```' → logprob: -12.391132354736328
    9. '   ' → logprob: -12.641132354736328
    10. '                ' → logprob: -14.141132354736328

Token 3969: ' vowel' (ID: 165542)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.08008691668510437
    2. 'v' → logprob: -2.7050869464874268
    3. '_' → logprob: -5.830086708068848
    4. '_m' → logprob: -6.455086708068848
    5. 'm' → logprob: -6.830086708068848
    6. '```' → logprob: -7.080086708068848
    7. ')' → logprob: -7.705086708068848
    8. 'if' → logprob: -7.705086708068848
    9. '#' → logprob: -8.205086708068848
    10. 'while' → logprob: -8.455086708068848

Token 3970: ' mor' (ID: 4658)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.04924815520644188
    2. 'if' → logprob: -4.799248218536377
    3. '==' → logprob: -5.549248218536377
    4. '           ' → logprob: -5.549248218536377
    5. '```' → logprob: -5.799248218536377
    6. 'idx' → logprob: -5.799248218536377
    7. '_' → logprob: -6.049248218536377
    8. ' =' → logprob: -6.049248218536377
    9. 's' → logprob: -6.174248218536377
    10. '!=' → logprob: -6.549248218536377

Token 3971: 'as' (ID: 288)
  Prédit: 'as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.08508244901895523
    2. 'a' → logprob: -2.585082530975342
    3. '==' → logprob: -5.710082530975342
    4. '=' → logprob: -7.085082530975342
    5. '```' → logprob: -7.085082530975342
    6. '   ' → logprob: -8.585082054138184
    7. ' ==' → logprob: -8.710082054138184
    8. ' =' → logprob: -8.960082054138184
    9. '[' → logprob: -9.335082054138184
    10. '``' → logprob: -9.710082054138184

Token 3972: ':' (ID: 25)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0431846380233765
    2. '               ' → logprob: -1.1681846380233765
    3. '=' → logprob: -2.668184757232666
    4. 'not' → logprob: -2.918184757232666
    5. '==' → logprob: -3.168184757232666
    6. ' if' → logprob: -3.668184757232666
    7. '#' → logprob: -3.793184757232666
    8. ' not' → logprob: -4.043184757232666
    9. ':' → logprob: -4.043184757232666
    10. '           ' → logprob: -4.418184757232666

Token 3973: ' repeated' (ID: 24161)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.4036046266555786
    2. 'if' → logprob: -1.9036046266555786
    3. 'not' → logprob: -2.653604507446289
    4. 'mv' → logprob: -2.778604507446289
    5. '(len' → logprob: -3.528604507446289
    6. 'mm' → logprob: -5.403604507446289
    7. '(m' → logprob: -5.778604507446289
    8. '#' → logprob: -5.778604507446289
    9. 'get' → logprob: -6.028604507446289
    10. '(not' → logprob: -6.153604507446289

Token 3974: ' vowels' (ID: 176245)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5935523509979248
    2. 'm' → logprob: -0.8435523509979248
    3. 'mv' → logprob: -4.468552589416504
    4. 'if' → logprob: -6.593552589416504
    5. '(m' → logprob: -7.218552589416504
    6. 'con' → logprob: -7.343552589416504
    7. 'mor' → logprob: -7.718552589416504
    8. 'mo' → logprob: -7.843552589416504
    9. 'vv' → logprob: -8.218552589416504
    10. '   ' → logprob: -8.343552589416504

Token 3975: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.139053463935852
    2. '               ' → logprob: -1.514053463935852
    3. ':
' → logprob: -1.639053463935852
    4. 'and' → logprob: -2.3890533447265625
    5. 'if' → logprob: -2.6390533447265625
    6. '                   ' → logprob: -3.0140533447265625
    7. ' if' → logprob: -4.6390533447265625
    8. '           ' → logprob: -4.6390533447265625
    9. '==' → logprob: -4.8890533447265625
    10. ':' → logprob: -5.1390533447265625

Token 3976: 'a' (ID: 64)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4563807547092438
    2. 's' → logprob: -1.9563807249069214
    3. ')' → logprob: -2.831380844116211
    4. 'j' → logprob: -3.206380844116211
    5. 'if' → logprob: -3.206380844116211
    6. '==' → logprob: -3.456380844116211
    7. 'v' → logprob: -4.581380844116211
    8. ' ==' → logprob: -5.081380844116211
    9. '```' → logprob: -5.706380844116211
    10. '[j' → logprob: -5.831380844116211

Token 3977: ',i' (ID: 25032)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.7024303078651428
    2. ')' → logprob: -1.202430248260498
    3. '')' → logprob: -2.577430248260498
    4. '==' → logprob: -3.327430248260498
    5. ' ==' → logprob: -4.327430248260498
    6. ' and' → logprob: -4.327430248260498
    7. '[i' → logprob: -4.452430248260498
    8. ',' → logprob: -4.577430248260498
    9. ',j' → logprob: -5.452430248260498
    10. 'if' → logprob: -5.452430248260498

Token 3978: ',u' (ID: 80698)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.8126311898231506
    2. ','' → logprob: -1.4376311302185059
    3. ',' → logprob: -1.5626311302185059
    4. ',u' → logprob: -3.062631130218506
    5. ',j' → logprob: -3.312631130218506
    6. ')' → logprob: -4.812631130218506
    7. '',' → logprob: -4.937631130218506
    8. 'u' → logprob: -6.562631130218506
    9. '')' → logprob: -6.687631130218506
    10. ''u' → logprob: -6.812631130218506

Token 3979: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2458088994026184
    2. '')' → logprob: -2.3708088397979736
    3. '):
' → logprob: -2.7458088397979736
    4. '[j' → logprob: -4.495809078216553
    5. '```' → logprob: -5.245809078216553
    6. ' and' → logprob: -5.370809078216553
    7. '==' → logprob: -5.495809078216553
    8. '[i' → logprob: -5.620809078216553
    9. ')
' → logprob: -5.745809078216553
    10. '])' → logprob: -5.745809078216553

Token 3980: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3082796037197113
    2. '                   ' → logprob: -1.9332796335220337
    3. 'if' → logprob: -2.558279514312744
    4. ' if' → logprob: -3.558279514312744
    5. '```' → logprob: -5.058279514312744
    6. ' and' → logprob: -5.558279514312744
    7. '                       ' → logprob: -6.683279514312744
    8. '{
' → logprob: -7.308279514312744
    9. 'and' → logprob: -7.683279514312744
    10. ':
' → logprob: -8.058279991149902

Token 3981: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11200273036956787
    2. ' if' → logprob: -2.4870028495788574
    3. '                   ' → logprob: -4.237002849578857
    4. '               ' → logprob: -5.112002849578857
    5. '{
' → logprob: -7.487002849578857
    6. '   ' → logprob: -7.737002849578857
    7. '                       ' → logprob: -7.737002849578857
    8. ' ' → logprob: -8.3620023727417
    9. '           ' → logprob: -8.8620023727417
    10. 'while' → logprob: -9.2370023727417

Token 3982: ' len' (ID: 4631)
  Prédit: 'mv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mv' → logprob: -0.4221465289592743
    2. 'len' → logprob: -1.5471465587615967
    3. 'not' → logprob: -2.7971465587615967
    4. 'mm' → logprob: -3.5471465587615967
    5. 'get' → logprob: -4.797146320343018
    6. 'j' → logprob: -4.922146320343018
    7. 'm' → logprob: -5.297146320343018
    8. ' mv' → logprob: -5.422146320343018
    9. 'is' → logprob: -5.422146320343018
    10. ' not' → logprob: -6.422146320343018

Token 3983: '(mm' (ID: 124702)
  Prédit: '(mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mm' → logprob: -0.12726467847824097
    2. '(m' → logprob: -2.1272647380828857
    3. 'mm' → logprob: -8.127264976501465
    4. 'm' → logprob: -10.752264976501465
    5. '(s' → logprob: -12.877264976501465
    6. '(mp' → logprob: -13.127264976501465
    7. 'mv' → logprob: -13.377264976501465
    8. ' mm' → logprob: -13.502264976501465
    9. '(' → logprob: -13.627264976501465
    10. '_mm' → logprob: -13.752264976501465

Token 3984: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4762521982192993
    2. '<' → logprob: -1.7262521982192993
    3. ' <' → logprob: -1.7262521982192993
    4. ')<' → logprob: -4.60125207901001
    5. '>=' → logprob: -5.35125207901001
    6. ' >=' → logprob: -5.60125207901001
    7. '<m' → logprob: -6.10125207901001
    8. ')>=' → logprob: -6.72625207901001
    9. ' )' → logprob: -8.101252555847168
    10. '==' → logprob: -8.351252555847168

Token 3985: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08072216808795929
    2. ' <' → logprob: -2.5807220935821533
    3. '>=' → logprob: -6.705722332000732
    4. ' >=' → logprob: -8.330721855163574
    5. '<m' → logprob: -9.205721855163574
    6. '==' → logprob: -9.330721855163574
    7. ')' → logprob: -10.080721855163574
    8. ' ==' → logprob: -10.955721855163574
    9. '<n' → logprob: -11.080721855163574
    10. '>' → logprob: -11.205721855163574

Token 3986: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00036037206882610917
    2. ' ' → logprob: -8.000360488891602
    3. '1' → logprob: -11.500360488891602
    4. '   ' → logprob: -11.750360488891602
    5. '3' → logprob: -14.125360488891602
    6. '```' → logprob: -14.437860488891602
    7. '２' → logprob: -14.437860488891602
    8. '=' → logprob: -14.500360488891602
    9. '>' → logprob: -14.625360488891602
    10. '  ' → logprob: -14.812860488891602

Token 3987: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.771655115589965e-05
    2. '1' → logprob: -11.500018119812012
    3. ' ' → logprob: -12.125018119812012
    4. '3' → logprob: -13.875018119812012
    5. '=' → logprob: -15.875018119812012
    6. '   ' → logprob: -16.000017166137695
    7. '２' → logprob: -16.062517166137695
    8. '```' → logprob: -16.125017166137695
    9. '(' → logprob: -16.187517166137695
    10. '>' → logprob: -16.500017166137695

Token 3988: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2032897025346756
    2. 'or' → logprob: -1.7032897472381592
    3. 'and' → logprob: -6.95328950881958
    4. ' and' → logprob: -7.95328950881958
    5. '                   ' → logprob: -8.453289985656738
    6. '               ' → logprob: -8.578289985656738
    7. '              ' → logprob: -10.328289985656738
    8. '                  ' → logprob: -10.453289985656738
    9. '==' → logprob: -10.703289985656738
    10. '           ' → logprob: -10.703289985656738

Token 3989: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.032334405928850174
    2. ' not' → logprob: -3.782334327697754
    3. 'get' → logprob: -5.407334327697754
    4. 'mm' → logprob: -6.282334327697754
    5. '(not' → logprob: -7.282334327697754
    6. 'mv' → logprob: -7.407334327697754
    7. 'v' → logprob: -7.782334327697754
    8. 'is' → logprob: -7.907334327697754
    9. 'm' → logprob: -8.032334327697754
    10. '(get' → logprob: -9.532334327697754

Token 3990: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.030225947499275208
    2. '(is' → logprob: -3.530225992202759
    3. ' is' → logprob: -8.78022575378418
    4. '(mm' → logprob: -8.90522575378418
    5. ' (' → logprob: -9.53022575378418
    6. '(m' → logprob: -9.78022575378418
    7. '(' → logprob: -10.28022575378418
    8. 'mm' → logprob: -12.03022575378418
    9. '(
' → logprob: -12.90522575378418
    10. '((' → logprob: -13.15522575378418

Token 3991: '_vo' (ID: 145825)
  Prédit: '_vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vo' → logprob: -0.6020506024360657
    2. 'vo' → logprob: -1.227050542831421
    3. 'is' → logprob: -1.852050542831421
    4. '(vo' → logprob: -6.22705078125
    5. 'voi' → logprob: -9.85205078125
    6. '	vo' → logprob: -9.85205078125
    7. '(is' → logprob: -10.10205078125
    8. '(' → logprob: -10.72705078125
    9. 'voz' → logprob: -10.97705078125
    10. 'vox' → logprob: -11.35205078125

Token 3992: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.00018065694894175977
    2. 'icelo' → logprob: -10.5001802444458
    3. 'oc' → logprob: -10.6251802444458
    4. 'ice' → logprob: -10.8751802444458
    5. 'cel' → logprob: -11.0001802444458
    6. '```' → logprob: -11.0001802444458
    7. 'icemail' → logprob: -11.1251802444458
    8. 'iced' → logprob: -11.6251802444458
    9. '``' → logprob: -12.2501802444458
    10. '
' → logprob: -12.3751802444458

Token 3993: 'eless' (ID: 12279)
  Prédit: 'eless'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eless' → logprob: -0.1109156608581543
    2. 'ic' → logprob: -2.4859156608581543
    3. 'cel' → logprob: -4.485915660858154
    4. 'less' → logprob: -5.360915660858154
    5. 'el' → logprob: -5.985915660858154
    6. 'c' → logprob: -7.485915660858154
    7. 'veless' → logprob: -7.735915660858154
    8. 'heless' → logprob: -8.360916137695312
    9. 'ueless' → logprob: -8.485916137695312
    10. 'o' → logprob: -8.485916137695312

Token 3994: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.002866804599761963
    2. '_con' → logprob: -6.377866744995117
    3. 'm' → logprob: -7.002866744995117
    4. '(m' → logprob: -9.252866744995117
    5. '_' → logprob: -10.002866744995117
    6. ')' → logprob: -10.127866744995117
    7. 'con' → logprob: -10.252866744995117
    8. ')m' → logprob: -11.502866744995117
    9. '```' → logprob: -12.502866744995117
    10. ')_' → logprob: -12.627866744995117

Token 3995: 'ora' (ID: 2505)
  Prédit: 'ora'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ora' → logprob: -0.23427395522594452
    2. 'm' → logprob: -1.609273910522461
    3. '(m' → logprob: -6.859273910522461
    4. '[m' → logprob: -7.296773910522461
    5. '{
' → logprob: -7.421773910522461
    6. 'ra' → logprob: -7.546773910522461
    7. '```' → logprob: -7.671773910522461
    8. '_m' → logprob: -7.734273910522461
    9. '   ' → logprob: -7.796773910522461
    10. ')m' → logprob: -7.984273910522461

Token 3996: '(mm' (ID: 124702)
  Prédit: '(mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mm' → logprob: -0.00026872646412812173
    2. '(m' → logprob: -8.250268936157227
    3. 'mm' → logprob: -11.875268936157227
    4. '/mm' → logprob: -15.875268936157227
    5. ' mm' → logprob: -16.125268936157227
    6. ':mm' → logprob: -16.250268936157227
    7. 'm' → logprob: -17.000268936157227
    8. '(mc' → logprob: -17.000268936157227
    9. ' (' → logprob: -17.250268936157227
    10. ')' → logprob: -17.500268936157227

Token 3997: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2122872769832611
    2. '(m' → logprob: -2.337287187576294
    3. '(mm' → logprob: -3.087287187576294
    4. '):
' → logprob: -3.462287187576294
    5. ')m' → logprob: -4.962287425994873
    6. 'mm' → logprob: -5.712287425994873
    7. '):' → logprob: -6.212287425994873
    8. ' or' → logprob: -6.712287425994873
    9. 'm' → logprob: -7.212287425994873
    10. 'or' → logprob: -7.337287425994873

Token 3998: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03560628369450569
    2. 'or' → logprob: -3.4106063842773438
    3. '           ' → logprob: -7.160606384277344
    4. ':
' → logprob: -7.410606384277344
    5. '               ' → logprob: -7.785606384277344
    6. ':' → logprob: -10.535606384277344
    7. '       ' → logprob: -10.660606384277344
    8. '                   ' → logprob: -10.785606384277344
    9. ' and' → logprob: -11.160606384277344
    10. '            ' → logprob: -11.160606384277344

Token 3999: ' mv' (ID: 40274)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.72403484582901
    2. 'get' → logprob: -1.0990347862243652
    3. 'mv' → logprob: -1.7240347862243652
    4. '   ' → logprob: -7.099034786224365
    5. ' get' → logprob: -7.724034786224365
    6. '       ' → logprob: -7.974034786224365
    7. 'mm' → logprob: -7.974034786224365
    8. '(get' → logprob: -8.099035263061523
    9. 'vv' → logprob: -8.599035263061523
    10. '           ' → logprob: -8.599035263061523

Token 4000: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3869836628437042
    2. '==' → logprob: -1.1369836330413818
    3. '[j' → logprob: -10.011983871459961
    4. '```' → logprob: -10.386983871459961
    5. '==
' → logprob: -11.136983871459961
    6. ']==' → logprob: -11.761983871459961
    7. '[' → logprob: -12.386983871459961
    8. ' ==
' → logprob: -13.511983871459961
    9. '=' → logprob: -13.636983871459961
    10. ')==' → logprob: -13.886983871459961

Token 4001: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0018134634010493755
    2. 'get' → logprob: -6.5018134117126465
    3. ' v' → logprob: -8.251813888549805
    4. 'mv' → logprob: -11.501813888549805
    5. 'm' → logprob: -11.626813888549805
    6. '   ' → logprob: -11.876813888549805
    7. '```' → logprob: -12.751813888549805
    8. '           ' → logprob: -12.876813888549805
    9. '
' → logprob: -12.876813888549805
    10. '       ' → logprob: -12.876813888549805

Token 4002: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.048559438437223434
    2. ' or' → logprob: -4.048559665679932
    3. ':' → logprob: -4.298559665679932
    4. '                   ' → logprob: -4.673559665679932
    5. '               ' → logprob: -5.173559665679932
    6. ' and' → logprob: -7.298559665679932
    7. '):
' → logprob: -8.798559188842773
    8. 'or' → logprob: -9.423559188842773
    9. '                  ' → logprob: -9.548559188842773
    10. '           ' → logprob: -9.673559188842773

Token 4003: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8925585746765137
    2. ':
' → logprob: -0.8925585746765137
    3. ' and' → logprob: -2.3925585746765137
    4. '               ' → logprob: -2.8925585746765137
    5. ':' → logprob: -4.267558574676514
    6. ' or' → logprob: -4.767558574676514
    7. '```' → logprob: -5.517558574676514
    8. '                       ' → logprob: -5.642558574676514
    9. 'and' → logprob: -6.142558574676514
    10. '           ' → logprob: -7.642558574676514

Token 4004: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.004618457052856684
    2. '                   ' → logprob: -5.7546186447143555
    3. '               ' → logprob: -7.5046186447143555
    4. ' break' → logprob: -7.7546186447143555
    5. '                       ' → logprob: -7.8796186447143555
    6. '	break' → logprob: -9.754618644714355
    7. '```' → logprob: -11.129618644714355
    8. 'Break' → logprob: -12.504618644714355
    9. '           ' → logprob: -13.379618644714355
    10. '_break' → logprob: -13.879618644714355

Token 4005: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08379613608121872
    2. '                   ' → logprob: -2.5837960243225098
    3. '                       ' → logprob: -6.45879602432251
    4. '```' → logprob: -6.45879602432251
    5. ':
' → logprob: -6.83379602432251
    6. ')' → logprob: -9.083796501159668
    7. '           ' → logprob: -9.333796501159668
    8. ' and' → logprob: -9.833796501159668
    9. ':' → logprob: -9.833796501159668
    10. 'j' → logprob: -9.958796501159668

Token 4006: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3006551265716553
    2. '                   ' → logprob: -1.5506551265716553
    3. '```' → logprob: -3.1756551265716553
    4. '                       ' → logprob: -5.800655364990234
    5. 'j' → logprob: -6.550655364990234
    6. ':
' → logprob: -8.550655364990234
    7. ')' → logprob: -9.175655364990234
    8. ':' → logprob: -9.300655364990234
    9. '<|end|>' → logprob: -9.300655364990234
    10. '[j' → logprob: -9.425655364990234

Token 4007: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19765567779541016
    2. 'j' → logprob: -2.32265567779541
    3. 'if' → logprob: -3.07265567779541
    4. '                   ' → logprob: -4.07265567779541
    5. ' if' → logprob: -4.32265567779541
    6. '           ' → logprob: -6.07265567779541
    7. ' j' → logprob: -6.94765567779541
    8. ' and' → logprob: -8.57265567779541
    9. '```' → logprob: -8.57265567779541
    10. '                       ' → logprob: -8.69765567779541

Token 4008: ' no' (ID: 860)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06508252769708633
    2. 'j' → logprob: -3.190082550048828
    3. '                   ' → logprob: -4.190082550048828
    4. '               ' → logprob: -5.690082550048828
    5. ' if' → logprob: -5.940082550048828
    6. '```' → logprob: -8.315082550048828
    7. '                       ' → logprob: -9.065082550048828
    8. 'If' → logprob: -9.690082550048828
    9. '                               ' → logprob: -9.690082550048828
    10. '#' → logprob: -10.065082550048828

Token 4009: ' s' (ID: 265)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20822857320308685
    2. 'mm' → logprob: -2.833228588104248
    3. 'w' → logprob: -3.458228588104248
    4. 'm' → logprob: -3.708228588104248
    5. ' mm' → logprob: -4.208228588104248
    6. ' continue' → logprob: -4.708228588104248
    7. ' if' → logprob: -4.708228588104248
    8. 's' → logprob: -5.083228588104248
    9. 'if' → logprob: -5.583228588104248
    10. 'continue' → logprob: -5.833228588104248

Token 4010: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.004042902495712042
    2. 't' → logprob: -7.254043102264404
    3. 'e' → logprob: -8.129042625427246
    4. '```' → logprob: -8.129042625427246
    5. 'k' → logprob: -8.504042625427246
    6. 'ok' → logprob: -8.629042625427246
    7. 'o' → logprob: -8.629042625427246
    8. 'v' → logprob: -8.629042625427246
    9. 'оку' → logprob: -8.754042625427246
    10. 'm' → logprob: -8.879042625427246

Token 4011: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.003301412332803011
    2. 'con' → logprob: -6.378301620483398
    3. ')' → logprob: -7.128301620483398
    4. 'kon' → logprob: -7.753301620483398
    5. 'ok' → logprob: -9.128301620483398
    6. 'u' → logprob: -9.628301620483398
    7. 'n' → logprob: -10.628301620483398
    8. '```' → logprob: -10.628301620483398
    9. 'uon' → logprob: -10.878301620483398
    10. 'k' → logprob: -11.003301620483398

Token 4012: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.514105498790741
    2. 'and' → logprob: -1.0141055583953857
    3. '               ' → logprob: -4.139105319976807
    4. ':
' → logprob: -5.139105319976807
    5. ' or' → logprob: -5.264105319976807
    6. '                   ' → logprob: -5.514105319976807
    7. '           ' → logprob: -6.139105319976807
    8. ')' → logprob: -6.264105319976807
    9. 'or' → logprob: -7.264105319976807
    10. ':' → logprob: -7.514105319976807

Token 4013: ' long' (ID: 1701)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.4786977469921112
    2. 'mm' → logprob: -1.3536977767944336
    3. 'len' → logprob: -2.9786977767944336
    4. 'mv' → logprob: -3.6036977767944336
    5. 'not' → logprob: -4.978697776794434
    6. ' mm' → logprob: -5.103697776794434
    7. '(mm' → logprob: -5.353697776794434
    8. ' long' → logprob: -5.478697776794434
    9. '(m' → logprob: -5.728697776794434
    10. 'm' → logprob: -5.728697776794434

Token 4014: ' vowel' (ID: 165542)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3689979016780853
    2. '_v' → logprob: -1.2439979314804077
    3. '_con' → logprob: -4.368998050689697
    4. 'con' → logprob: -5.368998050689697
    5. ')' → logprob: -7.243998050689697
    6. 'm' → logprob: -7.868998050689697
    7. '```' → logprob: -7.868998050689697
    8. '_m' → logprob: -8.118997573852539
    9. '_' → logprob: -8.243997573852539
    10. 'if' → logprob: -9.368997573852539

Token 4015: ' inside' (ID: 6772)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.9969645738601685
    2. ' and' → logprob: -1.2469645738601685
    3. '                   ' → logprob: -1.8719645738601685
    4. ':
' → logprob: -1.9969645738601685
    5. '               ' → logprob: -4.121964454650879
    6. '```' → logprob: -4.746964454650879
    7. ':' → logprob: -4.996964454650879
    8. '                       ' → logprob: -5.246964454650879
    9. '==' → logprob: -5.246964454650879
    10. '[j' → logprob: -6.246964454650879

Token 4016: ' chain' (ID: 13464)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1515549123287201
    2. '               ' → logprob: -2.401554822921753
    3. ':
' → logprob: -3.651554822921753
    4. ' and' → logprob: -5.026555061340332
    5. '                       ' → logprob: -5.151555061340332
    6. 'and' → logprob: -5.651555061340332
    7. ':' → logprob: -6.401555061340332
    8. '```' → logprob: -6.526555061340332
    9. '           ' → logprob: -7.026555061340332
    10. 'j' → logprob: -7.401555061340332

Token 4017: ' allowed' (ID: 9279)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2402159571647644
    2. ':
' → logprob: -2.365216016769409
    3. ' and' → logprob: -2.740216016769409
    4. '               ' → logprob: -3.365216016769409
    5. 'and' → logprob: -4.49021577835083
    6. '                       ' → logprob: -5.49021577835083
    7. ' or' → logprob: -6.61521577835083
    8. ':' → logprob: -6.99021577835083
    9. '           ' → logprob: -7.11521577835083
    10. '```' → logprob: -8.115216255187988

Token 4018: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.33632150292396545
    2. '                   ' → logprob: -1.586321473121643
    3. ' and' → logprob: -3.4613215923309326
    4. '           ' → logprob: -3.5863215923309326
    5. 'and' → logprob: -4.3363213539123535
    6. '                       ' → logprob: -5.9613213539123535
    7. ':
' → logprob: -6.3363213539123535
    8. ':' → logprob: -7.0863213539123535
    9. '```' → logprob: -7.4613213539123535
    10. ')' → logprob: -7.5863213539123535

Token 4019: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17681553959846497
    2. '               ' → logprob: -2.0518155097961426
    3. ' and' → logprob: -4.176815509796143
    4. ':
' → logprob: -4.176815509796143
    5. '                       ' → logprob: -6.676815509796143
    6. 'and' → logprob: -7.801815509796143
    7. ':' → logprob: -8.0518159866333
    8. '           ' → logprob: -8.3018159866333
    9. ' if' → logprob: -9.0518159866333
    10. '```' → logprob: -9.0518159866333

Token 4020: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3009350299835205
    2. '               ' → logprob: -2.0509350299835205
    3. '                   ' → logprob: -2.4259350299835205
    4. ' if' → logprob: -3.1759350299835205
    5. 'break' → logprob: -8.050934791564941
    6. '           ' → logprob: -8.175934791564941
    7. '   ' → logprob: -8.675934791564941
    8. '                       ' → logprob: -8.800934791564941
    9. 'and' → logprob: -9.925934791564941
    10. '                ' → logprob: -10.800934791564941

Token 4021: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12063504755496979
    2. '               ' → logprob: -2.9956350326538086
    3. ' if' → logprob: -3.2456350326538086
    4. '                   ' → logprob: -3.7456350326538086
    5. '#' → logprob: -8.370635032653809
    6. '                       ' → logprob: -8.620635032653809
    7. '           ' → logprob: -8.870635032653809
    8. '```' → logprob: -9.620635032653809
    9. 'j' → logprob: -9.870635032653809
    10. 'not' → logprob: -9.870635032653809

Token 4022: ' if' (ID: 538)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.8463247418403625
    2. 'mm' → logprob: -1.2213246822357178
    3. 'is' → logprob: -2.0963246822357178
    4. 'if' → logprob: -2.9713246822357178
    5. 'mv' → logprob: -3.0963246822357178
    6. ' not' → logprob: -4.221324920654297
    7. 'len' → logprob: -4.471324920654297
    8. '(mm' → logprob: -4.596324920654297
    9. ' mm' → logprob: -5.096324920654297
    10. '           ' → logprob: -5.221324920654297

Token 4023: ' this' (ID: 495)
  Prédit: 'mv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mv' → logprob: -0.7579330801963806
    2. 'is' → logprob: -1.7579331398010254
    3. 'not' → logprob: -1.7579331398010254
    4. 'mm' → logprob: -2.0079331398010254
    5. 'len' → logprob: -3.2579331398010254
    6. 'm' → logprob: -5.507933139801025
    7. 'get' → logprob: -6.382933139801025
    8. 'v' → logprob: -6.507933139801025
    9. '   ' → logprob: -6.757933139801025
    10. ' not' → logprob: -7.257933139801025

Token 4024: ' and' (ID: 326)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.3829340934753418
    2. 'm' → logprob: -1.6329340934753418
    3. 'is' → logprob: -1.6329340934753418
    4. 'len' → logprob: -2.632934093475342
    5. '[' → logprob: -2.882934093475342
    6. '[m' → logprob: -3.007934093475342
    7. ' is' → logprob: -3.132934093475342
    8. 's' → logprob: -3.507934093475342
    9. 'j' → logprob: -4.007934093475342
    10. ')' → logprob: -4.382934093475342

Token 4025: ' previous' (ID: 5880)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.09626641869544983
    2. 'mm' → logprob: -4.096266269683838
    3. 'mor' → logprob: -4.096266269683838
    4. 'mv' → logprob: -4.346266269683838
    5. 'j' → logprob: -4.596266269683838
    6. 'v' → logprob: -4.721266269683838
    7. 'is' → logprob: -4.721266269683838
    8. ' mor' → logprob: -5.471266269683838
    9. 'i' → logprob: -5.596266269683838
    10. 'start' → logprob: -6.471266269683838

Token 4026: ' are' (ID: 553)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6226314306259155
    2. 'mm' → logprob: -0.8726314306259155
    3. 'j' → logprob: -3.622631549835205
    4. '[j' → logprob: -5.497631549835205
    5. '==' → logprob: -5.997631549835205
    6. 'char' → logprob: -6.247631549835205
    7. ')' → logprob: -6.372631549835205
    8. 'mor' → logprob: -6.622631549835205
    9. '```' → logprob: -6.997631549835205
    10. '
' → logprob: -6.997631549835205

Token 4027: ' adjacent' (ID: 39069)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.12201773375272751
    2. ' is' → logprob: -3.6220176219940186
    3. 'same' → logprob: -3.7470176219940186
    4. 'vo' → logprob: -3.7470176219940186
    5. 'the' → logprob: -3.7470176219940186
    6. 'also' → logprob: -4.747017860412598
    7. 'not' → logprob: -6.497017860412598
    8. '```' → logprob: -6.997017860412598
    9. 'equal' → logprob: -6.997017860412598
    10. ' the' → logprob: -7.122017860412598

Token 4028: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6326642632484436
    2. 'and' → logprob: -1.7576642036437988
    3. ':
' → logprob: -1.7576642036437988
    4. '                   ' → logprob: -3.257664203643799
    5. ':' → logprob: -3.632664203643799
    6. '==' → logprob: -3.757664203643799
    7. '```' → logprob: -4.507664203643799
    8. '               ' → logprob: -5.007664203643799
    9. '                       ' → logprob: -5.507664203643799
    10. '=' → logprob: -5.507664203643799

Token 4029: ' no' (ID: 860)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.179014801979065
    2. '                   ' → logprob: -1.179014801979065
    3. '```' → logprob: -1.679014801979065
    4. 'if' → logprob: -3.0540146827697754
    5. '#' → logprob: -3.1790146827697754
    6. '                       ' → logprob: -3.5540146827697754
    7. ' continue' → logprob: -4.179014682769775
    8. ' and' → logprob: -4.679014682769775
    9. 'True' → logprob: -4.804014682769775
    10. ' #' → logprob: -5.179014682769775

Token 4030: ' s' (ID: 265)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7005478739738464
    2. 's' → logprob: -1.9505479335784912
    3. 'break' → logprob: -1.9505479335784912
    4. ' s' → logprob: -3.075547933578491
    5. 'un' → logprob: -3.450547933578491
    6. ' un' → logprob: -4.075547695159912
    7. 'd' → logprob: -4.325547695159912
    8. '#' → logprob: -4.450547695159912
    9. 'm' → logprob: -4.450547695159912
    10. ' breaks' → logprob: -4.700547695159912

Token 4031: 'oku' (ID: 13454)
  Prédit: 'oku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oku' → logprob: -0.10046340525150299
    2. 'ame' → logprob: -2.850463390350342
    3. '   ' → logprob: -4.850463390350342
    4. 'p' → logprob: -5.850463390350342
    5. '```' → logprob: -5.850463390350342
    6. 'ok' → logprob: -5.850463390350342
    7. ')' → logprob: -6.100463390350342
    8. '#' → logprob: -6.412963390350342
    9. 'ames' → logprob: -6.787963390350342
    10. 't' → logprob: -7.162963390350342

Token 4032: 'on' (ID: 263)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.2265493869781494
    2. 'quence' → logprob: -1.6015493869781494
    3. '```' → logprob: -1.8515493869781494
    4. 'q' → logprob: -3.3515493869781494
    5. ':
' → logprob: -3.3515493869781494
    6. 'n' → logprob: -3.9765493869781494
    7. '           ' → logprob: -4.10154914855957
    8. '>' → logprob: -4.10154914855957
    9. '``' → logprob: -4.41404914855957
    10. 'i' → logprob: -4.47654914855957

Token 4033: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5515621304512024
    2. 'and' → logprob: -1.3015620708465576
    3. '                   ' → logprob: -2.6765620708465576
    4. '               ' → logprob: -3.0515620708465576
    5. ':
' → logprob: -3.5515620708465576
    6. ' or' → logprob: -6.051562309265137
    7. ':' → logprob: -6.301562309265137
    8. '           ' → logprob: -7.051562309265137
    9. '                       ' → logprob: -7.301562309265137
    10. '==' → logprob: -8.051562309265137

Token 4034: ' long' (ID: 1701)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9738848805427551
    2. 'long' → logprob: -1.7238848209381104
    3. 's' → logprob: -1.8488848209381104
    4. 'double' → logprob: -2.5988848209381104
    5. 'dou' → logprob: -2.7238848209381104
    6. ' doubled' → logprob: -2.9738848209381104
    7. '#' → logprob: -4.3488850593566895
    8. 'mm' → logprob: -4.9738850593566895
    9. 'j' → logprob: -4.9738850593566895
    10. 'i' → logprob: -5.0988850593566895

Token 4035: ' vowel' (ID: 165542)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0925404354929924
    2. '_v' → logprob: -2.4675405025482178
    3. ')' → logprob: -6.717540264129639
    4. 'm' → logprob: -7.592540264129639
    5. 'con' → logprob: -7.717540264129639
    6. '_m' → logprob: -7.967540264129639
    7. '_con' → logprob: -8.592540740966797
    8. '```' → logprob: -8.592540740966797
    9. ')v' → logprob: -9.092540740966797
    10. ' vowel' → logprob: -9.592540740966797

Token 4036: ' in' (ID: 306)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5140784382820129
    2. ':
' → logprob: -1.7640783786773682
    3. '                   ' → logprob: -2.639078378677368
    4. 'and' → logprob: -2.639078378677368
    5. '               ' → logprob: -2.764078378677368
    6. ':' → logprob: -4.264078617095947
    7. '           ' → logprob: -5.389078617095947
    8. '                       ' → logprob: -6.389078617095947
    9. '==' → logprob: -7.264078617095947
    10. ' or' → logprob: -7.264078617095947

Token 4037: ' between' (ID: 2870)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6614903211593628
    2. 'range' → logprob: -0.9114903211593628
    3. 'the' → logprob: -4.036490440368652
    4. 'm' → logprob: -4.286490440368652
    5. '[j' → logprob: -4.661490440368652
    6. 'between' → logprob: -4.786490440368652
    7. '   ' → logprob: -5.036490440368652
    8. '```' → logprob: -6.036490440368652
    9. '++' → logprob: -6.161490440368652
    10. 'mm' → logprob: -6.161490440368652

Token 4038: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.35705456137657166
    2. '               ' → logprob: -1.357054591178894
    3. ' and' → logprob: -3.9820544719696045
    4. ':
' → logprob: -4.357054710388184
    5. 'and' → logprob: -5.607054710388184
    6. ' or' → logprob: -6.232054710388184
    7. '```' → logprob: -6.607054710388184
    8. ':' → logprob: -6.982054710388184
    9. '           ' → logprob: -7.357054710388184
    10. 'j' → logprob: -7.732054710388184

Token 4039: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08704861998558044
    2. ' and' → logprob: -3.4620485305786133
    3. '               ' → logprob: -3.4620485305786133
    4. '                       ' → logprob: -4.712048530578613
    5. '```' → logprob: -5.712048530578613
    6. 'and' → logprob: -6.087048530578613
    7. ' if' → logprob: -6.337048530578613
    8. '           ' → logprob: -7.087048530578613
    9. ':
' → logprob: -7.087048530578613
    10. ' or' → logprob: -7.337048530578613

Token 4040: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.21521687507629395
    2. '               ' → logprob: -2.590216875076294
    3. ' if' → logprob: -2.715216875076294
    4. 'if' → logprob: -3.215216875076294
    5. '                       ' → logprob: -4.965216636657715
    6. '           ' → logprob: -6.340216636657715
    7. 'break' → logprob: -6.840216636657715
    8. '```' → logprob: -7.340216636657715
    9. '                ' → logprob: -7.590216636657715
    10. ' break' → logprob: -8.590216636657715

Token 4041: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.43624284863471985
    2. '                   ' → logprob: -1.6862428188323975
    3. 'if' → logprob: -1.9362428188323975
    4. ' if' → logprob: -3.9362428188323975
    5. '           ' → logprob: -5.936243057250977
    6. '#' → logprob: -7.436243057250977
    7. '                       ' → logprob: -8.061243057250977
    8. '```' → logprob: -8.561243057250977
    9. '   ' → logprob: -8.811243057250977
    10. 'break' → logprob: -9.061243057250977

Token 4042: 'checked' (ID: 14772)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061162881553173065
    2. '+' → logprob: -3.8111629486083984
    3. ')
' → logprob: -4.561162948608398
    4. 'i' → logprob: -5.186162948608398
    5. 'j' → logprob: -5.561162948608398
    6. '=' → logprob: -6.061162948608398
    7. '```' → logprob: -6.061162948608398
    8. '+
' → logprob: -6.311162948608398
    9. '):' → logprob: -7.061162948608398
    10. '):
' → logprob: -7.186162948608398

Token 4043: ' by' (ID: 656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7125400900840759
    2. '==' → logprob: -1.3375401496887207
    3. 'and' → logprob: -2.8375401496887207
    4. '):
' → logprob: -3.3375401496887207
    5. '```' → logprob: -3.7125401496887207
    6. '):' → logprob: -3.9625401496887207
    7. 'if' → logprob: -4.337540149688721
    8. ' and' → logprob: -4.462540149688721
    9. '                   ' → logprob: -4.837540149688721
    10. 'continue' → logprob: -5.087540149688721

Token 4044: ' mora' (ID: 47294)
  Prédit: 'mv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mv' → logprob: -1.0054460763931274
    2. 'mm' → logprob: -1.3804460763931274
    3. 'j' → logprob: -2.380445957183838
    4. 'len' → logprob: -2.505445957183838
    5. 'True' → logprob: -3.130445957183838
    6. 'not' → logprob: -3.755445957183838
    7. ' mv' → logprob: -3.880445957183838
    8. 'm' → logprob: -4.005445957183838
    9. ' len' → logprob: -4.130445957183838
    10. ' True' → logprob: -4.130445957183838

Token 4045: ' pattern' (ID: 8302)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.10520048439502716
    2. '[i' → logprob: -2.7302005290985107
    3. ')' → logprob: -3.6052005290985107
    4. '```' → logprob: -6.230200290679932
    5. ']' → logprob: -6.730200290679932
    6. '[' → logprob: -6.980200290679932
    7. 's' → logprob: -7.230200290679932
    8. 'length' → logprob: -7.480200290679932
    9. '[
' → logprob: -8.10520076751709
    10. '[m' → logprob: -8.23020076751709

Token 4046: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8435745239257812
    2. '):
' → logprob: -1.2185745239257812
    3. ' and' → logprob: -2.8435745239257812
    4. '```' → logprob: -2.9685745239257812
    5. '[i' → logprob: -3.8435745239257812
    6. ':
' → logprob: -3.8435745239257812
    7. '):' → logprob: -3.8435745239257812
    8. '[j' → logprob: -4.093574523925781
    9. '==' → logprob: -4.593574523925781
    10. '               ' → logprob: -4.593574523925781

Token 4047: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4092761278152466
    2. '               ' → logprob: -1.6592761278152466
    3. '```' → logprob: -2.659276008605957
    4. ':
' → logprob: -3.034276008605957
    5. '           ' → logprob: -4.159276008605957
    6. '                       ' → logprob: -5.534276008605957
    7. ':' → logprob: -5.659276008605957
    8. '):
' → logprob: -6.784276008605957
    9. ' and' → logprob: -7.159276008605957
    10. '``' → logprob: -8.034276008605957

Token 4048: ' j' (ID: 441)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20449118316173553
    2. '               ' → logprob: -1.829491138458252
    3. 'if' → logprob: -3.954491138458252
    4. ' if' → logprob: -6.079491138458252
    5. '```' → logprob: -6.829491138458252
    6. '                       ' → logprob: -7.204491138458252
    7. '           ' → logprob: -7.579491138458252
    8. '   ' → logprob: -8.70449161529541
    9. 'j' (adapté à ' j') → logprob: -8.82949161529541
    10. 'break' → logprob: -10.07949161529541

Token 4049: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10159286856651306
    2. ' +=' → logprob: -2.351592779159546
    3. '==' → logprob: -7.601593017578125
    4. '=' → logprob: -7.851593017578125
    5. '<' → logprob: -8.351593017578125
    6. '<=' → logprob: -9.351593017578125
    7. '+' → logprob: -9.726593017578125
    8. '```' → logprob: -9.976593017578125
    9. ' <' → logprob: -10.351593017578125
    10. '   ' → logprob: -11.601593017578125

Token 4050: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '2' → logprob: -17.375009536743164
    4. '```' → logprob: -17.375009536743164
    5. 'j' → logprob: -18.500009536743164
    6. '0' → logprob: -19.000009536743164
    7. '１' → logprob: -19.437509536743164
    8. '   ' → logprob: -19.500009536743164
    9. '+' → logprob: -19.562509536743164
    10. '3' → logprob: -20.187509536743164

Token 4051: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. '2' → logprob: -13.000003814697266
    3. ' ' → logprob: -14.000003814697266
    4. 'j' → logprob: -15.000003814697266
    5. '0' → logprob: -15.250003814697266
    6. '
' → logprob: -15.875003814697266
    7. '```' → logprob: -16.250003814697266
    8. '3' → logprob: -16.875003814697266
    9. '...' → logprob: -17.125003814697266
    10. 'n' → logprob: -17.687503814697266

Token 4052: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39861398935317993
    2. '<|end|>' → logprob: -1.7736139297485352
    3. '```' → logprob: -2.273613929748535
    4. '       ' → logprob: -3.773613929748535
    5. ':' → logprob: -4.398613929748535
    6. '               ' → logprob: -5.273613929748535
    7. 'continue' → logprob: -5.648613929748535
    8. '<|end|>' → logprob: -6.523613929748535
    9. ':
' → logprob: -6.648613929748535
    10. '#' → logprob: -6.773613929748535

Token 4053: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003434942802414298
    2. '```' → logprob: -6.003435134887695
    3. '               ' → logprob: -7.503435134887695
    4. '                   ' → logprob: -9.128435134887695
    5. '       ' → logprob: -9.378435134887695
    6. '<|end|>' → logprob: -9.628435134887695
    7. '            
' → logprob: -10.628435134887695
    8. '                       ' → logprob: -11.003435134887695
    9. '
' → logprob: -11.128435134887695
    10. 'continue' → logprob: -11.128435134887695

Token 4054: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23940590023994446
    2. 'if' → logprob: -2.239405870437622
    3. '```' → logprob: -2.989405870437622
    4. '#' (adapté à ' #') → logprob: -4.239406108856201
    5. ' if' → logprob: -4.364406108856201
    6. '               ' → logprob: -4.489406108856201
    7. '       ' → logprob: -5.114406108856201
    8. ':' → logprob: -6.114406108856201
    9. ':
' → logprob: -6.364406108856201
    10. '                       ' → logprob: -6.739406108856201

Token 4055: ' length' (ID: 5517)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8588677644729614
    2. 'for' → logprob: -1.3588677644729614
    3. '           ' → logprob: -1.7338677644729614
    4. '#' → logprob: -2.358867645263672
    5. 'end' → logprob: -4.108867645263672
    6. 'while' → logprob: -4.483867645263672
    7. 'un' → logprob: -4.608867645263672
    8. 'length' → logprob: -4.608867645263672
    9. '   ' → logprob: -9.108867645263672
    10. '       ' → logprob: -9.233867645263672

Token 4056: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6156730055809021
    2. 'if' → logprob: -2.240673065185547
    3. ' =' → logprob: -2.240673065185547
    4. '>=' → logprob: -2.240673065185547
    5. '           ' → logprob: -2.365673065185547
    6. '==' → logprob: -4.490673065185547
    7. '>' → logprob: -4.990673065185547
    8. '<=' → logprob: -5.365673065185547
    9. 'while' → logprob: -5.615673065185547
    10. ' >=' → logprob: -5.740673065185547

Token 4057: ' chain' (ID: 13464)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.22411584854125977
    2. '(j' → logprob: -2.0991158485412598
    3. 'j' → logprob: -2.9741158485412598
    4. ' chain' → logprob: -4.09911584854126
    5. 'sequence' → logprob: -5.59911584854126
    6. '(m' → logprob: -5.84911584854126
    7. '(chain' → logprob: -7.09911584854126
    8. 'range' → logprob: -7.09911584854126
    9. 'm' → logprob: -7.34911584854126
    10. '[j' → logprob: -7.84911584854126

Token 4058: ' is' (ID: 382)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -1.0006459951400757
    2. '=' → logprob: -1.6256459951400757
    3. '>' → logprob: -1.6256459951400757
    4. 'if' → logprob: -2.6256461143493652
    5. '==' → logprob: -3.1256461143493652
    6. '<=' → logprob: -3.3756461143493652
    7. ' =' → logprob: -3.8756461143493652
    8. '           ' → logprob: -4.125646114349365
    9. ' if' → logprob: -4.375646114349365
    10. '+=' → logprob: -4.500646114349365

Token 4059: ' (' (ID: 350)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004130168817937374
    2. ' j' → logprob: -5.5041303634643555
    3. '```' → logprob: -10.754130363464355
    4. '[j' → logprob: -11.629130363464355
    5. '(j' → logprob: -11.879130363464355
    6. '           ' → logprob: -12.254130363464355
    7. '$j' → logprob: -12.629130363464355
    8. '>' → logprob: -13.129130363464355
    9. '`' → logprob: -13.504130363464355
    10. '   ' → logprob: -14.754130363464355

Token 4060: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -2.856408536899835e-05
    2. ' j' → logprob: -10.625028610229492
    3. '(j' → logprob: -12.625028610229492
    4. '$j' → logprob: -14.750028610229492
    5. '[j' → logprob: -15.000028610229492
    6. '```' → logprob: -15.500028610229492
    7. '1' → logprob: -17.250028610229492
    8. '	j' → logprob: -17.375028610229492
    9. '_j' → logprob: -17.750028610229492
    10. ')' → logprob: -17.750028610229492

Token 4061: '-start' (ID: 34953)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10619181394577026
    2. ' -' → logprob: -2.356191873550415
    3. '-i' → logprob: -6.106191635131836
    4. '-start' → logprob: -6.106191635131836
    5. ')' → logprob: -7.731191635131836
    6. '-
' → logprob: -7.856191635131836
    7. '```' → logprob: -9.356191635131836
    8. '-token' → logprob: -9.481191635131836
    9. '-prev' → logprob: -9.481191635131836
    10. '-next' → logprob: -10.481191635131836

Token 4062: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052512459456920624
    2. '```' → logprob: -3.5525124073028564
    3. ')
' → logprob: -4.9275126457214355
    4. ')>' → logprob: -5.1775126457214355
    5. '>' → logprob: -5.5525126457214355
    6. '-' → logprob: -6.4275126457214355
    7. ')>=' → logprob: -7.1775126457214355
    8. '):
' → logprob: -7.3025126457214355
    9. '>=' → logprob: -7.4275126457214355
    10. '``' → logprob: -8.302512168884277

Token 4063: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004878723411820829
    2. '```' → logprob: -8.12548828125
    3. ' if' → logprob: -9.50048828125
    4. 'if' → logprob: -10.00048828125
    5. '               ' → logprob: -11.12548828125
    6. '<|end|>' → logprob: -11.62548828125
    7. ':
' → logprob: -12.12548828125
    8. '		' → logprob: -12.50048828125
    9. '[' → logprob: -12.62548828125
    10. '       ' → logprob: -12.75048828125

Token 4064: ' length' (ID: 5517)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2159261405467987
    2. '           ' → logprob: -1.715926170349121
    3. '```' → logprob: -4.715926170349121
    4. ' if' → logprob: -5.340926170349121
    5. '       ' → logprob: -8.715926170349121
    6. '
' → logprob: -8.715926170349121
    7. '#' → logprob: -8.965926170349121
    8. '               ' → logprob: -9.465926170349121
    9. '``' → logprob: -9.715926170349121
    10. 'length' (adapté à ' length') → logprob: -10.715926170349121

Token 4065: ' =' (ID: 314)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.48053908348083496
    2. ' >' → logprob: -1.230539083480835
    3. '=' → logprob: -3.355539083480835
    4. ' =' → logprob: -3.980539083480835
    5. '           ' → logprob: -4.355539321899414
    6. '>=' → logprob: -4.355539321899414
    7. ' >=' → logprob: -4.980539321899414
    8. '```' → logprob: -6.730539321899414
    9. '>
' → logprob: -8.355539321899414
    10. ')' → logprob: -8.480539321899414

Token 4066: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.05538949742913246
    2. ' j' → logprob: -2.930389404296875
    3. '1' → logprob: -8.930389404296875
    4. '2' → logprob: -9.430389404296875
    5. '```' → logprob: -9.430389404296875
    6. '$j' → logprob: -9.805389404296875
    7. '[j' → logprob: -10.555389404296875
    8. '0' → logprob: -10.805389404296875
    9. '>' → logprob: -10.930389404296875
    10. ' ' → logprob: -10.930389404296875

Token 4067: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.13803386688232422
    2. ' -' → logprob: -2.138033866882324
    3. '```' → logprob: -5.263033866882324
    4. '-start' → logprob: -6.638033866882324
    5. '-
' → logprob: -6.763033866882324
    6. '>' → logprob: -7.388033866882324
    7. '-i' → logprob: -7.388033866882324
    8. '-token' → logprob: -8.138033866882324
    9. '#' → logprob: -8.263033866882324
    10. '<|end|>' → logprob: -8.513033866882324

Token 4068: ' start' (ID: 1604)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759615302085876
    2. 'start' → logprob: -0.8259615302085876
    3. ' start' → logprob: -11.075961112976074
    4. ' i' → logprob: -11.950961112976074
    5. '```' → logprob: -15.950961112976074
    6. '(start' → logprob: -18.32596206665039
    7. '(i' → logprob: -18.95096206665039
    8. '   ' → logprob: -19.07596206665039
    9. '[start' → logprob: -19.82596206665039
    10. '1' → logprob: -19.82596206665039

Token 4069: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02963905781507492
    2. 'if' → logprob: -3.9046390056610107
    3. ' if' → logprob: -5.52963924407959
    4. '```' → logprob: -6.15463924407959
    5. '       ' → logprob: -6.52963924407959
    6. '               ' → logprob: -7.90463924407959
    7. ':
' → logprob: -8.02963924407959
    8. '
' → logprob: -8.02963924407959
    9. '                   ' → logprob: -9.15463924407959
    10. '   ' → logprob: -10.02963924407959

Token 4070: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017353941220790148
    2. ' if' → logprob: -7.501735210418701
    3. '       ' → logprob: -7.751735210418701
    4. 'if' → logprob: -8.25173568725586
    5. '```' → logprob: -8.25173568725586
    6. '<|end|>' → logprob: -9.50173568725586
    7. '               ' → logprob: -10.00173568725586
    8. '                   ' → logprob: -10.50173568725586
    9. '   ' → logprob: -10.75173568725586
    10. ',' → logprob: -11.50173568725586

Token 4071: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0020465287379920483
    2. '           ' → logprob: -6.252046585083008
    3. ' if' → logprob: -9.502046585083008
    4. '```' → logprob: -10.377046585083008
    5. '       ' → logprob: -11.752046585083008
    6. 'for' → logprob: -13.002046585083008
    7. '   ' → logprob: -14.127046585083008
    8. '#' → logprob: -14.502046585083008
    9. '               ' → logprob: -15.002046585083008
    10. '
' → logprob: -15.877046585083008

Token 4072: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.10063836723566055
    2. '2' → logprob: -2.3506383895874023
    3. ' length' → logprob: -8.100638389587402
    4. '           ' → logprob: -9.475638389587402
    5. '(length' → logprob: -10.975638389587402
    6. '3' → logprob: -11.350638389587402
    7. ' ' → logprob: -11.975638389587402
    8. '>' → logprob: -11.975638389587402
    9. '1' → logprob: -12.725638389587402
    10. '   ' → logprob: -13.600638389587402

Token 4073: ' >=' (ID: 5064)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4342610239982605
    2. '<' → logprob: -1.8092610836029053
    3. '>' → logprob: -2.1842610836029053
    4. '==' → logprob: -3.5592610836029053
    5. ' <=' → logprob: -4.059260845184326
    6. '<len' → logprob: -4.684260845184326
    7. ' <' → logprob: -5.184260845184326
    8. '```' → logprob: -5.559260845184326
    9. '<int' → logprob: -6.059260845184326
    10. '>=' → logprob: -6.559260845184326

Token 4074: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005588700296357274
    2. ' ' → logprob: -7.500558853149414
    3. '
' → logprob: -13.625558853149414
    4. '```' → logprob: -13.625558853149414
    5. '   ' → logprob: -13.750558853149414
    6. '1' → logprob: -13.875558853149414
    7. '3' → logprob: -14.750558853149414
    8. '           ' → logprob: -14.750558853149414
    9. '       ' → logprob: -15.500558853149414
    10. ')' → logprob: -16.000558853149414

Token 4075: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8908587662735954e-05
    2. ' ' → logprob: -11.750019073486328
    3. '```' → logprob: -12.250019073486328
    4. '3' → logprob: -12.750019073486328
    5. '1' → logprob: -13.000019073486328
    6. '   ' → logprob: -15.375019073486328
    7. '``' → logprob: -15.625019073486328
    8. '           ' → logprob: -16.250019073486328
    9. '       ' → logprob: -16.625019073486328
    10. '
' → logprob: -16.625019073486328

Token 4076: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.012766375206410885
    2. ':' → logprob: -4.512766361236572
    3. ' and' → logprob: -7.012766361236572
    4. '           ' → logprob: -7.512766361236572
    5. '               ' → logprob: -9.01276683807373
    6. '):
' → logprob: -10.38776683807373
    7. '```' → logprob: -10.51276683807373
    8. 'and' → logprob: -10.76276683807373
    9. '                   ' → logprob: -11.13776683807373
    10. '                       ' → logprob: -11.26276683807373

Token 4077: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08176443725824356
    2. '               ' → logprob: -2.5817644596099854
    3. '```' → logprob: -6.081764221191406
    4. ' for' → logprob: -8.081764221191406
    5. 'for' → logprob: -8.956764221191406
    6. '   ' → logprob: -9.581764221191406
    7. '                   ' → logprob: -10.206764221191406
    8. '       ' → logprob: -10.831764221191406
    9. '``' → logprob: -11.956764221191406
    10. '	       ' → logprob: -12.081764221191406

Token 4078: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00373452203348279
    2. ' for' → logprob: -6.003734588623047
    3. '               ' → logprob: -6.878734588623047
    4. '```' → logprob: -8.753734588623047
    5. '   ' → logprob: -10.503734588623047
    6. 'k' → logprob: -11.003734588623047
    7. '           ' → logprob: -11.628734588623047
    8. '                   ' → logprob: -12.003734588623047
    9. '#' (adapté à ' #') → logprob: -12.253734588623047
    10. '``' → logprob: -12.628734588623047

Token 4079: ' All' (ID: 2545)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05850832536816597
    2. ' for' → logprob: -2.9335083961486816
    3. '               ' → logprob: -6.183508396148682
    4. '```' → logprob: -7.058508396148682
    5. '                   ' → logprob: -8.683507919311523
    6. '   ' → logprob: -8.683507919311523
    7. '           ' → logprob: -9.058507919311523
    8. '#' → logprob: -9.058507919311523
    9. 'k' → logprob: -9.558507919311523
    10. '``' → logprob: -10.808507919311523

Token 4080: ' but' (ID: 889)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5518712997436523
    2. 'un' → logprob: -2.1768712997436523
    3. 'except' → logprob: -2.3018712997436523
    4. '[' → logprob: -3.1768712997436523
    5. '               ' → logprob: -3.3018712997436523
    6. ' except' → logprob: -3.6768712997436523
    7. 'in' → logprob: -4.301871299743652
    8. '#' → logprob: -4.301871299743652
    9. '_un' → logprob: -4.426871299743652
    10. '                   ' → logprob: -4.426871299743652

Token 4081: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.038197100162506104
    2. 'the' → logprob: -3.2881970405578613
    3. ' last' → logprob: -9.16319751739502
    4. 'j' → logprob: -10.53819751739502
    5. 'all' → logprob: -11.53819751739502
    6. ' the' → logprob: -11.78819751739502
    7. 'start' → logprob: -13.53819751739502
    8. '```' → logprob: -14.16319751739502
    9. '(j' → logprob: -14.41319751739502
    10. '   ' → logprob: -14.41319751739502

Token 4082: ' mora' (ID: 47294)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12270735949277878
    2. 'un' → logprob: -2.9977073669433594
    3. ' for' → logprob: -3.2477073669433594
    4. 'in' → logprob: -4.497707366943359
    5. '               ' → logprob: -5.372707366943359
    6. 'i' → logprob: -5.872707366943359
    7. ' in' → logprob: -6.497707366943359
    8. '#' → logprob: -6.622707366943359
    9. ' un' → logprob: -6.997707366943359
    10. 'indices' → logprob: -7.372707366943359

Token 4083: ' in' (ID: 306)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.679797351360321
    2. '                   ' → logprob: -1.8047974109649658
    3. '```' → logprob: -1.9297974109649658
    4. 'for' → logprob: -2.054797410964966
    5. ' for' → logprob: -4.054797172546387
    6. '[i' → logprob: -4.554797172546387
    7. ':
' → logprob: -4.929797172546387
    8. ':' → logprob: -5.054797172546387
    9. '           ' → logprob: -6.179797172546387
    10. '
' → logprob: -6.304797172546387

Token 4084: ' chain' (ID: 13464)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.19645559787750244
    2. 'the' → logprob: -1.9464555978775024
    3. 'range' → logprob: -3.446455478668213
    4. ' chain' → logprob: -5.946455478668213
    5. 'sequence' → logprob: -7.696455478668213
    6. ' the' → logprob: -8.196455955505371
    7. 'start' → logprob: -8.821455955505371
    8. 'that' → logprob: -9.321455955505371
    9. 'this' → logprob: -10.446455955505371
    10. ' range' → logprob: -10.946455955505371

Token 4085: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7214065194129944
    2. ' for' → logprob: -1.4714064598083496
    3. '                   ' → logprob: -1.8464064598083496
    4. '               ' → logprob: -2.8464064598083496
    5. '```' → logprob: -3.0964064598083496
    6. ':' → logprob: -4.59640645980835
    7. ':
' → logprob: -4.84640645980835
    8. '=' → logprob: -6.84640645980835
    9. '                       ' → logprob: -7.22140645980835
    10. '#' → logprob: -7.22140645980835

Token 4086: 'vo' (ID: 1190)
  Prédit: 'vo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vo' → logprob: -0.030367622151970863
    2. 'v' → logprob: -3.530367612838745
    3. 'voice' → logprob: -7.655367851257324
    4. 'voc' → logprob: -10.405367851257324
    5. '_vo' → logprob: -10.405367851257324
    6. '_v' → logprob: -11.030367851257324
    7. '
' → logprob: -11.405367851257324
    8. 'vi' → logprob: -11.780367851257324
    9. '```' → logprob: -11.780367851257324
    10. 'vised' → logprob: -12.155367851257324

Token 4087: 'iced' (ID: 9865)
  Prédit: 'iced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iced' → logprob: -3.166338137816638e-05
    2. 'o' → logprob: -10.875031471252441
    3. '```' → logprob: -12.625031471252441
    4. 'ic' → logprob: -12.875031471252441
    5. 'ice' → logprob: -13.875031471252441
    6. 'oc' → logprob: -14.125031471252441
    7. '{
' → logprob: -14.500031471252441
    8. '#' → logprob: -14.750031471252441
    9. '   ' → logprob: -14.875031471252441
    10. '
' → logprob: -14.875031471252441

Token 4088: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2717738747596741
    2. '[i' → logprob: -1.8967738151550293
    3. '                   ' → logprob: -3.6467738151550293
    4. '[' → logprob: -4.146773815155029
    5. '```' → logprob: -4.271773815155029
    6. ':
' → logprob: -4.646773815155029
    7. '           ' → logprob: -4.646773815155029
    8. ' for' → logprob: -5.521773815155029
    9. 'for' → logprob: -5.646773815155029
    10. ':' → logprob: -6.896773815155029

Token 4089: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005191063042730093
    2. '```' → logprob: -6.130190849304199
    3. ' for' → logprob: -6.255190849304199
    4. 'for' → logprob: -7.130190849304199
    5. '                   ' → logprob: -8.3801908493042
    6. '           ' → logprob: -10.2551908493042
    7. '``' → logprob: -12.5051908493042
    8. '   ' → logprob: -12.8801908493042
    9. '
' → logprob: -13.2551908493042
    10. ',' → logprob: -13.3801908493042

Token 4090: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008623793721199036
    2. ' for' → logprob: -5.0086236000061035
    3. '                   ' → logprob: -7.0086236000061035
    4. 'k' → logprob: -7.3836236000061035
    5. '```' → logprob: -8.758624076843262
    6. '               ' → logprob: -9.133624076843262
    7. '   ' → logprob: -9.883624076843262
    8. ' k' → logprob: -10.258624076843262
    9. '                       ' → logprob: -11.758624076843262
    10. '``' → logprob: -12.383624076843262

Token 4091: ' Again' (ID: 24143)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06848009675741196
    2. ' for' → logprob: -3.0684800148010254
    3. '               ' → logprob: -4.693480014801025
    4. '```' → logprob: -4.818480014801025
    5. '                   ' → logprob: -6.068480014801025
    6. '           ' → logprob: -10.193480491638184
    7. '                       ' → logprob: -10.318480491638184
    8. '``' → logprob: -10.568480491638184
    9. 'while' → logprob: -10.818480491638184
    10. '   ' → logprob: -11.568480491638184

Token 4092: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15938469767570496
    2. ' for' → logprob: -2.1593847274780273
    3. '               ' → logprob: -4.534384727478027
    4. '```' → logprob: -4.534384727478027
    5. '                   ' → logprob: -4.784384727478027
    6. 'while' → logprob: -6.909384727478027
    7. '                       ' → logprob: -8.034384727478027
    8. '#' → logprob: -8.534384727478027
    9. ':
' → logprob: -8.534384727478027
    10. '``' → logprob: -9.534384727478027

Token 4093: ' apply' (ID: 6096)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003362954594194889
    2. ' for' → logprob: -5.753363132476807
    3. 'while' → logprob: -9.503362655639648
    4. 'k' → logprob: -9.753362655639648
    5. '                   ' → logprob: -10.378362655639648
    6. '#' → logprob: -11.878362655639648
    7. '```' → logprob: -11.878362655639648
    8. '   ' → logprob: -13.378362655639648
    9. '               ' → logprob: -13.503362655639648
    10. '                       ' → logprob: -14.003362655639648

Token 4094: ' if' (ID: 538)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.070095494389534
    2. 'for' → logprob: -2.8200955390930176
    3. 'True' → logprob: -5.695095539093018
    4. '```' → logprob: -6.445095539093018
    5. '[' → logprob: -6.945095539093018
    6. ' for' → logprob: -7.445095539093018
    7. '       ' → logprob: -8.57009506225586
    8. '#' → logprob: -8.94509506225586
    9. ' un' → logprob: -8.94509506225586
    10. '                   ' → logprob: -9.19509506225586

Token 4095: ' no' (ID: 860)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.29021772742271423
    2. 'i' → logprob: -2.790217638015747
    3. 'un' → logprob: -2.790217638015747
    4. 'length' → logprob: -2.915217638015747
    5. ' last' → logprob: -3.415217638015747
    6. '(last' → logprob: -4.540217876434326
    7. 'start' → logprob: -5.165217876434326
    8. 'True' → logprob: -5.540217876434326
    9. 'k' → logprob: -5.665217876434326
    10. 'j' → logprob: -5.790217876434326


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 4093
Tokens correctement prédits (1ère position, stricte): 1191
Tokens correctement prédits (1ère position, avec adaptation): 1255
Tokens correctement prédits (top 10): 2439
Précision stricte (1ère position): 29.10%
Précision adaptée (1ère position): 30.66%
Précision (top 10): 59.59%
================================================================================
