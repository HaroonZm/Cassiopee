================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from abc import ABC, abstractmethod
from typing import Optional, List, Tuple


class MCXILetter(ABC):
    """Abstract base class representing one of the numeral letters with their multipliers."""

    _letter_order = ['m', 'c', 'x', 'i']
    _letter_values = {'m': 1000, 'c': 100, 'x': 10, 'i': 1}

    def __init__(self, count: int = 1):
        if not (1 <= count <= 9):
            raise ValueError(f"Invalid count {count}. Must be 1..9.")
        self.count = count

    @property
    @abstractmethod
    def letter(self) -> str:
        pass

    @property
    def value(self) -> int:
        return self.count * self._letter_values[self.letter]

    @classmethod
    def letter_index(cls, letter: str) -> int:
        return cls._letter_order.index(letter)

    def __str__(self):
        if self.count == 1:
            return self.letter
        else:
            return f"{self.count}{self.letter}"

    def __repr__(self):
        return f"{self.__class__.__name__}(count={self.count})"


class M(MCXILetter):
    @property
    def letter(self) -> str:
        return 'm'


class C(MCXILetter):
    @property
    def letter(self) -> str:
        return 'c'


class X(MCXILetter):
    @property
    def letter(self) -> str:
        return 'x'


class I(MCXILetter):
    @property
    def letter(self) -> str:
        return 'i'


_LETTER_CLASSES = {
    'm': M,
    'c': C,
    'x': X,
    'i': I,
}

class MCXIString:
    """Represents an MCXI-string as a sequence of letters, with parsing and arithmetic."""

    def __init__(self, letters: Optional[List[MCXILetter]] = None):
        # Letters are stored in order m,c,x,i; each at most once
        self.letters = letters if letters is not None else []

    @classmethod
    def parse(cls, s: str) -> "MCXIString":
        # Parsing must validate:
        # - letters appear in order m,c,x,i
        # - letters appear at most once
        # - digits 2..9 only as prefix to letter
        # - no '0', no '1' anywhere
        # - must not be empty
        if not s:
            raise ValueError("Empty string is not a valid MCXI-string")

        letters_found = set()
        last_letter_index = -1

        letters_instances: List[MCXILetter] = []

        pos = 0
        length = len(s)

        while pos < length:
            ch = s[pos]

            if ch in '23456789':
                # Digit prefix found, must be followed by letter
                count = int(ch)
                pos += 1
                if pos >= length:
                    raise ValueError("Digit prefix without following letter")
                letter_char = s[pos]
                pos += 1
                if letter_char not in _LETTER_CLASSES:
                    raise ValueError(f"Invalid letter '{letter_char}' after digit {ch}")

                letter_idx = MCXILetter.letter_index(letter_char)

                if letter_char in letters_found:
                    raise ValueError(f"Duplicate letter '{letter_char}'")
                if letter_idx <= last_letter_index:
                    raise ValueError(f"Letters out of order: {letter_char} after index {last_letter_index}")
                if count == 1:
                    # Explicitly forbid '1' digit prefix
                    raise ValueError("Prefix digit cannot be 1")

                letters_found.add(letter_char)
                last_letter_index = letter_idx

                letter_obj = _LETTER_CLASSES[letter_char](count)
                letters_instances.append(letter_obj)
            elif ch in _LETTER_CLASSES:
                # Single letter without digit prefix
                letter_char = ch
                pos += 1

                letter_idx = MCXILetter.letter_index(letter_char)
                if letter_char in letters_found:
                    raise ValueError(f"Duplicate letter '{letter_char}'")
                if letter_idx <= last_letter_index:
                    raise ValueError(f"Letters out of order: {letter_char} after index {last_letter_index}")

                letters_found.add(letter_char)
                last_letter_index = letter_idx

                letter_obj = _LETTER_CLASSES[letter_char](1)
                letters_instances.append(letter_obj)
            else:
                # Invalid character
                raise ValueError(f"Invalid character '{ch}' in MCXI-string")

        if len(letters_instances) == 0:
            raise ValueError("Empty MCXI-string")

        return cls(letters_instances)

    def to_value(self) -> int:
        return sum(letter.value for letter in self.letters)

    @classmethod
    def from_value(cls, val: int) -> "MCXIString":
        # val must be 1..9999
        if not (1 <= val <= 9999):
            raise ValueError(f"Value {val} out of range 1..9999")

        parts: List[MCXILetter] = []

        for letter_char in MCXILetter._letter_order:
            base = MCXILetter._letter_values[letter_char]
            count = val // base
            val = val % base
            if count > 0:
                letter_obj = _LETTER_CLASSES[letter_char](count)
                parts.append(letter_obj)

        return cls(parts)

    def __str__(self):
        # Stringify by concatenating letter objects string representations in order
        return ''.join(str(letter) for letter in self.letters)

    def __repr__(self):
        return f"MCXIString({repr(self.letters)})"

    def __add__(self, other: "MCXIString") -> "MCXIString":
        # Add by summing the values and reconverting
        sum_val = self.to_value() + other.to_value()
        return MCXIString.from_value(sum_val)


def main():
    import sys
    input = sys.stdin.readline

    n = int(input())
    for _ in range(n):
        line = input().strip()
        if not line:
            # Defensive: skip empty lines if any
            continue
        s1, s2 = line.split()
        first_mcxi = MCXIString.parse(s1)
        second_mcxi = MCXIString.parse(s2)
        result = first_mcxi + second_mcxi
        print(result)


if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' abc' (ID: 75094)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' ABC' (ID: 33047)
  Prédit: ' ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ABC' → logprob: -0.07552465796470642
    2. 'ABC' → logprob: -2.7005245685577393
    3. ' ' → logprob: -5.825524806976318
    4. ' A' → logprob: -7.075524806976318
    5. ' ' → logprob: -7.200524806976318
    6. 'import' → logprob: -8.70052433013916
    7. ' Abstract' → logprob: -8.82552433013916
    8. 'ABCDE' → logprob: -9.07552433013916
    9. ' abc' → logprob: -9.32552433013916
    10. 'Abstract' → logprob: -9.57552433013916

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21777556836605072
    2. ',' → logprob: -1.717775583267212
    3. 'import' → logprob: -5.342775344848633
    4. '' → logprob: -5.967775344848633
    5. ':' → logprob: -6.092775344848633
    6. '```' → logprob: -6.217775344848633
    7. ' ' → logprob: -7.217775344848633
    8. ' ,' → logprob: -7.342775344848633
    9. '<|end|>' → logprob: -7.967775344848633
    10. '\' → logprob: -7.967775344848633

Token 5: ' abstract' (ID: 13004)
  Prédit: ' abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abstract' → logprob: -0.5415467619895935
    2. 'abstract' → logprob: -0.9165467619895935
    3. 'Abstract' → logprob: -4.166546821594238
    4. ' ' → logprob: -6.666546821594238
    5. ' ABC' → logprob: -7.666546821594238
    6. ' A' → logprob: -8.666546821594238
    7. '.abstract' → logprob: -8.791546821594238
    8. '```' → logprob: -9.041546821594238
    9. ' Abstract' → logprob: -9.166546821594238
    10. 'ABC' → logprob: -9.791546821594238

Token 6: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -7.898723561083898e-05
    2. 'm' → logprob: -10.000079154968262
    3. 'classmethod' → logprob: -11.375079154968262
    4. 'meth' → logprob: -11.500079154968262
    5. '_method' → logprob: -12.500079154968262
    6. 'me' → logprob: -12.625079154968262
    7. 'staticmethod' → logprob: -13.625079154968262
    8. 'met' → logprob: -13.750079154968262
    9. '```' → logprob: -14.125079154968262
    10. ' method' → logprob: -14.750079154968262

Token 7: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41963160037994385
    2. '```' → logprob: -1.4196316003799438
    3. 'class' → logprob: -2.9196314811706543
    4. '

' → logprob: -4.044631481170654
    5. '\n' → logprob: -5.044631481170654
    6. '' → logprob: -5.044631481170654
    7. '<|end|>' → logprob: -5.169631481170654
    8. '
' → logprob: -5.794631481170654
    9. '``' → logprob: -5.919631481170654
    10. '\' → logprob: -6.419631481170654

Token 8: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30175668001174927
    2. '

' → logprob: -1.5517566204071045
    3. 'class' → logprob: -3.4267566204071045
    4. '```' → logprob: -4.426756858825684
    5. '' → logprob: -6.801756858825684
    6. '
' → logprob: -7.301756858825684
    7. ' 

' → logprob: -7.676756858825684
    8. ' class' → logprob: -7.801756858825684
    9. '\n' → logprob: -8.051756858825684
    10. '``' → logprob: -8.176756858825684

Token 9: ' typing' (ID: 34152)
  Prédit: ' typing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.02580157481133938
    2. ' collections' → logprob: -4.025801658630371
    3. ' dat' → logprob: -5.525801658630371
    4. 'typing' → logprob: -6.525801658630371
    5. ' io' → logprob: -7.650801658630371
    6. ' abc' → logprob: -8.025801658630371
    7. ' os' → logprob: -8.275801658630371
    8. ' sys' → logprob: -8.400801658630371
    9. 'collections' → logprob: -8.650801658630371
    10. ' math' → logprob: -8.775801658630371

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04280196875333786
    2. 'import' → logprob: -3.292801856994629
    3. '<|end|>' → logprob: -6.042801856994629
    4. '.' → logprob: -6.542801856994629
    5. ' ' → logprob: -7.542801856994629
    6. '<|end|>' → logprob: -9.542801856994629
    7. ' as' → logprob: -9.667801856994629
    8. '[' → logprob: -9.917801856994629
    9. '```' → logprob: -10.292801856994629
    10. ' .' → logprob: -10.417801856994629

Token 11: ' Optional' (ID: 19351)
  Prédit: 'Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Any' → logprob: -0.17559893429279327
    2. ' Any' → logprob: -2.0505988597869873
    3. 'List' → logprob: -4.675599098205566
    4. 'Union' → logprob: -5.300599098205566
    5. ' List' → logprob: -5.425599098205566
    6. 'Callable' → logprob: -5.550599098205566
    7. ' Union' → logprob: -6.050599098205566
    8. 'Protocol' → logprob: -6.050599098205566
    9. ' Callable' → logprob: -6.175599098205566
    10. ' Protocol' → logprob: -6.675599098205566

Token 12: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.31652122735977173
    2. '
' → logprob: -1.441521167755127
    3. 'class' → logprob: -3.691521167755127
    4. '```' → logprob: -5.191521167755127
    5. '\n' → logprob: -6.066521167755127
    6. '


' → logprob: -6.941521167755127
    7. '<|end|>' → logprob: -7.941521167755127
    8. ' 

' → logprob: -9.066521644592285
    9. '
' → logprob: -9.691521644592285
    10. '``' → logprob: -9.691521644592285

Token 13: ' List' (ID: 2655)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.4197096824645996
    2. ' List' → logprob: -2.1697096824645996
    3. 'Union' → logprob: -2.2947096824645996
    4. ' Callable' → logprob: -2.7947096824645996
    5. ' Any' → logprob: -3.7947096824645996
    6. 'List' → logprob: -4.0447096824646
    7. 'Any' → logprob: -4.2947096824646
    8. 'Callable' → logprob: -5.2947096824646
    9. ' Protocol' → logprob: -5.7947096824646
    10. ' Type' → logprob: -6.7947096824646

Token 14: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6201322674751282
    2. '
' → logprob: -0.8701322674751282
    3. 'class' → logprob: -3.3701322078704834
    4. '```' → logprob: -5.1201324462890625
    5. '\n' → logprob: -6.2451324462890625
    6. '


' → logprob: -8.120132446289062
    7. '
' → logprob: -8.245132446289062
    8. '``' → logprob: -8.745132446289062
    9. ' class' → logprob: -10.120132446289062
    10. ' 

' → logprob: -10.495132446289062

Token 15: ' Tuple' (ID: 50841)
  Prédit: ' Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Union' → logprob: -0.05026783049106598
    2. 'Union' → logprob: -4.050267696380615
    3. ' Callable' → logprob: -4.675267696380615
    4. ' Tuple' → logprob: -5.175267696380615
    5. ' Any' → logprob: -5.175267696380615
    6. ' Dict' → logprob: -5.300267696380615
    7. 'Tuple' → logprob: -6.800267696380615
    8. ' Protocol' → logprob: -6.800267696380615
    9. 'Any' → logprob: -7.050267696380615
    10. ' str' → logprob: -7.175267696380615

Token 16: '


' (ID: 2499)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4033723473548889
    2. '
' → logprob: -1.4033722877502441
    3. 'class' → logprob: -2.653372287750244
    4. '\n' → logprob: -4.528372287750244
    5. '```' → logprob: -5.653372287750244
    6. '


' → logprob: -7.403372287750244
    7. '
' → logprob: -8.028372764587402
    8. 'import' → logprob: -9.653372764587402
    9. '
 
' → logprob: -9.653372764587402
    10. ' class' → logprob: -9.653372764587402

Token 17: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00010282796574756503
    2. 'c' → logprob: -9.750102996826172
    3. 'cla' → logprob: -11.125102996826172
    4. 'clas' → logprob: -11.125102996826172
    5. 'cl' → logprob: -12.125102996826172
    6. '
' → logprob: -12.500102996826172
    7. '```' → logprob: -12.625102996826172
    8. '"class' → logprob: -14.250102996826172
    9. ' class' → logprob: -14.375102996826172
    10. '@' → logprob: -14.375102996826172

Token 18: ' MC' (ID: 31263)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016984477639198303
    2. ' Base' → logprob: -5.141984462738037
    3. ' Abstract' → logprob: -5.141984462738037
    4. ' Space' → logprob: -6.516984462738037
    5. ' Basic' → logprob: -7.141984462738037
    6. ' My' → logprob: -7.391984462738037
    7. ' Serializer' → logprob: -7.516984462738037
    8. ' User' → logprob: -8.891984939575195
    9. ' Parser' → logprob: -9.016984939575195
    10. ' A' → logprob: -9.266984939575195

Token 19: 'X' (ID: 55)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.06524715572595596
    2. ':' → logprob: -3.190247058868408
    3. 'E' → logprob: -4.440247058868408
    4. 'A' → logprob: -5.565247058868408
    5. ' ' → logprob: -6.065247058868408
    6. 'C' → logprob: -6.940247058868408
    7. '_' → logprob: -7.065247058868408
    8. 'S' → logprob: -8.315247535705566
    9. 'U' → logprob: -8.315247535705566
    10. 'Question' → logprob: -8.440247535705566

Token 20: 'IL' (ID: 2654)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.092734694480896
    2. 'Processor' → logprob: -1.592734694480896
    3. 'Model' → logprob: -2.9677348136901855
    4. 'Module' → logprob: -3.0927348136901855
    5. '(' → logprob: -3.2177348136901855
    6. 'Base' → logprob: -4.2177348136901855
    7. 'Calculator' → logprob: -4.3427348136901855
    8. 'Controller' → logprob: -4.3427348136901855
    9. 'Trade' → logprob: -4.3427348136901855
    10. 'Optimizer' → logprob: -4.3427348136901855

Token 21: 'etter' (ID: 30747)
  Prédit: 'oader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oader' → logprob: -0.8342075943946838
    2. '(' → logprob: -1.709207534790039
    3. 'ayer' → logprob: -2.834207534790039
    4. 'Interface' → logprob: -2.959207534790039
    5. 'Model' → logprob: -3.209207534790039
    6. 'og' → logprob: -3.709207534790039
    7. 'Parser' → logprob: -3.834207534790039
    8. 'Module' → logprob: -4.334207534790039
    9. 'Base' → logprob: -4.584207534790039
    10. 'Service' → logprob: -4.709207534790039

Token 22: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00043579499470070004
    2. '(Abstract' → logprob: -8.250435829162598
    3. ':' → logprob: -8.750435829162598
    4. '(A' → logprob: -12.125435829162598
    5. '(
' → logprob: -13.250435829162598
    6. 'Abstract' → logprob: -13.625435829162598
    7. '():' → logprob: -13.750435829162598
    8. '(I' → logprob: -13.750435829162598
    9. '(M' → logprob: -14.000435829162598
    10. 'Base' → logprob: -14.500435829162598

Token 23: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.011402999050915241
    2. ' ABC' → logprob: -4.5114030838012695
    3. ')' → logprob: -8.88640308380127
    4. 'A' → logprob: -9.38640308380127
    5. 'AB' → logprob: -9.63640308380127
    6. '   ' → logprob: -11.13640308380127
    7. 'ABCDE' → logprob: -11.26140308380127
    8. 'Abstract' → logprob: -11.51140308380127
    9. 'abc' → logprob: -11.63640308380127
    10. ' ' → logprob: -11.76140308380127

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25197699666023254
    2. ')' → logprob: -1.5019769668579102
    3. ':' → logprob: -10.25197696685791
    4. ')>' → logprob: -12.37697696685791
    5. '):
' → logprob: -13.12697696685791
    6. '>' → logprob: -13.87697696685791
    7. ':)' → logprob: -14.25197696685791
    8. ' ):' → logprob: -14.25197696685791
    9. ')：' → logprob: -14.37697696685791
    10. '):

' → logprob: -14.50197696685791

Token 25: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10079369693994522
    2. '   ' → logprob: -2.3507936000823975
    3. ':
' → logprob: -8.475793838500977
    4. '):' → logprob: -9.225793838500977
    5. ' :' → logprob: -9.350793838500977
    6. ')' → logprob: -9.725793838500977
    7. '    
' → logprob: -10.600793838500977
    8. ',' → logprob: -11.100793838500977
    9. '<|end|>' → logprob: -11.100793838500977
    10. '    ' → logprob: -11.475793838500977

Token 26: ' """' (ID: 9280)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09899897128343582
    2. 'def' → logprob: -2.8489990234375
    3. '    
' → logprob: -3.9739990234375
    4. '
' → logprob: -5.2239990234375
    5. ' def' → logprob: -5.7239990234375
    6. '    ' → logprob: -6.2239990234375
    7. '\n' → logprob: -6.7239990234375
    8. '```' → logprob: -6.9739990234375
    9. ':' → logprob: -7.3489990234375
    10. ' 
' → logprob: -7.4739990234375

Token 27: 'Abstract' (ID: 16996)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.22535334527492523
    2. ' """' → logprob: -2.850353240966797
    3. 'A' → logprob: -3.100353240966797
    4. 'Rep' → logprob: -3.600353240966797
    5. '"""
' → logprob: -4.100353240966797
    6. 'M' → logprob: -4.100353240966797
    7. ' """
' → logprob: -4.850353240966797
    8. 'An' → logprob: -5.475353240966797
    9. 'Abstract' → logprob: -5.725353240966797
    10. '\n' → logprob: -5.975353240966797

Token 28: ' base' (ID: 3611)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06401780992746353
    2. ' class' → logprob: -3.0640177726745605
    3. 'class' → logprob: -4.4390177726745605
    4. ')' → logprob: -6.4390177726745605
    5. ' )' → logprob: -7.9390177726745605
    6. ' 
' → logprob: -7.9390177726745605
    7. ' """' → logprob: -8.564018249511719
    8. '  ' → logprob: -8.689018249511719
    9. '   ' → logprob: -8.814018249511719
    10. ' base' → logprob: -9.064018249511719

Token 29: ' class' (ID: 744)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5389376282691956
    2. ' class' → logprob: -0.9139376282691956
    3. ' ' → logprob: -4.163937568664551
    4. '   ' → logprob: -9.66393756866455
    5. '  ' → logprob: -10.66393756866455
    6. 'method' → logprob: -11.66393756866455
    7. ')' → logprob: -11.91393756866455
    8. 'Class' → logprob: -12.28893756866455
    9. ' base' → logprob: -12.28893756866455
    10. 'classmethod' → logprob: -12.28893756866455

Token 30: ' representing' (ID: 25389)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35195815563201904
    2. ')' → logprob: -1.726958155632019
    3. '   ' → logprob: -3.1019582748413086
    4. '<|end|>' → logprob: -3.2269582748413086
    5. ' ' → logprob: -3.8519582748413086
    6. ':' → logprob: -5.851958274841309
    7. '<|end|>' → logprob: -6.101958274841309
    8. '  ' → logprob: -6.351958274841309
    9. 'for' → logprob: -6.351958274841309
    10. '```' → logprob: -6.476958274841309

Token 31: ' one' (ID: 1001)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0576021634042263
    2. ' an' → logprob: -2.9326021671295166
    3. ' the' → logprob: -6.1826019287109375
    4. 'a' → logprob: -8.307601928710938
    5. ' ' → logprob: -8.557601928710938
    6. ' letters' → logprob: -9.307601928710938
    7. ' letter' → logprob: -10.932601928710938
    8. 'the' → logprob: -11.182601928710938
    9. ' )' → logprob: -11.182601928710938
    10. ' MC' → logprob: -11.682601928710938

Token 32: ' of' (ID: 328)
  Prédit: ' letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.08568105101585388
    2. ' character' → logprob: -2.9606809616088867
    3. 'letter' → logprob: -5.210680961608887
    4. '-letter' → logprob: -5.335680961608887
    5. 's' → logprob: -5.585680961608887
    6. ' word' → logprob: -5.960680961608887
    7. ' token' → logprob: -6.460680961608887
    8. 'character' → logprob: -6.585680961608887
    9. ' of' → logprob: -6.710680961608887
    10. ' """' → logprob: -7.085680961608887

Token 33: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.15044233202934265
    2. ' a' → logprob: -2.650442361831665
    3. 'the' → logprob: -2.900442361831665
    4. ' an' → logprob: -5.150442123413086
    5. 'a' → logprob: -5.275442123413086
    6. ' letters' → logprob: -6.900442123413086
    7. ' ' → logprob: -7.525442123413086
    8. ' multiple' → logprob: -7.650442123413086
    9. ' MC' → logprob: -7.900442123413086
    10. 'an' → logprob: -9.400442123413086

Token 34: ' numeral' (ID: 191907)
  Prédit: ' multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multiple' → logprob: -0.8146647810935974
    2. ' letters' → logprob: -1.4396648406982422
    3. ' possible' → logprob: -2.814664840698242
    4. ' ' → logprob: -3.064664840698242
    5. ' choices' → logprob: -3.064664840698242
    6. ' options' → logprob: -3.439664840698242
    7. 'multiple' → logprob: -4.314664840698242
    8. ' answer' → logprob: -4.377164840698242
    9. ' multi' → logprob: -4.627164840698242
    10. ' M' → logprob: -4.752164840698242

Token 35: ' letters' (ID: 18151)
  Prédit: ' systems'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' systems' → logprob: -0.4984966218471527
    2. ' system' → logprob: -1.998496651649475
    3. ' symbols' → logprob: -2.2484965324401855
    4. ' characters' → logprob: -3.2484965324401855
    5. 's' → logprob: -3.4984965324401855
    6. 'systems' → logprob: -3.6234965324401855
    7. ' letters' → logprob: -4.3734965324401855
    8. 'symbols' → logprob: -4.6234965324401855
    9. ' s' → logprob: -4.9984965324401855
    10. ' representations' → logprob: -5.6234965324401855

Token 36: ' with' (ID: 483)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5131853818893433
    2. ' used' → logprob: -1.0131853818893433
    3. ' of' → logprob: -4.138185501098633
    4. '.' → logprob: -4.888185501098633
    5. '"""' → logprob: -6.013185501098633
    6. ' for' → logprob: -6.138185501098633
    7. ')' → logprob: -6.263185501098633
    8. '  ' → logprob: -6.638185501098633
    9. 'in' → logprob: -6.638185501098633
    10. ' representing' → logprob: -6.763185501098633

Token 37: ' their' (ID: 1043)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.23582813143730164
    2. ' a' → logprob: -1.610828161239624
    3. ' the' → logprob: -5.110827922821045
    4. 'a' → logprob: -6.735827922821045
    5. ' abstract' → logprob: -7.485827922821045
    6. ' numeric' → logprob: -7.610827922821045
    7. ' numerical' → logprob: -8.735828399658203
    8. ' special' → logprob: -9.110828399658203
    9. ' possible' → logprob: -9.110828399658203
    10. ' some' → logprob: -9.235828399658203

Token 38: ' multip' (ID: 17524)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.3292337656021118
    2. ' values' → logprob: -3.2042336463928223
    3. ' position' → logprob: -3.3292336463928223
    4. ' name' → logprob: -3.4542336463928223
    5. ' place' → logprob: -3.5792336463928223
    6. 'value' → logprob: -4.204233646392822
    7. ' numeric' → logprob: -4.204233646392822
    8. ' numerical' → logprob: -4.204233646392822
    9. ' corresponding' → logprob: -4.579233646392822
    10. ' numeral' → logprob: -4.704233646392822

Token 39: 'liers' (ID: 62539)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.0030122995376587
    2. 'liers' → logprob: -1.3780122995376587
    3. 'li' → logprob: -1.7530122995376587
    4. 'lication' → logprob: -2.503012180328369
    5. 'lic' → logprob: -2.753012180328369
    6. 'lier' → logprob: -4.503012180328369
    7. 'l' → logprob: -4.878012180328369
    8. 'liable' → logprob: -4.878012180328369
    9. '```' → logprob: -5.378012180328369
    10. 'lying' → logprob: -5.503012180328369

Token 40: '."""

' (ID: 68934)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5380187034606934
    2. '"""' → logprob: -1.1630187034606934
    3. '   ' → logprob: -2.9130187034606934
    4. '."""' → logprob: -3.2880187034606934
    5. ')' → logprob: -5.038018703460693
    6. '```' → logprob: -6.788018703460693
    7. ' """' → logprob: -6.913018703460693
    8. ':' → logprob: -6.913018703460693
    9. ' and' → logprob: -7.288018703460693
    10. ',' → logprob: -7.788018703460693

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4461394250392914
    2. '
' → logprob: -1.4461394548416138
    3. '    
' → logprob: -2.946139335632324
    4. '\n' → logprob: -3.071139335632324
    5. 'n' → logprob: -4.946139335632324
    6. ' 
' → logprob: -5.571139335632324
    7. '_' → logprob: -6.196139335632324
    8. '\' → logprob: -6.321139335632324
    9. '```' → logprob: -6.446139335632324
    10. 'class' → logprob: -6.571139335632324

Token 42: ' _' (ID: 1175)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.12095779180526733
    2. ' @' → logprob: -2.245957851409912
    3. '   ' → logprob: -5.120957851409912
    4. 'def' → logprob: -7.245957851409912
    5. '@property' → logprob: -7.370957851409912
    6. '    
' → logprob: -7.870957851409912
    7. '    ' → logprob: -8.870957374572754
    8. '@param' → logprob: -9.870957374572754
    9. '
' → logprob: -9.995957374572754
    10. ' def' → logprob: -10.495957374572754

Token 43: 'letter' (ID: 12793)
  Prédit: 'mult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mult' → logprob: -0.5805048942565918
    2. 'multip' → logprob: -1.4555048942565918
    3. 'letter' → logprob: -2.705504894256592
    4. 'value' → logprob: -3.455504894256592
    5. 'letters' → logprob: -3.955504894256592
    6. 'values' → logprob: -4.205504894256592
    7. 'MULT' → logprob: -4.580504894256592
    8. 'mapping' → logprob: -4.705504894256592
    9. 'char' → logprob: -5.080504894256592
    10. 'symbol' → logprob: -5.205504894256592

Token 44: '_order' (ID: 17446)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3625447452068329
    2. 's' → logprob: -1.8625447750091553
    3. ' =' → logprob: -2.3625447750091553
    4. '_map' → logprob: -4.237544536590576
    5. '_multiplier' → logprob: -4.237544536590576
    6. '_' → logprob: -4.987544536590576
    7. '_to' → logprob: -5.112544536590576
    8. '=' → logprob: -5.862544536590576
    9. '_values' → logprob: -6.612544536590576
    10. ' :' → logprob: -6.612544536590576

Token 45: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6085330247879028
    2. ' =' → logprob: -0.8585330247879028
    3. '=' → logprob: -3.9835329055786133
    4. ' :' → logprob: -4.358532905578613
    5. 's' → logprob: -8.483532905578613
    6. '_' → logprob: -8.733532905578613
    7. '   ' → logprob: -9.233532905578613
    8. ' ' → logprob: -9.733532905578613
    9. '  ' → logprob: -9.983532905578613
    10. ')' → logprob: -11.358532905578613

Token 46: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.8169904351234436
    2. '[' → logprob: -1.5669903755187988
    3. ' ['' → logprob: -2.441990375518799
    4. '["' → logprob: -2.441990375518799
    5. ' [' → logprob: -3.191990375518799
    6. '[
' → logprob: -3.941990375518799
    7. '[]' → logprob: -4.066990375518799
    8. '{}' → logprob: -4.191990375518799
    9. ''' → logprob: -4.191990375518799
    10. '{' → logprob: -4.566990375518799

Token 47: 'm' (ID: 76)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.2897418439388275
    2. 'M' → logprob: -1.91474187374115
    3. 'A' → logprob: -3.1647417545318604
    4. 'X' → logprob: -4.2897419929504395
    5. 'C' → logprob: -4.9147419929504395
    6. 'i' → logprob: -5.0397419929504395
    7. 'G' → logprob: -5.4147419929504395
    8. 'Ⅰ' → logprob: -5.7897419929504395
    9. '\' → logprob: -5.9147419929504395
    10. 'N' → logprob: -6.4147419929504395

Token 48: '',' (ID: 787)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.07079420238733292
    2. ''' → logprob: -3.820794105529785
    3. ',' → logprob: -4.445794105529785
    4. '',' → logprob: -5.445794105529785
    5. '','' → logprob: -5.445794105529785
    6. 'a' → logprob: -5.570794105529785
    7. 'c' → logprob: -5.570794105529785
    8. 'u' → logprob: -5.570794105529785
    9. 's' → logprob: -5.945794105529785
    10. '1' → logprob: -6.320794105529785

Token 49: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.13770796358585358
    2. ''d' → logprob: -3.6377079486846924
    3. ''a' → logprob: -3.7627079486846924
    4. ''s' → logprob: -4.1377081871032715
    5. ' '' → logprob: -4.2627081871032715
    6. ''u' → logprob: -5.0127081871032715
    7. ''t' → logprob: -5.2627081871032715
    8. ''q' → logprob: -5.2627081871032715
    9. ''b' → logprob: -5.3877081871032715
    10. ''x' → logprob: -5.6377081871032715

Token 50: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3007626235485077
    2. 'k' → logprob: -2.42576265335083
    3. 's' → logprob: -3.80076265335083
    4. 'M' → logprob: -3.92576265335083
    5. 'd' → logprob: -3.92576265335083
    6. 'x' → logprob: -4.17576265335083
    7. 'q' → logprob: -4.55076265335083
    8. 'a' → logprob: -4.67576265335083
    9. ''' → logprob: -4.80076265335083
    10. 'n' → logprob: -5.05076265335083

Token 51: '',' (ID: 787)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47766125202178955
    2. '']' → logprob: -1.6026612520217896
    3. 'd' → logprob: -2.3526611328125
    4. 'm' → logprob: -3.6026611328125
    5. ''x' → logprob: -4.4776611328125
    6. ''' → logprob: -4.7276611328125
    7. ''],' → logprob: -4.9776611328125
    8. '',' → logprob: -5.3526611328125
    9. ',' → logprob: -5.9776611328125
    10. 'a' → logprob: -6.2276611328125

Token 52: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.531236469745636
    2. ''' → logprob: -1.6562364101409912
    3. ''d' → logprob: -2.406236410140991
    4. ''t' → logprob: -3.156236410140991
    5. ' '' → logprob: -4.03123664855957
    6. ''l' → logprob: -4.15623664855957
    7. ''i' → logprob: -4.53123664855957
    8. ''q' → logprob: -5.03123664855957
    9. ''u' → logprob: -5.40623664855957
    10. ''e' → logprob: -5.53123664855957

Token 53: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007632419932633638
    2. 'k' → logprob: -6.132632255554199
    3. 'd' → logprob: -6.257632255554199
    4. '_x' → logprob: -6.882632255554199
    5. 'q' → logprob: -7.757632255554199
    6. ''x' → logprob: -8.5701322555542
    7. 'a' → logprob: -8.6951322555542
    8. '```' → logprob: -8.6951322555542
    9. 'e' → logprob: -9.0076322555542
    10. 'l' → logprob: -9.0076322555542

Token 54: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.052933476865291595
    2. ''l' → logprob: -4.052933692932129
    3. 'l' → logprob: -4.552933692932129
    4. ''i' → logprob: -4.802933692932129
    5. '']' → logprob: -5.177933692932129
    6. '','' → logprob: -5.677933692932129
    7. ''',' → logprob: -6.302933692932129
    8. ''' → logprob: -6.552933692932129
    9. ',' → logprob: -6.552933692932129
    10. 'i' → logprob: -6.927933692932129

Token 55: ' '' (ID: 461)
  Prédit: ''l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''l' → logprob: -0.06816468387842178
    2. ''' → logprob: -3.318164587020874
    3. ' ' → logprob: -4.693164825439453
    4. ''i' → logprob: -4.943164825439453
    5. ' '' → logprob: -5.068164825439453
    6. '‘l' → logprob: -6.568164825439453
    7. '`' → logprob: -6.943164825439453
    8. ' l' → logprob: -6.943164825439453
    9. 'l' → logprob: -7.068164825439453
    10. ''L' → logprob: -7.193164825439453

Token 56: 'i' (ID: 72)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.37327104806900024
    2. 'i' → logprob: -1.8732709884643555
    3. 'v' → logprob: -1.8732709884643555
    4. 'L' → logprob: -7.4982709884643555
    5. 'd' → logprob: -7.7482709884643555
    6. 'I' → logprob: -7.7482709884643555
    7. ''i' → logprob: -7.7482709884643555
    8. '`' → logprob: -7.9982709884643555
    9. ''l' → logprob: -7.9982709884643555
    10. ''' → logprob: -8.123270988464355

Token 57: '']
' (ID: 9756)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.022793589159846306
    2. '',' → logprob: -3.8977935314178467
    3. ''' → logprob: -6.647793769836426
    4. ']' → logprob: -7.772793769836426
    5. 'l' → logprob: -9.147793769836426
    6. '']
' → logprob: -9.772793769836426
    7. ',' → logprob: -9.897793769836426
    8. 's' → logprob: -10.022793769836426
    9. '']

' → logprob: -10.147793769836426
    10. 'a' → logprob: -10.147793769836426

Token 58: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6655966639518738
    2. ':' → logprob: -1.6655967235565186
    3. '
' → logprob: -2.1655967235565186
    4. '   ' → logprob: -3.1655967235565186
    5. '<|end|>' → logprob: -3.1655967235565186
    6. 'def' → logprob: -3.6655967235565186
    7. '\' → logprob: -4.5405964851379395
    8. '\n' → logprob: -4.5405964851379395
    9. '```' → logprob: -4.5405964851379395
    10. ' ' → logprob: -5.4155964851379395

Token 59: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' (adapté à ' _') → logprob: -0.6147916316986084
    2. '@' → logprob: -1.7397916316986084
    3. '   ' → logprob: -2.2397916316986084
    4. ':' → logprob: -2.4897916316986084
    5. 'def' → logprob: -3.1147916316986084
    6. '
' → logprob: -4.2397918701171875
    7. '\n' → logprob: -4.4897918701171875
    8. '```' → logprob: -4.7397918701171875
    9. ' def' → logprob: -6.1147918701171875
    10. '@property' → logprob: -6.2397918701171875

Token 60: 'letter' (ID: 12793)
  Prédit: 'multip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multip' → logprob: -0.9951794743537903
    2. 'letter' → logprob: -1.8701794147491455
    3. '_letter' → logprob: -1.8701794147491455
    4. '_m' → logprob: -1.9951794147491455
    5. 'mult' → logprob: -2.1201794147491455
    6. '_multiplier' → logprob: -3.9951794147491455
    7. 'values' → logprob: -4.995179653167725
    8. 'value' → logprob: -5.120179653167725
    9. '_letters' → logprob: -5.370179653167725
    10. '_mult' → logprob: -5.495179653167725

Token 61: '_values' (ID: 20393)
  Prédit: '_m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.6807195544242859
    2. '_values' → logprob: -1.0557196140289307
    3. '_multiplier' → logprob: -2.1807196140289307
    4. '_mult' → logprob: -4.680719375610352
    5. '_value' → logprob: -4.805719375610352
    6. '_order' → logprob: -5.180719375610352
    7. 'multip' → logprob: -6.305719375610352
    8. '_to' → logprob: -6.680719375610352
    9. '_map' → logprob: -7.055719375610352
    10. 's' → logprob: -7.180719375610352

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002790611470118165
    2. '=' → logprob: -6.252790451049805
    3. ':' → logprob: -7.127790451049805
    4. ' :' → logprob: -9.877790451049805
    5. ' ' → logprob: -12.627790451049805
    6. '[' → logprob: -13.877790451049805
    7. '<|end|>' → logprob: -14.127790451049805
    8. ',' → logprob: -14.252790451049805
    9. ' =[' → logprob: -14.752790451049805
    10. '   ' → logprob: -15.127790451049805

Token 63: ' {'' (ID: 11881)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5057539343833923
    2. ' {' → logprob: -1.255753993988037
    3. ' {'' → logprob: -2.630753993988037
    4. ' {
' → logprob: -4.130753993988037
    5. '[' → logprob: -4.380753993988037
    6. '{' → logprob: -4.755753993988037
    7. '   ' → logprob: -7.505753993988037
    8. ' ' → logprob: -7.505753993988037
    9. '{'' → logprob: -7.505753993988037
    10. '{
' → logprob: -7.880753993988037

Token 64: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06422599405050278
    2. ''m' → logprob: -2.814225912094116
    3. ''i' → logprob: -7.064226150512695
    4. ''' → logprob: -7.064226150512695
    5. '"' → logprob: -8.814226150512695
    6. 'i' → logprob: -8.939226150512695
    7. '100' → logprob: -9.814226150512695
    8. '1' → logprob: -9.939226150512695
    9. ''M' → logprob: -10.814226150512695
    10. ' ' → logprob: -11.564226150512695

Token 65: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.03526950627565384
    2. ''' → logprob: -3.4102694988250732
    3. ':' → logprob: -6.785269737243652
    4. ' ':' → logprob: -8.160269737243652
    5. ''s' → logprob: -10.785269737243652
    6. 'm' → logprob: -10.785269737243652
    7. '1' → logprob: -11.160269737243652
    8. 'u' → logprob: -11.285269737243652
    9. ''i' → logprob: -11.410269737243652
    10. '```' → logprob: -11.410269737243652

Token 66: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.007001062389463186
    2. ' ' → logprob: -5.382000923156738
    3. '900' → logprob: -7.382000923156738
    4. '1' → logprob: -7.757000923156738
    5. '10' → logprob: -7.882000923156738
    6. '{'' → logprob: -8.632000923156738
    7. '0' → logprob: -8.757000923156738
    8. '{' → logprob: -8.944500923156738
    9. '   ' → logprob: -9.694500923156738
    10. '400' → logprob: -10.132000923156738

Token 67: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0029312260448932648
    2. '1' → logprob: -6.877931118011475
    3. ' ' → logprob: -7.627931118011475
    4. '10' → logprob: -7.877931118011475
    5. '900' → logprob: -8.002931594848633
    6. '0' → logprob: -8.752931594848633
    7. '   ' → logprob: -9.627931594848633
    8. '{'' → logprob: -9.877931594848633
    9. '400' → logprob: -10.252931594848633
    10. '  ' → logprob: -10.377931594848633

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00044616201194003224
    2. '000' → logprob: -8.375446319580078
    3. ',' → logprob: -9.500446319580078
    4. ' ' → logprob: -9.875446319580078
    5. '}' → logprob: -10.125446319580078
    6. '00' → logprob: -10.250446319580078
    7. '},' → logprob: -11.875446319580078
    8. ''' → logprob: -13.250446319580078
    9. '_' → logprob: -13.750446319580078
    10. '   ' → logprob: -14.000446319580078

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009551709517836571
    2. '}' → logprob: -7.250955104827881
    3. ' ,' → logprob: -8.750955581665039
    4. ',
' → logprob: -10.125955581665039
    5. '   ' → logprob: -10.750955581665039
    6. '0' → logprob: -11.500955581665039
    7. ',

' → logprob: -12.750955581665039
    8. ','' → logprob: -12.750955581665039
    9. '100' → logprob: -13.000955581665039
    10. ' }' → logprob: -13.375955581665039

Token 70: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.496358186006546
    2. ' '' → logprob: -0.9963581562042236
    3. ' ' → logprob: -4.121358394622803
    4. ''d' → logprob: -6.371358394622803
    5. ''u' → logprob: -6.496358394622803
    6. ''t' → logprob: -7.746358394622803
    7. ''e' → logprob: -8.121357917785645
    8. ''a' → logprob: -8.371357917785645
    9. '   ' → logprob: -8.496357917785645
    10. ''q' → logprob: -8.871357917785645

Token 71: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004898685030639172
    2. 'd' → logprob: -6.254898548126221
    3. ' ' → logprob: -6.629898548126221
    4. '```' → logprob: -7.004898548126221
    5. ''' → logprob: -8.129899024963379
    6. '500' → logprob: -9.004899024963379
    7. ' c' → logprob: -9.379899024963379
    8. '
' → logprob: -10.129899024963379
    9. 'cm' → logprob: -10.254899024963379
    10. ''s' → logprob: -10.754899024963379

Token 72: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0629139095544815
    2. ':' → logprob: -2.8129138946533203
    3. ''' → logprob: -8.06291389465332
    4. '100' → logprob: -8.43791389465332
    5. ' ':' → logprob: -8.56291389465332
    6. '0' → logprob: -9.31291389465332
    7. '```' → logprob: -9.81291389465332
    8. ' :' → logprob: -11.06291389465332
    9. '":' → logprob: -11.43791389465332
    10. '900' → logprob: -11.56291389465332

Token 73: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.10025348514318466
    2. ' ' → logprob: -2.3502535820007324
    3. '200' → logprob: -11.600253105163574
    4. '400' → logprob: -11.912753105163574
    5. '900' → logprob: -12.162753105163574
    6. '500' → logprob: -12.287753105163574
    7. '  ' → logprob: -12.287753105163574
    8. '10' → logprob: -12.475253105163574
    9. '1' → logprob: -12.850253105163574
    10. '0' → logprob: -12.912753105163574

Token 74: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.009426433593034744
    2. ' ' → logprob: -4.759426593780518
    3. '500' → logprob: -7.259426593780518
    4. '900' → logprob: -9.63442611694336
    5. '400' → logprob: -11.13442611694336
    6. '```' → logprob: -11.63442611694336
    7. 'hund' → logprob: -12.75942611694336
    8. '  ' → logprob: -12.88442611694336
    9. '1' → logprob: -13.00942611694336
    10. '10' → logprob: -13.00942611694336

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035303227603435516
    2. '0' → logprob: -3.5353031158447266
    3. '}' → logprob: -5.535303115844727
    4. ' ,' → logprob: -6.535303115844727
    5. ','' → logprob: -9.535303115844727
    6. '   ' → logprob: -11.160303115844727
    7. '00' → logprob: -11.660303115844727
    8. ' ' → logprob: -11.660303115844727
    9. ''' → logprob: -11.785303115844727
    10. '',' → logprob: -11.910303115844727

Token 76: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.0884246751666069
    2. ''' → logprob: -2.9634246826171875
    3. ''i' → logprob: -4.0884246826171875
    4. ' ' → logprob: -4.5884246826171875
    5. ''x' → logprob: -5.2134246826171875
    6. ' ' → logprob: -8.463424682617188
    7. ''s' → logprob: -9.463424682617188
    8. ''u' → logprob: -9.838424682617188
    9. '  ' → logprob: -10.463424682617188
    10. ''m' → logprob: -10.588424682617188

Token 77: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009656535112299025
    2. ''x' → logprob: -7.000965595245361
    3. ' x' → logprob: -10.12596607208252
    4. 'i' → logprob: -12.50096607208252
    5. ''' → logprob: -12.50096607208252
    6. '"x' → logprob: -12.75096607208252
    7. '	x' → logprob: -13.87596607208252
    8. '```' → logprob: -14.37596607208252
    9. '_x' → logprob: -14.62596607208252
    10. ' ' → logprob: -15.00096607208252

Token 78: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.02714909426867962
    2. ':' → logprob: -3.652149200439453
    3. ''' → logprob: -7.152149200439453
    4. ' ':' → logprob: -10.527149200439453
    5. '100' → logprob: -11.777149200439453
    6. '":' → logprob: -12.027149200439453
    7. ' :' → logprob: -12.152149200439453
    8. ''s' → logprob: -12.402149200439453
    9. '```' → logprob: -12.777149200439453
    10. '0' → logprob: -12.902149200439453

Token 79: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2811908423900604
    2. '10' → logprob: -1.4061908721923828
    3. '  ' → logprob: -10.906190872192383
    4. '100' → logprob: -11.531190872192383
    5. '90' → logprob: -12.531190872192383
    6. '```' → logprob: -12.656190872192383
    7. '40' → logprob: -13.406190872192383
    8. '20' → logprob: -13.531190872192383
    9. '50' → logprob: -14.156190872192383
    10. '1' → logprob: -14.781190872192383

Token 80: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00020771251001860946
    2. ' ' → logprob: -8.500207901000977
    3. '1' → logprob: -14.000207901000977
    4. '100' → logprob: -14.000207901000977
    5. '	' → logprob: -14.750207901000977
    6. '```' → logprob: -14.750207901000977
    7. '0' → logprob: -14.875207901000977
    8. '  ' → logprob: -14.875207901000977
    9. '   ' → logprob: -14.875207901000977
    10. '}' → logprob: -15.750207901000977

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03462865576148033
    2. '}' → logprob: -3.5346286296844482
    3. ' ,' → logprob: -5.534628868103027
    4. ' }' → logprob: -7.159628868103027
    5. '',' → logprob: -10.034628868103027
    6. ','' → logprob: -10.284628868103027
    7. ''}' → logprob: -10.659628868103027
    8. '   ' → logprob: -11.159628868103027
    9. ' ' → logprob: -11.409628868103027
    10. ',
' → logprob: -12.284628868103027

Token 82: ' '' (ID: 461)
  Prédit: ''i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''i' → logprob: -0.2336675375699997
    2. ' '' → logprob: -1.6086674928665161
    3. ''' → logprob: -5.233667373657227
    4. ''a' → logprob: -6.608667373657227
    5. ''u' → logprob: -7.233667373657227
    6. ''y' → logprob: -8.233667373657227
    7. ''o' → logprob: -8.733667373657227
    8. ''l' → logprob: -9.858667373657227
    9. '‘i' → logprob: -10.108667373657227
    10. ''t' → logprob: -10.358667373657227

Token 83: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.018616696819663048
    2. ''i' → logprob: -4.018616676330566
    3. '1' → logprob: -7.768616676330566
    4. ' i' → logprob: -10.268616676330566
    5. ''' → logprob: -12.018616676330566
    6. '```' → logprob: -14.393616676330566
    7. '	i' → logprob: -14.518616676330566
    8. ' ' → logprob: -14.643616676330566
    9. ''s' → logprob: -14.893616676330566
    10. ''l' → logprob: -15.393616676330566

Token 84: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.22579391300678253
    2. ':' → logprob: -1.6007939577102661
    3. ''' → logprob: -8.600793838500977
    4. '100' → logprob: -9.850793838500977
    5. ' ':' → logprob: -10.350793838500977
    6. ''}' → logprob: -11.225793838500977
    7. ' ' → logprob: -11.225793838500977
    8. '0' → logprob: -11.225793838500977
    9. '":' → logprob: -11.225793838500977
    10. '```' → logprob: -11.350793838500977

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07889319956302643
    2. ' ' → logprob: -2.5788931846618652
    3. '  ' → logprob: -13.453893661499023
    4. '5' → logprob: -14.328893661499023
    5. ' ' → logprob: -14.578893661499023
    6. '```' → logprob: -15.016393661499023
    7. '}' → logprob: -16.391393661499023
    8. '   ' → logprob: -16.578893661499023
    9. '4' → logprob: -16.703893661499023
    10. '	' → logprob: -16.703893661499023

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006336859660223126
    2. ' ' → logprob: -7.375633716583252
    3. '   ' → logprob: -12.875633239746094
    4. '  ' → logprob: -13.250633239746094
    5. '```' → logprob: -14.250633239746094
    6. '     ' → logprob: -14.875633239746094
    7. '{' → logprob: -15.250633239746094
    8. '    ' → logprob: -15.438133239746094
    9. '	' → logprob: -15.688133239746094
    10. '4' → logprob: -16.125633239746094

Token 87: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00016313401283696294
    2. ' }' → logprob: -8.750163078308105
    3. ',' → logprob: -12.750163078308105
    4. '}
' → logprob: -13.375163078308105
    5. '}

' → logprob: -15.750163078308105
    6. ' ' → logprob: -17.625164031982422
    7. '   ' → logprob: -18.125164031982422
    8. '}`' → logprob: -18.500164031982422
    9. '},' → logprob: -18.625164031982422
    10. ')' → logprob: -19.000164031982422

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3816814422607422
    2. '
' → logprob: -1.2566814422607422
    3. '    
' → logprob: -4.881681442260742
    4. '```' → logprob: -5.131681442260742
    5. '@' → logprob: -5.381681442260742
    6. '<|end|>' → logprob: -5.506681442260742
    7. ' ' → logprob: -5.881681442260742
    8. ' 
' → logprob: -6.256681442260742
    9. '    

' → logprob: -7.381681442260742
    10. ':' → logprob: -7.506681442260742

Token 89: ' def' (ID: 1056)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.022961599752306938
    2. '   ' → logprob: -3.8979616165161133
    3. ' @' → logprob: -7.022961616516113
    4. 'def' (adapté à ' def') → logprob: -7.022961616516113
    5. '@property' → logprob: -7.647961616516113
    6. '    
' → logprob: -10.147961616516113
    7. '```' → logprob: -10.647961616516113
    8. '    ' → logprob: -11.272961616516113
    9. ' ' → logprob: -11.272961616516113
    10. '@param' → logprob: -11.522961616516113

Token 90: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005957241170108318
    2. ' abstract' → logprob: -5.755957126617432
    3. '  ' → logprob: -6.755957126617432
    4. ' _' → logprob: -7.505957126617432
    5. ' def' → logprob: -7.630957126617432
    6. '_' → logprob: -8.63095760345459
    7. ' ' → logprob: -8.63095760345459
    8. 'abstract' → logprob: -9.88095760345459
    9. ' ‌' → logprob: -10.88095760345459
    10. ' ▁' → logprob: -11.00595760345459

Token 91: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.7697225252486533e-06
    2. ' init' → logprob: -13.500003814697266
    3. 'ini' → logprob: -13.625003814697266
    4. 'i' → logprob: -14.875003814697266
    5. 'call' → logprob: -15.125003814697266
    6. 'new' → logprob: -16.250003814697266
    7. 'int' → logprob: -16.500003814697266
    8. 'a' → logprob: -16.500003814697266
    9. 'nit' → logprob: -16.750003814697266
    10. ' ' → logprob: -17.125003814697266

Token 92: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5900576114654541
    2. '__(' → logprob: -1.340057611465454
    3. '(self' → logprob: -1.965057611465454
    4. '__(
' → logprob: -3.840057611465454
    5. ' (' → logprob: -4.465057373046875
    6. '<|end|>' → logprob: -5.215057373046875
    7. '__' → logprob: -6.465057373046875
    8. 'self' → logprob: -7.090057373046875
    9. '_' → logprob: -7.465057373046875
    10. '_(' → logprob: -7.590057373046875

Token 93: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.038056403398513794
    2. ' self' → logprob: -3.2880563735961914
    3. ' ' → logprob: -11.788056373596191
    4. ')' → logprob: -12.663056373596191
    5. '
' → logprob: -13.538056373596191
    6. '   ' → logprob: -14.163056373596191
    7. 'value' → logprob: -15.038056373596191
    8. '	self' → logprob: -15.163056373596191
    9. '

' → logprob: -15.288056373596191
    10. 's' → logprob: -15.413056373596191

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16134966909885406
    2. ' ,' → logprob: -1.9113496541976929
    3. ' self' → logprob: -7.786349773406982
    4. 'self' → logprob: -7.911349773406982
    5. ' ' → logprob: -9.036349296569824
    6. ')' → logprob: -9.286349296569824
    7. ',self' → logprob: -9.411349296569824
    8. ' )' → logprob: -11.036349296569824
    9. ',
' → logprob: -11.786349296569824
    10. ' ,
' → logprob: -12.411349296569824

Token 95: ' count' (ID: 3605)
  Prédit: ' letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.2791644334793091
    2. ' value' → logprob: -2.4041643142700195
    3. 'letter' → logprob: -2.6541643142700195
    4. ' self' → logprob: -3.4041643142700195
    5. 'value' → logprob: -3.7791643142700195
    6. 'self' → logprob: -4.2791643142700195
    7. ' count' → logprob: -6.5291643142700195
    8. ' number' → logprob: -6.9041643142700195
    9. ' multiplier' → logprob: -6.9041643142700195
    10. ' amount' → logprob: -7.0291643142700195

Token 96: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000913370808120817
    2. ' :' → logprob: -7.750913143157959
    3. '=' → logprob: -8.250913619995117
    4. '):' → logprob: -9.125913619995117
    5. ':int' → logprob: -9.750913619995117
    6. ')' → logprob: -10.000913619995117
    7. '=None' → logprob: -13.000913619995117
    8. ' ' → logprob: -13.250913619995117
    9. ' ):' → logprob: -13.500913619995117
    10. '<|end|>' → logprob: -13.875913619995117

Token 97: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10656725615262985
    2. 'int' → logprob: -2.481567144393921
    3. ' Optional' → logprob: -4.1065673828125
    4. 'Optional' → logprob: -6.9815673828125
    5. ' ' → logprob: -9.6065673828125
    6. ')' → logprob: -12.1065673828125
    7. ':int' → logprob: -12.7315673828125
    8. '	int' → logprob: -13.9815673828125
    9. ' )' → logprob: -14.1065673828125
    10. '[int' → logprob: -14.3565673828125

Token 98: ' =' (ID: 314)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.961874783039093
    2. '=' → logprob: -1.2118747234344482
    3. ')' → logprob: -1.3368747234344482
    4. ',' → logprob: -3.3368747234344482
    5. ' =' → logprob: -4.336874961853027
    6. ':' → logprob: -4.836874961853027
    7. ' ):' → logprob: -7.586874961853027
    8. ' )' → logprob: -8.586874961853027
    9. ' ' → logprob: -9.461874961853027
    10. '=None' → logprob: -9.586874961853027

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7253905534744263
    2. ' ' → logprob: -0.9753905534744263
    3. '0' → logprob: -1.9753905534744263
    4. ' None' → logprob: -9.600390434265137
    5. 'None' → logprob: -10.100390434265137
    6. ')' → logprob: -14.475390434265137
    7. '   ' → logprob: -14.850390434265137
    8. '4' → logprob: -14.912890434265137
    9. ' ' → logprob: -14.912890434265137
    10. '2' → logprob: -15.287890434265137

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3532153069972992
    2. '0' → logprob: -1.2282153367996216
    3. ' ' → logprob: -5.353215217590332
    4. 'None' → logprob: -11.103215217590332
    5. '   ' → logprob: -12.478215217590332
    6. '4' → logprob: -12.728215217590332
    7. ' None' → logprob: -13.228215217590332
    8. '3' → logprob: -14.165715217590332
    9. '  ' → logprob: -14.540715217590332
    10. ')' → logprob: -15.290715217590332

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20331361889839172
    2. ')' → logprob: -1.7033135890960693
    3. ',' → logprob: -6.328313827514648
    4. ' ):' → logprob: -9.828313827514648
    5. '):
' → logprob: -10.578313827514648
    6. ' )' → logprob: -10.953313827514648
    7. ':' → logprob: -11.203313827514648
    8. ' ,' → logprob: -14.203313827514648
    9. ' ' → logprob: -14.328313827514648
    10. '   ' → logprob: -14.953313827514648

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010349531657993793
    2. '<|end|>' → logprob: -7.751034736633301
    3. ')' → logprob: -8.2510347366333
    4. '   ' → logprob: -9.2510347366333
    5. 'self' → logprob: -9.7510347366333
    6. ':' → logprob: -10.1260347366333
    7. ',' → logprob: -10.7510347366333
    8. ' self' → logprob: -10.8760347366333
    9. ' )' → logprob: -11.0010347366333
    10. '):' → logprob: -11.0010347366333

Token 103: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4077131152153015
    2. '       ' → logprob: -1.4077131748199463
    3. ' self' → logprob: -2.4077131748199463
    4. 'super' → logprob: -9.907712936401367
    5. '   ' → logprob: -10.282712936401367
    6. ' super' → logprob: -12.032712936401367
    7. ' ' → logprob: -12.157712936401367
    8. ' ' → logprob: -12.532712936401367
    9. '	self' → logprob: -12.907712936401367
    10. 'if' (adapté à ' if') → logprob: -13.032712936401367

Token 104: ' not' (ID: 625)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.04195369780063629
    2. 'count' → logprob: -3.6669538021087646
    3. ' not' → logprob: -4.1669535636901855
    4. ' ' → logprob: -11.291954040527344
    5. 'not' → logprob: -11.416954040527344
    6. ' isinstance' → logprob: -11.916954040527344
    7. '(count' → logprob: -13.791954040527344
    8. '	count' → logprob: -15.541954040527344
    9. '<count' → logprob: -16.291954040527344
    10. ' counts' → logprob: -16.416954040527344

Token 105: ' (' (ID: 350)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -3.893480243277736e-05
    2. ' (' → logprob: -10.750039100646973
    3. 'is' → logprob: -11.125039100646973
    4. '0' → logprob: -14.375039100646973
    5. ' ' → logprob: -14.625039100646973
    6. '1' → logprob: -14.875039100646973
    7. '(is' → logprob: -15.125039100646973
    8. '(' → logprob: -15.125039100646973
    9. 'type' → logprob: -15.375039100646973
    10. ' type' → logprob: -15.375039100646973

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5702504515647888
    2. ' isinstance' → logprob: -1.3202505111694336
    3. 'is' → logprob: -2.0702505111694336
    4. '0' → logprob: -3.4452505111694336
    5. ' ' → logprob: -4.695250511169434
    6. 'count' → logprob: -8.695250511169434
    7. 'type' → logprob: -9.070250511169434
    8. '(is' → logprob: -10.570250511169434
    9. '   ' → logprob: -11.195250511169434
    10. '(' → logprob: -11.445250511169434

Token 107: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.005978569854050875
    2. '<=' → logprob: -5.130978584289551
    3. ' ' → logprob: -10.13097858428955
    4. '
' → logprob: -13.25597858428955
    5. '<|end|>' → logprob: -13.50597858428955
    6. ',' → logprob: -13.88097858428955
    7. '0' → logprob: -14.13097858428955
    8. '   ' → logprob: -14.38097858428955
    9. ')' → logprob: -14.75597858428955
    10. ' and' → logprob: -14.88097858428955

Token 108: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03804171830415726
    2. ' count' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.913042068481445
    4. '	count' → logprob: -16.538042068481445
    5. 'self' → logprob: -17.163042068481445
    6. '_count' → logprob: -17.538042068481445
    7. '<count' → logprob: -18.038042068481445
    8. 'counts' → logprob: -18.163042068481445
    9. '$count' → logprob: -18.663042068481445
    10. '```' → logprob: -18.663042068481445

Token 109: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.02054831013083458
    2. '<=' → logprob: -3.8955483436584473
    3. ' and' → logprob: -12.895547866821289
    4. ' ' → logprob: -13.895547866821289
    5. '<|end|>' → logprob: -13.895547866821289
    6. ')<=' → logprob: -14.895547866821289
    7. 'le' → logprob: -15.020547866821289
    8. 'and' → logprob: -15.270547866821289
    9. ' ≤' → logprob: -15.395547866821289
    10. '```' → logprob: -15.520547866821289

Token 110: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0776948928833008
    2. '3' → logprob: -1.7026948928833008
    3. '9' → logprob: -1.8276948928833008
    4. '100' → logprob: -2.077694892883301
    5. '4' → logprob: -2.827694892883301
    6. '399' → logprob: -2.827694892883301
    7. '999' → logprob: -3.202694892883301
    8. '99' → logprob: -3.952694892883301
    9. ' ' → logprob: -5.202694892883301
    10. '5' → logprob: -6.577694892883301

Token 111: '9' (ID: 24)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1689622402191162
    2. '9' → logprob: -1.1689622402191162
    3. '10' → logprob: -1.5439622402191162
    4. '100' → logprob: -2.918962240219116
    5. '999' → logprob: -3.293962240219116
    6. '4' → logprob: -3.543962240219116
    7. '399' → logprob: -3.793962240219116
    8. '99' → logprob: -4.293962478637695
    9. '5' → logprob: -5.918962478637695
    10. '15' → logprob: -6.668962478637695

Token 112: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22695231437683105
    2. '):' → logprob: -1.601952314376831
    3. ')' → logprob: -7.10195255279541
    4. ' ):
' → logprob: -7.47695255279541
    5. ' ):' → logprob: -9.35195255279541
    6. ' and' → logprob: -10.60195255279541
    7. '):
' → logprob: -10.60195255279541
    8. '       ' → logprob: -12.47695255279541
    9. ':' → logprob: -12.72695255279541
    10. '):

' → logprob: -13.47695255279541

Token 113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6352038979530334
    2. '):' → logprob: -1.7602038383483887
    3. ':' → logprob: -1.8852038383483887
    4. '       ' → logprob: -2.5102038383483887
    5. '):
' → logprob: -3.5102038383483887
    6. ':
' → logprob: -3.7602038383483887
    7. ' :' → logprob: -5.635203838348389
    8. ' raise' → logprob: -6.260203838348389
    9. ' :
' → logprob: -6.385203838348389
    10. ')' → logprob: -6.760203838348389

Token 114: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.31544944643974304
    2. '           ' → logprob: -1.9404494762420654
    3. 'raise' (adapté à ' raise') → logprob: -2.0654494762420654
    4. '	raise' → logprob: -9.565449714660645
    5. '_raise' → logprob: -10.440449714660645
    6. '
' → logprob: -11.440449714660645
    7. 'Raise' → logprob: -11.440449714660645
    8. '            ' → logprob: -11.565449714660645
    9. '               ' → logprob: -13.190449714660645
    10. '   ' → logprob: -14.065449714660645

Token 115: ' Value' (ID: 9963)
  Prédit: ' Value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.10021831095218658
    2. 'Value' → logprob: -2.3502182960510254
    3. '	Value' → logprob: -12.225218772888184
    4. ' ' → logprob: -12.850218772888184
    5. '_Value' → logprob: -13.475218772888184
    6. ' value' → logprob: -14.100218772888184
    7. '<Value' → logprob: -14.350218772888184
    8. '_value' → logprob: -14.600218772888184
    9. '```' → logprob: -15.225218772888184
    10. '(Value' → logprob: -15.475218772888184

Token 116: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.008720697835087776
    2. 'rror' → logprob: -4.758720874786377
    3. 'Value' → logprob: -9.258720397949219
    4. 'Argument' → logprob: -12.508720397949219
    5. 'error' → logprob: -12.633720397949219
    6. 'Input' → logprob: -14.383720397949219
    7. 'alue' → logprob: -14.758720397949219
    8. 'ror' → logprob: -14.883720397949219
    9. 'ption' → logprob: -15.133720397949219
    10. 'or' → logprob: -15.383720397949219

Token 117: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.01750108040869236
    2. '(' → logprob: -4.142500877380371
    3. '('' → logprob: -6.642500877380371
    4. '(
' → logprob: -8.892500877380371
    5. '(f' → logprob: -10.892500877380371
    6. '("'' → logprob: -13.142500877380371
    7. '"' → logprob: -13.517500877380371
    8. '(":' → logprob: -13.892500877380371
    9. '(",' → logprob: -14.892500877380371
    10. '()' → logprob: -14.892500877380371

Token 118: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02971867471933365
    2. ''' → logprob: -3.6547186374664307
    3. 'count' → logprob: -7.02971887588501
    4. '("' → logprob: -7.77971887588501
    5. ' "' → logprob: -7.90471887588501
    6. 'Count' → logprob: -7.90471887588501
    7. ' count' → logprob: -8.279718399047852
    8. 'f' → logprob: -8.279718399047852
    9. '"The' → logprob: -8.779718399047852
    10. ')' → logprob: -8.904718399047852

Token 119: 'Invalid' (ID: 12278)
  Prédit: 'Count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Count' → logprob: -0.1433664858341217
    2. 'count' → logprob: -2.143366575241089
    3. 'Invalid' → logprob: -4.76836633682251
    4. ' count' → logprob: -5.64336633682251
    5. ' Count' → logprob: -5.76836633682251
    6. ''' → logprob: -8.143366813659668
    7. 'The' → logprob: -8.893366813659668
    8. '"' → logprob: -9.143366813659668
    9. 'Number' → logprob: -9.143366813659668
    10. 'Letter' → logprob: -9.768366813659668

Token 120: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.04306793212890625
    2. 'count' → logprob: -3.1680679321289062
    3. ' ' → logprob: -9.668067932128906
    4. '<count' → logprob: -13.668067932128906
    5. '_count' → logprob: -14.293067932128906
    6. '	count' → logprob: -14.418067932128906
    7. ' number' → logprob: -14.543067932128906
    8. 'Count' → logprob: -14.543067932128906
    9. ' counts' → logprob: -15.043067932128906
    10. '(count' → logprob: -15.293067932128906

Token 121: ' {' (ID: 354)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2043697088956833
    2. ' count' → logprob: -1.8293696641921997
    3. ' for' → logprob: -5.32936954498291
    4. 'count' → logprob: -5.32936954498291
    5. ' ' → logprob: -5.70436954498291
    6. '")' → logprob: -6.07936954498291
    7. ' {' → logprob: -6.20436954498291
    8. '(count' → logprob: -6.57936954498291
    9. '{' → logprob: -6.70436954498291
    10. ' value' → logprob: -6.70436954498291

Token 122: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.005611030850559473
    2. ' count' → logprob: -5.255610942840576
    3. '}:' → logprob: -9.005611419677734
    4. '}' → logprob: -9.380611419677734
    5. ' ' → logprob: -10.130611419677734
    6. '},' → logprob: -10.130611419677734
    7. '
' → logprob: -11.130611419677734
    8. '	count' → logprob: -11.255611419677734
    9. '(count' → logprob: -11.380611419677734
    10. '=count' → logprob: -11.630611419677734

Token 123: '}.' (ID: 16255)
  Prédit: '},'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -0.31788015365600586
    2. '}:' → logprob: -1.5678801536560059
    3. '}")' → logprob: -3.192880153656006
    4. '}' → logprob: -4.192880153656006
    5. '};' → logprob: -5.442880153656006
    6. '}.' → logprob: -6.067880153656006
    7. ':' → logprob: -8.317880630493164
    8. '})' → logprob: -8.817880630493164
    9. ' },' → logprob: -9.067880630493164
    10. ' }:' → logprob: -9.192880630493164

Token 124: ' Must' (ID: 20953)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.33572903275489807
    2. ' ")' → logprob: -1.8357290029525757
    3. ')' → logprob: -2.9607291221618652
    4. '")
' → logprob: -3.4607291221618652
    5. ' ")
' → logprob: -3.4607291221618652
    6. ' )' → logprob: -5.460729122161865
    7. ')")' → logprob: -6.585729122161865
    8. ')
' → logprob: -6.960729122161865
    9. '"' → logprob: -6.960729122161865
    10. ' )
' → logprob: -8.085728645324707

Token 125: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.875003814697266
    3. '<|end|>' → logprob: -15.125003814697266
    4. ' between' → logprob: -15.375003814697266
    5. 'be' → logprob: -16.125003814697266
    6. ' not' → logprob: -16.250003814697266
    7. ' only' → logprob: -16.375003814697266
    8. ' remain' → logprob: -16.750003814697266
    9. ' range' → logprob: -17.625003814697266
    10. ' have' → logprob: -17.625003814697266

Token 126: ' ' (ID: 220)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.02064676396548748
    2. ' an' → logprob: -4.520646572113037
    3. ' ' → logprob: -5.395646572113037
    4. 'between' → logprob: -5.395646572113037
    5. ' in' → logprob: -8.645647048950195
    6. '1' → logprob: -8.645647048950195
    7. ' a' → logprob: -9.520647048950195
    8. 'an' → logprob: -10.395647048950195
    9. ' one' → logprob: -11.770647048950195
    10. ' within' → logprob: -12.520647048950195

Token 127: '1' (ID: 16)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'between' → logprob: -0.07712249457836151
    2. ' between' → logprob: -2.952122449874878
    3. 'an' → logprob: -3.952122449874878
    4. '1' → logprob: -6.452122688293457
    5. ' an' → logprob: -7.077122688293457
    6. 'in' → logprob: -8.577122688293457
    7. 'a' → logprob: -9.452122688293457
    8. ' ' → logprob: -10.452122688293457
    9. ' in' → logprob: -10.952122688293457
    10. 'from' → logprob: -11.202122688293457

Token 128: '..' (ID: 485)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.8027063012123108
    2. '-' → logprob: -1.427706241607666
    3. ' through' → logprob: -1.427706241607666
    4. '<=' → logprob: -3.677706241607666
    5. 'to' → logprob: -4.302706241607666
    6. ' <=' → logprob: -4.302706241607666
    7. ' ' → logprob: -4.677706241607666
    8. 'through' → logprob: -5.302706241607666
    9. '9' → logprob: -6.177706241607666
    10. ' and' → logprob: -6.927706241607666

Token 129: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '```' → logprob: -15.375040054321289
    4. '
' → logprob: -17.12504005432129
    5. '1' → logprob: -17.37504005432129
    6. '

' → logprob: -17.75004005432129
    7. '10' → logprob: -18.25004005432129
    8. '   ' → logprob: -18.62504005432129
    9. ' nine' → logprob: -19.00004005432129
    10. '999' → logprob: -19.18754005432129

Token 130: '.")
' (ID: 27834)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.37597668170928955
    2. '.")' → logprob: -1.2509766817092896
    3. '")
' → logprob: -4.0009765625
    4. '.")
' → logprob: -4.8759765625
    5. ')")' → logprob: -7.1259765625
    6. ')' → logprob: -8.8759765625
    7. ' for' → logprob: -9.8759765625
    8. ' ")' → logprob: -9.8759765625
    9. '.")
' → logprob: -10.3759765625
    10. '")
' → logprob: -10.5009765625

Token 131: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005617309361696243
    2. '
' → logprob: -8.125561714172363
    3. 'self' → logprob: -8.750561714172363
    4. '<|end|>' → logprob: -9.625561714172363
    5. ' self' → logprob: -10.625561714172363
    6. '        
' → logprob: -11.500561714172363
    7. '   ' → logprob: -12.750561714172363
    8. '<|end|>' → logprob: -14.250561714172363
    9. '  
' → logprob: -14.750561714172363
    10. '```' → logprob: -14.750561714172363

Token 132: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007980641908943653
    2. 'self' (adapté à ' self') → logprob: -4.882980823516846
    3. '   ' → logprob: -8.382980346679688
    4. ' self' → logprob: -8.882980346679688
    5. '
' → logprob: -12.507980346679688
    6. '	self' → logprob: -13.507980346679688
    7. '        
' → logprob: -13.882980346679688
    8. '           ' → logprob: -15.632980346679688
    9. '	' → logprob: -15.757980346679688
    10. 'def' → logprob: -16.007980346679688

Token 133: '.count' (ID: 14019)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.6954015493392944
    2. '.count' → logprob: -1.1954015493392944
    3. '.' → logprob: -1.6954015493392944
    4. '_count' → logprob: -4.570401668548584
    5. ' .' → logprob: -5.445401668548584
    6. 'count' → logprob: -8.820401191711426
    7. ' ' → logprob: -9.570401191711426
    8. '.counter' → logprob: -10.445401191711426
    9. ' count' → logprob: -10.570401191711426
    10. '.value' → logprob: -11.195401191711426

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11282933503389359
    2. '=' → logprob: -2.2378294467926025
    3. ' ' → logprob: -12.112829208374023
    4. '<|end|>' → logprob: -14.237829208374023
    5. ')' → logprob: -15.737829208374023
    6. 's' → logprob: -16.487829208374023
    7. ' =
' → logprob: -16.612829208374023
    8. 'space' → logprob: -16.612829208374023
    9. '=count' → logprob: -16.612829208374023
    10. '=}' → logprob: -16.862829208374023

Token 135: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.048588961362838745
    2. 'count' → logprob: -3.048588991165161
    3. '	count' → logprob: -13.798588752746582
    4. ' ' → logprob: -15.423588752746582
    5. '$count' → logprob: -15.548588752746582
    6. '(count' → logprob: -16.0485897064209
    7. '<count' → logprob: -16.5485897064209
    8. '_count' → logprob: -17.1735897064209
    9. '=count' → logprob: -17.4235897064209
    10. '[count' → logprob: -17.9235897064209

Token 136: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 137: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22372621297836304
    2. '<|end|>' → logprob: -1.7237262725830078
    3. '   ' → logprob: -4.098726272583008
    4. '    
' → logprob: -6.348726272583008
    5. '<|end|>' → logprob: -6.473726272583008
    6. '

' → logprob: -6.973726272583008
    7. ' 
' → logprob: -7.473726272583008
    8. '  
' → logprob: -8.598726272583008
    9. 'def' → logprob: -8.723726272583008
    10. ' ' → logprob: -9.223726272583008

Token 138: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.12724705040454865
    2. '@property' → logprob: -2.1272470951080322
    3. 'def' → logprob: -8.377246856689453
    4. '   ' → logprob: -10.502246856689453
    5. '_letter' → logprob: -10.627246856689453
    6. 'letter' → logprob: -11.627246856689453
    7. ' @' → logprob: -12.002246856689453
    8. '@index' → logprob: -12.127246856689453
    9. '@
' → logprob: -12.877246856689453
    10. 'abstract' → logprob: -13.002246856689453

Token 139: 'property' (ID: 8813)
  Prédit: 'abstract'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -0.003647353034466505
    2. 'property' → logprob: -5.628647327423096
    3. 'staticmethod' → logprob: -11.003647804260254
    4. 'ab' → logprob: -11.253647804260254
    5. 'classmethod' → logprob: -12.003647804260254
    6. 'abs' → logprob: -12.128647804260254
    7. ' abstract' → logprob: -12.378647804260254
    8. 'abc' → logprob: -13.378647804260254
    9. '.abstract' → logprob: -15.503647804260254
    10. 'pro' → logprob: -16.503646850585938

Token 140: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.047188650816679
    2. ' def' → logprob: -3.1721887588500977
    3. '
' → logprob: -6.297188758850098
    4. '<|end|>' → logprob: -6.297188758850098
    5. '   ' → logprob: -7.922188758850098
    6. '<|end|>' → logprob: -9.797188758850098
    7. '_def' → logprob: -10.422188758850098
    8. 'abstract' → logprob: -11.297188758850098
    9. '	def' → logprob: -11.797188758850098
    10. '\' → logprob: -12.047188758850098

Token 141: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01295527070760727
    2. ' def' → logprob: -5.012955188751221
    3. '
' → logprob: -5.262955188751221
    4. '<|end|>' → logprob: -7.012955188751221
    5. '    
' → logprob: -10.137955665588379
    6. '   ' → logprob: -10.137955665588379
    7. '<|end|>' → logprob: -10.887955665588379
    8. '_def' → logprob: -11.262955665588379
    9. '\' → logprob: -11.762955665588379
    10. '  
' → logprob: -12.262955665588379

Token 142: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008120091515593231
    2. '
' → logprob: -8.125811576843262
    3. 'abstract' → logprob: -8.250811576843262
    4. '@' (adapté à ' @') → logprob: -9.000811576843262
    5. 'abc' → logprob: -9.375811576843262
    6. ' def' → logprob: -10.125811576843262
    7. '@property' → logprob: -12.250811576843262
    8. 'name' → logprob: -14.875811576843262
    9. 'value' → logprob: -15.125811576843262
    10. 'letter' → logprob: -15.250811576843262

Token 143: 'abstract' (ID: 31332)
  Prédit: 'abstract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abstract' → logprob: -9.014684110297821e-06
    2. ' abstract' → logprob: -12.000008583068848
    3. 'classmethod' → logprob: -13.375008583068848
    4. 'staticmethod' → logprob: -14.375008583068848
    5. 'abc' → logprob: -14.625008583068848
    6. 'property' → logprob: -15.500008583068848
    7. '.abstract' → logprob: -17.250009536743164
    8. 'ab' → logprob: -18.375009536743164
    9. 'abs' → logprob: -19.125009536743164
    10. 'absolute' → logprob: -22.000009536743164

Token 144: 'method' (ID: 8697)
  Prédit: 'method'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'method' → logprob: -3.6550729419104755e-05
    2. '_method' → logprob: -10.375036239624023
    3. '
' → logprob: -13.125036239624023
    4. ' method' → logprob: -13.750036239624023
    5. 'property' → logprob: -14.000036239624023
    6. 'classmethod' → logprob: -14.750036239624023
    7. 'meth' → logprob: -14.750036239624023
    8. 'def' → logprob: -15.625036239624023
    9. '	method' → logprob: -16.000036239624023
    10. '-method' → logprob: -16.125036239624023

Token 145: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0206120777875185
    2. 'def' → logprob: -3.8956120014190674
    3. ' def' → logprob: -10.020611763000488
    4. '<|end|>' → logprob: -11.395611763000488
    5. '
' → logprob: -12.395611763000488
    6. '    
' → logprob: -12.645611763000488
    7. '\' → logprob: -13.270611763000488
    8. '  
' → logprob: -13.270611763000488
    9. ' 
' → logprob: -13.770611763000488
    10. '	def' → logprob: -14.145611763000488

Token 146: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029078202322125435
    2. '   ' → logprob: -4.279078006744385
    3. ' def' → logprob: -4.654078006744385
    4. '
' → logprob: -5.279078006744385
    5. '	def' → logprob: -8.779078483581543
    6. '    
' → logprob: -11.529078483581543
    7. '<|end|>' → logprob: -12.154078483581543
    8. '\' → logprob: -12.779078483581543
    9. '  ' → logprob: -12.904078483581543
    10. '
' → logprob: -13.279078483581543

Token 147: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00042054426739923656
    2. '
' → logprob: -8.000420570373535
    3. ' def' → logprob: -9.375420570373535
    4. '   ' → logprob: -16.25041961669922
    5. '
' → logprob: -17.25041961669922
    6. '  ' → logprob: -17.25041961669922
    7. 'classmethod' → logprob: -17.50041961669922
    8. 'method' → logprob: -17.62541961669922
    9. '

' → logprob: -17.75041961669922
    10. 'value' → logprob: -18.75041961669922

Token 148: ' letter' (ID: 10263)
  Prédit: ' letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.09564313292503357
    2. 'letter' → logprob: -2.9706430435180664
    3. ' symbol' → logprob: -4.095643043518066
    4. ' value' → logprob: -4.720643043518066
    5. 'symbol' → logprob: -5.095643043518066
    6. '_letter' → logprob: -5.845643043518066
    7. 'value' → logprob: -5.970643043518066
    8. ' multiplier' → logprob: -7.095643043518066
    9. ' name' → logprob: -7.720643043518066
    10. 'name' → logprob: -8.220643043518066

Token 149: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00015753143816255033
    2. '(' → logprob: -10.000157356262207
    3. '(s' → logprob: -10.125157356262207
    4. 'self' → logprob: -10.750157356262207
    5. ')' → logprob: -11.125157356262207
    6. ' (' → logprob: -11.625157356262207
    7. '   ' → logprob: -12.000157356262207
    8. ':' → logprob: -12.125157356262207
    9. '(cls' → logprob: -12.625157356262207
    10. '<|end|>' → logprob: -12.875157356262207

Token 150: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043915145099163055
    2. '):' → logprob: -3.418915033340454
    3. '):
' → logprob: -4.793915271759033
    4. 'self' → logprob: -6.418915271759033
    5. '(self' → logprob: -8.293914794921875
    6. ' )' → logprob: -11.418914794921875
    7. '   ' → logprob: -11.793914794921875
    8. '}' → logprob: -11.793914794921875
    9. ')->' → logprob: -12.168914794921875
    10. '):

' → logprob: -12.293914794921875

Token 151: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010280465940013528
    2. '():' → logprob: -7.751028060913086
    3. ')' → logprob: -8.751028060913086
    4. '->' → logprob: -9.126028060913086
    5. 'self' → logprob: -9.876028060913086
    6. '   ' → logprob: -9.876028060913086
    7. ':
' → logprob: -10.001028060913086
    8. ' ->' → logprob: -10.376028060913086
    9. '):' → logprob: -10.501028060913086
    10. '(self' → logprob: -10.751028060913086

Token 152: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.3132723271846771
    2. ' str' → logprob: -1.3132723569869995
    3. '	str' → logprob: -12.313272476196289
    4. '[str' → logprob: -13.188272476196289
    5. '   ' → logprob: -13.938272476196289
    6. ' ' → logprob: -14.063272476196289
    7. ':str' → logprob: -14.813272476196289
    8. ' Optional' → logprob: -14.938272476196289
    9. 'Optional' → logprob: -14.938272476196289
    10. '`' → logprob: -15.438272476196289

Token 153: ':
' (ID: 734)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: ' pass' (ID: 1853)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '...' → logprob: -0.37340018153190613
    2. 'pass' (adapté à ' pass') → logprob: -1.3734002113342285
    3. '       ' → logprob: -3.3734002113342285
    4. ' pass' → logprob: -3.8734002113342285
    5. 'raise' → logprob: -6.6234002113342285
    6. '   ' → logprob: -7.4984002113342285
    7. '<|end|>' → logprob: -7.4984002113342285
    8. '#' → logprob: -8.37339973449707
    9. ' raise' → logprob: -8.49839973449707
    10. 'return' → logprob: -9.49839973449707

Token 156: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 157: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 158: ' @' (ID: 759)
  Prédit: '@property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@property' → logprob: -0.4850427508354187
    2. '@' (adapté à ' @') → logprob: -0.9850427508354187
    3. 'def' → logprob: -4.735042572021484
    4. '   ' → logprob: -6.235042572021484
    5. ' @' → logprob: -10.110042572021484
    6. '@index' → logprob: -10.360042572021484
    7. 'class' → logprob: -10.610042572021484
    8. '@class' → logprob: -10.735042572021484
    9. '@return' → logprob: -11.485042572021484
    10. '@param' → logprob: -11.860042572021484

Token 159: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.019369831308722496
    2. 'classmethod' → logprob: -4.394369602203369
    3. 'abstract' → logprob: -5.769369602203369
    4. 'staticmethod' → logprob: -6.144369602203369
    5. 'letter' → logprob: -6.519369602203369
    6. 'count' → logprob: -10.019370079040527
    7. 'abc' → logprob: -10.644370079040527
    8. '@property' → logprob: -11.769370079040527
    9. 'value' → logprob: -12.144370079040527
    10. 'class' → logprob: -12.519370079040527

Token 160: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004495039116591215
    2. '
' → logprob: -6.254495143890381
    3. '   ' → logprob: -6.504495143890381
    4. ' def' → logprob: -6.879495143890381
    5. '<|end|>' → logprob: -11.004494667053223
    6. '    
' → logprob: -12.129494667053223
    7. 'value' → logprob: -12.629494667053223
    8. '	def' → logprob: -12.879494667053223
    9. '<|end|>' → logprob: -12.879494667053223
    10. '@property' → logprob: -13.129494667053223

Token 161: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008806134574115276
    2. '
' → logprob: -5.383806228637695
    3. ' def' → logprob: -5.758806228637695
    4. '   ' → logprob: -7.383806228637695
    5. '<|end|>' → logprob: -8.258806228637695
    6. '    
' → logprob: -9.883806228637695
    7. '<|end|>' → logprob: -10.383806228637695
    8. '_def' → logprob: -11.258806228637695
    9. '@property' → logprob: -11.508806228637695
    10. 'value' → logprob: -12.008806228637695

Token 162: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0004366294015198946
    2. ' def' → logprob: -8.000436782836914
    3. '
' → logprob: -9.250436782836914
    4. '   ' → logprob: -12.875436782836914
    5. 'value' → logprob: -13.625436782836914
    6. '@property' → logprob: -14.250436782836914
    7. '    
' → logprob: -15.750436782836914
    8. 'abstract' → logprob: -16.250436782836914
    9. '@' → logprob: -16.500436782836914
    10. ':def' → logprob: -16.625436782836914

Token 163: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.13378477096557617
    2. 'value' → logprob: -2.133784770965576
    3. ' multiplier' → logprob: -5.633784770965576
    4. ' total' → logprob: -6.133784770965576
    5. ' letter' → logprob: -7.883784770965576
    6. 'total' → logprob: -8.258785247802734
    7. ' ' → logprob: -10.008785247802734
    8. ' numeric' → logprob: -10.008785247802734
    9. '_value' → logprob: -10.133785247802734
    10. 'mult' → logprob: -10.133785247802734

Token 164: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004004553891718388
    2. '<|end|>' → logprob: -6.75400447845459
    3. '<|end|>' → logprob: -7.12900447845459
    4. '   ' → logprob: -7.25400447845459
    5. '()' → logprob: -7.62900447845459
    6. 'self' → logprob: -8.00400447845459
    7. ':' → logprob: -9.25400447845459
    8. '(' → logprob: -9.25400447845459
    9. '       ' → logprob: -9.37900447845459
    10. ')' → logprob: -9.37900447845459

Token 165: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5804468989372253
    2. ')' → logprob: -1.0804469585418701
    3. '):
' → logprob: -3.08044695854187
    4. ' ):' → logprob: -4.080446720123291
    5. '(self' → logprob: -4.830446720123291
    6. '<|end|>' → logprob: -4.955446720123291
    7. '<|end|>' → logprob: -5.080446720123291
    8. '()' → logprob: -5.330446720123291
    9. '   ' → logprob: -5.705446720123291
    10. ' ' → logprob: -6.080446720123291

Token 166: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3444545269012451
    2. '(self' → logprob: -1.7194545269012451
    3. '   ' → logprob: -3.344454526901245
    4. ')' → logprob: -3.344454526901245
    5. '->' → logprob: -4.094454765319824
    6. ' ->' → logprob: -4.469454765319824
    7. '(' → logprob: -5.094454765319824
    8. 'self' → logprob: -6.094454765319824
    9. ':
' → logprob: -6.219454765319824
    10. '       ' → logprob: -6.844454765319824

Token 167: ' int' (ID: 677)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3151531219482422
    2. ' self' → logprob: -1.3151531219482422
    3. 'int' → logprob: -6.440153121948242
    4. ' int' → logprob: -8.565153121948242
    5. 'return' → logprob: -10.190153121948242
    6. '(self' → logprob: -10.815153121948242
    7. '
' → logprob: -11.065153121948242
    8. '   ' → logprob: -11.690153121948242
    9. ' return' → logprob: -11.815153121948242
    10. '       ' → logprob: -12.690153121948242

Token 168: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011570573784410954
    2. ':
' → logprob: -4.511570453643799
    3. '():
' → logprob: -8.761570930480957
    4. '):
' → logprob: -9.011570930480957
    5. '   ' → logprob: -9.886570930480957
    6. '):' → logprob: -10.011570930480957
    7. '(self' → logprob: -10.136570930480957
    8. '       ' → logprob: -10.636570930480957
    9. '():' → logprob: -10.636570930480957
    10. ')' → logprob: -11.261570930480957

Token 169: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.35213905572891235
    2. '       ' → logprob: -1.6021389961242676
    3. ' return' → logprob: -2.3521389961242676
    4. 'self' → logprob: -8.852139472961426
    5. ' self' → logprob: -11.102139472961426
    6. '   ' → logprob: -11.352139472961426
    7. ':return' → logprob: -11.727139472961426
    8. ' ' → logprob: -13.352139472961426
    9. '{return' → logprob: -13.602139472961426
    10. '	return' → logprob: -13.602139472961426

Token 170: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02403857558965683
    2. 'self' → logprob: -4.024038791656494
    3. ' return' → logprob: -5.149038791656494
    4. '       ' → logprob: -10.649038314819336
    5. ' self' → logprob: -10.649038314819336
    6. 'MC' → logprob: -11.524038314819336
    7. '   ' → logprob: -12.024038314819336
    8. ' MC' → logprob: -13.399038314819336
    9. '{return' → logprob: -15.149038314819336
    10. '	return' → logprob: -15.399038314819336

Token 171: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004080658778548241
    2. ' self' → logprob: -5.504080772399902
    3. 'MC' → logprob: -13.879080772399902
    4. '   ' → logprob: -15.129080772399902
    5. '(self' → logprob: -15.129080772399902
    6. ' MC' → logprob: -15.254080772399902
    7. '[self' → logprob: -16.004079818725586
    8. '	self' → logprob: -16.254079818725586
    9. '_self' → logprob: -16.504079818725586
    10. '       ' → logprob: -17.004079818725586

Token 172: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.1304422914981842
    2. '._' → logprob: -2.1304423809051514
    3. '.' → logprob: -5.755442142486572
    4. 'count' → logprob: -8.75544261932373
    5. '_count' → logprob: -9.38044261932373
    6. ' .' → logprob: -10.13044261932373
    7. '_letter' → logprob: -10.25544261932373
    8. '.value' → logprob: -11.13044261932373
    9. '   ' → logprob: -12.63044261932373
    10. '_letters' → logprob: -13.75544261932373

Token 173: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.006717505399137735
    2. '*' → logprob: -5.006717681884766
    3. '*self' → logprob: -13.131717681884766
    4. ' ' → logprob: -15.756717681884766
    5. ' ' → logprob: -17.006717681884766
    6. '*object' → logprob: -17.881717681884766
    7. 'self' → logprob: -18.256717681884766
    8. '   ' → logprob: -20.006717681884766
    9. ' self' → logprob: -20.131717681884766
    10. '**' → logprob: -20.131717681884766

Token 174: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06293471902608871
    2. ' self' → logprob: -2.812934637069702
    3. 'MC' → logprob: -7.187934875488281
    4. ' MC' → logprob: -8.562934875488281
    5. '(self' → logprob: -12.312934875488281
    6. '   ' → logprob: -12.687934875488281
    7. '
' → logprob: -12.812934875488281
    8. '```' → logprob: -13.562934875488281
    9. '_MC' → logprob: -13.562934875488281
    10. '	self' → logprob: -13.687934875488281

Token 175: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00019579214858822525
    2. '_letter' → logprob: -8.625195503234863
    3. '.' → logprob: -11.125195503234863
    4. '   ' → logprob: -14.500195503234863
    5. '.__' → logprob: -15.000195503234863
    6. '_letters' → logprob: -15.250195503234863
    7. ' .' → logprob: -15.625195503234863
    8. '.L' → logprob: -15.750195503234863
    9. '."_' → logprob: -16.75019645690918
    10. ']._' → logprob: -17.50019645690918

Token 176: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.00023393364972434938
    2. '_letter' → logprob: -8.37523365020752
    3. ' letter' → logprob: -13.12523365020752
    4. '(letter' → logprob: -14.00023365020752
    5. 'value' → logprob: -15.50023365020752
    6. '-letter' → logprob: -16.625234603881836
    7. 'LETTER' → logprob: -17.125234603881836
    8. 'lette' → logprob: -17.250234603881836
    9. 'let' → logprob: -17.750234603881836
    10. ' ' → logprob: -18.125234603881836

Token 177: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -6.704273118884885e-07
    2. 'values' → logprob: -15.125000953674316
    3. '_value' → logprob: -15.250000953674316
    4. '_' → logprob: -17.5
    5. '_VALUES' → logprob: -18.0
    6. ' _' → logprob: -18.125
    7. 'Values' → logprob: -19.25
    8. '_vals' → logprob: -19.625
    9. ''_' → logprob: -20.75
    10. '"_' → logprob: -20.875

Token 178: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -6.630610641877865e-06
    2. '[' → logprob: -12.000006675720215
    3. 'self' → logprob: -15.250006675720215
    4. '[get' → logprob: -16.0000057220459
    5. ' [' → logprob: -18.7500057220459
    6. '[s' → logprob: -19.1250057220459
    7. ' self' → logprob: -20.7500057220459
    8. '.get' → logprob: -20.7500057220459
    9. '[this' → logprob: -20.8750057220459
    10. '[f' → logprob: -21.1250057220459

Token 179: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0026817251928150654
    2. '[self' → logprob: -6.752681732177734
    3. 'self' → logprob: -7.252681732177734
    4. 'letter' → logprob: -7.377681732177734
    5. '[' → logprob: -9.627681732177734
    6. ' .' → logprob: -10.377681732177734
    7. '.self' → logprob: -10.377681732177734
    8. '.
' → logprob: -11.627681732177734
    9. '.]' → logprob: -11.877681732177734
    10. '._' → logprob: -12.002681732177734

Token 180: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -8.77627644513268e-06
    2. '_letter' → logprob: -12.125008583068848
    3. ' letter' → logprob: -13.000008583068848
    4. '(letter' → logprob: -13.875008583068848
    5. 'LETTER' → logprob: -17.875009536743164
    6. 'letters' → logprob: -18.250009536743164
    7. '-letter' → logprob: -18.625009536743164
    8. 'lette' → logprob: -19.000009536743164
    9. '
' → logprob: -19.125009536743164
    10. ' ' → logprob: -19.375009536743164

Token 181: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017162315780296922
    2. ' ]' → logprob: -6.376716136932373
    3. ']
' → logprob: -12.001716613769531
    4. '<|end|>' → logprob: -12.126716613769531
    5. '']' → logprob: -14.376716613769531
    6. ' ' → logprob: -14.876716613769531
    7. '()]' → logprob: -15.001716613769531
    8. '`]' → logprob: -15.126716613769531
    9. ']

' → logprob: -15.626716613769531
    10. '[' → logprob: -15.751716613769531

Token 182: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2993778586387634
    2. '<|end|>' → logprob: -1.4243779182434082
    3. '   ' → logprob: -4.424377918243408
    4. '<|end|>' → logprob: -6.049377918243408
    5. '

' → logprob: -6.799377918243408
    6. '@property' → logprob: -6.924377918243408
    7. '    
' → logprob: -7.424377918243408
    8. ' 
' → logprob: -8.29937744140625
    9. ' ' → logprob: -8.42437744140625
    10. '  
' → logprob: -8.54937744140625

Token 183: ' @' (ID: 759)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -0.23305855691432953
    2. 'property' → logprob: -1.7330585718154907
    3. 'abstract' → logprob: -4.108058452606201
    4. 'staticmethod' → logprob: -4.233058452606201
    5. 'abc' → logprob: -9.60805892944336
    6. 'letter' → logprob: -9.60805892944336
    7. 'class' → logprob: -9.98305892944336
    8. '__' → logprob: -11.48305892944336
    9. 'value' → logprob: -12.73305892944336
    10. '@property' → logprob: -13.35805892944336

Token 185: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12139477580785751
    2. '
' → logprob: -2.7463948726654053
    3. ' def' → logprob: -2.9963948726654053
    4. '   ' → logprob: -8.621395111083984
    5. '    
' → logprob: -13.121395111083984
    6. ' 
' → logprob: -13.496395111083984
    7. '
' → logprob: -13.496395111083984
    8. '_def' → logprob: -13.746395111083984
    9. ' ' → logprob: -13.871395111083984
    10. '<|end|>' → logprob: -14.121395111083984

Token 186: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006808211095631123
    2. ' def' → logprob: -5.006808280944824
    3. '   ' → logprob: -9.381808280944824
    4. '
' → logprob: -11.756808280944824
    5. '_def' → logprob: -15.756808280944824
    6. 'de' → logprob: -16.256807327270508
    7. '@property' → logprob: -16.631807327270508
    8. ':def' → logprob: -16.631807327270508
    9. '	def' → logprob: -16.756807327270508
    10. ' ' → logprob: -16.881807327270508

Token 187: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0028188975993543863
    2. ' def' → logprob: -5.877819061279297
    3. '
' → logprob: -11.752819061279297
    4. 'abstract' → logprob: -12.252819061279297
    5. '@property' → logprob: -14.127819061279297
    6. '@' → logprob: -15.377819061279297
    7. ' ' → logprob: -15.502819061279297
    8. '   ' → logprob: -16.127819061279297
    9. 'property' → logprob: -16.877819061279297
    10. 'abc' → logprob: -16.877819061279297

Token 188: ' letter' (ID: 10263)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.1657022088766098
    2. 'def' → logprob: -1.915702223777771
    3. '
' → logprob: -5.6657023429870605
    4. ' ' → logprob: -7.5407023429870605
    5. ' validate' → logprob: -8.290701866149902
    6. ' get' → logprob: -8.790701866149902
    7. 'from' → logprob: -9.040701866149902
    8. ' letter' → logprob: -9.165701866149902
    9. 'classmethod' → logprob: -9.290701866149902
    10. ' valid' → logprob: -9.415701866149902

Token 189: '_index' (ID: 7748)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.03529735282063484
    2. '_to' → logprob: -3.910297393798828
    3. 's' → logprob: -5.535297393798828
    4. '_orders' → logprob: -5.535297393798828
    5. '_index' → logprob: -6.535297393798828
    6. '_indices' → logprob: -7.035297393798828
    7. '_list' → logprob: -7.410297393798828
    8. '_values' → logprob: -7.535297393798828
    9. '_' → logprob: -7.535297393798828
    10. '_s' → logprob: -7.910297393798828

Token 190: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.625006675720215
    3. 'cls' → logprob: -12.875006675720215
    4. ' (' → logprob: -15.750006675720215
    5. '(cl' → logprob: -15.875006675720215
    6. 'def' → logprob: -16.6250057220459
    7. ' cls' → logprob: -16.8750057220459
    8. '(clazz' → logprob: -16.8750057220459
    9. '   ' → logprob: -17.0000057220459
    10. '(
' → logprob: -17.2500057220459

Token 191: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.04212444648146629
    2. ',' → logprob: -4.042124271392822
    3. ')' → logprob: -4.292124271392822
    4. ')(' → logprob: -5.292124271392822
    5. '(' → logprob: -6.042124271392822
    6. ' (' → logprob: -6.417124271392822
    7. '   ' → logprob: -8.29212474822998
    8. ' ' → logprob: -8.54212474822998
    9. 'cls' → logprob: -8.91712474822998
    10. ')(
' → logprob: -9.04212474822998

Token 192: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.6153355836868286
    2. 'cls' → logprob: -1.3653355836868286
    3. ' letter' → logprob: -2.115335464477539
    4. ' cls' → logprob: -2.490335464477539
    5. 'c' → logprob: -8.990335464477539
    6. 'l' → logprob: -8.990335464477539
    7. 'cl' → logprob: -9.365335464477539
    8. 'char' → logprob: -9.490335464477539
    9. '   ' → logprob: -9.865335464477539
    10. 'token' → logprob: -10.115335464477539

Token 193: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2475328892469406
    2. ')' → logprob: -1.622532844543457
    3. ':' → logprob: -4.497532844543457
    4. '):
' → logprob: -5.622532844543457
    5. ' ):' → logprob: -5.622532844543457
    6. ' )' → logprob: -6.247532844543457
    7. '   ' → logprob: -7.622532844543457
    8. ':str' → logprob: -8.122532844543457
    9. ' :' → logprob: -8.247532844543457
    10. ',' → logprob: -8.247532844543457

Token 194: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.290006160736084
    2. ' str' → logprob: -1.415006160736084
    3. ')' → logprob: -4.790006160736084
    4. ':str' → logprob: -7.915006160736084
    5. '   ' → logprob: -10.290006637573242
    6. 's' → logprob: -10.415006637573242
    7. ' ' → logprob: -11.040006637573242
    8. '[str' → logprob: -11.165006637573242
    9. '):
' → logprob: -11.790006637573242
    10. '<|end|>' → logprob: -11.790006637573242

Token 195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25323429703712463
    2. '):' → logprob: -1.5032342672348022
    3. ' )' → logprob: -6.878234386444092
    4. ' ):' → logprob: -8.378233909606934
    5. '):
' → logprob: -10.253233909606934
    6. ':' → logprob: -12.378233909606934
    7. '   ' → logprob: -12.753233909606934
    8. ')->' → logprob: -14.128233909606934
    9. '):
' → logprob: -15.128233909606934
    10. ' ' → logprob: -15.503233909606934

Token 196: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006307095172815025
    2. '):' → logprob: -7.500630855560303
    3. '():' → logprob: -10.125630378723145
    4. '->' → logprob: -10.750630378723145
    5. ')' → logprob: -11.875630378723145
    6. ':return' → logprob: -12.500630378723145
    7. '>:' → logprob: -13.375630378723145
    8. ':
' → logprob: -14.125630378723145
    9. '}:' → logprob: -14.250630378723145
    10. ' ->' → logprob: -14.375630378723145

Token 197: ' int' (ID: 677)
  Prédit: ' cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cls' → logprob: -0.02336415834724903
    2. 'cls' → logprob: -3.7733640670776367
    3. ' return' → logprob: -9.398364067077637
    4. '_cls' → logprob: -11.148364067077637
    5. '(cls' → logprob: -12.148364067077637
    6. 'return' → logprob: -12.148364067077637
    7. ' int' → logprob: -12.773364067077637
    8. ' self' → logprob: -13.023364067077637
    9. '   ' → logprob: -13.273364067077637
    10. 'int' → logprob: -13.898364067077637

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008016457431949675
    2. '):' → logprob: -7.2508015632629395
    3. ':
' → logprob: -9.625802040100098
    4. ':return' → logprob: -11.875802040100098
    5. ' :' → logprob: -12.250802040100098
    6. '   ' → logprob: -12.500802040100098
    7. ')' → logprob: -12.625802040100098
    8. '       ' → logprob: -13.125802040100098
    9. '):
' → logprob: -13.125802040100098
    10. '():' → logprob: -13.625802040100098

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006086515262722969
    2. ' return' → logprob: -5.256086349487305
    3. 'return' → logprob: -7.256086349487305
    4. '   ' → logprob: -9.006086349487305
    5. '    ' → logprob: -12.506086349487305
    6. '<|end|>' → logprob: -12.631086349487305
    7. ' ' → logprob: -13.006086349487305
    8. '      ' → logprob: -13.256086349487305
    9. ')' → logprob: -13.381086349487305
    10. '	return' → logprob: -13.506086349487305

Token 200: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0019806181080639362
    2. '       ' → logprob: -7.001980781555176
    3. ' return' → logprob: -7.001980781555176
    4. 'try' → logprob: -8.751980781555176
    5. 'if' → logprob: -15.501980781555176
    6. ' try' → logprob: -16.50197982788086
    7. '   ' → logprob: -17.12697982788086
    8. '```' → logprob: -17.12697982788086
    9. '	return' → logprob: -19.12697982788086
    10. '"""' → logprob: -19.87697982788086

Token 201: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.3868711292743683
    2. ' cls' → logprob: -1.136871099472046
    3. '(cls' → logprob: -16.261871337890625
    4. '_cls' → logprob: -17.636871337890625
    5. '.cls' → logprob: -19.386871337890625
    6. 'cl' → logprob: -19.886871337890625
    7. '   ' → logprob: -20.886871337890625
    8. 'self' → logprob: -21.136871337890625
    9. 'Cls' → logprob: -21.261871337890625
    10. 'len' → logprob: -21.511871337890625

Token 202: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -8.061054359131958e-06
    2. '.' → logprob: -12.000007629394531
    3. ' .' → logprob: -14.375007629394531
    4. ']._' → logprob: -15.000007629394531
    5. '_letter' → logprob: -15.125007629394531
    6. ')._' → logprob: -15.250007629394531
    7. '   ' → logprob: -15.375007629394531
    8. '_' → logprob: -15.875007629394531
    9. '."_' → logprob: -17.37500762939453
    10. '_letters' → logprob: -17.75000762939453

Token 203: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.0015031944494694471
    2. '_letter' → logprob: -6.501502990722656
    3. ' letter' → logprob: -14.251502990722656
    4. 'lette' → logprob: -16.126502990722656
    5. '-letter' → logprob: -17.126502990722656
    6. 'lett' → logprob: -17.251502990722656
    7. 'let' → logprob: -17.251502990722656
    8. '(letter' → logprob: -17.501502990722656
    9. 'LETTER' → logprob: -18.251502990722656
    10. 'index' → logprob: -18.376502990722656

Token 204: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -8.387458365177736e-05
    2. 'order' → logprob: -9.875083923339844
    3. '_letter' → logprob: -11.000083923339844
    4. '_index' → logprob: -11.125083923339844
    5. 'letter' → logprob: -15.375083923339844
    6. 'index' → logprob: -16.375083923339844
    7. 's' → logprob: -16.375083923339844
    8. '_orders' → logprob: -16.625083923339844
    9. 'Order' → logprob: -16.875083923339844
    10. '\' → logprob: -17.125083923339844

Token 205: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -1.306760805164231e-05
    2. '.' → logprob: -11.37501335144043
    3. 'index' → logprob: -13.62501335144043
    4. ' .' → logprob: -15.50001335144043
    5. '.Index' → logprob: -17.37501335144043
    6. '.find' → logprob: -19.25001335144043
    7. '   ' → logprob: -20.12501335144043
    8. ' index' → logprob: -20.37501335144043
    9. '().' → logprob: -20.87501335144043
    10. ').' → logprob: -21.62501335144043

Token 206: '(letter' (ID: 142899)
  Prédit: '(letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(letter' → logprob: -0.048611659556627274
    2. '(' → logprob: -3.048611640930176
    3. '('' → logprob: -12.298611640930176
    4. '(line' → logprob: -12.423611640930176
    5. '(le' → logprob: -12.548611640930176
    6. '(let' → logprob: -13.423611640930176
    7. '(
' → logprob: -13.548611640930176
    8. ' (' → logprob: -13.798611640930176
    9. '(ll' → logprob: -13.798611640930176
    10. '(token' → logprob: -13.923611640930176

Token 207: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160349458805285e-05
    2. '[' → logprob: -12.375011444091797
    3. ' )' → logprob: -12.875011444091797
    4. '(' → logprob: -13.875011444091797
    5. '')' → logprob: -13.875011444091797
    6. ']' → logprob: -14.000011444091797
    7. '))' → logprob: -14.625011444091797
    8. ')
' → logprob: -14.750011444091797
    9. '])' → logprob: -15.250011444091797
    10. '())' → logprob: -15.500011444091797

Token 208: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.10064440220594406
    2. '@property' → logprob: -3.22564435005188
    3. 'def' (adapté à ' def') → logprob: -3.47564435005188
    4. '@' → logprob: -4.350644588470459
    5. '   ' → logprob: -4.475644588470459
    6. '@class' → logprob: -8.4756441116333
    7. '
' → logprob: -8.9756441116333
    8. ' class' → logprob: -9.6006441116333
    9. 'classmethod' → logprob: -9.8506441116333
    10. '@dat' → logprob: -9.9756441116333

Token 210: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5715373754501343
    2. ' __' → logprob: -1.4465373754501343
    3. ' def' → logprob: -1.8215373754501343
    4. ' ' → logprob: -4.196537494659424
    5. ' <' → logprob: -4.196537494659424
    6. '_repr' → logprob: -6.446537494659424
    7. '_' → logprob: -6.821537494659424
    8. ' >' → logprob: -7.071537494659424
    9. ' ==' → logprob: -7.196537494659424
    10. ' ' → logprob: -7.321537494659424

Token 211: 'str' (ID: 689)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.06823839247226715
    2. 'repr' → logprob: -3.0682384967803955
    3. 'str' → logprob: -4.318238258361816
    4. 'lt' → logprob: -5.568238258361816
    5. 'init' → logprob: -6.068238258361816
    6. 'hash' → logprob: -13.443238258361816
    7. 'int' → logprob: -13.568238258361816
    8. 'mul' → logprob: -15.693238258361816
    9. 'iter' → logprob: -16.068239212036133
    10. 'len' → logprob: -16.068239212036133

Token 212: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3154313564300537
    2. '__(' → logprob: -1.3154313564300537
    3. '__(
' → logprob: -6.565431594848633
    4. '__('' → logprob: -7.440431594848633
    5. '__.__' → logprob: -9.940431594848633
    6. '__((' → logprob: -10.065431594848633
    7. '___' → logprob: -10.190431594848633
    8. '__("' → logprob: -10.940431594848633
    9. '____' → logprob: -11.315431594848633
    10. '_' → logprob: -12.190431594848633

Token 213: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011808235431089997
    2. ')' → logprob: -6.751180648803711
    3. ' self' → logprob: -12.001180648803711
    4. '
' → logprob: -13.001180648803711
    5. ')
' → logprob: -14.501180648803711
    6. '(self' → logprob: -14.751180648803711
    7. ' ' → logprob: -15.251180648803711
    8. '   ' → logprob: -15.376180648803711
    9. ')(' → logprob: -15.751180648803711
    10. '	self' → logprob: -16.00118064880371

Token 214: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06312891840934753
    2. '__)' → logprob: -2.81312894821167
    3. ')' → logprob: -7.43812894821167
    4. '):' → logprob: -8.563128471374512
    5. ')__' → logprob: -8.938128471374512
    6. '__:' → logprob: -9.688128471374512
    7. 'self' → logprob: -9.813128471374512
    8. '__)
' → logprob: -10.063128471374512
    9. '__).' → logprob: -10.813128471374512
    10. '):
' → logprob: -11.313128471374512

Token 215: '       ' (ID: 309)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0505058765411377
    2. ' f' → logprob: -1.3005058765411377
    3. 'return' → logprob: -1.8005058765411377
    4. '       ' → logprob: -1.8005058765411377
    5. 'f' → logprob: -3.0505058765411377
    6. '   ' → logprob: -9.675505638122559
    7. ' ' → logprob: -12.050505638122559
    8. '      ' → logprob: -13.675505638122559
    9. '	return' → logprob: -13.675505638122559
    10. '```' → logprob: -13.925505638122559

Token 216: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0016063899965956807
    2. ' return' → logprob: -6.501606464385986
    3. 'f' → logprob: -9.876605987548828
    4. '       ' → logprob: -9.876605987548828
    5. 'if' (adapté à ' if') → logprob: -14.501605987548828
    6. ' f' → logprob: -14.501605987548828
    7. 'self' → logprob: -15.626605987548828
    8. '   ' → logprob: -16.626605987548828
    9. '	return' → logprob: -17.876605987548828
    10. 'result' → logprob: -18.501605987548828

Token 217: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2519334554672241
    2. 'self' → logprob: -1.5019334554672241
    3. ' not' → logprob: -13.251933097839355
    4. '	self' → logprob: -13.876933097839355
    5. ' isinstance' → logprob: -15.001933097839355
    6. '(self' → logprob: -15.126933097839355
    7. '_self' → logprob: -15.251933097839355
    8. ' ' → logprob: -15.376933097839355
    9. 'not' → logprob: -16.251934051513672
    10. '   ' → logprob: -16.251934051513672

Token 218: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.006103220395743847
    2. '.' → logprob: -5.131103038787842
    3. 'count' → logprob: -9.006103515625
    4. ' .' → logprob: -10.131103515625
    5. ' count' → logprob: -13.006103515625
    6. '.value' → logprob: -13.006103515625
    7. '.has' → logprob: -13.131103515625
    8. '	count' → logprob: -14.506103515625
    9. '<count' → logprob: -14.506103515625
    10. '.is' → logprob: -14.881103515625

Token 219: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1229829490184784
    2. '==' → logprob: -2.497982978820801
    3. ' >' → logprob: -3.622982978820801
    4. '>' → logprob: -4.997982978820801
    5. ' !=' → logprob: -11.9979829788208
    6. ' ' → logprob: -12.9979829788208
    7. '=' → logprob: -13.1229829788208
    8. ')' → logprob: -13.6229829788208
    9. ' ' → logprob: -13.6229829788208
    10. '```' → logprob: -14.2479829788208

Token 220: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078997299075127
    2. ' ' → logprob: -5.5040788650512695
    3. '=' → logprob: -15.12907886505127
    4. '0' → logprob: -15.87907886505127
    5. '   ' → logprob: -16.504079818725586
    6. '>' → logprob: -17.004079818725586
    7. '  ' → logprob: -17.754079818725586
    8. '```' → logprob: -17.754079818725586
    9. '9' → logprob: -18.566579818725586
    10. '
' → logprob: -18.629079818725586

Token 221: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '=' → logprob: -15.875035285949707
    4. '>' → logprob: -17.875036239624023
    5. '```' → logprob: -18.375036239624023
    6. '   ' → logprob: -19.000036239624023
    7. '0' → logprob: -19.312536239624023
    8. '
' → logprob: -19.375036239624023
    9. 'from' → logprob: -19.500036239624023
    10. '9' → logprob: -19.562536239624023

Token 222: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5612825751304626
    2. ':' → logprob: -0.9362825751304626
    3. ':return' → logprob: -3.6862826347351074
    4. 'return' → logprob: -4.686282634735107
    5. '           ' → logprob: -6.561282634735107
    6. ' return' → logprob: -7.061282634735107
    7. '       ' → logprob: -7.186282634735107
    8. '{return' → logprob: -10.81128215789795
    9. '):
' → logprob: -10.93628215789795
    10. '   ' → logprob: -11.31128215789795

Token 223: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.035368818789720535
    2. ' return' → logprob: -3.9103689193725586
    3. '       ' → logprob: -4.285368919372559
    4. '{return' → logprob: -7.535368919372559
    5. '           ' → logprob: -8.410368919372559
    6. ':return' → logprob: -8.910368919372559
    7. ')return' → logprob: -11.285368919372559
    8. '        
' → logprob: -11.660368919372559
    9. '	return' → logprob: -11.660368919372559
    10. '{' → logprob: -12.285368919372559

Token 224: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -2.248469718324486e-05
    2. ' return' → logprob: -10.750022888183594
    3. '           ' → logprob: -14.625022888183594
    4. '       ' → logprob: -14.625022888183594
    5. '{return' → logprob: -18.000022888183594
    6. '```' → logprob: -18.000022888183594
    7. 'eturn' → logprob: -20.125022888183594
    8. '
' → logprob: -20.125022888183594
    9. '	return' → logprob: -20.875022888183594
    10. ':return' → logprob: -21.375022888183594

Token 225: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011445031268522143
    2. 'f' → logprob: -7.0011444091796875
    3. ' self' → logprob: -8.376144409179688
    4. ' f' → logprob: -13.251144409179688
    5. 'str' → logprob: -14.251144409179688
    6. '(self' → logprob: -16.501144409179688
    7. '   ' → logprob: -16.626144409179688
    8. '	self' → logprob: -18.001144409179688
    9. '       ' → logprob: -18.126144409179688
    10. '```' → logprob: -18.126144409179688

Token 226: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.981667537620524e-06
    2. 'letter' → logprob: -13.375001907348633
    3. ' .' → logprob: -16.000001907348633
    4. '._' → logprob: -16.125001907348633
    5. '.le' → logprob: -16.625001907348633
    6. '(letter' → logprob: -16.875001907348633
    7. '.str' → logprob: -17.250001907348633
    8. '.string' → logprob: -18.500001907348633
    9. '.line' → logprob: -19.125001907348633
    10. '.value' → logprob: -19.125001907348633

Token 227: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -2.339278580620885e-06
    2. 'str' → logprob: -13.750001907348633
    3. '(letter' → logprob: -14.875001907348633
    4. ' letter' → logprob: -14.875001907348633
    5. '.' → logprob: -15.625001907348633
    6. 'string' → logprob: -15.875001907348633
    7. '_letter' → logprob: -16.125001907348633
    8. 'etter' → logprob: -17.625001907348633
    9. 'lette' → logprob: -18.250001907348633
    10. 'letters' → logprob: -18.625001907348633

Token 228: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009328295476734638
    2. 'else' → logprob: -5.634328365325928
    3. '*' → logprob: -6.259328365325928
    4. 'return' → logprob: -6.259328365325928
    5. '+' → logprob: -7.634328365325928
    6. 'self' → logprob: -7.759328365325928
    7. 's' → logprob: -8.38432788848877
    8. '
' → logprob: -8.75932788848877
    9. ' else' → logprob: -8.75932788848877
    10. '        
' → logprob: -9.50932788848877

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03367290273308754
    2. 'return' → logprob: -3.53367280960083
    3. 'else' → logprob: -5.65867280960083
    4. '*' → logprob: -8.408673286437988
    5. ' else' → logprob: -9.908673286437988
    6. 'self' → logprob: -10.033673286437988
    7. ' return' → logprob: -10.408673286437988
    8. '	' → logprob: -10.658673286437988
    9. '   ' → logprob: -11.658673286437988
    10. '+' → logprob: -12.033673286437988

Token 230: ' else' (ID: 1203)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0018979329615831375
    2. ' return' → logprob: -6.501897811889648
    3. '       ' → logprob: -8.251897811889648
    4. 'f' → logprob: -9.626897811889648
    5. 'self' → logprob: -10.501897811889648
    6. 'str' → logprob: -11.001897811889648
    7. 'else' (adapté à ' else') → logprob: -11.501897811889648
    8. '{return' → logprob: -11.501897811889648
    9. ' f' → logprob: -13.501897811889648
    10. 'eturn' → logprob: -14.751897811889648

Token 231: ':
' (ID: 734)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10192599892616272
    2. ' return' → logprob: -2.35192608833313
    3. '{' → logprob: -7.726925849914551
    4. '       ' → logprob: -8.10192584991455
    5. '           ' → logprob: -8.22692584991455
    6. '{return' → logprob: -8.35192584991455
    7. ':return' → logprob: -8.72692584991455
    8. 'f' → logprob: -8.85192584991455
    9. ' f' → logprob: -9.35192584991455
    10. ':' → logprob: -10.60192584991455

Token 232: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2143762707710266
    2. 'return' → logprob: -2.339376211166382
    3. 'f' → logprob: -2.839376211166382
    4. 'str' → logprob: -4.214376449584961
    5. ' f' → logprob: -4.464376449584961
    6. ' self' → logprob: -4.839376449584961
    7. '       ' → logprob: -5.964376449584961
    8. ' return' → logprob: -7.339376449584961
    9. '           ' → logprob: -7.714376449584961
    10. ' str' → logprob: -8.464376449584961

Token 233: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00022570860164705664
    2. ' return' → logprob: -8.500226020812988
    3. 'f' → logprob: -10.750226020812988
    4. 'str' → logprob: -15.125226020812988
    5. ' f' → logprob: -15.250226020812988
    6. '           ' → logprob: -15.750226020812988
    7. '       ' → logprob: -16.625225067138672
    8. '{return' → logprob: -18.125225067138672
    9. 'repr' → logprob: -19.125225067138672
    10. '	return' → logprob: -19.250225067138672

Token 234: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3551723062992096
    2. ' f' → logprob: -1.2301722764968872
    3. 'self' → logprob: -5.605172157287598
    4. 'str' → logprob: -6.105172157287598
    5. ' self' → logprob: -7.730172157287598
    6. ' str' → logprob: -7.980172157287598
    7. '	f' → logprob: -12.605172157287598
    8. '(f' → logprob: -12.730172157287598
    9. ' ' → logprob: -12.980172157287598
    10. '   ' → logprob: -13.480172157287598

Token 235: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.2664959132671356
    2. '{' → logprob: -1.516495943069458
    3. ''{' → logprob: -4.266495704650879
    4. 'f' → logprob: -8.141495704650879
    5. 'self' → logprob: -9.266495704650879
    6. 'str' → logprob: -10.391495704650879
    7. ' f' → logprob: -11.891495704650879
    8. '"' → logprob: -12.391495704650879
    9. '{s' → logprob: -13.766495704650879
    10. '{return' → logprob: -14.266495704650879

Token 236: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1041145626222715e-05
    2. 'str' → logprob: -11.625011444091797
    3. ' self' → logprob: -13.250011444091797
    4. '{' → logprob: -15.875011444091797
    5. '       ' → logprob: -16.875011444091797
    6. '   ' → logprob: -17.500011444091797
    7. '
' → logprob: -18.250011444091797
    8. '(self' → logprob: -18.250011444091797
    9. '           ' → logprob: -18.500011444091797
    10. 'count' → logprob: -18.750011444091797

Token 237: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.001038287067785859
    2. 'count' → logprob: -6.876038074493408
    3. '.' → logprob: -12.626038551330566
    4. '[count' → logprob: -14.251038551330566
    5. '<count' → logprob: -14.626038551330566
    6. '	count' → logprob: -14.751038551330566
    7. '$count' → logprob: -15.001038551330566
    8. '(count' → logprob: -16.12603759765625
    9. ' count' → logprob: -16.25103759765625
    10. 'Count' → logprob: -16.75103759765625

Token 238: '}{' (ID: 29124)
  Prédit: '}{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}{' → logprob: -0.0006998073076829314
    2. 'self' → logprob: -7.375699996948242
    3. '[self' → logprob: -10.125699996948242
    4. '}' → logprob: -10.875699996948242
    5. '(self' → logprob: -12.750699996948242
    6. '*self' → logprob: -12.750699996948242
    7. '{' → logprob: -13.250699996948242
    8. '}"' → logprob: -13.375699996948242
    9. ' self' → logprob: -13.500699996948242
    10. ' }' → logprob: -13.500699996948242

Token 239: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5332478142227046e-05
    2. ' self' → logprob: -11.125015258789062
    3. '(self' → logprob: -15.250015258789062
    4. '[self' → logprob: -15.625015258789062
    5. '{' → logprob: -17.750015258789062
    6. '	self' → logprob: -18.500015258789062
    7. '   ' → logprob: -19.375015258789062
    8. '```' → logprob: -19.625015258789062
    9. 's' → logprob: -19.750015258789062
    10. '       ' → logprob: -19.875015258789062

Token 240: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.9153885558771435e-06
    2. 'letter' → logprob: -12.250005722045898
    3. '(letter' → logprob: -14.750005722045898
    4. '_letter' → logprob: -15.625005722045898
    5. '-letter' → logprob: -15.625005722045898
    6. 'Letter' → logprob: -16.0000057220459
    7. ' .' → logprob: -16.7500057220459
    8. ' letter' → logprob: -17.3750057220459
    9. 'LETTER' → logprob: -17.3750057220459
    10. '.le' → logprob: -17.6250057220459

Token 241: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -1.7432603272027336e-06
    2. ' letter' → logprob: -13.625001907348633
    3. 'self' → logprob: -15.875001907348633
    4. '(letter' → logprob: -16.000001907348633
    5. '_letter' → logprob: -16.125001907348633
    6. 'str' → logprob: -16.625001907348633
    7. '-letter' → logprob: -19.375001907348633
    8. 'Letter' → logprob: -19.625001907348633
    9. 'letters' → logprob: -20.000001907348633
    10. 'LETTER' → logprob: -20.375001907348633

Token 242: '}"

' (ID: 103433)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.000122608442325145
    2. '"' → logprob: -9.250123023986816
    3. '}"
' → logprob: -11.500123023986816
    4. '}' → logprob: -11.750123023986816
    5. ')"' → logprob: -12.375123023986816
    6. '"}' → logprob: -12.500123023986816
    7. '}"

' → logprob: -15.875123023986816
    8. ']"' → logprob: -16.0001220703125
    9. '```' → logprob: -16.3751220703125
    10. '}}"' → logprob: -17.5001220703125

Token 243: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2785155773162842
    2. 'class' → logprob: -2.278515577316284
    3. '<|end|>' → logprob: -2.403515577316284
    4. '\n' → logprob: -3.653515577316284
    5. ':' → logprob: -5.028515815734863
    6. '   ' → logprob: -5.903515815734863
    7. '@property' → logprob: -5.903515815734863
    8. '

' → logprob: -6.153515815734863
    9. '```' → logprob: -6.528515815734863
    10. '' → logprob: -6.653515815734863

Token 244: ' def' (ID: 1056)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.001134858699515462
    2. '
' → logprob: -6.876134872436523
    3. 'm' → logprob: -9.501134872436523
    4. '

' → logprob: -11.001134872436523
    5. ' class' → logprob: -12.126134872436523
    6. 'classmethod' → logprob: -14.001134872436523
    7. '<class' → logprob: -14.126134872436523
    8. '    
' → logprob: -14.376134872436523
    9. '
' → logprob: -14.751134872436523
    10. '  
' → logprob: -15.001134872436523

Token 245: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2345728725194931
    2. '__' → logprob: -2.2345728874206543
    3. 'lt' → logprob: -3.9845728874206543
    4. 'eq' → logprob: -4.109572887420654
    5. ' ==' → logprob: -4.359572887420654
    6. '_eq' → logprob: -4.484572887420654
    7. ' _' → logprob: -4.734572887420654
    8. ' def' → logprob: -4.984572887420654
    9. '==' → logprob: -5.109572887420654
    10. 'def' → logprob: -5.484572887420654

Token 246: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.007205605506896973
    2. 'lt' → logprob: -5.007205486297607
    3. 'repr' → logprob: -7.632205486297607
    4. 'mul' → logprob: -13.507205963134766
    5. 'hash' → logprob: -13.632205963134766
    6. 'gt' → logprob: -14.382205963134766
    7. 'add' → logprob: -14.507205963134766
    8. 'len' → logprob: -14.632205963134766
    9. 'int' → logprob: -14.632205963134766
    10. 'str' → logprob: -14.757205963134766

Token 247: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0028602739330381155
    2. '__' → logprob: -6.002860069274902
    3. '__('' → logprob: -8.627860069274902
    4. '__(
' → logprob: -8.627860069274902
    5. '__((' → logprob: -11.252860069274902
    6. '__("' → logprob: -11.502860069274902
    7. '__(*' → logprob: -13.502860069274902
    8. '__.__' → logprob: -14.002860069274902
    9. '___' → logprob: -14.752860069274902
    10. '(self' → logprob: -15.127860069274902

Token 248: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.538490950129926e-05
    2. ')' → logprob: -10.125055313110352
    3. ' self' → logprob: -11.500055313110352
    4. '(self' → logprob: -12.375055313110352
    5. ')(' → logprob: -14.875055313110352
    6. '	self' → logprob: -15.500055313110352
    7. '):
' → logprob: -16.12505531311035
    8. ')
' → logprob: -16.62505531311035
    9. '
' → logprob: -16.62505531311035
    10. '_self' → logprob: -17.12505531311035

Token 249: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.6561472415924072
    2. '__' → logprob: -0.9061472415924072
    3. 'self' → logprob: -3.0311472415924072
    4. '__)' → logprob: -4.531147003173828
    5. '__('' → logprob: -5.406147003173828
    6. '__(
' → logprob: -6.031147003173828
    7. ')' → logprob: -6.156147003173828
    8. '(self' → logprob: -6.156147003173828
    9. ')(__' → logprob: -6.656147003173828
    10. '__).' → logprob: -7.281147003173828

Token 250: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4840734004974365
    2. '       ' → logprob: -0.9840734004974365
    3. ' self' → logprob: -5.484073638916016
    4. 'f' → logprob: -5.734073638916016
    5. '   ' → logprob: -6.484073638916016
    6. 'return' → logprob: -7.109073638916016
    7. '(self' → logprob: -9.359073638916016
    8. ' f' → logprob: -9.609073638916016
    9. ' return' → logprob: -10.609073638916016
    10. '           ' → logprob: -11.859073638916016

Token 251: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5607826709747314
    2. 'f' → logprob: -1.3107826709747314
    3. '       ' → logprob: -2.0607826709747314
    4. ' return' → logprob: -3.5607826709747314
    5. ' f' → logprob: -5.560782432556152
    6. '           ' → logprob: -12.060782432556152
    7. '   ' → logprob: -12.560782432556152
    8. '
' → logprob: -13.685782432556152
    9. '      ' → logprob: -14.560782432556152
    10. '        ' → logprob: -14.935782432556152

Token 252: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.029750484973192215
    2. ' f' → logprob: -3.5297505855560303
    3. '(f' → logprob: -18.15475082397461
    4. '	f' → logprob: -18.27975082397461
    5. ' ' → logprob: -19.02975082397461
    6. 'repr' → logprob: -19.02975082397461
    7. 'self' → logprob: -19.15475082397461
    8. '<f' → logprob: -20.65475082397461
    9. '   ' → logprob: -20.90475082397461
    10. 'F' → logprob: -21.40475082397461

Token 253: '"{' (ID: 27510)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0010156603530049324
    2. '(f' → logprob: -7.751015663146973
    3. '"<' → logprob: -7.876015663146973
    4. ' f' → logprob: -9.001015663146973
    5. '"{' → logprob: -9.626015663146973
    6. 'MC' → logprob: -11.501015663146973
    7. '<f' → logprob: -12.626015663146973
    8. '<' → logprob: -13.876015663146973
    9. '`' → logprob: -15.251015663146973
    10. '"' → logprob: -15.251015663146973

Token 254: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004637673031538725
    2. 'type' → logprob: -5.379637718200684
    3. ' self' → logprob: -11.379637718200684
    4. 'cls' → logprob: -12.754637718200684
    5. 'MC' → logprob: -13.879637718200684
    6. ' type' → logprob: -14.629637718200684
    7. '{' → logprob: -14.754637718200684
    8. '(self' → logprob: -15.254637718200684
    9. 'Self' → logprob: -15.629637718200684
    10. '[self' → logprob: -16.379636764526367

Token 255: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.00016790216614026576
    2. 'self' → logprob: -8.875167846679688
    3. '().__' → logprob: -11.625167846679688
    4. '(self' → logprob: -12.000167846679688
    5. '__.__' → logprob: -12.250167846679688
    6. 'class' → logprob: -12.375167846679688
    7. '.' → logprob: -13.625167846679688
    8. '__' → logprob: -13.875167846679688
    9. '.self' → logprob: -14.125167846679688
    10. 'cls' → logprob: -15.500167846679688

Token 256: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.320199877838604e-07
    2. 'module' → logprob: -15.0
    3. 'clas' → logprob: -17.5
    4. 'name' → logprob: -18.125
    5. ' class' → logprob: -18.625
    6. 'classname' → logprob: -19.375
    7. 'qual' → logprob: -19.5
    8. '"class' → logprob: -19.75
    9. 'cls' → logprob: -20.125
    10. ''class' → logprob: -21.125

Token 257: '__.__' (ID: 124889)
  Prédit: '__.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__.__' → logprob: -2.2200749754119897e-06
    2. '__.' → logprob: -13.375001907348633
    3. '__' → logprob: -14.625001907348633
    4. '.__' → logprob: -16.375001907348633
    5. '_.' → logprob: -18.875001907348633
    6. '_' → logprob: -21.500001907348633
    7. ').__' → logprob: -21.750001907348633
    8. '__
' → logprob: -22.125001907348633
    9. '__).' → logprob: -22.750001907348633
    10. '__

' → logprob: -22.750001907348633

Token 258: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -3.166338137816638e-05
    2. 'qual' → logprob: -10.375031471252441
    3. 'module' → logprob: -14.750031471252441
    4. '{name' → logprob: -18.500032424926758
    5. '{' → logprob: -19.125032424926758
    6. 'nam' → logprob: -19.375032424926758
    7. ' name' → logprob: -19.625032424926758
    8. '
' → logprob: -20.000032424926758
    9. '```' → logprob: -20.000032424926758
    10. 'self' → logprob: -20.875032424926758

Token 259: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3885793685913086
    2. '__(' → logprob: -1.1385793685913086
    3. '}(' → logprob: -7.138579368591309
    4. '}' → logprob: -7.638579368591309
    5. '__(
' → logprob: -7.888579368591309
    6. '__('' → logprob: -10.513579368591309
    7. '__((' → logprob: -11.513579368591309
    8. '__("' → logprob: -12.013579368591309
    9. '(' → logprob: -12.513579368591309
    10. '__(*' → logprob: -12.513579368591309

Token 260: '}(' (ID: 52930)
  Prédit: '}('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}(' → logprob: -0.0206151120364666
    2. '}' → logprob: -3.8956151008605957
    3. '__' → logprob: -10.145615577697754
    4. '__(' → logprob: -11.020615577697754
    5. ' ' → logprob: -12.270615577697754
    6. 'f' → logprob: -12.395615577697754
    7. ' }' → logprob: -12.770615577697754
    8. '(' → logprob: -13.770615577697754
    9. 'count' → logprob: -13.895615577697754
    10. '}{' → logprob: -14.020615577697754

Token 261: 'count' (ID: 5420)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00029995047952979803
    2. 'count' → logprob: -8.500300407409668
    3. '{' → logprob: -9.250300407409668
    4. ' self' → logprob: -15.375300407409668
    5. '
' → logprob: -16.62529945373535
    6. ')' → logprob: -17.75029945373535
    7. '(self' → logprob: -18.50029945373535
    8. '```' → logprob: -18.87529945373535
    9. '{
' → logprob: -19.50029945373535
    10. 'str' → logprob: -19.62529945373535

Token 262: '={' (ID: 1693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25448864698410034
    2. '=self' → logprob: -1.5044887065887451
    3. '={' → logprob: -6.129488468170166
    4. 'self' → logprob: -8.629488945007324
    5. '=}' → logprob: -9.129488945007324
    6. '=
' → logprob: -9.754488945007324
    7. '=

' → logprob: -12.004488945007324
    8. ')=' → logprob: -12.129488945007324
    9. ')' → logprob: -12.379488945007324
    10. '=f' → logprob: -12.379488945007324

Token 263: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003365350130479783
    2. '{' → logprob: -8.000336647033691
    3. ' self' → logprob: -13.875336647033691
    4. '(self' → logprob: -17.375335693359375
    5. 'repr' → logprob: -17.625335693359375
    6. 'str' → logprob: -18.125335693359375
    7. '{
' → logprob: -19.500335693359375
    8. '
' → logprob: -19.500335693359375
    9. '[self' → logprob: -19.500335693359375
    10. '```' → logprob: -19.500335693359375

Token 264: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -6.12258882028982e-05
    2. 'count' → logprob: -9.75006103515625
    3. 'self' → logprob: -13.12506103515625
    4. '.' → logprob: -14.62506103515625
    5. '}' → logprob: -15.50006103515625
    6. ' count' → logprob: -17.37506103515625
    7. '{' → logprob: -17.87506103515625
    8. ')' → logprob: -17.87506103515625
    9. ')}' → logprob: -18.12506103515625
    10. '.Count' → logprob: -18.12506103515625

Token 265: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.1557283111615106e-05
    2. ')">' → logprob: -10.500041961669922
    3. ')"' → logprob: -11.750041961669922
    4. ')")' → logprob: -12.625041961669922
    5. ')`' → logprob: -14.000041961669922
    6. ')}' → logprob: -14.250041961669922
    7. '})' → logprob: -14.750041961669922
    8. '}' → logprob: -15.125041961669922
    9. ')**' → logprob: -16.000041961669922
    10. ' )' → logprob: -16.125041961669922

Token 266: '"


' (ID: 36470)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2884177565574646
    2. '<|end|>' → logprob: -1.4134178161621094
    3. '<|end|>' → logprob: -6.038417816162109
    4. '

' → logprob: -6.163417816162109
    5. '   ' → logprob: -7.288417816162109
    6. ')' → logprob: -7.288417816162109
    7. 'class' → logprob: -7.788417816162109
    8. '\n' → logprob: -8.66341781616211
    9. 'newline' → logprob: -8.91341781616211
    10. '```' → logprob: -9.03841781616211

Token 267: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.00023476807109545916
    2. '
' → logprob: -8.375234603881836
    3. ' class' → logprob: -13.125234603881836
    4. '

' → logprob: -14.000234603881836
    5. '"class' → logprob: -14.375234603881836
    6. '<class' → logprob: -14.625234603881836
    7. '```' → logprob: -16.250234603881836
    8. '
' → logprob: -16.750234603881836
    9. 'classmethod' → logprob: -17.375234603881836
    10. '<|end|>' → logprob: -17.750234603881836

Token 268: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.890631377696991
    2. ' MC' → logprob: -1.1406314373016357
    3. 'MC' → logprob: -2.0156314373016357
    4. 'M' → logprob: -2.0156314373016357
    5. 'MM' → logprob: -7.390631198883057
    6. ' MM' → logprob: -7.390631198883057
    7. 'Mc' → logprob: -7.640631198883057
    8. ' Mc' → logprob: -7.890631198883057
    9. '_M' → logprob: -7.890631198883057
    10. '_MC' → logprob: -8.765631675720215

Token 269: '(M' (ID: 6103)
  Prédit: 'CX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'CX' → logprob: -0.0958748385310173
    2. 'C' → logprob: -3.095874786376953
    3. 'cx' → logprob: -3.345874786376953
    4. 'c' → logprob: -4.970874786376953
    5. 'Cx' → logprob: -6.345874786376953
    6. 'class' → logprob: -6.595874786376953
    7. 'CM' → logprob: -8.470874786376953
    8. 'CI' → logprob: -9.220874786376953
    9. ' C' → logprob: -9.220874786376953
    10. '(' → logprob: -10.283374786376953

Token 270: 'CX' (ID: 98640)
  Prédit: 'CX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CX' → logprob: -3.7385154428193346e-05
    2. 'C' → logprob: -10.50003719329834
    3. 'cx' → logprob: -12.00003719329834
    4. ')' → logprob: -13.62503719329834
    5. 'Cx' → logprob: -14.25003719329834
    6. ' CX' → logprob: -15.25003719329834
    7. '(' → logprob: -15.50003719329834
    8. '(C' → logprob: -16.125038146972656
    9. '   ' → logprob: -16.125038146972656
    10. '```' → logprob: -16.500038146972656

Token 271: 'IL' (ID: 2654)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.5348705649375916
    2. 'IL' → logprob: -1.4098706245422363
    3. 'I' → logprob: -1.7848706245422363
    4. 'XL' → logprob: -7.659870624542236
    5. 'IX' → logprob: -7.659870624542236
    6. 'XI' → logprob: -7.909870624542236
    7. 'IC' → logprob: -8.159870147705078
    8. 'C' → logprob: -8.784870147705078
    9. 'CL' → logprob: -8.909870147705078
    10. 'ILI' → logprob: -9.659870147705078

Token 272: 'etter' (ID: 30747)
  Prédit: 'etter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etter' → logprob: -0.0015705646947026253
    2. 'Letter' → logprob: -6.501570701599121
    3. 'letter' → logprob: -10.376570701599121
    4. 'e' → logprob: -11.001570701599121
    5. '```' → logprob: -12.626570701599121
    6. 'ette' → logprob: -13.376570701599121
    7. ')' → logprob: -13.376570701599121
    8. 'et' → logprob: -13.501570701599121
    9. '{' → logprob: -13.626570701599121
    10. 'eter' → logprob: -13.751570701599121

Token 273: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004687868524342775
    2. '):
' → logprob: -5.379687786102295
    3. ')' → logprob: -9.754688262939453
    4. ' ):' → logprob: -12.504688262939453
    5. '   ' → logprob: -12.629688262939453
    6. '):

' → logprob: -13.754688262939453
    7. '):
' → logprob: -14.254688262939453
    8. '>):' → logprob: -15.629688262939453
    9. ' ' → logprob: -15.879688262939453
    10. ':' → logprob: -15.879688262939453

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5759803056716919
    2. '@property' → logprob: -0.8259803056716919
    3. 'letter' → logprob: -10.575980186462402
    4. '_letter' → logprob: -11.200980186462402
    5. ' letter' → logprob: -14.825980186462402
    6. ' @' → logprob: -15.075980186462402
    7. '
' → logprob: -15.325980186462402
    8. '    
' → logprob: -15.700980186462402
    9. '_' → logprob: -15.950980186462402
    10. '@' → logprob: -16.07598114013672

Token 275: ' @' (ID: 759)
  Prédit: '@property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@property' → logprob: -0.017040034756064415
    2. 'letter' → logprob: -4.767040252685547
    3. '_letter' → logprob: -5.267040252685547
    4. '   ' → logprob: -5.767040252685547
    5. ' @' → logprob: -10.017040252685547
    6. '@' (adapté à ' @') → logprob: -10.392040252685547
    7. ' letter' → logprob: -10.767040252685547
    8. 'LETTER' → logprob: -13.017040252685547
    9. '(letter' → logprob: -13.517040252685547
    10. '_' → logprob: -13.892040252685547

Token 276: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -1.676292231422849e-05
    2. '@property' → logprob: -11.000017166137695
    3. ' property' → logprob: -20.375017166137695
    4. '.property' → logprob: -22.250017166137695
    5. 'classmethod' → logprob: -22.875017166137695
    6. 'perty' → logprob: -23.125017166137695
    7. 'staticmethod' → logprob: -23.625017166137695
    8. '	property' → logprob: -24.125017166137695
    9. 'proper' → logprob: -24.125017166137695
    10. '_property' → logprob: -25.000017166137695

Token 277: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01776438020169735
    2. '
' → logprob: -4.267764568328857
    3. ' def' → logprob: -5.892764568328857
    4. '   ' → logprob: -7.267764568328857
    5. '	def' → logprob: -9.2677640914917
    6. '    
' → logprob: -11.0177640914917
    7. '<|end|>' → logprob: -11.6427640914917
    8. '
' → logprob: -12.1427640914917
    9. '@property' → logprob: -12.3927640914917
    10. ':def' → logprob: -13.5177640914917

Token 278: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0028729885816574097
    2. '
' → logprob: -6.377872943878174
    3. ' def' → logprob: -7.002872943878174
    4. '   ' → logprob: -8.377873420715332
    5. '    
' → logprob: -11.502873420715332
    6. '@property' → logprob: -11.502873420715332
    7. '<|end|>' → logprob: -12.252873420715332
    8. '```' → logprob: -13.002873420715332
    9. '	def' → logprob: -14.002873420715332
    10. '
' → logprob: -14.377873420715332

Token 279: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0002819544170051813
    2. ' def' → logprob: -8.750282287597656
    3. 'letter' → logprob: -9.000282287597656
    4. '   ' → logprob: -18.500282287597656
    5. 'return' → logprob: -18.500282287597656
    6. '@property' → logprob: -18.875282287597656
    7. ' letter' → logprob: -19.000282287597656
    8. '
' → logprob: -19.000282287597656
    9. '@' → logprob: -20.875282287597656
    10. 'de' → logprob: -21.500282287597656

Token 280: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.17974799871444702
    2. ' letter' → logprob: -1.8047480583190918
    3. '_letter' → logprob: -13.054747581481934
    4. '(letter' → logprob: -14.429747581481934
    5. 'Letter' → logprob: -15.929747581481934
    6. ' lettre' → logprob: -16.42974853515625
    7. '   ' → logprob: -16.74224853515625
    8. ' ' → logprob: -16.80474853515625
    9. '```' → logprob: -16.86724853515625
    10. '-letter' → logprob: -16.99224853515625

Token 281: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4794997274875641
    2. '():
' → logprob: -1.7294996976852417
    3. '():' → logprob: -2.3544998168945312
    4. '()' → logprob: -2.9794998168945312
    5. ':' → logprob: -3.4794998168945312
    6. '(' → logprob: -4.729499816894531
    7. ')' → logprob: -4.854499816894531
    8. '):
' → logprob: -5.854499816894531
    9. ':
' → logprob: -6.229499816894531
    10. 'self' → logprob: -6.479499816894531

Token 282: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5552324056625366
    2. '):
' → logprob: -1.0552324056625366
    3. '):' → logprob: -2.555232524871826
    4. '():
' → logprob: -9.180232048034668
    5. '):
' → logprob: -10.055232048034668
    6. ' ):
' → logprob: -10.680232048034668
    7. ':' → logprob: -10.930232048034668
    8. ')->' → logprob: -11.305232048034668
    9. '):

' → logprob: -11.430232048034668
    10. '   ' → logprob: -11.555232048034668

Token 283: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31386232376098633
    2. ')' → logprob: -2.4388623237609863
    3. '(self' → logprob: -2.6888623237609863
    4. ':
' → logprob: -2.9388623237609863
    5. '->' → logprob: -4.438862323760986
    6. 'self' → logprob: -4.563862323760986
    7. '():
' → logprob: -4.688862323760986
    8. ' ->' → logprob: -4.938862323760986
    9. '):
' → logprob: -5.313862323760986
    10. '   ' → logprob: -5.438862323760986

Token 284: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.8232458829879761
    2. ''m' → logprob: -1.323245882987976
    3. 'str' → logprob: -1.448245882987976
    4. ' '' → logprob: -2.9482460021972656
    5. ''s' → logprob: -5.573246002197266
    6. ''' → logprob: -6.323246002197266
    7. ''i' → logprob: -7.198246002197266
    8. ' m' → logprob: -7.948246002197266
    9. 'm' → logprob: -7.948246002197266
    10. ' ' → logprob: -9.698246002197266

Token 285: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04350195452570915
    2. ':
' → logprob: -3.168501853942871
    3. '       ' → logprob: -8.043501853942871
    4. '():
' → logprob: -9.668501853942871
    5. '):
' → logprob: -10.168501853942871
    6. '=' → logprob: -10.918501853942871
    7. '():' → logprob: -11.293501853942871
    8. '   ' → logprob: -11.293501853942871
    9. '):' → logprob: -11.543501853942871
    10. ':
' → logprob: -11.543501853942871

Token 286: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031061967834830284
    2. ''' → logprob: -4.281062126159668
    3. ''m' → logprob: -4.406062126159668
    4. 'return' → logprob: -5.656062126159668
    5. ' return' → logprob: -7.531062126159668
    6. '"' → logprob: -8.406062126159668
    7. ' '' → logprob: -8.656062126159668
    8. '   ' → logprob: -9.906062126159668
    9. ''s' → logprob: -10.406062126159668
    10. '	' → logprob: -11.531062126159668

Token 287: ' return' (ID: 622)
  Prédit: ''m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''m' → logprob: -0.7351445555686951
    2. '"' → logprob: -1.2351446151733398
    3. 'return' (adapté à ' return') → logprob: -1.4851446151733398
    4. ' return' → logprob: -6.36014461517334
    5. '       ' → logprob: -6.98514461517334
    6. 'm' → logprob: -7.48514461517334
    7. ''' → logprob: -10.48514461517334
    8. ' '' → logprob: -10.73514461517334
    9. '   ' → logprob: -10.98514461517334
    10. ' m' → logprob: -12.48514461517334

Token 288: ' '' (ID: 461)
  Prédit: ''m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''m' → logprob: -0.009160096757113934
    2. ' '' → logprob: -4.884160041809082
    3. '"' → logprob: -6.759160041809082
    4. ''' → logprob: -8.009160041809082
    5. 'm' → logprob: -10.009160041809082
    6. ' m' → logprob: -11.759160041809082
    7. ''s' → logprob: -13.259160041809082
    8. ' ' → logprob: -13.759160041809082
    9. '`' → logprob: -13.884160041809082
    10. ''a' → logprob: -14.259160041809082

Token 289: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.7729658540920354e-05
    2. ''m' → logprob: -10.500027656555176
    3. ''' → logprob: -15.875027656555176
    4. ' m' → logprob: -18.625028610229492
    5. '"' → logprob: -19.125028610229492
    6. '	m' → logprob: -20.375028610229492
    7. 'м' → logprob: -21.750028610229492
    8. '`' → logprob: -21.875028610229492
    9. '_m' → logprob: -22.375028610229492
    10. 'ｍ' → logprob: -22.625028610229492

Token 290: ''


' (ID: 58266)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.4736459888808895e-05
    2. ''
' → logprob: -11.250014305114746
    3. ''m' → logprob: -13.750014305114746
    4. '"' → logprob: -15.375014305114746
    5. ''M' → logprob: -16.125015258789062
    6. ''''' → logprob: -16.500015258789062
    7. '<|end|>' → logprob: -16.875015258789062
    8. ''

' → logprob: -17.250015258789062
    9. ' '' → logprob: -17.250015258789062
    10. ''"' → logprob: -17.625015258789062

Token 291: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.320199877838604e-07
    2. ' class' → logprob: -15.125
    3. '
' → logprob: -16.75
    4. 'c' → logprob: -19.25
    5. '

' → logprob: -19.375
    6. '<class' → logprob: -19.625
    7. '  
' → logprob: -20.125
    8. 'clas' → logprob: -20.25
    9. 'classmethod' → logprob: -20.5
    10. '    
' → logprob: -20.75

Token 292: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.005258183926343918
    2. ' C' → logprob: -5.255258083343506
    3. 'c' → logprob: -11.130258560180664
    4. 'class' → logprob: -12.255258560180664
    5. 'X' → logprob: -13.005258560180664
    6. ' ' → logprob: -13.755258560180664
    7. '
' → logprob: -14.755258560180664
    8. ' c' → logprob: -15.755258560180664
    9. 'Cx' → logprob: -16.005258560180664
    10. 'I' → logprob: -16.192758560180664

Token 293: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -2.45848218582978e-06
    2. '(' → logprob: -13.12500286102295
    3. ' (' → logprob: -14.75000286102295
    4. '(m' → logprob: -18.250001907348633
    5. '(C' → logprob: -18.875001907348633
    6. '(
' → logprob: -19.250001907348633
    7. '(mc' → logprob: -19.625001907348633
    8. 'class' → logprob: -19.750001907348633
    9. '   ' → logprob: -19.875001907348633
    10. '

' → logprob: -20.000001907348633

Token 294: 'CX' (ID: 98640)
  Prédit: 'CX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CX' → logprob: -0.019513873383402824
    2. 'C' → logprob: -4.519514083862305
    3. 'class' → logprob: -4.894514083862305
    4. '@property' → logprob: -7.894514083862305
    5. '(C' → logprob: -8.769514083862305
    6. 'c' → logprob: -8.894514083862305
    7. '(' → logprob: -10.144514083862305
    8. 'cx' → logprob: -10.144514083862305
    9. ')' → logprob: -10.269514083862305
    10. '@' → logprob: -10.394514083862305

Token 295: 'IL' (ID: 2654)
  Prédit: 'IL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.05084674060344696
    2. 'X' → logprob: -3.300846815109253
    3. 'I' → logprob: -4.425846576690674
    4. 'class' → logprob: -8.300847053527832
    5. 'XL' → logprob: -8.800847053527832
    6. 'L' → logprob: -9.675847053527832
    7. 'C' → logprob: -9.925847053527832
    8. 'il' → logprob: -10.175847053527832
    9. 'Il' → logprob: -10.425847053527832
    10. 'CL' → logprob: -10.425847053527832

Token 296: 'etter' (ID: 30747)
  Prédit: 'Letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Letter' → logprob: -0.5778353214263916
    2. 'etter' → logprob: -0.8278353214263916
    3. 'letter' → logprob: -6.9528350830078125
    4. 'L' → logprob: -7.4528350830078125
    5. 'IL' → logprob: -9.577835083007812
    6. 'C' → logprob: -9.702835083007812
    7. 'Let' → logprob: -10.077835083007812
    8. 'eter' → logprob: -10.452835083007812
    9. '_letter' → logprob: -10.827835083007812
    10. 'LETTER' → logprob: -11.202835083007812

Token 297: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008668106980621815
    2. '):' → logprob: -4.758667945861816
    3. '   ' → logprob: -10.258667945861816
    4. '):
' → logprob: -11.383667945861816
    5. ')' → logprob: -12.008667945861816
    6. '):

' → logprob: -14.758667945861816
    7. ':
' → logprob: -15.258667945861816
    8. ':' → logprob: -15.258667945861816
    9. ')
' → logprob: -16.008668899536133
    10. ' ):
' → logprob: -17.008668899536133

Token 298: '   ' (ID: 271)
  Prédit: '@property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@property' → logprob: -0.06201081722974777
    2. '   ' → logprob: -2.8120107650756836
    3. ' @' → logprob: -10.062010765075684
    4. ' ' → logprob: -14.812010765075684
    5. '  ' → logprob: -16.81201171875
    6. '
' → logprob: -18.18701171875
    7. '@' → logprob: -19.06201171875
    8. '    ' → logprob: -19.18701171875
    9. '	' → logprob: -19.43701171875
    10. 'property' → logprob: -19.56201171875

Token 299: ' @' (ID: 759)
  Prédit: '@property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@property' → logprob: -1.0206720617134124e-05
    2. '   ' → logprob: -11.75001049041748
    3. ' @' → logprob: -13.00001049041748
    4. ' ' → logprob: -19.250009536743164
    5. '@' (adapté à ' @') → logprob: -19.375009536743164
    6. '@dat' → logprob: -20.625009536743164
    7. '@login' → logprob: -20.750009536743164
    8. '
' → logprob: -21.000009536743164
    9. '@pytest' → logprob: -21.000009536743164
    10. '@click' → logprob: -21.125009536743164

Token 300: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -7.896309739408025e-07
    2. '@property' → logprob: -14.125000953674316
    3. ' property' → logprob: -17.25
    4. '_property' → logprob: -19.75
    5. '	property' → logprob: -20.375
    6. '.property' → logprob: -20.625
    7. 'staticmethod' → logprob: -20.75
    8. 'classmethod' → logprob: -21.0
    9. 'Property' → logprob: -21.875
    10. 'PROPERTY' → logprob: -22.5

Token 301: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.037835580878891e-05
    2. ' def' → logprob: -10.00005054473877
    3. '   ' → logprob: -12.25005054473877
    4. '
' → logprob: -16.875049591064453
    5. '	def' → logprob: -17.250049591064453
    6. ':def' → logprob: -19.625049591064453
    7. '_def' → logprob: -20.750049591064453
    8. ' ' → logprob: -21.000049591064453
    9. '-def' → logprob: -22.125049591064453
    10. '  ' → logprob: -22.125049591064453

Token 302: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.8889261304575484e-06
    2. ' def' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.500003814697266
    4. '	def' → logprob: -21.875003814697266
    5. '
' → logprob: -22.875003814697266
    6. ':def' → logprob: -23.250003814697266
    7. '_def' → logprob: -24.625003814697266
    8. ' ' → logprob: -24.750003814697266
    9. '  ' → logprob: -25.250003814697266
    10. '@' → logprob: -26.250003814697266

Token 303: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.088346359931165e-07
    2. ' def' → logprob: -14.000000953674316
    3. '   ' → logprob: -21.5
    4. '
' → logprob: -24.75
    5. '	def' → logprob: -25.75
    6. '  ' → logprob: -26.625
    7. '_def' → logprob: -26.75
    8. 'return' → logprob: -26.875
    9. ' ' → logprob: -27.125
    10. ':def' → logprob: -27.375

Token 304: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.0011708177626132965
    2. ' letter' → logprob: -6.751170635223389
    3. 'l' → logprob: -15.376171112060547
    4. '_letter' → logprob: -16.001171112060547
    5. '(letter' → logprob: -16.376171112060547
    6. ''' → logprob: -16.751171112060547
    7. ' ' → logprob: -16.751171112060547
    8. 'c' → logprob: -17.001171112060547
    9. 'lette' → logprob: -17.751171112060547
    10. 'le' → logprob: -17.876171112060547

Token 305: '(self' (ID: 2402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12448041141033173
    2. '   ' → logprob: -2.3744804859161377
    3. ' def' → logprob: -4.624480247497559
    4. '(self' → logprob: -5.249480247497559
    5. '
' → logprob: -5.749480247497559
    6. ')' → logprob: -5.874480247497559
    7. '       ' → logprob: -6.874480247497559
    8. '->' → logprob: -7.624480247497559
    9. '=' → logprob: -7.999480247497559
    10. ' =' → logprob: -8.374480247497559

Token 306: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00046320082037709653
    2. '   ' → logprob: -8.375463485717773
    3. '')' → logprob: -9.000463485717773
    4. '       ' → logprob: -10.625463485717773
    5. 'def' → logprob: -10.875463485717773
    6. 'self' → logprob: -11.125463485717773
    7. '):
' → logprob: -11.250463485717773
    8. ':' → logprob: -12.000463485717773
    9. '(self' → logprob: -12.125463485717773
    10. '`)' → logprob: -12.125463485717773

Token 307: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.259053111076355
    2. ' ->' → logprob: -2.5090532302856445
    3. 'def' → logprob: -2.7590532302856445
    4. ')' → logprob: -3.5090532302856445
    5. ':' → logprob: -3.8840532302856445
    6. '   ' → logprob: -4.3840532302856445
    7. 'return' → logprob: -4.3840532302856445
    8. '=' → logprob: -6.0090532302856445
    9. ':return' → logprob: -6.6340532302856445
    10. '       ' → logprob: -6.6340532302856445

Token 308: ' str' (ID: 989)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003374599851667881
    2. 'str' → logprob: -6.3783745765686035
    3. ' '' → logprob: -6.7533745765686035
    4. 'c' → logprob: -7.7533745765686035
    5. ' str' → logprob: -9.878375053405762
    6. ' c' → logprob: -10.878375053405762
    7. ''s' → logprob: -12.753375053405762
    8. 'return' → logprob: -13.878375053405762
    9. ' ' → logprob: -15.503375053405762
    10. ' ' → logprob: -15.753375053405762

Token 309: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6613061428070068
    2. '       ' → logprob: -1.4113061428070068
    3. ':' → logprob: -2.161306142807007
    4. 'def' → logprob: -2.661306142807007
    5. 'return' → logprob: -3.411306142807007
    6. '   ' → logprob: -4.536306381225586
    7. ':return' → logprob: -4.911306381225586
    8. '):
' → logprob: -6.536306381225586
    9. '->' → logprob: -6.911306381225586
    10. '():
' → logprob: -7.411306381225586

Token 310: '       ' (ID: 309)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1416841745376587
    2. '       ' → logprob: -2.516684055328369
    3. ' '' → logprob: -3.266684055328369
    4. 'return' → logprob: -4.766684055328369
    5. ' return' → logprob: -5.391684055328369
    6. '   ' → logprob: -8.891684532165527
    7. ' c' → logprob: -11.141684532165527
    8. '"' → logprob: -12.141684532165527
    9. 'c' → logprob: -12.516684532165527
    10. '	return' → logprob: -12.891684532165527

Token 311: ' return' (ID: 622)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.3676733690081164e-05
    2. 'return' (adapté à ' return') → logprob: -10.75002384185791
    3. ' '' → logprob: -13.62502384185791
    4. 'c' → logprob: -14.37502384185791
    5. ' return' → logprob: -15.50002384185791
    6. '       ' → logprob: -16.375022888183594
    7. ' c' → logprob: -17.250022888183594
    8. '   ' → logprob: -17.750022888183594
    9. '"' → logprob: -18.875022888183594
    10. ''s' → logprob: -19.500022888183594

Token 312: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005532711511477828
    2. ' '' → logprob: -7.500553131103516
    3. 'c' → logprob: -16.375553131103516
    4. ' c' → logprob: -16.500553131103516
    5. '"' → logprob: -17.500553131103516
    6. ' ' → logprob: -18.125553131103516
    7. '   ' → logprob: -18.500553131103516
    8. ''s' → logprob: -18.500553131103516
    9. ''C' → logprob: -18.625553131103516
    10. '       ' → logprob: -19.375553131103516

Token 313: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004307884373702109
    2. ''' → logprob: -7.750430583953857
    3. ' c' → logprob: -16.375431060791016
    4. '"' → logprob: -18.625431060791016
    5. '	c' → logprob: -18.625431060791016
    6. 'с' → logprob: -19.375431060791016
    7. '
' → logprob: -20.250431060791016
    8. ')c' → logprob: -20.250431060791016
    9. '`' → logprob: -20.750431060791016
    10. '.c' → logprob: -20.875431060791016

Token 314: ''


' (ID: 58266)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0701940655708313
    2. '<|end|>' → logprob: -2.6951940059661865
    3. ''
' → logprob: -8.820194244384766
    4. '<|end|>' → logprob: -9.945194244384766
    5. '"' → logprob: -10.445194244384766
    6. ''#' → logprob: -11.195194244384766
    7. '```' → logprob: -12.570194244384766
    8. ''class' → logprob: -13.445194244384766
    9. ''


' → logprob: -13.445194244384766
    10. '`' → logprob: -13.570194244384766

Token 315: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.60414821645827e-06
    2. '
' → logprob: -12.500004768371582
    3. ' class' → logprob: -14.625004768371582
    4. '<class' → logprob: -14.875004768371582
    5. '"class' → logprob: -18.000003814697266
    6. '```' → logprob: -18.625003814697266
    7. '-class' → logprob: -18.750003814697266
    8. ''class' → logprob: -19.250003814697266
    9. '  
' → logprob: -19.625003814697266
    10. '

' → logprob: -19.750003814697266

Token 316: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.07889275997877121
    2. ' X' → logprob: -2.578892707824707
    3. 'class' → logprob: -13.078892707824707
    4. ' ' → logprob: -14.328892707824707
    5. 'x' → logprob: -15.828892707824707
    6. '	X' → logprob: -16.453893661499023
    7. ' class' → logprob: -16.953893661499023
    8. 'I' → logprob: -18.203893661499023
    9. '>X' → logprob: -18.203893661499023
    10. '  ' → logprob: -18.453893661499023

Token 317: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -3.173704271830502e-06
    2. 'MC' → logprob: -12.87500286102295
    3. '(' → logprob: -14.75000286102295
    4. 'class' → logprob: -16.000003814697266
    5. '```' → logprob: -17.250003814697266
    6. '(
' → logprob: -17.875003814697266
    7. '(m' → logprob: -18.500003814697266
    8. ' (' → logprob: -18.625003814697266
    9. '(C' → logprob: -18.625003814697266
    10. '   ' → logprob: -19.000003814697266

Token 318: 'CX' (ID: 98640)
  Prédit: 'CX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CX' → logprob: -0.0018912686500698328
    2. '@property' → logprob: -6.376891136169434
    3. '(C' → logprob: -9.251891136169434
    4. 'C' → logprob: -10.001891136169434
    5. 'property' → logprob: -10.501891136169434
    6. 'class' → logprob: -11.626891136169434
    7. '@' → logprob: -12.626891136169434
    8. '(M' → logprob: -13.126891136169434
    9. 'cx' → logprob: -13.251891136169434
    10. '(' → logprob: -13.501891136169434

Token 319: 'IL' (ID: 2654)
  Prédit: 'IL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -5.383526149671525e-05
    2. 'I' → logprob: -10.125053405761719
    3. 'class' → logprob: -11.750053405761719
    4. 'Letter' → logprob: -13.250053405761719
    5. '	IL' → logprob: -14.000053405761719
    6. '_IL' → logprob: -14.125053405761719
    7. 'il' → logprob: -14.625053405761719
    8. 'L' → logprob: -14.875053405761719
    9. 'ILE' → logprob: -14.875053405761719
    10. 'Letters' → logprob: -15.500053405761719

Token 320: 'etter' (ID: 30747)
  Prédit: 'etter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etter' → logprob: -0.004670899827033281
    2. 'Letter' → logprob: -5.379671096801758
    3. 'letter' → logprob: -11.004671096801758
    4. '(' → logprob: -12.004671096801758
    5. 'Setter' → logprob: -12.004671096801758
    6. '{' → logprob: -12.629671096801758
    7. 'et' → logprob: -13.004671096801758
    8. 'eter' → logprob: -13.129671096801758
    9. 'L' → logprob: -13.129671096801758
    10. '
' → logprob: -13.379671096801758

Token 321: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007848530076444149
    2. '):' → logprob: -5.257848739624023
    3. '   ' → logprob: -6.632848739624023
    4. '(M' → logprob: -6.882848739624023
    5. '):
' → logprob: -9.382848739624023
    6. '(' → logprob: -9.757848739624023
    7. ':' → logprob: -9.882848739624023
    8. ':
' → logprob: -9.882848739624023
    9. ')' → logprob: -11.382848739624023
    10. '):

' → logprob: -12.632848739624023

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005341547541320324
    2. '@property' → logprob: -5.255341529846191
    3. ' @' → logprob: -9.380341529846191
    4. 'class' → logprob: -11.005341529846191
    5. '@' → logprob: -13.005341529846191
    6. '```' → logprob: -13.380341529846191
    7. ' class' → logprob: -13.880341529846191
    8. ' ' → logprob: -14.130341529846191
    9. '@class' → logprob: -15.380341529846191
    10. '  ' → logprob: -15.505341529846191

Token 323: ' @' (ID: 759)
  Prédit: '@property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@property' → logprob: -7.5649528298527e-05
    2. '   ' → logprob: -9.500075340270996
    3. ' @' → logprob: -14.375075340270996
    4. '@' (adapté à ' @') → logprob: -15.875075340270996
    5. '@class' → logprob: -18.625076293945312
    6. '@click' → logprob: -19.375076293945312
    7. 'property' → logprob: -20.250076293945312
    8. '@param' → logprob: -20.750076293945312
    9. '@pytest' → logprob: -20.750076293945312
    10. '@login' → logprob: -20.750076293945312

Token 324: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -3.547789674485102e-05
    2. '@property' → logprob: -10.250035285949707
    3. ' property' → logprob: -17.750036239624023
    4. '.property' → logprob: -21.875036239624023
    5. '_property' → logprob: -21.875036239624023
    6. '	property' → logprob: -22.250036239624023
    7. 'Property' → logprob: -23.125036239624023
    8. 'PROPERTY' → logprob: -23.500036239624023
    9. 'properties' → logprob: -24.375036239624023
    10. '-property' → logprob: -24.625036239624023

Token 325: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47468990087509155
    2. 'def' → logprob: -0.9746899008750916
    3. ' def' → logprob: -7.474689960479736
    4. '
' → logprob: -10.224689483642578
    5. '	def' → logprob: -12.849689483642578
    6. '@property' → logprob: -12.974689483642578
    7. ' ' → logprob: -13.099689483642578
    8. '       ' → logprob: -13.724689483642578
    9. '  ' → logprob: -13.974689483642578
    10. '    ' → logprob: -15.724689483642578

Token 326: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.91732100979425e-05
    2. ' def' → logprob: -10.250039100646973
    3. '   ' → logprob: -12.500039100646973
    4. '	def' → logprob: -17.37504005432129
    5. '
' → logprob: -19.75004005432129
    6. ' ' → logprob: -19.75004005432129
    7. '@' → logprob: -21.00004005432129
    8. '@property' → logprob: -21.62504005432129
    9. '  ' → logprob: -21.75004005432129
    10. ':def' → logprob: -21.87504005432129

Token 327: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.842555426876061e-06
    2. ' def' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.6250057220459
    4. '	def' → logprob: -21.3750057220459
    5. '
' → logprob: -22.2500057220459
    6. ' ' → logprob: -23.0000057220459
    7. '_def' → logprob: -24.3750057220459
    8. '  ' → logprob: -24.3750057220459
    9. ':def' → logprob: -24.3750057220459
    10. '```' → logprob: -24.6250057220459

Token 328: ' letter' (ID: 10263)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00041732576210051775
    2. ' str' → logprob: -8.125417709350586
    3. 'letter' → logprob: -9.125417709350586
    4. 'stri' → logprob: -12.625417709350586
    5. 'def' → logprob: -12.750417709350586
    6. 'x' → logprob: -13.250417709350586
    7. 'stra' → logprob: -13.625417709350586
    8. 's' → logprob: -13.750417709350586
    9. 'property' → logprob: -14.375417709350586
    10. ' letter' → logprob: -15.500417709350586

Token 329: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1365504413843155
    2. 'self' → logprob: -3.1365504264831543
    3. 'def' → logprob: -3.3865504264831543
    4. ')' → logprob: -3.5115504264831543
    5. '   ' → logprob: -4.386550426483154
    6. '       ' → logprob: -6.761550426483154
    7. 'return' → logprob: -6.761550426483154
    8. ' ' → logprob: -6.886550426483154
    9. ' self' → logprob: -6.886550426483154
    10. '->' → logprob: -7.386550426483154

Token 330: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001600347168277949
    2. '   ' → logprob: -9.875160217285156
    3. 'def' → logprob: -10.375160217285156
    4. '')' → logprob: -10.875160217285156
    5. '       ' → logprob: -11.625160217285156
    6. ' ' → logprob: -12.000160217285156
    7. ')->' → logprob: -12.000160217285156
    8. 'self' → logprob: -12.250160217285156
    9. '```' → logprob: -12.375160217285156
    10. '`' → logprob: -12.500160217285156

Token 331: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6765603423118591
    2. ' ->' → logprob: -1.051560401916504
    3. ' ' → logprob: -2.551560401916504
    4. '->' → logprob: -4.051560401916504
    5. '   ' → logprob: -4.301560401916504
    6. ' def' → logprob: -4.676560401916504
    7. ' return' → logprob: -5.176560401916504
    8. '=' → logprob: -5.801560401916504
    9. ' =' → logprob: -5.926560401916504
    10. 'def' → logprob: -6.051560401916504

Token 332: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.015661723911762238
    2. ' str' → logprob: -4.515661716461182
    3. ''x' → logprob: -5.765661716461182
    4. ''s' → logprob: -7.015661716461182
    5. 'x' → logprob: -7.640661716461182
    6. ''' → logprob: -10.14066219329834
    7. ' '' → logprob: -10.39066219329834
    8. ' x' → logprob: -11.01566219329834
    9. ':str' → logprob: -13.14066219329834
    10. 's' → logprob: -14.01566219329834

Token 333: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6412055492401123
    2. '       ' → logprob: -0.8912055492401123
    3. ':
' → logprob: -3.8912055492401123
    4. '   ' → logprob: -4.391205787658691
    5. 'return' → logprob: -4.766205787658691
    6. ')' → logprob: -4.891205787658691
    7. ' ->' → logprob: -5.891205787658691
    8. 'def' → logprob: -6.016205787658691
    9. ' ' → logprob: -6.141205787658691
    10. ' return' → logprob: -6.391205787658691

Token 334: '       ' (ID: 309)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.2435910999774933
    2. '       ' → logprob: -2.243591070175171
    3. ''' → logprob: -2.368591070175171
    4. 'return' → logprob: -4.36859130859375
    5. ' '' → logprob: -6.49359130859375
    6. 'x' → logprob: -6.99359130859375
    7. '   ' → logprob: -7.36859130859375
    8. ' return' → logprob: -7.49359130859375
    9. ' x' → logprob: -9.74359130859375
    10. ' ' → logprob: -10.11859130859375

Token 335: ' return' (ID: 622)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0006701439269818366
    2. 'return' (adapté à ' return') → logprob: -7.500669956207275
    3. 'x' → logprob: -9.750670433044434
    4. ''' → logprob: -10.500670433044434
    5. ' '' → logprob: -10.625670433044434
    6. ' return' → logprob: -12.875670433044434
    7. '   ' → logprob: -13.000670433044434
    8. '       ' → logprob: -14.125670433044434
    9. ' ' → logprob: -14.625670433044434
    10. ' x' → logprob: -15.000670433044434

Token 336: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.58394455909729
    2. ''' → logprob: -0.83394455909729
    3. ' '' → logprob: -4.833944320678711
    4. 'x' → logprob: -11.708944320678711
    5. ' ' → logprob: -11.958944320678711
    6. ' x' → logprob: -13.208944320678711
    7. '`' → logprob: -13.708944320678711
    8. '   ' → logprob: -15.458944320678711
    9. '"x' → logprob: -16.45894432067871
    10. '  ' → logprob: -16.45894432067871

Token 337: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3132653534412384
    2. ''x' → logprob: -1.313265323638916
    3. '"x' → logprob: -13.313265800476074
    4. ' x' → logprob: -13.313265800476074
    5. ''' → logprob: -15.188265800476074
    6. '	x' → logprob: -17.313264846801758
    7. '`' → logprob: -18.063264846801758
    8. ' '' → logprob: -19.438264846801758
    9. '_x' → logprob: -19.813264846801758
    10. '$x' → logprob: -20.188264846801758

Token 338: ''


' (ID: 58266)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 339: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -3.8889261304575484e-06
    2. '<class' → logprob: -13.250003814697266
    3. '```' → logprob: -13.750003814697266
    4. ' class' → logprob: -14.500003814697266
    5. '"class' → logprob: -14.875003814697266
    6. ''class' → logprob: -17.125003814697266
    7. '	class' → logprob: -19.500003814697266
    8. '
' → logprob: -19.500003814697266
    9. 'c' → logprob: -20.125003814697266
    10. '@class' → logprob: -20.250003814697266

Token 340: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.018150413408875465
    2. ' I' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.143150329589844
    4. 'i' → logprob: -15.643150329589844
    5. '	I' → logprob: -16.018150329589844
    6. 'class' → logprob: -16.643150329589844
    7. '`' → logprob: -18.393150329589844
    8. '
' → logprob: -18.893150329589844
    9. '"I' → logprob: -19.018150329589844
    10. '_I' → logprob: -19.518150329589844

Token 341: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.00029625516617670655
    2. '(' → logprob: -8.125296592712402
    3. '(
' → logprob: -16.250295639038086
    4. '(m' → logprob: -17.750295639038086
    5. '(C' → logprob: -17.750295639038086
    6. '```' → logprob: -17.875295639038086
    7. '(mc' → logprob: -18.250295639038086
    8. ' (' → logprob: -18.625295639038086
    9. '(

' → logprob: -18.750295639038086
    10. '(`' → logprob: -18.875295639038086

Token 342: 'CX' (ID: 98640)
  Prédit: 'CX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CX' → logprob: -0.02689080685377121
    2. '(M' → logprob: -4.151890754699707
    3. 'MC' → logprob: -4.776890754699707
    4. '(C' → logprob: -6.401890754699707
    5. 'C' → logprob: -7.526890754699707
    6. '@property' → logprob: -10.276890754699707
    7. '   ' → logprob: -10.401890754699707
    8. 'class' → logprob: -10.526890754699707
    9. 'cx' → logprob: -11.151890754699707
    10. '@' → logprob: -11.151890754699707

Token 343: 'IL' (ID: 2654)
  Prédit: 'IL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.005892056506127119
    2. 'I' → logprob: -5.630892276763916
    3. '@' → logprob: -7.380892276763916
    4. '@property' → logprob: -7.505892276763916
    5. 'Letter' → logprob: -8.755891799926758
    6. 'X' → logprob: -8.880891799926758
    7. '_IL' → logprob: -9.130891799926758
    8. 'property' → logprob: -9.130891799926758
    9. '_i' → logprob: -9.255891799926758
    10. 'ILE' → logprob: -9.505891799926758

Token 344: 'etter' (ID: 30747)
  Prédit: 'etter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etter' → logprob: -0.0059747775085270405
    2. 'Letter' → logprob: -5.130974769592285
    3. 'eter' → logprob: -10.880974769592285
    4. 'letter' → logprob: -11.130974769592285
    5. 'et' → logprob: -12.755974769592285
    6. '(' → logprob: -13.630974769592285
    7. 'Setter' → logprob: -13.755974769592285
    8. 'e' → logprob: -13.880974769592285
    9. 'ET' → logprob: -14.005974769592285
    10. '{' → logprob: -14.130974769592285

Token 345: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006364685483276844
    2. '):' → logprob: -5.256364822387695
    3. '   ' → logprob: -7.006364822387695
    4. ')' → logprob: -8.631364822387695
    5. '):
' → logprob: -11.006364822387695
    6. ')
' → logprob: -11.756364822387695
    7. '(M' → logprob: -12.006364822387695
    8. '(' → logprob: -12.506364822387695
    9. ' ' → logprob: -12.881364822387695
    10. '):

' → logprob: -12.881364822387695

Token 346: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013315484393388033
    2. '@property' → logprob: -6.751331329345703
    3. ' @' → logprob: -8.751331329345703
    4. '@' → logprob: -13.876331329345703
    5. '  ' → logprob: -14.126331329345703
    6. ' ' → logprob: -14.501331329345703
    7. '```' → logprob: -15.126331329345703
    8. '
' → logprob: -15.251331329345703
    9. '    ' → logprob: -15.376331329345703
    10. '    
' → logprob: -16.251331329345703

Token 347: ' @' (ID: 759)
  Prédit: '@property'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@property' → logprob: -6.825890159234405e-05
    2. '   ' → logprob: -9.750068664550781
    3. ' @' → logprob: -12.000068664550781
    4. '@' (adapté à ' @') → logprob: -12.625068664550781
    5. '@login' → logprob: -16.25006866455078
    6. '@class' → logprob: -16.37506866455078
    7. '@index' → logprob: -16.50006866455078
    8. '@click' → logprob: -16.50006866455078
    9. '@param' → logprob: -17.25006866455078
    10. '@return' → logprob: -17.62506866455078

Token 348: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.00033546582562848926
    2. '@property' → logprob: -8.000335693359375
    3. '_property' → logprob: -19.250335693359375
    4. ' property' → logprob: -20.000335693359375
    5. '.property' → logprob: -20.125335693359375
    6. '	property' → logprob: -20.750335693359375
    7. 'properties' → logprob: -21.375335693359375
    8. 'PROPERTY' → logprob: -22.875335693359375
    9. '```' → logprob: -23.875335693359375
    10. 'Property' → logprob: -24.250335693359375

Token 349: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002449138555675745
    2. '   ' → logprob: -6.377449035644531
    3. ' def' → logprob: -7.252449035644531
    4. '
' → logprob: -10.252449035644531
    5. '	def' → logprob: -13.377449035644531
    6. '<|end|>' → logprob: -14.377449035644531
    7. ' ' → logprob: -14.502449035644531
    8. '  ' → logprob: -15.877449035644531
    9. '       ' → logprob: -16.50244903564453
    10. '    
' → logprob: -17.25244903564453

Token 350: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.452426608419046e-05
    2. ' def' → logprob: -10.50003433227539
    3. '   ' → logprob: -11.87503433227539
    4. '	def' → logprob: -17.62503433227539
    5. '
' → logprob: -18.12503433227539
    6. ' ' → logprob: -20.37503433227539
    7. '_def' → logprob: -21.37503433227539
    8. '<|end|>' → logprob: -21.62503433227539
    9. ':def' → logprob: -21.62503433227539
    10. '@property' → logprob: -21.75003433227539

Token 351: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.339278580620885e-06
    2. ' def' → logprob: -13.000001907348633
    3. '	def' → logprob: -22.250001907348633
    4. '_def' → logprob: -23.625001907348633
    5. '   ' → logprob: -23.750001907348633
    6. '
' → logprob: -23.875001907348633
    7. ':def' → logprob: -24.250001907348633
    8. '-def' → logprob: -24.625001907348633
    9. 'return' → logprob: -26.250001907348633
    10. '```' → logprob: -26.375001907348633

Token 352: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.014759561978280544
    2. ' letter' → logprob: -4.264759540557861
    3. 'str' → logprob: -7.514759540557861
    4. 'def' → logprob: -10.51476001739502
    5. 'property' → logprob: -12.13976001739502
    6. '_letter' → logprob: -12.38976001739502
    7. ' str' → logprob: -12.88976001739502
    8. 's' → logprob: -13.51476001739502
    9. '(letter' → logprob: -13.51476001739502
    10. ' def' → logprob: -13.88976001739502

Token 353: '(self' (ID: 2402)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8020258545875549
    2. '(self' → logprob: -1.3020257949829102
    3. ')' → logprob: -2.42702579498291
    4. '(' → logprob: -2.80202579498291
    5. ' def' → logprob: -3.42702579498291
    6. '->' → logprob: -3.55202579498291
    7. '   ' → logprob: -4.05202579498291
    8. ' ' → logprob: -4.30202579498291
    9. ' ->' → logprob: -4.92702579498291
    10. '<|end|>' → logprob: -5.30202579498291

Token 354: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00239348690956831
    2. 'def' → logprob: -7.12739372253418
    3. '   ' → logprob: -7.25239372253418
    4. '>' → logprob: -8.37739372253418
    5. '')' → logprob: -8.62739372253418
    6. ''' → logprob: -9.87739372253418
    7. '()' → logprob: -10.12739372253418
    8. 'return' → logprob: -10.25239372253418
    9. '```' → logprob: -10.25239372253418
    10. ')->' → logprob: -10.37739372253418

Token 355: ' ->' (ID: 2747)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.816191554069519
    2. ' def' → logprob: -1.691191554069519
    3. ')' → logprob: -1.816191554069519
    4. '->' → logprob: -2.1911916732788086
    5. ' ->' → logprob: -3.1911916732788086
    6. '   ' → logprob: -3.3161916732788086
    7. ' return' → logprob: -4.941191673278809
    8. '       ' → logprob: -4.941191673278809
    9. 'return' → logprob: -5.691191673278809
    10. ' ' → logprob: -7.066191673278809

Token 356: ' str' (ID: 989)
  Prédit: ''i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''i' → logprob: -0.25637364387512207
    2. 'str' → logprob: -2.006373643875122
    3. ' '' → logprob: -2.881373643875122
    4. ''' → logprob: -4.131373405456543
    5. ' str' → logprob: -4.256373405456543
    6. ''s' → logprob: -6.006373405456543
    7. 'i' → logprob: -6.131373405456543
    8. ' i' → logprob: -7.381373405456543
    9. 'stri' → logprob: -9.881373405456543
    10. '‘i' → logprob: -10.881373405456543

Token 357: ':
' (ID: 734)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2273730039596558
    2. '       ' → logprob: -1.4773730039596558
    3. '   ' → logprob: -1.8523730039596558
    4. ':' → logprob: -1.8523730039596558
    5. ' ->' → logprob: -2.8523731231689453
    6. '()' → logprob: -3.8523731231689453
    7. '(' → logprob: -4.227373123168945
    8. ':
' → logprob: -4.477373123168945
    9. '<|end|>' → logprob: -4.852373123168945
    10. ' ' → logprob: -4.852373123168945

Token 358: '       ' (ID: 309)
  Prédit: ''i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''i' → logprob: -0.046459026634693146
    2. ''' → logprob: -3.2964589595794678
    3. ' '' → logprob: -4.796459197998047
    4. '       ' → logprob: -9.171459197998047
    5. 'i' → logprob: -12.296459197998047
    6. ' i' → logprob: -12.546459197998047
    7. '   ' → logprob: -12.546459197998047
    8. '‘i' → logprob: -12.671459197998047
    9. ''x' → logprob: -13.796459197998047
    10. ''s' → logprob: -14.171459197998047

Token 359: ' return' (ID: 622)
  Prédit: ''i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''i' → logprob: -0.0007896171882748604
    2. ' '' → logprob: -7.500789642333984
    3. ''' → logprob: -8.500789642333984
    4. 'i' → logprob: -11.000789642333984
    5. '‘i' → logprob: -11.875789642333984
    6. ''s' → logprob: -13.000789642333984
    7. '`' → logprob: -13.125789642333984
    8. '"' → logprob: -13.250789642333984
    9. ' i' → logprob: -13.500789642333984
    10. ''x' → logprob: -14.250789642333984

Token 360: ' '' (ID: 461)
  Prédit: ''i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''i' → logprob: -0.25715547800064087
    2. ' '' → logprob: -1.507155418395996
    3. ''' → logprob: -5.257155418395996
    4. '‘i' → logprob: -13.507155418395996
    5. ' ' → logprob: -14.382155418395996
    6. '"' → logprob: -16.007156372070312
    7. ''I' → logprob: -16.132156372070312
    8. ''u' → logprob: -16.132156372070312
    9. 'i' → logprob: -16.507156372070312
    10. ' ' → logprob: -16.632156372070312

Token 361: 'i' (ID: 72)
  Prédit: ''i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''i' → logprob: -0.006717267446219921
    2. 'i' → logprob: -5.006717205047607
    3. '‘i' → logprob: -13.256717681884766
    4. '"' → logprob: -16.631717681884766
    5. ' i' → logprob: -16.881717681884766
    6. '’i' → logprob: -17.631717681884766
    7. ''' → logprob: -18.131717681884766
    8. '_i' → logprob: -18.256717681884766
    9. '`' → logprob: -18.381717681884766
    10. '	i' → logprob: -19.006717681884766

Token 362: ''


' (ID: 58266)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17862650752067566
    2. '<|end|>' → logprob: -2.428626537322998
    3. '')' → logprob: -2.678626537322998
    4. ')' → logprob: -5.678626537322998
    5. '"' → logprob: -6.303626537322998
    6. '")' → logprob: -8.05362606048584
    7. '```' → logprob: -8.05362606048584
    8. '
' → logprob: -8.05362606048584
    9. '<|end|>' → logprob: -8.05362606048584
    10. ''
' → logprob: -9.67862606048584

Token 363: '_LE' (ID: 17205)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0028267467860132456
    2. 'def' → logprob: -5.877826690673828
    3. ' class' → logprob: -11.502826690673828
    4. 'from' → logprob: -12.377826690673828
    5. 'T' → logprob: -13.752826690673828
    6. 'M' → logprob: -13.877826690673828
    7. '```' → logprob: -14.377826690673828
    8. '#' → logprob: -14.752826690673828
    9. 'classmethod' → logprob: -14.877826690673828
    10. 'clas' → logprob: -15.127826690673828

Token 364: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.00037359268753789365
    2. 'TT' → logprob: -8.625373840332031
    3. '```' → logprob: -10.000373840332031
    4. 'TER' → logprob: -10.000373840332031
    5. 'ET' → logprob: -10.375373840332031
    6. '_' → logprob: -10.875373840332031
    7. 'TERS' → logprob: -11.375373840332031
    8. '_T' → logprob: -11.875373840332031
    9. 'LETTER' → logprob: -12.250373840332031
    10. '`' → logprob: -12.375373840332031

Token 365: 'TER' (ID: 6147)
  Prédit: 'TERS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TERS' → logprob: -0.940509021282196
    2. 'TER' → logprob: -1.1905090808868408
    3. 'T' → logprob: -1.3155090808868408
    4. 'ET' → logprob: -3.440509080886841
    5. '```' → logprob: -6.315508842468262
    6. 'ETERS' → logprob: -7.440508842468262
    7. '_' → logprob: -7.440508842468262
    8. 'ETER' → logprob: -7.815508842468262
    9. 'ER' → logprob: -7.940508842468262
    10. '``' → logprob: -8.690508842468262

Token 366: '_CLASSES' (ID: 171569)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2331077605485916
    2. '_CLASSES' → logprob: -1.9831078052520752
    3. '_ORDER' → logprob: -3.483107805252075
    4. '_S' → logprob: -3.483107805252075
    5. '_MAP' → logprob: -6.108107566833496
    6. '_TO' → logprob: -6.608107566833496
    7. '_SEQUENCE' → logprob: -7.108107566833496
    8. '_VALUES' → logprob: -7.108107566833496
    9. '_TYPES' → logprob: -7.358107566833496
    10. '_' → logprob: -7.483107566833496

Token 367: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00038348292582668364
    2. '=' → logprob: -8.000383377075195
    3. ':' → logprob: -10.125383377075195
    4. ' :' → logprob: -12.250383377075195
    5. ' =[' → logprob: -12.875383377075195
    6. '[' → logprob: -15.375383377075195
    7. ' =
' → logprob: -15.875383377075195
    8. ',' → logprob: -16.500383377075195
    9. ' ' → logprob: -16.750383377075195
    10. ' ={' → logprob: -16.875383377075195

Token 368: ' {
' (ID: 405)
  Prédit: '[M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[M' → logprob: -0.4389917254447937
    2. '{'' → logprob: -2.3139917850494385
    3. '[' → logprob: -2.6889917850494385
    4. '{
' → logprob: -2.6889917850494385
    5. '{' → logprob: -2.8139917850494385
    6. ' [' → logprob: -2.9389917850494385
    7. '[m' → logprob: -5.688991546630859
    8. ' {'' → logprob: -6.188991546630859
    9. '{"' → logprob: -7.438991546630859
    10. ' {
' → logprob: -7.563991546630859

Token 369: '   ' (ID: 271)
  Prédit: ''m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''m' → logprob: -0.08006051182746887
    2. '   ' → logprob: -2.5800604820251465
    3. ' '' → logprob: -6.8300604820251465
    4. ''' → logprob: -10.580060958862305
    5. 'm' → logprob: -10.955060958862305
    6. ' ' → logprob: -11.330060958862305
    7. ''M' → logprob: -11.830060958862305
    8. ''a' → logprob: -11.955060958862305
    9. ''l' → logprob: -12.830060958862305
    10. '       ' → logprob: -12.955060958862305

Token 370: ' '' (ID: 461)
  Prédit: ''m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''m' → logprob: -0.00013202552509028465
    2. '   ' → logprob: -10.000131607055664
    3. 'm' → logprob: -10.125131607055664
    4. ' '' → logprob: -10.375131607055664
    5. '"' → logprob: -11.625131607055664
    6. ''l' → logprob: -13.875131607055664
    7. ''M' → logprob: -14.000131607055664
    8. ' m' → logprob: -14.250131607055664
    9. ''a' → logprob: -14.375131607055664
    10. ' ' → logprob: -14.500131607055664

Token 371: 'm' (ID: 76)
  Prédit: ''m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''m' → logprob: -0.47437718510627747
    2. 'm' → logprob: -0.9743771553039551
    3. ''i' → logprob: -8.224377632141113
    4. '"' → logprob: -10.974377632141113
    5. ''' → logprob: -12.349377632141113
    6. 'i' → logprob: -12.974377632141113
    7. '	m' → logprob: -13.349377632141113
    8. '{'' → logprob: -13.849377632141113
    9. ''a' → logprob: -14.474377632141113
    10. ''s' → logprob: -14.474377632141113

Token 372: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.000343210413120687
    2. ''' → logprob: -8.000343322753906
    3. '':'' → logprob: -12.000343322753906
    4. ''M' → logprob: -13.625343322753906
    5. ''m' → logprob: -16.000343322753906
    6. '":' → logprob: -16.250343322753906
    7. ':' → logprob: -16.500343322753906
    8. ' ':' → logprob: -16.750343322753906
    9. ''>' → logprob: -17.625343322753906
    10. ''):' → logprob: -17.875343322753906

Token 373: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.04858839511871338
    2. ' M' → logprob: -3.048588275909424
    3. ' ' → logprob: -14.423588752746582
    4. '   ' → logprob: -14.798588752746582
    5. '	M' → logprob: -17.048587799072266
    6. '  ' → logprob: -18.298587799072266
    7. '    ' → logprob: -18.548587799072266
    8. '<M' → logprob: -19.048587799072266
    9. ' ' → logprob: -19.423587799072266
    10. 'class' → logprob: -19.673587799072266

Token 374: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02325829118490219
    2. ',
' → logprob: -3.7732582092285156
    3. '   ' → logprob: -12.398258209228516
    4. '',' → logprob: -12.648258209228516
    5. ' ,' → logprob: -13.273258209228516
    6. ',
' → logprob: -13.523258209228516
    7. ',

' → logprob: -13.773258209228516
    8. ','' → logprob: -13.898258209228516
    9. ' ,
' → logprob: -15.398258209228516
    10. ',m' → logprob: -15.648258209228516

Token 375: '   ' (ID: 271)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -4.8351892473874614e-05
    2. '   ' → logprob: -10.000048637390137
    3. ' '' → logprob: -12.875048637390137
    4. ' ' → logprob: -15.500048637390137
    5. 'c' → logprob: -16.87504768371582
    6. '
' → logprob: -17.37504768371582
    7. ' c' → logprob: -18.12504768371582
    8. '       ' → logprob: -18.50004768371582
    9. '  ' → logprob: -18.62504768371582
    10. ''x' → logprob: -18.62504768371582

Token 376: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' (adapté à ' '') → logprob: -2.2200749754119897e-06
    2. '   ' → logprob: -13.500001907348633
    3. ' '' → logprob: -14.500001907348633
    4. ' ' → logprob: -16.250001907348633
    5. 'c' → logprob: -16.625001907348633
    6. '
' → logprob: -17.000001907348633
    7. ''x' → logprob: -17.125001907348633
    8. '"' → logprob: -17.500001907348633
    9. '       ' → logprob: -18.000001907348633
    10. ''i' → logprob: -18.625001907348633

Token 377: 'c' (ID: 66)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1602286994457245
    2. 'c' → logprob: -1.9102287292480469
    3. ' c' → logprob: -13.035228729248047
    4. '	c' → logprob: -14.285228729248047
    5. ' '' → logprob: -15.160228729248047
    6. ''C' → logprob: -15.160228729248047
    7. '   ' → logprob: -15.285228729248047
    8. ''x' → logprob: -15.410228729248047
    9. '"' → logprob: -15.535228729248047
    10. '
' → logprob: -15.910228729248047

Token 378: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0009233691962435842
    2. ':' → logprob: -7.500923156738281
    3. ''' → logprob: -8.000923156738281
    4. '':'' → logprob: -10.500923156738281
    5. ' ':' → logprob: -12.250923156738281
    6. '":' → logprob: -14.375923156738281
    7. ''s' → logprob: -14.500923156738281
    8. '   ' → logprob: -14.625923156738281
    9. ''x' → logprob: -14.875923156738281
    10. '':
' → logprob: -15.500923156738281

Token 379: ' C' (ID: 363)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.25173160433769226
    2. ' X' → logprob: -1.8767316341400146
    3. 'C' → logprob: -3.0017316341400146
    4. ' C' → logprob: -4.0017313957214355
    5. 'x' → logprob: -7.2517313957214355
    6. 'c' → logprob: -8.501731872558594
    7. ' ' → logprob: -8.751731872558594
    8. ' x' → logprob: -8.876731872558594
    9. '   ' → logprob: -9.251731872558594
    10. ''' → logprob: -9.626731872558594

Token 380: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06307564675807953
    2. ',
' → logprob: -2.813075542449951
    3. '   ' → logprob: -6.938075542449951
    4. ','' → logprob: -9.93807601928711
    5. ''x' → logprob: -10.06307601928711
    6. ',
' → logprob: -11.18807601928711
    7. '}' → logprob: -12.18807601928711
    8. ''s' → logprob: -12.31307601928711
    9. ',x' → logprob: -12.56307601928711
    10. ' ' → logprob: -12.56307601928711

Token 381: '   ' (ID: 271)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.00015800826076883823
    2. ''' → logprob: -9.250158309936523
    3. '   ' → logprob: -10.000158309936523
    4. ' '' → logprob: -11.250158309936523
    5. ' ' → logprob: -12.875158309936523
    6. 'x' → logprob: -14.750158309936523
    7. '
' → logprob: -15.625158309936523
    8. '`' → logprob: -16.750158309936523
    9. '       ' → logprob: -17.000158309936523
    10. '	x' → logprob: -17.000158309936523

Token 382: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -2.3557529857498594e-05
    2. 'x' → logprob: -11.37502384185791
    3. ' '' → logprob: -11.62502384185791
    4. ' ' → logprob: -13.50002384185791
    5. '   ' → logprob: -14.37502384185791
    6. ''' (adapté à ' '') → logprob: -15.12502384185791
    7. ' x' → logprob: -15.25002384185791
    8. '
' → logprob: -15.50002384185791
    9. '"x' → logprob: -15.62502384185791
    10. '`' → logprob: -16.500022888183594

Token 383: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.008621666580438614
    2. 'x' → logprob: -4.758621692657471
    3. ' x' → logprob: -12.758621215820312
    4. '"x' → logprob: -13.008621215820312
    5. ' ' → logprob: -14.633621215820312
    6. ''' → logprob: -14.883621215820312
    7. '   ' → logprob: -15.008621215820312
    8. ' '' → logprob: -15.008621215820312
    9. '	x' → logprob: -15.133621215820312
    10. '`' → logprob: -16.508621215820312

Token 384: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.000215457082958892
    2. ''' → logprob: -8.750215530395508
    3. ''x' → logprob: -10.375215530395508
    4. ' ':' → logprob: -11.250215530395508
    5. ':' → logprob: -12.500215530395508
    6. '':'' → logprob: -12.625215530395508
    7. 'x' → logprob: -12.750215530395508
    8. '":' → logprob: -14.125215530395508
    9. ''i' → logprob: -14.500215530395508
    10. '   ' → logprob: -14.875215530395508

Token 385: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0031790214125066996
    2. ' X' → logprob: -5.75317907333374
    3. ' ' → logprob: -14.003178596496582
    4. 'x' → logprob: -15.753178596496582
    5. '   ' → logprob: -15.753178596496582
    6. '  ' → logprob: -16.2531795501709
    7. '	X' → logprob: -16.2531795501709
    8. '    ' → logprob: -19.2531795501709
    9. '>X' → logprob: -19.6281795501709
    10. 'I' → logprob: -20.1281795501709

Token 386: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.252348393201828
    2. ',
' → logprob: -1.5023484230041504
    3. '   ' → logprob: -8.002347946166992
    4. ','' → logprob: -10.627347946166992
    5. '}' → logprob: -11.377347946166992
    6. ',
' → logprob: -11.752347946166992
    7. ',

' → logprob: -11.877347946166992
    8. ''i' → logprob: -12.002347946166992
    9. '',' → logprob: -12.127347946166992
    10. ' ' → logprob: -12.377347946166992

Token 387: '   ' (ID: 271)
  Prédit: ''i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''i' → logprob: -0.005273011047393084
    2. '   ' → logprob: -5.50527286529541
    3. ''' → logprob: -6.75527286529541
    4. ' '' → logprob: -11.00527286529541
    5. ' ' → logprob: -11.50527286529541
    6. '‘i' → logprob: -13.63027286529541
    7. '  ' → logprob: -14.75527286529541
    8. '       ' → logprob: -15.25527286529541
    9. 'i' → logprob: -15.50527286529541
    10. ''I' → logprob: -16.005273818969727

Token 388: ' '' (ID: 461)
  Prédit: ''i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''i' → logprob: -3.4121114822482923e-06
    2. 'i' → logprob: -13.625003814697266
    3. '‘i' → logprob: -13.750003814697266
    4. '   ' → logprob: -14.750003814697266
    5. ' '' → logprob: -15.125003814697266
    6. ' ' → logprob: -16.250003814697266
    7. '
' → logprob: -16.375003814697266
    8. ' i' → logprob: -16.750003814697266
    9. ''I' → logprob: -17.125003814697266
    10. '’i' → logprob: -17.750003814697266

Token 389: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014203590340912342
    2. ''i' → logprob: -4.2642035484313965
    3. ' i' → logprob: -10.139204025268555
    4. '‘i' → logprob: -15.764204025268555
    5. '	i' → logprob: -15.889204025268555
    6. ''' → logprob: -15.889204025268555
    7. 'I' → logprob: -16.764204025268555
    8. '_i' → logprob: -16.889204025268555
    9. '   ' → logprob: -17.764204025268555
    10. '
' → logprob: -17.889204025268555

Token 390: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.005737867206335068
    2. ''' → logprob: -5.255737781524658
    3. '}' → logprob: -8.005738258361816
    4. ''}' → logprob: -9.630738258361816
    5. '']' → logprob: -10.005738258361816
    6. ':' → logprob: -10.630738258361816
    7. ']' → logprob: -11.505738258361816
    8. '}:' → logprob: -12.005738258361816
    9. '']:' → logprob: -12.505738258361816
    10. ''>' → logprob: -12.880738258361816

Token 391: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.008627340197563171
    2. ' I' → logprob: -4.758627414703369
    3. '   ' → logprob: -11.883626937866211
    4. ' ' → logprob: -12.508626937866211
    5. 'i' → logprob: -14.133626937866211
    6. '  ' → logprob: -14.383626937866211
    7. '	I' → logprob: -14.633626937866211
    8. '    ' → logprob: -15.883626937866211
    9. '
' → logprob: -16.63362693786621
    10. '       ' → logprob: -16.88362693786621

Token 392: ',
' (ID: 412)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -4.320199877838604e-07
    2. '}
' → logprob: -15.375
    3. ' }' → logprob: -15.625
    4. ',' → logprob: -17.375
    5. ')' → logprob: -20.0
    6. '}

' → logprob: -20.375
    7. ']' → logprob: -20.875
    8. '},' → logprob: -21.5
    9. '}`' → logprob: -21.875
    10. '}}' → logprob: -21.875

Token 393: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -1.981667537620524e-06
    2. '}
' → logprob: -13.250001907348633
    3. '}

' → logprob: -16.375001907348633
    4. ' }' → logprob: -16.875001907348633
    5. '}`' → logprob: -21.250001907348633
    6. '}


' → logprob: -21.625001907348633
    7. '}
' → logprob: -21.875001907348633
    8. '})' → logprob: -22.125001907348633
    9. '}}' → logprob: -22.125001907348633
    10. '   ' → logprob: -22.500001907348633

Token 394: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005234356038272381
    2. 'class' → logprob: -5.255234241485596
    3. 'from' → logprob: -15.380234718322754
    4. '```' → logprob: -15.630234718322754
    5. '
' → logprob: -15.755234718322754
    6. ' def' → logprob: -16.130233764648438
    7. '@' → logprob: -17.630233764648438
    8. 'Def' → logprob: -18.380233764648438
    9. 'ndef' → logprob: -19.005233764648438
    10. 'de' → logprob: -19.130233764648438

Token 395: ' MC' (ID: 31263)
  Prédit: ' MC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MC' → logprob: -0.02920868992805481
    2. 'MC' → logprob: -4.154208660125732
    3. ' Roman' → logprob: -5.904208660125732
    4. ' Mixed' → logprob: -6.529208660125732
    5. 'Numer' → logprob: -7.029208660125732
    6. ' Numer' → logprob: -7.154208660125732
    7. ' M' → logprob: -7.279208660125732
    8. 'Roman' → logprob: -7.404208660125732
    9. '_' → logprob: -7.529208660125732
    10. '_MC' → logprob: -7.529208660125732

Token 396: 'XI' (ID: 124666)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.20207343995571136
    2. 'XI' → logprob: -1.7020734548568726
    3. 'XL' → logprob: -8.327073097229004
    4. 'Xi' → logprob: -9.952073097229004
    5. 'XV' → logprob: -10.139573097229004
    6. '(X' → logprob: -10.577073097229004
    7. 'XE' → logprob: -10.639573097229004
    8. '<X' → logprob: -10.639573097229004
    9. 'XML' → logprob: -11.139573097229004
    10. '_X' → logprob: -11.139573097229004

Token 397: 'String' (ID: 916)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.3668084144592285
    2. ':
' → logprob: -2.1168084144592285
    3. ':' → logprob: -2.3668084144592285
    4. 'String' → logprob: -3.4918084144592285
    5. 'Unit' → logprob: -3.9918084144592285
    6. 'Number' → logprob: -4.4918084144592285
    7. 'Word' → logprob: -4.7418084144592285
    8. '(Number' → logprob: -4.8668084144592285
    9. 'Composite' → logprob: -6.3668084144592285
    10. 'value' → logprob: -6.8668084144592285

Token 398: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006131939589977264
    2. ':
' → logprob: -7.500613212585449
    3. '(' → logprob: -10.50061321258545
    4. ' :' → logprob: -11.12561321258545
    5. '():' → logprob: -12.00061321258545
    6. '(M' → logprob: -12.75061321258545
    7. ':def' → logprob: -12.75061321258545
    8. '(object' → logprob: -13.37561321258545
    9. '):' → logprob: -13.62561321258545
    10. '(Abstract' → logprob: -14.25061321258545

Token 399: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002653182251378894
    2. 'def' → logprob: -6.627653121948242
    3. ' def' → logprob: -6.627653121948242
    4. '```' → logprob: -14.627653121948242
    5. '    
' → logprob: -14.752653121948242
    6. '
' → logprob: -14.752653121948242
    7. '  ' → logprob: -15.002653121948242
    8. ':' → logprob: -15.127653121948242
    9. 'class' → logprob: -15.377653121948242
    10. '	def' → logprob: -15.377653121948242

Token 400: ' """' (ID: 9280)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04862915351986885
    2. ' def' → logprob: -3.04862904548645
    3. '_def' → logprob: -10.923628807067871
    4. '_DEF' → logprob: -11.798628807067871
    5. '   ' → logprob: -11.923628807067871
    6. '"""' (adapté à ' """') → logprob: -12.548628807067871
    7. '__' → logprob: -13.798628807067871
    8. '_LE' → logprob: -13.923628807067871
    9. '_letters' → logprob: -14.048628807067871
    10. '_letter' → logprob: -14.048628807067871

Token 401: 'Rep' (ID: 17265)
  Prédit: 'Rep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rep' → logprob: -0.7082744240760803
    2. 'class' → logprob: -1.3332743644714355
    3. 'Class' → logprob: -1.8332743644714355
    4. 'A' → logprob: -3.5832743644714355
    5. 'def' → logprob: -3.8332743644714355
    6. 'Representation' → logprob: -4.2082743644714355
    7. '"""' → logprob: -4.5832743644714355
    8. 'Represent' → logprob: -5.9582743644714355
    9. 'rep' → logprob: -6.9582743644714355
    10. ' Represents' → logprob: -7.4582743644714355

Token 402: 'resents' (ID: 16483)
  Prédit: 'resent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resent' → logprob: -0.5238497853279114
    2. 'resents' → logprob: -1.0238497257232666
    3. 'res' → logprob: -3.1488497257232666
    4. 'resentation' → logprob: -5.273849964141846
    5. 'es' → logprob: -8.148849487304688
    6. 'reset' → logprob: -9.648849487304688
    7. '```' → logprob: -10.023849487304688
    8. 'ro' → logprob: -10.398849487304688
    9. ' res' → logprob: -10.523849487304688
    10. 'r' → logprob: -10.648849487304688

Token 403: ' an' (ID: 448)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3791995644569397
    2. 'a' → logprob: -1.254199504852295
    3. ' an' → logprob: -3.629199504852295
    4. 'an' → logprob: -6.379199504852295
    5. ' one' → logprob: -6.504199504852295
    6. ' the' → logprob: -8.379199981689453
    7. 'one' → logprob: -8.754199981689453
    8. 'MC' → logprob: -9.879199981689453
    9. ' MC' → logprob: -10.004199981689453
    10. 'the' → logprob: -10.129199981689453

Token 404: ' MC' (ID: 31263)
  Prédit: ' MC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MC' → logprob: -0.1688774675130844
    2. 'MC' → logprob: -1.9188774824142456
    3. '_MC' → logprob: -7.168877601623535
    4. 'mc' → logprob: -7.293877601623535
    5. 'immutable' → logprob: -7.418877601623535
    6. ' ordered' → logprob: -7.418877601623535
    7. 'number' → logprob: -7.793877601623535
    8. ' number' → logprob: -7.918877601623535
    9. ' ' → logprob: -8.106377601623535
    10. ' immutable' → logprob: -8.168877601623535

Token 405: 'XI' (ID: 124666)
  Prédit: 'XI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XI' → logprob: -0.07896547019481659
    2. 'X' → logprob: -2.578965425491333
    3. 'XL' → logprob: -10.203965187072754
    4. 'Xi' → logprob: -11.203965187072754
    5. ' XI' → logprob: -11.453965187072754
    6. 'xi' → logprob: -13.266465187072754
    7. 'I' → logprob: -13.578965187072754
    8. 'x' → logprob: -13.953965187072754
    9. 'XC' → logprob: -14.078965187072754
    10. 'XML' → logprob: -14.078965187072754

Token 406: '-string' (ID: 73286)
  Prédit: ' numeral'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numeral' → logprob: -0.44302812218666077
    2. 'numer' → logprob: -2.193028211593628
    3. 'string' → logprob: -2.568028211593628
    4. 'number' → logprob: -2.693028211593628
    5. ' string' → logprob: -2.943028211593628
    6. ' number' → logprob: -3.318028211593628
    7. ' letter' → logprob: -5.943027973175049
    8. 'letter' → logprob: -6.443027973175049
    9. '-' → logprob: -6.568027973175049
    10. 'notation' → logprob: -6.568027973175049

Token 407: ' as' (ID: 472)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.0555390119552612
    2. ' representing' → logprob: -2.305539131164551
    3. ' composed' → logprob: -2.305539131164551
    4. ',' → logprob: -2.680539131164551
    5. 'that' → logprob: -2.805539131164551
    6. 'number' → logprob: -3.430539131164551
    7. ' consisting' → logprob: -3.430539131164551
    8. '"""' → logprob: -3.430539131164551
    9. ' with' → logprob: -3.805539131164551
    10. '.' → logprob: -3.805539131164551

Token 408: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.160442054271698
    2. ' a' → logprob: -1.9104421138763428
    3. 'an' → logprob: -9.035442352294922
    4. ' an' → logprob: -9.910442352294922
    5. 'sequence' → logprob: -10.910442352294922
    6. ' sequence' → logprob: -11.660442352294922
    7. ' composed' → logprob: -12.035442352294922
    8. ' ' → logprob: -12.785442352294922
    9. ' list' → logprob: -13.285442352294922
    10. 'com' → logprob: -13.285442352294922

Token 409: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.10233726352453232
    2. ' sequence' → logprob: -2.60233736038208
    3. 'list' → logprob: -3.97733736038208
    4. ' list' → logprob: -5.60233736038208
    5. 'composition' → logprob: -8.102336883544922
    6. 'collection' → logprob: -8.477336883544922
    7. 'List' → logprob: -8.977336883544922
    8. ' List' → logprob: -10.727336883544922
    9. ' collection' → logprob: -10.977336883544922
    10. '_list' → logprob: -11.352336883544922

Token 410: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.016062170267105103
    2. 'of' → logprob: -4.141062259674072
    3. '   ' → logprob: -11.391061782836914
    4. '[' → logprob: -11.516061782836914
    5. '<|end|>' → logprob: -13.266061782836914
    6. '	of' → logprob: -13.766061782836914
    7. ' ' → logprob: -14.016061782836914
    8. '```' → logprob: -14.141061782836914
    9. ',' → logprob: -14.391061782836914
    10. '
' → logprob: -14.641061782836914

Token 411: ' letters' (ID: 18151)
  Prédit: 'MC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MC' → logprob: -0.10047688335180283
    2. ' MC' → logprob: -2.3504769802093506
    3. 'numer' → logprob: -9.47547721862793
    4. 'letters' → logprob: -9.72547721862793
    5. 'letter' → logprob: -9.97547721862793
    6. ' letters' → logprob: -10.35047721862793
    7. 'one' → logprob: -12.10047721862793
    8. ' one' → logprob: -12.22547721862793
    9. '`' → logprob: -12.22547721862793
    10. '_MC' → logprob: -12.22547721862793

Token 412: ',' (ID: 11)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.4419080913066864
    2. ' and' → logprob: -1.1919081211090088
    3. ':' → logprob: -3.691908121109009
    4. ',' → logprob: -4.81690788269043
    5. 'with' → logprob: -5.69190788269043
    6. ' consisting' → logprob: -5.81690788269043
    7. 's' → logprob: -6.19190788269043
    8. ' of' → logprob: -6.31690788269043
    9. ' containing' → logprob: -6.69190788269043
    10. 'and' → logprob: -6.81690788269043

Token 413: ' with' (ID: 483)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.723761796951294
    2. ' each' → logprob: -0.973761796951294
    3. '   ' → logprob: -3.223761796951294
    4. 'letters' → logprob: -3.848761796951294
    5. ' letters' → logprob: -3.973761796951294
    6. 'with' → logprob: -4.973761558532715
    7. ' where' → logprob: -4.973761558532715
    8. ' possibly' → logprob: -5.223761558532715
    9. 'where' → logprob: -5.348761558532715
    10. 'and' → logprob: -5.348761558532715

Token 414: ' parsing' (ID: 51039)
  Prédit: ' their'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' their' → logprob: -0.3044935166835785
    2. 'their' → logprob: -1.9294935464859009
    3. 'multip' → logprob: -3.5544934272766113
    4. 'value' → logprob: -4.054493427276611
    5. ' methods' → logprob: -4.054493427276611
    6. 'values' → logprob: -4.804493427276611
    7. ' value' → logprob: -5.054493427276611
    8. ' an' → logprob: -5.179493427276611
    9. ' multip' → logprob: -5.429493427276611
    10. ' optional' → logprob: -5.554493427276611

Token 415: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7858066558837891
    2. 'and' → logprob: -0.9108066558837891
    3. 'from' → logprob: -2.410806655883789
    4. ',' → logprob: -3.285806655883789
    5. ' logic' → logprob: -5.535806655883789
    6. ' from' → logprob: -5.535806655883789
    7. 'def' → logprob: -6.410806655883789
    8. ' capabilities' → logprob: -6.535806655883789
    9. ' capability' → logprob: -6.910806655883789
    10. ' functionality' → logprob: -7.035806655883789

Token 416: ' arithmetic' (ID: 81645)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.0999978706240654
    2. ' value' → logprob: -3.2249977588653564
    3. 'conversion' → logprob: -3.7249977588653564
    4. 'serialization' → logprob: -4.8499979972839355
    5. 'evaluation' → logprob: -5.8499979972839355
    6. 'ar' → logprob: -5.9749979972839355
    7. 'validation' → logprob: -6.2249979972839355
    8. 'cal' → logprob: -6.3499979972839355
    9. ' arithmetic' → logprob: -6.3499979972839355
    10. 'string' → logprob: -6.4749979972839355

Token 417: '."""

' (ID: 68934)
  Prédit: 'operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operations' → logprob: -0.4522399306297302
    2. ' operations' → logprob: -1.202239990234375
    3. ' capabilities' → logprob: -3.452239990234375
    4. 'cap' → logprob: -4.202239990234375
    5. ' methods' → logprob: -4.452239990234375
    6. 'methods' → logprob: -5.702239990234375
    7. ' support' → logprob: -7.577239990234375
    8. 'def' → logprob: -7.952239990234375
    9. ' functionality' → logprob: -8.077239990234375
    10. ' functionalities' → logprob: -8.952239990234375

Token 418: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5976074934005737
    2. '   ' → logprob: -0.8476074934005737
    3. 'def' → logprob: -3.8476076126098633
    4. ' _' → logprob: -9.722607612609863
    5. ' indentation' → logprob: -10.972607612609863
    6. ' ind' → logprob: -11.847607612609863
    7. '_' → logprob: -12.597607612609863
    8. '_indent' → logprob: -12.722607612609863
    9. ' indent' → logprob: -12.972607612609863
    10. '    ' → logprob: -13.222607612609863

Token 419: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00021271906734909862
    2. ' def' → logprob: -9.375212669372559
    3. '_LE' → logprob: -9.375212669372559
    4. '_def' → logprob: -11.375212669372559
    5. '_letters' → logprob: -11.625212669372559
    6. '_letter' → logprob: -12.000212669372559
    7. '_DEF' → logprob: -12.250212669372559
    8. '_DE' → logprob: -12.875212669372559
    9. '_MAX' → logprob: -13.250212669372559
    10. '_' → logprob: -13.250212669372559

Token 420: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.15973956882953644
    2. ' def' → logprob: -2.1597394943237305
    3. 'def' → logprob: -3.7847394943237305
    4. '__' → logprob: -4.6597394943237305
    5. '```' → logprob: -10.15973949432373
    6. ' ' → logprob: -10.78473949432373
    7. 'classmethod' → logprob: -11.65973949432373
    8. ' ' → logprob: -12.90973949432373
    9. '...' → logprob: -13.15973949432373
    10. 'init' → logprob: -13.28473949432373

Token 421: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. 'ini' → logprob: -16.0
    3. 'i' → logprob: -16.625
    4. 'in' → logprob: -16.625
    5. ' init' → logprob: -16.875
    6. 'inite' → logprob: -17.625
    7. '   ' → logprob: -18.125
    8. 'str' → logprob: -18.75
    9. '	init' → logprob: -19.25
    10. '_init' → logprob: -19.5

Token 422: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00043567578541114926
    2. '(self' → logprob: -8.000435829162598
    3. '__(
' → logprob: -9.875435829162598
    4. '__' → logprob: -10.125435829162598
    5. '_(' → logprob: -12.125435829162598
    6. ' (' → logprob: -13.500435829162598
    7. '(' → logprob: -13.875435829162598
    8. 'self' → logprob: -14.125435829162598
    9. '__('' → logprob: -15.625435829162598
    10. '__((' → logprob: -17.00043487548828

Token 423: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018089536752086133
    2. ' self' → logprob: -8.875181198120117
    3. '
' → logprob: -10.125181198120117
    4. ',' → logprob: -14.750181198120117
    5. '(self' → logprob: -15.375181198120117
    6. '   ' → logprob: -16.000181198120117
    7. '0' → logprob: -16.250181198120117
    8. 'def' → logprob: -16.500181198120117
    9. 's' → logprob: -17.625181198120117
    10. '       ' → logprob: -17.750181198120117

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2526991665363312
    2. 'self' → logprob: -1.5026991367340088
    3. ' self' → logprob: -7.877699375152588
    4. '(self' → logprob: -8.50269889831543
    5. ' ,' → logprob: -10.00269889831543
    6. '
' → logprob: -10.00269889831543
    7. ',
' → logprob: -10.75269889831543
    8. 'def' → logprob: -10.87769889831543
    9. ',self' → logprob: -10.87769889831543
    10. '   ' → logprob: -11.87769889831543

Token 425: ' letters' (ID: 18151)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.022731002420186996
    2. 's' → logprob: -4.272730827331543
    3. 'string' → logprob: -5.522730827331543
    4. 'mc' → logprob: -6.147730827331543
    5. 'value' → logprob: -6.522730827331543
    6. ' self' → logprob: -7.772730827331543
    7. 'text' → logprob: -7.897730827331543
    8. 'source' → logprob: -9.772730827331543
    9. 'input' → logprob: -10.147730827331543
    10. ' mc' → logprob: -11.397730827331543

Token 426: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026062061078846455
    2. ':str' → logprob: -8.500260353088379
    3. '_str' → logprob: -10.750260353088379
    4. '_:' → logprob: -11.000260353088379
    5. ' :' → logprob: -12.125260353088379
    6. 'str' → logprob: -12.125260353088379
    7. '   ' → logprob: -12.750260353088379
    8. '=' → logprob: -13.625260353088379
    9. '```' → logprob: -14.000260353088379
    10. '):' → logprob: -14.125260353088379

Token 427: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.15132755041122437
    2. 'str' → logprob: -2.026327610015869
    3. ' Optional' → logprob: -5.151327610015869
    4. 'List' → logprob: -5.901327610015869
    5. ' str' → logprob: -9.651327133178711
    6. '(Optional' → logprob: -11.526327133178711
    7. '	Optional' → logprob: -12.401327133178711
    8. '[str' → logprob: -12.526327133178711
    9. ')' → logprob: -13.526327133178711
    10. 'optional' → logprob: -14.401327133178711

Token 428: '[List' (ID: 113982)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.01108201127499342
    2. '[List' → logprob: -4.511082172393799
    3. 'str' → logprob: -10.76108169555664
    4. '[' → logprob: -11.88608169555664
    5. '[
' → logprob: -13.13608169555664
    6. '=str' → logprob: -13.26108169555664
    7. '=' → logprob: -14.01108169555664
    8. ')' → logprob: -14.63608169555664
    9. '
' → logprob: -15.26108169555664
    10. ':str' → logprob: -15.38608169555664

Token 429: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1888679839321412e-05
    2. '[M' → logprob: -11.875021934509277
    3. '[
' → logprob: -12.250021934509277
    4. '[str' → logprob: -12.250021934509277
    5. '[int' → logprob: -13.250021934509277
    6. ']' → logprob: -14.125021934509277
    7. 'MC' → logprob: -14.375021934509277
    8. ']=' → logprob: -14.500021934509277
    9. '])' → logprob: -14.875021934509277
    10. '['' → logprob: -15.250021934509277

Token 430: 'MC' (ID: 15190)
  Prédit: 'MC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MC' → logprob: -6.153795766294934e-06
    2. ' MC' → logprob: -12.875005722045898
    3. '[' → logprob: -13.500005722045898
    4. 'Tuple' → logprob: -13.625005722045898
    5. 'M' → logprob: -15.375005722045898
    6. 'str' → logprob: -16.0000057220459
    7. ']' → logprob: -16.0000057220459
    8. ')' → logprob: -16.1250057220459
    9. '   ' → logprob: -16.5000057220459
    10. '_MC' → logprob: -16.5000057220459

Token 431: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -6.153795766294934e-06
    2. 'XI' → logprob: -12.750005722045898
    3. 'C' → logprob: -14.250005722045898
    4. ' X' → logprob: -14.625005722045898
    5. 'XL' → logprob: -14.750005722045898
    6. 'CX' → logprob: -15.062505722045898
    7. '
' → logprob: -15.312505722045898
    8. 'XC' → logprob: -15.625005722045898
    9. '(X' → logprob: -15.687505722045898
    10. '<X' → logprob: -16.2500057220459

Token 432: 'IL' (ID: 2654)
  Prédit: 'IL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.00036906293826177716
    2. 'I' → logprob: -8.00036907196045
    3. '	IL' → logprob: -11.37536907196045
    4. 'X' → logprob: -12.75036907196045
    5. '_IL' → logprob: -12.75036907196045
    6. 'ILE' → logprob: -12.87536907196045
    7. 'Letter' → logprob: -13.12536907196045
    8. 'L' → logprob: -13.50036907196045
    9. 'ILA' → logprob: -13.75036907196045
    10. 'ИЛ' → logprob: -13.87536907196045

Token 433: 'etter' (ID: 30747)
  Prédit: 'etter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etter' → logprob: -0.0024854077491909266
    2. 'Letter' → logprob: -6.002485275268555
    3. 'letter' → logprob: -13.252485275268555
    4. 'e' → logprob: -13.502485275268555
    5. 'eter' → logprob: -13.752485275268555
    6. 'et' → logprob: -14.127485275268555
    7. 'Setter' → logprob: -14.752485275268555
    8. '```' → logprob: -14.752485275268555
    9. 'ette' → logprob: -15.002485275268555
    10. '
' → logprob: -15.127485275268555

Token 434: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.004674338269978762
    2. ']]=' → logprob: -5.379674434661865
    3. ']])' → logprob: -9.879673957824707
    4. ']' → logprob: -13.879673957824707
    5. ' ]]' → logprob: -14.254673957824707
    6. ']]]' → logprob: -14.629673957824707
    7. '])' → logprob: -15.129673957824707
    8. '[' → logprob: -15.129673957824707
    9. ']=' → logprob: -15.254673957824707
    10. ']])

' → logprob: -17.254674911499023

Token 435: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021511683240532875
    2. ']' → logprob: -4.021511554718018
    3. '=None' → logprob: -6.021511554718018
    4. ' =' → logprob: -7.271511554718018
    5. ')' → logprob: -8.521512031555176
    6. ']=' → logprob: -10.271512031555176
    7. ')=' → logprob: -14.146512031555176
    8. ' ' → logprob: -15.521512031555176
    9. 'None' → logprob: -16.39651107788086
    10. '   ' → logprob: -16.64651107788086

Token 436: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00671584764495492
    2. ' None' → logprob: -5.006715774536133
    3. '=None' → logprob: -15.506715774536133
    4. '   ' → logprob: -16.756715774536133
    5. 'none' → logprob: -17.256715774536133
    6. '(None' → logprob: -17.756715774536133
    7. '[]' → logprob: -18.131715774536133
    8. '0' → logprob: -18.131715774536133
    9. '_None' → logprob: -18.256715774536133
    10. ')' → logprob: -18.881715774536133

Token 437: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013838126324117184
    2. '):
' → logprob: -4.513838291168213
    3. ')' → logprob: -5.888838291168213
    4. '   ' → logprob: -11.513837814331055
    5. ' ):' → logprob: -12.888837814331055
    6. ':' → logprob: -13.013837814331055
    7. '):
' → logprob: -13.763837814331055
    8. '       ' → logprob: -16.013837814331055
    9. ' ):
' → logprob: -16.888837814331055
    10. ' ' → logprob: -17.138837814331055

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002092207781970501
    2. ' if' → logprob: -6.877092361450195
    3. 'self' → logprob: -7.877092361450195
    4. 'if' → logprob: -7.877092361450195
    5. ' self' → logprob: -8.502092361450195
    6. '   ' → logprob: -9.252092361450195
    7. '	' → logprob: -15.127092361450195
    8. 'def' → logprob: -15.752092361450195
    9. '	self' → logprob: -15.752092361450195
    10. '      ' → logprob: -16.002092361450195

Token 439: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2870055139064789
    2. 'self' → logprob: -1.5370055437088013
    3. ' if' → logprob: -4.037005424499512
    4. '       ' → logprob: -4.287005424499512
    5. ' self' → logprob: -5.787005424499512
    6. '   ' → logprob: -12.662005424499512
    7. '	self' → logprob: -14.037005424499512
    8. '	if' → logprob: -14.662005424499512
    9. 'super' → logprob: -14.787005424499512
    10. ' ' → logprob: -15.912005424499512

Token 440: ' Letters' (ID: 77790)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.39375990629196167
    2. 'if' → logprob: -1.1437599658966064
    3. ' if' → logprob: -5.643759727478027
    4. ' self' → logprob: -5.768759727478027
    5. '       ' → logprob: -9.268759727478027
    6. 'letters' → logprob: -9.393759727478027
    7. 'super' → logprob: -11.018759727478027
    8. 'If' → logprob: -12.893759727478027
    9. ' letters' → logprob: -13.268759727478027
    10. '   ' → logprob: -13.518759727478027

Token 441: ' are' (ID: 553)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2021997570991516
    2. ' =' → logprob: -1.7021996974945068
    3. ' if' → logprob: -7.702199935913086
    4. 'if' → logprob: -8.202199935913086
    5. ':' → logprob: -10.952199935913086
    6. 'self' → logprob: -11.327199935913086
    7. '=self' → logprob: -11.327199935913086
    8. '=None' → logprob: -11.452199935913086
    9. '       ' → logprob: -12.577199935913086
    10. ' is' → logprob: -13.827199935913086

Token 442: ' stored' (ID: 16240)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.17635314166545868
    2. ' letters' → logprob: -2.3013532161712646
    3. '[]' → logprob: -2.8013532161712646
    4. ' []' → logprob: -7.1763529777526855
    5. '[]
' → logprob: -9.926353454589844
    6. '[' → logprob: -12.551353454589844
    7. ' []
' → logprob: -13.301353454589844
    8. '   ' → logprob: -13.426353454589844
    9. ' ' → logprob: -13.801353454589844
    10. '_letters' → logprob: -13.926353454589844

Token 443: ' in' (ID: 306)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.014705777168274
    2. 'letters' → logprob: -1.514705777168274
    3. ' letters' → logprob: -1.514705777168274
    4. ' as' → logprob: -2.6397056579589844
    5. '=' → logprob: -3.0147056579589844
    6. ' in' → logprob: -3.1397056579589844
    7. 'in' → logprob: -4.389705657958984
    8. ' []' → logprob: -5.389705657958984
    9. 'as' → logprob: -5.514705657958984
    10. ' =' → logprob: -5.639705657958984

Token 444: ' order' (ID: 2569)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.16490180790424347
    2. '[]' → logprob: -2.0399017333984375
    3. ' letters' → logprob: -4.2899017333984375
    4. 'sorted' → logprob: -5.4149017333984375
    5. '[]
' → logprob: -6.6649017333984375
    6. 'self' → logprob: -6.7899017333984375
    7. ' []' → logprob: -7.6649017333984375
    8. '([]' → logprob: -8.039901733398438
    9. '(' → logprob: -9.039901733398438
    10. ' (' → logprob: -9.664901733398438

Token 445: ' m' (ID: 284)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9202145934104919
    2. '=' → logprob: -1.6702146530151367
    3. '       ' → logprob: -1.7952146530151367
    4. ' self' → logprob: -2.4202146530151367
    5. '=self' → logprob: -3.0452146530151367
    6. ' =' → logprob: -3.7952146530151367
    7. ' if' → logprob: -3.7952146530151367
    8. ' of' → logprob: -4.170214653015137
    9. ',' → logprob: -4.420214653015137
    10. '(self' → logprob: -4.545214653015137

Token 446: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017579087987542152
    2. 'c' → logprob: -5.517579078674316
    3. '   ' → logprob: -5.642579078674316
    4. '=' → logprob: -5.892579078674316
    5. 'and' → logprob: -6.892579078674316
    6. ',c' → logprob: -7.017579078674316
    7. '       ' → logprob: -7.142579078674316
    8. '.' → logprob: -7.517579078674316
    9. 'ixed' → logprob: -7.517579078674316
    10. 'self' → logprob: -7.892579078674316

Token 447: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.49511101841926575
    2. ',' → logprob: -0.9951109886169434
    3. 'x' → logprob: -3.9951109886169434
    4. ' ,' → logprob: -6.495110988616943
    5. ',i' → logprob: -7.495110988616943
    6. ',
' → logprob: -9.495111465454102
    7. '   ' → logprob: -9.745111465454102
    8. ' x' → logprob: -9.870111465454102
    9. 'i' → logprob: -10.245111465454102
    10. ',c' → logprob: -11.120111465454102

Token 448: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13062401115894318
    2. ',i' → logprob: -2.1306240558624268
    3. ',c' → logprob: -6.505623817443848
    4. ',
' → logprob: -6.755623817443848
    5. ' ,' → logprob: -7.380623817443848
    6. 'i' → logprob: -9.755623817443848
    7. ',x' → logprob: -10.255623817443848
    8. ',y' → logprob: -10.505623817443848
    9. ',['' → logprob: -10.755623817443848
    10. 'and' → logprob: -10.880623817443848

Token 449: ';' (ID: 26)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7153081297874451
    2. ' if' → logprob: -0.7153081297874451
    3. ',' → logprob: -4.46530818939209
    4. 'if' → logprob: -5.34030818939209
    5. 'self' → logprob: -6.09030818939209
    6. '
' → logprob: -6.84030818939209
    7. ' self' → logprob: -6.96530818939209
    8. ':' → logprob: -8.34030818939209
    9. '=' → logprob: -8.59030818939209
    10. ' or' → logprob: -8.59030818939209

Token 450: ' each' (ID: 2454)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3071530759334564
    2. 'if' → logprob: -1.8071531057357788
    3. ' if' → logprob: -2.5571529865264893
    4. ' self' → logprob: -3.8071529865264893
    5. 'letters' → logprob: -8.05715274810791
    6. '       ' → logprob: -8.30715274810791
    7. ' letters' → logprob: -10.18215274810791
    8. '(self' → logprob: -14.18215274810791
    9. '
' → logprob: -14.30715274810791
    10. 'super' → logprob: -14.68215274810791

Token 451: ' at' (ID: 540)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.7203657031059265
    2. ' letter' → logprob: -1.4703657627105713
    3. ' is' → logprob: -2.7203657627105713
    4. ' of' → logprob: -3.2203657627105713
    5. 'token' → logprob: -3.2203657627105713
    6. ' if' → logprob: -3.9703657627105713
    7. ' token' → logprob: -4.345365524291992
    8. ' part' → logprob: -4.470365524291992
    9. ' has' → logprob: -4.595365524291992
    10. 'if' → logprob: -4.720365524291992

Token 452: ' most' (ID: 1645)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.2595769166946411
    2. ' most' → logprob: -1.5095769166946411
    3. 'least' → logprob: -5.384576797485352
    4. 'self' → logprob: -6.759576797485352
    5. ' least' → logprob: -6.884576797485352
    6. '       ' → logprob: -8.884576797485352
    7. 'None' → logprob: -9.009576797485352
    8. 'count' → logprob: -9.384576797485352
    9. ' at' → logprob: -9.634576797485352
    10. '   ' → logprob: -10.134576797485352

Token 453: ' once' (ID: 4730)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.23835040628910065
    2. 'once' → logprob: -1.6133503913879395
    3. '9' → logprob: -4.8633503913879395
    4. '1' → logprob: -5.8633503913879395
    5. ' one' → logprob: -6.6133503913879395
    6. ' once' → logprob: -7.1133503913879395
    7. ' ' → logprob: -9.863350868225098
    8. 'count' → logprob: -10.363350868225098
    9. '_once' → logprob: -11.988350868225098
    10. 'One' → logprob: -11.988350868225098

Token 454: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05392129346728325
    2. ' if' → logprob: -3.0539212226867676
    3. ',' → logprob: -5.803921222686768
    4. 'if' → logprob: -7.303921222686768
    5. '
' → logprob: -7.428921222686768
    6. '<|end|>' → logprob: -7.678921222686768
    7. 'self' → logprob: -8.928921699523926
    8. ' self' → logprob: -9.678921699523926
    9. ' and' → logprob: -9.678921699523926
    10. '        
' → logprob: -9.928921699523926

Token 455: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013694037916138768
    2. ' if' → logprob: -6.876369476318359
    3. 'self' → logprob: -8.75136947631836
    4. ' self' → logprob: -9.62636947631836
    5. ',' → logprob: -9.87636947631836
    6. '<|end|>' → logprob: -10.37636947631836
    7. 'if' → logprob: -10.75136947631836
    8. '
' → logprob: -13.12636947631836
    9. '   ' → logprob: -13.62636947631836
    10. '        
' → logprob: -14.37636947631836

Token 456: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07439126074314117
    2. 'if' → logprob: -2.8243913650512695
    3. ' self' → logprob: -4.9493913650512695
    4. '       ' → logprob: -5.8243913650512695
    5. ' if' → logprob: -6.0743913650512695
    6. '	self' → logprob: -13.69939136505127
    7. '   ' → logprob: -14.07439136505127
    8. 'letters' → logprob: -14.69939136505127
    9. 'super' → logprob: -15.07439136505127
    10. '(self' → logprob: -15.57439136505127

Token 457: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001732663222355768
    2. '._' → logprob: -8.875173568725586
    3. '_letters' → logprob: -10.875173568725586
    4. 'letters' → logprob: -12.000173568725586
    5. ' .' → logprob: -12.250173568725586
    6. '.le' → logprob: -13.250173568725586
    7. 'Letters' → logprob: -14.625173568725586
    8. '.characters' → logprob: -14.625173568725586
    9. '.LE' → logprob: -15.625173568725586
    10. '.ly' → logprob: -17.125173568725586

Token 458: 'letters' (ID: 38724)
  Prédit: 'letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.009766003116965294
    2. '_letters' → logprob: -4.634766101837158
    3. ' letters' → logprob: -12.634765625
    4. '_' → logprob: -13.134765625
    5. 'values' → logprob: -13.884765625
    6. 'letter' → logprob: -14.009765625
    7. '_letter' → logprob: -14.259765625
    8. 'dict' → logprob: -14.259765625
    9. 'lett' → logprob: -15.009765625
    10. '_dict' → logprob: -15.259765625

Token 459: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25231021642684937
    2. ' =' → logprob: -1.5023102760314941
    3. ':' → logprob: -7.877310276031494
    4. '=[]' → logprob: -13.627309799194336
    5. ' ' → logprob: -15.502309799194336
    6. '=None' → logprob: -16.502309799194336
    7. '   ' → logprob: -17.002309799194336
    8. '={}' → logprob: -17.002309799194336
    9. '=[]
' → logprob: -17.502309799194336
    10. ')' → logprob: -17.502309799194336

Token 460: ' letters' (ID: 18151)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9761847257614136
    2. 'letters' → logprob: -1.2261847257614136
    3. '[' → logprob: -1.3511847257614136
    4. '[]
' → logprob: -3.351184844970703
    5. '{' → logprob: -3.851184844970703
    6. '{}' → logprob: -4.476184844970703
    7. '[]

' → logprob: -7.226184844970703
    8. ' letters' → logprob: -7.476184844970703
    9. '{}
' → logprob: -7.726184844970703
    10. ' [' → logprob: -8.101184844970703

Token 461: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33630260825157166
    2. 'if' → logprob: -1.836302638053894
    3. ' or' → logprob: -2.0863025188446045
    4. 'or' → logprob: -6.586302757263184
    5. '[:]' → logprob: -7.336302757263184
    6. '.copy' → logprob: -11.586302757263184
    7. ' ' → logprob: -13.961302757263184
    8. 'If' → logprob: -15.086302757263184
    9. '   ' → logprob: -15.211302757263184
    10. '	if' → logprob: -15.461302757263184

Token 462: ' letters' (ID: 18151)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.001170225441455841
    2. ' letters' → logprob: -6.7511701583862305
    3. '_letters' → logprob: -17.751171112060547
    4. 'let' → logprob: -18.751171112060547
    5. 'lett' → logprob: -18.876171112060547
    6. 'Letters' → logprob: -19.376171112060547
    7. 'letter' → logprob: -19.626171112060547
    8. 'lets' → logprob: -20.251171112060547
    9. '   ' → logprob: -20.751171112060547
    10. ' lettres' → logprob: -20.751171112060547

Token 463: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.47418326139450073
    2. 'is' → logprob: -0.9741832613945007
    3. 'else' → logprob: -9.224183082580566
    4. ' else' → logprob: -11.849183082580566
    5. ' ' → logprob: -15.224183082580566
    6. '
' → logprob: -16.099184036254883
    7. '	is' → logprob: -16.724184036254883
    8. 'if' → logprob: -17.349184036254883
    9. '    ' → logprob: -17.849184036254883
    10. ')' → logprob: -17.974184036254883

Token 464: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.012973042204976082
    2. ' not' → logprob: -4.387972831726074
    3. 'None' → logprob: -7.762972831726074
    4. 'letters' → logprob: -10.512972831726074
    5. 'Not' → logprob: -12.387972831726074
    6. ' None' → logprob: -13.387972831726074
    7. 'none' → logprob: -13.387972831726074
    8. '   ' → logprob: -14.012972831726074
    9. '_not' → logprob: -14.262972831726074
    10. '       ' → logprob: -14.512972831726074

Token 465: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -8.65707261255011e-06
    2. ' None' → logprob: -12.000008583068848
    3. 'none' → logprob: -13.000008583068848
    4. 'not' → logprob: -16.375009536743164
    5. '_None' → logprob: -17.125009536743164
    6. '   ' → logprob: -18.125009536743164
    7. '(None' → logprob: -18.125009536743164
    8. '       ' → logprob: -18.375009536743164
    9. '```' → logprob: -18.375009536743164
    10. '_none' → logprob: -18.500009536743164

Token 466: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.25195613503456116
    2. ' else' → logprob: -1.5019561052322388
    3. '[:]' → logprob: -10.62695598602295
    4. '[]' → logprob: -13.12695598602295
    5. '[' → logprob: -15.25195598602295
    6. ' ' → logprob: -16.001956939697266
    7. ')' → logprob: -16.501956939697266
    8. '_else' → logprob: -16.876956939697266
    9. '       ' → logprob: -17.001956939697266
    10. '   ' → logprob: -17.126956939697266

Token 467: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00021509946964215487
    2. '[]
' → logprob: -9.000215530395508
    3. '[' → logprob: -9.500215530395508
    4. ' []' → logprob: -11.250215530395508
    5. '[]

' → logprob: -12.875215530395508
    6. '[]}' → logprob: -14.000215530395508
    7. '[])' → logprob: -15.750215530395508
    8. '[]"' → logprob: -16.250215530395508
    9. '{}' → logprob: -16.750215530395508
    10. '[
' → logprob: -16.875215530395508

Token 468: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 469: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007503578905016184
    2. '@' (adapté à ' @') → logprob: -5.132503509521484
    3. '@property' → logprob: -6.757503509521484
    4. ' def' → logprob: -7.882503509521484
    5. '   ' → logprob: -10.507503509521484
    6. ' @' → logprob: -12.507503509521484
    7. '
' → logprob: -14.007503509521484
    8. '@param' → logprob: -14.257503509521484
    9. '_def' → logprob: -14.757503509521484
    10. '@index' → logprob: -15.382503509521484

Token 470: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -0.48096907138824463
    2. 'property' → logprob: -0.9809690713882446
    3. 'staticmethod' → logprob: -4.980968952178955
    4. 'class' → logprob: -14.980969429016113
    5. ' property' → logprob: -15.105969429016113
    6. '@property' → logprob: -15.480969429016113
    7. 'Property' → logprob: -17.105968475341797
    8. 'dat' → logprob: -17.480968475341797
    9. 'prop' → logprob: -18.105968475341797
    10. 'properties' → logprob: -18.355968475341797

Token 471: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01009744219481945
    2. '
' → logprob: -5.135097503662109
    3. '   ' → logprob: -6.010097503662109
    4. ' def' → logprob: -6.385097503662109
    5. '_def' → logprob: -12.63509750366211
    6. '	def' → logprob: -12.76009750366211
    7. '```' → logprob: -12.88509750366211
    8. '
' → logprob: -13.01009750366211
    9. 'from' → logprob: -13.13509750366211
    10. '(' → logprob: -13.63509750366211

Token 472: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002434699417790398
    2. ' def' → logprob: -8.875243186950684
    3. '
' → logprob: -9.375243186950684
    4. '   ' → logprob: -11.125243186950684
    5. '	def' → logprob: -12.750243186950684
    6. 'from' → logprob: -15.000243186950684
    7. '(def' → logprob: -15.000243186950684
    8. '_def' → logprob: -15.625243186950684
    9. ':def' → logprob: -15.750243186950684
    10. '```' → logprob: -16.625244140625

Token 473: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00015693542081862688
    2. '
' → logprob: -9.250157356262207
    3. 'from' → logprob: -9.750157356262207
    4. ' def' → logprob: -13.000157356262207
    5. 'classmethod' → logprob: -15.625157356262207
    6. 'parse' → logprob: -17.50015640258789
    7. 'decode' → logprob: -19.37515640258789
    8. 'staticmethod' → logprob: -19.37515640258789
    9. '

' → logprob: -19.37515640258789
    10. '  
' → logprob: -19.75015640258789

Token 474: ' parse' (ID: 8420)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.16771094501018524
    2. 'def' → logprob: -1.9177109003067017
    3. 'parse' → logprob: -4.917710781097412
    4. '
' → logprob: -9.04271125793457
    5. ' from' → logprob: -11.79271125793457
    6. 'classmethod' → logprob: -12.04271125793457
    7. '_from' → logprob: -12.16771125793457
    8. 'decode' → logprob: -13.16771125793457
    9. ' def' → logprob: -13.29271125793457
    10. '_parse' → logprob: -14.66771125793457

Token 475: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -9.014684110297821e-06
    2. 'cls' → logprob: -12.000008583068848
    3. '(' → logprob: -13.000008583068848
    4. ' cls' → logprob: -14.750008583068848
    5. '(
' → logprob: -16.125009536743164
    6. ' (' → logprob: -17.125009536743164
    7. 'classmethod' → logprob: -17.250009536743164
    8. 'def' → logprob: -18.000009536743164
    9. '(clazz' → logprob: -18.500009536743164
    10. '_cls' → logprob: -18.625009536743164

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. '(cls' → logprob: -14.00000286102295
    3. ' ,' → logprob: -14.12500286102295
    4. ',
' → logprob: -14.75000286102295
    5. 'cls' → logprob: -15.50000286102295
    6. '   ' → logprob: -16.000001907348633
    7. ',s' → logprob: -16.625001907348633
    8. ',class' → logprob: -17.375001907348633
    9. ',text' → logprob: -18.250001907348633
    10. ',string' → logprob: -18.375001907348633

Token 477: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.040575288236141205
    2. 'cls' → logprob: -3.6655752658843994
    3. 'input' → logprob: -5.0405755043029785
    4. 'string' → logprob: -5.5405755043029785
    5. 'mc' → logprob: -6.1655755043029785
    6. 'text' → logprob: -7.1655755043029785
    7. ' s' → logprob: -7.4155755043029785
    8. 'value' → logprob: -9.41557502746582
    9. 'raw' → logprob: -10.16557502746582
    10. 'token' → logprob: -10.29057502746582

Token 478: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009114635176956654
    2. ':str' → logprob: -8.125911712646484
    3. ')' → logprob: -8.250911712646484
    4. '):' → logprob: -8.625911712646484
    5. '   ' → logprob: -9.500911712646484
    6. '):
' → logprob: -9.625911712646484
    7. '       ' → logprob: -11.250911712646484
    8. ' :' → logprob: -11.750911712646484
    9. 'cls' → logprob: -12.000911712646484
    10. 's' → logprob: -13.000911712646484

Token 479: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0015259294304996729
    2. ' str' → logprob: -6.50152587890625
    3. ')' → logprob: -10.75152587890625
    4. 'cls' → logprob: -13.37652587890625
    5. '[str' → logprob: -15.75152587890625
    6. '   ' → logprob: -15.87652587890625
    7. ':str' → logprob: -16.00152587890625
    8. 's' → logprob: -17.12652587890625
    9. '):
' → logprob: -17.12652587890625
    10. '
' → logprob: -17.12652587890625

Token 480: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011355629976605996
    2. '):
' → logprob: -9.250113487243652
    3. '):' → logprob: -11.750113487243652
    4. '   ' → logprob: -11.750113487243652
    5. ' )' → logprob: -14.375113487243652
    6. '):
' → logprob: -15.000113487243652
    7. '       ' → logprob: -15.250113487243652
    8. ')->' → logprob: -15.875113487243652
    9. ':' → logprob: -16.62511444091797
    10. '")' → logprob: -16.87511444091797

Token 481: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.060617998242378235
    2. '->' → logprob: -2.9356179237365723
    3. ' ->' → logprob: -5.560617923736572
    4. ')' → logprob: -6.935617923736572
    5. ':
' → logprob: -7.435617923736572
    6. '   ' → logprob: -8.93561840057373
    7. '       ' → logprob: -9.81061840057373
    8. ')->' → logprob: -9.93561840057373
    9. '():' → logprob: -10.68561840057373
    10. '):' → logprob: -10.68561840057373

Token 482: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1601484715938568
    2. '"' → logprob: -3.1601483821868896
    3. 'cls' → logprob: -3.6601483821868896
    4. 'Optional' → logprob: -3.9101483821868896
    5. ''M' → logprob: -4.160148620605469
    6. ' '' → logprob: -4.285148620605469
    7. 'List' → logprob: -4.285148620605469
    8. 'MC' → logprob: -5.535148620605469
    9. ''class' → logprob: -6.160148620605469
    10. 'Tuple' → logprob: -6.410148620605469

Token 483: 'MC' (ID: 15190)
  Prédit: 'MC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MC' → logprob: -1.1472419600977446e-06
    2. 'cls' → logprob: -13.750000953674316
    3. ' MC' → logprob: -17.875001907348633
    4. '_MC' → logprob: -20.000001907348633
    5. 'mc' → logprob: -21.750001907348633
    6. 'MS' → logprob: -23.375001907348633
    7. '
' → logprob: -23.625001907348633
    8. 'M' → logprob: -23.625001907348633
    9. 'Optional' → logprob: -23.750001907348633
    10. '"' → logprob: -24.000001907348633

Token 484: 'XI' (ID: 124666)
  Prédit: 'XI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XI' → logprob: -0.0015698568895459175
    2. 'X' → logprob: -6.501569747924805
    3. 'CI' → logprob: -9.751569747924805
    4. 'CX' → logprob: -12.376569747924805
    5. 'MC' → logprob: -13.751569747924805
    6. 'C' → logprob: -14.001569747924805
    7. 'XL' → logprob: -14.126569747924805
    8. 'XC' → logprob: -14.251569747924805
    9. 'xi' → logprob: -15.251569747924805
    10. ' XI' → logprob: -15.501569747924805

Token 485: 'String' (ID: 916)
  Prédit: 'String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -1.9361264946837764e-07
    2. '"' → logprob: -17.0
    3. 'string' → logprob: -17.75
    4. '_String' → logprob: -18.125
    5. 'Str' → logprob: -19.0
    6. '")' → logprob: -19.0
    7. ' String' → logprob: -19.25
    8. '
' → logprob: -19.5
    9. '```' → logprob: -19.5
    10. '_string' → logprob: -19.5

Token 486: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.05002281442284584
    2. '):' → logprob: -3.425022840499878
    3. '":
' → logprob: -5.050022602081299
    4. '"):' → logprob: -5.675022602081299
    5. '):
' → logprob: -5.800022602081299
    6. '"):
' → logprob: -6.675022602081299
    7. ':' → logprob: -6.925022602081299
    8. '":
' → logprob: -7.425022602081299
    9. ')' → logprob: -9.175023078918457
    10. '"' → logprob: -9.425023078918457

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008986006141640246
    2. 'i' → logprob: -7.625898838043213
    3. '   ' → logprob: -8.875898361206055
    4. 'letters' → logprob: -9.250898361206055
    5. 'index' → logprob: -9.500898361206055
    6. ' i' → logprob: -10.250898361206055
    7. 'pos' → logprob: -10.500898361206055
    8. 'idx' → logprob: -11.625898361206055
    9. 'tokens' → logprob: -11.750898361206055
    10. 'result' → logprob: -12.000898361206055

Token 488: ' #' (ID: 1069)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.11454054713249207
    2. 'result' → logprob: -2.3645405769348145
    3. 'count' → logprob: -4.6145405769348145
    4. 'items' → logprob: -6.9895405769348145
    5. 'index' → logprob: -7.2395405769348145
    6. 'current' → logprob: -7.8645405769348145
    7. 'i' → logprob: -7.8645405769348145
    8. 'obj' → logprob: -7.8645405769348145
    9. '       ' → logprob: -8.114540100097656
    10. ' letters' → logprob: -8.364540100097656

Token 489: ' Parsing' (ID: 173321)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.13728708028793335
    2. 'result' → logprob: -2.137287139892578
    3. 'current' → logprob: -5.887287139892578
    4. 'obj' → logprob: -6.137287139892578
    5. 'instance' → logprob: -6.387287139892578
    6. 'if' → logprob: -7.012287139892578
    7. 'items' → logprob: -7.262287139892578
    8. ' letters' → logprob: -7.512287139892578
    9. '   ' → logprob: -8.637287139892578
    10. 'res' → logprob: -9.012287139892578

Token 490: ' must' (ID: 2804)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6535972952842712
    2. 'letters' → logprob: -1.278597354888916
    3. ' result' → logprob: -2.403597354888916
    4. ' letters' → logprob: -2.653597354888916
    5. '       ' → logprob: -3.778597354888916
    6. 'count' → logprob: -4.903597354888916
    7. 'i' → logprob: -6.028597354888916
    8. 'index' → logprob: -6.528597354888916
    9. 'obj' → logprob: -6.778597354888916
    10. ' i' → logprob: -6.778597354888916

Token 491: ' validate' (ID: 14986)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.4745500683784485
    2. 'result' → logprob: -1.9745500087738037
    3. ' result' → logprob: -3.3495500087738037
    4. 'handle' → logprob: -3.4745500087738037
    5. 'parse' → logprob: -3.4745500087738037
    6. '       ' → logprob: -3.5995500087738037
    7. ' parse' → logprob: -4.224550247192383
    8. 'be' → logprob: -4.724550247192383
    9. 'count' → logprob: -4.724550247192383
    10. 'continue' → logprob: -4.849550247192383

Token 492: ':
' (ID: 734)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8657194972038269
    2. 'result' → logprob: -1.1157195568084717
    3. 'if' → logprob: -2.8657195568084717
    4. 'letters' → logprob: -3.3657195568084717
    5. ' if' → logprob: -3.7407195568084717
    6. ' result' → logprob: -3.8657195568084717
    7. ' letters' → logprob: -3.8657195568084717
    8. '       ' → logprob: -3.9907195568084717
    9. ' count' → logprob: -4.115719318389893
    10. 'i' → logprob: -4.615719318389893

Token 493: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0611300468444824
    2. 'result' → logprob: -1.5611300468444824
    3. ' result' → logprob: -1.5611300468444824
    4. 'count' → logprob: -2.3111300468444824
    5. ' letters' → logprob: -3.0611300468444824
    6. 'letters' → logprob: -3.0611300468444824
    7. ' count' → logprob: -4.436130046844482
    8. ' if' → logprob: -5.061130046844482
    9. ' current' → logprob: -5.061130046844482
    10. ' i' → logprob: -5.436130046844482

Token 494: ' #' (ID: 1069)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.5294860601425171
    2. 'result' → logprob: -1.029486060142517
    3. 'count' → logprob: -4.029486179351807
    4. 'if' → logprob: -4.904486179351807
    5. 'current' → logprob: -5.654486179351807
    6. 'index' → logprob: -5.654486179351807
    7. '       ' → logprob: -5.779486179351807
    8. 'obj' → logprob: -5.904486179351807
    9. 'items' → logprob: -6.404486179351807
    10. 'instance' → logprob: -6.404486179351807

Token 495: ' -' (ID: 533)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3632609248161316
    2. 'letters' → logprob: -1.7382609844207764
    3. 'if' → logprob: -3.1132609844207764
    4. ' result' → logprob: -4.113260746002197
    5. 'import' → logprob: -4.738260746002197
    6. 'count' → logprob: -4.863260746002197
    7. ' letters' → logprob: -4.988260746002197
    8. 'parts' → logprob: -5.488260746002197
    9. 'index' → logprob: -5.488260746002197
    10. 'current' → logprob: -5.738260746002197

Token 496: ' letters' (ID: 18151)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5259846448898315
    2. 'if' → logprob: -1.9009846448898315
    3. ' result' → logprob: -3.025984764099121
    4. 'i' → logprob: -3.025984764099121
    5. ' if' → logprob: -3.525984764099121
    6. 'pos' → logprob: -3.525984764099121
    7. 'prev' → logprob: -4.025984764099121
    8. 's' → logprob: -4.400984764099121
    9. 'letters' → logprob: -4.525984764099121
    10. 'current' → logprob: -4.650984764099121

Token 497: ' appear' (ID: 7680)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.9234975576400757
    2. ' in' → logprob: -2.0484976768493652
    3. ' =' → logprob: -2.4234976768493652
    4. ' must' → logprob: -2.4234976768493652
    5. 'in' → logprob: -2.7984976768493652
    6. 'are' → logprob: -3.0484976768493652
    7. 'allowed' → logprob: -3.5484976768493652
    8. ' can' → logprob: -3.9234976768493652
    9. 'must' → logprob: -4.048497676849365
    10. ' and' → logprob: -4.173497676849365

Token 498: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08557119220495224
    2. ' in' → logprob: -2.7105712890625
    3. 'only' → logprob: -4.3355712890625
    4. ' only' → logprob: -6.2105712890625
    5. ' ' → logprob: -9.4605712890625
    6. 'strict' → logprob: -9.8355712890625
    7. 'at' → logprob: -9.9605712890625
    8. '   ' → logprob: -10.3355712890625
    9. 'exact' → logprob: -10.4605712890625
    10. 's' → logprob: -11.3355712890625

Token 499: ' order' (ID: 2569)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8820111155509949
    2. 'order' → logprob: -1.6320111751556396
    3. '_m' → logprob: -1.8820111751556396
    4. 'the' → logprob: -2.6320111751556396
    5. ''m' → logprob: -3.0070111751556396
    6. 'cls' → logprob: -3.0070111751556396
    7. '_mc' → logprob: -3.8820111751556396
    8. 'mc' → logprob: -4.1320109367370605
    9. ''' → logprob: -4.6320109367370605
    10. 'correct' → logprob: -5.2570109367370605

Token 500: ' m' (ID: 284)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2565576434135437
    2. 'prev' → logprob: -2.8815577030181885
    3. 'current' → logprob: -3.5065577030181885
    4. ' current' → logprob: -3.6315577030181885
    5. ' last' → logprob: -3.8815577030181885
    6. ' prev' → logprob: -4.506557464599609
    7. 'expected' → logprob: -4.631557464599609
    8. 'last' → logprob: -4.881557464599609
    9. ',' → logprob: -5.006557464599609
    10. ' and' → logprob: -5.256557464599609

Token 501: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4323006570339203
    2. ',c' → logprob: -1.3073006868362427
    3. 'c' → logprob: -2.557300567626953
    4. ' ,' → logprob: -6.807300567626953
    5. ',
' → logprob: -7.807300567626953
    6. '
' → logprob: -8.057300567626953
    7. ' c' → logprob: -8.182300567626953
    8. '   ' → logprob: -8.432300567626953
    9. 'cx' → logprob: -8.807300567626953
    10. '	c' → logprob: -10.057300567626953

Token 502: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25632593035697937
    2. ',x' → logprob: -1.5063259601593018
    3. 'x' → logprob: -6.006325721740723
    4. ' ,' → logprob: -6.506325721740723
    5. ',
' → logprob: -9.131325721740723
    6. ',i' → logprob: -9.381325721740723
    7. '',' → logprob: -9.756325721740723
    8. ' ' → logprob: -10.631325721740723
    9. '   ' → logprob: -10.756325721740723
    10. ' x' → logprob: -11.006325721740723

Token 503: ',i' (ID: 25032)
  Prédit: ',i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -0.006918076425790787
    2. ',' → logprob: -5.006917953491211
    3. 'i' → logprob: -9.131917953491211
    4. ' ,' → logprob: -9.881917953491211
    5. ',
' → logprob: -10.881917953491211
    6. ','' → logprob: -12.006917953491211
    7. ',x' → logprob: -12.631917953491211
    8. '_,' → logprob: -13.256917953491211
    9. ',['' → logprob: -13.256917953491211
    10. ' i' → logprob: -13.756917953491211

Token 504: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0845780223608017
    2. '
' → logprob: -3.584578037261963
    3. 'current' → logprob: -3.959578037261963
    4. 'prev' → logprob: -4.209578037261963
    5. ' current' → logprob: -5.459578037261963
    6. 'pos' → logprob: -5.709578037261963
    7. 'index' → logprob: -5.834578037261963
    8. '        
' → logprob: -6.459578037261963
    9. 'idx' → logprob: -6.834578037261963
    10. '   ' → logprob: -6.959578037261963

Token 505: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014164448715746403
    2. 'current' → logprob: -5.014164447784424
    3. ' current' → logprob: -6.389164447784424
    4. 'index' → logprob: -6.514164447784424
    5. 'count' → logprob: -7.014164447784424
    6. '
' → logprob: -7.014164447784424
    7. '   ' → logprob: -7.139164447784424
    8. 'letter' → logprob: -8.014164924621582
    9. 'prev' → logprob: -8.139164924621582
    10. ' index' → logprob: -8.639164924621582

Token 506: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9655193090438843
    2. '       ' → logprob: -1.3405193090438843
    3. 'count' → logprob: -2.590519428253174
    4. 'current' → logprob: -2.840519428253174
    5. 'prev' → logprob: -2.840519428253174
    6. 'last' → logprob: -3.215519428253174
    7. 'index' → logprob: -3.215519428253174
    8. 'letters' → logprob: -3.840519428253174
    9. 'letter' → logprob: -4.340519428253174
    10. 'pos' → logprob: -4.465519428253174

Token 507: ' -' (ID: 533)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6733421683311462
    2. 'count' → logprob: -2.173342227935791
    3. 'last' → logprob: -2.423342227935791
    4. 'index' → logprob: -2.548342227935791
    5. 'current' → logprob: -2.673342227935791
    6. 'letter' → logprob: -3.548342227935791
    7. 'pos' → logprob: -3.673342227935791
    8. 'idx' → logprob: -3.673342227935791
    9. 'prev' → logprob: -4.423342227935791
    10. 'allowed' → logprob: -5.173342227935791

Token 508: ' letters' (ID: 18151)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.9373342990875244
    2. 'prev' → logprob: -1.8123342990875244
    3. ' count' → logprob: -2.3123342990875244
    4. 'result' → logprob: -2.5623342990875244
    5. ' result' → logprob: -3.4373342990875244
    6. 'i' → logprob: -3.5623342990875244
    7. 'index' → logprob: -3.8123342990875244
    8. 'last' → logprob: -4.312334060668945
    9. 'idx' → logprob: -4.312334060668945
    10. 'pos' → logprob: -4.437334060668945

Token 509: ' appear' (ID: 7680)
  Prédit: '_seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_seen' → logprob: -1.4152952432632446
    2. ' =' → logprob: -2.415295124053955
    3. '_set' → logprob: -2.540295124053955
    4. 'and' → logprob: -2.790295124053955
    5. ' are' → logprob: -2.790295124053955
    6. '_allowed' → logprob: -2.915295124053955
    7. ' can' → logprob: -3.290295124053955
    8. ' and' → logprob: -3.290295124053955
    9. '_count' → logprob: -3.915295124053955
    10. 'can' → logprob: -3.915295124053955

Token 510: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.0432597398757935
    2. ' only' → logprob: -1.1682597398757935
    3. 'only' → logprob: -1.7932597398757935
    4. 'at' → logprob: -2.293259620666504
    5. ' in' → logprob: -3.293259620666504
    6. 'in' → logprob: -3.668259620666504
    7. ' no' → logprob: -5.918259620666504
    8. 'no' → logprob: -6.918259620666504
    9. 'once' → logprob: -7.418259620666504
    10. ' ' → logprob: -7.793259620666504

Token 511: ' most' (ID: 1645)
  Prédit: 'most'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.00029029499273747206
    2. ' most' → logprob: -8.250289916992188
    3. 'least' → logprob: -11.500289916992188
    4. '-most' → logprob: -11.875289916992188
    5. 'Most' → logprob: -12.500289916992188
    6. '   ' → logprob: -13.125289916992188
    7. '...' → logprob: -13.750289916992188
    8. '
' → logprob: -14.375289916992188
    9. 'mo' → logprob: -14.625289916992188
    10. '```' → logprob: -14.625289916992188

Token 512: ' once' (ID: 4730)
  Prédit: 'once'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'once' → logprob: -0.029841316863894463
    2. ' once' → logprob: -3.529841423034668
    3. 'one' → logprob: -9.779841423034668
    4. '_once' → logprob: -10.404841423034668
    5. 'Once' → logprob: -13.404841423034668
    6. ' ' → logprob: -13.779841423034668
    7. ' one' → logprob: -14.529841423034668
    8. '
' → logprob: -15.279841423034668
    9. '一次' → logprob: -15.654841423034668
    10. '1' → logprob: -15.654841423034668

Token 513: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011564125306904316
    2. '   ' → logprob: -7.751156330108643
    3. '
' → logprob: -8.7511568069458
    4. ',' → logprob: -9.0011568069458
    5. ' current' → logprob: -9.1261568069458
    6. 'current' → logprob: -10.0011568069458
    7. 'prev' → logprob: -10.2511568069458
    8. 'index' → logprob: -11.0011568069458
    9. '        
' → logprob: -11.1261568069458
    10. 'count' → logprob: -11.1261568069458

Token 514: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00490355072543025
    2. '   ' → logprob: -5.629903316497803
    3. '
' → logprob: -7.629903316497803
    4. 'count' → logprob: -8.004903793334961
    5. 'index' → logprob: -9.379903793334961
    6. 'current' → logprob: -9.504903793334961
    7. '        
' → logprob: -10.004903793334961
    8. 'letter' → logprob: -10.379903793334961
    9. 'prev' → logprob: -10.754903793334961
    10. 'letters' → logprob: -10.879903793334961

Token 515: ' #' (ID: 1069)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seen' → logprob: -0.9050434827804565
    2. 'result' → logprob: -2.155043601989746
    3. 'count' → logprob: -2.280043601989746
    4. 'used' → logprob: -2.530043601989746
    5. 'letter' → logprob: -2.780043601989746
    6. '       ' → logprob: -2.905043601989746
    7. 'index' → logprob: -2.905043601989746
    8. ' seen' → logprob: -3.655043601989746
    9. 'last' → logprob: -3.780043601989746
    10. 'current' → logprob: -4.155043601989746

Token 516: ' -' (ID: 533)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1951366662979126
    2. 'letter' → logprob: -3.195136547088623
    3. 'seen' → logprob: -3.570136547088623
    4. 'last' → logprob: -3.695136547088623
    5. 'used' → logprob: -3.820136547088623
    6. 'letters' → logprob: -3.945136547088623
    7. 'index' → logprob: -4.320136547088623
    8. 'count' → logprob: -4.570136547088623
    9. 'current' → logprob: -5.070136547088623
    10. 'prev' → logprob: -6.070136547088623

Token 517: ' digits' (ID: 37806)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7632113695144653
    2. ' result' → logprob: -1.7632113695144653
    3. 'count' → logprob: -2.013211250305176
    4. 'i' → logprob: -2.888211250305176
    5. ' count' → logprob: -3.763211250305176
    6. 'pos' → logprob: -4.013211250305176
    7. 'index' → logprob: -4.138211250305176
    8. ' i' → logprob: -4.138211250305176
    9. 'prev' → logprob: -4.263211250305176
    10. 'idx' → logprob: -4.638211250305176

Token 518: ' ' (ID: 220)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.6930807828903198
    2. ' can' → logprob: -2.1930809020996094
    3. ' =' → logprob: -2.9430809020996094
    4. ' may' → logprob: -3.6930809020996094
    5. 'idx' → logprob: -3.8180809020996094
    6. 'acc' → logprob: -3.8180809020996094
    7. ' i' → logprob: -4.068080902099609
    8. 'prev' → logprob: -4.193080902099609
    9. 'count' → logprob: -4.318080902099609
    10. '0' → logprob: -4.318080902099609

Token 519: '2' (ID: 17)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.7797068357467651
    2. '0' → logprob: -1.9047068357467651
    3. 'preced' → logprob: -2.1547069549560547
    4. ' before' → logprob: -2.2797069549560547
    5. 'before' → logprob: -2.2797069549560547
    6. 'are' → logprob: -2.5297069549560547
    7. ' preceding' → logprob: -2.9047069549560547
    8. ' can' → logprob: -3.0297069549560547
    9. ' (' → logprob: -3.1547069549560547
    10. ' ' → logprob: -3.6547069549560547

Token 520: '..' (ID: 485)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11690489202737808
    2. 'to' → logprob: -2.8669049739837646
    3. '..' → logprob: -3.6169049739837646
    4. '9' → logprob: -4.2419047355651855
    5. '
' → logprob: -6.1169047355651855
    6. '345' → logprob: -6.1169047355651855
    7. '...' → logprob: -6.2419047355651855
    8. ' ' → logprob: -6.8669047355651855
    9. '3' → logprob: -6.8669047355651855
    10. '   ' → logprob: -7.2419047355651855

Token 521: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.500003814697266
    3. '
' → logprob: -13.500003814697266
    4. '

' → logprob: -15.500003814697266
    5. '
' → logprob: -16.625003814697266
    6. '   ' → logprob: -16.625003814697266
    7. '```' → logprob: -16.750003814697266
    8. '...' → logprob: -17.125003814697266
    9. '-' → logprob: -17.312503814697266
    10. ''' → logprob: -17.562503814697266

Token 522: ' only' (ID: 1606)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.8855826258659363
    2. ' i' → logprob: -1.885582685470581
    3. ' can' → logprob: -2.385582685470581
    4. ' must' → logprob: -2.885582685470581
    5. '       ' → logprob: -3.260582685470581
    6. 'prev' → logprob: -3.635582685470581
    7. 'pos' → logprob: -3.760582685470581
    8. 'i' → logprob: -3.885582685470581
    9. ' prev' → logprob: -4.135582447052002
    10. ' should' → logprob: -4.135582447052002

Token 523: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027845539152622223
    2. '   ' → logprob: -7.127784729003906
    3. '
' → logprob: -7.502784729003906
    4. ' current' → logprob: -8.252784729003906
    5. '        
' → logprob: -8.877784729003906
    6. ',' → logprob: -9.002784729003906
    7. 'count' → logprob: -9.127784729003906
    8. ' index' → logprob: -9.377784729003906
    9. 'index' → logprob: -9.627784729003906
    10. 'current' → logprob: -9.752784729003906

Token 524: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.9504482746124268
    2. 'count' → logprob: -1.4504482746124268
    3. 'counts' → logprob: -2.2004482746124268
    4. 'multip' → logprob: -2.7004482746124268
    5. ' prefixes' → logprob: -2.9504482746124268
    6. 'a' → logprob: -3.4504482746124268
    7. ' part' → logprob: -3.5754482746124268
    8. ' prefix' → logprob: -3.7004482746124268
    9. ' a' → logprob: -3.8254482746124268
    10. 'part' → logprob: -4.575448036193848

Token 525: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07352187484502792
    2. ' current' → logprob: -3.823521852493286
    3. ' count' → logprob: -4.573522090911865
    4. 'count' → logprob: -4.823522090911865
    5. '
' → logprob: -5.198522090911865
    6. ' i' → logprob: -5.323522090911865
    7. ' prev' → logprob: -5.448522090911865
    8. ' index' → logprob: -6.073522090911865
    9. ' next' → logprob: -6.198522090911865
    10. '   ' → logprob: -6.323522090911865

Token 526: ' letter' (ID: 10263)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2834215462207794
    2. 'letters' → logprob: -1.908421516418457
    3. 'letter' → logprob: -2.908421516418457
    4. ' a' → logprob: -3.908421516418457
    5. ' letters' → logprob: -4.033421516418457
    6. 'the' → logprob: -5.783421516418457
    7. ' letter' → logprob: -6.033421516418457
    8. ' the' → logprob: -8.033421516418457
    9. 'each' → logprob: -9.033421516418457
    10. 'their' → logprob: -10.158421516418457

Token 527: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023587599862366915
    2. '   ' → logprob: -7.502358913421631
    3. 'count' → logprob: -7.877358913421631
    4. 'index' → logprob: -8.252358436584473
    5. 'current' → logprob: -8.502358436584473
    6. 'letters' → logprob: -8.752358436584473
    7. ' current' → logprob: -9.002358436584473
    8. ' index' → logprob: -9.127358436584473
    9. 'letter' → logprob: -9.252358436584473
    10. 'i' → logprob: -9.877358436584473

Token 528: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019357812125235796
    2. '   ' → logprob: -6.751935958862305
    3. 'count' → logprob: -8.126935958862305
    4. '
' → logprob: -8.501935958862305
    5. 'index' → logprob: -10.626935958862305
    6. 'current' → logprob: -10.751935958862305
    7. 'letters' → logprob: -10.876935958862305
    8. ' current' → logprob: -11.126935958862305
    9. '        
' → logprob: -11.126935958862305
    10. 'letter' → logprob: -11.251935958862305

Token 529: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6338252425193787
    2. '       ' → logprob: -2.1338253021240234
    3. 'index' → logprob: -2.3838253021240234
    4. 'count' → logprob: -2.6338253021240234
    5. 'letters' → logprob: -2.7588253021240234
    6. ' result' → logprob: -3.2588253021240234
    7. 'current' → logprob: -3.5088253021240234
    8. 'last' → logprob: -4.633825302124023
    9. ' index' → logprob: -4.883825302124023
    10. 'letter' → logprob: -4.883825302124023

Token 530: ' -' (ID: 533)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.42938655614852905
    2. 'letters' → logprob: -2.179386615753174
    3. 'index' → logprob: -2.304386615753174
    4. '       ' → logprob: -3.179386615753174
    5. 'count' → logprob: -3.929386615753174
    6. 'current' → logprob: -4.179386615753174
    7. 'seen' → logprob: -4.554386615753174
    8. 'letter' → logprob: -4.554386615753174
    9. 'idx' → logprob: -4.804386615753174
    10. 'last' → logprob: -4.929386615753174

Token 531: ' no' (ID: 860)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7736752033233643
    2. 'prev' → logprob: -1.8986752033233643
    3. 'index' → logprob: -2.1486752033233643
    4. 'pos' → logprob: -2.5236752033233643
    5. ' index' → logprob: -2.5236752033233643
    6. ' i' → logprob: -3.0236752033233643
    7. ' last' → logprob: -3.1486752033233643
    8. 'allowed' → logprob: -3.3986752033233643
    9. 'last' → logprob: -3.5236752033233643
    10. ' prev' → logprob: -3.6486752033233643

Token 532: ' '' (ID: 461)
  Prédit: ' invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' invalid' → logprob: -0.8784275054931641
    2. ' other' → logprob: -1.128427505493164
    3. ' spaces' → logprob: -2.128427505493164
    4. 'invalid' → logprob: -3.253427505493164
    5. ' leading' → logprob: -3.503427505493164
    6. 'spaces' → logprob: -4.503427505493164
    7. 'other' → logprob: -4.628427505493164
    8. ' unexpected' → logprob: -4.753427505493164
    9. ' whitespace' → logprob: -5.253427505493164
    10. 'space' → logprob: -5.378427505493164

Token 533: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33041051030158997
    2. ''' → logprob: -2.3304104804992676
    3. ' ')' → logprob: -2.9554104804992676
    4. ' '' → logprob: -3.2054104804992676
    5. '1' → logprob: -3.4554104804992676
    6. ' ' → logprob: -3.7054104804992676
    7. '')' → logprob: -4.330410480499268
    8. 's' → logprob: -5.080410480499268
    9. '9' → logprob: -6.580410480499268
    10. 'def' → logprob: -6.705410480499268

Token 534: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15035144984722137
    2. '0' → logprob: -2.0253515243530273
    3. '')' → logprob: -6.025351524353027
    4. 'digits' → logprob: -6.900351524353027
    5. '<|end|>' → logprob: -7.275351524353027
    6. ' in' → logprob: -7.400351524353027
    7. ''s' → logprob: -7.775351524353027
    8. ''''' → logprob: -8.275351524353027
    9. 'allowed' → logprob: -8.775351524353027
    10. 'digit' → logprob: -8.900351524353027

Token 535: ' no' (ID: 860)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3572205901145935
    2. ' raise' → logprob: -2.9822206497192383
    3. 'and' → logprob: -3.6072206497192383
    4. '
' → logprob: -4.107220649719238
    5. ' '' → logprob: -4.232220649719238
    6. ' ' → logprob: -4.232220649719238
    7. ' return' → logprob: -4.232220649719238
    8. '       ' → logprob: -4.232220649719238
    9. ' continue' → logprob: -4.232220649719238
    10. ' or' → logprob: -4.357220649719238

Token 536: ' '' (ID: 461)
  Prédit: ' invalid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' invalid' → logprob: -1.0804924964904785
    2. ' leading' → logprob: -2.0804924964904785
    3. ' spaces' → logprob: -2.2054924964904785
    4. 'invalid' → logprob: -2.2054924964904785
    5. ' other' → logprob: -2.8304924964904785
    6. ' digits' → logprob: -3.3304924964904785
    7. 'digits' → logprob: -3.5804924964904785
    8. ' repeated' → logprob: -3.7054924964904785
    9. 'leading' → logprob: -3.9554924964904785
    10. ' letters' → logprob: -3.9554924964904785

Token 537: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6211650967597961
    2. ' ')' → logprob: -1.8711650371551514
    3. ' '' → logprob: -2.1211650371551514
    4. '')' → logprob: -2.7461650371551514
    5. '1' → logprob: -3.2461650371551514
    6. '0' → logprob: -3.2461650371551514
    7. ' ' → logprob: -4.2461652755737305
    8. 'a' → logprob: -5.4961652755737305
    9. 'digits' → logprob: -6.1211652755737305
    10. 'j' → logprob: -6.3711652755737305

Token 538: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.319714218378067
    2. '',' → logprob: -2.944714307785034
    3. 'digits' → logprob: -3.069714307785034
    4. '')' → logprob: -3.194714307785034
    5. '0' → logprob: -3.569714307785034
    6. '2' → logprob: -3.819714307785034
    7. '<|end|>' → logprob: -4.194714069366455
    8. ' in' → logprob: -5.069714069366455
    9. ''),' → logprob: -5.069714069366455
    10. ''''' → logprob: -5.444714069366455

Token 539: ' anywhere' (ID: 15907)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1040864810347557
    2. 'count' → logprob: -3.604086399078369
    3. ' index' → logprob: -4.229086399078369
    4. ' current' → logprob: -4.229086399078369
    5. ' count' → logprob: -4.854086399078369
    6. 'index' → logprob: -4.979086399078369
    7. ' i' → logprob: -5.229086399078369
    8. '   ' → logprob: -5.354086399078369
    9. 'current' → logprob: -6.104086399078369
    10. ' idx' → logprob: -6.354086399078369

Token 540: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002617158927023411
    2. '   ' → logprob: -6.627617359161377
    3. 'count' → logprob: -8.002616882324219
    4. 'letters' → logprob: -9.002616882324219
    5. 'index' → logprob: -9.127616882324219
    6. ' current' → logprob: -9.252616882324219
    7. ' letters' → logprob: -9.377616882324219
    8. 'current' → logprob: -9.502616882324219
    9. '
' → logprob: -9.877616882324219
    10. ' index' → logprob: -10.002616882324219

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017031522002071142
    2. '   ' → logprob: -6.626703262329102
    3. '        
' → logprob: -9.001703262329102
    4. ',' → logprob: -10.001703262329102
    5. '
' → logprob: -10.126703262329102
    6. ' current' → logprob: -10.626703262329102
    7. ' ' → logprob: -10.751703262329102
    8. '      ' → logprob: -11.126703262329102
    9. ' i' → logprob: -11.251703262329102
    10. '    ' → logprob: -11.501703262329102

Token 542: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3093148469924927
    2. 'index' → logprob: -1.5593148469924927
    3. 'seen' → logprob: -2.059314727783203
    4. 'result' → logprob: -2.184314727783203
    5. 'current' → logprob: -3.059314727783203
    6. 'used' → logprob: -3.309314727783203
    7. 'last' → logprob: -3.684314727783203
    8. 'letter' → logprob: -3.809314727783203
    9. 'count' → logprob: -3.934314727783203
    10. 'order' → logprob: -3.934314727783203

Token 543: ' -' (ID: 533)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -1.4672057628631592
    2. 'result' → logprob: -1.4672057628631592
    3. '       ' → logprob: -1.9672057628631592
    4. 'letters' → logprob: -2.217205762863159
    5. 'seen' → logprob: -3.092205762863159
    6. 'pos' → logprob: -3.592205762863159
    7. ' index' → logprob: -3.592205762863159
    8. 'idx' → logprob: -3.717205762863159
    9. 'letter' → logprob: -3.717205762863159
    10. 'i' → logprob: -3.842205762863159

Token 544: ' must' (ID: 2804)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.644392490386963
    2. 'last' → logprob: -1.769392490386963
    3. 'prev' → logprob: -2.019392490386963
    4. 'index' → logprob: -2.269392490386963
    5. 'import' → logprob: -2.644392490386963
    6. 'i' → logprob: -2.769392490386963
    7. 'allowed' → logprob: -3.269392490386963
    8. ' last' → logprob: -3.269392490386963
    9. 'pos' → logprob: -3.644392490386963
    10. 'idx' → logprob: -3.769392490386963

Token 545: ' not' (ID: 625)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.45334696769714355
    2. ' not' → logprob: -1.4533469676971436
    3. ' have' → logprob: -3.3283469676971436
    4. 'not' → logprob: -3.4533469676971436
    5. 'have' → logprob: -5.078347206115723
    6. 'be' → logprob: -5.078347206115723
    7. '_have' → logprob: -5.203347206115723
    8. ' match' → logprob: -5.453347206115723
    9. 'strip' → logprob: -5.703347206115723
    10. '_not' → logprob: -5.703347206115723

Token 546: ' be' (ID: 413)
  Prédit: ' contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contain' → logprob: -0.570738673210144
    2. ' have' → logprob: -1.570738673210144
    3. ' be' → logprob: -1.695738673210144
    4. ' start' → logprob: -4.320738792419434
    5. ' s' → logprob: -4.820738792419434
    6. ' allow' → logprob: -5.320738792419434
    7. 'contain' → logprob: -5.570738792419434
    8. ' raise' → logprob: -5.945738792419434
    9. ' ' → logprob: -6.070738792419434
    10. ' not' → logprob: -6.695738792419434

Token 547: ' empty' (ID: 8213)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -0.35276809334754944
    2. ' empty' → logprob: -1.477768063545227
    3. '""' → logprob: -3.3527681827545166
    4. '''' → logprob: -3.6027681827545166
    5. '"' → logprob: -6.1027679443359375
    6. ' ''' → logprob: -6.2277679443359375
    7. ''' → logprob: -7.2277679443359375
    8. ' ""' → logprob: -8.227767944335938
    9. 'None' → logprob: -8.227767944335938
    10. '_empty' → logprob: -8.227767944335938

Token 548: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13735826313495636
    2. ' if' → logprob: -2.2623581886291504
    3. 'if' → logprob: -4.63735818862915
    4. 'count' → logprob: -5.76235818862915
    5. ' index' → logprob: -6.13735818862915
    6. 'index' → logprob: -6.26235818862915
    7. ' i' → logprob: -6.51235818862915
    8. ' pos' → logprob: -6.63735818862915
    9. 'pos' → logprob: -7.01235818862915
    10. '        
' → logprob: -7.13735818862915

Token 549: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0063698976300656796
    2. ' if' → logprob: -5.2563700675964355
    3. '
' → logprob: -7.7563700675964355
    4. '        
' → logprob: -8.256369590759277
    5. 'if' → logprob: -8.631369590759277
    6. '   ' → logprob: -8.881369590759277
    7. '    
' → logprob: -11.006369590759277
    8. ' s' → logprob: -11.381369590759277
    9. ' ' → logprob: -11.506369590759277
    10. 's' → logprob: -11.506369590759277

Token 550: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.029020529240369797
    2. ' if' → logprob: -3.9040205478668213
    3. '       ' → logprob: -5.154020309448242
    4. 'index' → logprob: -6.779020309448242
    5. 'pos' → logprob: -7.529020309448242
    6. 'count' → logprob: -8.404020309448242
    7. 'letters' → logprob: -8.529020309448242
    8. 'assert' → logprob: -9.154020309448242
    9. 'i' → logprob: -9.154020309448242
    10. 'idx' → logprob: -9.779020309448242

Token 551: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.026416175067424774
    2. ' not' → logprob: -3.651416063308716
    3. 'len' → logprob: -9.151415824890137
    4. 's' → logprob: -12.026415824890137
    5. '   ' → logprob: -13.526415824890137
    6. ' len' → logprob: -14.151415824890137
    7. '
' → logprob: -14.526415824890137
    8. ' ' → logprob: -15.276415824890137
    9. '!' → logprob: -15.401415824890137
    10. ' s' → logprob: -15.776415824890137

Token 552: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.12693682312965393
    2. 's' → logprob: -2.126936912536621
    3. ' isinstance' → logprob: -12.876936912536621
    4. '(s' → logprob: -13.126936912536621
    5. ' ' → logprob: -13.876936912536621
    6. ' (' → logprob: -14.126936912536621
    7. ' ' → logprob: -14.626936912536621
    8. '
' → logprob: -14.814436912536621
    9. '_s' → logprob: -14.939436912536621
    10. '	s' → logprob: -14.939436912536621

Token 553: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0026164439041167498
    2. ':
' → logprob: -6.3776164054870605
    3. '.strip' → logprob: -7.5026164054870605
    4. '.' → logprob: -8.627616882324219
    5. ' or' → logprob: -9.752616882324219
    6. '.startswith' → logprob: -9.752616882324219
    7. ' :' → logprob: -11.002616882324219
    8. '   ' → logprob: -11.377616882324219
    9. 'or' → logprob: -11.752616882324219
    10. ':return' → logprob: -12.002616882324219

Token 554: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001001847442239523
    2. ':
' → logprob: -7.876001834869385
    3. ':' → logprob: -8.126002311706543
    4. ',' → logprob: -8.876002311706543
    5. 'raise' → logprob: -9.501002311706543
    6. ' raise' → logprob: -9.876002311706543
    7. '.' → logprob: -11.251002311706543
    8. '               ' → logprob: -12.001002311706543
    9. '          ' → logprob: -12.126002311706543
    10. '   ' → logprob: -12.126002311706543

Token 555: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.02907971292734146
    2. ' raise' → logprob: -4.029079914093018
    3. '           ' → logprob: -4.529079914093018
    4. '	raise' → logprob: -10.52907943725586
    5. '               ' → logprob: -11.02907943725586
    6. '```' → logprob: -11.77907943725586
    7. '   ' → logprob: -11.90407943725586
    8. 'Raise' → logprob: -11.90407943725586
    9. '
' → logprob: -11.90407943725586
    10. '_raise' → logprob: -12.77907943725586

Token 556: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -4.842555426876061e-06
    2. ' Value' → logprob: -12.250004768371582
    3. 'value' → logprob: -17.0000057220459
    4. '
' → logprob: -18.6250057220459
    5. '	Value' → logprob: -18.8750057220459
    6. '_value' → logprob: -19.0000057220459
    7. '_Value' → logprob: -19.6250057220459
    8. 'Val' → logprob: -20.2500057220459
    9. 'Type' → logprob: -20.3750057220459
    10. '<Value' → logprob: -20.7500057220459

Token 557: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00013047587708570063
    2. 'rror' → logprob: -9.375130653381348
    3. 'Value' → logprob: -10.000130653381348
    4. 'alue' → logprob: -16.37512969970703
    5. 'SError' → logprob: -16.62512969970703
    6. 'LError' → logprob: -17.62512969970703
    7. 'Empty' → logprob: -18.37512969970703
    8. 'r' → logprob: -19.00012969970703
    9. 'Input' → logprob: -19.25012969970703
    10. 'ror' → logprob: -19.37512969970703

Token 558: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.500001907348633
    3. '(f' → logprob: -15.000001907348633
    4. '       ' → logprob: -15.375001907348633
    5. '('' → logprob: -15.750001907348633
    6. '("'' → logprob: -17.750001907348633
    7. '           ' → logprob: -17.875001907348633
    8. '(
' → logprob: -18.625001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '"' → logprob: -20.625001907348633

Token 559: 'Empty' (ID: 5692)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1362224966287613
    2. 'Empty' → logprob: -2.7612226009368896
    3. 'Input' → logprob: -3.5112226009368896
    4. 's' → logprob: -3.5112226009368896
    5. 'Invalid' → logprob: -6.6362223625183105
    6. '"s' → logprob: -6.7612223625183105
    7. 'MC' → logprob: -6.8862223625183105
    8. ''' → logprob: -7.7612223625183105
    9. 'empty' → logprob: -9.136222839355469
    10. '""' → logprob: -9.761222839355469

Token 560: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.05346734821796417
    2. 'string' → logprob: -3.053467273712158
    3. ' input' → logprob: -5.678467273712158
    4. ' s' → logprob: -7.303467273712158
    5. ' strings' → logprob: -7.803467273712158
    6. ' code' → logprob: -9.053467750549316
    7. 's' → logprob: -9.428467750549316
    8. ' MC' → logprob: -9.428467750549316
    9. 'input' → logprob: -11.178467750549316
    10. ' ' → logprob: -11.178467750549316

Token 561: ' is' (ID: 382)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.02544938027858734
    2. ' is' → logprob: -4.025449275970459
    3. '")
' → logprob: -5.025449275970459
    4. ' cannot' → logprob: -8.525449752807617
    5. 'string' → logprob: -9.275449752807617
    6. ' provided' → logprob: -9.525449752807617
    7. ':' → logprob: -10.025449752807617
    8. ' for' → logprob: -10.400449752807617
    9. ' not' → logprob: -10.400449752807617
    10. ' string' → logprob: -10.650449752807617

Token 562: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.26102086901664734
    2. ' not' → logprob: -1.5110208988189697
    3. 'invalid' → logprob: -4.886020660400391
    4. ' invalid' → logprob: -6.511020660400391
    5. '	not' → logprob: -12.38602066040039
    6. 'illegal' → logprob: -14.26102066040039
    7. 'Not' → logprob: -14.38602066040039
    8. 'n't' → logprob: -14.38602066040039
    9. 'Invalid' → logprob: -14.51102066040039
    10. '```' → logprob: -14.51102066040039

Token 563: ' a' (ID: 261)
  Prédit: 'allowed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'allowed' → logprob: -0.034689683467149734
    2. 'valid' → logprob: -3.5346896648406982
    3. ' allowed' → logprob: -5.409689903259277
    4. ' valid' → logprob: -7.909689903259277
    5. 'a' → logprob: -9.409689903259277
    6. ' a' → logprob: -13.034689903259277
    7. 'allow' → logprob: -14.159689903259277
    8. '_allowed' → logprob: -14.159689903259277
    9. 'acceptable' → logprob: -14.784689903259277
    10. 'accepted' → logprob: -15.284689903259277

Token 564: ' valid' (ID: 4529)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.08896454423666
    2. ' valid' → logprob: -2.4639644622802734
    3. 'allowed' → logprob: -11.463964462280273
    4. 'Valid' → logprob: -11.963964462280273
    5. '_valid' → logprob: -13.213964462280273
    6. '	valid' → logprob: -13.713964462280273
    7. '
' → logprob: -13.963964462280273
    8. 'legal' → logprob: -14.088964462280273
    9. ' válido' → logprob: -14.338964462280273
    10. 'v' → logprob: -14.838964462280273

Token 565: ' MC' (ID: 31263)
  Prédit: 'MC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MC' → logprob: -0.3190295994281769
    2. 'mc' → logprob: -1.5690295696258545
    3. ' MC' → logprob: -2.9440295696258545
    4. ' mc' → logprob: -4.819029808044434
    5. 'input' → logprob: -6.194029808044434
    6. ' input' → logprob: -6.569029808044434
    7. '_mc' → logprob: -7.319029808044434
    8. '(mc' → logprob: -10.944029808044434
    9. '_MC' → logprob: -11.319029808044434
    10. 'value' → logprob: -12.444029808044434

Token 566: 'XI' (ID: 124666)
  Prédit: 'XI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XI' → logprob: -0.0013327404158189893
    2. 'X' → logprob: -6.626332759857178
    3. ' XI' → logprob: -12.62633228302002
    4. 'XL' → logprob: -13.87633228302002
    5. 'Xi' → logprob: -14.50133228302002
    6. 'xi' → logprob: -14.50133228302002
    7. 'I' → logprob: -14.75133228302002
    8. '```' → logprob: -14.87633228302002
    9. ')' → logprob: -15.62633228302002
    10. '
' → logprob: -16.126333236694336

Token 567: '-string' (ID: 73286)
  Prédit: 'String'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -0.023946864530444145
    2. 'string' → logprob: -3.898946762084961
    3. ' string' → logprob: -5.773946762084961
    4. ' String' → logprob: -8.523946762084961
    5. '-string' → logprob: -9.523946762084961
    6. '_string' → logprob: -11.898946762084961
    7. '")' → logprob: -12.398946762084961
    8. 's' → logprob: -13.023946762084961
    9. '")
' → logprob: -13.648946762084961
    10. 'str' → logprob: -13.773946762084961

Token 568: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.25246110558509827
    2. '")
' → logprob: -1.5024610757827759
    3. '")

' → logprob: -8.252461433410645
    4. '")
' → logprob: -9.127461433410645
    5. '       ' → logprob: -9.627461433410645
    6. '.")
' → logprob: -10.002461433410645
    7. '.")' → logprob: -10.127461433410645
    8. ')")
' → logprob: -12.377461433410645
    9. ')")' → logprob: -13.252461433410645
    10. '")

' → logprob: -13.502461433410645

Token 569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02692423202097416
    2. '   ' → logprob: -3.9019241333007812
    3. 'index' → logprob: -6.526924133300781
    4. ' index' → logprob: -6.651924133300781
    5. 'i' → logprob: -7.151924133300781
    6. 'idx' → logprob: -7.651924133300781
    7. ' i' → logprob: -7.901924133300781
    8. ' current' → logprob: -8.151924133300781
    9. '        
' → logprob: -8.401924133300781
    10. 'count' → logprob: -8.401924133300781

Token 570: ' letters' (ID: 18151)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6552921533584595
    2. 'last' → logprob: -1.7802921533584595
    3. 'letters' (adapté à ' letters') → logprob: -1.9052921533584595
    4. 'index' → logprob: -2.40529203414917
    5. 'current' → logprob: -4.28029203414917
    6. 'letter' → logprob: -4.28029203414917
    7. 'idx' → logprob: -4.65529203414917
    8. 'prev' → logprob: -4.65529203414917
    9. 'used' → logprob: -5.15529203414917
    10. 'seen' → logprob: -5.28029203414917

Token 571: '_found' (ID: 50825)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.77444988489151
    2. '_seen' → logprob: -1.3994498252868652
    3. '=' → logprob: -2.3994498252868652
    4. '_count' → logprob: -3.1494498252868652
    5. '_set' → logprob: -3.5244498252868652
    6. '_order' → logprob: -3.6494498252868652
    7. '_in' → logprob: -3.7744498252868652
    8. '_list' → logprob: -3.8994498252868652
    9. '_idx' → logprob: -4.524449825286865
    10. '_classes' → logprob: -4.899449825286865

Token 572: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3138650357723236
    2. ' =' → logprob: -1.313865065574646
    3. ':' → logprob: -7.4388651847839355
    4. '=set' → logprob: -11.438864707946777
    5. ',' → logprob: -13.438864707946777
    6. '=[]' → logprob: -13.938864707946777
    7. ' ' → logprob: -14.063864707946777
    8. ' :' → logprob: -14.438864707946777
    9. 's' → logprob: -15.688864707946777
    10. '={}' → logprob: -15.813864707946777

Token 573: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.038471970707178116
    2. '[]' → logprob: -3.2884719371795654
    3. '{}' → logprob: -7.7884721755981445
    4. '[]
' → logprob: -11.913472175598145
    5. ' set' → logprob: -12.038472175598145
    6. '{' → logprob: -13.538472175598145
    7. ' []' → logprob: -13.788472175598145
    8. '=set' → logprob: -15.663472175598145
    9. '[]}' → logprob: -15.663472175598145
    10. '[]>' → logprob: -15.913472175598145

Token 574: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012752608396112919
    2. '()
' → logprob: -4.387752532958984
    3. '       ' → logprob: -8.387752532958984
    4. '   ' → logprob: -12.637752532958984
    5. '()

' → logprob: -12.637752532958984
    6. '()
' → logprob: -13.262752532958984
    7. ' ()' → logprob: -13.887752532958984
    8. '()\' → logprob: -13.887752532958984
    9. '(),' → logprob: -14.387752532958984
    10. 'tokens' → logprob: -14.512752532958984

Token 575: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6712996959686279
    2. 'count' → logprob: -2.296299695968628
    3. ' last' → logprob: -2.796299695968628
    4. 'prev' → logprob: -2.796299695968628
    5. 'current' → logprob: -2.921299695968628
    6. ' current' → logprob: -2.921299695968628
    7. 'index' → logprob: -3.171299695968628
    8. ' index' → logprob: -3.796299695968628
    9. 'last' → logprob: -3.796299695968628
    10. ' i' → logprob: -4.046299934387207

Token 576: ' last' (ID: 2174)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.32752805948257446
    2. 'index' → logprob: -2.3275279998779297
    3. 'last' (adapté à ' last') → logprob: -2.7025279998779297
    4. 'prev' → logprob: -3.5775279998779297
    5. 'current' → logprob: -3.7025279998779297
    6. 'idx' → logprob: -4.07752799987793
    7. 'count' → logprob: -4.57752799987793
    8. 'parsed' → logprob: -4.70252799987793
    9. 'letters' → logprob: -5.07752799987793
    10. 'i' → logprob: -5.20252799987793

Token 577: '_letter' (ID: 120621)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.08330565690994263
    2. '_letter' → logprob: -2.583305597305298
    3. '_idx' → logprob: -5.458305835723877
    4. '_' → logprob: -9.833305358886719
    5. '_order' → logprob: -10.083305358886719
    6. '_pos' → logprob: -10.583305358886719
    7. 'index' → logprob: -11.708305358886719
    8. '_char' → logprob: -12.083305358886719
    9. '_i' → logprob: -12.583305358886719
    10. ' =' → logprob: -13.833305358886719

Token 578: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.08887031674385071
    2. '=' → logprob: -3.3388702869415283
    3. '_idx' → logprob: -3.3388702869415283
    4. ' =' → logprob: -4.338870525360107
    5. 'index' → logprob: -7.088870525360107
    6. '_order' → logprob: -9.71387004852295
    7. 'idx' → logprob: -10.58887004852295
    8. '_pos' → logprob: -10.58887004852295
    9. '_' → logprob: -10.96387004852295
    10. 'Index' → logprob: -11.33887004852295

Token 579: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03805273771286011
    2. ' =' → logprob: -3.288052797317505
    3. '=-' → logprob: -11.413052558898926
    4. ':' → logprob: -15.913052558898926
    5. '=None' → logprob: -16.538053512573242
    6. ',' → logprob: -17.663053512573242
    7. '=
' → logprob: -17.913053512573242
    8. '   ' → logprob: -17.913053512573242
    9. ' ' → logprob: -18.288053512573242
    10. '=

' → logprob: -19.788053512573242

Token 580: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.52919222577475e-05
    2. ' -' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.250075340270996
    4. ' ' → logprob: -16.37507438659668
    5. '  ' → logprob: -17.75007438659668
    6. '0' → logprob: -18.75007438659668
    7. '
' → logprob: -19.12507438659668
    8. '       ' → logprob: -19.87507438659668
    9. '-
' → logprob: -20.00007438659668
    10. '-​' → logprob: -20.12507438659668

Token 581: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.75000286102295
    3. '2' → logprob: -17.187503814697266
    4. '۱' → logprob: -17.750003814697266
    5. '   ' → logprob: -18.125003814697266
    6. '```' → logprob: -18.125003814697266
    7. '10' → logprob: -18.437503814697266
    8. '0' → logprob: -18.562503814697266
    9. '१' → logprob: -18.687503814697266
    10. '１' → logprob: -18.812503814697266

Token 582: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018786223605275154
    2. 'count' → logprob: -5.018786430358887
    3. 'i' → logprob: -5.768786430358887
    4. ' i' → logprob: -6.018786430358887
    5. 'index' → logprob: -6.393786430358887
    6. 'num' → logprob: -7.018786430358887
    7. 'number' → logprob: -7.018786430358887
    8. ' number' → logprob: -7.768786430358887
    9. 'pos' → logprob: -7.893786430358887
    10. ',' → logprob: -8.018786430358887

Token 583: '       ' (ID: 309)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0659903287887573
    2. 'i' → logprob: -1.1909903287887573
    3. '       ' → logprob: -1.4409903287887573
    4. 'count' → logprob: -2.690990447998047
    5. 'index' → logprob: -4.190990447998047
    6. 'current' → logprob: -4.440990447998047
    7. ' current' → logprob: -5.565990447998047
    8. 'number' → logprob: -5.565990447998047
    9. ' index' → logprob: -5.815990447998047
    10. 'pos' → logprob: -5.940990447998047

Token 584: ' letters' (ID: 18151)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4107453227043152
    2. 'count' → logprob: -1.16074538230896
    3. 'idx' → logprob: -4.910745143890381
    4. 'index' → logprob: -5.160745143890381
    5. 'pos' → logprob: -5.910745143890381
    6. 'current' → logprob: -6.160745143890381
    7. ' i' → logprob: -6.535745143890381
    8. 'value' → logprob: -7.035745143890381
    9. 'num' → logprob: -7.160745143890381
    10. 'result' → logprob: -7.285745143890381

Token 585: '_instances' (ID: 108386)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1521243453025818
    2. ' =' → logprob: -2.6521244049072266
    3. '_found' → logprob: -3.4021244049072266
    4. 'found' → logprob: -4.152124404907227
    5. '_index' → logprob: -5.027124404907227
    6. '_idx' → logprob: -5.902124404907227
    7. ',' → logprob: -6.152124404907227
    8. 'index' → logprob: -6.902124404907227
    9. '_count' → logprob: -6.902124404907227
    10. '=[]' → logprob: -6.902124404907227

Token 586: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06229917332530022
    2. '=' → logprob: -2.8122992515563965
    3. ':' → logprob: -8.062298774719238
    4. ',' → logprob: -11.562298774719238
    5. '=[]' → logprob: -12.437298774719238
    6. ' :' → logprob: -13.062298774719238
    7. ' ' → logprob: -15.062298774719238
    8. '=[]
' → logprob: -16.312299728393555
    9. ' ,' → logprob: -16.437299728393555
    10. ')' → logprob: -17.562299728393555

Token 587: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.023259803652763367
    2. ' List' → logprob: -3.7732598781585693
    3. 'list' → logprob: -11.648260116577148
    4. '[List' → logprob: -12.398260116577148
    5. '	List' → logprob: -14.273260116577148
    6. '[]' → logprob: -15.023260116577148
    7. ' ' → logprob: -15.773260116577148
    8. ' list' → logprob: -15.898260116577148
    9. '_list' → logprob: -16.39826011657715
    10. 'Dict' → logprob: -17.02326011657715

Token 588: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010410251561552286
    2. ' =' → logprob: -7.126040935516357
    3. '[
' → logprob: -9.376041412353516
    4. '=' → logprob: -9.876041412353516
    5. '=[]' → logprob: -10.001041412353516
    6. '[]' → logprob: -11.376041412353516
    7. '[...]' → logprob: -11.626041412353516
    8. '[M' → logprob: -12.001041412353516
    9. 'MC' → logprob: -12.126041412353516
    10. '[int' → logprob: -12.251041412353516

Token 589: 'MC' (ID: 15190)
  Prédit: 'MC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MC' → logprob: -9.102680633077398e-05
    2. 'Tuple' → logprob: -9.625090599060059
    3. ' MC' → logprob: -10.875090599060059
    4. '[' → logprob: -12.750090599060059
    5. 'Optional' → logprob: -13.500090599060059
    6. 'M' → logprob: -13.875090599060059
    7. '   ' → logprob: -15.500090599060059
    8. '_MC' → logprob: -16.125091552734375
    9. 'mc' → logprob: -16.375091552734375
    10. 'Mc' → logprob: -16.750091552734375

Token 590: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -5.800739018013701e-05
    2. 'XI' → logprob: -10.6250581741333
    3. 'XL' → logprob: -12.4375581741333
    4. 'x' → logprob: -12.5625581741333
    5. 'XC' → logprob: -12.5625581741333
    6. ' X' → logprob: -12.6250581741333
    7. 'class' → logprob: -12.8750581741333
    8. 'CX' → logprob: -13.1875581741333
    9. 'C' → logprob: -13.5000581741333
    10. 'Xi' → logprob: -14.1875581741333

Token 591: 'IL' (ID: 2654)
  Prédit: 'IL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -6.392202976712724e-06
    2. 'I' → logprob: -12.125006675720215
    3. '_IL' → logprob: -15.625006675720215
    4. ' IL' → logprob: -16.0000057220459
    5. 'ИЛ' → logprob: -16.1250057220459
    6. 'ILE' → logprob: -16.2500057220459
    7. 'ILL' → logprob: -16.2500057220459
    8. '	IL' → logprob: -16.5000057220459
    9. 'Il' → logprob: -16.6250057220459
    10. 'L' → logprob: -17.0000057220459

Token 592: 'etter' (ID: 30747)
  Prédit: 'IL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.29265421628952026
    2. 'etter' → logprob: -1.417654275894165
    3. 'ET' → logprob: -5.167654037475586
    4. 'Letter' → logprob: -5.542654037475586
    5. 'EL' → logprob: -7.417654037475586
    6. 'L' → logprob: -7.917654037475586
    7. 'eter' → logprob: -8.667654037475586
    8. 'Let' → logprob: -9.542654037475586
    9. 'I' → logprob: -9.542654037475586
    10. 'Letters' → logprob: -9.917654037475586

Token 593: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.656383680412546e-05
    2. ' ]' → logprob: -10.625046730041504
    3. ']=' → logprob: -10.750046730041504
    4. ']
' → logprob: -15.625046730041504
    5. ' ' → logprob: -16.125045776367188
    6. ')' → logprob: -16.125045776367188
    7. '[]' → logprob: -16.250045776367188
    8. '[' → logprob: -17.000045776367188
    9. ',' → logprob: -17.125045776367188
    10. '   ' → logprob: -17.125045776367188

Token 594: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760607719421387
    2. ' =' → logprob: -0.8260607719421387
    3. '=[]' → logprob: -9.951061248779297
    4. '       ' → logprob: -10.326061248779297
    5. '[]' → logprob: -10.826061248779297
    6. '=[]
' → logprob: -11.951061248779297
    7. '        ' → logprob: -12.076061248779297
    8. ',' → logprob: -12.451061248779297
    9. '[]=' → logprob: -13.951061248779297
    10. '   ' → logprob: -14.451061248779297

Token 595: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0003864630125463009
    2. '[]
' → logprob: -8.250386238098145
    3. ' []' → logprob: -9.000386238098145
    4. '[]

' → logprob: -13.875386238098145
    5. '[]}' → logprob: -14.375386238098145
    6. ' []
' → logprob: -16.00038719177246
    7. '[]>' → logprob: -16.25038719177246
    8. '[' → logprob: -16.37538719177246
    9. '[])' → logprob: -16.62538719177246
    10. '[]"' → logprob: -16.87538719177246

Token 596: '       ' (ID: 309)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9203606247901917
    2. 'i' → logprob: -1.0453605651855469
    3. '       ' → logprob: -2.295360565185547
    4. 'count' → logprob: -2.295360565185547
    5. 'index' → logprob: -3.920360565185547
    6. 'digit' → logprob: -5.045360565185547
    7. ' index' → logprob: -5.295360565185547
    8. ' count' → logprob: -5.545360565185547
    9. 'pos' → logprob: -5.795360565185547
    10. 'idx' → logprob: -5.920360565185547

Token 597: ' pos' (ID: 1253)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4843906760215759
    2. 'count' → logprob: -0.9843906760215759
    3. 'index' → logprob: -5.734390735626221
    4. 'idx' → logprob: -5.859390735626221
    5. 'digit' → logprob: -6.109390735626221
    6. 'pos' (adapté à ' pos') → logprob: -7.359390735626221
    7. 'num' → logprob: -7.484390735626221
    8. ' i' → logprob: -8.359390258789062
    9. 'number' → logprob: -8.609390258789062
    10. '       ' → logprob: -9.234390258789062

Token 598: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602717489004135
    2. '=' → logprob: -1.9102717638015747
    3. ' ' → logprob: -10.160271644592285
    4. ',' → logprob: -12.285271644592285
    5. '0' → logprob: -14.285271644592285
    6. '<|end|>' → logprob: -14.285271644592285
    7. '  ' → logprob: -14.660271644592285
    8. 's' → logprob: -14.660271644592285
    9. ' ,' → logprob: -14.910271644592285
    10. ' =
' → logprob: -15.160271644592285

Token 599: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '   ' → logprob: -17.750123977661133
    4. '=' → logprob: -18.500123977661133
    5. '۰' → logprob: -18.500123977661133
    6. '  ' → logprob: -19.312623977661133
    7. '<|end|>' → logprob: -19.562623977661133
    8. 's' → logprob: -19.687623977661133
    9. '1' → logprob: -19.875123977661133
    10. '00' → logprob: -20.000123977661133

Token 600: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '۰' → logprob: -17.25000762939453
    4. '=' → logprob: -17.75000762939453
    5. 'len' → logprob: -19.06250762939453
    6. 's' → logprob: -19.12500762939453
    7. '1' → logprob: -19.31250762939453
    8. '<|end|>' → logprob: -19.31250762939453
    9. '০' → logprob: -19.43750762939453
    10. '00' → logprob: -19.75000762939453

Token 601: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8635627031326294
    2. 'while' → logprob: -1.1135627031326294
    3. '
' → logprob: -2.11356258392334
    4. ' 
' → logprob: -2.98856258392334
    5. ',' → logprob: -3.36356258392334
    6. '       ' → logprob: -3.86356258392334
    7. ' ' → logprob: -5.61356258392334
    8. 'count' → logprob: -5.86356258392334
    9. ' length' → logprob: -5.98856258392334
    10. 'n' → logprob: -6.11356258392334

Token 602: '       ' (ID: 309)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.13082411885261536
    2. 'while' → logprob: -2.505824089050293
    3. ' length' → logprob: -4.380824089050293
    4. '       ' → logprob: -4.505824089050293
    5. '
' → logprob: -4.755824089050293
    6. 'count' → logprob: -6.130824089050293
    7. ' count' → logprob: -6.130824089050293
    8. ' 
' → logprob: -7.255824089050293
    9. '```' → logprob: -7.755824089050293
    10. ' ' → logprob: -7.755824089050293

Token 603: ' length' (ID: 5517)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03927531838417053
    2. 'count' → logprob: -3.6642754077911377
    3. 'length' (adapté à ' length') → logprob: -4.664275169372559
    4. ' while' → logprob: -6.289275169372559
    5. 'n' → logprob: -6.539275169372559
    6. 'digit' → logprob: -9.789275169372559
    7. 'num' → logprob: -10.664275169372559
    8. 'len' → logprob: -10.789275169372559
    9. 'mult' → logprob: -11.039275169372559
    10. 'number' → logprob: -11.414275169372559

Token 604: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760433673858643
    2. ' =' → logprob: -0.8260433673858643
    3. '       ' → logprob: -10.201043128967285
    4. '=len' → logprob: -10.576043128967285
    5. '   ' → logprob: -11.826043128967285
    6. 's' → logprob: -12.201043128967285
    7. ' ' → logprob: -12.201043128967285
    8. ':' → logprob: -12.326043128967285
    9. '=s' → logprob: -12.451043128967285
    10. '(' → logprob: -12.951043128967285

Token 605: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.005233763717114925
    2. ' len' → logprob: -5.2552337646484375
    3. '       ' → logprob: -17.630233764648438
    4. '   ' → logprob: -18.880233764648438
    5. '(len' → logprob: -20.255233764648438
    6. '           ' → logprob: -20.755233764648438
    7. '	len' → logprob: -21.380233764648438
    8. ' ' → logprob: -22.005233764648438
    9. '[len' → logprob: -22.505233764648438
    10. '=len' → logprob: -22.755233764648438

Token 606: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0012467780616134405
    2. 's' → logprob: -6.751246929168701
    3. '(' → logprob: -9.501246452331543
    4. ' s' → logprob: -13.501246452331543
    5. '(
' → logprob: -14.751246452331543
    6. ' (' → logprob: -16.50124740600586
    7. '_s' → logprob: -19.00124740600586
    8. ')' → logprob: -19.62624740600586
    9. '```' → logprob: -19.62624740600586
    10. '`s' → logprob: -20.00124740600586

Token 607: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004815545107703656
    2. ')
' → logprob: -7.875481605529785
    3. ' )' → logprob: -9.375481605529785
    4. '       ' → logprob: -11.375481605529785
    5. '   ' → logprob: -12.625481605529785
    6. '
' → logprob: -14.500481605529785
    7. '):
' → logprob: -15.000481605529785
    8. ')

' → logprob: -15.125481605529785
    9. ' )
' → logprob: -15.375481605529785
    10. '):' → logprob: -15.875481605529785

Token 608: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04962132126092911
    2. 'count' → logprob: -3.299621343612671
    3. ' while' → logprob: -4.674621105194092
    4. '       ' → logprob: -6.549621105194092
    5. 'digit' → logprob: -8.29962158203125
    6. 'current' → logprob: -8.54962158203125
    7. '
' → logprob: -9.29962158203125
    8. 'num' → logprob: -10.17462158203125
    9. '```' → logprob: -10.29962158203125
    10. ' count' → logprob: -10.79962158203125

Token 609: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0012733275070786476
    2. 'count' → logprob: -6.751273155212402
    3. '       ' → logprob: -9.376273155212402
    4. ' while' → logprob: -11.126273155212402
    5. 'current' → logprob: -13.751273155212402
    6. '```' → logprob: -14.126273155212402
    7. '
' → logprob: -14.251273155212402
    8. '        
' → logprob: -14.751273155212402
    9. 'While' → logprob: -15.001273155212402
    10. 'digit' → logprob: -16.00127410888672

Token 610: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1269306242465973
    2. ' pos' → logprob: -2.1269307136535645
    3. '	pos' → logprob: -13.751930236816406
    4. '   ' → logprob: -14.376930236816406
    5. '       ' → logprob: -15.126930236816406
    6. '_pos' → logprob: -15.501930236816406
    7. '(pos' → logprob: -16.001930236816406
    8. 'Pos' → logprob: -16.251930236816406
    9. 'True' → logprob: -17.126930236816406
    10. '           ' → logprob: -17.251930236816406

Token 611: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.034167833626270294
    2. '<' → logprob: -3.409167766571045
    3. ' ' → logprob: -8.284168243408203
    4. '<len' → logprob: -8.659168243408203
    5. '=' → logprob: -10.534168243408203
    6. ' <
' → logprob: -10.659168243408203
    7. '0' → logprob: -11.159168243408203
    8. '[' → logprob: -12.284168243408203
    9. ' <=' → logprob: -12.284168243408203
    10. '<n' → logprob: -13.034168243408203

Token 612: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0005535095697268844
    2. ' length' → logprob: -7.500553607940674
    3. 'len' → logprob: -14.875553131103516
    4. 'ength' → logprob: -15.750553131103516
    5. '       ' → logprob: -18.375553131103516
    6. '	length' → logprob: -18.875553131103516
    7. '   ' → logprob: -19.000553131103516
    8. '(length' → logprob: -19.000553131103516
    9. '_length' → logprob: -19.250553131103516
    10. '[length' → logprob: -19.375553131103516

Token 613: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38704419136047363
    2. ':
' → logprob: -1.1370441913604736
    3. '       ' → logprob: -9.887043952941895
    4. '):
' → logprob: -10.012043952941895
    5. ':

' → logprob: -10.887043952941895
    6. ',' → logprob: -11.012043952941895
    7. ' and' → logprob: -11.637043952941895
    8. '           ' → logprob: -11.762043952941895
    9. '):' → logprob: -12.012043952941895
    10. ' :
' → logprob: -12.387043952941895

Token 614: '           ' (ID: 352)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -1.0231322050094604
    2. 'char' → logprob: -1.7731322050094604
    3. 'count' → logprob: -2.02313232421875
    4. 'token' → logprob: -2.27313232421875
    5. '       ' → logprob: -2.64813232421875
    6. '           ' → logprob: -3.02313232421875
    7. 'digit' → logprob: -3.02313232421875
    8. 'c' → logprob: -3.64813232421875
    9. '   ' → logprob: -3.89813232421875
    10. 'num' → logprob: -5.39813232421875

Token 615: ' ch' (ID: 549)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.007958642207086086
    2. 'digit' → logprob: -5.00795841217041
    3. 'ch' (adapté à ' ch') → logprob: -7.75795841217041
    4. 'if' → logprob: -8.00795841217041
    5. '           ' → logprob: -8.63295841217041
    6. 'cnt' → logprob: -9.38295841217041
    7. 'num' → logprob: -9.75795841217041
    8. 'c' → logprob: -10.13295841217041
    9. '#' → logprob: -10.13295841217041
    10. 'char' → logprob: -10.75795841217041

Token 616: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868807554244995
    2. ' =' → logprob: -1.1368807554244995
    3. ' ' → logprob: -12.511880874633789
    4. '=
' → logprob: -13.011880874633789
    5. '=s' → logprob: -13.511880874633789
    6. 's' → logprob: -14.761880874633789
    7. '           ' → logprob: -14.886880874633789
    8. '        ' → logprob: -15.261880874633789
    9. 'd' → logprob: -15.511880874633789
    10. '```' → logprob: -16.01188087463379

Token 617: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.5491004129871726e-05
    2. ' s' → logprob: -10.000045776367188
    3. '(s' → logprob: -18.000045776367188
    4. ''s' → logprob: -18.375045776367188
    5. '`s' → logprob: -18.875045776367188
    6. 'user' → logprob: -19.125045776367188
    7. 'ss' → logprob: -19.250045776367188
    8. '_s' → logprob: -19.375045776367188
    9. 'str' → logprob: -19.500045776367188
    10. ' ' → logprob: -19.875045776367188

Token 618: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.00010032468708232045
    2. '[s' → logprob: -9.250100135803223
    3. '[' → logprob: -12.750100135803223
    4. '[
' → logprob: -14.500100135803223
    5. ' [' → logprob: -15.250100135803223
    6. '```' → logprob: -15.500100135803223
    7. '[position' → logprob: -15.750100135803223
    8. 's' → logprob: -16.37510108947754
    9. '   ' → logprob: -17.25010108947754
    10. 'pos' → logprob: -17.25010108947754

Token 619: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2329288125038147
    2. ')' → logprob: -1.60792875289917
    3. ']
' → logprob: -5.48292875289917
    4. ')
' → logprob: -6.23292875289917
    5. ' )' → logprob: -7.98292875289917
    6. '])' → logprob: -8.232929229736328
    7. '<|end|>' → logprob: -8.357929229736328
    8. ' ]' → logprob: -8.982929229736328
    9. ']

' → logprob: -9.482929229736328
    10. '<|end|>' → logprob: -9.732929229736328

Token 620: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25802040100097656
    2. '       ' → logprob: -2.2580204010009766
    3. 'if' → logprob: -2.2580204010009766
    4. ' if' → logprob: -4.008020401000977
    5. 'digit' → logprob: -9.508020401000977
    6. '   ' → logprob: -10.883020401000977
    7. '```' → logprob: -11.383020401000977
    8. '        
' → logprob: -12.633020401000977
    9. '          ' → logprob: -12.883020401000977
    10. '        ' → logprob: -12.883020401000977

Token 621: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.022873515263199806
    2. 'count' → logprob: -4.022873401641846
    3. 'digit' → logprob: -5.522873401641846
    4. '           ' → logprob: -7.522873401641846
    5. ' if' → logprob: -9.147873878479004
    6. 'num' → logprob: -9.772873878479004
    7. '       ' → logprob: -12.272873878479004
    8. '#' → logprob: -13.147873878479004
    9. 'digits' → logprob: -13.647873878479004
    10. 'cnt' → logprob: -13.647873878479004

Token 622: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.003069925820454955
    2. ' ch' → logprob: -6.503069877624512
    3. ''ch' → logprob: -6.628069877624512
    4. ''' → logprob: -8.378069877624512
    5. 'str' → logprob: -12.503069877624512
    6. '	ch' → logprob: -12.628069877624512
    7. '   ' → logprob: -13.253069877624512
    8. '(ch' → logprob: -13.628069877624512
    9. 's' → logprob: -14.253069877624512
    10. ' '' → logprob: -14.378069877624512

Token 623: ' in' (ID: 306)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.697731614112854
    2. ' in' → logprob: -1.197731614112854
    3. '.' → logprob: -2.5727314949035645
    4. 'in' → logprob: -2.5727314949035645
    5. 'isdigit' → logprob: -3.9477314949035645
    6. '>=' → logprob: -4.3227314949035645
    7. '>' → logprob: -5.1977314949035645
    8. '==' → logprob: -5.6977314949035645
    9. ' >=' → logprob: -5.6977314949035645
    10. 'is' → logprob: -6.1977314949035645

Token 624: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10759149491786957
    2. '_LE' → logprob: -2.482591390609741
    3. '"' → logprob: -4.85759162902832
    4. '_DIG' → logprob: -4.85759162902832
    5. '_' → logprob: -7.10759162902832
    6. '_L' → logprob: -7.48259162902832
    7. '['' → logprob: -7.60759162902832
    8. ' '' → logprob: -8.35759162902832
    9. ''_' → logprob: -8.98259162902832
    10. '_LO' → logprob: -8.98259162902832

Token 625: '234' (ID: 20771)
  Prédit: '234'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '234' → logprob: -0.0043355259113013744
    2. '123' → logprob: -5.629335403442383
    3. '012' → logprob: -8.004335403442383
    4. '"' → logprob: -8.879335403442383
    5. ' ' → logprob: -9.254335403442383
    6. ''' → logprob: -9.629335403442383
    7. '23' → logprob: -10.504335403442383
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -11.129335403442383
    9. '2' → logprob: -11.754335403442383
    10. 'm' → logprob: -12.129335403442383

Token 626: '567' (ID: 34904)
  Prédit: '567'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '567' → logprob: -5.676981345459353e-06
    2. '678' → logprob: -12.625005722045898
    3. '569' → logprob: -13.875005722045898
    4. '56' → logprob: -14.125005722045898
    5. '568' → logprob: -15.625005722045898
    6. '5' → logprob: -16.5000057220459
    7. '578' → logprob: -16.8750057220459
    8. '
' → logprob: -16.8750057220459
    9. '-' → logprob: -17.1250057220459
    10. '789' → logprob: -17.2500057220459

Token 627: '89' (ID: 7479)
  Prédit: '89'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '89' → logprob: -1.9504606825648807e-05
    2. '8' → logprob: -12.125019073486328
    3. '890' → logprob: -12.125019073486328
    4. '891' → logprob: -12.250019073486328
    5. '892' → logprob: -13.625019073486328
    6. '899' → logprob: -13.875019073486328
    7. '898' → logprob: -14.375019073486328
    8. '889' → logprob: -14.875019073486328
    9. '896' → logprob: -16.000019073486328
    10. '789' → logprob: -16.125019073486328

Token 628: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.16250456869602203
    2. '':' → logprob: -1.9125045537948608
    3. ' '' → logprob: -6.53750467300415
    4. ''' → logprob: -7.78750467300415
    5. '':
' → logprob: -8.287504196166992
    6. ' ':' → logprob: -9.537504196166992
    7. ':' → logprob: -9.912504196166992
    8. '':

' → logprob: -11.162504196166992
    9. ':
' → logprob: -12.162504196166992
    10. ''):
' → logprob: -12.287504196166992

Token 629: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03740125894546509
    2. ':' → logprob: -3.7874011993408203
    3. ' ' → logprob: -5.66240119934082
    4. '                ' → logprob: -6.16240119934082
    5. ' :' → logprob: -6.16240119934082
    6. '           ' → logprob: -6.53740119934082
    7. '            ' → logprob: -6.53740119934082
    8. ',' → logprob: -7.03740119934082
    9. '              ' → logprob: -7.78740119934082
    10. '<|end|>' → logprob: -7.91240119934082

Token 630: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.017048120498657227
    2. 'digit' → logprob: -4.767047882080078
    3. '               ' → logprob: -5.517047882080078
    4. 'num' → logprob: -5.642047882080078
    5. ' count' → logprob: -7.517047882080078
    6. '   ' → logprob: -9.642047882080078
    7. 'digits' → logprob: -10.017047882080078
    8. '           ' → logprob: -10.142047882080078
    9. 'mult' → logprob: -10.517047882080078
    10. ' digit' → logprob: -10.642047882080078

Token 631: ' Digit' (ID: 91174)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0018440400017425418
    2. 'digit' → logprob: -6.6268439292907715
    3. 'num' → logprob: -7.8768439292907715
    4. '           ' → logprob: -9.62684440612793
    5. 'mult' → logprob: -11.00184440612793
    6. ' count' → logprob: -11.12684440612793
    7. 'cnt' → logprob: -11.62684440612793
    8. 'digits' → logprob: -11.75184440612793
    9. '               ' → logprob: -11.87684440612793
    10. 'number' → logprob: -12.25184440612793

Token 632: ' prefix' (ID: 18633)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16377465426921844
    2. '               ' → logprob: -3.0387747287750244
    3. 'digit' → logprob: -3.4137747287750244
    4. '_count' → logprob: -3.5387747287750244
    5. ' =' → logprob: -4.413774490356445
    6. '=' → logprob: -4.663774490356445
    7. 'num' → logprob: -4.913774490356445
    8. '                   ' → logprob: -5.788774490356445
    9. '_digit' → logprob: -5.913774490356445
    10. ' count' → logprob: -6.413774490356445

Token 633: ' found' (ID: 2491)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.05909043550491333
    2. 'digit' → logprob: -3.6840903759002686
    3. 'num' → logprob: -3.9340903759002686
    4. ' count' → logprob: -5.434090614318848
    5. '               ' → logprob: -6.184090614318848
    6. 'digits' → logprob: -6.434090614318848
    7. 'd' → logprob: -7.184090614318848
    8. '[count' → logprob: -7.809090614318848
    9. '(count' → logprob: -7.809090614318848
    10. ':' → logprob: -7.934090614318848

Token 634: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1498972773551941
    2. 'count' → logprob: -2.149897336959839
    3. 'num' → logprob: -4.77489709854126
    4. '           ' → logprob: -5.27489709854126
    5. ',' → logprob: -6.02489709854126
    6. 'digit' → logprob: -6.27489709854126
    7. '
' → logprob: -6.64989709854126
    8. ' count' → logprob: -6.89989709854126
    9. ',count' → logprob: -7.52489709854126
    10. 'number' → logprob: -7.89989709854126

Token 635: ' must' (ID: 2804)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2021065503358841
    2. 'digit' → logprob: -1.8271065950393677
    3. '               ' → logprob: -4.577106475830078
    4. 'num' → logprob: -4.827106475830078
    5. 'digits' → logprob: -7.077106475830078
    6. 'prefix' → logprob: -7.577106475830078
    7. ' count' → logprob: -7.702106475830078
    8. 'pos' → logprob: -7.702106475830078
    9. '                   ' → logprob: -7.702106475830078
    10. 'mult' → logprob: -7.827106475830078

Token 636: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.09307681024074554
    2. 'pos' → logprob: -2.968076705932617
    3. ' be' → logprob: -3.718076705932617
    4. 'follow' → logprob: -5.218076705932617
    5. 'not' → logprob: -5.218076705932617
    6. 'have' → logprob: -7.593076705932617
    7. 'if' → logprob: -7.718076705932617
    8. 'next' → logprob: -8.343076705932617
    9. '           ' → logprob: -8.843076705932617
    10. 'continue' → logprob: -8.843076705932617

Token 637: ' followed' (ID: 12661)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6303316354751587
    2. 'follow' → logprob: -1.5053316354751587
    3. 'im' → logprob: -2.380331516265869
    4. 'a' → logprob: -3.755331516265869
    5. ' followed' → logprob: -3.880331516265869
    6. 'valid' → logprob: -3.880331516265869
    7. 'int' → logprob: -3.880331516265869
    8. ' immediately' → logprob: -5.005331516265869
    9. 'attached' → logprob: -5.380331516265869
    10. 'preced' → logprob: -5.505331516265869

Token 638: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.04862279072403908
    2. ' by' → logprob: -3.0486228466033936
    3. '               ' → logprob: -10.923623085021973
    4. 'im' → logprob: -12.048623085021973
    5. '           ' → logprob: -12.298623085021973
    6. '```' → logprob: -12.923623085021973
    7. '<|end|>' → logprob: -13.423623085021973
    8. 'next' → logprob: -13.923623085021973
    9. ' immediately' → logprob: -14.923623085021973
    10. ' ' → logprob: -15.048623085021973

Token 639: ' letter' (ID: 10263)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.29639047384262085
    2. 's' → logprob: -1.9213905334472656
    3. 'a' → logprob: -2.7963905334472656
    4. '<|end|>' → logprob: -4.921390533447266
    5. ' a' → logprob: -5.171390533447266
    6. ''s' → logprob: -5.296390533447266
    7. ' s' → logprob: -5.296390533447266
    8. ''' → logprob: -6.171390533447266
    9. 'ch' → logprob: -6.171390533447266
    10. ' pos' → logprob: -6.296390533447266

Token 640: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7668836712837219
    2. '               ' → logprob: -0.7668836712837219
    3. ',' → logprob: -3.141883611679077
    4. '<|end|>' → logprob: -4.641883850097656
    5. 'pos' → logprob: -5.016883850097656
    6. '.' → logprob: -6.016883850097656
    7. '<|end|>' → logprob: -6.016883850097656
    8. '                   ' → logprob: -6.766883850097656
    9. '[pos' → logprob: -6.891883850097656
    10. ',pos' → logprob: -7.391883850097656

Token 641: '               ' (ID: 506)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.7361342310905457
    2. '               ' → logprob: -1.7361342906951904
    3. ',pos' → logprob: -2.6111342906951904
    4. '[pos' → logprob: -2.8611342906951904
    5. ',' → logprob: -2.9861342906951904
    6. '           ' → logprob: -3.1111342906951904
    7. '
' → logprob: -3.3611342906951904
    8. ' pos' → logprob: -3.7361342906951904
    9. ' ' → logprob: -3.9861342906951904
    10. ' 
' → logprob: -4.236134052276611

Token 642: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.32057392597198486
    2. 'digit' → logprob: -1.8205739259719849
    3. 'pos' → logprob: -2.4455738067626953
    4. 'num' → logprob: -3.9455738067626953
    5. '               ' → logprob: -5.445573806762695
    6. '           ' → logprob: -7.695573806762695
    7. 'digits' → logprob: -7.945573806762695
    8. 'number' → logprob: -8.320573806762695
    9. '                   ' → logprob: -8.445573806762695
    10. 'mult' → logprob: -8.945573806762695

Token 643: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35175102949142456
    2. '=' → logprob: -1.2267510890960693
    3. '=int' → logprob: -5.72675085067749
    4. ' ' → logprob: -10.601751327514648
    5. 'int' → logprob: -11.851751327514648
    6. '=
' → logprob: -12.726751327514648
    7. ':int' → logprob: -12.851751327514648
    8. ' =
' → logprob: -13.476751327514648
    9. 's' → logprob: -14.351751327514648
    10. ':' → logprob: -14.726751327514648

Token 644: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.56102097814437e-05
    2. ' int' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.375045776367188
    4. '           ' → logprob: -18.375045776367188
    5. '	int' → logprob: -18.375045776367188
    6. '               ' → logprob: -18.375045776367188
    7. '(int' → logprob: -18.500045776367188
    8. '<int' → logprob: -20.250045776367188
    9. '[int' → logprob: -20.250045776367188
    10. ' ' → logprob: -21.250045776367188

Token 645: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.0008340472122654319
    2. 'ch' → logprob: -7.125833988189697
    3. '(s' → logprob: -10.750834465026855
    4. '[ch' → logprob: -11.875834465026855
    5. ' ch' → logprob: -14.750834465026855
    6. '	ch' → logprob: -15.000834465026855
    7. '(' → logprob: -15.250834465026855
    8. '/ch' → logprob: -16.37583351135254
    9. 's' → logprob: -16.37583351135254
    10. ',ch' → logprob: -17.12583351135254

Token 646: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006764991208910942
    2. ')
' → logprob: -5.006764888763428
    3. ' )' → logprob: -10.631765365600586
    4. ')
' → logprob: -11.631765365600586
    5. '<|end|>' → logprob: -12.256765365600586
    6. ')

' → logprob: -13.381765365600586
    7. ' )
' → logprob: -13.506765365600586
    8. ');' → logprob: -13.631765365600586
    9. '')' → logprob: -13.756765365600586
    10. '           ' → logprob: -13.881765365600586

Token 647: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5562893152236938
    2. '           ' → logprob: -1.1812893152236938
    3. '
' → logprob: -2.4312891960144043
    4. 'pos' → logprob: -4.806289196014404
    5. '                   ' → logprob: -5.181289196014404
    6. '<|end|>' → logprob: -5.681289196014404
    7. '            
' → logprob: -5.806289196014404
    8. ' 
' → logprob: -6.056289196014404
    9. '[pos' → logprob: -6.306289196014404
    10. '                
' → logprob: -6.931289196014404

Token 648: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.00034714414505288005
    2. '           ' → logprob: -8.000347137451172
    3. ' pos' → logprob: -11.375347137451172
    4. '	pos' → logprob: -15.750347137451172
    5. ',pos' → logprob: -16.750347137451172
    6. '_pos' → logprob: -17.125347137451172
    7. '               ' → logprob: -17.250347137451172
    8. '.pos' → logprob: -17.750347137451172
    9. 'if' → logprob: -17.875347137451172
    10. '   ' → logprob: -18.000347137451172

Token 649: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3868737816810608
    2. ' +=' → logprob: -1.136873722076416
    3. '=' → logprob: -13.511874198913574
    4. '+' → logprob: -13.761874198913574
    5. ']+=' → logprob: -16.386873245239258
    6. '           ' → logprob: -16.636873245239258
    7. '```' → logprob: -16.761873245239258
    8. ' =' → logprob: -16.886873245239258
    9. '               ' → logprob: -17.136873245239258
    10. ' +' → logprob: -17.386873245239258

Token 650: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.875045776367188
    4. '```' → logprob: -18.750045776367188
    5. '１' → logprob: -20.375045776367188
    6. '2' → logprob: -20.375045776367188
    7. '۱' → logprob: -20.375045776367188
    8. '0' → logprob: -20.437545776367188
    9. '
' → logprob: -21.000045776367188
    10. '+' → logprob: -21.000045776367188

Token 651: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -17.125011444091797
    4. '   ' → logprob: -17.500011444091797
    5. '2' → logprob: -18.812511444091797
    6. '0' → logprob: -19.312511444091797
    7. '
' → logprob: -19.687511444091797
    8. '[' → logprob: -19.812511444091797
    9. '１' → logprob: -19.875011444091797
    10. '۱' → logprob: -19.937511444091797

Token 652: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3903134763240814
    2. '               ' → logprob: -1.1403135061264038
    3. '       ' → logprob: -6.890313625335693
    4. ' if' → logprob: -7.265313625335693
    5. 'if' → logprob: -7.515313625335693
    6. '                   ' → logprob: -8.265313148498535
    7. '<|end|>' → logprob: -8.390313148498535
    8. '
' → logprob: -8.765313148498535
    9. '            
' → logprob: -9.140313148498535
    10. '   ' → logprob: -9.140313148498535

Token 653: '               ' (ID: 506)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8197557926177979
    2. '           ' → logprob: -1.3197557926177979
    3. ' if' → logprob: -1.3197557926177979
    4. '               ' → logprob: -3.694755792617798
    5. 'ch' → logprob: -9.444755554199219
    6. 'while' → logprob: -10.319755554199219
    7. '       ' → logprob: -10.694755554199219
    8. '            
' → logprob: -11.444755554199219
    9. '                   ' → logprob: -12.069755554199219
    10. '```' → logprob: -12.069755554199219

Token 654: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003414870472624898
    2. 'ch' → logprob: -5.753415107727051
    3. ' if' → logprob: -8.37841510772705
    4. '               ' → logprob: -12.62841510772705
    5. 'letter' → logprob: -13.37841510772705
    6. '           ' → logprob: -14.25341510772705
    7. 'char' → logprob: -14.37841510772705
    8. 'next' → logprob: -14.62841510772705
    9. 'continue' → logprob: -14.75341510772705
    10. ' ch' → logprob: -16.253414154052734

Token 655: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.607391408877447e-05
    2. ' pos' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.500036239624023
    4. '	pos' → logprob: -16.750036239624023
    5. '           ' → logprob: -18.125036239624023
    6. '_pos' → logprob: -18.375036239624023
    7. 'not' → logprob: -18.750036239624023
    8. '(pos' → logprob: -18.875036239624023
    9. '       ' → logprob: -19.875036239624023
    10. 'p' → logprob: -20.625036239624023

Token 656: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.019210224971175194
    2. '==' → logprob: -4.144210338592529
    3. ' >=' → logprob: -5.769210338592529
    4. ' ==' → logprob: -10.144209861755371
    5. ']>=' → logprob: -12.144209861755371
    6. '>' → logprob: -13.269209861755371
    7. ')>=' → logprob: -13.894209861755371
    8. '≥' → logprob: -15.019209861755371
    9. '<|end|>' → logprob: -15.019209861755371
    10. '===' → logprob: -15.269209861755371

Token 657: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -7.505351095460355e-05
    2. ' length' → logprob: -9.500075340270996
    3. 'len' → logprob: -16.12507438659668
    4. '   ' → logprob: -21.00007438659668
    5. '	length' → logprob: -21.25007438659668
    6. ' ' → logprob: -21.62507438659668
    7. 'ength' → logprob: -21.87507438659668
    8. 'leng' → logprob: -21.87507438659668
    9. '(length' → logprob: -22.37507438659668
    10. '[length' → logprob: -22.50007438659668

Token 658: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.20156565308570862
    2. 'or' → logprob: -1.7015656232833862
    3. ':
' → logprob: -9.701565742492676
    4. '               ' → logprob: -9.951565742492676
    5. ':' → logprob: -10.576565742492676
    6. '           ' → logprob: -11.576565742492676
    7. '                   ' → logprob: -12.201565742492676
    8. '	or' → logprob: -13.076565742492676
    9. '   ' → logprob: -14.451565742492676
    10. ' ' → logprob: -14.576565742492676

Token 659: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09661315381526947
    2. ' or' → logprob: -2.8466131687164307
    3. 'or' → logprob: -3.9716131687164307
    4. 'raise' → logprob: -4.221612930297852
    5. ' raise' → logprob: -8.221612930297852
    6. '```' → logprob: -9.721612930297852
    7. '   ' → logprob: -9.846612930297852
    8. '               ' → logprob: -10.221612930297852
    9. '                    ' → logprob: -10.971612930297852
    10. '	raise' → logprob: -10.971612930297852

Token 660: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.20207196474075317
    2. ' raise' → logprob: -1.7020719051361084
    3. '	raise' → logprob: -8.077072143554688
    4. '                   ' → logprob: -8.202072143554688
    5. '   ' → logprob: -10.452072143554688
    6. '                       ' → logprob: -11.077072143554688
    7. 'break' → logprob: -11.702072143554688
    8. '                    ' → logprob: -11.827072143554688
    9. '                        ' → logprob: -12.577072143554688
    10. '    ' → logprob: -13.077072143554688

Token 661: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -1.981667537620524e-06
    2. ' Value' → logprob: -13.250001907348633
    3. 'Index' → logprob: -16.750001907348633
    4. 'value' → logprob: -18.125001907348633
    5. '```' → logprob: -18.875001907348633
    6. 'Syntax' → logprob: -19.125001907348633
    7. '	Value' → logprob: -19.125001907348633
    8. '_value' → logprob: -19.375001907348633
    9. '_Value' → logprob: -19.500001907348633
    10. '(Value' → logprob: -20.250001907348633

Token 662: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -7.5649528298527e-05
    2. 'rror' → logprob: -9.500075340270996
    3. 'Value' → logprob: -15.250075340270996
    4. '```' → logprob: -15.625075340270996
    5. 'alue' → logprob: -16.625076293945312
    6. '
' → logprob: -17.500076293945312
    7. 'LError' → logprob: -17.625076293945312
    8. '   ' → logprob: -17.750076293945312
    9. 'error' → logprob: -17.750076293945312
    10. 'SError' → logprob: -17.750076293945312

Token 663: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -3.2378600735682994e-05
    2. '(f' → logprob: -10.500032424926758
    3. '(' → logprob: -12.375032424926758
    4. '('' → logprob: -15.125032424926758
    5. '("'' → logprob: -16.000032424926758
    6. '(
' → logprob: -16.375032424926758
    7. '"' → logprob: -18.125032424926758
    8. '()' → logprob: -18.250032424926758
    9. 'f' → logprob: -19.375032424926758
    10. '("")' → logprob: -20.375032424926758

Token 664: 'Digit' (ID: 46997)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002727013546973467
    2. 'f' → logprob: -6.752727031707764
    3. 'Unexpected' → logprob: -7.002727031707764
    4. 'Value' → logprob: -8.752726554870605
    5. 'Invalid' → logprob: -8.752726554870605
    6. 'Expected' → logprob: -9.252726554870605
    7. '"No' → logprob: -10.127726554870605
    8. ' f' → logprob: -10.252726554870605
    9. '"In' → logprob: -10.377726554870605
    10. '"value' → logprob: -10.377726554870605

Token 665: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -1.1235939264297485
    2. ' expected' → logprob: -1.2485939264297485
    3. 'prefix' → logprob: -1.9985939264297485
    4. 'expected' → logprob: -2.373593807220459
    5. ' must' → logprob: -2.748593807220459
    6. ' at' → logprob: -3.123593807220459
    7. ' without' → logprob: -4.373593807220459
    8. ' should' → logprob: -4.998593807220459
    9. 'must' → logprob: -5.123593807220459
    10. ' not' → logprob: -5.373593807220459

Token 666: ' without' (ID: 2935)
  Prédit: ' without'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' without' → logprob: -0.8209874033927917
    2. ' must' → logprob: -1.1959874629974365
    3. 'without' → logprob: -2.4459874629974365
    4. ' at' → logprob: -2.5709874629974365
    5. 'must' → logprob: -2.9459874629974365
    6. ' not' → logprob: -4.070987224578857
    7. ' with' → logprob: -5.195987224578857
    8. ' found' → logprob: -5.195987224578857
    9. 'at' → logprob: -6.070987224578857
    10. 'not' → logprob: -6.195987224578857

Token 667: ' following' (ID: 3992)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.7916688323020935
    2. 'a' → logprob: -1.4166688919067383
    3. ' letter' → logprob: -2.0416688919067383
    4. 'following' → logprob: -2.5416688919067383
    5. ' a' → logprob: -2.6666688919067383
    6. ' following' → logprob: -3.6666688919067383
    7. ' trailing' → logprob: -8.166668891906738
    8. 'cor' → logprob: -9.166668891906738
    9. ' corresponding' → logprob: -9.666668891906738
    10. ' subsequent' → logprob: -9.666668891906738

Token 668: ' letter' (ID: 10263)
  Prédit: ' letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.6326349377632141
    2. 'letter' → logprob: -0.7576349377632141
    3. 'character' → logprob: -11.757635116577148
    4. 'token' → logprob: -11.757635116577148
    5. '_letter' → logprob: -12.132635116577148
    6. '(letter' → logprob: -12.507635116577148
    7. ' character' → logprob: -12.757635116577148
    8. ' ' → logprob: -13.757635116577148
    9. ' a' → logprob: -13.882635116577148
    10. 'char' → logprob: -13.882635116577148

Token 669: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.31352075934410095
    2. '")
' → logprob: -1.3135207891464233
    3. '")

' → logprob: -8.813520431518555
    4. '.")' → logprob: -10.438520431518555
    5. '"' → logprob: -10.563520431518555
    6. '.")
' → logprob: -10.813520431518555
    7. ' found' → logprob: -11.438520431518555
    8. ' at' → logprob: -12.313520431518555
    9. ' character' → logprob: -12.563520431518555
    10. ' for' → logprob: -12.688520431518555

Token 670: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2398286908864975
    2. '           ' → logprob: -1.7398287057876587
    3. 'ch' → logprob: -3.864828586578369
    4. ' ch' → logprob: -4.364828586578369
    5. '
' → logprob: -6.239828586578369
    6. '                   ' → logprob: -6.864828586578369
    7. '<|end|>' → logprob: -8.739829063415527
    8. '	ch' → logprob: -9.114829063415527
    9. '            
' → logprob: -9.239829063415527
    10. '                
' → logprob: -9.364829063415527

Token 671: ' letter' (ID: 10263)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.011245639994740486
    2. 'letter' (adapté à ' letter') → logprob: -4.5112457275390625
    3. 'next' → logprob: -9.136245727539062
    4. '               ' → logprob: -10.011245727539062
    5. 'char' → logprob: -11.261245727539062
    6. '           ' → logprob: -11.511245727539062
    7. 'let' → logprob: -12.011245727539062
    8. ' ch' → logprob: -12.511245727539062
    9. '                   ' → logprob: -13.011245727539062
    10. 'n' → logprob: -13.136245727539062

Token 672: '_char' (ID: 23398)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021033883094788
    2. ' =' → logprob: -2.350210428237915
    3. 'ch' → logprob: -13.725210189819336
    4. '_char' → logprob: -14.100210189819336
    5. '_ch' → logprob: -14.475210189819336
    6. '=s' → logprob: -14.475210189819336
    7. 'char' → logprob: -15.100210189819336
    8. 's' → logprob: -15.850210189819336
    9. ' ' → logprob: -16.350210189819336
    10. '_=' → logprob: -16.725210189819336

Token 673: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407761216163635
    2. ' =' → logprob: -0.974077582359314
    3. ' ' → logprob: -14.849077224731445
    4. '=s' → logprob: -15.599077224731445
    5. 's' → logprob: -17.474077224731445
    6. '=
' → logprob: -17.724077224731445
    7. ' =
' → logprob: -18.849077224731445
    8. '＝' → logprob: -19.099077224731445
    9. ':' → logprob: -19.724077224731445
    10. '=}' → logprob: -19.724077224731445

Token 674: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008614926598966122
    2. ' s' → logprob: -4.758615016937256
    3. ' ' → logprob: -16.133615493774414
    4. '_s' → logprob: -16.758615493774414
    5. '	s' → logprob: -17.008615493774414
    6. '   ' → logprob: -17.008615493774414
    7. '(s' → logprob: -17.508615493774414
    8. '
' → logprob: -17.633615493774414
    9. 'ss' → logprob: -17.633615493774414
    10. 'str' → logprob: -17.946115493774414

Token 675: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: 0.0
    2. 'pos' → logprob: -17.125
    3. '[position' → logprob: -18.625
    4. '[' → logprob: -19.625
    5. '```' → logprob: -21.5
    6. '[
' → logprob: -22.0
    7. ' [' → logprob: -23.375
    8. '[p' → logprob: -23.5
    9. '[prop' → logprob: -24.125
    10. '
' → logprob: -24.25

Token 676: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0235713142901659
    2. ')' → logprob: -4.023571491241455
    3. '<|end|>' → logprob: -5.648571491241455
    4. '               ' → logprob: -7.273571491241455
    5. '           ' → logprob: -7.648571491241455
    6. '<|end|>' → logprob: -8.273571014404297
    7. ']
' → logprob: -8.398571014404297
    8. ' ]' → logprob: -9.398571014404297
    9. ')]' → logprob: -10.648571014404297
    10. '])' → logprob: -10.648571014404297

Token 677: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05221017450094223
    2. '               ' → logprob: -3.0522100925445557
    3. ' if' → logprob: -5.927210330963135
    4. 'if' → logprob: -7.302210330963135
    5. '       ' → logprob: -9.302209854125977
    6. '<|end|>' → logprob: -9.927209854125977
    7. '            
' → logprob: -10.052209854125977
    8. '   ' → logprob: -10.427209854125977
    9. '
' → logprob: -10.677209854125977
    10. '```' → logprob: -11.552209854125977

Token 678: ' pos' (ID: 1253)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0012079726438969374
    2. '           ' → logprob: -7.0012078285217285
    3. ' if' → logprob: -8.126208305358887
    4. '       ' → logprob: -15.626208305358887
    5. '            
' → logprob: -15.751208305358887
    6. '	if' → logprob: -16.00120735168457
    7. 'assert' → logprob: -16.25120735168457
    8. 'If' → logprob: -16.25120735168457
    9. '
' → logprob: -16.37620735168457
    10. '               ' → logprob: -17.12620735168457

Token 679: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3132917582988739
    2. '+=' → logprob: -1.3132917881011963
    3. '           ' → logprob: -11.438291549682617
    4. '+' → logprob: -11.938291549682617
    5. '            ' → logprob: -12.313291549682617
    6. '=' → logprob: -13.063291549682617
    7. '               ' → logprob: -13.313291549682617
    8. ' +' → logprob: -13.813291549682617
    9. ' in' → logprob: -14.063291549682617
    10. ']+=' → logprob: -14.563291549682617

Token 680: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -16.37500762939453
    4. '`' → logprob: -18.75000762939453
    5. '   ' → logprob: -18.87500762939453
    6. '
' → logprob: -19.75000762939453
    7. '۱' → logprob: -19.93750762939453
    8. '0' → logprob: -20.18750762939453
    9. '+' → logprob: -20.81250762939453
    10. '<|end|>' → logprob: -20.87500762939453

Token 681: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -17.375001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '
' → logprob: -19.812501907348633
    6. '           ' → logprob: -20.812501907348633
    7. '0' → logprob: -20.875001907348633
    8. '۱' → logprob: -21.000001907348633
    9. '``' → logprob: -21.000001907348633
    10. '2' → logprob: -21.062501907348633

Token 682: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8346380591392517
    2. '               ' → logprob: -0.8346380591392517
    3. 'if' → logprob: -2.0846381187438965
    4. ' if' → logprob: -4.9596381187438965
    5. '            
' → logprob: -8.709637641906738
    6. 'else' → logprob: -9.334637641906738
    7. '                
' → logprob: -9.459637641906738
    8. '
' → logprob: -9.834637641906738
    9. '       ' → logprob: -10.459637641906738
    10. 'assert' → logprob: -10.709637641906738

Token 683: '               ' (ID: 506)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8469454050064087
    2. '               ' → logprob: -0.8469454050064087
    3. '           ' → logprob: -1.9719454050064087
    4. ' if' → logprob: -5.721945285797119
    5. '            
' → logprob: -10.471945762634277
    6. '                
' → logprob: -10.846945762634277
    7. '       ' → logprob: -11.096945762634277
    8. '
' → logprob: -11.596945762634277
    9. '   ' → logprob: -11.971945762634277
    10. 'assert' → logprob: -12.221945762634277

Token 684: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00017636561824474484
    2. '           ' → logprob: -9.125176429748535
    3. ' if' → logprob: -9.625176429748535
    4. '               ' → logprob: -13.625176429748535
    5. '
' → logprob: -17.00017547607422
    6. '```' → logprob: -17.37517547607422
    7. '   ' → logprob: -17.62517547607422
    8. 'assert' → logprob: -17.87517547607422
    9. '       ' → logprob: -18.00017547607422
    10. 'If' → logprob: -18.12517547607422

Token 685: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.00015038289711810648
    2. ' letter' → logprob: -9.000150680541992
    3. '(letter' → logprob: -11.250150680541992
    4. 'not' → logprob: -11.500150680541992
    5. ' ' → logprob: -13.750150680541992
    6. '   ' → logprob: -13.875150680541992
    7. '_letter' → logprob: -14.250150680541992
    8. '  ' → logprob: -15.500150680541992
    9. 'digit' → logprob: -16.375150680541992
    10. 'lett' → logprob: -16.375150680541992

Token 686: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0001097417771234177
    2. 'char' → logprob: -9.125109672546387
    3. '_' → logprob: -14.875109672546387
    4. 'Char' → logprob: -16.250110626220703
    5. '<char' → logprob: -16.375110626220703
    6. 'not' → logprob: -16.500110626220703
    7. '_letter' → logprob: -17.000110626220703
    8. '_CHAR' → logprob: -17.250110626220703
    9. '_chars' → logprob: -17.750110626220703
    10. '.char' → logprob: -17.875110626220703

Token 687: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6932149529457092
    2. 'not' → logprob: -0.6932149529457092
    3. 'in' → logprob: -10.318215370178223
    4. '<' → logprob: -11.068215370178223
    5. '==' → logprob: -11.818215370178223
    6. ' <' → logprob: -12.943215370178223
    7. ')' → logprob: -12.943215370178223
    8. ' in' → logprob: -13.318215370178223
    9. '>' → logprob: -13.443215370178223
    10. 'is' → logprob: -14.193215370178223

Token 688: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6335193514823914
    2. ' in' → logprob: -0.7585193514823914
    3. '_in' → logprob: -7.633519172668457
    4. '_' → logprob: -9.383519172668457
    5. '<|end|>' → logprob: -9.508519172668457
    6. ' _' → logprob: -9.508519172668457
    7. 'to' → logprob: -9.758519172668457
    8. '   ' → logprob: -10.883519172668457
    9. ',' → logprob: -10.883519172668457
    10. '['_' → logprob: -11.633519172668457

Token 689: ' _' (ID: 1175)
  Prédit: '_LE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_LE' → logprob: -0.1231122836470604
    2. ''' → logprob: -3.248112201690674
    3. '_letters' → logprob: -3.248112201690674
    4. '_m' → logprob: -4.623112201690674
    5. '_letter' → logprob: -4.623112201690674
    6. '_M' → logprob: -4.623112201690674
    7. '_le' → logprob: -5.498112201690674
    8. '_l' → logprob: -6.873112201690674
    9. '_mc' → logprob: -7.498112201690674
    10. '"' → logprob: -7.498112201690674

Token 690: 'LETTER' (ID: 162283)
  Prédit: 'LETTER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LETTER' → logprob: -0.0036676526069641113
    2. '_LE' → logprob: -6.003667831420898
    3. 'LET' → logprob: -6.753667831420898
    4. ' LETTER' → logprob: -11.753667831420898
    5. '_letter' → logprob: -11.878667831420898
    6. '```' → logprob: -12.253667831420898
    7. 'letter' → logprob: -12.753667831420898
    8. '`' → logprob: -14.628667831420898
    9. '``' → logprob: -14.878667831420898
    10. '_LO' → logprob: -15.128667831420898

Token 691: '_CLASSES' (ID: 171569)
  Prédit: 'CL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CL' → logprob: -0.0789131447672844
    2. '_CLASSES' → logprob: -2.5789132118225098
    3. '_classes' → logprob: -11.078912734985352
    4. '_CL' → logprob: -12.453912734985352
    5. ' CL' → logprob: -13.203912734985352
    6. '```' → logprob: -13.953912734985352
    7. 'classes' → logprob: -15.078912734985352
    8. ' ' → logprob: -15.453912734985352
    9. 'CLASS' → logprob: -15.828912734985352
    10. '   ' → logprob: -16.07891273498535

Token 692: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5832929015159607
    2. ':
' → logprob: -0.8332929015159607
    3. ' or' → logprob: -4.9582929611206055
    4. ' :' → logprob: -9.708292961120605
    5. ' :
' → logprob: -9.708292961120605
    6. ':
' → logprob: -10.583292961120605
    7. '               ' → logprob: -10.708292961120605
    8. '):
' → logprob: -10.708292961120605
    9. '           ' → logprob: -10.708292961120605
    10. ':

' → logprob: -10.833292961120605

Token 693: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014387615025043488
    2. ':
' → logprob: -4.639387607574463
    3. ':' → logprob: -5.889387607574463
    4. '               ' → logprob: -7.389387607574463
    5. ' or' → logprob: -7.639387607574463
    6. '           ' → logprob: -8.139388084411621
    7. 'raise' → logprob: -9.389388084411621
    8. '                       ' → logprob: -9.514388084411621
    9. ' raise' → logprob: -10.014388084411621
    10. ' and' → logprob: -10.014388084411621

Token 694: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.1279030740261078
    2. 'raise' (adapté à ' raise') → logprob: -2.1279029846191406
    3. '	raise' → logprob: -7.002902984619141
    4. '                   ' → logprob: -10.00290298461914
    5. '_raise' → logprob: -11.62790298461914
    6. 'Raise' → logprob: -12.00290298461914
    7. '.raise' → logprob: -13.37790298461914
    8. '                       ' → logprob: -14.00290298461914
    9. '                    
' → logprob: -14.50290298461914
    10. '```' → logprob: -14.62790298461914

Token 695: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -1.3544423381972592e-05
    2. ' Value' → logprob: -11.25001335144043
    3. '_value' → logprob: -16.25001335144043
    4. '_Value' → logprob: -16.50001335144043
    5. '	Value' → logprob: -16.62501335144043
    6. 'value' → logprob: -16.75001335144043
    7. 'Key' → logprob: -17.25001335144043
    8. '.Value' → logprob: -17.37501335144043
    9. 'Type' → logprob: -18.12501335144043
    10. '<Value' → logprob: -18.12501335144043

Token 696: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.000541592831723392
    2. 'rror' → logprob: -7.875541687011719
    3. 'alue' → logprob: -9.125541687011719
    4. 'Value' → logprob: -9.875541687011719
    5. 'ror' → logprob: -14.375541687011719
    6. '               ' → logprob: -16.50054168701172
    7. 'SError' → logprob: -16.75054168701172
    8. 'or' → logprob: -16.87554168701172
    9. 'error' → logprob: -16.87554168701172
    10. '           ' → logprob: -16.87554168701172

Token 697: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.14797572791576385
    2. '("' → logprob: -2.1479756832122803
    3. '(' → logprob: -3.8979756832122803
    4. '(
' → logprob: -7.522975921630859
    5. 'f' → logprob: -12.89797592163086
    6. '(F' → logprob: -14.52297592163086
    7. '("'' → logprob: -14.89797592163086
    8. '('' → logprob: -15.14797592163086
    9. '(

' → logprob: -15.77297592163086
    10. '           ' → logprob: -16.02297592163086

Token 698: '"' (ID: 1)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.9359262585639954
    2. 'f' → logprob: -1.0609261989593506
    3. '"' → logprob: -1.6859261989593506
    4. 'Invalid' → logprob: -2.6859261989593506
    5. 'Unexpected' → logprob: -5.31092643737793
    6. ' Invalid' → logprob: -6.43592643737793
    7. '(f' → logprob: -7.18592643737793
    8. 'invalid' → logprob: -9.06092643737793
    9. ' Unexpected' → logprob: -9.18592643737793
    10. ' invalid' → logprob: -9.18592643737793

Token 699: 'Invalid' (ID: 12278)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2953680753707886
    2. 'Invalid' → logprob: -1.4203680753707886
    3. '"' → logprob: -4.795368194580078
    4. 'Unexpected' → logprob: -5.295368194580078
    5. ' f' → logprob: -7.795368194580078
    6. 'Illegal' → logprob: -9.045368194580078
    7. 'invalid' → logprob: -9.420368194580078
    8. 'Unknown' → logprob: -10.045368194580078
    9. 'Letter' → logprob: -10.170368194580078
    10. '(f' → logprob: -10.170368194580078

Token 700: ' letter' (ID: 10263)
  Prédit: ' letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.06312152743339539
    2. 'letter' → logprob: -3.0631215572357178
    3. ' character' → logprob: -4.313121318817139
    4. 'character' → logprob: -7.188121318817139
    5. '_letter' → logprob: -9.563121795654297
    6. '(letter' → logprob: -9.688121795654297
    7. ' MC' → logprob: -10.563121795654297
    8. 'LETTER' → logprob: -10.813121795654297
    9. 'char' → logprob: -11.063121795654297
    10. ' input' → logprob: -11.438121795654297

Token 701: ' '{' (ID: 24918)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.8301532864570618
    2. ' '{' → logprob: -1.330153226852417
    3. ' {' → logprob: -1.455153226852417
    4. ''{' → logprob: -3.080153226852417
    5. 'character' → logprob: -4.580153465270996
    6. ' character' → logprob: -4.955153465270996
    7. ':' → logprob: -6.705153465270996
    8. 'char' → logprob: -8.205153465270996
    9. 'letter' → logprob: -8.330153465270996
    10. '"{' → logprob: -8.455153465270996

Token 702: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.03862819820642471
    2. '{' → logprob: -3.288628101348877
    3. ' letter' → logprob: -7.538628101348877
    4. ' {' → logprob: -10.913628578186035
    5. '(letter' → logprob: -11.163628578186035
    6. '{
' → logprob: -11.663628578186035
    7. ' ' → logprob: -12.663628578186035
    8. '   ' → logprob: -13.663628578186035
    9. '```' → logprob: -13.788628578186035
    10. ''{' → logprob: -14.288628578186035

Token 703: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -4.024604277219623e-05
    2. 'char' → logprob: -10.125040054321289
    3. 'Char' → logprob: -16.25004005432129
    4. ''' → logprob: -18.12504005432129
    5. '<char' → logprob: -18.12504005432129
    6. '_CHAR' → logprob: -18.12504005432129
    7. '}'' → logprob: -18.62504005432129
    8. '.char' → logprob: -18.75004005432129
    9. '{' → logprob: -18.87504005432129
    10. '}' → logprob: -19.37504005432129

Token 704: '}'' (ID: 24321)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15379422903060913
    2. ' in' → logprob: -2.653794288635254
    3. '}'' → logprob: -3.153794288635254
    4. ' after' → logprob: -4.778794288635254
    5. ''"' → logprob: -4.778794288635254
    6. ' for' → logprob: -5.653794288635254
    7. 'in' → logprob: -6.153794288635254
    8. ' at' → logprob: -6.278794288635254
    9. ''")
' → logprob: -6.278794288635254
    10. 'for' → logprob: -7.528794288635254

Token 705: ' after' (ID: 1934)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.6325526833534241
    2. ' for' → logprob: -0.8825526833534241
    3. ')' → logprob: -4.007552623748779
    4. ' at' → logprob: -4.257552623748779
    5. '")
' → logprob: -5.257552623748779
    6. ' in' → logprob: -5.757552623748779
    7. 'for' → logprob: -5.882552623748779
    8. '"' → logprob: -6.507552623748779
    9. ' after' → logprob: -6.632552623748779
    10. '           ' → logprob: -6.757552623748779

Token 706: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.005473398603498936
    2. ' digit' → logprob: -5.755473613739014
    3. 'count' → logprob: -6.255473613739014
    4. 'prefix' → logprob: -8.505473136901855
    5. 'digits' → logprob: -9.255473136901855
    6. 'a' → logprob: -10.255473136901855
    7. '{' → logprob: -11.005473136901855
    8. 'number' → logprob: -12.255473136901855
    9. ' a' → logprob: -12.755473136901855
    10. ' count' → logprob: -12.880473136901855

Token 707: ' {' (ID: 354)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.03597630187869072
    2. ' prefix' → logprob: -4.035976409912109
    3. '")' → logprob: -4.785976409912109
    4. '')' → logprob: -5.285976409912109
    5. ')' → logprob: -5.785976409912109
    6. '<|end|>' → logprob: -7.910976409912109
    7. '"' → logprob: -8.91097640991211
    8. 'digit' → logprob: -9.53597640991211
    9. '(prefix' → logprob: -9.66097640991211
    10. ''' → logprob: -9.66097640991211

Token 708: 'ch' (ID: 332)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.04874451458454132
    2. 'ch' → logprob: -3.0487444400787354
    3. ' count' → logprob: -9.173744201660156
    4. '}' → logprob: -10.173744201660156
    5. '(count' → logprob: -12.423744201660156
    6. ' ch' → logprob: -13.548744201660156
    7. '[count' → logprob: -14.048744201660156
    8. '	count' → logprob: -14.173744201660156
    9. '(ch' → logprob: -14.548744201660156
    10. 'c' → logprob: -14.548744201660156

Token 709: '}")

' (ID: 119200)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.038874879479408264
    2. '}")' → logprob: -3.288874864578247
    3. '")
' → logprob: -8.288874626159668
    4. ')")' → logprob: -8.288874626159668
    5. '}")
' → logprob: -8.538874626159668
    6. '}' → logprob: -10.288874626159668
    7. '')' → logprob: -10.538874626159668
    8. '.")' → logprob: -10.538874626159668
    9. ')' → logprob: -10.913874626159668
    10. ')")
' → logprob: -11.663874626159668

Token 710: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39488062262535095
    2. '           ' → logprob: -1.6448806524276733
    3. 'if' → logprob: -2.394880533218384
    4. ' if' → logprob: -3.519880533218384
    5. '
' → logprob: -4.644880771636963
    6. '            
' → logprob: -7.019880771636963
    7. '                
' → logprob: -7.144880771636963
    8. '                   ' → logprob: -8.894880294799805
    9. '<|end|>' → logprob: -8.894880294799805
    10. '```' → logprob: -9.269880294799805

Token 711: ' letter' (ID: 10263)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13157683610916138
    2. 'letter' (adapté à ' letter') → logprob: -2.5065767765045166
    3. 'current' → logprob: -3.6315767765045166
    4. '               ' → logprob: -4.631577014923096
    5. 'index' → logprob: -5.381577014923096
    6. 'idx' → logprob: -7.756577014923096
    7. 'curr' → logprob: -8.756576538085938
    8. ' if' → logprob: -9.131576538085938
    9. 'new' → logprob: -10.006576538085938
    10. '           ' → logprob: -10.131576538085938

Token 712: '_idx' (ID: 15257)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0052187019027769566
    2. '_class' → logprob: -5.630218505859375
    3. '_idx' → logprob: -7.005218505859375
    4. '_char' → logprob: -7.380218505859375
    5. '_cls' → logprob: -10.255218505859375
    6. '_classes' → logprob: -11.130218505859375
    7. '_' → logprob: -11.380218505859375
    8. 'index' → logprob: -11.880218505859375
    9. 'Index' → logprob: -12.130218505859375
    10. '_order' → logprob: -12.755218505859375

Token 713: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407984733581543
    2. '=' → logprob: -0.9740798473358154
    3. '_' → logprob: -13.849080085754395
    4. ' ' → logprob: -14.099080085754395
    5. ')' → logprob: -15.099080085754395
    6. ',' → logprob: -15.974080085754395
    7. '=_' → logprob: -16.099079132080078
    8. '_=' → logprob: -16.099079132080078
    9. '	' → logprob: -16.224079132080078
    10. 's' → logprob: -16.349079132080078

Token 714: ' MC' (ID: 31263)
  Prédit: 'MC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MC' → logprob: -0.027691202238202095
    2. '_MC' → logprob: -3.652691125869751
    3. ' MC' → logprob: -7.15269136428833
    4. 'cls' → logprob: -8.027690887451172
    5. '_M' → logprob: -9.027690887451172
    6. 'mc' → logprob: -10.402690887451172
    7. '_LE' → logprob: -10.652690887451172
    8. 'ML' → logprob: -10.777690887451172
    9. '   ' → logprob: -10.777690887451172
    10. 'class' → logprob: -10.902690887451172

Token 715: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.28150853514671326
    2. 'XI' → logprob: -1.4065085649490356
    3. 'XL' → logprob: -8.031508445739746
    4. '
' → logprob: -11.656508445739746
    5. '

' → logprob: -12.281508445739746
    6. '_X' → logprob: -12.406508445739746
    7. ' XI' → logprob: -12.719008445739746
    8. '   ' → logprob: -13.844008445739746
    9. 'x' → logprob: -13.969008445739746
    10. 'IX' → logprob: -14.156508445739746

Token 716: 'IL' (ID: 2654)
  Prédit: 'IL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.10031212866306305
    2. 'I' → logprob: -2.3503122329711914
    3. 'IX' → logprob: -10.100312232971191
    4. 'IS' → logprob: -10.975312232971191
    5. 'X' → logprob: -11.350312232971191
    6. 'String' → logprob: -11.975312232971191
    7. 'ILog' → logprob: -12.350312232971191
    8. '_IL' → logprob: -12.475312232971191
    9. 'IC' → logprob: -12.725312232971191
    10. 'ILS' → logprob: -12.975312232971191

Token 717: 'etter' (ID: 30747)
  Prédit: 'etter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etter' → logprob: -0.0070455786772072315
    2. 'Letter' → logprob: -5.007045745849609
    3. 'String' → logprob: -8.63204574584961
    4. 'I' → logprob: -10.00704574584961
    5. 'eter' → logprob: -10.13204574584961
    6. 'et' → logprob: -10.88204574584961
    7. '`' → logprob: -12.38204574584961
    8. 'e' → logprob: -12.50704574584961
    9. 'ett' → logprob: -12.63204574584961
    10. '
' → logprob: -12.75704574584961

Token 718: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0023887332063168287
    2. '._' → logprob: -6.252388954162598
    3. '_letter' → logprob: -8.002388954162598
    4. 'letter' → logprob: -9.002388954162598
    5. ' .' → logprob: -13.877388954162598
    6. '(letter' → logprob: -14.752388954162598
    7. '```' → logprob: -15.127388954162598
    8. ' letter' → logprob: -15.752388954162598
    9. '.le' → logprob: -16.37738800048828
    10. '_' → logprob: -16.50238800048828

Token 719: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -9.758300438988954e-05
    2. '_letter' → logprob: -9.250097274780273
    3. ' letter' → logprob: -13.500097274780273
    4. '(letter' → logprob: -17.500097274780273
    5. '.' → logprob: -18.375097274780273
    6. '_' → logprob: -19.125097274780273
    7. 'class' → logprob: -19.625097274780273
    8. '._' → logprob: -19.875097274780273
    9. 'LETTER' → logprob: -20.000097274780273
    10. '```' → logprob: -20.250097274780273

Token 720: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.951771421066951e-05
    2. 'index' → logprob: -10.500029563903809
    3. 'Index' → logprob: -13.375029563903809
    4. '_order' → logprob: -15.625029563903809
    5. '_INDEX' → logprob: -17.250028610229492
    6. 's' → logprob: -17.500028610229492
    7. '```' → logprob: -18.000028610229492
    8. '_indexes' → logprob: -18.625028610229492
    9. ' index' → logprob: -18.875028610229492
    10. '_indices' → logprob: -19.500028610229492

Token 721: '(letter' (ID: 142899)
  Prédit: '(letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(letter' → logprob: -9.209963900502771e-05
    2. '(' → logprob: -9.750092506408691
    3. 'letter' → logprob: -10.375092506408691
    4. '(M' → logprob: -14.250092506408691
    5. '```' → logprob: -14.375092506408691
    6. ' (' → logprob: -15.375092506408691
    7. '[' → logprob: -15.750092506408691
    8. '(_' → logprob: -15.750092506408691
    9. ' letter' → logprob: -16.250091552734375
    10. '(
' → logprob: -16.375091552734375

Token 722: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0003392767102923244
    2. 'char' → logprob: -8.00033950805664
    3. 'letter' → logprob: -13.37533950805664
    4. 'Char' → logprob: -14.50033950805664
    5. ')' → logprob: -14.62533950805664
    6. '```' → logprob: -14.75033950805664
    7. '_class' → logprob: -15.62533950805664
    8. '(letter' → logprob: -15.87533950805664
    9. '_letter' → logprob: -16.00033950805664
    10. '<char' → logprob: -16.37533950805664

Token 723: ')

' (ID: 1029)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20154568552970886
    2. ')' → logprob: -1.7015457153320312
    3. ')

' → logprob: -10.076545715332031
    4. ' )
' → logprob: -10.326545715332031
    5. ')
' → logprob: -10.326545715332031
    6. '           ' → logprob: -11.701545715332031
    7. '               ' → logprob: -11.701545715332031
    8. ' )' → logprob: -12.826545715332031
    9. ')<' → logprob: -13.576545715332031
    10. ')>' → logprob: -14.076545715332031

Token 724: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46039870381355286
    2. 'if' → logprob: -1.5853986740112305
    3. '               ' → logprob: -1.9603986740112305
    4. ' if' → logprob: -3.8353986740112305
    5. '<|end|>' → logprob: -6.7103986740112305
    6. '```' → logprob: -8.96039867401123
    7. '
' → logprob: -9.08539867401123
    8. '       ' → logprob: -9.71039867401123
    9. '   ' → logprob: -9.83539867401123
    10. '            
' → logprob: -10.83539867401123

Token 725: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008537746965885162
    2. ' if' → logprob: -5.133537769317627
    3. '           ' → logprob: -6.383537769317627
    4. '               ' → logprob: -7.008537769317627
    5. 'If' → logprob: -12.008537292480469
    6. '```' → logprob: -12.383537292480469
    7. '#' → logprob: -14.008537292480469
    8. '<|end|>' → logprob: -14.383537292480469
    9. '	if' → logprob: -16.00853729248047
    10. ' ' → logprob: -16.38353729248047

Token 726: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.048628244549036026
    2. ' letter' → logprob: -3.048628330230713
    3. '   ' → logprob: -11.173627853393555
    4. '(letter' → logprob: -11.298627853393555
    5. ' ' → logprob: -12.173627853393555
    6. '  ' → logprob: -12.923627853393555
    7. 'letters' → logprob: -13.298627853393555
    8. 'last' → logprob: -13.798627853393555
    9. '    ' → logprob: -14.298627853393555
    10. '```' → logprob: -14.923627853393555

Token 727: '_char' (ID: 23398)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -1.9027791495318525e-05
    2. 'idx' → logprob: -11.000019073486328
    3. 'Idx' → logprob: -13.750019073486328
    4. '_IDX' → logprob: -14.625019073486328
    5. '_idxs' → logprob: -15.500019073486328
    6. '	idx' → logprob: -16.125019073486328
    7. '
' → logprob: -16.125019073486328
    8. ' idx' → logprob: -16.625019073486328
    9. '_char' → logprob: -17.125019073486328
    10. '           ' → logprob: -17.250019073486328

Token 728: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029754776507616043
    2. 'in' → logprob: -3.529754877090454
    3. ' ' → logprob: -12.529754638671875
    4. '<|end|>' → logprob: -14.904754638671875
    5. '	in' → logprob: -16.529754638671875
    6. ' not' → logprob: -16.529754638671875
    7. 'not' → logprob: -17.279754638671875
    8. 'In' → logprob: -17.529754638671875
    9. 'n' → logprob: -17.529754638671875
    10. '  ' → logprob: -17.779754638671875

Token 729: ' letters' (ID: 18151)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.011054305359721184
    2. ' letters' → logprob: -4.511054515838623
    3. '_letters' → logprob: -12.761054039001465
    4. 'letter' → logprob: -14.511054039001465
    5. '```' → logprob: -14.761054039001465
    6. '`' → logprob: -15.323554039001465
    7. '   ' → logprob: -15.323554039001465
    8. '[' → logprob: -15.448554039001465
    9. ' ' → logprob: -15.573554039001465
    10. 'let' → logprob: -15.698554039001465

Token 730: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -1.1279553291387856e-05
    2. 'found' → logprob: -11.750011444091797
    3. 'Found' → logprob: -13.250011444091797
    4. '_FOUND' → logprob: -15.125011444091797
    5. '_detect' → logprob: -15.375011444091797
    6. '_seen' → logprob: -15.625011444091797
    7. '_' → logprob: -16.000011444091797
    8. '           ' → logprob: -16.000011444091797
    9. '```' → logprob: -16.000011444091797
    10. ')' → logprob: -16.500011444091797

Token 731: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3956654369831085
    2. ':
' → logprob: -1.1456654071807861
    3. ' and' → logprob: -5.520665645599365
    4. '<|end|>' → logprob: -6.645665645599365
    5. '               ' → logprob: -6.895665645599365
    6. '                   ' → logprob: -7.395665645599365
    7. '           ' → logprob: -8.270665168762207
    8. ' or' → logprob: -8.645665168762207
    9. '==' → logprob: -8.895665168762207
    10. ')' → logprob: -9.020665168762207

Token 732: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00040695868665352464
    2. '                       ' → logprob: -9.000407218933105
    3. '               ' → logprob: -9.375407218933105
    4. ' raise' → logprob: -9.500407218933105
    5. '                  ' → logprob: -10.250407218933105
    6. '                           ' → logprob: -10.750407218933105
    7. '                    ' → logprob: -11.000407218933105
    8. 'raise' → logprob: -11.250407218933105
    9. '           ' → logprob: -11.375407218933105
    10. '```' → logprob: -11.875407218933105

Token 733: ' raise' (ID: 9338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.22059671580791473
    2. ' raise' → logprob: -2.2205967903137207
    3. 'raise' (adapté à ' raise') → logprob: -2.7205967903137207
    4. '                       ' → logprob: -4.095596790313721
    5. '```' → logprob: -5.845596790313721
    6. '	raise' → logprob: -6.845596790313721
    7. '                           ' → logprob: -7.470596790313721
    8. '   ' → logprob: -7.470596790313721
    9. '                    
' → logprob: -7.720596790313721
    10. '
' → logprob: -8.345596313476562

Token 734: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.000912774819880724
    2. ' Value' → logprob: -7.000912666320801
    3. '	Value' → logprob: -14.7509126663208
    4. 'value' → logprob: -15.0009126663208
    5. '_value' → logprob: -15.5009126663208
    6. '_Value' → logprob: -16.250913619995117
    7. '
' → logprob: -17.375913619995117
    8. '.Value' → logprob: -17.500913619995117
    9. ' ' → logprob: -17.750913619995117
    10. '```' → logprob: -18.000913619995117

Token 735: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.003522502724081278
    2. 'rror' → logprob: -5.8785223960876465
    3. 'alue' → logprob: -7.2535223960876465
    4. 'Value' → logprob: -11.878522872924805
    5. 'alid' → logprob: -14.628522872924805
    6. '           ' → logprob: -14.753522872924805
    7. 'ror' → logprob: -14.753522872924805
    8. 'error' → logprob: -15.128522872924805
    9. '   ' → logprob: -15.503522872924805
    10. '               ' → logprob: -15.628522872924805

Token 736: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.14295946061611176
    2. '(f' → logprob: -2.1429593563079834
    3. '(' → logprob: -4.1429595947265625
    4. '(
' → logprob: -10.642959594726562
    5. '('' → logprob: -13.767959594726562
    6. '("("' → logprob: -14.017959594726562
    7. '("'' → logprob: -14.392959594726562
    8. '()' → logprob: -14.767959594726562
    9. 'f' → logprob: -15.142959594726562
    10. '("")' → logprob: -15.267959594726562

Token 737: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05822034552693367
    2. 'Duplicate' → logprob: -3.808220386505127
    3. ' f' → logprob: -4.058220386505127
    4. 'Letter' → logprob: -5.058220386505127
    5. 'f' → logprob: -5.683220386505127
    6. ' Duplicate' → logprob: -6.183220386505127
    7. 'Letters' → logprob: -6.308220386505127
    8. ' Letter' → logprob: -7.308220386505127
    9. ''' → logprob: -7.933220386505127
    10. 'Repeated' → logprob: -7.933220386505127

Token 738: 'Duplicate' (ID: 64889)
  Prédit: 'Duplicate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Duplicate' → logprob: -0.25052782893180847
    2. 'Letter' → logprob: -1.6255278587341309
    3. 'f' → logprob: -4.250527858734131
    4. 'Invalid' → logprob: -6.125527858734131
    5. 'letter' → logprob: -6.250527858734131
    6. 'Repeated' → logprob: -6.250527858734131
    7. '"' → logprob: -6.375527858734131
    8. 'Duplic' → logprob: -6.500527858734131
    9. 'duplicate' → logprob: -7.500527858734131
    10. 'Multiple' → logprob: -8.000527381896973

Token 739: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.4725971817970276
    2. ' letter' → logprob: -1.2225971221923828
    3. ''' → logprob: -3.222597122192383
    4. '(letter' → logprob: -4.597597122192383
    5. '_' → logprob: -4.722597122192383
    6. ' ' → logprob: -4.847597122192383
    7. ' f' → logprob: -5.597597122192383
    8. '{' → logprob: -5.972597122192383
    9. '`' → logprob: -6.222597122192383
    10. '"' → logprob: -6.847597122192383

Token 740: ' '{' (ID: 24918)
  Prédit: ' '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '{' → logprob: -0.18259023129940033
    2. ''' → logprob: -3.0575902462005615
    3. ' {' → logprob: -3.0575902462005615
    4. ''{' → logprob: -3.4325902462005615
    5. ' '' → logprob: -3.5575902462005615
    6. '{' → logprob: -5.057590007781982
    7. ' detected' → logprob: -5.807590007781982
    8. ' found' → logprob: -6.682590007781982
    9. ':' → logprob: -7.932590007781982
    10. '"' → logprob: -8.55759048461914

Token 741: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.0010853286366909742
    2. '{' → logprob: -6.87608528137207
    3. ' letter' → logprob: -10.12608528137207
    4. '_letter' → logprob: -12.37608528137207
    5. '(letter' → logprob: -12.62608528137207
    6. '{
' → logprob: -13.50108528137207
    7. '```' → logprob: -14.12608528137207
    8. '
' → logprob: -14.12608528137207
    9. '`' → logprob: -14.50108528137207
    10. 'lette' → logprob: -15.00108528137207

Token 742: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.00014025058771949261
    2. 'char' → logprob: -8.875140190124512
    3. '
' → logprob: -16.625141143798828
    4. 'Char' → logprob: -16.750141143798828
    5. '_c' → logprob: -17.250141143798828
    6. '```' → logprob: -17.250141143798828
    7. '_CHAR' → logprob: -17.375141143798828
    8. '_idx' → logprob: -17.500141143798828
    9. '<char' → logprob: -17.500141143798828
    10. '_chars' → logprob: -17.750141143798828

Token 743: '}'' (ID: 24321)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2987576127052307
    2. ''"' → logprob: -1.548757553100586
    3. '}'' → logprob: -3.298757553100586
    4. ''")
' → logprob: -5.048757553100586
    5. '"'' → logprob: -7.048757553100586
    6. ' '' → logprob: -8.048757553100586
    7. ' found' → logprob: -8.048757553100586
    8. ')'' → logprob: -8.673757553100586
    9. '"' → logprob: -8.923757553100586
    10. '')"' → logprob: -8.923757553100586

Token 744: '")
' (ID: 1896)
  Prédit: ' found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.7925229668617249
    2. '")' → logprob: -1.16752290725708
    3. ' in' → logprob: -2.04252290725708
    4. ' already' → logprob: -3.16752290725708
    5. ' detected' → logprob: -3.54252290725708
    6. ' encountered' → logprob: -4.16752290725708
    7. '")
' → logprob: -4.79252290725708
    8. 'already' → logprob: -6.29252290725708
    9. '"' → logprob: -6.54252290725708
    10. ' appearing' → logprob: -7.16752290725708

Token 745: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022542210295796394
    2. '
' → logprob: -4.1475419998168945
    3. 'letters' → logprob: -5.2725419998168945
    4. '                
' → logprob: -7.5225419998168945
    5. ' letters' → logprob: -7.5225419998168945
    6. '```' → logprob: -9.022541999816895
    7. '           ' → logprob: -9.897541999816895
    8. '<|end|>' → logprob: -10.397541999816895
    9. '              ' → logprob: -11.397541999816895
    10. '                   ' → logprob: -11.397541999816895

Token 746: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0614371299743652
    2. ' letters' → logprob: -1.1864371299743652
    3. 'letters' → logprob: -1.1864371299743652
    4. '
' → logprob: -3.1864371299743652
    5. '_letters' → logprob: -6.936437129974365
    6. '                
' → logprob: -7.686437129974365
    7. '           ' → logprob: -7.936437129974365
    8. '       ' → logprob: -9.686437606811523
    9. '                   ' → logprob: -9.936437606811523
    10. 'Letters' → logprob: -9.936437606811523

Token 747: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.0028171204030513763
    2. ' letter' → logprob: -5.877817153930664
    3. '(letter' → logprob: -11.877817153930664
    4. '   ' → logprob: -13.252817153930664
    5. 'last' → logprob: -13.502817153930664
    6. '  ' → logprob: -14.627817153930664
    7. ' ' → logprob: -14.627817153930664
    8. '    ' → logprob: -15.502817153930664
    9. '	' → logprob: -15.502817153930664
    10. '```' → logprob: -15.627817153930664

Token 748: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -2.816093228830141e-06
    2. 'idx' → logprob: -13.25000286102295
    3. '_IDX' → logprob: -15.50000286102295
    4. 'Idx' → logprob: -15.62500286102295
    5. '_char' → logprob: -16.250001907348633
    6. '
' → logprob: -16.375001907348633
    7. '_index' → logprob: -16.375001907348633
    8. 'char' → logprob: -16.375001907348633
    9. '```' → logprob: -17.250001907348633
    10. '>' → logprob: -17.375001907348633

Token 749: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0297551192343235
    2. ' <=' → logprob: -3.529755115509033
    3. '```' → logprob: -13.029755592346191
    4. ')<=' → logprob: -13.404755592346191
    5. '<' → logprob: -14.279755592346191
    6. ']<=' → logprob: -16.029754638671875
    7. ' <' → logprob: -17.029754638671875
    8. '==' → logprob: -17.279754638671875
    9. '≤' → logprob: -17.404754638671875
    10. 'le' → logprob: -17.529754638671875

Token 750: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -5.1689596148207784e-05
    2. ' last' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.750051498413086
    4. '[last' → logprob: -17.500051498413086
    5. '	last' → logprob: -17.625051498413086
    6. '_last' → logprob: -18.250051498413086
    7. 'lasti' → logprob: -18.375051498413086
    8. '(last' → logprob: -18.625051498413086
    9. '
' → logprob: -19.250051498413086
    10. ',last' → logprob: -19.375051498413086

Token 751: '_letter' (ID: 120621)
  Prédit: '_letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -9.662937372922897e-05
    2. 'letter' → logprob: -9.250096321105957
    3. '```' → logprob: -15.625096321105957
    4. 'Letter' → logprob: -15.875096321105957
    5. ' letter' → logprob: -17.375097274780273
    6. '
' → logprob: -17.750097274780273
    7. '...' → logprob: -18.750097274780273
    8. 'LETTER' → logprob: -19.125097274780273
    9. '`' → logprob: -19.250097274780273
    10. '_' → logprob: -19.250097274780273

Token 752: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.10023665428161621
    2. 'index' → logprob: -2.350236654281616
    3. 'Index' → logprob: -10.850236892700195
    4. '_idx' → logprob: -11.975236892700195
    5. ' index' → logprob: -12.850236892700195
    6. 'idx' → logprob: -14.725236892700195
    7. '_INDEX' → logprob: -15.225236892700195
    8. '#index' → logprob: -15.475236892700195
    9. '<|end|>' → logprob: -16.350236892700195
    10. 'indx' → logprob: -16.600236892700195

Token 753: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3246854543685913
    2. ':
' → logprob: -1.6996854543685913
    3. '                   ' → logprob: -2.574685573577881
    4. '               ' → logprob: -4.074685573577881
    5. '           ' → logprob: -7.824685573577881
    6. '                       ' → logprob: -8.699685096740723
    7. ':return' → logprob: -8.824685096740723
    8. ' or' → logprob: -8.949685096740723
    9. '<|end|>' → logprob: -8.949685096740723
    10. '+' → logprob: -9.199685096740723

Token 754: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002989470958709717
    2. ' raise' → logprob: -6.002989292144775
    3. 'raise' → logprob: -7.627989292144775
    4. '           ' → logprob: -12.377989768981934
    5. '                    ' → logprob: -12.502989768981934
    6. '```' → logprob: -12.502989768981934
    7. '                       ' → logprob: -12.627989768981934
    8. '   ' → logprob: -12.877989768981934
    9. '               ' → logprob: -12.877989768981934
    10. '
' → logprob: -12.877989768981934

Token 755: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.01862078718841076
    2. 'raise' (adapté à ' raise') → logprob: -4.01862096786499
    3. '                   ' → logprob: -7.76862096786499
    4. '                    ' → logprob: -10.643620491027832
    5. '	raise' → logprob: -11.393620491027832
    6. '                ' → logprob: -11.893620491027832
    7. '               ' → logprob: -13.518620491027832
    8. '                       ' → logprob: -13.643620491027832
    9. 'Raise' → logprob: -14.268620491027832
    10. ' break' → logprob: -14.518620491027832

Token 756: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0001584850688232109
    2. ' Value' → logprob: -8.750158309936523
    3. '	Value' → logprob: -17.625158309936523
    4. '_value' → logprob: -18.125158309936523
    5. '_Value' → logprob: -18.500158309936523
    6. '.Value' → logprob: -18.625158309936523
    7. '
' → logprob: -19.125158309936523
    8. 'Index' → logprob: -19.125158309936523
    9. 'value' → logprob: -19.875158309936523
    10. '```' → logprob: -20.000158309936523

Token 757: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.10077083855867386
    2. 'Value' → logprob: -2.350770950317383
    3. 'rror' → logprob: -7.725770950317383
    4. 'alue' → logprob: -9.350770950317383
    5. '(Value' → logprob: -12.350770950317383
    6. 'LError' → logprob: -12.350770950317383
    7. 'Index' → logprob: -12.600770950317383
    8. 'error' → logprob: -12.725770950317383
    9. '   ' → logprob: -12.725770950317383
    10. 'SError' → logprob: -12.850770950317383

Token 758: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.011064562946557999
    2. '("' → logprob: -4.511064529418945
    3. '(' → logprob: -11.011064529418945
    4. '(
' → logprob: -15.261064529418945
    5. '(F' → logprob: -17.261064529418945
    6. '           ' → logprob: -18.386064529418945
    7. ' f' → logprob: -18.511064529418945
    8. '('' → logprob: -18.511064529418945
    9. 'f' → logprob: -18.636064529418945
    10. '               ' → logprob: -19.511064529418945

Token 759: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.061729226261377335
    2. 'Letters' → logprob: -2.9367291927337646
    3. 'Letter' → logprob: -5.936729431152344
    4. 'f' → logprob: -5.936729431152344
    5. ' Letters' → logprob: -8.061729431152344
    6. 'letters' → logprob: -8.186729431152344
    7. 'Invalid' → logprob: -8.561729431152344
    8. ' f' → logprob: -8.811729431152344
    9. '"In' → logprob: -8.811729431152344
    10. ''' → logprob: -9.561729431152344

Token 760: 'Letters' (ID: 83607)
  Prédit: 'Letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Letters' → logprob: -0.20690976083278656
    2. '"' → logprob: -2.081909656524658
    3. 'Letter' → logprob: -3.706909656524658
    4. 'f' → logprob: -3.706909656524658
    5. 'Invalid' → logprob: -4.581909656524658
    6. 'letters' → logprob: -6.831909656524658
    7. 'Out' → logprob: -7.331909656524658
    8. 'Incorrect' → logprob: -8.956910133361816
    9. ' Letters' → logprob: -9.206910133361816
    10. ''' → logprob: -9.581910133361816

Token 761: ' out' (ID: 842)
  Prédit: ' out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' out' → logprob: -1.3233050107955933
    2. 'must' → logprob: -1.3233050107955933
    3. ' must' → logprob: -1.5733050107955933
    4. 'out' → logprob: -1.8233050107955933
    5. 'not' → logprob: -3.073305130004883
    6. ' not' → logprob: -3.198305130004883
    7. 'appear' → logprob: -4.948305130004883
    8. ' are' → logprob: -6.698305130004883
    9. 'are' → logprob: -6.948305130004883
    10. ' appear' → logprob: -7.823305130004883

Token 762: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.05061716213822365
    2. ' of' → logprob: -3.175617218017578
    3. '_of' → logprob: -4.925617218017578
    4. '-of' → logprob: -8.925617218017578
    5. 'order' → logprob: -9.925617218017578
    6. '
' → logprob: -10.050617218017578
    7. 'Of' → logprob: -10.300617218017578
    8. '	of' → logprob: -10.675617218017578
    9. '<|end|>' → logprob: -11.050617218017578
    10. ' ' → logprob: -11.675617218017578

Token 763: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.00030900631099939346
    2. ' order' → logprob: -8.375308990478516
    3. '_order' → logprob: -9.625308990478516
    4. 'sequence' → logprob: -12.000308990478516
    5. '
' → logprob: -12.375308990478516
    6. 'm' → logprob: -14.375308990478516
    7. '-order' → logprob: -14.750308990478516
    8. 'expected' → logprob: -15.000308990478516
    9. '_m' → logprob: -15.375308990478516
    10. '	order' → logprob: -15.375308990478516

Token 764: ':' (ID: 25)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.05507952347397804
    2. ' or' → logprob: -3.055079460144043
    3. '{' → logprob: -5.680079460144043
    4. ' {' → logprob: -6.805079460144043
    5. '")
' → logprob: -7.430079460144043
    6. ':' → logprob: -7.805079460144043
    7. 'or' → logprob: -7.930079460144043
    8. ' (' → logprob: -8.180079460144043
    9. '"' → logprob: -9.180079460144043
    10. ' ")' → logprob: -9.805079460144043

Token 765: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.35086148977279663
    2. ' {' → logprob: -2.1008615493774414
    3. ''{' → logprob: -3.2258615493774414
    4. ' found' → logprob: -3.3508615493774414
    5. 'expected' → logprob: -3.3508615493774414
    6. ' expected' → logprob: -3.6008615493774414
    7. 'found' → logprob: -3.9758615493774414
    8. ' '{' → logprob: -5.100861549377441
    9. ' got' → logprob: -5.725861549377441
    10. 'got' → logprob: -6.475861549377441

Token 766: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.0001295222609769553
    2. 'ch' → logprob: -9.625129699707031
    3. ' letter' → logprob: -10.500129699707031
    4. '_letter' → logprob: -11.000129699707031
    5. '(letter' → logprob: -12.125129699707031
    6. 'chr' → logprob: -12.875129699707031
    7. 'f' → logprob: -13.500129699707031
    8. 'LETTER' → logprob: -13.750129699707031
    9. 'letters' → logprob: -13.875129699707031
    10. '_' → logprob: -13.875129699707031

Token 767: '_char' (ID: 23398)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.031373120844364166
    2. '_char' → logprob: -3.6563730239868164
    3. 'char' → logprob: -5.406373023986816
    4. 'idx' → logprob: -7.781373023986816
    5. 'Idx' → logprob: -9.781373023986816
    6. 'Char' → logprob: -10.906373023986816
    7. '```' → logprob: -11.156373023986816
    8. '
' → logprob: -11.781373023986816
    9. '_index' → logprob: -12.156373023986816
    10. 'ch' → logprob: -12.718873023986816

Token 768: '}' (ID: 92)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.4581620395183563
    2. '}")' → logprob: -1.4581620693206787
    3. '}' → logprob: -2.9581620693206787
    4. ' must' → logprob: -4.0831618309021
    5. '')' → logprob: -4.2081618309021
    6. '}")
' → logprob: -4.8331618309021
    7. ' <=' → logprob: -4.9581618309021
    8. ''' → logprob: -5.3331618309021
    9. '")
' → logprob: -5.3331618309021
    10. ' }' → logprob: -5.5831618309021

Token 769: ' after' (ID: 1934)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.06040132790803909
    2. '")
' → logprob: -3.685401439666748
    3. ' ")' → logprob: -4.435401439666748
    4. '               ' → logprob: -4.810401439666748
    5. ' or' → logprob: -5.810401439666748
    6. ' ")
' → logprob: -5.935401439666748
    7. ' <' → logprob: -6.310401439666748
    8. ' <=' → logprob: -7.060401439666748
    9. '           ' → logprob: -7.060401439666748
    10. '                   ' → logprob: -7.810401439666748

Token 770: ' index' (ID: 3472)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.13823166489601135
    2. ' {' → logprob: -2.1382317543029785
    3. ' {_' → logprob: -4.8882317543029785
    4. '{'' → logprob: -7.0132317543029785
    5. ''{' → logprob: -7.3882317543029785
    6. ''' → logprob: -8.13823127746582
    7. '_{' → logprob: -8.26323127746582
    8. 'self' → logprob: -8.26323127746582
    9. 'last' → logprob: -8.63823127746582
    10. '_MC' → logprob: -8.63823127746582

Token 771: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.13884390890598297
    2. ' {' → logprob: -2.1388440132141113
    3. 'last' → logprob: -4.638844013214111
    4. ' last' → logprob: -6.138844013214111
    5. '`' → logprob: -11.763843536376953
    6. '[last' → logprob: -13.138843536376953
    7. '{name' → logprob: -13.263843536376953
    8. '{
' → logprob: -13.388843536376953
    9. '(last' → logprob: -13.888843536376953
    10. '```' → logprob: -14.263843536376953

Token 772: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.06211075559258461
    2. '{' → logprob: -2.812110662460327
    3. ' last' → logprob: -9.437110900878906
    4. ' {' → logprob: -9.687110900878906
    5. '
' → logprob: -15.187110900878906
    6. '{
' → logprob: -15.312110900878906
    7. '`' → logprob: -15.437110900878906
    8. '[last' → logprob: -15.937110900878906
    9. '{}' → logprob: -16.062110900878906
    10. '(last' → logprob: -16.187110900878906

Token 773: '_letter' (ID: 120621)
  Prédit: '_letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -1.843177233240567e-05
    2. '```' → logprob: -11.625018119812012
    3. 'letter' → logprob: -12.375018119812012
    4. '           ' → logprob: -13.875018119812012
    5. '+' → logprob: -14.125018119812012
    6. '_letters' → logprob: -14.500018119812012
    7. '   ' → logprob: -14.625018119812012
    8. '       ' → logprob: -14.625018119812012
    9. 'etter' → logprob: -14.625018119812012
    10. '_' → logprob: -14.750018119812012

Token 774: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.004407920874655247
    2. '_idx' → logprob: -5.87940788269043
    3. '```' → logprob: -7.37940788269043
    4. 'index' → logprob: -7.87940788269043
    5. '+' → logprob: -8.00440788269043
    6. '
' → logprob: -9.50440788269043
    7. ')' → logprob: -10.25440788269043
    8. '               ' → logprob: -10.37940788269043
    9. '_' → logprob: -11.00440788269043
    10. 'idx' → logprob: -11.25440788269043

Token 775: '}")
' (ID: 23577)
  Prédit: '")
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.3725006580352783
    2. '")' → logprob: -1.3725006580352783
    3. '               ' → logprob: -3.8725006580352783
    4. '")

' → logprob: -4.122500419616699
    5. ')")
' → logprob: -4.497500419616699
    6. '}")
' → logprob: -5.747500419616699
    7. ')' → logprob: -5.872500419616699
    8. '")
' → logprob: -6.747500419616699
    9. ' ")
' → logprob: -7.497500419616699
    10. '}")' → logprob: -8.4975004196167

Token 776: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6591054797172546
    2. '
' → logprob: -0.7841054797172546
    3. 'letters' → logprob: -4.15910530090332
    4. '                
' → logprob: -5.65910530090332
    5. ' letters' → logprob: -5.90910530090332
    6. 'last' → logprob: -6.15910530090332
    7. ' last' → logprob: -6.40910530090332
    8. '                    
' → logprob: -8.90910530090332
    9. '

' → logprob: -9.15910530090332
    10. '_letters' → logprob: -10.03410530090332

Token 777: ' if' (ID: 538)
  Prédit: ' letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' letters' → logprob: -0.4717552959918976
    2. 'letters' → logprob: -1.4717552661895752
    3. '
' → logprob: -2.471755266189575
    4. '               ' → logprob: -3.096755266189575
    5. ' last' → logprob: -4.721755504608154
    6. '                
' → logprob: -5.221755504608154
    7. '_letters' → logprob: -7.221755504608154
    8. 'last' → logprob: -7.346755504608154
    9. ' 
' → logprob: -8.346755027770996
    10. '                    
' → logprob: -8.721755027770996

Token 778: ' count' (ID: 3605)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.6087464094161987
    2. 'count' → logprob: -1.1087464094161987
    3. 'ch' → logprob: -2.2337465286254883
    4. 'digit' → logprob: -4.983746528625488
    5. ' letter' → logprob: -5.108746528625488
    6. ' count' → logprob: -6.608746528625488
    7. 'not' → logprob: -7.233746528625488
    8. ''' → logprob: -7.233746528625488
    9. ' ch' → logprob: -7.733746528625488
    10. 'pos' → logprob: -8.233746528625488

Token 779: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3443281650543213
    2. '>' → logprob: -1.4693281650543213
    3. ' <' → logprob: -3.3443281650543213
    4. ' ==' → logprob: -4.469327926635742
    5. '<' → logprob: -4.594327926635742
    6. '==' → logprob: -5.844327926635742
    7. ' <=' → logprob: -7.219327926635742
    8. ' not' → logprob: -7.719327926635742
    9. '<=' → logprob: -9.469327926635742
    10. ' >=' → logprob: -9.594327926635742

Token 780: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03990701586008072
    2. '1' → logprob: -3.2899069786071777
    3. ' ' → logprob: -6.289906978607178
    4. ''' → logprob: -12.164907455444336
    5. '9' → logprob: -14.289907455444336
    6. '   ' → logprob: -14.539907455444336
    7. '10' → logprob: -14.664907455444336
    8. '"' → logprob: -15.039907455444336
    9. '<|end|>' → logprob: -15.039907455444336
    10. '  ' → logprob: -15.352407455444336

Token 781: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018432965502142906
    2. '1' → logprob: -4.018433094024658
    3. ' ' → logprob: -8.5184326171875
    4. ''' → logprob: -9.5184326171875
    5. '9' → logprob: -12.0184326171875
    6. '"' → logprob: -14.7684326171875
    7. '   ' → logprob: -14.7684326171875
    8. '10' → logprob: -14.8934326171875
    9. ''s' → logprob: -14.9559326171875
    10. '
' → logprob: -15.2684326171875

Token 782: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23483042418956757
    2. ':' → logprob: -1.609830379486084
    3. '                   ' → logprob: -5.109830379486084
    4. '               ' → logprob: -6.359830379486084
    5. '           ' → logprob: -7.484830379486084
    6. '   ' → logprob: -7.734830379486084
    7. ' and' → logprob: -8.609830856323242
    8. '                           ' → logprob: -9.859830856323242
    9. ' :
' → logprob: -10.109830856323242
    10. ' ' → logprob: -10.234830856323242

Token 783: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0020662799943238497
    2. ' raise' → logprob: -7.377066135406494
    3. '                    ' → logprob: -7.627066135406494
    4. '               ' → logprob: -8.252066612243652
    5. ':
' → logprob: -8.877066612243652
    6. ' 
' → logprob: -9.252066612243652
    7. '                       ' → logprob: -9.502066612243652
    8. '           ' → logprob: -9.752066612243652
    9. '                ' → logprob: -9.752066612243652
    10. '                  ' → logprob: -10.252066612243652

Token 784: ' #' (ID: 1069)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.012958917766809464
    2. ' raise' → logprob: -4.387959003448486
    3. 'continue' → logprob: -8.262958526611328
    4. '                   ' → logprob: -9.262958526611328
    5. '	raise' → logprob: -10.262958526611328
    6. '
' → logprob: -11.262958526611328
    7. '#' (adapté à ' #') → logprob: -11.512958526611328
    8. '           ' → logprob: -11.512958526611328
    9. '   ' → logprob: -11.762958526611328
    10. '                       ' → logprob: -12.512958526611328

Token 785: ' Explicit' (ID: 169846)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.025936666876077652
    2. '#' → logprob: -3.9009366035461426
    3. 'continue' → logprob: -6.150936603546143
    4. 'letters' → logprob: -6.650936603546143
    5. ' raise' → logprob: -7.150936603546143
    6. '                   ' → logprob: -7.150936603546143
    7. 'pass' → logprob: -8.5259370803833
    8. '               ' → logprob: -10.2759370803833
    9. '   ' → logprob: -10.9009370803833
    10. 'raises' → logprob: -11.0259370803833

Token 786: 'ly' (ID: 423)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.4246825873851776
    2. ' count' → logprob: -1.6746826171875
    3. 'count' → logprob: -2.7996826171875
    4. ' continue' → logprob: -3.0496826171875
    5. 'raise' → logprob: -3.6746826171875
    6. 'continue' → logprob: -4.6746826171875
    7. 'ly' → logprob: -5.1746826171875
    8. ' pass' → logprob: -6.2996826171875
    9. ' digit' → logprob: -6.7996826171875
    10. ' token' → logprob: -7.1746826171875

Token 787: ' forbid' (ID: 164447)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.4522624611854553
    2. ' continue' → logprob: -1.7022624015808105
    3. 'raise' → logprob: -3.0772624015808105
    4. 'continue' → logprob: -3.2022624015808105
    5. ' dis' → logprob: -3.9522624015808105
    6. ' not' → logprob: -3.9522624015808105
    7. ' pass' → logprob: -4.2022624015808105
    8. ' skip' → logprob: -4.4522624015808105
    9. 'pass' → logprob: -4.8272624015808105
    10. ' invalid' → logprob: -5.3272624015808105

Token 788: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4880090057849884
    2. '0' → logprob: -1.488008975982666
    3. '1' → logprob: -2.488008975982666
    4. ' raise' → logprob: -3.363008975982666
    5. '                   ' → logprob: -4.488008975982666
    6. ' count' → logprob: -4.988008975982666
    7. '               ' → logprob: -5.488008975982666
    8. 'count' → logprob: -5.738008975982666
    9. ' continue' → logprob: -5.988008975982666
    10. ' digit' → logprob: -6.113008975982666

Token 789: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000549814198166132
    2. ''' → logprob: -7.875549793243408
    3. ' ' → logprob: -9.250550270080566
    4. '0' → logprob: -10.375550270080566
    5. '"' → logprob: -11.250550270080566
    6. '')' → logprob: -11.750550270080566
    7. 'digit' → logprob: -12.125550270080566
    8. '01' → logprob: -12.500550270080566
    9. 'str' → logprob: -13.625550270080566
    10. '10' → logprob: -13.625550270080566

Token 790: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08011738955974579
    2. '')' → logprob: -2.7051174640655518
    3. ' '' → logprob: -5.330117225646973
    4. ''):
' → logprob: -6.580117225646973
    5. ''):' → logprob: -6.830117225646973
    6. '':' → logprob: -7.205117225646973
    7. ' ')' → logprob: -7.455117225646973
    8. '')
' → logprob: -7.955117225646973
    9. '1' → logprob: -8.205117225646973
    10. '0' → logprob: -9.455117225646973

Token 791: ' digit' (ID: 19181)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 792: ' prefix' (ID: 18633)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20095975697040558
    2. '                   ' → logprob: -1.9509598016738892
    3. '
' → logprob: -3.5759596824645996
    4. '           ' → logprob: -5.7009596824646
    5. '                ' → logprob: -6.4509596824646
    6. '.' → logprob: -6.8259596824646
    7. '                       ' → logprob: -7.0759596824646
    8. ':
' → logprob: -7.7009596824646
    9. ')' → logprob: -7.8259596824646
    10. ',' → logprob: -7.9509596824646

Token 793: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13159847259521484
    2. '               ' → logprob: -2.131598472595215
    3. '                       ' → logprob: -6.006598472595215
    4. '           ' → logprob: -7.256598472595215
    5. ',' → logprob: -7.631598472595215
    6. ' raise' → logprob: -8.006598472595215
    7. ':
' → logprob: -8.631598472595215
    8. '                ' → logprob: -9.506598472595215
    9. 'raise' → logprob: -9.506598472595215
    10. '.' → logprob: -9.756598472595215

Token 794: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009515943005681038
    2. '                       ' → logprob: -5.009515762329102
    3. ' raise' → logprob: -6.759515762329102
    4. 'raise' → logprob: -6.884515762329102
    5. '               ' → logprob: -7.509515762329102
    6. '           ' → logprob: -10.509515762329102
    7. '                    ' → logprob: -12.134515762329102
    8. '   ' → logprob: -12.134515762329102
    9. '
' → logprob: -12.509515762329102
    10. '                  ' → logprob: -12.509515762329102

Token 795: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.0789584144949913
    2. ' raise' → logprob: -2.578958511352539
    3. '	raise' → logprob: -9.953958511352539
    4. '
' → logprob: -11.328958511352539
    5. 'Raise' → logprob: -13.703958511352539
    6. ' 
' → logprob: -13.703958511352539
    7. '_raise' → logprob: -13.828958511352539
    8. '                   ' → logprob: -13.953958511352539
    9. '           ' → logprob: -14.578958511352539
    10. '.raise' → logprob: -14.578958511352539

Token 796: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0011712945997714996
    2. ' Value' → logprob: -6.751171112060547
    3. '	Value' → logprob: -15.251171112060547
    4. 'value' → logprob: -15.501171112060547
    5. '_Value' → logprob: -15.501171112060547
    6. '_value' → logprob: -15.876171112060547
    7. '<|end|>' → logprob: -16.126171112060547
    8. '.Value' → logprob: -17.001171112060547
    9. '<Value' → logprob: -17.126171112060547
    10. 'Val' → logprob: -17.376171112060547

Token 797: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.11362557113170624
    2. 'Value' → logprob: -2.2386255264282227
    3. 'alue' → logprob: -7.238625526428223
    4. 'rror' → logprob: -9.988625526428223
    5. 'Token' → logprob: -12.613625526428223
    6. '  ' → logprob: -12.613625526428223
    7. ' ' → logprob: -12.738625526428223
    8. '   ' → logprob: -12.863625526428223
    9. 'Input' → logprob: -12.988625526428223
    10. 'SError' → logprob: -13.238625526428223

Token 798: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.05374133586883545
    2. '(' → logprob: -3.053741455078125
    3. '(f' → logprob: -5.303741455078125
    4. '(
' → logprob: -9.053741455078125
    5. '()' → logprob: -10.553741455078125
    6. '("")' → logprob: -11.303741455078125
    7. '("'' → logprob: -12.053741455078125
    8. '("("' → logprob: -12.928741455078125
    9. '('' → logprob: -13.053741455078125
    10. '(""' → logprob: -14.428741455078125

Token 799: 'Prefix' (ID: 17930)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1743353605270386
    2. 'Invalid' → logprob: -1.1743353605270386
    3. 'Digit' → logprob: -1.1743353605270386
    4. 'Explicit' → logprob: -3.549335479736328
    5. ''' → logprob: -3.674335479736328
    6. '"'' → logprob: -4.424335479736328
    7. 'Digits' → logprob: -5.799335479736328
    8. 'Prefix' → logprob: -7.799335479736328
    9. 'Cannot' → logprob: -8.049335479736328
    10. 'Unexpected' → logprob: -8.049335479736328

Token 800: ' digit' (ID: 19181)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13223178684711456
    2. ' '' → logprob: -3.0072317123413086
    3. ' ' → logprob: -3.0072317123413086
    4. ' of' → logprob: -4.632231712341309
    5. ''' → logprob: -4.882231712341309
    6. ' cannot' → logprob: -6.007231712341309
    7. ' digit' → logprob: -6.757231712341309
    8. 'digit' → logprob: -6.757231712341309
    9. ' must' → logprob: -7.382231712341309
    10. ' one' → logprob: -7.632231712341309

Token 801: ' cannot' (ID: 6284)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.5376883745193481
    2. ''' → logprob: -1.6626883745193481
    3. '1' → logprob: -2.4126882553100586
    4. ' cannot' → logprob: -3.2876882553100586
    5. ' of' → logprob: -3.4126882553100586
    6. ' ' → logprob: -3.5376882553100586
    7. ' must' → logprob: -3.6626882553100586
    8. 'of' → logprob: -5.912688255310059
    9. 'cannot' → logprob: -5.912688255310059
    10. 'must' → logprob: -6.412688255310059

Token 802: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.5761157274246216
    2. ' be' → logprob: -0.8261157274246216
    3. 'equal' → logprob: -9.076115608215332
    4. '1' → logprob: -10.201115608215332
    5. ' equal' → logprob: -11.951115608215332
    6. '	be' → logprob: -12.201115608215332
    7. '
' → logprob: -12.951115608215332
    8. '=' → logprob: -13.076115608215332
    9. 'b' → logprob: -13.076115608215332
    10. ' ' → logprob: -13.326115608215332

Token 803: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01291937381029129
    2. ''' → logprob: -4.3879194259643555
    3. ' ' → logprob: -8.012919425964355
    4. '"' → logprob: -10.512919425964355
    5. '`' → logprob: -10.887919425964355
    6. ' '' → logprob: -11.137919425964355
    7. ''s' → logprob: -11.262919425964355
    8. '```' → logprob: -13.762919425964355
    9. ''d' → logprob: -14.512919425964355
    10. ''t' → logprob: -14.762919425964355

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02065318636596203
    2. ''' → logprob: -3.895653247833252
    3. '"' → logprob: -10.020652770996094
    4. ' ' → logprob: -10.145652770996094
    5. ''s' → logprob: -11.395652770996094
    6. ' '' → logprob: -11.770652770996094
    7. '`' → logprob: -12.145652770996094
    8. '```' → logprob: -14.770652770996094
    9. ''t' → logprob: -15.020652770996094
    10. ''d' → logprob: -15.270652770996094

Token 805: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.11447420716285706
    2. '")
' → logprob: -2.239474296569824
    3. '")

' → logprob: -6.864474296569824
    4. '")
' → logprob: -7.989474296569824
    5. ' ")' → logprob: -9.239474296569824
    6. '               ' → logprob: -9.489474296569824
    7. ' ")
' → logprob: -10.364474296569824
    8. '"' → logprob: -10.489474296569824
    9. '")

' → logprob: -11.364474296569824
    10. ')' → logprob: -11.864474296569824

Token 806: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05486614629626274
    2. '           ' → logprob: -4.304866313934326
    3. '
' → logprob: -4.429866313934326
    4. 'letters' → logprob: -4.429866313934326
    5. 'else' → logprob: -5.179866313934326
    6. 'continue' → logprob: -5.929866313934326
    7. '                   ' → logprob: -6.054866313934326
    8. '```' → logprob: -6.304866313934326
    9. 'new' → logprob: -7.054866313934326
    10. '                
' → logprob: -7.679866313934326

Token 807: ' letters' (ID: 18151)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.49582037329673767
    2. 'letters' (adapté à ' letters') → logprob: -0.9958204030990601
    3. ' letters' → logprob: -4.49582052230835
    4. '
' → logprob: -5.12082052230835
    5. 'letter' → logprob: -5.99582052230835
    6. '           ' → logprob: -7.74582052230835
    7. 'instance' → logprob: -7.74582052230835
    8. '_letters' → logprob: -8.370820045471191
    9. 'new' → logprob: -8.495820045471191
    10. 'if' → logprob: -9.120820045471191

Token 808: '_found' (ID: 50825)
  Prédit: '_instances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_instances' → logprob: -0.026352325454354286
    2. '_found' → logprob: -3.6513524055480957
    3. 'found' → logprob: -11.151351928710938
    4. '_classes' → logprob: -11.401351928710938
    5. 'instances' → logprob: -11.401351928710938
    6. '.append' → logprob: -12.901351928710938
    7. '_char' → logprob: -13.151351928710938
    8. 'Instances' → logprob: -13.276351928710938
    9. '_instance' → logprob: -13.651351928710938
    10. '_letters' → logprob: -13.776351928710938

Token 809: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0002615742268972099
    2. '.' → logprob: -8.250261306762695
    3. ' .' → logprob: -15.875261306762695
    4. '.update' → logprob: -16.875261306762695
    5. '.Add' → logprob: -17.250261306762695
    6. 'add' → logprob: -17.250261306762695
    7. ' add' → logprob: -18.250261306762695
    8. '.insert' → logprob: -18.375261306762695
    9. '.append' → logprob: -18.500261306762695
    10. '<|end|>' → logprob: -18.875261306762695

Token 810: '(letter' (ID: 142899)
  Prédit: '(letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(letter' → logprob: -0.0002614550176076591
    2. 'letter' → logprob: -8.250261306762695
    3. ' letter' → logprob: -16.125261306762695
    4. '(' → logprob: -17.000261306762695
    5. 'Letter' → logprob: -19.875261306762695
    6. '_letter' → logprob: -20.750261306762695
    7. '(
' → logprob: -21.875261306762695
    8. '(le' → logprob: -22.250261306762695
    9. 'LETTER' → logprob: -22.250261306762695
    10. '{' → logprob: -22.375261306762695

Token 811: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -3.9888433093437925e-05
    2. 'char' → logprob: -10.250040054321289
    3. '_letter' → logprob: -12.750040054321289
    4. 'letter' → logprob: -14.125040054321289
    5. 'Char' → logprob: -14.500040054321289
    6. '_character' → logprob: -16.37504005432129
    7. '```' → logprob: -16.50004005432129
    8. '<char' → logprob: -17.62504005432129
    9. '(letter' → logprob: -17.62504005432129
    10. '_CHAR' → logprob: -17.75004005432129

Token 812: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18206293880939484
    2. ')' → logprob: -1.8070629835128784
    3. '
' → logprob: -6.807063102722168
    4. '<|end|>' → logprob: -7.932063102722168
    5. ',' → logprob: -8.307063102722168
    6. '           ' → logprob: -8.682063102722168
    7. '                
' → logprob: -9.307063102722168
    8. ')
' → logprob: -9.682063102722168
    9. '              ' → logprob: -10.057063102722168
    10. '),' → logprob: -10.432063102722168

Token 813: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.043567463755607605
    2. ' letters' → logprob: -3.793567419052124
    3. 'letters' → logprob: -4.168567657470703
    4. ' letter' → logprob: -6.918567657470703
    5. 'letter' → logprob: -7.168567657470703
    6. '                
' → logprob: -7.668567657470703
    7. '```' → logprob: -8.168567657470703
    8. '_' → logprob: -8.168567657470703
    9. '           ' → logprob: -8.543567657470703
    10. 'tokens' → logprob: -8.668567657470703

Token 814: ' last' (ID: 2174)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.12268563359975815
    2. '               ' → logprob: -2.747685670852661
    3. ' letters' → logprob: -3.122685670852661
    4. 'letter' → logprob: -5.247685432434082
    5. 'instance' → logprob: -6.997685432434082
    6. '_letters' → logprob: -7.372685432434082
    7. ' letter' → logprob: -8.872685432434082
    8. 'cls' → logprob: -9.497685432434082
    9. '_letter' → logprob: -10.122685432434082
    10. ' cls' → logprob: -10.497685432434082

Token 815: '_letter' (ID: 120621)
  Prédit: '_letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -13.125004768371582
    3. '_letters' → logprob: -13.125004768371582
    4. 'letter' → logprob: -15.625004768371582
    5. '```' → logprob: -16.000003814697266
    6. '_line' → logprob: -16.250003814697266
    7. '_index' → logprob: -17.125003814697266
    8. '_le' → logprob: -18.125003814697266
    9. ' _' → logprob: -18.250003814697266
    10. 'Letter' → logprob: -18.250003814697266

Token 816: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0002538296685088426
    2. 'index' → logprob: -8.375253677368164
    3. '_idx' → logprob: -11.125253677368164
    4. 'Index' → logprob: -11.875253677368164
    5. '=' → logprob: -14.375253677368164
    6. ' =' → logprob: -15.750253677368164
    7. '
' → logprob: -16.500253677368164
    8. '_indices' → logprob: -16.625253677368164
    9. '=index' → logprob: -16.750253677368164
    10. ' index' → logprob: -17.000253677368164

Token 817: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132617771625519
    2. ' =' → logprob: -1.3132617473602295
    3. '=
' → logprob: -17.313261032104492
    4. ' =
' → logprob: -17.688261032104492
    5. '=cut' → logprob: -18.313261032104492
    6. ' +=' → logprob: -18.438261032104492
    7. '+=' → logprob: -18.563261032104492
    8. ' ' → logprob: -18.813261032104492
    9. '.=' → logprob: -18.938261032104492
    10. '＝' → logprob: -19.063261032104492

Token 818: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.005234475247561932
    2. ' letter' → logprob: -5.255234241485596
    3. '(letter' → logprob: -14.755234718322754
    4. 'token' → logprob: -16.005233764648438
    5. '   ' → logprob: -16.255233764648438
    6. 'Letter' → logprob: -17.380233764648438
    7. '_letter' → logprob: -17.380233764648438
    8. ' ' → logprob: -18.130233764648438
    9. '           ' → logprob: -18.505233764648438
    10. '```' → logprob: -19.005233764648438

Token 819: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00023441045777872205
    2. 'idx' → logprob: -8.500234603881836
    3. '_index' → logprob: -10.750234603881836
    4. 'index' → logprob: -11.750234603881836
    5. 'Idx' → logprob: -13.875234603881836
    6. '_char' → logprob: -16.125234603881836
    7. '_IDX' → logprob: -16.250234603881836
    8. 'x' → logprob: -16.250234603881836
    9. 't' → logprob: -17.250234603881836
    10. '	idx' → logprob: -17.625234603881836

Token 820: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005686411168426275
    2. '_letters' → logprob: -8.250568389892578
    3. 'letters' → logprob: -8.875568389892578
    4. '_letter' → logprob: -9.500568389892578
    5. ' letters' → logprob: -10.375568389892578
    6. '```' → logprob: -11.625568389892578
    7. 'letter' → logprob: -11.750568389892578
    8. '
' → logprob: -11.875568389892578
    9. '                
' → logprob: -11.875568389892578
    10. '                   ' → logprob: -12.250568389892578

Token 821: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00020091790065634996
    2. 'letter' → logprob: -9.375201225280762
    3. 'letters' → logprob: -9.500201225280762
    4. '_letter' → logprob: -11.250201225280762
    5. '_letters' → logprob: -11.750201225280762
    6. '_LE' → logprob: -12.500201225280762
    7. '```' → logprob: -12.750201225280762
    8. '                
' → logprob: -12.750201225280762
    9. 'class' → logprob: -12.875201225280762
    10. '
' → logprob: -13.125201225280762

Token 822: ' letter' (ID: 10263)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.07218559831380844
    2. 'letter' (adapté à ' letter') → logprob: -2.822185516357422
    3. 'cls' → logprob: -5.072185516357422
    4. '               ' → logprob: -5.947185516357422
    5. 'instance' → logprob: -7.822185516357422
    6. ' letters' → logprob: -8.197185516357422
    7. '_letters' → logprob: -8.322185516357422
    8. 'class' → logprob: -9.322185516357422
    9. '_letter' → logprob: -9.822185516357422
    10. 'klass' → logprob: -10.447185516357422

Token 823: '_obj' (ID: 16879)
  Prédit: '_class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_class' → logprob: -0.0932905375957489
    2. '_instance' → logprob: -2.9682905673980713
    3. '_cls' → logprob: -3.3432905673980713
    4. '_instances' → logprob: -6.718290328979492
    5. ' =' → logprob: -7.468290328979492
    6. 'class' → logprob: -8.968290328979492
    7. '=' → logprob: -8.968290328979492
    8. 'Class' → logprob: -9.593290328979492
    9. '_letter' → logprob: -9.968290328979492
    10. '_obj' → logprob: -10.093290328979492

Token 824: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759420990943909
    2. ' =' → logprob: -0.8259420990943909
    3. '=_' → logprob: -13.200942039489746
    4. '   ' → logprob: -15.450942039489746
    5. '=
' → logprob: -15.825942039489746
    6. '           ' → logprob: -16.450942993164062
    7. ':' → logprob: -17.075942993164062
    8. '                   ' → logprob: -17.200942993164062
    9. '               ' → logprob: -17.450942993164062
    10. '=create' → logprob: -17.450942993164062

Token 825: ' _' (ID: 1175)
  Prédit: '_LE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LE' → logprob: -0.001206423039548099
    2. ' _' → logprob: -6.751206398010254
    3. '_' → logprob: -11.001206398010254
    4. '_LITERAL' → logprob: -12.251206398010254
    5. '_letter' → logprob: -12.376206398010254
    6. '_L' → logprob: -13.001206398010254
    7. '_LO' → logprob: -13.376206398010254
    8. '   ' → logprob: -13.376206398010254
    9. 'LETTER' → logprob: -13.626206398010254
    10. '_LAT' → logprob: -14.626206398010254

Token 826: 'LETTER' (ID: 162283)
  Prédit: 'LETTER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LETTER' → logprob: -0.00035262384335510433
    2. '_LE' → logprob: -8.00035285949707
    3. 'LET' → logprob: -11.25035285949707
    4. ' LETTER' → logprob: -12.62535285949707
    5. '```' → logprob: -14.87535285949707
    6. 'letter' → logprob: -15.50035285949707
    7. '_letter' → logprob: -16.37535285949707
    8. '_LITERAL' → logprob: -16.62535285949707
    9. 'Letter' → logprob: -18.12535285949707
    10. '{' → logprob: -18.25035285949707

Token 827: '_CLASSES' (ID: 171569)
  Prédit: '_CLASSES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CLASSES' → logprob: -0.014189599081873894
    2. 'CL' → logprob: -4.264189720153809
    3. '_CL' → logprob: -10.764189720153809
    4. '_classes' → logprob: -12.639189720153809
    5. ' CL' → logprob: -14.889189720153809
    6. '
' → logprob: -15.389189720153809
    7. '```' → logprob: -15.639189720153809
    8. 'Classes' → logprob: -15.764189720153809
    9. '_CLASS' → logprob: -16.139188766479492
    10. 'S' → logprob: -16.139188766479492

Token 828: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.625
    3. '[
' → logprob: -16.875
    4. '   ' → logprob: -17.375
    5. ' [' → logprob: -17.5
    6. '[[' → logprob: -20.5
    7. '(letter' → logprob: -20.5
    8. 'letter' → logprob: -20.625
    9. '       ' → logprob: -20.75
    10. '[class' → logprob: -20.75

Token 829: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.0002512071805540472
    2. '[' → logprob: -8.500250816345215
    3. '(letter' → logprob: -10.250250816345215
    4. ' letter' → logprob: -11.500250816345215
    5. '_letter' → logprob: -14.250250816345215
    6. 'LETTER' → logprob: -14.375250816345215
    7. '```' → logprob: -14.625250816345215
    8. '   ' → logprob: -15.500250816345215
    9. 'letters' → logprob: -16.50025177001953
    10. ' ' → logprob: -16.62525177001953

Token 830: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.00016265720478259027
    2. 'char' → logprob: -8.750163078308105
    3. '[' → logprob: -12.750163078308105
    4. 'Char' → logprob: -14.500163078308105
    5. '```' → logprob: -15.125163078308105
    6. '_chars' → logprob: -15.375163078308105
    7. '_CHAR' → logprob: -16.12516212463379
    8. '_obj' → logprob: -16.50016212463379
    9. '<char' → logprob: -17.25016212463379
    10. '_letter' → logprob: -17.75016212463379

Token 831: '](' (ID: 20614)
  Prédit: ']('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '](' → logprob: -0.07889925688505173
    2. '(count' → logprob: -2.5788991451263428
    3. ']' → logprob: -11.703899383544922
    4. 'count' → logprob: -14.953899383544922
    5. '[count' → logprob: -15.328899383544922
    6. '(' → logprob: -15.828899383544922
    7. '               ' → logprob: -15.953899383544922
    8. '"](' → logprob: -16.078899383544922
    9. ' (' → logprob: -16.453899383544922
    10. ']()
' → logprob: -16.703899383544922

Token 832: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -2.2200749754119897e-06
    2. '               ' → logprob: -13.875001907348633
    3. ' count' → logprob: -13.875001907348633
    4. '                   ' → logprob: -15.375001907348633
    5. '(count' → logprob: -17.375001907348633
    6. '           ' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.625001907348633
    8. '	count' → logprob: -19.250001907348633
    9. '                       ' → logprob: -19.500001907348633
    10. '
' → logprob: -19.625001907348633

Token 833: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031818747520446777
    2. ')
' → logprob: -5.7531819343566895
    3. '               ' → logprob: -12.878181457519531
    4. ')
' → logprob: -14.128181457519531
    5. '           ' → logprob: -14.503181457519531
    6. ')

' → logprob: -16.50318145751953
    7. ' )' → logprob: -17.12818145751953
    8. '                   ' → logprob: -17.25318145751953
    9. '       ' → logprob: -17.75318145751953
    10. '))' → logprob: -17.87818145751953

Token 834: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5541107058525085
    2. 'letters' → logprob: -0.9291107058525085
    3. '               ' → logprob: -3.5541107654571533
    4. ' letters' → logprob: -6.429110527038574
    5. '```' → logprob: -9.179110527038574
    6. '_letters' → logprob: -9.429110527038574
    7. '       ' → logprob: -9.679110527038574
    8. ')' → logprob: -11.304110527038574
    9. '            
' → logprob: -12.054110527038574
    10. '   ' → logprob: -12.179110527038574

Token 835: ' letters' (ID: 18151)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' (adapté à ' letters') → logprob: -0.036970194429159164
    2. '           ' → logprob: -3.4119701385498047
    3. ' letters' → logprob: -5.786970138549805
    4. '               ' → logprob: -8.411970138549805
    5. '_letters' → logprob: -11.286970138549805
    6. '
' → logprob: -12.036970138549805
    7. '```' → logprob: -12.411970138549805
    8. '       ' → logprob: -12.911970138549805
    9. '   ' → logprob: -13.286970138549805
    10. '            
' → logprob: -14.286970138549805

Token 836: '_instances' (ID: 108386)
  Prédit: '_instances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_instances' → logprob: -2.9160102712921798e-05
    2. '.append' → logprob: -10.500029563903809
    3. '_objects' → logprob: -14.250029563903809
    4. 's' → logprob: -15.250029563903809
    5. 'instances' → logprob: -15.250029563903809
    6. 'Instances' → logprob: -16.250028610229492
    7. '_append' → logprob: -16.625028610229492
    8. '_instance' → logprob: -17.000028610229492
    9. '           ' → logprob: -17.250028610229492
    10. '._' → logprob: -17.625028610229492

Token 837: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007206532754935324
    2. '.' → logprob: -7.250720500946045
    3. '.app' → logprob: -11.625720977783203
    4. '.ap' → logprob: -13.625720977783203
    5. '.extend' → logprob: -15.375720977783203
    6. ' .' → logprob: -16.250720977783203
    7. '.Append' → logprob: -16.375720977783203
    8. 'append' → logprob: -16.500720977783203
    9. '.add' → logprob: -17.250720977783203
    10. '.push' → logprob: -17.625720977783203

Token 838: '(letter' (ID: 142899)
  Prédit: '(letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(letter' → logprob: -1.9361264946837764e-07
    2. 'letter' → logprob: -16.5
    3. '(' → logprob: -18.125
    4. '(
' → logprob: -21.25
    5. ' letter' → logprob: -21.75
    6. '(let' → logprob: -22.25
    7. '(l' → logprob: -23.75
    8. '(le' → logprob: -25.5
    9. '(note' → logprob: -25.875
    10. '_letter' → logprob: -26.125

Token 839: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -0.0002624086628202349
    2. 'obj' → logprob: -8.250262260437012
    3. 'Obj' → logprob: -15.125262260437012
    4. '```' → logprob: -15.250262260437012
    5. '$obj' → logprob: -16.125263214111328
    6. '
' → logprob: -16.250263214111328
    7. 'objc' → logprob: -16.750263214111328
    8. '_objs' → logprob: -17.000263214111328
    9. ')' → logprob: -17.250263214111328
    10. 'char' → logprob: -17.500263214111328

Token 840: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07258743792772293
    2. ')' → logprob: -2.697587490081787
    3. '<|end|>' → logprob: -6.947587490081787
    4. '
' → logprob: -7.447587490081787
    5. 'continue' → logprob: -8.322587013244629
    6. 'elif' → logprob: -8.572587013244629
    7. '               ' → logprob: -8.572587013244629
    8. '       ' → logprob: -9.197587013244629
    9. ')
' → logprob: -9.572587013244629
    10. ').' → logprob: -9.822587013244629

Token 841: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026648349594324827
    2. 'continue' → logprob: -6.252665042877197
    3. '               ' → logprob: -7.502665042877197
    4. 'else' → logprob: -9.252664566040039
    5. 'elif' → logprob: -9.752664566040039
    6. '       ' → logprob: -11.627664566040039
    7. '```' → logprob: -11.627664566040039
    8. ' continue' → logprob: -11.752664566040039
    9. '
' → logprob: -12.752664566040039
    10. '_continue' → logprob: -14.377664566040039

Token 842: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4929262399673462
    2. 'else' → logprob: -0.9929262399673462
    3. 'elif' (adapté à ' elif') → logprob: -4.117926120758057
    4. ' else' → logprob: -6.117926120758057
    5. ' elif' → logprob: -9.117926597595215
    6. '       ' → logprob: -9.742926597595215
    7. '```' → logprob: -11.367926597595215
    8. '		' → logprob: -12.742926597595215
    9. '
' → logprob: -13.117926597595215
    10. 'elseif' → logprob: -13.742926597595215

Token 843: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.03408706933259964
    2. ' ch' → logprob: -3.4090871810913086
    3. ''ch' → logprob: -8.034087181091309
    4. ''' → logprob: -9.784087181091309
    5. '_ch' → logprob: -10.534087181091309
    6. '(ch' → logprob: -11.909087181091309
    7. 's' → logprob: -12.159087181091309
    8. '	ch' → logprob: -12.159087181091309
    9. ''s' → logprob: -12.284087181091309
    10. '   ' → logprob: -12.534087181091309

Token 844: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1426987200975418
    2. 'in' → logprob: -2.0176987648010254
    3. 'is' → logprob: -11.892698287963867
    4. ' ' → logprob: -12.892698287963867
    5. ' ==' → logprob: -13.017698287963867
    6. '==' → logprob: -13.142698287963867
    7. 'import' → logprob: -13.267698287963867
    8. '	in' → logprob: -13.517698287963867
    9. 'and' → logprob: -13.767698287963867
    10. '
' → logprob: -14.017698287963867

Token 845: ' _' (ID: 1175)
  Prédit: '_LE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LE' → logprob: -0.3654225170612335
    2. ''' → logprob: -2.115422487258911
    3. '_m' → logprob: -2.365422487258911
    4. ''i' → logprob: -3.990422487258911
    5. ''m' → logprob: -4.11542272567749
    6. ''_' → logprob: -4.11542272567749
    7. '_i' → logprob: -4.24042272567749
    8. '_letter' → logprob: -4.86542272567749
    9. ' _' → logprob: -5.11542272567749
    10. '_letters' → logprob: -5.61542272567749

Token 846: 'LETTER' (ID: 162283)
  Prédit: 'LETTER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LETTER' → logprob: -0.00015860427811276168
    2. ''' → logprob: -9.500158309936523
    3. 'LET' → logprob: -9.875158309936523
    4. ' LETTER' → logprob: -11.000158309936523
    5. '_LE' → logprob: -11.250158309936523
    6. ''_' → logprob: -13.750158309936523
    7. 'letter' → logprob: -14.000158309936523
    8. '_letter' → logprob: -14.875158309936523
    9. '{'' → logprob: -16.250158309936523
    10. '"' → logprob: -17.250158309936523

Token 847: '_CLASSES' (ID: 171569)
  Prédit: 'CL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CL' → logprob: -0.01104935072362423
    2. '_CLASSES' → logprob: -4.511049270629883
    3. '_CL' → logprob: -14.386049270629883
    4. 'LET' → logprob: -14.511049270629883
    5. '_classes' → logprob: -15.386049270629883
    6. ' CL' → logprob: -15.386049270629883
    7. 'CLASS' → logprob: -17.886049270629883
    8. 'classes' → logprob: -18.136049270629883
    9. 'LETTER' → logprob: -18.511049270629883
    10. '
' → logprob: -18.761049270629883

Token 848: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11302781105041504
    2. ':
' → logprob: -2.238027811050415
    3. '               ' → logprob: -9.863027572631836
    4. '           ' → logprob: -10.238027572631836
    5. '[' → logprob: -10.988027572631836
    6. ')' → logprob: -10.988027572631836
    7. '<|end|>' → logprob: -10.988027572631836
    8. '):
' → logprob: -11.363027572631836
    9. ',' → logprob: -11.363027572631836
    10. '{' → logprob: -11.738027572631836

Token 849: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004624510649591684
    2. '           ' → logprob: -5.504624366760254
    3. 'pos' → logprob: -8.129624366760254
    4. '{
' → logprob: -10.129624366760254
    5. '
' → logprob: -10.254624366760254
    6. '```' → logprob: -10.254624366760254
    7. '   ' → logprob: -10.629624366760254
    8. '                
' → logprob: -11.004624366760254
    9. ':' → logprob: -11.004624366760254
    10. ':
' → logprob: -11.254624366760254

Token 850: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7280577421188354
    2. '               ' → logprob: -0.8530577421188354
    3. 'letter' → logprob: -2.603057861328125
    4. 'pos' → logprob: -5.228057861328125
    5. ' count' → logprob: -5.478057861328125
    6. ' letter' → logprob: -5.603057861328125
    7. '   ' → logprob: -6.728057861328125
    8. '           ' → logprob: -6.978057861328125
    9. 'if' → logprob: -7.853057861328125
    10. 'ch' → logprob: -7.978057861328125

Token 851: ' Single' (ID: 16035)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5372307300567627
    2. 'letter' → logprob: -0.9122307300567627
    3. '               ' → logprob: -5.037230491638184
    4. '#' → logprob: -5.412230491638184
    5. 'if' → logprob: -6.787230491638184
    6. ' letter' → logprob: -7.537230491638184
    7. 'pos' → logprob: -7.537230491638184
    8. '   ' → logprob: -8.037230491638184
    9. ' count' → logprob: -8.662230491638184
    10. '                   ' → logprob: -9.037230491638184

Token 852: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.7100478410720825
    2. 'count' → logprob: -1.5850478410720825
    3. ' letter' → logprob: -1.7100478410720825
    4. '               ' → logprob: -2.835047721862793
    5. ' count' → logprob: -3.085047721862793
    6. 'pos' → logprob: -5.210047721862793
    7. '           ' → logprob: -5.460047721862793
    8. '_letter' → logprob: -6.085047721862793
    9. ' pos' → logprob: -6.960047721862793
    10. '(letter' → logprob: -7.085047721862793

Token 853: ' without' (ID: 2935)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008010566234588623
    2. '           ' → logprob: -5.008010387420654
    3. '                   ' → logprob: -8.508010864257812
    4. ':' → logprob: -8.758010864257812
    5. '                
' → logprob: -8.883010864257812
    6. '   ' → logprob: -9.133010864257812
    7. ',' → logprob: -9.133010864257812
    8. ':
' → logprob: -9.133010864257812
    9. 'letter' → logprob: -9.133010864257812
    10. '
' → logprob: -9.758010864257812

Token 854: ' digit' (ID: 19181)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.38319894671440125
    2. 'pos' → logprob: -1.8831989765167236
    3. 'count' → logprob: -2.0081989765167236
    4. ' prefix' → logprob: -3.7581989765167236
    5. '1' → logprob: -5.6331987380981445
    6. 'digit' → logprob: -6.0081987380981445
    7. ' count' → logprob: -7.0081987380981445
    8. ' a' → logprob: -7.6331987380981445
    9. 'preced' → logprob: -8.133198738098145
    10. 'a' → logprob: -8.383198738098145

Token 855: ' prefix' (ID: 18633)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0024529695510864
    2. '               ' → logprob: -1.2524529695510864
    3. 'pos' → logprob: -2.502452850341797
    4. 'count' → logprob: -2.877452850341797
    5. 'prefix' → logprob: -3.127452850341797
    6. '_prefix' → logprob: -3.752452850341797
    7. '_pos' → logprob: -3.877452850341797
    8. '            
' → logprob: -3.877452850341797
    9. '           ' → logprob: -3.877452850341797
    10. '                   ' → logprob: -4.127452850341797

Token 856: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030779151245951653
    2. 'pos' → logprob: -4.2807793617248535
    3. '
' → logprob: -4.6557793617248535
    4. 'letter' → logprob: -6.2807793617248535
    5. 'count' → logprob: -6.6557793617248535
    6. '           ' → logprob: -7.0307793617248535
    7. '                
' → logprob: -7.0307793617248535
    8. '                   ' → logprob: -7.5307793617248535
    9. 'letters' → logprob: -8.155778884887695
    10. ':
' → logprob: -8.405778884887695

Token 857: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11434757709503174
    2. 'pos' → logprob: -2.239347457885742
    3. '                   ' → logprob: -7.614347457885742
    4. '           ' → logprob: -8.114347457885742
    5. ' pos' → logprob: -8.239347457885742
    6. ':
' → logprob: -9.239347457885742
    7. ':' → logprob: -9.614347457885742
    8. '                
' → logprob: -9.739347457885742
    9. ',pos' → logprob: -9.864347457885742
    10. '
' → logprob: -10.114347457885742

Token 858: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' (adapté à ' letter') → logprob: -0.829884946346283
    2. 'count' → logprob: -1.0798850059509277
    3. '               ' → logprob: -1.9548850059509277
    4. 'pos' → logprob: -2.9548850059509277
    5. ' letter' → logprob: -4.204885005950928
    6. '   ' → logprob: -4.829885005950928
    7. '                   ' → logprob: -6.079885005950928
    8. ' count' → logprob: -6.329885005950928
    9. 'if' → logprob: -6.829885005950928
    10. ' pos' → logprob: -6.829885005950928

Token 859: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -2.1888679839321412e-05
    2. '_obj' → logprob: -11.125021934509277
    3. 'char' → logprob: -12.125021934509277
    4. '_idx' → logprob: -14.000021934509277
    5. '_' → logprob: -14.375021934509277
    6. ' =' → logprob: -16.50002098083496
    7. '=' → logprob: -16.75002098083496
    8. '_chars' → logprob: -17.00002098083496
    9. '_pos' → logprob: -17.37502098083496
    10. '_index' → logprob: -18.25002098083496

Token 860: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196802109479904
    2. ' =' → logprob: -2.8119680881500244
    3. '=
' → logprob: -15.936967849731445
    4. '=s' → logprob: -15.936967849731445
    5. ' ' → logprob: -17.311967849731445
    6. '               ' → logprob: -17.311967849731445
    7. '_pos' → logprob: -17.811967849731445
    8. ':' → logprob: -17.811967849731445
    9. '                   ' → logprob: -17.811967849731445
    10. 'pos' → logprob: -18.311967849731445

Token 861: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0004307884373702109
    2. ' ch' → logprob: -7.750430583953857
    3. '	ch' → logprob: -17.750431060791016
    4. 'c' → logprob: -18.875431060791016
    5. 's' → logprob: -19.000431060791016
    6. '   ' → logprob: -20.250431060791016
    7. '           ' → logprob: -20.250431060791016
    8. '_ch' → logprob: -20.500431060791016
    9. ' ' → logprob: -20.625431060791016
    10. ' s' → logprob: -20.750431060791016

Token 862: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3895401954650879
    2. '
' → logprob: -1.389540195465088
    3. 'pos' → logprob: -3.514540195465088
    4. '                
' → logprob: -4.014540195465088
    5. '=' → logprob: -5.139540195465088
    6. ' =' → logprob: -5.264540195465088
    7. '_pos' → logprob: -5.764540195465088
    8. '            
' → logprob: -6.264540195465088
    9. '           ' → logprob: -6.514540195465088
    10. ',' → logprob: -6.514540195465088

Token 863: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10145415365695953
    2. 'pos' → logprob: -2.351454257965088
    3. '           ' → logprob: -6.726454257965088
    4. ' pos' → logprob: -10.47645378112793
    5. '
' → logprob: -12.10145378112793
    6. '```' → logprob: -12.35145378112793
    7. ',pos' → logprob: -12.85145378112793
    8. '   ' → logprob: -13.35145378112793
    9. '                
' → logprob: -13.47645378112793
    10. '	pos' → logprob: -13.85145378112793

Token 864: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.006814357824623585
    2. ' pos' → logprob: -5.131814479827881
    3. '               ' → logprob: -7.506814479827881
    4. 'count' → logprob: -8.756814002990723
    5. 'if' → logprob: -9.381814002990723
    6. 'letter' → logprob: -9.881814002990723
    7. '           ' → logprob: -11.131814002990723
    8. '	pos' → logprob: -12.131814002990723
    9. ' if' → logprob: -12.381814002990723
    10. '_pos' → logprob: -12.506814002990723

Token 865: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07888978719711304
    2. '+=' → logprob: -2.578889846801758
    3. '=' → logprob: -17.203889846801758
    4. ']+=' → logprob: -17.453889846801758
    5. '```' → logprob: -18.578889846801758
    6. '            ' → logprob: -18.703889846801758
    7. ' =' → logprob: -18.703889846801758
    8. ' +' → logprob: -19.203889846801758
    9. ' ' → logprob: -19.828889846801758
    10. '   ' → logprob: -19.828889846801758

Token 866: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '```' → logprob: -19.250045776367188
    4. '   ' → logprob: -19.500045776367188
    5. '
' → logprob: -21.125045776367188
    6. '۱' → logprob: -21.500045776367188
    7. '`' → logprob: -22.312545776367188
    8. '１' → logprob: -22.312545776367188
    9. '           ' → logprob: -23.062545776367188
    10. '  ' → logprob: -23.062545776367188

Token 867: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -18.375003814697266
    4. '   ' → logprob: -20.562503814697266
    5. '۱' → logprob: -21.187503814697266
    6. '
' → logprob: -21.250003814697266
    7. '１' → logprob: -21.312503814697266
    8. '`' → logprob: -22.437503814697266
    9. '0' → logprob: -22.812503814697266
    10. '=' → logprob: -23.062503814697266

Token 868: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029424818232655525
    2. '
' → logprob: -3.6544249057769775
    3. '                
' → logprob: -6.404424667358398
    4. 'letter' → logprob: -6.904424667358398
    5. 'if' → logprob: -8.529424667358398
    6. '           ' → logprob: -9.279424667358398
    7. 'letters' → logprob: -10.154424667358398
    8. '            
' → logprob: -10.404424667358398
    9. ' if' → logprob: -10.779424667358398
    10. '               
' → logprob: -11.029424667358398

Token 869: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006383348954841495
    2. '           ' → logprob: -7.625638484954834
    3. 'letter' → logprob: -10.000638008117676
    4. '                
' → logprob: -10.125638008117676
    5. '```' → logprob: -10.250638008117676
    6. '   ' → logprob: -11.750638008117676
    7. '
' → logprob: -12.125638008117676
    8. '       ' → logprob: -12.500638008117676
    9. '            
' → logprob: -13.500638008117676
    10. '              ' → logprob: -13.500638008117676

Token 870: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' (adapté à ' letter') → logprob: -0.17413948476314545
    2. 'if' → logprob: -1.9241394996643066
    3. '               ' → logprob: -4.299139499664307
    4. ' letter' → logprob: -9.549139022827148
    5. '           ' → logprob: -10.049139022827148
    6. ' if' → logprob: -10.299139022827148
    7. 'count' → logprob: -10.924139022827148
    8. '   ' → logprob: -11.049139022827148
    9. 'letters' → logprob: -11.549139022827148
    10. '```' → logprob: -11.549139022827148

Token 871: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0002149802603526041
    2. '_char' → logprob: -8.500214576721191
    3. '_index' → logprob: -11.625214576721191
    4. 'idx' → logprob: -13.125214576721191
    5. '_obj' → logprob: -14.750214576721191
    6. 'char' → logprob: -16.875215530395508
    7. '_' → logprob: -18.000215530395508
    8. 'Idx' → logprob: -18.250215530395508
    9. '_pos' → logprob: -18.375215530395508
    10. '_IDX' → logprob: -18.500215530395508

Token 872: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759395360946655
    2. '=' → logprob: -0.8259395360946655
    3. ' ' → logprob: -16.825939178466797
    4. '=
' → logprob: -17.325939178466797
    5. '               ' → logprob: -17.450939178466797
    6. '   ' → logprob: -17.450939178466797
    7. '           ' → logprob: -17.825939178466797
    8. ')' → logprob: -17.950939178466797
    9. '>' → logprob: -18.450939178466797
    10. '                ' → logprob: -18.575939178466797

Token 873: ' MC' (ID: 31263)
  Prédit: 'MC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MC' → logprob: -0.011048170737922192
    2. ' MC' → logprob: -4.511048316955566
    3. '_MC' → logprob: -14.761048316955566
    4. 'mc' → logprob: -16.76104736328125
    5. '   ' → logprob: -18.01104736328125
    6. '           ' → logprob: -18.63604736328125
    7. ' ' → logprob: -18.63604736328125
    8. 'M' → logprob: -19.01104736328125
    9. '               ' → logprob: -19.63604736328125
    10. '_mc' → logprob: -19.76104736328125

Token 874: 'X' (ID: 55)
  Prédit: 'IL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.053723711520433426
    2. 'X' → logprob: -3.0537238121032715
    3. 'XL' → logprob: -6.4287238121032715
    4. 'I' → logprob: -6.6787238121032715
    5. 'LI' → logprob: -6.8037238121032715
    6. 'L' → logprob: -7.6787238121032715
    7. 'x' → logprob: -8.678723335266113
    8. 'Letters' → logprob: -9.178723335266113
    9. 'Letter' → logprob: -9.303723335266113
    10. 'ILI' → logprob: -9.928723335266113

Token 875: 'IL' (ID: 2654)
  Prédit: 'IL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.0022725353483110666
    2. 'I' → logprob: -7.502272605895996
    3. 'L' → logprob: -7.502272605895996
    4. 'Letter' → logprob: -7.877272605895996
    5. 'Il' → logprob: -8.252272605895996
    6. 'il' → logprob: -8.377272605895996
    7. 'Letters' → logprob: -8.752272605895996
    8. 'LI' → logprob: -10.627272605895996
    9. '	IL' → logprob: -11.002272605895996
    10. '_IL' → logprob: -11.002272605895996

Token 876: 'etter' (ID: 30747)
  Prédit: 'etter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etter' → logprob: -0.007212229538708925
    2. 'Letter' → logprob: -5.007212162017822
    3. 'et' → logprob: -8.25721263885498
    4. 'ett' → logprob: -10.63221263885498
    5. 'eter' → logprob: -10.63221263885498
    6. 'MC' → logprob: -10.63221263885498
    7. 'Let' → logprob: -10.88221263885498
    8. 'IL' → logprob: -10.88221263885498
    9. 'I' → logprob: -11.25721263885498
    10. 'Setter' → logprob: -11.63221263885498

Token 877: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.4656579120783135e-05
    2. 'letter' → logprob: -10.250044822692871
    3. ' .' → logprob: -12.000044822692871
    4. '(letter' → logprob: -13.000044822692871
    5. '_letter' → logprob: -15.750044822692871
    6. ' letter' → logprob: -15.875044822692871
    7. '​.' → logprob: -16.000043869018555
    8. '.le' → logprob: -16.125043869018555
    9. '().' → logprob: -16.625043869018555
    10. '```' → logprob: -16.625043869018555

Token 878: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -1.4974866644479334e-05
    2. ' letter' → logprob: -11.125015258789062
    3. '(letter' → logprob: -16.125015258789062
    4. '_letter' → logprob: -17.125015258789062
    5. ' ' → logprob: -18.375015258789062
    6. '```' → logprob: -18.625015258789062
    7. 'Letter' → logprob: -19.375015258789062
    8. 'letters' → logprob: -19.750015258789062
    9. 'class' → logprob: -20.000015258789062
    10. 'index' → logprob: -20.375015258789062

Token 879: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.002038914244621992
    2. 'index' → logprob: -6.377038955688477
    3. 'Index' → logprob: -8.002038955688477
    4. '_order' → logprob: -14.377038955688477
    5. '_INDEX' → logprob: -14.752038955688477
    6. '```' → logprob: -15.752038955688477
    7. 'INDEX' → logprob: -15.752038955688477
    8. 'order' → logprob: -15.877038955688477
    9. ' index' → logprob: -16.002038955688477
    10. 's' → logprob: -16.377038955688477

Token 880: '(letter' (ID: 142899)
  Prédit: '(letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(letter' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.750000953674316
    3. 'letter' → logprob: -14.875000953674316
    4. '(l' → logprob: -15.250000953674316
    5. ' (' → logprob: -17.625001907348633
    6. '(
' → logprob: -18.250001907348633
    7. '```' → logprob: -18.750001907348633
    8. '(let' → logprob: -19.125001907348633
    9. '(line' → logprob: -19.375001907348633
    10. '(self' → logprob: -19.375001907348633

Token 881: '_char' (ID: 23398)
  Prédit: '(letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(letter' → logprob: -0.2007630467414856
    2. 'letter' → logprob: -2.575762987136841
    3. '_char' → logprob: -2.825762987136841
    4. 'char' → logprob: -3.075762987136841
    5. 'ch' → logprob: -9.700762748718262
    6. ')' → logprob: -9.700762748718262
    7. '_letter' → logprob: -9.700762748718262
    8. '[' → logprob: -9.825762748718262
    9. '(char' → logprob: -10.325762748718262
    10. 'Char' → logprob: -10.325762748718262

Token 882: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0657574012875557
    2. ')
' → logprob: -2.8157575130462646
    3. '               ' → logprob: -5.6907572746276855
    4. '<|end|>' → logprob: -8.190757751464844
    5. ')

' → logprob: -10.065757751464844
    6. '           ' → logprob: -11.065757751464844
    7. ')#' → logprob: -11.315757751464844
    8. ')return' → logprob: -11.940757751464844
    9. '<|end|>' → logprob: -12.065757751464844
    10. ')
' → logprob: -12.190757751464844

Token 883: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20315232872962952
    2. '           ' → logprob: -1.9531522989273071
    3. 'if' → logprob: -3.5781524181365967
    4. '<|end|>' → logprob: -5.203152179718018
    5. ' if' → logprob: -5.578152179718018
    6. '```' → logprob: -5.703152179718018
    7. '                
' → logprob: -7.328152179718018
    8. '            
' → logprob: -7.953152179718018
    9. '       ' → logprob: -9.203152656555176
    10. '
' → logprob: -9.328152656555176

Token 884: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04435085505247116
    2. '               ' → logprob: -3.6693508625030518
    3. ' if' → logprob: -4.044350624084473
    4. '<|end|>' → logprob: -8.544350624084473
    5. 'If' → logprob: -9.544350624084473
    6. '                
' → logprob: -9.794350624084473
    7. '           ' → logprob: -10.919350624084473
    8. '                   ' → logprob: -12.544350624084473
    9. '<|end|>' → logprob: -12.544350624084473
    10. '```' → logprob: -12.669350624084473

Token 885: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.0007227989844977856
    2. ' letter' → logprob: -7.250722885131836
    3. '(letter' → logprob: -12.500722885131836
    4. 'letters' → logprob: -12.750722885131836
    5. '   ' → logprob: -13.000722885131836
    6. ' ' → logprob: -14.125722885131836
    7. 'ch' → logprob: -14.375722885131836
    8. 'lett' → logprob: -15.000722885131836
    9. '
' → logprob: -15.125722885131836
    10. '    ' → logprob: -15.250722885131836

Token 886: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.0010205440921708941
    2. '_idx' → logprob: -7.251020431518555
    3. 'char' → logprob: -8.126020431518555
    4. 'Char' → logprob: -12.001020431518555
    5. '<char' → logprob: -13.126020431518555
    6. '_chars' → logprob: -13.626020431518555
    7. '_CHAR' → logprob: -13.751020431518555
    8. 'in' → logprob: -13.876020431518555
    9. '_index' → logprob: -14.251020431518555
    10. '.char' → logprob: -14.626020431518555

Token 887: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38687583804130554
    2. 'in' → logprob: -1.136875867843628
    3. '<|end|>' → logprob: -12.761876106262207
    4. ' ' → logprob: -13.886876106262207
    5. '
' → logprob: -15.511876106262207
    6. ' not' → logprob: -15.636876106262207
    7. 'not' → logprob: -15.636876106262207
    8. 'import' → logprob: -15.761876106262207
    9. '...' → logprob: -16.38687515258789
    10. 'In' → logprob: -16.76187515258789

Token 888: ' letters' (ID: 18151)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.043002739548683167
    2. ' letters' → logprob: -3.1680028438568115
    3. '_letters' → logprob: -13.04300308227539
    4. '```' → logprob: -14.91800308227539
    5. 'letter' → logprob: -15.16800308227539
    6. 'Letters' → logprob: -15.41800308227539
    7. 'let' → logprob: -16.41800308227539
    8. ' lettres' → logprob: -16.79300308227539
    9. ' ' → logprob: -16.85550308227539
    10. '`' → logprob: -16.85550308227539

Token 889: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -0.00010199354437645525
    2. 'found' → logprob: -9.750102043151855
    3. 'Found' → logprob: -10.250102043151855
    4. '_FOUND' → logprob: -13.125102043151855
    5. '_seen' → logprob: -13.375102043151855
    6. '_present' → logprob: -14.125102043151855
    7. '_received' → logprob: -14.500102043151855
    8. '<|end|>' → logprob: -15.000102043151855
    9. '   ' → logprob: -15.125102043151855
    10. '```' → logprob: -15.125102043151855

Token 890: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43228885531425476
    2. ':
' → logprob: -1.0572888851165771
    3. '                   ' → logprob: -6.932288646697998
    4. '<|end|>' → logprob: -7.057288646697998
    5. '               ' → logprob: -7.307288646697998
    6. '           ' → logprob: -7.932288646697998
    7. ':return' → logprob: -8.932289123535156
    8. ' or' → logprob: -8.932289123535156
    9. '):
' → logprob: -9.307289123535156
    10. '   ' → logprob: -9.307289123535156

Token 891: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008678716840222478
    2. '<|end|>' → logprob: -8.37586784362793
    3. '               ' → logprob: -8.50086784362793
    4. '           ' → logprob: -8.87586784362793
    5. ' raise' → logprob: -9.62586784362793
    6. '   ' → logprob: -9.75086784362793
    7. ':
' → logprob: -10.12586784362793
    8. 'raise' → logprob: -10.37586784362793
    9. '                  ' → logprob: -10.87586784362793
    10. '```' → logprob: -11.12586784362793

Token 892: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.17410635948181152
    2. '                   ' → logprob: -2.4241063594818115
    3. 'raise' (adapté à ' raise') → logprob: -2.6741063594818115
    4. '                    ' → logprob: -6.424106597900391
    5. '                       ' → logprob: -8.54910659790039
    6. '```' → logprob: -8.67410659790039
    7. '	raise' → logprob: -9.42410659790039
    8. '                    
' → logprob: -9.92410659790039
    9. '                ' → logprob: -10.29910659790039
    10. '
' → logprob: -10.54910659790039

Token 893: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0007248217007145286
    2. ' Value' → logprob: -7.375724792480469
    3. '_value' → logprob: -9.500724792480469
    4. '_Value' → logprob: -10.750724792480469
    5. '	Value' → logprob: -13.750724792480469
    6. 'Val' → logprob: -15.000724792480469
    7. '.Value' → logprob: -15.375724792480469
    8. '<Value' → logprob: -15.875724792480469
    9. '(Value' → logprob: -16.37572479248047
    10. 'Values' → logprob: -16.87572479248047

Token 894: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0006323783891275525
    2. 'Value' → logprob: -7.375632286071777
    3. 'rror' → logprob: -12.250632286071777
    4. 'alue' → logprob: -14.250632286071777
    5. '_error' → logprob: -15.875632286071777
    6. '(Value' → logprob: -17.000633239746094
    7. 'error' → logprob: -17.625633239746094
    8. ' Error' → logprob: -18.000633239746094
    9. 'LError' → logprob: -18.000633239746094
    10. '           ' → logprob: -18.125633239746094

Token 895: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -8.232493564719334e-05
    2. '(' → logprob: -10.000082015991211
    3. '("' → logprob: -10.250082015991211
    4. '(
' → logprob: -13.625082015991211
    5. '(F' → logprob: -15.750082015991211
    6. 'f' → logprob: -17.25008201599121
    7. '('' → logprob: -17.50008201599121
    8. '("("' → logprob: -17.75008201599121
    9. '(True' → logprob: -18.00008201599121
    10. '           ' → logprob: -18.75008201599121

Token 896: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05157284066081047
    2. 'Duplicate' → logprob: -3.176572799682617
    3. '"' → logprob: -4.801572799682617
    4. ' f' → logprob: -8.176572799682617
    5. '(f' → logprob: -10.551572799682617
    6. ' Duplicate' → logprob: -12.301572799682617
    7. 'Duplicates' → logprob: -13.176572799682617
    8. '{' → logprob: -13.676572799682617
    9. '_duplicate' → logprob: -14.051572799682617
    10. '           ' → logprob: -14.176572799682617

Token 897: 'Duplicate' (ID: 64889)
  Prédit: 'Duplicate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Duplicate' → logprob: -4.5491004129871726e-05
    2. 'f' → logprob: -10.125045776367188
    3. '"' → logprob: -13.000045776367188
    4. ' Duplicate' → logprob: -13.375045776367188
    5. 'duplicate' → logprob: -13.625045776367188
    6. '_duplicate' → logprob: -16.125045776367188
    7. '{' → logprob: -16.250045776367188
    8. 'Duplicates' → logprob: -16.250045776367188
    9. ' f' → logprob: -16.875045776367188
    10. 'Duplic' → logprob: -17.000045776367188

Token 898: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.018583690747618675
    2. ' letter' → logprob: -4.01858377456665
    3. '(letter' → logprob: -7.89358377456665
    4. ''' → logprob: -10.643583297729492
    5. 'f' → logprob: -11.768583297729492
    6. '{' → logprob: -12.018583297729492
    7. 'letters' → logprob: -12.268583297729492
    8. ' f' → logprob: -12.518583297729492
    9. '_letter' → logprob: -12.518583297729492
    10. '"' → logprob: -13.143583297729492

Token 899: ' '{' (ID: 24918)
  Prédit: ' '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '{' → logprob: -0.24540503323078156
    2. ''{' → logprob: -2.1204049587249756
    3. ' '' → logprob: -3.2454049587249756
    4. ''' → logprob: -3.7454049587249756
    5. ' {' → logprob: -4.120405197143555
    6. '{' → logprob: -4.620405197143555
    7. '(ch' → logprob: -5.370405197143555
    8. ' ch' → logprob: -6.870405197143555
    9. ' (' → logprob: -7.370405197143555
    10. ' f' → logprob: -7.745405197143555

Token 900: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.0011471256148070097
    2. '{' → logprob: -6.876147270202637
    3. 'ch' → logprob: -9.626147270202637
    4. 'char' → logprob: -11.376147270202637
    5. ' letter' → logprob: -11.501147270202637
    6. '_letter' → logprob: -11.751147270202637
    7. '(letter' → logprob: -12.001147270202637
    8. ''{' → logprob: -12.626147270202637
    9. ''' → logprob: -13.001147270202637
    10. '{
' → logprob: -13.126147270202637

Token 901: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.00010926496179308742
    2. 'char' → logprob: -9.125109672546387
    3. '_letter' → logprob: -16.00010871887207
    4. 'Char' → logprob: -16.87510871887207
    5. '_CHAR' → logprob: -17.00010871887207
    6. ''_' → logprob: -17.25010871887207
    7. '
' → logprob: -17.75010871887207
    8. '<char' → logprob: -17.87510871887207
    9. ''' → logprob: -18.12510871887207
    10. '_chars' → logprob: -18.75010871887207

Token 902: '}'' (ID: 24321)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.33341777324676514
    2. ''")
' → logprob: -1.9584177732467651
    3. '')' → logprob: -2.3334178924560547
    4. ''' → logprob: -3.7084178924560547
    5. '")
' → logprob: -4.708417892456055
    6. '')")
' → logprob: -5.458417892456055
    7. '}")' → logprob: -5.958417892456055
    8. ')")
' → logprob: -6.208417892456055
    9. ')")' → logprob: -7.083417892456055
    10. ')' → logprob: -7.333417892456055

Token 903: '")
' (ID: 1896)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3356721103191376
    2. '")' → logprob: -1.71067214012146
    3. ')' → logprob: -2.46067214012146
    4. ')
' → logprob: -4.710671901702881
    5. '")
' → logprob: -4.710671901702881
    6. '<|end|>' → logprob: -7.460671901702881
    7. '')' → logprob: -8.585672378540039
    8. '           ' → logprob: -9.835672378540039
    9. '')
' → logprob: -10.210672378540039
    10. '                   ' → logprob: -10.335672378540039

Token 904: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028657352086156607
    2. '<|end|>' → logprob: -6.127865791320801
    3. ' if' → logprob: -8.0028657913208
    4. 'if' → logprob: -8.8778657913208
    5. '           ' → logprob: -9.8778657913208
    6. '                   ' → logprob: -10.1278657913208
    7. '                ' → logprob: -10.5028657913208
    8. '```' → logprob: -10.6278657913208
    9. '<|end|>' → logprob: -10.8778657913208
    10. '              ' → logprob: -11.5028657913208

Token 905: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034928932785987854
    2. ' if' → logprob: -3.659929037094116
    3. 'if' (adapté à ' if') → logprob: -5.034928798675537
    4. '<|end|>' → logprob: -6.409928798675537
    5. '           ' → logprob: -8.409929275512695
    6. '                ' → logprob: -9.784929275512695
    7. '                   ' → logprob: -9.909929275512695
    8. '```' → logprob: -10.534929275512695
    9. '              ' → logprob: -10.909929275512695
    10. ' ' → logprob: -11.034929275512695

Token 906: ' letter' (ID: 10263)
  Prédit: ' letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.632628858089447
    2. 'letter' → logprob: -0.757628858089447
    3. '(letter' → logprob: -11.257628440856934
    4. '                   ' → logprob: -11.882628440856934
    5. '               ' → logprob: -12.882628440856934
    6. '   ' → logprob: -12.882628440856934
    7. '           ' → logprob: -13.757628440856934
    8. '    ' → logprob: -14.632628440856934
    9. ' ' → logprob: -14.632628440856934
    10. '_letter' → logprob: -15.007628440856934

Token 907: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.01135903038084507
    2. '_char' → logprob: -4.511359214782715
    3. 'char' → logprob: -8.386359214782715
    4. 'idx' → logprob: -10.011359214782715
    5. '
' → logprob: -11.386359214782715
    6. '```' → logprob: -12.136359214782715
    7. 'Char' → logprob: -12.386359214782715
    8. '>' → logprob: -12.511359214782715
    9. 'Idx' → logprob: -13.136359214782715
    10. '_index' → logprob: -13.261359214782715

Token 908: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16023631393909454
    2. '<=' → logprob: -1.9102363586425781
    3. ' <' → logprob: -12.035236358642578
    4. '>' → logprob: -12.660236358642578
    5. ' >' → logprob: -13.660236358642578
    6. '<' → logprob: -13.785236358642578
    7. ' ' → logprob: -14.785236358642578
    8. ')<=' → logprob: -15.535236358642578
    9. ']<=' → logprob: -16.535236358642578
    10. '   ' → logprob: -17.535236358642578

Token 909: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0005530327325686812
    2. ' last' → logprob: -7.500553131103516
    3. '[last' → logprob: -18.125553131103516
    4. '_last' → logprob: -18.500553131103516
    5. '	last' → logprob: -18.625553131103516
    6. '(last' → logprob: -19.750553131103516
    7. '   ' → logprob: -20.250553131103516
    8. ':last' → logprob: -20.250553131103516
    9. 'Last' → logprob: -20.750553131103516
    10. ' ' → logprob: -21.000553131103516

Token 910: '_letter' (ID: 120621)
  Prédit: '_letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -2.15310683415737e-05
    2. 'letter' → logprob: -10.750021934509277
    3. '_letters' → logprob: -17.37502098083496
    4. 'Letter' → logprob: -17.50002098083496
    5. '```' → logprob: -17.87502098083496
    6. '_' → logprob: -18.37502098083496
    7. 'LETTER' → logprob: -19.75002098083496
    8. ' letter' → logprob: -20.12502098083496
    9. '\' → logprob: -20.75002098083496
    10. '_l' → logprob: -21.00002098083496

Token 911: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0001589618914294988
    2. 'index' → logprob: -8.75015926361084
    3. 'Index' → logprob: -14.62515926361084
    4. '_INDEX' → logprob: -17.500158309936523
    5. '```' → logprob: -18.250158309936523
    6. ' index' → logprob: -18.625158309936523
    7. '_idx' → logprob: -18.750158309936523
    8. 'idx' → logprob: -20.000158309936523
    9. '       ' → logprob: -20.375158309936523
    10. 'pos' → logprob: -20.500158309936523

Token 912: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05614025890827179
    2. ':
' → logprob: -2.931140184402466
    3. '                   ' → logprob: -7.556140422821045
    4. '               ' → logprob: -7.681140422821045
    5. '<|end|>' → logprob: -9.181139945983887
    6. '           ' → logprob: -9.806139945983887
    7. '+' → logprob: -10.556139945983887
    8. '   ' → logprob: -10.681139945983887
    9. ':return' → logprob: -10.681139945983887
    10. '                       ' → logprob: -12.056139945983887

Token 913: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06572280079126358
    2. ' raise' → logprob: -2.815722703933716
    3. '                    ' → logprob: -6.190722942352295
    4. 'raise' → logprob: -7.190722942352295
    5. '                ' → logprob: -8.065722465515137
    6. '               ' → logprob: -8.440722465515137
    7. '```' → logprob: -8.815722465515137
    8. '                       ' → logprob: -9.565722465515137
    9. '                  ' → logprob: -9.940722465515137
    10. '   ' → logprob: -10.815722465515137

Token 914: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.0022354244720190763
    2. 'raise' (adapté à ' raise') → logprob: -6.127235412597656
    3. '                    ' → logprob: -10.127235412597656
    4. '                   ' → logprob: -12.377235412597656
    5. '	raise' → logprob: -13.002235412597656
    6. '                ' → logprob: -13.877235412597656
    7. '```' → logprob: -13.877235412597656
    8. ' ' → logprob: -14.502235412597656
    9. ' 
' → logprob: -14.877235412597656
    10. '_raise' → logprob: -15.127235412597656

Token 915: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.00037466554204002023
    2. ' Value' → logprob: -8.000374794006348
    3. '_value' → logprob: -10.250374794006348
    4. '_Value' → logprob: -12.500374794006348
    5. '	Value' → logprob: -16.75037384033203
    6. '(Value' → logprob: -18.50037384033203
    7. '.Value' → logprob: -19.00037384033203
    8. '<Value' → logprob: -19.00037384033203
    9. 'Val' → logprob: -20.25037384033203
    10. 'value' → logprob: -20.25037384033203

Token 916: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.011094626039266586
    2. 'Value' → logprob: -4.511094570159912
    3. '_Error' → logprob: -10.51109504699707
    4. '_error' → logprob: -12.01109504699707
    5. '_Value' → logprob: -12.13609504699707
    6. '(Value' → logprob: -12.51109504699707
    7. 'Index' → logprob: -13.88609504699707
    8. '_value' → logprob: -14.01109504699707
    9. 'LError' → logprob: -14.26109504699707
    10. '(Error' → logprob: -14.76109504699707

Token 917: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -2.8206473871250637e-05
    2. '(' → logprob: -11.000028610229492
    3. '(
' → logprob: -12.000028610229492
    4. '(Value' → logprob: -13.250028610229492
    5. '           ' → logprob: -13.750028610229492
    6. '(F' → logprob: -14.250028610229492
    7. 'f' → logprob: -15.250028610229492
    8. '                           ' → logprob: -15.500028610229492
    9. '                       ' → logprob: -15.500028610229492
    10. '[f' → logprob: -15.625028610229492

Token 918: '"' (ID: 1)
  Prédit: 'Letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Letters' → logprob: -0.0038184872828423977
    2. '"' → logprob: -6.003818511962891
    3. ' Letters' → logprob: -7.253818511962891
    4. 'letters' → logprob: -7.753818511962891
    5. 'Value' → logprob: -9.25381851196289
    6. '_letters' → logprob: -10.25381851196289
    7. ' letters' → logprob: -11.12881851196289
    8. 'raise' → logprob: -11.25381851196289
    9. 'Letter' → logprob: -11.37881851196289
    10. 'f' → logprob: -11.62881851196289

Token 919: 'Letters' (ID: 83607)
  Prédit: 'Letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Letters' → logprob: -0.000698376854415983
    2. 'letters' → logprob: -7.375698566436768
    3. 'Value' → logprob: -9.75069808959961
    4. '_letters' → logprob: -12.37569808959961
    5. ' Letters' → logprob: -12.62569808959961
    6. 'Letter' → logprob: -12.87569808959961
    7. 'letter' → logprob: -13.75069808959961
    8. 'raise' → logprob: -13.87569808959961
    9. '"' → logprob: -14.87569808959961
    10. 'f' → logprob: -15.12569808959961

Token 920: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.25221359729766846
    2. ' out' → logprob: -1.5022135972976685
    3. '_out' → logprob: -8.252213478088379
    4. '	out' → logprob: -11.377213478088379
    5. 'import' → logprob: -13.377213478088379
    6. '...' → logprob: -13.627213478088379
    7. '[out' → logprob: -13.627213478088379
    8. '
' → logprob: -13.752213478088379
    9. '   ' → logprob: -14.002213478088379
    10. '(out' → logprob: -14.127213478088379

Token 921: ' of' (ID: 328)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.025100788101553917
    2. ' of' → logprob: -3.9001007080078125
    3. 'of' → logprob: -5.4001007080078125
    4. '=' → logprob: -11.400100708007812
    5. '-of' → logprob: -12.150100708007812
    6. '   ' → logprob: -12.775100708007812
    7. 'Of' → logprob: -12.900100708007812
    8. ' _' → logprob: -13.275100708007812
    9. '_' → logprob: -13.525100708007812
    10. '	of' → logprob: -13.775100708007812

Token 922: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.00028374246903695166
    2. ' order' → logprob: -8.250284194946289
    3. '_order' → logprob: -10.750284194946289
    4. '
' → logprob: -14.625284194946289
    5. 'last' → logprob: -14.625284194946289
    6. ' ' → logprob: -16.75028419494629
    7. 'Order' → logprob: -18.00028419494629
    8. '-order' → logprob: -18.00028419494629
    9. '

' → logprob: -18.50028419494629
    10. '```' → logprob: -19.00028419494629

Token 923: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015734256012365222
    2. '{' → logprob: -6.50157356262207
    3. ' {' → logprob: -9.87657356262207
    4. '")' → logprob: -11.75157356262207
    5. ',' → logprob: -12.37657356262207
    6. ':
' → logprob: -13.00157356262207
    7. '{
' → logprob: -14.50157356262207
    8. '           ' → logprob: -14.50157356262207
    9. ' :' → logprob: -14.62657356262207
    10. ':{' → logprob: -14.62657356262207

Token 924: ' {' (ID: 354)
  Prédit: ' letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.1437022089958191
    2. 'letter' → logprob: -2.393702268600464
    3. ' {' → logprob: -3.893702268600464
    4. '{' → logprob: -4.268702030181885
    5. ' f' → logprob: -5.518702030181885
    6. ' ch' → logprob: -6.893702030181885
    7. '"' → logprob: -7.143702030181885
    8. 'ch' → logprob: -7.518702030181885
    9. 'f' → logprob: -7.768702030181885
    10. ''' → logprob: -8.706202507019043

Token 925: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.00014704519708175212
    2. ' letter' → logprob: -8.875146865844727
    3. '(letter' → logprob: -12.625146865844727
    4. 'ch' → logprob: -13.250146865844727
    5. '_letter' → logprob: -13.875146865844727
    6. '
' → logprob: -15.500146865844727
    7. 'char' → logprob: -15.625146865844727
    8. 'letters' → logprob: -16.125146865844727
    9. '```' → logprob: -16.125146865844727
    10. '   ' → logprob: -16.375146865844727

Token 926: '_char' (ID: 23398)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.2758297920227051
    2. '_index' → logprob: -1.525829792022705
    3. '_char' → logprob: -3.775829792022705
    4. 'index' → logprob: -8.400829315185547
    5. 'char' → logprob: -8.525829315185547
    6. 'idx' → logprob: -8.900829315185547
    7. 'x' → logprob: -9.775829315185547
    8. '
' → logprob: -11.150829315185547
    9. '```' → logprob: -11.275829315185547
    10. 'Index' → logprob: -11.275829315185547

Token 927: '}' (ID: 92)
  Prédit: ' after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' after' → logprob: -0.0016686383169144392
    2. 'after' → logprob: -7.001668453216553
    3. '>' → logprob: -8.376668930053711
    4. ' <=' → logprob: -8.751668930053711
    5. ' >' → logprob: -9.001668930053711
    6. ' <' → logprob: -9.376668930053711
    7. 'After' → logprob: -9.626668930053711
    8. ')' → logprob: -10.126668930053711
    9. '}' → logprob: -10.501668930053711
    10. ' ' → logprob: -12.126668930053711

Token 928: ' after' (ID: 1934)
  Prédit: ' after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' after' → logprob: -0.8255553841590881
    2. ' <=' → logprob: -1.0755553245544434
    3. ' <' → logprob: -1.7005553245544434
    4. ' >' → logprob: -4.450555324554443
    5. '+' → logprob: -4.825555324554443
    6. '<' → logprob: -5.575555324554443
    7. '<=' → logprob: -5.575555324554443
    8. '>' → logprob: -5.700555324554443
    9. 'after' → logprob: -6.200555324554443
    10. ')' → logprob: -6.575555324554443

Token 929: ' index' (ID: 3472)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.12692883610725403
    2. 'last' → logprob: -2.1269288063049316
    3. '(last' → logprob: -15.50192928314209
    4. '{' → logprob: -15.75192928314209
    5. '_last' → logprob: -16.251928329467773
    6. ' f' → logprob: -16.876928329467773
    7. ' ' → logprob: -16.876928329467773
    8. '
' → logprob: -16.876928329467773
    9. '`' → logprob: -17.126928329467773
    10. '[last' → logprob: -17.251928329467773

Token 930: ' {' (ID: 354)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.20424014329910278
    2. 'last' → logprob: -1.829240083694458
    3. '{' → logprob: -4.329240322113037
    4. ' {' → logprob: -4.579240322113037
    5. '(last' → logprob: -7.329240322113037
    6. '[last' → logprob: -9.829239845275879
    7. '_last' → logprob: -10.829239845275879
    8. 'Last' → logprob: -11.829239845275879
    9. ':last' → logprob: -12.329239845275879
    10. '               ' → logprob: -12.954239845275879

Token 931: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0002614550176076591
    2. ' last' → logprob: -8.250261306762695
    3. '
' → logprob: -16.250261306762695
    4. '[last' → logprob: -16.625261306762695
    5. '(last' → logprob: -17.625261306762695
    6. '{' → logprob: -18.625261306762695
    7. '	last' → logprob: -18.750261306762695
    8. '_last' → logprob: -18.875261306762695
    9. ':last' → logprob: -19.000261306762695
    10. 'letter' → logprob: -19.250261306762695

Token 932: '_letter' (ID: 120621)
  Prédit: '_letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -9.698698704596609e-05
    2. 'letter' → logprob: -9.250097274780273
    3. 'Letter' → logprob: -14.500097274780273
    4. '```' → logprob: -16.000097274780273
    5. 'LETTER' → logprob: -16.750097274780273
    6. '-letter' → logprob: -17.375097274780273
    7. '_letters' → logprob: -17.500097274780273
    8. '`' → logprob: -18.000097274780273
    9. '_index' → logprob: -18.375097274780273
    10. 'let' → logprob: -18.375097274780273

Token 933: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.001754906727001071
    2. 'index' → logprob: -6.3767547607421875
    3. 'ex' → logprob: -10.126754760742188
    4. 'Index' → logprob: -12.251754760742188
    5. 'x' → logprob: -12.501754760742188
    6. '_idx' → logprob: -12.876754760742188
    7. 'idx' → logprob: -15.001754760742188
    8. '```' → logprob: -15.126754760742188
    9. 'dex' → logprob: -15.376754760742188
    10. '_INDEX' → logprob: -15.751754760742188

Token 934: '}")

' (ID: 119200)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.14807431399822235
    2. '")
' → logprob: -2.7730743885040283
    3. ')")
' → logprob: -3.1480743885040283
    4. ')")' → logprob: -3.6480743885040283
    5. '}")' → logprob: -5.898074150085449
    6. ')' → logprob: -5.898074150085449
    7. '}")
' → logprob: -8.02307415008545
    8. '")
' → logprob: -8.77307415008545
    9. ']")
' → logprob: -9.52307415008545
    10. '>")
' → logprob: -9.64807415008545

Token 935: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10468003153800964
    2. 'letters' → logprob: -2.354680061340332
    3. ' letters' → logprob: -6.229680061340332
    4. '
' → logprob: -6.354680061340332
    5. '           ' → logprob: -7.604680061340332
    6. '                
' → logprob: -9.229680061340332
    7. '       ' → logprob: -9.979680061340332
    8. '                   ' → logprob: -10.354680061340332
    9. '   ' → logprob: -10.354680061340332
    10. '_letters' → logprob: -10.729680061340332

Token 936: ' letters' (ID: 18151)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' (adapté à ' letters') → logprob: -0.0006869370117783546
    2. '               ' → logprob: -7.500687122344971
    3. ' letters' → logprob: -9.500686645507812
    4. '_letters' → logprob: -10.750686645507812
    5. '
' → logprob: -10.875686645507812
    6. '           ' → logprob: -12.000686645507812
    7. 'last' → logprob: -12.250686645507812
    8. '                
' → logprob: -13.125686645507812
    9. '   ' → logprob: -13.250686645507812
    10. 'letter' → logprob: -13.500686645507812

Token 937: '_found' (ID: 50825)
  Prédit: '_found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_found' → logprob: -1.4140441635390744e-05
    2. 'Found' → logprob: -12.250014305114746
    3. 'found' → logprob: -13.000014305114746
    4. '           ' → logprob: -13.125014305114746
    5. '_char' → logprob: -13.375014305114746
    6. '_seen' → logprob: -13.875014305114746
    7. '_FOUND' → logprob: -14.000014305114746
    8. '   ' → logprob: -15.125014305114746
    9. '               ' → logprob: -15.500014305114746
    10. '_added' → logprob: -15.625014305114746

Token 938: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.25193890929222107
    2. '.' → logprob: -1.5019389390945435
    3. ' .' → logprob: -12.251938819885254
    4. '.update' → logprob: -13.126938819885254
    5. '   ' → logprob: -14.001938819885254
    6. '.Add' → logprob: -14.626938819885254
    7. '.
' → logprob: -15.001938819885254
    8. '.append' → logprob: -15.251938819885254
    9. '.remove' → logprob: -15.376938819885254
    10. '.insert' → logprob: -15.501938819885254

Token 939: '(letter' (ID: 142899)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.1637987345457077
    2. ' letter' → logprob: -2.4137988090515137
    3. '(letter' → logprob: -2.7887988090515137
    4. 'ch' → logprob: -9.413798332214355
    5. '(' → logprob: -11.163798332214355
    6. '(ch' → logprob: -11.663798332214355
    7. '{' → logprob: -12.663798332214355
    8. ' ch' → logprob: -13.288798332214355
    9. '   ' → logprob: -13.538798332214355
    10. '_letter' → logprob: -13.788798332214355

Token 940: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.001197966979816556
    2. 'char' → logprob: -6.876197814941406
    3. '_letter' → logprob: -9.751197814941406
    4. '(letter' → logprob: -9.876197814941406
    5. 'letter' → logprob: -10.751197814941406
    6. '(' → logprob: -11.376197814941406
    7. '_ch' → logprob: -12.501197814941406
    8. 'Char' → logprob: -12.501197814941406
    9. '_character' → logprob: -12.626197814941406
    10. '_' → logprob: -12.876197814941406

Token 941: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008118526078760624
    2. '<|end|>' → logprob: -5.008118629455566
    3. '           ' → logprob: -7.508118629455566
    4. '=' → logprob: -8.258118629455566
    5. '
' → logprob: -8.633118629455566
    6. ',' → logprob: -9.008118629455566
    7. '<|end|>' → logprob: -9.883118629455566
    8. '       ' → logprob: -10.008118629455566
    9. '                   ' → logprob: -10.133118629455566
    10. ')' → logprob: -10.383118629455566

Token 942: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09113594889640808
    2. ' last' → logprob: -2.9661359786987305
    3. 'last' → logprob: -3.3411359786987305
    4. '```' → logprob: -9.21613597869873
    5. '[last' → logprob: -10.34113597869873
    6. '       ' → logprob: -10.84113597869873
    7. ',last' → logprob: -11.21613597869873
    8. '(last' → logprob: -11.34113597869873
    9. '
' → logprob: -11.46613597869873
    10. '	last' → logprob: -12.09113597869873

Token 943: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.13941575586795807
    2. ' last' → logprob: -2.139415740966797
    3. '               ' → logprob: -4.389415740966797
    4. '                   ' → logprob: -14.389415740966797
    5. '	last' → logprob: -15.014415740966797
    6. '```' → logprob: -15.264415740966797
    7. '   ' → logprob: -15.389415740966797
    8. '           ' → logprob: -15.514415740966797
    9. '
' → logprob: -15.639415740966797
    10. '       ' → logprob: -16.014415740966797

Token 944: '_letter' (ID: 120621)
  Prédit: '_letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -3.650518920039758e-06
    2. 'letter' → logprob: -12.625003814697266
    3. '_letters' → logprob: -16.375003814697266
    4. '_' → logprob: -16.625003814697266
    5. 'Letter' → logprob: -18.750003814697266
    6. '```' → logprob: -19.000003814697266
    7. '
' → logprob: -19.250003814697266
    8. '_le' → logprob: -20.375003814697266
    9. '=' → logprob: -20.375003814697266
    10. '   ' → logprob: -20.625003814697266

Token 945: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.011059612035751343
    2. 'index' → logprob: -4.511059761047363
    3. 'Index' → logprob: -11.636059761047363
    4. '_idx' → logprob: -13.261059761047363
    5. ' index' → logprob: -14.261059761047363
    6. 'idx' → logprob: -15.261059761047363
    7. '_INDEX' → logprob: -16.136058807373047
    8. '=' → logprob: -16.636058807373047
    9. '
' → logprob: -17.136058807373047
    10. '   ' → logprob: -17.386058807373047

Token 946: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. '+=' → logprob: -18.578889846801758
    4. ' +=' → logprob: -19.203889846801758
    5. '=
' → logprob: -19.453889846801758
    6. ' ' → logprob: -19.578889846801758
    7. '.=' → logprob: -20.078889846801758
    8. '＝' → logprob: -20.203889846801758
    9. '=}' → logprob: -20.328889846801758
    10. '=

' → logprob: -21.453889846801758

Token 947: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.01815064437687397
    2. ' letter' → logprob: -4.018150806427002
    3. '(letter' → logprob: -14.643150329589844
    4. '   ' → logprob: -16.018150329589844
    5. '_letter' → logprob: -16.518150329589844
    6. '               ' → logprob: -17.393150329589844
    7. '           ' → logprob: -17.518150329589844
    8. 'Letter' → logprob: -17.768150329589844
    9. 'letters' → logprob: -18.268150329589844
    10. ' ' → logprob: -18.393150329589844

Token 948: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.6540444493293762
    2. 'idx' → logprob: -1.1540443897247314
    3. 'index' → logprob: -1.9040443897247314
    4. '_index' → logprob: -4.1540446281433105
    5. 'x' → logprob: -11.279044151306152
    6. 'Index' → logprob: -12.029044151306152
    7. 'Idx' → logprob: -12.279044151306152
    8. 'indx' → logprob: -12.529044151306152
    9. 'letter' → logprob: -13.154044151306152
    10. 't' → logprob: -13.279044151306152

Token 949: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014517827657982707
    2. '
' → logprob: -6.7514519691467285
    3. '                
' → logprob: -8.75145149230957
    4. 'letter' → logprob: -9.37645149230957
    5. '```' → logprob: -11.75145149230957
    6. 'letters' → logprob: -12.00145149230957
    7. ' letter' → logprob: -12.12645149230957
    8. '    
' → logprob: -12.75145149230957
    9. '           ' → logprob: -12.75145149230957
    10. 'new' → logprob: -12.87645149230957

Token 950: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003594184236135334
    2. 'letter' → logprob: -8.625359535217285
    3. '
' → logprob: -9.000359535217285
    4. '```' → logprob: -10.500359535217285
    5. '           ' → logprob: -11.500359535217285
    6. '       ' → logprob: -11.875359535217285
    7. '                
' → logprob: -12.125359535217285
    8. 'letters' → logprob: -13.375359535217285
    9. '_letter' → logprob: -13.375359535217285
    10. ' letter' → logprob: -14.375359535217285

Token 951: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' (adapté à ' letter') → logprob: -0.18193405866622925
    2. 'letters' → logprob: -1.806934118270874
    3. '               ' → logprob: -6.306933879852295
    4. '_letters' → logprob: -8.931934356689453
    5. '_letter' → logprob: -9.181934356689453
    6. ' letter' → logprob: -9.431934356689453
    7. ' letters' → logprob: -10.556934356689453
    8. '           ' → logprob: -12.306934356689453
    9. '_' → logprob: -12.431934356689453
    10. 'let' → logprob: -12.931934356689453

Token 952: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -1.843177233240567e-05
    2. 'obj' → logprob: -11.250018119812012
    3. '_instances' → logprob: -12.875018119812012
    4. '_objs' → logprob: -14.375018119812012
    5. 'Obj' → logprob: -14.625018119812012
    6. '_class' → logprob: -14.625018119812012
    7. '_cls' → logprob: -15.000018119812012
    8. '_char' → logprob: -15.250018119812012
    9. '$obj' → logprob: -15.500018119812012
    10. '
' → logprob: -15.750018119812012

Token 953: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759438872337341
    2. '=' → logprob: -0.8259438872337341
    3. '=_' → logprob: -12.450943946838379
    4. '=
' → logprob: -14.700943946838379
    5. '=

' → logprob: -17.075942993164062
    6. ' =
' → logprob: -17.200942993164062
    7. ' ' → logprob: -17.825942993164062
    8. '_' → logprob: -17.950942993164062
    9. '_=' → logprob: -18.075942993164062
    10. '=None' → logprob: -18.825942993164062

Token 954: ' _' (ID: 1175)
  Prédit: '_LE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LE' → logprob: -0.00882456824183464
    2. ' _' → logprob: -4.883824348449707
    3. '_letter' → logprob: -7.508824348449707
    4. '   ' → logprob: -8.008824348449707
    5. '_L' → logprob: -8.758824348449707
    6. '_' → logprob: -9.133824348449707
    7. '_LITERAL' → logprob: -11.133824348449707
    8. '```' → logprob: -11.383824348449707
    9. '\' → logprob: -12.008824348449707
    10. '_CLASS' → logprob: -12.258824348449707

Token 955: 'LETTER' (ID: 162283)
  Prédit: '_LE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LE' → logprob: -0.3139011859893799
    2. 'LETTER' → logprob: -1.3139011859893799
    3. '_CLASSES' → logprob: -8.5639009475708
    4. '```' → logprob: -8.6889009475708
    5. '_CLASS' → logprob: -9.8139009475708
    6. '_letter' → logprob: -9.9389009475708
    7. ' LETTER' → logprob: -10.0639009475708
    8. 'letter' → logprob: -10.1889009475708
    9. '_LITERAL' → logprob: -10.9389009475708
    10. '_L' → logprob: -11.1889009475708

Token 956: '_CLASSES' (ID: 171569)
  Prédit: '_CLASSES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CLASSES' → logprob: -0.029880885034799576
    2. 'CL' → logprob: -3.529881000518799
    3. '_classes' → logprob: -9.15488052368164
    4. 'Classes' → logprob: -11.02988052368164
    5. '_CL' → logprob: -13.15488052368164
    6. 'CHAR' → logprob: -13.40488052368164
    7. 'char' → logprob: -13.52988052368164
    8. '_CHAR' → logprob: -13.77988052368164
    9. '.Classes' → logprob: -14.15488052368164
    10. 'classes' → logprob: -14.77988052368164

Token 957: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '```' → logprob: -15.75
    3. '(letter' → logprob: -17.25
    4. '[
' → logprob: -17.5
    5. '   ' → logprob: -18.25
    6. 'letter' → logprob: -18.5
    7. ' [' → logprob: -18.625
    8. '[ch' → logprob: -18.875
    9. '[class' → logprob: -19.125
    10. '[line' → logprob: -20.25

Token 958: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.023731403052806854
    2. '[' → logprob: -3.7737314701080322
    3. '(letter' → logprob: -7.648731231689453
    4. ' letter' → logprob: -12.148731231689453
    5. '```' → logprob: -13.023731231689453
    6. '{' → logprob: -15.148731231689453
    7. 'ch' → logprob: -15.148731231689453
    8. '   ' → logprob: -15.273731231689453
    9. '[
' → logprob: -15.523731231689453
    10. '[ch' → logprob: -15.648731231689453

Token 959: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.01220940425992012
    2. 'char' → logprob: -4.887209415435791
    3. '[' → logprob: -5.387209415435791
    4. 'Char' → logprob: -12.512208938598633
    5. '```' → logprob: -12.512208938598633
    6. 'letter' → logprob: -12.887208938598633
    7. '_letter' → logprob: -13.012208938598633
    8. 'ch' → logprob: -13.262208938598633
    9. '_CHAR' → logprob: -13.762208938598633
    10. '_chars' → logprob: -14.387208938598633

Token 960: '](' (ID: 20614)
  Prédit: ']()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']()' → logprob: -0.018122320994734764
    2. ']()
' → logprob: -4.51812219619751
    3. '](' → logprob: -5.39312219619751
    4. ']' → logprob: -6.01812219619751
    5. '()]' → logprob: -10.143122673034668
    6. '()' → logprob: -11.018122673034668
    7. '>()' → logprob: -12.893122673034668
    8. '}()
' → logprob: -12.893122673034668
    9. '|()
' → logprob: -13.018122673034668
    10. '`()' → logprob: -13.018122673034668

Token 961: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009781472384929657
    2. ')' → logprob: -4.634781360626221
    3. ')
' → logprob: -10.884781837463379
    4. '())' → logprob: -12.509781837463379
    5. ' ' → logprob: -13.759781837463379
    6. '()' → logprob: -13.884781837463379
    7. '```' → logprob: -15.134781837463379
    8. '   ' → logprob: -15.634781837463379
    9. '0' → logprob: -15.759781837463379
    10. '(' → logprob: -16.384780883789062

Token 962: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009936226531863213
    2. ')
' → logprob: -4.634936332702637
    3. '               ' → logprob: -8.634936332702637
    4. '           ' → logprob: -14.134936332702637
    5. ')
' → logprob: -14.759936332702637
    6. '()' → logprob: -15.384936332702637
    7. '),' → logprob: -15.509936332702637
    8. ')add' → logprob: -15.634936332702637
    9. ')

' → logprob: -16.00993537902832
    10. ').' → logprob: -16.00993537902832

Token 963: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2841153144836426
    2. 'letters' → logprob: -1.4091153144836426
    3. ' letters' → logprob: -6.284115314483643
    4. '           ' → logprob: -6.909115314483643
    5. '_letters' → logprob: -9.909114837646484
    6. '   ' → logprob: -10.909114837646484
    7. '       ' → logprob: -11.659114837646484
    8. '```' → logprob: -11.909114837646484
    9. '                
' → logprob: -12.284114837646484
    10. '              ' → logprob: -13.159114837646484

Token 964: ' letters' (ID: 18151)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' (adapté à ' letters') → logprob: -0.0010788989020511508
    2. ' letters' → logprob: -7.001079082489014
    3. '               ' → logprob: -8.751078605651855
    4. '_letters' → logprob: -12.251078605651855
    5. '           ' → logprob: -12.501078605651855
    6. '       ' → logprob: -14.876078605651855
    7. '```' → logprob: -15.876078605651855
    8. 'Letters' → logprob: -16.126079559326172
    9. '   ' → logprob: -16.376079559326172
    10. 'letter' → logprob: -18.876079559326172

Token 965: '_instances' (ID: 108386)
  Prédit: '_instances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_instances' → logprob: -0.00011236425780225545
    2. '.append' → logprob: -9.125112533569336
    3. 'instances' → logprob: -13.250112533569336
    4. '_objects' → logprob: -14.250112533569336
    5. '.instances' → logprob: -14.875112533569336
    6. 'Instances' → logprob: -15.500112533569336
    7. '_instance' → logprob: -15.625112533569336
    8. '.' → logprob: -16.125112533569336
    9. 'append' → logprob: -17.125112533569336
    10. '_.' → logprob: -17.125112533569336

Token 966: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.023289969190955162
    2. '.' → logprob: -3.773289918899536
    3. '.app' → logprob: -10.273289680480957
    4. '.Append' → logprob: -12.773289680480957
    5. '.ap' → logprob: -13.023289680480957
    6. '.add' → logprob: -13.398289680480957
    7. 'append' → logprob: -13.523289680480957
    8. ' .' → logprob: -14.398289680480957
    9. '_append' → logprob: -14.773289680480957
    10. '.extend' → logprob: -14.773289680480957

Token 967: '(letter' (ID: 142899)
  Prédit: '(letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(letter' → logprob: -0.04858805239200592
    2. 'letter' → logprob: -3.0485880374908447
    3. ' letter' → logprob: -14.173587799072266
    4. '(' → logprob: -17.173587799072266
    5. '(
' → logprob: -18.673587799072266
    6. '_letter' → logprob: -20.048587799072266
    7. 'LETTER' → logprob: -20.423587799072266
    8. 'lett' → logprob: -20.923587799072266
    9. 'let' → logprob: -21.048587799072266
    10. 'Letter' → logprob: -21.048587799072266

Token 968: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -2.856408536899835e-05
    2. 'obj' → logprob: -10.500028610229492
    3. 'Obj' → logprob: -14.500028610229492
    4. '_char' → logprob: -15.875028610229492
    5. '```' → logprob: -16.000028610229492
    6. '_objs' → logprob: -17.875028610229492
    7. '$obj' → logprob: -18.125028610229492
    8. 'objc' → logprob: -18.375028610229492
    9. 'char' → logprob: -18.500028610229492
    10. 'o' → logprob: -18.875028610229492

Token 969: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0915357917547226
    2. '       ' → logprob: -3.466535806655884
    3. '<|end|>' → logprob: -3.591535806655884
    4. '           ' → logprob: -3.716535806655884
    5. ')return' → logprob: -6.091535568237305
    6. ')
' → logprob: -7.466535568237305
    7. 'return' → logprob: -7.591535568237305
    8. 'continue' → logprob: -8.091535568237305
    9. '<|end|>' → logprob: -8.716535568237305
    10. '               ' → logprob: -8.966535568237305

Token 970: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005415181163698435
    2. 'return' → logprob: -5.255414962768555
    3. '           ' → logprob: -9.505414962768555
    4. ' return' → logprob: -9.755414962768555
    5. '
' → logprob: -10.380414962768555
    6. '```' → logprob: -12.005414962768555
    7. 'continue' → logprob: -12.130414962768555
    8. '   ' → logprob: -12.630414962768555
    9. '               ' → logprob: -14.505414962768555
    10. 'else' → logprob: -14.630414962768555

Token 971: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01136480551213026
    2. '           ' → logprob: -4.886364936828613
    3. 'else' (adapté à ' else') → logprob: -5.761364936828613
    4. 'return' → logprob: -7.636364936828613
    5. '
' → logprob: -9.511364936828613
    6. 'continue' → logprob: -10.136364936828613
    7. '```' → logprob: -12.636364936828613
    8. '   ' → logprob: -12.886364936828613
    9. ' else' → logprob: -13.636364936828613
    10. '        
' → logprob: -15.261364936828613

Token 972: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012925492599606514
    2. 'raise' → logprob: -5.512925624847412
    3. ' raise' → logprob: -5.512925624847412
    4. '           ' → logprob: -5.762925624847412
    5. ':' → logprob: -7.012925624847412
    6. ':
' → logprob: -7.512925624847412
    7. '	raise' → logprob: -10.012925148010254
    8. '   ' → logprob: -10.387925148010254
    9. '                   ' → logprob: -10.512925148010254
    10. '	           ' → logprob: -11.012925148010254

Token 973: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14815592765808105
    2. 'raise' → logprob: -2.148155927658081
    3. '           ' → logprob: -4.02315616607666
    4. ' raise' → logprob: -5.89815616607666
    5. '   ' → logprob: -8.14815616607666
    6. '                   ' → logprob: -10.77315616607666
    7. '	raise' → logprob: -11.52315616607666
    8. '       ' → logprob: -11.77315616607666
    9. '              ' → logprob: -11.89815616607666
    10. '            ' → logprob: -12.02315616607666

Token 974: ' #' (ID: 1069)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.013492884114384651
    2. '               ' → logprob: -5.013493061065674
    3. ' raise' → logprob: -5.013493061065674
    4. '                   ' → logprob: -9.513492584228516
    5. '           ' → logprob: -11.013492584228516
    6. '	raise' → logprob: -11.513492584228516
    7. '   ' → logprob: -12.763492584228516
    8. '                ' → logprob: -13.513492584228516
    9. '
' → logprob: -14.513492584228516
    10. 'Raise' → logprob: -14.763492584228516

Token 975: ' Invalid' (ID: 26430)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.00420483248308301
    2. ' raise' → logprob: -5.504204750061035
    3. '               ' → logprob: -9.004204750061035
    4. '           ' → logprob: -14.004204750061035
    5. 'break' → logprob: -14.004204750061035
    6. 'Raise' → logprob: -14.004204750061035
    7. '   ' → logprob: -14.504204750061035
    8. '	raise' → logprob: -15.254204750061035
    9. '                   ' → logprob: -15.504204750061035
    10. '#' → logprob: -17.62920570373535

Token 976: ' character' (ID: 5855)
  Prédit: ' raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.37808024883270264
    2. 'Value' → logprob: -2.378080368041992
    3. 'raise' → logprob: -2.378080368041992
    4. ' character' → logprob: -2.878080368041992
    5. ' Value' → logprob: -3.128080368041992
    6. 'character' → logprob: -4.878080368041992
    7. 'char' → logprob: -4.878080368041992
    8. 'Character' → logprob: -5.253080368041992
    9. '
' → logprob: -5.753080368041992
    10. '           ' → logprob: -7.003080368041992

Token 977: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11697721481323242
    2. 'raise' → logprob: -2.6169772148132324
    3. ' raise' → logprob: -3.3669772148132324
    4. '           ' → logprob: -5.991977214813232
    5. '                   ' → logprob: -8.24197769165039
    6. '	raise' → logprob: -9.86697769165039
    7. '   ' → logprob: -10.86697769165039
    8. 'Raise' → logprob: -11.11697769165039
    9. '              ' → logprob: -11.99197769165039
    10. '                ' → logprob: -12.24197769165039

Token 978: '               ' (ID: 506)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.13817819952964783
    2. '               ' → logprob: -2.6381781101226807
    3. ' raise' → logprob: -2.8881781101226807
    4. '                   ' → logprob: -6.51317834854126
    5. '           ' → logprob: -8.013177871704102
    6. '   ' → logprob: -10.138177871704102
    7. '                ' → logprob: -11.513177871704102
    8. '	raise' → logprob: -11.888177871704102
    9. 'Raise' → logprob: -12.388177871704102
    10. '```' → logprob: -12.888177871704102

Token 979: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.04878197982907295
    2. ' raise' → logprob: -3.0487818717956543
    3. '               ' → logprob: -9.048782348632812
    4. '	raise' → logprob: -9.798782348632812
    5. '                   ' → logprob: -11.423782348632812
    6. 'Raise' → logprob: -12.548782348632812
    7. '           ' → logprob: -13.048782348632812
    8. '_raise' → logprob: -13.548782348632812
    9. '   ' → logprob: -13.923782348632812
    10. '
' → logprob: -13.923782348632812

Token 980: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.011047814972698689
    2. ' Value' → logprob: -4.511047840118408
    3. '	Value' → logprob: -18.38604736328125
    4. '_value' → logprob: -18.51104736328125
    5. '_Value' → logprob: -18.63604736328125
    6. 'Syntax' → logprob: -18.88604736328125
    7. ' ' → logprob: -20.01104736328125
    8. 'value' → logprob: -20.51104736328125
    9. '.Value' → logprob: -20.88604736328125
    10. ' value' → logprob: -20.88604736328125

Token 981: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -6.73052782076411e-05
    2. 'rror' → logprob: -9.625067710876465
    3. 'Value' → logprob: -14.625067710876465
    4. 'alue' → logprob: -14.875067710876465
    5. 'SError' → logprob: -15.125067710876465
    6. 'LError' → logprob: -16.25006675720215
    7. 'error' → logprob: -18.00006675720215
    8. 'al' → logprob: -18.87506675720215
    9. 'n' → logprob: -19.12506675720215
    10. 'Token' → logprob: -19.37506675720215

Token 982: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.012552275322377682
    2. '(' → logprob: -4.512552261352539
    3. '("' → logprob: -6.512552261352539
    4. '(
' → logprob: -11.012552261352539
    5. 'f' → logprob: -13.387552261352539
    6. '('' → logprob: -15.637552261352539
    7. '(F' → logprob: -15.762552261352539
    8. '()' → logprob: -15.762552261352539
    9. '("'' → logprob: -16.63755226135254
    10. '(

' → logprob: -17.38755226135254

Token 983: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.05016908422112465
    2. 'Invalid' → logprob: -3.300168991088867
    3. ' f' → logprob: -4.675168991088867
    4. '"' → logprob: -6.175168991088867
    5. '(f' → logprob: -7.675168991088867
    6. 'Unexpected' → logprob: -8.675168991088867
    7. 'Illegal' → logprob: -12.175168991088867
    8. ' Invalid' → logprob: -13.050168991088867
    9. 'invalid' → logprob: -13.175168991088867
    10. 'Unknown' → logprob: -13.800168991088867

Token 984: 'Invalid' (ID: 12278)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.07900986075401306
    2. 'Invalid' → logprob: -2.579009771347046
    3. 'Unexpected' → logprob: -9.329010009765625
    4. '"' → logprob: -11.204010009765625
    5. 'Illegal' → logprob: -11.829010009765625
    6. ' f' → logprob: -12.454010009765625
    7. '(f' → logprob: -12.454010009765625
    8. 'Unknown' → logprob: -13.954010009765625
    9. 'Unsupported' → logprob: -14.454010009765625
    10. 'invalid' → logprob: -14.704010009765625

Token 985: ' character' (ID: 5855)
  Prédit: ' character'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' character' → logprob: -0.20155005156993866
    2. 'character' → logprob: -1.701550006866455
    3. 'char' → logprob: -9.076550483703613
    4. 'Character' → logprob: -11.826550483703613
    5. ' letter' → logprob: -12.826550483703613
    6. 'token' → logprob: -12.951550483703613
    7. 'letter' → logprob: -13.326550483703613
    8. 'ch' → logprob: -13.326550483703613
    9. ' char' → logprob: -13.451550483703613
    10. '(character' → logprob: -13.576550483703613

Token 986: ' '{' (ID: 24918)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7616724967956543
    2. ' {' → logprob: -1.1366724967956543
    3. ' '{' → logprob: -2.3866724967956543
    4. ' f' → logprob: -2.5116724967956543
    5. ''{' → logprob: -4.011672496795654
    6. ''' → logprob: -4.261672496795654
    7. ' '' → logprob: -5.636672496795654
    8. ':' → logprob: -6.886672496795654
    9. 'f' → logprob: -7.136672496795654
    10. '"' → logprob: -8.261672973632812

Token 987: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -3.15441757265944e-05
    2. ' ch' → logprob: -10.375031471252441
    3. '{' → logprob: -16.125032424926758
    4. 's' → logprob: -16.500032424926758
    5. '	ch' → logprob: -16.875032424926758
    6. '[ch' → logprob: -17.375032424926758
    7. 'c' → logprob: -17.875032424926758
    8. '(ch' → logprob: -18.625032424926758
    9. 'chr' → logprob: -19.125032424926758
    10. '
' → logprob: -19.250032424926758

Token 988: '}'' (ID: 24321)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08962280303239822
    2. '}'' → logprob: -2.589622735977173
    3. ''"' → logprob: -5.214622974395752
    4. ')'' → logprob: -6.089622974395752
    5. '')"' → logprob: -6.964622974395752
    6. ''")
' → logprob: -7.214622974395752
    7. '')' → logprob: -7.339622974395752
    8. ' '' → logprob: -7.964622974395752
    9. ''''' → logprob: -9.589622497558594
    10. ']'' → logprob: -9.964622497558594

Token 989: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08085346221923828
    2. '")' → logprob: -2.7058534622192383
    3. ' in' → logprob: -5.205853462219238
    4. '           ' → logprob: -6.205853462219238
    5. '       ' → logprob: -6.830853462219238
    6. ' )' → logprob: -7.455853462219238
    7. ' at' → logprob: -8.330853462219238
    8. ')")' → logprob: -8.330853462219238
    9. '}")' → logprob: -8.330853462219238
    10. ')
' → logprob: -8.705853462219238

Token 990: ' MC' (ID: 31263)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16325069963932037
    2. 'input' → logprob: -2.288250684738159
    3. 'string' → logprob: -3.663250684738159
    4. 'MC' → logprob: -4.663250923156738
    5. ' input' → logprob: -5.038250923156738
    6. ' s' → logprob: -5.163250923156738
    7. ' string' → logprob: -7.163250923156738
    8. 'code' → logprob: -7.538250923156738
    9. 'mc' → logprob: -8.413250923156738
    10. ' MC' → logprob: -8.913250923156738

Token 991: 'XI' (ID: 124666)
  Prédit: 'XI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XI' → logprob: -0.004090393427759409
    2. 'X' → logprob: -5.504090309143066
    3. ' XI' → logprob: -12.254090309143066
    4. 'XL' → logprob: -13.004090309143066
    5. '_X' → logprob: -13.629090309143066
    6. ')' → logprob: -14.129090309143066
    7. 'I' → logprob: -14.504090309143066
    8. '
' → logprob: -14.629090309143066
    9. '```' → logprob: -14.879090309143066
    10. 'xi' → logprob: -15.129090309143066

Token 992: '-string' (ID: 73286)
  Prédit: '-string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-string' → logprob: -0.026818277314305305
    2. 'String' → logprob: -3.65181827545166
    3. 'string' → logprob: -7.65181827545166
    4. '-' → logprob: -10.65181827545166
    5. ' string' → logprob: -12.27681827545166
    6. 's' → logprob: -12.77681827545166
    7. '_string' → logprob: -13.15181827545166
    8. '"-' → logprob: -13.27681827545166
    9. '-s' → logprob: -13.52681827545166
    10. ' String' → logprob: -13.77681827545166

Token 993: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.4090505540370941
    2. ')' → logprob: -1.7840505838394165
    3. ')")
' → logprob: -2.659050464630127
    4. '           ' → logprob: -2.784050464630127
    5. ')")' → logprob: -3.784050464630127
    6. '")
' → logprob: -4.534050464630127
    7. '")

' → logprob: -7.159050464630127
    8. '       ' → logprob: -7.284050464630127
    9. '}")' → logprob: -7.534050464630127
    10. '")
' → logprob: -8.909050941467285

Token 994: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007798849139362574
    2. 'return' → logprob: -4.882798671722412
    3. '
' → logprob: -8.75779914855957
    4. '        
' → logprob: -10.63279914855957
    5. ' return' → logprob: -12.25779914855957
    6. '           ' → logprob: -12.88279914855957
    7. 'class' → logprob: -13.50779914855957
    8. 'self' → logprob: -13.63279914855957
    9. '   ' → logprob: -14.50779914855957
    10. '    
' → logprob: -15.50779914855957

Token 995: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03809266909956932
    2. 'return' → logprob: -3.288092613220215
    3. ' return' → logprob: -9.913092613220215
    4. '
' → logprob: -14.788092613220215
    5. 'result' → logprob: -14.788092613220215
    6. '   ' → logprob: -15.038092613220215
    7. '           ' → logprob: -15.038092613220215
    8. '        
' → logprob: -15.788092613220215
    9. '	return' → logprob: -16.16309356689453
    10. '```' → logprob: -17.16309356689453

Token 996: ' len' (ID: 4631)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.015808405354619026
    2. ' not' → logprob: -4.515808582305908
    3. 'len' → logprob: -5.390808582305908
    4. 'letters' → logprob: -8.89080810546875
    5. ' len' → logprob: -10.39080810546875
    6. 'last' → logprob: -11.14080810546875
    7. 'pos' → logprob: -12.76580810546875
    8. ' letters' → logprob: -13.64080810546875
    9. '
' → logprob: -13.76580810546875
    10. 'length' → logprob: -14.39080810546875

Token 997: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0028319843113422394
    2. 'letters' → logprob: -5.877831935882568
    3. '(_' → logprob: -11.377832412719727
    4. '(self' → logprob: -12.502832412719727
    5. '(s' → logprob: -12.502832412719727
    6. '(letter' → logprob: -12.752832412719727
    7. '_letters' → logprob: -13.502832412719727
    8. '(let' → logprob: -14.377832412719727
    9. ' letters' → logprob: -14.502832412719727
    10. '(lines' → logprob: -14.627832412719727

Token 998: 'letters' (ID: 38724)
  Prédit: 'letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.000455340719781816
    2. '(' → logprob: -7.750455379486084
    3. '_letters' → logprob: -11.375454902648926
    4. ' letters' → logprob: -11.625454902648926
    5. '_' → logprob: -14.250454902648926
    6. 's' → logprob: -14.250454902648926
    7. 'letter' → logprob: -14.500454902648926
    8. '(s' → logprob: -14.500454902648926
    9. 'lett' → logprob: -14.875454902648926
    10. 'set' → logprob: -15.000454902648926

Token 999: '_instances' (ID: 108386)
  Prédit: '_instances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_instances' → logprob: -0.023270871490240097
    2. '_found' → logprob: -3.773270845413208
    3. 'found' → logprob: -11.898270606994629
    4. 'instances' → logprob: -12.023270606994629
    5. ')' → logprob: -12.648270606994629
    6. '>' → logprob: -12.898270606994629
    7. '_letters' → logprob: -13.023270606994629
    8. '_inst' → logprob: -14.023270606994629
    9. 's' → logprob: -14.023270606994629
    10. '```' → logprob: -14.148270606994629

Token 1000: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04955212026834488
    2. ' ==' → logprob: -3.2995522022247314
    3. ')' → logprob: -4.549551963806152
    4. ')==' → logprob: -7.174551963806152
    5. '=' → logprob: -9.799551963806152
    6. '<' → logprob: -10.799551963806152
    7. '==
' → logprob: -11.299551963806152
    8. '()==' → logprob: -11.924551963806152
    9. '>' → logprob: -13.299551963806152
    10. '===' → logprob: -13.299551963806152

Token 1001: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09349293261766434
    2. ' ==' → logprob: -2.4684929847717285
    3. '<' → logprob: -5.4684929847717285
    4. '>' → logprob: -8.59349250793457
    5. '=' → logprob: -9.84349250793457
    6. ' <' → logprob: -10.09349250793457
    7. ')' → logprob: -10.96849250793457
    8. ')==' → logprob: -11.46849250793457
    9. '!=' → logprob: -12.34349250793457
    10. '()==' → logprob: -13.09349250793457

Token 1002: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '4' → logprob: -17.0
    4. '>' → logprob: -18.5
    5. '```' → logprob: -18.875
    6. '10' → logprob: -19.0
    7. '   ' → logprob: -19.5
    8. ')' → logprob: -20.125
    9. '
' → logprob: -20.25
    10. '<|end|>' → logprob: -20.625

Token 1003: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -18.125
    4. '>' → logprob: -18.25
    5. '
' → logprob: -20.125
    6. '10' → logprob: -20.125
    7. '#' → logprob: -20.25
    8. '   ' → logprob: -20.375
    9. ')' → logprob: -20.625
    10. '1' → logprob: -20.625

Token 1004: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4288061857223511
    2. ':
' → logprob: -1.053806185722351
    3. '       ' → logprob: -10.30380630493164
    4. '           ' → logprob: -10.30380630493164
    5. ':return' → logprob: -11.05380630493164
    6. ':

' → logprob: -12.05380630493164
    7. ':
' → logprob: -12.42880630493164
    8. ' or' → logprob: -12.67880630493164
    9. '   ' → logprob: -13.30380630493164
    10. ' :
' → logprob: -13.42880630493164

Token 1005: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006152157671749592
    2. 'raise' → logprob: -5.131152153015137
    3. ' raise' → logprob: -8.506152153015137
    4. '       ' → logprob: -12.131152153015137
    5. '```' → logprob: -12.381152153015137
    6. '   ' → logprob: -12.756152153015137
    7. '	raise' → logprob: -12.756152153015137
    8. '_raise' → logprob: -13.381152153015137
    9. 'Raise' → logprob: -13.506152153015137
    10. '
' → logprob: -14.256152153015137

Token 1006: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.036623645573854446
    2. '           ' → logprob: -3.53662371635437
    3. ' raise' → logprob: -5.036623477935791
    4. '	raise' → logprob: -8.16162395477295
    5. '
' → logprob: -10.53662395477295
    6. '   ' → logprob: -11.78662395477295
    7. '       ' → logprob: -11.91162395477295
    8. '_raise' → logprob: -12.16162395477295
    9. '               ' → logprob: -12.28662395477295
    10. 'Raise' → logprob: -12.53662395477295

Token 1007: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0001584850688232109
    2. ' Value' → logprob: -8.750158309936523
    3. '_value' → logprob: -17.250158309936523
    4. 'value' → logprob: -17.500158309936523
    5. '
' → logprob: -18.375158309936523
    6. '	Value' → logprob: -18.500158309936523
    7. '_Value' → logprob: -18.625158309936523
    8. ' ' → logprob: -19.875158309936523
    9. '```' → logprob: -20.125158309936523
    10. '.Value' → logprob: -20.375158309936523

Token 1008: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -4.320199877838604e-07
    2. 'rror' → logprob: -15.0
    3. 'Value' → logprob: -17.75
    4. 'Er' → logprob: -20.375
    5. 'LError' → logprob: -20.375
    6. '
' → logprob: -20.75
    7. ' Error' → logprob: -20.875
    8. 'error' → logprob: -21.0
    9. 'SError' → logprob: -21.0
    10. '```' → logprob: -21.125

Token 1009: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00011009939044015482
    2. '(' → logprob: -9.125109672546387
    3. '(f' → logprob: -14.500109672546387
    4. '(
' → logprob: -14.875109672546387
    5. '("")' → logprob: -16.125110626220703
    6. '()' → logprob: -16.375110626220703
    7. '('' → logprob: -17.125110626220703
    8. '(Value' → logprob: -17.875110626220703
    9. '("'' → logprob: -18.125110626220703
    10. '(("' → logprob: -18.375110626220703

Token 1010: 'Empty' (ID: 5692)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.002610498107969761
    2. 'Empty' → logprob: -6.002610683441162
    3. ' Value' → logprob: -9.127610206604004
    4. 'MC' → logprob: -11.627610206604004
    5. 'Invalid' → logprob: -11.877610206604004
    6. 'Input' → logprob: -11.877610206604004
    7. 'value' → logprob: -13.752610206604004
    8. 'No' → logprob: -14.627610206604004
    9. 's' → logprob: -14.877610206604004
    10. '"' → logprob: -14.877610206604004

Token 1011: ' MC' (ID: 31263)
  Prédit: 'string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -0.27113816142082214
    2. ' string' → logprob: -1.5211381912231445
    3. 'String' → logprob: -5.0211381912231445
    4. '_string' → logprob: -5.5211381912231445
    5. 's' → logprob: -6.2711381912231445
    6. ' MC' → logprob: -6.7711381912231445
    7. ' letters' → logprob: -6.7711381912231445
    8. ' input' → logprob: -7.1461381912231445
    9. ' s' → logprob: -7.3961381912231445
    10. 'MC' → logprob: -7.5211381912231445

Token 1012: 'XI' (ID: 124666)
  Prédit: 'XI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XI' → logprob: -6.158350151963532e-05
    2. 'X' → logprob: -11.250061988830566
    3. 'xi' → logprob: -11.625061988830566
    4. '
' → logprob: -11.750061988830566
    5. ' XI' → logprob: -12.000061988830566
    6. 'letters' → logprob: -12.500061988830566
    7. '_letters' → logprob: -12.625061988830566
    8. ')' → logprob: -12.750061988830566
    9. 'LET' → logprob: -13.000061988830566
    10. '   ' → logprob: -13.000061988830566

Token 1013: '-string' (ID: 73286)
  Prédit: 'String'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -0.2826891839504242
    2. '-string' → logprob: -1.4076892137527466
    3. '-' → logprob: -7.157689094543457
    4. '_string' → logprob: -7.907689094543457
    5. 'string' → logprob: -8.532689094543457
    6. 'Instances' → logprob: -9.657689094543457
    7. '_String' → logprob: -10.657689094543457
    8. 's' → logprob: -11.032689094543457
    9. 'Strings' → logprob: -11.032689094543457
    10. '_STRING' → logprob: -11.282689094543457

Token 1014: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.09053505212068558
    2. '")

' → logprob: -2.9655351638793945
    3. '")
' → logprob: -3.4655351638793945
    4. ')' → logprob: -6.0905351638793945
    5. '       ' → logprob: -7.0905351638793945
    6. ')")
' → logprob: -8.340535163879395
    7. ')")' → logprob: -8.715535163879395
    8. '")

' → logprob: -9.715535163879395
    9. 'string' → logprob: -9.965535163879395
    10. '")
' → logprob: -10.340535163879395

Token 1015: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07894696295261383
    2. 'return' → logprob: -2.578947067260742
    3. ' return' → logprob: -9.953947067260742
    4. '
' → logprob: -11.953947067260742
    5. '   ' → logprob: -12.953947067260742
    6. '```' → logprob: -15.203947067260742
    7. '        
' → logprob: -15.578947067260742
    8. '           ' → logprob: -15.703947067260742
    9. 'result' → logprob: -16.078947067260742
    10. 'cls' → logprob: -16.828947067260742

Token 1016: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00012439649435691535
    2. '       ' → logprob: -9.000123977661133
    3. ' return' → logprob: -14.125123977661133
    4. 'result' → logprob: -15.375123977661133
    5. '
' → logprob: -17.625123977661133
    6. '	return' → logprob: -19.000123977661133
    7. '        
' → logprob: -19.625123977661133
    8. '```' → logprob: -19.625123977661133
    9. '   ' → logprob: -20.125123977661133
    10. '#' → logprob: -20.250123977661133

Token 1017: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -1.6240566083070007e-06
    2. ' cls' → logprob: -13.500001907348633
    3. 'MC' → logprob: -15.750001907348633
    4. '   ' → logprob: -19.250001907348633
    5. 'mc' → logprob: -22.375001907348633
    6. '(cls' → logprob: -23.500001907348633
    7. 'Cls' → logprob: -25.000001907348633
    8. '.cls' → logprob: -25.125001907348633
    9. 'cl' → logprob: -25.250001907348633
    10. 'CLS' → logprob: -25.500001907348633

Token 1018: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.696889623621246e-06
    2. 'letters' → logprob: -13.25000286102295
    3. '(_' → logprob: -15.25000286102295
    4. '(letter' → logprob: -15.50000286102295
    5. '(l' → logprob: -16.500001907348633
    6. '((' → logprob: -16.625001907348633
    7. '(
' → logprob: -16.625001907348633
    8. '(lines' → logprob: -17.000001907348633
    9. '(let' → logprob: -17.250001907348633
    10. '([' → logprob: -17.625001907348633

Token 1019: 'letters' (ID: 38724)
  Prédit: 'letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -1.5048530030981055e-06
    2. 'letter' → logprob: -13.875001907348633
    3. ' letters' → logprob: -14.875001907348633
    4. '[' → logprob: -16.625001907348633
    5. '_letters' → logprob: -17.000001907348633
    6. '```' → logprob: -17.375001907348633
    7. 'lett' → logprob: -18.125001907348633
    8. 'Letters' → logprob: -19.000001907348633
    9. 'let' → logprob: -19.625001907348633
    10. ')' → logprob: -19.750001907348633

Token 1020: '_instances' (ID: 108386)
  Prédit: '_instances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_instances' → logprob: -0.0008964549051597714
    2. 'instances' → logprob: -7.750896453857422
    3. '_letters' → logprob: -8.000896453857422
    4. '=' → logprob: -9.875896453857422
    5. 'letters' → logprob: -9.875896453857422
    6. ')' → logprob: -11.750896453857422
    7. '(' → logprob: -11.750896453857422
    8. '```' → logprob: -12.125896453857422
    9. 'Instances' → logprob: -13.375896453857422
    10. '_inst' → logprob: -13.750896453857422

Token 1021: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. '())' → logprob: -12.750005722045898
    3. ')
' → logprob: -13.750005722045898
    4. '       ' → logprob: -14.625005722045898
    5. '<|end|>' → logprob: -14.625005722045898
    6. '   ' → logprob: -15.125005722045898
    7. ' )' → logprob: -15.250005722045898
    8. '()' → logprob: -15.750005722045898
    9. ')return' → logprob: -17.3750057220459
    10. ')}' → logprob: -17.6250057220459

Token 1022: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002204974414780736
    2. '
' → logprob: -6.752204895019531
    3. 'def' → logprob: -7.377204895019531
    4. ')' → logprob: -9.002204895019531
    5. '    
' → logprob: -9.002204895019531
    6. '```' → logprob: -9.752204895019531
    7. '<|end|>' → logprob: -10.252204895019531
    8. '@' → logprob: -11.877204895019531
    9. '        
' → logprob: -12.002204895019531
    10. ':' → logprob: -12.252204895019531

Token 1023: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.049439020454883575
    2. '   ' → logprob: -3.049438953399658
    3. '@property' → logprob: -7.299438953399658
    4. ' def' → logprob: -8.674439430236816
    5. '```' → logprob: -13.049439430236816
    6. '
' → logprob: -13.549439430236816
    7. '@' → logprob: -14.674439430236816
    8. '    
' → logprob: -15.424439430236816
    9. '	def' → logprob: -16.0494384765625
    10. ' ' → logprob: -17.4244384765625

Token 1024: ' to' (ID: 316)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2450438290834427
    2. 'to' → logprob: -2.3700437545776367
    3. 'value' → logprob: -2.3700437545776367
    4. '_value' → logprob: -4.120043754577637
    5. ' __' → logprob: -5.370043754577637
    6. '_to' → logprob: -5.745043754577637
    7. 'def' → logprob: -5.745043754577637
    8. 'total' → logprob: -6.620043754577637
    9. '_total' → logprob: -7.245043754577637
    10. ' value' → logprob: -8.245043754577637

Token 1025: '_value' (ID: 6734)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6363306045532227
    2. '_int' → logprob: -0.8863306045532227
    3. 'value' → logprob: -3.6363306045532227
    4. '_value' → logprob: -3.8863306045532227
    5. 'string' → logprob: -5.011330604553223
    6. '_string' → logprob: -6.136330604553223
    7. '_str' → logprob: -7.136330604553223
    8. 'str' → logprob: -8.011330604553223
    9. 'number' → logprob: -8.136330604553223
    10. 's' → logprob: -8.511330604553223

Token 1026: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00011534435179783031
    2. '(' → logprob: -9.125115394592285
    3. 'self' → logprob: -12.375115394592285
    4. '(
' → logprob: -13.750115394592285
    5. ' (' → logprob: -14.500115394592285
    6. '(s' → logprob: -16.00011444091797
    7. '()' → logprob: -16.50011444091797
    8. '   ' → logprob: -16.50011444091797
    9. 'def' → logprob: -16.62511444091797
    10. 's' → logprob: -17.12511444091797

Token 1027: ')' (ID: 8)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7006243467330933
    2. ')' → logprob: -1.0756243467330933
    3. '(self' → logprob: -1.8256243467330933
    4. '):' → logprob: -7.075624465942383
    5. '   ' → logprob: -8.450624465942383
    6. '):
' → logprob: -8.700624465942383
    7. ')->' → logprob: -9.075624465942383
    8. ' self' → logprob: -9.700624465942383
    9. '       ' → logprob: -9.950624465942383
    10. 's' → logprob: -11.325624465942383

Token 1028: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.019767524674534798
    2. 'self' → logprob: -4.269767761230469
    3. '       ' → logprob: -6.144767761230469
    4. '   ' → logprob: -6.269767761230469
    5. '(' → logprob: -6.894767761230469
    6. '->' → logprob: -7.894767761230469
    7. ' self' → logprob: -9.894767761230469
    8. '(
' → logprob: -10.144767761230469
    9. ':' → logprob: -11.269767761230469
    10. ' ->' → logprob: -11.394767761230469

Token 1029: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.128163257315464e-07
    2. ' int' → logprob: -15.5
    3. '   ' → logprob: -18.75
    4. '
' → logprob: -22.5
    5. '(int' → logprob: -23.0
    6. '[int' → logprob: -23.0
    7. '	int' → logprob: -23.125
    8. '```' → logprob: -23.25
    9. '       ' → logprob: -24.375
    10. '  ' → logprob: -24.75

Token 1030: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1451745331287384
    2. '       ' → logprob: -2.395174503326416
    3. 'self' → logprob: -3.645174503326416
    4. '   ' → logprob: -4.145174503326416
    5. '(' → logprob: -7.270174503326416
    6. '(
' → logprob: -7.395174503326416
    7. ':' → logprob: -7.895174503326416
    8. ':
' → logprob: -9.270174980163574
    9. '
' → logprob: -9.770174980163574
    10. ' self' → logprob: -10.145174980163574

Token 1031: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17064735293388367
    2. 'result' → logprob: -2.170647382736206
    3. 'total' → logprob: -3.420647382736206
    4. 'value' → logprob: -4.670647144317627
    5. 'return' → logprob: -7.920647144317627
    6. '```' → logprob: -8.420647621154785
    7. ' total' → logprob: -10.170647621154785
    8. 'sum' → logprob: -10.795647621154785
    9. 'v' → logprob: -11.170647621154785
    10. ' result' → logprob: -11.170647621154785

Token 1032: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4330100119113922
    2. 'total' → logprob: -1.1830099821090698
    3. 'result' → logprob: -3.1830101013183594
    4. 'value' → logprob: -5.683010101318359
    5. '       ' → logprob: -8.43301010131836
    6. 'val' → logprob: -12.80801010131836
    7. ' return' → logprob: -13.30801010131836
    8. 'res' → logprob: -13.43301010131836
    9. '```' → logprob: -13.55801010131836
    10. ' total' → logprob: -14.30801010131836

Token 1033: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00033558503491804004
    2. ' sum' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.625335693359375
    4. 'self' → logprob: -18.625335693359375
    5. '(sum' → logprob: -18.875335693359375
    6. '=sum' → logprob: -19.500335693359375
    7. '```' → logprob: -19.625335693359375
    8. '	sum' → logprob: -19.625335693359375
    9. '       ' → logprob: -19.750335693359375
    10. '
' → logprob: -21.500335693359375

Token 1034: '(letter' (ID: 142899)
  Prédit: '(letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(letter' → logprob: -0.001242613303475082
    2. '(l' → logprob: -7.501242637634277
    3. 'letter' → logprob: -7.501242637634277
    4. '(' → logprob: -9.376242637634277
    5. '(self' → logprob: -11.001242637634277
    6. '([' → logprob: -11.001242637634277
    7. '(token' → logprob: -11.626242637634277
    8. '(let' → logprob: -11.876242637634277
    9. ' letter' → logprob: -14.876242637634277
    10. '(x' → logprob: -14.876242637634277

Token 1035: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.014393490739166737
    2. '.' → logprob: -4.264393329620361
    3. '.count' → logprob: -8.38939380645752
    4. ' .' → logprob: -13.63939380645752
    5. 'value' → logprob: -14.88939380645752
    6. '.token' → logprob: -15.01439380645752
    7. ').' → logprob: -16.139392852783203
    8. '.val' → logprob: -16.389392852783203
    9. '.values' → logprob: -16.514392852783203
    10. '.number' → logprob: -16.639392852783203

Token 1036: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3632926046848297
    2. 'for' → logprob: -1.2382925748825073
    3. ')' → logprob: -4.238292694091797
    4. '()' → logprob: -8.488292694091797
    5. '       ' → logprob: -9.863292694091797
    6. '	for' → logprob: -10.988292694091797
    7. '   ' → logprob: -11.363292694091797
    8. '           ' → logprob: -11.863292694091797
    9. '<|end|>' → logprob: -12.488292694091797
    10. ' )' → logprob: -13.488292694091797

Token 1037: ' letter' (ID: 10263)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00029685118352063
    2. 'letter' → logprob: -8.375296592712402
    3. ' self' → logprob: -9.625296592712402
    4. ' letter' → logprob: -16.25029754638672
    5. '	self' → logprob: -16.75029754638672
    6. '(self' → logprob: -18.25029754638672
    7. '_letter' → logprob: -19.12529754638672
    8. '   ' → logprob: -19.25029754638672
    9. '=self' → logprob: -20.00029754638672
    10. '_self' → logprob: -20.12529754638672

Token 1038: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3132888078689575
    2. 'in' → logprob: -1.3132888078689575
    3. 'self' → logprob: -10.688288688659668
    4. 's' → logprob: -13.188288688659668
    5. '	in' → logprob: -14.063288688659668
    6. ' ' → logprob: -14.563288688659668
    7. 'import' → logprob: -15.688288688659668
    8. ' ' → logprob: -15.813288688659668
    9. 'In' → logprob: -16.063289642333984
    10. '
' → logprob: -16.188289642333984

Token 1039: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.4855663721391466e-05
    2. ' self' → logprob: -11.125015258789062
    3. '
' → logprob: -18.375015258789062
    4. '(self' → logprob: -18.375015258789062
    5. '	self' → logprob: -19.375015258789062
    6. '   ' → logprob: -20.000015258789062
    7. '=self' → logprob: -20.250015258789062
    8. '       ' → logprob: -20.500015258789062
    9. '[self' → logprob: -20.750015258789062
    10. ')' → logprob: -21.375015258789062

Token 1040: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.003184125293046236
    2. 'letters' → logprob: -5.7531843185424805
    3. '_letters' → logprob: -12.37818431854248
    4. ' letters' → logprob: -13.62818431854248
    5. 'Letters' → logprob: -14.75318431854248
    6. ').' → logprob: -15.50318431854248
    7. ' .' → logprob: -15.87818431854248
    8. '.le' → logprob: -16.128183364868164
    9. '```' → logprob: -16.503183364868164
    10. '.words' → logprob: -17.003183364868164

Token 1041: 'letters' (ID: 38724)
  Prédit: 'letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -1.5048530030981055e-06
    2. '_letters' → logprob: -14.250001907348633
    3. ' letters' → logprob: -14.625001907348633
    4. 'let' → logprob: -15.625001907348633
    5. 'self' → logprob: -16.000001907348633
    6. '.' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '```' → logprob: -18.250001907348633
    9. ')' → logprob: -18.750001907348633
    10. '
' → logprob: -19.125001907348633

Token 1042: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5690089639974758e-05
    2. '       ' → logprob: -11.375015258789062
    3. '   ' → logprob: -13.375015258789062
    4. ')
' → logprob: -13.625015258789062
    5. ' )' → logprob: -13.750015258789062
    6. '())' → logprob: -15.625015258789062
    7. '()' → logprob: -17.500015258789062
    8. '),' → logprob: -17.625015258789062
    9. '  ' → logprob: -18.000015258789062
    10. '.' → logprob: -18.000015258789062

Token 1043: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3153482973575592
    2. '   ' → logprob: -1.3153482675552368
    3. '@' → logprob: -6.190348148345947
    4. ' def' → logprob: -11.315348625183105
    5. 'class' → logprob: -12.315348625183105
    6. '	def' → logprob: -12.440348625183105
    7. '```' → logprob: -12.940348625183105
    8. '
' → logprob: -13.190348625183105
    9. '@property' → logprob: -13.315348625183105
    10. 'from' → logprob: -13.565348625183105

Token 1044: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002100965939462185
    2. '@' (adapté à ' @') → logprob: -8.50020980834961
    3. '   ' → logprob: -12.00020980834961
    4. ' def' → logprob: -14.75020980834961
    5. '@property' → logprob: -18.37520980834961
    6. '```' → logprob: -19.12520980834961
    7. '	def' → logprob: -19.62520980834961
    8. '
' → logprob: -20.62520980834961
    9. '    
' → logprob: -21.12520980834961
    10. '@dat' → logprob: -21.50020980834961

Token 1045: 'classmethod' (ID: 64680)
  Prédit: 'classmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'classmethod' → logprob: -0.2056947946548462
    2. 'property' → logprob: -1.7056947946548462
    3. 'staticmethod' → logprob: -5.455694675445557
    4. '__' → logprob: -14.830695152282715
    5. 'value' → logprob: -17.4556941986084
    6. '@property' → logprob: -17.8306941986084
    7. ' property' → logprob: -17.9556941986084
    8. 'class' → logprob: -18.5806941986084
    9. 'str' → logprob: -18.9556941986084
    10. 'dat' → logprob: -19.7056941986084

Token 1046: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000982435536570847
    2. ' def' → logprob: -7.125982284545898
    3. '   ' → logprob: -8.750982284545898
    4. 'from' → logprob: -11.250982284545898
    5. '
' → logprob: -12.250982284545898
    6. '	def' → logprob: -13.625982284545898
    7. '@' → logprob: -15.750982284545898
    8. '(def' → logprob: -15.875982284545898
    9. '(' → logprob: -16.0009822845459
    10. 'classmethod' → logprob: -16.0009822845459

Token 1047: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008375041070394218
    2. '   ' → logprob: -7.875837326049805
    3. ' def' → logprob: -8.125837326049805
    4. '
' → logprob: -8.750837326049805
    5. 'from' → logprob: -14.125837326049805
    6. '	def' → logprob: -14.125837326049805
    7. '('' → logprob: -15.000837326049805
    8. '(def' → logprob: -15.250837326049805
    9. '_def' → logprob: -15.375837326049805
    10. '    
' → logprob: -15.375837326049805

Token 1048: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.03521392197581e-05
    2. 'from' → logprob: -10.750030517578125
    3. '
' → logprob: -11.875030517578125
    4. ' def' → logprob: -13.250030517578125
    5. '   ' → logprob: -15.750030517578125
    6. ':def' → logprob: -18.250030517578125
    7. '	def' → logprob: -18.750030517578125
    8. '    
' → logprob: -20.125030517578125
    9. 'de' → logprob: -20.625030517578125
    10. 'ndef' → logprob: -20.875030517578125

Token 1049: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.003993865568190813
    2. 'def' → logprob: -6.128993988037109
    3. 'add' → logprob: -7.003993988037109
    4. '
' → logprob: -7.378993988037109
    5. ' from' → logprob: -9.37899398803711
    6. '_from' → logprob: -9.62899398803711
    7. '__' → logprob: -9.87899398803711
    8. '_add' → logprob: -10.62899398803711
    9. 'parse' → logprob: -11.00399398803711
    10. 'combine' → logprob: -11.62899398803711

Token 1050: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.4040818512439728
    2. 'value' → logprob: -1.6540818214416504
    3. 'int' → logprob: -2.0290818214416504
    4. '_int' → logprob: -4.77908182144165
    5. 'cls' → logprob: -7.27908182144165
    6. '
' → logprob: -8.154082298278809
    7. 'classmethod' → logprob: -8.779082298278809
    8. '"value' → logprob: -10.404082298278809
    9. 'class' → logprob: -11.404082298278809
    10. 'Value' → logprob: -11.404082298278809

Token 1051: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -2.4987974029500037e-05
    2. 'cls' → logprob: -10.625024795532227
    3. '   ' → logprob: -15.250024795532227
    4. ' cls' → logprob: -15.625024795532227
    5. '
' → logprob: -17.000024795532227
    6. ' (' → logprob: -17.125024795532227
    7. '(' → logprob: -17.875024795532227
    8. '.cls' → logprob: -18.000024795532227
    9. '(
' → logprob: -18.125024795532227
    10. '```' → logprob: -18.250024795532227

Token 1052: ',' (ID: 11)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.01873229257762432
    2. ',' → logprob: -4.018732070922852
    3. ' (' → logprob: -8.018732070922852
    4. '   ' → logprob: -8.643732070922852
    5. 'cls' → logprob: -9.893732070922852
    6. '       ' → logprob: -11.893732070922852
    7. 'def' → logprob: -12.143732070922852
    8. ')' → logprob: -12.643732070922852
    9. '```' → logprob: -12.768732070922852
    10. '(' → logprob: -13.143732070922852

Token 1053: ' val' (ID: 1459)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.16059483587741852
    2. 'value' → logprob: -1.9105948209762573
    3. ' cls' → logprob: -8.410594940185547
    4. 'val' → logprob: -9.535594940185547
    5. '   ' → logprob: -10.410594940185547
    6. 'class' → logprob: -11.160594940185547
    7. ' value' → logprob: -11.535594940185547
    8. 'v' → logprob: -11.660594940185547
    9. '(cls' → logprob: -12.285594940185547
    10. '       ' → logprob: -12.910594940185547

Token 1054: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003215857082977891
    2. '(cls' → logprob: -6.253215789794922
    3. ':int' → logprob: -6.753215789794922
    4. '=' → logprob: -10.378215789794922
    5. '(int' → logprob: -10.753215789794922
    6. '   ' → logprob: -11.378215789794922
    7. ' :' → logprob: -11.503215789794922
    8. '(' → logprob: -11.753215789794922
    9. 'cls' → logprob: -11.753215789794922
    10. ')' → logprob: -11.878215789794922

Token 1055: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00035631912760436535
    2. ' int' → logprob: -8.000356674194336
    3. 'cls' → logprob: -11.000356674194336
    4. '   ' → logprob: -13.500356674194336
    5. '
' → logprob: -14.125356674194336
    6. ')' → logprob: -15.000356674194336
    7. '[int' → logprob: -15.500356674194336
    8. 'lambda' → logprob: -15.625356674194336
    9. '```' → logprob: -15.625356674194336
    10. 'classmethod' → logprob: -15.750356674194336

Token 1056: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004669595509767532
    2. '):' → logprob: -5.629669666290283
    3. '):
' → logprob: -6.879669666290283
    4. '   ' → logprob: -10.879669189453125
    5. ':' → logprob: -11.129669189453125
    6. '):
' → logprob: -12.879669189453125
    7. '       ' → logprob: -13.129669189453125
    8. ',' → logprob: -13.879669189453125
    9. ' )' → logprob: -14.129669189453125
    10. '):

' → logprob: -15.254669189453125

Token 1057: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0716465562582016
    2. ':
' → logprob: -2.6966464519500732
    3. '->' → logprob: -7.321646690368652
    4. '   ' → logprob: -7.571646690368652
    5. '       ' → logprob: -7.821646690368652
    6. ',' → logprob: -9.946646690368652
    7. '):
' → logprob: -11.446646690368652
    8. '):' → logprob: -11.446646690368652
    9. ':
' → logprob: -11.446646690368652
    10. ')' → logprob: -11.571646690368652

Token 1058: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.47964274883270264
    2. 'Optional' → logprob: -1.1046427488327026
    3. 'None' → logprob: -3.604642868041992
    4. 'classmethod' → logprob: -4.854642868041992
    5. ' Optional' → logprob: -5.604642868041992
    6. ' "' → logprob: -5.604642868041992
    7. '   ' → logprob: -5.854642868041992
    8. '"class' → logprob: -6.354642868041992
    9. 'cls' → logprob: -6.729642868041992
    10. 'int' → logprob: -7.354642868041992

Token 1059: 'MC' (ID: 15190)
  Prédit: 'MC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MC' → logprob: -1.981667537620524e-06
    2. ' MC' → logprob: -13.875001907348633
    3. 'cls' → logprob: -14.250001907348633
    4. '"' → logprob: -16.000001907348633
    5. '_MC' → logprob: -16.250001907348633
    6. 'mc' → logprob: -17.125001907348633
    7. '
' → logprob: -17.250001907348633
    8. 'class' → logprob: -18.250001907348633
    9. 'int' → logprob: -18.375001907348633
    10. 'self' → logprob: -18.625001907348633

Token 1060: 'XI' (ID: 124666)
  Prédit: 'XI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XI' → logprob: -5.073596548754722e-05
    2. 'X' → logprob: -10.75005054473877
    3. 'MC' → logprob: -11.12505054473877
    4. 'xi' → logprob: -11.87505054473877
    5. 'JI' → logprob: -13.00005054473877
    6. 'XL' → logprob: -13.50005054473877
    7. 'CI' → logprob: -13.87505054473877
    8. 'class' → logprob: -14.50005054473877
    9. 'CX' → logprob: -14.50005054473877
    10. ' XI' → logprob: -14.50005054473877

Token 1061: 'String' (ID: 916)
  Prédit: 'String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -1.5048530030981055e-06
    2. '_String' → logprob: -14.625001907348633
    3. 'MC' → logprob: -15.500001907348633
    4. '
' → logprob: -15.500001907348633
    5. 'string' → logprob: -16.000001907348633
    6. '_string' → logprob: -16.250001907348633
    7. 'Value' → logprob: -16.500001907348633
    8. '```' → logprob: -17.000001907348633
    9. ' String' → logprob: -17.250001907348633
    10. 'tring' → logprob: -17.375001907348633

Token 1062: '":
' (ID: 9213)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.220564842224121
    2. '):' → logprob: -1.720564842224121
    3. '":' → logprob: -1.970564842224121
    4. ':' → logprob: -2.095564842224121
    5. '       ' → logprob: -2.220564842224121
    6. '):
' → logprob: -2.220564842224121
    7. '":
' → logprob: -3.970564842224121
    8. '   ' → logprob: -4.345564842224121
    9. 'def' → logprob: -4.845564842224121
    10. ')' → logprob: -5.845564842224121

Token 1063: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008502478594891727
    2. 'if' → logprob: -7.750850200653076
    3. 'letters' → logprob: -8.250850677490234
    4. ' if' → logprob: -9.375850677490234
    5. 'def' → logprob: -10.000850677490234
    6. ' letters' → logprob: -12.000850677490234
    7. '```' → logprob: -12.125850677490234
    8. '   ' → logprob: -12.375850677490234
    9. 'result' → logprob: -12.500850677490234
    10. '#' → logprob: -12.875850677490234

Token 1064: ' #' (ID: 1069)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.11407056450843811
    2. 'if' → logprob: -2.2390706539154053
    3. 'result' → logprob: -7.239070415496826
    4. '       ' → logprob: -7.739070415496826
    5. 'assert' → logprob: -10.614070892333984
    6. 'count' → logprob: -11.489070892333984
    7. 'counts' → logprob: -11.739070892333984
    8. 'res' → logprob: -11.989070892333984
    9. 'values' → logprob: -12.114070892333984
    10. ' letters' → logprob: -12.364070892333984

Token 1065: ' val' (ID: 1459)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.21248865127563477
    2. 'if' → logprob: -1.7124886512756348
    3. 'result' → logprob: -4.712488651275635
    4. 'assert' → logprob: -7.337488651275635
    5. '       ' → logprob: -8.087488174438477
    6. 'def' → logprob: -8.337488174438477
    7. 'res' → logprob: -8.462488174438477
    8. 'count' → logprob: -8.962488174438477
    9. 'val' → logprob: -9.212488174438477
    10. 'counts' → logprob: -9.337488174438477

Token 1066: ' must' (ID: 2804)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1310943365097046
    2. ' =' → logprob: -3.256094455718994
    3. 'def' → logprob: -3.381094455718994
    4. '_remaining' → logprob: -4.131094455718994
    5. '       ' → logprob: -4.506094455718994
    6. 'if' → logprob: -5.506094455718994
    7. 'remaining' → logprob: -5.631094455718994
    8. 'tokens' → logprob: -6.131094455718994
    9. ' if' → logprob: -6.506094455718994
    10. ' def' → logprob: -6.756094455718994

Token 1067: ' be' (ID: 413)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.24922984838485718
    2. '>=' → logprob: -2.124229907989502
    3. ' be' → logprob: -2.374229907989502
    4. '=' → logprob: -5.124229907989502
    5. 'be' → logprob: -6.874229907989502
    6. ' >' → logprob: -7.749229907989502
    7. '       ' → logprob: -8.624229431152344
    8. ' >=' → logprob: -9.249229431152344
    9. 'if' → logprob: -9.624229431152344
    10. '#' → logprob: -10.249229431152344

Token 1068: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.32098573446273804
    2. '1' → logprob: -1.3209857940673828
    3. '100' → logprob: -5.820985794067383
    4. '>=' → logprob: -6.445985794067383
    5. '>' → logprob: -6.695985794067383
    6. 'int' → logprob: -6.820985794067383
    7. ' ' → logprob: -8.070985794067383
    8. '
' → logprob: -8.820985794067383
    9. 'not' → logprob: -9.945985794067383
    10. '   ' → logprob: -10.070985794067383

Token 1069: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.059944942593574524
    2. '0' → logprob: -3.0599448680877686
    3. 'int' → logprob: -4.934945106506348
    4. '>' → logprob: -5.809945106506348
    5. '100' → logprob: -7.684945106506348
    6. '>=' → logprob: -8.184945106506348
    7. 'val' → logprob: -8.934945106506348
    8. ' ' → logprob: -9.559945106506348
    9. 'is' → logprob: -10.434945106506348
    10. '
' → logprob: -10.684945106506348

Token 1070: '..' (ID: 485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19440828263759613
    2. ':
' → logprob: -2.5694081783294678
    3. ',' → logprob: -3.1944081783294678
    4. ' if' → logprob: -3.8194081783294678
    5. '       ' → logprob: -4.569408416748047
    6. '=' → logprob: -5.069408416748047
    7. '0' → logprob: -5.319408416748047
    8. '>' → logprob: -5.694408416748047
    9. 'if' → logprob: -5.694408416748047
    10. '<=' → logprob: -6.069408416748047

Token 1071: '999' (ID: 9130)
  Prédit: '999'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -0.5605143308639526
    2. '899' → logprob: -1.4355143308639526
    3. '399' → logprob: -1.6855143308639526
    4. 'int' → logprob: -6.185514450073242
    5. '900' → logprob: -6.310514450073242
    6. '(' → logprob: -7.560514450073242
    7. '100' → logprob: -7.935514450073242
    8. '299' → logprob: -8.435514450073242
    9. '359' → logprob: -8.810514450073242
    10. 'max' → logprob: -9.060514450073242

Token 1072: '9' (ID: 24)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033109694719314575
    2. 'if' → logprob: -3.658109664916992
    3. ' if' → logprob: -5.283109664916992
    4. '
' → logprob: -6.783109664916992
    5. 'def' → logprob: -8.283109664916992
    6. '```' → logprob: -8.783109664916992
    7. ',' → logprob: -9.783109664916992
    8. '        
' → logprob: -10.908109664916992
    9. '#' → logprob: -11.158109664916992
    10. 'val' → logprob: -11.283109664916992

Token 1073: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.603825032711029
    2. 'if' → logprob: -0.978825032711029
    3. 'result' → logprob: -2.853825092315674
    4. 'letters' → logprob: -4.853825092315674
    5. '
' → logprob: -5.478825092315674
    6. 'assert' → logprob: -5.728825092315674
    7. ' if' → logprob: -5.853825092315674
    8. 'def' → logprob: -7.853825092315674
    9. 's' → logprob: -7.853825092315674
    10. 'res' → logprob: -8.353824615478516

Token 1074: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008220185991376638
    2. 'if' → logprob: -7.625822067260742
    3. 'result' → logprob: -8.875822067260742
    4. '
' → logprob: -9.875822067260742
    5. 'def' → logprob: -10.500822067260742
    6. ' if' → logprob: -10.625822067260742
    7. '   ' → logprob: -10.625822067260742
    8. 'letters' → logprob: -10.750822067260742
    9. '```' → logprob: -11.000822067260742
    10. 'assert' → logprob: -11.500822067260742

Token 1075: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0008617922430858016
    2. '       ' → logprob: -7.750861644744873
    3. ' if' → logprob: -7.750861644744873
    4. '	if' → logprob: -15.000862121582031
    5. '```' → logprob: -15.250862121582031
    6. 'def' → logprob: -17.25086212158203
    7. 'If' → logprob: -17.37586212158203
    8. 'assert' → logprob: -17.62586212158203
    9. '   ' → logprob: -18.25086212158203
    10. '﻿' → logprob: -19.37586212158203

Token 1076: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5308616757392883
    2. ' not' → logprob: -1.0308616161346436
    3. 'val' → logprob: -3.0308616161346436
    4. ' val' → logprob: -5.030861854553223
    5. '1' → logprob: -8.405861854553223
    6. '   ' → logprob: -8.905861854553223
    7. '       ' → logprob: -10.780861854553223
    8. '	not' → logprob: -12.530861854553223
    9. ' ' → logprob: -13.280861854553223
    10. '    ' → logprob: -13.530861854553223

Token 1077: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0161928478628397
    2. ' (' → logprob: -4.14119291305542
    3. '1' → logprob: -8.766192436218262
    4. ' ' → logprob: -13.641192436218262
    5. '   ' → logprob: -13.766192436218262
    6. 'is' → logprob: -16.391193389892578
    7. '```' → logprob: -16.391193389892578
    8. '(
' → logprob: -16.891193389892578
    9. '  ' → logprob: -17.016193389892578
    10. '       ' → logprob: -17.016193389892578

Token 1078: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4736459888808895e-05
    2. ' ' → logprob: -11.250014305114746
    3. '   ' → logprob: -13.625014305114746
    4. '0' → logprob: -15.000014305114746
    5. 'is' → logprob: -16.750015258789062
    6. '
' → logprob: -17.000015258789062
    7. '(' → logprob: -17.125015258789062
    8. '       ' → logprob: -17.500015258789062
    9. '```' → logprob: -18.000015258789062
    10. '           ' → logprob: -18.250015258789062

Token 1079: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.12692926824092865
    2. '<=' → logprob: -2.12692928314209
    3. '<' → logprob: -15.12692928314209
    4. '   ' → logprob: -15.25192928314209
    5. ' ' → logprob: -15.37692928314209
    6. ')<=' → logprob: -15.75192928314209
    7. '0' → logprob: -16.876928329467773
    8. ' <=",' → logprob: -17.126928329467773
    9. ' <' → logprob: -17.126928329467773
    10. ',' → logprob: -17.376928329467773

Token 1080: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -3.7697225252486533e-06
    2. ' val' → logprob: -12.500003814697266
    3. '           ' → logprob: -20.000003814697266
    4. '	val' → logprob: -20.000003814697266
    5. '       ' → logprob: -20.875003814697266
    6. '   ' → logprob: -23.625003814697266
    7. '(val' → logprob: -23.625003814697266
    8. '[val' → logprob: -23.750003814697266
    9. '_val' → logprob: -23.875003814697266
    10. '.val' → logprob: -24.625003814697266

Token 1081: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.04858771339058876
    2. ' <=' → logprob: -3.0485877990722656
    3. '<' → logprob: -15.798587799072266
    4. '≤' → logprob: -16.673587799072266
    5. '```' → logprob: -17.173587799072266
    6. 'and' → logprob: -18.173587799072266
    7. '   ' → logprob: -18.298587799072266
    8. '[' → logprob: -18.298587799072266
    9. ')<=' → logprob: -18.423587799072266
    10. '           ' → logprob: -18.673587799072266

Token 1082: ' ' (ID: 220)
  Prédit: '999'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -0.00013393278641160578
    2. ' ' → logprob: -9.000133514404297
    3. '9' → logprob: -11.875133514404297
    4. '   ' → logprob: -13.000133514404297
    5. '  ' → logprob: -15.437633514404297
    6. '99' → logprob: -15.687633514404297
    7. '
' → logprob: -15.812633514404297
    8. '100' → logprob: -15.937633514404297
    9. '```' → logprob: -16.375133514404297
    10. '899' → logprob: -16.562633514404297

Token 1083: '999' (ID: 9130)
  Prédit: '999'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.500005722045898
    3. '9' → logprob: -13.750005722045898
    4. '   ' → logprob: -14.375005722045898
    5. '```' → logprob: -15.500005722045898
    6. '100' → logprob: -16.3750057220459
    7. '899' → logprob: -16.7500057220459
    8. '
' → logprob: -17.1250057220459
    9. '  ' → logprob: -17.2500057220459
    10. '``' → logprob: -17.5625057220459

Token 1084: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.088346359931165e-07
    2. '```' → logprob: -14.500000953674316
    3. ')' → logprob: -15.625000953674316
    4. '   ' → logprob: -16.5
    5. ' ' → logprob: -16.875
    6. '۹' → logprob: -17.375
    7. '९' → logprob: -17.5
    8. '
' → logprob: -17.75
    9. '৯' → logprob: -17.75
    10. '999' → logprob: -18.0

Token 1085: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11427123844623566
    2. '):' → logprob: -2.2392711639404297
    3. '       ' → logprob: -6.61427116394043
    4. ')' → logprob: -10.36427116394043
    5. ':' → logprob: -10.48927116394043
    6. '           ' → logprob: -11.23927116394043
    7. '):
' → logprob: -11.48927116394043
    8. ':
' → logprob: -11.48927116394043
    9. ' ):
' → logprob: -12.61427116394043
    10. '   ' → logprob: -12.86427116394043

Token 1086: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012797261297237128
    2. '       ' → logprob: -9.375127792358398
    3. '<|end|>' → logprob: -11.375127792358398
    4. '          ' → logprob: -11.750127792358398
    5. ' raise' → logprob: -12.125127792358398
    6. '               ' → logprob: -12.250127792358398
    7. '            ' → logprob: -13.000127792358398
    8. ',' → logprob: -13.375127792358398
    9. 'raise' → logprob: -13.375127792358398
    10. '<|end|>' → logprob: -13.500127792358398

Token 1087: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.025104975327849388
    2. ' raise' → logprob: -4.025104999542236
    3. '           ' → logprob: -5.025104999542236
    4. '	raise' → logprob: -8.650104522705078
    5. '```' → logprob: -9.275104522705078
    6. 'Raise' → logprob: -10.650104522705078
    7. '               ' → logprob: -11.025104522705078
    8. '       ' → logprob: -11.150104522705078
    9. '_raise' → logprob: -11.650104522705078
    10. 'raises' → logprob: -12.275104522705078

Token 1088: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -2.696889623621246e-06
    2. ' Value' → logprob: -13.00000286102295
    3. '_value' → logprob: -15.00000286102295
    4. 'value' → logprob: -18.250001907348633
    5. '_Value' → logprob: -18.250001907348633
    6. 'Range' → logprob: -18.375001907348633
    7. '	Value' → logprob: -19.375001907348633
    8. '<Value' → logprob: -19.875001907348633
    9. '```' → logprob: -20.125001907348633
    10. '.Value' → logprob: -20.125001907348633

Token 1089: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.39001625776290894
    2. 'alue' → logprob: -1.8900163173675537
    3. 'Value' → logprob: -1.8900163173675537
    4. 'rror' → logprob: -3.8900163173675537
    5. 'al' → logprob: -8.515016555786133
    6. 'ror' → logprob: -10.265016555786133
    7. 'l' → logprob: -11.015016555786133
    8. 'r' → logprob: -11.265016555786133
    9. 'LError' → logprob: -11.265016555786133
    10. 'n' → logprob: -11.515016555786133

Token 1090: '(f' (ID: 1526)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.003097858279943466
    2. '(' → logprob: -6.253098011016846
    3. '(f' → logprob: -6.753098011016846
    4. '(
' → logprob: -14.253097534179688
    5. '('' → logprob: -15.003097534179688
    6. '()' → logprob: -16.253097534179688
    7. 'f' → logprob: -16.378097534179688
    8. '("")' → logprob: -17.503097534179688
    9. '("'' → logprob: -18.503097534179688
    10. '(F' → logprob: -19.628097534179688

Token 1091: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09211805462837219
    2. 'f' → logprob: -2.46711802482605
    3. 'val' → logprob: -7.092118263244629
    4. 'Value' → logprob: -7.092118263244629
    5. 'Invalid' → logprob: -7.467118263244629
    6. '"value' → logprob: -7.592118263244629
    7. ' f' → logprob: -8.842118263244629
    8. '           ' → logprob: -9.217118263244629
    9. '("' → logprob: -9.967118263244629
    10. '       ' → logprob: -10.342118263244629

Token 1092: 'Value' (ID: 1638)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.37520912289619446
    2. 'Value' → logprob: -1.250209093093872
    3. '"' → logprob: -4.000209331512451
    4. 'Invalid' → logprob: -5.000209331512451
    5. 'Val' → logprob: -7.500209331512451
    6. ' val' → logprob: -8.500208854675293
    7. 'value' → logprob: -8.500208854675293
    8. '"value' → logprob: -8.625208854675293
    9. 'f' → logprob: -9.000208854675293
    10. 'Input' → logprob: -10.125208854675293

Token 1093: ' {' (ID: 354)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.09975169599056244
    2. ' val' → logprob: -3.3497517108917236
    3. ' not' → logprob: -3.5997517108917236
    4. ' out' → logprob: -3.7247517108917236
    5. 'must' → logprob: -5.5997514724731445
    6. ' {' → logprob: -6.7247514724731445
    7. ' <' → logprob: -6.8497514724731445
    8. 'val' → logprob: -7.5997514724731445
    9. '{' → logprob: -7.8497514724731445
    10. ' should' → logprob: -8.224751472473145

Token 1094: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.001177012687548995
    2. ' val' → logprob: -6.751176834106445
    3. '           ' → logprob: -12.376176834106445
    4. '       ' → logprob: -13.376176834106445
    5. '   ' → logprob: -15.251176834106445
    6. '	val' → logprob: -15.376176834106445
    7. '{' → logprob: -16.626176834106445
    8. '(val' → logprob: -16.751176834106445
    9. '      ' → logprob: -16.876176834106445
    10. '        ' → logprob: -17.001176834106445

Token 1095: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.03961717337369919
    2. ' must' → logprob: -4.03961706161499
    3. ' >' → logprob: -5.03961706161499
    4. '>' → logprob: -5.16461706161499
    5. ' not' → logprob: -5.78961706161499
    6. 'must' → logprob: -6.03961706161499
    7. ' <' → logprob: -6.16461706161499
    8. ')' → logprob: -7.03961706161499
    9. ' out' → logprob: -8.414617538452148
    10. '<' → logprob: -8.914617538452148

Token 1096: ' out' (ID: 842)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.33898112177848816
    2. ' out' → logprob: -2.3389811515808105
    3. ' not' → logprob: -2.7139811515808105
    4. '>' → logprob: -3.0889811515808105
    5. ' >' → logprob: -3.0889811515808105
    6. 'must' → logprob: -4.0889811515808105
    7. ' <' → logprob: -4.3389811515808105
    8. '<' → logprob: -6.0889811515808105
    9. 'not' → logprob: -7.7139811515808105
    10. ' outside' → logprob: -7.8389811515808105

Token 1097: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.9198582768440247
    2. '_of' → logprob: -1.0448582172393799
    3. 'of' → logprob: -1.4198582172393799
    4. '=' → logprob: -5.419858455657959
    5. '   ' → logprob: -6.419858455657959
    6. 'Of' → logprob: -6.919858455657959
    7. '-of' → logprob: -8.5448579788208
    8. '    ' → logprob: -8.6698579788208
    9. '_range' → logprob: -9.0448579788208
    10. '  ' → logprob: -9.2948579788208

Token 1098: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001805377542041242
    2. ' range' → logprob: -8.7501802444458
    3. 'bounds' → logprob: -11.6251802444458
    4. 'allowed' → logprob: -11.6251802444458
    5. '1' → logprob: -13.0001802444458
    6. 'valid' → logprob: -13.8751802444458
    7. '_range' → logprob: -14.7501802444458
    8. '	range' → logprob: -15.5001802444458
    9. 'bound' → logprob: -15.6251802444458
    10. ' valid' → logprob: -16.250181198120117

Token 1099: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.540005087852478
    2. ' (' → logprob: -1.040005087852478
    3. '1' → logprob: -2.9150052070617676
    4. ' for' → logprob: -5.165005207061768
    5. '")' → logprob: -6.540005207061768
    6. ')' → logprob: -6.665005207061768
    7. ',' → logprob: -8.41500473022461
    8. '       ' → logprob: -8.91500473022461
    9. 'for' → logprob: -9.04000473022461
    10. ':' → logprob: -9.16500473022461

Token 1100: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04900868609547615
    2. '1' → logprob: -3.04900860786438
    3. 'for' → logprob: -8.0490083694458
    4. ' (' → logprob: -9.9240083694458
    5. ')' → logprob: -10.6740083694458
    6. ' for' → logprob: -12.1740083694458
    7. ',' → logprob: -12.2990083694458
    8. '   ' → logprob: -12.2990083694458
    9. ' ' → logprob: -12.4240083694458
    10. '[' → logprob: -13.2990083694458

Token 1101: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.09098728001117706
    2. '<=' → logprob: -2.840987205505371
    3. ',' → logprob: -4.215987205505371
    4. '1' → logprob: -5.090987205505371
    5. ' <=' → logprob: -6.340987205505371
    6. '```' → logprob: -6.715987205505371
    7. '999' → logprob: -6.840987205505371
    8. '...' → logprob: -6.840987205505371
    9. '000' → logprob: -7.840987205505371
    10. '900' → logprob: -8.090987205505371

Token 1102: '999' (ID: 9130)
  Prédit: '999'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -16.25
    4. '9' → logprob: -16.25
    5. '```' → logprob: -17.0
    6. '
' → logprob: -18.875
    7. '99' → logprob: -19.0
    8. '100' → logprob: -19.0
    9. '=' → logprob: -19.375
    10. '  ' → logprob: -19.625

Token 1103: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00012892624363303185
    2. ')' → logprob: -9.000128746032715
    3. '):
' → logprob: -13.000128746032715
    4. '```' → logprob: -13.375128746032715
    5. '):' → logprob: -14.000128746032715
    6. ')
' → logprob: -14.500128746032715
    7. '   ' → logprob: -16.62512969970703
    8. '))' → logprob: -17.50012969970703
    9. ')`' → logprob: -17.50012969970703
    10. '``' → logprob: -17.62512969970703

Token 1104: '")

' (ID: 10822)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5087971687316895
    2. ')")
' → logprob: -1.2587971687316895
    3. '       ' → logprob: -2.7587971687316895
    4. '")' → logprob: -3.6337971687316895
    5. '")
' → logprob: -3.8837971687316895
    6. ')")' → logprob: -5.8837971687316895
    7. '")

' → logprob: -6.6337971687316895
    8. ')
' → logprob: -9.008796691894531
    9. '")
' → logprob: -9.758796691894531
    10. '   ' → logprob: -9.883796691894531

Token 1105: '       ' (ID: 309)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.12067678570747375
    2. 'result' → logprob: -2.3706767559051514
    3. '       ' → logprob: -4.7456769943237305
    4. 'res' → logprob: -5.3706769943237305
    5. 'count' → logprob: -6.1206769943237305
    6. 'rest' → logprob: -6.6206769943237305
    7. 'counts' → logprob: -7.2456769943237305
    8. 'parts' → logprob: -7.4956769943237305
    9. 'multip' → logprob: -7.6206769943237305
    10. '_letters' → logprob: -7.7456769943237305

Token 1106: ' parts' (ID: 7881)
  Prédit: 'letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -0.010455078445374966
    2. 'result' → logprob: -4.760455131530762
    3. 'res' → logprob: -7.260455131530762
    4. 'remaining' → logprob: -7.385455131530762
    5. 'digits' → logprob: -8.635455131530762
    6. 'count' → logprob: -9.010455131530762
    7. 'parts' (adapté à ' parts') → logprob: -9.510455131530762
    8. 'counts' → logprob: -10.010455131530762
    9. 'values' → logprob: -11.135455131530762
    10. 'results' → logprob: -11.635455131530762

Token 1107: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1301429122686386
    2. ' =' → logprob: -2.1301429271698
    3. '=[]' → logprob: -6.130142688751221
    4. ':' → logprob: -7.130142688751221
    5. '=[]
' → logprob: -8.505143165588379
    6. '   ' → logprob: -10.755143165588379
    7. ',' → logprob: -12.755143165588379
    8. '       ' → logprob: -13.755143165588379
    9. '=[]
' → logprob: -13.880143165588379
    10. '=[],' → logprob: -13.880143165588379

Token 1108: ' List' (ID: 2655)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -8.673547563375905e-05
    2. '[]
' → logprob: -10.000086784362793
    3. 'List' → logprob: -10.500086784362793
    4. ' []' → logprob: -12.000086784362793
    5. '[]

' → logprob: -12.625086784362793
    6. 'list' → logprob: -13.250086784362793
    7. '[]}' → logprob: -14.125086784362793
    8. '=[]' → logprob: -14.125086784362793
    9. '[List' → logprob: -14.750086784362793
    10. '[])' → logprob: -15.500086784362793

Token 1109: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003069925820454955
    2. 'MC' → logprob: -6.503069877624512
    3. '=' → logprob: -7.128069877624512
    4. ' =' → logprob: -8.253069877624512
    5. '[str' → logprob: -8.378069877624512
    6. '[int' → logprob: -8.378069877624512
    7. '[
' → logprob: -11.253069877624512
    8. ' MC' → logprob: -11.503069877624512
    9. '_MC' → logprob: -11.753069877624512
    10. '[M' → logprob: -12.378069877624512

Token 1110: 'MC' (ID: 15190)
  Prédit: 'MC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MC' → logprob: -8.363617962459102e-05
    2. 'Tuple' → logprob: -9.625083923339844
    3. 'str' → logprob: -11.750083923339844
    4. ' MC' → logprob: -12.250083923339844
    5. 'int' → logprob: -13.125083923339844
    6. 'M' → logprob: -13.750083923339844
    7. 'Optional' → logprob: -14.125083923339844
    8. '_MC' → logprob: -14.750083923339844
    9. 'tuple' → logprob: -15.750083923339844
    10. 'mc' → logprob: -16.250083923339844

Token 1111: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -4.847109812544659e-05
    2. 'x' → logprob: -11.625048637390137
    3. 'CX' → logprob: -11.750048637390137
    4. 'C' → logprob: -12.562548637390137
    5. 'XI' → logprob: -12.687548637390137
    6. 'XL' → logprob: -12.750048637390137
    7. 'class' → logprob: -12.937548637390137
    8. 'XC' → logprob: -13.000048637390137
    9. '_X' → logprob: -13.437548637390137
    10. '_' → logprob: -13.625048637390137

Token 1112: 'IL' (ID: 2654)
  Prédit: 'IL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -8.41129949549213e-05
    2. 'I' → logprob: -9.750083923339844
    3. '_IL' → logprob: -11.375083923339844
    4. 'ILE' → logprob: -12.125083923339844
    5. 'CL' → logprob: -13.750083923339844
    6. '	IL' → logprob: -13.875083923339844
    7. 'IC' → logprob: -13.875083923339844
    8. 'X' → logprob: -14.375083923339844
    9. '
' → logprob: -14.500083923339844
    10. 'ИЛ' → logprob: -14.625083923339844

Token 1113: 'etter' (ID: 30747)
  Prédit: 'etter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etter' → logprob: -0.0013295256067067385
    2. 'Letter' → logprob: -7.62632942199707
    3. 'e' → logprob: -8.25132942199707
    4. 'et' → logprob: -8.50132942199707
    5. 'X' → logprob: -8.62632942199707
    6. 'ET' → logprob: -9.87632942199707
    7. 'ett' → logprob: -11.00132942199707
    8. 'L' → logprob: -11.37632942199707
    9. 'E' → logprob: -11.50132942199707
    10. 'EL' → logprob: -11.62632942199707

Token 1114: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0128140514716506
    2. '=' → logprob: -4.512814044952393
    3. ']=' → logprob: -6.387814044952393
    4. ' =' → logprob: -9.51281452178955
    5. '[]' → logprob: -12.38781452178955
    6. '[' → logprob: -13.38781452178955
    7. '=[]' → logprob: -13.38781452178955
    8. ')' → logprob: -14.13781452178955
    9. '"]' → logprob: -15.01281452178955
    10. '   ' → logprob: -15.76281452178955

Token 1115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150877207517624
    2. ' =' → logprob: -4.018150806427002
    3. '=[]' → logprob: -14.51815128326416
    4. '       ' → logprob: -15.64315128326416
    5. '=[]
' → logprob: -16.143150329589844
    6. '[]' → logprob: -16.143150329589844
    7. '=
' → logprob: -16.643150329589844
    8. '   ' → logprob: -17.393150329589844
    9. ']' → logprob: -17.893150329589844
    10. ']=' → logprob: -18.518150329589844

Token 1116: ' []

' (ID: 32833)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.2523591220378876
    2. '[]' → logprob: -1.75235915184021
    3. '[]

' → logprob: -3.00235915184021
    4. '[]"' → logprob: -16.75235939025879
    5. ' []
' → logprob: -17.00235939025879
    6. '[])
' → logprob: -18.12735939025879
    7. '   ' → logprob: -19.25235939025879
    8. '=[]
' → logprob: -19.25235939025879
    9. '[]}' → logprob: -19.25235939025879
    10. '[],
' → logprob: -19.50235939025879

Token 1117: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002775512868538499
    2. '       ' → logprob: -6.8777756690979
    3. 'remaining' → logprob: -7.2527756690979
    4. ' for' → logprob: -7.8777756690979
    5. 'rest' → logprob: -8.002775192260742
    6. 'count' → logprob: -8.377775192260742
    7. 'val' → logprob: -10.377775192260742
    8. 'rem' → logprob: -11.002775192260742
    9. 'value' → logprob: -11.377775192260742
    10. 're' → logprob: -11.752775192260742

Token 1118: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03066200017929077
    2. 'remaining' → logprob: -3.7806620597839355
    3. '       ' → logprob: -5.7806620597839355
    4. 're' → logprob: -5.7806620597839355
    5. 'remain' → logprob: -7.6556620597839355
    6. 'rem' → logprob: -8.280661582946777
    7. 'count' → logprob: -8.530661582946777
    8. 'multip' → logprob: -9.530661582946777
    9. 'rest' → logprob: -9.655661582946777
    10. 'temp' → logprob: -9.780661582946777

Token 1119: ' letter' (ID: 10263)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.0020163096487522125
    2. 'ltr' → logprob: -7.002016544342041
    3. 'ch' → logprob: -7.502016544342041
    4. 'l' → logprob: -8.002016067504883
    5. 'cls' → logprob: -9.377016067504883
    6. 'lt' → logprob: -10.377016067504883
    7. 'lc' → logprob: -10.377016067504883
    8. ' letter' → logprob: -11.002016067504883
    9. 'char' → logprob: -11.002016067504883
    10. '(letter' → logprob: -11.252016067504883

Token 1120: '_char' (ID: 23398)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3280816376209259
    2. '_char' → logprob: -1.4530816078186035
    3. 'in' → logprob: -3.4530816078186035
    4. '_letter' → logprob: -4.9530816078186035
    5. ',' → logprob: -5.7030816078186035
    6. '_class' → logprob: -6.2030816078186035
    7. 'char' → logprob: -7.3280816078186035
    8. '_cls' → logprob: -7.4530816078186035
    9. '_' → logprob: -8.328082084655762
    10. 'class' → logprob: -9.453082084655762

Token 1121: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.474078893661499
    2. 'in' → logprob: -0.974078893661499
    3. ',' → logprob: -14.099079132080078
    4. '	in' → logprob: -14.974079132080078
    5. '_in' → logprob: -15.099079132080078
    6. '       ' → logprob: -15.599079132080078
    7. ' ' → logprob: -16.474079132080078
    8. '   ' → logprob: -16.724079132080078
    9. '        ' → logprob: -16.849079132080078
    10. 'In' → logprob: -17.099079132080078

Token 1122: ' MC' (ID: 31263)
  Prédit: '_MC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MC' → logprob: -0.9261687994003296
    2. 'MC' → logprob: -1.0511687994003296
    3. '['' → logprob: -2.051168918609619
    4. ''' → logprob: -3.176168918609619
    5. '_mc' → logprob: -3.426168918609619
    6. ''M' → logprob: -3.801168918609619
    7. ''m' → logprob: -4.301168918609619
    8. 'mc' → logprob: -5.176168918609619
    9. '_M' → logprob: -5.551168918609619
    10. ' MC' → logprob: -6.301168918609619

Token 1123: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.4616156220436096
    2. '_X' → logprob: -1.2116155624389648
    3. '['' → logprob: -3.211615562438965
    4. 'XL' → logprob: -4.461615562438965
    5. '_LE' → logprob: -5.711615562438965
    6. 'XI' → logprob: -5.836615562438965
    7. ''' → logprob: -6.086615562438965
    8. '`' → logprob: -6.086615562438965
    9. '_letter' → logprob: -6.586615562438965
    10. '_letters' → logprob: -6.711615562438965

Token 1124: 'IL' (ID: 2654)
  Prédit: 'IL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.007593730464577675
    2. '_IL' → logprob: -5.882593631744385
    3. 'String' → logprob: -6.382593631744385
    4. 'I' → logprob: -6.757593631744385
    5. 'MC' → logprob: -7.882593631744385
    6. 'Letter' → logprob: -8.007594108581543
    7. 'X' → logprob: -8.382594108581543
    8. '_letter' → logprob: -8.757594108581543
    9. 'XL' → logprob: -9.382594108581543
    10. 'string' → logprob: -9.382594108581543

Token 1125: 'etter' (ID: 30747)
  Prédit: 'Letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Letter' → logprob: -0.5483059287071228
    2. 'etter' → logprob: -1.0483059883117676
    3. 'IL' → logprob: -2.9233059883117676
    4. 'String' → logprob: -5.798305988311768
    5. 'X' → logprob: -6.173305988311768
    6. 'MC' → logprob: -6.298305988311768
    7. 'I' → logprob: -6.548305988311768
    8. '_letter' → logprob: -6.673305988311768
    9. 'letter' → logprob: -6.798305988311768
    10. 'Il' → logprob: -7.048305988311768

Token 1126: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -5.319370302458992e-06
    2. '.' → logprob: -12.625005722045898
    3. '   ' → logprob: -13.375005722045898
    4. ' .' → logprob: -15.125005722045898
    5. '_letter' → logprob: -16.5000057220459
    6. ']._' → logprob: -18.1250057220459
    7. ' ' → logprob: -18.2500057220459
    8. '."_' → logprob: -18.6250057220459
    9. '  ' → logprob: -19.2500057220459
    10. '.\' → logprob: -19.3750057220459

Token 1127: 'letter' (ID: 12793)
  Prédit: '_letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letter' → logprob: -0.0031825865153223276
    2. 'letter' → logprob: -5.753182411193848
    3. '```' → logprob: -13.253182411193848
    4. '_letters' → logprob: -13.753182411193848
    5. 'LETTER' → logprob: -13.878182411193848
    6. ' _' → logprob: -15.003182411193848
    7. 'class' → logprob: -15.628182411193848
    8. '   ' → logprob: -16.253183364868164
    9. '-letter' → logprob: -16.378183364868164
    10. '\' → logprob: -16.503183364868164

Token 1128: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.0011709370883181691
    2. 'order' → logprob: -6.751171112060547
    3. 'Order' → logprob: -15.126171112060547
    4. '_ORDER' → logprob: -16.001171112060547
    5. 'ORDER' → logprob: -16.751171112060547
    6. '   ' → logprob: -17.001171112060547
    7. ' order' → logprob: -17.001171112060547
    8. '
' → logprob: -17.126171112060547
    9. '```' → logprob: -17.251171112060547
    10. '_orders' → logprob: -17.626171112060547

Token 1129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0924314334988594
    2. ':
' → logprob: -2.4674315452575684
    3. '[::-' → logprob: -5.842431545257568
    4. '       ' → logprob: -9.09243106842041
    5. ' :' → logprob: -9.09243106842041
    6. '[' → logprob: -9.09243106842041
    7. '=' → logprob: -9.84243106842041
    8. '[:' → logprob: -9.96743106842041
    9. 'in' → logprob: -10.84243106842041
    10. ' in' → logprob: -10.84243106842041

Token 1130: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02818574383854866
    2. 'count' → logprob: -3.6531858444213867
    3. 'amount' → logprob: -8.153185844421387
    4. '   ' → logprob: -8.403185844421387
    5. 'div' → logprob: -8.403185844421387
    6. 'value' → logprob: -8.403185844421387
    7. 'val' → logprob: -8.653185844421387
    8. ' count' → logprob: -8.903185844421387
    9. 'num' → logprob: -9.653185844421387
    10. '#' → logprob: -9.778185844421387

Token 1131: ' base' (ID: 3611)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.014843885786831379
    2. 'mult' → logprob: -5.014843940734863
    3. 'div' → logprob: -6.014843940734863
    4. 'digit' → logprob: -6.139843940734863
    5. 'value' → logprob: -7.139843940734863
    6. 'num' → logprob: -7.264843940734863
    7. 'letter' → logprob: -7.889843940734863
    8. 'quot' → logprob: -8.139843940734863
    9. 'quantity' → logprob: -8.139843940734863
    10. 'amount' → logprob: -8.514843940734863

Token 1132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19260011613368988
    2. '_value' → logprob: -2.0676000118255615
    3. ' =' → logprob: -3.3176000118255615
    4. 'value' → logprob: -4.692600250244141
    5. '_val' → logprob: -5.817600250244141
    6. 'val' → logprob: -9.56760025024414
    7. ',' → logprob: -9.69260025024414
    8. '_values' → logprob: -9.94260025024414
    9. '_' → logprob: -10.06760025024414
    10. '_count' → logprob: -10.94260025024414

Token 1133: ' MC' (ID: 31263)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.29880085587501526
    2. '10' → logprob: -1.9238008260726929
    3. '100' → logprob: -2.7988009452819824
    4. 'val' → logprob: -4.173800945281982
    5. '_MC' → logprob: -4.173800945281982
    6. 'MC' → logprob: -4.298800945281982
    7. '_M' → logprob: -6.173800945281982
    8. '_' → logprob: -6.423800945281982
    9. ' cls' → logprob: -7.048800945281982
    10. '_cls' → logprob: -7.923800945281982

Token 1134: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0001612267515156418
    2. '           ' → logprob: -10.125161170959473
    3. '   ' → logprob: -10.500161170959473
    4. '       ' → logprob: -11.250161170959473
    5. 'letter' → logprob: -11.375161170959473
    6. '1' → logprob: -11.750161170959473
    7. '_letter' → logprob: -11.750161170959473
    8. 'C' → logprob: -12.125161170959473
    9. '_X' → logprob: -12.250161170959473
    10. '
' → logprob: -12.250161170959473

Token 1135: 'IL' (ID: 2654)
  Prédit: 'IL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.061652787029743195
    2. 'I' → logprob: -3.311652898788452
    3. 'X' → logprob: -3.936652898788452
    4. '_IL' → logprob: -6.436652660369873
    5. 'Letter' → logprob: -7.686652660369873
    6. 'Il' → logprob: -8.186653137207031
    7. 'il' → logprob: -8.186653137207031
    8. 'letter' → logprob: -8.186653137207031
    9. '_letter' → logprob: -8.811653137207031
    10. 'L' → logprob: -9.186653137207031

Token 1136: 'etter' (ID: 30747)
  Prédit: 'etter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'etter' → logprob: -0.0017383632948622108
    2. 'Letter' → logprob: -6.876738548278809
    3. 'et' → logprob: -7.751738548278809
    4. 'X' → logprob: -9.251738548278809
    5. 'I' → logprob: -10.126738548278809
    6. 'e' → logprob: -10.626738548278809
    7. 'letter' → logprob: -11.251738548278809
    8. 'eter' → logprob: -11.376738548278809
    9. 'ET' → logprob: -11.501738548278809
    10. 'C' → logprob: -11.876738548278809

Token 1137: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.08102573454380035
    2. '_letter' → logprob: -2.7060258388519287
    3. '_values' → logprob: -4.83102560043335
    4. '.' → logprob: -6.58102560043335
    5. '_value' → logprob: -7.08102560043335
    6. '_' → logprob: -8.206026077270508
    7. '_letters' → logprob: -8.706026077270508
    8. '   ' → logprob: -9.206026077270508
    9. '```' → logprob: -10.206026077270508
    10. '_VALUES' → logprob: -10.331026077270508

Token 1138: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -1.1041145626222715e-05
    2. '_letter' → logprob: -12.375011444091797
    3. 'LETTER' → logprob: -13.000011444091797
    4. '_values' → logprob: -13.125011444091797
    5. 'values' → logprob: -13.750011444091797
    6. 'value' → logprob: -14.500011444091797
    7. ' letter' → logprob: -14.500011444091797
    8. '(letter' → logprob: -14.875011444091797
    9. '   ' → logprob: -18.625011444091797
    10. 'X' → logprob: -18.625011444091797

Token 1139: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.000735177774913609
    2. 'values' → logprob: -7.250735282897949
    3. '_order' → logprob: -11.00073528289795
    4. 'order' → logprob: -12.12573528289795
    5. 'Values' → logprob: -12.87573528289795
    6. 'VALUES' → logprob: -16.375734329223633
    7. '_VALUES' → logprob: -16.500734329223633
    8. '_value' → logprob: -16.500734329223633
    9. '   ' → logprob: -17.000734329223633
    10. '```' → logprob: -17.250734329223633

Token 1140: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '           ' → logprob: -14.750000953674316
    3. '```' → logprob: -15.625000953674316
    4. '       ' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.625001907348633
    6. '=' → logprob: -16.875001907348633
    7. ' [' → logprob: -17.375001907348633
    8. '
' → logprob: -17.500001907348633
    9. 'letter' → logprob: -17.875001907348633
    10. '[
' → logprob: -17.875001907348633

Token 1141: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.00019722258730325848
    2. '[' → logprob: -9.375197410583496
    3. 'cls' → logprob: -9.500197410583496
    4. ' letter' → logprob: -10.875197410583496
    5. '(letter' → logprob: -11.625197410583496
    6. '```' → logprob: -12.875197410583496
    7. '   ' → logprob: -13.625197410583496
    8. '
' → logprob: -13.750197410583496
    9. '           ' → logprob: -13.875197410583496
    10. '_letter' → logprob: -14.125197410583496

Token 1142: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.01815076172351837
    2. 'char' → logprob: -4.018150806427002
    3. 'Char' → logprob: -15.018150329589844
    4. '_CHAR' → logprob: -15.518150329589844
    5. '<char' → logprob: -16.643150329589844
    6. '```' → logprob: -16.643150329589844
    7. '_chars' → logprob: -17.393150329589844
    8. '.char' → logprob: -17.518150329589844
    9. '-char' → logprob: -17.643150329589844
    10. 'letter' → logprob: -17.643150329589844

Token 1143: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8524162769317627
    2. '
' → logprob: -0.9774162769317627
    3. ']' → logprob: -2.6024162769317627
    4. ']
' → logprob: -2.6024162769317627
    5. '               ' → logprob: -4.227416038513184
    6. '            
' → logprob: -4.727416038513184
    7. ')' → logprob: -5.227416038513184
    8. ')
' → logprob: -5.227416038513184
    9. '       ' → logprob: -5.352416038513184
    10. '  
' → logprob: -6.477416038513184

Token 1144: '           ' (ID: 352)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.08916868269443512
    2. '           ' → logprob: -2.4641687870025635
    3. ' count' → logprob: -8.714168548583984
    4. '       ' → logprob: -11.089168548583984
    5. 'num' → logprob: -12.089168548583984
    6. 'value' → logprob: -12.214168548583984
    7. '	count' → logprob: -12.339168548583984
    8. 'quantity' → logprob: -12.464168548583984
    9. 'n' → logprob: -12.589168548583984
    10. 'div' → logprob: -12.589168548583984

Token 1145: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0005306334351189435
    2. ' count' → logprob: -8.500530242919922
    3. '           ' → logprob: -8.875530242919922
    4. 'cnt' → logprob: -9.625530242919922
    5. 'digit' → logprob: -9.750530242919922
    6. 'num' → logprob: -10.375530242919922
    7. 'n' → logprob: -11.750530242919922
    8. 'quot' → logprob: -11.875530242919922
    9. '               ' → logprob: -12.375530242919922
    10. 'quantity' → logprob: -12.500530242919922

Token 1146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16064102947711945
    2. ' =' → logprob: -1.910641074180603
    3. ',' → logprob: -7.785641193389893
    4. '=int' → logprob: -14.785640716552734
    5. '=
' → logprob: -15.285640716552734
    6. ' ' → logprob: -15.785640716552734
    7. '   ' → logprob: -16.035640716552734
    8. ')' → logprob: -16.660640716552734
    9. ' ,' → logprob: -16.910640716552734
    10. '	' → logprob: -17.035640716552734

Token 1147: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.3868831992149353
    2. 'val' → logprob: -1.13688325881958
    3. '(val' → logprob: -11.511882781982422
    4. '	val' → logprob: -14.261882781982422
    5. '[val' → logprob: -14.386882781982422
    6. '```' → logprob: -14.636882781982422
    7. ' (' → logprob: -16.261882781982422
    8. '0' → logprob: -16.386882781982422
    9. '_val' → logprob: -16.511882781982422
    10. ',val' → logprob: -17.011882781982422

Token 1148: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1640324741601944
    2. '//' → logprob: -1.9140324592590332
    3. '//=' → logprob: -5.664032459259033
    4. '           ' → logprob: -9.164032936096191
    5. '=' → logprob: -9.664032936096191
    6. '<|end|>' → logprob: -10.539032936096191
    7. '<|end|>' → logprob: -10.664032936096191
    8. '#' → logprob: -11.039032936096191
    9. '
' → logprob: -11.164032936096191
    10. '            
' → logprob: -11.664032936096191

Token 1149: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -7.505351095460355e-05
    2. ' base' → logprob: -9.500075340270996
    3. '(base' → logprob: -16.25007438659668
    4. '           ' → logprob: -18.00007438659668
    5. '   ' → logprob: -18.12507438659668
    6. '100' → logprob: -19.25007438659668
    7. ' ' → logprob: -19.37507438659668
    8. '
' → logprob: -19.87507438659668
    9. '	base' → logprob: -20.00007438659668
    10. '       ' → logprob: -20.87507438659668

Token 1150: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13420379161834717
    2. '            
' → logprob: -3.1342039108276367
    3. ' 
' → logprob: -3.6342039108276367
    4. '<|end|>' → logprob: -4.134203910827637
    5. ' ' → logprob: -4.384203910827637
    6. '            ' → logprob: -4.884203910827637
    7. '
' → logprob: -5.009203910827637
    8. '       ' → logprob: -6.009203910827637
    9. ')' → logprob: -6.759203910827637
    10. '  
' → logprob: -7.134203910827637

Token 1151: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06687279790639877
    2. 'if' → logprob: -3.4418728351593018
    3. 'val' → logprob: -3.6918728351593018
    4. ' if' → logprob: -4.941872596740723
    5. ' val' → logprob: -7.691872596740723
    6. '            
' → logprob: -10.316872596740723
    7. '	       ' → logprob: -10.566872596740723
    8. '```' → logprob: -10.941872596740723
    9. ' ' → logprob: -11.441872596740723
    10. '       ' → logprob: -11.441872596740723

Token 1152: ' val' (ID: 1459)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16613705456256866
    2. '           ' → logprob: -2.1661369800567627
    3. 'val' (adapté à ' val') → logprob: -3.5411369800567627
    4. ' if' → logprob: -4.666137218475342
    5. ' val' → logprob: -9.791136741638184
    6. '       ' → logprob: -13.416136741638184
    7. '               ' → logprob: -14.291136741638184
    8. '```' → logprob: -14.291136741638184
    9. '
' → logprob: -14.666136741638184
    10. '            ' → logprob: -15.166136741638184

Token 1153: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.009344220161438
    2. '%=' → logprob: -1.009344220161438
    3. ' %=' → logprob: -1.509344220161438
    4. '//=' → logprob: -3.1343441009521484
    5. ' =' → logprob: -5.884344100952148
    6. '-=' → logprob: -6.384344100952148
    7. '%' → logprob: -6.884344100952148
    8. ' -=' → logprob: -7.634344100952148
    9. ' //' → logprob: -7.634344100952148
    10. '   ' → logprob: -10.759344100952148

Token 1154: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.1637164789135568e-05
    2. ' val' → logprob: -11.375011444091797
    3. '           ' → logprob: -17.125011444091797
    4. '	val' → logprob: -18.000011444091797
    5. '[val' → logprob: -18.625011444091797
    6. '(val' → logprob: -19.750011444091797
    7. 'v' → logprob: -21.125011444091797
    8. 'valu' → logprob: -21.250011444091797
    9. 'vali' → logprob: -21.500011444091797
    10. ',val' → logprob: -21.625011444091797

Token 1155: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0067156096920371056
    2. ' %' → logprob: -5.006715774536133
    3. ' %=' → logprob: -16.506715774536133
    4. '%d' → logprob: -16.756715774536133
    5. '%i' → logprob: -17.006715774536133
    6. '%=' → logprob: -17.256715774536133
    7. '%
' → logprob: -18.006715774536133
    8. '%s' → logprob: -18.256715774536133
    9. ' ' → logprob: -18.381715774536133
    10. '%b' → logprob: -18.881715774536133

Token 1156: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -3.547789674485102e-05
    2. ' base' → logprob: -10.250035285949707
    3. '           ' → logprob: -18.750036239624023
    4. '   ' → logprob: -19.000036239624023
    5. '(base' → logprob: -19.875036239624023
    6. '
' → logprob: -21.125036239624023
    7. ' ' → logprob: -22.000036239624023
    8. '  ' → logprob: -22.250036239624023
    9. '	base' → logprob: -22.750036239624023
    10. '       ' → logprob: -22.750036239624023

Token 1157: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010628487507347018
    2. '       ' → logprob: -10.375105857849121
    3. '            
' → logprob: -11.000105857849121
    4. '
' → logprob: -11.125105857849121
    5. 'if' → logprob: -11.250105857849121
    6. '<|end|>' → logprob: -11.750105857849121
    7. '	       ' → logprob: -11.875105857849121
    8. ' if' → logprob: -12.875105857849121
    9. '   ' → logprob: -13.000105857849121
    10. '		' → logprob: -13.125105857849121

Token 1158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006109386216849089
    2. 'if' → logprob: -5.131109237670898
    3. ' if' → logprob: -9.256109237670898
    4. '       ' → logprob: -9.881109237670898
    5. '
' → logprob: -11.131109237670898
    6. '	       ' → logprob: -11.881109237670898
    7. '   ' → logprob: -12.006109237670898
    8. '            
' → logprob: -13.256109237670898
    9. '```' → logprob: -14.006109237670898
    10. '<|end|>' → logprob: -14.131109237670898

Token 1159: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.39282920956611633
    2. '           ' → logprob: -1.142829179763794
    3. ' if' → logprob: -5.142829418182373
    4. '   ' → logprob: -10.392828941345215
    5. '	if' → logprob: -11.142828941345215
    6. '       ' → logprob: -11.142828941345215
    7. '            
' → logprob: -11.392828941345215
    8. '```' → logprob: -11.517828941345215
    9. '
' → logprob: -11.767828941345215
    10. '	       ' → logprob: -12.767828941345215

Token 1160: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0024781543761491776
    2. ' count' → logprob: -6.002478122711182
    3. '           ' → logprob: -13.25247859954834
    4. '1' → logprob: -14.62747859954834
    5. '               ' → logprob: -15.62747859954834
    6. '0' → logprob: -16.877477645874023
    7. ' ' → logprob: -16.877477645874023
    8. '   ' → logprob: -17.502477645874023
    9. '(count' → logprob: -18.002477645874023
    10. '	count' → logprob: -19.252477645874023

Token 1161: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03373076021671295
    2. ' >' → logprob: -3.4087307453155518
    3. '!=' → logprob: -10.283730506896973
    4. ' !=' → logprob: -10.658730506896973
    5. '==' → logprob: -11.658730506896973
    6. '>=' → logprob: -12.033730506896973
    7. '   ' → logprob: -12.658730506896973
    8. '<|end|>' → logprob: -12.908730506896973
    9. ' ==' → logprob: -13.408730506896973
    10. ':' → logprob: -13.908730506896973

Token 1162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025508119724690914
    2. '9' → logprob: -6.0025506019592285
    3. ' ' → logprob: -9.502551078796387
    4. '   ' → logprob: -15.752551078796387
    5. '=' → logprob: -15.877551078796387
    6. '```' → logprob: -16.62755012512207
    7. 'zero' → logprob: -17.56505012512207
    8. '  ' → logprob: -17.81505012512207
    9. '۰' → logprob: -17.81505012512207
    10. '	' → logprob: -18.62755012512207

Token 1163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005935670807957649
    2. '9' → logprob: -5.1309356689453125
    3. ' ' → logprob: -11.880935668945312
    4. '   ' → logprob: -16.505935668945312
    5. '=' → logprob: -16.943435668945312
    6. '```' → logprob: -17.130935668945312
    7. 'zero' → logprob: -17.818435668945312
    8. '
' → logprob: -18.568435668945312
    9. '۰' → logprob: -18.755935668945312
    10. '1' → logprob: -18.818435668945312

Token 1164: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22623847424983978
    2. ':
' → logprob: -1.851238489151001
    3. '               ' → logprob: -3.351238489151001
    4. '           ' → logprob: -4.851238250732422
    5. ' and' → logprob: -7.101238250732422
    6. ',' → logprob: -7.101238250732422
    7. '<|end|>' → logprob: -8.101238250732422
    8. '):
' → logprob: -8.851238250732422
    9. '       ' → logprob: -9.351238250732422
    10. '=' → logprob: -9.476238250732422

Token 1165: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005305858328938484
    2. '           ' → logprob: -5.880305767059326
    3. ' parts' → logprob: -6.380305767059326
    4. ' if' → logprob: -7.380305767059326
    5. 'parts' → logprob: -10.005306243896484
    6. '<|end|>' → logprob: -10.255306243896484
    7. '```' → logprob: -10.880306243896484
    8. '   ' → logprob: -11.380306243896484
    9. 'if' → logprob: -11.505306243896484
    10. ' and' → logprob: -11.505306243896484

Token 1166: ' letter' (ID: 10263)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.013328462839126587
    2. ' parts' → logprob: -4.513328552246094
    3. '               ' → logprob: -6.888328552246094
    4. '           ' → logprob: -7.013328552246094
    5. 'letter' (adapté à ' letter') → logprob: -8.388328552246094
    6. 'part' → logprob: -10.013328552246094
    7. 'letters' → logprob: -10.138328552246094
    8. '_parts' → logprob: -11.138328552246094
    9. '   ' → logprob: -11.763328552246094
    10. '(parts' → logprob: -11.888328552246094

Token 1167: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -0.04258665069937706
    2. '_class' → logprob: -3.4175865650177
    3. '_cls' → logprob: -5.542586803436279
    4. '_char' → logprob: -5.792586803436279
    5. 'obj' → logprob: -7.292586803436279
    6. '=' → logprob: -7.542586803436279
    7. 'class' → logprob: -8.417586326599121
    8. ' =' → logprob: -8.542586326599121
    9. '_classes' → logprob: -8.792586326599121
    10. 'Obj' → logprob: -10.542586326599121

Token 1168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602344810962677
    2. ' =' → logprob: -1.9102344512939453
    3. '=_' → logprob: -11.535234451293945
    4. '   ' → logprob: -15.410234451293945
    5. '           ' → logprob: -16.035234451293945
    6. '=
' → logprob: -16.910234451293945
    7. '               ' → logprob: -16.910234451293945
    8. 'class' → logprob: -17.535234451293945
    9. '```' → logprob: -17.535234451293945
    10. '_cls' → logprob: -17.785234451293945

Token 1169: ' _' (ID: 1175)
  Prédit: '_LE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_LE' → logprob: -0.043570660054683685
    2. ' _' → logprob: -3.2935707569122314
    3. '_' → logprob: -5.418570518493652
    4. '_L' → logprob: -7.918570518493652
    5. '   ' → logprob: -8.043570518493652
    6. '_letter' → logprob: -9.418570518493652
    7. '_CLASS' → logprob: -9.543570518493652
    8. '_LITERAL' → logprob: -10.043570518493652
    9. '```' → logprob: -10.793570518493652
    10. '_LICENSE' → logprob: -10.918570518493652

Token 1170: 'LETTER' (ID: 162283)
  Prédit: 'LETTER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LETTER' → logprob: -0.006733249872922897
    2. '_LE' → logprob: -5.006733417510986
    3. ' LETTER' → logprob: -11.631732940673828
    4. 'LET' → logprob: -12.381732940673828
    5. '_letter' → logprob: -13.131732940673828
    6. 'letter' → logprob: -13.256732940673828
    7. '```' → logprob: -15.131732940673828
    8. '_LITERAL' → logprob: -15.381732940673828
    9. 'Letter' → logprob: -15.631732940673828
    10. '   ' → logprob: -15.756732940673828

Token 1171: '_CLASSES' (ID: 171569)
  Prédit: '_CLASSES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CLASSES' → logprob: -0.0052392068319022655
    2. 'CL' → logprob: -5.255239009857178
    3. '_CL' → logprob: -12.880239486694336
    4. 'Classes' → logprob: -13.630239486694336
    5. '_classes' → logprob: -14.130239486694336
    6. '{' → logprob: -15.755239486694336
    7. '   ' → logprob: -15.880239486694336
    8. '_CHAR' → logprob: -16.505239486694336
    9. '_CODES' → logprob: -16.505239486694336
    10. ' CL' → logprob: -16.880239486694336

Token 1172: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -17.0
    3. '[
' → logprob: -17.5
    4. '```' → logprob: -17.5
    5. 'letter' → logprob: -19.0
    6. '           ' → logprob: -19.0
    7. '       ' → logprob: -19.875
    8. ' [' → logprob: -20.0
    9. '	' → logprob: -20.125
    10. '(letter' → logprob: -20.5

Token 1173: 'letter' (ID: 12793)
  Prédit: 'letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.000566137779969722
    2. '[' → logprob: -7.625566005706787
    3. '(letter' → logprob: -9.750566482543945
    4. ' letter' → logprob: -11.000566482543945
    5. '```' → logprob: -13.500566482543945
    6. '[
' → logprob: -14.250566482543945
    7. '{' → logprob: -14.375566482543945
    8. '   ' → logprob: -15.500566482543945
    9. '_letter' → logprob: -16.000566482543945
    10. '{
' → logprob: -16.000566482543945

Token 1174: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.08195127546787262
    2. 'char' → logprob: -2.581951379776001
    3. '[' → logprob: -5.831951141357422
    4. 'letter' → logprob: -9.831951141357422
    5. '```' → logprob: -9.831951141357422
    6. 'Char' → logprob: -11.706951141357422
    7. '   ' → logprob: -13.581951141357422
    8. '_obj' → logprob: -13.706951141357422
    9. '<char' → logprob: -14.206951141357422
    10. '_CHAR' → logprob: -14.206951141357422

Token 1175: '](' (ID: 20614)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -1.652451464906335e-05
    2. '](' → logprob: -11.625016212463379
    3. ')(' → logprob: -12.625016212463379
    4. ' (' → logprob: -13.250016212463379
    5. '(' → logprob: -13.500016212463379
    6. '[count' → logprob: -15.375016212463379
    7. '(cnt' → logprob: -15.500016212463379
    8. '               ' → logprob: -16.000017166137695
    9. '(c' → logprob: -16.000017166137695
    10. '(counter' → logprob: -16.375017166137695

Token 1176: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: 0.0
    2. '               ' → logprob: -17.0
    3. '                   ' → logprob: -17.125
    4. ' count' → logprob: -17.625
    5. '[count' → logprob: -20.375
    6. '(count' → logprob: -20.75
    7. '           ' → logprob: -21.375
    8. '=count' → logprob: -22.0
    9. '                       ' → logprob: -22.375
    10. '
' → logprob: -23.0

Token 1177: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4980509579181671
    2. ')
' → logprob: -0.9980509281158447
    3. '               ' → logprob: -3.7480509281158447
    4. ')
' → logprob: -9.248050689697266
    5. '           ' → logprob: -10.748050689697266
    6. ')

' → logprob: -13.123050689697266
    7. ')`
' → logprob: -13.748050689697266
    8. '),' → logprob: -13.998050689697266
    9. '                   ' → logprob: -14.123050689697266
    10. ')add' → logprob: -14.373050689697266

Token 1178: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021557629224844277
    2. '           ' → logprob: -8.500215530395508
    3. '                   ' → logprob: -12.500215530395508
    4. '(parts' → logprob: -12.875215530395508
    5. 'parts' → logprob: -13.500215530395508
    6. '       ' → logprob: -14.125215530395508
    7. ' parts' → logprob: -14.250215530395508
    8. '   ' → logprob: -14.750215530395508
    9. '	           ' → logprob: -14.750215530395508
    10. '              ' → logprob: -14.875215530395508

Token 1179: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' (adapté à ' parts') → logprob: -0.8581920266151428
    2. ' parts' → logprob: -1.233191967010498
    3. '               ' → logprob: -1.358191967010498
    4. '           ' → logprob: -3.608191967010498
    5. '(parts' → logprob: -8.358192443847656
    6. '   ' → logprob: -9.358192443847656
    7. '                   ' → logprob: -10.233192443847656
    8. '_parts' → logprob: -10.358192443847656
    9. '       ' → logprob: -10.483192443847656
    10. '
' → logprob: -10.608192443847656

Token 1180: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003392767102923244
    2. '.' → logprob: -8.00033950805664
    3. '.app' → logprob: -13.25033950805664
    4. '.extend' → logprob: -14.12533950805664
    5. ' .' → logprob: -14.62533950805664
    6. '.Append' → logprob: -15.50033950805664
    7. '.py' → logprob: -15.87533950805664
    8. 'append' → logprob: -15.87533950805664
    9. '.ap' → logprob: -16.00033950805664
    10. '.setdefault' → logprob: -16.00033950805664

Token 1181: '(letter' (ID: 142899)
  Prédit: 'letter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letter' → logprob: -0.06205877289175987
    2. '(letter' → logprob: -2.812058687210083
    3. ' letter' → logprob: -9.312058448791504
    4. '(' → logprob: -14.437058448791504
    5. '_letter' → logprob: -16.31205940246582
    6. ')' → logprob: -16.56205940246582
    7. '```' → logprob: -17.18705940246582
    8. '(
' → logprob: -17.56205940246582
    9. 'Letter' → logprob: -18.93705940246582
    10. '               ' → logprob: -19.18705940246582

Token 1182: '_obj' (ID: 16879)
  Prédit: '_obj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_obj' → logprob: -0.00018029935017693788
    2. 'obj' → logprob: -8.6251802444458
    3. 'Obj' → logprob: -15.6251802444458
    4. '```' → logprob: -16.000181198120117
    5. '$obj' → logprob: -16.000181198120117
    6. 'objc' → logprob: -16.500181198120117
    7. '
' → logprob: -16.500181198120117
    8. '_' → logprob: -17.375181198120117
    9. '	obj' → logprob: -17.625181198120117
    10. '_object' → logprob: -18.250181198120117

Token 1183: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010786990635097027
    2. '       ' → logprob: -5.135787010192871
    3. '<|end|>' → logprob: -5.385787010192871
    4. '           ' → logprob: -9.385787010192871
    5. ')
' → logprob: -9.635787010192871
    6. ')return' → logprob: -10.510787010192871
    7. '<|end|>' → logprob: -11.010787010192871
    8. ' )' → logprob: -11.010787010192871
    9. '        
' → logprob: -11.635787010192871
    10. '
' → logprob: -12.135787010192871

Token 1184: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015288105234503746
    2. '
' → logprob: -4.64028787612915
    3. 'return' → logprob: -5.26528787612915
    4. ' return' → logprob: -8.140288352966309
    5. '<|end|>' → logprob: -11.140288352966309
    6. '
' → logprob: -11.640288352966309
    7. '	' → logprob: -11.765288352966309
    8. '```' → logprob: -12.140288352966309
    9. '   ' → logprob: -12.515288352966309
    10. '	return' → logprob: -12.515288352966309

Token 1185: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004428243264555931
    2. '       ' → logprob: -7.750442981719971
    3. ' return' → logprob: -11.875442504882812
    4. 'if' → logprob: -12.750442504882812
    5. '
' → logprob: -13.000442504882812
    6. '	return' → logprob: -16.875442504882812
    7. '   ' → logprob: -17.375442504882812
    8. '        
' → logprob: -19.250442504882812
    9. '```' → logprob: -19.250442504882812
    10. 'result' → logprob: -20.125442504882812

Token 1186: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -5.512236498361744e-07
    2. ' cls' → logprob: -14.500000953674316
    3. 'MC' → logprob: -21.25
    4. 'mc' → logprob: -22.5
    5. '   ' → logprob: -25.25
    6. '(cls' → logprob: -25.375
    7. 'classmethod' → logprob: -25.875
    8. '.cls' → logprob: -25.875
    9. '
' → logprob: -26.25
    10. 'cl' → logprob: -26.25

Token 1187: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.00011021859245374799
    2. '(' → logprob: -9.125110626220703
    3. '(
' → logprob: -14.500110626220703
    4. 'parts' → logprob: -15.000110626220703
    5. ' (' → logprob: -15.250110626220703
    6. '(part' → logprob: -17.000110626220703
    7. '([' → logprob: -17.500110626220703
    8. ' parts' → logprob: -18.125110626220703
    9. '(points' → logprob: -18.250110626220703
    10. '((' → logprob: -18.500110626220703

Token 1188: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.15310683415737e-05
    2. ')
' → logprob: -10.875021934509277
    3. '<|end|>' → logprob: -13.125021934509277
    4. ' )' → logprob: -15.375021934509277
    5. ')}' → logprob: -16.87502098083496
    6. '[' → logprob: -17.00002098083496
    7. ')return' → logprob: -17.00002098083496
    8. '),' → logprob: -17.12502098083496
    9. '   ' → logprob: -17.37502098083496
    10. ')#' → logprob: -17.50002098083496

Token 1189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12749715149402618
    2. 'def' → logprob: -2.1274971961975098
    3. '<|end|>' → logprob: -7.62749719619751
    4. ' def' → logprob: -10.377496719360352
    5. '	def' → logprob: -11.002496719360352
    6. ')' → logprob: -11.377496719360352
    7. '[' → logprob: -12.377496719360352
    8. '<|end|>' → logprob: -12.627496719360352
    9. '
' → logprob: -12.752496719360352
    10. '```' → logprob: -13.127496719360352

Token 1190: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011186229065060616
    2. '   ' → logprob: -4.511186122894287
    3. ' def' → logprob: -9.011186599731445
    4. '	def' → logprob: -11.386186599731445
    5. '    
' → logprob: -13.636186599731445
    6. '
' → logprob: -14.261186599731445
    7. ' ' → logprob: -14.636186599731445
    8. '  ' → logprob: -14.761186599731445
    9. '+' → logprob: -15.011186599731445
    10. '```' → logprob: -15.011186599731445

Token 1191: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01816457509994507
    2. ' __' → logprob: -4.01816463470459
    3. '_str' → logprob: -11.89316463470459
    4. 'def' → logprob: -12.26816463470459
    5. '.__' → logprob: -13.64316463470459
    6. 'str' → logprob: -13.89316463470459
    7. '___' → logprob: -14.14316463470459
    8. ' def' → logprob: -15.76816463470459
    9. 'to' → logprob: -16.143163681030273
    10. '   ' → logprob: -17.268163681030273

Token 1192: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -3.8889261304575484e-06
    2. 'eq' → logprob: -12.750003814697266
    3. 'init' → logprob: -14.750003814697266
    4. 'repr' → logprob: -14.750003814697266
    5. 'add' → logprob: -17.000003814697266
    6. ' str' → logprob: -18.375003814697266
    7. 'iter' → logprob: -19.750003814697266
    8. 'len' → logprob: -20.125003814697266
    9. 'lt' → logprob: -20.625003814697266
    10. '_str' → logprob: -21.125003814697266

Token 1193: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -1.2948405128554441e-05
    2. '(self' → logprob: -11.75001335144043
    3. '__' → logprob: -12.62501335144043
    4. '__(
' → logprob: -13.50001335144043
    5. '_(' → logprob: -15.25001335144043
    6. '__
' → logprob: -18.75001335144043
    7. '(' → logprob: -18.87501335144043
    8. '__('' → logprob: -19.50001335144043
    9. '__("' → logprob: -20.00001335144043
    10. '___' → logprob: -20.25001335144043

Token 1194: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: 0.0
    2. ')' → logprob: -17.25
    3. ' self' → logprob: -17.875
    4. '
' → logprob: -20.75
    5. '   ' → logprob: -21.5
    6. 'cls' → logprob: -22.625
    7. '0' → logprob: -22.75
    8. ')
' → logprob: -23.0
    9. 'def' → logprob: -23.125
    10. ' ' → logprob: -23.125

Token 1195: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009843206964433193
    2. '__' → logprob: -5.134843349456787
    3. 'self' → logprob: -5.634843349456787
    4. '(self' → logprob: -8.884842872619629
    5. '__)' → logprob: -9.509842872619629
    6. '):
' → logprob: -10.134842872619629
    7. ')(' → logprob: -10.259842872619629
    8. ')' → logprob: -11.259842872619629
    9. '__)
' → logprob: -11.259842872619629
    10. '__(
' → logprob: -11.884842872619629

Token 1196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0060397121123969555
    2. 'return' → logprob: -5.131039619445801
    3. 'self' → logprob: -9.7560396194458
    4. ' return' → logprob: -10.1310396194458
    5. '```' → logprob: -12.5060396194458
    6. '""' → logprob: -12.6310396194458
    7. '   ' → logprob: -13.3810396194458
    8. 'result' → logprob: -13.5060396194458
    9. '"' → logprob: -14.1310396194458
    10. '"""' → logprob: -14.2560396194458

Token 1197: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00016337241686414927
    2. '       ' → logprob: -9.500163078308105
    3. ' return' → logprob: -10.250163078308105
    4. '''.' → logprob: -10.625163078308105
    5. '   ' → logprob: -11.125163078308105
    6. '"' → logprob: -11.625163078308105
    7. '""' → logprob: -12.750163078308105
    8. 'result' → logprob: -13.750163078308105
    9. '```' → logprob: -14.500163078308105
    10. '	return' → logprob: -15.125163078308105

Token 1198: ' String' (ID: 1189)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -6.718606891809031e-05
    2. '       ' → logprob: -10.250066757202148
    3. 'result' → logprob: -10.500066757202148
    4. '   ' → logprob: -13.000066757202148
    5. ' return' → logprob: -13.250066757202148
    6. 'res' → logprob: -16.62506675720215
    7. 'ret' → logprob: -17.37506675720215
    8. '	return' → logprob: -18.00006675720215
    9. 'parts' → logprob: -18.62506675720215
    10. '           ' → logprob: -18.87506675720215

Token 1199: 'ify' (ID: 1985)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009574636816978455
    2. '       ' → logprob: -4.7595744132995605
    3. ' return' → logprob: -8.009574890136719
    4. 'result' → logprob: -8.634574890136719
    5. ' =' → logprob: -9.134574890136719
    6. '   ' → logprob: -9.134574890136719
    7. 'parts' → logprob: -9.509574890136719
    8. '=' → logprob: -10.134574890136719
    9. 'output' → logprob: -10.759574890136719
    10. 'repr' → logprob: -11.259574890136719

Token 1200: ' by' (ID: 656)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0029306337237358093
    2. '       ' → logprob: -6.127930641174316
    3. 'result' → logprob: -7.627930641174316
    4. ' return' → logprob: -8.377930641174316
    5. '   ' → logprob: -11.252930641174316
    6. '```' → logprob: -12.002930641174316
    7. '	return' → logprob: -12.752930641174316
    8. '
' → logprob: -13.002930641174316
    9. 'ret' → logprob: -13.377930641174316
    10. '           ' → logprob: -14.252930641174316

Token 1201: ' concaten' (ID: 121942)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.052846428006887436
    2. '''.' → logprob: -3.0528464317321777
    3. '"' → logprob: -5.677846431732178
    4. 'str' → logprob: -8.17784595489502
    5. ' ''.' → logprob: -8.55284595489502
    6. ' "".' → logprob: -9.17784595489502
    7. '""' → logprob: -9.30284595489502
    8. '   ' → logprob: -9.92784595489502
    9. ' return' → logprob: -10.17784595489502
    10. '```' → logprob: -10.30284595489502

Token 1202: 'ating' (ID: 1365)
  Prédit: 'ating'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ating' → logprob: -0.26159825921058655
    2. 'ate' → logprob: -1.5115982294082642
    3. 'ation' → logprob: -5.261598110198975
    4. '"' → logprob: -6.136598110198975
    5. '''.' → logprob: -7.386598110198975
    6. 'a' → logprob: -7.636598110198975
    7. 'at' → logprob: -7.886598110198975
    8. ''' → logprob: -8.011598587036133
    9. '```' → logprob: -8.886598587036133
    10. '   ' → logprob: -9.136598587036133

Token 1203: ' letter' (ID: 10263)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0006593000725843012
    2. 'return' → logprob: -7.500659465789795
    3. '''.' → logprob: -9.250658988952637
    4. '(str' → logprob: -12.125658988952637
    5. ' str' → logprob: -13.000658988952637
    6. '[str' → logprob: -13.750658988952637
    7. '"' → logprob: -14.375658988952637
    8. '   ' → logprob: -15.000658988952637
    9. '```' → logprob: -15.000658988952637
    10. '       ' → logprob: -16.000659942626953

Token 1204: ' objects' (ID: 11736)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.026420705020427704
    2. 'str' → logprob: -4.026420593261719
    3. '.str' → logprob: -6.651420593261719
    4. 'for' → logprob: -6.776420593261719
    5. '_obj' → logprob: -6.776420593261719
    6. '_objs' → logprob: -6.776420593261719
    7. 'objects' → logprob: -6.901420593261719
    8. '_str' → logprob: -7.651420593261719
    9. 'obj' → logprob: -8.151420593261719
    10. 'objs' → logprob: -8.276420593261719

Token 1205: ' string' (ID: 1621)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.013091410510241985
    2. '       ' → logprob: -4.513091564178467
    3. '   ' → logprob: -7.763091564178467
    4. 'for' → logprob: -8.013091087341309
    5. ' return' → logprob: -8.013091087341309
    6. '.join' → logprob: -8.388091087341309
    7. 'result' → logprob: -8.388091087341309
    8. '```' → logprob: -8.638091087341309
    9. 'join' → logprob: -9.513091087341309
    10. '
' → logprob: -9.638091087341309

Token 1206: ' representations' (ID: 63700)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06923511624336243
    2. '()' → logprob: -3.19423508644104
    3. '(self' → logprob: -5.194235324859619
    4. '()
' → logprob: -5.694235324859619
    5. 'return' → logprob: -5.694235324859619
    6. 'represent' → logprob: -6.069235324859619
    7. 'rep' → logprob: -6.194235324859619
    8. '   ' → logprob: -6.569235324859619
    9. '```' → logprob: -6.569235324859619
    10. '_rep' → logprob: -6.819235324859619

Token 1207: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5774596929550171
    2. 'return' → logprob: -0.8274596929550171
    3. ' return' → logprob: -6.702459812164307
    4. '()' → logprob: -8.827459335327148
    5. '()
' → logprob: -10.077459335327148
    6. 'result' → logprob: -10.827459335327148
    7. ',' → logprob: -10.827459335327148
    8. '   ' → logprob: -12.077459335327148
    9. '```' → logprob: -12.077459335327148
    10. '(return' → logprob: -12.077459335327148

Token 1208: ' order' (ID: 2569)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25217896699905396
    2. 'MC' → logprob: -1.7521789073944092
    3. 'order' → logprob: -3.627178907394409
    4. '_MC' → logprob: -3.877178907394409
    5. '''.' → logprob: -7.502179145812988
    6. '_M' → logprob: -7.627179145812988
    7. ' MC' → logprob: -7.752179145812988
    8. 'm' → logprob: -8.502179145812988
    9. '_mc' → logprob: -9.002179145812988
    10. 'letter' → logprob: -9.377179145812988

Token 1209: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4764929413795471
    2. '       ' → logprob: -0.9764929413795471
    3. ' return' → logprob: -6.976492881774902
    4. '`' → logprob: -7.851492881774902
    5. '(self' → logprob: -8.226492881774902
    6. 'result' → logprob: -8.476492881774902
    7. '```' → logprob: -8.601492881774902
    8. '(' → logprob: -9.101492881774902
    9. 'self' → logprob: -9.226492881774902
    10. '``' → logprob: -10.726492881774902

Token 1210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12728305160999298
    2. 'return' → logprob: -2.1272830963134766
    3. ' return' → logprob: -8.002283096313477
    4. '```' → logprob: -12.252283096313477
    5. '(' → logprob: -12.627283096313477
    6. 'result' → logprob: -12.752283096313477
    7. ':' → logprob: -13.377283096313477
    8. '           ' → logprob: -13.627283096313477
    9. '(return' → logprob: -13.627283096313477
    10. ':return' → logprob: -13.752283096313477

Token 1211: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005016815848648548
    2. '       ' → logprob: -8.00050163269043
    3. ' return' → logprob: -9.50050163269043
    4. '```' → logprob: -10.12550163269043
    5. '   ' → logprob: -10.37550163269043
    6. '''.' → logprob: -11.75050163269043
    7. '"' → logprob: -12.00050163269043
    8. '`' → logprob: -12.62550163269043
    9. 'result' → logprob: -13.37550163269043
    10. '""' → logprob: -14.62550163269043

Token 1212: ' ''.' (ID: 105941)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023276345804333687
    2. '''.' → logprob: -3.7732763290405273
    3. '''' → logprob: -11.273276329040527
    4. '""' → logprob: -11.398276329040527
    5. ''' → logprob: -12.273276329040527
    6. ' ''.' → logprob: -13.773276329040527
    7. ' "".' → logprob: -14.398276329040527
    8. '   ' → logprob: -15.148276329040527
    9. '"",' → logprob: -15.398276329040527
    10. '''
' → logprob: -15.648276329040527

Token 1213: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.292907877039397e-06
    2. '''.' → logprob: -12.75000286102295
    3. ' join' → logprob: -16.250003814697266
    4. '.join' → logprob: -16.375003814697266
    5. '```' → logprob: -16.375003814697266
    6. 'jo' → logprob: -17.250003814697266
    7. ''.' → logprob: -18.125003814697266
    8. ' ' → logprob: -18.625003814697266
    9. '   ' → logprob: -19.000003814697266
    10. '(join' → logprob: -19.125003814697266

Token 1214: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.006742962170392275
    2. 'str' → logprob: -5.00674295425415
    3. '[str' → logprob: -10.506743431091309
    4. '	str' → logprob: -15.881743431091309
    5. '(' → logprob: -16.006742477416992
    6. '([' → logprob: -16.881742477416992
    7. ' str' → logprob: -17.631742477416992
    8. 'repr' → logprob: -17.756742477416992
    9. '=str' → logprob: -18.381742477416992
    10. '```' → logprob: -19.381742477416992

Token 1215: '(letter' (ID: 142899)
  Prédit: '(letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(letter' → logprob: -0.0005601812736131251
    2. '(l' → logprob: -7.750560283660889
    3. 'letter' → logprob: -9.00055980682373
    4. '(let' → logprob: -12.75055980682373
    5. '(' → logprob: -12.87555980682373
    6. ' letter' → logprob: -16.250560760498047
    7. '(part' → logprob: -16.250560760498047
    8. '(x' → logprob: -16.500560760498047
    9. 'ltr' → logprob: -16.500560760498047
    10. '(L' → logprob: -16.625560760498047

Token 1216: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003499573329463601
    2. '(letter' → logprob: -5.753499507904053
    3. 'letter' → logprob: -8.628499984741211
    4. 'for' → logprob: -8.878499984741211
    5. ')
' → logprob: -13.128499984741211
    6. ' for' → logprob: -14.753499984741211
    7. ' letter' → logprob: -15.003499984741211
    8. '(' → logprob: -15.378499984741211
    9. '   ' → logprob: -16.00349998474121
    10. ' )' → logprob: -16.25349998474121

Token 1217: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7573481202125549
    2. 'for' → logprob: -0.7573481202125549
    3. '(letter' → logprob: -3.25734806060791
    4. ')' → logprob: -3.75734806060791
    5. 'letter' → logprob: -8.88234806060791
    6. '   ' → logprob: -9.38234806060791
    7. '(' → logprob: -9.63234806060791
    8. '       ' → logprob: -10.75734806060791
    9. ' ' → logprob: -11.75734806060791
    10. ' letter' → logprob: -12.13234806060791

Token 1218: ' letter' (ID: 10263)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07904566079378128
    2. 'letter' → logprob: -2.5790457725524902
    3. ' self' → logprob: -8.954045295715332
    4. ' letter' → logprob: -10.579045295715332
    5. '(self' → logprob: -15.079045295715332
    6. '(letter' → logprob: -15.079045295715332
    7. '	self' → logprob: -15.204045295715332
    8. '_letter' → logprob: -16.07904624938965
    9. '
' → logprob: -16.82904624938965
    10. 'letters' → logprob: -17.70404624938965

Token 1219: ' in' (ID: 306)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008621077984571457
    2. ' self' → logprob: -4.7586212158203125
    3. 'letter' → logprob: -12.383621215820312
    4. ' in' → logprob: -14.133621215820312
    5. '   ' → logprob: -14.758621215820312
    6. '(self' → logprob: -15.008621215820312
    7. 'in' → logprob: -15.008621215820312
    8. ' letter' → logprob: -15.633621215820312
    9. '	self' → logprob: -16.258621215820312
    10. '
' → logprob: -16.258621215820312

Token 1220: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.1160349458805285e-05
    2. ' self' → logprob: -11.500011444091797
    3. 'sorted' → logprob: -14.250011444091797
    4. '
' → logprob: -15.750011444091797
    5. '(self' → logprob: -16.125011444091797
    6. '[self' → logprob: -16.875011444091797
    7. '	self' → logprob: -17.250011444091797
    8. '   ' → logprob: -17.875011444091797
    9. 'letter' → logprob: -18.625011444091797
    10. '=self' → logprob: -19.625011444091797

Token 1221: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.624555291840807e-05
    2. 'letters' → logprob: -9.500076293945312
    3. 'Letters' → logprob: -14.375076293945312
    4. '_letters' → logprob: -14.875076293945312
    5. ' .' → logprob: -15.500076293945312
    6. ').' → logprob: -16.625076293945312
    7. ' letters' → logprob: -17.125076293945312
    8. '```' → logprob: -17.500076293945312
    9. '.
' → logprob: -17.625076293945312
    10. '._' → logprob: -17.875076293945312

Token 1222: 'letters' (ID: 38724)
  Prédit: 'letters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'letters' → logprob: -1.3856492842023727e-06
    2. '_letters' → logprob: -13.750000953674316
    3. ' letters' → logprob: -15.875000953674316
    4. 'let' → logprob: -16.375001907348633
    5. '```' → logprob: -18.500001907348633
    6. '.' → logprob: -18.625001907348633
    7. '_' → logprob: -19.000001907348633
    8. 'lett' → logprob: -19.500001907348633
    9. 'Letters' → logprob: -19.875001907348633
    10. 'self' → logprob: -20.000001907348633

Token 1223: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. ')
' → logprob: -12.750003814697266
    3. ' )' → logprob: -14.500003814697266
    4. '())' → logprob: -16.000003814697266
    5. ')}' → logprob: -18.000003814697266
    6. '))' → logprob: -18.375003814697266
    7. '   ' → logprob: -18.375003814697266
    8. '       ' → logprob: -18.375003814697266
    9. ')return' → logprob: -18.625003814697266
    10. '）' → logprob: -19.000003814697266

Token 1224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5784631967544556
    2. 'def' → logprob: -0.8284631967544556
    3. '
' → logprob: -6.203463077545166
    4. '<|end|>' → logprob: -7.953463077545166
    5. ' def' → logprob: -9.578463554382324
    6. '```' → logprob: -10.453463554382324
    7. '	def' → logprob: -10.828463554382324
    8. '+' → logprob: -11.828463554382324
    9. '    
' → logprob: -12.203463554382324
    10. '+
' → logprob: -12.828463554382324

Token 1225: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0004342453321442008
    2. '   ' → logprob: -7.750434398651123
    3. ' def' → logprob: -12.875433921813965
    4. '	def' → logprob: -14.500433921813965
    5. '
' → logprob: -15.500433921813965
    6. '```' → logprob: -16.75043487548828
    7. '__' → logprob: -16.87543487548828
    8. 'class' → logprob: -17.37543487548828
    9. '+' → logprob: -17.50043487548828
    10. '    
' → logprob: -17.87543487548828

Token 1226: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005311785265803337
    2. 'def' → logprob: -5.380311965942383
    3. ' __' → logprob: -7.380311965942383
    4. '.__' → logprob: -9.880311965942383
    5. '___' → logprob: -12.005311965942383
    6. ' def' → logprob: -12.005311965942383
    7. '_def' → logprob: -13.255311965942383
    8. '_add' → logprob: -14.505311965942383
    9. '_value' → logprob: -14.630311965942383
    10. '_repr' → logprob: -15.005311965942383

Token 1227: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.03806433081626892
    2. 'add' → logprob: -3.2880642414093018
    3. 'repr' → logprob: -11.038064002990723
    4. 'lt' → logprob: -12.038064002990723
    5. 'init' → logprob: -14.038064002990723
    6. 'hash' → logprob: -17.03806495666504
    7. 'len' → logprob: -18.03806495666504
    8. '_eq' → logprob: -19.03806495666504
    9. 'mul' → logprob: -19.28806495666504
    10. ' eq' → logprob: -19.91306495666504

Token 1228: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -4.692145012086257e-05
    2. '(self' → logprob: -10.125046730041504
    3. '__(
' → logprob: -12.125046730041504
    4. '__' → logprob: -14.000046730041504
    5. 'self' → logprob: -15.750046730041504
    6. '(' → logprob: -16.12504768371582
    7. '```' → logprob: -16.25004768371582
    8. '_(' → logprob: -16.87504768371582
    9. '__
' → logprob: -17.37504768371582
    10. '__((' → logprob: -17.50004768371582

Token 1229: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: 0.0
    2. ' self' → logprob: -17.875
    3. '(self' → logprob: -19.625
    4. 'cls' → logprob: -19.75
    5. '   ' → logprob: -21.0
    6. '
' → logprob: -21.125
    7. ')' → logprob: -21.875
    8. 'def' → logprob: -22.125
    9. '       ' → logprob: -22.5
    10. '	self' → logprob: -22.875

Token 1230: '):
' (ID: 1883)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.008984558284282684
    2. '(self' → logprob: -4.883984565734863
    3. 'self' → logprob: -6.883984565734863
    4. ')(' → logprob: -8.508984565734863
    5. '__(
' → logprob: -9.383984565734863
    6. '__' → logprob: -9.758984565734863
    7. '(' → logprob: -12.883984565734863
    8. '```' → logprob: -13.633984565734863
    9. '_(' → logprob: -13.883984565734863
    10. ')(
' → logprob: -14.008984565734863

Token 1231: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1667647510766983
    2. 'def' → logprob: -2.666764736175537
    3. '       ' → logprob: -2.666764736175537
    4. '   ' → logprob: -4.291764736175537
    5. 'return' → logprob: -7.666764736175537
    6. ' self' → logprob: -8.541765213012695
    7. '
' → logprob: -9.166765213012695
    8. '(self' → logprob: -9.541765213012695
    9. 'f' → logprob: -9.916765213012695
    10. ' def' → logprob: -10.041765213012695

Token 1232: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00891342107206583
    2. '       ' → logprob: -4.758913516998291
    3. 'f' → logprob: -8.258913040161133
    4. ' return' → logprob: -10.133913040161133
    5. 'def' → logprob: -17.008913040161133
    6. '
' → logprob: -17.133913040161133
    7. 'self' → logprob: -17.258913040161133
    8. '   ' → logprob: -18.133913040161133
    9. '```' → logprob: -18.133913040161133
    10. '           ' → logprob: -18.883913040161133

Token 1233: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.003178544342517853
    2. ' f' → logprob: -5.753178596496582
    3. '       ' → logprob: -14.128178596496582
    4. '(f' → logprob: -16.503177642822266
    5. '           ' → logprob: -17.128177642822266
    6. '	f' → logprob: -18.253177642822266
    7. '   ' → logprob: -18.378177642822266
    8. '
' → logprob: -19.378177642822266
    9. 'self' → logprob: -20.003177642822266
    10. '```' → logprob: -20.128177642822266

Token 1234: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.02980291098356247
    2. 'MC' → logprob: -3.5298027992248535
    3. '{' → logprob: -10.154803276062012
    4. ' f' → logprob: -11.904803276062012
    5. 'self' → logprob: -12.404803276062012
    6. '(f' → logprob: -13.154803276062012
    7. ' MC' → logprob: -15.154803276062012
    8. 'cls' → logprob: -15.154803276062012
    9. '_MC' → logprob: -16.779802322387695
    10. '"{' → logprob: -17.154802322387695

Token 1235: 'MC' (ID: 15190)
  Prédit: 'MC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MC' → logprob: -0.06333135813474655
    2. 'self' → logprob: -2.813331365585327
    3. '{' → logprob: -6.688331127166748
    4. 'f' → logprob: -9.313331604003906
    5. '"{' → logprob: -11.688331604003906
    6. 'mc' → logprob: -12.438331604003906
    7. '"' → logprob: -12.438331604003906
    8. 'cls' → logprob: -13.188331604003906
    9. '__' → logprob: -13.313331604003906
    10. 'type' → logprob: -13.563331604003906

Token 1236: 'XI' (ID: 124666)
  Prédit: 'XI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XI' → logprob: -1.0280383548888494e-06
    2. 'X' → logprob: -13.875000953674316
    3. ' XI' → logprob: -17.250001907348633
    4. 'xi' → logprob: -17.500001907348633
    5. 'JI' → logprob: -18.000001907348633
    6. 'MC' → logprob: -18.125001907348633
    7. 'I' → logprob: -19.250001907348633
    8. 'Xi' → logprob: -19.875001907348633
    9. '```' → logprob: -20.000001907348633
    10. 'CI' → logprob: -20.375001907348633

Token 1237: 'String' (ID: 916)
  Prédit: 'String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -3.128163257315464e-07
    2. 'string' → logprob: -15.375
    3. '
' → logprob: -18.0
    4. '```' → logprob: -19.875
    5. '_string' → logprob: -20.25
    6. '_String' → logprob: -20.5
    7. '_STRING' → logprob: -21.25
    8. ' String' → logprob: -21.75
    9. 'Strings' → logprob: -21.75
    10. 'tring' → logprob: -22.125

Token 1238: '({' (ID: 3972)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2015121579170227
    2. '({' → logprob: -1.701512098312378
    3. 'letters' → logprob: -10.076512336730957
    4. '(self' → logprob: -11.076512336730957
    5. '{' → logprob: -11.326512336730957
    6. '(count' → logprob: -11.576512336730957
    7. '(parts' → logprob: -12.451512336730957
    8. '(let' → logprob: -12.951512336730957
    9. '([{' → logprob: -12.951512336730957
    10. 'Letters' → logprob: -13.451512336730957

Token 1239: 'repr' (ID: 67002)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.8312570318812504e-05
    2. 'repr' → logprob: -11.375018119812012
    3. '[self' → logprob: -12.125018119812012
    4. ' self' → logprob: -14.375018119812012
    5. '[' → logprob: -14.625018119812012
    6. '',' → logprob: -16.250019073486328
    7. 'str' → logprob: -16.375019073486328
    8. '{' → logprob: -18.000019073486328
    9. '','.' → logprob: -18.125019073486328
    10. '''.' → logprob: -18.750019073486328

Token 1240: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011703446507453918
    2. 'self' → logprob: -6.7511701583862305
    3. ' self' → logprob: -15.87617015838623
    4. ' (' → logprob: -17.626171112060547
    5. '[self' → logprob: -17.626171112060547
    6. '(' → logprob: -18.001171112060547
    7. '=self' → logprob: -18.751171112060547
    8. ',self' → logprob: -19.126171112060547
    9. '+self' → logprob: -19.251171112060547
    10. '	self' → logprob: -19.626171112060547

Token 1241: '.' (ID: 13)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.062170132994651794
    2. '(self' → logprob: -2.8121700286865234
    3. ' self' → logprob: -8.687170028686523
    4. '[self' → logprob: -10.437170028686523
    5. '	self' → logprob: -13.687170028686523
    6. ',self' → logprob: -14.562170028686523
    7. '.self' → logprob: -14.812170028686523
    8. 's' → logprob: -14.812170028686523
    9. '(' → logprob: -15.062170028686523
    10. '+self' → logprob: -15.187170028686523

Token 1242: 'letters' (ID: 38724)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3425219549390022e-05
    2. 'letters' → logprob: -11.75001335144043
    3. '[self' → logprob: -12.87501335144043
    4. ' self' → logprob: -12.87501335144043
    5. '(self' → logprob: -15.62501335144043
    6. '[' → logprob: -16.12501335144043
    7. '_letters' → logprob: -17.25001335144043
    8. '	self' → logprob: -18.12501335144043
    9. '[]' → logprob: -18.87501335144043
    10. '```' → logprob: -19.00001335144043

Token 1243: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012164250947535038
    2. '))' → logprob: -6.751216411590576
    3. ')}' → logprob: -10.126216888427734
    4. '})' → logprob: -12.126216888427734
    5. '   ' → logprob: -15.126216888427734
    6. '}))' → logprob: -15.376216888427734
    7. ')])' → logprob: -16.376216888427734
    8. ')))' → logprob: -16.376216888427734
    9. ')
' → logprob: -16.751216888427734
    10. ')})
' → logprob: -16.876216888427734

Token 1244: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016398312291130424
    2. ')}' → logprob: -6.8766398429870605
    3. '})' → logprob: -7.8766398429870605
    4. '))' → logprob: -9.001639366149902
    5. ')"' → logprob: -10.251639366149902
    6. ')")' → logprob: -10.876639366149902
    7. ')`' → logprob: -11.001639366149902
    8. '}' → logprob: -11.751639366149902
    9. ')">' → logprob: -11.751639366149902
    10. '   ' → logprob: -12.126639366149902

Token 1245: '"

' (ID: 2678)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3954397737979889
    2. 'def' → logprob: -1.1454397439956665
    3. '
' → logprob: -4.770439624786377
    4. ' def' → logprob: -10.020440101623535
    5. '    
' → logprob: -12.520440101623535
    6. '```' → logprob: -13.270440101623535
    7. '	def' → logprob: -13.395440101623535
    8. '

' → logprob: -14.270440101623535
    9. '  ' → logprob: -14.270440101623535
    10. '__' → logprob: -14.770440101623535

Token 1246: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12716002762317657
    2. '   ' → logprob: -2.12716007232666
    3. ' def' → logprob: -8.50216007232666
    4. '```' → logprob: -11.00216007232666
    5. '	def' → logprob: -11.87716007232666
    6. '    
' → logprob: -13.75216007232666
    7. '__' → logprob: -14.00216007232666
    8. '+' → logprob: -14.12716007232666
    9. ' ' → logprob: -14.50216007232666
    10. '_def' → logprob: -14.87716007232666

Token 1247: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0011959441471844912
    2. '   ' → logprob: -6.751195907592773
    3. ' def' → logprob: -10.626195907592773
    4. '	def' → logprob: -13.876195907592773
    5. '
' → logprob: -15.251195907592773
    6. '__' → logprob: -16.001195907592773
    7. '+' → logprob: -16.251195907592773
    8. '```' → logprob: -17.126195907592773
    9. 'class' → logprob: -17.501195907592773
    10. '    
' → logprob: -18.001195907592773

Token 1248: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0160470362752676
    2. 'def' → logprob: -4.39104700088501
    3. ' __' → logprob: -5.76604700088501
    4. 'add' → logprob: -8.766047477722168
    5. ' def' → logprob: -8.891047477722168
    6. '_add' → logprob: -9.641047477722168
    7. '___' → logprob: -11.141047477722168
    8. '+' → logprob: -11.516047477722168
    9. '.__' → logprob: -11.891047477722168
    10. '```' → logprob: -12.641047477722168

Token 1249: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.006716913543641567
    2. 'eq' → logprob: -5.006716728210449
    3. 'lt' → logprob: -13.88171672821045
    4. 'init' → logprob: -14.63171672821045
    5. 'len' → logprob: -17.006717681884766
    6. ' add' → logprob: -17.131717681884766
    7. 'hash' → logprob: -17.131717681884766
    8. 'mul' → logprob: -17.131717681884766
    9. 'Add' → logprob: -18.506717681884766
    10. '_add' → logprob: -18.881717681884766

Token 1250: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0001242772996192798
    2. '__' → logprob: -9.000123977661133
    3. '__(
' → logprob: -14.125123977661133
    4. '__('' → logprob: -17.250123977661133
    5. '__((' → logprob: -17.500123977661133
    6. '__("' → logprob: -17.750123977661133
    7. '_(' → logprob: -18.000123977661133
    8. '__(*' → logprob: -19.500123977661133
    9. '(self' → logprob: -19.625123977661133
    10. '_' → logprob: -19.875123977661133

Token 1251: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -17.0
    3. ' self' → logprob: -17.0
    4. '
' → logprob: -17.0
    5. 'other' → logprob: -17.5
    6. '0' → logprob: -17.875
    7. 'def' → logprob: -18.25
    8. '       ' → logprob: -18.625
    9. '(self' → logprob: -18.75
    10. '   ' → logprob: -18.875

Token 1252: ',' (ID: 11)
  Prédit: '__('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__(' → logprob: -3.7146746763028204e-05
    2. '__' → logprob: -10.25003719329834
    3. '__(
' → logprob: -14.12503719329834
    4. '_(' → logprob: -14.62503719329834
    5. '(self' → logprob: -15.00003719329834
    6. 'self' → logprob: -15.25003719329834
    7. '__((' → logprob: -19.250036239624023
    8. '(' → logprob: -19.625036239624023
    9. '__("' → logprob: -19.875036239624023
    10. '__('' → logprob: -19.875036239624023

Token 1253: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -4.167648876318708e-05
    2. ' other' → logprob: -10.250041961669922
    3. 'self' → logprob: -12.000041961669922
    4. 'Other' → logprob: -16.375041961669922
    5. '_other' → logprob: -18.375041961669922
    6. '(other' → logprob: -19.375041961669922
    7. 'rhs' → logprob: -19.625041961669922
    8. 'o' → logprob: -20.875041961669922
    9. '其他' → logprob: -20.875041961669922
    10. '   ' → logprob: -21.125041961669922

Token 1254: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04085753113031387
    2. ' :' → logprob: -3.7908575534820557
    3. '):' → logprob: -4.165857315063477
    4. ')' → logprob: -7.165857315063477
    5. 'self' → logprob: -8.040857315063477
    6. '):
' → logprob: -8.165857315063477
    7. ' ):' → logprob: -8.540857315063477
    8. '(self' → logprob: -8.915857315063477
    9. ',' → logprob: -9.165857315063477
    10. ' self' → logprob: -10.165857315063477

Token 1255: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.020073816180229187
    2. ' "' → logprob: -4.770073890686035
    3. 'other' → logprob: -5.145073890686035
    4. 'MC' → logprob: -6.145073890686035
    5. 'object' → logprob: -6.145073890686035
    6. ')' → logprob: -7.770073890686035
    7. '"value' → logprob: -8.270073890686035
    8. ' MC' → logprob: -8.770073890686035
    9. '")' → logprob: -9.270073890686035
    10. 'self' → logprob: -9.395073890686035

Token 1256: 'MC' (ID: 15190)
  Prédit: 'MC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MC' → logprob: -2.339278580620885e-06
    2. ' MC' → logprob: -13.000001907348633
    3. 'self' → logprob: -18.625001907348633
    4. '_MC' → logprob: -18.750001907348633
    5. '"' → logprob: -20.125001907348633
    6. 'mc' → logprob: -21.500001907348633
    7. '
' → logprob: -21.625001907348633
    8. ')' → logprob: -22.125001907348633
    9. 'M' → logprob: -22.250001907348633
    10. 'MS' → logprob: -22.625001907348633

Token 1257: 'XI' (ID: 124666)
  Prédit: 'XI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XI' → logprob: -5.6934557505883276e-05
    2. 'MC' → logprob: -10.500057220458984
    3. 'X' → logprob: -11.000057220458984
    4. 'JI' → logprob: -12.625057220458984
    5. 'xi' → logprob: -13.000057220458984
    6. ' XI' → logprob: -13.500057220458984
    7. 'XL' → logprob: -14.125057220458984
    8. 'I' → logprob: -14.125057220458984
    9. '
' → logprob: -14.500057220458984
    10. '   ' → logprob: -14.937557220458984

Token 1258: 'String' (ID: 916)
  Prédit: 'String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -1.8624639324116288e-06
    2. ')' → logprob: -13.875001907348633
    3. 'I' → logprob: -15.000001907348633
    4. 'S' → logprob: -15.750001907348633
    5. 'string' → logprob: -15.750001907348633
    6. 'Strings' → logprob: -16.625001907348633
    7. ' String' → logprob: -16.750001907348633
    8. '_String' → logprob: -16.875001907348633
    9. '```' → logprob: -17.625001907348633
    10. 'tring' → logprob: -17.875001907348633

Token 1259: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.12743911147117615
    2. ')' → logprob: -2.127439022064209
    3. '"):
' → logprob: -7.877439022064209
    4. '):
' → logprob: -9.877439498901367
    5. '"):' → logprob: -10.252439498901367
    6. ')")' → logprob: -10.377439498901367
    7. '):' → logprob: -12.252439498901367
    8. ' ")' → logprob: -12.752439498901367
    9. '`)' → logprob: -13.377439498901367
    10. '")->' → logprob: -13.877439498901367

Token 1260: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.1265922635793686
    2. ':' → logprob: -2.5015921592712402
    3. ' ->' → logprob: -3.6265921592712402
    4. ':
' → logprob: -5.50159215927124
    5. ')' → logprob: -5.75159215927124
    6. ')->' → logprob: -6.62659215927124
    7. '   ' → logprob: -7.12659215927124
    8. '       ' → logprob: -8.251592636108398
    9. '```' → logprob: -8.876592636108398
    10. '->____' → logprob: -9.251592636108398

Token 1261: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03048371523618698
    2. ' "' → logprob: -3.5304837226867676
    3. 'MC' → logprob: -7.530483722686768
    4. '"M' → logprob: -8.65548324584961
    5. ' MC' → logprob: -11.65548324584961
    6. ''' → logprob: -11.90548324584961
    7. '"class' → logprob: -12.40548324584961
    8. ''M' → logprob: -14.65548324584961
    9. '"type' → logprob: -15.03048324584961
    10. '"C' → logprob: -15.15548324584961

Token 1262: 'MC' (ID: 15190)
  Prédit: 'MC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MC' → logprob: -2.696889623621246e-06
    2. ' MC' → logprob: -12.87500286102295
    3. 'M' → logprob: -17.250001907348633
    4. '
' → logprob: -18.000001907348633
    5. '_MC' → logprob: -18.000001907348633
    6. 'mc' → logprob: -18.875001907348633
    7. '"' → logprob: -19.250001907348633
    8. 'Mc' → logprob: -21.875001907348633
    9. '_mc' → logprob: -21.875001907348633
    10. 'MS' → logprob: -21.875001907348633

Token 1263: 'XI' (ID: 124666)
  Prédit: 'XI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XI' → logprob: -2.1888679839321412e-05
    2. 'X' → logprob: -10.750021934509277
    3. ' XI' → logprob: -15.125021934509277
    4. 'xi' → logprob: -16.87502098083496
    5. '
' → logprob: -17.00002098083496
    6. 'XL' → logprob: -17.62502098083496
    7. 'Xi' → logprob: -17.62502098083496
    8. '

' → logprob: -18.25002098083496
    9. '```' → logprob: -18.37502098083496
    10. 'JI' → logprob: -19.00002098083496

Token 1264: 'String' (ID: 916)
  Prédit: 'String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -1.9361264946837764e-07
    2. 'string' → logprob: -16.25
    3. 'tring' → logprob: -17.125
    4. 'S' → logprob: -17.625
    5. '_String' → logprob: -17.625
    6. 'Str' → logprob: -18.375
    7. '```' → logprob: -18.5
    8. ' String' → logprob: -18.625
    9. '<String' → logprob: -18.625
    10. '[String' → logprob: -19.0

Token 1265: '":
' (ID: 9213)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2946969270706177
    2. ':' → logprob: -1.5446969270706177
    3. '":
' → logprob: -3.544696807861328
    4. '":' → logprob: -4.419696807861328
    5. '):
' → logprob: -7.044696807861328
    6. '():
' → logprob: -10.544696807861328
    7. '):' → logprob: -10.669696807861328
    8. ':"' → logprob: -11.669696807861328
    9. ':
' → logprob: -12.419696807861328
    10. '":
' → logprob: -12.544696807861328

Token 1266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1811751127243042
    2. 'val' → logprob: -2.5561752319335938
    3. 'value' → logprob: -2.9311752319335938
    4. '```' → logprob: -4.806175231933594
    5. 'result' → logprob: -4.931175231933594
    6. '#' → logprob: -5.681175231933594
    7. 'return' → logprob: -5.681175231933594
    8. '
' → logprob: -5.931175231933594
    9. '_val' → logprob: -5.931175231933594
    10. 'self' → logprob: -6.931175231933594

Token 1267: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.43564459681510925
    2. 'value' → logprob: -1.8106446266174316
    3. 'val' → logprob: -1.9356446266174316
    4. 'result' → logprob: -3.5606446266174316
    5. 'other' → logprob: -4.685644626617432
    6. 'v' → logprob: -5.935644626617432
    7. '       ' → logprob: -6.060644626617432
    8. 'new' → logprob: -7.185644626617432
    9. 'self' → logprob: -7.435644626617432
    10. '
' → logprob: -8.560644149780273

Token 1268: ' Add' (ID: 4063)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9812908172607422
    2. 'return' → logprob: -1.2312908172607422
    3. 'value' → logprob: -1.7312908172607422
    4. 'def' → logprob: -2.981290817260742
    5. '       ' → logprob: -3.106290817260742
    6. 'val' → logprob: -3.606290817260742
    7. 'other' → logprob: -4.731290817260742
    8. 'if' → logprob: -4.731290817260742
    9. 'sum' → logprob: -4.856290817260742
    10. 'new' → logprob: -5.606290817260742

Token 1269: ' by' (ID: 656)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10697299242019653
    2. 'self' → logprob: -2.3569729328155518
    3. '       ' → logprob: -5.481973171234131
    4. 'other' → logprob: -6.606973171234131
    5. ' def' → logprob: -7.356973171234131
    6. '   ' → logprob: -8.106972694396973
    7. ' self' → logprob: -9.106972694396973
    8. 'cls' → logprob: -9.231972694396973
    9. 'from' → logprob: -11.231972694396973
    10. '
' → logprob: -11.481972694396973

Token 1270: ' summ' (ID: 16552)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.11192502081394196
    2. 'self' → logprob: -2.7369251251220703
    3. 'MC' → logprob: -3.2369251251220703
    4. ' MC' → logprob: -6.98692512512207
    5. 'return' → logprob: -8.11192512512207
    6. 'mc' → logprob: -8.73692512512207
    7. 'value' → logprob: -8.73692512512207
    8. 'type' → logprob: -9.23692512512207
    9. '
' → logprob: -10.23692512512207
    10. ' from' → logprob: -10.48692512512207

Token 1271: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -3.054500666621607e-06
    2. '   ' → logprob: -13.62500286102295
    3. '       ' → logprob: -14.25000286102295
    4. 'ming' → logprob: -14.37500286102295
    5. 'oning' → logprob: -15.75000286102295
    6. 'ping' → logprob: -16.000003814697266
    7. 'ation' → logprob: -16.750003814697266
    8. 'eing' → logprob: -16.750003814697266
    9. '```' → logprob: -17.500003814697266
    10. 'inging' → logprob: -17.875003814697266

Token 1272: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002157399198040366
    2. 'MC' → logprob: -7.127157211303711
    3. '(self' → logprob: -7.252157211303711
    4. ' self' → logprob: -7.627157211303711
    5. 'return' → logprob: -9.502157211303711
    6. '       ' → logprob: -10.752157211303711
    7. 'other' → logprob: -11.002157211303711
    8. '   ' → logprob: -11.127157211303711
    9. ' MC' → logprob: -11.502157211303711
    10. 'def' → logprob: -12.252157211303711

Token 1273: ' values' (ID: 4824)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6934089660644531
    2. 'self' → logprob: -0.6934089660644531
    3. ' to' → logprob: -9.318408966064453
    4. ' self' → logprob: -9.443408966064453
    5. 'values' → logprob: -10.068408966064453
    6. '.to' → logprob: -11.193408966064453
    7. 'value' → logprob: -11.693408966064453
    8. 'MC' → logprob: -11.693408966064453
    9. 'other' → logprob: -12.068408966064453
    10. '.' → logprob: -12.443408966064453

Token 1274: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6771779656410217
    2. '(self' → logprob: -1.177177906036377
    3. 'self' → logprob: -2.552177906036377
    4. '(' → logprob: -3.052177906036377
    5. 'return' → logprob: -3.427177906036377
    6. '(
' → logprob: -5.052177906036377
    7. '(other' → logprob: -5.427177906036377
    8. ' (' → logprob: -5.677177906036377
    9. '
' → logprob: -5.677177906036377
    10. ',' → logprob: -5.802177906036377

Token 1275: ' recon' (ID: 11011)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0006085559725761414
    2. ' return' → logprob: -7.500608444213867
    3. 'from' → logprob: -9.875608444213867
    4. '       ' → logprob: -12.750608444213867
    5. 'MC' → logprob: -14.875608444213867
    6. 'cls' → logprob: -15.375608444213867
    7. ' returning' → logprob: -15.375608444213867
    8. '
' → logprob: -15.625608444213867
    9. '```' → logprob: -15.625608444213867
    10. 'self' → logprob: -16.875608444213867

Token 1276: 'verting' (ID: 94938)
  Prédit: 'struct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'struct' → logprob: -0.06382334232330322
    2. 'truct' → logprob: -3.0638232231140137
    3. 'verting' → logprob: -4.438823223114014
    4. 'vert' → logprob: -6.438823223114014
    5. 'stit' → logprob: -7.313823223114014
    6. 'structor' → logprob: -8.188823699951172
    7. 'st' → logprob: -8.313823699951172
    8. 'turn' → logprob: -8.938823699951172
    9. 'str' → logprob: -9.188823699951172
    10. 'stract' → logprob: -10.063823699951172

Token 1277: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.38231906294822693
    2. '       ' → logprob: -1.3823190927505493
    3. '
' → logprob: -3.2573189735412598
    4. ' return' → logprob: -3.6323189735412598
    5. 'def' → logprob: -7.00731897354126
    6. '(' → logprob: -8.632319450378418
    7. ':
' → logprob: -9.132319450378418
    8. '(return' → logprob: -9.257319450378418
    9. '
' → logprob: -9.382319450378418
    10. ':' → logprob: -9.507319450378418

Token 1278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7007483839988708
    2. 'return' → logprob: -0.8257483839988708
    3. ' return' → logprob: -3.5757484436035156
    4. '(
' → logprob: -4.450748443603516
    5. ':
' → logprob: -4.825748443603516
    6. '(' → logprob: -6.075748443603516
    7. '
' → logprob: -6.075748443603516
    8. ':return' → logprob: -6.200748443603516
    9. '```' → logprob: -6.325748443603516
    10. '(return' → logprob: -6.825748443603516

Token 1279: ' sum' (ID: 4215)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15575212240219116
    2. '
' → logprob: -3.155752182006836
    3. '       ' → logprob: -3.280752182006836
    4. 'result' → logprob: -3.405752182006836
    5. ' return' → logprob: -3.905752182006836
    6. 'val' → logprob: -4.905752182006836
    7. 'value' → logprob: -6.905752182006836
    8. ' 
' → logprob: -7.530752182006836
    9. '        
' → logprob: -7.655752182006836
    10. '```' → logprob: -7.780752182006836

Token 1280: '_val' (ID: 13694)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01260936725884676
    2. ' =' → logprob: -5.137609481811523
    3. '_val' → logprob: -5.887609481811523
    4. 'self' → logprob: -6.387609481811523
    5. '_value' → logprob: -6.387609481811523
    6. '=self' → logprob: -8.137609481811523
    7. 'value' → logprob: -9.512609481811523
    8. 'val' → logprob: -9.512609481811523
    9. '(self' → logprob: -10.637609481811523
    10. '   ' → logprob: -10.762609481811523

Token 1281: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759397745132446
    2. '=' → logprob: -0.8259397745132446
    3. '=self' → logprob: -15.075940132141113
    4. ')' → logprob: -18.325939178466797
    5. ' =
' → logprob: -18.700939178466797
    6. '=
' → logprob: -19.075939178466797
    7. ',' → logprob: -19.200939178466797
    8. ' self' → logprob: -19.200939178466797
    9. 'self' → logprob: -19.325939178466797
    10. ' ' → logprob: -19.575939178466797

Token 1282: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0921942703134846e-05
    2. ' self' → logprob: -11.50001049041748
    3. '       ' → logprob: -14.37501049041748
    4. '(self' → logprob: -16.250011444091797
    5. '	self' → logprob: -19.875011444091797
    6. '
' → logprob: -19.875011444091797
    7. '[self' → logprob: -20.250011444091797
    8. '$self' → logprob: -21.125011444091797
    9. '=self' → logprob: -22.000011444091797
    10. '```' → logprob: -22.875011444091797

Token 1283: '.to' (ID: 3552)
  Prédit: '.to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.to' → logprob: -1.1398757123970427e-05
    2. 'to' → logprob: -12.250011444091797
    3. '.value' → logprob: -12.250011444091797
    4. '.' → logprob: -13.250011444091797
    5. ' .' → logprob: -18.000011444091797
    6. '.To' → logprob: -19.875011444091797
    7. 'value' → logprob: -21.000011444091797
    8. ' to' → logprob: -21.625011444091797
    9. ').' → logprob: -22.000011444091797
    10. '..' → logprob: -22.125011444091797

Token 1284: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0040785204619169235
    2. 'value' → logprob: -5.504078388214111
    3. 'alue' → logprob: -16.754077911376953
    4. 'int' → logprob: -16.879077911376953
    5. '_' → logprob: -17.504077911376953
    6. 'self' → logprob: -18.504077911376953
    7. 'v' → logprob: -18.629077911376953
    8. 'Value' → logprob: -18.879077911376953
    9. ' value' → logprob: -18.879077911376953
    10. 'val' → logprob: -19.254077911376953

Token 1285: '()' (ID: 416)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.693152129650116
    2. ' +' → logprob: -0.693152129650116
    3. '()+' → logprob: -12.81815242767334
    4. '+
' → logprob: -13.44315242767334
    5. '()' → logprob: -14.44315242767334
    6. ' +
' → logprob: -16.193151473999023
    7. 'other' → logprob: -17.443151473999023
    8. ' plus' → logprob: -18.193151473999023
    9. '   ' → logprob: -18.443151473999023
    10. '(other' → logprob: -18.693151473999023

Token 1286: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16022545099258423
    2. '+' → logprob: -1.9102253913879395
    3. '+
' → logprob: -13.785225868225098
    4. ' +
' → logprob: -15.660225868225098
    5. '+self' → logprob: -16.78522491455078
    6. ' ' → logprob: -18.91022491455078
    7. ' ' → logprob: -19.16022491455078
    8. '       ' → logprob: -19.41022491455078
    9. '＋' → logprob: -19.53522491455078
    10. 'other' → logprob: -19.66022491455078

Token 1287: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00015860427811276168
    2. ' other' → logprob: -8.750158309936523
    3. '(other' → logprob: -16.625158309936523
    4. '.other' → logprob: -21.875158309936523
    5. 'Other' → logprob: -22.125158309936523
    6. '_other' → logprob: -22.625158309936523
    7. 'others' → logprob: -22.625158309936523
    8. 'OTHER' → logprob: -23.625158309936523
    9. '```' → logprob: -23.750158309936523
    10. '
' → logprob: -24.125158309936523

Token 1288: '.to' (ID: 3552)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02054901234805584
    2. '.to' → logprob: -3.8955490589141846
    3. '.value' → logprob: -12.520548820495605
    4. ' .' → logprob: -14.020548820495605
    5. ' ' → logprob: -14.645548820495605
    6. '.__' → logprob: -15.270548820495605
    7. '._' → logprob: -15.395548820495605
    8. '.To' → logprob: -15.520548820495605
    9. '.
' → logprob: -15.645548820495605
    10. 'to' → logprob: -15.770548820495605

Token 1289: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.061970822513103485
    2. 'value' → logprob: -2.8119707107543945
    3. 'other' → logprob: -13.811970710754395
    4. 'to' → logprob: -13.936970710754395
    5. 'valu' → logprob: -15.061970710754395
    6. 'self' → logprob: -15.186970710754395
    7. 'Value' → logprob: -15.561970710754395
    8. ' value' → logprob: -15.811970710754395
    9. 'val' → logprob: -15.936970710754395
    10. '_' → logprob: -16.43697166442871

Token 1290: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3557252287864685
    2. '
' → logprob: -1.2307252883911133
    3. ')' → logprob: -5.855725288391113
    4. 'return' → logprob: -6.230725288391113
    5. ')
' → logprob: -6.480725288391113
    6. '<|end|>' → logprob: -7.855725288391113
    7. ' return' → logprob: -8.730725288391113
    8. '
' → logprob: -9.105725288391113
    9. '```' → logprob: -10.230725288391113
    10. '        
' → logprob: -10.480725288391113

Token 1291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01538459025323391
    2. '
' → logprob: -4.515384674072266
    3. 'return' → logprob: -5.765384674072266
    4. '	' → logprob: -7.765384674072266
    5. ' return' → logprob: -7.765384674072266
    6. '        
' → logprob: -8.890384674072266
    7. '<|end|>' → logprob: -10.265384674072266
    8. '' → logprob: -10.640384674072266
    9. '
' → logprob: -10.765384674072266
    10. ' 
' → logprob: -10.890384674072266

Token 1292: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012672333978116512
    2. ' return' → logprob: -4.762672424316406
    3. '       ' → logprob: -5.512672424316406
    4. '
' → logprob: -11.262672424316406
    5. '        
' → logprob: -14.637672424316406
    6. '	return' → logprob: -14.762672424316406
    7. 'result' → logprob: -15.637672424316406
    8. '```' → logprob: -16.137672424316406
    9. ':return' → logprob: -17.387672424316406
    10. '	' → logprob: -17.387672424316406

Token 1293: ' MC' (ID: 31263)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18134558200836182
    2. 'MC' → logprob: -1.8063455820083618
    3. ' self' → logprob: -6.806345462799072
    4. ' MC' → logprob: -8.05634593963623
    5. 'type' → logprob: -8.68134593963623
    6. ' type' → logprob: -13.55634593963623
    7. '_MC' → logprob: -13.55634593963623
    8. 'mc' → logprob: -13.80634593963623
    9. '(self' → logprob: -14.05634593963623
    10. '```' → logprob: -14.68134593963623

Token 1294: 'XI' (ID: 124666)
  Prédit: 'XI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XI' → logprob: -3.8889261304575484e-06
    2. 'X' → logprob: -12.625003814697266
    3. ' XI' → logprob: -14.875003814697266
    4. 'XL' → logprob: -16.625003814697266
    5. 'xi' → logprob: -17.375003814697266
    6. 'JI' → logprob: -17.625003814697266
    7. 'MC' → logprob: -18.125003814697266
    8. '
' → logprob: -18.125003814697266
    9. 'Xi' → logprob: -18.875003814697266
    10. '```' → logprob: -19.125003814697266

Token 1295: 'String' (ID: 916)
  Prédit: 'String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -1.2664456789934775e-06
    2. 'I' → logprob: -14.875000953674316
    3. 'S' → logprob: -15.000000953674316
    4. 'Strings' → logprob: -15.750000953674316
    5. '_String' → logprob: -16.500001907348633
    6. 'X' → logprob: -16.875001907348633
    7. 'Str' → logprob: -17.000001907348633
    8. ' String' → logprob: -17.375001907348633
    9. 'St' → logprob: -17.875001907348633
    10. '<String' → logprob: -18.500001907348633

Token 1296: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -3.0590548703912646e-05
    2. 'from' → logprob: -10.750030517578125
    3. '.' → logprob: -11.625030517578125
    4. ' .' → logprob: -15.750030517578125
    5. '
' → logprob: -18.000030517578125
    6. '.From' → logprob: -18.125030517578125
    7. ' from' → logprob: -18.750030517578125
    8. ' ' → logprob: -18.875030517578125
    9. '```' → logprob: -19.000030517578125
    10. '#from' → logprob: -19.375030517578125

Token 1297: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.2994620242971e-06
    2. 'value' → logprob: -11.750008583068848
    3. '_val' → logprob: -14.750008583068848
    4. 'Value' → logprob: -17.62500762939453
    5. '_' → logprob: -18.62500762939453
    6. '_values' → logprob: -19.62500762939453
    7. '_Value' → logprob: -19.75000762939453
    8. '_VALUE' → logprob: -19.75000762939453
    9. ' value' → logprob: -20.12500762939453
    10. 'val' → logprob: -20.12500762939453

Token 1298: '(sum' (ID: 45528)
  Prédit: '(sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.500000953674316
    3. '(max' → logprob: -15.500000953674316
    4. 'sum' → logprob: -16.375
    5. '(
' → logprob: -16.75
    6. '(abs' → logprob: -17.875
    7. ' (' → logprob: -18.125
    8. '(s' → logprob: -18.375
    9. '((' → logprob: -18.75
    10. '```' → logprob: -20.25

Token 1299: '_val' (ID: 13694)
  Prédit: '_val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.00020747410599142313
    2. 'val' → logprob: -8.500207901000977
    3. 'sum' → logprob: -12.875207901000977
    4. '(sum' → logprob: -14.625207901000977
    5. '(val' → logprob: -15.000207901000977
    6. 'Val' → logprob: -15.750207901000977
    7. ')' → logprob: -16.125207901000977
    8. 'value' → logprob: -16.250207901000977
    9. '_VAL' → logprob: -16.875207901000977
    10. 's' → logprob: -17.375207901000977

Token 1300: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.126521035796031e-05
    2. '())' → logprob: -9.625091552734375
    3. '()' → logprob: -11.875091552734375
    4. '       ' → logprob: -12.125091552734375
    5. ')
' → logprob: -12.500091552734375
    6. '<|end|>' → logprob: -12.750091552734375
    7. ' )' → logprob: -13.000091552734375
    8. '   ' → logprob: -13.375091552734375
    9. '(' → logprob: -13.875091552734375
    10. ')return' → logprob: -15.250091552734375

Token 1301: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1302: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.01748889870941639
    2. 'mc' → logprob: -4.767488956451416
    3. ' main' → logprob: -4.892488956451416
    4. '_mc' → logprob: -7.642488956451416
    5. 'run' → logprob: -8.392488479614258
    6. 'solve' → logprob: -8.767488479614258
    7. 'example' → logprob: -9.017488479614258
    8. '_main' → logprob: -9.267488479614258
    9. ' mc' → logprob: -9.392488479614258
    10. 'parse' → logprob: -10.017488479614258

Token 1303: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01423872634768486
    2. '():
' → logprob: -4.2642388343811035
    3. '()' → logprob: -9.639238357543945
    4. ' ():' → logprob: -12.264238357543945
    5. '():
' → logprob: -12.264238357543945
    6. '()>' → logprob: -14.889238357543945
    7. '():

' → logprob: -15.639238357543945
    8. '()->' → logprob: -16.014238357543945
    9. '()">' → logprob: -17.264238357543945
    10. '()-' → logprob: -18.514238357543945

Token 1304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9093877077102661
    2. ' import' → logprob: -1.1593877077102661
    3. 'import' → logprob: -1.4093877077102661
    4. '```' → logprob: -3.4093875885009766
    5. ' while' → logprob: -5.534387588500977
    6. 'while' → logprob: -7.034387588500977
    7. ' for' → logprob: -7.784387588500977
    8. ' n' → logprob: -7.909387588500977
    9. 'n' → logprob: -8.784387588500977
    10. '``' → logprob: -9.409387588500977

Token 1305: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.24428977072238922
    2. 'n' → logprob: -2.3692898750305176
    3. '   ' → logprob: -2.3692898750305176
    4. ' import' → logprob: -3.7442898750305176
    5. ' n' → logprob: -5.494289875030518
    6. 't' → logprob: -6.869289875030518
    7. 'for' → logprob: -7.369289875030518
    8. ' for' → logprob: -9.24428939819336
    9. 'num' → logprob: -9.74428939819336
    10. ' t' → logprob: -11.11928939819336

Token 1306: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.5776860184123507e-06
    2. ' sys' → logprob: -13.00000286102295
    3. '=sys' → logprob: -15.50000286102295
    4. '	sys' → logprob: -18.750001907348633
    5. 'io' → logprob: -19.250001907348633
    6. 'stdin' → logprob: -19.375001907348633
    7. '(sys' → logprob: -20.625001907348633
    8. 'math' → logprob: -20.625001907348633
    9. '__' → logprob: -21.625001907348633
    10. '
' → logprob: -21.625001907348633

Token 1307: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07059970498085022
    2. '
' → logprob: -3.6955997943878174
    3. 'for' → logprob: -3.6955997943878174
    4. '    
' → logprob: -4.445599555969238
    5. ' for' → logprob: -5.445599555969238
    6. 'input' → logprob: -6.695599555969238
    7. 'def' → logprob: -8.445599555969238
    8. '<|end|>' → logprob: -8.445599555969238
    9. '   
' → logprob: -8.570599555969238
    10. '```' → logprob: -8.945599555969238

Token 1308: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6110193133354187
    2. '   ' → logprob: -1.3610193729400635
    3. ' for' → logprob: -1.7360193729400635
    4. ' lines' → logprob: -4.111019134521484
    5. 'input' → logprob: -5.486019134521484
    6. 'lines' → logprob: -6.236019134521484
    7. ' input' → logprob: -6.236019134521484
    8. ' readline' → logprob: -10.236019134521484
    9. 'data' → logprob: -10.361019134521484
    10. 'def' → logprob: -11.111019134521484

Token 1309: ' input' (ID: 3422)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16485227644443512
    2. ' for' → logprob: -2.4148523807525635
    3. '   ' → logprob: -2.7898523807525635
    4. ' lines' → logprob: -7.539852142333984
    5. 'lines' → logprob: -7.664852142333984
    6. 'input' (adapté à ' input') → logprob: -9.414852142333984
    7. '
' → logprob: -10.039852142333984
    8. '    
' → logprob: -10.914852142333984
    9. 'while' → logprob: -11.664852142333984
    10. ' input' → logprob: -12.289852142333984

Token 1310: ' =' (ID: 314)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.8100948929786682
    2. '_lines' → logprob: -0.8100948929786682
    3. '()' → logprob: -3.0600948333740234
    4. '_data' → logprob: -3.1850948333740234
    5. '=' → logprob: -4.560094833374023
    6. '_' → logprob: -5.310094833374023
    7. ' =' → logprob: -5.435094833374023
    8. '_str' → logprob: -7.060094833374023
    9. '_text' → logprob: -7.310094833374023
    10. '_stream' → logprob: -8.185094833374023

Token 1311: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0005599428550340235
    2. ' sys' → logprob: -7.5005598068237305
    3. 'input' → logprob: -12.00055980682373
    4. '=sys' → logprob: -14.75055980682373
    5. '	sys' → logprob: -15.37555980682373
    6. '(sys' → logprob: -15.50055980682373
    7. 'lambda' → logprob: -18.625560760498047
    8. 'stdin' → logprob: -20.500560760498047
    9. ' input' → logprob: -20.625560760498047
    10. '_sys' → logprob: -21.250560760498047

Token 1312: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.2996433675289154
    2. '.readline' → logprob: -1.4246433973312378
    3. '.' → logprob: -4.049643516540527
    4. 'stdin' → logprob: -7.674643516540527
    5. '.stdout' → logprob: -8.299643516540527
    6. '.readlines' → logprob: -10.049643516540527
    7. '.__' → logprob: -10.174643516540527
    8. '().' → logprob: -10.424643516540527
    9. '(stdin' → logprob: -10.799643516540527
    10. '.read' → logprob: -11.799643516540527

Token 1313: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.003890934167429805
    2. 'read' → logprob: -5.6288909912109375
    3. ' readline' → logprob: -8.378890991210938
    4. '
' → logprob: -10.503890991210938
    5. '.readlines' → logprob: -11.003890991210938
    6. 'buffer' → logprob: -12.503890991210938
    7. '.read' → logprob: -13.253890991210938
    8. 'stdin' → logprob: -13.253890991210938
    9. '_read' → logprob: -13.253890991210938
    10. 'readonly' → logprob: -13.378890991210938

Token 1314: '

' (ID: 279)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2098153978586197
    2. '()' → logprob: -1.9598153829574585
    3. '()
' → logprob: -3.209815502166748
    4. '   ' → logprob: -4.834815502166748
    5. 'while' → logprob: -11.08481502532959
    6. '
' → logprob: -11.33481502532959
    7. '()\' → logprob: -11.33481502532959
    8. 'def' → logprob: -11.95981502532959
    9. '()

' → logprob: -12.70981502532959
    10. '(' → logprob: -12.70981502532959

Token 1315: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.62120521068573
    2. '   ' → logprob: -1.37120521068573
    3. 'while' → logprob: -1.74620521068573
    4. 't' → logprob: -3.9962053298950195
    5. 'for' → logprob: -4.3712053298950195
    6. ' while' → logprob: -6.4962053298950195
    7. 'try' → logprob: -7.3712053298950195
    8. ' n' → logprob: -7.7462053298950195
    9. 'T' → logprob: -8.24620532989502
    10. 'N' → logprob: -8.37120532989502

Token 1316: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.7003929018974304
    2. 'while' → logprob: -1.0753929615020752
    3. 't' → logprob: -2.325392961502075
    4. 'for' → logprob: -3.200392961502075
    5. 'T' → logprob: -4.825392723083496
    6. '   ' → logprob: -5.200392723083496
    7. 'try' → logprob: -5.325392723083496
    8. 'N' → logprob: -5.575392723083496
    9. 'q' → logprob: -7.325392723083496
    10. 'line' → logprob: -7.575392723083496

Token 1317: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43935269117355347
    2. ' =' → logprob: -1.0643527507781982
    3. 'um' → logprob: -4.814352512359619
    4. '_' → logprob: -6.314352512359619
    5. ' ' → logprob: -8.564352989196777
    6. 'umber' → logprob: -8.689352989196777
    7. '=int' → logprob: -8.939352989196777
    8. '   ' → logprob: -9.439352989196777
    9. '_=' → logprob: -10.689352989196777
    10. 'o' → logprob: -10.939352989196777

Token 1318: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.674858301877975e-05
    2. ' int' → logprob: -9.250096321105957
    3. '1' → logprob: -15.375096321105957
    4. '10' → logprob: -15.625096321105957
    5. ' ' → logprob: -17.250097274780273
    6. 'len' → logprob: -17.375097274780273
    7. '5' → logprob: -17.500097274780273
    8. '0' → logprob: -17.875097274780273
    9. '   ' → logprob: -17.875097274780273
    10. '
' → logprob: -18.125097274780273

Token 1319: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.019748125225305557
    2. 'input' → logprob: -4.019748210906982
    3. '()' → logprob: -7.019748210906982
    4. '(' → logprob: -7.269748210906982
    5. '(
' → logprob: -12.394747734069824
    6. ' input' → logprob: -14.019747734069824
    7. '()
' → logprob: -14.269747734069824
    8. '=input' → logprob: -14.519747734069824
    9. '())' → logprob: -15.894747734069824
    10. '();' → logprob: -16.64474868774414

Token 1320: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02477453090250492
    2. '().' → logprob: -4.024774551391602
    3. '()' → logprob: -5.024774551391602
    4. ' ())' → logprob: -10.774774551391602
    5. '())
' → logprob: -12.899774551391602
    6. '(' → logprob: -13.024774551391602
    7. '();)' → logprob: -13.524774551391602
    8. ')' → logprob: -13.774774551391602
    9. '()
' → logprob: -14.774774551391602
    10. '()[' → logprob: -15.149774551391602

Token 1321: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04978159815073013
    2. '   ' → logprob: -3.049781560897827
    3. ' for' → logprob: -7.049781799316406
    4. '
' → logprob: -8.299781799316406
    5. '	for' → logprob: -10.549781799316406
    6. 'results' → logprob: -10.549781799316406
    7. '    
' → logprob: -11.049781799316406
    8. 'result' → logprob: -12.299781799316406
    9. 'lines' → logprob: -13.174781799316406
    10. 'while' → logprob: -14.549781799316406

Token 1322: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006226560100913048
    2. 'results' → logprob: -5.631226539611816
    3. 'result' → logprob: -6.131226539611816
    4. ' for' → logprob: -9.131226539611816
    5. 'total' → logprob: -9.506226539611816
    6. 'mc' → logprob: -9.506226539611816
    7. 'strings' → logprob: -9.756226539611816
    8. 'lines' → logprob: -9.756226539611816
    9. '   ' → logprob: -10.131226539611816
    10. '
' → logprob: -11.006226539611816

Token 1323: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -2.1888679839321412e-05
    2. ' _' → logprob: -10.750021934509277
    3. '_range' → logprob: -15.500021934509277
    4. ' range' → logprob: -17.12502098083496
    5. '_
' → logprob: -17.50002098083496
    6. '_
' → logprob: -18.00002098083496
    7. '_i' → logprob: -18.75002098083496
    8. '_

' → logprob: -18.87502098083496
    9. 'range' → logprob: -19.00002098083496
    10. '_=' → logprob: -19.62502098083496

Token 1324: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11656906455755234
    2. 'in' → logprob: -2.8665690422058105
    3. 'range' → logprob: -2.9915690422058105
    4. ' range' → logprob: -5.9915690422058105
    5. '_' → logprob: -7.8665690422058105
    6. '_range' → logprob: -11.116569519042969
    7. ' ' → logprob: -11.116569519042969
    8. ' _' → logprob: -12.116569519042969
    9. 'n' → logprob: -12.991569519042969
    10. '	range' → logprob: -13.116569519042969

Token 1325: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. '	range' → logprob: -18.62502670288086
    4. '(range' → logprob: -19.25002670288086
    5. '```' → logprob: -19.87502670288086
    6. '_' → logprob: -20.00002670288086
    7. 'ange' → logprob: -20.00002670288086
    8. 'input' → logprob: -21.25002670288086
    9. 'rang' → logprob: -21.25002670288086
    10. '   ' → logprob: -21.75002670288086

Token 1326: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0003013809327967465
    2. '(' → logprob: -8.750301361083984
    3. 'n' → logprob: -9.375301361083984
    4. ' (' → logprob: -9.875301361083984
    5. ' n' → logprob: -12.000301361083984
    6. '(
' → logprob: -15.625301361083984
    7. '(range' → logprob: -16.125301361083984
    8. '   ' → logprob: -16.250301361083984
    9. '(int' → logprob: -16.625301361083984
    10. '
' → logprob: -17.000301361083984

Token 1327: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0366598516702652
    2. '):' → logprob: -3.5366599559783936
    3. '   ' → logprob: -5.0366597175598145
    4. ':' → logprob: -8.536660194396973
    5. ':
' → logprob: -9.286660194396973
    6. '       ' → logprob: -9.911660194396973
    7. '():
' → logprob: -10.661660194396973
    8. '):
' → logprob: -10.786660194396973
    9. ')' → logprob: -13.286660194396973
    10. ' ):
' → logprob: -13.286660194396973

Token 1328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1117924228310585
    2. 's' → logprob: -2.3617923259735107
    3. 'line' → logprob: -5.48679256439209
    4. '   ' → logprob: -5.73679256439209
    5. ' s' → logprob: -5.98679256439209
    6. ' line' → logprob: -7.48679256439209
    7. '```' → logprob: -8.11179256439209
    8. 'a' → logprob: -8.86179256439209
    9. '	line' → logprob: -8.86179256439209
    10. '_line' → logprob: -9.11179256439209

Token 1329: ' line' (ID: 2543)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.39004242420196533
    2. 'a' → logprob: -1.1400424242019653
    3. 'line' (adapté à ' line') → logprob: -5.890042304992676
    4. ' s' → logprob: -8.765042304992676
    5. 'l' → logprob: -9.140042304992676
    6. 'mc' → logprob: -10.265042304992676
    7. ' a' → logprob: -10.390042304992676
    8. '       ' → logprob: -11.015042304992676
    9. ' line' → logprob: -11.265042304992676
    10. 'str' → logprob: -11.515042304992676

Token 1330: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07901052385568619
    2. '=' → logprob: -2.579010486602783
    3. '=line' → logprob: -9.079010963439941
    4. '       ' → logprob: -13.079010963439941
    5. '1' → logprob: -13.454010963439941
    6. '   ' → logprob: -13.704010963439941
    7. 's' → logprob: -14.329010963439941
    8. '_' → logprob: -15.204010963439941
    9. '=input' → logprob: -15.454010963439941
    10. ')' → logprob: -15.829010963439941

Token 1331: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011047814972698689
    2. ' input' → logprob: -4.511047840118408
    3. '(input' → logprob: -18.38604736328125
    4. '	input' → logprob: -18.63604736328125
    5. '=input' → logprob: -18.76104736328125
    6. '   ' → logprob: -18.88604736328125
    7. '<input' → logprob: -20.38604736328125
    8. 'sys' → logprob: -21.13604736328125
    9. 'output' → logprob: -21.26104736328125
    10. '_input' → logprob: -22.51104736328125

Token 1332: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.68022444692906e-05
    2. '()' → logprob: -10.500046730041504
    3. '.strip' → logprob: -11.000046730041504
    4. '.rstrip' → logprob: -13.500046730041504
    5. ' =' → logprob: -14.500046730041504
    6. '.readline' → logprob: -15.500046730041504
    7. 'rstrip' → logprob: -15.875046730041504
    8. ').' → logprob: -16.75004768371582
    9. ' ().' → logprob: -16.87504768371582
    10. '=' → logprob: -16.87504768371582

Token 1333: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0031777136027812958
    2. 'rstrip' → logprob: -5.753177642822266
    3. ' strip' → logprob: -16.753177642822266
    4. '_strip' → logprob: -17.253177642822266
    5. 'r' → logprob: -18.253177642822266
    6. '(strip' → logprob: -18.753177642822266
    7. '.strip' → logprob: -19.128177642822266
    8. 'read' → logprob: -19.628177642822266
    9. 'split' → logprob: -20.128177642822266
    10. 'str' → logprob: -20.378177642822266

Token 1334: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008116515236906707
    2. '        
' → logprob: -8.125811576843262
    3. '<|end|>' → logprob: -8.250811576843262
    4. ',' → logprob: -9.750811576843262
    5. '
' → logprob: -9.750811576843262
    6. 'a' → logprob: -10.625811576843262
    7. '<|end|>' → logprob: -11.125811576843262
    8. ')' → logprob: -11.625811576843262
    9. 'A' → logprob: -11.625811576843262
    10. '   ' → logprob: -12.000811576843262

Token 1335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12534482777118683
    2. 'a' → logprob: -3.000344753265381
    3. 's' → logprob: -3.250344753265381
    4. 'mc' → logprob: -3.625344753265381
    5. 'm' → logprob: -7.000344753265381
    6. 'ms' → logprob: -7.875344753265381
    7. '   ' → logprob: -8.125345230102539
    8. ' mc' → logprob: -8.125345230102539
    9. ' s' → logprob: -8.625345230102539
    10. 'obj' → logprob: -8.750345230102539

Token 1336: ' if' (ID: 538)
  Prédit: 'mc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mc' → logprob: -0.41774341464042664
    2. 'a' → logprob: -1.417743444442749
    3. 's' → logprob: -2.667743444442749
    4. 'm' → logprob: -4.04274320602417
    5. 'num' → logprob: -5.04274320602417
    6. 'val' → logprob: -6.66774320602417
    7. 'str' → logprob: -6.79274320602417
    8. '   ' → logprob: -7.04274320602417
    9. 'v' → logprob: -7.41774320602417
    10. 'x' → logprob: -7.54274320602417

Token 1337: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1890028566122055
    2. 'line' → logprob: -2.189002752304077
    3. ' not' → logprob: -2.814002752304077
    4. ' line' → logprob: -8.439002990722656
    5. 'len' → logprob: -12.439002990722656
    6. ' ' → logprob: -14.439002990722656
    7. 'no' → logprob: -14.939002990722656
    8. '
' → logprob: -14.939002990722656
    9. '#line' → logprob: -15.314002990722656
    10. '   ' → logprob: -15.439002990722656

Token 1338: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.02324780821800232
    2. ' line' → logprob: -3.773247718811035
    3. '(line' → logprob: -13.898247718811035
    4. '	line' → logprob: -14.148247718811035
    5. '
' → logprob: -15.148247718811035
    6. '#line' → logprob: -15.148247718811035
    7. '[line' → logprob: -17.27324867248535
    8. '=line' → logprob: -17.64824867248535
    9. 'len' → logprob: -18.52324867248535
    10. 'Line' → logprob: -18.64824867248535

Token 1339: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.19733856618404388
    2. ':' → logprob: -1.947338581085205
    3. '           ' → logprob: -3.322338581085205
    4. '   ' → logprob: -8.447338104248047
    5. '       ' → logprob: -9.822338104248047
    6. ':return' → logprob: -10.447338104248047
    7. ' or' → logprob: -10.572338104248047
    8. '               ' → logprob: -11.197338104248047
    9. '          ' → logprob: -12.322338104248047
    10. 'continue' → logprob: -12.322338104248047

Token 1340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008904983988031745
    2. ' continue' → logprob: -7.625890731811523
    3. 'continue' → logprob: -8.125890731811523
    4. ':
' → logprob: -9.875890731811523
    5. ':' → logprob: -10.750890731811523
    6. '       ' → logprob: -11.250890731811523
    7. '	continue' → logprob: -12.875890731811523
    8. ' continues' → logprob: -12.875890731811523
    9. '_continue' → logprob: -12.875890731811523
    10. '		' → logprob: -13.000890731811523

Token 1341: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.3089243769645691
    2. 'break' → logprob: -1.8089244365692139
    3. '           ' → logprob: -2.308924436569214
    4. ' continue' → logprob: -6.183924198150635
    5. ' break' → logprob: -8.308924674987793
    6. '               ' → logprob: -8.558924674987793
    7. '       ' → logprob: -10.808924674987793
    8. '	continue' → logprob: -11.058924674987793
    9. '	break' → logprob: -11.683924674987793
    10. '```' → logprob: -11.808924674987793

Token 1342: ' Defensive' (ID: 194572)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1103944256901741
    2. 'break' → logprob: -2.3603944778442383
    3. '           ' → logprob: -4.610394477844238
    4. ' continue' → logprob: -9.360394477844238
    5. '       ' → logprob: -9.985394477844238
    6. '#' → logprob: -10.610394477844238
    7. 'raise' → logprob: -11.110394477844238
    8. '               ' → logprob: -11.610394477844238
    9. ' break' → logprob: -12.860394477844238
    10. '   ' → logprob: -12.860394477844238

Token 1343: ':' (ID: 25)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.0039045691955834627
    2. ' continue' → logprob: -5.753904342651367
    3. '           ' → logprob: -7.628904342651367
    4. 'break' → logprob: -8.378904342651367
    5. '       ' → logprob: -13.003904342651367
    6. '   ' → logprob: -13.003904342651367
    7. '               ' → logprob: -13.128904342651367
    8. '_continue' → logprob: -13.253904342651367
    9. '```' → logprob: -13.753904342651367
    10. '	continue' → logprob: -14.378904342651367

Token 1344: ' skip' (ID: 16677)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.015287747606635094
    2. 'break' → logprob: -4.51528787612915
    3. '           ' → logprob: -5.51528787612915
    4. ' continue' → logprob: -8.515287399291992
    5. '       ' → logprob: -12.640287399291992
    6. 'raise' → logprob: -14.015287399291992
    7. '               ' → logprob: -14.640287399291992
    8. ' break' → logprob: -14.765287399291992
    9. '	continue' → logprob: -14.890287399291992
    10. 'continu' → logprob: -15.765287399291992

Token 1345: ' empty' (ID: 8213)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.023914039134979248
    2. '           ' → logprob: -3.773914098739624
    3. ' continue' → logprob: -7.398913860321045
    4. '       ' → logprob: -10.398914337158203
    5. '               ' → logprob: -11.523914337158203
    6. '
' → logprob: -11.773914337158203
    7. '	continue' → logprob: -13.023914337158203
    8. '   ' → logprob: -13.148914337158203
    9. 'contin' → logprob: -13.773914337158203
    10. 'continu' → logprob: -14.023914337158203

Token 1346: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2339465320110321
    2. 'continue' → logprob: -1.9839465618133545
    3. 'line' → logprob: -3.2339465618133545
    4. ' lines' → logprob: -3.4839465618133545
    5. 'input' → logprob: -7.483946323394775
    6. ' continue' → logprob: -8.733946800231934
    7. '       ' → logprob: -9.233946800231934
    8. '   ' → logprob: -9.733946800231934
    9. ' line' → logprob: -10.233946800231934
    10. '
' → logprob: -10.608946800231934

Token 1347: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005324243102222681
    2. '       ' → logprob: -5.255324363708496
    3. ' continue' → logprob: -10.005324363708496
    4. 'continue' → logprob: -10.755324363708496
    5. '               ' → logprob: -11.130324363708496
    6. '
' → logprob: -12.380324363708496
    7. ',' → logprob: -13.505324363708496
    8. '		' → logprob: -13.880324363708496
    9. '   ' → logprob: -14.505324363708496
    10. '          ' → logprob: -14.755324363708496

Token 1348: ' any' (ID: 1062)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7308961749076843
    2. 'line' → logprob: -1.230896234512329
    3. 'True' → logprob: -1.730896234512329
    4. ' line' → logprob: -4.10589599609375
    5. ' True' → logprob: -4.23089599609375
    6. ' not' → logprob: -4.23089599609375
    7. 'False' → logprob: -6.48089599609375
    8. 'continue' → logprob: -6.48089599609375
    9. 'empty' → logprob: -8.60589599609375
    10. 'None' → logprob: -8.85589599609375

Token 1349: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014011908788233995
    2. '       ' → logprob: -7.126401424407959
    3. 'continue' → logprob: -7.876401424407959
    4. ' continue' → logprob: -8.6264009475708
    5. '               ' → logprob: -10.6264009475708
    6. '
' → logprob: -12.0014009475708
    7. '		' → logprob: -12.7514009475708
    8. ',' → logprob: -13.1264009475708
    9. '_continue' → logprob: -14.6264009475708
    10. '   ' → logprob: -14.7514009475708

Token 1350: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023344125598669052
    2. '       ' → logprob: -3.773344039916992
    3. ' continue' → logprob: -10.023344039916992
    4. 'continue' → logprob: -10.023344039916992
    5. '               ' → logprob: -12.023344039916992
    6. '   ' → logprob: -13.523344039916992
    7. '		' → logprob: -13.648344039916992
    8. '```' → logprob: -14.648344039916992
    9. '	       ' → logprob: -15.148344039916992
    10. '	continue' → logprob: -15.523344039916992

Token 1351: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.0012735659256577492
    2. '           ' → logprob: -6.7512736320495605
    3. ' continue' → logprob: -9.501273155212402
    4. '               ' → logprob: -10.501273155212402
    5. '       ' → logprob: -14.751273155212402
    6. '	continue' → logprob: -14.876273155212402
    7. 'break' → logprob: -16.12627410888672
    8. 'contin' → logprob: -16.50127410888672
    9. 'continu' → logprob: -16.75127410888672
    10. '_continue' → logprob: -17.00127410888672

Token 1352: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010372612625360489
    2. 'a' → logprob: -5.385372638702393
    3. 's' → logprob: -5.510372638702393
    4. 'mc' → logprob: -7.135372638702393
    5. '
' → logprob: -8.635372161865234
    6. 'lhs' → logprob: -9.010372161865234
    7. ' s' → logprob: -9.385372161865234
    8. 'l' → logprob: -9.510372161865234
    9. 'left' → logprob: -9.510372161865234
    10. '        
' → logprob: -9.510372161865234

Token 1353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019835779443383217
    2. 'a' → logprob: -4.769835948944092
    3. 's' → logprob: -5.144835948944092
    4. 'mc' → logprob: -5.519835948944092
    5. 'l' → logprob: -8.019835472106934
    6. 'm' → logprob: -8.394835472106934
    7. 'line' → logprob: -8.394835472106934
    8. 'obj' → logprob: -9.019835472106934
    9. '   ' → logprob: -9.144835472106934
    10. 'left' → logprob: -9.769835472106934

Token 1354: ' s' (ID: 265)
  Prédit: 'mc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mc' → logprob: -0.46247702836990356
    2. 'a' → logprob: -1.5874769687652588
    3. 's' (adapté à ' s') → logprob: -2.337476968765259
    4. '       ' → logprob: -2.962476968765259
    5. '   ' → logprob: -4.962477207183838
    6. 'm' → logprob: -5.337477207183838
    7. 'val' → logprob: -6.212477207183838
    8. 'num' → logprob: -7.212477207183838
    9. 'value' → logprob: -7.337477207183838
    10. 'first' → logprob: -7.712477207183838

Token 1355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2506059408187866
    2. '_mc' → logprob: -2.125606060028076
    3. ' =' → logprob: -2.875606060028076
    4. '_obj' → logprob: -3.750606060028076
    5. '_str' → logprob: -4.875606060028076
    6. '2' → logprob: -4.875606060028076
    7. '=' → logprob: -5.625606060028076
    8. 'mc' → logprob: -6.250606060028076
    9. '_' → logprob: -7.500606060028076
    10. '_a' → logprob: -8.000605583190918

Token 1356: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26297032833099365
    2. '=' → logprob: -1.5129703283309937
    3. ',' → logprob: -4.512970447540283
    4. ',s' → logprob: -12.012969970703125
    5. 's' → logprob: -12.512969970703125
    6. ' ,' → logprob: -12.762969970703125
    7. '=s' → logprob: -14.887969970703125
    8. ' ' → logprob: -15.137969970703125
    9. ' s' → logprob: -15.387969970703125
    10. ')' → logprob: -15.387969970703125

Token 1357: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03804149478673935
    2. ' s' → logprob: -3.288041591644287
    3. ' ' → logprob: -18.163042068481445
    4. '_s' → logprob: -18.788042068481445
    5. '	s' → logprob: -19.288042068481445
    6. '   ' → logprob: -19.413042068481445
    7. ' ' → logprob: -20.413042068481445
    8. '    ' → logprob: -20.538042068481445
    9. '  ' → logprob: -21.538042068481445
    10. '       ' → logprob: -21.663042068481445

Token 1358: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '_' → logprob: -17.125
    3. 's' → logprob: -17.75
    4. '₂' → logprob: -20.125
    5. '２' → logprob: -21.5
    6. ',' → logprob: -21.75
    7. ' ' → logprob: -22.125
    8. '_,' → logprob: -22.375
    9. '
' → logprob: -22.625
    10. '=' → logprob: -22.625

Token 1359: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07896370440721512
    2. ' =' → logprob: -2.5789637565612793
    3. ',' → logprob: -9.578963279724121
    4. 's' → logprob: -13.328963279724121
    5. '<|end|>' → logprob: -13.828963279724121
    6. '=line' → logprob: -14.828963279724121
    7. ' ' → logprob: -14.953963279724121
    8. '_=' → logprob: -15.453963279724121
    9. '＝' → logprob: -15.578963279724121
    10. ')' → logprob: -15.703963279724121

Token 1360: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.004078401252627373
    2. ' line' → logprob: -5.504078388214111
    3. '[line' → logprob: -17.754077911376953
    4. '(line' → logprob: -18.504077911376953
    5. '	line' → logprob: -18.754077911376953
    6. 'input' → logprob: -19.379077911376953
    7. '=line' → logprob: -19.379077911376953
    8. 'map' → logprob: -19.879077911376953
    9. '_line' → logprob: -20.379077911376953
    10. '#line' → logprob: -20.379077911376953

Token 1361: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00671584764495492
    2. ' =' → logprob: -5.006715774536133
    3. '=line' → logprob: -15.006715774536133
    4. '=s' → logprob: -16.506715774536133
    5. '.split' → logprob: -16.756715774536133
    6. 'split' → logprob: -17.756715774536133
    7. '=input' → logprob: -17.756715774536133
    8. 's' → logprob: -17.881715774536133
    9. '.=' → logprob: -17.881715774536133
    10. '＝' → logprob: -18.506715774536133

Token 1362: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012880703434348106
    2. '('' → logprob: -9.750128746032715
    3. '()
' → logprob: -10.375128746032715
    4. ''' → logprob: -10.500128746032715
    5. '(' → logprob: -13.500128746032715
    6. '<|end|>' → logprob: -13.500128746032715
    7. ')' → logprob: -13.625128746032715
    8. '"' → logprob: -13.750128746032715
    9. '())' → logprob: -13.750128746032715
    10. '()

' → logprob: -14.000128746032715

Token 1363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005950364284217358
    2. 's' → logprob: -5.630950450897217
    3. ' s' → logprob: -6.755950450897217
    4. 'a' → logprob: -6.880950450897217
    5. '        
' → logprob: -9.755949974060059
    6. ' a' → logprob: -10.380949974060059
    7. '```' → logprob: -11.255949974060059
    8. 'result' → logprob: -11.755949974060059
    9. 'v' → logprob: -11.755949974060059
    10. '   ' → logprob: -12.130949974060059

Token 1364: ' first' (ID: 1577)
  Prédit: 'mc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mc' → logprob: -0.05629464611411095
    2. '       ' → logprob: -3.5562946796417236
    3. 'm' → logprob: -3.9312946796417236
    4. 'num' → logprob: -5.5562944412231445
    5. ' mc' → logprob: -7.4312944412231445
    6. 'val' → logprob: -7.5562944412231445
    7. 'a' → logprob: -7.6812944412231445
    8. 'v' → logprob: -8.056294441223145
    9. '   ' → logprob: -8.181294441223145
    10. 's' → logprob: -9.056294441223145

Token 1365: '_mc' (ID: 112000)
  Prédit: '_mc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mc' → logprob: -0.3021147847175598
    2. ' =' → logprob: -1.802114725112915
    3. '_str' → logprob: -2.427114725112915
    4. '_val' → logprob: -5.427114963531494
    5. '_obj' → logprob: -6.927114963531494
    6. '_m' → logprob: -7.302114963531494
    7. '=' → logprob: -7.552114963531494
    8. '_num' → logprob: -8.427114486694336
    9. '_value' → logprob: -8.677114486694336
    10. 'mc' → logprob: -9.052114486694336

Token 1366: 'xi' (ID: 22180)
  Prédit: 'xi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xi' → logprob: -0.020846186205744743
    2. 'x' → logprob: -4.520846366882324
    3. 'xis' → logprob: -4.645846366882324
    4. 'xiom' → logprob: -10.145846366882324
    5. 'xit' → logprob: -10.645846366882324
    6. 'xim' → logprob: -10.895846366882324
    7. 'XI' → logprob: -11.145846366882324
    8. 'xic' → logprob: -11.395846366882324
    9. 'first' → logprob: -11.895846366882324
    10. 'xies' → logprob: -12.020846366882324

Token 1367: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2199869304895401
    2. 'string' → logprob: -2.469986915588379
    3. '=' → logprob: -2.969986915588379
    4. '_string' → logprob: -3.219986915588379
    5. '_str' → logprob: -4.094986915588379
    6. 'str' → logprob: -5.594986915588379
    7. 's' → logprob: -7.344986915588379
    8. 'String' → logprob: -7.969986915588379
    9. '1' → logprob: -8.844986915588379
    10. '_' → logprob: -10.094986915588379

Token 1368: ' MC' (ID: 31263)
  Prédit: 'MC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MC' → logprob: -0.0001238004770129919
    2. ' MC' → logprob: -9.000123977661133
    3. '_MC' → logprob: -15.375123977661133
    4. '   ' → logprob: -15.625123977661133
    5. 'mc' → logprob: -17.375123977661133
    6. 'Mc' → logprob: -19.250123977661133
    7. '_mc' → logprob: -19.375123977661133
    8. '  ' → logprob: -19.750123977661133
    9. ' ' → logprob: -19.750123977661133
    10. 'ML' → logprob: -20.875123977661133

Token 1369: 'XI' (ID: 124666)
  Prédit: 'XI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XI' → logprob: -6.945094355614856e-05
    2. 'I' → logprob: -10.125069618225098
    3. 'X' → logprob: -10.500069618225098
    4. ' XI' → logprob: -14.375069618225098
    5. 'JI' → logprob: -14.750069618225098
    6. 'xi' → logprob: -15.125069618225098
    7. 'XL' → logprob: -15.875069618225098
    8. '
' → logprob: -16.12506866455078
    9. 'IX' → logprob: -16.37506866455078
    10. 'Xi' → logprob: -17.00006866455078

Token 1370: 'String' (ID: 916)
  Prédit: 'String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -5.512236498361744e-07
    2. 'string' → logprob: -14.625000953674316
    3. '_String' → logprob: -18.5
    4. ' String' → logprob: -19.125
    5. '_string' → logprob: -19.25
    6. 'tring' → logprob: -20.375
    7. 'First' → logprob: -20.5
    8. '_STRING' → logprob: -20.875
    9. 'Strings' → logprob: -20.875
    10. '	String' → logprob: -21.0

Token 1371: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.0021287298295646906
    2. '.' → logprob: -6.377128601074219
    3. '=parse' → logprob: -8.002128601074219
    4. 'parse' → logprob: -9.502128601074219
    5. ' .' → logprob: -12.127128601074219
    6. ' =' → logprob: -12.377128601074219
    7. '=' → logprob: -12.752128601074219
    8. '_parse' → logprob: -13.127128601074219
    9. '   ' → logprob: -14.002128601074219
    10. '```' → logprob: -15.127128601074219

Token 1372: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -9.088346359931165e-07
    2. 's' → logprob: -14.500000953674316
    3. ' (' → logprob: -15.750000953674316
    4. '(' → logprob: -16.125
    5. '       ' → logprob: -16.625
    6. '(
' → logprob: -17.375
    7. '   ' → logprob: -17.5
    8. '```' → logprob: -19.125
    9. '           ' → logprob: -20.125
    10. '(S' → logprob: -20.25

Token 1373: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08874978870153427
    2. 's' → logprob: -2.838749885559082
    3. '2' → logprob: -4.338749885559082
    4. '(s' → logprob: -4.338749885559082
    5. ')' → logprob: -9.088749885559082
    6. 'tr' → logprob: -10.588749885559082
    7. ' s' → logprob: -11.088749885559082
    8. 'I' → logprob: -11.088749885559082
    9. 'str' → logprob: -11.213749885559082
    10. 'i' → logprob: -11.213749885559082

Token 1374: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018164340406656265
    2. ')
' → logprob: -4.018164157867432
    3. '       ' → logprob: -11.76816463470459
    4. '   ' → logprob: -12.76816463470459
    5. ')
' → logprob: -13.14316463470459
    6. ' )' → logprob: -14.39316463470459
    7. ')

' → logprob: -14.89316463470459
    8. '),' → logprob: -15.51816463470459
    9. ')add' → logprob: -15.76816463470459
    10. ')+' → logprob: -16.268163681030273

Token 1375: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0792078971862793
    2. 'second' → logprob: -2.5792078971862793
    3. ' second' → logprob: -8.079208374023438
    4. '	second' → logprob: -12.079208374023438
    5. '   ' → logprob: -13.579208374023438
    6. '           ' → logprob: -14.829208374023438
    7. '_second' → logprob: -15.204208374023438
    8. 'next' → logprob: -15.329208374023438
    9. 'Second' → logprob: -16.329208374023438
    10. '	' → logprob: -16.454208374023438

Token 1376: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' (adapté à ' second') → logprob: -1.1472419600977446e-06
    2. ' second' → logprob: -13.750000953674316
    3. '	second' → logprob: -17.250001907348633
    4. '       ' → logprob: -21.125001907348633
    5. '_second' → logprob: -21.375001907348633
    6. '   ' → logprob: -22.375001907348633
    7. 'Second' → logprob: -22.875001907348633
    8. 'first' → logprob: -23.000001907348633
    9. 'SECOND' → logprob: -23.875001907348633
    10. '.second' → logprob: -24.000001907348633

Token 1377: '_mc' (ID: 112000)
  Prédit: '_mc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mc' → logprob: -4.320199877838604e-07
    2. '=' → logprob: -15.375
    3. 'mc' → logprob: -15.625
    4. ' =' → logprob: -17.125
    5. '_MC' → logprob: -18.875
    6. '_tc' → logprob: -20.375
    7. '_mv' → logprob: -20.625
    8. '```' → logprob: -20.875
    9. '_pc' → logprob: -21.25
    10. '_nc' → logprob: -21.375

Token 1378: 'xi' (ID: 22180)
  Prédit: 'xi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xi' → logprob: -0.00014251544780563563
    2. 'string' → logprob: -9.500142097473145
    3. 'XI' → logprob: -11.000142097473145
    4. 'ix' → logprob: -11.375142097473145
    5. '_string' → logprob: -11.500142097473145
    6. 'String' → logprob: -11.625142097473145
    7. 'i' → logprob: -11.875142097473145
    8. ' xi' → logprob: -12.625142097473145
    9. '\x' → logprob: -13.000142097473145
    10. 'x' → logprob: -14.000142097473145

Token 1379: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132671117782593
    2. '=' → logprob: -1.3132671117782593
    3. '+' → logprob: -13.68826675415039
    4. ' +=' → logprob: -13.93826675415039
    5. '+=' → logprob: -13.93826675415039
    6. ')' → logprob: -14.18826675415039
    7. ' ' → logprob: -15.18826675415039
    8. ' +' → logprob: -15.18826675415039
    9. '	' → logprob: -15.31326675415039
    10. ' ' → logprob: -15.93826675415039

Token 1380: ' MC' (ID: 31263)
  Prédit: 'MC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MC' → logprob: -0.0040801819413900375
    2. ' MC' → logprob: -5.504080295562744
    3. '_MC' → logprob: -13.254079818725586
    4. 'mc' → logprob: -18.129079818725586
    5. '       ' → logprob: -18.254079818725586
    6. '           ' → logprob: -18.629079818725586
    7. '_mc' → logprob: -18.629079818725586
    8. 'M' → logprob: -19.504079818725586
    9. '   ' → logprob: -19.629079818725586
    10. ' ' → logprob: -20.004079818725586

Token 1381: 'XI' (ID: 124666)
  Prédit: 'XI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'XI' → logprob: -0.00021152703266125172
    2. 'String' → logprob: -8.875211715698242
    3. 'X' → logprob: -9.875211715698242
    4. 'xi' → logprob: -12.000211715698242
    5. 'I' → logprob: -12.125211715698242
    6. 'string' → logprob: -12.500211715698242
    7. 'XL' → logprob: -13.375211715698242
    8. ' XI' → logprob: -14.125211715698242
    9. '_string' → logprob: -14.375211715698242
    10. 'JI' → logprob: -15.125211715698242

Token 1382: 'String' (ID: 916)
  Prédit: 'String'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -7.896309739408025e-07
    2. 'string' → logprob: -14.250000953674316
    3. '_String' → logprob: -18.875
    4. 'I' → logprob: -19.0
    5. '```' → logprob: -19.75
    6. 'MC' → logprob: -20.125
    7. '.String' → logprob: -20.125
    8. '_string' → logprob: -20.25
    9. '_STRING' → logprob: -20.25
    10. ' String' → logprob: -20.375

Token 1383: '.parse' (ID: 7259)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14873336255550385
    2. ' =' → logprob: -2.023733377456665
    3. '.parse' → logprob: -5.273733139038086
    4. 'parse' → logprob: -7.648733139038086
    5. '=parse' → logprob: -7.773733139038086
    6. '   ' → logprob: -11.898733139038086
    7. '.' → logprob: -12.648733139038086
    8. '_parse' → logprob: -13.898733139038086
    9. '=
' → logprob: -14.023733139038086
    10. ':' → logprob: -14.273733139038086

Token 1384: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0014309515245258808
    2. 'MC' → logprob: -7.126430988311768
    3. '(mc' → logprob: -7.876430988311768
    4. '(second' → logprob: -8.62643051147461
    5. '(first' → logprob: -10.75143051147461
    6. ' MC' → logprob: -11.00143051147461
    7. 's' → logprob: -11.12643051147461
    8. '_MC' → logprob: -12.37643051147461
    9. '(parse' → logprob: -13.00143051147461
    10. 'second' → logprob: -13.00143051147461

Token 1385: '2' (ID: 17)
  Prédit: 'String'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'String' → logprob: -0.2703859806060791
    2. 's' → logprob: -1.520385980606079
    3. 'string' → logprob: -4.6453857421875
    4. '2' → logprob: -5.5203857421875
    5. '(s' → logprob: -5.5203857421875
    6. 'str' → logprob: -8.6453857421875
    7. '```' → logprob: -9.0203857421875
    8. 'line' → logprob: -9.2703857421875
    9. ')' → logprob: -9.7703857421875
    10. 'Strings' → logprob: -10.3953857421875

Token 1386: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26648250222206116
    2. ')' → logprob: -1.7664824724197388
    3. ')
' → logprob: -2.7664825916290283
    4. '   ' → logprob: -9.89148235321045
    5. '<|end|>' → logprob: -11.01648235321045
    6. '
' → logprob: -11.26648235321045
    7. ')
' → logprob: -11.26648235321045
    8. '<|end|>' → logprob: -12.76648235321045
    9. '):
' → logprob: -13.14148235321045
    10. '           ' → logprob: -13.14148235321045

Token 1387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011401933617889881
    2. 'result' → logprob: -4.511402130126953
    3. ' result' → logprob: -8.011402130126953
    4. 'sum' → logprob: -11.011402130126953
    5. '
' → logprob: -13.011402130126953
    6. '	result' → logprob: -13.886402130126953
    7. ' sum' → logprob: -14.011402130126953
    8. '   ' → logprob: -14.386402130126953
    9. 'res' → logprob: -14.886402130126953
    10. 'answer' → logprob: -15.636402130126953

Token 1388: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.0019264941802248359
    2. 'sum' → logprob: -7.001926422119141
    3. 'res' → logprob: -7.251926422119141
    4. '   ' → logprob: -9.00192642211914
    5. '       ' → logprob: -9.25192642211914
    6. 'print' → logprob: -9.50192642211914
    7. ' result' → logprob: -12.00192642211914
    8. 'summ' → logprob: -13.62692642211914
    9. 'total' → logprob: -13.87692642211914
    10. 'answer' → logprob: -14.00192642211914

Token 1389: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005234002135694027
    2. '=' → logprob: -5.2552337646484375
    3. ' ' → logprob: -17.005233764648438
    4. '	' → logprob: -17.130233764648438
    5. ' =
' → logprob: -17.255233764648438
    6. '```' → logprob: -17.255233764648438
    7. '=result' → logprob: -17.505233764648438
    8. '<|end|>' → logprob: -17.505233764648438
    9. '   ' → logprob: -18.005233764648438
    10. ':' → logprob: -18.130233764648438

Token 1390: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -9.615255839889869e-05
    2. ' first' → logprob: -9.250096321105957
    3. 'MC' → logprob: -18.50009536743164
    4. '(first' → logprob: -19.87509536743164
    5. '	first' → logprob: -20.00009536743164
    6. ' MC' → logprob: -21.87509536743164
    7. '[first' → logprob: -23.12509536743164
    8. '   ' → logprob: -23.25009536743164
    9. 'First' → logprob: -23.87509536743164
    10. '
' → logprob: -24.25009536743164

Token 1391: '_mc' (ID: 112000)
  Prédit: '_mc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mc' → logprob: -3.249780638725497e-05
    2. ' +' → logprob: -10.625032424926758
    3. '+' → logprob: -12.375032424926758
    4. 'mc' → logprob: -12.750032424926758
    5. '_add' → logprob: -14.500032424926758
    6. '_MC' → logprob: -14.875032424926758
    7. '_' → logprob: -17.125032424926758
    8. 'MC' → logprob: -17.625032424926758
    9. '.mc' → logprob: -18.125032424926758
    10. 'Mc' → logprob: -18.125032424926758

Token 1392: 'xi' (ID: 22180)
  Prédit: 'xi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xi' → logprob: -4.842555426876061e-06
    2. 'XI' → logprob: -12.750004768371582
    3. 'string' → logprob: -14.625004768371582
    4. 'ix' → logprob: -14.875004768371582
    5. '\x' → logprob: -15.000004768371582
    6. 'ixi' → logprob: -15.625004768371582
    7. '   ' → logprob: -16.3750057220459
    8. ' xi' → logprob: -16.3750057220459
    9. 'String' → logprob: -16.3750057220459
    10. 'xiom' → logprob: -16.5000057220459

Token 1393: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.043001025915145874
    2. '+' → logprob: -3.1680009365081787
    3. '<|end|>' → logprob: -14.293001174926758
    4. ' +
' → logprob: -14.418001174926758
    5. '+
' → logprob: -15.543001174926758
    6. ' ' → logprob: -16.418001174926758
    7. '<|end|>' → logprob: -16.543001174926758
    8. ' ' → logprob: -16.543001174926758
    9. '＋' → logprob: -16.793001174926758
    10. ' +
' → logprob: -17.043001174926758

Token 1394: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -3.7697225252486533e-06
    2. ' second' → logprob: -12.500003814697266
    3. 'third' → logprob: -23.375003814697266
    4. '	second' → logprob: -24.000003814697266
    5. '   ' → logprob: -24.750003814697266
    6. '.second' → logprob: -25.125003814697266
    7. '(second' → logprob: -25.125003814697266
    8. '
' → logprob: -25.875003814697266
    9. 'Second' → logprob: -26.125003814697266
    10. 'first' → logprob: -26.625003814697266

Token 1395: '_mc' (ID: 112000)
  Prédit: '_mc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mc' → logprob: -7.226628895296017e-06
    2. 'second' → logprob: -12.500007629394531
    3. 'mc' → logprob: -12.875007629394531
    4. 'result' → logprob: -14.500007629394531
    5. '_second' → logprob: -15.500007629394531
    6. '_tc' → logprob: -16.87500762939453
    7. 'first' → logprob: -17.00000762939453
    8. '_oc' → logprob: -18.12500762939453
    9. '_result' → logprob: -18.50000762939453
    10. '_MC' → logprob: -18.50000762939453

Token 1396: 'xi' (ID: 22180)
  Prédit: 'xi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xi' → logprob: -0.038170937448740005
    2. 'XI' → logprob: -3.2881710529327393
    3. 'string' → logprob: -11.03817081451416
    4. 'String' → logprob: -11.16317081451416
    5. '\x' → logprob: -11.28817081451416
    6. 'xis' → logprob: -11.53817081451416
    7. 'xiom' → logprob: -11.53817081451416
    8. 'i' → logprob: -12.03817081451416
    9. 'ix' → logprob: -12.03817081451416
    10. '_string' → logprob: -12.22567081451416

Token 1397: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00673491507768631
    2. 'print' → logprob: -5.006734848022461
    3. '	' → logprob: -11.756734848022461
    4. '   ' → logprob: -12.006734848022461
    5. ' print' → logprob: -13.006734848022461
    6. '
' → logprob: -13.506734848022461
    7. '        
' → logprob: -14.631734848022461
    8. '```' → logprob: -14.756734848022461
    9. '	print' → logprob: -14.756734848022461
    10. '<|end|>' → logprob: -15.131734848022461

Token 1398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024806505534797907
    2. 'print' → logprob: -6.002480506896973
    3. '   ' → logprob: -12.252480506896973
    4. '
' → logprob: -16.62748146057129
    5. ' print' → logprob: -16.62748146057129
    6. '	' → logprob: -17.12748146057129
    7. '```' → logprob: -17.50248146057129
    8. '           ' → logprob: -18.25248146057129
    9. '        
' → logprob: -18.62748146057129
    10. '	print' → logprob: -18.87748146057129

Token 1399: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -7.517272024415433e-05
    2. '       ' → logprob: -9.500075340270996
    3. ' print' → logprob: -15.250075340270996
    4. '   ' → logprob: -19.50007438659668
    5. '	print' → logprob: -19.50007438659668
    6. '
' → logprob: -20.87507438659668
    7. '```' → logprob: -21.37507438659668
    8. 'for' → logprob: -23.12507438659668
    9. 'printf' → logprob: -23.12507438659668
    10. '_print' → logprob: -23.62507438659668

Token 1400: '(result' (ID: 8111)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.06404688954353333
    2. '(result' → logprob: -2.814046859741211
    3. 'str' → logprob: -6.564046859741211
    4. 'result' → logprob: -7.314046859741211
    5. '(f' → logprob: -14.439046859741211
    6. ' str' → logprob: -15.439046859741211
    7. '(' → logprob: -17.31404685974121
    8. '[str' → logprob: -17.68904685974121
    9. '	str' → logprob: -18.56404685974121
    10. '=str' → logprob: -18.81404685974121

Token 1401: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010485442908247933
    2. '())' → logprob: -9.250104904174805
    3. '()' → logprob: -11.875104904174805
    4. ')
' → logprob: -14.375104904174805
    5. '")' → logprob: -14.625104904174805
    6. '   ' → logprob: -15.375104904174805
    7. ' )' → logprob: -15.625104904174805
    8. '`)' → logprob: -15.875104904174805
    9. ')`' → logprob: -16.375104904174805
    10. '')' → logprob: -16.750104904174805

Token 1402: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.398067828034982e-05
    2. ' if' → logprob: -10.12507438659668
    3. '```' → logprob: -10.62507438659668
    4. '
' → logprob: -12.12507438659668
    5. '<|end|>' → logprob: -13.00007438659668
    6. '#' → logprob: -14.12507438659668
    7. '    
' → logprob: -15.00007438659668
    8. '  
' → logprob: -15.50007438659668
    9. '#if' → logprob: -15.87507438659668
    10. '        
' → logprob: -16.12507438659668

Token 1403: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004103927407413721
    2. ' __' → logprob: -5.504104137420654
    3. 'name' → logprob: -10.629103660583496
    4. '_name' → logprob: -14.879103660583496
    5. 'True' → logprob: -15.004103660583496
    6. 'Name' → logprob: -15.254103660583496
    7. '```' → logprob: -16.004104614257812
    8. '___' → logprob: -16.754104614257812
    9. '/__' → logprob: -16.879104614257812
    10. '.__' → logprob: -17.504104614257812

Token 1404: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.47200241684913635
    2. '==' → logprob: -1.097002387046814
    3. ' ==' → logprob: -3.2220025062561035
    4. 'name' → logprob: -6.7220025062561035
    5. '=="' → logprob: -7.0970025062561035
    6. 'if' → logprob: -9.097002029418945
    7. ' __' → logprob: -9.097002029418945
    8. '=='' → logprob: -9.347002029418945
    9. '==
' → logprob: -10.347002029418945
    10. '```' → logprob: -10.472002029418945

Token 1405: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.1637164789135568e-05
    2. '==' → logprob: -11.500011444091797
    3. '=="' → logprob: -14.500011444091797
    4. ' ==' → logprob: -14.750011444091797
    5. '__.__' → logprob: -14.750011444091797
    6. '___' → logprob: -17.125011444091797
    7. '__
' → logprob: -17.625011444091797
    8. '```' → logprob: -17.750011444091797
    9. '__.' → logprob: -17.875011444091797
    10. '____' → logprob: -17.875011444091797

Token 1406: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4919677674770355
    2. '__' → logprob: -0.9919677972793579
    3. ' ==' → logprob: -4.616967678070068
    4. '=="' → logprob: -4.866967678070068
    5. '=='' → logprob: -9.116968154907227
    6. '=' → logprob: -10.991968154907227
    7. '==
' → logprob: -11.241968154907227
    8. '===' → logprob: -11.616968154907227
    9. '"' → logprob: -14.366968154907227
    10. '```' → logprob: -14.741968154907227

Token 1407: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002476724097505212
    2. ''' → logprob: -6.002476692199707
    3. '__' → logprob: -14.252476692199707
    4. ' "__' → logprob: -14.877476692199707
    5. '"name' → logprob: -17.252477645874023
    6. ''"' → logprob: -17.877477645874023
    7. '   ' → logprob: -18.752477645874023
    8. '"user' → logprob: -18.752477645874023
    9. '"class' → logprob: -19.502477645874023
    10. '"'' → logprob: -19.502477645874023

Token 1408: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -8.780830830801278e-05
    2. '__' → logprob: -9.62508773803711
    3. 'name' → logprob: -10.75008773803711
    4. 'm' → logprob: -16.62508773803711
    5. ' main' → logprob: -16.87508773803711
    6. 'built' → logprob: -17.37508773803711
    7. 'python' → logprob: -18.00008773803711
    8. '_main' → logprob: -18.12508773803711
    9. 'if' → logprob: -18.62508773803711
    10. 'ma' → logprob: -18.75008773803711

Token 1409: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.0033211270347237587
    2. '__' → logprob: -5.753321170806885
    3. '':
' → logprob: -9.753320693969727
    4. '__":
' → logprob: -9.878320693969727
    5. '':' → logprob: -10.878320693969727
    6. ':' → logprob: -12.253320693969727
    7. '_' → logprob: -12.753320693969727
    8. ''>
' → logprob: -13.253320693969727
    9. '():
' → logprob: -13.753320693969727
    10. ''' → logprob: -13.753320693969727

Token 1410: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0020205937325954437
    2. ' main' → logprob: -7.127020359039307
    3. '	main' → logprob: -7.502020359039307
    4. '   ' → logprob: -8.002020835876465
    5. '__' → logprob: -8.252020835876465
    6. '
' → logprob: -10.127020835876465
    7. '_main' → logprob: -11.502020835876465
    8. '    
' → logprob: -12.002020835876465
    9. '(main' → logprob: -12.002020835876465
    10. '.main' → logprob: -14.002020835876465

Token 1411: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -19.5
    3. '	main' → logprob: -22.0
    4. 'import' → logprob: -24.125
    5. '(main' → logprob: -24.625
    6. '   ' → logprob: -25.375
    7. '.main' → logprob: -25.625
    8. '_main' → logprob: -25.625
    9. '__' → logprob: -27.125
    10. '
' → logprob: -28.125

Token 1412: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1410
Tokens correctement prédits (1ère position, stricte): 573
Tokens correctement prédits (1ère position, avec adaptation): 638
Tokens correctement prédits (top 10): 1209
Précision stricte (1ère position): 40.64%
Précision adaptée (1ère position): 45.25%
Précision (top 10): 85.74%
================================================================================
