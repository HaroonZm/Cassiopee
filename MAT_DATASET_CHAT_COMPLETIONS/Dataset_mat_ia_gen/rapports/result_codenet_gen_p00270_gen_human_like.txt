================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:22:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq
sys.setrecursionlimit(10**7)
input = sys.stdin.readline

S, R = map(int, input().split())
graph = [[] for _ in range(S+1)]
for _ in range(R):
    u,v,w = map(int, input().split())
    graph[u].append((v,w))
    graph[v].append((u,w))

a,b,Q = map(int, input().split())
queries = [tuple(map(int, input().split())) for _ in range(Q)]

def dijkstra(start):
    dist = [float('inf')] * (S+1)
    dist[start] = 0
    hq = [(0,start)]
    while hq:
        cost, u = heapq.heappop(hq)
        if dist[u] < cost:
            continue
        for v,w in graph[u]:
            nd = cost + w
            if dist[v] > nd:
                dist[v] = nd
                heapq.heappush(hq, (nd,v))
    return dist

dist_a = dijkstra(a)
dist_b = dijkstra(b)

# Condition for a path p going from a -> ... -> c -> d -> ... -> b to be a shortest path from a to b:
# dist_a[b] == dist_a[c] + dist_c[d] + dist_d[b] with dist_c and dist_d distances from c and d respectively,
# and dist_c,d can be obtained from dist from c and d, but doing dijkstra Q times is too costly.
# But problem states the segment c-d must also be a shortest path between c and d.
# Check conditions:
# 1) dist_a[b] == dist_a[c] + dist_c[d] + dist_d[b]
# 2) The path from c-d is shortest: dist_c[d] == dist_d[c]

# To avoid multiple dijkstra, we compute dist from a and b.
# For distances between c and d: to check quickly, we compute dist from a and b only.
# Use dist_a and dist_b
# Note dist between c and d is NOT directly available.
# But we can compute dist from a and b and check if dist_a[b] == dist_a[c] + dist_c[d] + dist_d[b]
# Since dijkstra from c or d for each query would be expensive, but Q can be 40000, we can afford two dijkstra from c and d for each query? No.

# Alternative idea:
# If the graph is undirected and all edges positive, we can use Dijkstra.
# For shortest path, the triangle equality holds:
# dist_a[b] == dist_a[c] + dist_c[d] + dist_d[b]
# But again dist_c and dist_d not precomputed.

# Use the following equivalent condition given in solutions to similar problems:
# Path from a to b passing c, d in order and segment c-d is shortest path between c and d:
# Check dist_a[b] == dist_a[c] + dist_c[d] + dist_d[b], and
# dist_c[d] == dist_d[c]

# Since dist_c[d] symmetry, and undirected graph.

# To get dist_c[d], precompute dist from a and b is not enough.

# Alternative approach:
# For all vertices, precompute dist from a and b.
# For edge (u,v,w), if dist_a[u] + w + dist_b[v] == dist_a[b], then (u,v) can be on some shortest path from a to b.
# Similarly for (v,u,w).

# Build a shortest path DAG from a to b.

# Then, for query (c,d), check if there is a path from c to d along this DAG (meaning segment c-d is shortest path),
# and c and d are on some shortest path from a to b in order.

# So the plan:

# 1) Compute dist_a and dist_b.
# 2) Build DAG where edge u->v exists if dist_a[u] + w + dist_b[v] == dist_a[b].
# 3) For each query, check:
#   - dist_a[c] + dist_b[c] == dist_a[b] (c is on some shortest path)
#   - dist_a[d] + dist_b[d] == dist_a[b] (d is on some shortest path)
#   - There exists a path from c to d in DAG (so c before d)
# If all true, print Yes else No.

# To check path in DAG efficiently, we do a topological order of DAG and assign order indices.
# Then c can reach d if topo_order[c] <= topo_order[d] and there is path c->d.
# To check reachability quickly, we do reversed DAG and do BFS.

# Because the graph can be big, we do the following:

# For DAG:
# use adjacency list
# do DFS from a to get topo order (or use PQ)

# Then, for reachability from c to d, store for each vertex its topo order.
# Because DAG edges only go forward in topological order.
# Then if topo_order[c] > topo_order[d], no path c->d.

# But topo_order[c] <= topo_order[d] is necessary but not sufficient to ensure path.

# Then do BFS from c to check if d reachable in DAG.

# Since Q up to 40000 and each BFS is acceptable.

dist_a = dijkstra(a)
dist_b = dijkstra(b)
dist_ab = dist_a[b]

# Build DAG edges where edges are on shortest paths from a to b
dag = [[] for _ in range(S+1)]
for u in range(1,S+1):
    for v,w in graph[u]:
        if dist_a[u] + w + dist_b[v] == dist_ab:
            dag[u].append(v)
            
for c,d in queries:
    # check c and d on shortest path
    if dist_a[c] + dist_b[c] != dist_ab or dist_a[d] + dist_b[d] != dist_ab:
        print("No")
        continue
    # check reachable from c to d in dag
    if c == d:
        # c != d by problem statement, but just in case
        print("No")
        continue
    # quick check topo order? No precomputed topo order is needed, BFS is fine
    from collections import deque
    q = deque([c])
    visited = [False]*(S+1)
    visited[c] = True
    found = False
    while q:
        u = q.popleft()
        if u == d:
            found = True
            break
        for nx in dag[u]:
            if not visited[nx]:
                visited[nx] = True
                q.append(nx)
    print("Yes" if found else "No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.4285862057004124e-05
    2. '.' → logprob: -10.50003433227539
    3. '_' → logprob: -13.87503433227539
    4. '#' → logprob: -14.00003433227539
    5. 'p' → logprob: -14.00003433227539
    6. '=' → logprob: -14.37503433227539
    7. 's' → logprob: -14.62503433227539
    8. 'u' → logprob: -14.87503433227539
    9. ')' → logprob: -15.00003433227539
    10. 'i' → logprob: -15.12503433227539

Token 6: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7791608572006226
    2. '\n' → logprob: -1.2791608572006226
    3. '\' → logprob: -1.7791608572006226
    4. '
' → logprob: -2.779160976409912
    5. '```' → logprob: -5.029160976409912
    6. '

' → logprob: -5.029160976409912
    7. '' → logprob: -5.654160976409912
    8. 'import' → logprob: -5.654160976409912
    9. '.
' → logprob: -5.904160976409912
    10. '<|end|>' → logprob: -6.029160976409912

Token 7: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.36789992451667786
    2. '\' → logprob: -2.1178998947143555
    3. '

' → logprob: -3.1178998947143555
    4. '\n' → logprob: -3.2428998947143555
    5. '
' → logprob: -3.3678998947143555
    6. '<|end|>' → logprob: -3.9928998947143555
    7. ',' → logprob: -4.6178998947143555
    8. '```' → logprob: -4.9928998947143555
    9. '<|end|>' → logprob: -5.1178998947143555
    10. 'import' → logprob: -5.2428998947143555

Token 8: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3544423381972592e-05
    2. ' .' → logprob: -13.00001335144043
    3. '.readline' → logprob: -13.50001335144043
    4. '.​' → logprob: -13.50001335144043
    5. '.setdefault' → logprob: -13.87501335144043
    6. '.`' → logprob: -14.12501335144043
    7. '.)' → logprob: -14.25001335144043
    8. '.import' → logprob: -14.50001335144043
    9. '.]' → logprob: -14.62501335144043
    10. '."""' → logprob: -14.62501335144043

Token 9: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.01545608602464199
    2. 'limit' → logprob: -4.890456199645996
    3. 'trace' → logprob: -6.390456199645996
    4. '_rec' → logprob: -6.515456199645996
    5. '_limit' → logprob: -6.640456199645996
    6. 'set' → logprob: -7.015456199645996
    7. '_version' → logprob: -8.515456199645996
    8. '_' → logprob: -8.640456199645996
    9. 'threshold' → logprob: -8.765456199645996
    10. '_threshold' → logprob: -8.890456199645996

Token 10: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0031047500669956207
    2. '_limit' → logprob: -6.3781046867370605
    3. '_' → logprob: -7.0031046867370605
    4. 'urs' → logprob: -8.253105163574219
    5. 'limit' → logprob: -9.253105163574219
    6. 'ursive' → logprob: -10.128105163574219
    7. 'ur' → logprob: -10.503105163574219
    8. 'ursor' → logprob: -11.003105163574219
    9. 'ision' → logprob: -11.878105163574219
    10. '__' → logprob: -12.003105163574219

Token 11: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.0445127372804563e-05
    2. '_limit' → logprob: -12.12501049041748
    3. 'lim' → logprob: -12.62501049041748
    4. 'depth' → logprob: -14.25001049041748
    5. ' limit' → logprob: -14.87501049041748
    6. 'ault' → logprob: -15.75001049041748
    7. '-limit' → logprob: -16.125009536743164
    8. 'Limit' → logprob: -16.500009536743164
    9. '.limit' → logprob: -16.625009536743164
    10. 'threshold' → logprob: -17.000009536743164

Token 12: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2948405128554441e-05
    2. ' (' → logprob: -12.12501335144043
    3. '(
' → logprob: -12.37501335144043
    4. '(

' → logprob: -13.00001335144043
    5. '((' → logprob: -14.87501335144043
    6. '("("' → logprob: -15.37501335144043
    7. '```' → logprob: -16.25001335144043
    8. '()' → logprob: -16.87501335144043
    9. '(None' → logprob: -16.87501335144043
    10. '(
' → logprob: -17.00001335144043

Token 13: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00523612555116415
    2. '100' → logprob: -5.2552361488342285
    3. ' ' → logprob: -13.75523567199707
    4. '300' → logprob: -14.88023567199707
    5. '500' → logprob: -15.00523567199707
    6. '999' → logprob: -15.38023567199707
    7. '200' → logprob: -15.75523567199707
    8. '1' → logprob: -16.25523567199707
    9. '150' → logprob: -17.13023567199707
    10. '   ' → logprob: -17.25523567199707

Token 14: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5649006962776184
    2. '000' → logprob: -1.1899006366729736
    3. '6' → logprob: -2.4399006366729736
    4. '7' → logprob: -3.5649006366729736
    5. '00' → logprob: -4.564900875091553
    6. '5' → logprob: -7.314900875091553
    7. '4' → logprob: -7.439900875091553
    8. '8' → logprob: -9.439900398254395
    9. '07' → logprob: -10.314900398254395
    10. '**' → logprob: -10.814900398254395

Token 15: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0004234051739331335
    2. '9' → logprob: -8.250423431396484
    3. '6' → logprob: -9.250423431396484
    4. '8' → logprob: -9.625423431396484
    5. '```' → logprob: -20.375423431396484
    6. ' ' → logprob: -21.000423431396484
    7. '**' → logprob: -21.625423431396484
    8. '(' → logprob: -22.000423431396484
    9. '``' → logprob: -22.250423431396484
    10. '

' → logprob: -23.250423431396484

Token 16: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -15.375000953674316
    4. '))' → logprob: -15.625000953674316
    5. '```' → logprob: -18.125
    6. '),' → logprob: -18.625
    7. ')))' → logprob: -19.0
    8. '）' → logprob: -19.25
    9. ')

' → logprob: -19.25
    10. '()' → logprob: -19.5

Token 17: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0573400259017944
    2. '

' → logprob: -1.8073400259017944
    3. '\' → logprob: -2.057340145111084
    4. 'def' → logprob: -2.057340145111084
    5. '```' → logprob: -2.432340145111084
    6. '' → logprob: -2.932340145111084
    7. '
' → logprob: -3.182340145111084
    8. '\n' → logprob: -3.557340145111084
    9. '`' → logprob: -4.932340145111084
    10. 'class' → logprob: -5.307340145111084

Token 18: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00030293059535324574
    2. '()' → logprob: -8.625303268432617
    3. '('' → logprob: -10.500303268432617
    4. '("("' → logprob: -10.750303268432617
    5. '```' → logprob: -11.625303268432617
    6. ')' → logprob: -11.625303268432617
    7. '("")' → logprob: -11.750303268432617
    8. '(
' → logprob: -12.000303268432617
    9. '.' → logprob: -12.125303268432617
    10. '40' → logprob: -12.125303268432617

Token 19: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7936093807220459
    2. 'sys' → logprob: -1.043609380722046
    3. ' sys' → logprob: -1.793609380722046
    4. ' input' → logprob: -3.543609380722046
    5. 'lambda' → logprob: -8.418609619140625
    6. ' lambda' → logprob: -9.793609619140625
    7. '=sys' → logprob: -10.918609619140625
    8. '	sys' → logprob: -11.418609619140625
    9. '(sys' → logprob: -11.543609619140625
    10. '```' → logprob: -11.918609619140625

Token 20: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0002639582962729037
    2. '.readline' → logprob: -8.875264167785645
    3. ' .' → logprob: -9.750264167785645
    4. '[' → logprob: -10.750264167785645
    5. '.stdin' → logprob: -11.250264167785645
    6. '.
' → logprob: -12.000264167785645
    7. '.)' → logprob: -13.250264167785645
    8. '.

' → logprob: -13.250264167785645
    9. '.​' → logprob: -13.250264167785645
    10. '.

' → logprob: -13.375264167785645

Token 21: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0011614117538556457
    2. '.' → logprob: -7.126161575317383
    3. '.read' → logprob: -8.001161575317383
    4. '.buffer' → logprob: -11.001161575317383
    5. '.readlines' → logprob: -12.876161575317383
    6. '.stdin' → logprob: -13.251161575317383
    7. '.Read' → logprob: -15.001161575317383
    8. 'read' → logprob: -15.751161575317383
    9. '.write' → logprob: -16.251161575317383
    10. '.reader' → logprob: -17.126161575317383

Token 22: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45386338233947754
    2. 'n' → logprob: -1.2038633823394775
    3. '\' → logprob: -4.328863143920898
    4. 'class' → logprob: -4.703863143920898
    5. 'N' → logprob: -4.828863143920898
    6. '\n' → logprob: -4.828863143920898
    7. 'd' → logprob: -4.953863143920898
    8. '
' → logprob: -5.328863143920898
    9. '' → logprob: -5.953863143920898
    10. '

' → logprob: -6.203863143920898

Token 23: 'S' (ID: 50)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25366461277008057
    2. 'class' → logprob: -1.7536646127700806
    3. 'n' → logprob: -3.003664493560791
    4. 'N' → logprob: -7.503664493560791
    5. 'from' → logprob: -7.628664493560791
    6. 'd' → logprob: -8.62866497039795
    7. '\' → logprob: -10.50366497039795
    8. '
' → logprob: -11.12866497039795
    9. '```' → logprob: -11.37866497039795
    10. '

' → logprob: -12.25366497039795

Token 24: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5365254878997803
    2. '.' → logprob: -1.7865254878997803
    3. '=' → logprob: -2.0365254878997803
    4. '[' → logprob: -2.5365254878997803
    5. ' ' → logprob: -3.7865254878997803
    6. ',' → logprob: -5.661525726318359
    7. '_' → logprob: -5.911525726318359
    8. '[:]' → logprob: -5.911525726318359
    9. '(' → logprob: -6.161525726318359
    10. ')' → logprob: -6.661525726318359

Token 25: ' R' (ID: 460)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.8617355227470398
    2. 'T' → logprob: -1.3617355823516846
    3. 'Q' → logprob: -1.7367355823516846
    4. 'N' → logprob: -3.2367355823516846
    5. ' K' → logprob: -3.3617355823516846
    6. ' T' → logprob: -3.9867355823516846
    7. ' Q' → logprob: -4.6117353439331055
    8. 'D' → logprob: -4.7367353439331055
    9. 'M' → logprob: -5.1117353439331055
    10. 'H' → logprob: -5.2367353439331055

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28181084990501404
    2. ' =' → logprob: -1.4068108797073364
    3. ',' → logprob: -7.406810760498047
    4. ' ' → logprob: -10.156810760498047
    5. ')' → logprob: -12.531810760498047
    6. ' =
' → logprob: -12.781810760498047
    7. ' ,' → logprob: -13.156810760498047
    8. '_' → logprob: -13.281810760498047
    9. '[' → logprob: -13.656810760498047
    10. '=input' → logprob: -13.906810760498047

Token 27: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.046258050948381424
    2. 'map' → logprob: -3.171257972717285
    3. ' input' → logprob: -5.921257972717285
    4. 'input' → logprob: -7.671257972717285
    5. ' ' → logprob: -9.796257972717285
    6. ' list' → logprob: -11.046257972717285
    7. ' [' → logprob: -11.421257972717285
    8. '[' → logprob: -12.171257972717285
    9. ' tuple' → logprob: -13.046257972717285
    10. 'list' → logprob: -13.171257972717285

Token 28: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21265481412410736
    2. '(int' → logprob: -1.9626548290252686
    3. '(lambda' → logprob: -3.7126548290252686
    4. '(str' → logprob: -3.8376548290252686
    5. '(input' → logprob: -5.3376545906066895
    6. '(tuple' → logprob: -9.462655067443848
    7. '(eval' → logprob: -9.962655067443848
    8. '(list' → logprob: -9.962655067443848
    9. '(
' → logprob: -10.962655067443848
    10. '(len' → logprob: -11.337655067443848

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013912200927734375
    2. '(' → logprob: -4.388912200927734
    3. ',input' → logprob: -7.138912200927734
    4. ' ,' → logprob: -7.763912200927734
    5. ',int' → logprob: -10.263912200927734
    6. '(input' → logprob: -10.513912200927734
    7. '(sys' → logprob: -10.638912200927734
    8. ',S' → logprob: -11.013912200927734
    9. ')' → logprob: -11.013912200927734
    10. ',(' → logprob: -11.138912200927734

Token 30: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10022500902414322
    2. ' input' → logprob: -2.3502249717712402
    3. 'sys' → logprob: -11.725225448608398
    4. ' sys' → logprob: -11.850225448608398
    5. '(input' → logprob: -13.350225448608398
    6. ' ' → logprob: -14.475225448608398
    7. ',input' → logprob: -14.725225448608398
    8. ')' → logprob: -14.975225448608398
    9. '=input' → logprob: -15.850225448608398
    10. '	input' → logprob: -16.2252254486084

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0039830622263252735
    2. '()' → logprob: -6.003983020782471
    3. '())' → logprob: -6.503983020782471
    4. ')' → logprob: -13.003983497619629
    5. '(' → logprob: -13.128983497619629
    6. ' ().' → logprob: -13.878983497619629
    7. '()
' → logprob: -14.128983497619629
    8. '()))' → logprob: -14.503983497619629
    9. '());' → logprob: -15.003983497619629
    10. '();)' → logprob: -15.378983497619629

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00932026281952858
    2. 'strip' → logprob: -4.759320259094238
    3. 'rstrip' → logprob: -7.259320259094238
    4. ' split' → logprob: -14.009320259094238
    5. '(split' → logprob: -14.634320259094238
    6. 'read' → logprob: -14.884320259094238
    7. 'spl' → logprob: -17.009321212768555
    8. 'plit' → logprob: -17.009321212768555
    9. ')' → logprob: -17.134321212768555
    10. '```' → logprob: -17.134321212768555

Token 33: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015979631280060858
    2. '))' → logprob: -8.875160217285156
    3. '())' → logprob: -11.875160217285156
    4. '`)' → logprob: -12.375160217285156
    5. '),' → logprob: -13.250160217285156
    6. ')`' → logprob: -13.250160217285156
    7. '()' → logprob: -13.375160217285156
    8. ')
' → logprob: -14.250160217285156
    9. '(' → logprob: -14.500160217285156
    10. ' )' → logprob: -14.875160217285156

Token 34: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.08504621684551239
    2. ' graph' → logprob: -3.8350462913513184
    3. 'G' → logprob: -3.9600462913513184
    4. 'g' → logprob: -4.710046291351318
    5. 'edges' → logprob: -5.085046291351318
    6. 'tree' → logprob: -5.460046291351318
    7. 'nodes' → logprob: -5.585046291351318
    8. 'd' → logprob: -6.085046291351318
    9. 'dist' → logprob: -6.085046291351318
    10. 'dp' → logprob: -6.335046291351318

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0025480776093900204
    2. '=' → logprob: -6.0025482177734375
    3. '[' → logprob: -9.627548217773438
    4. '[]' → logprob: -13.377548217773438
    5. ' ' → logprob: -13.627548217773438
    6. ' =[' → logprob: -13.627548217773438
    7. ']' → logprob: -14.752548217773438
    8. '=[]' → logprob: -14.752548217773438
    9. '[:]' → logprob: -15.002548217773438
    10. 's' → logprob: -15.127548217773438

Token 36: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07937319576740265
    2. '{}' → logprob: -3.0793731212615967
    3. '{' → logprob: -3.5793731212615967
    4. ' [[]' → logprob: -6.704373359680176
    5. 'default' → logprob: -7.079373359680176
    6. '[]' → logprob: -8.079373359680176
    7. '[{' → logprob: -10.954373359680176
    8. ' [' → logprob: -11.204373359680176
    9. ' [{}' → logprob: -12.329373359680176
    10. ' {' → logprob: -13.329373359680176

Token 37: ' for' (ID: 395)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.5456395149230957
    2. '(' → logprob: -0.9206395149230957
    3. ']' → logprob: -4.295639514923096
    4. ')' → logprob: -5.170639514923096
    5. '(R' → logprob: -6.295639514923096
    6. '()' → logprob: -8.170639038085938
    7. '(
' → logprob: -8.670639038085938
    8. '(range' → logprob: -9.170639038085938
    9. ' (' → logprob: -9.545639038085938
    10. '(s' → logprob: -9.670639038085938

Token 38: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08282151818275452
    2. ' range' → logprob: -2.9578216075897217
    3. 'range' → logprob: -4.082821369171143
    4. ' _' → logprob: -4.707821369171143
    5. ' in' → logprob: -7.207821369171143
    6. ' i' → logprob: -8.2078218460083
    7. '(range' → logprob: -8.2078218460083
    8. ' ' → logprob: -8.3328218460083
    9. '_range' → logprob: -9.9578218460083
    10. 'i' → logprob: -10.3328218460083

Token 39: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12232199311256409
    2. 'in' → logprob: -2.8723220825195312
    3. ' in' → logprob: -3.3723220825195312
    4. ' range' → logprob: -3.7473220825195312
    5. '(range' → logprob: -7.372322082519531
    6. '_' → logprob: -10.622322082519531
    7. '	range' → logprob: -12.247322082519531
    8. '0' → logprob: -12.497322082519531
    9. 'i' → logprob: -12.622322082519531
    10. ' ' → logprob: -12.872322082519531

Token 40: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018155209720134735
    2. ' range' → logprob: -4.018155097961426
    3. '(range' → logprob: -12.143155097961426
    4. '	range' → logprob: -17.268156051635742
    5. 'rang' → logprob: -18.893156051635742
    6. ' ' → logprob: -20.018156051635742
    7. 'ran' → logprob: -20.518156051635742
    8. '(S' → logprob: -20.643156051635742
    9. 'Range' → logprob: -20.893156051635742
    10. 'r' → logprob: -21.018156051635742

Token 41: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -7.660315895918757e-05
    2. '(' → logprob: -9.875076293945312
    3. '(R' → logprob: -10.625076293945312
    4. '(N' → logprob: -14.750076293945312
    5. '((' → logprob: -16.250076293945312
    6. '(s' → logprob: -16.375076293945312
    7. '(M' → logprob: -17.500076293945312
    8. '(F' → logprob: -17.500076293945312
    9. '(V' → logprob: -17.625076293945312
    10. '(T' → logprob: -17.875076293945312

Token 42: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.68153518543113e-05
    2. ')' → logprob: -10.125057220458984
    3. ' )' → logprob: -11.250057220458984
    4. '+' → logprob: -13.250057220458984
    5. ')])' → logprob: -14.750057220458984
    6. ')],' → logprob: -14.875057220458984
    7. ']' → logprob: -14.875057220458984
    8. ')]
' → logprob: -15.000057220458984
    9. ')]

' → logprob: -15.875057220458984
    10. '])]' → logprob: -16.750057220458984

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020497082732617855
    2. ' ' → logprob: -8.500205039978027
    3. '2' → logprob: -13.750205039978027
    4. '0' → logprob: -16.00020408630371
    5. ')' → logprob: -16.87520408630371
    6. '```' → logprob: -17.00020408630371
    7. '   ' → logprob: -17.25020408630371
    8. '7' → logprob: -17.43770408630371
    9. '１' → logprob: -17.43770408630371
    10. 'S' → logprob: -17.43770408630371

Token 44: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008178464486263692
    2. ')' → logprob: -7.500817775726318
    3. ']' → logprob: -8.250818252563477
    4. '])' → logprob: -12.875818252563477
    5. ')])' → logprob: -14.500818252563477
    6. '])]' → logprob: -15.375818252563477
    7. ')],' → logprob: -15.500818252563477
    8. ')]
' → logprob: -16.000818252563477
    9. ' )' → logprob: -16.000818252563477
    10. '>]' → logprob: -17.125818252563477

Token 45: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00030185774085111916
    2. ' for' → logprob: -8.1253023147583
    3. '```' → logprob: -12.7503023147583
    4. '<|end|>' → logprob: -14.1253023147583
    5. '	for' → logprob: -14.7503023147583
    6. '
' → logprob: -14.8753023147583
    7. '\n' → logprob: -14.8753023147583
    8. 'r' → logprob: -15.2503023147583
    9. 'For' → logprob: -15.8753023147583
    10. '   ' → logprob: -16.625301361083984

Token 46: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.52326899766922
    2. '_' → logprob: -0.89826899766922
    3. ' range' → logprob: -9.398268699645996
    4. ' ' → logprob: -10.523268699645996
    5. '_range' → logprob: -11.523268699645996
    6. 'range' → logprob: -11.773268699645996
    7. ' i' → logprob: -12.023268699645996
    8. '_s' → logprob: -12.398268699645996
    9. ' ▁' → logprob: -12.898268699645996
    10. ' ' → logprob: -13.523268699645996

Token 47: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35018491744995117
    2. 'in' → logprob: -1.2251849174499512
    3. 'n' → logprob: -7.350184917449951
    4. ' ' → logprob: -7.600184917449951
    5. '_' → logprob: -7.725184917449951
    6. 'range' → logprob: -9.47518539428711
    7. 'raph' → logprob: -10.72518539428711
    8. 's' → logprob: -11.72518539428711
    9. ',' → logprob: -11.72518539428711
    10. ' _' → logprob: -12.22518539428711

Token 48: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20141734182834625
    2. 'range' → logprob: -1.701417326927185
    3. '	range' → logprob: -13.826416969299316
    4. 'r' → logprob: -13.951416969299316
    5. ' ' → logprob: -14.701416969299316
    6. '(range' → logprob: -14.951416969299316
    7. 'Range' → logprob: -15.576416969299316
    8. '  ' → logprob: -15.701416969299316
    9. 'rang' → logprob: -15.701416969299316
    10. 'ange' → logprob: -15.826416969299316

Token 49: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.0001645644661039114
    2. 'R' → logprob: -9.250164985656738
    3. '(' → logprob: -10.000164985656738
    4. ' R' → logprob: -10.875164985656738
    5. ' (' → logprob: -13.000164985656738
    6. '(S' → logprob: -13.500164985656738
    7. '(r' → logprob: -14.750164985656738
    8. '_R' → logprob: -17.125164031982422
    9. '	R' → logprob: -18.250164031982422
    10. '(Q' → logprob: -18.375164031982422

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00035786881926469505
    2. ' ):' → logprob: -8.625357627868652
    3. '):
' → logprob: -9.125357627868652
    4. ')' → logprob: -9.625357627868652
    5. ':' → logprob: -13.500357627868652
    6. ',' → logprob: -14.500357627868652
    7. '):
' → logprob: -14.875357627868652
    8. ''):' → logprob: -15.625357627868652
    9. '"):' → logprob: -15.875357627868652
    10. '）：' → logprob: -16.00035858154297

Token 51: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.22664445638656616
    2. 'u' → logprob: -1.726644515991211
    3. 'a' → logprob: -4.101644515991211
    4. ' a' → logprob: -4.976644515991211
    5. ' s' → logprob: -7.476644515991211
    6. 's' → logprob: -8.226644515991211
    7. ' U' → logprob: -8.476644515991211
    8. '   ' → logprob: -8.851644515991211
    9. 'A' → logprob: -9.726644515991211
    10. ' A' → logprob: -9.851644515991211

Token 52: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.32689791917800903
    2. 'a' → logprob: -1.3268978595733643
    3. 's' → logprob: -4.451898097991943
    4. ' u' → logprob: -7.576898097991943
    5. 'x' → logprob: -7.701898097991943
    6. 'A' → logprob: -7.701898097991943
    7. 'v' → logprob: -9.201897621154785
    8. ' a' → logprob: -9.326897621154785
    9. 'U' → logprob: -9.701897621154785
    10. 'p' → logprob: -9.826897621154785

Token 53: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011092393659055233
    2. ' ,' → logprob: -4.511092185974121
    3. ',v' → logprob: -10.886092185974121
    4. ' ' → logprob: -11.886092185974121
    5. ',u' → logprob: -12.511092185974121
    6. ',n' → logprob: -13.011092185974121
    7. '<|end|>' → logprob: -13.261092185974121
    8. ',input' → logprob: -13.761092185974121
    9. '‌,' → logprob: -13.886092185974121
    10. ',int' → logprob: -14.011092185974121

Token 54: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7933785319328308
    2. '=' → logprob: -1.0433785915374756
    3. ' =' → logprob: -2.0433785915374756
    4. ',v' → logprob: -2.7933785915374756
    5. ' ,' → logprob: -6.5433783531188965
    6. ',u' → logprob: -6.9183783531188965
    7. ',w' → logprob: -7.0433783531188965
    8. ',d' → logprob: -8.668378829956055
    9. ',a' → logprob: -8.793378829956055
    10. ' ' → logprob: -8.918378829956055

Token 55: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741758406162262
    2. ' =' → logprob: -0.9741758108139038
    3. ',' → logprob: -9.349175453186035
    4. ' ' → logprob: -12.224175453186035
    5. '=input' → logprob: -12.849175453186035
    6. '=line' → logprob: -13.474175453186035
    7. '＝' → logprob: -14.599175453186035
    8. ')' → logprob: -15.099175453186035
    9. '=sys' → logprob: -15.099175453186035
    10. '   ' → logprob: -15.224175453186035

Token 56: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.575939953327179
    2. ' map' → logprob: -0.825939953327179
    3. '	map' → logprob: -14.825940132141113
    4. 'm' → logprob: -16.325939178466797
    5. ' ' → logprob: -17.325939178466797
    6. '   ' → logprob: -18.575939178466797
    7. '(map' → logprob: -18.700939178466797
    8. ' ' → logprob: -18.825939178466797
    9. '```' → logprob: -18.950939178466797
    10. 'list' → logprob: -19.200939178466797

Token 57: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00025108797126449645
    2. '(' → logprob: -8.625250816345215
    3. '(input' → logprob: -9.875250816345215
    4. '(lambda' → logprob: -11.250250816345215
    5. '<int' → logprob: -12.500250816345215
    6. '[int' → logprob: -14.000250816345215
    7. ' (' → logprob: -14.500250816345215
    8. 'int' → logprob: -14.625250816345215
    9. '(str' → logprob: -14.875250816345215
    10. '=int' → logprob: -15.250250816345215

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05542029067873955
    2. ',input' → logprob: -2.930420398712158
    3. '(input' → logprob: -8.180419921875
    4. '(' → logprob: -8.430419921875
    5. ' ,' → logprob: -11.055419921875
    6. ',int' → logprob: -12.055419921875
    7. 'input' → logprob: -12.305419921875
    8. ')' → logprob: -12.555419921875
    9. '```' → logprob: -12.930419921875
    10. '(),' → logprob: -13.305419921875

Token 59: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.313262403011322
    2. ' input' → logprob: -1.3132624626159668
    3. '(input' → logprob: -15.563261985778809
    4. '	input' → logprob: -15.563261985778809
    5. ',input' → logprob: -15.938261985778809
    6. '=input' → logprob: -16.313262939453125
    7. ')' → logprob: -16.438262939453125
    8. '_input' → logprob: -16.813262939453125
    9. '<input' → logprob: -17.938262939453125
    10. ' ' → logprob: -17.938262939453125

Token 60: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3663626305060461e-05
    2. '()' → logprob: -11.25001335144043
    3. '())' → logprob: -15.12501335144043
    4. ')' → logprob: -15.50001335144043
    5. ' ().' → logprob: -17.25001335144043
    6. '().'' → logprob: -17.75001335144043
    7. '(' → logprob: -18.00001335144043
    8. '());' → logprob: -18.25001335144043
    9. '.' → logprob: -18.50001335144043
    10. '()
' → logprob: -18.50001335144043

Token 61: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5048530030981055e-06
    2. '(split' → logprob: -14.250001907348633
    3. ' split' → logprob: -14.875001907348633
    4. 'strip' → logprob: -15.250001907348633
    5. 'spl' → logprob: -16.125001907348633
    6. 'plit' → logprob: -16.750001907348633
    7. 'rstrip' → logprob: -17.125001907348633
    8. ')' → logprob: -17.625001907348633
    9. 's' → logprob: -18.250001907348633
    10. '```' → logprob: -19.500001907348633

Token 62: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000583653396461159
    2. '())' → logprob: -8.12558364868164
    3. '()' → logprob: -8.75058364868164
    4. ')
' → logprob: -9.00058364868164
    5. '))' → logprob: -12.87558364868164
    6. '(' → logprob: -14.50058364868164
    7. ' )' → logprob: -14.50058364868164
    8. '())
' → logprob: -14.62558364868164
    9. '   ' → logprob: -14.87558364868164
    10. ')`' → logprob: -15.12558364868164

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01755906082689762
    2. 'graph' → logprob: -4.767559051513672
    3. ')' → logprob: -5.767559051513672
    4. '<|end|>' → logprob: -6.142559051513672
    5. '	graph' → logprob: -6.642559051513672
    6. ' graph' → logprob: -7.392559051513672
    7. '
' → logprob: -7.517559051513672
    8. '    
' → logprob: -7.767559051513672
    9. '(graph' → logprob: -8.267559051513672
    10. '```' → logprob: -8.392559051513672

Token 64: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.04384816810488701
    2. ' graph' → logprob: -3.1688482761383057
    3. '   ' → logprob: -7.543848037719727
    4. '	graph' → logprob: -8.418848037719727
    5. '
' → logprob: -10.293848037719727
    6. '(graph' → logprob: -10.418848037719727
    7. '```' → logprob: -11.793848037719727
    8. 'heap' → logprob: -12.043848037719727
    9. ' 
' → logprob: -12.668848037719727
    10. '_graph' → logprob: -12.793848037719727

Token 65: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.339278580620885e-06
    2. '[v' → logprob: -13.125001907348633
    3. '[' → logprob: -15.125001907348633
    4. ' [' → logprob: -18.000001907348633
    5. '[w' → logprob: -20.000001907348633
    6. '[user' → logprob: -20.125001907348633
    7. '```' → logprob: -20.500001907348633
    8. '\[' → logprob: -20.625001907348633
    9. 'u' → logprob: -21.000001907348633
    10. '   ' → logprob: -21.500001907348633

Token 66: '].' (ID: 1651)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8592455983161926
    2. '.append' → logprob: -1.2342455387115479
    3. ').' → logprob: -1.4842455387115479
    4. '].' → logprob: -2.859245538711548
    5. '[' → logprob: -7.234245777130127
    6. ')' → logprob: -8.234245300292969
    7. '   ' → logprob: -8.984245300292969
    8. '.app' → logprob: -9.484245300292969
    9. '.py' → logprob: -9.734245300292969
    10. '```' → logprob: -10.734245300292969

Token 67: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.2200749754119897e-06
    2. 'app' → logprob: -13.625001907348633
    3. '.append' → logprob: -14.500001907348633
    4. 'push' → logprob: -15.000001907348633
    5. ' append' → logprob: -16.625001907348633
    6. '_append' → logprob: -17.000001907348633
    7. 'appen' → logprob: -17.375001907348633
    8. 'Append' → logprob: -17.750001907348633
    9. ' ' → logprob: -18.750001907348633
    10. 'heap' → logprob: -19.750001907348633

Token 68: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.01273271907120943
    2. '(' → logprob: -4.51273250579834
    3. '(v' → logprob: -6.38773250579834
    4. '(V' → logprob: -15.01273250579834
    5. ' (' → logprob: -15.13773250579834
    6. '([' → logprob: -15.51273250579834
    7. '(u' → logprob: -15.63773250579834
    8. '(('' → logprob: -16.137733459472656
    9. '(vc' → logprob: -16.762733459472656
    10. '(
' → logprob: -17.012733459472656

Token 69: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.0100624169572257e-05
    2. ' v' → logprob: -11.000020027160645
    3. 'w' → logprob: -12.750020027160645
    4. '   ' → logprob: -15.875020027160645
    5. ')v' → logprob: -16.37502098083496
    6. ' ' → logprob: -16.62502098083496
    7. '	v' → logprob: -17.25002098083496
    8. ',v' → logprob: -17.50002098083496
    9. ' ' → logprob: -18.37502098083496
    10. '    ' → logprob: -18.50002098083496

Token 70: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024033917114138603
    2. ',w' → logprob: -3.774034023284912
    3. ' ,' → logprob: -7.149034023284912
    4. 'w' → logprob: -13.649033546447754
    5. ',
' → logprob: -14.649033546447754
    6. '‌,' → logprob: -15.649033546447754
    7. '<|end|>' → logprob: -15.774033546447754
    8. '`,' → logprob: -16.64903450012207
    9. ',W' → logprob: -16.77403450012207
    10. ',v' → logprob: -16.89903450012207

Token 71: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008931171614676714
    2. ')' → logprob: -7.3758931159973145
    3. ',' → logprob: -9.000893592834473
    4. '))
' → logprob: -9.625893592834473
    5. ' ))' → logprob: -9.625893592834473
    6. ')))' → logprob: -12.125893592834473
    7. '),' → logprob: -12.875893592834473
    8. ' ' → logprob: -13.625893592834473
    9. '   ' → logprob: -14.500893592834473
    10. '));' → logprob: -15.250893592834473

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012224358506500721
    2. 'graph' → logprob: -4.887224197387695
    3. '	graph' → logprob: -5.637224197387695
    4. ' graph' → logprob: -7.262224197387695
    5. '<|end|>' → logprob: -8.512224197387695
    6. '(graph' → logprob: -9.137224197387695
    7. ',' → logprob: -11.637224197387695
    8. '```' → logprob: -11.762224197387695
    9. '<|end|>' → logprob: -12.512224197387695
    10. ' ' → logprob: -13.137224197387695

Token 73: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.00016897499153856188
    2. ' graph' → logprob: -9.000168800354004
    3. '	graph' → logprob: -10.500168800354004
    4. '(graph' → logprob: -11.625168800354004
    5. '<|end|>' → logprob: -11.875168800354004
    6. '   ' → logprob: -13.875168800354004
    7. ')' → logprob: -14.875168800354004
    8. '.graph' → logprob: -15.000168800354004
    9. '_graph' → logprob: -15.875168800354004
    10. 'raph' → logprob: -16.25016975402832

Token 74: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.45848218582978e-06
    2. '[u' → logprob: -13.37500286102295
    3. '[' → logprob: -14.25000286102295
    4. 'v' → logprob: -16.250001907348633
    5. '[w' → logprob: -16.500001907348633
    6. ' [' → logprob: -18.500001907348633
    7. '```' → logprob: -18.625001907348633
    8. '[V' → logprob: -19.125001907348633
    9. '[s' → logprob: -19.375001907348633
    10. '[val' → logprob: -19.375001907348633

Token 75: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.15532293915748596
    2. ',' → logprob: -2.530323028564453
    3. '.append' → logprob: -2.905323028564453
    4. '.' → logprob: -5.030323028564453
    5. ')' → logprob: -7.155323028564453
    6. ',w' → logprob: -7.405323028564453
    7. '].' → logprob: -7.655323028564453
    8. '   ' → logprob: -7.905323028564453
    9. '`.' → logprob: -8.905323028564453
    10. '}.' → logprob: -9.155323028564453

Token 76: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.054500666621607e-06
    2. 'appen' → logprob: -13.25000286102295
    3. '.append' → logprob: -13.87500286102295
    4. ' append' → logprob: -15.62500286102295
    5. '	append' → logprob: -15.87500286102295
    6. 'app' → logprob: -17.875003814697266
    7. 'add' → logprob: -18.000003814697266
    8. '_append' → logprob: -18.250003814697266
    9. '```' → logprob: -18.250003814697266
    10. 'Append' → logprob: -19.375003814697266

Token 77: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00037204305408522487
    2. '(u' → logprob: -8.250371932983398
    3. '(' → logprob: -9.125371932983398
    4. ' (' → logprob: -13.875371932983398
    5. '(v' → logprob: -15.000371932983398
    6. '(
' → logprob: -15.125371932983398
    7. ' ((' → logprob: -15.375371932983398
    8. ' ' → logprob: -17.1253719329834
    9. '```' → logprob: -18.0003719329834
    10. '   ' → logprob: -18.5003719329834

Token 78: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.01128289382904768
    2. '(u' → logprob: -4.511282920837402
    3. ',u' → logprob: -8.761282920837402
    4. ' u' → logprob: -10.386282920837402
    5. ' (' → logprob: -10.761282920837402
    6. ',' → logprob: -10.886282920837402
    7. '	u' → logprob: -13.386282920837402
    8. '(' → logprob: -13.636282920837402
    9. '[u' → logprob: -13.761282920837402
    10. '   ' → logprob: -13.761282920837402

Token 79: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.3133281171321869
    2. ',' → logprob: -1.3133281469345093
    3. ' ,' → logprob: -9.81332778930664
    4. ',)' → logprob: -12.93832778930664
    5. ',
' → logprob: -13.18832778930664
    6. ',v' → logprob: -13.68832778930664
    7. '`,' → logprob: -13.93832778930664
    8. '`,`' → logprob: -14.18832778930664
    9. ',W' → logprob: -14.43832778930664
    10. '	' → logprob: -14.56332778930664

Token 80: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931565999984741
    2. '))' → logprob: -0.6931565999984741
    3. ')))' → logprob: -12.068156242370605
    4. '))
' → logprob: -13.693156242370605
    5. ')
' → logprob: -13.818156242370605
    6. ' )' → logprob: -14.693156242370605
    7. ' ))' → logprob: -14.693156242370605
    8. '   ' → logprob: -14.818156242370605
    9. '),' → logprob: -15.568156242370605
    10. ')}' → logprob: -15.943156242370605

Token 81: 'a' (ID: 64)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.013904678635299206
    2. 'distance' → logprob: -4.638904571533203
    3. 'def' → logprob: -6.513904571533203
    4. 'visited' → logprob: -6.638904571533203
    5. 'dp' → logprob: -7.888904571533203
    6. '
' → logprob: -8.013904571533203
    7. 'd' → logprob: -8.388904571533203
    8. 'cost' → logprob: -9.513904571533203
    9. 'heap' → logprob: -9.763904571533203
    10. 'start' → logprob: -9.888904571533203

Token 82: ',b' (ID: 17568)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.16035431623458862
    2. 'dist' → logprob: -2.4103543758392334
    3. 'd' → logprob: -4.160354137420654
    4. '=' → logprob: -4.535354137420654
    5. ' =' → logprob: -4.660354137420654
    6. 'distance' → logprob: -5.785354137420654
    7. '_dist' → logprob: -6.035354137420654
    8. 'bs' → logprob: -6.160354137420654
    9. 'rr' → logprob: -6.410354137420654
    10. 'dd' → logprob: -6.410354137420654

Token 83: ',Q' (ID: 130136)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04697506129741669
    2. '=' → logprob: -3.1719751358032227
    3. ',' → logprob: -5.671975135803223
    4. ' ' → logprob: -8.921975135803223
    5. ' ,' → logprob: -8.921975135803223
    6. ')' → logprob: -9.296975135803223
    7. ',a' → logprob: -10.046975135803223
    8. ',c' → logprob: -10.296975135803223
    9. ',b' → logprob: -10.671975135803223
    10. '[' → logprob: -12.359475135803223

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02978694438934326
    2. '=' → logprob: -3.529787063598633
    3. ',' → logprob: -10.404787063598633
    4. ' ' → logprob: -12.779787063598633
    5. ')' → logprob: -13.154787063598633
    6. '  ' → logprob: -15.279787063598633
    7. ' ,' → logprob: -15.279787063598633
    8. ' =
' → logprob: -15.529787063598633
    9. '_' → logprob: -15.654787063598633
    10. '＝' → logprob: -16.279787063598633

Token 85: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3868772089481354
    2. ' map' → logprob: -1.136877179145813
    3. '	map' → logprob: -12.511877059936523
    4. ' ' → logprob: -13.886877059936523
    5. 'm' → logprob: -14.386877059936523
    6. '(map' → logprob: -15.261877059936523
    7. '  ' → logprob: -16.136877059936523
    8. '```' → logprob: -16.636877059936523
    9. 'tuple' → logprob: -16.761877059936523
    10. '.map' → logprob: -16.761877059936523

Token 86: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00019173922191839665
    2. '(' → logprob: -8.875191688537598
    3. '[int' → logprob: -11.000191688537598
    4. '(lambda' → logprob: -11.625191688537598
    5. 'int' → logprob: -11.750191688537598
    6. '<int' → logprob: -12.000191688537598
    7. '=int' → logprob: -12.250191688537598
    8. ' (' → logprob: -13.000191688537598
    9. '(in' → logprob: -13.875191688537598
    10. '(tuple' → logprob: -14.000191688537598

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16410452127456665
    2. ',input' → logprob: -1.9141044616699219
    3. '(),' → logprob: -5.914104461669922
    4. '`,' → logprob: -8.414104461669922
    5. ',line' → logprob: -8.539104461669922
    6. ',int' → logprob: -8.539104461669922
    7. '(input' → logprob: -8.789104461669922
    8. ' ,' → logprob: -9.039104461669922
    9. '(' → logprob: -9.289104461669922
    10. '',' → logprob: -9.914104461669922

Token 88: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759411454200745
    2. 'input' → logprob: -0.8259411454200745
    3. '(input' → logprob: -13.32594108581543
    4. '=input' → logprob: -16.45094108581543
    5. ',input' → logprob: -17.57594108581543
    6. '	input' → logprob: -17.57594108581543
    7. ' ' → logprob: -18.82594108581543
    8. '<input' → logprob: -18.95094108581543
    9. '[input' → logprob: -18.95094108581543
    10. 'int' → logprob: -19.95094108581543

Token 89: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00036418659146875143
    2. '()' → logprob: -8.000364303588867
    3. '())' → logprob: -10.500364303588867
    4. ')' → logprob: -14.375364303588867
    5. '());' → logprob: -15.625364303588867
    6. '(' → logprob: -15.750364303588867
    7. ' ().' → logprob: -15.750364303588867
    8. '()
' → logprob: -17.625364303588867
    9. '()>' → logprob: -18.250364303588867
    10. '().__' → logprob: -18.250364303588867

Token 90: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. 'strip' → logprob: -15.375000953674316
    3. ' split' → logprob: -15.500000953674316
    4. '(split' → logprob: -16.0
    5. 'spl' → logprob: -17.125
    6. ')' → logprob: -18.5
    7. 'plit' → logprob: -19.125
    8. 'rstrip' → logprob: -19.5
    9. 's' → logprob: -20.0
    10. '.split' → logprob: -20.375

Token 91: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006033109966665506
    2. '()' → logprob: -7.500603199005127
    3. '())' → logprob: -10.000603675842285
    4. ')
' → logprob: -13.250603675842285
    5. '`)' → logprob: -13.875603675842285
    6. '))' → logprob: -14.000603675842285
    7. '),' → logprob: -15.250603675842285
    8. '')' → logprob: -15.375603675842285
    9. ' )' → logprob: -15.500603675842285
    10. '(' → logprob: -16.25060272216797

Token 92: 'queries' (ID: 63909)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4801187515258789
    2. 'dp' → logprob: -1.355118751525879
    3. 'INF' → logprob: -2.855118751525879
    4. 'parent' → logprob: -3.605118751525879
    5. 'distance' → logprob: -3.730118751525879
    6. 'cost' → logprob: -6.105118751525879
    7. 'from' → logprob: -6.605118751525879
    8. 'depth' → logprob: -6.855118751525879
    9. 'LOG' → logprob: -6.980118751525879
    10. 'visited' → logprob: -6.980118751525879

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030120696872472763
    2. '=' → logprob: -3.530120611190796
    3. '=[]' → logprob: -8.780120849609375
    4. '.' → logprob: -9.655120849609375
    5. '[' → logprob: -10.280120849609375
    6. ' ' → logprob: -10.780120849609375
    7. '[]' → logprob: -11.280120849609375
    8. ' =[' → logprob: -11.280120849609375
    9. '[:]' → logprob: -11.280120849609375
    10. 's' → logprob: -11.405120849609375

Token 94: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4449584186077118
    2. '[' → logprob: -1.1949584484100342
    3. ' []' → logprob: -2.944958448410034
    4. ' [' → logprob: -6.319958209991455
    5. '[int' → logprob: -7.069958209991455
    6. '[input' → logprob: -7.069958209991455
    7. '[list' → logprob: -8.819958686828613
    8. '[len' → logprob: -10.194958686828613
    9. '[array' → logprob: -10.319958686828613
    10. '[i' → logprob: -11.194958686828613

Token 95: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0047564455308020115
    2. '(tuple' → logprob: -5.504756450653076
    3. ' tuple' → logprob: -7.379756450653076
    4. 'list' → logprob: -9.879755973815918
    5. '()' → logprob: -13.879755973815918
    6. 'map' → logprob: -14.254755973815918
    7. ']' → logprob: -14.879755973815918
    8. '(list' → logprob: -15.504755973815918
    9. '   ' → logprob: -16.004756927490234
    10. '()]' → logprob: -16.004756927490234

Token 96: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.127333340875339e-06
    2. '(' → logprob: -13.000003814697266
    3. 'map' → logprob: -13.875003814697266
    4. '(input' → logprob: -14.500003814697266
    5. '(int' → logprob: -15.000003814697266
    6. '(m' → logprob: -18.125003814697266
    7. ' map' → logprob: -18.625003814697266
    8. '(list' → logprob: -19.125003814697266
    9. '	map' → logprob: -19.625003814697266
    10. '(tuple' → logprob: -19.625003814697266

Token 97: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003215857082977891
    2. 'int' → logprob: -5.753215789794922
    3. '```' → logprob: -11.628215789794922
    4. ',int' → logprob: -11.878215789794922
    5. '(' → logprob: -11.878215789794922
    6. '[int' → logprob: -12.128215789794922
    7. ' int' → logprob: -12.503215789794922
    8. ']int' → logprob: -13.128215789794922
    9. '<int' → logprob: -13.253215789794922
    10. 'list' → logprob: -14.253215789794922

Token 98: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.10224644839763641
    2. ',' → logprob: -2.6022465229034424
    3. '(input' → logprob: -3.8522465229034424
    4. 'input' → logprob: -6.352246284484863
    5. ' ,' → logprob: -9.477246284484863
    6. '(' → logprob: -11.102246284484863
    7. ' input' → logprob: -11.977246284484863
    8. '```' → logprob: -12.602246284484863
    9. ',int' → logprob: -13.102246284484863
    10. '[input' → logprob: -13.727246284484863

Token 99: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048591118305921555
    2. ' input' → logprob: -3.048591136932373
    3. '(input' → logprob: -12.548590660095215
    4. ',input' → logprob: -16.17359161376953
    5. '	input' → logprob: -18.29859161376953
    6. '=input' → logprob: -18.29859161376953
    7. ' ' → logprob: -18.29859161376953
    8. '[input' → logprob: -18.54859161376953
    9. '_input' → logprob: -18.79859161376953
    10. 'list' → logprob: -18.92359161376953

Token 100: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4021237802808173e-05
    2. '()' → logprob: -11.250014305114746
    3. ')' → logprob: -15.500014305114746
    4. '.' → logprob: -15.625014305114746
    5. ' ().' → logprob: -15.625014305114746
    6. '(' → logprob: -15.750014305114746
    7. '))' → logprob: -17.00001335144043
    8. '()
' → logprob: -17.12501335144043
    9. '.readline' → logprob: -17.12501335144043
    10. ' ' → logprob: -17.75001335144043

Token 101: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0564331205387134e-05
    2. 'strip' → logprob: -11.50001049041748
    3. 'read' → logprob: -15.50001049041748
    4. 'rstrip' → logprob: -16.000011444091797
    5. 'plit' → logprob: -17.375011444091797
    6. '(split' → logprob: -17.625011444091797
    7. ' split' → logprob: -17.875011444091797
    8. 'spl' → logprob: -19.125011444091797
    9. 's' → logprob: -19.500011444091797
    10. '.split' → logprob: -19.625011444091797

Token 102: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1605539321899414
    2. '))' → logprob: -1.9105539321899414
    3. '()' → logprob: -8.535553932189941
    4. '())' → logprob: -9.285553932189941
    5. '()))
' → logprob: -11.035553932189941
    6. '(' → logprob: -11.160553932189941
    7. ')' → logprob: -12.535553932189941
    8. ' ))' → logprob: -13.410553932189941
    9. '()));' → logprob: -14.035553932189941
    10. '()
' → logprob: -14.285553932189941

Token 103: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023774817236699164
    2. ')]' → logprob: -8.750237464904785
    3. 'for' → logprob: -10.375237464904785
    4. '()' → logprob: -10.375237464904785
    5. ' for' → logprob: -11.875237464904785
    6. ' )' → logprob: -12.875237464904785
    7. '(' → logprob: -13.000237464904785
    8. '())' → logprob: -13.250237464904785
    9. '))' → logprob: -13.750237464904785
    10. ']' → logprob: -13.875237464904785

Token 104: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.06980659067630768
    2. ' range' → logprob: -2.8198065757751465
    3. ' _' → logprob: -5.4448065757751465
    4. '_range' → logprob: -5.8198065757751465
    5. 'range' → logprob: -7.5698065757751465
    6. '(range' → logprob: -12.694807052612305
    7. ' in' → logprob: -14.319807052612305
    8. ' ' → logprob: -14.694807052612305
    9. '_RANGE' → logprob: -14.819807052612305
    10. '	range' → logprob: -15.069807052612305

Token 105: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08926485478878021
    2. 'in' → logprob: -2.8392648696899414
    3. ' range' → logprob: -4.089264869689941
    4. ' in' → logprob: -4.589264869689941
    5. '(range' → logprob: -11.714264869689941
    6. ' ' → logprob: -12.589264869689941
    7. '_' → logprob: -13.839264869689941
    8. 'Q' → logprob: -13.839264869689941
    9. '  ' → logprob: -14.214264869689941
    10. '	range' → logprob: -14.464264869689941

Token 106: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00043162284418940544
    2. ' range' → logprob: -7.750431537628174
    3. '(range' → logprob: -14.000432014465332
    4. '[' → logprob: -18.250431060791016
    5. '	range' → logprob: -18.250431060791016
    6. 'r' → logprob: -18.500431060791016
    7. 'Q' → logprob: -18.875431060791016
    8. ' ' → logprob: -19.000431060791016
    9. 'rang' → logprob: -19.250431060791016
    10. 'ran' → logprob: -19.375431060791016

Token 107: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -4.847109812544659e-05
    2. 'Q' → logprob: -10.000048637390137
    3. '(' → logprob: -12.875048637390137
    4. ' (' → logprob: -16.00004768371582
    5. 'range' → logprob: -16.00004768371582
    6. ' Q' → logprob: -16.25004768371582
    7. '(range' → logprob: -16.87504768371582
    8. '	Q' → logprob: -17.00004768371582
    9. '(a' → logprob: -17.25004768371582
    10. ' range' → logprob: -17.37504768371582

Token 108: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.014275981113314629
    2. ')' → logprob: -4.264276027679443
    3. ']' → logprob: -9.139275550842285
    4. ')])' → logprob: -13.014275550842285
    5. ')],' → logprob: -14.139275550842285
    6. '))' → logprob: -14.514275550842285
    7. '])]' → logprob: -14.514275550842285
    8. '])' → logprob: -14.639275550842285
    9. ' )' → logprob: -15.514275550842285
    10. ')}' → logprob: -15.764275550842285

Token 109: 'def' (ID: 1314)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7864729762077332
    2. 'INF' → logprob: -0.9114729762077332
    3. 'dp' → logprob: -2.786473035812378
    4. 'import' → logprob: -3.286473035812378
    5. 'LOG' → logprob: -4.661472797393799
    6. 'def' → logprob: -4.911472797393799
    7. 'parent' → logprob: -5.286472797393799
    8. 'distance' → logprob: -5.411472797393799
    9. 'max' → logprob: -5.536472797393799
    10. 'inf' → logprob: -5.911472797393799

Token 110: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.09184924513101578
    2. ' dfs' → logprob: -2.4668493270874023
    3. ' bfs' → logprob: -7.091849327087402
    4. ' dist' → logprob: -7.716849327087402
    5. 'd' → logprob: -7.841849327087402
    6. ' ' → logprob: -8.216849327087402
    7. ' l' → logprob: -8.341849327087402
    8. 'dfs' → logprob: -8.341849327087402
    9. ' def' → logprob: -8.716849327087402
    10. ' prim' → logprob: -10.091849327087402

Token 111: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.04183686524629593
    2. 'ijk' → logprob: -3.791836977005005
    3. 'ij' → logprob: -4.291836738586426
    4. 'ef' → logprob: -5.416836738586426
    5. 'fs' → logprob: -9.291836738586426
    6. 'efs' → logprob: -9.916836738586426
    7. 'is' → logprob: -10.166836738586426
    8. 'i' → logprob: -10.291836738586426
    9. 'ijs' → logprob: -10.666836738586426
    10. 'e' → logprob: -10.791836738586426

Token 112: '(start' (ID: 20008)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08313168585300446
    2. '(start' → logprob: -3.458131790161133
    3. '(graph' → logprob: -3.708131790161133
    4. '(node' → logprob: -4.458131790161133
    5. '(s' → logprob: -4.708131790161133
    6. '(source' → logprob: -6.833131790161133
    7. '(u' → logprob: -7.333131790161133
    8. ' (' → logprob: -7.833131790161133
    9. '(a' → logprob: -8.583131790161133
    10. '(S' → logprob: -8.958131790161133

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.035108957439661026
    2. ',' → logprob: -3.410109043121338
    3. ' ):' → logprob: -6.660109043121338
    4. ')' → logprob: -9.78510856628418
    5. '):
' → logprob: -10.03510856628418
    6. ',start' → logprob: -10.91010856628418
    7. ',n' → logprob: -11.16010856628418
    8. ':' → logprob: -11.41010856628418
    9. ',node' → logprob: -11.78510856628418
    10. ' ,' → logprob: -11.91010856628418

Token 114: '   ' (ID: 271)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.9985264539718628
    2. 'dist' → logprob: -1.1235264539718628
    3. '   ' → logprob: -1.2485264539718628
    4. ' import' → logprob: -4.623526573181152
    5. 'import' → logprob: -5.248526573181152
    6. ' distances' → logprob: -6.248526573181152
    7. '	dist' → logprob: -6.373526573181152
    8. ' distance' → logprob: -8.248526573181152
    9. ' heap' → logprob: -8.623526573181152
    10. ' ' → logprob: -9.123526573181152

Token 115: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.05471165105700493
    2. 'import' → logprob: -3.4297115802764893
    3. ' dist' → logprob: -4.054711818695068
    4. 'INF' → logprob: -6.679711818695068
    5. '   ' → logprob: -6.929711818695068
    6. ' import' → logprob: -7.054711818695068
    7. 'distance' → logprob: -8.80471134185791
    8. ' INF' → logprob: -9.55471134185791
    9. 'd' → logprob: -9.67971134185791
    10. ' distances' → logprob: -10.55471134185791

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04308551922440529
    2. '=' → logprob: -3.1680855751037598
    3. '[' → logprob: -9.793085098266602
    4. '=[' → logprob: -10.793085098266602
    5. ')' → logprob: -12.918085098266602
    6. ']' → logprob: -13.293085098266602
    7. ',' → logprob: -13.293085098266602
    8. '=[]' → logprob: -13.543085098266602
    9. ' =[' → logprob: -13.918085098266602
    10. '＝' → logprob: -14.918085098266602

Token 117: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0753275528550148
    2. '{' → logprob: -3.3253276348114014
    3. ' [' → logprob: -3.3253276348114014
    4. '[int' → logprob: -7.575327396392822
    5. ' {' → logprob: -10.70032787322998
    6. '[node' → logprob: -10.82532787322998
    7. '[-' → logprob: -11.20032787322998
    8. '[in' → logprob: -11.57532787322998
    9. '[n' → logprob: -11.70032787322998
    10. '[len' → logprob: -12.07532787322998

Token 118: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0009328982559964061
    2. '10' → logprob: -7.000932693481445
    3. '(float' → logprob: -11.125932693481445
    4. ' float' → logprob: -12.500932693481445
    5. 'int' → logprob: -13.250932693481445
    6. '-' → logprob: -14.750932693481445
    7. '(' → logprob: -14.875932693481445
    8. '1' → logprob: -15.750932693481445
    9. 'sys' → logprob: -16.375932693481445
    10. '[' → logprob: -17.125932693481445

Token 119: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.6087021473795176e-05
    2. ''in' → logprob: -10.250045776367188
    3. '("' → logprob: -12.250045776367188
    4. '(' → logprob: -12.625045776367188
    5. ''' → logprob: -13.375045776367188
    6. '(in' → logprob: -14.250045776367188
    7. 'inf' → logprob: -15.750045776367188
    8. ''s' → logprob: -16.625045776367188
    9. '('-' → logprob: -17.625045776367188
    10. ' ('' → logprob: -18.125045776367188

Token 120: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.3902033970225602e-05
    2. ''in' → logprob: -11.875014305114746
    3. ''' → logprob: -12.000014305114746
    4. 'in' → logprob: -14.500014305114746
    5. 'INF' → logprob: -16.12501335144043
    6. '"' → logprob: -17.00001335144043
    7. 'info' → logprob: -17.50001335144043
    8. ' inf' → logprob: -17.50001335144043
    9. '('' → logprob: -17.87501335144043
    10. '-inf' → logprob: -17.87501335144043

Token 121: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.09224241226911545
    2. '')]' → logprob: -2.467242479324341
    3. ')' → logprob: -6.092242240905762
    4. ']' → logprob: -7.342242240905762
    5. '),' → logprob: -8.717242240905762
    6. '')' → logprob: -8.967242240905762
    7. ',' → logprob: -10.592242240905762
    8. ' )' → logprob: -10.967242240905762
    9. '")]' → logprob: -11.217242240905762
    10. '']' → logprob: -11.217242240905762

Token 122: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5270414352416992
    2. ']' → logprob: -1.0270414352416992
    3. ' ]' → logprob: -3.527041435241699
    4. 'for' → logprob: -4.777041435241699
    5. ',' → logprob: -4.902041435241699
    6. ']*' → logprob: -6.777041435241699
    7. '<|end|>' → logprob: -7.027041435241699
    8. ' ' → logprob: -7.277041435241699
    9. ']*(' → logprob: -7.402041435241699
    10. ')' → logprob: -7.777041435241699

Token 123: ' (' (ID: 350)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.00014168102643452585
    2. ' (' → logprob: -9.125142097473145
    3. '(len' → logprob: -11.500142097473145
    4. '   ' → logprob: -11.750142097473145
    5. '(s' → logprob: -11.750142097473145
    6. '(' → logprob: -12.375142097473145
    7. '((' → logprob: -13.750142097473145
    8. ' ' → logprob: -14.500142097473145
    9. '
' → logprob: -15.375142097473145
    10. ' ' → logprob: -16.750141143798828

Token 124: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.008760875090956688
    2. '(S' → logprob: -4.758760929107666
    3. ' S' → logprob: -8.883760452270508
    4. 'len' → logprob: -12.258760452270508
    5. ' (' → logprob: -13.258760452270508
    6. '	S' → logprob: -14.758760452270508
    7. '   ' → logprob: -15.258760452270508
    8. '(len' → logprob: -16.008760452270508
    9. ' ' → logprob: -16.258760452270508
    10. ',S' → logprob: -16.383760452270508

Token 125: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.8312570318812504e-05
    2. ' +' → logprob: -11.000018119812012
    3. '+
' → logprob: -13.500018119812012
    4. '＋' → logprob: -16.750019073486328
    5. '```' → logprob: -17.500019073486328
    6. '()+' → logprob: -17.750019073486328
    7. ')+' → logprob: -18.000019073486328
    8. '1' → logprob: -18.750019073486328
    9. '+B' → logprob: -18.750019073486328
    10. '+)' → logprob: -18.750019073486328

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.750021934509277
    3. '0' → logprob: -15.500021934509277
    4. '   ' → logprob: -15.625021934509277
    5. '```' → logprob: -16.250022888183594
    6. '7' → logprob: -16.625022888183594
    7. ')' → logprob: -17.000022888183594
    8. '2' → logprob: -17.187522888183594
    9. '
' → logprob: -17.937522888183594
    10. '6' → logprob: -18.062522888183594

Token 127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022752697113901377
    2. ')
' → logprob: -6.377275466918945
    3. '
' → logprob: -8.252275466918945
    4. '   ' → logprob: -8.377275466918945
    5. '<|end|>' → logprob: -10.252275466918945
    6. ' )' → logprob: -10.877275466918945
    7. '```' → logprob: -12.127275466918945
    8. 'newline' → logprob: -12.377275466918945
    9. ' ' → logprob: -12.752275466918945
    10. ')return' → logprob: -13.127275466918945

Token 128: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4129629135131836
    2. ' dist' → logprob: -1.9129629135131836
    3. '
' → logprob: -2.1629629135131836
    4. '   ' → logprob: -2.9129629135131836
    5. '	dist' → logprob: -4.037962913513184
    6. ' 
' → logprob: -6.412962913513184
    7. '<|end|>' → logprob: -7.537962913513184
    8. '_dist' → logprob: -7.787962913513184
    9. '    
' → logprob: -7.787962913513184
    10. '.dist' → logprob: -9.037962913513184

Token 129: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.009783003479242325
    2. ' dist' → logprob: -4.634782791137695
    3. '   ' → logprob: -10.884782791137695
    4. '	dist' → logprob: -12.134782791137695
    5. 'import' → logprob: -13.884782791137695
    6. '
' → logprob: -14.009782791137695
    7. '```' → logprob: -15.009782791137695
    8. ' ' → logprob: -15.009782791137695
    9. 'd' → logprob: -16.259782791137695
    10. 'heap' → logprob: -16.759782791137695

Token 130: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.0003392767102923244
    2. '[' → logprob: -8.00033950805664
    3. '[end' → logprob: -14.00033950805664
    4. '[S' → logprob: -14.00033950805664
    5. '[s' → logprob: -14.87533950805664
    6. '```' → logprob: -15.00033950805664
    7. '[a' → logprob: -15.25033950805664
    8. '[current' → logprob: -15.87533950805664
    9. ' [' → logprob: -16.00033950805664
    10. '[first' → logprob: -16.12533950805664

Token 131: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0026313038542866707
    2. '[start' → logprob: -6.377631187438965
    3. '[' → logprob: -7.627631187438965
    4. ']=' → logprob: -8.002631187438965
    5. ')' → logprob: -10.002631187438965
    6. '=' → logprob: -10.377631187438965
    7. ' ]' → logprob: -10.502631187438965
    8. ' =' → logprob: -13.752631187438965
    9. '[end' → logprob: -14.752631187438965
    10. '][' → logprob: -15.127631187438965

Token 132: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061981018632650375
    2. ' =' → logprob: -2.811980962753296
    3. '[' → logprob: -12.311981201171875
    4. ']' → logprob: -12.686981201171875
    5. ')' → logprob: -13.311981201171875
    6. ']=' → logprob: -13.311981201171875
    7. ')=' → logprob: -13.561981201171875
    8. '=
' → logprob: -15.561981201171875
    9. '=

' → logprob: -15.561981201171875
    10. '```' → logprob: -15.686981201171875

Token 133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. 'float' → logprob: -15.625019073486328
    4. '10' → logprob: -16.375019073486328
    5. '1' → logprob: -16.625019073486328
    6. '100' → logprob: -17.625019073486328
    7. '   ' → logprob: -18.000019073486328
    8. '  ' → logprob: -18.687519073486328
    9. '-' → logprob: -18.750019073486328
    10. '(' → logprob: -18.812519073486328

Token 134: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.180258191714529e-06
    2. '10' → logprob: -12.625008583068848
    3. 'float' → logprob: -12.875008583068848
    4. ' ' → logprob: -14.000008583068848
    5. '1' → logprob: -14.000008583068848
    6. '100' → logprob: -14.750008583068848
    7. 'inf' → logprob: -16.37500762939453
    8. 'int' → logprob: -16.93750762939453
    9. '(' → logprob: -17.81250762939453
    10. '-' → logprob: -17.87500762939453

Token 135: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6829524040222168
    2. '
' → logprob: -0.8079524040222168
    3. '<|end|>' → logprob: -3.182952404022217
    4. '    
' → logprob: -5.932952404022217
    5. ' 
' → logprob: -6.932952404022217
    6. '  
' → logprob: -7.057952404022217
    7. 'heap' → logprob: -7.307952404022217
    8. '' → logprob: -7.557952404022217
    9. ' ' → logprob: -8.182952880859375
    10. '  ' → logprob: -8.307952880859375

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048317860811948776
    2. 'heap' → logprob: -3.7983179092407227
    3. 'pq' → logprob: -3.7983179092407227
    4. 'hq' → logprob: -6.798317909240723
    5. ' heap' → logprob: -7.173317909240723
    6. ' pq' → logprob: -8.798317909240723
    7. 'queue' → logprob: -8.923317909240723
    8. 'priority' → logprob: -9.798317909240723
    9. '
' → logprob: -10.673317909240723
    10. 'import' → logprob: -10.923317909240723

Token 137: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.2925601005554199
    2. 'heap' → logprob: -2.04256010055542
    3. 'pq' → logprob: -2.79256010055542
    4. 'queue' → logprob: -3.29256010055542
    5. 'q' → logprob: -3.79256010055542
    6. 'h' (adapté à ' h') → logprob: -6.29256010055542
    7. 'que' → logprob: -6.79256010055542
    8. 'import' → logprob: -11.667560577392578
    9. '   ' → logprob: -12.792560577392578
    10. '
' → logprob: -12.917560577392578

Token 138: 'q' (ID: 80)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.007659992668777704
    2. ' =' → logprob: -5.007659912109375
    3. '=' → logprob: -8.007659912109375
    4. 'q' → logprob: -8.632659912109375
    5. 'eat' → logprob: -8.632659912109375
    6. 'eep' → logprob: -8.632659912109375
    7. 'p' → logprob: -10.132659912109375
    8. '   ' → logprob: -12.132659912109375
    9. 'eil' → logprob: -12.257659912109375
    10. 'eam' → logprob: -12.632659912109375

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06998244673013687
    2. '=' → logprob: -2.6949825286865234
    3. '.append' → logprob: -10.944982528686523
    4. '=[]' → logprob: -11.319982528686523
    5. '.' → logprob: -12.444982528686523
    6. '.push' → logprob: -12.694982528686523
    7. 'q' → logprob: -12.694982528686523
    8. '.he' → logprob: -13.569982528686523
    9. '.heap' → logprob: -13.694982528686523
    10. ' ' → logprob: -14.319982528686523

Token 140: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -7.982165698194876e-05
    2. '[]' → logprob: -9.750080108642578
    3. ' [(' → logprob: -10.750080108642578
    4. '[' → logprob: -16.750080108642578
    5. '[]
' → logprob: -17.000080108642578
    6. '[((' → logprob: -17.875080108642578
    7. '([(' → logprob: -19.000080108642578
    8. ' []' → logprob: -20.125080108642578
    9. '[]

' → logprob: -21.125080108642578
    10. '[[' → logprob: -21.750080108642578

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3782830137643032e-05
    2. '(' → logprob: -12.12501335144043
    3. 'start' → logprob: -12.25001335144043
    4. '(start' → logprob: -12.87501335144043
    5. ' ' → logprob: -14.25001335144043
    6. 'dist' → logprob: -14.87501335144043
    7. '(dist' → logprob: -16.12501335144043
    8. ' start' → logprob: -19.25001335144043
    9. ' (' → logprob: -19.37501335144043
    10. ')' → logprob: -19.37501335144043

Token 142: ',start' (ID: 121128)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00862143188714981
    2. ',start' → logprob: -4.7586212158203125
    3. ' ,' → logprob: -12.133621215820312
    4. 'start' → logprob: -13.758621215820312
    5. ',user' → logprob: -16.633621215820312
    6. '[start' → logprob: -16.758621215820312
    7. ',s' → logprob: -17.258621215820312
    8. ',
' → logprob: -17.633621215820312
    9. ',end' → logprob: -17.633621215820312
    10. '```' → logprob: -17.633621215820312

Token 143: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003936152206733823
    2. ')' → logprob: -7.875393390655518
    3. ')]
' → logprob: -11.750393867492676
    4. ')])' → logprob: -13.000393867492676
    5. ' )' → logprob: -13.375393867492676
    6. ']' → logprob: -14.500393867492676
    7. '))' → logprob: -14.875393867492676
    8. '),' → logprob: -15.250393867492676
    9. ')]
' → logprob: -16.12539291381836
    10. ')]

' → logprob: -16.12539291381836

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5099889636039734
    2. ' while' → logprob: -1.5099890232086182
    3. 'while' → logprob: -1.8849890232086182
    4. '	while' → logprob: -4.259988784790039
    5. '
' → logprob: -4.634988784790039
    6. '<|end|>' → logprob: -7.009988784790039
    7. '    
' → logprob: -7.134988784790039
    8. 'heap' → logprob: -8.509988784790039
    9. ')' → logprob: -8.634988784790039
    10. '```' → logprob: -8.884988784790039

Token 145: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.011497041210532188
    2. ' while' → logprob: -4.5114970207214355
    3. '   ' → logprob: -7.7614970207214355
    4. '	while' → logprob: -10.886497497558594
    5. '
' → logprob: -12.511497497558594
    6. 'While' → logprob: -15.386497497558594
    7. '```' → logprob: -15.386497497558594
    8. 'heap' → logprob: -15.761497497558594
    9. ' 
' → logprob: -16.011497497558594
    10. '    
' → logprob: -16.636497497558594

Token 146: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.04863539710640907
    2. ' h' → logprob: -3.048635482788086
    3. '(h' → logprob: -10.173635482788086
    4. '	h' → logprob: -12.173635482788086
    5. 'h' → logprob: -12.798635482788086
    6. '[h' → logprob: -13.673635482788086
    7. 'len' → logprob: -15.298635482788086
    8. '<h' → logprob: -16.048635482788086
    9. ',h' → logprob: -16.048635482788086
    10. '
' → logprob: -16.673635482788086

Token 147: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.3856492842023727e-06
    2. 'Q' → logprob: -14.000000953674316
    3. 'qh' → logprob: -15.500000953674316
    4. '[' → logprob: -16.750001907348633
    5. 'e' → logprob: -17.375001907348633
    6. '
' → logprob: -17.375001907348633
    7. '_q' → logprob: -17.625001907348633
    8. '```' → logprob: -17.875001907348633
    9. 'hq' → logprob: -18.000001907348633
    10. '	q' → logprob: -18.250001907348633

Token 148: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004493805463425815
    2. ':
' → logprob: -8.250449180603027
    3. '):' → logprob: -8.875449180603027
    4. '[' → logprob: -11.000449180603027
    5. ']:' → logprob: -11.250449180603027
    6. '>:' → logprob: -11.750449180603027
    7. '.pop' → logprob: -12.625449180603027
    8. '}:' → logprob: -13.125449180603027
    9. ':**' → logprob: -13.750449180603027
    10. ':not' → logprob: -13.875449180603027

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11182993650436401
    2. ',' → logprob: -2.486829996109009
    3. '   ' → logprob: -4.48682975769043
    4. ' ,' → logprob: -5.73682975769043
    5. 'cost' → logprob: -5.73682975769043
    6. 'dist' → logprob: -6.48682975769043
    7. 'd' → logprob: -6.61182975769043
    8. ',c' → logprob: -7.73682975769043
    9. ',d' → logprob: -7.98682975769043
    10. '```' → logprob: -7.98682975769043

Token 150: ' cost' (ID: 3097)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04369094595313072
    2. 'cost' (adapté à ' cost') → logprob: -3.2936909198760986
    3. ' d' → logprob: -6.168691158294678
    4. 'c' → logprob: -6.293691158294678
    5. 'dist' → logprob: -7.043691158294678
    6. 'cur' → logprob: -7.918691158294678
    7. '   ' → logprob: -8.41869068145752
    8. ' cost' → logprob: -9.66869068145752
    9. 'cd' → logprob: -9.79369068145752
    10. 'current' → logprob: -10.79369068145752

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003924231859855354
    2. ',c' → logprob: -8.125391960144043
    3. ',current' → logprob: -9.750391960144043
    4. ' ,' → logprob: -11.000391960144043
    5. ',u' → logprob: -12.000391960144043
    6. ',node' → logprob: -12.125391960144043
    7. ',n' → logprob: -13.375391960144043
    8. ',d' → logprob: -13.500391960144043
    9. ',user' → logprob: -13.875391960144043
    10. ',next' → logprob: -13.875391960144043

Token 152: ' u' (ID: 337)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.06779112666845322
    2. 'u' → logprob: -3.567791223526001
    3. 'v' → logprob: -3.817791223526001
    4. ' node' → logprob: -4.567790985107422
    5. 'now' → logprob: -6.192790985107422
    6. 'pos' → logprob: -6.317790985107422
    7. 'here' → logprob: -7.692790985107422
    8. 'cur' → logprob: -7.942790985107422
    9. ' u' → logprob: -9.442790985107422
    10. ' now' → logprob: -9.817790985107422

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740802049636841
    2. '=' → logprob: -0.9740802049636841
    3. ')' → logprob: -13.849080085754395
    4. '=u' → logprob: -13.974080085754395
    5. ')=' → logprob: -14.474080085754395
    6. '=user' → logprob: -15.974080085754395
    7. '   ' → logprob: -16.22408103942871
    8. '＝' → logprob: -16.47408103942871
    9. ' ' → logprob: -16.72408103942871
    10. '=query' → logprob: -16.72408103942871

Token 154: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.0789085179567337
    2. ' heap' → logprob: -2.5789084434509277
    3. 'he' → logprob: -10.953908920288086
    4. ' he' → logprob: -13.953908920288086
    5. '(heap' → logprob: -15.203908920288086
    6. '.heap' → logprob: -16.578908920288086
    7. '_heap' → logprob: -17.078908920288086
    8. 'Heap' → logprob: -17.578908920288086
    9. 'import' → logprob: -18.328908920288086
    10. 'hq' → logprob: -19.453908920288086

Token 155: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -12.87500286102295
    3. '```' → logprob: -15.12500286102295
    4. 'p' → logprob: -16.000003814697266
    5. ')' → logprob: -16.375003814697266
    6. '
' → logprob: -16.500003814697266
    7. '

' → logprob: -17.625003814697266
    8. 'ify' → logprob: -17.750003814697266
    9. '	q' → logprob: -17.875003814697266
    10. '[q' → logprob: -17.875003814697266

Token 156: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -4.127333340875339e-06
    2. 'he' → logprob: -13.000003814697266
    3. 'q' → logprob: -13.875003814697266
    4. '.' → logprob: -14.750003814697266
    5. '.heap' → logprob: -15.500003814697266
    6. '.pop' → logprob: -16.250003814697266
    7. ' he' → logprob: -16.375003814697266
    8. ' .' → logprob: -17.500003814697266
    9. 'app' → logprob: -17.625003814697266
    10. '.q' → logprob: -18.125003814697266

Token 157: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.2948405128554441e-05
    2. 'pp' → logprob: -11.37501335144043
    3. 'ap' → logprob: -13.75001335144043
    4. 'q' → logprob: -16.12501335144043
    5. 'pop' → logprob: -16.62501335144043
    6. 'p' → logprob: -17.00001335144043
    7. '[' → logprob: -17.00001335144043
    8. 'a' → logprob: -17.12501335144043
    9. 'appen' → logprob: -17.50001335144043
    10. 'appe' → logprob: -18.00001335144043

Token 158: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.22939127683639526
    2. 'app' → logprob: -1.97939133644104
    3. 'pp' → logprob: -3.22939133644104
    4. 'p' → logprob: -4.229391098022461
    5. 'q' → logprob: -4.854391098022461
    6. 'ush' → logprob: -5.854391098022461
    7. 'ap' → logprob: -6.354391098022461
    8. '```' → logprob: -9.229391098022461
    9. 'e' → logprob: -10.729391098022461
    10. 'ort' → logprob: -10.854391098022461

Token 159: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -12.000007629394531
    3. '(heap' → logprob: -14.625007629394531
    4. '(q' → logprob: -15.000007629394531
    5. 'h' → logprob: -15.375007629394531
    6. ',h' → logprob: -15.500007629394531
    7. ' (' → logprob: -16.00000762939453
    8. ')' → logprob: -16.50000762939453
    9. '(
' → logprob: -17.00000762939453
    10. '
' → logprob: -17.37500762939453

Token 160: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1472419600977446e-06
    2. 'Q' → logprob: -14.250000953674316
    3. ')' → logprob: -15.125000953674316
    4. 'p' → logprob: -16.250001907348633
    5. '```' → logprob: -17.000001907348633
    6. '
' → logprob: -17.500001907348633
    7. ')
' → logprob: -17.875001907348633
    8. '[' → logprob: -18.000001907348633
    9. '(q' → logprob: -18.250001907348633
    10. 'w' → logprob: -18.375001907348633

Token 161: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003179855877533555
    2. ')
' → logprob: -5.753180027008057
    3. ' )' → logprob: -13.753179550170898
    4. ')
' → logprob: -14.378179550170898
    5. '   ' → logprob: -15.503179550170898
    6. '       ' → logprob: -16.2531795501709
    7. ')

' → logprob: -16.2531795501709
    8. ')`' → logprob: -16.7531795501709
    9. ')#' → logprob: -17.3781795501709
    10. ')return' → logprob: -17.7531795501709

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004858715459704399
    2. '
' → logprob: -6.504858493804932
    3. ' if' → logprob: -7.004858493804932
    4. '   ' → logprob: -7.004858493804932
    5. 'if' → logprob: -7.129858493804932
    6. '<|end|>' → logprob: -7.879858493804932
    7. '        
' → logprob: -9.00485897064209
    8. ' 
' → logprob: -9.75485897064209
    9. '        ' → logprob: -10.00485897064209
    10. ')' → logprob: -10.12985897064209

Token 163: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1661996841430664
    2. ' if' → logprob: -1.1661996841430664
    3. 'if' (adapté à ' if') → logprob: -1.5411996841430664
    4. '       ' → logprob: -2.2911996841430664
    5. '<|end|>' → logprob: -2.9161996841430664
    6. '   ' → logprob: -6.041199684143066
    7. ' 
' → logprob: -6.541199684143066
    8. '        ' → logprob: -6.916199684143066
    9. '        
' → logprob: -7.541199684143066
    10. 'If' → logprob: -7.666199684143066

Token 164: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08947557955980301
    2. 'cost' → logprob: -2.589475631713867
    3. ' dist' → logprob: -4.714475631713867
    4. ' cost' → logprob: -6.464475631713867
    5. '	dist' → logprob: -12.214475631713867
    6. 'distance' → logprob: -14.339475631713867
    7. '```' → logprob: -14.339475631713867
    8. '(dist' → logprob: -14.589475631713867
    9. 'diff' → logprob: -15.339475631713867
    10. '   ' → logprob: -15.464475631713867

Token 165: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.45848218582978e-06
    2. '[c' → logprob: -13.00000286102295
    3. '[' → logprob: -15.87500286102295
    4. 'u' → logprob: -18.625001907348633
    5. 'cost' → logprob: -18.625001907348633
    6. '<u' → logprob: -19.000001907348633
    7. '[user' → logprob: -19.250001907348633
    8. '[cur' → logprob: -19.875001907348633
    9. '```' → logprob: -21.000001907348633
    10. ' [' → logprob: -22.000001907348633

Token 166: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.03318776562809944
    2. ' <' → logprob: -3.5331878662109375
    3. '<u' → logprob: -5.7831878662109375
    4. '<int' → logprob: -9.033187866210938
    5. '<ll' → logprob: -10.408187866210938
    6. '<c' → logprob: -10.533187866210938
    7. '<w' → logprob: -10.658187866210938
    8. '<v' → logprob: -11.033187866210938
    9. '<len' → logprob: -11.158187866210938
    10. '<data' → logprob: -11.158187866210938

Token 167: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00010807292710524052
    2. ' <' → logprob: -9.625107765197754
    3. '<u' → logprob: -10.375107765197754
    4. '<int' → logprob: -12.375107765197754
    5. '<v' → logprob: -14.000107765197754
    6. '<len' → logprob: -14.125107765197754
    7. '<w' → logprob: -14.250107765197754
    8. '<c' → logprob: -14.625107765197754
    9. '<ll' → logprob: -14.625107765197754
    10. '<n' → logprob: -14.750107765197754

Token 168: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0015023599844425917
    2. ' cost' → logprob: -6.501502513885498
    3. '_cost' → logprob: -18.251502990722656
    4. '(cost' → logprob: -18.501502990722656
    5. 'Cost' → logprob: -19.751502990722656
    6. '-cost' → logprob: -19.876502990722656
    7. '.cost' → logprob: -20.251502990722656
    8. 'code' → logprob: -21.876502990722656
    9. '```' → logprob: -22.626502990722656
    10. ' ' → logprob: -22.626502990722656

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5459907650947571
    2. ':
' → logprob: -1.1709907054901123
    3. '       ' → logprob: -2.2959907054901123
    4. ' continue' → logprob: -5.420990943908691
    5. 'continue' → logprob: -5.670990943908691
    6. '   ' → logprob: -7.045990943908691
    7. '           ' → logprob: -7.170990943908691
    8. '	continue' → logprob: -7.920990943908691
    9. ' continues' → logprob: -9.920990943908691
    10. ':return' → logprob: -10.545990943908691

Token 170: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5867710709571838
    2. 'continue' → logprob: -1.211771011352539
    3. ' continue' → logprob: -2.086771011352539
    4. '           ' → logprob: -3.961771011352539
    5. '	continue' → logprob: -6.336771011352539
    6. '   ' → logprob: -6.961771011352539
    7. '	' → logprob: -8.711771011352539
    8. '_continue' → logprob: -9.586771011352539
    9. '
' → logprob: -10.211771011352539
    10. 'Continue' → logprob: -10.961771011352539

Token 171: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.11058592051267624
    2. ' continue' → logprob: -2.360585927963257
    3. '       ' → logprob: -4.610585689544678
    4. '           ' → logprob: -8.110586166381836
    5. '	continue' → logprob: -9.735586166381836
    6. '_continue' → logprob: -11.735586166381836
    7. '   ' → logprob: -12.110586166381836
    8. '               ' → logprob: -13.110586166381836
    9. 'contin' → logprob: -13.235586166381836
    10. 'continu' → logprob: -13.610586166381836

Token 172: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00037466554204002023
    2. '   ' → logprob: -9.000374794006348
    3. '        
' → logprob: -9.375374794006348
    4. '<|end|>' → logprob: -9.375374794006348
    5. ' for' → logprob: -10.750374794006348
    6. ')' → logprob: -11.125374794006348
    7. '           ' → logprob: -12.000374794006348
    8. '      ' → logprob: -12.250374794006348
    9. '        ' → logprob: -12.375374794006348
    10. ',' → logprob: -12.375374794006348

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46527498960494995
    2. '   ' → logprob: -1.2152750492095947
    3. ' for' → logprob: -2.8402750492095947
    4. 'for' → logprob: -4.090274810791016
    5. '
' → logprob: -9.465274810791016
    6. '        
' → logprob: -9.715274810791016
    7. '    
' → logprob: -10.215274810791016
    8. '    ' → logprob: -10.840274810791016
    9. '  ' → logprob: -11.215274810791016
    10. ' ' → logprob: -11.465274810791016

Token 174: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.32840195298194885
    2. ' for' → logprob: -1.3284019231796265
    3. '   ' → logprob: -4.203402042388916
    4. '       ' → logprob: -9.578401565551758
    5. '	for' → logprob: -11.703401565551758
    6. '    
' → logprob: -13.703401565551758
    7. ' ' → logprob: -13.703401565551758
    8. '  ' → logprob: -14.203401565551758
    9. '        
' → logprob: -15.328401565551758
    10. '    ' → logprob: -15.453401565551758

Token 175: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0006718054646626115
    2. '(v' → logprob: -8.37567138671875
    3. 'nv' → logprob: -8.50067138671875
    4. 'to' → logprob: -8.75067138671875
    5. ' v' → logprob: -10.00067138671875
    6. 'vv' → logprob: -11.00067138671875
    7. 'nx' → logprob: -11.75067138671875
    8. 'next' → logprob: -13.62567138671875
    9. 'vn' → logprob: -13.87567138671875
    10. 'vx' → logprob: -13.87567138671875

Token 176: ',w' (ID: 49598)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026235507801175117
    2. ',w' → logprob: -3.776235580444336
    3. ',c' → logprob: -6.401235580444336
    4. ' ,' → logprob: -6.651235580444336
    5. 'w' → logprob: -10.651235580444336
    6. ',n' → logprob: -13.151235580444336
    7. 'cost' → logprob: -13.276235580444336
    8. ',v' → logprob: -14.151235580444336
    9. 'c' → logprob: -14.276235580444336
    10. ',
' → logprob: -14.526235580444336

Token 177: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023262951523065567
    2. 'in' → logprob: -3.7732629776000977
    3. ')' → logprob: -11.773262977600098
    4. ',' → logprob: -12.648262977600098
    5. ' ' → logprob: -12.898262977600098
    6. '```' → logprob: -13.523262977600098
    7. '   ' → logprob: -14.398262977600098
    8. ' )' → logprob: -14.773262977600098
    9. 's' → logprob: -15.273262977600098
    10. 'n' → logprob: -15.523262977600098

Token 178: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.00408053956925869
    2. ' graph' → logprob: -5.504080772399902
    3. '	graph' → logprob: -13.629080772399902
    4. '(graph' → logprob: -14.254080772399902
    5. 'raph' → logprob: -16.379079818725586
    6. ' ' → logprob: -16.754079818725586
    7. '   ' → logprob: -17.504079818725586
    8. 'graphql' → logprob: -17.754079818725586
    9. '_graph' → logprob: -18.504079818725586
    10. '.graph' → logprob: -19.004079818725586

Token 179: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -7.896309739408025e-07
    2. 'u' → logprob: -14.250000953674316
    3. '[' → logprob: -16.625
    4. '[v' → logprob: -18.5
    5. '(u' → logprob: -19.75
    6. '```' → logprob: -20.0
    7. '
' → logprob: -20.5
    8. '[s' → logprob: -20.5
    9. '[
' → logprob: -21.125
    10. 's' → logprob: -21.125

Token 180: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.45029962062835693
    2. ':' → logprob: -1.450299620628357
    3. '):' → logprob: -2.0752997398376465
    4. ']:
' → logprob: -7.4502997398376465
    5. '>:' → logprob: -7.5752997398376465
    6. '}:' → logprob: -7.9502997398376465
    7. '):
' → logprob: -7.9502997398376465
    8. ']' → logprob: -7.9502997398376465
    9. ' :' → logprob: -9.325299263000488
    10. ':
' → logprob: -9.450299263000488

Token 181: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1523382067680359
    2. '       ' → logprob: -2.1523382663726807
    3. ' if' → logprob: -3.7773382663726807
    4. '   ' → logprob: -7.402338027954102
    5. '<|end|>' → logprob: -7.902338027954102
    6. 'if' → logprob: -8.027338027954102
    7. '               ' → logprob: -8.152338027954102
    8. '	       ' → logprob: -8.402338027954102
    9. ',' → logprob: -8.777338027954102
    10. '            
' → logprob: -10.652338027954102

Token 182: ' nd' (ID: 5914)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.688525915145874
    2. '           ' → logprob: -1.063525915145874
    3. 'if' → logprob: -2.438525915145874
    4. ' new' → logprob: -3.313525915145874
    5. ' nd' → logprob: -4.188526153564453
    6. 'new' → logprob: -4.688526153564453
    7. '               ' → logprob: -6.563526153564453
    8. '```' → logprob: -7.688526153564453
    9. ' next' → logprob: -7.938526153564453
    10. '   ' → logprob: -7.938526153564453

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3564174175262451
    2. '=' → logprob: -1.7314174175262451
    3. 'ist' → logprob: -2.106417417526245
    4. 'cost' → logprob: -7.481417655944824
    5. 'istance' → logprob: -8.106417655944824
    6. 'v' → logprob: -10.231417655944824
    7. '=v' → logprob: -10.356417655944824
    8. '_cost' → logprob: -10.481417655944824
    9. '=w' → logprob: -10.481417655944824
    10. 'w' → logprob: -10.606417655944824

Token 184: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.08223403245210648
    2. ' cost' → logprob: -3.3322341442108154
    3. 'max' → logprob: -3.3322341442108154
    4. ' max' → logprob: -4.957233905792236
    5. 'dist' → logprob: -7.707233905792236
    6. ' dist' → logprob: -10.457234382629395
    7. '(cost' → logprob: -12.957234382629395
    8. '   ' → logprob: -14.207234382629395
    9. '_cost' → logprob: -14.707234382629395
    10. ' ' → logprob: -14.707234382629395

Token 185: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5034311413764954
    2. ' +' → logprob: -1.5034310817718506
    3. '+w' → logprob: -1.7534310817718506
    4. '＋' → logprob: -14.25343132019043
    5. '+n' → logprob: -14.37843132019043
    6. '+
' → logprob: -15.25343132019043
    7. '<w' → logprob: -15.87843132019043
    8. '+p' → logprob: -16.00343132019043
    9. '+h' → logprob: -16.25343132019043
    10. ' ' → logprob: -16.75343132019043

Token 186: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.04304760321974754
    2. ' w' → logprob: -3.1680476665496826
    3. '1' → logprob: -10.543047904968262
    4. ' ' → logprob: -11.668047904968262
    5. 'v' → logprob: -12.418047904968262
    6. '   ' → logprob: -13.043047904968262
    7. 'max' → logprob: -13.668047904968262
    8. '(w' → logprob: -14.043047904968262
    9. ' (' → logprob: -14.230547904968262
    10. ''w' → logprob: -14.293047904968262

Token 187: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042133934795856476
    2. '<|end|>' → logprob: -3.5421340465545654
    3. '       ' → logprob: -5.042133808135986
    4. '
' → logprob: -5.417133808135986
    5. '<|end|>' → logprob: -7.667133808135986
    6. ' if' → logprob: -8.042134284973145
    7. '   ' → logprob: -9.042134284973145
    8. '               ' → logprob: -9.042134284973145
    9. 'if' → logprob: -9.167134284973145
    10. ')' → logprob: -9.292134284973145

Token 188: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009631502907723188
    2. '<|end|>' → logprob: -7.25096321105957
    3. '
' → logprob: -9.12596321105957
    4. '       ' → logprob: -9.87596321105957
    5. ' if' → logprob: -10.37596321105957
    6. '<|end|>' → logprob: -10.62596321105957
    7. '            
' → logprob: -11.37596321105957
    8. '   ' → logprob: -12.37596321105957
    9. '               ' → logprob: -12.50096321105957
    10. 'if' → logprob: -12.87596321105957

Token 189: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4979565739631653
    2. 'if' (adapté à ' if') → logprob: -0.9979565739631653
    3. '           ' → logprob: -3.7479565143585205
    4. '       ' → logprob: -11.497956275939941
    5. ' ' → logprob: -12.622956275939941
    6. '            ' → logprob: -12.622956275939941
    7. '               ' → logprob: -12.872956275939941
    8. '<|end|>' → logprob: -12.872956275939941
    9. '   ' → logprob: -12.997956275939941
    10. '            
' → logprob: -13.747956275939941

Token 190: ' dist' (ID: 3601)
  Prédit: ' nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.2702637016773224
    2. ' dist' → logprob: -1.645263671875
    3. 'nd' → logprob: -3.270263671875
    4. 'dist' → logprob: -5.145263671875
    5. '(nd' → logprob: -11.270263671875
    6. '	dist' → logprob: -12.145263671875
    7. '```' → logprob: -12.395263671875
    8. '   ' → logprob: -13.020263671875
    9. '(dist' → logprob: -13.270263671875
    10. 'ndl' → logprob: -13.395263671875

Token 191: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.128163257315464e-07
    2. '[u' → logprob: -15.25
    3. '[' → logprob: -17.875
    4. 'v' → logprob: -19.125
    5. '[V' → logprob: -20.875
    6. '[node' → logprob: -21.0
    7. '[val' → logprob: -21.5
    8. '<v' → logprob: -21.75
    9. '[n' → logprob: -22.0
    10. '[next' → logprob: -22.25

Token 192: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.20144803822040558
    2. ' >' → logprob: -1.7014480829238892
    3. '[' → logprob: -11.076448440551758
    4. '">' → logprob: -12.201448440551758
    5. ' ' → logprob: -12.451448440551758
    6. ']' → logprob: -12.826448440551758
    7. '[v' → logprob: -12.826448440551758
    8. ']>' → logprob: -13.451448440551758
    9. ')>' → logprob: -14.576448440551758
    10. ')' → logprob: -14.701448440551758

Token 193: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4287104606628418
    2. ' >' → logprob: -1.0537104606628418
    3. '">' → logprob: -12.6787109375
    4. '[' → logprob: -13.8037109375
    5. '>d' → logprob: -14.0537109375
    6. ' ' → logprob: -14.6787109375
    7. '>`' → logprob: -14.6787109375
    8. '>null' → logprob: -14.8037109375
    9. ')' → logprob: -14.9287109375
    10. ')>' → logprob: -14.9287109375

Token 194: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.2519437372684479
    2. 'nd' → logprob: -1.5019437074661255
    3. '(nd' → logprob: -11.251943588256836
    4. '_nd' → logprob: -14.251943588256836
    5. '.nd' → logprob: -15.376943588256836
    6. 'ndl' → logprob: -15.751943588256836
    7. '   ' → logprob: -16.251943588256836
    8. ' ' → logprob: -16.751943588256836
    9. 'ng' → logprob: -16.751943588256836
    10. 'n' → logprob: -16.751943588256836

Token 195: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018199928104877472
    2. ':
' → logprob: -4.018199920654297
    3. ' :' → logprob: -10.893199920654297
    4. '):' → logprob: -11.643199920654297
    5. '):
' → logprob: -11.768199920654297
    6. ' :
' → logprob: -12.018199920654297
    7. '               ' → logprob: -12.518199920654297
    8. ':

' → logprob: -13.768199920654297
    9. ':
' → logprob: -13.768199920654297
    10. '           ' → logprob: -14.018199920654297

Token 196: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002581366803497076
    2. 'dist' → logprob: -6.627581596374512
    3. ' dist' → logprob: -7.002581596374512
    4. ':' → logprob: -9.252581596374512
    5. '```' → logprob: -9.252581596374512
    6. ':
' → logprob: -10.377581596374512
    7. '           ' → logprob: -10.752581596374512
    8. '<|end|>' → logprob: -11.127581596374512
    9. '                
' → logprob: -11.252581596374512
    10. '	           ' → logprob: -11.502581596374512

Token 197: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.003829056164249778
    2. 'dist' (adapté à ' dist') → logprob: -5.628829002380371
    3. '               ' → logprob: -8.503829002380371
    4. '                   ' → logprob: -11.753829002380371
    5. '	dist' → logprob: -12.003829002380371
    6. '_dist' → logprob: -12.253829002380371
    7. '                ' → logprob: -12.753829002380371
    8. '```' → logprob: -13.128829002380371
    9. '(dist' → logprob: -13.628829002380371
    10. 'Dist' → logprob: -14.628829002380371

Token 198: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.320199877838604e-07
    2. 'v' → logprob: -15.25
    3. '[' → logprob: -16.125
    4. '[val' → logprob: -18.125
    5. '[u' → logprob: -19.25
    6. '```' → logprob: -19.5
    7. '[
' → logprob: -20.375
    8. ' [' → logprob: -20.625
    9. '	v' → logprob: -21.25
    10. '<v' → logprob: -21.25

Token 199: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3373667895793915
    2. '=' → logprob: -1.7123668193817139
    3. ' =' → logprob: -2.337366819381714
    4. ']=' → logprob: -4.962366580963135
    5. '[v' → logprob: -6.212366580963135
    6. '=v' → logprob: -8.462367057800293
    7. '[' → logprob: -9.837367057800293
    8. ' ]' → logprob: -10.837367057800293
    9. 'v' → logprob: -11.212367057800293
    10. ')' → logprob: -11.337367057800293

Token 200: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407791018486023
    2. '=' → logprob: -0.9740779399871826
    3. '[' → logprob: -14.724078178405762
    4. '=v' → logprob: -15.724078178405762
    5. '.=' → logprob: -16.224077224731445
    6. '＝' → logprob: -16.599077224731445
    7. ',' → logprob: -16.974077224731445
    8. ')' → logprob: -17.099077224731445
    9. ']' → logprob: -17.224077224731445
    10. ' ' → logprob: -18.099077224731445

Token 201: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.47408363223075867
    2. ' nd' → logprob: -0.974083662033081
    3. '(nd' → logprob: -13.47408390045166
    4. '_nd' → logprob: -13.84908390045166
    5. 'ndl' → logprob: -14.34908390045166
    6. 'ng' → logprob: -14.72408390045166
    7. 'nt' → logprob: -14.84908390045166
    8. '           ' → logprob: -14.97408390045166
    9. '   ' → logprob: -15.09908390045166
    10. '               ' → logprob: -15.22408390045166

Token 202: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.4192871175473556e-05
    2. 'heap' → logprob: -11.250054359436035
    3. ',' → logprob: -11.500054359436035
    4. ' heap' → logprob: -11.625054359436035
    5. '			' → logprob: -12.125054359436035
    6. ' he' → logprob: -12.625054359436035
    7. '(heap' → logprob: -12.625054359436035
    8. '              ' → logprob: -13.000054359436035
    9. '                
' → logprob: -13.250054359436035
    10. '<|end|>' → logprob: -13.750054359436035

Token 203: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00030566859641112387
    2. 'heap' → logprob: -8.250306129455566
    3. ' heap' → logprob: -10.125306129455566
    4. '              ' → logprob: -13.625306129455566
    5. '			' → logprob: -13.625306129455566
    6. '                   ' → logprob: -14.625306129455566
    7. '(heap' → logprob: -14.625306129455566
    8. '           ' → logprob: -14.875306129455566
    9. '       ' → logprob: -15.750306129455566
    10. ',' → logprob: -16.50030517578125

Token 204: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0015023599844425917
    2. ' heap' → logprob: -6.501502513885498
    3. 'he' → logprob: -18.126502990722656
    4. '(heap' → logprob: -19.876502990722656
    5. '.heap' → logprob: -21.501502990722656
    6. '   ' → logprob: -21.876502990722656
    7. '_heap' → logprob: -22.626502990722656
    8. '           ' → logprob: -23.126502990722656
    9. '               ' → logprob: -23.376502990722656
    10. 'Heap' → logprob: -23.501502990722656

Token 205: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.696889623621246e-06
    2. 'p' → logprob: -13.62500286102295
    3. 'h' → logprob: -14.12500286102295
    4. 'push' → logprob: -15.87500286102295
    5. 'he' → logprob: -16.250001907348633
    6. '.he' → logprob: -16.375001907348633
    7. '```' → logprob: -16.500001907348633
    8. '.push' → logprob: -16.625001907348633
    9. 'hq' → logprob: -17.375001907348633
    10. '[' → logprob: -17.375001907348633

Token 206: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00018530222587287426
    2. 'he' → logprob: -8.750185012817383
    3. 'q' → logprob: -11.250185012817383
    4. '.heap' → logprob: -11.625185012817383
    5. 'heap' → logprob: -13.625185012817383
    6. '.' → logprob: -13.875185012817383
    7. 'app' → logprob: -14.250185012817383
    8. '```' → logprob: -14.375185012817383
    9. '.push' → logprob: -14.625185012817383
    10. '_he' → logprob: -15.000185012817383

Token 207: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0017336098244413733
    2. 'pp' → logprob: -6.376733779907227
    3. 'push' → logprob: -11.001733779907227
    4. 'ap' → logprob: -11.751733779907227
    5. 'p' → logprob: -12.251733779907227
    6. 'ush' → logprob: -14.001733779907227
    7. 'q' → logprob: -14.251733779907227
    8. '```' → logprob: -15.626733779907227
    9. 'append' → logprob: -15.751733779907227
    10. 'appen' → logprob: -16.376733779907227

Token 208: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.000774846994318068
    2. 'push' → logprob: -7.25077486038208
    3. 'p' → logprob: -10.000774383544922
    4. 'op' → logprob: -11.250774383544922
    5. 'sh' → logprob: -13.250774383544922
    6. 'q' → logprob: -13.500774383544922
    7. '```' → logprob: -13.625774383544922
    8. 'pp' → logprob: -14.500774383544922
    9. 'app' → logprob: -14.500774383544922
    10. 'ap' → logprob: -14.750774383544922

Token 209: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.375000953674316
    3. '(heap' → logprob: -15.250000953674316
    4. '(q' → logprob: -16.500001907348633
    5. 'h' → logprob: -16.875001907348633
    6. '(graph' → logprob: -17.500001907348633
    7. '```' → logprob: -18.375001907348633
    8. ',h' → logprob: -18.625001907348633
    9. 'import' → logprob: -18.750001907348633
    10. '(
' → logprob: -18.875001907348633

Token 210: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.2352385965641588e-05
    2. '(h' → logprob: -12.000012397766113
    3. '(q' → logprob: -13.125012397766113
    4. 'Q' → logprob: -14.375012397766113
    5. 'v' → logprob: -14.625012397766113
    6. 'c' → logprob: -15.000012397766113
    7. '(' → logprob: -15.125012397766113
    8. 'p' → logprob: -15.375012397766113
    9. 'vq' → logprob: -15.375012397766113
    10. 'sq' → logprob: -15.500012397766113

Token 211: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0006706207641400397
    2. ',' → logprob: -8.125670433044434
    3. '(q' → logprob: -8.875670433044434
    4. ',(' → logprob: -9.250670433044434
    5. ',h' → logprob: -9.375670433044434
    6. '(' → logprob: -10.625670433044434
    7. '(v' → logprob: -11.125670433044434
    8. ' (' → logprob: -11.750670433044434
    9. '(heap' → logprob: -12.750670433044434
    10. '((' → logprob: -13.875670433044434

Token 212: ' (' (ID: 350)
  Prédit: '(nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.006763802841305733
    2. ' (' → logprob: -5.256763935089111
    3. '(' → logprob: -6.756763935089111
    4. '(v' → logprob: -8.506763458251953
    5. '(n' → logprob: -8.756763458251953
    6. '(dist' → logprob: -12.506763458251953
    7. '(ns' → logprob: -14.256763458251953
    8. '(nn' → logprob: -14.381763458251953
    9. '(nt' → logprob: -14.756763458251953
    10. '(nx' → logprob: -15.381763458251953

Token 213: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0005542247672565281
    2. ' nd' → logprob: -7.500554084777832
    3. '(nd' → logprob: -13.750554084777832
    4. 'dist' → logprob: -16.12555503845215
    5. '   ' → logprob: -16.87555503845215
    6. '_nd' → logprob: -17.00055503845215
    7. '  ' → logprob: -18.25055503845215
    8. '```' → logprob: -18.25055503845215
    9. 'ndl' → logprob: -18.37555503845215
    10. ' ' → logprob: -18.50055503845215

Token 214: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16054144501686096
    2. ',v' → logprob: -1.9105414152145386
    3. ',u' → logprob: -8.160541534423828
    4. ' ,' → logprob: -10.660541534423828
    5. 'v' → logprob: -13.160541534423828
    6. ',user' → logprob: -13.785541534423828
    7. ')' → logprob: -13.910541534423828
    8. ',n' → logprob: -14.035541534423828
    9. ',w' → logprob: -14.285541534423828
    10. ',
' → logprob: -14.535541534423828

Token 215: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00319304340519011
    2. ')' → logprob: -5.753192901611328
    3. '))
' → logprob: -11.378192901611328
    4. ')))' → logprob: -12.753192901611328
    5. ' ))' → logprob: -14.378192901611328
    6. ')
' → logprob: -15.253192901611328
    7. '),' → logprob: -17.378192901611328
    8. '))

' → logprob: -17.628192901611328
    9. '()))' → logprob: -17.878192901611328
    10. '))))' → logprob: -18.003192901611328

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004349417518824339
    2. 'return' → logprob: -5.504349231719971
    3. ' return' → logprob: -8.254349708557129
    4. 'dist' → logprob: -12.879349708557129
    5. '	return' → logprob: -13.004349708557129
    6. '
' → logprob: -13.379349708557129
    7. ':return' → logprob: -13.629349708557129
    8. ')' → logprob: -13.879349708557129
    9. '```' → logprob: -14.004349708557129
    10. '       ' → logprob: -15.004349708557129

Token 217: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08372948318719864
    2. '   ' → logprob: -2.5837295055389404
    3. ' return' → logprob: -5.333729267120361
    4. '	return' → logprob: -13.70872974395752
    5. ' ' → logprob: -15.08372974395752
    6. ':return' → logprob: -15.95872974395752
    7. '```' → logprob: -15.95872974395752
    8. '  ' → logprob: -16.458728790283203
    9. '       ' → logprob: -16.458728790283203
    10. '{return' → logprob: -16.583728790283203

Token 218: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -2.339278580620885e-06
    2. ' dist' → logprob: -13.000001907348633
    3. '(dist' → logprob: -18.875001907348633
    4. '	dist' → logprob: -23.000001907348633
    5. '_dist' → logprob: -24.125001907348633
    6. 'Dist' → logprob: -24.250001907348633
    7. 'd' → logprob: -24.875001907348633
    8. 'diff' → logprob: -25.000001907348633
    9. 'dest' → logprob: -25.750001907348633
    10. '.dist' → logprob: -26.000001907348633

Token 219: '

' (ID: 279)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.050439003854990005
    2. 'a' → logprob: -3.6754391193389893
    3. 'def' → logprob: -4.55043888092041
    4. 'd' → logprob: -5.05043888092041
    5. 'start' → logprob: -6.30043888092041
    6. 'distance' → logprob: -6.92543888092041
    7. 'dp' → logprob: -7.17543888092041
    8. 'results' → logprob: -7.80043888092041
    9. 'result' → logprob: -7.80043888092041
    10. 'u' → logprob: -8.17543888092041

Token 220: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.041677817702293396
    2. 'da' → logprob: -3.291677713394165
    3. 'd' → logprob: -6.541677951812744
    4. 'from' → logprob: -7.541677951812744
    5. 'a' → logprob: -7.666677951812744
    6. 'def' → logprob: -8.166677474975586
    7. 'start' → logprob: -8.416677474975586
    8. '```' → logprob: -8.791677474975586
    9. 'A' → logprob: -9.041677474975586
    10. 'distance' → logprob: -9.291677474975586

Token 221: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.5406140089035034
    2. 'a' → logprob: -1.4156140089035034
    3. '[a' → logprob: -1.7906140089035034
    4. '_' → logprob: -5.915614128112793
    5. ' =' → logprob: -6.290614128112793
    6. '=' → logprob: -6.415614128112793
    7. '[' → logprob: -7.290614128112793
    8. '(a' → logprob: -8.415614128112793
    9. '```' → logprob: -8.915614128112793
    10. '[_' → logprob: -9.290614128112793

Token 222: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934763789176941
    2. ' =' → logprob: -0.6934763789176941
    3. '[a' → logprob: -8.818476676940918
    4. '[' → logprob: -9.318476676940918
    5. '=a' → logprob: -10.193476676940918
    6. 'a' → logprob: -10.318476676940918
    7. ',a' → logprob: -11.943476676940918
    8. ',' → logprob: -12.193476676940918
    9. 's' → logprob: -13.193476676940918
    10. ')' → logprob: -13.193476676940918

Token 223: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1517960956552997e-05
    2. ' d' → logprob: -11.375011444091797
    3. ')d' → logprob: -19.000011444091797
    4. '(d' → logprob: -20.625011444091797
    5. 'dist' → logprob: -20.625011444091797
    6. '	d' → logprob: -20.750011444091797
    7. '[d' → logprob: -21.125011444091797
    8. '```' → logprob: -22.250011444091797
    9. '_d' → logprob: -23.375011444091797
    10. '   ' → logprob: -23.500011444091797

Token 224: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.0027528072241693735
    2. 'ijk' → logprob: -6.127752780914307
    3. 'ist' → logprob: -8.127753257751465
    4. 'ij' → logprob: -8.377753257751465
    5. 'jik' → logprob: -11.377753257751465
    6. 'jk' → logprob: -11.752753257751465
    7. 'ijst' → logprob: -11.877753257751465
    8. 'st' → logprob: -12.002753257751465
    9. 'j' → logprob: -13.002753257751465
    10. 'ijkt' → logprob: -13.502753257751465

Token 225: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00020389800192788243
    2. '(' → logprob: -8.500204086303711
    3. 'a' → logprob: -15.250204086303711
    4. '(
' → logprob: -16.12520408630371
    5. '(start' → logprob: -17.37520408630371
    6. '(A' → logprob: -17.75020408630371
    7. '((' → logprob: -18.62520408630371
    8. '(ab' → logprob: -19.25020408630371
    9. '(

' → logprob: -20.12520408630371
    10. '(`' → logprob: -20.25020408630371

Token 226: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001114106344175525
    2. ')
' → logprob: -9.12511157989502
    3. ' )' → logprob: -13.37511157989502
    4. ')a' → logprob: -15.37511157989502
    5. ')

' → logprob: -15.50011157989502
    6. ')#' → logprob: -15.75011157989502
    7. ')`' → logprob: -16.125110626220703
    8. ')b' → logprob: -16.375110626220703
    9. ')
' → logprob: -16.875110626220703
    10. '),' → logprob: -17.375110626220703

Token 227: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -2.1008713702030946e-06
    2. ' dist' → logprob: -13.125001907348633
    3. 'distance' → logprob: -17.625001907348633
    4. 'd' → logprob: -18.125001907348633
    5. '	dist' → logprob: -18.375001907348633
    6. '.dist' → logprob: -18.500001907348633
    7. '(dist' → logprob: -18.875001907348633
    8. '[' → logprob: -19.125001907348633
    9. '```' → logprob: -19.375001907348633
    10. 'def' → logprob: -19.500001907348633

Token 228: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00034142236108891666
    2. '_' → logprob: -8.000341415405273
    3. 'b' → logprob: -12.125341415405273
    4. '_[' → logprob: -16.000341415405273
    5. '_a' → logprob: -16.000341415405273
    6. ' _' → logprob: -16.125341415405273
    7. '[b' → logprob: -16.625341415405273
    8. '[_' → logprob: -16.750341415405273
    9. '[' → logprob: -17.125341415405273
    10. '	b' → logprob: -17.500341415405273

Token 229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. '＝' → logprob: -17.451414108276367
    4. '[' → logprob: -17.576414108276367
    5. ' ' → logprob: -18.326414108276367
    6. '=d' → logprob: -18.451414108276367
    7. '.=' → logprob: -19.076414108276367
    8. ')' → logprob: -19.076414108276367
    9. 's' → logprob: -19.201414108276367
    10. '=b' → logprob: -19.326414108276367

Token 230: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00030161935137584805
    2. ' d' → logprob: -8.125301361083984
    3. 'b' → logprob: -12.375301361083984
    4. '(d' → logprob: -13.875301361083984
    5. ')d' → logprob: -16.250301361083984
    6. '(' → logprob: -16.625301361083984
    7. 'dist' → logprob: -17.000301361083984
    8. '	d' → logprob: -17.625301361083984
    9. '```' → logprob: -17.750301361083984
    10. ')' → logprob: -18.375301361083984

Token 231: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.00033903829171322286
    2. 'ijk' → logprob: -8.37533950805664
    3. 'ij' → logprob: -9.50033950805664
    4. 'jik' → logprob: -10.75033950805664
    5. 'jk' → logprob: -12.75033950805664
    6. 'j' → logprob: -12.87533950805664
    7. 'ijks' → logprob: -13.87533950805664
    8. '```' → logprob: -14.12533950805664
    9. '[i' → logprob: -14.25033950805664
    10. '[' → logprob: -14.75033950805664

Token 232: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -2.7014437364414334e-05
    2. 'b' → logprob: -10.62502670288086
    3. '(' → logprob: -12.87502670288086
    4. ' (' → logprob: -17.25002670288086
    5. '(B' → logprob: -18.12502670288086
    6. '(
' → logprob: -19.00002670288086
    7. ')b' → logprob: -19.12502670288086
    8. ' b' → logprob: -19.62502670288086
    9. '(s' → logprob: -19.87502670288086
    10. '	b' → logprob: -20.62502670288086

Token 233: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -15.500000953674316
    4. ')`' → logprob: -17.375
    5. ')

' → logprob: -18.875
    6. ')#' → logprob: -20.0
    7. ')[' → logprob: -20.25
    8. ')
' → logprob: -20.25
    9. ')a' → logprob: -20.5
    10. '`)' → logprob: -20.625

Token 234: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.1782583391759545e-05
    2. 'results' → logprob: -10.750031471252441
    3. 'answers' → logprob: -12.375031471252441
    4. 'result' → logprob: -13.000031471252441
    5. 'answer' → logprob: -13.625031471252441
    6. ' for' → logprob: -14.625031471252441
    7. 'ans' → logprob: -14.875031471252441
    8. 'output' → logprob: -15.000031471252441
    9. 'res' → logprob: -15.375031471252441
    10. 'def' → logprob: -15.500031471252441

Token 235: ' Condition' (ID: 30255)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00027694785967469215
    2. 'result' → logprob: -9.000276565551758
    3. 'results' → logprob: -9.750276565551758
    4. 'answer' → logprob: -10.125276565551758
    5. 'answers' → logprob: -10.750276565551758
    6. 'res' → logprob: -11.375276565551758
    7. 'ans' → logprob: -11.625276565551758
    8. 'output' → logprob: -11.875276565551758
    9. ' for' → logprob: -13.000276565551758
    10. 'dist' → logprob: -14.125276565551758

Token 236: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049446623772382736
    2. ' for' → logprob: -3.5494465827941895
    3. ':' → logprob: -4.6744465827941895
    4. '=' → logprob: -5.5494465827941895
    5. ' =' → logprob: -6.0494465827941895
    6. 'if' → logprob: -6.2994465827941895
    7. 'max' → logprob: -7.2994465827941895
    8. 's' → logprob: -8.549447059631348
    9. 'def' → logprob: -8.549447059631348
    10. 'result' → logprob: -8.799447059631348

Token 237: ' a' (ID: 261)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.9521374702453613
    2. 'each' → logprob: -0.9521374702453613
    3. 'all' → logprob: -2.2021374702453613
    4. 'print' → logprob: -3.5771374702453613
    5. 'for' → logprob: -4.202137470245361
    6. ' each' → logprob: -4.452137470245361
    7. ' all' → logprob: -4.827137470245361
    8. 'ans' → logprob: -4.952137470245361
    9. 'max' → logprob: -5.077137470245361
    10. 'answer' → logprob: -5.202137470245361

Token 238: ' path' (ID: 3104)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.8217188715934753
    2. ' for' → logprob: -1.8217189311981201
    3. 'for' → logprob: -2.82171893119812
    4. ' valid' → logprob: -2.94671893119812
    5. ' =' → logprob: -3.19671893119812
    6. 'll' → logprob: -3.69671893119812
    7. '=' → logprob: -3.82171893119812
    8. ')' → logprob: -3.94671893119812
    9. ' and' → logprob: -4.071718692779541
    10. ' ' → logprob: -4.071718692779541

Token 239: ' p' (ID: 275)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4178554117679596
    2. ' for' → logprob: -1.9178553819656372
    3. ' =' → logprob: -2.6678555011749268
    4. ':' → logprob: -3.5428555011749268
    5. 'def' → logprob: -3.9178555011749268
    6. '=' → logprob: -4.042855262756348
    7. 'answer' → logprob: -4.292855262756348
    8. 'result' → logprob: -4.417855262756348
    9. 's' → logprob: -4.667855262756348
    10. 'max' → logprob: -5.167855262756348

Token 240: ' going' (ID: 2966)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7114600539207458
    2. ':' → logprob: -1.2114601135253906
    3. '=' → logprob: -1.8364601135253906
    4. ' for' → logprob: -3.8364601135253906
    5. 'for' → logprob: -4.961460113525391
    6. 's' → logprob: -5.211460113525391
    7. ' to' → logprob: -5.336460113525391
    8. '#' → logprob: -5.961460113525391
    9. ' that' → logprob: -6.461460113525391
    10. ' in' → logprob: -6.961460113525391

Token 241: ' from' (ID: 591)
  Prédit: 'through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'through' → logprob: -0.04777023196220398
    2. 'from' → logprob: -3.6727702617645264
    3. ' through' → logprob: -4.047770023345947
    4. 'u' → logprob: -6.547770023345947
    5. 'p' → logprob: -7.797770023345947
    6. 'between' → logprob: -8.172770500183105
    7. 'v' → logprob: -8.297770500183105
    8. 'c' → logprob: -8.422770500183105
    9. 't' → logprob: -8.547770500183105
    10. 'f' → logprob: -8.922770500183105

Token 242: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.09692372381687164
    2. 'u' → logprob: -2.596923828125
    3. 'x' → logprob: -4.971923828125
    4. 's' → logprob: -5.471923828125
    5. 'S' → logprob: -6.596923828125
    6. 'p' → logprob: -6.596923828125
    7. ' a' → logprob: -6.846923828125
    8. 'node' → logprob: -7.096923828125
    9. 'start' → logprob: -7.846923828125
    10. ' u' → logprob: -7.971923828125

Token 243: ' ->' (ID: 2747)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2531227767467499
    2. ' to' → logprob: -1.7531228065490723
    3. '#' → logprob: -3.3781228065490723
    4. 'through' → logprob: -5.003122806549072
    5. ' through' → logprob: -5.753122806549072
    6. 'or' → logprob: -6.503122806549072
    7. 'and' → logprob: -6.503122806549072
    8. ' or' → logprob: -7.128122806549072
    9. 'via' → logprob: -7.878122806549072
    10. ' ' → logprob: -8.128122329711914

Token 244: ' ...' (ID: 2550)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.23095250129699707
    2. 'u' → logprob: -2.855952501296997
    3. 'p' → logprob: -3.105952501296997
    4. '...' → logprob: -3.230952501296997
    5. 'v' → logprob: -3.480952501296997
    6. 'x' → logprob: -3.730952501296997
    7. ' b' → logprob: -5.980952262878418
    8. 's' → logprob: -6.230952262878418
    9. 'c' → logprob: -6.355952262878418
    10. ' u' → logprob: -6.980952262878418

Token 245: ' ->' (ID: 2747)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -0.6859341263771057
    2. '#' → logprob: -1.060934066772461
    3. 'to' → logprob: -3.435934066772461
    4. 'c' → logprob: -3.685934066772461
    5. 'p' → logprob: -3.935934066772461
    6. '->' → logprob: -3.935934066772461
    7. 'u' → logprob: -4.935934066772461
    8. 'a' → logprob: -4.935934066772461
    9. 'def' → logprob: -5.185934066772461
    10. ' ...' → logprob: -5.185934066772461

Token 246: ' c' (ID: 274)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01291878242045641
    2. '...' → logprob: -4.637918949127197
    3. 'p' → logprob: -7.012918949127197
    4. 'R' → logprob: -7.387918949127197
    5. 'v' → logprob: -8.012918472290039
    6. 'x' → logprob: -8.012918472290039
    7. ' b' → logprob: -8.262918472290039
    8. 'Q' → logprob: -8.387918472290039
    9. 'c' → logprob: -8.637918472290039
    10. 'u' → logprob: -9.262918472290039

Token 247: ' ->' (ID: 2747)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08273185044527054
    2. ' to' → logprob: -3.5827319622039795
    3. 'for' → logprob: -4.0827317237854
    4. 'to' → logprob: -4.5827317237854
    5. 'def' → logprob: -5.0827317237854
    6. ' for' → logprob: -5.3327317237854
    7. ',' → logprob: -6.3327317237854
    8. ':' → logprob: -6.3327317237854
    9. 'and' → logprob: -6.5827317237854
    10. ' #' → logprob: -6.7077317237854

Token 248: ' d' (ID: 272)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -0.5005242228507996
    2. 'b' → logprob: -1.1255242824554443
    3. 'c' → logprob: -2.8755242824554443
    4. '#' → logprob: -5.625524044036865
    5. ' b' → logprob: -5.625524044036865
    6. ' ...' → logprob: -5.750524044036865
    7. ' c' → logprob: -6.500524044036865
    8. 'p' → logprob: -7.875524044036865
    9. 'R' → logprob: -8.750524520874023
    10. '…' → logprob: -9.375524520874023

Token 249: ' ->' (ID: 2747)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0739583820104599
    2. ',' → logprob: -4.573958396911621
    3. '=' → logprob: -4.948958396911621
    4. ' to' → logprob: -4.948958396911621
    5. 'to' → logprob: -4.948958396911621
    6. ' #' → logprob: -5.073958396911621
    7. 'def' → logprob: -5.573958396911621
    8. ':' → logprob: -5.823958396911621
    9. 'for' → logprob: -5.823958396911621
    10. '->' → logprob: -5.823958396911621

Token 250: ' ...' (ID: 2550)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.026549339294433594
    2. '...' → logprob: -3.7765493392944336
    3. ' b' → logprob: -5.776549339294434
    4. ' ...' → logprob: -9.276549339294434
    5. '#' → logprob: -9.401549339294434
    6. 'c' → logprob: -12.526549339294434
    7. '…' → logprob: -12.776549339294434
    8. '
' → logprob: -13.026549339294434
    9. '...\' → logprob: -13.026549339294434
    10. '...
' → logprob: -13.151549339294434

Token 251: ' ->' (ID: 2747)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6714004874229431
    2. 'c' → logprob: -2.171400547027588
    3. 'p' → logprob: -2.921400547027588
    4. 's' → logprob: -2.921400547027588
    5. 'a' → logprob: -3.171400547027588
    6. '->' → logprob: -3.296400547027588
    7. '...' → logprob: -3.671400547027588
    8. '=' → logprob: -3.796400547027588
    9. 'e' → logprob: -3.796400547027588
    10. '_c' → logprob: -3.921400547027588

Token 252: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.408677290892228e-05
    2. ' b' → logprob: -9.8750638961792
    3. 'c' → logprob: -12.3750638961792
    4. 'Q' → logprob: -12.8750638961792
    5. 'p' → logprob: -13.5000638961792
    6. 'B' → logprob: -13.6250638961792
    7. 'R' → logprob: -13.7500638961792
    8. 'd' → logprob: -14.1250638961792
    9. '...' → logprob: -15.1250638961792
    10. 'S' → logprob: -15.2500638961792

Token 253: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19190342724323273
    2. '#' → logprob: -2.4419033527374268
    3. ' for' → logprob: -3.4419033527374268
    4. 'answer' → logprob: -3.8169033527374268
    5. 'def' → logprob: -5.066903591156006
    6. 'answers' → logprob: -5.316903591156006
    7. 'result' → logprob: -5.441903591156006
    8. 'ans' → logprob: -5.691903591156006
    9. 'valid' → logprob: -6.191903591156006
    10. '"""
' → logprob: -6.441903591156006

Token 254: ' be' (ID: 413)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -1.5550613403320312
    2. 'be' → logprob: -1.6800613403320312
    3. 'pass' → logprob: -1.9300613403320312
    4. 'min' → logprob: -2.0550613403320312
    5. 's' → logprob: -2.0550613403320312
    6. 'print' → logprob: -3.1800613403320312
    7. 'answer' → logprob: -3.1800613403320312
    8. 'have' → logprob: -4.430061340332031
    9. 'maximize' → logprob: -4.555061340332031
    10. 'ensure' → logprob: -4.680061340332031

Token 255: ' a' (ID: 261)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07202155143022537
    2. 'max' → logprob: -3.822021484375
    3. 'valid' → logprob: -4.447021484375
    4. ''s' → logprob: -4.572021484375
    5. 'True' → logprob: -5.197021484375
    6. '"s' → logprob: -5.697021484375
    7. ''' → logprob: -5.822021484375
    8. 'min' → logprob: -6.197021484375
    9. 's' → logprob: -6.697021484375
    10. 'at' → logprob: -6.822021484375

Token 256: ' shortest' (ID: 70564)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -0.4721854031085968
    2. 'ny' → logprob: -1.3471853733062744
    3. 'll' → logprob: -4.0971856117248535
    4. 'b' → logprob: -4.3471856117248535
    5. 'path' → logprob: -4.4721856117248535
    6. 'bs' → logprob: -4.7221856117248535
    7. ' path' → logprob: -4.9721856117248535
    8. 'ss' → logprob: -5.0971856117248535
    9. ' =' → logprob: -5.2221856117248535
    10. 'valid' → logprob: -5.4721856117248535

Token 257: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.1465497463941574
    2. ' path' → logprob: -2.021549701690674
    3. '_path' → logprob: -5.771549701690674
    4. 'distance' → logprob: -8.146550178527832
    5. 'p' → logprob: -9.271550178527832
    6. '<|end|>' → logprob: -9.521550178527832
    7. 'def' → logprob: -10.146550178527832
    8. '```' → logprob: -10.521550178527832
    9. '#' → logprob: -10.771550178527832
    10. ' distance' → logprob: -10.896550178527832

Token 258: ' from' (ID: 591)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27199164032936096
    2. ':' → logprob: -1.7719916105270386
    3. 'is' → logprob: -3.771991729736328
    4. ' is' → logprob: -4.271991729736328
    5. 'for' → logprob: -4.521991729736328
    6. ':
' → logprob: -5.021991729736328
    7. ' for' → logprob: -5.646991729736328
    8. ' =' → logprob: -5.771991729736328
    9. '=' → logprob: -6.271991729736328
    10. 'def' → logprob: -7.021991729736328

Token 259: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00014716439181938767
    2. ' a' → logprob: -9.250146865844727
    3. 'S' → logprob: -10.875146865844727
    4. 'source' → logprob: -11.875146865844727
    5. 's' → logprob: -12.000146865844727
    6. 'c' → logprob: -12.375146865844727
    7. 'start' → logprob: -12.875146865844727
    8. 'p' → logprob: -13.000146865844727
    9. 'the' → logprob: -13.125146865844727
    10. '```' → logprob: -13.875146865844727

Token 260: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.736990213394165
    2. 'to' → logprob: -0.861990213394165
    3. '->' → logprob: -2.361990213394165
    4. ' ->' → logprob: -5.986989974975586
    5. '#' → logprob: -6.736989974975586
    6. '>' → logprob: -8.486989974975586
    7. ')' → logprob: -8.486989974975586
    8. '_to' → logprob: -9.111989974975586
    9. '...' → logprob: -9.236989974975586
    10. ' ' → logprob: -9.611989974975586

Token 261: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00017231269157491624
    2. ' b' → logprob: -8.87517261505127
    3. 'c' → logprob: -10.50017261505127
    4. 'd' → logprob: -12.62517261505127
    5. 'p' → logprob: -14.25017261505127
    6. 's' → logprob: -15.25017261505127
    7. '```' → logprob: -15.25017261505127
    8. '
' → logprob: -16.125171661376953
    9. ' ' → logprob: -16.500171661376953
    10. ' c' → logprob: -16.500171661376953

Token 262: ':
' (ID: 734)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04499732330441475
    2. 'for' → logprob: -4.044997215270996
    3. ':' → logprob: -4.419997215270996
    4. ' for' → logprob: -5.544997215270996
    5. 'if' → logprob: -6.294997215270996
    6. ' =' → logprob: -6.544997215270996
    7. 'dist' → logprob: -6.794997215270996
    8. 'def' → logprob: -6.919997215270996
    9. '
' → logprob: -7.044997215270996
    10. '=' → logprob: -7.294997215270996

Token 263: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08085697889328003
    2. ' for' → logprob: -3.330857038497925
    3. 'for' → logprob: -3.455857038497925
    4. ' #' → logprob: -4.830856800079346
    5. ' if' → logprob: -7.205856800079346
    6. 'if' → logprob: -7.205856800079346
    7. '
' → logprob: -9.330857276916504
    8. 'For' → logprob: -9.580857276916504
    9. '#
' → logprob: -9.830857276916504
    10. ' c' → logprob: -9.955857276916504

Token 264: ' dist' (ID: 3601)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0015846160240471363
    2. 'for' → logprob: -6.876584529876709
    3. 'if' → logprob: -8.626585006713867
    4. 'The' → logprob: -9.126585006713867
    5. 'If' → logprob: -9.751585006713867
    6. 'dist' → logprob: -10.126585006713867
    7. 'For' → logprob: -10.251585006713867
    8. ' for' → logprob: -10.376585006713867
    9. '"""
' → logprob: -10.876585006713867
    10. 'print' → logprob: -11.126585006713867

Token 265: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.06758356839418411
    2. '[a' → logprob: -2.9425835609436035
    3. '[p' → logprob: -5.8175835609436035
    4. '[u' → logprob: -6.1925835609436035
    5. 'a' → logprob: -6.3175835609436035
    6. '[c' → logprob: -6.4425835609436035
    7. '_b' → logprob: -6.8175835609436035
    8. '[' → logprob: -7.0675835609436035
    9. '_c' → logprob: -7.4425835609436035
    10. '_' → logprob: -7.8175835609436035

Token 266: '[b' (ID: 40800)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.018100189045071602
    2. '[d' → logprob: -4.268100261688232
    3. '[p' → logprob: -6.393100261688232
    4. '[' → logprob: -6.518100261688232
    5. '[u' → logprob: -7.893100261688232
    6. '[v' → logprob: -9.518099784851074
    7. '[a' → logprob: -9.643099784851074
    8. '[b' → logprob: -9.768099784851074
    9. 'c' → logprob: -10.518099784851074
    10. '+c' → logprob: -10.768099784851074

Token 267: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007709788624197245
    2. ']==' → logprob: -5.007709980010986
    3. ' ]' → logprob: -7.632709980010986
    4. '[' → logprob: -9.007709503173828
    5. '])' → logprob: -9.007709503173828
    6. ']<=' → logprob: -9.507709503173828
    7. ']>=' → logprob: -9.757709503173828
    8. ']>' → logprob: -10.507709503173828
    9. ' ==' → logprob: -10.882709503173828
    10. ')' → logprob: -11.257709503173828

Token 268: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11527912318706512
    2. '==' → logprob: -2.365279197692871
    3. ' <=' → logprob: -4.490279197692871
    4. '<=' → logprob: -6.490279197692871
    5. '=' → logprob: -6.740279197692871
    6. ' =' → logprob: -7.490279197692871
    7. '+' → logprob: -9.240279197692871
    8. ' >=' → logprob: -9.365279197692871
    9. ' +' → logprob: -9.615279197692871
    10. '>=' → logprob: -10.490279197692871

Token 269: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00976482592523098
    2. ' dist' → logprob: -4.634764671325684
    3. '   ' → logprob: -12.509764671325684
    4. '(dist' → logprob: -12.884764671325684
    5. '	dist' → logprob: -13.509764671325684
    6. 'd' → logprob: -15.259764671325684
    7. ' ' → logprob: -15.384764671325684
    8. '.dist' → logprob: -15.884764671325684
    9. '```' → logprob: -15.884764671325684
    10. 'cost' → logprob: -16.009765625

Token 270: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -8.041768160182983e-05
    2. '[a' → logprob: -9.750080108642578
    3. 'a' → logprob: -11.125080108642578
    4. '_' → logprob: -12.250080108642578
    5. '[' → logprob: -14.500080108642578
    6. 'dist' → logprob: -14.500080108642578
    7. '_b' → logprob: -14.625080108642578
    8. '[_' → logprob: -14.875080108642578
    9. '_[' → logprob: -15.625080108642578
    10. '```' → logprob: -15.875080108642578

Token 271: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.004953020252287388
    2. '[b' → logprob: -6.379952907562256
    3. '[' → logprob: -6.629952907562256
    4. '[d' → logprob: -7.379952907562256
    5. 'c' → logprob: -7.879952907562256
    6. '[a' → logprob: -8.254953384399414
    7. '[v' → logprob: -9.004953384399414
    8. '<|end|>' → logprob: -9.004953384399414
    9. '[u' → logprob: -9.379953384399414
    10. '[p' → logprob: -10.129953384399414

Token 272: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04661207273602486
    2. '[c' → logprob: -3.796612024307251
    3. ']+' → logprob: -3.921612024307251
    4. ')' → logprob: -6.92161226272583
    5. '[' → logprob: -7.42161226272583
    6. '[d' → logprob: -7.79661226272583
    7. '[b' → logprob: -7.79661226272583
    8. '])' → logprob: -8.671611785888672
    9. ' ]' → logprob: -8.671611785888672
    10. '']' → logprob: -8.921611785888672

Token 273: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3200281262397766
    2. ' +' → logprob: -1.3200280666351318
    3. '[c' → logprob: -5.695028305053711
    4. '+c' → logprob: -6.195028305053711
    5. '[' → logprob: -6.945028305053711
    6. '+d' → logprob: -8.695028305053711
    7. '[v' → logprob: -9.945028305053711
    8. '[u' → logprob: -10.570028305053711
    9. '[d' → logprob: -10.820028305053711
    10. '[b' → logprob: -11.570028305053711

Token 274: ' dist' (ID: 3601)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.27366840839385986
    2. 'graph' → logprob: -2.1486682891845703
    3. 'dist' → logprob: -2.1486682891845703
    4. ' w' → logprob: -6.39866828918457
    5. ' dist' → logprob: -6.52366828918457
    6. ' graph' → logprob: -6.64866828918457
    7. '(graph' → logprob: -7.77366828918457
    8. '1' → logprob: -7.77366828918457
    9. '(dist' → logprob: -7.77366828918457
    10. ' (' → logprob: -9.27366828918457

Token 275: '_c' (ID: 1303)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0001757696009008214
    2. '_c' → logprob: -9.000175476074219
    3. '_d' → logprob: -10.625175476074219
    4. '_a' → logprob: -11.000175476074219
    5. '_' → logprob: -12.625175476074219
    6. '_[' → logprob: -13.000175476074219
    7. '[c' → logprob: -13.000175476074219
    8. 'b' → logprob: -13.625175476074219
    9. '[b' → logprob: -14.250175476074219
    10. '[d' → logprob: -14.250175476074219

Token 276: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.013566632755100727
    2. 'd' → logprob: -5.138566493988037
    3. '[' → logprob: -5.263566493988037
    4. '(d' → logprob: -7.638566493988037
    5. ',d' → logprob: -7.763566493988037
    6. '[c' → logprob: -7.888566493988037
    7. '```' → logprob: -8.138566970825195
    8. '_d' → logprob: -8.638566970825195
    9. '[b' → logprob: -9.263566970825195
    10. '[
' → logprob: -9.388566970825195

Token 277: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03100523352622986
    2. ']' → logprob: -4.156005382537842
    3. '+' → logprob: -4.531005382537842
    4. '])' → logprob: -6.781005382537842
    5. '[' → logprob: -7.031005382537842
    6. ' +' → logprob: -7.656005382537842
    7. ')+' → logprob: -7.906005382537842
    8. '[c' → logprob: -8.906004905700684
    9. ' )' → logprob: -9.031004905700684
    10. '#' → logprob: -9.281004905700684

Token 278: ' +' (ID: 659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7122243642807007
    2. '
' → logprob: -1.5872243642807007
    3. '#' → logprob: -2.4622244834899902
    4. 'd' → logprob: -2.7122244834899902
    5. ' for' → logprob: -3.2122244834899902
    6. 'c' → logprob: -3.4622244834899902
    7. '<|end|>' → logprob: -3.4622244834899902
    8. 'dist' → logprob: -4.21222448348999
    9. 'def' → logprob: -4.71222448348999
    10. '_' → logprob: -4.96222448348999

Token 279: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10021831095218658
    2. ' dist' → logprob: -2.3502182960510254
    3. '(dist' → logprob: -12.975218772888184
    4. '	dist' → logprob: -13.475218772888184
    5. '1' → logprob: -13.600218772888184
    6. '```' → logprob: -13.850218772888184
    7. 'graph' → logprob: -13.850218772888184
    8. ' ' → logprob: -14.100218772888184
    9. '.dist' → logprob: -14.100218772888184
    10. '_dist' → logprob: -14.725218772888184

Token 280: '_d' (ID: 1565)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -9.066919301403686e-05
    2. '_a' → logprob: -9.875090599060059
    3. 'b' → logprob: -10.375090599060059
    4. '_d' → logprob: -12.375090599060059
    5. '_c' → logprob: -13.625090599060059
    6. '_' → logprob: -14.500090599060059
    7. 'dist' → logprob: -14.625090599060059
    8. 'd' → logprob: -14.875090599060059
    9. 'a' → logprob: -14.875090599060059
    10. '```' → logprob: -15.250090599060059

Token 281: '[b' (ID: 40800)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.8244402408599854
    2. '[b' → logprob: -1.0744402408599854
    3. '[c' → logprob: -1.6994402408599854
    4. '[v' → logprob: -3.9494402408599854
    5. '[' → logprob: -4.699440002441406
    6. 'b' → logprob: -5.574440002441406
    7. 'cost' → logprob: -7.074440002441406
    8. 'v' → logprob: -7.199440002441406
    9. '[a' → logprob: -7.574440002441406
    10. '[w' → logprob: -7.824440002441406

Token 282: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027218335890211165
    2. '#' → logprob: -8.875271797180176
    3. 'def' → logprob: -10.000271797180176
    4. ')
' → logprob: -10.500271797180176
    5. ']' → logprob: -10.875271797180176
    6. '):' → logprob: -11.250271797180176
    7. ' )' → logprob: -12.500271797180176
    8. '')' → logprob: -12.625271797180176
    9. ')`' → logprob: -12.750271797180176
    10. '[' → logprob: -12.875271797180176

Token 283: ' with' (ID: 483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00035798799945041537
    2. ' for' → logprob: -8.375357627868652
    3. 'results' → logprob: -10.125357627868652
    4. 'answers' → logprob: -10.250357627868652
    5. '#' → logprob: -11.000357627868652
    6. 'def' → logprob: -11.375357627868652
    7. 'dist' → logprob: -11.625357627868652
    8. 'answer' → logprob: -12.500357627868652
    9. 'result' → logprob: -12.625357627868652
    10. 'from' → logprob: -12.875357627868652

Token 284: ' dist' (ID: 3601)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5734197497367859
    2. ' c' → logprob: -1.4484198093414307
    3. 'dist' → logprob: -2.9484198093414307
    4. '"' → logprob: -2.9484198093414307
    5. 'd' → logprob: -4.073419570922852
    6. 'v' → logprob: -4.323419570922852
    7. ' v' → logprob: -4.948419570922852
    8. 'the' → logprob: -5.073419570922852
    9. ' dist' → logprob: -5.073419570922852
    10. ' d' → logprob: -5.323419570922852

Token 285: '_c' (ID: 1303)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.45654645562171936
    2. '_c' → logprob: -1.081546425819397
    3. '[a' → logprob: -4.956546306610107
    4. '_' → logprob: -5.456546306610107
    5. 'a' → logprob: -5.706546306610107
    6. '_d' → logprob: -5.831546306610107
    7. '[c' → logprob: -6.081546306610107
    8. '[' → logprob: -6.206546306610107
    9. '_b' → logprob: -6.581546306610107
    10. '[d' → logprob: -7.456546306610107

Token 286: ' and' (ID: 326)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.6889450550079346
    2. '[c' → logprob: -1.6889450550079346
    3. 'd' → logprob: -1.9389450550079346
    4. '[d' → logprob: -1.9389450550079346
    5. '[' → logprob: -2.4389450550079346
    6. '=' → logprob: -2.9389450550079346
    7. '_c' → logprob: -3.4389450550079346
    8. '[v' → logprob: -3.6889450550079346
    9. 'b' → logprob: -3.8139450550079346
    10. ' =' → logprob: -4.1889448165893555

Token 287: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0756276845932007
    2. '#' → logprob: -1.2006276845932007
    3. 'd' → logprob: -1.2006276845932007
    4. 'c' → logprob: -4.20062780380249
    5. 'None' → logprob: -4.20062780380249
    6. 'def' → logprob: -4.82562780380249
    7. 'lambda' → logprob: -4.95062780380249
    8. ' dist' → logprob: -6.07562780380249
    9. '{' → logprob: -6.45062780380249
    10. ' d' → logprob: -6.45062780380249

Token 288: '_d' (ID: 1565)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.12204600870609283
    2. '_a' → logprob: -2.6220459938049316
    3. '_c' → logprob: -3.3720459938049316
    4. '_d' → logprob: -5.247045993804932
    5. 'b' → logprob: -6.622045993804932
    6. 'ijkstra' → logprob: -7.997045993804932
    7. 'a' → logprob: -8.12204647064209
    8. 'd' → logprob: -8.24704647064209
    9. '```' → logprob: -8.87204647064209
    10. 'c' → logprob: -9.74704647064209

Token 289: ' distances' (ID: 48294)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28345611691474915
    2. ' =' → logprob: -1.4084560871124268
    3. '[' → logprob: -7.283456325531006
    4. '_' → logprob: -8.158455848693848
    5. 'def' → logprob: -8.158455848693848
    6. 's' → logprob: -9.033455848693848
    7. 'c' → logprob: -9.033455848693848
    8. ',' → logprob: -9.158455848693848
    9. ')' → logprob: -9.158455848693848
    10. '_c' → logprob: -9.533455848693848

Token 290: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.237467959523201
    2. ' for' → logprob: -2.3624680042266846
    3. '#' → logprob: -2.8624680042266846
    4. 'def' → logprob: -3.8624680042266846
    5. 'dist' → logprob: -4.3624677658081055
    6. 'c' → logprob: -4.9874677658081055
    7. 'd' → logprob: -5.1124677658081055
    8. ')' → logprob: -5.4874677658081055
    9. '<|end|>' → logprob: -5.8624677658081055
    10. '(' → logprob: -7.1124677658081055

Token 291: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.012295481748878956
    2. 'a' → logprob: -5.012295246124268
    3. 'each' → logprob: -6.637295246124268
    4. 'any' → logprob: -7.137295246124268
    5. 'the' → logprob: -7.137295246124268
    6. '#' → logprob: -7.762295246124268
    7. 'node' → logprob: -8.262295722961426
    8. 'all' → logprob: -8.387295722961426
    9. ' c' → logprob: -8.512295722961426
    10. 'u' → logprob: -8.637295722961426

Token 292: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025627410039305687
    2. 'dist' → logprob: -4.525627613067627
    3. 'answers' → logprob: -4.775627613067627
    4. 'results' → logprob: -6.025627613067627
    5. 'def' → logprob: -6.775627613067627
    6. 'answer' → logprob: -7.275627613067627
    7. ' for' → logprob: -7.650627613067627
    8. '#' → logprob: -7.900627613067627
    9. 'result' → logprob: -8.275627136230469
    10. 'ans' → logprob: -8.275627136230469

Token 293: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002063426189124584
    2. 'def' → logprob: -6.752063274383545
    3. '#' → logprob: -7.752063274383545
    4. ' d' → logprob: -8.127063751220703
    5. 'dist' → logprob: -10.002063751220703
    6. '...' → logprob: -10.127063751220703
    7. 'a' → logprob: -10.877063751220703
    8. 'c' → logprob: -11.002063751220703
    9. 'import' → logprob: -11.877063751220703
    10. 'different' → logprob: -12.127063751220703

Token 294: ' respectively' (ID: 24364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030711833387613297
    2. 'answers' → logprob: -4.405711650848389
    3. 'dist' → logprob: -5.280711650848389
    4. 'answer' → logprob: -5.280711650848389
    5. 'results' → logprob: -5.905711650848389
    6. 'def' → logprob: -6.405711650848389
    7. 'result' → logprob: -6.905711650848389
    8. 'res' → logprob: -7.155711650848389
    9. 'ans' → logprob: -7.280711650848389
    10. ' for' → logprob: -7.780711650848389

Token 295: ',
' (ID: 412)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.32617586851119995
    2. 'dist' → logprob: -2.0761759281158447
    3. 'answers' → logprob: -3.0761759281158447
    4. 'res' → logprob: -3.7011759281158447
    5. 'answer' → logprob: -3.8261759281158447
    6. 'result' → logprob: -4.076175689697266
    7. 'results' → logprob: -4.201175689697266
    8. 'ans' → logprob: -4.326175689697266
    9. 'edges' → logprob: -5.951175689697266
    10. 'dp' → logprob: -6.326175689697266

Token 296: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03819159045815468
    2. '#' → logprob: -3.913191556930542
    3. 'dist' → logprob: -4.913191795349121
    4. ' for' → logprob: -5.413191795349121
    5. 'answers' → logprob: -5.913191795349121
    6. 'answer' → logprob: -6.788191795349121
    7. 'result' → logprob: -7.413191795349121
    8. 'def' → logprob: -8.663191795349121
    9. 'print' → logprob: -8.788191795349121
    10. 'results' → logprob: -8.788191795349121

Token 297: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40303125977516174
    2. '#' → logprob: -1.5280312299728394
    3. 'dist' → logprob: -3.278031349182129
    4. 'answers' → logprob: -3.778031349182129
    5. 'answer' → logprob: -4.028031349182129
    6. 'result' → logprob: -4.278031349182129
    7. 'results' → logprob: -5.028031349182129
    8. ' for' → logprob: -5.028031349182129
    9. 'ans' → logprob: -6.028031349182129
    10. 'dp' → logprob: -6.278031349182129

Token 298: ' dist' (ID: 3601)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.38299447298049927
    2. 'dist' → logprob: -1.5079944133758545
    3. 'for' → logprob: -3.6329944133758545
    4. 'graph' → logprob: -4.257994651794434
    5. 'the' → logprob: -4.257994651794434
    6. 'c' → logprob: -4.507994651794434
    7. 'w' → logprob: -5.132994651794434
    8. 'all' → logprob: -5.757994651794434
    9. ' dist' → logprob: -5.882994651794434
    10. '
' → logprob: -5.882994651794434

Token 299: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.04160190001130104
    2. '_a' → logprob: -3.5416018962860107
    3. '_d' → logprob: -4.91660213470459
    4. '_b' → logprob: -6.16660213470459
    5. '_' → logprob: -6.54160213470459
    6. 'a' → logprob: -7.79160213470459
    7. 'd' → logprob: -9.29160213470459
    8. '_e' → logprob: -9.79160213470459
    9. '_u' → logprob: -9.79160213470459
    10. 'c' → logprob: -10.16660213470459

Token 300: ',d' (ID: 26159)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7126331925392151
    2. '=' → logprob: -1.2126331329345703
    3. '[' → logprob: -2.8376331329345703
    4. '[d' → logprob: -3.3376331329345703
    5. '[b' → logprob: -3.3376331329345703
    6. 's' → logprob: -4.08763313293457
    7. 'b' → logprob: -4.46263313293457
    8. '_b' → logprob: -5.08763313293457
    9. ')' → logprob: -5.46263313293457
    10. 'd' → logprob: -5.46263313293457

Token 301: ' can' (ID: 665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10224752128124237
    2. '=' → logprob: -2.977247476577759
    3. ' is' → logprob: -4.727247714996338
    4. '[c' → logprob: -5.352247714996338
    5. 'c' → logprob: -5.852247714996338
    6. 's' → logprob: -5.852247714996338
    7. ')' → logprob: -6.352247714996338
    8. ' are' → logprob: -6.352247714996338
    9. ']' → logprob: -6.477247714996338
    10. '_c' → logprob: -6.727247714996338

Token 302: ' be' (ID: 413)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5514456033706665
    2. ' be' → logprob: -1.1764456033706665
    3. ' not' → logprob: -3.176445484161377
    4. ''t' → logprob: -3.426445484161377
    5. ''' → logprob: -3.926445484161377
    6. 'be' → logprob: -4.426445484161377
    7. ' only' → logprob: -6.176445484161377
    8. 't' → logprob: -6.176445484161377
    9. 'def' → logprob: -6.926445484161377
    10. 'only' → logprob: -7.676445484161377

Token 303: ' obtained' (ID: 17747)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.800709068775177
    2. 'computed' → logprob: -1.8007090091705322
    3. 'appro' → logprob: -2.5507090091705322
    4. 'cal' → logprob: -3.0507090091705322
    5. 'obt' → logprob: -3.0507090091705322
    6. 'ignored' → logprob: -3.1757090091705322
    7. 're' → logprob: -3.4257090091705322
    8. 'defined' → logprob: -4.300709247589111
    9. 'ass' → logprob: -4.300709247589111
    10. 'd' → logprob: -4.550709247589111

Token 304: ' from' (ID: 591)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3103177547454834
    2. 'dist' → logprob: -1.3103177547454834
    3. '=' → logprob: -1.5603177547454834
    4. 'from' → logprob: -2.1853177547454834
    5. 'for' → logprob: -3.0603177547454834
    6. ' =' → logprob: -3.1853177547454834
    7. '#' → logprob: -3.4353177547454834
    8. ' for' → logprob: -5.3103179931640625
    9. 'import' → logprob: -6.0603179931640625
    10. ' from' → logprob: -6.6853179931640625

Token 305: ' dist' (ID: 3601)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16680721938610077
    2. 'dist' → logprob: -2.541807174682617
    3. 'the' → logprob: -3.291807174682617
    4. 'either' → logprob: -4.791807174682617
    5. ' d' → logprob: -4.916807174682617
    6. 'additional' → logprob: -5.666807174682617
    7. 'running' → logprob: -5.791807174682617
    8. 'two' → logprob: -5.791807174682617
    9. 'pre' → logprob: -6.041807174682617
    10. 'a' → logprob: -6.541807174682617

Token 306: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12239108234643936
    2. 'answers' → logprob: -3.6223909854888916
    3. 'ans' → logprob: -4.247391223907471
    4. 'results' → logprob: -4.372391223907471
    5. 'answer' → logprob: -4.372391223907471
    6. 'dist' → logprob: -4.872391223907471
    7. 'from' → logprob: -4.997391223907471
    8. 'ances' → logprob: -4.997391223907471
    9. 'res' → logprob: -5.247391223907471
    10. 'result' → logprob: -5.247391223907471

Token 307: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8201801776885986
    2. 'd' → logprob: -1.0701801776885986
    3. 'the' → logprob: -2.9451801776885986
    4. 'both' → logprob: -2.9451801776885986
    5. 'all' → logprob: -3.5701801776885986
    6. 'each' → logprob: -4.0701799392700195
    7. 'either' → logprob: -4.1951799392700195
    8. 'any' → logprob: -4.8201799392700195
    9. 'dist' → logprob: -4.9451799392700195
    10. 'previous' → logprob: -4.9451799392700195

Token 308: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0180648323148489
    2. 'answers' → logprob: -4.893064975738525
    3. 'dist' → logprob: -5.393064975738525
    4. 'results' → logprob: -6.268064975738525
    5. 'answer' → logprob: -7.018064975738525
    6. 'res' → logprob: -7.268064975738525
    7. ' for' → logprob: -7.268064975738525
    8. 'result' → logprob: -7.518064975738525
    9. 'ans' → logprob: -7.893064975738525
    10. '#' → logprob: -8.268064498901367

Token 309: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0499483160674572
    2. ' d' → logprob: -3.424948215484619
    3. 'dist' → logprob: -4.299948215484619
    4. ' dist' → logprob: -7.174948215484619
    5. '...' → logprob: -7.924948215484619
    6. 'b' → logprob: -8.174948692321777
    7. 'graph' → logprob: -8.299948692321777
    8. 'def' → logprob: -8.549948692321777
    9. 'the' → logprob: -9.424948692321777
    10. '```' → logprob: -10.049948692321777

Token 310: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29902246594429016
    2. 'dist' → logprob: -2.2990224361419678
    3. 'answers' → logprob: -2.4240224361419678
    4. 'results' → logprob: -3.9240224361419678
    5. 'answer' → logprob: -4.299022674560547
    6. 'ans' → logprob: -4.549022674560547
    7. 'res' → logprob: -4.674022674560547
    8. 'result' → logprob: -4.799022674560547
    9. '#' → logprob: -5.549022674560547
    10. ' for' → logprob: -6.674022674560547

Token 311: ' but' (ID: 889)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009784188121557236
    2. ' for' → logprob: -5.38478422164917
    3. 'answers' → logprob: -6.50978422164917
    4. 'result' → logprob: -7.00978422164917
    5. 'results' → logprob: -7.13478422164917
    6. '#' → logprob: -7.25978422164917
    7. 'dist' → logprob: -7.38478422164917
    8. 'answer' → logprob: -8.009783744812012
    9. 'res' → logprob: -9.509783744812012
    10. 'ans' → logprob: -9.884783744812012

Token 312: ' doing' (ID: 5306)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11386421322822571
    2. 'the' → logprob: -3.3638641834259033
    3. 'dist' → logprob: -3.6138641834259033
    4. 'for' → logprob: -3.6138641834259033
    5. '<|end|>' → logprob: -4.988864421844482
    6. ' the' → logprob: -6.363864421844482
    7. '<|end|>' → logprob: -6.613864421844482
    8. ' for' → logprob: -6.613864421844482
    9. ' #' → logprob: -7.113864421844482
    10. '...' → logprob: -7.238864421844482

Token 313: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1720253825187683
    2. 'it' → logprob: -3.422025442123413
    3. 'dist' → logprob: -3.797025442123413
    4. 'so' → logprob: -3.922025442123413
    5. 'all' → logprob: -4.172025203704834
    6. 'D' → logprob: -4.172025203704834
    7. 'this' → logprob: -4.547025203704834
    8. 'a' → logprob: -5.422025203704834
    9. 'the' → logprob: -5.422025203704834
    10. 'b' → logprob: -5.672025203704834

Token 314: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.01978798769414425
    2. 'ijk' → logprob: -4.394787788391113
    3. 'ij' → logprob: -5.269787788391113
    4. 'jk' → logprob: -7.769787788391113
    5. 'i' → logprob: -8.144787788391113
    6. 'jik' → logprob: -8.394787788391113
    7. 'ist' → logprob: -8.582287788391113
    8. '[i' → logprob: -8.957287788391113
    9. 'j' → logprob: -9.144787788391113
    10. '```' → logprob: -9.207287788391113

Token 315: ' Q' (ID: 1486)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6973247528076172
    2. 'dist' → logprob: -1.0723247528076172
    3. 'answers' → logprob: -2.697324752807617
    4. 'answer' → logprob: -3.697324752807617
    5. 'results' → logprob: -4.072324752807617
    6. '#' → logprob: -4.072324752807617
    7. 'ans' → logprob: -4.697324752807617
    8. 'result' → logprob: -4.697324752807617
    9. 'res' → logprob: -5.072324752807617
    10. 'dp' → logprob: -5.447324752807617

Token 316: ' times' (ID: 4238)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.047302354127168655
    2. ' for' → logprob: -3.29730224609375
    3. 'def' → logprob: -6.29730224609375
    4. '<|end|>' → logprob: -6.29730224609375
    5. 's' → logprob: -6.67230224609375
    6. '#' → logprob: -7.17230224609375
    7. '
' → logprob: -7.29730224609375
    8. 'dist' → logprob: -7.67230224609375
    9. ')' → logprob: -7.67230224609375
    10. '_queries' → logprob: -8.29730224609375

Token 317: ' is' (ID: 382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13146638870239258
    2. 'dist' → logprob: -2.6314663887023926
    3. 'answers' → logprob: -3.8814663887023926
    4. '#' → logprob: -4.631466388702393
    5. 'answer' → logprob: -5.131466388702393
    6. 'def' → logprob: -5.381466388702393
    7. 'results' → logprob: -5.631466388702393
    8. 'result' → logprob: -6.006466388702393
    9. ' for' → logprob: -6.881466388702393
    10. 'ans' → logprob: -7.131466388702393

Token 318: ' too' (ID: 3101)
  Prédit: 'too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'too' → logprob: -0.39287325739860535
    2. 'im' → logprob: -1.5178732872009277
    3. 'ine' → logprob: -2.8928732872009277
    4. 'not' → logprob: -3.3928732872009277
    5. 'exp' → logprob: -5.017873287200928
    6. 'pro' → logprob: -5.392873287200928
    7. 'in' → logprob: -6.267873287200928
    8. ' too' → logprob: -6.642873287200928
    9. 'comput' → logprob: -7.267873287200928
    10. 'cost' → logprob: -8.01787281036377

Token 319: ' costly' (ID: 44091)
  Prédit: 'slow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slow' → logprob: -0.3291594684123993
    2. 'cost' → logprob: -1.9541594982147217
    3. 'exp' → logprob: -2.0791594982147217
    4. 'heavy' → logprob: -4.829159259796143
    5. 'time' → logprob: -5.454159259796143
    6. ' costly' → logprob: -6.829159259796143
    7. 'ine' → logprob: -8.9541597366333
    8. 'much' → logprob: -9.0791597366333
    9. ' slow' → logprob: -10.3291597366333
    10. '#' → logprob: -10.3291597366333

Token 320: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6861093640327454
    2. 'dist' → logprob: -1.3111093044281006
    3. 'dp' → logprob: -2.0611093044281006
    4. 'from' → logprob: -3.4361093044281006
    5. 'parent' → logprob: -3.9361093044281006
    6. 'import' → logprob: -4.31110954284668
    7. 'def' → logprob: -4.31110954284668
    8. 'print' → logprob: -5.43610954284668
    9. 'answers' → logprob: -5.68610954284668
    10. 'answer' → logprob: -5.93610954284668

Token 321: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5688356757164001
    2. 'dist' → logprob: -1.318835735321045
    3. 'dp' → logprob: -2.693835735321045
    4. 'parent' → logprob: -3.318835735321045
    5. 'from' → logprob: -3.943835735321045
    6. 'import' → logprob: -4.568835735321045
    7. 'def' → logprob: -5.193835735321045
    8. 'visited' → logprob: -5.443835735321045
    9. 'answer' → logprob: -5.568835735321045
    10. 'answers' → logprob: -5.818835735321045

Token 322: ' But' (ID: 3072)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9101700782775879
    2. 'dist' → logprob: -1.035170078277588
    3. 'parent' → logprob: -2.160170078277588
    4. 'dp' → logprob: -3.285170078277588
    5. 'from' → logprob: -3.410170078277588
    6. 'answer' → logprob: -4.785170078277588
    7. 'import' → logprob: -4.785170078277588
    8. 'answers' → logprob: -5.410170078277588
    9. 'depth' → logprob: -5.410170078277588
    10. 'print' → logprob: -5.535170078277588

Token 323: ' problem' (ID: 4792)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.1004608869552612
    2. 'we' → logprob: -1.8504608869552612
    3. 'since' → logprob: -2.100461006164551
    4. 'for' → logprob: -2.600461006164551
    5. 'the' → logprob: -2.850461006164551
    6. 'all' → logprob: -3.225461006164551
    7. 'if' → logprob: -3.350461006164551
    8. 'both' → logprob: -3.725461006164551
    9. 'notice' → logprob: -4.225461006164551
    10. ' we' → logprob: -4.350461006164551

Token 324: ' states' (ID: 9407)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.6500678062438965
    2. ' is' → logprob: -2.0250678062438965
    3. ':' → logprob: -2.1500678062438965
    4. 'constraints' → logprob: -2.1500678062438965
    5. 'states' → logprob: -2.6500678062438965
    6. '#' → logprob: -2.7750678062438965
    7. ' constraints' → logprob: -3.2750678062438965
    8. 'mentions' → logprob: -3.4000678062438965
    9. 'sol' → logprob: -3.6500678062438965
    10. ' states' → logprob: -3.9000678062438965

Token 325: ' the' (ID: 290)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.14084742963314056
    2. ' that' → logprob: -2.8908474445343018
    3. 'the' → logprob: -3.2658474445343018
    4. '"' → logprob: -4.765847206115723
    5. 'all' → logprob: -5.015847206115723
    6. 'graph' → logprob: -5.265847206115723
    7. 'edges' → logprob: -5.265847206115723
    8. 'we' → logprob: -6.015847206115723
    9. 'each' → logprob: -6.140847206115723
    10. 'dist' → logprob: -6.765847206115723

Token 326: ' segment' (ID: 14806)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.10717519372701645
    2. 'edges' → logprob: -3.35717511177063
    3. ' graph' → logprob: -4.357175350189209
    4. 'edge' → logprob: -4.857175350189209
    5. 'dist' → logprob: -4.857175350189209
    6. 'path' → logprob: -4.857175350189209
    7. 'triangle' → logprob: -5.232175350189209
    8. 'short' → logprob: -5.482175350189209
    9. 'weights' → logprob: -5.482175350189209
    10. 'input' → logprob: -5.982175350189209

Token 327: ' c' (ID: 274)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5566567182540894
    2. 'graph' → logprob: -2.806656837463379
    3. 'between' → logprob: -3.056656837463379
    4. 'is' → logprob: -3.181656837463379
    5. 'dist' → logprob: -3.431656837463379
    6. '#' → logprob: -3.556656837463379
    7. 'length' → logprob: -3.681656837463379
    8. 'u' → logprob: -3.931656837463379
    9. 'weights' → logprob: -4.056656837463379
    10. ' is' → logprob: -4.056656837463379

Token 328: '-d' (ID: 2469)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7263321280479431
    2. ',d' → logprob: -1.226332187652588
    3. ' and' → logprob: -2.476332187652588
    4. ',' → logprob: -2.726332187652588
    5. 'and' → logprob: -3.226332187652588
    6. '_d' → logprob: -4.851332187652588
    7. 's' → logprob: -4.976332187652588
    8. '#' → logprob: -5.726332187652588
    9. '_' → logprob: -5.851332187652588
    10. '->' → logprob: -5.976332187652588

Token 329: ' must' (ID: 2804)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0089465379714966
    2. 'dist' → logprob: -1.2589465379714966
    3. ' =' → logprob: -3.133946418762207
    4. '=' → logprob: -3.258946418762207
    5. 'edges' → logprob: -3.383946418762207
    6. 'for' → logprob: -3.508946418762207
    7. 'def' → logprob: -3.633946418762207
    8. '_edges' → logprob: -3.883946418762207
    9. '_dist' → logprob: -4.258946418762207
    10. '_' → logprob: -4.383946418762207

Token 330: ' also' (ID: 1217)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.1909583956003189
    2. ' be' → logprob: -2.0659584999084473
    3. ' lie' → logprob: -3.6909584999084473
    4. 'lie' → logprob: -4.440958499908447
    5. 'have' → logprob: -5.440958499908447
    6. 'appear' → logprob: -6.065958499908447
    7. 'also' → logprob: -7.190958499908447
    8. ' have' → logprob: -8.065958023071289
    9. 'exist' → logprob: -8.065958023071289
    10. 'not' → logprob: -8.190958023071289

Token 331: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.3377741277217865
    2. 'lie' → logprob: -2.0877740383148193
    3. ' be' → logprob: -2.4627740383148193
    4. ' lie' → logprob: -2.5877740383148193
    5. 'appear' → logprob: -7.087774276733398
    6. 'bel' → logprob: -7.962774276733398
    7. 'have' → logprob: -8.337774276733398
    8. 'exist' → logprob: -8.587774276733398
    9. '```' → logprob: -9.087774276733398
    10. ' exist' → logprob: -9.087774276733398

Token 332: ' a' (ID: 261)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.4215976595878601
    2. 'part' → logprob: -1.9215977191925049
    3. 'a' → logprob: -2.046597719192505
    4. ' on' → logprob: -4.421597480773926
    5. ' part' → logprob: -4.421597480773926
    6. 'an' → logprob: -4.796597480773926
    7. 'short' → logprob: -5.046597480773926
    8. 'in' → logprob: -5.296597480773926
    9. 'one' → logprob: -5.546597480773926
    10. 'along' → logprob: -5.546597480773926

Token 333: ' shortest' (ID: 70564)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.9809675812721252
    2. 'part' → logprob: -1.2309675216674805
    3. 'tree' → logprob: -2.4809675216674805
    4. 'bridge' → logprob: -2.4809675216674805
    5. 'road' → logprob: -3.2309675216674805
    6. 'direct' → logprob: -3.7309675216674805
    7. ' shortest' → logprob: -3.8559675216674805
    8. 'path' → logprob: -4.1059675216674805
    9. ' part' → logprob: -4.1059675216674805
    10. 'shortcut' → logprob: -4.6059675216674805

Token 334: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.009958182461559772
    2. '_path' → logprob: -4.884958267211914
    3. 'paths' → logprob: -7.009958267211914
    4. ' path' → logprob: -7.509958267211914
    5. '_paths' → logprob: -8.009958267211914
    6. 'dist' → logprob: -8.509958267211914
    7. 'p' → logprob: -9.134958267211914
    8. 'distance' → logprob: -10.009958267211914
    9. 'line' → logprob: -10.009958267211914
    10. 'def' → logprob: -10.259958267211914

Token 335: ' between' (ID: 2870)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9909141063690186
    2. '#' → logprob: -1.2409141063690186
    3. 'from' → logprob: -1.7409141063690186
    4. 'import' → logprob: -2.6159141063690186
    5. 'parent' → logprob: -2.8659141063690186
    6. 'dp' → logprob: -4.365914344787598
    7. 'def' → logprob: -4.615914344787598
    8. 'depth' → logprob: -5.740914344787598
    9. 'l' → logprob: -6.490914344787598
    10. 'answer' → logprob: -7.240914344787598

Token 336: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0015492603415623307
    2. 'the' → logprob: -7.751549243927002
    3. 'nodes' → logprob: -8.00154972076416
    4. 'tokens' → logprob: -8.37654972076416
    5. 'vertices' → logprob: -8.87654972076416
    6. '<|end|>' → logprob: -9.62654972076416
    7. ' c' → logprob: -9.75154972076416
    8. 's' → logprob: -10.00154972076416
    9. 'segments' → logprob: -10.50154972076416
    10. 'u' → logprob: -10.62654972076416

Token 337: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23803965747356415
    2. ' and' → logprob: -2.11303973197937
    3. '_d' → logprob: -3.36303973197937
    4. 'and' → logprob: -3.48803973197937
    5. 'd' → logprob: -5.613039493560791
    6. '-' → logprob: -5.863039493560791
    7. ')' → logprob: -5.988039493560791
    8. '#' → logprob: -5.988039493560791
    9. ',' → logprob: -6.113039493560791
    10. 's' → logprob: -6.113039493560791

Token 338: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.2200749754119897e-06
    2. ' d' → logprob: -13.375001907348633
    3. 'import' → logprob: -14.750001907348633
    4. '```' → logprob: -15.875001907348633
    5. '
' → logprob: -16.375001907348633
    6. 'def' → logprob: -18.750001907348633
    7. '#' → logprob: -18.875001907348633
    8. '...' → logprob: -19.000001907348633
    9. '
' → logprob: -19.000001907348633
    10. 'c' → logprob: -19.000001907348633

Token 339: '.
' (ID: 558)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.46531012654304504
    2. 'for' → logprob: -2.5903100967407227
    3. 'parent' → logprob: -2.5903100967407227
    4. '#' → logprob: -2.7153100967407227
    5. 'dp' → logprob: -3.3403100967407227
    6. 'def' → logprob: -3.4653100967407227
    7. 'from' → logprob: -3.5903100967407227
    8. 'answers' → logprob: -4.215310096740723
    9. 'ans' → logprob: -4.965310096740723
    10. 'answer' → logprob: -5.090310096740723

Token 340: '#' (ID: 2)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6685696244239807
    2. 'answer' → logprob: -2.168569564819336
    3. 'answers' → logprob: -2.293569564819336
    4. 'dp' → logprob: -3.043569564819336
    5. 'result' → logprob: -3.168569564819336
    6. 'results' → logprob: -3.168569564819336
    7. 'ans' → logprob: -3.543569564819336
    8. '#' → logprob: -3.668569564819336
    9. 'res' → logprob: -4.168569564819336
    10. 'for' → logprob: -4.168569564819336

Token 341: ' Check' (ID: 6208)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0141569375991821
    2. 'for' → logprob: -1.3891569375991821
    3. 'from' → logprob: -2.5141568183898926
    4. 'parent' → logprob: -2.5141568183898926
    5. '#' → logprob: -2.6391568183898926
    6. 'dp' → logprob: -3.2641568183898926
    7. 'ans' → logprob: -4.014156818389893
    8. 'answer' → logprob: -4.014156818389893
    9. 'answers' → logprob: -4.014156818389893
    10. 'def' → logprob: -4.139156818389893

Token 342: ' conditions' (ID: 6409)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24463078379631042
    2. 'dist' → logprob: -1.7446308135986328
    3. 'answers' → logprob: -4.369630813598633
    4. 'def' → logprob: -5.244630813598633
    5. 'answer' → logprob: -5.369630813598633
    6. 'results' → logprob: -5.619630813598633
    7. 'res' → logprob: -5.869630813598633
    8. '#' → logprob: -5.994630813598633
    9. 'result' → logprob: -6.119630813598633
    10. ' for' → logprob: -6.119630813598633

Token 343: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03755340352654457
    2. 'dist' → logprob: -3.662553310394287
    3. 'results' → logprob: -5.537553310394287
    4. 'answers' → logprob: -5.787553310394287
    5. 'def' → logprob: -6.287553310394287
    6. 'result' → logprob: -7.537553310394287
    7. 'res' → logprob: -7.662553310394287
    8. 'answer' → logprob: -7.662553310394287
    9. '#' → logprob: -8.037553787231445
    10. 'ans' → logprob: -8.537553787231445

Token 344: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011110661551356316
    2. 'answers' → logprob: -5.261110782623291
    3. 'results' → logprob: -5.511110782623291
    4. 'def' → logprob: -7.386110782623291
    5. 'dist' → logprob: -7.761110782623291
    6. 'answer' → logprob: -8.386110305786133
    7. 'ans' → logprob: -8.886110305786133
    8. 'result' → logprob: -9.011110305786133
    9. 'res' → logprob: -9.261110305786133
    10. ' for' → logprob: -9.511110305786133

Token 345: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06382603198289871
    2. 'dist' → logprob: -3.063826084136963
    3. 'answers' → logprob: -5.313826084136963
    4. 'results' → logprob: -5.563826084136963
    5. 'def' → logprob: -6.063826084136963
    6. '#' → logprob: -6.813826084136963
    7. 'result' → logprob: -7.313826084136963
    8. 'res' → logprob: -7.563826084136963
    9. 'answer' → logprob: -7.688826084136963
    10. 'ans' → logprob: -8.063825607299805

Token 346: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004388102330267429
    2. 'dist' → logprob: -6.504388332366943
    3. 'results' → logprob: -6.754388332366943
    4. 'def' → logprob: -7.504388332366943
    5. 'answers' → logprob: -7.629388332366943
    6. 'res' → logprob: -8.379387855529785
    7. 'result' → logprob: -8.754387855529785
    8. 'ans' → logprob: -9.504387855529785
    9. '#' → logprob: -9.629387855529785
    10. 'answer' → logprob: -9.754387855529785

Token 347: ')' (ID: 8)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1275492906570435
    2. 'for' → logprob: -1.5025492906570435
    3. '=' → logprob: -2.127549171447754
    4. '.' → logprob: -2.252549171447754
    5. 'dist' → logprob: -2.627549171447754
    6. ' for' → logprob: -2.752549171447754
    7. 'if' → logprob: -3.877549171447754
    8. '#' → logprob: -4.002549171447754
    9. ':' → logprob: -4.002549171447754
    10. ' ==' → logprob: -4.877549171447754

Token 348: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15364907681941986
    2. 'for' → logprob: -2.278649091720581
    3. ' dist' → logprob: -3.903649091720581
    4. 'For' → logprob: -4.653648853302002
    5. '#' → logprob: -6.278648853302002
    6. ' for' → logprob: -6.528648853302002
    7. 'if' → logprob: -6.778648853302002
    8. 'The' → logprob: -7.653648853302002
    9. 'All' → logprob: -7.653648853302002
    10. 'print' → logprob: -7.653648853302002

Token 349: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.13362844288349152
    2. '_c' → logprob: -2.1336283683776855
    3. '_' → logprob: -6.0086283683776855
    4. '_u' → logprob: -6.5086283683776855
    5. '[c' → logprob: -7.5086283683776855
    6. '[a' → logprob: -7.5086283683776855
    7. '[u' → logprob: -7.8836283683776855
    8. 'a' → logprob: -7.8836283683776855
    9. '[_' → logprob: -9.133628845214844
    10. '_p' → logprob: -9.133628845214844

Token 350: '[b' (ID: 40800)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.09731154143810272
    2. '[b' → logprob: -2.722311496734619
    3. '[' → logprob: -3.847311496734619
    4. '[a' → logprob: -5.972311496734619
    5. '[q' → logprob: -6.722311496734619
    6. '[u' → logprob: -6.972311496734619
    7. '[p' → logprob: -8.722311973571777
    8. 'b' → logprob: -8.722311973571777
    9. 'c' → logprob: -8.847311973571777
    10. '[v' → logprob: -9.722311973571777

Token 351: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010052595287561417
    2. ']==' → logprob: -4.635052680969238
    3. ']>=' → logprob: -8.760052680969238
    4. '])' → logprob: -10.135052680969238
    5. ' ==' → logprob: -11.135052680969238
    6. '==' → logprob: -11.135052680969238
    7. ']
' → logprob: -11.260052680969238
    8. ']!=' → logprob: -11.635052680969238
    9. ' ]' → logprob: -12.010052680969238
    10. ']>' → logprob: -12.135052680969238

Token 352: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7715760469436646
    2. '=' → logprob: -1.7715760469436646
    3. '==' → logprob: -1.8965760469436646
    4. ' =' → logprob: -1.8965760469436646
    5. ' >=' → logprob: -3.771575927734375
    6. '>=' → logprob: -4.646575927734375
    7. ')' → logprob: -5.146575927734375
    8. ' <=' → logprob: -5.146575927734375
    9. ',' → logprob: -5.396575927734375
    10. ':' → logprob: -5.771575927734375

Token 353: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.002479104558005929
    2. ' dist' → logprob: -6.002479076385498
    3. '(dist' → logprob: -13.002479553222656
    4. '	dist' → logprob: -15.127479553222656
    5. '   ' → logprob: -15.377479553222656
    6. 'd' → logprob: -16.252479553222656
    7. '.dist' → logprob: -16.252479553222656
    8. 'Dist' → logprob: -16.627479553222656
    9. ' ' → logprob: -16.627479553222656
    10. '```' → logprob: -16.877479553222656

Token 354: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00016146517009474337
    2. '[a' → logprob: -9.250161170959473
    3. 'a' → logprob: -9.750161170959473
    4. '_c' → logprob: -12.750161170959473
    5. '[c' → logprob: -12.875161170959473
    6. '[_' → logprob: -15.000161170959473
    7. 'c' → logprob: -15.750161170959473
    8. '_' → logprob: -15.750161170959473
    9. '(a' → logprob: -15.750161170959473
    10. '```' → logprob: -15.875161170959473

Token 355: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.006398446392267942
    2. 'c' → logprob: -5.381398677825928
    3. '[u' → logprob: -7.256398677825928
    4. '[a' → logprob: -7.631398677825928
    5. '[' → logprob: -8.13139820098877
    6. '[v' → logprob: -9.25639820098877
    7. '[b' → logprob: -9.50639820098877
    8. '[q' → logprob: -10.38139820098877
    9. 'a' → logprob: -11.00639820098877
    10. '(c' → logprob: -11.88139820098877

Token 356: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008740793913602829
    2. ']+' → logprob: -4.8837409019470215
    3. '[c' → logprob: -7.0087409019470215
    4. '[' → logprob: -10.008740425109863
    5. ')' → logprob: -10.133740425109863
    6. '']' → logprob: -10.508740425109863
    7. ' ]' → logprob: -10.633740425109863
    8. '],' → logprob: -11.508740425109863
    9. '])' → logprob: -11.508740425109863
    10. '[b' → logprob: -11.883740425109863

Token 357: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.35541945695877075
    2. '+' → logprob: -1.230419397354126
    3. ' and' → logprob: -5.980419635772705
    4. '[c' → logprob: -6.355419635772705
    5. '+c' → logprob: -6.855419635772705
    6. '[' → logprob: -6.980419635772705
    7. 'and' → logprob: -8.355419158935547
    8. ')' → logprob: -8.855419158935547
    9. '[v' → logprob: -9.105419158935547
    10. '[]' → logprob: -9.855419158935547

Token 358: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5816242098808289
    2. 'graph' → logprob: -0.9566242098808289
    3. 'w' → logprob: -2.9566242694854736
    4. 'R' → logprob: -6.3316240310668945
    5. '1' → logprob: -7.5816240310668945
    6. ' dist' → logprob: -7.7066240310668945
    7. '(dist' → logprob: -7.9566240310668945
    8. 'c' → logprob: -7.9566240310668945
    9. 'd' → logprob: -8.081624031066895
    10. ' graph' → logprob: -8.206624031066895

Token 359: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.027349082753062248
    2. '_b' → logprob: -3.7773489952087402
    3. '[c' → logprob: -6.15234899520874
    4. 'c' → logprob: -6.90234899520874
    5. 'b' → logprob: -8.027349472045898
    6. '_d' → logprob: -8.527349472045898
    7. '_a' → logprob: -8.777349472045898
    8. '(c' → logprob: -9.027349472045898
    9. 'graph' → logprob: -10.152349472045898
    10. 'd' → logprob: -10.652349472045898

Token 360: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.044313330203294754
    2. 'd' → logprob: -3.169313430786133
    3. '[' → logprob: -8.044313430786133
    4. '[c' → logprob: -8.169313430786133
    5. '[v' → logprob: -8.794313430786133
    6. '(d' → logprob: -8.919313430786133
    7. ',d' → logprob: -9.919313430786133
    8. '[u' → logprob: -10.044313430786133
    9. '
' → logprob: -10.169313430786133
    10. '```' → logprob: -10.294313430786133

Token 361: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1653352826833725
    2. '+' → logprob: -1.9153352975845337
    3. ']' → logprob: -5.915335178375244
    4. ' and' → logprob: -6.790335178375244
    5. ')' → logprob: -7.665335178375244
    6. ']+' → logprob: -8.665335655212402
    7. '[' → logprob: -9.165335655212402
    8. 'and' → logprob: -9.165335655212402
    9. '#' → logprob: -9.290335655212402
    10. ' +
' → logprob: -9.665335655212402

Token 362: ' +' (ID: 659)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.703081488609314
    2. '<|end|>' → logprob: -0.828081488609314
    3. '#' → logprob: -3.8280816078186035
    4. 'and' → logprob: -4.0780816078186035
    5. ' ' → logprob: -5.2030816078186035
    6. ')' → logprob: -5.3280816078186035
    7. '<|end|>' → logprob: -5.3280816078186035
    8. ' or' → logprob: -5.4530816078186035
    9. ' for' → logprob: -6.4530816078186035
    10. '
' → logprob: -6.5780816078186035

Token 363: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.007614439819008112
    2. ' dist' → logprob: -4.882614612579346
    3. 'd' → logprob: -12.632614135742188
    4. '(dist' → logprob: -13.257614135742188
    5. '.dist' → logprob: -13.882614135742188
    6. '_dist' → logprob: -14.007614135742188
    7. '	dist' → logprob: -14.382614135742188
    8. '```' → logprob: -14.757614135742188
    9. '   ' → logprob: -15.882614135742188
    10. '
' → logprob: -16.257614135742188

Token 364: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.049287647008895874
    2. '_b' → logprob: -3.2992875576019287
    3. 'd' → logprob: -4.549287796020508
    4. 'b' → logprob: -8.049287796020508
    5. '_a' → logprob: -9.174287796020508
    6. '_c' → logprob: -9.424287796020508
    7. '[d' → logprob: -9.424287796020508
    8. '[b' → logprob: -11.674287796020508
    9. 'c' → logprob: -12.424287796020508
    10. '_' → logprob: -12.799287796020508

Token 365: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.009971513412892818
    2. 'b' → logprob: -4.634971618652344
    3. '```' → logprob: -9.509971618652344
    4. '[c' → logprob: -9.634971618652344
    5. '[' → logprob: -9.884971618652344
    6. '(b' → logprob: -12.259971618652344
    7. '[a' → logprob: -12.634971618652344
    8. '[u' → logprob: -12.884971618652344
    9. '[v' → logprob: -13.134971618652344
    10. '	b' → logprob: -13.759971618652344

Token 366: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3649899363517761
    2. 'for' → logprob: -2.364989995956421
    3. '#' → logprob: -2.739989995956421
    4. '<|end|>' → logprob: -3.239989995956421
    5. ' for' → logprob: -3.614989995956421
    6. '
' → logprob: -3.864989995956421
    7. ':' → logprob: -4.239989757537842
    8. ']' → logprob: -4.489989757537842
    9. ' and' → logprob: -4.614989757537842
    10. 'def' → logprob: -5.364989757537842

Token 367: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.857572615146637
    2. 'dist' → logprob: -0.982572615146637
    3. '#' → logprob: -1.8575725555419922
    4. 'def' → logprob: -3.857572555541992
    5. 'answers' → logprob: -4.732572555541992
    6. ' for' → logprob: -5.857572555541992
    7. 'import' → logprob: -5.982572555541992
    8. 'answer' → logprob: -6.232572555541992
    9. 'results' → logprob: -6.732572555541992
    10. '
' → logprob: -6.732572555541992

Token 368: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4297148883342743
    2. 'dist' → logprob: -1.5547149181365967
    3. '#' → logprob: -2.9297149181365967
    4. 'answers' → logprob: -3.1797149181365967
    5. 'answer' → logprob: -4.179714679718018
    6. 'results' → logprob: -4.929714679718018
    7. 'result' → logprob: -5.179714679718018
    8. 'ans' → logprob: -5.304714679718018
    9. 'def' → logprob: -5.679714679718018
    10. 'res' → logprob: -6.054714679718018

Token 369: '2' (ID: 17)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15724003314971924
    2. '#' → logprob: -2.0322399139404297
    3. 'dist' → logprob: -5.03223991394043
    4. 'answers' → logprob: -6.28223991394043
    5. '
' → logprob: -6.90723991394043
    6. 'answer' → logprob: -7.03223991394043
    7. ' for' → logprob: -7.28223991394043
    8. 'visited' → logprob: -7.40723991394043
    9. 'from' → logprob: -7.53223991394043
    10. 'Answer' → logprob: -7.90723991394043

Token 370: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44234025478363037
    2. '#' → logprob: -1.5673402547836304
    3. ' =' → logprob: -2.06734037399292
    4. '=' → logprob: -5.19234037399292
    5. 'for' → logprob: -5.31734037399292
    6. ':' → logprob: -6.06734037399292
    7. ' #' → logprob: -6.19234037399292
    8. 'def' → logprob: -6.31734037399292
    9. 'if' → logprob: -6.94234037399292
    10. ' for' → logprob: -7.44234037399292

Token 371: ' The' (ID: 623)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22710269689559937
    2. ' dist' → logprob: -1.8521027565002441
    3. 'for' → logprob: -3.602102756500244
    4. ' for' → logprob: -5.352102756500244
    5. ' all' → logprob: -5.977102756500244
    6. 'all' → logprob: -6.102102756500244
    7. '#' → logprob: -6.227102756500244
    8. 'graph' → logprob: -6.602102756500244
    9. 'For' → logprob: -7.102102756500244
    10. 'S' → logprob: -7.227102756500244

Token 372: ' path' (ID: 3104)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.135559320449829
    2. 'segment' → logprob: -1.510559320449829
    3. 'graph' → logprob: -2.010559320449829
    4. ' next' → logprob: -2.885559320449829
    5. 'edge' → logprob: -2.885559320449829
    6. 'next' → logprob: -3.260559320449829
    7. 'edges' → logprob: -3.510559320449829
    8. ' segment' → logprob: -3.635559320449829
    9. ' dist' → logprob: -3.760559320449829
    10. ' graph' → logprob: -4.13555908203125

Token 373: ' from' (ID: 591)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24599748849868774
    2. ' =' → logprob: -2.995997428894043
    3. 'from' → logprob: -3.245997428894043
    4. '=' → logprob: -3.995997428894043
    5. 'dist' → logprob: -3.995997428894043
    6. 'for' → logprob: -4.495997428894043
    7. 'segment' → logprob: -4.495997428894043
    8. 'a' → logprob: -4.870997428894043
    9. 'is' → logprob: -4.995997428894043
    10. '_a' → logprob: -5.120997428894043

Token 374: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.020457914099097252
    2. 'a' → logprob: -4.145457744598389
    3. ' c' → logprob: -5.645457744598389
    4. 'dist' → logprob: -8.270458221435547
    5. 'd' → logprob: -8.395458221435547
    6. 'u' → logprob: -8.895458221435547
    7. ' a' → logprob: -9.895458221435547
    8. '```' → logprob: -10.520458221435547
    9. 'the' → logprob: -10.645458221435547
    10. '#' → logprob: -10.770458221435547

Token 375: '-d' (ID: 2469)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7141892313957214
    2. ',' → logprob: -2.214189291000366
    3. '_d' → logprob: -2.339189291000366
    4. '#' → logprob: -2.589189291000366
    5. 'd' → logprob: -3.339189291000366
    6. '-' → logprob: -3.589189291000366
    7. ' to' → logprob: -3.589189291000366
    8. ' and' → logprob: -3.589189291000366
    9. 'to' → logprob: -4.089189052581787
    10. ',d' → logprob: -4.214189052581787

Token 376: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4697243571281433
    2. ')' → logprob: -2.844724416732788
    3. ' in' → logprob: -2.969724416732788
    4. ']' → logprob: -3.344724416732788
    5. 'in' → logprob: -3.469724416732788
    6. 'is' → logprob: -3.969724416732788
    7. '[u' → logprob: -4.094724178314209
    8. '#' → logprob: -4.219724178314209
    9. '[' → logprob: -4.594724178314209
    10. '_' → logprob: -4.594724178314209

Token 377: ' shortest' (ID: 70564)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5511519908905029
    2. 'short' → logprob: -1.676151990890503
    3. 'dist' → logprob: -2.551151990890503
    4. 'also' → logprob: -2.926151990890503
    5. 'the' → logprob: -3.051151990890503
    6. 'w' → logprob: -3.176151990890503
    7. ' a' → logprob: -5.426152229309082
    8. ' shortest' → logprob: -5.551152229309082
    9. '```' → logprob: -6.551152229309082
    10. 'equal' → logprob: -6.801152229309082

Token 378: ':' (ID: 25)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5407984256744385
    2. 'dist' → logprob: -1.5407984256744385
    3. '#' → logprob: -2.1657984256744385
    4. 'from' → logprob: -3.7907984256744385
    5. 'parent' → logprob: -4.040798187255859
    6. 'answers' → logprob: -4.290798187255859
    7. 'def' → logprob: -5.540798187255859
    8. 'dp' → logprob: -5.540798187255859
    9. 'results' → logprob: -5.665798187255859
    10. 'res' → logprob: -5.790798187255859

Token 379: ' dist' (ID: 3601)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5196230411529541
    2. 'if' → logprob: -1.644623041152954
    3. 'for' → logprob: -1.644623041152954
    4. 'dist' → logprob: -4.644622802734375
    5. '<|end|>' → logprob: -6.519622802734375
    6. ' for' → logprob: -6.769622802734375
    7. '```' → logprob: -6.769622802734375
    8. '   ' → logprob: -7.144622802734375
    9. 'continue' → logprob: -7.144622802734375
    10. '
' → logprob: -7.269622802734375

Token 380: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.010019318200647831
    2. 'c' → logprob: -5.260019302368164
    3. '_' → logprob: -5.885019302368164
    4. '_cd' → logprob: -6.760019302368164
    5. '_a' → logprob: -9.260019302368164
    6. 'from' → logprob: -9.385019302368164
    7. 'a' → logprob: -9.385019302368164
    8. '=' → logprob: -9.760019302368164
    9. '[c' → logprob: -9.760019302368164
    10. 'def' → logprob: -9.760019302368164

Token 381: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.153747096657753
    2. '[c' → logprob: -2.778747081756592
    3. '==' → logprob: -3.153747081756592
    4. '[b' → logprob: -4.528747081756592
    5. '[' → logprob: -5.028747081756592
    6. '=' → logprob: -5.778747081756592
    7. 'd' → logprob: -5.778747081756592
    8. '=d' → logprob: -5.778747081756592
    9. '[u' → logprob: -5.903747081756592
    10. '[v' → logprob: -6.153747081756592

Token 382: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020913768094033003
    2. ']==' → logprob: -6.877091407775879
    3. '[c' → logprob: -7.752091407775879
    4. '']' → logprob: -9.002091407775879
    5. '][' → logprob: -9.002091407775879
    6. '[d' → logprob: -9.627091407775879
    7. '])' → logprob: -10.002091407775879
    8. '[v' → logprob: -10.127091407775879
    9. ']
' → logprob: -10.502091407775879
    10. '[b' → logprob: -10.627091407775879

Token 383: ' ==' (ID: 951)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28775978088378906
    2. ' =' → logprob: -1.912759780883789
    3. '<=' → logprob: -2.912759780883789
    4. ' <=' → logprob: -4.162759780883789
    5. '==' → logprob: -4.287759780883789
    6. '>=' → logprob: -5.037759780883789
    7. ' ==' → logprob: -5.662759780883789
    8. ' >=' → logprob: -6.412759780883789
    9. ']' → logprob: -6.537759780883789
    10. ')' → logprob: -6.912759780883789

Token 384: ' dist' (ID: 3601)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6516004204750061
    2. 'graph' → logprob: -1.1516003608703613
    3. 'dist' → logprob: -1.9016003608703613
    4. 'abs' → logprob: -4.526600360870361
    5. ' dist' → logprob: -7.776600360870361
    6. ' graph' → logprob: -7.776600360870361
    7. 'd' → logprob: -8.02660083770752
    8. ' w' → logprob: -8.15160083770752
    9. '(graph' → logprob: -8.27660083770752
    10. 'float' → logprob: -9.02660083770752

Token 385: '_d' (ID: 1565)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.44869062304496765
    2. '_a' → logprob: -1.19869065284729
    3. '[c' → logprob: -4.073690414428711
    4. '_d' → logprob: -4.198690414428711
    5. '_b' → logprob: -4.448690414428711
    6. 'graph' → logprob: -5.448690414428711
    7. 'a' → logprob: -5.573690414428711
    8. 'dist' → logprob: -6.198690414428711
    9. 'd' → logprob: -6.698690414428711
    10. 'c' → logprob: -6.823690414428711

Token 386: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.6574245691299438
    2. '[d' → logprob: -1.9074245691299438
    3. 'd' → logprob: -2.2824244499206543
    4. 's' → logprob: -3.0324244499206543
    5. '[' → logprob: -3.2824244499206543
    6. 'dist' → logprob: -3.5324244499206543
    7. 'def' → logprob: -3.9074244499206543
    8. '[]' → logprob: -4.032424449920654
    9. '[
' → logprob: -4.532424449920654
    10. 'c' → logprob: -4.657424449920654

Token 387: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025091955438256264
    2. ')' → logprob: -4.400092124938965
    3. '])' → logprob: -4.400092124938965
    4. ')]' → logprob: -10.275092124938965
    5. '#' → logprob: -10.775092124938965
    6. '.' → logprob: -10.900092124938965
    7. '']' → logprob: -10.900092124938965
    8. ' ]' → logprob: -10.900092124938965
    9. 'd' → logprob: -11.025092124938965
    10. ',' → logprob: -11.400092124938965

Token 388: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18281595408916473
    2. '#' → logprob: -2.5578160285949707
    3. 'dist' → logprob: -2.8078160285949707
    4. 'answers' → logprob: -5.307816028594971
    5. 'parent' → logprob: -5.432816028594971
    6. 'def' → logprob: -5.682816028594971
    7. 'from' → logprob: -5.682816028594971
    8. 'max' → logprob: -6.057816028594971
    9. 'answer' → logprob: -6.182816028594971
    10. 'dp' → logprob: -6.307816028594971

Token 389: ' To' (ID: 2514)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.150779366493225
    2. 'for' → logprob: -1.275779366493225
    3. 'parent' → logprob: -1.525779366493225
    4. 'dist' → logprob: -2.4007792472839355
    5. 'from' → logprob: -2.7757792472839355
    6. 'import' → logprob: -4.5257792472839355
    7. 'def' → logprob: -5.4007792472839355
    8. 'memo' → logprob: -5.4007792472839355
    9. 'dp' → logprob: -5.6507792472839355
    10. 'edge' → logprob: -6.6507792472839355

Token 390: ' avoid' (ID: 8397)
  Prédit: 'handle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'handle' → logprob: -0.49962225556373596
    2. 'avoid' → logprob: -1.7496222257614136
    3. 'opt' → logprob: -2.749622344970703
    4. 'answer' → logprob: -2.999622344970703
    5. 'pre' → logprob: -3.249622344970703
    6. 'solve' → logprob: -3.749622344970703
    7. 'use' → logprob: -5.124622344970703
    8. 'process' → logprob: -5.124622344970703
    9. 'do' → logprob: -5.499622344970703
    10. 'build' → logprob: -5.749622344970703

Token 391: ' multiple' (ID: 7598)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.090850591659546
    2. 'perform' → logprob: -1.090850591659546
    3. 'pre' → logprob: -2.340850591659546
    4. 'd' → logprob: -2.465850591659546
    5. 'running' → logprob: -2.840850591659546
    6. 'doing' → logprob: -3.965850591659546
    7. 'redu' → logprob: -4.215850830078125
    8. 'additional' → logprob: -4.840850830078125
    9. 'comput' → logprob: -4.965850830078125
    10. 'calcul' → logprob: -4.965850830078125

Token 392: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0547504685819149
    2. 'dist' → logprob: -3.804750442504883
    3. 'def' → logprob: -4.804750442504883
    4. 'lines' → logprob: -5.179750442504883
    5. 'dfs' → logprob: -5.679750442504883
    6. 'import' → logprob: -5.804750442504883
    7. 'queries' → logprob: -5.804750442504883
    8. 'distance' → logprob: -6.804750442504883
    9. 'for' → logprob: -6.804750442504883
    10. 'D' → logprob: -7.304750442504883

Token 393: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.005880679469555616
    2. 'ijk' → logprob: -5.255880832672119
    3. 'ij' → logprob: -7.755880832672119
    4. 'ist' → logprob: -8.880880355834961
    5. 'jik' → logprob: -10.755880355834961
    6. 'istance' → logprob: -11.130880355834961
    7. 'ijkl' → logprob: -11.755880355834961
    8. 'jk' → logprob: -12.130880355834961
    9. '```' → logprob: -12.255880355834961
    10. 'ijks' → logprob: -12.380880355834961

Token 394: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.33181795477867126
    2. ',' → logprob: -1.8318179845809937
    3. 'es' → logprob: -2.706817865371704
    4. 'dist' → logprob: -4.331818103790283
    5. 'ing' → logprob: -4.956818103790283
    6. 'for' → logprob: -4.956818103790283
    7. ' searches' → logprob: -5.581818103790283
    8. 'runs' → logprob: -5.831818103790283
    9. ' for' → logprob: -6.206818103790283
    10. ''s' → logprob: -6.331818103790283

Token 395: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0536351352930069
    2. 'dist' → logprob: -3.8036351203918457
    3. 'from' → logprob: -4.428635120391846
    4. 'import' → logprob: -4.803635120391846
    5. 'parent' → logprob: -5.178635120391846
    6. 'dp' → logprob: -6.053635120391846
    7. 'def' → logprob: -7.428635120391846
    8. 'pass' → logprob: -8.678635597229004
    9. 'visited' → logprob: -8.678635597229004
    10. 'we' → logprob: -8.803635597229004

Token 396: ' compute' (ID: 23864)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.35971176624298096
    2. ' can' → logprob: -2.6097116470336914
    3. '#' → logprob: -2.7347116470336914
    4. 'use' → logprob: -2.9847116470336914
    5. 'pre' → logprob: -3.6097116470336914
    6. 'will' → logprob: -3.9847116470336914
    7. 'need' → logprob: -4.609711647033691
    8. 'notice' → logprob: -5.109711647033691
    9. 'cannot' → logprob: -5.109711647033691
    10. 'def' → logprob: -5.359711647033691

Token 397: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.12808021903038025
    2. 'parent' → logprob: -2.503080129623413
    3. 'depth' → logprob: -3.878080129623413
    4. '#' → logprob: -5.003080368041992
    5. 'from' → logprob: -5.753080368041992
    6. 'par' → logprob: -5.878080368041992
    7. '```' → logprob: -7.003080368041992
    8. 'max' → logprob: -7.128080368041992
    9. 'level' → logprob: -7.128080368041992
    10. 'def' → logprob: -7.503080368041992

Token 398: ' from' (ID: 591)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.9609119296073914
    2. '_to' → logprob: -1.4609119892120361
    3. '_c' → logprob: -1.9609119892120361
    4. 'ances' → logprob: -3.085911989212036
    5. 'anc' → logprob: -3.460911989212036
    6. '_' → logprob: -3.710911989212036
    7. 'from' → logprob: -4.085911750793457
    8. ' =' → logprob: -4.210911750793457
    9. '_up' → logprob: -4.210911750793457
    10. '_u' → logprob: -4.585911750793457

Token 399: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00010008628305513412
    2. 'S' → logprob: -9.875100135803223
    3. 'c' → logprob: -11.250100135803223
    4. 'all' → logprob: -11.750100135803223
    5. '1' → logprob: -11.875100135803223
    6. 'start' → logprob: -12.500100135803223
    7. 'b' → logprob: -13.000100135803223
    8. ' a' → logprob: -13.000100135803223
    9. 'the' → logprob: -13.250100135803223
    10. 'both' → logprob: -13.250100135803223

Token 400: ' and' (ID: 326)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22344832122325897
    2. 'from' → logprob: -3.0984482765197754
    3. '#' → logprob: -3.4734482765197754
    4. 'and' → logprob: -3.4734482765197754
    5. 'a' → logprob: -3.9734482765197754
    6. 'c' → logprob: -4.598448276519775
    7. 'd' → logprob: -4.723448276519775
    8. 'def' → logprob: -4.723448276519775
    9. ' and' → logprob: -4.848448276519775
    10. '_c' → logprob: -4.973448276519775

Token 401: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1517960956552997e-05
    2. 'dist' → logprob: -11.625011444091797
    3. 'from' → logprob: -13.500011444091797
    4. ' b' → logprob: -13.750011444091797
    5. ' dist' → logprob: -17.750011444091797
    6. ')b' → logprob: -19.750011444091797
    7. 'import' → logprob: -20.125011444091797
    8. 'From' → logprob: -20.125011444091797
    9. '```' → logprob: -20.125011444091797
    10. '_b' → logprob: -20.250011444091797

Token 402: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.052050068974494934
    2. 'dist' → logprob: -3.5520501136779785
    3. '#' → logprob: -4.5520501136779785
    4. 'answers' → logprob: -5.6770501136779785
    5. ' for' → logprob: -6.4270501136779785
    6. 'answer' → logprob: -6.8020501136779785
    7. 'res' → logprob: -6.9270501136779785
    8. 'def' → logprob: -7.0520501136779785
    9. 'results' → logprob: -7.1770501136779785
    10. 'ans' → logprob: -7.4270501136779785

Token 403: '#' (ID: 2)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.13339364528656
    2. '#' → logprob: -1.63339364528656
    3. 'dist' → logprob: -1.88339364528656
    4. 'for' → logprob: -2.2583937644958496
    5. 'def' → logprob: -3.0083937644958496
    6. 'from' → logprob: -3.2583937644958496
    7. 'dp' → logprob: -3.7583937644958496
    8. 'depth' → logprob: -3.8833937644958496
    9. 'answer' → logprob: -4.13339376449585
    10. 'visited' → logprob: -4.13339376449585

Token 404: ' For' (ID: 2214)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.3091819286346436
    2. 'for' → logprob: -1.5591819286346436
    3. '#' → logprob: -1.8091819286346436
    4. 'parent' → logprob: -2.1841819286346436
    5. 'from' → logprob: -2.9341819286346436
    6. 'answer' → logprob: -3.5591819286346436
    7. 'answers' → logprob: -3.5591819286346436
    8. 'result' → logprob: -4.059182167053223
    9. 'def' → logprob: -4.059182167053223
    10. 'res' → logprob: -4.059182167053223

Token 405: ' distances' (ID: 48294)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.0714263767004013
    2. 'u' → logprob: -4.3214263916015625
    3. 'edge' → logprob: -4.3214263916015625
    4. 'all' → logprob: -4.5714263916015625
    5. 'edges' → logprob: -4.9464263916015625
    6. 'the' → logprob: -5.1964263916015625
    7. 'c' → logprob: -5.4464263916015625
    8. 'dist' → logprob: -5.6964263916015625
    9. 'an' → logprob: -5.6964263916015625
    10. 'every' → logprob: -5.9464263916015625

Token 406: ' between' (ID: 2870)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.020733056589961052
    2. '_from' → logprob: -5.395732879638672
    3. ',' → logprob: -5.770732879638672
    4. ' from' → logprob: -6.270732879638672
    5. 'to' → logprob: -6.395732879638672
    6. 'dist' → logprob: -6.520732879638672
    7. 'based' → logprob: -6.770732879638672
    8. '=' → logprob: -6.895732879638672
    9. 'between' → logprob: -7.020732879638672
    10. '[]' → logprob: -7.270732879638672

Token 407: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5293741822242737
    2. 'nodes' → logprob: -1.404374122619629
    3. 'u' → logprob: -3.029374122619629
    4. 'any' → logprob: -3.154374122619629
    5. 'queries' → logprob: -4.404374122619629
    6. 'vertices' → logprob: -4.529374122619629
    7. 'all' → logprob: -4.654374122619629
    8. ' nodes' → logprob: -4.904374122619629
    9. ' c' → logprob: -5.029374122619629
    10. 'two' → logprob: -5.404374122619629

Token 408: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6800395846366882
    2. 'and' → logprob: -0.8050395846366882
    3. 'd' → logprob: -3.430039644241333
    4. ',' → logprob: -4.680039405822754
    5. ',d' → logprob: -6.805039405822754
    6. '-' → logprob: -6.930039405822754
    7. 'b' → logprob: -7.555039405822754
    8. ' d' → logprob: -7.680039405822754
    9. '<|end|>' → logprob: -8.555039405822754
    10. '#' → logprob: -8.680039405822754

Token 409: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.908022285439074e-05
    2. ' d' → logprob: -10.125059127807617
    3. 'c' → logprob: -11.625059127807617
    4. 'a' → logprob: -12.625059127807617
    5. 'v' → logprob: -13.500059127807617
    6. 'S' → logprob: -13.875059127807617
    7. 'b' → logprob: -13.875059127807617
    8. 'dist' → logprob: -14.375059127807617
    9. '
' → logprob: -14.750059127807617
    10. '1' → logprob: -14.875059127807617

Token 410: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1434311419725418
    2. '#' → logprob: -2.3934311866760254
    3. 'dist' → logprob: -4.268431186676025
    4. '.' → logprob: -5.268431186676025
    5. 'def' → logprob: -5.268431186676025
    6. 'for' → logprob: -6.018431186676025
    7. 'from' → logprob: -6.018431186676025
    8. ',
' → logprob: -6.143431186676025
    9. 'import' → logprob: -6.393431186676025
    10. 's' → logprob: -6.393431186676025

Token 411: ' to' (ID: 316)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2815198004245758
    2. 'dist' → logprob: -2.406519889831543
    3. 'if' → logprob: -3.031519889831543
    4. 'for' → logprob: -3.156519889831543
    5. 'def' → logprob: -4.406519889831543
    6. 'from' → logprob: -4.406519889831543
    7. 'print' → logprob: -4.531519889831543
    8. '```' → logprob: -4.906519889831543
    9. 'import' → logprob: -5.656519889831543
    10. 'next' → logprob: -5.781519889831543

Token 412: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.6263504028320312
    2. 'det' → logprob: -2.0013504028320312
    3. 'avoid' → logprob: -2.1263504028320312
    4. 'answer' → logprob: -2.3763504028320312
    5. 'find' → logprob: -3.3763504028320312
    6. ' check' → logprob: -4.501350402832031
    7. 'use' → logprob: -4.626350402832031
    8. 'handle' → logprob: -4.626350402832031
    9. 'pass' → logprob: -5.001350402832031
    10. 's' → logprob: -5.126350402832031

Token 413: ' quickly' (ID: 8065)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.021038230508565903
    2. 'whether' → logprob: -4.271038055419922
    3. ' if' → logprob: -5.146038055419922
    4. 'dist' → logprob: -8.396038055419922
    5. 'the' → logprob: -8.521038055419922
    6. ' whether' → logprob: -8.646038055419922
    7. 'c' → logprob: -9.271038055419922
    8. 'for' → logprob: -9.646038055419922
    9. 'w' → logprob: -10.146038055419922
    10. 'edges' → logprob: -10.521038055419922

Token 414: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1505248546600342
    2. '#' → logprob: -1.4005248546600342
    3. ',' → logprob: -1.4005248546600342
    4. 'dist' → logprob: -2.775524854660034
    5. 'for' → logprob: -3.650524854660034
    6. 'def' → logprob: -4.275525093078613
    7. 'edges' → logprob: -4.275525093078613
    8. 'we' → logprob: -4.400525093078613
    9. 'visited' → logprob: -4.400525093078613
    10. ' if' → logprob: -4.775525093078613

Token 415: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7681967616081238
    2. 'we' → logprob: -0.8931967616081238
    3. 'dist' → logprob: -3.1431968212127686
    4. 'print' → logprob: -3.7681968212127686
    5. 'for' → logprob: -4.5181965827941895
    6. 'use' → logprob: -4.6431965827941895
    7. 'visited' → logprob: -5.5181965827941895
    8. 'def' → logprob: -5.6431965827941895
    9. 'next' → logprob: -6.1431965827941895
    10. 'if' → logprob: -6.2681965827941895

Token 416: ' compute' (ID: 23864)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.2177685797214508
    2. 'use' → logprob: -2.467768669128418
    3. 'check' → logprob: -3.092768669128418
    4. 'need' → logprob: -3.967768669128418
    5. ' can' → logprob: -4.092768669128418
    6. 'pre' → logprob: -4.842768669128418
    7. '#' → logprob: -4.967768669128418
    8. 'will' → logprob: -5.592768669128418
    9. 'def' → logprob: -5.967768669128418
    10. 'should' → logprob: -6.842768669128418

Token 417: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5708461999893188
    2. 'all' → logprob: -2.0708460807800293
    3. 'parent' → logprob: -2.4458460807800293
    4. 'max' → logprob: -2.8208460807800293
    5. 'the' → logprob: -3.0708460807800293
    6. 'L' → logprob: -3.5708460807800293
    7. 'depth' → logprob: -3.8208460807800293
    8. '```' → logprob: -4.695846080780029
    9. 'l' → logprob: -4.945846080780029
    10. 'from' → logprob: -5.070846080780029

Token 418: ' from' (ID: 591)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.5911519527435303
    2. ' =' → logprob: -2.3411519527435303
    3. 'from' → logprob: -2.3411519527435303
    4. 'ances' → logprob: -2.4661519527435303
    5. '_between' → logprob: -2.9661519527435303
    6. '_c' → logprob: -3.2161519527435303
    7. '_cd' → logprob: -3.5911519527435303
    8. 's' → logprob: -3.8411519527435303
    9. 'anc' → logprob: -5.716152191162109
    10. '_ab' → logprob: -5.841152191162109

Token 419: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005209802184253931
    2. 'c' → logprob: -6.005209922790527
    3. 'all' → logprob: -6.130209922790527
    4. 'S' → logprob: -8.755209922790527
    5. '1' → logprob: -9.005209922790527
    6. 'each' → logprob: -9.255209922790527
    7. 'both' → logprob: -9.380209922790527
    8. 'b' → logprob: -10.380209922790527
    9. 'the' → logprob: -11.130209922790527
    10. ' a' → logprob: -11.505209922790527

Token 420: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2888891696929932
    2. 'dist' → logprob: -1.7888891696929932
    3. 'def' → logprob: -2.163889169692993
    4. 'for' → logprob: -2.663889169692993
    5. '<|end|>' → logprob: -2.663889169692993
    6. ' and' → logprob: -3.038889169692993
    7. ',' → logprob: -3.538889169692993
    8. 'and' → logprob: -3.538889169692993
    9. ')' → logprob: -3.788889169692993
    10. 's' → logprob: -3.913889169692993

Token 421: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002026304369792342
    2. 'dist' → logprob: -6.377026081085205
    3. 'from' → logprob: -8.502026557922363
    4. ' b' → logprob: -9.877026557922363
    5. 'c' → logprob: -11.002026557922363
    6. 'd' → logprob: -11.002026557922363
    7. ' dist' → logprob: -11.002026557922363
    8. '#' → logprob: -12.377026557922363
    9. 'S' → logprob: -12.752026557922363
    10. 'import' → logprob: -13.002026557922363

Token 422: ' only' (ID: 1606)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6577602028846741
    2. 'for' → logprob: -1.0327601432800293
    3. '#' → logprob: -2.6577601432800293
    4. 'res' → logprob: -4.782760143280029
    5. 'result' → logprob: -4.782760143280029
    6. 'answer' → logprob: -4.907760143280029
    7. 'answers' → logprob: -5.032760143280029
    8. 'def' → logprob: -5.657760143280029
    9. 'dp' → logprob: -5.657760143280029
    10. 'ans' → logprob: -5.782760143280029

Token 423: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0028892753180116415
    2. 'answers' → logprob: -7.377889156341553
    3. 'dist' → logprob: -7.502889156341553
    4. 'results' → logprob: -7.752889156341553
    5. 'answer' → logprob: -8.127889633178711
    6. '#' → logprob: -8.377889633178711
    7. 'res' → logprob: -8.377889633178711
    8. ' for' → logprob: -8.627889633178711
    9. 'ans' → logprob: -9.002889633178711
    10. 'result' → logprob: -9.002889633178711

Token 424: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00904515665024519
    2. 'answers' → logprob: -6.134045124053955
    3. 'results' → logprob: -6.259045124053955
    4. 'dist' → logprob: -6.384045124053955
    5. 'answer' → logprob: -6.884045124053955
    6. 'res' → logprob: -7.509045124053955
    7. 'ans' → logprob: -7.509045124053955
    8. 'result' → logprob: -8.134045600891113
    9. '#' → logprob: -8.384045600891113
    10. 'def' → logprob: -8.634045600891113

Token 425: ' Use' (ID: 7649)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02211669273674488
    2. 'dist' → logprob: -5.272116661071777
    3. 'answers' → logprob: -5.647116661071777
    4. '#' → logprob: -5.647116661071777
    5. 'from' → logprob: -6.397116661071777
    6. 'results' → logprob: -6.522116661071777
    7. 'answer' → logprob: -6.647116661071777
    8. 'ans' → logprob: -6.772116661071777
    9. 'parent' → logprob: -6.897116661071777
    10. 'def' → logprob: -7.147116661071777

Token 426: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5557228922843933
    2. 'L' → logprob: -1.680722951889038
    3. 'the' → logprob: -1.930722951889038
    4. 'depth' → logprob: -3.930722951889038
    5. 'a' → logprob: -4.805722713470459
    6. 'B' → logprob: -4.930722713470459
    7. 'union' → logprob: -4.930722713470459
    8. 'parent' → logprob: -5.055722713470459
    9. 'lowest' → logprob: -5.055722713470459
    10. 'max' → logprob: -5.305722713470459

Token 427: '_a' (ID: 10852)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -1.0553849935531616
    2. '_a' → logprob: -1.3053849935531616
    3. '_from' → logprob: -1.8053849935531616
    4. 'from' → logprob: -2.305385112762451
    5. '_ab' → logprob: -3.555385112762451
    6. 'a' → logprob: -3.680385112762451
    7. 's' → logprob: -3.930385112762451
    8. 'c' → logprob: -5.055385112762451
    9. '_cd' → logprob: -5.055385112762451
    10. '_b' → logprob: -5.680385112762451

Token 428: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.801431655883789
    2. 'from' → logprob: -1.926431655883789
    3. ',' → logprob: -2.176431655883789
    4. '_' → logprob: -2.426431655883789
    5. '_a' → logprob: -2.676431655883789
    6. 's' → logprob: -3.051431655883789
    7. '_b' → logprob: -3.176431655883789
    8. '_from' → logprob: -3.176431655883789
    9. '<|end|>' → logprob: -3.301431655883789
    10. 'and' → logprob: -3.426431655883789

Token 429: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00018006093159783632
    2. ' dist' → logprob: -8.6251802444458
    3. '[' → logprob: -16.625179290771484
    4. '...' → logprob: -16.750179290771484
    5. 'd' → logprob: -17.000179290771484
    6. '```' → logprob: -17.000179290771484
    7. '_dist' → logprob: -17.125179290771484
    8. '.dist' → logprob: -17.375179290771484
    9. '(dist' → logprob: -17.500179290771484
    10. 'def' → logprob: -17.875179290771484

Token 430: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.010099569335579872
    2. 'b' → logprob: -4.635099411010742
    3. '_a' → logprob: -8.135099411010742
    4. 'a' → logprob: -10.135099411010742
    5. 'from' → logprob: -12.760099411010742
    6. '_' → logprob: -12.885099411010742
    7. '```' → logprob: -13.385099411010742
    8. 'import' → logprob: -14.135099411010742
    9. 'dist' → logprob: -14.635099411010742
    10. 'd' → logprob: -15.385099411010742

Token 431: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015734256012365222
    2. ' for' → logprob: -7.87657356262207
    3. 'dist' → logprob: -7.87657356262207
    4. 'def' → logprob: -8.00157356262207
    5. 'from' → logprob: -9.12657356262207
    6. '
' → logprob: -9.50157356262207
    7. '#' → logprob: -10.00157356262207
    8. 'results' → logprob: -10.00157356262207
    9. 'answers' → logprob: -10.00157356262207
    10. 'output' → logprob: -10.00157356262207

Token 432: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010505801066756248
    2. 'dist' → logprob: -5.885505676269531
    3. 'results' → logprob: -6.010505676269531
    4. 'answers' → logprob: -6.135505676269531
    5. 'result' → logprob: -7.135505676269531
    6. 'answer' → logprob: -7.385505676269531
    7. 'res' → logprob: -7.885505676269531
    8. 'def' → logprob: -8.135505676269531
    9. 'ans' → logprob: -8.385505676269531
    10. 'output' → logprob: -8.385505676269531

Token 433: ' Note' (ID: 12225)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006136707379482687
    2. 'dist' → logprob: -8.00061321258545
    3. 'def' → logprob: -9.50061321258545
    4. 'results' → logprob: -9.87561321258545
    5. '#' → logprob: -10.12561321258545
    6. 'answers' → logprob: -10.75061321258545
    7. 'max' → logprob: -11.12561321258545
    8. 'INF' → logprob: -11.50061321258545
    9. 'ans' → logprob: -11.62561321258545
    10. 'output' → logprob: -11.75061321258545

Token 434: ' dist' (ID: 3601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04165094345808029
    2. 'dist' → logprob: -4.166650772094727
    3. '#' → logprob: -4.541650772094727
    4. ' for' → logprob: -5.416650772094727
    5. ':' → logprob: -5.541650772094727
    6. 'def' → logprob: -6.416650772094727
    7. '=' → logprob: -6.666650772094727
    8. ' =' → logprob: -7.416650772094727
    9. 's' → logprob: -7.541650772094727
    10. '
' → logprob: -7.791650772094727

Token 435: ' between' (ID: 2870)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.5974156856536865
    2. '_c' → logprob: -1.3474156856536865
    3. '_' → logprob: -2.2224156856536865
    4. 'a' → logprob: -3.9724156856536865
    5. 's' → logprob: -4.097415924072266
    6. 'c' → logprob: -4.847415924072266
    7. '_b' → logprob: -4.972415924072266
    8. 'from' → logprob: -5.097415924072266
    9. '_s' → logprob: -5.222415924072266
    10. '_d' → logprob: -5.472415924072266

Token 436: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01478856522589922
    2. 'u' → logprob: -5.139788627624512
    3. 'nodes' → logprob: -5.389788627624512
    4. 'a' → logprob: -6.889788627624512
    5. 'two' → logprob: -7.014788627624512
    6. 'queries' → logprob: -7.264788627624512
    7. ' c' → logprob: -7.639788627624512
    8. ' nodes' → logprob: -8.514788627624512
    9. 'vertices' → logprob: -8.889788627624512
    10. 'any' → logprob: -9.264788627624512

Token 437: ' and' (ID: 326)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.12158005684614182
    2. 'a' → logprob: -2.871580123901367
    3. ' and' → logprob: -3.746580123901367
    4. '_c' → logprob: -4.746580123901367
    5. 'and' → logprob: -4.871580123901367
    6. 'c' → logprob: -5.121580123901367
    7. '_' → logprob: -5.371580123901367
    8. '_b' → logprob: -6.371580123901367
    9. ',' → logprob: -6.871580123901367
    10. '<|end|>' → logprob: -6.996580123901367

Token 438: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0001564586127642542
    2. 'c' → logprob: -9.75015640258789
    3. ' d' → logprob: -9.75015640258789
    4. 'a' → logprob: -10.37515640258789
    5. 'b' → logprob: -12.12515640258789
    6. '```' → logprob: -13.87515640258789
    7. '
' → logprob: -14.93765640258789
    8. ' ' → logprob: -15.06265640258789
    9. '#' → logprob: -15.12515640258789
    10. '	d' → logprob: -15.87515640258789

Token 439: ' is' (ID: 382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3114314079284668
    2. 'def' → logprob: -1.5614314079284668
    3. '=' → logprob: -2.061431407928467
    4. '#' → logprob: -2.311431407928467
    5. ' =' → logprob: -2.561431407928467
    6. ' for' → logprob: -2.561431407928467
    7. ' is' → logprob: -3.686431407928467
    8. 'is' → logprob: -4.186431407928467
    9. 'dist' → logprob: -4.311431407928467
    10. 'from' → logprob: -4.561431407928467

Token 440: ' NOT' (ID: 7116)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.15224473178386688
    2. 'dist' → logprob: -2.027244806289673
    3. '=' → logprob: -5.902244567871094
    4. 'min' → logprob: -6.152244567871094
    5. ' abs' → logprob: -6.277244567871094
    6. ' dist' → logprob: -7.402244567871094
    7. 'not' → logprob: -7.402244567871094
    8. 'max' → logprob: -7.652244567871094
    9. '(abs' → logprob: -8.652244567871094
    10. '   ' → logprob: -8.777244567871094

Token 441: ' directly' (ID: 8516)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.9440215229988098
    2. 'necessarily' → logprob: -2.444021463394165
    3. 'float' → logprob: -2.569021463394165
    4. 'abs' → logprob: -2.819021463394165
    5. ' dist' → logprob: -2.944021463394165
    6. 'always' → logprob: -3.069021463394165
    7. ' float' → logprob: -3.194021463394165
    8. ' guaranteed' → logprob: -3.569021463394165
    9. ' abs' → logprob: -4.194021701812744
    10. ' always' → logprob: -4.319021701812744

Token 442: ' available' (ID: 2839)
  Prédit: 'given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'given' → logprob: -0.2724953591823578
    2. 'available' → logprob: -2.6474952697753906
    3. 'provided' → logprob: -2.6474952697753906
    4. 'stored' → logprob: -3.8974952697753906
    5. ' given' → logprob: -4.397495269775391
    6. 'known' → logprob: -4.647495269775391
    7. 'used' → logprob: -4.897495269775391
    8. 'equal' → logprob: -5.147495269775391
    9. 'dist' → logprob: -5.397495269775391
    10. 'accessible' → logprob: -5.397495269775391

Token 443: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019360709935426712
    2. 'dist' → logprob: -5.269360542297363
    3. ' for' → logprob: -5.519360542297363
    4. 'results' → logprob: -6.019360542297363
    5. '#' → logprob: -6.269360542297363
    6. 'answers' → logprob: -6.394360542297363
    7. 'answer' → logprob: -6.894360542297363
    8. 'result' → logprob: -7.019360542297363
    9. 'def' → logprob: -7.269360542297363
    10. 'ans' → logprob: -7.519360542297363

Token 444: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00619516521692276
    2. 'dist' → logprob: -6.756195068359375
    3. 'answers' → logprob: -6.756195068359375
    4. '#' → logprob: -6.881195068359375
    5. 'results' → logprob: -7.131195068359375
    6. 'answer' → logprob: -7.256195068359375
    7. ' for' → logprob: -7.506195068359375
    8. 'ans' → logprob: -8.631195068359375
    9. 'def' → logprob: -8.631195068359375
    10. 'result' → logprob: -8.631195068359375

Token 445: ' But' (ID: 3072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00037359268753789365
    2. 'answers' → logprob: -9.250373840332031
    3. 'results' → logprob: -9.750373840332031
    4. ' for' → logprob: -9.750373840332031
    5. 'dist' → logprob: -10.125373840332031
    6. 'answer' → logprob: -10.375373840332031
    7. 'ans' → logprob: -10.625373840332031
    8. '#' → logprob: -10.625373840332031
    9. 'def' → logprob: -11.000373840332031
    10. 'result' → logprob: -11.875373840332031

Token 446: ' we' (ID: 581)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7687411904335022
    2. 'if' → logprob: -1.1437411308288574
    3. 'for' → logprob: -2.6437411308288574
    4. ' if' → logprob: -3.2687411308288574
    5. ' dist' → logprob: -3.3937411308288574
    6. ' for' → logprob: -3.8937411308288574
    7. 'the' → logprob: -4.393741130828857
    8. 'since' → logprob: -4.643741130828857
    9. 'we' → logprob: -4.643741130828857
    10. '#' → logprob: -5.143741130828857

Token 447: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.23906737565994263
    2. ' can' → logprob: -1.6140673160552979
    3. 'know' → logprob: -5.114067554473877
    4. 'have' → logprob: -5.239067554473877
    5. ' know' → logprob: -7.489067554473877
    6. ' have' → logprob: -7.739067554473877
    7. '#' → logprob: -7.989067554473877
    8. 'cannot' → logprob: -8.489067077636719
    9. 'notice' → logprob: -9.364067077636719
    10. 'already' → logprob: -9.489067077636719

Token 448: ' compute' (ID: 23864)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.43063485622406006
    2. 'check' → logprob: -1.30563485622406
    3. 'try' → logprob: -3.9306349754333496
    4. 'observe' → logprob: -4.18063497543335
    5. 'expl' → logprob: -4.55563497543335
    6. 'util' → logprob: -5.05563497543335
    7. 'infer' → logprob: -5.05563497543335
    8. 'answer' → logprob: -5.68063497543335
    9. ' use' → logprob: -5.93063497543335
    10. 'consider' → logprob: -6.43063497543335

Token 449: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.15708936750888824
    2. 'the' → logprob: -3.4070894718170166
    3. 'abs' → logprob: -3.6570894718170166
    4. 'max' → logprob: -4.0320892333984375
    5. 'for' → logprob: -4.1570892333984375
    6. 'if' → logprob: -4.4070892333984375
    7. 'min' → logprob: -4.6570892333984375
    8. 'possible' → logprob: -5.1570892333984375
    9. 'cd' → logprob: -5.2820892333984375
    10. ' dist' → logprob: -5.5320892333984375

Token 450: ' from' (ID: 591)
  Prédit: 'between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'between' → logprob: -0.639732837677002
    2. '_c' → logprob: -1.264732837677002
    3. ' between' → logprob: -2.639732837677002
    4. 'from' → logprob: -3.014732837677002
    5. '_between' → logprob: -3.264732837677002
    6. '[c' → logprob: -4.514732837677002
    7. 'c' → logprob: -5.014732837677002
    8. '_d' → logprob: -5.764732837677002
    9. 's' → logprob: -5.889732837677002
    10. 'd' → logprob: -6.639732837677002

Token 451: ' a' (ID: 261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4550372362136841
    2. 'dist' → logprob: -1.080037236213684
    3. 'the' → logprob: -4.8300371170043945
    4. 'a' → logprob: -5.5800371170043945
    5. 'd' → logprob: -5.8300371170043945
    6. 'import' → logprob: -5.9550371170043945
    7. ' c' → logprob: -6.9550371170043945
    8. 'each' → logprob: -7.4550371170043945
    9. 'here' → logprob: -7.4550371170043945
    10. ' dist' → logprob: -7.4550371170043945

Token 452: ' and' (ID: 326)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07886984199285507
    2. '_a' → logprob: -3.0788698196411133
    3. 'a' → logprob: -5.078869819641113
    4. ')' → logprob: -5.203869819641113
    5. '_b' → logprob: -5.328869819641113
    6. '[' → logprob: -6.203869819641113
    7. '_c' → logprob: -6.578869819641113
    8. 'd' → logprob: -6.953869819641113
    9. 'c' → logprob: -7.078869819641113
    10. '[a' → logprob: -7.078869819641113

Token 453: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0038979414384812117
    2. 'dist' → logprob: -6.1288981437683105
    3. ' b' → logprob: -6.8788981437683105
    4. ' dist' → logprob: -7.7538981437683105
    5. 'c' → logprob: -9.003897666931152
    6. 'd' → logprob: -10.003897666931152
    7. 'import' → logprob: -10.878897666931152
    8. '
' → logprob: -11.378897666931152
    9. 'from' → logprob: -11.753897666931152
    10. 'a' → logprob: -11.753897666931152

Token 454: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04587474465370178
    2. ' for' → logprob: -3.545874834060669
    3. 'dist' → logprob: -4.92087459564209
    4. 'def' → logprob: -5.29587459564209
    5. '#' → logprob: -6.42087459564209
    6. ',' → logprob: -8.42087459564209
    7. 'answers' → logprob: -8.42087459564209
    8. '```' → logprob: -8.42087459564209
    9. '
' → logprob: -8.79587459564209
    10. 'answer' → logprob: -9.04587459564209

Token 455: ' check' (ID: 2371)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.641983687877655
    2. 'check' → logprob: -1.2669837474822998
    3. 'dist' → logprob: -2.6419837474823
    4. 'for' → logprob: -2.8919837474823
    5. '#' → logprob: -4.141983509063721
    6. 'def' → logprob: -4.641983509063721
    7. 'answer' → logprob: -4.891983509063721
    8. 'then' → logprob: -5.016983509063721
    9. 'pre' → logprob: -5.641983509063721
    10. 'combine' → logprob: -6.141983509063721

Token 456: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.566264295950532e-05
    2. ' for' → logprob: -9.625085830688477
    3. 'dist' → logprob: -11.250085830688477
    4. 'output' → logprob: -13.500085830688477
    5. 'answer' → logprob: -13.875085830688477
    6. 'def' → logprob: -14.000085830688477
    7. 'results' → logprob: -14.125085830688477
    8. 'result' → logprob: -14.500085830688477
    9. '#' → logprob: -14.875085830688477
    10. 'answers' → logprob: -14.875085830688477

Token 457: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.005960322450846434
    2. ' dist' → logprob: -5.255960464477539
    3. '(dist' → logprob: -7.755960464477539
    4. 'max' → logprob: -8.380960464477539
    5. 'abs' → logprob: -10.630960464477539
    6. 'min' → logprob: -10.755960464477539
    7. '   ' → logprob: -12.130960464477539
    8. '
' → logprob: -12.755960464477539
    9. 'the' → logprob: -12.880960464477539
    10. ' max' → logprob: -13.005960464477539

Token 458: '_a' (ID: 10852)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.5027742385864258
    2. '_a' → logprob: -1.0027742385864258
    3. 'a' → logprob: -5.002774238586426
    4. 'c' → logprob: -5.252774238586426
    5. '_between' → logprob: -5.877774238586426
    6. '_queries' → logprob: -6.502774238586426
    7. '[c' → logprob: -6.752774238586426
    8. '_' → logprob: -6.752774238586426
    9. 'between' → logprob: -6.877774238586426
    10. 's' → logprob: -7.127774238586426

Token 459: '[b' (ID: 40800)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.000632139970548451
    2. 'c' → logprob: -8.000632286071777
    3. '[' → logprob: -8.375632286071777
    4. '[a' → logprob: -11.125632286071777
    5. '```' → logprob: -11.875632286071777
    6. '   ' → logprob: -12.125632286071777
    7. '[S' → logprob: -12.250632286071777
    8. ' [' → logprob: -12.375632286071777
    9. ')' → logprob: -12.625632286071777
    10. '
' → logprob: -13.000632286071777

Token 460: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03574604168534279
    2. '[c' → logprob: -3.7857460975646973
    3. ']==' → logprob: -4.785746097564697
    4. '[' → logprob: -6.285746097564697
    5. '==' → logprob: -7.410746097564697
    6. ' ==' → logprob: -8.160745620727539
    7. ']>=' → logprob: -8.285745620727539
    8. 'c' → logprob: -9.160745620727539
    9. '[a' → logprob: -9.160745620727539
    10. '[u' → logprob: -9.410745620727539

Token 461: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3761000335216522
    2. ' ==' → logprob: -1.3761000633239746
    3. '>=' → logprob: -3.0011000633239746
    4. ' >=' → logprob: -4.626100063323975
    5. '<=' → logprob: -7.626100063323975
    6. ' <=' → logprob: -8.501099586486816
    7. '-' → logprob: -8.626099586486816
    8. '```' → logprob: -8.626099586486816
    9. '+' → logprob: -9.376099586486816
    10. '==(' → logprob: -10.501099586486816

Token 462: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00975809432566166
    2. ' dist' → logprob: -4.634757995605469
    3. '   ' → logprob: -14.134757995605469
    4. '(dist' → logprob: -14.509757995605469
    5. '	dist' → logprob: -15.134757995605469
    6. '```' → logprob: -15.134757995605469
    7. '`' → logprob: -16.50975799560547
    8. 'Dist' → logprob: -16.63475799560547
    9. ' ' → logprob: -16.75975799560547
    10. '_dist' → logprob: -16.88475799560547

Token 463: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -5.7292167184641585e-05
    2. '_c' → logprob: -10.500057220458984
    3. 'a' → logprob: -10.625057220458984
    4. '_' → logprob: -12.500057220458984
    5. '```' → logprob: -14.625057220458984
    6. '_b' → logprob: -15.000057220458984
    7. ' _' → logprob: -15.250057220458984
    8. '[a' → logprob: -15.750057220458984
    9. '_d' → logprob: -16.000057220458984
    10. '\' → logprob: -16.875057220458984

Token 464: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.009201920591294765
    2. 'c' → logprob: -4.759202003479004
    3. '[' → logprob: -8.009202003479004
    4. '[a' → logprob: -9.009202003479004
    5. '[q' → logprob: -10.259202003479004
    6. '```' → logprob: -10.259202003479004
    7. '[u' → logprob: -11.509202003479004
    8. '[S' → logprob: -11.884202003479004
    9. '[C' → logprob: -12.259202003479004
    10. '_c' → logprob: -12.509202003479004

Token 465: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023902980610728264
    2. ']+' → logprob: -3.8989028930664062
    3. '[c' → logprob: -7.148902893066406
    4. ' ]' → logprob: -7.523902893066406
    5. ' and' → logprob: -7.773902893066406
    6. ' +' → logprob: -7.898902893066406
    7. '[' → logprob: -8.148902893066406
    8. '+' → logprob: -8.273902893066406
    9. 'and' → logprob: -8.273902893066406
    10. '[b' → logprob: -9.148902893066406

Token 466: ' +' (ID: 659)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7180484533309937
    2. ' +' → logprob: -1.3430484533309937
    3. 'and' → logprob: -2.343048572540283
    4. '[c' → logprob: -2.718048572540283
    5. '+' → logprob: -2.843048572540283
    6. '[b' → logprob: -4.218048572540283
    7. '+c' → logprob: -4.968048572540283
    8. '[' → logprob: -6.468048572540283
    9. '+b' → logprob: -6.593048572540283
    10. '[a' → logprob: -6.968048572540283

Token 467: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4964097738265991
    2. 'graph' → logprob: -1.2464097738265991
    3. 'w' → logprob: -2.9964098930358887
    4. '(dist' → logprob: -3.7464098930358887
    5. '(graph' → logprob: -4.371409893035889
    6. 'S' → logprob: -5.121409893035889
    7. ' dist' → logprob: -6.246409893035889
    8. '#' → logprob: -6.746409893035889
    9. '(' → logprob: -6.746409893035889
    10. '1' → logprob: -6.746409893035889

Token 468: '_c' (ID: 1303)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.007448321674019098
    2. '_c' → logprob: -5.507448196411133
    3. '_a' → logprob: -5.882448196411133
    4. 'b' → logprob: -7.757448196411133
    5. '_d' → logprob: -9.007448196411133
    6. 'a' → logprob: -11.382448196411133
    7. 'd' → logprob: -11.882448196411133
    8. 'c' → logprob: -12.257448196411133
    9. '[b' → logprob: -14.007448196411133
    10. '[c' → logprob: -14.257448196411133

Token 469: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.21910704672336578
    2. 'd' → logprob: -2.219107151031494
    3. '[c' → logprob: -3.094107151031494
    4. '[b' → logprob: -3.844107151031494
    5. 'b' → logprob: -4.969107151031494
    6. '[a' → logprob: -5.094107151031494
    7. 'c' → logprob: -5.844107151031494
    8. 'a' → logprob: -5.844107151031494
    9. '[' → logprob: -7.344107151031494
    10. '```' → logprob: -7.469107151031494

Token 470: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.30403992533683777
    2. '+' → logprob: -1.8040399551391602
    3. ']' → logprob: -2.92903995513916
    4. ')' → logprob: -3.92903995513916
    5. '[' → logprob: -4.92903995513916
    6. '[c' → logprob: -5.67903995513916
    7. '[b' → logprob: -6.05403995513916
    8. '<|end|>' → logprob: -6.17903995513916
    9. '#' → logprob: -6.30403995513916
    10. ' and' → logprob: -6.67903995513916

Token 471: ' +' (ID: 659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.604017436504364
    2. '
' → logprob: -1.2290174961090088
    3. ' for' → logprob: -3.104017496109009
    4. '#' → logprob: -3.479017496109009
    5. 'dist' → logprob: -3.979017496109009
    6. ':' → logprob: -4.47901725769043
    7. 'def' → logprob: -4.72901725769043
    8. '<|end|>' → logprob: -4.85401725769043
    9. '```' → logprob: -5.47901725769043
    10. 'import' → logprob: -5.60401725769043

Token 472: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.17976363003253937
    2. ' dist' → logprob: -1.804763674736023
    3. '(dist' → logprob: -11.429763793945312
    4. '```' → logprob: -13.054763793945312
    5. '   ' → logprob: -13.804763793945312
    6. '	dist' → logprob: -14.054763793945312
    7. '`' → logprob: -14.179763793945312
    8. ' ' → logprob: -14.679763793945312
    9. 'd' → logprob: -14.929763793945312
    10. '.dist' → logprob: -14.929763793945312

Token 473: '_d' (ID: 1565)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0069883959367871284
    2. '_d' → logprob: -5.006988525390625
    3. '_a' → logprob: -8.381988525390625
    4. 'b' → logprob: -10.881988525390625
    5. '_c' → logprob: -11.131988525390625
    6. 'd' → logprob: -12.006988525390625
    7. '_' → logprob: -13.381988525390625
    8. '_f' → logprob: -14.256988525390625
    9. 'a' → logprob: -14.381988525390625
    10. '[b' → logprob: -15.006988525390625

Token 474: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.2917104959487915
    2. 'b' → logprob: -1.4167104959487915
    3. '[c' → logprob: -5.291710376739502
    4. '[' → logprob: -6.416710376739502
    5. ')' → logprob: -6.916710376739502
    6. '<|end|>' → logprob: -6.916710376739502
    7. '```' → logprob: -7.666710376739502
    8. '#' → logprob: -7.791710376739502
    9. '[
' → logprob: -8.54171085357666
    10. ']' → logprob: -8.79171085357666

Token 475: ']
' (ID: 1592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3525507152080536
    2. ':
' → logprob: -2.477550745010376
    3. ']' → logprob: -2.977550745010376
    4. '):' → logprob: -3.102550745010376
    5. ')' → logprob: -3.352550745010376
    6. ']:' → logprob: -3.602550745010376
    7. '#' → logprob: -4.477550506591797
    8. 'def' → logprob: -4.602550506591797
    9. 'dist' → logprob: -4.602550506591797
    10. '):
' → logprob: -5.477550506591797

Token 476: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003900391166098416
    2. 'dist' → logprob: -8.25039005279541
    3. '#' → logprob: -10.12539005279541
    4. ' for' → logprob: -10.37539005279541
    5. 'answer' → logprob: -11.00039005279541
    6. 'answers' → logprob: -11.62539005279541
    7. 'results' → logprob: -11.75039005279541
    8. 'res' → logprob: -11.87539005279541
    9. 'ans' → logprob: -12.12539005279541
    10. 'result' → logprob: -12.50039005279541

Token 477: ' Since' (ID: 12265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003197677666321397
    2. 'dist' → logprob: -6.37819766998291
    3. 'answers' → logprob: -8.00319766998291
    4. ' for' → logprob: -8.25319766998291
    5. 'results' → logprob: -8.25319766998291
    6. 'answer' → logprob: -8.62819766998291
    7. '#' → logprob: -9.00319766998291
    8. 'ans' → logprob: -9.37819766998291
    9. 'def' → logprob: -9.37819766998291
    10. 'res' → logprob: -9.75319766998291

Token 478: ' d' (ID: 272)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10700404644012451
    2. 'graph' → logprob: -2.857004165649414
    3. 'the' → logprob: -3.607004165649414
    4. 'all' → logprob: -5.482004165649414
    5. ' dist' → logprob: -5.857004165649414
    6. 'we' → logprob: -6.482004165649414
    7. 'edges' → logprob: -6.482004165649414
    8. 'c' → logprob: -6.982004165649414
    9. 'd' → logprob: -6.982004165649414
    10. 'w' → logprob: -7.107004165649414

Token 479: 'ijkstra' (ID: 124290)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.28269168734550476
    2. 'ist' → logprob: -1.5326917171478271
    3. '_c' → logprob: -4.782691478729248
    4. '_a' → logprob: -5.032691478729248
    5. 'ijkstra' → logprob: -5.032691478729248
    6. 'istance' → logprob: -5.907691478729248
    7. 'a' → logprob: -6.407691478729248
    8. 'dist' → logprob: -7.032691478729248
    9. 'ists' → logprob: -7.157691478729248
    10. 'c' → logprob: -7.532691478729248

Token 480: ' from' (ID: 591)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3770361840724945
    2. 's' → logprob: -1.877036213874817
    3. ' distances' → logprob: -2.5020360946655273
    4. ' is' → logprob: -4.252036094665527
    5. '<|end|>' → logprob: -4.502036094665527
    6. 'from' → logprob: -4.877036094665527
    7. 'distance' → logprob: -5.627036094665527
    8. 'results' → logprob: -5.627036094665527
    9. ' was' → logprob: -5.627036094665527
    10. '<|end|>' → logprob: -5.627036094665527

Token 481: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.013409859500825405
    2. 'c' → logprob: -4.6384100914001465
    3. ' a' → logprob: -6.0134100914001465
    4. 'both' → logprob: -8.388409614562988
    5. 'any' → logprob: -8.388409614562988
    6. 'all' → logprob: -8.763409614562988
    7. ' c' → logprob: -9.263409614562988
    8. 'b' → logprob: -9.388409614562988
    9. 'each' → logprob: -9.388409614562988
    10. 'S' → logprob: -9.638409614562988

Token 482: ' or' (ID: 503)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.6430187225341797
    2. ')' → logprob: -1.7680187225341797
    3. ',' → logprob: -2.1430187225341797
    4. ' and' → logprob: -2.1430187225341797
    5. '<|end|>' → logprob: -2.2680187225341797
    6. ' or' → logprob: -3.1430187225341797
    7. 'dist' → logprob: -3.3930187225341797
    8. ' is' → logprob: -3.3930187225341797
    9. '=' → logprob: -4.01801872253418
    10. '_' → logprob: -4.14301872253418

Token 483: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -8.160971628967673e-05
    2. ' d' → logprob: -9.500082015991211
    3. 'def' → logprob: -12.500082015991211
    4. 'from' → logprob: -13.000082015991211
    5. '...' → logprob: -14.875082015991211
    6. '#' → logprob: -15.750082015991211
    7. '
' → logprob: -17.37508201599121
    8. '```' → logprob: -17.37508201599121
    9. ' ' → logprob: -17.50008201599121
    10. 'c' → logprob: -17.62508201599121

Token 484: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.974181056022644
    2. 'for' → logprob: -1.224181056022644
    3. ' for' → logprob: -2.4741811752319336
    4. '
' → logprob: -2.8491811752319336
    5. '<|end|>' → logprob: -2.8491811752319336
    6. ')' → logprob: -3.7241811752319336
    7. ',' → logprob: -3.8491811752319336
    8. '#' → logprob: -3.9741811752319336
    9. ' continues' → logprob: -4.474181175231934
    10. ' is' → logprob: -4.599181175231934

Token 485: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.7717249989509583
    2. 'all' → logprob: -1.2717249393463135
    3. 'c' → logprob: -1.8967249393463135
    4. 'any' → logprob: -3.3967249393463135
    5. 'both' → logprob: -4.271725177764893
    6. 'every' → logprob: -4.396725177764893
    7. 'the' → logprob: -4.646725177764893
    8. 'edges' → logprob: -4.896725177764893
    9. 'd' → logprob: -5.271725177764893
    10. 'Q' → logprob: -5.396725177764893

Token 486: ' query' (ID: 5703)
  Prédit: 'query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'query' → logprob: -0.7093509435653687
    2. ' query' → logprob: -0.7093509435653687
    3. '_query' → logprob: -4.584351062774658
    4. 'token' → logprob: -6.209351062774658
    5. '
' → logprob: -7.334351062774658
    6. ' token' → logprob: -7.709351062774658
    7. '_' → logprob: -7.834351062774658
    8. ')' → logprob: -8.2093505859375
    9. '```' → logprob: -8.2093505859375
    10. ' c' → logprob: -8.3343505859375

Token 487: ' would' (ID: 1481)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05694035440683365
    2. ' for' → logprob: -3.4319403171539307
    3. 'dist' → logprob: -4.68194055557251
    4. ':' → logprob: -4.93194055557251
    5. '
' → logprob: -6.18194055557251
    6. 'def' → logprob: -6.55694055557251
    7. '#' → logprob: -7.43194055557251
    8. ':
' → logprob: -7.43194055557251
    9. 'import' → logprob: -7.80694055557251
    10. 'output' → logprob: -8.806940078735352

Token 488: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.013441496528685093
    2. ' be' → logprob: -4.388441562652588
    3. 'T' → logprob: -7.638441562652588
    4. 'ex' → logprob: -8.88844108581543
    5. 'not' → logprob: -9.13844108581543
    6. 'take' → logprob: -9.63844108581543
    7. 'time' → logprob: -10.01344108581543
    8. 'too' → logprob: -10.26344108581543
    9. '#' → logprob: -11.26344108581543
    10. 'cost' → logprob: -11.63844108581543

Token 489: ' expensive' (ID: 14818)
  Prédit: 'too'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'too' → logprob: -0.036943309009075165
    2. 'ine' → logprob: -3.661943197250366
    3. ' too' → logprob: -5.411943435668945
    4. 'very' → logprob: -6.661943435668945
    5. 'time' → logprob: -7.286943435668945
    6. 'T' → logprob: -7.411943435668945
    7. 'cost' → logprob: -7.411943435668945
    8. 'in' → logprob: -7.536943435668945
    9. 'O' → logprob: -7.536943435668945
    10. 'exp' → logprob: -7.661943435668945

Token 490: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007686520111747086
    2. 'dist' → logprob: -8.375768661499023
    3. '#' → logprob: -8.500768661499023
    4. 'INF' → logprob: -9.750768661499023
    5. 'def' → logprob: -10.000768661499023
    6. 'answer' → logprob: -10.000768661499023
    7. 'answers' → logprob: -10.125768661499023
    8. 'ans' → logprob: -10.250768661499023
    9. ' for' → logprob: -10.750768661499023
    10. 'results' → logprob: -10.875768661499023

Token 491: ' but' (ID: 889)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04580110311508179
    2. '#' → logprob: -3.1708011627197266
    3. 'dist' → logprob: -6.920801162719727
    4. 'answer' → logprob: -7.420801162719727
    5. 'def' → logprob: -8.170801162719727
    6. 'ans' → logprob: -8.545801162719727
    7. ' for' → logprob: -8.670801162719727
    8. 'res' → logprob: -8.670801162719727
    9. 'result' → logprob: -8.920801162719727
    10. 'continue' → logprob: -9.545801162719727

Token 492: ' Q' (ID: 1486)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4167900085449219
    2. 'for' → logprob: -1.6667900085449219
    3. '#' → logprob: -3.166790008544922
    4. 'if' → logprob: -3.416790008544922
    5. 'the' → logprob: -3.916790008544922
    6. 'w' → logprob: -4.666790008544922
    7. 'we' → logprob: -4.916790008544922
    8. 'graph' → logprob: -4.916790008544922
    9. 'all' → logprob: -5.041790008544922
    10. ' for' → logprob: -5.166790008544922

Token 493: ' can' (ID: 665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7521889805793762
    2. ' =' → logprob: -1.3771889209747314
    3. '<=' → logprob: -2.7521889209747314
    4. 's' → logprob: -3.2521889209747314
    5. 'for' → logprob: -3.6271889209747314
    6. '==' → logprob: -3.7521889209747314
    7. '#' → logprob: -4.3771891593933105
    8. ' <=' → logprob: -4.5021891593933105
    9. ' is' → logprob: -4.6271891593933105
    10. '
' → logprob: -4.8771891593933105

Token 494: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.22566455602645874
    2. ' be' → logprob: -1.6006646156311035
    3. 'not' → logprob: -9.225664138793945
    4. 'ex' → logprob: -9.975664138793945
    5. '
' → logprob: -10.975664138793945
    6. 'up' → logprob: -11.850664138793945
    7. 'also' → logprob: -12.100664138793945
    8. '	be' → logprob: -12.100664138793945
    9. '```' → logprob: -12.100664138793945
    10. '>' → logprob: -12.225664138793945

Token 495: ' ' (ID: 220)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.1203373596072197
    2. 'up' → logprob: -2.3703372478485107
    3. ' large' → logprob: -4.12033748626709
    4. ' up' → logprob: -5.87033748626709
    5. 'very' → logprob: -7.12033748626709
    6. '100' → logprob: -11.12033748626709
    7. 'big' → logprob: -11.87033748626709
    8. '10' → logprob: -11.99533748626709
    9. ' very' → logprob: -11.99533748626709
    10. 'hu' → logprob: -12.12033748626709

Token 496: '400' (ID: 4812)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.04921002686023712
    2. 'up' → logprob: -3.2992100715637207
    3. ' large' → logprob: -4.674210071563721
    4. 'very' → logprob: -6.924210071563721
    5. ' up' → logprob: -7.299210071563721
    6. '10' → logprob: -10.674209594726562
    7. 'hu' → logprob: -10.799209594726562
    8. '100' → logprob: -10.924209594726562
    9. '0' → logprob: -11.174209594726562
    10. '
' → logprob: -11.799209594726562

Token 497: '00' (ID: 504)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7835975885391235
    2. ' for' → logprob: -1.7835975885391235
    3. ':' → logprob: -2.158597469329834
    4. 'def' → logprob: -2.658597469329834
    5. 's' → logprob: -3.158597469329834
    6. '#' → logprob: -4.158597469329834
    7. '
' → logprob: -4.283597469329834
    8. ')' → logprob: -4.408597469329834
    9. ',' → logprob: -4.408597469329834
    10. '```' → logprob: -4.533597469329834

Token 498: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2829306721687317
    2. '
' → logprob: -2.282930612564087
    3. ' for' → logprob: -2.657930612564087
    4. ':' → logprob: -3.157930612564087
    5. ',' → logprob: -4.532930850982666
    6. '#' → logprob: -5.407930850982666
    7. 'def' → logprob: -5.907930850982666
    8. 'dist' → logprob: -5.907930850982666
    9. '.' → logprob: -6.282930850982666
    10. ':
' → logprob: -6.532930850982666

Token 499: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2707585096359253
    2. 'for' → logprob: -2.145758628845215
    3. 'dist' → logprob: -2.645758628845215
    4. ' for' → logprob: -3.770758628845215
    5. '...' → logprob: -4.770758628845215
    6. 'def' → logprob: -5.020758628845215
    7. ' #' → logprob: -5.895758628845215
    8. '```' → logprob: -6.520758628845215
    9. '
' → logprob: -6.895758628845215
    10. ' dist' → logprob: -7.145758628845215

Token 500: ' can' (ID: 665)
  Prédit: 'cannot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cannot' → logprob: -0.8741413950920105
    2. 'can' → logprob: -0.9991413950920105
    3. 'continue' → logprob: -2.6241414546966553
    4. 'can't' → logprob: -3.3741414546966553
    5. '#' → logprob: -3.6241414546966553
    6. 'need' → logprob: -3.6241414546966553
    7. 'import' → logprob: -4.124141216278076
    8. ' can' → logprob: -4.624141216278076
    9. 'use' → logprob: -5.624141216278076
    10. 'don't' → logprob: -5.749141216278076

Token 501: ' afford' (ID: 11532)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.3606052100658417
    2. 'expl' → logprob: -2.485605239868164
    3. 'pre' → logprob: -2.985605239868164
    4. 'try' → logprob: -3.110605239868164
    5. 'util' → logprob: -3.735605239868164
    6. 'not' → logprob: -3.735605239868164
    7. 'check' → logprob: -3.860605239868164
    8. 'consider' → logprob: -4.235605239868164
    9. 'stop' → logprob: -4.735605239868164
    10. 'ass' → logprob: -5.735605239868164

Token 502: ' two' (ID: 1920)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3574155569076538
    2. 'to' → logprob: -1.8574155569076538
    3. ' to' → logprob: -2.7324156761169434
    4. 'dist' → logprob: -3.2324156761169434
    5. ' for' → logprob: -4.107415676116943
    6. 'def' → logprob: -5.357415676116943
    7. 'the' → logprob: -5.482415676116943
    8. '```' → logprob: -6.232415676116943
    9. 'if' → logprob: -6.482415676116943
    10. 'a' → logprob: -6.732415676116943

Token 503: ' d' (ID: 272)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5727627873420715
    2. 'd' → logprob: -2.0727627277374268
    3. 'def' → logprob: -2.3227627277374268
    4. 'more' → logprob: -2.5727627277374268
    5. 'for' → logprob: -3.1977627277374268
    6. 'import' → logprob: -3.8227627277374268
    7. 'lines' → logprob: -4.322762966156006
    8. '#' → logprob: -4.447762966156006
    9. ' more' → logprob: -4.947762966156006
    10. 'spaces' → logprob: -5.072762966156006

Token 504: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.003980446606874466
    2. 'ijk' → logprob: -6.25398063659668
    3. 'ist' → logprob: -7.37898063659668
    4. 'ij' → logprob: -8.37898063659668
    5. 'j' → logprob: -8.62898063659668
    6. 'i' → logprob: -9.12898063659668
    7. ']' → logprob: -9.25398063659668
    8. ')' → logprob: -9.44148063659668
    9. '```' → logprob: -9.50398063659668
    10. 's' → logprob: -9.94148063659668

Token 505: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004236174281686544
    2. 'dist' → logprob: -5.754236221313477
    3. ' for' → logprob: -7.504236221313477
    4. 'results' → logprob: -9.254236221313477
    5. 'def' → logprob: -9.629236221313477
    6. 'answer' → logprob: -9.879236221313477
    7. 'res' → logprob: -10.004236221313477
    8. 'result' → logprob: -10.004236221313477
    9. '#' → logprob: -10.254236221313477
    10. 'ans' → logprob: -10.254236221313477

Token 506: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03638411685824394
    2. 'c' → logprob: -3.661384105682373
    3. 'both' → logprob: -5.786384105682373
    4. 'the' → logprob: -6.411384105682373
    5. 'S' → logprob: -6.536384105682373
    6. 'each' → logprob: -7.536384105682373
    7. 'import' → logprob: -7.911384105682373
    8. 'here' → logprob: -7.911384105682373
    9. '<|end|>' → logprob: -8.161384582519531
    10. 'source' → logprob: -8.161384582519531

Token 507: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09259998798370361
    2. ' for' → logprob: -2.967599868774414
    3. 'dist' → logprob: -3.967599868774414
    4. '
' → logprob: -4.842599868774414
    5. '<|end|>' → logprob: -6.092599868774414
    6. '#' → logprob: -6.342599868774414
    7. 's' → logprob: -6.842599868774414
    8. ')' → logprob: -7.092599868774414
    9. '```' → logprob: -7.217599868774414
    10. '...' → logprob: -7.592599868774414

Token 508: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0006423805025406182
    2. ' d' → logprob: -7.3756422996521
    3. '<|end|>' → logprob: -11.750642776489258
    4. 'def' → logprob: -12.250642776489258
    5. '<|end|>' → logprob: -13.750642776489258
    6. '...' → logprob: -14.250642776489258
    7. '
' → logprob: -14.625642776489258
    8. 'b' → logprob: -15.625642776489258
    9. 'from' → logprob: -15.750642776489258
    10. '```' → logprob: -15.875642776489258

Token 509: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001161173335276544
    2. 'dist' → logprob: -7.751161098480225
    3. ' for' → logprob: -7.876161098480225
    4. 'answers' → logprob: -8.876161575317383
    5. 'def' → logprob: -10.001161575317383
    6. 'results' → logprob: -10.251161575317383
    7. 'answer' → logprob: -10.251161575317383
    8. '#' → logprob: -10.626161575317383
    9. 'res' → logprob: -10.876161575317383
    10. 'ans' → logprob: -11.126161575317383

Token 510: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.015284230001270771
    2. ' each' → logprob: -4.640284061431885
    3. 'c' → logprob: -6.015284061431885
    4. 'the' → logprob: -6.390284061431885
    5. '```' → logprob: -8.015284538269043
    6. 'all' → logprob: -8.390284538269043
    7. 'every' → logprob: -8.515284538269043
    8. 'edges' → logprob: -9.515284538269043
    9. 'queries' → logprob: -9.640284538269043
    10. '_' → logprob: -10.015284538269043

Token 511: ' query' (ID: 5703)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0061411382630467415
    2. ' for' → logprob: -5.131141185760498
    3. '
' → logprob: -9.50614070892334
    4. '#' → logprob: -11.13114070892334
    5. ')' → logprob: -11.38114070892334
    6. 'output' → logprob: -11.38114070892334
    7. 'answer' → logprob: -11.38114070892334
    8. 'def' → logprob: -11.50614070892334
    9. 'results' → logprob: -11.50614070892334
    10. 's' → logprob: -11.63114070892334

Token 512: '?' (ID: 30)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020663968462031335
    2. ' for' → logprob: -9.00020694732666
    3. 'dist' → logprob: -10.37520694732666
    4. 'results' → logprob: -11.37520694732666
    5. 'answers' → logprob: -11.37520694732666
    6. '#' → logprob: -11.50020694732666
    7. 'answer' → logprob: -12.62520694732666
    8. 'def' → logprob: -12.62520694732666
    9. 'result' → logprob: -12.75020694732666
    10. 'ans' → logprob: -13.12520694732666

Token 513: ' No' (ID: 3004)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14365017414093018
    2. ' for' → logprob: -2.1436500549316406
    3. 'No' → logprob: -4.518650054931641
    4. '#' → logprob: -7.143650054931641
    5. '```' → logprob: -7.393650054931641
    6. 'NO' → logprob: -7.518650054931641
    7. ':' → logprob: -7.643650054931641
    8. ' no' → logprob: -7.643650054931641
    9. 'continue' → logprob: -7.643650054931641
    10. ' No' → logprob: -7.768650054931641

Token 514: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9224191308021545
    2. 'for' → logprob: -1.2974190711975098
    3. ' for' → logprob: -2.7974190711975098
    4. 'dist' → logprob: -2.7974190711975098
    5. 'def' → logprob: -3.2974190711975098
    6. '#' → logprob: -3.2974190711975098
    7. '<|end|>' → logprob: -3.5474190711975098
    8. ':' → logprob: -3.7974190711975098
    9. 'import' → logprob: -4.17241907119751
    10. '```' → logprob: -4.17241907119751

Token 515: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.672236824873835e-05
    2. ' for' → logprob: -10.625076293945312
    3. 'answers' → logprob: -10.625076293945312
    4. 'res' → logprob: -12.000076293945312
    5. 'results' → logprob: -12.125076293945312
    6. 'answer' → logprob: -12.250076293945312
    7. 'ans' → logprob: -12.500076293945312
    8. 'result' → logprob: -12.875076293945312
    9. 'def' → logprob: -13.000076293945312
    10. '
' → logprob: -14.000076293945312

Token 516: ' Alternative' (ID: 52728)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011505525559186935
    2. 'dist' → logprob: -5.636505603790283
    3. 'results' → logprob: -5.886505603790283
    4. 'answers' → logprob: -6.511505603790283
    5. 'res' → logprob: -6.636505603790283
    6. 'result' → logprob: -7.511505603790283
    7. 'ans' → logprob: -7.761505603790283
    8. 'answer' → logprob: -7.761505603790283
    9. '#' → logprob: -8.136505126953125
    10. 'output' → logprob: -8.386505126953125

Token 517: ' idea' (ID: 6056)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6840834617614746
    2. 'dist' → logprob: -1.3090834617614746
    3. 'import' → logprob: -1.8090834617614746
    4. 'graph' → logprob: -4.309083461761475
    5. 'for' → logprob: -4.559083461761475
    6. 'from' → logprob: -4.559083461761475
    7. '
' → logprob: -5.059083461761475
    8. 'visited' → logprob: -5.184083461761475
    9. 'answer' → logprob: -6.059083461761475
    10. 'distance' → logprob: -6.059083461761475

Token 518: ':
' (ID: 734)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2884399890899658
    2. 'dist' → logprob: -1.6634399890899658
    3. 'from' → logprob: -3.788439989089966
    4. 'import' → logprob: -4.288439750671387
    5. 'for' → logprob: -4.538439750671387
    6. 'def' → logprob: -5.288439750671387
    7. ':' → logprob: -5.788439750671387
    8. '
' → logprob: -6.538439750671387
    9. 'visited' → logprob: -6.788439750671387
    10. ' dist' → logprob: -7.788439750671387

Token 519: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.127809077501297
    2. 'for' → logprob: -2.5028090476989746
    3. 'dist' → logprob: -3.6278090476989746
    4. 'from' → logprob: -6.002809047698975
    5. 'visited' → logprob: -6.127809047698975
    6. 'import' → logprob: -6.502809047698975
    7. 'dp' → logprob: -6.752809047698975
    8. 'ans' → logprob: -7.377809047698975
    9. '"""
' → logprob: -7.627809047698975
    10. 'answer' → logprob: -7.752809047698975

Token 520: ' If' (ID: 1843)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3510729670524597
    2. 'dist' → logprob: -2.1010730266571045
    3. 'import' → logprob: -2.9760730266571045
    4. 'from' → logprob: -3.2260730266571045
    5. 'parent' → logprob: -3.4760730266571045
    6. 'for' → logprob: -4.351072788238525
    7. 'Use' → logprob: -4.476072788238525
    8. 'def' → logprob: -5.101072788238525
    9. 'We' → logprob: -5.601072788238525
    10. 'edges' → logprob: -6.726072788238525

Token 521: ' the' (ID: 290)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2839701175689697
    2. ' dist' → logprob: -1.5339701175689697
    3. 'len' → logprob: -5.408969879150391
    4. 'S' → logprob: -5.533969879150391
    5. ' c' → logprob: -5.908969879150391
    6. 'c' → logprob: -6.033969879150391
    7. ' S' → logprob: -6.033969879150391
    8. 'R' → logprob: -6.408969879150391
    9. 'a' → logprob: -6.658969879150391
    10. ' R' → logprob: -6.908969879150391

Token 522: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3401988744735718
    2. ' graph' → logprob: -2.4651989936828613
    3. 'path' → logprob: -3.0901989936828613
    4. 'edges' → logprob: -3.0901989936828613
    5. 'edge' → logprob: -3.8401989936828613
    6. 'segment' → logprob: -3.8401989936828613
    7. 'next' → logprob: -4.215198993682861
    8. ' next' → logprob: -4.340198993682861
    9. 'dist' → logprob: -4.340198993682861
    10. 'problem' → logprob: -5.215198993682861

Token 523: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.1380598247051239
    2. ' is' → logprob: -2.3880598545074463
    3. '#' → logprob: -3.3880598545074463
    4. ' forms' → logprob: -7.263059616088867
    5. 'forms' → logprob: -7.388059616088867
    6. 'has' → logprob: -7.638059616088867
    7. 'can' → logprob: -8.263059616088867
    8. 'edges' → logprob: -8.513059616088867
    9. ' #' → logprob: -8.763059616088867
    10. 'was' → logprob: -8.888059616088867

Token 524: ' und' (ID: 844)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.024001576006412506
    2. ' a' → logprob: -4.274001598358154
    3. 'tree' → logprob: -4.649001598358154
    4. 'und' → logprob: -9.149001121520996
    5. ' tree' → logprob: -9.524001121520996
    6. 'an' → logprob: -11.024001121520996
    7. ' und' → logprob: -12.274001121520996
    8. 'connected' → logprob: -12.899001121520996
    9. '树' → logprob: -13.274001121520996
    10. 'weighted' → logprob: -13.274001121520996

Token 525: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -0.0002655079588294029
    2. 'er' → logprob: -8.250265121459961
    3. 'efined' → logprob: -13.250265121459961
    4. '```' → logprob: -14.375265121459961
    5. 'ers' → logprob: -14.500265121459961
    6. '#' → logprob: -14.875265121459961
    7. '   ' → logprob: -15.375265121459961
    8. '
' → logprob: -16.12526512145996
    9. 'es' → logprob: -16.12526512145996
    10. 'is' → logprob: -16.25026512145996

Token 526: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2820762097835541
    2. ' and' → logprob: -1.9070762395858765
    3. 'and' → logprob: -2.532076120376587
    4. ':' → logprob: -4.782076358795166
    5. ',
' → logprob: -5.407076358795166
    6. '#' → logprob: -5.532076358795166
    7. ':
' → logprob: -8.157075881958008
    8. '.' → logprob: -8.657075881958008
    9. ' ,' → logprob: -9.282075881958008
    10. '
' → logprob: -9.657075881958008

Token 527: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5352081060409546
    2. 'edges' → logprob: -1.5352081060409546
    3. 'the' → logprob: -2.035208225250244
    4. 'we' → logprob: -4.035208225250244
    5. 'weights' → logprob: -4.035208225250244
    6. ' all' → logprob: -4.410208225250244
    7. 'weighted' → logprob: -5.535208225250244
    8. 'edge' → logprob: -5.660208225250244
    9. ' the' → logprob: -6.035208225250244
    10. 'has' → logprob: -6.035208225250244

Token 528: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.09882555156946182
    2. ' edges' → logprob: -2.848825454711914
    3. 'weights' → logprob: -3.973825454711914
    4. 'edge' → logprob: -4.223825454711914
    5. ' edge' → logprob: -7.098825454711914
    6. 'dist' → logprob: -7.848825454711914
    7. 'paths' → logprob: -8.473825454711914
    8. ' shortest' → logprob: -8.473825454711914
    9. 'short' → logprob: -8.598825454711914
    10. 'w' → logprob: -8.723825454711914

Token 529: ' positive' (ID: 8841)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -1.198591709136963
    2. 'have' → logprob: -1.323591709136963
    3. ' are' → logprob: -1.448591709136963
    4. ' have' → logprob: -1.698591709136963
    5. 's' → logprob: -5.823591709136963
    6. 'in' → logprob: -5.948591709136963
    7. ',' → logprob: -6.448591709136963
    8. ' in' → logprob: -6.448591709136963
    9. '```' → logprob: -6.948591709136963
    10. ' on' → logprob: -7.698591709136963

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7311245799064636
    2. '#' → logprob: -1.7311246395111084
    3. ':' → logprob: -1.9811246395111084
    4. ',
' → logprob: -2.3561246395111084
    5. ':
' → logprob: -2.6061246395111084
    6. 'and' → logprob: -4.106124401092529
    7. 'weights' → logprob: -5.231124401092529
    8. 'dist' → logprob: -5.606124401092529
    9. 'weight' → logprob: -5.981124401092529
    10. ' and' → logprob: -6.356124401092529

Token 531: ' we' (ID: 581)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.379040241241455
    2. 'the' → logprob: -1.504040241241455
    3. '#' → logprob: -1.754040241241455
    4. ' the' → logprob: -2.504040241241455
    5. 'then' → logprob: -2.754040241241455
    6. 'we' → logprob: -3.129040241241455
    7. ' we' → logprob: -3.379040241241455
    8. ' shortest' → logprob: -3.504040241241455
    9. ' dist' → logprob: -4.004040241241455
    10. 'and' → logprob: -4.129040241241455

Token 532: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.09001520276069641
    2. ' can' → logprob: -2.465015172958374
    3. 'import' → logprob: -7.590015411376953
    4. '#' → logprob: -8.090015411376953
    5. 'could' → logprob: -9.715015411376953
    6. 'use' → logprob: -9.840015411376953
    7. 'def' → logprob: -10.090015411376953
    8. 'consider' → logprob: -10.840015411376953
    9. 'know' → logprob: -11.090015411376953
    10. 'cannot' → logprob: -11.215015411376953

Token 533: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.04070920869708061
    2. 'find' → logprob: -4.915709018707275
    3. 'build' → logprob: -4.915709018707275
    4. 'consider' → logprob: -5.415709018707275
    5. 'util' → logprob: -5.915709018707275
    6. 'le' → logprob: -6.165709018707275
    7. 'try' → logprob: -6.165709018707275
    8. 'pre' → logprob: -6.165709018707275
    9. 'compute' → logprob: -6.165709018707275
    10. 'perform' → logprob: -6.540709018707275

Token 534: ' D' (ID: 415)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.16512711346149445
    2. 'the' → logprob: -1.915127158164978
    3. 'triangle' → logprob: -6.290127277374268
    4. 'a' → logprob: -6.790127277374268
    5. ' dist' → logprob: -7.915127277374268
    6. 'tree' → logprob: -8.16512680053711
    7. 'pre' → logprob: -8.41512680053711
    8. 'tri' → logprob: -8.41512680053711
    9. 'd' → logprob: -8.66512680053711
    10. ' the' → logprob: -9.04012680053711

Token 535: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.010437977500259876
    2. 'ijk' → logprob: -5.510437965393066
    3. 'ij' → logprob: -6.010437965393066
    4. 'jik' → logprob: -6.760437965393066
    5. 'istance' → logprob: -7.385437965393066
    6. 'is' → logprob: -7.510437965393066
    7. 'j' → logprob: -8.135437965393066
    8. 'i' → logprob: -8.260437965393066
    9. 'ist' → logprob: -8.760437965393066
    10. '   ' → logprob: -8.885437965393066

Token 536: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 537: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7612319588661194
    2. '#' → logprob: -0.8862319588661194
    3. 'dist' → logprob: -2.7612318992614746
    4. 'def' → logprob: -3.2612318992614746
    5. ' for' → logprob: -6.136231899261475
    6. '```' → logprob: -6.136231899261475
    7. 'if' → logprob: -6.636231899261475
    8. 'from' → logprob: -6.636231899261475
    9. 'parent' → logprob: -6.636231899261475
    10. 'ans' → logprob: -6.886231899261475

Token 538: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.43299242854118347
    2. 'parent' → logprob: -1.8079924583435059
    3. 'for' → logprob: -2.057992458343506
    4. 'dist' → logprob: -3.432992458343506
    5. 'from' → logprob: -5.432992458343506
    6. 'visited' → logprob: -5.682992458343506
    7. '```' → logprob: -5.807992458343506
    8. 'def' → logprob: -5.932992458343506
    9. 'parents' → logprob: -6.307992458343506
    10. 'import' → logprob: -6.432992458343506

Token 539: ' shortest' (ID: 70564)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.04100983962416649
    2. 'edge' → logprob: -4.541009902954102
    3. 'u' → logprob: -5.166009902954102
    4. 'an' → logprob: -5.166009902954102
    5. 'the' → logprob: -5.291009902954102
    6. 'all' → logprob: -5.791009902954102
    7. 'query' → logprob: -6.166009902954102
    8. ' each' → logprob: -6.291009902954102
    9. 'dist' → logprob: -6.541009902954102
    10. 'c' → logprob: -6.666009902954102

Token 540: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.23638993501663208
    2. 'paths' → logprob: -1.6113898754119873
    3. '_path' → logprob: -5.486390113830566
    4. 'dist' → logprob: -6.236390113830566
    5. 'edges' → logprob: -6.486390113830566
    6. '_paths' → logprob: -6.861390113830566
    7. '#' → logprob: -6.986390113830566
    8. ' paths' → logprob: -7.736390113830566
    9. ' path' → logprob: -7.861390113830566
    10. 'distance' → logprob: -8.361390113830566

Token 541: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1299304962158203
    2. 'edges' → logprob: -1.6299304962158203
    3. '#' → logprob: -2.2549304962158203
    4. 'dist' → logprob: -2.3799304962158203
    5. 'for' → logprob: -2.5049304962158203
    6. 'def' → logprob: -3.1299304962158203
    7. 'from' → logprob: -3.5049304962158203
    8. ' edges' → logprob: -3.7549304962158203
    9. '_edges' → logprob: -4.37993049621582
    10. '
' → logprob: -4.62993049621582

Token 542: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.793199896812439
    2. 'dist' → logprob: -1.043199896812439
    3. 'for' → logprob: -2.1682000160217285
    4. 'the' → logprob: -3.6682000160217285
    5. 'from' → logprob: -4.1682000160217285
    6. 'import' → logprob: -4.1682000160217285
    7. 'print' → logprob: -5.6682000160217285
    8. 'def' → logprob: -5.7932000160217285
    9. 'edges' → logprob: -5.7932000160217285
    10. 'if' → logprob: -5.9182000160217285

Token 543: ' triangle' (ID: 41487)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.4218285083770752
    2. 'dist' → logprob: -1.6718285083770752
    3. 'short' → logprob: -1.6718285083770752
    4. 'next' → logprob: -2.296828508377075
    5. 'edges' → logprob: -2.296828508377075
    6. 'path' → logprob: -3.171828508377075
    7. 'problem' → logprob: -3.421828508377075
    8. ' shortest' → logprob: -3.671828508377075
    9. 'distance' → logprob: -3.921828508377075
    10. '#' → logprob: -4.671828269958496

Token 544: ' equality' (ID: 47685)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.28438839316368103
    2. ' inequality' → logprob: -1.4093884229660034
    3. 'ineq' → logprob: -5.909388542175293
    4. ' inequalities' → logprob: -8.534388542175293
    5. '=' → logprob: -9.159388542175293
    6. '_' → logprob: -9.659388542175293
    7. 'INE' → logprob: -10.159388542175293
    8. ' =' → logprob: -10.784388542175293
    9. '   ' → logprob: -10.909388542175293
    10. ' ' → logprob: -11.034388542175293

Token 545: ' holds' (ID: 18305)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8852713108062744
    2. '
' → logprob: -1.7602713108062744
    3. ':' → logprob: -2.0102713108062744
    4. '<|end|>' → logprob: -2.7602713108062744
    5. ' for' → logprob: -3.2602713108062744
    6. 'for' → logprob: -3.7602713108062744
    7. 's' → logprob: -4.010271072387695
    8. ' is' → logprob: -4.010271072387695
    9. '<|end|>' → logprob: -4.135271072387695
    10. ' continues' → logprob: -4.260271072387695

Token 546: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13363637030124664
    2. '#' → logprob: -3.133636474609375
    3. ' for' → logprob: -3.883636474609375
    4. 'dist' → logprob: -4.133636474609375
    5. 'def' → logprob: -4.258636474609375
    6. '
' → logprob: -4.758636474609375
    7. 'answer' → logprob: -5.133636474609375
    8. 'answers' → logprob: -5.633636474609375
    9. '```' → logprob: -5.758636474609375
    10. 'ans' → logprob: -5.883636474609375

Token 547: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.33250823616981506
    2. ' for' → logprob: -1.9575082063674927
    3. ' #' → logprob: -2.7075083255767822
    4. 'for' → logprob: -2.8325083255767822
    5. ' if' → logprob: -5.832508087158203
    6. '<|end|>' → logprob: -6.082508087158203
    7. ' c' → logprob: -6.207508087158203
    8. ' ' → logprob: -6.332508087158203
    9. ' a' → logprob: -7.582508087158203
    10. 'if' → logprob: -7.707508087158203

Token 548: ' dist' (ID: 3601)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3087615370750427
    2. 'for' → logprob: -1.5587615966796875
    3. ' for' → logprob: -3.6837615966796875
    4. 'dist' → logprob: -4.5587615966796875
    5. 'if' → logprob: -5.3087615966796875
    6. 'from' → logprob: -5.6837615966796875
    7. ' #' → logprob: -6.1837615966796875
    8. ' dist' → logprob: -6.4337615966796875
    9. 'For' → logprob: -6.4337615966796875
    10. '
' → logprob: -6.5587615966796875

Token 549: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0028540899511426687
    2. '_' → logprob: -6.502853870391846
    3. '_c' → logprob: -7.377853870391846
    4. 'a' → logprob: -8.377854347229004
    5. '_b' → logprob: -9.002854347229004
    6. '[a' → logprob: -9.252854347229004
    7. '_u' → logprob: -9.627854347229004
    8. '[u' → logprob: -10.002854347229004
    9. '[' → logprob: -10.502854347229004
    10. 'from' → logprob: -10.752854347229004

Token 550: '[b' (ID: 40800)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.01597912237048149
    2. '[b' → logprob: -4.390979290008545
    3. '[' → logprob: -6.390979290008545
    4. '[a' → logprob: -7.015979290008545
    5. 'c' → logprob: -8.515978813171387
    6. '+c' → logprob: -8.765978813171387
    7. '[v' → logprob: -8.890978813171387
    8. '[u' → logprob: -9.265978813171387
    9. '[p' → logprob: -9.765978813171387
    10. 'b' → logprob: -10.140978813171387

Token 551: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006067678914405406
    2. ']==' → logprob: -8.000606536865234
    3. ' ]' → logprob: -9.250606536865234
    4. '']' → logprob: -9.250606536865234
    5. ' ==' → logprob: -10.500606536865234
    6. '==' → logprob: -11.625606536865234
    7. '[' → logprob: -11.625606536865234
    8. ']+' → logprob: -12.125606536865234
    9. '[c' → logprob: -12.750606536865234
    10. '`]' → logprob: -12.875606536865234

Token 552: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8017787933349609
    2. ' <=' → logprob: -0.9267787933349609
    3. ' >=' → logprob: -1.926778793334961
    4. '==' → logprob: -5.051778793334961
    5. '<=' → logprob: -6.551778793334961
    6. '>=' → logprob: -6.676778793334961
    7. '+' → logprob: -8.426778793334961
    8. ')' → logprob: -8.926778793334961
    9. ' =' → logprob: -9.176778793334961
    10. ' +' → logprob: -9.426778793334961

Token 553: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0021866646129637957
    2. ' dist' → logprob: -6.1271867752075195
    3. '	dist' → logprob: -14.75218677520752
    4. 'min' → logprob: -15.00218677520752
    5. '(dist' → logprob: -15.12718677520752
    6. '   ' → logprob: -15.37718677520752
    7. '```' → logprob: -16.377185821533203
    8. ' ' → logprob: -16.502185821533203
    9. '
' → logprob: -17.002185821533203
    10. ' ' → logprob: -17.127185821533203

Token 554: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0003831252979580313
    2. '_c' → logprob: -8.250383377075195
    3. 'a' → logprob: -9.750383377075195
    4. '[a' → logprob: -10.000383377075195
    5. '[c' → logprob: -11.625383377075195
    6. '_b' → logprob: -13.250383377075195
    7. '_' → logprob: -13.250383377075195
    8. '[' → logprob: -13.250383377075195
    9. '_[' → logprob: -13.375383377075195
    10. '```' → logprob: -14.125383377075195

Token 555: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.002502651885151863
    2. 'c' → logprob: -6.37750244140625
    3. '[' → logprob: -7.62750244140625
    4. '[u' → logprob: -9.12750244140625
    5. '[v' → logprob: -9.62750244140625
    6. '[a' → logprob: -10.00250244140625
    7. ']' → logprob: -11.12750244140625
    8. '(c' → logprob: -11.50250244140625
    9. '[b' → logprob: -11.75250244140625
    10. '```' → logprob: -11.87750244140625

Token 556: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00881440844386816
    2. '[c' → logprob: -5.133814334869385
    3. ']+' → logprob: -5.883814334869385
    4. '[' → logprob: -10.383814811706543
    5. '']' → logprob: -10.883814811706543
    6. ' ]' → logprob: -11.133814811706543
    7. '][' → logprob: -11.633814811706543
    8. '"]' → logprob: -12.383814811706543
    9. ']
' → logprob: -12.758814811706543
    10. 'c' → logprob: -13.008814811706543

Token 557: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.34025469422340393
    2. '[c' → logprob: -2.090254783630371
    3. '+' → logprob: -2.465254783630371
    4. ' and' → logprob: -2.840254783630371
    5. 'and' → logprob: -5.090254783630371
    6. '[' → logprob: -5.215254783630371
    7. '+c' → logprob: -5.340254783630371
    8. ']' → logprob: -6.840254783630371
    9. ')' → logprob: -7.090254783630371
    10. '[v' → logprob: -7.465254783630371

Token 558: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.013896090909838676
    2. 'graph' → logprob: -4.7638959884643555
    3. ' dist' → logprob: -5.8888959884643555
    4. 'w' → logprob: -6.5138959884643555
    5. '(dist' → logprob: -7.1388959884643555
    6. '(graph' → logprob: -9.763895988464355
    7. '(' → logprob: -10.388895988464355
    8. ' (' → logprob: -10.888895988464355
    9. ' graph' → logprob: -11.013895988464355
    10. '1' → logprob: -11.138895988464355

Token 559: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.002879057079553604
    2. '_b' → logprob: -6.0028791427612305
    3. '_a' → logprob: -8.87787914276123
    4. '[c' → logprob: -9.00287914276123
    5. '_[' → logprob: -9.87787914276123
    6. '_d' → logprob: -10.12787914276123
    7. 'c' → logprob: -10.25287914276123
    8. '_{' → logprob: -12.37787914276123
    9. '```' → logprob: -12.87787914276123
    10. 'b' → logprob: -13.50287914276123

Token 560: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0568871945142746
    2. 'd' → logprob: -2.931887149810791
    3. '[' → logprob: -6.681887149810791
    4. '[v' → logprob: -8.05688762664795
    5. '[c' → logprob: -9.55688762664795
    6. '<|end|>' → logprob: -9.55688762664795
    7. '```' → logprob: -9.93188762664795
    8. '[b' → logprob: -10.43188762664795
    9. ' d' → logprob: -10.55688762664795
    10. '[]' → logprob: -10.80688762664795

Token 561: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07279882580041885
    2. '+' → logprob: -2.697798728942871
    3. ')' → logprob: -6.197798728942871
    4. ' or' → logprob: -7.572798728942871
    5. '#' → logprob: -9.447798728942871
    6. ']' → logprob: -9.572798728942871
    7. ' +
' → logprob: -10.572798728942871
    8. ',' → logprob: -10.822798728942871
    9. ' and' → logprob: -11.197798728942871
    10. 'or' → logprob: -11.322798728942871

Token 562: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8302820324897766
    2. ' and' → logprob: -1.2052819728851318
    3. 'if' → logprob: -2.705281972885132
    4. ' if' → logprob: -2.830281972885132
    5. '#' → logprob: -3.455281972885132
    6. 'and' → logprob: -3.705281972885132
    7. '<|end|>' → logprob: -4.330282211303711
    8. ':
' → logprob: -5.080282211303711
    9. 'for' → logprob: -5.080282211303711
    10. '<|end|>' → logprob: -5.205282211303711

Token 563: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6067332625389099
    2. ' dist' → logprob: -0.8567332625389099
    3. 'w' → logprob: -3.9817333221435547
    4. ' w' → logprob: -5.231733322143555
    5. '(dist' → logprob: -6.356733322143555
    6. ''' → logprob: -6.981733322143555
    7. 'graph' → logprob: -7.231733322143555
    8. ' (' → logprob: -7.231733322143555
    9. '1' → logprob: -7.731733322143555
    10. '"' → logprob: -7.856733322143555

Token 564: '_d' (ID: 1565)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.017357464879751205
    2. '_d' → logprob: -4.392357349395752
    3. 'b' → logprob: -5.642357349395752
    4. '_a' → logprob: -6.892357349395752
    5. 'd' → logprob: -8.39235782623291
    6. '_c' → logprob: -10.64235782623291
    7. 'a' → logprob: -10.64235782623291
    8. 'c' → logprob: -14.89235782623291
    9. '```' → logprob: -14.89235782623291
    10. '_' → logprob: -15.01735782623291

Token 565: '[b' (ID: 40800)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0242469310760498
    2. '[c' → logprob: -1.2742469310760498
    3. '<|end|>' → logprob: -1.3992469310760498
    4. '[b' → logprob: -2.77424693107605
    5. '[a' → logprob: -4.274247169494629
    6. 'b' → logprob: -4.399247169494629
    7. ')' → logprob: -4.649247169494629
    8. '[
' → logprob: -4.774247169494629
    9. ']' → logprob: -6.399247169494629
    10. '[v' → logprob: -6.899247169494629

Token 566: ']
' (ID: 1592)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8581253886222839
    2. ')' → logprob: -0.9831253886222839
    3. ':' → logprob: -2.7331254482269287
    4. ']' → logprob: -3.7331254482269287
    5. '<|end|>' → logprob: -3.9831254482269287
    6. '<|end|>' → logprob: -4.23312520980835
    7. ':
' → logprob: -4.35812520980835
    8. ' if' → logprob: -4.60812520980835
    9. '.' → logprob: -4.98312520980835
    10. '
' → logprob: -4.98312520980835

Token 567: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009138957597315311
    2. '#' → logprob: -5.509139060974121
    3. 'answers' → logprob: -6.509139060974121
    4. 'dist' → logprob: -7.134139060974121
    5. 'def' → logprob: -7.384139060974121
    6. ' for' → logprob: -7.384139060974121
    7. 'results' → logprob: -7.634139060974121
    8. 'answer' → logprob: -8.259139060974121
    9. 'res' → logprob: -8.259139060974121
    10. 'ans' → logprob: -8.384139060974121

Token 568: ' But' (ID: 3072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016291213687509298
    2. ' for' → logprob: -6.87662935256958
    3. 'answers' → logprob: -8.751628875732422
    4. 'results' → logprob: -9.126628875732422
    5. '#' → logprob: -9.376628875732422
    6. 'res' → logprob: -9.751628875732422
    7. 'ans' → logprob: -10.251628875732422
    8. 'def' → logprob: -10.251628875732422
    9. 'answer' → logprob: -10.376628875732422
    10. 'result' → logprob: -11.251628875732422

Token 569: ' again' (ID: 2418)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.37209394574165344
    2. 'not' → logprob: -2.122093915939331
    3. ' not' → logprob: -2.497093915939331
    4. ' dist' → logprob: -2.997093915939331
    5. 'for' → logprob: -4.24709415435791
    6. '#' → logprob: -4.62209415435791
    7. '
' → logprob: -4.74709415435791
    8. ' for' → logprob: -5.12209415435791
    9. 'the' → logprob: -5.49709415435791
    10. ' the' → logprob: -5.74709415435791

Token 570: ' dist' (ID: 3601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4104771614074707
    2. ' for' → logprob: -1.7854771614074707
    3. '#' → logprob: -2.0354771614074707
    4. '
' → logprob: -3.7854771614074707
    5. 'dist' → logprob: -5.410477161407471
    6. 'def' → logprob: -5.660477161407471
    7. 'continue' → logprob: -6.160477161407471
    8. 'import' → logprob: -7.160477161407471
    9. '<|end|>' → logprob: -7.160477161407471
    10. ',' → logprob: -7.285477161407471

Token 571: '_c' (ID: 1303)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.5891327261924744
    2. '_c' → logprob: -0.9641327261924744
    3. '_' → logprob: -2.839132785797119
    4. 'a' → logprob: -6.339132785797119
    5. '_d' → logprob: -7.839132785797119
    6. 'import' → logprob: -7.964132785797119
    7. '[' → logprob: -8.089132308959961
    8. ')' → logprob: -8.464132308959961
    9. 'from' → logprob: -8.464132308959961
    10. '[a' → logprob: -8.464132308959961

Token 572: ' and' (ID: 326)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4113095998764038
    2. '[c' → logprob: -1.4113095998764038
    3. '[d' → logprob: -1.6613095998764038
    4. '_a' → logprob: -2.5363097190856934
    5. ']' → logprob: -2.5363097190856934
    6. '[a' → logprob: -3.0363097190856934
    7. '[v' → logprob: -4.036309719085693
    8. ')' → logprob: -4.411309719085693
    9. 'a' → logprob: -4.661309719085693
    10. '_' → logprob: -4.911309719085693

Token 573: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004972001072019339
    2. ' dist' → logprob: -5.379971981048584
    3. 'd' → logprob: -8.004972457885742
    4. '_dist' → logprob: -11.504972457885742
    5. '#' → logprob: -13.129972457885742
    6. '
' → logprob: -13.254972457885742
    7. '```' → logprob: -13.754972457885742
    8. '(dist' → logprob: -14.254972457885742
    9. '	dist' → logprob: -14.629972457885742
    10. '_' → logprob: -14.879972457885742

Token 574: '_d' (ID: 1565)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.029641013592481613
    2. '_' → logprob: -3.6546409130096436
    3. '_c' → logprob: -6.279641151428223
    4. '_d' → logprob: -7.279641151428223
    5. 'a' → logprob: -7.529641151428223
    6. '_b' → logprob: -8.779641151428223
    7. '```' → logprob: -11.154641151428223
    8. '#' → logprob: -11.279641151428223
    9. 'd' → logprob: -11.654641151428223
    10. ''_' → logprob: -11.779641151428223

Token 575: ' not' (ID: 625)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6522400379180908
    2. ']' → logprob: -1.7772400379180908
    3. '<|end|>' → logprob: -1.7772400379180908
    4. '#' → logprob: -2.277240037918091
    5. '[c' → logprob: -2.402240037918091
    6. '[' → logprob: -3.402240037918091
    7. '<|end|>' → logprob: -3.402240037918091
    8. '[
' → logprob: -3.777240037918091
    9. ' =' → logprob: -3.777240037918091
    10. 's' → logprob: -3.902240037918091

Token 576: ' pre' (ID: 876)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.5118076801300049
    2. '=' → logprob: -1.6368076801300049
    3. 'provided' → logprob: -2.386807680130005
    4. 'known' → logprob: -2.761807680130005
    5. 'direct' → logprob: -4.386807441711426
    6. 'given' → logprob: -5.011807441711426
    7. ' available' → logprob: -5.011807441711426
    8. ' directly' → logprob: -5.636807441711426
    9. '_available' → logprob: -5.761807441711426
    10. 'explicit' → logprob: -5.761807441711426

Token 577: 'computed' (ID: 157929)
  Prédit: 'computed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'computed' → logprob: -0.0007069521816447377
    2. '```' → logprob: -8.000706672668457
    3. 'cal' → logprob: -9.250706672668457
    4. 'stored' → logprob: -9.250706672668457
    5. 'c' → logprob: -9.625706672668457
    6. 'processed' → logprob: -10.500706672668457
    7. 'served' → logprob: -10.750706672668457
    8. '``' → logprob: -11.125706672668457
    9. 'compiled' → logprob: -11.625706672668457
    10. 'sum' → logprob: -12.250706672668457

Token 578: '.

' (ID: 364)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0712497234344482
    2. 'for' → logprob: -1.1962497234344482
    3. 'answers' → logprob: -1.8212497234344482
    4. 'answer' → logprob: -2.5712497234344482
    5. 'dist' → logprob: -2.6962497234344482
    6. 'ans' → logprob: -4.196249961853027
    7. 'results' → logprob: -4.571249961853027
    8. 'def' → logprob: -5.071249961853027
    9. 'res' → logprob: -5.446249961853027
    10. 'result' → logprob: -6.196249961853027

Token 579: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020399633795022964
    2. '#' → logprob: -4.520399570465088
    3. ' for' → logprob: -5.145399570465088
    4. 'def' → logprob: -7.270399570465088
    5. 'dist' → logprob: -7.270399570465088
    6. 'import' → logprob: -7.645399570465088
    7. 'answers' → logprob: -8.270400047302246
    8. '
' → logprob: -8.645400047302246
    9. 'ans' → logprob: -8.645400047302246
    10. '```' → logprob: -9.020400047302246

Token 580: ' Use' (ID: 7649)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10278072953224182
    2. '#' → logprob: -3.102780818939209
    3. 'parent' → logprob: -3.852780818939209
    4. 'from' → logprob: -4.727780818939209
    5. 'import' → logprob: -5.602780818939209
    6. 'ans' → logprob: -5.727780818939209
    7. 'answer' → logprob: -5.727780818939209
    8. 'res' → logprob: -5.727780818939209
    9. 'dp' → logprob: -6.352780818939209
    10. 'dist' → logprob: -6.352780818939209

Token 581: ' the' (ID: 290)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02021903730928898
    2. 'the' → logprob: -4.270218849182129
    3. ' dist' → logprob: -5.270218849182129
    4. 'for' → logprob: -9.020218849182129
    5. 'distance' → logprob: -9.145218849182129
    6. '#' → logprob: -9.270218849182129
    7. 'union' → logprob: -9.520218849182129
    8. 'dis' → logprob: -9.520218849182129
    9. 'a' → logprob: -9.895218849182129
    10. ' the' → logprob: -10.145218849182129

Token 582: ' following' (ID: 3992)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -1.2543919086456299
    2. 'triangle' → logprob: -1.5043919086456299
    3. 'following' → logprob: -1.5043919086456299
    4. 'dist' → logprob: -1.7543919086456299
    5. 'property' → logprob: -2.87939190864563
    6. ' fact' → logprob: -4.254391670227051
    7. ' following' → logprob: -5.129391670227051
    8. 'tri' → logprob: -5.129391670227051
    9. 'next' → logprob: -6.129391670227051
    10. 'pre' → logprob: -6.129391670227051

Token 583: ' equivalent' (ID: 23458)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8923898339271545
    2. 'for' → logprob: -1.0173897743225098
    3. 'def' → logprob: -2.6423897743225098
    4. '#' → logprob: -2.6423897743225098
    5. 'from' → logprob: -3.6423897743225098
    6. 'import' → logprob: -3.7673897743225098
    7. 'dp' → logprob: -5.26738977432251
    8. '```' → logprob: -5.26738977432251
    9. 'edges' → logprob: -5.39238977432251
    10. ' for' → logprob: -5.39238977432251

Token 584: ' condition' (ID: 7060)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.532051146030426
    2. ' for' → logprob: -2.7820510864257812
    3. ' code' → logprob: -2.9070510864257812
    4. 'def' → logprob: -3.1570510864257812
    5. 'dist' → logprob: -3.1570510864257812
    6. 'condition' → logprob: -3.5320510864257812
    7. '```' → logprob: -3.5320510864257812
    8. ' condition' → logprob: -3.7820510864257812
    9. ' approach' → logprob: -3.9070510864257812
    10. 'code' → logprob: -4.157051086425781

Token 585: ' given' (ID: 4335)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012274288572371006
    2. ' for' → logprob: -4.512274265289307
    3. 'dist' → logprob: -7.637274265289307
    4. ':' → logprob: -7.887274265289307
    5. '
' → logprob: -8.887274742126465
    6. 'def' → logprob: -9.387274742126465
    7. '#' → logprob: -10.012274742126465
    8. '```' → logprob: -11.012274742126465
    9. 'answer' → logprob: -11.512274742126465
    10. 'ans' → logprob: -11.637274742126465

Token 586: ' in' (ID: 306)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8484686613082886
    2. 'the' → logprob: -1.9734686613082886
    3. 'that' → logprob: -1.9734686613082886
    4. ' that' → logprob: -2.723468780517578
    5. 'c' → logprob: -2.973468780517578
    6. ' dist' → logprob: -3.223468780517578
    7. ' the' → logprob: -3.348468780517578
    8. 'def' → logprob: -3.473468780517578
    9. '#' → logprob: -4.348468780517578
    10. ' c' → logprob: -4.348468780517578

Token 587: ' solutions' (ID: 9368)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2102917581796646
    2. 'comments' → logprob: -1.8352917432785034
    3. 'comment' → logprob: -4.710291862487793
    4. 'problem' → logprob: -4.710291862487793
    5. '#' → logprob: -4.960291862487793
    6. 'code' → logprob: -6.210291862487793
    7. 'pro' → logprob: -7.335291862487793
    8. 'queries' → logprob: -7.585291862487793
    9. ' comments' → logprob: -7.585291862487793
    10. ' the' → logprob: -8.085291862487793

Token 588: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002237566513940692
    2. ' for' → logprob: -6.252237796783447
    3. 'def' → logprob: -9.377237319946289
    4. ':' → logprob: -9.377237319946289
    5. '
' → logprob: -9.877237319946289
    6. 'dist' → logprob: -9.877237319946289
    7. '#' → logprob: -11.877237319946289
    8. '```' → logprob: -12.002237319946289
    9. 'results' → logprob: -12.127237319946289
    10. 'answers' → logprob: -12.752237319946289

Token 589: ' similar' (ID: 6771)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5890635848045349
    2. 'check' → logprob: -1.2140636444091797
    3. '"' → logprob: -3.5890636444091797
    4. 'print' → logprob: -3.7140636444091797
    5. 'each' → logprob: -3.9640636444091797
    6. 'queries' → logprob: -3.9640636444091797
    7. 'continue' → logprob: -5.46406364440918
    8. '#' → logprob: -5.58906364440918
    9. 'query' → logprob: -5.83906364440918
    10. 'answer' → logprob: -5.83906364440918

Token 590: ' problems' (ID: 6840)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.03545235097408295
    2. 'lines' → logprob: -4.410452365875244
    3. 'code' → logprob: -5.035452365875244
    4. 'problem' → logprob: -5.410452365875244
    5. 'queries' → logprob: -5.910452365875244
    6. 'edges' → logprob: -6.410452365875244
    7. 'form' → logprob: -7.035452365875244
    8. ' lines' → logprob: -7.035452365875244
    9. '#' → logprob: -7.035452365875244
    10. ' code' → logprob: -7.160452365875244

Token 591: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019828793592751026
    2. ' for' → logprob: -6.751982688903809
    3. 'dist' → logprob: -7.376982688903809
    4. '
' → logprob: -9.376982688903809
    5. 'def' → logprob: -10.751982688903809
    6. '#' → logprob: -11.376982688903809
    7. '```' → logprob: -11.376982688903809
    8. 'answer' → logprob: -11.626982688903809
    9. 'ans' → logprob: -11.876982688903809
    10. 'results' → logprob: -12.001982688903809

Token 592: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007383593823760748
    2. ' for' → logprob: -6.007383823394775
    3. 'res' → logprob: -6.757383823394775
    4. 'dist' → logprob: -6.757383823394775
    5. 'answer' → logprob: -7.507383823394775
    6. 'ans' → logprob: -7.507383823394775
    7. 'def' → logprob: -7.757383823394775
    8. 'result' → logprob: -8.632383346557617
    9. 'all' → logprob: -8.757383346557617
    10. '#' → logprob: -8.882383346557617

Token 593: ' Path' (ID: 14027)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005456457729451358
    2. 'dist' → logprob: -9.000545501708984
    3. 'from' → logprob: -9.125545501708984
    4. '```' → logprob: -9.625545501708984
    5. ' for' → logprob: -9.750545501708984
    6. 'ans' → logprob: -10.375545501708984
    7. 'results' → logprob: -10.500545501708984
    8. 'answers' → logprob: -10.500545501708984
    9. 'def' → logprob: -10.750545501708984
    10. 'import' → logprob: -10.750545501708984

Token 594: ' from' (ID: 591)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.6002518534660339
    2. 'from' → logprob: -1.4752519130706787
    3. '_' → logprob: -2.8502519130706787
    4. 's' → logprob: -2.9752519130706787
    5. ' =' → logprob: -3.7252519130706787
    6. '_c' → logprob: -3.8502519130706787
    7. 'a' → logprob: -3.9752519130706787
    8. 'length' → logprob: -4.1002516746521
    9. '   ' → logprob: -5.7252516746521
    10. '=' → logprob: -5.8502516746521

Token 595: ' a' (ID: 261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4406436085700989
    2. 'a' → logprob: -1.065643548965454
    3. 'dist' → logprob: -5.815643787384033
    4. ' c' → logprob: -6.190643787384033
    5. ' a' → logprob: -6.690643787384033
    6. '#' → logprob: -7.065643787384033
    7. 'u' → logprob: -7.315643787384033
    8. 'queries' → logprob: -7.565643787384033
    9. 'import' → logprob: -7.815643787384033
    10. 'S' → logprob: -7.815643787384033

Token 596: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -1.0373706817626953
    2. ' to' → logprob: -1.1623706817626953
    3. 'b' → logprob: -2.5373706817626953
    4. '_to' → logprob: -2.6623706817626953
    5. ' #' → logprob: -3.7873706817626953
    6. '_' → logprob: -3.9123706817626953
    7. 'c' → logprob: -4.037370681762695
    8. '->' → logprob: -4.037370681762695
    9. '_b' → logprob: -4.037370681762695
    10. '#' → logprob: -4.037370681762695

Token 597: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10485158115625381
    2. ' b' → logprob: -2.854851484298706
    3. 'c' → logprob: -3.354851484298706
    4. ' c' → logprob: -4.979851722717285
    5. 'a' → logprob: -9.354851722717285
    6. ' ' → logprob: -10.729851722717285
    7. ' a' → logprob: -10.854851722717285
    8. '_' → logprob: -11.104851722717285
    9. '_b' → logprob: -11.979851722717285
    10. ' ' → logprob: -11.979851722717285

Token 598: ' passing' (ID: 21178)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.09316885471344
    2. ' =' → logprob: -1.46816885471344
    3. '=' → logprob: -2.4681687355041504
    4. 's' → logprob: -3.0931687355041504
    5. '_' → logprob: -3.3431687355041504
    6. 'def' → logprob: -3.3431687355041504
    7. 'from' → logprob: -3.4681687355041504
    8. ' ==' → logprob: -3.9681687355041504
    9. '_a' → logprob: -3.9681687355041504
    10. 'for' → logprob: -4.21816873550415

Token 599: ' c' (ID: 274)
  Prédit: ' through'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' through' → logprob: -0.4462876617908478
    2. 'through' → logprob: -1.0712876319885254
    3. '_' → logprob: -4.196287631988525
    4. ')' → logprob: -7.696287631988525
    5. '#' → logprob: -7.821287631988525
    6. '(c' → logprob: -7.946287631988525
    7. ' ' → logprob: -8.071288108825684
    8. '"' → logprob: -8.946288108825684
    9. 'c' → logprob: -9.071288108825684
    10. '(' → logprob: -9.196288108825684

Token 600: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3852284252643585
    2. ')' → logprob: -2.135228395462036
    3. '#' → logprob: -2.885228395462036
    4. ' and' → logprob: -2.885228395462036
    5. ',' → logprob: -3.760228395462036
    6. 'and' → logprob: -4.635228633880615
    7. 's' → logprob: -5.260228633880615
    8. '
' → logprob: -5.510228633880615
    9. ' through' → logprob: -5.760228633880615
    10. '[c' → logprob: -6.135228633880615

Token 601: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1669098287820816
    2. ' d' → logprob: -2.04190993309021
    3. '#' → logprob: -4.166909694671631
    4. ' #' → logprob: -5.666909694671631
    5. '"' → logprob: -6.291909694671631
    6. ' ' → logprob: -7.041909694671631
    7. ' "' → logprob: -7.291909694671631
    8. ' and' → logprob: -7.791909694671631
    9. ''' → logprob: -8.541910171508789
    10. ' '' → logprob: -8.666910171508789

Token 602: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9000253081321716
    2. ' =' → logprob: -2.0250253677368164
    3. ':' → logprob: -3.0250253677368164
    4. '[' → logprob: -3.1500253677368164
    5. ')' → logprob: -3.4000253677368164
    6. ',' → logprob: -3.5250253677368164
    7. 'for' → logprob: -3.5250253677368164
    8. '=' → logprob: -3.6500253677368164
    9. '[c' → logprob: -3.6500253677368164
    10. 's' → logprob: -3.6500253677368164

Token 603: ' order' (ID: 2569)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1660642623901367
    2. 'graph' → logprob: -1.4160642623901367
    3. 'edges' → logprob: -2.2910642623901367
    4. 'dist' → logprob: -2.4160642623901367
    5. 'the' → logprob: -2.5410642623901367
    6. 'a' → logprob: -3.0410642623901367
    7. 'p' → logprob: -3.6660642623901367
    8. 'd' → logprob: -3.6660642623901367
    9. '#' → logprob: -4.541064262390137
    10. 'short' → logprob: -4.791064262390137

Token 604: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8295709490776062
    2. ':' → logprob: -2.579571008682251
    3. ' for' → logprob: -2.579571008682251
    4. '
' → logprob: -2.579571008682251
    5. 'def' → logprob: -3.204571008682251
    6. ' =' → logprob: -3.329571008682251
    7. '_' → logprob: -3.454571008682251
    8. ':
' → logprob: -3.454571008682251
    9. ',' → logprob: -3.579571008682251
    10. ' if' → logprob: -3.829571008682251

Token 605: ' segment' (ID: 14806)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5732173919677734
    2. ' dist' → logprob: -1.3232173919677734
    3. ' passing' → logprob: -3.1982173919677734
    4. 'passing' → logprob: -3.1982173919677734
    5. 'graph' → logprob: -3.9482173919677734
    6. 'c' → logprob: -4.073217391967773
    7. ' graph' → logprob: -4.698217391967773
    8. ' c' → logprob: -4.698217391967773
    9. '(dist' → logprob: -4.823217391967773
    10. 'd' → logprob: -4.823217391967773

Token 606: ' c' (ID: 274)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.1778751611709595
    2. 'from' → logprob: -2.17787504196167
    3. '(c' → logprob: -2.30287504196167
    4. '_c' → logprob: -2.42787504196167
    5. 'c' → logprob: -2.67787504196167
    6. '"' → logprob: -2.92787504196167
    7. '[' → logprob: -3.30287504196167
    8. '_' → logprob: -3.92787504196167
    9. 'between' → logprob: -3.92787504196167
    10. ' between' → logprob: -4.05287504196167

Token 607: '-d' (ID: 2469)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.256987988948822
    2. '"-' → logprob: -2.881988048553467
    3. ',' → logprob: -3.131988048553467
    4. ')' → logprob: -3.256988048553467
    5. '==' → logprob: -4.631988048553467
    6. ' -' → logprob: -4.631988048553467
    7. ''-' → logprob: -4.631988048553467
    8. '"' → logprob: -5.006988048553467
    9. '-d' → logprob: -5.131988048553467
    10. '<|end|>' → logprob: -5.381988048553467

Token 608: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.072353482246399
    2. '#' → logprob: -1.822353482246399
    3. '_' → logprob: -2.1973533630371094
    4. ')' → logprob: -2.8223533630371094
    5. ':' → logprob: -3.1973533630371094
    6. ',' → logprob: -3.3223533630371094
    7. ' is' → logprob: -3.4473533630371094
    8. '
' → logprob: -3.5723533630371094
    9. 's' → logprob: -3.9473533630371094
    10. ']' → logprob: -3.9473533630371094

Token 609: ' shortest' (ID: 70564)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.41505512595176697
    2. ' a' → logprob: -2.0400550365448
    3. 'an' → logprob: -2.4150550365448
    4. 'in' → logprob: -2.6650550365448
    5. ' an' → logprob: -4.665055274963379
    6. ' shortest' → logprob: -5.165055274963379
    7. 'short' → logprob: -5.165055274963379
    8. '"' → logprob: -5.290055274963379
    9. ' in' → logprob: -5.415055274963379
    10. '```' → logprob: -5.540055274963379

Token 610: ' path' (ID: 3104)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028157353401184082
    2. ' for' → logprob: -4.6531572341918945
    3. '
' → logprob: -5.2781572341918945
    4. 'def' → logprob: -5.7781572341918945
    5. 'dist' → logprob: -6.1531572341918945
    6. 'answers' → logprob: -6.6531572341918945
    7. '#' → logprob: -6.7781572341918945
    8. 'answer' → logprob: -6.9031572341918945
    9. '```' → logprob: -7.0281572341918945
    10. 'results' → logprob: -7.4031572341918945

Token 611: ' between' (ID: 2870)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02767474390566349
    2. 'answers' → logprob: -5.277674674987793
    3. 'def' → logprob: -5.527674674987793
    4. '#' → logprob: -5.652674674987793
    5. ' for' → logprob: -5.652674674987793
    6. 'results' → logprob: -5.902674674987793
    7. 'dist' → logprob: -6.402674674987793
    8. 'res' → logprob: -6.527674674987793
    9. 'answer' → logprob: -6.652674674987793
    10. '
' → logprob: -6.777674674987793

Token 612: ' c' (ID: 274)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8316622972488403
    2. 'c' → logprob: -1.3316622972488403
    3. '"' → logprob: -2.706662178039551
    4. 'd' → logprob: -2.831662178039551
    5. '(c' → logprob: -3.081662178039551
    6. '<|end|>' → logprob: -3.956662178039551
    7. ')' → logprob: -4.081662178039551
    8. ' (' → logprob: -4.081662178039551
    9. ' c' → logprob: -4.456662178039551
    10. '_' → logprob: -4.456662178039551

Token 613: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7358407974243164
    2. ' =' → logprob: -1.6108407974243164
    3. '#' → logprob: -3.1108407974243164
    4. '=' → logprob: -3.1108407974243164
    5. '_' → logprob: -3.3608407974243164
    6. 'def' → logprob: -3.3608407974243164
    7. ' for' → logprob: -3.4858407974243164
    8. ':' → logprob: -3.6108407974243164
    9. 's' → logprob: -3.6108407974243164
    10. '
' → logprob: -4.110840797424316

Token 614: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.011048882268369198
    2. ' d' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.386049270629883
    4. ' ' → logprob: -16.511049270629883
    5. 'space' → logprob: -16.886049270629883
    6. ''' → logprob: -17.011049270629883
    7. '_d' → logprob: -17.136049270629883
    8. ',d' → logprob: -17.761049270629883
    9. '```' → logprob: -18.011049270629883
    10. '  
' → logprob: -18.136049270629883

Token 615: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02973613701760769
    2. 'def' → logprob: -4.904736042022705
    3. '#' → logprob: -5.154736042022705
    4. ' for' → logprob: -5.279736042022705
    5. 'dist' → logprob: -6.154736042022705
    6. 'answers' → logprob: -6.154736042022705
    7. '
' → logprob: -6.654736042022705
    8. 'res' → logprob: -7.279736042022705
    9. 'ans' → logprob: -7.279736042022705
    10. 'answer' → logprob: -7.404736042022705

Token 616: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025876158848404884
    2. '#' → logprob: -5.150876045227051
    3. 'if' → logprob: -5.150876045227051
    4. ' for' → logprob: -5.400876045227051
    5. 'dist' → logprob: -5.650876045227051
    6. 'ans' → logprob: -6.275876045227051
    7. 'def' → logprob: -6.775876045227051
    8. 'res' → logprob: -7.275876045227051
    9. 'answers' → logprob: -7.775876045227051
    10. 'answer' → logprob: -7.900876045227051

Token 617: ' Check' (ID: 6208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18735966086387634
    2. 'dist' → logprob: -2.687359571456909
    3. 'for' → logprob: -3.187359571456909
    4. ' if' → logprob: -3.687359571456909
    5. '#' → logprob: -4.437359809875488
    6. 'ans' → logprob: -5.437359809875488
    7. ' dist' → logprob: -5.812359809875488
    8. ' for' → logprob: -5.937359809875488
    9. 'def' → logprob: -6.187359809875488
    10. '```' → logprob: -6.187359809875488

Token 618: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0034124851226807
    2. 'for' → logprob: -1.1284124851226807
    3. 'if' → logprob: -1.2534124851226807
    4. '(dist' → logprob: -5.003412246704102
    5. '   ' → logprob: -5.253412246704102
    6. 'abs' → logprob: -5.378412246704102
    7. 'all' → logprob: -5.628412246704102
    8. ' dist' → logprob: -7.003412246704102
    9. ' if' → logprob: -7.003412246704102
    10. ' for' → logprob: -7.128412246704102

Token 619: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00714772567152977
    2. '_c' → logprob: -5.382147789001465
    3. 'a' → logprob: -6.757147789001465
    4. '_' → logprob: -7.757147789001465
    5. 's' → logprob: -8.882147789001465
    6. '_queries' → logprob: -9.132147789001465
    7. 'c' → logprob: -9.382147789001465
    8. 'queries' → logprob: -9.757147789001465
    9. 'from' → logprob: -9.757147789001465
    10. 'dist' → logprob: -9.882147789001465

Token 620: '[b' (ID: 40800)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.07963962852954865
    2. '_a' → logprob: -3.2046396732330322
    3. '_c' → logprob: -3.8296396732330322
    4. '[' → logprob: -5.454639434814453
    5. '[b' → logprob: -5.704639434814453
    6. '[a' → logprob: -5.954639434814453
    7. 'a' → logprob: -7.454639434814453
    8. '_b' → logprob: -7.704639434814453
    9. '```' → logprob: -7.704639434814453
    10. 'c' → logprob: -7.829639434814453

Token 621: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02018258348107338
    2. ']==' → logprob: -4.5201826095581055
    3. '[c' → logprob: -4.7701826095581055
    4. ' ==' → logprob: -8.395182609558105
    5. '==' → logprob: -9.145182609558105
    6. ' ]' → logprob: -9.645182609558105
    7. '```' → logprob: -9.770182609558105
    8. '[' → logprob: -10.395182609558105
    9. '   ' → logprob: -10.770182609558105
    10. '][' → logprob: -11.145182609558105

Token 622: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7579159736633301
    2. '==' → logprob: -1.75791597366333
    3. '[c' → logprob: -2.13291597366333
    4. ' >=' → logprob: -3.13291597366333
    5. 'if' → logprob: -3.38291597366333
    6. '[' → logprob: -3.75791597366333
    7. '>=' → logprob: -3.88291597366333
    8. ')' → logprob: -4.00791597366333
    9. 'for' → logprob: -4.13291597366333
    10. ',' → logprob: -4.25791597366333

Token 623: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0004309076175559312
    2. ' dist' → logprob: -7.750431060791016
    3. '(dist' → logprob: -16.375431060791016
    4. '   ' → logprob: -16.500431060791016
    5. '	dist' → logprob: -18.250431060791016
    6. ' ' → logprob: -19.250431060791016
    7. 'Dist' → logprob: -20.125431060791016
    8. '```' → logprob: -20.125431060791016
    9. ' ' → logprob: -20.250431060791016
    10. 'd' → logprob: -20.500431060791016

Token 624: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -3.774276774493046e-05
    2. 'a' → logprob: -10.750038146972656
    3. '_c' → logprob: -11.250038146972656
    4. '[a' → logprob: -13.750038146972656
    5. '_' → logprob: -14.000038146972656
    6. '```' → logprob: -14.250038146972656
    7. '\' → logprob: -15.875038146972656
    8. '[' → logprob: -16.125038146972656
    9. '[_' → logprob: -16.125038146972656
    10. '[c' → logprob: -16.125038146972656

Token 625: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.00601743720471859
    2. 'c' → logprob: -5.131017208099365
    3. '[' → logprob: -9.506017684936523
    4. '```' → logprob: -12.256017684936523
    5. '[a' → logprob: -13.006017684936523
    6. ' c' → logprob: -13.256017684936523
    7. '	c' → logprob: -14.131017684936523
    8. '
' → logprob: -14.506017684936523
    9. '   ' → logprob: -14.881017684936523
    10. ']' → logprob: -14.881017684936523

Token 626: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3878019452095032
    2. '+' → logprob: -1.6378018856048584
    3. ' +' → logprob: -2.5128018856048584
    4. ']+' → logprob: -3.1378018856048584
    5. ')' → logprob: -7.0128021240234375
    6. '[' → logprob: -7.3878021240234375
    7. '+c' → logprob: -7.6378021240234375
    8. '[c' → logprob: -8.512802124023438
    9. ' ]' → logprob: -9.387802124023438
    10. ')+' → logprob: -9.637802124023438

Token 627: ' +' (ID: 659)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.528657853603363
    2. 'and' → logprob: -1.4036579132080078
    3. ' +' → logprob: -2.028657913208008
    4. '+' → logprob: -3.403657913208008
    5. ')' → logprob: -10.153657913208008
    6. '   ' → logprob: -10.653657913208008
    7. ' or' → logprob: -11.028657913208008
    8. 'if' → logprob: -11.278657913208008
    9. '```' → logprob: -11.278657913208008
    10. ' ' → logprob: -11.778657913208008

Token 628: ' dist' (ID: 3601)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.19908879697322845
    2. 'dist' → logprob: -1.8240888118743896
    3. '(graph' → logprob: -4.6990885734558105
    4. 'S' → logprob: -6.4490885734558105
    5. '(dist' → logprob: -6.4490885734558105
    6. '1' → logprob: -6.5740885734558105
    7. '#' → logprob: -6.5740885734558105
    8. 'w' → logprob: -6.6990885734558105
    9. ' graph' → logprob: -7.8240885734558105
    10. '(' → logprob: -7.8240885734558105

Token 629: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.04457775130867958
    2. '[c' → logprob: -3.6695778369903564
    3. '_cd' → logprob: -4.919577598571777
    4. 'c' → logprob: -5.419577598571777
    5. '_a' → logprob: -5.419577598571777
    6. 'cd' → logprob: -6.669577598571777
    7. '_d' → logprob: -9.419577598571777
    8. '(c' → logprob: -9.544577598571777
    9. '_[' → logprob: -9.544577598571777
    10. '_between' → logprob: -9.669577598571777

Token 630: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.56706702709198
    2. 'b' → logprob: -1.81706702709198
    3. 'd' → logprob: -1.94206702709198
    4. 'a' → logprob: -3.0670671463012695
    5. '[b' → logprob: -3.1920671463012695
    6. '_b' → logprob: -4.1920671463012695
    7. '[a' → logprob: -4.5670671463012695
    8. '_a' → logprob: -4.9420671463012695
    9. '_d' → logprob: -6.1920671463012695
    10. '[c' → logprob: -6.4420671463012695

Token 631: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.509708285331726
    2. ' and' → logprob: -1.634708285331726
    3. '[' → logprob: -1.884708285331726
    4. ' +' → logprob: -2.0097084045410156
    5. ']' → logprob: -2.6347084045410156
    6. '<|end|>' → logprob: -2.8847084045410156
    7. ')' → logprob: -3.0097084045410156
    8. '[c' → logprob: -3.3847084045410156
    9. '<|end|>' → logprob: -4.134708404541016
    10. 'and' → logprob: -4.384708404541016

Token 632: ' +' (ID: 659)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16007116436958313
    2. 'and' → logprob: -2.6600711345672607
    3. 'for' → logprob: -3.5350711345672607
    4. 'if' → logprob: -4.41007137298584
    5. ' for' → logprob: -5.03507137298584
    6. ' if' → logprob: -5.28507137298584
    7. ' ' → logprob: -5.41007137298584
    8. '   ' → logprob: -5.91007137298584
    9. '[' → logprob: -5.91007137298584
    10. ':' → logprob: -5.91007137298584

Token 633: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08920934796333313
    2. ' dist' → logprob: -2.4642093181610107
    3. 'w' → logprob: -8.71420955657959
    4. '(dist' → logprob: -10.08920955657959
    5. ' w' → logprob: -11.21420955657959
    6. '`' → logprob: -11.21420955657959
    7. '```' → logprob: -11.33920955657959
    8. '   ' → logprob: -12.83920955657959
    9. '
' → logprob: -12.83920955657959
    10. '	dist' → logprob: -12.96420955657959

Token 634: '_d' (ID: 1565)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.08084069937467575
    2. '_d' → logprob: -2.580840587615967
    3. 'b' → logprob: -6.330840587615967
    4. 'd' → logprob: -9.080841064453125
    5. '_c' → logprob: -10.580841064453125
    6. '[b' → logprob: -11.080841064453125
    7. '_a' → logprob: -11.705841064453125
    8. '[d' → logprob: -12.455841064453125
    9. '```' → logprob: -13.705841064453125
    10. 'a' → logprob: -15.580841064453125

Token 635: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.6731051802635193
    2. 'b' → logprob: -0.7981051802635193
    3. '_b' → logprob: -3.798105239868164
    4. '[c' → logprob: -4.298105239868164
    5. '[' → logprob: -7.298105239868164
    6. ')' → logprob: -7.548105239868164
    7. '#' → logprob: -7.548105239868164
    8. ']' → logprob: -7.923105239868164
    9. '```' → logprob: -8.298105239868164
    10. '[d' → logprob: -8.423105239868164

Token 636: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8776353001594543
    2. ' and' → logprob: -1.0026352405548096
    3. ':' → logprob: -2.3776352405548096
    4. ':
' → logprob: -3.5026352405548096
    5. ']:' → logprob: -3.8776352405548096
    6. 'and' → logprob: -4.127635478973389
    7. '#' → logprob: -4.127635478973389
    8. ']:
' → logprob: -4.377635478973389
    9. '
' → logprob: -4.877635478973389
    10. 'if' → logprob: -5.752635478973389

Token 637: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7779154777526855
    2. 'for' → logprob: -0.7779154777526855
    3. 'if' → logprob: -3.6529154777526855
    4. '#' → logprob: -3.9029154777526855
    5. ' if' → logprob: -4.1529154777526855
    6. '
' → logprob: -5.6529154777526855
    7. 'def' → logprob: -6.0279154777526855
    8. ' 
' → logprob: -6.1529154777526855
    9. ' and' → logprob: -6.6529154777526855
    10. ' #' → logprob: -6.7779154777526855

Token 638: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42541083693504333
    2. 'dist' → logprob: -1.4254108667373657
    3. 'if' → logprob: -2.800410747528076
    4. ' for' → logprob: -4.175410747528076
    5. '#' → logprob: -5.050410747528076
    6. 'all' → logprob: -5.300410747528076
    7. 'print' → logprob: -6.175410747528076
    8. ' dist' → logprob: -6.300410747528076
    9. 'def' → logprob: -6.300410747528076
    10. ' if' → logprob: -6.300410747528076

Token 639: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5995491743087769
    2. 'if' → logprob: -1.2245491743087769
    3. 'dist' → logprob: -2.4745492935180664
    4. ' if' → logprob: -2.9745492935180664
    5. 'for' → logprob: -4.224549293518066
    6. ' dist' → logprob: -6.099549293518066
    7. ' #' → logprob: -6.099549293518066
    8. ' for' → logprob: -6.599549293518066
    9. '<|end|>' → logprob: -8.599549293518066
    10. ' (' → logprob: -8.974549293518066

Token 640: ' dist' (ID: 3601)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6857993602752686
    2. 'if' → logprob: -0.9357993602752686
    3. 'for' → logprob: -2.8107993602752686
    4. 'dist' → logprob: -3.6857993602752686
    5. ' if' → logprob: -4.435799598693848
    6. ' for' → logprob: -6.560799598693848
    7. ' #' → logprob: -6.810799598693848
    8. 'continue' → logprob: -7.060799598693848
    9. 'print' → logprob: -7.685799598693848
    10. ' dist' → logprob: -7.935799598693848

Token 641: '_c' (ID: 1303)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.028733205050230026
    2. '_c' → logprob: -3.653733253479004
    3. '_b' → logprob: -6.903733253479004
    4. 'a' → logprob: -7.278733253479004
    5. '_d' → logprob: -7.778733253479004
    6. '_' → logprob: -9.653733253479004
    7. '[c' → logprob: -9.903733253479004
    8. '[a' → logprob: -10.028733253479004
    9. 'c' → logprob: -10.528733253479004
    10. 'd' → logprob: -10.778733253479004

Token 642: '[d' (ID: 48377)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -1.5367217063903809
    2. '[v' → logprob: -1.6617217063903809
    3. '[c' → logprob: -1.9117217063903809
    4. '[u' → logprob: -1.9117217063903809
    5. '[d' → logprob: -1.9117217063903809
    6. '[a' → logprob: -2.161721706390381
    7. 'a' → logprob: -4.286721706390381
    8. '_c' → logprob: -5.036721706390381
    9. '_b' → logprob: -5.411721706390381
    10. '[b' → logprob: -5.536721706390381

Token 643: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0041274381801486015
    2. ']==' → logprob: -5.629127502441406
    3. ']+' → logprob: -8.379127502441406
    4. '[c' → logprob: -9.004127502441406
    5. '[d' → logprob: -9.254127502441406
    6. '][' → logprob: -10.254127502441406
    7. '==' → logprob: -11.129127502441406
    8. '[u' → logprob: -12.254127502441406
    9. '[]' → logprob: -12.629127502441406
    10. '```' → logprob: -12.754127502441406

Token 644: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.44251418113708496
    2. '==' → logprob: -1.942514181137085
    3. '<|end|>' → logprob: -2.817514181137085
    4. ']' → logprob: -3.442514181137085
    5. ')' → logprob: -3.692514181137085
    6. ' =' → logprob: -4.067514419555664
    7. '#' → logprob: -4.067514419555664
    8. ',' → logprob: -4.442514419555664
    9. ']==' → logprob: -4.442514419555664
    10. '[v' → logprob: -5.192514419555664

Token 645: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0003154432924930006
    2. ' dist' → logprob: -8.12531566619873
    3. 'graph' → logprob: -11.62531566619873
    4. '(dist' → logprob: -12.12531566619873
    5. '	dist' → logprob: -13.62531566619873
    6. 'float' → logprob: -14.37531566619873
    7. 'w' → logprob: -14.50031566619873
    8. '   ' → logprob: -14.62531566619873
    9. '```' → logprob: -14.87531566619873
    10. 'd' → logprob: -15.00031566619873

Token 646: '_d' (ID: 1565)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.011606751941144466
    2. '[c' → logprob: -5.011606693267822
    3. '_d' → logprob: -5.886606693267822
    4. 'dist' → logprob: -7.261606693267822
    5. '[d' → logprob: -7.386606693267822
    6. 'd' → logprob: -7.636606693267822
    7. 'c' → logprob: -8.13660717010498
    8. '[' → logprob: -12.38660717010498
    9. '[v' → logprob: -15.26160717010498
    10. '_dist' → logprob: -15.63660717010498

Token 647: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.005624665878713131
    2. 'c' → logprob: -5.630624771118164
    3. '[d' → logprob: -7.505624771118164
    4. '```' → logprob: -8.130624771118164
    5. '<|end|>' → logprob: -8.255624771118164
    6. ']' → logprob: -8.255624771118164
    7. ')' → logprob: -8.380624771118164
    8. '[' → logprob: -9.130624771118164
    9. 'd' → logprob: -10.005624771118164
    10. '_c' → logprob: -10.380624771118164

Token 648: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07191716879606247
    2. ')' → logprob: -2.9469170570373535
    3. '])' → logprob: -5.4469170570373535
    4. ']:' → logprob: -5.6969170570373535
    5. ']
' → logprob: -6.4469170570373535
    6. '):' → logprob: -6.5719170570373535
    7. ']:
' → logprob: -6.5719170570373535
    8. ':' → logprob: -6.6969170570373535
    9. '):
' → logprob: -7.4469170570373535
    10. '']' → logprob: -7.4469170570373535

Token 649: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0022382817696779966
    2. ' for' → logprob: -6.6272382736206055
    3. 'def' → logprob: -8.627238273620605
    4. '```' → logprob: -8.627238273620605
    5. 'dist' → logprob: -9.002238273620605
    6. 'import' → logprob: -9.127238273620605
    7. 'answers' → logprob: -9.127238273620605
    8. 'answer' → logprob: -9.877238273620605
    9. 'result' → logprob: -10.502238273620605
    10. 'from' → logprob: -10.502238273620605

Token 650: ' Since' (ID: 12265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029511746019124985
    2. 'dist' → logprob: -4.77951192855835
    3. 'from' → logprob: -5.40451192855835
    4. 'ans' → logprob: -5.52951192855835
    5. 'answers' → logprob: -5.65451192855835
    6. 'answer' → logprob: -6.02951192855835
    7. '#' → logprob: -6.52951192855835
    8. 'res' → logprob: -6.90451192855835
    9. 'results' → logprob: -6.90451192855835
    10. 'def' → logprob: -7.15451192855835

Token 651: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.02446036785840988
    2. 'graph' → logprob: -4.399460315704346
    3. 'we' → logprob: -5.774460315704346
    4. 'the' → logprob: -5.774460315704346
    5. ' dist' → logprob: -6.524460315704346
    6. 'c' → logprob: -6.524460315704346
    7. 'for' → logprob: -7.149460315704346
    8. 'all' → logprob: -7.274460315704346
    9. 'from' → logprob: -8.899460792541504
    10. 'S' → logprob: -8.899460792541504

Token 652: '_c' (ID: 1303)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.4059898257255554
    2. '_c' → logprob: -1.1559898853302002
    3. '_' → logprob: -4.655989646911621
    4. 'a' → logprob: -5.780989646911621
    5. 'from' → logprob: -6.030989646911621
    6. '_between' → logprob: -6.530989646911621
    7. 's' → logprob: -7.155989646911621
    8. '_from' → logprob: -7.530989646911621
    9. 'c' → logprob: -7.780989646911621
    10. 'between' → logprob: -8.655989646911621

Token 653: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.13733062148094177
    2. '_a' → logprob: -3.7623305320739746
    3. '[c' → logprob: -4.137330532073975
    4. '[a' → logprob: -4.262330532073975
    5. 'd' → logprob: -4.387330532073975
    6. '_d' → logprob: -4.637330532073975
    7. '[' → logprob: -4.637330532073975
    8. ']' → logprob: -4.762330532073975
    9. 'from' → logprob: -5.137330532073975
    10. 'a' → logprob: -5.262330532073975

Token 654: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02925720065832138
    2. '[d' → logprob: -5.154257297515869
    3. '']' → logprob: -5.279257297515869
    4. ']==' → logprob: -5.404257297515869
    5. '[v' → logprob: -5.404257297515869
    6. 'd' → logprob: -6.279257297515869
    7. '[c' → logprob: -6.279257297515869
    8. 's' → logprob: -6.904257297515869
    9. '[u' → logprob: -7.404257297515869
    10. '==' → logprob: -7.779257297515869

Token 655: ' symmetry' (ID: 90882)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9395931363105774
    2. 's' → logprob: -2.0645930767059326
    3. ' ==' → logprob: -2.0645930767059326
    4. ' is' → logprob: -2.4395930767059326
    5. '==' → logprob: -2.5645930767059326
    6. '=' → logprob: -3.3145930767059326
    7. '#' → logprob: -3.4395930767059326
    8. ',' → logprob: -3.8145930767059326
    9. ' and' → logprob: -4.064593315124512
    10. ' can' → logprob: -4.314593315124512

Token 656: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.5750844478607178
    2. ':' → logprob: -1.9500844478607178
    3. '=' → logprob: -2.0750844478607178
    4. 's' → logprob: -2.2000844478607178
    5. '#' → logprob: -2.5750844478607178
    6. '==' → logprob: -2.8250844478607178
    7. ',' → logprob: -2.9500844478607178
    8. ']' → logprob: -3.0750844478607178
    9. ' ==' → logprob: -3.0750844478607178
    10. ' is' → logprob: -3.9500844478607178

Token 657: ' and' (ID: 326)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9219676852226257
    2. 'for' → logprob: -1.1719677448272705
    3. '#' → logprob: -2.5469677448272705
    4. ' if' → logprob: -2.7969677448272705
    5. ')' → logprob: -3.7969677448272705
    6. 'dist' → logprob: -3.9219677448272705
    7. ' ' → logprob: -4.046967506408691
    8. '<|end|>' → logprob: -4.296967506408691
    9. 'def' → logprob: -4.421967506408691
    10. ' #' → logprob: -4.421967506408691

Token 658: ' und' (ID: 844)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0913059189915657
    2. '(dist' → logprob: -2.84130597114563
    3. ' dist' → logprob: -4.091305732727051
    4. '#' → logprob: -5.591305732727051
    5. ' (' → logprob: -6.591305732727051
    6. 'd' → logprob: -6.716305732727051
    7. 'all' → logprob: -6.966305732727051
    8. 'for' → logprob: -7.716305732727051
    9. '(' → logprob: -7.716305732727051
    10. 'graph' → logprob: -7.841305732727051

Token 659: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -0.059257060289382935
    2. 'er' → logprob: -3.0592570304870605
    3. '_' → logprob: -5.0592570304870605
    4. '_c' → logprob: -6.8092570304870605
    5. 'ers' → logprob: -6.9342570304870605
    6. 'ist' → logprob: -7.4342570304870605
    7. '```' → logprob: -8.059257507324219
    8. 'der' → logprob: -9.059257507324219
    9. '#' → logprob: -9.059257507324219
    10. 'graph' → logprob: -9.059257507324219

Token 660: ' graph' (ID: 7465)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1901493072509766
    2. 'graph' → logprob: -1.5651493072509766
    3. '_' → logprob: -2.1901493072509766
    4. ' graph' → logprob: -2.5651493072509766
    5. ' =' → logprob: -3.0651493072509766
    6. '_graph' → logprob: -3.3151493072509766
    7. '#' → logprob: -3.4401493072509766
    8. '
' → logprob: -3.5651493072509766
    9. ']' → logprob: -3.6901493072509766
    10. '_edges' → logprob: -3.6901493072509766

Token 661: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.039284348487854
    2. ':' → logprob: -1.164284348487854
    3. 'def' → logprob: -1.664284348487854
    4. ':
' → logprob: -3.5392842292785645
    5. 'dist' → logprob: -3.6642842292785645
    6. '
' → logprob: -4.0392842292785645
    7. '#' → logprob: -4.1642842292785645
    8. ',' → logprob: -4.1642842292785645
    9. ' for' → logprob: -4.7892842292785645
    10. '):' → logprob: -4.9142842292785645

Token 662: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000194361709873192
    2. 'answers' → logprob: -9.625194549560547
    3. 'def' → logprob: -10.500194549560547
    4. 'results' → logprob: -10.625194549560547
    5. 'answer' → logprob: -10.875194549560547
    6. 'from' → logprob: -11.625194549560547
    7. 'res' → logprob: -11.625194549560547
    8. ' for' → logprob: -11.750194549560547
    9. 'ans' → logprob: -11.875194549560547
    10. 'dist' → logprob: -12.000194549560547

Token 663: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005114088766276836
    2. 'from' → logprob: -6.8801140785217285
    3. 'dist' → logprob: -7.2551140785217285
    4. 'edge' → logprob: -7.3801140785217285
    5. 'answers' → logprob: -7.3801140785217285
    6. '#' → logprob: -7.7551140785217285
    7. 'answer' → logprob: -8.255114555358887
    8. 'results' → logprob: -8.380114555358887
    9. 'ans' → logprob: -8.505114555358887
    10. 'import' → logprob: -8.630114555358887

Token 664: ' get' (ID: 717)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.21596629917621613
    2. 'handle' → logprob: -2.34096622467041
    3. 'process' → logprob: -2.71596622467041
    4. 'check' → logprob: -4.46596622467041
    5. 'solve' → logprob: -4.71596622467041
    6. 'pre' → logprob: -5.34096622467041
    7. 'avoid' → logprob: -6.34096622467041
    8. ' answer' → logprob: -6.84096622467041
    9. 'for' → logprob: -7.09096622467041
    10. 'complete' → logprob: -7.09096622467041

Token 665: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06875034421682358
    2. 'the' → logprob: -3.5687503814697266
    3. 'each' → logprob: -3.6937503814697266
    4. ' dist' → logprob: -5.568750381469727
    5. 'answers' → logprob: -5.568750381469727
    6. 'c' → logprob: -7.068750381469727
    7. 'answer' → logprob: -7.568750381469727
    8. 'edges' → logprob: -7.693750381469727
    9. ' each' → logprob: -7.693750381469727
    10. ' the' → logprob: -7.818750381469727

Token 666: '_c' (ID: 1303)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1236265897750854
    2. '_c' → logprob: -1.1236265897750854
    3. '_a' → logprob: -1.7486265897750854
    4. '_' → logprob: -2.998626708984375
    5. 'from' → logprob: -3.373626708984375
    6. 'a' → logprob: -3.748626708984375
    7. '_between' → logprob: -3.748626708984375
    8. 'between' → logprob: -4.123626708984375
    9. 'c' → logprob: -5.123626708984375
    10. '_u' → logprob: -5.248626708984375

Token 667: '[d' (ID: 48377)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 668: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5735370516777039
    2. '],' → logprob: -1.1985371112823486
    3. ',' → logprob: -2.5735371112823486
    4. '#' → logprob: -4.3235368728637695
    5. ''],' → logprob: -4.5735368728637695
    6. '[' → logprob: -5.0735368728637695
    7. 's' → logprob: -5.1985368728637695
    8. '']' → logprob: -5.9485368728637695
    9. '),' → logprob: -6.3235368728637695
    10. ':' → logprob: -6.5735368728637695

Token 669: ' pre' (ID: 876)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46036961674690247
    2. ' for' → logprob: -1.58536958694458
    3. '#' → logprob: -1.83536958694458
    4. 'import' → logprob: -7.08536958694458
    5. 'if' → logprob: -7.08536958694458
    6. ' #' → logprob: -7.58536958694458
    7. 'dist' → logprob: -7.58536958694458
    8. 'def' → logprob: -7.71036958694458
    9. 'we' → logprob: -8.460370063781738
    10. 'answer' → logprob: -8.960370063781738

Token 670: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.011828836984932423
    2. 'sum' → logprob: -5.136828899383545
    3. 'dict' → logprob: -6.636828899383545
    4. 'process' → logprob: -7.011828899383545
    5. 'computed' → logprob: -7.136828899383545
    6. '#' → logprob: -7.261828899383545
    7. 'pare' → logprob: -7.261828899383545
    8. 'dist' → logprob: -7.886828899383545
    9. 'fetch' → logprob: -9.261828422546387
    10. 'import' → logprob: -9.261828422546387

Token 671: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.14869627356529236
    2. '#' → logprob: -2.773696184158325
    3. 'from' → logprob: -3.773696184158325
    4. 'all' → logprob: -3.898696184158325
    5. 'parent' → logprob: -4.398696422576904
    6. 'edges' → logprob: -5.773696422576904
    7. 'next' → logprob: -6.023696422576904
    8. 'dp' → logprob: -6.898696422576904
    9. 'for' → logprob: -7.023696422576904
    10. 'prev' → logprob: -7.148696422576904

Token 672: ' from' (ID: 591)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6535771489143372
    2. '_a' → logprob: -1.5285770893096924
    3. '_c' → logprob: -2.1535770893096924
    4. 'from' → logprob: -2.6535770893096924
    5. 'a' → logprob: -3.4035770893096924
    6. '_from' → logprob: -4.6535773277282715
    7. '_' → logprob: -5.0285773277282715
    8. ' =' → logprob: -5.2785773277282715
    9. '_s' → logprob: -5.2785773277282715
    10. 'c' → logprob: -5.7785773277282715

Token 673: ' a' (ID: 261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2740093469619751
    2. 'a' → logprob: -1.899009346961975
    3. 'all' → logprob: -3.1490092277526855
    4. 'S' → logprob: -3.3990092277526855
    5. 'each' → logprob: -4.5240092277526855
    6. '#' → logprob: -7.1490092277526855
    7. 'None' → logprob: -7.5240092277526855
    8. 'b' → logprob: -8.774009704589844
    9. 'the' → logprob: -8.774009704589844
    10. 'u' → logprob: -9.399009704589844

Token 674: ' and' (ID: 326)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017451642081141472
    2. ' for' → logprob: -5.392451763153076
    3. 'dist' → logprob: -5.517451763153076
    4. 'from' → logprob: -5.767451763153076
    5. '#' → logprob: -6.392451763153076
    6. 'def' → logprob: -6.892451763153076
    7. 'c' → logprob: -7.892451763153076
    8. 'answer' → logprob: -7.892451763153076
    9. '```' → logprob: -8.142451286315918
    10. 'and' → logprob: -8.267451286315918

Token 675: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.400689305039123e-05
    2. 'dist' → logprob: -10.000094413757324
    3. 'c' → logprob: -10.750094413757324
    4. 'd' → logprob: -11.625094413757324
    5. ' b' → logprob: -12.000094413757324
    6. '#' → logprob: -12.250094413757324
    7. 'S' → logprob: -12.750094413757324
    8. 'import' → logprob: -14.000094413757324
    9. 'from' → logprob: -14.375094413757324
    10. '```' → logprob: -14.500094413757324

Token 676: ' is' (ID: 382)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01122029684484005
    2. 'dist' → logprob: -5.261220455169678
    3. '#' → logprob: -6.761220455169678
    4. 'answers' → logprob: -6.886220455169678
    5. 'answer' → logprob: -7.011220455169678
    6. 'ans' → logprob: -7.386220455169678
    7. 'results' → logprob: -7.511220455169678
    8. 'def' → logprob: -8.01121997833252
    9. 'res' → logprob: -8.13621997833252
    10. 'from' → logprob: -8.38621997833252

Token 677: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.29780954122543335
    2. 'dist' → logprob: -2.672809600830078
    3. 'en' → logprob: -2.922809600830078
    4. 's' → logprob: -3.297809600830078
    5. 'None' → logprob: -3.672809600830078
    6. 'ins' → logprob: -3.797809600830078
    7. 'already' → logprob: -4.672809600830078
    8. '#' → logprob: -5.297809600830078
    9. 'def' → logprob: -5.547809600830078
    10. 'completed' → logprob: -5.672809600830078

Token 678: ' enough' (ID: 4951)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.03461311012506485
    2. 's' → logprob: -3.4096131324768066
    3. 'necessary' → logprob: -8.534612655639648
    4. 'possible' → logprob: -8.534612655639648
    5. 'needed' → logprob: -8.909612655639648
    6. ' enough' → logprob: -9.284612655639648
    7. 'necessarily' → logprob: -9.534612655639648
    8. 'available' → logprob: -10.159612655639648
    9. 'always' → logprob: -10.284612655639648
    10. 'gu' → logprob: -10.409612655639648

Token 679: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0814453735947609
    2. '#' → logprob: -3.0814454555511475
    3. 'answers' → logprob: -4.706445217132568
    4. 'def' → logprob: -5.081445217132568
    5. 'dist' → logprob: -5.081445217132568
    6. 'answer' → logprob: -5.956445217132568
    7. 'INF' → logprob: -6.206445217132568
    8. 'import' → logprob: -6.706445217132568
    9. 'ans' → logprob: -6.706445217132568
    10. ' for' → logprob: -7.206445217132568

Token 680: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043582648038864136
    2. '#' → logprob: -3.6685826778411865
    3. 'dist' → logprob: -4.793582439422607
    4. 'parent' → logprob: -5.168582439422607
    5. '```' → logprob: -7.543582439422607
    6. 'def' → logprob: -7.918582439422607
    7. 'answers' → logprob: -7.918582439422607
    8. 'from' → logprob: -8.418582916259766
    9. 'visited' → logprob: -8.668582916259766
    10. 'answer' → logprob: -8.793582916259766

Token 681: ' Alternative' (ID: 52728)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15900997817516327
    2. 'answers' → logprob: -3.4090099334716797
    3. 'answer' → logprob: -3.6590099334716797
    4. 'dist' → logprob: -4.03400993347168
    5. 'from' → logprob: -4.28400993347168
    6. 'results' → logprob: -4.40900993347168
    7. 'import' → logprob: -4.65900993347168
    8. 'res' → logprob: -4.90900993347168
    9. 'ans' → logprob: -5.03400993347168
    10. '#' → logprob: -5.28400993347168

Token 682: ' approach' (ID: 7139)
  Prédit: 'appro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'appro' → logprob: -1.2418086528778076
    2. '```' → logprob: -1.6168086528778076
    3. '#' → logprob: -1.8668086528778076
    4. 'import' → logprob: -2.7418086528778076
    5. 'dist' → logprob: -2.9918086528778076
    6. ':' → logprob: -3.2418086528778076
    7. 'code' → logprob: -3.2418086528778076
    8. '
' → logprob: -3.7418086528778076
    9. 'def' → logprob: -3.9918086528778076
    10. 'graph' → logprob: -4.116808891296387

Token 683: ':
' (ID: 734)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6980094313621521
    2. 'dist' → logprob: -1.5730094909667969
    3. 'parent' → logprob: -2.323009490966797
    4. 'import' → logprob: -2.948009490966797
    5. 'from' → logprob: -2.948009490966797
    6. 'visited' → logprob: -3.823009490966797
    7. 'uf' → logprob: -3.948009490966797
    8. 'edges' → logprob: -4.448009490966797
    9. '```' → logprob: -5.073009490966797
    10. 'max' → logprob: -5.448009490966797

Token 684: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16759802401065826
    2. 'from' → logprob: -2.667598009109497
    3. 'import' → logprob: -3.167598009109497
    4. 'parent' → logprob: -3.667598009109497
    5. 'dist' → logprob: -4.667598247528076
    6. 'uf' → logprob: -6.167598247528076
    7. 'visited' → logprob: -7.167598247528076
    8. 'parents' → logprob: -7.542598247528076
    9. 'mst' → logprob: -7.667598247528076
    10. 'def' → logprob: -7.792598247528076

Token 685: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18553665280342102
    2. 'parent' → logprob: -3.0605366230010986
    3. 'from' → logprob: -3.0605366230010986
    4. 'import' → logprob: -3.1855366230010986
    5. 'dist' → logprob: -4.310536861419678
    6. '```' → logprob: -5.310536861419678
    7. 'uf' → logprob: -5.435536861419678
    8. 'visited' → logprob: -5.810536861419678
    9. 'parents' → logprob: -6.435536861419678
    10. '"""
' → logprob: -7.185536861419678

Token 686: ' all' (ID: 722)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8697090148925781
    2. 'c' → logprob: -1.3697090148925781
    3. '_' → logprob: -2.619709014892578
    4. 'edge' → logprob: -2.994709014892578
    5. '_edge' → logprob: -3.119709014892578
    6. 'dist' → logprob: -3.369709014892578
    7. '(u' → logprob: -3.619709014892578
    8. 'each' → logprob: -4.119709014892578
    9. 'w' → logprob: -4.119709014892578
    10. '_c' → logprob: -4.619709014892578

Token 687: ' vertices' (ID: 38360)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.008933152072131634
    2. ' edges' → logprob: -5.008933067321777
    3. 'edge' → logprob: -6.883933067321777
    4. 'u' → logprob: -7.758933067321777
    5. 'queries' → logprob: -8.508933067321777
    6. '(u' → logprob: -8.758933067321777
    7. '(edges' → logprob: -9.258933067321777
    8. 'dist' → logprob: -10.383933067321777
    9. '
' → logprob: -10.633933067321777
    10. '(' → logprob: -10.633933067321777

Token 688: ',' (ID: 11)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.3109757900238037
    2. ',' → logprob: -1.4359757900238037
    3. 'for' → logprob: -2.1859757900238037
    4. 'in' → logprob: -2.5609757900238037
    5. '_,' → logprob: -3.4359757900238037
    6. ' in' → logprob: -3.5609757900238037
    7. ' =' → logprob: -3.5609757900238037
    8. 'dist' → logprob: -3.6859757900238037
    9. '#' → logprob: -3.8109757900238037
    10. 'visited' → logprob: -4.060976028442383

Token 689: ' pre' (ID: 876)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4214397668838501
    2. 'import' → logprob: -2.2964396476745605
    3. 'for' → logprob: -2.5464396476745605
    4. '#' → logprob: -2.7964396476745605
    5. 'parent' → logprob: -3.2964396476745605
    6. 'from' → logprob: -3.4214396476745605
    7. 'edges' → logprob: -4.2964396476745605
    8. 'visited' → logprob: -5.6714396476745605
    9. 'parents' → logprob: -5.6714396476745605
    10. 'graph' → logprob: -5.9214396476745605

Token 690: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0004869186959695071
    2. 'dist' → logprob: -8.375487327575684
    3. 'process' → logprob: -9.500487327575684
    4. 'pare' → logprob: -10.375487327575684
    5. 'd' → logprob: -10.500487327575684
    6. 'computed' → logprob: -10.750487327575684
    7. 'distance' → logprob: -10.875487327575684
    8. 'dict' → logprob: -10.875487327575684
    9. 'sum' → logprob: -11.375487327575684
    10. 'from' → logprob: -11.875487327575684

Token 691: ' dist' (ID: 3601)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.24304209649562836
    2. 'dist' → logprob: -1.9930421113967896
    3. 'par' → logprob: -4.1180419921875
    4. 'from' → logprob: -4.2430419921875
    5. 'import' → logprob: -4.3680419921875
    6. 'depth' → logprob: -4.6180419921875
    7. 'the' → logprob: -4.7430419921875
    8. '#' → logprob: -4.9930419921875
    9. '```' → logprob: -5.4930419921875
    10. 'parents' → logprob: -5.7430419921875

Token 692: ' from' (ID: 591)
  Prédit: '_from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_from' → logprob: -1.0118457078933716
    2. 'from' → logprob: -1.5118457078933716
    3. 'ances' → logprob: -2.136845588684082
    4. '_' → logprob: -2.261845588684082
    5. ' =' → logprob: -2.511845588684082
    6. '_a' → logprob: -3.136845588684082
    7. 's' → logprob: -4.386845588684082
    8. '=' → logprob: -4.386845588684082
    9. '_c' → logprob: -4.636845588684082
    10. 'anc' → logprob: -5.011845588684082

Token 693: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.010162001475691795
    2. '1' → logprob: -4.760161876678467
    3. 'each' → logprob: -7.010161876678467
    4. 'S' → logprob: -7.760161876678467
    5. 'all' → logprob: -9.760162353515625
    6. 'start' → logprob: -10.635162353515625
    7. 's' → logprob: -10.635162353515625
    8. '0' → logprob: -10.635162353515625
    9. 'both' → logprob: -10.635162353515625
    10. 'source' → logprob: -10.760162353515625

Token 694: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 695: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015909154899418354
    2. 'from' → logprob: -7.251590728759766
    3. ' b' → logprob: -7.626590728759766
    4. 'dist' → logprob: -8.001590728759766
    5. ' dist' → logprob: -10.501590728759766
    6. ' from' → logprob: -10.751590728759766
    7. '#' → logprob: -11.751590728759766
    8. 'for' → logprob: -14.126590728759766
    9. '```' → logprob: -15.376590728759766
    10. ' for' → logprob: -15.751590728759766

Token 696: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40867751836776733
    2. 'dist' → logprob: -2.033677577972412
    3. 'def' → logprob: -2.408677577972412
    4. '#' → logprob: -2.658677577972412
    5. 'parent' → logprob: -5.033677577972412
    6. 'visited' → logprob: -5.158677577972412
    7. 'answer' → logprob: -5.408677577972412
    8. 'dp' → logprob: -5.533677577972412
    9. '```' → logprob: -5.533677577972412
    10. ' for' → logprob: -6.283677577972412

Token 697: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05770276486873627
    2. 'dist' → logprob: -4.307702541351318
    3. '```' → logprob: -4.932702541351318
    4. 'answer' → logprob: -5.057702541351318
    5. '#' → logprob: -5.057702541351318
    6. 'parent' → logprob: -5.307702541351318
    7. 'answers' → logprob: -5.432702541351318
    8. 'ans' → logprob: -5.682702541351318
    9. 'def' → logprob: -6.932702541351318
    10. 'visited' → logprob: -6.932702541351318

Token 698: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6903362274169922
    2. 'parent' → logprob: -1.9403362274169922
    3. 'dist' → logprob: -2.440336227416992
    4. '#' → logprob: -2.940336227416992
    5. 'ans' → logprob: -3.190336227416992
    6. 'answer' → logprob: -3.190336227416992
    7. 'answers' → logprob: -3.690336227416992
    8. 'edges' → logprob: -3.815336227416992
    9. 'edge' → logprob: -3.940336227416992
    10. '```' → logprob: -4.690336227416992

Token 699: ' edge' (ID: 11165)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7563927173614502
    2. 'dist' → logprob: -1.8813927173614502
    3. 'edge' → logprob: -2.63139271736145
    4. 'each' → logprob: -3.00639271736145
    5. '_' → logprob: -3.13139271736145
    6. ' edge' → logprob: -3.38139271736145
    7. ' u' → logprob: -3.63139271736145
    8. ' dist' → logprob: -3.63139271736145
    9. 'c' → logprob: -3.88139271736145
    10. '(u' → logprob: -4.381392478942871

Token 700: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0368712842464447
    2. '_list' → logprob: -4.286871433258057
    3. 'for' → logprob: -5.161871433258057
    4. 'list' → logprob: -5.286871433258057
    5. ' in' → logprob: -5.536871433258057
    6. 'in' → logprob: -6.036871433258057
    7. ' =' → logprob: -6.661871433258057
    8. 'es' → logprob: -7.411871433258057
    9. 'u' → logprob: -7.411871433258057
    10. ' for' → logprob: -7.911871433258057

Token 701: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7420641183853149
    2. 'c' → logprob: -1.242064118385315
    3. ')' → logprob: -2.3670639991760254
    4. ' u' → logprob: -2.8670639991760254
    5. ' c' → logprob: -3.3670639991760254
    6. ',' → logprob: -4.242063999176025
    7. '),' → logprob: -4.367063999176025
    8. ' ,' → logprob: -5.367063999176025
    9. ' (' → logprob: -5.742063999176025
    10. '(u' → logprob: -6.117063999176025

Token 702: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3135392367839813
    2. ',v' → logprob: -1.6885392665863037
    3. ',u' → logprob: -2.5635392665863037
    4. ',d' → logprob: -6.563539028167725
    5. ',
' → logprob: -7.188539028167725
    6. ')' → logprob: -7.188539028167725
    7. ',e' → logprob: -7.313539028167725
    8. ',s' → logprob: -7.438539028167725
    9. ',w' → logprob: -7.438539028167725
    10. '),' → logprob: -7.563539028167725

Token 703: ',w' (ID: 49598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4771246910095215
    2. '):
' → logprob: -1.6021246910095215
    3. '),' → logprob: -2.3521246910095215
    4. '):' → logprob: -2.6021246910095215
    5. ',' → logprob: -5.3521246910095215
    6. ')
' → logprob: -6.4771246910095215
    7. '):

' → logprob: -7.2271246910095215
    8. '),
' → logprob: -7.9771246910095215
    9. 's' → logprob: -8.22712516784668
    10. ' in' → logprob: -8.35212516784668

Token 704: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.24236173927783966
    2. '):' → logprob: -2.1173617839813232
    3. ')' → logprob: -2.6173617839813232
    4. '),' → logprob: -3.8673617839813232
    5. '):

' → logprob: -8.117362022399902
    6. ')
' → logprob: -8.492362022399902
    7. '):
' → logprob: -8.742362022399902
    8. ',' → logprob: -8.992362022399902
    9. ':
' → logprob: -10.367362022399902
    10. '),
' → logprob: -10.617362022399902

Token 705: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14389166235923767
    2. ' if' → logprob: -3.1438915729522705
    3. ' for' → logprob: -3.3938915729522705
    4. 'if' → logprob: -3.5188915729522705
    5. 'for' → logprob: -3.6438915729522705
    6. '
' → logprob: -7.14389181137085
    7. '```' → logprob: -8.268891334533691
    8. '#' → logprob: -9.018891334533691
    9. 'dist' → logprob: -9.643891334533691
    10. '       ' → logprob: -9.893891334533691

Token 706: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01617712713778019
    2. ' dist' → logprob: -4.141177177429199
    3. '   ' → logprob: -9.8911771774292
    4. '(dist' → logprob: -10.0161771774292
    5. 'min' → logprob: -10.6411771774292
    6. '```' → logprob: -11.8911771774292
    7. '	dist' → logprob: -12.5161771774292
    8. 'abs' → logprob: -12.6411771774292
    9. '
' → logprob: -13.2661771774292
    10. ' ' → logprob: -13.3911771774292

Token 707: '_a' (ID: 10852)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.16781052947044373
    2. '_a' → logprob: -2.0428104400634766
    3. '_u' → logprob: -4.042810440063477
    4. 'a' → logprob: -5.292810440063477
    5. 'u' → logprob: -7.292810440063477
    6. '```' → logprob: -7.667810440063477
    7. '[a' → logprob: -7.792810440063477
    8. '[' → logprob: -8.667810440063477
    9. '[v' → logprob: -8.792810440063477
    10. '(u' → logprob: -9.792810440063477

Token 708: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.0008142740116454661
    2. '[v' → logprob: -7.625814437866211
    3. '[' → logprob: -8.500814437866211
    4. 'u' → logprob: -9.875814437866211
    5. ' [' → logprob: -10.625814437866211
    6. '```' → logprob: -10.875814437866211
    7. '(u' → logprob: -12.375814437866211
    8. '   ' → logprob: -12.500814437866211
    9. '\[' → logprob: -12.500814437866211
    10. '[e' → logprob: -13.375814437866211

Token 709: ']' (ID: 60)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.08608045428991318
    2. '+' → logprob: -3.211080551147461
    3. '[' → logprob: -4.586080551147461
    4. ']' → logprob: -4.586080551147461
    5. ']+' → logprob: -4.961080551147461
    6. '[v' → logprob: -5.211080551147461
    7. ' +' → logprob: -5.461080551147461
    8. ')' → logprob: -6.086080551147461
    9. ')+' → logprob: -6.711080551147461
    10. 'u' → logprob: -7.461080551147461

Token 710: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.050031885504722595
    2. ' +' → logprob: -3.050031900405884
    3. '[u' → logprob: -6.925031661987305
    4. '[v' → logprob: -8.300031661987305
    5. '[' → logprob: -9.550031661987305
    6. '+w' → logprob: -9.550031661987305
    7. 'v' → logprob: -10.800031661987305
    8. '[w' → logprob: -11.550031661987305
    9. '==' → logprob: -11.800031661987305
    10. '＋' → logprob: -12.050031661987305

Token 711: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0004885728703811765
    2. ' w' → logprob: -7.625488758087158
    3. '```' → logprob: -15.25048828125
    4. ' ' → logprob: -16.62548828125
    5. '`' → logprob: -16.62548828125
    6. '   ' → logprob: -17.12548828125
    7. 'v' → logprob: -17.12548828125
    8. ''w' → logprob: -18.00048828125
    9. '  ' → logprob: -18.37548828125
    10. ' ' → logprob: -18.37548828125

Token 712: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8175742626190186
    2. '+' → logprob: -1.4425742626190186
    3. ' ==' → logprob: -1.9425742626190186
    4. '==' → logprob: -2.5675742626190186
    5. ' <=' → logprob: -2.5675742626190186
    6. '<=' → logprob: -3.6925742626190186
    7. ' ' → logprob: -8.442574501037598
    8. '```' → logprob: -9.317574501037598
    9. '=' → logprob: -9.567574501037598
    10. '===' → logprob: -10.567574501037598

Token 713: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0004306692280806601
    2. ' dist' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.750431060791016
    4. '	dist' → logprob: -20.500431060791016
    5. '(dist' → logprob: -21.500431060791016
    6. '.dist' → logprob: -22.125431060791016
    7. '_dist' → logprob: -22.250431060791016
    8. '```' → logprob: -22.750431060791016
    9. 'Dist' → logprob: -23.250431060791016
    10. ' ' → logprob: -23.625431060791016

Token 714: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.31673020124435425
    2. '_b' → logprob: -1.316730260848999
    3. '[v' → logprob: -6.19173002243042
    4. 'a' → logprob: -7.56673002243042
    5. '```' → logprob: -7.94173002243042
    6. 'b' → logprob: -8.066730499267578
    7. '_' → logprob: -8.691730499267578
    8. '_v' → logprob: -10.566730499267578
    9. '_s' → logprob: -12.191730499267578
    10. 'v' → logprob: -12.316730499267578

Token 715: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.7159857786027715e-05
    2. '[' → logprob: -10.250046730041504
    3. 'v' → logprob: -11.625046730041504
    4. '```' → logprob: -13.500046730041504
    5. '[u' → logprob: -14.750046730041504
    6. '[
' → logprob: -14.750046730041504
    7. '(v' → logprob: -14.750046730041504
    8. '<v' → logprob: -16.62504768371582
    9. ' [' → logprob: -17.00004768371582
    10. '\[' → logprob: -17.12504768371582

Token 716: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.21855555474758148
    2. '==' → logprob: -2.468555450439453
    3. ']' → logprob: -2.593555450439453
    4. ')' → logprob: -3.593555450439453
    5. ' <=' → logprob: -5.093555450439453
    6. ']==' → logprob: -6.093555450439453
    7. ' ]' → logprob: -8.593555450439453
    8. ' ' → logprob: -8.718555450439453
    9. ')==' → logprob: -8.718555450439453
    10. '<=' → logprob: -8.843555450439453

Token 717: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5157980918884277
    2. ' <=' → logprob: -1.0157980918884277
    3. '==' → logprob: -3.3907980918884277
    4. '<=' → logprob: -5.015798091888428
    5. ')' → logprob: -8.265798568725586
    6. ' ' → logprob: -8.640798568725586
    7. ')==' → logprob: -10.765798568725586
    8. '```' → logprob: -10.890798568725586
    9. ')<=' → logprob: -11.015798568725586
    10. '=' → logprob: -11.265798568725586

Token 718: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.018150178715586662
    2. ' dist' → logprob: -4.018150329589844
    3. '	dist' → logprob: -15.643150329589844
    4. '   ' → logprob: -16.643150329589844
    5. '(dist' → logprob: -18.018150329589844
    6. '```' → logprob: -18.393150329589844
    7. '_dist' → logprob: -18.643150329589844
    8. ' ' → logprob: -19.143150329589844
    9. 'Dist' → logprob: -19.643150329589844
    10. '.dist' → logprob: -19.768150329589844

Token 719: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -7.386147626675665e-05
    2. 'a' → logprob: -9.750073432922363
    3. '[a' → logprob: -11.250073432922363
    4. '_b' → logprob: -13.375073432922363
    5. '[b' → logprob: -15.125073432922363
    6. '```' → logprob: -15.250073432922363
    7. '   ' → logprob: -15.625073432922363
    8. '_' → logprob: -15.875073432922363
    9. '\' → logprob: -17.50007438659668
    10. '(a' → logprob: -17.62507438659668

Token 720: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.3869871497154236
    2. 'b' → logprob: -1.1369872093200684
    3. '[u' → logprob: -9.51198673248291
    4. '```' → logprob: -11.13698673248291
    5. '	b' → logprob: -11.76198673248291
    6. '
' → logprob: -12.13698673248291
    7. '_b' → logprob: -12.88698673248291
    8. '[v' → logprob: -13.01198673248291
    9. ''b' → logprob: -13.13698673248291
    10. '   ' → logprob: -13.88698673248291

Token 721: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07329126447439194
    2. ' and' → logprob: -3.448291301727295
    3. ':' → logprob: -3.698291301727295
    4. ']:' → logprob: -5.323291301727295
    5. ')' → logprob: -5.698291301727295
    6. ' or' → logprob: -6.573291301727295
    7. 'and' → logprob: -6.698291301727295
    8. '']' → logprob: -7.198291301727295
    9. '   ' → logprob: -7.198291301727295
    10. ':
' → logprob: -7.698291301727295

Token 722: ' then' (ID: 1815)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24806128442287445
    2. ' or' → logprob: -2.373061180114746
    3. '       ' → logprob: -3.123061180114746
    4. ' and' → logprob: -3.998061180114746
    5. 'if' → logprob: -4.248061180114746
    6. ' if' → logprob: -4.498061180114746
    7. ' for' → logprob: -4.748061180114746
    8. ':' → logprob: -4.873061180114746
    9. 'for' → logprob: -4.998061180114746
    10. 'and' → logprob: -5.373061180114746

Token 723: ' (' (ID: 350)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.40829890966415405
    2. ' graph' → logprob: -2.033298969268799
    3. ' dist' → logprob: -2.283298969268799
    4. 'dist' → logprob: -2.408298969268799
    5. 'print' → logprob: -5.658298969268799
    6. '   ' → logprob: -6.033298969268799
    7. 'u' → logprob: -6.783298969268799
    8. '#' → logprob: -7.033298969268799
    9. ' print' → logprob: -7.533298969268799
    10. 'answer' → logprob: -7.783298969268799

Token 724: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.23064284026622772
    2. 'dist' → logprob: -1.9806427955627441
    3. ' u' → logprob: -3.355642795562744
    4. ' dist' → logprob: -3.730642795562744
    5. '(u' → logprob: -5.105642795562744
    6. ' (' → logprob: -6.605642795562744
    7. 'graph' → logprob: -7.480642795562744
    8. '[u' → logprob: -7.855642795562744
    9. ')' → logprob: -7.980642795562744
    10. '(dist' → logprob: -8.855643272399902

Token 725: ',v' (ID: 30680)
  Prédit: ',v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.010570211336016655
    2. ',' → logprob: -4.635570049285889
    3. ')' → logprob: -7.760570049285889
    4. ',u' → logprob: -8.510570526123047
    5. ',d' → logprob: -10.510570526123047
    6. ',b' → logprob: -10.885570526123047
    7. '
' → logprob: -11.010570526123047
    8. 'dist' → logprob: -11.010570526123047
    9. '[v' → logprob: -11.260570526123047
    10. 'v' → logprob: -11.260570526123047

Token 726: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033370524179190397
    2. ',' → logprob: -6.0033369064331055
    3. '),' → logprob: -7.2533369064331055
    4. ')
' → logprob: -10.503336906433105
    5. ',w' → logprob: -10.628336906433105
    6. ' )' → logprob: -11.128336906433105
    7. ')is' → logprob: -11.253336906433105
    8. ' is' → logprob: -11.378336906433105
    9. ',)' → logprob: -11.628336906433105
    10. 'w' → logprob: -11.753336906433105

Token 727: ' can' (ID: 665)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.4212125539779663
    2. ' is' → logprob: -1.5462125539779663
    3. 'and' → logprob: -2.796212673187256
    4. ' and' → logprob: -3.546212673187256
    5. 'can' → logprob: -3.921212673187256
    6. ' can' → logprob: -4.796212673187256
    7. '   ' → logprob: -5.796212673187256
    8. '#' → logprob: -6.046212673187256
    9. ')' → logprob: -6.296212673187256
    10. '
' → logprob: -6.421212673187256

Token 728: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.4292105734348297
    2. ' be' → logprob: -1.0542105436325073
    3. ' lie' → logprob: -8.929210662841797
    4. 'appear' → logprob: -9.054210662841797
    5. 'lie' → logprob: -9.429210662841797
    6. '<|end|>' → logprob: -10.179210662841797
    7. 'also' → logprob: -10.429210662841797
    8. ' ' → logprob: -10.554210662841797
    9. '	be' → logprob: -11.304210662841797
    10. '
' → logprob: -11.554210662841797

Token 729: ' on' (ID: 402)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.07218325883150101
    2. 'on' → logprob: -3.07218337059021
    3. ' part' → logprob: -3.94718337059021
    4. 'consider' → logprob: -6.197183132171631
    5. 'used' → logprob: -6.322183132171631
    6. ' on' → logprob: -9.822183609008789
    7. 'included' → logprob: -10.072183609008789
    8. ' considered' → logprob: -10.322183609008789
    9. 'a' → logprob: -11.572183609008789
    10. 'in' → logprob: -11.572183609008789

Token 730: ' some' (ID: 1236)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6997265815734863
    2. 'the' → logprob: -1.0747265815734863
    3. ' a' → logprob: -2.1997265815734863
    4. ' the' → logprob: -3.0747265815734863
    5. 'some' → logprob: -6.074726581573486
    6. ' shortest' → logprob: -7.199726581573486
    7. ' some' → logprob: -7.574726581573486
    8. 'dist' → logprob: -7.949726581573486
    9. 'any' → logprob: -8.074726104736328
    10. ' any' → logprob: -8.574726104736328

Token 731: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.16037574410438538
    2. 'short' → logprob: -1.910375714302063
    3. '```' → logprob: -10.035375595092773
    4. 'Shortest' → logprob: -10.285375595092773
    5. 'a' → logprob: -10.410375595092773
    6. '   ' → logprob: -11.285375595092773
    7. 'path' → logprob: -11.785375595092773
    8. '
' → logprob: -11.910375595092773
    9. '_short' → logprob: -12.660375595092773
    10. 'dist' → logprob: -12.660375595092773

Token 732: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.2916097640991211
    2. 'path' → logprob: -1.416609764099121
    3. ' path' → logprob: -4.916609764099121
    4. '_paths' → logprob: -5.916609764099121
    5. '_' → logprob: -8.791609764099121
    6. ')' → logprob: -9.666609764099121
    7. ' _' → logprob: -10.041609764099121
    8. '```' → logprob: -10.291609764099121
    9. '_p' → logprob: -10.666609764099121
    10. ')_' → logprob: -11.291609764099121

Token 733: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3777949810028076
    2. '#' → logprob: -1.5027949810028076
    3. 'edges' → logprob: -2.7527949810028076
    4. ' for' → logprob: -5.127795219421387
    5. '
' → logprob: -5.502795219421387
    6. 'edge' → logprob: -6.127795219421387
    7. '   ' → logprob: -6.252795219421387
    8. '```' → logprob: -6.377795219421387
    9. 's' → logprob: -7.002795219421387
    10. ',' → logprob: -7.002795219421387

Token 734: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0028061794582754374
    2. ' a' → logprob: -5.877806186676025
    3. '```' → logprob: -14.252805709838867
    4. 'u' → logprob: -15.377805709838867
    5. ')a' → logprob: -16.127805709838867
    6. '	a' → logprob: -17.002805709838867
    7. '
' → logprob: -17.127805709838867
    8. '#a' → logprob: -17.252805709838867
    9. 'A' → logprob: -17.252805709838867
    10. ''a' → logprob: -17.502805709838867

Token 735: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0744149461388588
    2. ' for' → logprob: -3.3244149684906006
    3. '#' → logprob: -4.6994147300720215
    4. '(u' → logprob: -5.4494147300720215
    5. 'u' → logprob: -5.5744147300720215
    6. ' =' → logprob: -5.9494147300720215
    7. '[u' → logprob: -6.0744147300720215
    8. 'if' → logprob: -6.3244147300720215
    9. '_' → logprob: -6.4494147300720215
    10. '   ' → logprob: -6.6994147300720215

Token 736: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.836499985889532e-05
    2. ' b' → logprob: -9.7500581741333
    3. '```' → logprob: -21.125059127807617
    4. ')b' → logprob: -21.375059127807617
    5. '	b' → logprob: -21.875059127807617
    6. '
' → logprob: -22.875059127807617
    7. ' ' → logprob: -23.250059127807617
    8. '_b' → logprob: -23.750059127807617
    9. ' ' → logprob: -23.875059127807617
    10. 'u' → logprob: -23.875059127807617

Token 737: '.
' (ID: 558)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.9394745826721191
    2. '#' → logprob: -2.189474582672119
    3. 'ans' → logprob: -2.314474582672119
    4. 'edges' → logprob: -2.439474582672119
    5. 'answer' → logprob: -2.564474582672119
    6. 'valid' → logprob: -2.689474582672119
    7. 'dp' → logprob: -2.814474582672119
    8. 'used' → logprob: -2.939474582672119
    9. 'edge' → logprob: -2.939474582672119
    10. 'dist' → logprob: -2.939474582672119

Token 738: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.021812915802002
    2. 'edges' → logprob: -1.396812915802002
    3. 'edge' → logprob: -2.396812915802002
    4. 'valid' → logprob: -2.521812915802002
    5. 'on' → logprob: -3.021812915802002
    6. 'good' → logprob: -3.271812915802002
    7. 'dist' → logprob: -4.271812915802002
    8. 'used' → logprob: -4.271812915802002
    9. 'ok' → logprob: -4.396812915802002
    10. 'count' → logprob: -4.521812915802002

Token 739: ' Similarly' (ID: 65037)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5919110774993896
    2. 'edges' → logprob: -1.7169110774993896
    3. 'edge' → logprob: -2.7169110774993896
    4. 'valid' → logprob: -3.3419110774993896
    5. 'used' → logprob: -3.5919110774993896
    6. '#' → logprob: -3.5919110774993896
    7. 'on' → logprob: -3.7169110774993896
    8. 'can' → logprob: -4.216911315917969
    9. 'dist' → logprob: -4.716911315917969
    10. 'good' → logprob: -4.841911315917969

Token 740: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7094705104827881
    2. '   ' → logprob: -0.8344705104827881
    3. ' for' → logprob: -2.959470510482788
    4. 'if' → logprob: -4.459470748901367
    5. ' if' → logprob: -5.459470748901367
    6. '#' → logprob: -5.959470748901367
    7. ':' → logprob: -6.459470748901367
    8. ',' → logprob: -7.209470748901367
    9. '
' → logprob: -8.334470748901367
    10. 'def' → logprob: -8.709470748901367

Token 741: ' (' (ID: 350)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2287532240152359
    2. '(u' → logprob: -2.2287533283233643
    3. ' dist' → logprob: -2.9787533283233643
    4. '(v' → logprob: -4.103753089904785
    5. 'v' → logprob: -4.353753089904785
    6. ' (' → logprob: -4.978753089904785
    7. ' v' → logprob: -5.353753089904785
    8. 'u' → logprob: -6.603753089904785
    9. 'graph' → logprob: -6.853753089904785
    10. ' u' → logprob: -7.853753089904785

Token 742: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.002083166502416134
    2. 'u' → logprob: -6.2520833015441895
    3. ' v' → logprob: -8.877082824707031
    4. ')v' → logprob: -11.877082824707031
    5. ',v' → logprob: -13.002082824707031
    6. ')' → logprob: -13.252082824707031
    7. '   ' → logprob: -13.377082824707031
    8. ',' → logprob: -14.627082824707031
    9. ' u' → logprob: -14.877082824707031
    10. '	v' → logprob: -15.252082824707031

Token 743: ',u' (ID: 80698)
  Prédit: ',u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',u' → logprob: -0.00025895543512888253
    2. ',' → logprob: -8.500259399414062
    3. 'u' → logprob: -10.000259399414062
    4. '
' → logprob: -13.000259399414062
    5. ' ,' → logprob: -13.125259399414062
    6. ',v' → logprob: -13.500259399414062
    7. '```' → logprob: -13.625259399414062
    8. ',w' → logprob: -14.000259399414062
    9. ',
' → logprob: -14.250259399414062
    10. '[u' → logprob: -14.875259399414062

Token 744: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.24788908660411835
    2. ')' → logprob: -2.4978890419006348
    3. ',' → logprob: -2.7478890419006348
    4. '):
' → logprob: -3.2478890419006348
    5. '):' → logprob: -4.122889041900635
    6. '),' → logprob: -4.247889041900635
    7. '):

' → logprob: -6.622889041900635
    8. ')
' → logprob: -6.747889041900635
    9. ',u' → logprob: -7.622889041900635
    10. 'w' → logprob: -8.622889518737793

Token 745: ').

' (ID: 3991)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4026325047016144
    2. ')' → logprob: -1.402632474899292
    3. '):' → logprob: -2.527632474899292
    4. ')
' → logprob: -5.902632713317871
    5. '):
' → logprob: -6.527632713317871
    6. '):

' → logprob: -6.902632713317871
    7. '),' → logprob: -9.402632713317871
    8. '   ' → logprob: -9.777632713317871
    9. 'w' → logprob: -9.902632713317871
    10. ')):
' → logprob: -10.152632713317871

Token 746: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.6773806810379028
    2. 'edges' → logprob: -1.6773806810379028
    3. 'used' → logprob: -2.3023805618286133
    4. 'edge' → logprob: -2.3023805618286133
    5. 'valid' → logprob: -2.5523805618286133
    6. '#' → logprob: -2.8023805618286133
    7. 'on' → logprob: -2.8023805618286133
    8. 'dist' → logprob: -3.0523805618286133
    9. 'dp' → logprob: -3.4273805618286133
    10. 'usable' → logprob: -3.4273805618286133

Token 747: ' Build' (ID: 10885)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.7495228052139282
    2. 'used' → logprob: -1.8745228052139282
    3. 'edge' → logprob: -1.8745228052139282
    4. 'dist' → logprob: -2.2495226860046387
    5. 'for' → logprob: -2.3745226860046387
    6. 'dp' → logprob: -2.8745226860046387
    7. 'valid' → logprob: -3.1245226860046387
    8. '#' → logprob: -3.3745226860046387
    9. 'usable' → logprob: -3.7495226860046387
    10. 'ans' → logprob: -3.8745226860046387

Token 748: ' a' (ID: 261)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.8210240006446838
    2. 'sp' → logprob: -0.9460240006446838
    3. 'path' → logprob: -3.071023941040039
    4. 'dist' → logprob: -3.821023941040039
    5. 'edges' → logprob: -3.946023941040039
    6. '```' → logprob: -3.946023941040039
    7. 'valid' → logprob: -4.446023941040039
    8. ' shortest' → logprob: -4.696023941040039
    9. 'spath' → logprob: -5.071023941040039
    10. ' sp' → logprob: -5.071023941040039

Token 749: ' shortest' (ID: 70564)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5205734968185425
    2. 'short' → logprob: -1.6455734968185425
    3. 'new' → logprob: -2.520573616027832
    4. 'filtered' → logprob: -3.270573616027832
    5. 'sub' → logprob: -3.395573616027832
    6. 'dist' → logprob: -4.145573616027832
    7. 'adj' → logprob: -4.520573616027832
    8. 'path' → logprob: -4.770573616027832
    9. 'set' → logprob: -5.020573616027832
    10. 'dp' → logprob: -5.270573616027832

Token 750: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.05502581223845482
    2. 'path' → logprob: -3.055025815963745
    3. '_paths' → logprob: -5.055025577545166
    4. ' path' → logprob: -10.805026054382324
    5. 'paths' → logprob: -10.930026054382324
    6. '-path' → logprob: -14.305026054382324
    7. '```' → logprob: -14.680026054382324
    8. '_edges' → logprob: -15.680026054382324
    9. '_dist' → logprob: -15.680026054382324
    10. '_PATH' → logprob: -15.805026054382324

Token 751: ' DAG' (ID: 157361)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3074433505535126
    2. 'tree' → logprob: -1.682443380355835
    3. '_tree' → logprob: -3.432443380355835
    4. '_graph' → logprob: -3.807443380355835
    5. '_edges' → logprob: -5.182443141937256
    6. 'sub' → logprob: -5.307443141937256
    7. 'edges' → logprob: -5.557443141937256
    8. ' tree' → logprob: -6.182443141937256
    9. '```' → logprob: -6.182443141937256
    10. '_sub' → logprob: -6.307443141937256

Token 752: ' from' (ID: 591)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.7536216378211975
    2. 'dag' → logprob: -1.0036215782165527
    3. 'short' → logprob: -3.2536215782165527
    4. 'dist' → logprob: -3.3786215782165527
    5. 'edges' → logprob: -4.128621578216553
    6. 'dp' → logprob: -4.503621578216553
    7. ' =' → logprob: -4.753621578216553
    8. '#' → logprob: -5.003621578216553
    9. 'adj' → logprob: -5.003621578216553
    10. 'path' → logprob: -5.128621578216553

Token 753: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.2378600735682994e-05
    2. ' a' → logprob: -10.875032424926758
    3. 'u' → logprob: -12.125032424926758
    4. 'collections' → logprob: -12.625032424926758
    5. '```' → logprob: -13.000032424926758
    6. 'the' → logprob: -14.750032424926758
    7. 'import' → logprob: -14.750032424926758
    8. '[a' → logprob: -15.125032424926758
    9. '`' → logprob: -15.125032424926758
    10. 'graph' → logprob: -15.875032424926758

Token 754: ' to' (ID: 316)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -1.113764762878418
    2. 'dist' → logprob: -1.488764762878418
    3. ' =' → logprob: -2.238764762878418
    4. 'graph' → logprob: -2.363764762878418
    5. '_to' → logprob: -2.988764762878418
    6. '#' → logprob: -3.863764762878418
    7. 'from' → logprob: -3.988764762878418
    8. '_d' → logprob: -4.113764762878418
    9. '_nodes' → logprob: -4.113764762878418
    10. '=' → logprob: -4.238764762878418

Token 755: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.306760805164231e-05
    2. ' b' → logprob: -11.25001335144043
    3. '```' → logprob: -21.50001335144043
    4. ')b' → logprob: -23.25001335144043
    5. '_b' → logprob: -23.62501335144043
    6. '	b' → logprob: -23.87501335144043
    7. 'a' → logprob: -24.00001335144043
    8. 's' → logprob: -24.87501335144043
    9. 'the' → logprob: -25.37501335144043
    10. 'import' → logprob: -25.62501335144043

Token 756: '.

' (ID: 364)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.8419731259346008
    2. 'dag' → logprob: -1.091973066329956
    3. 'dist' → logprob: -2.341973066329956
    4. 'short' → logprob: -3.466973066329956
    5. 'edges' → logprob: -3.841973066329956
    6. '#' → logprob: -4.091973304748535
    7. 'dp' → logprob: -4.341973304748535
    8. 'in' → logprob: -4.841973304748535
    9. 'from' → logprob: -4.841973304748535
    10. 'top' → logprob: -5.091973304748535

Token 757: '#' (ID: 2)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.42626142501831055
    2. 'short' → logprob: -2.3012614250183105
    3. 'dag' → logprob: -2.6762614250183105
    4. 'visited' → logprob: -3.3012614250183105
    5. 'dist' → logprob: -3.4262614250183105
    6. 'edges' → logprob: -3.6762614250183105
    7. 'for' → logprob: -3.8012614250183105
    8. 'reachable' → logprob: -4.3012614250183105
    9. '#' → logprob: -4.9262614250183105
    10. 'in' → logprob: -4.9262614250183105

Token 758: ' Then' (ID: 7801)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.951956033706665
    2. 'dist' → logprob: -2.076956033706665
    3. 'visited' → logprob: -2.451956033706665
    4. 'edges' → logprob: -2.576956033706665
    5. 'short' → logprob: -2.576956033706665
    6. '#' → logprob: -2.951956033706665
    7. 'reachable' → logprob: -3.201956033706665
    8. 'dag' → logprob: -3.576956033706665
    9. 'dp' → logprob: -3.701956033706665
    10. 'on' → logprob: -3.951956033706665

Token 759: ',' (ID: 11)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7562354207038879
    2. 'for' → logprob: -2.131235361099243
    3. 'dist' → logprob: -2.381235361099243
    4. '#' → logprob: -2.506235361099243
    5. 'dp' → logprob: -2.631235361099243
    6. 'sp' → logprob: -3.256235361099243
    7. 'short' → logprob: -3.506235361099243
    8. 'used' → logprob: -3.756235361099243
    9. 'def' → logprob: -4.381235599517822
    10. 'from' → logprob: -4.506235599517822

Token 760: ' for' (ID: 395)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9384949207305908
    2. 'dp' → logprob: -1.5634949207305908
    3. '#' → logprob: -2.438494920730591
    4. 'top' → logprob: -2.563494920730591
    5. 'dist' → logprob: -2.563494920730591
    6. 'in' → logprob: -3.188494920730591
    7. 'from' → logprob: -3.188494920730591
    8. 'for' → logprob: -4.563494682312012
    9. 'reachable' → logprob: -4.563494682312012
    10. 'short' → logprob: -4.813494682312012

Token 761: ' query' (ID: 5703)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.1461235135793686
    2. 'edge' → logprob: -2.8961234092712402
    3. 'node' → logprob: -3.2711234092712402
    4. '_' → logprob: -4.14612340927124
    5. 'c' → logprob: -4.77112340927124
    6. '_edge' → logprob: -5.52112340927124
    7. 'query' → logprob: -5.52112340927124
    8. '```' → logprob: -6.77112340927124
    9. 'each' → logprob: -6.89612340927124
    10. 'for' → logprob: -7.39612340927124

Token 762: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.2120981216430664
    2. '[u' → logprob: -1.3370981216430664
    3. 's' → logprob: -1.9620981216430664
    4. '_edges' → logprob: -2.8370981216430664
    5. 'for' → logprob: -3.3370981216430664
    6. 'u' → logprob: -3.3370981216430664
    7. ' u' → logprob: -3.3370981216430664
    8. '_u' → logprob: -3.9620981216430664
    9. '
' → logprob: -4.462098121643066
    10. ':' → logprob: -4.587098121643066

Token 763: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00015133652777876705
    2. ')' → logprob: -10.125151634216309
    3. ' c' → logprob: -10.125151634216309
    4. ')c' → logprob: -10.750151634216309
    5. 'u' → logprob: -10.875151634216309
    6. '),' → logprob: -12.000151634216309
    7. '_,' → logprob: -12.250151634216309
    8. '
' → logprob: -12.375151634216309
    9. ',c' → logprob: -12.875151634216309
    10. ',' → logprob: -13.000151634216309

Token 764: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.2536076307296753
    2. ',' → logprob: -1.5036076307296753
    3. ',c' → logprob: -6.503607749938965
    4. ',
' → logprob: -9.628607749938965
    5. ',v' → logprob: -9.753607749938965
    6. ' ,' → logprob: -10.503607749938965
    7. '),' → logprob: -11.753607749938965
    8. ',e' → logprob: -12.753607749938965
    9. '
' → logprob: -13.378607749938965
    10. ',p' → logprob: -13.378607749938965

Token 765: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.17071881890296936
    2. '):' → logprob: -1.920718789100647
    3. ')' → logprob: -4.670718669891357
    4. '),' → logprob: -7.545718669891357
    5. '):

' → logprob: -7.795718669891357
    6. ')):
' → logprob: -10.170719146728516
    7. '):
' → logprob: -10.420719146728516
    8. ')
' → logprob: -10.670719146728516
    9. ',' → logprob: -11.545719146728516
    10. ':
' → logprob: -12.295719146728516

Token 766: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006597067695111036
    2. ' if' → logprob: -5.75659704208374
    3. '
' → logprob: -6.50659704208374
    4. '#' → logprob: -8.006597518920898
    5. 'for' → logprob: -8.006597518920898
    6. 'dist' → logprob: -8.006597518920898
    7. '   ' → logprob: -8.506597518920898
    8. '```' → logprob: -8.756597518920898
    9. 'in' → logprob: -9.131597518920898
    10. 'ans' → logprob: -9.381597518920898

Token 767: ' if' (ID: 538)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2119710445404053
    2. 'graph' → logprob: -1.8369710445404053
    3. '(' → logprob: -2.2119710445404053
    4. ''' → logprob: -2.2119710445404053
    5. '(c' → logprob: -2.4619710445404053
    6. ' graph' → logprob: -3.0869710445404053
    7. '"' → logprob: -3.3369710445404053
    8. ' c' → logprob: -3.5869710445404053
    9. ' dist' → logprob: -3.7119710445404053
    10. 'if' → logprob: -3.7119710445404053

Token 768: ' there' (ID: 1354)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.3378547430038452
    2. '(d' → logprob: -2.2128548622131348
    3. '(dist' → logprob: -2.2128548622131348
    4. ' (' → logprob: -3.3378548622131348
    5. 'dist' → logprob: -4.212854862213135
    6. 'any' → logprob: -5.212854862213135
    7. '(any' → logprob: -5.462854862213135
    8. '(' → logprob: -6.337854862213135
    9. '(v' → logprob: -6.587854862213135
    10. 'd' → logprob: -6.962854862213135

Token 769: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.34003913402557373
    2. 'in' → logprob: -2.3400392532348633
    3. 'exists' → logprob: -2.4650392532348633
    4. ' is' → logprob: -2.9650392532348633
    5. ' in' → logprob: -3.2150392532348633
    6. '[c' → logprob: -5.465039253234863
    7. 'c' → logprob: -5.840039253234863
    8. ''s' → logprob: -6.215039253234863
    9. ' exists' → logprob: -6.590039253234863
    10. '
' → logprob: -6.715039253234863

Token 770: ' a' (ID: 261)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.2014669179916382
    2. ' (' → logprob: -1.3264669179916382
    3. ' an' → logprob: -1.3264669179916382
    4. 'an' → logprob: -2.7014670372009277
    5. 'dist' → logprob: -3.7014670372009277
    6. ' a' → logprob: -4.201467037200928
    7. '(dist' → logprob: -4.701467037200928
    8. ' c' → logprob: -4.701467037200928
    9. '(' → logprob: -4.826467037200928
    10. 'c' → logprob: -4.826467037200928

Token 771: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.544950544834137
    2. 'direct' → logprob: -1.7949504852294922
    3. ' path' → logprob: -1.9199504852294922
    4. 'short' → logprob: -3.919950485229492
    5. '
' → logprob: -4.044950485229492
    6. ' shortest' → logprob: -4.044950485229492
    7. ' c' → logprob: -4.919950485229492
    8. 'edge' → logprob: -4.919950485229492
    9. 'c' → logprob: -5.169950485229492
    10. 'reachable' → logprob: -5.919950485229492

Token 772: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.10101902484893799
    2. '(c' → logprob: -2.9760189056396484
    3. '(u' → logprob: -4.851018905639648
    4. ' (' → logprob: -4.851018905639648
    5. ' from' → logprob: -5.476018905639648
    6. '(' → logprob: -5.726018905639648
    7. ' =' → logprob: -5.851018905639648
    8. '_' → logprob: -6.101018905639648
    9. 'c' → logprob: -6.351018905639648
    10. '
' → logprob: -6.351018905639648

Token 773: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003012617235071957
    2. ' c' → logprob: -8.125301361083984
    3. '```' → logprob: -12.625301361083984
    4. '`' → logprob: -14.250301361083984
    5. ')c' → logprob: -15.000301361083984
    6. '
' → logprob: -15.375301361083984
    7. 'graph' → logprob: -15.375301361083984
    8. '	c' → logprob: -15.500301361083984
    9. 'cd' → logprob: -16.875301361083984
    10. '_c' → logprob: -16.875301361083984

Token 774: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.49322476983070374
    2. 'to' → logprob: -1.1182247400283813
    3. '_to' → logprob: -3.243224859237671
    4. ',' → logprob: -4.868224620819092
    5. '
' → logprob: -5.868224620819092
    6. '```' → logprob: -5.993224620819092
    7. '->' → logprob: -6.118224620819092
    8. ')' → logprob: -6.243224620819092
    9. '`' → logprob: -6.868224620819092
    10. ' ->' → logprob: -6.993224620819092

Token 775: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0007100477814674377
    2. ' d' → logprob: -7.2507100105285645
    3. '
' → logprob: -16.875709533691406
    4. '	d' → logprob: -17.125709533691406
    5. ' ' → logprob: -20.000709533691406
    6. '   ' → logprob: -20.250709533691406
    7. '```' → logprob: -21.125709533691406
    8. ' ' → logprob: -22.500709533691406
    9. ' 
' → logprob: -22.750709533691406
    10. '[d' → logprob: -23.125709533691406

Token 776: ' along' (ID: 4251)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4982081651687622
    2. ' in' → logprob: -1.3732081651687622
    3. ':' → logprob: -2.8732080459594727
    4. ':
' → logprob: -3.7482080459594727
    5. '
' → logprob: -3.9982080459594727
    6. ',' → logprob: -5.123208045959473
    7. 'def' → logprob: -5.248208045959473
    8. ' and' → logprob: -5.248208045959473
    9. '_in' → logprob: -5.623208045959473
    10. 'G' → logprob: -5.873208045959473

Token 777: ' this' (ID: 495)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.24839580059051514
    2. ' graph' → logprob: -1.7483958005905151
    3. 'the' → logprob: -3.3733959197998047
    4. ' the' → logprob: -4.623395919799805
    5. ' shortest' → logprob: -7.248395919799805
    6. '```' → logprob: -7.998395919799805
    7. 'short' → logprob: -8.248395919799805
    8. 'c' → logprob: -9.373395919799805
    9. '`' → logprob: -9.623395919799805
    10. '	graph' → logprob: -9.623395919799805

Token 778: ' DAG' (ID: 157361)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -0.6303893327713013
    2. 'D' → logprob: -1.6303893327713013
    3. '```' → logprob: -2.5053892135620117
    4. '
' → logprob: -2.7553892135620117
    5. ' shortest' → logprob: -3.7553892135620117
    6. '`' → logprob: -3.7553892135620117
    7. '_d' → logprob: -4.005389213562012
    8. '``' → logprob: -4.255389213562012
    9. 'dag' → logprob: -4.380389213562012
    10. 'd' → logprob: -4.380389213562012

Token 779: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.15388141572475433
    2. 'import' → logprob: -3.153881311416626
    3. 'dist' → logprob: -3.278881311416626
    4. '#' → logprob: -3.778881311416626
    5. 'visited' → logprob: -4.153881549835205
    6. 'dag' → logprob: -4.278881549835205
    7. 'dp' → logprob: -5.903881549835205
    8. 'graph' → logprob: -6.403881549835205
    9. 'adj' → logprob: -6.528881549835205
    10. 'def' → logprob: -6.528881549835205

Token 780: 'meaning' (ID: 91529)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09769855439662933
    2. '):' → logprob: -2.847698450088501
    3. '):
' → logprob: -3.972698450088501
    4. ').' → logprob: -4.34769868850708
    5. ' and' → logprob: -6.59769868850708
    6. 'and' → logprob: -7.59769868850708
    7. ')
' → logprob: -7.72269868850708
    8. 'in' → logprob: -8.472698211669922
    9. '.' → logprob: -8.597698211669922
    10. ' in' → logprob: -8.722698211669922

Token 781: ' segment' (ID: 14806)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5801826119422913
    2. 'c' → logprob: -1.5801825523376465
    3. ' c' → logprob: -2.4551825523376465
    4. ' graph' → logprob: -2.9551825523376465
    5. '
' → logprob: -3.5801825523376465
    6. 'dist' → logprob: -3.8301825523376465
    7. ')' → logprob: -4.3301825523376465
    8. 'd' → logprob: -4.5801825523376465
    9. 'visited' → logprob: -4.8301825523376465
    10. ' d' → logprob: -5.7051825523376465

Token 782: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.9930680394172668
    2. 'c' → logprob: -1.243067979812622
    3. ' (' → logprob: -2.493067979812622
    4. ')' → logprob: -3.118067979812622
    5. ' in' → logprob: -3.118067979812622
    6. '(c' → logprob: -3.368067979812622
    7. ' is' → logprob: -3.368067979812622
    8. '
' → logprob: -4.118068218231201
    9. 'in' → logprob: -4.243068218231201
    10. ' exists' → logprob: -4.618068218231201

Token 783: '-d' (ID: 2469)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.319602370262146
    2. ')' → logprob: -1.819602370262146
    3. ')-' → logprob: -1.819602370262146
    4. '-d' → logprob: -2.1946024894714355
    5. '->' → logprob: -2.8196024894714355
    6. '
' → logprob: -2.9446024894714355
    7. ',d' → logprob: -3.1946024894714355
    8. ')-(' → logprob: -3.5696024894714355
    9. '-' → logprob: -3.8196024894714355
    10. ')->' → logprob: -3.9446024894714355

Token 784: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05343570560216904
    2. ' is' → logprob: -3.928435802459717
    3. ' in' → logprob: -4.428435802459717
    4. ' exists' → logprob: -5.178435802459717
    5. '')' → logprob: -5.553435802459717
    6. '):
' → logprob: -6.053435802459717
    7. ')
' → logprob: -6.553435802459717
    8. '")' → logprob: -6.678435802459717
    9. 'in' → logprob: -6.803435802459717
    10. ' )' → logprob: -7.303435802459717

Token 785: ' shortest' (ID: 70564)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.9941548705101013
    2. ' part' → logprob: -1.619154930114746
    3. ' on' → logprob: -1.869154930114746
    4. 'a' → logprob: -2.494154930114746
    5. 'part' → logprob: -2.869154930114746
    6. 'in' → logprob: -3.119154930114746
    7. ' a' → logprob: -3.494154930114746
    8. ' in' → logprob: -4.244154930114746
    9. 'valid' → logprob: -4.494154930114746
    10. 'also' → logprob: -4.619154930114746

Token 786: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.017168590798974037
    2. 'path' → logprob: -4.2671685218811035
    3. '```' → logprob: -6.8921685218811035
    4. '_paths' → logprob: -7.6421685218811035
    5. ')' → logprob: -8.017168998718262
    6. '
' → logprob: -8.267168998718262
    7. ' path' → logprob: -8.517168998718262
    8. '   ' → logprob: -8.892168998718262
    9. '_' → logprob: -9.392168998718262
    10. ')_' → logprob: -9.517168998718262

Token 787: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.929530680179596
    2. '   ' → logprob: -2.054530620574951
    3. '_' → logprob: -2.679530620574951
    4. 'from' → logprob: -2.679530620574951
    5. '):
' → logprob: -2.679530620574951
    6. '_graph' → logprob: -3.554530620574951
    7. '):' → logprob: -3.929530620574951
    8. '_d' → logprob: -4.179530620574951
    9. '
' → logprob: -4.179530620574951
    10. ':' → logprob: -4.304530620574951

Token 788: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32635462284088135
    2. '
' → logprob: -2.451354503631592
    3. ' and' → logprob: -2.951354503631592
    4. 'if' → logprob: -3.826354503631592
    5. 'graph' → logprob: -4.326354503631592
    6. 'def' → logprob: -4.451354503631592
    7. 'and' → logprob: -4.701354503631592
    8. '"' → logprob: -4.701354503631592
    9. ' if' → logprob: -5.076354503631592
    10. '.' → logprob: -5.076354503631592

Token 789: ' and' (ID: 326)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.026552589610219002
    2. 'and' → logprob: -4.151552677154541
    3. ' and' → logprob: -5.401552677154541
    4. ' #' → logprob: -6.151552677154541
    5. 'if' → logprob: -6.901552677154541
    6. '
' → logprob: -7.026552677154541
    7. 'def' → logprob: -8.026552200317383
    8. 'visited' → logprob: -8.026552200317383
    9. 'dist' → logprob: -8.776552200317383
    10. ' then' → logprob: -8.776552200317383

Token 790: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2559325695037842
    2. 'for' → logprob: -2.255932569503784
    3. 'if' → logprob: -2.630932569503784
    4. ' print' → logprob: -4.880932807922363
    5. 'from' → logprob: -5.380932807922363
    6. '#' → logprob: -5.380932807922363
    7. 'import' → logprob: -5.505932807922363
    8. 'check' → logprob: -5.505932807922363
    9. 'dist' → logprob: -5.755932807922363
    10. ' for' → logprob: -5.880932807922363

Token 791: ' and' (ID: 326)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.2647311687469482
    2. '==' → logprob: -1.5147311687469482
    3. ',' → logprob: -1.8897311687469482
    4. ' and' → logprob: -2.6397311687469482
    5. 'd' → logprob: -2.7647311687469482
    6. 'and' → logprob: -3.0147311687469482
    7. 'in' → logprob: -3.6397311687469482
    8. 'from' → logprob: -3.6397311687469482
    9. ' in' → logprob: -4.139731407165527
    10. ',d' → logprob: -4.139731407165527

Token 792: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.47410833835601807
    2. ' d' → logprob: -0.9741083383560181
    3. ' ' → logprob: -11.349108695983887
    4. '`' → logprob: -12.224108695983887
    5. ' ' → logprob: -12.349108695983887
    6. '_d' → logprob: -12.974108695983887
    7. ''d' → logprob: -13.474108695983887
    8. ''' → logprob: -13.599108695983887
    9. 'space' → logprob: -14.099108695983887
    10. ' 
' → logprob: -14.349108695983887

Token 793: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.486071228981018
    2. ')' → logprob: -1.736071228981018
    3. ' in' → logprob: -1.861071228981018
    4. '
' → logprob: -2.1110711097717285
    5. '_' → logprob: -2.4860711097717285
    6. ',' → logprob: -3.1110711097717285
    7. 'in' → logprob: -3.4860711097717285
    8. 'import' → logprob: -3.9860711097717285
    9. '#' → logprob: -4.1110711097717285
    10. '_are' → logprob: -4.6110711097717285

Token 794: ' on' (ID: 402)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -0.510600745677948
    2. 'connected' → logprob: -1.6356008052825928
    3. 'on' → logprob: -1.7606008052825928
    4. 'both' → logprob: -4.260600566864014
    5. 'in' → logprob: -4.260600566864014
    6. ' on' → logprob: -6.135600566864014
    7. ' reachable' → logprob: -7.135600566864014
    8. ' connected' → logprob: -7.135600566864014
    9. ' in' → logprob: -8.385601043701172
    10. ' both' → logprob: -8.385601043701172

Token 795: ' some' (ID: 1236)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.18698203563690186
    2. ' the' → logprob: -1.8119820356369019
    3. ' a' → logprob: -5.686982154846191
    4. 'a' → logprob: -5.811982154846191
    5. 'dist' → logprob: -7.686982154846191
    6. ' shortest' → logprob: -8.686982154846191
    7. 's' → logprob: -10.311982154846191
    8. ' one' → logprob: -10.936982154846191
    9. '_the' → logprob: -10.936982154846191
    10. '\
' → logprob: -10.936982154846191

Token 796: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.21773511171340942
    2. 'short' → logprob: -1.7177350521087646
    3. 'path' → logprob: -4.592735290527344
    4. '#' → logprob: -5.842735290527344
    5. '```' → logprob: -6.717735290527344
    6. ' path' → logprob: -6.842735290527344
    7. 'Shortest' → logprob: -7.967735290527344
    8. '
' → logprob: -8.717735290527344
    9. ' #' → logprob: -9.967735290527344
    10. 'spath' → logprob: -10.092735290527344

Token 797: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.6403905153274536
    2. 'path' → logprob: -0.7653905153274536
    3. '_paths' → logprob: -5.265390396118164
    4. 'paths' → logprob: -7.015390396118164
    5. ' path' → logprob: -7.890390396118164
    6. '
' → logprob: -8.390390396118164
    7. 'line' → logprob: -8.515390396118164
    8. '   ' → logprob: -8.640390396118164
    9. '#' → logprob: -8.765390396118164
    10. '_line' → logprob: -9.140390396118164

Token 798: ' from' (ID: 591)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2511522769927979
    2. '
' → logprob: -1.6261522769927979
    3. 'def' → logprob: -1.8761522769927979
    4. 'dist' → logprob: -2.626152276992798
    5. 'if' → logprob: -2.876152276992798
    6. 'visited' → logprob: -3.126152276992798
    7. 'from' → logprob: -3.376152276992798
    8. 'dag' → logprob: -3.626152276992798
    9. 'dp' → logprob: -3.751152276992798
    10. ':
' → logprob: -3.876152276992798

Token 799: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0015102163888514042
    2. ' a' → logprob: -6.501510143280029
    3. '```' → logprob: -11.876510620117188
    4. 'the' → logprob: -15.251510620117188
    5. 'b' → logprob: -15.376510620117188
    6. '#a' → logprob: -16.251510620117188
    7. '`' → logprob: -16.876510620117188
    8. 'import' → logprob: -17.001510620117188
    9. '#' → logprob: -17.001510620117188
    10. ')a' → logprob: -17.251510620117188

Token 800: ' to' (ID: 316)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5256929397583008
    2. '#' → logprob: -1.2756929397583008
    3. 'import' → logprob: -2.650692939758301
    4. 'visited' → logprob: -3.900692939758301
    5. 'dist' → logprob: -4.525692939758301
    6. '
' → logprob: -4.775692939758301
    7. 'dp' → logprob: -5.025692939758301
    8. 'dag' → logprob: -5.150692939758301
    9. 'reachable' → logprob: -6.275692939758301
    10. 'def' → logprob: -6.650692939758301

Token 801: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.5048530030981055e-06
    2. ' b' → logprob: -13.500001907348633
    3. '```' → logprob: -19.500001907348633
    4. 'import' → logprob: -20.375001907348633
    5. '	b' → logprob: -20.625001907348633
    6. '_b' → logprob: -21.375001907348633
    7. ' ' → logprob: -21.750001907348633
    8. ')b' → logprob: -22.125001907348633
    9. '
' → logprob: -22.750001907348633
    10. '#' → logprob: -22.750001907348633

Token 802: ' in' (ID: 306)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.38235095143318176
    2. 'dist' → logprob: -2.2573509216308594
    3. 'import' → logprob: -2.3823509216308594
    4. 'dp' → logprob: -3.2573509216308594
    5. '#' → logprob: -3.5073509216308594
    6. 'visited' → logprob: -3.5073509216308594
    7. 'dag' → logprob: -4.507350921630859
    8. 'def' → logprob: -5.632350921630859
    9. 'reachable' → logprob: -5.882350921630859
    10. '
' → logprob: -6.382350921630859

Token 803: ' order' (ID: 2569)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.10728957504034042
    2. 'graph' → logprob: -3.1072895526885986
    3. 'short' → logprob: -3.6072895526885986
    4. ' the' → logprob: -4.107289791107178
    5. 'dist' → logprob: -5.482289791107178
    6. ' graph' → logprob: -5.607289791107178
    7. ' shortest' → logprob: -6.232289791107178
    8. '```' → logprob: -6.482289791107178
    9. '_graph' → logprob: -7.857289791107178
    10. 'edges' → logprob: -8.35728931427002

Token 804: '.

' (ID: 364)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1034796237945557
    2. 'dist' → logprob: -1.8534796237945557
    3. '#' → logprob: -2.1034796237945557
    4. 'dag' → logprob: -2.3534796237945557
    5. 'dp' → logprob: -2.4784796237945557
    6. 'import' → logprob: -2.7284796237945557
    7. 'visited' → logprob: -2.9784796237945557
    8. 'def' → logprob: -3.1034796237945557
    9. 'adj' → logprob: -4.353479385375977
    10. 'short' → logprob: -4.603479385375977

Token 805: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.4685457944869995
    2. '#' → logprob: -1.5935457944869995
    3. 'visited' → logprob: -1.7185457944869995
    4. 'dag' → logprob: -1.8435457944869995
    5. 'dp' → logprob: -2.343545913696289
    6. 'dist' → logprob: -2.718545913696289
    7. 'def' → logprob: -3.718545913696289
    8. 'import' → logprob: -4.718545913696289
    9. 'reachable' → logprob: -5.218545913696289
    10. '
' → logprob: -5.343545913696289

Token 806: ' So' (ID: 2632)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1080678701400757
    2. '#' → logprob: -1.7330678701400757
    3. 'dag' → logprob: -2.1080679893493652
    4. 'dist' → logprob: -2.1080679893493652
    5. 'visited' → logprob: -2.4830679893493652
    6. 'import' → logprob: -2.7330679893493652
    7. 'short' → logprob: -3.4830679893493652
    8. 'top' → logprob: -3.9830679893493652
    9. 'def' → logprob: -4.483067989349365
    10. 'in' → logprob: -4.483067989349365

Token 807: ' the' (ID: 290)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.2177518606185913
    2. '#' → logprob: -1.7177518606185913
    3. 'visited' → logprob: -1.8427518606185913
    4. 'sp' → logprob: -1.9677518606185913
    5. 'dist' → logprob: -2.467751979827881
    6. 'short' → logprob: -2.967751979827881
    7. 'import' → logprob: -2.967751979827881
    8. 'dag' → logprob: -4.092751979827881
    9. 'dp' → logprob: -4.967751979827881
    10. 'reachable' → logprob: -5.467751979827881

Token 808: ' plan' (ID: 3496)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5151796936988831
    2. '#' → logprob: -1.3901796340942383
    3. '
' → logprob: -3.2651796340942383
    4. 'import' → logprob: -3.5151796340942383
    5. 'short' → logprob: -3.7651796340942383
    6. '```' → logprob: -4.265179634094238
    7. 'graph' → logprob: -4.890179634094238
    8. 'dist' → logprob: -5.015179634094238
    9. ' from' → logprob: -5.515179634094238
    10. ' shortest' → logprob: -5.640179634094238

Token 809: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3180815577507019
    2. '#' → logprob: -2.4430816173553467
    3. ':
' → logprob: -2.5680816173553467
    4. ' is' → logprob: -3.3180816173553467
    5. '=' → logprob: -3.4430816173553467
    6. 'graph' → logprob: -4.068081378936768
    7. 'is' → logprob: -4.318081378936768
    8. ' =' → logprob: -5.318081378936768
    9. '
' → logprob: -6.568081378936768
    10. ' graph' → logprob: -6.943081378936768

Token 810: '#' (ID: 2)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.7616629004478455
    2. '#' → logprob: -1.7616629600524902
    3. 'from' → logprob: -2.2616629600524902
    4. 'visited' → logprob: -2.5116629600524902
    5. 'graph' → logprob: -2.8866629600524902
    6. 'short' → logprob: -3.2616629600524902
    7. 'sp' → logprob: -3.8866629600524902
    8. 'for' → logprob: -3.8866629600524902
    9. 'top' → logprob: -4.13666296005249
    10. 'import' → logprob: -4.63666296005249

Token 811: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1933619976043701
    2. 'dag' → logprob: -1.4433619976043701
    3. 'short' → logprob: -1.8183619976043701
    4. 'sp' → logprob: -2.56836199760437
    5. 'from' → logprob: -2.81836199760437
    6. 'visited' → logprob: -3.19336199760437
    7. 'graph' → logprob: -3.44336199760437
    8. 'top' → logprob: -3.69336199760437
    9. 'for' → logprob: -4.068362236022949
    10. 'dist' → logprob: -4.693362236022949

Token 812: '1' (ID: 16)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8842052817344666
    2. 'short' → logprob: -1.3842053413391113
    3. 'sp' → logprob: -2.1342053413391113
    4. 'dist' → logprob: -3.1342053413391113
    5. 'dag' → logprob: -3.1342053413391113
    6. 'from' → logprob: -3.3842053413391113
    7. 'for' → logprob: -3.6342053413391113
    8. 'visited' → logprob: -3.7592053413391113
    9. 'graph' → logprob: -4.134205341339111
    10. 'import' → logprob: -5.009205341339111

Token 813: ')' (ID: 8)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3198491036891937
    2. '=' → logprob: -2.5698490142822266
    3. ':' → logprob: -3.1948490142822266
    4. 'graph' → logprob: -3.3198490142822266
    5. '_build' → logprob: -3.4448490142822266
    6. '_graph' → logprob: -3.6948490142822266
    7. ' =' → logprob: -3.9448490142822266
    8. 'for' → logprob: -4.569849014282227
    9. '```' → logprob: -4.694849014282227
    10. 'import' → logprob: -5.194849014282227

Token 814: ' Compute' (ID: 45438)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.36980634927749634
    2. 'short' → logprob: -1.8698062896728516
    3. 'dist' → logprob: -3.3698062896728516
    4. '#' → logprob: -3.4948062896728516
    5. 'visited' → logprob: -3.6198062896728516
    6. 'sp' → logprob: -3.8698062896728516
    7. 'Build' → logprob: -4.369806289672852
    8. 'build' → logprob: -5.369806289672852
    9. 'reachable' → logprob: -5.619806289672852
    10. 'from' → logprob: -5.994806289672852

Token 815: ' dist' (ID: 3601)
  Prédit: 'short'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'short' → logprob: -1.0209598541259766
    2. 'dist' → logprob: -1.1459598541259766
    3. 'sp' → logprob: -1.3959598541259766
    4. 'for' → logprob: -3.8959598541259766
    5. '#' → logprob: -4.145959854125977
    6. 'in' → logprob: -4.645959854125977
    7. 'visited' → logprob: -4.770959854125977
    8. 'reachable' → logprob: -5.645959854125977
    9. 'edges' → logprob: -5.895959854125977
    10. 'from' → logprob: -5.895959854125977

Token 816: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.14359018206596375
    2. 'from' → logprob: -3.393590211868286
    3. '_from' → logprob: -3.518590211868286
    4. 'a' → logprob: -4.018589973449707
    5. '_s' → logprob: -4.393589973449707
    6. '_to' → logprob: -4.643589973449707
    7. '_sp' → logprob: -5.018589973449707
    8. '_d' → logprob: -5.143589973449707
    9. '_graph' → logprob: -5.143589973449707
    10. '_' → logprob: -5.518589973449707

Token 817: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7861273884773254
    2. '_b' → logprob: -1.9111273288726807
    3. 'b' → logprob: -2.7861273288726807
    4. '
' → logprob: -3.1611273288726807
    5. '```' → logprob: -3.2861273288726807
    6. 'graph' → logprob: -3.4111273288726807
    7. ')' → logprob: -3.5361273288726807
    8. '=' → logprob: -3.6611273288726807
    9. '#' → logprob: -3.6611273288726807
    10. '_' → logprob: -3.7861273288726807

Token 818: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0013441620394587517
    2. ' dist' → logprob: -6.626344203948975
    3. '#' → logprob: -12.001343727111816
    4. '```' → logprob: -12.251343727111816
    5. '1' → logprob: -12.626343727111816
    6. '
' → logprob: -13.626343727111816
    7. ' ' → logprob: -14.751343727111816
    8. 'graph' → logprob: -14.751343727111816
    9. 'b' → logprob: -14.876343727111816
    10. '2' → logprob: -14.876343727111816

Token 819: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.16044245660305023
    2. 'b' → logprob: -1.9104424715042114
    3. '#' → logprob: -9.410442352294922
    4. '```' → logprob: -10.035442352294922
    5. '_' → logprob: -10.410442352294922
    6. 'graph' → logprob: -10.785442352294922
    7. '
' → logprob: -11.160442352294922
    8. 'from' → logprob: -11.535442352294922
    9. '_a' → logprob: -12.035442352294922
    10. 'a' → logprob: -13.285442352294922

Token 820: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7303707599639893
    2. 'for' → logprob: -1.4803707599639893
    3. '
' → logprob: -2.2303707599639893
    4. 'dag' → logprob: -2.8553707599639893
    5. 'short' → logprob: -3.1053707599639893
    6. 'edges' → logprob: -3.3553707599639893
    7. 'sp' → logprob: -4.35537052154541
    8. 'graph' → logprob: -4.98037052154541
    9. 'used' → logprob: -5.60537052154541
    10. 'valid' → logprob: -5.73037052154541

Token 821: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9023402333259583
    2. 'short' → logprob: -1.9023401737213135
    3. 'dag' → logprob: -1.9023401737213135
    4. '#' → logprob: -2.2773401737213135
    5. 'edges' → logprob: -2.5273401737213135
    6. 'sp' → logprob: -3.4023401737213135
    7. 'used' → logprob: -4.027340412139893
    8. 'reachable' → logprob: -4.402340412139893
    9. 'visited' → logprob: -4.902340412139893
    10. 'graph' → logprob: -5.277340412139893

Token 822: ' ' (ID: 220)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.9946606159210205
    2. 'dag' → logprob: -1.4946606159210205
    3. '#' → logprob: -1.8696606159210205
    4. 'short' → logprob: -2.2446606159210205
    5. 'reachable' → logprob: -3.6196606159210205
    6. 'on' → logprob: -3.8696606159210205
    7. 'for' → logprob: -4.119660377502441
    8. 'edges' → logprob: -4.494660377502441
    9. 'top' → logprob: -4.744660377502441
    10. 'path' → logprob: -4.869660377502441

Token 823: '2' (ID: 17)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sp' → logprob: -1.0729087591171265
    2. 'dag' → logprob: -1.4479087591171265
    3. 'short' → logprob: -1.6979087591171265
    4. 'for' → logprob: -1.6979087591171265
    5. '#' → logprob: -3.572908878326416
    6. 'top' → logprob: -5.072908878326416
    7. 'dp' → logprob: -5.947908878326416
    8. 'reachable' → logprob: -6.072908878326416
    9. 'visited' → logprob: -6.072908878326416
    10. 'SP' → logprob: -6.322908878326416

Token 824: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005528050009161234
    2. '#' → logprob: -5.880527973175049
    3. ')
' → logprob: -6.005527973175049
    4. 'for' → logprob: -8.880528450012207
    5. '```' → logprob: -10.255528450012207
    6. '   ' → logprob: -11.005528450012207
    7. '=' → logprob: -11.255528450012207
    8. ')#' → logprob: -11.630528450012207
    9. ')

' → logprob: -11.880528450012207
    10. 'graph' → logprob: -11.880528450012207

Token 825: ' Build' (ID: 10885)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.908544659614563
    2. 'short' → logprob: -1.158544659614563
    3. 'sp' → logprob: -2.1585445404052734
    4. 'Build' → logprob: -2.5335445404052734
    5. 'dag' → logprob: -3.1585445404052734
    6. 'build' → logprob: -4.158544540405273
    7. 'Create' → logprob: -5.033544540405273
    8. '#' → logprob: -5.533544540405273
    9. 'graph' → logprob: -5.908544540405273
    10. 'For' → logprob: -6.408544540405273

Token 826: ' DAG' (ID: 157361)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.42861616611480713
    2. 'dag' → logprob: -1.3036161661148071
    3. 'short' → logprob: -2.8036160469055176
    4. 'adj' → logprob: -4.553616046905518
    5. 'graph' → logprob: -6.303616046905518
    6. '```' → logprob: -6.803616046905518
    7. ' sp' → logprob: -7.678616046905518
    8. ' dag' → logprob: -7.928616046905518
    9. 'spd' → logprob: -7.928616046905518
    10. 'dp' → logprob: -8.053616523742676

Token 827: ' where' (ID: 1919)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15426155924797058
    2. '=' → logprob: -2.904261589050293
    3. 'sp' → logprob: -3.529261589050293
    4. 'from' → logprob: -3.779261589050293
    5. 'graph' → logprob: -5.154261589050293
    6. 'edges' → logprob: -5.404261589050293
    7. 'dag' → logprob: -5.529261589050293
    8. 'short' → logprob: -5.529261589050293
    9. 'adj' → logprob: -5.654261589050293
    10. '_sp' → logprob: -5.779261589050293

Token 828: ' edge' (ID: 11165)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17573195695877075
    2. 'edges' → logprob: -2.175731897354126
    3. ' for' → logprob: -3.675731897354126
    4. 'dist' → logprob: -4.925732135772705
    5. ' edges' → logprob: -5.050732135772705
    6. 'u' → logprob: -5.675732135772705
    7. '```' → logprob: -6.550732135772705
    8. 'graph' → logprob: -6.800732135772705
    9. 'edge' → logprob: -6.800732135772705
    10. 'if' → logprob: -7.925732135772705

Token 829: ' u' (ID: 337)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.29900169372558594
    2. '(u' → logprob: -2.299001693725586
    3. '[u' → logprob: -2.424001693725586
    4. ' =' → logprob: -3.424001693725586
    5. '_list' → logprob: -4.174001693725586
    6. 'from' → logprob: -4.799001693725586
    7. 'u' → logprob: -5.424001693725586
    8. ' (' → logprob: -6.174001693725586
    9. 'list' → logprob: -7.049001693725586
    10. '(s' → logprob: -7.299001693725586

Token 830: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4584536850452423
    2. 's' → logprob: -1.20845365524292
    3. ' ->' → logprob: -3.83345365524292
    4. ')' → logprob: -4.70845365524292
    5. 'to' → logprob: -5.20845365524292
    6. ' to' → logprob: -5.20845365524292
    7. '_to' → logprob: -5.20845365524292
    8. '->' → logprob: -5.58345365524292
    9. ' in' → logprob: -5.95845365524292
    10. ' ,' → logprob: -6.08345365524292

Token 831: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0015031944494694471
    2. ' v' → logprob: -6.501502990722656
    3. 'u' → logprob: -14.001502990722656
    4. '```' → logprob: -18.126502990722656
    5. ',v' → logprob: -18.251502990722656
    6. '
' → logprob: -19.126502990722656
    7. '	v' → logprob: -19.126502990722656
    8. 'graph' → logprob: -19.251502990722656
    9. ' ' → logprob: -19.876502990722656
    10. '(v' → logprob: -20.001502990722656

Token 832: ' exists' (ID: 13031)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42389795184135437
    2. 's' → logprob: -1.7988979816436768
    3. 'if' → logprob: -2.9238979816436768
    4. ' if' → logprob: -3.1738979816436768
    5. ' is' → logprob: -3.9238979816436768
    6. ' exists' → logprob: -4.173897743225098
    7. '=' → logprob: -4.423897743225098
    8. '```' → logprob: -4.673897743225098
    9. ' in' → logprob: -4.798897743225098
    10. ',' → logprob: -5.548897743225098

Token 833: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20284511148929596
    2. 'if' → logprob: -1.7028450965881348
    3. '```' → logprob: -8.077845573425293
    4. '=' → logprob: -8.327845573425293
    5. '   ' → logprob: -8.452845573425293
    6. ' =' → logprob: -8.702845573425293
    7. ',' → logprob: -9.202845573425293
    8. '[u' → logprob: -9.577845573425293
    9. ' for' → logprob: -10.077845573425293
    10. ' in' → logprob: -10.077845573425293

Token 834: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.16024574637413025
    2. 'dist' → logprob: -1.9102457761764526
    3. '(dist' → logprob: -11.035245895385742
    4. ' ' → logprob: -12.785245895385742
    5. '`' → logprob: -14.035245895385742
    6. '```' → logprob: -14.160245895385742
    7. '	dist' → logprob: -15.035245895385742
    8. '_dist' → logprob: -15.035245895385742
    9. ' `' → logprob: -15.285245895385742
    10. ' (' → logprob: -15.285245895385742

Token 835: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.03732351213693619
    2. '[u' → logprob: -3.662323474884033
    3. '_u' → logprob: -4.537323474884033
    4. '_' → logprob: -9.662323951721191
    5. '[_' → logprob: -9.787323951721191
    6. 'a' → logprob: -10.287323951721191
    7. '```' → logprob: -10.287323951721191
    8. '   ' → logprob: -10.662323951721191
    9. '[v' → logprob: -11.162323951721191
    10. '_[' → logprob: -11.412323951721191

Token 836: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -8.220573363360018e-05
    2. '[' → logprob: -9.750082015991211
    3. ' [' → logprob: -11.750082015991211
    4. '```' → logprob: -12.000082015991211
    5. '[v' → logprob: -12.500082015991211
    6. '\[' → logprob: -12.500082015991211
    7. 'u' → logprob: -13.375082015991211
    8. '[
' → logprob: -15.500082015991211
    9. '   ' → logprob: -16.00008201599121
    10. '
' → logprob: -16.12508201599121

Token 837: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04984239116311073
    2. ']+' → logprob: -3.049842357635498
    3. '[u' → logprob: -6.924842357635498
    4. ' ]' → logprob: -9.299842834472656
    5. '```' → logprob: -9.674842834472656
    6. '[v' → logprob: -10.049842834472656
    7. '[' → logprob: -10.674842834472656
    8. '+' → logprob: -10.799842834472656
    9. '``' → logprob: -11.924842834472656
    10. '`]' → logprob: -12.424842834472656

Token 838: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07967749983072281
    2. ' +' → logprob: -2.5796775817871094
    3. '[u' → logprob: -7.579677581787109
    4. '[v' → logprob: -9.07967758178711
    5. '```' → logprob: -10.32967758178711
    6. '[' → logprob: -10.70467758178711
    7. '+w' → logprob: -10.70467758178711
    8. ']+' → logprob: -11.20467758178711
    9. '+c' → logprob: -11.32967758178711
    10. ' plus' → logprob: -12.07967758178711

Token 839: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005052898544818163
    2. ' w' → logprob: -5.3800530433654785
    3. '1' → logprob: -8.50505256652832
    4. 'v' → logprob: -9.63005256652832
    5. '```' → logprob: -10.00505256652832
    6. 'graph' → logprob: -10.50505256652832
    7. '   ' → logprob: -11.13005256652832
    8. 'edge' → logprob: -11.25505256652832
    9. '(w' → logprob: -11.50505256652832
    10. ' ' → logprob: -11.63005256652832

Token 840: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3254412114620209
    2. '+' → logprob: -1.3254412412643433
    3. '==' → logprob: -5.450441360473633
    4. ' <=' → logprob: -5.575441360473633
    5. ' ==' → logprob: -6.200441360473633
    6. '<=' → logprob: -6.825441360473633
    7. '```' → logprob: -7.200441360473633
    8. '[u' → logprob: -10.200441360473633
    9. ' ' → logprob: -10.450441360473633
    10. '[' → logprob: -11.075441360473633

Token 841: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.022732986137270927
    2. '1' → logprob: -3.897732973098755
    3. ' dist' → logprob: -6.272733211517334
    4. 'graph' → logprob: -9.272732734680176
    5. ' ' → logprob: -9.772732734680176
    6. '```' → logprob: -9.772732734680176
    7. '`' → logprob: -10.647732734680176
    8. '   ' → logprob: -10.647732734680176
    9. '(dist' → logprob: -11.272732734680176
    10. '(' → logprob: -11.772732734680176

Token 842: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.5254706740379333
    2. '_a' → logprob: -1.0254707336425781
    3. '[v' → logprob: -3.150470733642578
    4. '_u' → logprob: -5.900470733642578
    5. '_v' → logprob: -6.525470733642578
    6. '[u' → logprob: -6.775470733642578
    7. '(v' → logprob: -7.525470733642578
    8. 'v' → logprob: -7.650470733642578
    9. 'a' → logprob: -8.400470733642578
    10. 'u' → logprob: -8.525470733642578

Token 843: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -12.625004768371582
    3. '[u' → logprob: -14.000004768371582
    4. '```' → logprob: -15.250004768371582
    5. ' [' → logprob: -15.375004768371582
    6. '   ' → logprob: -15.500004768371582
    7. 'v' → logprob: -15.750004768371582
    8. '[(' → logprob: -16.3750057220459
    9. '``' → logprob: -18.2500057220459
    10. '(v' → logprob: -18.2500057220459

Token 844: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.13725070655345917
    2. '==' → logprob: -2.6372506618499756
    3. ']==' → logprob: -3.2622506618499756
    4. ' ==' → logprob: -4.012250900268555
    5. ')' → logprob: -9.637250900268555
    6. '']' → logprob: -10.012250900268555
    7. ')==' → logprob: -10.137250900268555
    8. '```' → logprob: -10.137250900268555
    9. '[u' → logprob: -10.512250900268555
    10. ' ]' → logprob: -10.512250900268555

Token 845: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18117620050907135
    2. '==' → logprob: -1.8061761856079102
    3. ' <=' → logprob: -6.68117618560791
    4. '<=' → logprob: -9.18117618560791
    5. '```' → logprob: -9.93117618560791
    6. '=' → logprob: -11.80617618560791
    7. ' ' → logprob: -12.43117618560791
    8. ')==' → logprob: -12.43117618560791
    9. ']==' → logprob: -12.68117618560791
    10. '   ' → logprob: -13.55617618560791

Token 846: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0005530327325686812
    2. ' dist' → logprob: -7.500553131103516
    3. '```' → logprob: -19.750553131103516
    4. '(dist' → logprob: -19.875553131103516
    5. '	dist' → logprob: -20.000553131103516
    6. 'Dist' → logprob: -20.875553131103516
    7. '`' → logprob: -21.125553131103516
    8. '_dist' → logprob: -21.375553131103516
    9. '.dist' → logprob: -22.625553131103516
    10. '   ' → logprob: -23.000553131103516

Token 847: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -2.696889623621246e-06
    2. 'a' → logprob: -13.00000286102295
    3. '_' → logprob: -15.87500286102295
    4. ' _' → logprob: -16.125001907348633
    5. '[a' → logprob: -16.125001907348633
    6. '```' → logprob: -18.000001907348633
    7. '\' → logprob: -18.250001907348633
    8. '[_' → logprob: -19.000001907348633
    9. ' a' → logprob: -19.000001907348633
    10. '_[' → logprob: -19.125001907348633

Token 848: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.003613847540691495
    2. '[u' → logprob: -5.7536139488220215
    3. 'b' → logprob: -7.7536139488220215
    4. '[' → logprob: -13.378613471984863
    5. '   ' → logprob: -13.503613471984863
    6. '```' → logprob: -13.878613471984863
    7. '_b' → logprob: -14.378613471984863
    8. '[a' → logprob: -14.628613471984863
    9. ' ' → logprob: -15.003613471984863
    10. ' [' → logprob: -15.128613471984863

Token 849: '].
' (ID: 49887)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3058827519416809
    2. ':' → logprob: -1.8058826923370361
    3. ' and' → logprob: -3.055882692337036
    4. '):' → logprob: -3.430882692337036
    5. ':
' → logprob: -5.180882930755615
    6. '):
' → logprob: -5.305882930755615
    7. ']' → logprob: -5.805882930755615
    8. '   ' → logprob: -5.805882930755615
    9. ')
' → logprob: -7.055882930755615
    10. 'and' → logprob: -7.805882930755615

Token 850: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13360603153705597
    2. 'graph' → logprob: -2.50860595703125
    3. ' for' → logprob: -4.50860595703125
    4. 'dag' → logprob: -5.00860595703125
    5. 'if' → logprob: -5.13360595703125
    6. '```' → logprob: -5.63360595703125
    7. '
' → logprob: -5.75860595703125
    8. ' =' → logprob: -5.88360595703125
    9. 'u' → logprob: -6.00860595703125
    10. '#' → logprob: -6.25860595703125

Token 851: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07116507738828659
    2. 'dag' → logprob: -2.696165084838867
    3. 'dp' → logprob: -8.571165084838867
    4. ' for' → logprob: -8.696165084838867
    5. '```' → logprob: -8.696165084838867
    6. 'edges' → logprob: -9.071165084838867
    7. '
' → logprob: -9.196165084838867
    8. '   ' → logprob: -9.321165084838867
    9. '#' → logprob: -9.696165084838867
    10. 'graph' → logprob: -9.946165084838867

Token 852: '3' (ID: 18)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03576076775789261
    2. 'dag' → logprob: -3.5357608795166016
    3. 'from' → logprob: -6.785760879516602
    4. 'in' → logprob: -6.910760879516602
    5. 'graph' → logprob: -7.035760879516602
    6. '```' → logprob: -7.535760879516602
    7. 'visited' → logprob: -7.660760879516602
    8. '#' → logprob: -7.785760879516602
    9. 'ind' → logprob: -8.410760879516602
    10. '   ' → logprob: -8.535760879516602

Token 853: ')' (ID: 8)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7576543092727661
    2. '#' → logprob: -1.1326543092727661
    3. 'ind' → logprob: -2.2576541900634766
    4. 'in' → logprob: -3.0076541900634766
    5. 'visited' → logprob: -4.382654190063477
    6. ')' → logprob: -4.882654190063477
    7. 'for' → logprob: -4.882654190063477
    8. 'top' → logprob: -5.257654190063477
    9. '```' → logprob: -5.257654190063477
    10. '   ' → logprob: -5.507654190063477

Token 854: ' For' (ID: 2214)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7856605052947998
    2. 'import' → logprob: -1.5356605052947998
    3. 'ind' → logprob: -2.4106605052948
    4. 'in' → logprob: -2.6606605052948
    5. 'visited' → logprob: -2.6606605052948
    6. 'for' → logprob: -3.4106605052948
    7. '#' → logprob: -3.5356605052948
    8. 'top' → logprob: -4.035660743713379
    9. 'reverse' → logprob: -4.910660743713379
    10. 'dag' → logprob: -5.410660743713379

Token 855: ' each' (ID: 2454)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.0676039457321167
    2. 'top' → logprob: -1.4426039457321167
    3. 'each' → logprob: -1.8176039457321167
    4. ' top' → logprob: -2.9426040649414062
    5. ' node' → logprob: -3.3176040649414062
    6. ' each' → logprob: -3.3176040649414062
    7. 'node' → logprob: -3.3176040649414062
    8. '_top' → logprob: -3.4426040649414062
    9. ' u' → logprob: -4.317604064941406
    10. '_' → logprob: -4.317604064941406

Token 856: ' query' (ID: 5703)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.2998193502426147
    2. 'edge' → logprob: -1.4248193502426147
    3. 'node' → logprob: -1.7998193502426147
    4. ' edge' → logprob: -2.0498194694519043
    5. ' node' → logprob: -2.4248194694519043
    6. ' line' → logprob: -3.0498194694519043
    7. 'query' → logprob: -3.9248194694519043
    8. 'line' → logprob: -4.549819469451904
    9. ' u' → logprob: -4.549819469451904
    10. ' query' → logprob: -5.049819469451904

Token 857: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7610021829605103
    2. ',' → logprob: -1.0110021829605103
    3. '   ' → logprob: -3.0110020637512207
    4. ':
' → logprob: -3.3860020637512207
    5. ' in' → logprob: -3.7610020637512207
    6. 'in' → logprob: -4.011002063751221
    7. 'for' → logprob: -4.386002063751221
    8. '[u' → logprob: -5.136002063751221
    9. ' (' → logprob: -5.636002063751221
    10. 'if' → logprob: -6.011002063751221

Token 858: ' check' (ID: 2371)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2002276182174683
    2. 'import' → logprob: -1.5752276182174683
    3. 'check' → logprob: -1.8252276182174683
    4. 'if' → logprob: -2.200227737426758
    5. ' check' → logprob: -2.575227737426758
    6. '#' → logprob: -3.325227737426758
    7. '
' → logprob: -3.575227737426758
    8. 'from' → logprob: -3.700227737426758
    9. '   ' → logprob: -3.950227737426758
    10. '```' → logprob: -4.325227737426758

Token 859: ':
' (ID: 734)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2853955924510956
    2. ' if' → logprob: -1.410395622253418
    3. '   ' → logprob: -6.410395622253418
    4. '
' → logprob: -6.785395622253418
    5. '`' → logprob: -7.660395622253418
    6. 'graph' → logprob: -7.910395622253418
    7. ''' → logprob: -8.910395622253418
    8. '```' → logprob: -9.160395622253418
    9. 'dist' → logprob: -9.785395622253418
    10. '    
' → logprob: -10.160395622253418

Token 860: '#' (ID: 2)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.19967719912528992
    2. 'if' → logprob: -2.3246772289276123
    3. '#' → logprob: -3.5746772289276123
    4. '   ' → logprob: -3.6996772289276123
    5. ' #' → logprob: -3.9496772289276123
    6. ''' → logprob: -5.324676990509033
    7. '`' → logprob: -6.449676990509033
    8. '```' → logprob: -7.074676990509033
    9. ' ' → logprob: -7.324676990509033
    10. '"' → logprob: -7.324676990509033

Token 861: '  ' (ID: 256)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7457607984542847
    2. ' if' → logprob: -1.1207607984542847
    3. ' c' → logprob: -3.245760917663574
    4. ' u' → logprob: -3.620760917663574
    5. ' dist' → logprob: -3.995760917663574
    6. ' (' → logprob: -3.995760917663574
    7. '   ' → logprob: -4.120760917663574
    8. '`' → logprob: -4.370760917663574
    9. 'c' → logprob: -4.495760917663574
    10. 'graph' → logprob: -4.495760917663574

Token 862: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8496637344360352
    2. ' if' → logprob: -1.0996637344360352
    3. ' dist' → logprob: -1.8496637344360352
    4. 'dist' → logprob: -3.474663734436035
    5. '`' → logprob: -3.849663734436035
    6. 'graph' → logprob: -4.224663734436035
    7. ' graph' → logprob: -5.724663734436035
    8. ' c' → logprob: -5.974663734436035
    9. ''' → logprob: -6.099663734436035
    10. 'c' → logprob: -6.224663734436035

Token 863: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.8206864595413208
    2. ' dist' → logprob: -1.0706864595413208
    3. 'c' → logprob: -1.8206864595413208
    4. ' c' → logprob: -2.9456863403320312
    5. '`' → logprob: -7.820686340332031
    6. ' all' → logprob: -8.070686340332031
    7. 'Both' → logprob: -8.070686340332031
    8. 'both' → logprob: -8.195686340332031
    9. ' both' → logprob: -8.320686340332031
    10. '(dist' → logprob: -8.695686340332031

Token 864: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0026076447684317827
    2. '_c' → logprob: -6.252607822418213
    3. '_' → logprob: -8.627607345581055
    4. 'a' → logprob: -9.002607345581055
    5. '[c' → logprob: -9.002607345581055
    6. ' _' → logprob: -9.127607345581055
    7. '[a' → logprob: -10.502607345581055
    8. '_b' → logprob: -11.002607345581055
    9. '[_' → logprob: -11.252607345581055
    10. '`' → logprob: -11.377607345581055

Token 865: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0003179465711582452
    2. '[' → logprob: -8.375317573547363
    3. 'c' → logprob: -9.625317573547363
    4. ' [' → logprob: -11.625317573547363
    5. '[u' → logprob: -11.750317573547363
    6. '_c' → logprob: -13.375317573547363
    7. '```' → logprob: -14.500317573547363
    8. '][' → logprob: -15.000317573547363
    9. '[C' → logprob: -15.125317573547363
    10. '[a' → logprob: -15.125317573547363

Token 866: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0189543217420578
    2. '[c' → logprob: -4.143954277038574
    3. ']==' → logprob: -6.268954277038574
    4. ']+' → logprob: -7.893954277038574
    5. '][' → logprob: -8.268954277038574
    6. '`]' → logprob: -8.518954277038574
    7. '']' → logprob: -10.518954277038574
    8. '],' → logprob: -10.518954277038574
    9. '[' → logprob: -10.643954277038574
    10. ']<=' → logprob: -11.143954277038574

Token 867: ' +' (ID: 659)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.08721382170915604
    2. '[c' → logprob: -2.8372137546539307
    3. '<=' → logprob: -4.83721399307251
    4. ' >=' → logprob: -5.71221399307251
    5. ' ==' → logprob: -5.83721399307251
    6. ']' → logprob: -5.96221399307251
    7. '[u' → logprob: -6.71221399307251
    8. '```' → logprob: -6.96221399307251
    9. ' +' → logprob: -7.08721399307251
    10. ' ' → logprob: -7.08721399307251

Token 868: ' dist' (ID: 3601)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2335023581981659
    2. 'graph' → logprob: -1.7335023880004883
    3. '0' → logprob: -4.358502388000488
    4. 'c' → logprob: -5.358502388000488
    5. 'dist' → logprob: -5.858502388000488
    6. ' w' → logprob: -6.108502388000488
    7. ' graph' → logprob: -6.233502388000488
    8. '(graph' → logprob: -6.733502388000488
    9. '1' → logprob: -6.858502388000488
    10. 'd' → logprob: -7.233502388000488

Token 869: '_b' (ID: 1535)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.015163891017436981
    2. '[w' → logprob: -5.140163898468018
    3. '_w' → logprob: -6.140163898468018
    4. '[c' → logprob: -6.265163898468018
    5. 'd' → logprob: -6.765163898468018
    6. 'v' → logprob: -6.890163898468018
    7. 'c' → logprob: -7.140163898468018
    8. '[v' → logprob: -7.140163898468018
    9. '[u' → logprob: -8.01516342163086
    10. '[d' → logprob: -8.14016342163086

Token 870: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.010271850973367691
    2. '[d' → logprob: -4.635272026062012
    3. '[' → logprob: -8.510272026062012
    4. 'c' → logprob: -9.135272026062012
    5. '[v' → logprob: -10.010272026062012
    6. ' [' → logprob: -10.135272026062012
    7. 'd' → logprob: -10.260272026062012
    8. '   ' → logprob: -10.885272026062012
    9. ']' → logprob: -11.135272026062012
    10. '][' → logprob: -11.385272026062012

Token 871: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.30587249994277954
    2. ' <=' → logprob: -2.3058724403381348
    3. ' +' → logprob: -2.6808724403381348
    4. ' ==' → logprob: -3.0558724403381348
    5. ' ]' → logprob: -3.4308724403381348
    6. ']+' → logprob: -5.180872440338135
    7. ' <' → logprob: -5.430872440338135
    8. ']==' → logprob: -6.055872440338135
    9. '+' → logprob: -6.680872440338135
    10. ']<=' → logprob: -8.055872917175293

Token 872: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.35812273621559143
    2. ' ==' → logprob: -1.358122706413269
    3. '[c' → logprob: -3.3581228256225586
    4. ')' → logprob: -5.858122825622559
    5. '==' → logprob: -6.483122825622559
    6. ']' → logprob: -6.608122825622559
    7. ' >=' → logprob: -7.233122825622559
    8. '<=' → logprob: -7.233122825622559
    9. ' ' → logprob: -8.233122825622559
    10. ' +' → logprob: -8.358122825622559

Token 873: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.10020817816257477
    2. ' dist' → logprob: -2.350208282470703
    3. '	dist' → logprob: -14.225208282470703
    4. '   ' → logprob: -14.975208282470703
    5. '```' → logprob: -15.725208282470703
    6. '(dist' → logprob: -15.975208282470703
    7. ' ' → logprob: -16.475208282470703
    8. '_dist' → logprob: -16.725208282470703
    9. 'Dist' → logprob: -16.975208282470703
    10. '`' → logprob: -17.100208282470703

Token 874: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0003600144700612873
    2. '_b' → logprob: -9.375360488891602
    3. '[c' → logprob: -9.375360488891602
    4. '[a' → logprob: -9.750360488891602
    5. '_[' → logprob: -10.375360488891602
    6. 'a' → logprob: -10.500360488891602
    7. '[b' → logprob: -10.625360488891602
    8. '_c' → logprob: -10.750360488891602
    9. '[_' → logprob: -11.250360488891602
    10. ' _' → logprob: -12.625360488891602

Token 875: '[b' (ID: 40800)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.5492556095123291
    2. '[b' → logprob: -0.9242556095123291
    3. 'b' → logprob: -3.799255609512329
    4. 'c' → logprob: -6.17425537109375
    5. '[' → logprob: -7.79925537109375
    6. ' [' → logprob: -8.04925537109375
    7. '[a' → logprob: -8.67425537109375
    8. ' ' → logprob: -9.67425537109375
    9. '   ' → logprob: -9.79925537109375
    10. '```' → logprob: -9.79925537109375

Token 876: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.025671212002635002
    2. ' and' → logprob: -3.9006712436676025
    3. ')' → logprob: -5.775671005249023
    4. 'and' → logprob: -6.900671005249023
    5. '']' → logprob: -7.275671005249023
    6. ' ]' → logprob: -9.150671005249023
    7. ']
' → logprob: -10.400671005249023
    8. '   ' → logprob: -10.400671005249023
    9. '],' → logprob: -10.650671005249023
    10. '[c' → logprob: -11.150671005249023

Token 877: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09317022562026978
    2. 'and' → logprob: -2.968170166015625
    3. '
' → logprob: -3.468170166015625
    4. 'if' → logprob: -5.843170166015625
    5. ')' → logprob: -6.593170166015625
    6. ' if' → logprob: -7.093170166015625
    7. '   ' → logprob: -8.468170166015625
    8. ':
' → logprob: -8.718170166015625
    9. ',' → logprob: -9.093170166015625
    10. '```' → logprob: -9.093170166015625

Token 878: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04136321693658829
    2. 'c' → logprob: -3.91636323928833
    3. ' c' → logprob: -4.41636323928833
    4. ' )' → logprob: -5.41636323928833
    5. '0' → logprob: -6.91636323928833
    6. '`)' → logprob: -7.29136323928833
    7. ' ' → logprob: -7.54136323928833
    8. ')c' → logprob: -7.79136323928833
    9. ''' → logprob: -8.541362762451172
    10. '`' → logprob: -8.541362762451172

Token 879: ' is' (ID: 382)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.42281636595726013
    2. ')' → logprob: -1.1728163957595825
    3. '])' → logprob: -4.172816276550293
    4. ' and' → logprob: -5.422816276550293
    5. ')]' → logprob: -5.797816276550293
    6. ' in' → logprob: -6.172816276550293
    7. ' ==' → logprob: -6.297816276550293
    8. ']==' → logprob: -6.422816276550293
    9. ' !=' → logprob: -7.047816276550293
    10. ' )' → logprob: -7.172816276550293

Token 880: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.20920826494693756
    2. ' in' → logprob: -2.0842082500457764
    3. 'on' → logprob: -3.4592082500457764
    4. 'in' → logprob: -3.9592082500457764
    5. ' ' → logprob: -5.2092084884643555
    6. ')' → logprob: -5.5842084884643555
    7. ' a' → logprob: -6.7092084884643555
    8. ' not' → logprob: -7.0842084884643555
    9. '_on' → logprob: -7.3342084884643555
    10. '_' → logprob: -8.084208488464355

Token 881: ' some' (ID: 1236)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6936541795730591
    2. 'the' → logprob: -1.068654179573059
    3. ' shortest' → logprob: -1.943654179573059
    4. 'dist' → logprob: -5.0686540603637695
    5. 'c' → logprob: -6.3186540603637695
    6. ' dist' → logprob: -6.4436540603637695
    7. ' a' → logprob: -6.6936540603637695
    8. 'a' → logprob: -6.8186540603637695
    9. ' c' → logprob: -7.4436540603637695
    10. 'path' → logprob: -8.31865406036377

Token 882: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.0005052540800534189
    2. 'short' → logprob: -7.625505447387695
    3. 'Shortest' → logprob: -12.125505447387695
    4. ' #' → logprob: -12.125505447387695
    5. ' ' → logprob: -13.000505447387695
    6. '#' → logprob: -13.625505447387695
    7. '   ' → logprob: -14.250505447387695
    8. 'path' → logprob: -14.500505447387695
    9. '_short' → logprob: -14.500505447387695
    10. ' path' → logprob: -14.875505447387695

Token 883: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.10631518810987473
    2. ' path' → logprob: -2.9813151359558105
    3. 'path' → logprob: -3.6063151359558105
    4. '_' → logprob: -4.1063151359558105
    5. ')' → logprob: -6.2313151359558105
    6. ' _' → logprob: -6.4813151359558105
    7. '_paths' → logprob: -6.6063151359558105
    8. ')_' → logprob: -7.2313151359558105
    9. ' ' → logprob: -8.231315612792969
    10. '```' → logprob: -8.981315612792969

Token 884: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28473350405693054
    2. ' and' → logprob: -1.409733533859253
    3. 'and' → logprob: -5.909733295440674
    4. ')
' → logprob: -7.784733295440674
    5. '),' → logprob: -9.159733772277832
    6. '   ' → logprob: -9.159733772277832
    7. ' )' → logprob: -9.909733772277832
    8. '
' → logprob: -10.284733772277832
    9. '')' → logprob: -10.409733772277832
    10. ' ' → logprob: -10.534733772277832

Token 885: '#' (ID: 2)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5511801838874817
    2. ' and' → logprob: -1.801180124282837
    3. ' ' → logprob: -1.926180124282837
    4. 'and' → logprob: -2.926180124282837
    5. '```' → logprob: -3.551180124282837
    6. ' if' → logprob: -4.551180362701416
    7. '#' → logprob: -5.426180362701416
    8. ')' → logprob: -5.551180362701416
    9. 'if' → logprob: -5.551180362701416
    10. ',' → logprob: -6.051180362701416

Token 886: '  ' (ID: 256)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10979260504245758
    2. 'and' → logprob: -3.109792709350586
    3. '   ' → logprob: -3.609792709350586
    4. ' ' → logprob: -4.609792709350586
    5. '```' → logprob: -4.609792709350586
    6. ')' → logprob: -5.109792709350586
    7. ',' → logprob: -6.234792709350586
    8. ''' → logprob: -7.234792709350586
    9. ' if' → logprob: -7.484792709350586
    10. '  ' → logprob: -7.984792709350586

Token 887: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03595571964979172
    2. '   ' → logprob: -4.535955905914307
    3. ' and' → logprob: -5.035955905914307
    4. 'and' → logprob: -5.285955905914307
    5. '  ' → logprob: -5.910955905914307
    6. ')' → logprob: -5.910955905914307
    7. 'dist' → logprob: -6.160955905914307
    8. ''' → logprob: -6.535955905914307
    9. ' #' → logprob: -7.785955905914307
    10. '#' → logprob: -7.910955905914307

Token 888: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.5761641263961792
    2. 'dist' → logprob: -0.8261641263961792
    3. '   ' → logprob: -8.701164245605469
    4. '(dist' → logprob: -10.701164245605469
    5. '```' → logprob: -11.451164245605469
    6. ' ' → logprob: -12.326164245605469
    7. '
' → logprob: -12.701164245605469
    8. '  ' → logprob: -13.076164245605469
    9. '	dist' → logprob: -13.326164245605469
    10. ' ' → logprob: -13.451164245605469

Token 889: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.014477500692009926
    2. '_b' → logprob: -4.264477729797363
    3. 'a' → logprob: -8.639477729797363
    4. '_d' → logprob: -10.139477729797363
    5. '_c' → logprob: -10.264477729797363
    6. 'b' → logprob: -10.764477729797363
    7. '```' → logprob: -11.264477729797363
    8. '[c' → logprob: -11.764477729797363
    9. '[a' → logprob: -12.764477729797363
    10. '_' → logprob: -12.764477729797363

Token 890: '[d' (ID: 48377)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0020644953474402428
    2. '[d' → logprob: -6.7520647048950195
    3. 'c' → logprob: -7.1270647048950195
    4. '[' → logprob: -9.87706470489502
    5. 'd' → logprob: -10.87706470489502
    6. ' [' → logprob: -12.25206470489502
    7. '_c' → logprob: -12.37706470489502
    8. '[b' → logprob: -12.37706470489502
    9. '```' → logprob: -13.50206470489502
    10. '[u' → logprob: -13.62706470489502

Token 891: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.029302695766091347
    2. '[d' → logprob: -4.154302597045898
    3. '[c' → logprob: -5.029302597045898
    4. ']+' → logprob: -5.279302597045898
    5. 'd' → logprob: -7.154302597045898
    6. '][' → logprob: -8.279302597045898
    7. '`]' → logprob: -8.904302597045898
    8. ']==' → logprob: -8.904302597045898
    9. 'c' → logprob: -9.779302597045898
    10. '']' → logprob: -10.154302597045898

Token 892: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08115764707326889
    2. '+' → logprob: -2.706157684326172
    3. '[c' → logprob: -5.831157684326172
    4. '```' → logprob: -5.831157684326172
    5. ')' → logprob: -6.081157684326172
    6. ' ==' → logprob: -7.706157684326172
    7. ']' → logprob: -7.831157684326172
    8. '==' → logprob: -8.206157684326172
    9. '+c' → logprob: -8.206157684326172
    10. '[d' → logprob: -8.331157684326172

Token 893: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4741201102733612
    2. ' dist' → logprob: -0.9741201400756836
    3. 'b' → logprob: -10.224120140075684
    4. '```' → logprob: -13.099120140075684
    5. '1' → logprob: -13.474120140075684
    6. '(dist' → logprob: -13.599120140075684
    7. ' b' → logprob: -13.974120140075684
    8. '`' → logprob: -14.599120140075684
    9. ' ' → logprob: -15.849120140075684
    10. '``' → logprob: -15.974120140075684

Token 894: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -5.319370302458992e-06
    2. 'b' → logprob: -12.750005722045898
    3. '_d' → logprob: -13.500005722045898
    4. '```' → logprob: -14.625005722045898
    5. ''_' → logprob: -15.875005722045898
    6. 'd' → logprob: -15.875005722045898
    7. ' _' → logprob: -16.5000057220459
    8. '_a' → logprob: -16.8750057220459
    9. '_' → logprob: -16.8750057220459
    10. '[d' → logprob: -18.0000057220459

Token 895: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.00019030878320336342
    2. 'd' → logprob: -8.750190734863281
    3. '[c' → logprob: -10.625190734863281
    4. '[' → logprob: -12.875190734863281
    5. '```' → logprob: -13.000190734863281
    6. '(d' → logprob: -14.250190734863281
    7. '==' → logprob: -14.750190734863281
    8. '=d' → logprob: -15.000190734863281
    9. ' d' → logprob: -15.250190734863281
    10. '>d' → logprob: -15.500190734863281

Token 896: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8070018887519836
    2. ']' → logprob: -1.0570018291473389
    3. ' ==' → logprob: -1.6820018291473389
    4. ']==' → logprob: -3.932001829147339
    5. '']' → logprob: -8.182002067565918
    6. '```' → logprob: -8.307002067565918
    7. '']==' → logprob: -10.307002067565918
    8. '==
' → logprob: -10.682002067565918
    9. '``' → logprob: -10.807002067565918
    10. '#' → logprob: -10.807002067565918

Token 897: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.048866331577301025
    2. '==' → logprob: -3.0488662719726562
    3. ']==' → logprob: -9.423866271972656
    4. ' <=' → logprob: -9.798866271972656
    5. ']' → logprob: -9.923866271972656
    6. '```' → logprob: -10.048866271972656
    7. ')' → logprob: -11.298866271972656
    8. ')==' → logprob: -11.298866271972656
    9. '[c' → logprob: -12.423866271972656
    10. ' ' → logprob: -12.673866271972656

Token 898: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.38688236474990845
    2. 'dist' → logprob: -1.1368823051452637
    3. '(dist' → logprob: -11.886882781982422
    4. '`' → logprob: -12.886882781982422
    5. '```' → logprob: -13.761882781982422
    6. '	dist' → logprob: -15.011882781982422
    7. '"' → logprob: -15.761882781982422
    8. '_dist' → logprob: -15.886882781982422
    9. ''' → logprob: -16.511882781982422
    10. '.dist' → logprob: -16.761882781982422

Token 899: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00016182278341148049
    2. 'a' → logprob: -9.500162124633789
    3. '[a' → logprob: -9.875162124633789
    4. 'dist' → logprob: -11.375162124633789
    5. '[d' → logprob: -11.500162124633789
    6. '```' → logprob: -11.875162124633789
    7. '[b' → logprob: -13.625162124633789
    8. '   ' → logprob: -13.625162124633789
    9. 'd' → logprob: -13.875162124633789
    10. '_d' → logprob: -13.875162124633789

Token 900: '[b' (ID: 40800)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.26655638217926025
    2. '[b' → logprob: -1.5165563821792603
    3. 'd' → logprob: -4.391556262969971
    4. '[c' → logprob: -6.516556262969971
    5. 'b' → logprob: -7.641556262969971
    6. '```' → logprob: -9.266556739807129
    7. '[' → logprob: -10.141556739807129
    8. '[
' → logprob: -11.766556739807129
    9. ' d' → logprob: -12.266556739807129
    10. ' ' → logprob: -12.641556739807129

Token 901: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05870776250958443
    2. ']' → logprob: -3.0587077140808105
    3. ')
' → logprob: -5.1837077140808105
    4. ' and' → logprob: -6.0587077140808105
    5. ']
' → logprob: -7.5587077140808105
    6. '
' → logprob: -7.8087077140808105
    7. '#' → logprob: -8.308708190917969
    8. 'and' → logprob: -8.308708190917969
    9. '   ' → logprob: -8.558708190917969
    10. ' (' → logprob: -9.308708190917969

Token 902: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23661530017852783
    2. 'and' → logprob: -2.4866151809692383
    3. '
' → logprob: -2.8616151809692383
    4. ' and' → logprob: -3.3616151809692383
    5. '   ' → logprob: -3.8616151809692383
    6. ' if' → logprob: -4.986615180969238
    7. '```' → logprob: -5.236615180969238
    8. 'for' → logprob: -6.736615180969238
    9. '``' → logprob: -7.486615180969238
    10. '#' → logprob: -8.236615180969238

Token 903: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.010113254189491272
    2. ' d' → logprob: -4.63511323928833
    3. 'dist' → logprob: -8.010113716125488
    4. 'c' → logprob: -11.135113716125488
    5. ' dist' → logprob: -12.135113716125488
    6. ' ' → logprob: -13.635113716125488
    7. ' c' → logprob: -14.010113716125488
    8. '
' → logprob: -14.635113716125488
    9. '   ' → logprob: -14.635113716125488
    10. '#' → logprob: -14.635113716125488

Token 904: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3302057385444641
    2. ']' → logprob: -1.5802056789398193
    3. ' is' → logprob: -3.9552056789398193
    4. '[c' → logprob: -3.9552056789398193
    5. '```' → logprob: -4.205205917358398
    6. '==' → logprob: -5.455205917358398
    7. ' ==' → logprob: -5.580205917358398
    8. ')]' → logprob: -5.955205917358398
    9. '``' → logprob: -6.455205917358398
    10. ']==' → logprob: -6.580205917358398

Token 905: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.1428389549255371
    2. 'on' → logprob: -2.017838954925537
    3. '	on' → logprob: -9.392839431762695
    4. ' also' → logprob: -10.267839431762695
    5. ' ' → logprob: -11.392839431762695
    6. '```' → logprob: -11.767839431762695
    7. '_on' → logprob: -12.142839431762695
    8. '   ' → logprob: -12.392839431762695
    9. 'also' → logprob: -12.392839431762695
    10. ' ' → logprob: -12.517839431762695

Token 906: ' some' (ID: 1236)
  Prédit: ' some'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' some' → logprob: -0.1809440553188324
    2. 'some' → logprob: -1.8059440851211548
    3. ' dist' → logprob: -7.055943965911865
    4. 'dist' → logprob: -8.680944442749023
    5. ' ' → logprob: -9.930944442749023
    6. 'Some' → logprob: -10.555944442749023
    7. ' the' → logprob: -10.555944442749023
    8. ' c' → logprob: -11.055944442749023
    9. ' d' → logprob: -11.055944442749023
    10. ' Some' → logprob: -11.680944442749023

Token 907: ' shortest' (ID: 70564)
  Prédit: ' shortest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -0.005244191270321608
    2. 'short' → logprob: -5.255244255065918
    3. ' short' → logprob: -12.380244255065918
    4. '_short' → logprob: -13.880244255065918
    5. '(short' → logprob: -14.005244255065918
    6. 'Shortest' → logprob: -14.255244255065918
    7. 'some' → logprob: -14.505244255065918
    8. 'c' → logprob: -14.505244255065918
    9. ' path' → logprob: -14.505244255065918
    10. 'shortcut' → logprob: -14.630244255065918

Token 908: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.02825145795941353
    2. '_path' → logprob: -3.9032514095306396
    3. ' path' → logprob: -5.153251647949219
    4. ')' → logprob: -6.778251647949219
    5. '_' → logprob: -9.278251647949219
    6. '```' → logprob: -9.278251647949219
    7. ')
' → logprob: -9.403251647949219
    8. ']' → logprob: -9.653251647949219
    9. '"path' → logprob: -9.903251647949219
    10. 'paths' → logprob: -10.028251647949219

Token 909: ')
' (ID: 446)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8363274931907654
    2. '   ' → logprob: -1.4613275527954102
    3. ' and' → logprob: -1.5863275527954102
    4. 'and' → logprob: -2.96132755279541
    5. 'if' → logprob: -3.58632755279541
    6. '#' → logprob: -4.21132755279541
    7. '\n' → logprob: -5.21132755279541
    8. '```' → logprob: -5.21132755279541
    9. ' if' → logprob: -5.33632755279541
    10. ')
' → logprob: -5.46132755279541

Token 910: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6567745208740234
    2. '   ' → logprob: -0.9067745208740234
    3. '```' → logprob: -3.5317745208740234
    4. '#' → logprob: -4.031774520874023
    5. '
' → logprob: -4.156774520874023
    6. ' if' → logprob: -4.656774520874023
    7. 'for' → logprob: -6.281774520874023
    8. '``' → logprob: -6.531774520874023
    9. '`
' → logprob: -7.531774520874023
    10. ' ' → logprob: -7.531774520874023

Token 911: '  ' (ID: 256)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1100994274020195
    2. '#' → logprob: -3.1100993156433105
    3. 'for' → logprob: -4.1100993156433105
    4. 'ok' → logprob: -4.6100993156433105
    5. 'def' → logprob: -4.9850993156433105
    6. 'can' → logprob: -5.3600993156433105
    7. 'visited' → logprob: -5.8600993156433105
    8. 'out' → logprob: -6.1100993156433105
    9. 'dp' → logprob: -6.2350993156433105
    10. '   ' → logprob: -6.3600993156433105

Token 912: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03199272230267525
    2. '   ' → logprob: -3.7819926738739014
    3. ' if' → logprob: -5.0319929122924805
    4. 'and' → logprob: -6.9069929122924805
    5. ' ' → logprob: -8.03199291229248
    6. '```' → logprob: -8.03199291229248
    7. ' and' → logprob: -8.28199291229248
    8. '
' → logprob: -9.03199291229248
    9. '#' → logprob: -9.53199291229248
    10. 'for' → logprob: -9.90699291229248

Token 913: ' There' (ID: 3274)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0017352750292047858
    2. ' dist' → logprob: -6.376735210418701
    3. 'c' → logprob: -10.75173568725586
    4. 'graph' → logprob: -12.25173568725586
    5. '   ' → logprob: -13.37673568725586
    6. '```' → logprob: -13.50173568725586
    7. '(dist' → logprob: -13.50173568725586
    8. 'Dist' → logprob: -14.62673568725586
    9. '#' → logprob: -14.62673568725586
    10. '
' → logprob: -15.00173568725586

Token 914: ' exists' (ID: 13031)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6360582113265991
    2. ' is' → logprob: -1.6360582113265991
    3. ' =' → logprob: -2.7610583305358887
    4. '
' → logprob: -3.1360583305358887
    5. 'is' → logprob: -3.3860583305358887
    6. 'from' → logprob: -4.261058330535889
    7. ''' → logprob: -4.386058330535889
    8. ' ' → logprob: -4.511058330535889
    9. ' ==' → logprob: -4.761058330535889
    10. 'exists' → logprob: -5.011058330535889

Token 915: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10304626822471619
    2. ' a' → logprob: -2.353046178817749
    3. 'dist' → logprob: -6.103046417236328
    4. 'path' → logprob: -8.353046417236328
    5. ' dist' → logprob: -8.728046417236328
    6. 'an' → logprob: -9.228046417236328
    7. ' an' → logprob: -10.478046417236328
    8. ' path' → logprob: -10.728046417236328
    9. '`' → logprob: -11.478046417236328
    10. 'adj' → logprob: -11.478046417236328

Token 916: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.12783028185367584
    2. ' path' → logprob: -2.1278302669525146
    3. '_path' → logprob: -7.752830505371094
    4. '
' → logprob: -8.127830505371094
    5. 'reachable' → logprob: -9.627830505371094
    6. '```' → logprob: -10.252830505371094
    7. 'top' → logprob: -10.877830505371094
    8. ' ' → logprob: -11.502830505371094
    9. '`' → logprob: -11.877830505371094
    10. ' reachable' → logprob: -11.877830505371094

Token 917: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.03664594143629074
    2. ' =' → logprob: -4.161645889282227
    3. '=' → logprob: -5.161645889282227
    4. 'in' → logprob: -5.411645889282227
    5. '_from' → logprob: -5.786645889282227
    6. ' from' → logprob: -6.536645889282227
    7. 'c' → logprob: -6.536645889282227
    8. '[c' → logprob: -7.036645889282227
    9. '_c' → logprob: -7.536645889282227
    10. 'graph' → logprob: -7.661645889282227

Token 918: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0011706985533237457
    2. ' c' → logprob: -6.751170635223389
    3. '```' → logprob: -15.251171112060547
    4. '   ' → logprob: -16.251171112060547
    5. '	c' → logprob: -16.376171112060547
    6. '`' → logprob: -17.251171112060547
    7. ')c' → logprob: -17.876171112060547
    8. '
' → logprob: -18.001171112060547
    9. '``' → logprob: -19.126171112060547
    10. ' ' → logprob: -19.126171112060547

Token 919: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6192820072174072
    2. ' to' → logprob: -0.9942820072174072
    3. '->' → logprob: -2.4942820072174072
    4. ' ->' → logprob: -5.244281768798828
    5. '_to' → logprob: -6.119281768798828
    6. '```' → logprob: -7.494281768798828
    7. '	to' → logprob: -7.744281768798828
    8. '   ' → logprob: -8.494281768798828
    9. '=>' → logprob: -8.869281768798828
    10. '→' → logprob: -9.494281768798828

Token 920: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005530327325686812
    2. ' d' → logprob: -7.500553131103516
    3. '
' → logprob: -18.750553131103516
    4. '	d' → logprob: -19.125553131103516
    5. '```' → logprob: -19.625553131103516
    6. ' ' → logprob: -21.875553131103516
    7. '   ' → logprob: -21.875553131103516
    8. ')d' → logprob: -22.750553131103516
    9. '[d' → logprob: -23.000553131103516
    10. '>d' → logprob: -23.375553131103516

Token 921: ' in' (ID: 306)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2293500453233719
    2. 'import' → logprob: -2.3543500900268555
    3. 'visited' → logprob: -3.1043500900268555
    4. 'dag' → logprob: -3.3543500900268555
    5. '#' → logprob: -4.1043500900268555
    6. 'adj' → logprob: -5.3543500900268555
    7. 'graph' → logprob: -5.7293500900268555
    8. 'dist' → logprob: -6.3543500900268555
    9. 'dp' → logprob: -6.3543500900268555
    10. '
' → logprob: -7.1043500900268555

Token 922: ' DAG' (ID: 157361)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5461722016334534
    2. 'the' → logprob: -1.2961721420288086
    3. 'dag' → logprob: -2.1711721420288086
    4. 'short' → logprob: -3.6711721420288086
    5. ' graph' → logprob: -6.421172142028809
    6. ' the' → logprob: -6.671172142028809
    7. 'd' → logprob: -7.296172142028809
    8. 'sp' → logprob: -7.421172142028809
    9. ' dag' → logprob: -7.671172142028809
    10. 'D' → logprob: -7.671172142028809

Token 923: ' (' (ID: 350)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.11847227066755295
    2. 'import' → logprob: -3.1184723377227783
    3. 'dag' → logprob: -3.6184723377227783
    4. 'visited' → logprob: -3.8684723377227783
    5. '#' → logprob: -4.868472099304199
    6. 'ind' → logprob: -4.993472099304199
    7. 'adj' → logprob: -6.368472099304199
    8. 'in' → logprob: -6.993472099304199
    9. 'dp' → logprob: -7.118472099304199
    10. 'dist' → logprob: -7.243472099304199

Token 924: 'so' (ID: 786)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29193568229675293
    2. 'graph' → logprob: -2.541935682296753
    3. ')
' → logprob: -3.166935682296753
    4. '#' → logprob: -3.166935682296753
    5. 'True' → logprob: -4.041935920715332
    6. 'dist' → logprob: -4.166935920715332
    7. ' graph' → logprob: -4.291935920715332
    8. 'reachable' → logprob: -4.541935920715332
    9. 'visited' → logprob: -5.041935920715332
    10. 'G' → logprob: -5.291935920715332

Token 925: ' c' (ID: 274)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1535784006118774
    2. 'dist' → logprob: -1.2785784006118774
    3. ' dist' → logprob: -1.4035784006118774
    4. ' d' → logprob: -2.278578281402588
    5. 'c' → logprob: -3.153578281402588
    6. ' c' → logprob: -4.403578281402588
    7. ')' → logprob: -7.153578281402588
    8. ' ' → logprob: -8.528578758239746
    9. 'graph' → logprob: -8.653578758239746
    10. '`' → logprob: -8.778578758239746

Token 926: ' before' (ID: 2254)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '->' → logprob: -0.699567437171936
    2. '
' → logprob: -1.824567437171936
    3. ')' → logprob: -2.0745673179626465
    4. ' ->' → logprob: -3.0745673179626465
    5. '==' → logprob: -3.1995673179626465
    6. ' in' → logprob: -3.6995673179626465
    7. '```' → logprob: -4.3245673179626465
    8. ' and' → logprob: -4.6995673179626465
    9. 'in' → logprob: -4.6995673179626465
    10. ' ==' → logprob: -4.9495673179626465

Token 927: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.026338499039411545
    2. ' d' → logprob: -3.651338577270508
    3. '_d' → logprob: -10.651338577270508
    4. '   ' → logprob: -11.901338577270508
    5. ')' → logprob: -13.276338577270508
    6. ' ' → logprob: -13.776338577270508
    7. '=d' → logprob: -14.276338577270508
    8. '	d' → logprob: -14.401338577270508
    9. ' =' → logprob: -14.401338577270508
    10. '```' → logprob: -14.651338577270508

Token 928: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3773374855518341
    2. ')
' → logprob: -1.3773374557495117
    3. '):
' → logprob: -3.7523374557495117
    4. ' and' → logprob: -4.002337455749512
    5. '):' → logprob: -4.627337455749512
    6. 'and' → logprob: -5.752337455749512
    7. ').' → logprob: -6.627337455749512
    8. ' is' → logprob: -6.877337455749512
    9. ')

' → logprob: -7.127337455749512
    10. ')
' → logprob: -7.752337455749512

Token 929: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0629290342330933
    2. 'dag' → logprob: -1.3129290342330933
    3. 'ind' → logprob: -2.187929153442383
    4. '#' → logprob: -2.187929153442383
    5. 'in' → logprob: -2.312929153442383
    6. 'visited' → logprob: -4.062929153442383
    7. 'import' → logprob: -4.187929153442383
    8. 'dp' → logprob: -4.812929153442383
    9. 'reachable' → logprob: -4.937929153442383
    10. 'adj' → logprob: -5.312929153442383

Token 930: ' If' (ID: 1843)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0571749210357666
    2. 'visited' → logprob: -1.1821749210357666
    3. '#' → logprob: -1.9321749210357666
    4. 'import' → logprob: -2.4321749210357666
    5. 'dist' → logprob: -3.8071749210357666
    6. 'ind' → logprob: -3.9321749210357666
    7. 'in' → logprob: -3.9321749210357666
    8. 'top' → logprob: -4.1821746826171875
    9. 'dag' → logprob: -4.3071746826171875
    10. 'dp' → logprob: -5.4321746826171875

Token 931: ' all' (ID: 722)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.47493988275527954
    2. 'c' → logprob: -1.8499398231506348
    3. ' dist' → logprob: -1.9749398231506348
    4. ' not' → logprob: -3.3499398231506348
    5. ' c' → logprob: -3.5999398231506348
    6. 'not' → logprob: -4.099939823150635
    7. 'd' → logprob: -6.849939823150635
    8. '__' → logprob: -7.349939823150635
    9. ' __' → logprob: -7.724939823150635
    10. ' ' → logprob: -9.099940299987793

Token 932: ' true' (ID: 1343)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9335910677909851
    2. 'exists' → logprob: -2.18359112739563
    3. '
' → logprob: -2.68359112739563
    4. '_c' → logprob: -3.05859112739563
    5. '_exists' → logprob: -3.18359112739563
    6. '```' → logprob: -3.18359112739563
    7. 'in' → logprob: -3.30859112739563
    8. ':' → logprob: -3.80859112739563
    9. '(c' → logprob: -3.80859112739563
    10. '_edges' → logprob: -3.93359112739563

Token 933: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18142053484916687
    2. ':
' → logprob: -1.8064205646514893
    3. ',' → logprob: -6.68142032623291
    4. '```' → logprob: -8.93142032623291
    5. '):' → logprob: -9.80642032623291
    6. ':

' → logprob: -10.05642032623291
    7. '   ' → logprob: -10.55642032623291
    8. '':' → logprob: -10.55642032623291
    9. ' and' → logprob: -10.80642032623291
    10. '):
' → logprob: -10.93142032623291

Token 934: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10906641185283661
    2. '   ' → logprob: -2.9840664863586426
    3. ' print' → logprob: -2.9840664863586426
    4. '
' → logprob: -7.359066486358643
    5. ':
' → logprob: -7.484066486358643
    6. ' True' → logprob: -7.984066486358643
    7. '```' → logprob: -8.609066009521484
    8. 'True' → logprob: -9.359066009521484
    9. 'answer' → logprob: -9.359066009521484
    10. ':' → logprob: -9.984066009521484

Token 935: ' Yes' (ID: 11377)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.2565101385116577
    2. '"' → logprob: -1.5065101385116577
    3. '('' → logprob: -5.631510257720947
    4. ''' → logprob: -7.881510257720947
    5. 'Yes' → logprob: -8.131509780883789
    6. '(' → logprob: -8.756509780883789
    7. 'YES' → logprob: -9.631509780883789
    8. '   ' → logprob: -10.631509780883789
    9. ' "' → logprob: -10.756509780883789
    10. '`' → logprob: -11.631509780883789

Token 936: ' else' (ID: 1203)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7231735587120056
    2. 'import' → logprob: -2.3481736183166504
    3. '```' → logprob: -2.3481736183166504
    4. 'from' → logprob: -2.4731736183166504
    5. 'visited' → logprob: -2.8481736183166504
    6. '`
' → logprob: -3.3481736183166504
    7. '#' → logprob: -3.5981736183166504
    8. 'graph' → logprob: -3.5981736183166504
    9. 'dist' → logprob: -3.8481736183166504
    10. 'reachable' → logprob: -4.22317361831665

Token 937: ' No' (ID: 3004)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1374889761209488
    2. 'print' → logprob: -2.512489080429077
    3. ' No' → logprob: -3.262489080429077
    4. 'No' → logprob: -4.762488842010498
    5. ''' → logprob: -8.637489318847656
    6. '"' → logprob: -8.887489318847656
    7. '
' → logprob: -9.512489318847656
    8. '```' → logprob: -10.012489318847656
    9. '`' → logprob: -10.262489318847656
    10. '   ' → logprob: -10.387489318847656

Token 938: '.

' (ID: 364)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4093206226825714
    2. '#' → logprob: -2.159320592880249
    3. 'dag' → logprob: -2.784320592880249
    4. 'import' → logprob: -3.034320592880249
    5. 'adj' → logprob: -3.534320592880249
    6. 'visited' → logprob: -3.659320592880249
    7. 'ind' → logprob: -3.784320592880249
    8. 'in' → logprob: -4.159320831298828
    9. 'graph' → logprob: -5.284320831298828
    10. 'pos' → logprob: -5.659320831298828

Token 939: '#' (ID: 2)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.1674700826406479
    2. 'from' → logprob: -2.7924699783325195
    3. '#' → logprob: -3.7924699783325195
    4. 'visited' → logprob: -4.1674699783325195
    5. 'top' → logprob: -4.2924699783325195
    6. 'import' → logprob: -4.2924699783325195
    7. '```' → logprob: -4.4174699783325195
    8. 'dp' → logprob: -5.4174699783325195
    9. 'dist' → logprob: -5.9174699783325195
    10. 'graph' → logprob: -6.1674699783325195

Token 940: ' To' (ID: 2514)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0108572244644165
    2. 'dag' → logprob: -1.1358572244644165
    3. '#' → logprob: -2.135857105255127
    4. 'visited' → logprob: -2.510857105255127
    5. 'import' → logprob: -3.135857105255127
    6. 'ind' → logprob: -3.510857105255127
    7. 'in' → logprob: -4.510857105255127
    8. 'top' → logprob: -4.510857105255127
    9. 'adj' → logprob: -5.135857105255127
    10. 'dp' → logprob: -5.510857105255127

Token 941: ' check' (ID: 2371)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.3467431366443634
    2. 'from' → logprob: -1.596743106842041
    3. 'import' → logprob: -2.721743106842041
    4. '#' → logprob: -4.721743106842041
    5. 'continue' → logprob: -4.721743106842041
    6. '
' → logprob: -6.721743106842041
    7. 'graph' → logprob: -7.471743106842041
    8. '```' → logprob: -7.471743106842041
    9. 'answer' → logprob: -7.596743106842041
    10. 'process' → logprob: -7.721743106842041

Token 942: ' path' (ID: 3104)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -1.2472621202468872
    2. 'from' → logprob: -1.8722621202468872
    3. 'reach' → logprob: -2.2472620010375977
    4. 'if' → logprob: -2.2472620010375977
    5. 'connect' → logprob: -2.8722620010375977
    6. 'paths' → logprob: -2.9972620010375977
    7. 'for' → logprob: -3.2472620010375977
    8. ' if' → logprob: -3.3722620010375977
    9. '#' → logprob: -3.6222620010375977
    10. ' reach' → logprob: -3.7472620010375977

Token 943: ' in' (ID: 306)
  Prédit: '_exists'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_exists' → logprob: -0.20627719163894653
    2. 'from' → logprob: -2.2062771320343018
    3. '_exist' → logprob: -3.3312771320343018
    4. 's' → logprob: -4.206277370452881
    5. 'exists' → logprob: -4.456277370452881
    6. '_from' → logprob: -5.081277370452881
    7. 'exist' → logprob: -6.081277370452881
    8. '_' → logprob: -6.206277370452881
    9. '_ex' → logprob: -7.456277370452881
    10. '_forward' → logprob: -7.581277370452881

Token 944: ' DAG' (ID: 157361)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.013218345120549202
    2. 'the' → logprob: -4.763218402862549
    3. 'graph' → logprob: -6.013218402862549
    4. 'dag' → logprob: -6.513218402862549
    5. 'G' → logprob: -8.13821792602539
    6. '```' → logprob: -9.38821792602539
    7. 'd' → logprob: -9.51321792602539
    8. ' DAG' → logprob: -9.76321792602539
    9. '``' → logprob: -10.38821792602539
    10. '`' → logprob: -10.63821792602539

Token 945: ' efficiently' (ID: 34229)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3987051248550415
    2. ':' → logprob: -2.148705005645752
    3. ' =' → logprob: -2.523705005645752
    4. ',' → logprob: -3.273705005645752
    5. ':
' → logprob: -3.648705005645752
    6. ' from' → logprob: -3.773705005645752
    7. '#' → logprob: -4.648705005645752
    8. '=' → logprob: -4.898705005645752
    9. 's' → logprob: -5.023705005645752
    10. '_exists' → logprob: -6.023705005645752

Token 946: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5124077200889587
    2. 'from' → logprob: -2.0124077796936035
    3. ':
' → logprob: -2.6374077796936035
    4. ',
' → logprob: -2.6374077796936035
    5. ':' → logprob: -2.8874077796936035
    6. '#' → logprob: -2.8874077796936035
    7. 'import' → logprob: -5.3874077796936035
    8. 'visited' → logprob: -6.1374077796936035
    9. '
' → logprob: -6.3874077796936035
    10. '=' → logprob: -7.3874077796936035

Token 947: ' we' (ID: 581)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.16955314576625824
    2. 'visited' → logprob: -2.79455304145813
    3. 'from' → logprob: -2.91955304145813
    4. '#' → logprob: -3.66955304145813
    5. ' import' → logprob: -4.669553279876709
    6. 'dist' → logprob: -6.294553279876709
    7. ' from' → logprob: -6.919553279876709
    8. ' visited' → logprob: -7.169553279876709
    9. ' #' → logprob: -7.669553279876709
    10. 'index' → logprob: -7.794553279876709

Token 948: ' do' (ID: 621)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.227621078491211
    2. 'can' → logprob: -1.352621078491211
    3. 'import' → logprob: -1.602621078491211
    4. 'need' → logprob: -1.852621078491211
    5. ' can' → logprob: -3.727621078491211
    6. 'will' → logprob: -3.852621078491211
    7. ''ll' → logprob: -4.852621078491211
    8. ' need' → logprob: -5.102621078491211
    9. ' will' → logprob: -5.102621078491211
    10. 'continue' → logprob: -5.477621078491211

Token 949: ' a' (ID: 261)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.3845842778682709
    2. 'import' → logprob: -2.1345841884613037
    3. 'from' → logprob: -2.6345841884613037
    4. 'a' → logprob: -2.8845841884613037
    5. ' top' → logprob: -3.2595841884613037
    6. ' a' → logprob: -4.884584426879883
    7. 'def' → logprob: -5.134584426879883
    8. '```' → logprob: -5.509584426879883
    9. 'dfs' → logprob: -5.634584426879883
    10. 'visited' → logprob: -6.009584426879883

Token 950: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.012308672070503235
    2. 'dp' → logprob: -5.012308597564697
    3. 'dfs' → logprob: -6.012308597564697
    4. 'DFS' → logprob: -6.512308597564697
    5. 'long' → logprob: -8.887309074401855
    6. 'DP' → logprob: -8.887309074401855
    7. 'pp' → logprob: -9.012309074401855
    8. '[top' → logprob: -9.012309074401855
    9. 'def' → logprob: -9.137309074401855
    10. 'b' → logprob: -9.137309074401855

Token 951: 'ological' (ID: 8339)
  Prédit: 'ological'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ological' → logprob: -0.014643269591033459
    2. 'logical' → logprob: -4.88964319229126
    3. 'ologic' → logprob: -6.13964319229126
    4. 'ology' → logprob: -6.51464319229126
    5. 'sort' → logprob: -6.88964319229126
    6. 'log' → logprob: -6.88964319229126
    7. 'ologically' → logprob: -7.88964319229126
    8. 'ologica' → logprob: -8.264643669128418
    9. 'olog' → logprob: -8.514643669128418
    10. 'logic' → logprob: -8.889643669128418

Token 952: ' order' (ID: 2569)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.03170312941074371
    2. ' sort' → logprob: -3.781703233718872
    3. '_sort' → logprob: -4.781702995300293
    4. 'sorting' → logprob: -10.906702995300293
    5. ' sorting' → logprob: -11.656702995300293
    6. 'order' → logprob: -12.281702995300293
    7. '
' → logprob: -12.656702995300293
    8. '_order' → logprob: -13.281702995300293
    9. '-sort' → logprob: -13.406702995300293
    10. ' order' → logprob: -14.156702995300293

Token 953: ' of' (ID: 328)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.05278119072318077
    2. 'from' → logprob: -3.677781105041504
    3. '
' → logprob: -5.052781105041504
    4. 'graph' → logprob: -5.177781105041504
    5. '#' → logprob: -5.302781105041504
    6. 'import' → logprob: -5.927781105041504
    7. 'order' → logprob: -6.552781105041504
    8. 'top' → logprob: -6.552781105041504
    9. 'adj' → logprob: -7.052781105041504
    10. 'in' → logprob: -7.802781105041504

Token 954: ' DAG' (ID: 157361)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.00416969507932663
    2. 'graph' → logprob: -6.004169464111328
    3. ' the' → logprob: -6.629169464111328
    4. 'nodes' → logprob: -8.754169464111328
    5. 'vertices' → logprob: -9.254169464111328
    6. 'D' → logprob: -10.254169464111328
    7. ' graph' → logprob: -10.379169464111328
    8. 'G' → logprob: -10.754169464111328
    9. 'visited' → logprob: -11.629169464111328
    10. 'top' → logprob: -12.129169464111328

Token 955: ' and' (ID: 326)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7645415663719177
    2. '
' → logprob: -1.6395416259765625
    3. 'import' → logprob: -1.8895416259765625
    4. 'dag' → logprob: -2.8895416259765625
    5. 'graph' → logprob: -3.6395416259765625
    6. '#' → logprob: -3.6395416259765625
    7. 'in' → logprob: -4.0145416259765625
    8. ':
' → logprob: -4.6395416259765625
    9. 'order' → logprob: -4.8895416259765625
    10. '```' → logprob: -5.0145416259765625

Token 956: ' assign' (ID: 14975)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.7781597375869751
    2. 'dist' → logprob: -2.4031596183776855
    3. '#' → logprob: -2.9031596183776855
    4. 'dfs' → logprob: -3.0281596183776855
    5. 'compute' → logprob: -3.0281596183776855
    6. 'from' → logprob: -3.4031596183776855
    7. 'index' → logprob: -3.4031596183776855
    8. 'import' → logprob: -3.4031596183776855
    9. 'mark' → logprob: -3.9031596183776855
    10. 'dp' → logprob: -3.9031596183776855

Token 957: ' order' (ID: 2569)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.8259273171424866
    2. 'order' → logprob: -1.4509272575378418
    3. 'positions' → logprob: -2.700927257537842
    4. 'pos' → logprob: -2.825927257537842
    5. 'top' → logprob: -3.200927257537842
    6. 'timestamps' → logprob: -3.200927257537842
    7. 'indexes' → logprob: -3.700927257537842
    8. 'in' → logprob: -4.075927257537842
    9. 'index' → logprob: -4.200927257537842
    10. 'dp' → logprob: -4.450927257537842

Token 958: ' indices' (ID: 30378)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11324519664049149
    2. '
' → logprob: -3.2382452487945557
    3. 'dag' → logprob: -3.3632452487945557
    4. '=' → logprob: -4.113245010375977
    5. 'graph' → logprob: -5.113245010375977
    6. 'd' → logprob: -6.988245010375977
    7. '\' → logprob: -7.113245010375977
    8. 'top' → logprob: -7.113245010375977
    9. '_d' → logprob: -7.113245010375977
    10. '```' → logprob: -7.488245010375977

Token 959: '.
' (ID: 558)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.0728704184293747
    2. 'top' → logprob: -3.5728704929351807
    3. 'from' → logprob: -4.572870254516602
    4. '#' → logprob: -4.697870254516602
    5. 'ind' → logprob: -4.947870254516602
    6. 'in' → logprob: -4.947870254516602
    7. 'order' → logprob: -5.822870254516602
    8. 'import' → logprob: -6.697870254516602
    9. '
' → logprob: -6.947870254516602
    10. 'pos' → logprob: -7.197870254516602

Token 960: '#' (ID: 2)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.3085119426250458
    2. 'top' → logprob: -2.308511972427368
    3. 'in' → logprob: -2.808511972427368
    4. 'ind' → logprob: -3.308511972427368
    5. 'from' → logprob: -4.058511734008789
    6. '#' → logprob: -4.433511734008789
    7. 'graph' → logprob: -4.683511734008789
    8. 'order' → logprob: -4.808511734008789
    9. 'pos' → logprob: -5.058511734008789
    10. 'import' → logprob: -5.183511734008789

Token 961: ' Then' (ID: 7801)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'top' → logprob: -1.282880187034607
    2. 'dag' → logprob: -1.532880187034607
    3. 'pos' → logprob: -1.782880187034607
    4. 'ind' → logprob: -2.4078803062438965
    5. 'in' → logprob: -2.5328803062438965
    6. 'graph' → logprob: -3.0328803062438965
    7. 'from' → logprob: -3.1578803062438965
    8. '#' → logprob: -3.6578803062438965
    9. 'order' → logprob: -3.9078803062438965
    10. 'import' → logprob: -4.1578803062438965

Token 962: ' c' (ID: 274)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2213563323020935
    2. 'pos' → logprob: -2.4713563919067383
    3. '#' → logprob: -2.8463563919067383
    4. 'c' → logprob: -3.9713563919067383
    5. '
' → logprob: -4.096356391906738
    6. ' for' → logprob: -5.471356391906738
    7. 'order' → logprob: -5.721356391906738
    8. 'top' → logprob: -5.971356391906738
    9. 'def' → logprob: -6.471356391906738
    10. 'print' → logprob: -6.596356391906738

Token 963: ' can' (ID: 665)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.7637829184532166
    2. '_idx' → logprob: -1.1387829780578613
    3. '_index' → logprob: -2.7637829780578613
    4. ',' → logprob: -3.3887829780578613
    5. '_pos' → logprob: -3.6387829780578613
    6. '_' → logprob: -4.388782978057861
    7. '```' → logprob: -4.763782978057861
    8. '_in' → logprob: -4.888782978057861
    9. '_,' → logprob: -5.138782978057861
    10. 'pos' → logprob: -5.388782978057861

Token 964: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.10577407479286194
    2. 'be' → logprob: -3.355774164199829
    3. 'come' → logprob: -3.855774164199829
    4. 'appear' → logprob: -3.855774164199829
    5. ' reach' → logprob: -4.35577392578125
    6. ' be' → logprob: -5.35577392578125
    7. '_re' → logprob: -6.23077392578125
    8. '_be' → logprob: -7.35577392578125
    9. 'go' → logprob: -7.35577392578125
    10. 'preced' → logprob: -7.60577392578125

Token 965: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06199637055397034
    2. ' d' → logprob: -2.8119964599609375
    3. '[d' → logprob: -10.811996459960938
    4. '   ' → logprob: -12.936996459960938
    5. 'index' → logprob: -13.311996459960938
    6. ' ' → logprob: -14.186996459960938
    7. 'idx' → logprob: -14.436996459960938
    8. '	d' → logprob: -15.186996459960938
    9. '
' → logprob: -15.311996459960938
    10. 'c' → logprob: -15.311996459960938

Token 966: ' if' (ID: 538)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0446524620056152
    2. '_d' → logprob: -1.6696524620056152
    3. '
' → logprob: -1.9196524620056152
    4. '_order' → logprob: -2.1696524620056152
    5. '_
' → logprob: -3.1696524620056152
    6. 'def' → logprob: -4.044652462005615
    7. '_positions' → logprob: -4.044652462005615
    8. '_top' → logprob: -4.169652462005615
    9. '_pos' → logprob: -4.294652462005615
    10. '_indices' → logprob: -4.544652462005615

Token 967: ' topo' (ID: 97979)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.6129881143569946
    2. 'top' → logprob: -0.9879881143569946
    3. 'pos' → logprob: -3.487987995147705
    4. 'ord' → logprob: -3.612987995147705
    5. ' topo' → logprob: -4.737987995147705
    6. ' order' → logprob: -4.987987995147705
    7. 'tops' → logprob: -5.112987995147705
    8. ' top' → logprob: -6.362987995147705
    9. 'idx' → logprob: -7.112987995147705
    10. 'index' → logprob: -7.112987995147705

Token 968: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.727948784828186
    2. '[c' → logprob: -1.477948784828186
    3. 'r' → logprob: -2.4779486656188965
    4. '_index' → logprob: -2.8529486656188965
    5. '_indices' → logprob: -2.8529486656188965
    6. '[u' → logprob: -3.9779486656188965
    7. 'pos' → logprob: -3.9779486656188965
    8. 'o' → logprob: -3.9779486656188965
    9. 'c' → logprob: -4.9779486656188965
    10. 'order' → logprob: -5.2279486656188965

Token 969: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.020362723618745804
    2. '[d' → logprob: -4.270362854003906
    3. '[' → logprob: -6.020362854003906
    4. 'd' → logprob: -7.020362854003906
    5. 'c' → logprob: -7.270362854003906
    6. '[u' → logprob: -7.270362854003906
    7. 'index' → logprob: -7.520362854003906
    8. ']' → logprob: -8.395362854003906
    9. '```' → logprob: -9.395362854003906
    10. '_index' → logprob: -9.395362854003906

Token 970: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02423698641359806
    2. ']<' → logprob: -4.149237155914307
    3. '[c' → logprob: -5.774237155914307
    4. '[u' → logprob: -6.649237155914307
    5. ' <' → logprob: -7.149237155914307
    6. 'c' → logprob: -7.899237155914307
    7. ']<=' → logprob: -7.899237155914307
    8. '[' → logprob: -8.024236679077148
    9. 'd' → logprob: -8.274236679077148
    10. '<' → logprob: -8.524236679077148

Token 971: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.2353469282388687
    2. '<' → logprob: -1.9853469133377075
    3. '[' → logprob: -3.985347032546997
    4. '[c' → logprob: -4.110346794128418
    5. '<c' → logprob: -4.360346794128418
    6. ' <=' → logprob: -4.860346794128418
    7. '<=' → logprob: -5.110346794128418
    8. '[u' → logprob: -5.360346794128418
    9. '<v' → logprob: -6.735346794128418
    10. '[to' → logprob: -7.235346794128418

Token 972: ' topo' (ID: 97979)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -2.3080716346157715e-05
    2. ' topo' → logprob: -10.750022888183594
    3. '[top' → logprob: -14.125022888183594
    4. ' top' → logprob: -15.250022888183594
    5. 'to' → logprob: -15.500022888183594
    6. '
' → logprob: -16.125022888183594
    7. '```' → logprob: -16.875022888183594
    8. 'toc' → logprob: -18.125022888183594
    9. 't' → logprob: -18.250022888183594
    10. '`' → logprob: -18.250022888183594

Token 973: '_order' (ID: 17446)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5763024091720581
    2. '_order' → logprob: -0.8263024091720581
    3. 'order' → logprob: -8.701302528381348
    4. '_index' → logprob: -9.451302528381348
    5. 'der' → logprob: -10.076302528381348
    6. 'rd' → logprob: -10.826302528381348
    7. '[r' → logprob: -10.951302528381348
    8. 'd' → logprob: -11.826302528381348
    9. '_r' → logprob: -12.076302528381348
    10. 'rer' → logprob: -12.201302528381348

Token 974: '[d' (ID: 48377)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.6780962347984314
    2. ']' → logprob: -1.3030962944030762
    3. ' and' → logprob: -2.428096294403076
    4. '[d' → logprob: -2.678096294403076
    5. '][' → logprob: -3.803096294403076
    6. 'and' → logprob: -3.803096294403076
    7. 'd' → logprob: -5.053096294403076
    8. '[' → logprob: -5.428096294403076
    9. '[
' → logprob: -5.803096294403076
    10. '
' → logprob: -6.928096294403076

Token 975: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.033626798540353775
    2. ']
' → logprob: -3.5336267948150635
    3. ' and' → logprob: -6.658627033233643
    4. 'and' → logprob: -7.283627033233643
    5. ')' → logprob: -7.908627033233643
    6. ':' → logprob: -8.658626556396484
    7. '']' → logprob: -8.658626556396484
    8. ']
' → logprob: -8.783626556396484
    9. ']

' → logprob: -8.783626556396484
    10. ':
' → logprob: -9.283626556396484

Token 976: ' and' (ID: 326)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.022153303027153015
    2. '#' → logprob: -4.897153377532959
    3. 'D' → logprob: -5.522153377532959
    4. 'graph' → logprob: -5.647153377532959
    5. 'from' → logprob: -6.522153377532959
    6. '
' → logprob: -6.647153377532959
    7. 'import' → logprob: -6.897153377532959
    8. 'in' → logprob: -7.022153377532959
    9. 'ind' → logprob: -7.272153377532959
    10. 'adj' → logprob: -7.522153377532959

Token 977: ' there' (ID: 1354)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6823591589927673
    2. 'c' → logprob: -1.682359218597412
    3. 'd' → logprob: -2.432359218597412
    4. 'graph' → logprob: -3.057359218597412
    5. 'reachable' → logprob: -3.057359218597412
    6. 'top' → logprob: -3.182359218597412
    7. 'visited' → logprob: -3.557359218597412
    8. 'adj' → logprob: -4.807359218597412
    9. 'dfs' → logprob: -4.807359218597412
    10. 'path' → logprob: -5.307359218597412

Token 978: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.15842024981975555
    2. ' is' → logprob: -2.6584203243255615
    3. 'exists' → logprob: -2.6584203243255615
    4. ' exists' → logprob: -5.783420085906982
    5. ''s' → logprob: -6.283420085906982
    6. '_exists' → logprob: -7.408420085906982
    7. '_is' → logprob: -8.15842056274414
    8. 'are' → logprob: -8.65842056274414
    9. '```' → logprob: -9.40842056274414
    10. 's' → logprob: -9.40842056274414

Token 979: ' path' (ID: 3104)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2018251270055771
    2. ' a' → logprob: -1.7018251419067383
    3. 'an' → logprob: -8.201825141906738
    4. '```' → logprob: -10.076825141906738
    5. ' an' → logprob: -10.201825141906738
    6. ' no' → logprob: -10.826825141906738
    7. 'path' → logprob: -11.576825141906738
    8. ' ' → logprob: -12.201825141906738
    9. 'reachable' → logprob: -12.201825141906738
    10. 'adj' → logprob: -12.576825141906738

Token 980: ' c' (ID: 274)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8363972306251526
    2. 'def' → logprob: -2.086397171020508
    3. 'from' → logprob: -2.086397171020508
    4. 's' → logprob: -2.711397171020508
    5. ':' → logprob: -3.336397171020508
    6. '_to' → logprob: -3.461397171020508
    7. '_indices' → logprob: -3.586397171020508
    8. '_out' → logprob: -3.961397171020508
    9. '
' → logprob: -4.211397171020508
    10. ':
' → logprob: -4.336397171020508

Token 981: '->' (ID: 609)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2522393763065338
    2. '_to' → logprob: -2.877239465713501
    3. 'import' → logprob: -3.002239465713501
    4. 'to' → logprob: -4.127239227294922
    5. '[u' → logprob: -4.127239227294922
    6. ' =' → logprob: -4.252239227294922
    7. '
' → logprob: -4.502239227294922
    8. 'exists' → logprob: -4.752239227294922
    9. '=' → logprob: -4.877239227294922
    10. 'def' → logprob: -5.002239227294922

Token 982: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006589963100850582
    2. ' d' → logprob: -5.506589889526367
    3. 'v' → logprob: -6.756589889526367
    4. 'top' → logprob: -7.756589889526367
    5. '`' → logprob: -8.881589889526367
    6. '[d' → logprob: -8.881589889526367
    7. '[v' → logprob: -9.381589889526367
    8. ' ' → logprob: -9.631589889526367
    9. 'to' → logprob: -9.631589889526367
    10. '_d' → logprob: -10.006589889526367

Token 983: '.
' (ID: 558)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.22088254988193512
    2. '#' → logprob: -2.8458826541900635
    3. 'graph' → logprob: -2.8458826541900635
    4. 'in' → logprob: -3.9708826541900635
    5. 'from' → logprob: -4.220882415771484
    6. 'ind' → logprob: -4.345882415771484
    7. 'import' → logprob: -4.470882415771484
    8. 'visited' → logprob: -4.720882415771484
    9. 'top' → logprob: -5.220882415771484
    10. '
' → logprob: -6.220882415771484

Token 984: '#' (ID: 2)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.4049970507621765
    2. '#' → logprob: -2.5299971103668213
    3. 'graph' → logprob: -2.6549971103668213
    4. 'in' → logprob: -3.0299971103668213
    5. 'ind' → logprob: -3.1549971103668213
    6. 'from' → logprob: -3.4049971103668213
    7. 'top' → logprob: -4.154996871948242
    8. 'import' → logprob: -4.154996871948242
    9. 'D' → logprob: -4.404996871948242
    10. 'visited' → logprob: -5.404996871948242

Token 985: ' To' (ID: 2514)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -1.0401033163070679
    2. 'from' → logprob: -2.0401034355163574
    3. 'graph' → logprob: -2.0401034355163574
    4. '#' → logprob: -2.1651034355163574
    5. 'import' → logprob: -2.6651034355163574
    6. 'in' → logprob: -3.0401034355163574
    7. 'ind' → logprob: -3.1651034355163574
    8. 'visited' → logprob: -3.7901034355163574
    9. 'top' → logprob: -3.9151034355163574
    10. '
' → logprob: -3.9151034355163574

Token 986: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.5789304375648499
    2. 'build' → logprob: -1.828930377960205
    3. '#' → logprob: -2.328930377960205
    4. 'ach' → logprob: -3.328930377960205
    5. 'import' → logprob: -3.703930377960205
    6. '
' → logprob: -3.828930377960205
    7. 'continue' → logprob: -4.203930377960205
    8. 'find' → logprob: -4.578930377960205
    9. 'avoid' → logprob: -4.578930377960205
    10. 'from' → logprob: -4.953930377960205

Token 987: ' reach' (ID: 7627)
  Prédit: 'reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reach' → logprob: -0.06768663972616196
    2. ' reach' → logprob: -3.3176865577697754
    3. 'reachable' → logprob: -4.192686557769775
    4. 'paths' → logprob: -5.442686557769775
    5. 'path' → logprob: -6.442686557769775
    6. 'if' → logprob: -6.442686557769775
    7. '#' → logprob: -6.692686557769775
    8. 'for' → logprob: -6.942686557769775
    9. 'adj' → logprob: -7.317686557769775
    10. '```' → logprob: -7.692686557769775

Token 988: 'ability' (ID: 3563)
  Prédit: 'ability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -2.463036435074173e-05
    2. 'a' → logprob: -11.500024795532227
    3. '#' → logprob: -12.250024795532227
    4. '_' → logprob: -12.750024795532227
    5. 'abil' → logprob: -13.000024795532227
    6. 'b' → logprob: -13.250024795532227
    7. 'ab' → logprob: -14.500024795532227
    8. '
' → logprob: -14.625024795532227
    9. '```' → logprob: -15.000024795532227
    10. 's' → logprob: -15.125024795532227

Token 989: ' quickly' (ID: 8065)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6963242888450623
    2. ',' → logprob: -0.8213242888450623
    3. ' from' → logprob: -3.321324348449707
    4. ':' → logprob: -4.696324348449707
    5. '_' → logprob: -5.696324348449707
    6. ',
' → logprob: -6.571324348449707
    7. '_from' → logprob: -6.696324348449707
    8. 'in' → logprob: -6.946324348449707
    9. '[u' → logprob: -6.946324348449707
    10. ' in' → logprob: -7.071324348449707

Token 990: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11762304604053497
    2. ':' → logprob: -2.9926230907440186
    3. ',
' → logprob: -3.6176230907440186
    4. 'from' → logprob: -4.3676228523254395
    5. 'import' → logprob: -4.8676228523254395
    6. ':
' → logprob: -5.3676228523254395
    7. '#' → logprob: -5.3676228523254395
    8. '.' → logprob: -7.7426228523254395
    9. '=' → logprob: -7.7426228523254395
    10. 'def' → logprob: -7.7426228523254395

Token 991: ' we' (ID: 581)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.33676621317863464
    2. '#' → logprob: -1.961766242980957
    3. 'from' → logprob: -2.586766242980957
    4. 'visited' → logprob: -2.836766242980957
    5. 'graph' → logprob: -6.211766242980957
    6. 'dist' → logprob: -6.586766242980957
    7. '```' → logprob: -6.586766242980957
    8. '...' → logprob: -6.711766242980957
    9. ' from' → logprob: -7.211766242980957
    10. 'continue' → logprob: -7.336766242980957

Token 992: ' do' (ID: 621)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12294700741767883
    2. 'import' → logprob: -2.9979469776153564
    3. 'continue' → logprob: -3.6229469776153564
    4. 'need' → logprob: -4.7479472160339355
    5. ''ll' → logprob: -5.3729472160339355
    6. '```' → logprob: -5.3729472160339355
    7. 'from' → logprob: -5.7479472160339355
    8. 'build' → logprob: -6.2479472160339355
    9. ':' → logprob: -6.4979472160339355
    10. 'can' → logprob: -6.6229472160339355

Token 993: ' reversed' (ID: 57184)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.23669105768203735
    2. 'import' → logprob: -1.9866909980773926
    3. 'visited' → logprob: -3.4866909980773926
    4. 'dp' → logprob: -3.6116909980773926
    5. '```' → logprob: -5.611690998077393
    6. 'dfs' → logprob: -5.861690998077393
    7. 'dist' → logprob: -5.986690998077393
    8. 'graph' → logprob: -6.736690998077393
    9. ' from' → logprob: -6.736690998077393
    10. 'def' → logprob: -6.986690998077393

Token 994: ' DAG' (ID: 157361)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.1483427882194519
    2. '_graph' → logprob: -2.1483428478240967
    3. 'edges' → logprob: -4.523342609405518
    4. 'from' → logprob: -5.648342609405518
    5. '_edges' → logprob: -6.023342609405518
    6. 'adj' → logprob: -6.523342609405518
    7. '
' → logprob: -6.773342609405518
    8. 'import' → logprob: -7.648342609405518
    9. '_adj' → logprob: -7.648342609405518
    10. '(graph' → logprob: -8.523343086242676

Token 995: ' and' (ID: 326)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8507403135299683
    2. 'dag' → logprob: -1.1007403135299683
    3. '#' → logprob: -2.350740432739258
    4. 'import' → logprob: -3.350740432739258
    5. '
' → logprob: -3.600740432739258
    6. 'graph' → logprob: -3.850740432739258
    7. 'rev' → logprob: -4.475740432739258
    8. '```' → logprob: -4.600740432739258
    9. 'top' → logprob: -4.725740432739258
    10. 'ind' → logprob: -4.850740432739258

Token 996: ' do' (ID: 621)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6500259041786194
    2. 'from' → logprob: -1.0250258445739746
    3. 'visited' → logprob: -2.9000258445739746
    4. 'dfs' → logprob: -3.7750258445739746
    5. 'build' → logprob: -4.400025844573975
    6. 'dist' → logprob: -5.150025844573975
    7. 'def' → logprob: -5.525025844573975
    8. 'forward' → logprob: -5.525025844573975
    9. 'top' → logprob: -5.650025844573975
    10. '#' → logprob: -6.400025844573975

Token 997: ' BFS' (ID: 190016)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.2705187797546387
    2. 'from' → logprob: -1.5205187797546387
    3. 'DFS' → logprob: -1.7705187797546387
    4. 'B' → logprob: -2.1455187797546387
    5. 'import' → logprob: -2.2705187797546387
    6. '```' → logprob: -3.2705187797546387
    7. 'a' → logprob: -3.5205187797546387
    8. 'visited' → logprob: -4.770518779754639
    9. ' BFS' → logprob: -4.895518779754639
    10. ' DFS' → logprob: -5.020518779754639

Token 998: '.

' (ID: 364)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.1743825525045395
    2. '#' → logprob: -2.799382448196411
    3. 'from' → logprob: -3.049382448196411
    4. 'out' → logprob: -4.54938268661499
    5. 'graph' → logprob: -4.79938268661499
    6. 'top' → logprob: -4.92438268661499
    7. 'import' → logprob: -4.92438268661499
    8. '
' → logprob: -5.54938268661499
    9. '```' → logprob: -6.29938268661499
    10. '#
' → logprob: -6.42438268661499

Token 999: '#' (ID: 2)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.5623535513877869
    2. 'from' → logprob: -1.8123536109924316
    3. '#' → logprob: -2.3123536109924316
    4. 'top' → logprob: -2.6873536109924316
    5. 'graph' → logprob: -3.5623536109924316
    6. 'visited' → logprob: -4.312353610992432
    7. 'out' → logprob: -4.312353610992432
    8. 'ind' → logprob: -4.812353610992432
    9. 'import' → logprob: -4.812353610992432
    10. 'n' → logprob: -5.437353610992432

Token 1000: ' Because' (ID: 13602)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.03936426341533661
    2. 'from' → logprob: -4.039364337921143
    3. '#' → logprob: -4.914364337921143
    4. 'D' → logprob: -5.039364337921143
    5. 'import' → logprob: -6.039364337921143
    6. 'top' → logprob: -6.164364337921143
    7. 'adj' → logprob: -6.789364337921143
    8. 'in' → logprob: -8.664363861083984
    9. 'dist' → logprob: -8.789363861083984
    10. 'ind' → logprob: -8.789363861083984

Token 1001: ' the' (ID: 290)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.5249543190002441
    2. '#' → logprob: -1.5249543190002441
    3. 'the' → logprob: -2.274954319000244
    4. 'dist' → logprob: -3.649954319000244
    5. 'visited' → logprob: -4.024954319000244
    6. 'len' → logprob: -4.649954319000244
    7. '
' → logprob: -5.024954319000244
    8. 'from' → logprob: -5.274954319000244
    9. 'top' → logprob: -5.274954319000244
    10. 'deque' → logprob: -6.149954319000244

Token 1002: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.0122041702270508
    2. '#' → logprob: -1.7622041702270508
    3. '
' → logprob: -2.012204170227051
    4. 'D' → logprob: -2.762204170227051
    5. '=' → logprob: -3.387204170227051
    6. 'dist' → logprob: -3.887204170227051
    7. '_' → logprob: -4.137204170227051
    8. '`' → logprob: -4.137204170227051
    9. '[
' → logprob: -4.262204170227051
    10. 'out' → logprob: -4.387204170227051

Token 1003: ' can' (ID: 665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.692487895488739
    2. ' =' → logprob: -1.3174879550933838
    3. '#' → logprob: -2.817487955093384
    4. 'is' → logprob: -3.067487955093384
    5. ' is' → logprob: -3.067487955093384
    6. '
' → logprob: -3.442487955093384
    7. 'from' → logprob: -4.692487716674805
    8. 's' → logprob: -4.942487716674805
    9. '[u' → logprob: -5.192487716674805
    10. '```' → logprob: -5.692487716674805

Token 1004: ' be' (ID: 413)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.16859851777553558
    2. ' have' → logprob: -2.4185984134674072
    3. 'be' → logprob: -3.5435984134674072
    4. ' be' → logprob: -3.7935984134674072
    5. '#' → logprob: -5.668598651885986
    6. '
' → logprob: -5.918598651885986
    7. '```' → logprob: -6.543598651885986
    8. '=' → logprob: -6.668598651885986
    9. 'size' → logprob: -6.668598651885986
    10. 'has' → logprob: -7.793598651885986

Token 1005: ' big' (ID: 3464)
  Prédit: 'large'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'large' → logprob: -0.012498816475272179
    2. 'very' → logprob: -4.63749885559082
    3. ' large' → logprob: -6.88749885559082
    4. '```' → logprob: -6.88749885559082
    5. 'quite' → logprob: -8.38749885559082
    6. '#' → logprob: -9.38749885559082
    7. 'import' → logprob: -9.38749885559082
    8. 'big' → logprob: -9.76249885559082
    9. '   ' → logprob: -10.13749885559082
    10. '
' → logprob: -10.13749885559082

Token 1006: ',' (ID: 11)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.2866997718811035
    2. '#' → logprob: -2.4116997718811035
    3. 'graph' → logprob: -2.5366997718811035
    4. 'from' → logprob: -3.6616997718811035
    5. '
' → logprob: -4.4116997718811035
    6. 'D' → logprob: -4.7866997718811035
    7. 'import' → logprob: -5.0366997718811035
    8. ' =' → logprob: -5.5366997718811035
    9. '=' → logprob: -5.6616997718811035
    10. '```' → logprob: -5.6616997718811035

Token 1007: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6571511626243591
    2. 'import' → logprob: -1.907151222229004
    3. 'in' → logprob: -2.657151222229004
    4. 'ind' → logprob: -2.907151222229004
    5. 'from' → logprob: -2.907151222229004
    6. 'dag' → logprob: -3.657151222229004
    7. '
' → logprob: -3.782151222229004
    8. 'visited' → logprob: -3.907151222229004
    9. 'graph' → logprob: -4.157151222229004
    10. 'out' → logprob: -4.532151222229004

Token 1008: ' do' (ID: 621)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.0426737070083618
    2. 'import' → logprob: -1.4176737070083618
    3. '#' → logprob: -1.9176737070083618
    4. 'build' → logprob: -2.1676735877990723
    5. '=' → logprob: -3.1676735877990723
    6. 'from' → logprob: -3.9176735877990723
    7. '```' → logprob: -4.292673587799072
    8. '
' → logprob: -4.417673587799072
    9. 'need' → logprob: -4.542673587799072
    10. ' =' → logprob: -5.042673587799072

Token 1009: ' the' (ID: 290)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.32183438539505005
    2. 'top' → logprob: -1.8218343257904053
    3. '```' → logprob: -2.8218343257904053
    4. 'import' → logprob: -3.3218343257904053
    5. 'visited' → logprob: -5.696834564208984
    6. 'B' → logprob: -6.071834564208984
    7. 'the' → logprob: -6.071834564208984
    8. 'a' → logprob: -6.321834564208984
    9. '
' → logprob: -6.321834564208984
    10. '#' → logprob: -7.321834564208984

Token 1010: ' following' (ID: 3992)
  Prédit: 'following'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'following' → logprob: -0.3479858636856079
    2. ' following' → logprob: -2.3479857444763184
    3. 'top' → logprob: -2.5979857444763184
    4. 'from' → logprob: -2.5979857444763184
    5. 'import' → logprob: -3.8479857444763184
    6. '```' → logprob: -4.222985744476318
    7. '#' → logprob: -4.972985744476318
    8. 'reverse' → logprob: -6.597985744476318
    9. 'rest' → logprob: -6.972985744476318
    10. 'def' → logprob: -7.097985744476318

Token 1011: ':

' (ID: 1402)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.08460552245378494
    2. '#' → logprob: -3.7096054553985596
    3. '
' → logprob: -4.084605693817139
    4. 'visited' → logprob: -4.584605693817139
    5. 'dist' → logprob: -4.834605693817139
    6. 'graph' → logprob: -4.959605693817139
    7. 'from' → logprob: -5.959605693817139
    8. 'top' → logprob: -6.584605693817139
    9. 'dp' → logprob: -6.709605693817139
    10. 'adj' → logprob: -6.709605693817139

Token 1012: '#' (ID: 2)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.7537639141082764
    2. 'visited' → logprob: -1.3787639141082764
    3. '#' → logprob: -2.2537639141082764
    4. 'top' → logprob: -3.6287639141082764
    5. 'dist' → logprob: -3.6287639141082764
    6. 'in' → logprob: -3.7537639141082764
    7. 'ind' → logprob: -3.7537639141082764
    8. 'reachable' → logprob: -3.8787639141082764
    9. 'from' → logprob: -4.1287641525268555
    10. 'rev' → logprob: -4.8787641525268555

Token 1013: ' For' (ID: 2214)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.10252480208873749
    2. '#' → logprob: -3.102524757385254
    3. 'from' → logprob: -4.102524757385254
    4. 'dist' → logprob: -4.852524757385254
    5. 'top' → logprob: -5.227524757385254
    6. 'visited' → logprob: -5.477524757385254
    7. 'ind' → logprob: -5.727524757385254
    8. 'rev' → logprob: -5.852524757385254
    9. 'in' → logprob: -5.852524757385254
    10. 'short' → logprob: -6.602524757385254

Token 1014: ' DAG' (ID: 157361)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.8373040556907654
    2. 'node' → logprob: -1.4623041152954102
    3. 'each' → logprob: -1.7123041152954102
    4. 'top' → logprob: -2.58730411529541
    5. 'v' → logprob: -3.33730411529541
    6. '_top' → logprob: -4.21230411529541
    7. '_each' → logprob: -5.58730411529541
    8. 'i' → logprob: -6.08730411529541
    9. '_nodes' → logprob: -6.08730411529541
    10. '_node' → logprob: -6.33730411529541

Token 1015: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3514459729194641
    2. '_adj' → logprob: -2.1014459133148193
    3. '_nodes' → logprob: -2.2264459133148193
    4. '_edges' → logprob: -3.6014459133148193
    5. '=' → logprob: -4.351446151733398
    6. 'adj' → logprob: -5.101446151733398
    7. 'from' → logprob: -5.726446151733398
    8. '_vertices' → logprob: -5.851446151733398
    9. '_' → logprob: -6.101446151733398
    10. '_size' → logprob: -6.351446151733398

Token 1016: '#' (ID: 2)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.14581158757209778
    2. 'for' → logprob: -3.2708115577697754
    3. 'from' → logprob: -4.145811557769775
    4. ' dag' → logprob: -4.270811557769775
    5. 'top' → logprob: -4.645811557769775
    6. 'visited' → logprob: -4.770811557769775
    7. 'ind' → logprob: -4.895811557769775
    8. 'in' → logprob: -4.895811557769775
    9. 'rev' → logprob: -5.270811557769775
    10. 'graph' → logprob: -5.395811557769775

Token 1017: ' use' (ID: 1199)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.45861393213272095
    2. 'ind' → logprob: -2.333613872528076
    3. 'from' → logprob: -2.708613872528076
    4. 'in' → logprob: -2.708613872528076
    5. 'for' → logprob: -2.958613872528076
    6. 'rev' → logprob: -3.958613872528076
    7. 'short' → logprob: -4.333613872528076
    8. 'visited' → logprob: -4.583613872528076
    9. 'adj' → logprob: -4.833613872528076
    10. '#' → logprob: -5.333613872528076

Token 1018: ' adjacency' (ID: 177015)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.3716166615486145
    2. 'graph' → logprob: -1.6216166019439697
    3. 'default' → logprob: -3.4966166019439697
    4. 'dist' → logprob: -3.4966166019439697
    5. 'adj' → logprob: -3.8716166019439697
    6. 'deque' → logprob: -4.246616840362549
    7. 'collections' → logprob: -4.996616840362549
    8. 'visited' → logprob: -5.746616840362549
    9. 'import' → logprob: -5.871616840362549
    10. 'top' → logprob: -6.371616840362549

Token 1019: ' list' (ID: 1562)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7840977311134338
    2. '_list' → logprob: -1.284097671508789
    3. 'list' → logprob: -1.534097671508789
    4. '=' → logprob: -3.034097671508789
    5. '
' → logprob: -6.534097671508789
    6. '_' → logprob: -8.034097671508789
    7. 'd' → logprob: -8.784097671508789
    8. '=[]' → logprob: -8.784097671508789
    9. '_lists' → logprob: -8.909097671508789
    10. '```' → logprob: -9.284097671508789

Token 1020: '
' (ID: 198)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.0012220130302011967
    2. 'sp' → logprob: -8.001221656799316
    3. 'short' → logprob: -8.251221656799316
    4. 'D' → logprob: -8.626221656799316
    5. 'adj' → logprob: -8.751221656799316
    6. 'graph' → logprob: -9.501221656799316
    7. 'dp' → logprob: -10.501221656799316
    8. ' dag' → logprob: -10.626221656799316
    9. '```' → logprob: -10.626221656799316
    10. ' =' → logprob: -10.751221656799316

Token 1021: '#' (ID: 2)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.006715967319905758
    2. 'rev' → logprob: -6.006715774536133
    3. 'top' → logprob: -7.131715774536133
    4. 'D' → logprob: -7.256715774536133
    5. 'dist' → logprob: -7.881715774536133
    6. 'for' → logprob: -7.881715774536133
    7. 'from' → logprob: -8.006715774536133
    8. 'short' → logprob: -8.506715774536133
    9. 'adj' → logprob: -8.506715774536133
    10. 'dp' → logprob: -8.631715774536133

Token 1022: ' do' (ID: 621)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.006397969089448452
    2. 'short' → logprob: -6.0063982009887695
    3. 'sp' → logprob: -7.1313982009887695
    4. 'adj' → logprob: -7.3813982009887695
    5. 'top' → logprob: -7.5063982009887695
    6. 'D' → logprob: -7.7563982009887695
    7. 'from' → logprob: -8.13139820098877
    8. 'for' → logprob: -8.63139820098877
    9. 'dp' → logprob: -8.63139820098877
    10. 's' → logprob: -8.63139820098877

Token 1023: ' DFS' (ID: 115767)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.11473508924245834
    2. 'top' → logprob: -2.3647351264953613
    3. 'queue' → logprob: -5.739735126495361
    4. 'import' → logprob: -5.739735126495361
    5. 'deque' → logprob: -6.239735126495361
    6. '```' → logprob: -6.239735126495361
    7. 'visited' → logprob: -6.364735126495361
    8. ' from' → logprob: -6.864735126495361
    9. 'dist' → logprob: -7.364735126495361
    10. 'stack' → logprob: -8.114734649658203

Token 1024: ' from' (ID: 591)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.5880832672119141
    2. 'visited' → logprob: -1.213083267211914
    3. 'top' → logprob: -3.088083267211914
    4. '#' → logprob: -3.838083267211914
    5. 'stack' → logprob: -3.838083267211914
    6. 'from' → logprob: -4.213083267211914
    7. '```' → logprob: -4.463083267211914
    8. 'graph' → logprob: -4.463083267211914
    9. 'adj' → logprob: -5.088083267211914
    10. 'def' → logprob: -5.963083267211914

Token 1025: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002076386474072933
    2. 'c' → logprob: -6.752076148986816
    3. '1' → logprob: -7.127076148986816
    4. 'u' → logprob: -9.627076148986816
    5. 's' → logprob: -12.002076148986816
    6. 'node' → logprob: -12.002076148986816
    7. 'start' → logprob: -12.502076148986816
    8. ' a' → logprob: -12.752076148986816
    9. 'each' → logprob: -12.877076148986816
    10. 'nodes' → logprob: -12.877076148986816

Token 1026: ' to' (ID: 316)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.44480326771736145
    2. 'visited' → logprob: -1.819803237915039
    3. 'top' → logprob: -2.819803237915039
    4. '#' → logprob: -3.319803237915039
    5. 'adj' → logprob: -3.694803237915039
    6. 'stack' → logprob: -3.819803237915039
    7. 'graph' → logprob: -4.069803237915039
    8. '
' → logprob: -4.819803237915039
    9. '```' → logprob: -4.819803237915039
    10. '=' → logprob: -5.444803237915039

Token 1027: ' get' (ID: 717)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.6779976487159729
    2. 'b' → logprob: -0.8029976487159729
    3. 'find' → logprob: -3.552997589111328
    4. 'node' → logprob: -6.177997589111328
    5. 'visited' → logprob: -6.427997589111328
    6. 'c' → logprob: -6.552997589111328
    7. 'u' → logprob: -6.552997589111328
    8. 'visit' → logprob: -6.552997589111328
    9. 'mark' → logprob: -6.802997589111328
    10. 'get' → logprob: -7.302997589111328

Token 1028: ' topo' (ID: 97979)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.05533265322446823
    2. 'reachable' → logprob: -3.555332660675049
    3. 'top' → logprob: -4.305332660675049
    4. '[]' → logprob: -5.555332660675049
    5. '[]
' → logprob: -6.680332660675049
    6. 'a' → logprob: -6.805332660675049
    7. 'used' → logprob: -6.805332660675049
    8. 'nodes' → logprob: -7.180332660675049
    9. '```' → logprob: -7.430332660675049
    10. 'stack' → logprob: -7.555332660675049

Token 1029: ' order' (ID: 2569)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.9798374772071838
    2. 'graph' → logprob: -1.729837417602539
    3. '
' → logprob: -1.979837417602539
    4. 'order' → logprob: -2.729837417602539
    5. 'def' → logprob: -3.104837417602539
    6. '```' → logprob: -3.104837417602539
    7. ':
' → logprob: -3.854837417602539
    8. ' =' → logprob: -4.104837417602539
    9. '#' → logprob: -4.354837417602539
    10. '=' → logprob: -4.479837417602539

Token 1030: ' (' (ID: 350)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.06567791849374771
    2. 'from' → logprob: -3.4406778812408447
    3. 'visited' → logprob: -4.315678119659424
    4. 'import' → logprob: -5.315678119659424
    5. '#' → logprob: -5.440678119659424
    6. 'top' → logprob: -5.565678119659424
    7. 'D' → logprob: -6.815678119659424
    8. 'ind' → logprob: -7.065678119659424
    9. 'in' → logprob: -7.315678119659424
    10. 'adj' → logprob: -7.565678119659424

Token 1031: 'or' (ID: 267)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33464059233665466
    2. ')
' → logprob: -1.334640622138977
    3. 'u' → logprob: -5.9596405029296875
    4. '#' → logprob: -5.9596405029296875
    5. ',' → logprob: -6.3346405029296875
    6. '[u' → logprob: -6.4596405029296875
    7. '```' → logprob: -6.7096405029296875
    8. '`' → logprob: -6.8346405029296875
    9. 'visited' → logprob: -6.8346405029296875
    10. 'def' → logprob: -6.9596405029296875

Token 1032: ' use' (ID: 1199)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.25475674867630005
    2. 'b' → logprob: -2.2547566890716553
    3. 'K' → logprob: -3.1297566890716553
    4. 'from' → logprob: -3.6297566890716553
    5. '#' → logprob: -4.004756927490234
    6. '
' → logprob: -4.629756927490234
    7. 'a' → logprob: -4.629756927490234
    8. 'build' → logprob: -5.629756927490234
    9. 'import' → logprob: -6.504756927490234
    10. 'top' → logprob: -6.754756927490234

Token 1033: ' PQ' (ID: 77170)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.8238668441772461
    2. 'deque' → logprob: -1.198866844177246
    3. 'from' → logprob: -1.948866844177246
    4. 'queue' → logprob: -3.073866844177246
    5. 'K' → logprob: -3.698866844177246
    6. 'import' → logprob: -3.698866844177246
    7. 'b' → logprob: -5.073866844177246
    8. '```' → logprob: -5.448866844177246
    9. 'sys' → logprob: -5.948866844177246
    10. 'stack' → logprob: -6.073866844177246

Token 1034: ')

' (ID: 1029)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7148640751838684
    2. '=' → logprob: -1.3398640155792236
    3. ')' → logprob: -2.2148640155792236
    4. ')
' → logprob: -3.0898640155792236
    5. '):
' → logprob: -4.464864253997803
    6. '
' → logprob: -4.839864253997803
    7. 'a' → logprob: -5.214864253997803
    8. 'u' → logprob: -5.214864253997803
    9. '```' → logprob: -5.214864253997803
    10. 'graph' → logprob: -5.339864253997803

Token 1035: '#' (ID: 2)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.6521928906440735
    2. 'in' → logprob: -2.0271928310394287
    3. 'from' → logprob: -2.0271928310394287
    4. 'stack' → logprob: -2.5271928310394287
    5. 'ind' → logprob: -2.5271928310394287
    6. 'import' → logprob: -3.0271928310394287
    7. 'top' → logprob: -6.152193069458008
    8. '#' → logprob: -6.277193069458008
    9. 'dag' → logprob: -6.902193069458008
    10. 'def' → logprob: -6.902193069458008

Token 1036: ' Then' (ID: 7801)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.107713222503662
    2. 'ind' → logprob: -1.357713222503662
    3. 'in' → logprob: -1.607713222503662
    4. 'from' → logprob: -1.982713222503662
    5. 'import' → logprob: -2.982713222503662
    6. '#' → logprob: -4.857713222503662
    7. 'top' → logprob: -5.732713222503662
    8. 'dag' → logprob: -5.857713222503662
    9. 'stack' → logprob: -6.232713222503662
    10. 'def' → logprob: -6.232713222503662

Token 1037: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.2585337162017822
    2. 'visited' → logprob: -1.5085337162017822
    3. 'import' → logprob: -1.6335337162017822
    4. 'ind' → logprob: -1.7585337162017822
    5. 'from' → logprob: -2.2585337162017822
    6. '#' → logprob: -4.508533477783203
    7. 'dist' → logprob: -4.758533477783203
    8. '
' → logprob: -7.133533477783203
    9. 'order' → logprob: -7.258533477783203
    10. 'queue' → logprob: -7.883533477783203

Token 1038: ' for' (ID: 395)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8350686430931091
    2. 'import' → logprob: -1.585068702697754
    3. 'from' → logprob: -1.710068702697754
    4. 'in' → logprob: -2.460068702697754
    5. 'ind' → logprob: -2.960068702697754
    6. 'dist' → logprob: -4.210068702697754
    7. '#' → logprob: -4.335068702697754
    8. 'reachable' → logprob: -5.085068702697754
    9. 'rev' → logprob: -5.210068702697754
    10. 'reverse' → logprob: -6.835068702697754

Token 1039: ' reach' (ID: 7627)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.4975900650024414
    2. 'u' → logprob: -1.1225900650024414
    3. 'v' → logprob: -4.247590065002441
    4. '_node' → logprob: -4.747590065002441
    5. 'visited' → logprob: -4.872590065002441
    6. 'reachable' → logprob: -4.872590065002441
    7. '_' → logprob: -5.122590065002441
    8. 'dist' → logprob: -5.497590065002441
    9. 'i' → logprob: -5.622590065002441
    10. '_u' → logprob: -6.247590065002441

Token 1040: 'ability' (ID: 3563)
  Prédit: 'ability'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ability' → logprob: -0.005604157689958811
    2. 'a' → logprob: -5.630604267120361
    3. '#' → logprob: -6.880604267120361
    4. 'b' → logprob: -8.130603790283203
    5. '
' → logprob: -8.505603790283203
    6. 'able' → logprob: -9.005603790283203
    7. 'ab' → logprob: -9.130603790283203
    8. '```' → logprob: -9.755603790283203
    9. 'out' → logprob: -9.880603790283203
    10. '``' → logprob: -10.130603790283203

Token 1041: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4799446761608124
    2. '=' → logprob: -2.1049447059631348
    3. ' =' → logprob: -2.1049447059631348
    4. '
' → logprob: -2.9799447059631348
    5. '_graph' → logprob: -3.9799447059631348
    6. ',' → logprob: -4.104944705963135
    7. '[u' → logprob: -4.104944705963135
    8. '_from' → logprob: -4.604944705963135
    9. '=
' → logprob: -5.979944705963135
    10. 'def' → logprob: -5.979944705963135

Token 1042: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.018920985981822014
    2. 'each' → logprob: -4.1439208984375
    3. 'a' → logprob: -6.2689208984375
    4. 'all' → logprob: -8.2689208984375
    5. '
' → logprob: -8.5189208984375
    6. 'u' → logprob: -8.6439208984375
    7. 'every' → logprob: -8.8939208984375
    8. ' c' → logprob: -9.5189208984375
    9. 'collections' → logprob: -10.2689208984375
    10. 'node' → logprob: -10.2689208984375

Token 1043: ' to' (ID: 316)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.517784595489502
    2. '_to' → logprob: -1.392784595489502
    3. '_d' → logprob: -3.267784595489502
    4. '_lists' → logprob: -3.267784595489502
    5. 'to' → logprob: -4.267784595489502
    6. '
' → logprob: -4.267784595489502
    7. '_nodes' → logprob: -4.642784595489502
    8. ',' → logprob: -5.767784595489502
    9. ' to' → logprob: -5.892784595489502
    10. ':' → logprob: -6.017784595489502

Token 1044: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0002775438770186156
    2. ' d' → logprob: -8.750277519226074
    3. 'c' → logprob: -9.500277519226074
    4. '
' → logprob: -10.625277519226074
    5. 'v' → logprob: -12.375277519226074
    6. '```' → logprob: -12.625277519226074
    7. '_d' → logprob: -13.500277519226074
    8. '#' → logprob: -13.750277519226074
    9. 'all' → logprob: -13.750277519226074
    10. '`' → logprob: -14.000277519226074

Token 1045: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.576056957244873
    2. ':
' → logprob: -1.576056957244873
    3. ',' → logprob: -1.826056957244873
    4. '#' → logprob: -4.576056957244873
    5. 'def' → logprob: -4.826056957244873
    6. 'import' → logprob: -4.826056957244873
    7. '=' → logprob: -4.826056957244873
    8. 'graph' → logprob: -5.326056957244873
    9. ' =' → logprob: -5.451056957244873
    10. '_graph' → logprob: -5.576056957244873

Token 1046: ' store' (ID: 4897)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2761465013027191
    2. ':' → logprob: -2.526146411895752
    3. 'graph' → logprob: -2.901146411895752
    4. 'dist' → logprob: -3.276146411895752
    5. 'import' → logprob: -3.776146411895752
    6. 'visited' → logprob: -4.401146411895752
    7. 'if' → logprob: -5.026146411895752
    8. ':
' → logprob: -5.151146411895752
    9. 'adj' → logprob: -5.401146411895752
    10. 'd' → logprob: -5.526146411895752

Token 1047: ' for' (ID: 395)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -1.340335488319397
    2. 'adj' → logprob: -1.590335488319397
    3. 'visited' → logprob: -1.715335488319397
    4. 'dist' → logprob: -1.840335488319397
    5. 'from' → logprob: -2.5903353691101074
    6. 'dp' → logprob: -3.4653353691101074
    7. '```' → logprob: -3.8403353691101074
    8. 'reach' → logprob: -4.215335369110107
    9. 'graph' → logprob: -4.965335369110107
    10. 'a' → logprob: -5.090335369110107

Token 1048: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.014508400112390518
    2. 'u' → logprob: -4.889508247375488
    3. 'node' → logprob: -6.264508247375488
    4. 'c' → logprob: -6.264508247375488
    5. 'all' → logprob: -6.889508247375488
    6. 'v' → logprob: -7.264508247375488
    7. 'd' → logprob: -7.889508247375488
    8. 'every' → logprob: -8.639508247375488
    9. '```' → logprob: -8.639508247375488
    10. '[u' → logprob: -9.139508247375488

Token 1049: ' vertex' (ID: 25363)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.1429712325334549
    2. 'c' → logprob: -2.2679712772369385
    3. ' node' → logprob: -4.392971038818359
    4. 'u' → logprob: -5.267971038818359
    5. '_node' → logprob: -5.642971038818359
    6. 'adj' → logprob: -6.392971038818359
    7. 'd' → logprob: -6.517971038818359
    8. 'vertex' → logprob: -6.642971038818359
    9. ' c' → logprob: -6.767971038818359
    10. '`' → logprob: -7.517971038818359

Token 1050: ' its' (ID: 1617)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -1.9768548011779785
    2. 'adj' → logprob: -2.1018548011779785
    3. 'neighbors' → logprob: -2.8518548011779785
    4. '[]
' → logprob: -2.9768548011779785
    5. 'the' → logprob: -3.1018548011779785
    6. 's' → logprob: -3.1018548011779785
    7. '=' → logprob: -3.3518548011779785
    8. '```' → logprob: -3.4768548011779785
    9. 'visited' → logprob: -3.6018548011779785
    10. ':
' → logprob: -3.6018548011779785

Token 1051: ' topo' (ID: 97979)
  Prédit: 'reachable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reachable' → logprob: -1.0139033794403076
    2. 'adj' → logprob: -1.1389033794403076
    3. 'desc' → logprob: -2.1389033794403076
    4. 'children' → logprob: -2.6389033794403076
    5. 'bit' → logprob: -3.1389033794403076
    6. 'anc' → logprob: -3.2639033794403076
    7. '```' → logprob: -4.388903617858887
    8. 'out' → logprob: -4.513903617858887
    9. 'neighbors' → logprob: -5.638903617858887
    10. 'parents' → logprob: -6.138903617858887

Token 1052: ' order' (ID: 2569)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.060246679931879044
    2. '_index' → logprob: -3.435246706008911
    3. '_idx' → logprob: -4.810246467590332
    4. '_pos' → logprob: -5.185246467590332
    5. '_position' → logprob: -5.310246467590332
    6. '_rank' → logprob: -6.310246467590332
    7. '_indices' → logprob: -6.685246467590332
    8. '_' → logprob: -6.685246467590332
    9. '_num' → logprob: -7.060246467590332
    10. '_ind' → logprob: -7.560246467590332

Token 1053: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.328309178352356
    2. 'dag' → logprob: -1.578309178352356
    3. 'from' → logprob: -1.828309178352356
    4. 'ind' → logprob: -2.3283090591430664
    5. 'import' → logprob: -2.4533090591430664
    6. 'top' → logprob: -2.9533090591430664
    7. 'adj' → logprob: -3.7033090591430664
    8. 'in' → logprob: -3.7033090591430664
    9. 'visited' → logprob: -4.078309059143066
    10. 'graph' → logprob: -4.203309059143066

Token 1054: '#' (ID: 2)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.11040531098842621
    2. '#' → logprob: -2.860405206680298
    3. 'graph' → logprob: -3.985405206680298
    4. 'from' → logprob: -5.235405445098877
    5. 'in' → logprob: -5.360405445098877
    6. 'import' → logprob: -5.985405445098877
    7. 'ind' → logprob: -6.110405445098877
    8. '
' → logprob: -6.110405445098877
    9. 'D' → logprob: -6.235405445098877
    10. '```' → logprob: -6.235405445098877

Token 1055: ' Because' (ID: 13602)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.8696166276931763
    2. '#' → logprob: -1.1196166276931763
    3. 'dag' → logprob: -2.3696165084838867
    4. '
' → logprob: -3.1196165084838867
    5. 'import' → logprob: -4.244616508483887
    6. 'in' → logprob: -4.369616508483887
    7. '```' → logprob: -4.494616508483887
    8. 'from' → logprob: -4.619616508483887
    9. 'ind' → logprob: -4.744616508483887
    10. 'def' → logprob: -4.869616508483887

Token 1056: ' DAG' (ID: 157361)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.405490517616272
    2. '#' → logprob: -1.655490517616272
    3. 'dist' → logprob: -1.655490517616272
    4. '
' → logprob: -2.2804903984069824
    5. ' the' → logprob: -3.0304903984069824
    6. 'd' → logprob: -3.5304903984069824
    7. 'not' → logprob: -3.7804903984069824
    8. 'c' → logprob: -4.155490398406982
    9. '`' → logprob: -4.405490398406982
    10. ' not' → logprob: -4.530490398406982

Token 1057: ' edges' (ID: 22569)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6079830527305603
    2. ':' → logprob: -2.482983112335205
    3. ' is' → logprob: -2.857983112335205
    4. ':
' → logprob: -3.357983112335205
    5. ' =' → logprob: -3.607983112335205
    6. '[u' → logprob: -3.732983112335205
    7. '_edges' → logprob: -3.982983112335205
    8. '_' → logprob: -4.107983112335205
    9. '```' → logprob: -4.107983112335205
    10. ',' → logprob: -4.357983112335205

Token 1058: ' only' (ID: 1606)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.6892501711845398
    2. 'u' → logprob: -1.5642502307891846
    3. ' are' → logprob: -2.1892502307891846
    4. 'are' → logprob: -2.6892502307891846
    5. ' u' → logprob: -3.8142502307891846
    6. 's' → logprob: -4.1892499923706055
    7. '=' → logprob: -4.6892499923706055
    8. ' =' → logprob: -4.6892499923706055
    9. 'from' → logprob: -5.0642499923706055
    10. '
' → logprob: -5.0642499923706055

Token 1059: ' go' (ID: 810)
  Prédit: 'go'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'go' → logprob: -0.42200249433517456
    2. ' go' → logprob: -2.2970025539398193
    3. '=' → logprob: -2.9220025539398193
    4. '[u' → logprob: -3.5470025539398193
    5. 'from' → logprob: -3.7970025539398193
    6. 'are' → logprob: -3.9220025539398193
    7. 'connect' → logprob: -4.04700231552124
    8. 'point' → logprob: -4.17200231552124
    9. 'u' → logprob: -4.54700231552124
    10. 'exist' → logprob: -4.67200231552124

Token 1060: ' forward' (ID: 6687)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.005294357892125845
    2. 'to' → logprob: -6.130294322967529
    3. 'forward' → logprob: -6.630294322967529
    4. ' from' → logprob: -7.005294322967529
    5. 'in' → logprob: -8.005294799804688
    6. 'one' → logprob: -8.130294799804688
    7. 'down' → logprob: -9.255294799804688
    8. 'u' → logprob: -9.505294799804688
    9. '
' → logprob: -11.005294799804688
    10. ' one' → logprob: -11.505294799804688

Token 1061: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9376346468925476
    2. '
' → logprob: -1.6876347064971924
    3. ':
' → logprob: -1.9376347064971924
    4. ',' → logprob: -2.4376347064971924
    5. '```' → logprob: -3.4376347064971924
    6. ' =' → logprob: -3.6876347064971924
    7. ',
' → logprob: -3.9376347064971924
    8. '`' → logprob: -4.562634468078613
    9. ' in' → logprob: -4.687634468078613
    10. 'from' → logprob: -4.937634468078613

Token 1062: ' top' (ID: 2344)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0011370006250217557
    2. 'the' → logprob: -6.876136779785156
    3. 'order' → logprob: -10.001136779785156
    4. 'index' → logprob: -10.626136779785156
    5. 'direction' → logprob: -11.376136779785156
    6. 'terms' → logprob: -12.126136779785156
    7. ' top' → logprob: -12.251136779785156
    8. ' topo' → logprob: -12.876136779785156
    9. 'ordering' → logprob: -13.376136779785156
    10. '```' → logprob: -13.501136779785156

Token 1063: 'ological' (ID: 8339)
  Prédit: 'ological'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ological' → logprob: -0.22921667993068695
    2. 'logical' → logprob: -2.3542165756225586
    3. 'log' → logprob: -2.9792165756225586
    4. 'o' → logprob: -3.9792165756225586
    5. 'ology' → logprob: -4.604216575622559
    6. 'order' → logprob: -4.604216575622559
    7. 'logic' → logprob: -4.979216575622559
    8. 'ologic' → logprob: -5.979216575622559
    9. '
' → logprob: -6.229216575622559
    10. '``' → logprob: -6.229216575622559

Token 1064: ' order' (ID: 2569)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.004517704248428345
    2. '_' → logprob: -6.379517555236816
    3. '_sort' → logprob: -6.754517555236816
    4. '_space' → logprob: -7.879517555236816
    5. '_position' → logprob: -8.129517555236816
    6. '_sorted' → logprob: -8.379517555236816
    7. ' _' → logprob: -9.254517555236816
    8. '_index' → logprob: -9.379517555236816
    9. '_add' → logprob: -9.879517555236816
    10. '_rank' → logprob: -10.129517555236816

Token 1065: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5083677172660828
    2. ':
' → logprob: -2.3833677768707275
    3. '
' → logprob: -2.5083677768707275
    4. 'graph' → logprob: -3.0083677768707275
    5. ',
' → logprob: -3.5083677768707275
    6. 'dag' → logprob: -3.8833677768707275
    7. ',' → logprob: -4.008367538452148
    8. '`
' → logprob: -4.383367538452148
    9. 'from' → logprob: -4.633367538452148
    10. '`' → logprob: -4.758367538452148

Token 1066: '#' (ID: 2)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.1806865632534027
    2. 'graph' → logprob: -2.5556864738464355
    3. '#' → logprob: -2.9306864738464355
    4. '
' → logprob: -4.0556864738464355
    5. '```' → logprob: -4.9306864738464355
    6. 'from' → logprob: -6.1806864738464355
    7. 'out' → logprob: -6.8056864738464355
    8. 'adj' → logprob: -7.1806864738464355
    9. 'D' → logprob: -7.3056864738464355
    10. '\' → logprob: -7.4306864738464355

Token 1067: ' Then' (ID: 7801)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.09025365859270096
    2. '#' → logprob: -3.4652535915374756
    3. 'from' → logprob: -3.5902535915374756
    4. 'in' → logprob: -5.215253829956055
    5. 'ind' → logprob: -5.340253829956055
    6. 'adj' → logprob: -5.465253829956055
    7. 'top' → logprob: -5.715253829956055
    8. 'graph' → logprob: -5.715253829956055
    9. 'visited' → logprob: -6.090253829956055
    10. 'import' → logprob: -6.715253829956055

Token 1068: ' if' (ID: 538)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1562350988388062
    2. 'visited' → logprob: -1.5312350988388062
    3. 'import' → logprob: -1.7812350988388062
    4. 'from' → logprob: -1.7812350988388062
    5. 'dist' → logprob: -2.4062352180480957
    6. 'for' → logprob: -4.156235218048096
    7. 'reachable' → logprob: -4.281235218048096
    8. 'def' → logprob: -5.531235218048096
    9. 'dp' → logprob: -6.156235218048096
    10. '
' → logprob: -6.531235218048096

Token 1069: ' topo' (ID: 97979)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.014741121791303158
    2. 'c' → logprob: -5.139740943908691
    3. ' topo' → logprob: -5.139740943908691
    4. 'dist' → logprob: -6.264740943908691
    5. 'd' → logprob: -7.264740943908691
    6. ' c' → logprob: -9.389740943908691
    7. ' top' → logprob: -9.514740943908691
    8. 'Topo' → logprob: -10.264740943908691
    9. 'to' → logprob: -10.514740943908691
    10. '```' → logprob: -10.764740943908691

Token 1070: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.004489581100642681
    2. '_' → logprob: -5.754489421844482
    3. '```' → logprob: -8.50448989868164
    4. '_index' → logprob: -9.25448989868164
    5. '``' → logprob: -9.25448989868164
    6. ' _' → logprob: -9.50448989868164
    7. '_
' → logprob: -9.50448989868164
    8. '
' → logprob: -9.75448989868164
    9. '_pos' → logprob: -9.75448989868164
    10. '_orders' → logprob: -9.75448989868164

Token 1071: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.5388323664665222
    2. '[' → logprob: -1.538832426071167
    3. '```' → logprob: -2.038832426071167
    4. 'd' → logprob: -3.788832426071167
    5. '
' → logprob: -4.413832187652588
    6. '``' → logprob: -4.913832187652588
    7. '`' → logprob: -5.038832187652588
    8. '\[' → logprob: -5.163832187652588
    9. '\' → logprob: -5.413832187652588
    10. '[
' → logprob: -5.663832187652588

Token 1072: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03908640891313553
    2. '[c' → logprob: -3.53908634185791
    3. '<=' → logprob: -5.91408634185791
    4. '```' → logprob: -6.41408634185791
    5. ']<=' → logprob: -6.53908634185791
    6. '[' → logprob: -7.16408634185791
    7. ']+' → logprob: -7.41408634185791
    8. ' <=' → logprob: -7.41408634185791
    9. '']' → logprob: -8.28908634185791
    10. '`]' → logprob: -8.28908634185791

Token 1073: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.23505143821239471
    2. ' <=' → logprob: -2.110051393508911
    3. '[c' → logprob: -3.235051393508911
    4. ' <' → logprob: -3.735051393508911
    5. '<' → logprob: -3.985051393508911
    6. '<c' → logprob: -5.36005163192749
    7. '[' → logprob: -7.73505163192749
    8. '```' → logprob: -8.110051155090332
    9. '==' → logprob: -8.360051155090332
    10. '!=' → logprob: -8.860051155090332

Token 1074: ' topo' (ID: 97979)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -4.4849443838757e-06
    2. ' topo' → logprob: -13.000004768371582
    3. '[top' → logprob: -13.500004768371582
    4. '
' → logprob: -15.000004768371582
    5. 'to' → logprob: -15.125004768371582
    6. '```' → logprob: -16.125003814697266
    7. '=' → logprob: -17.000003814697266
    8. 'toc' → logprob: -17.125003814697266
    9. '`' → logprob: -17.750003814697266
    10. ' top' → logprob: -18.000003814697266

Token 1075: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.00027706706896424294
    2. '[d' → logprob: -8.750277519226074
    3. '[_' → logprob: -10.125277519226074
    4. '_d' → logprob: -10.750277519226074
    5. ']_' → logprob: -11.000277519226074
    6. 'd' → logprob: -11.500277519226074
    7. '```' → logprob: -11.875277519226074
    8. '\' → logprob: -12.250277519226074
    9. ']' → logprob: -12.250277519226074
    10. 'order' → logprob: -13.125277519226074

Token 1076: '[d' (ID: 48377)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.26767420768737793
    2. '[d' → logprob: -1.642674207687378
    3. ']' → logprob: -3.767674207687378
    4. '[' → logprob: -4.892674446105957
    5. 'd' → logprob: -5.267674446105957
    6. ':' → logprob: -6.267674446105957
    7. '][' → logprob: -6.892674446105957
    8. '[
' → logprob: -7.017674446105957
    9. ':
' → logprob: -7.892674446105957
    10. '```' → logprob: -8.017674446105957

Token 1077: '],' (ID: 2155)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8753581643104553
    2. ':' → logprob: -1.6253581047058105
    3. ']:' → logprob: -1.6253581047058105
    4. ']:
' → logprob: -2.0003581047058105
    5. ']' → logprob: -3.6253581047058105
    6. '],' → logprob: -4.1253581047058105
    7. ',' → logprob: -4.6253581047058105
    8. '```' → logprob: -7.8753581047058105
    9. ' or' → logprob: -8.000358581542969
    10. ']
' → logprob: -8.875358581542969

Token 1078: ' no' (ID: 860)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.3542726039886475
    2. 'continue' → logprob: -1.3542726039886475
    3. 'print' → logprob: -1.4792726039886475
    4. '   ' → logprob: -2.2292726039886475
    5. ' print' → logprob: -2.7292726039886475
    6. ':
' → logprob: -3.2292726039886475
    7. '\n' → logprob: -4.354272842407227
    8. ' No' → logprob: -4.979272842407227
    9. '
' → logprob: -5.354272842407227
    10. ':' → logprob: -5.354272842407227

Token 1079: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.7595681548118591
    2. '_path' → logprob: -1.259568214416504
    3. '"' → logprob: -3.134568214416504
    4. '`' → logprob: -3.134568214416504
    5. '_' → logprob: -3.259568214416504
    6. '
' → logprob: -3.884568214416504
    7. ''' → logprob: -4.134568214416504
    8. ' path' → logprob: -4.134568214416504
    9. ')' → logprob: -4.259568214416504
    10. '\n' → logprob: -5.134568214416504

Token 1080: ' c' (ID: 274)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7760652303695679
    2. '
' → logprob: -2.0260653495788574
    3. 'graph' → logprob: -2.0260653495788574
    4. 'dag' → logprob: -2.2760653495788574
    5. '#' → logprob: -2.7760653495788574
    6. '_d' → logprob: -3.9010653495788574
    7. ':' → logprob: -4.026065349578857
    8. '_graph' → logprob: -5.026065349578857
    9. '\n' → logprob: -5.276065349578857
    10. ',
' → logprob: -5.651065349578857

Token 1081: '->' (ID: 609)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.5457788705825806
    2. '->' → logprob: -1.6707788705825806
    3. '_to' → logprob: -1.6707788705825806
    4. '<=' → logprob: -1.6707788705825806
    5. '_' → logprob: -2.045778751373291
    6. ' or' → logprob: -4.170778751373291
    7. ')' → logprob: -4.670778751373291
    8. ',' → logprob: -4.920778751373291
    9. 'to' → logprob: -5.170778751373291
    10. '[' → logprob: -5.295778751373291

Token 1082: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00020425561524461955
    2. ' d' → logprob: -8.500204086303711
    3. ''' → logprob: -14.875204086303711
    4. '`' → logprob: -15.125204086303711
    5. '```' → logprob: -15.875204086303711
    6. ''d' → logprob: -16.87520408630371
    7. '
' → logprob: -17.25020408630371
    8. '"' → logprob: -17.62520408630371
    9. ' ' → logprob: -18.00020408630371
    10. '_d' → logprob: -18.12520408630371

Token 1083: '.

' (ID: 364)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.06489060819149017
    2. '#' → logprob: -3.6898906230926514
    3. 'graph' → logprob: -4.189890384674072
    4. 'D' → logprob: -5.064890384674072
    5. 'dist' → logprob: -5.564890384674072
    6. 'ind' → logprob: -6.314890384674072
    7. '
' → logprob: -6.564890384674072
    8. 'adj' → logprob: -6.689890384674072
    9. 'out' → logprob: -6.814890384674072
    10. '```' → logprob: -6.814890384674072

Token 1084: '#' (ID: 2)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.13315880298614502
    2. 'graph' → logprob: -2.6331586837768555
    3. '#' → logprob: -3.6331586837768555
    4. 'D' → logprob: -4.8831586837768555
    5. 'dist' → logprob: -5.2581586837768555
    6. '
' → logprob: -5.3831586837768555
    7. 'if' → logprob: -6.7581586837768555
    8. 'from' → logprob: -6.8831586837768555
    9. 'ind' → logprob: -7.0081586837768555
    10. 'adj' → logprob: -7.1331586837768555

Token 1085: ' But' (ID: 3072)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.0368395633995533
    2. '#' → logprob: -3.911839485168457
    3. 'graph' → logprob: -5.786839485168457
    4. 'D' → logprob: -5.786839485168457
    5. 'adj' → logprob: -6.036839485168457
    6. 'from' → logprob: -6.536839485168457
    7. 'ind' → logprob: -6.786839485168457
    8. 'in' → logprob: -6.911839485168457
    9. 'top' → logprob: -7.286839485168457
    10. 'out' → logprob: -7.536839485168457

Token 1086: ' topo' (ID: 97979)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.35185325145721436
    2. 'dist' → logprob: -2.226853370666504
    3. '
' → logprob: -2.726853370666504
    4. ' #' → logprob: -3.601853370666504
    5. 'from' → logprob: -3.851853370666504
    6. 'for' → logprob: -3.976853370666504
    7. 'import' → logprob: -4.851853370666504
    8. '```' → logprob: -4.851853370666504
    9. 'visited' → logprob: -4.976853370666504
    10. 'c' → logprob: -5.101853370666504

Token 1087: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.0004755943373311311
    2. '_' → logprob: -8.500475883483887
    3. '```' → logprob: -9.375475883483887
    4. 'p' → logprob: -10.500475883483887
    5. '_level' → logprob: -10.875475883483887
    6. '\' → logprob: -10.875475883483887
    7. '_index' → logprob: -11.250475883483887
    8. '_code' → logprob: -11.500475883483887
    9. '_orders' → logprob: -11.625475883483887
    10. '_log' → logprob: -11.750475883483887

Token 1088: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.4623744785785675
    2. '```' → logprob: -2.087374448776245
    3. '[' → logprob: -2.212374448776245
    4. 's' → logprob: -3.212374448776245
    5. '_' → logprob: -3.462374448776245
    6. ']' → logprob: -4.337374687194824
    7. '`' → logprob: -4.837374687194824
    8. '[
' → logprob: -4.962374687194824
    9. ''s' → logprob: -5.462374687194824
    10. '=' → logprob: -5.462374687194824

Token 1089: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04407450184226036
    2. '[c' → logprob: -3.169074535369873
    3. ']<' → logprob: -8.544074058532715
    4. '[' → logprob: -9.044074058532715
    5. '[d' → logprob: -9.169074058532715
    6. '```' → logprob: -9.169074058532715
    7. ']
' → logprob: -9.544074058532715
    8. ']>' → logprob: -9.794074058532715
    9. '[
' → logprob: -9.794074058532715
    10. ']==' → logprob: -9.919074058532715

Token 1090: ' <=' (ID: 5017)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.00583577249199152
    2. ' <=' → logprob: -6.005836009979248
    3. '<=' → logprob: -7.005836009979248
    4. ']' → logprob: -7.130836009979248
    5. ' <' → logprob: -7.505836009979248
    6. '[d' → logprob: -8.00583553314209
    7. '[' → logprob: -8.25583553314209
    8. '```' → logprob: -8.75583553314209
    9. '<c' → logprob: -9.50583553314209
    10. '>' → logprob: -10.25583553314209

Token 1091: ' topo' (ID: 97979)
  Prédit: 'top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -0.0010350722586736083
    2. '[top' → logprob: -7.001035213470459
    3. ' topo' → logprob: -9.1260347366333
    4. ' top' → logprob: -12.3760347366333
    5. 'toc' → logprob: -12.5010347366333
    6. 'to' → logprob: -13.2510347366333
    7. '```' → logprob: -13.7510347366333
    8. 'd' → logprob: -14.6260347366333
    9. ' ' → logprob: -14.7510347366333
    10. '	top' → logprob: -14.8760347366333

Token 1092: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.030621424317359924
    2. '[d' → logprob: -3.5306215286254883
    3. '[c' → logprob: -8.280621528625488
    4. ']' → logprob: -8.530621528625488
    5. '[' → logprob: -8.780621528625488
    6. '[_' → logprob: -9.155621528625488
    7. 'd' → logprob: -10.030621528625488
    8. '_d' → logprob: -10.530621528625488
    9. 'Order' → logprob: -11.030621528625488
    10. '```' → logprob: -11.155621528625488

Token 1093: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.37246638536453247
    2. '[c' → logprob: -1.4974663257598877
    3. 'd' → logprob: -2.8724663257598877
    4. ']' → logprob: -4.247466564178467
    5. '```' → logprob: -4.997466564178467
    6. '[' → logprob: -5.622466564178467
    7. '`' → logprob: -6.122466564178467
    8. 'c' → logprob: -6.997466564178467
    9. ':' → logprob: -7.372466564178467
    10. ':
' → logprob: -7.872466564178467

Token 1094: ']' (ID: 60)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.777065634727478
    2. ':
' → logprob: -1.027065634727478
    3. ']' → logprob: -2.4020657539367676
    4. ']:' → logprob: -3.2770657539367676
    5. ']:
' → logprob: -3.2770657539367676
    6. '],' → logprob: -5.652065753936768
    7. ',' → logprob: -5.777065753936768
    8. ' and' → logprob: -5.777065753936768
    9. '[c' → logprob: -6.277065753936768
    10. ':]' → logprob: -7.277065753936768

Token 1095: ' is' (ID: 382)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9359793066978455
    2. ' and' → logprob: -1.1859793663024902
    3. 'and' → logprob: -1.8109793663024902
    4. ':' → logprob: -2.1859793663024902
    5. '
' → logprob: -4.43597936630249
    6. '#' → logprob: -5.81097936630249
    7. ',' → logprob: -6.31097936630249
    8. '```' → logprob: -6.31097936630249
    9. '[c' → logprob: -7.31097936630249
    10. ':

' → logprob: -7.31097936630249

Token 1096: ' necessary' (ID: 8155)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.261193037033081
    2. 'not' → logprob: -1.261193037033081
    3. ' necessary' → logprob: -1.511193037033081
    4. 'necessary' → logprob: -1.636193037033081
    5. ' and' → logprob: -5.01119327545166
    6. 'and' → logprob: -5.76119327545166
    7. '```' → logprob: -6.01119327545166
    8. 'ins' → logprob: -6.51119327545166
    9. 'True' → logprob: -6.51119327545166
    10. ' True' → logprob: -7.63619327545166

Token 1097: ' but' (ID: 889)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.4397392272949219
    2. 'and' → logprob: -1.5647392272949219
    3. ':' → logprob: -1.6897392272949219
    4. ':
' → logprob: -2.064739227294922
    5. '
' → logprob: -2.564739227294922
    6. '```' → logprob: -2.939739227294922
    7. '#' → logprob: -3.064739227294922
    8. ',' → logprob: -4.189739227294922
    9. 'for' → logprob: -4.689739227294922
    10. 'if' → logprob: -4.689739227294922

Token 1098: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -7.52919222577475e-05
    2. 'ins' → logprob: -9.750075340270996
    3. ' not' → logprob: -11.000075340270996
    4. '#' → logprob: -16.50007438659668
    5. 'no' → logprob: -17.37507438659668
    6. '(not' → logprob: -17.87507438659668
    7. '	not' → logprob: -18.12507438659668
    8. '
' → logprob: -18.25007438659668
    9. 'but' → logprob: -18.25007438659668
    10. '_not' → logprob: -18.50007438659668

Token 1099: ' sufficient' (ID: 21920)
  Prédit: 'complete'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'complete' → logprob: -0.08647611737251282
    2. 'def' → logprob: -3.7114760875701904
    3. ' guaranteed' → logprob: -4.4614763259887695
    4. ' complete' → logprob: -5.0864763259887695
    5. 'possible' → logprob: -5.2114763259887695
    6. '#' → logprob: -5.3364763259887695
    7. 'necessary' → logprob: -5.5864763259887695
    8. ':' → logprob: -5.8364763259887695
    9. 'full' → logprob: -5.9614763259887695
    10. '"' → logprob: -5.9614763259887695

Token 1100: ' to' (ID: 316)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.183548927307129
    2. 'visited' → logprob: -2.058548927307129
    3. '```' → logprob: -2.558548927307129
    4. '`
' → logprob: -2.558548927307129
    5. '
' → logprob: -2.683548927307129
    6. '\n' → logprob: -2.933548927307129
    7. '"
' → logprob: -3.683548927307129
    8. '"\' → logprob: -3.683548927307129
    9. 'dag' → logprob: -3.808548927307129
    10. ':
' → logprob: -3.933548927307129

Token 1101: ' ensure' (ID: 6757)
  Prédit: 'gu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gu' → logprob: -0.946451723575592
    2. 'ensure' → logprob: -2.0714516639709473
    3. 'confirm' → logprob: -2.1964516639709473
    4. 'det' → logprob: -2.4464516639709473
    5. 'find' → logprob: -2.6964516639709473
    6. '#' → logprob: -2.6964516639709473
    7. 'check' → logprob: -3.0714516639709473
    8. 'answer' → logprob: -3.5714516639709473
    9. ' guarantee' → logprob: -3.6964516639709473
    10. '
' → logprob: -3.8214516639709473

Token 1102: ' path' (ID: 3104)
  Prédit: 'there'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'there' → logprob: -0.6883253455162048
    2. 'that' → logprob: -2.0633254051208496
    3. 'the' → logprob: -2.4383254051208496
    4. 'a' → logprob: -2.6883254051208496
    5. 'reach' → logprob: -2.8133254051208496
    6. 'd' → logprob: -2.8133254051208496
    7. ' there' → logprob: -3.3133254051208496
    8. 'exist' → logprob: -4.18832540512085
    9. '```' → logprob: -5.06332540512085
    10. 'c' → logprob: -5.06332540512085

Token 1103: '.

' (ID: 364)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.0610638856887817
    2. ':
' → logprob: -1.1860638856887817
    3. '_
' → logprob: -2.436063766479492
    4. '_' → logprob: -3.436063766479492
    5. '
' → logprob: -3.561063766479492
    6. ':' → logprob: -3.811063766479492
    7. '#' → logprob: -3.936063766479492
    8. ',
' → logprob: -3.936063766479492
    9. '_c' → logprob: -4.311063766479492
    10. '\' → logprob: -4.311063766479492

Token 1104: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8387610912322998
    2. 'dag' → logprob: -0.9637610912322998
    3. 'graph' → logprob: -2.3387610912323
    4. '```' → logprob: -3.0887610912323
    5. 'from' → logprob: -4.213761329650879
    6. '
' → logprob: -4.713761329650879
    7. '``' → logprob: -5.713761329650879
    8. 'import' → logprob: -5.838761329650879
    9. '\' → logprob: -5.838761329650879
    10. 'out' → logprob: -6.588761329650879

Token 1105: ' Then' (ID: 7801)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.28970077633857727
    2. 'from' → logprob: -2.664700746536255
    3. 'dag' → logprob: -2.914700746536255
    4. 'visited' → logprob: -3.289700746536255
    5. 'out' → logprob: -4.039700984954834
    6. 'import' → logprob: -4.289700984954834
    7. 'in' → logprob: -4.414700984954834
    8. 'graph' → logprob: -4.539700984954834
    9. 'ind' → logprob: -4.914700984954834
    10. 'rev' → logprob: -5.539700984954834

Token 1106: ' do' (ID: 621)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2194025069475174
    2. '#' → logprob: -2.219402551651001
    3. 'visited' → logprob: -2.844402551651001
    4. 'import' → logprob: -4.094402313232422
    5. '
' → logprob: -5.219402313232422
    6. '```' → logprob: -5.594402313232422
    7. 'dist' → logprob: -5.719402313232422
    8. ' from' → logprob: -8.219402313232422
    9. 'def' → logprob: -8.469402313232422
    10. 'reachable' → logprob: -8.719402313232422

Token 1107: ' BFS' (ID: 190016)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20923051238059998
    2. '```' → logprob: -2.209230422973633
    3. 'dist' → logprob: -3.584230422973633
    4. 'B' → logprob: -4.584230422973633
    5. 'visited' → logprob: -4.584230422973633
    6. 'b' → logprob: -4.709230422973633
    7. ' from' → logprob: -5.334230422973633
    8. '
' → logprob: -5.709230422973633
    9. 'import' → logprob: -6.209230422973633
    10. 'dfs' → logprob: -6.709230422973633

Token 1108: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.20926639437675476
    2. 'visited' → logprob: -3.209266424179077
    3. '#' → logprob: -3.459266424179077
    4. 'dag' → logprob: -3.584266424179077
    5. 'for' → logprob: -3.959266424179077
    6. 'dist' → logprob: -4.459266185760498
    7. 'graph' → logprob: -4.959266185760498
    8. '
' → logprob: -5.084266185760498
    9. 'rev' → logprob: -5.334266185760498
    10. 'd' → logprob: -5.334266185760498

Token 1109: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.931863051955588e-05
    2. ' c' → logprob: -9.750059127807617
    3. '(c' → logprob: -15.375059127807617
    4. '`' → logprob: -15.625059127807617
    5. 'd' → logprob: -15.750059127807617
    6. 'queries' → logprob: -16.250059127807617
    7. '```' → logprob: -16.250059127807617
    8. ')c' → logprob: -16.375059127807617
    9. '	c' → logprob: -16.500059127807617
    10. '   ' → logprob: -17.125059127807617

Token 1110: ' to' (ID: 316)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.1280250549316406
    2. '
' → logprob: -2.0030250549316406
    3. 'for' → logprob: -2.1280250549316406
    4. ':
' → logprob: -2.5030250549316406
    5. 'dist' → logprob: -3.0030250549316406
    6. '   ' → logprob: -3.1280250549316406
    7. 'd' → logprob: -3.5030250549316406
    8. 'graph' → logprob: -3.8780250549316406
    9. '```' → logprob: -3.8780250549316406
    10. 'dag' → logprob: -4.253025054931641

Token 1111: ' check' (ID: 2371)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0004546254931483418
    2. 'find' → logprob: -8.250454902648926
    3. ' d' → logprob: -8.750454902648926
    4. 'check' → logprob: -10.500454902648926
    5. ' find' → logprob: -12.250454902648926
    6. '
' → logprob: -13.625454902648926
    7. ' check' → logprob: -14.625454902648926
    8. '```' → logprob: -14.625454902648926
    9. 'detect' → logprob: -16.12545394897461
    10. 'c' → logprob: -16.50045394897461

Token 1112: ' if' (ID: 538)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.13693754374980927
    2. '#' → logprob: -3.1369376182556152
    3. '
' → logprob: -4.386937618255615
    4. 'dist' → logprob: -4.636937618255615
    5. 'D' → logprob: -4.886937618255615
    6. 'graph' → logprob: -4.886937618255615
    7. 'visited' → logprob: -5.011937618255615
    8. 'from' → logprob: -5.136937618255615
    9. 'd' → logprob: -5.261937618255615
    10. 'adj' → logprob: -5.261937618255615

Token 1113: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10020828247070312
    2. ' d' → logprob: -2.350208282470703
    3. ' ' → logprob: -14.725208282470703
    4. '>d' → logprob: -15.350208282470703
    5. '	d' → logprob: -15.475208282470703
    6. ' there' → logprob: -16.225208282470703
    7. 'dist' → logprob: -16.225208282470703
    8. ''d' → logprob: -16.350208282470703
    9. '```' → logprob: -16.475208282470703
    10. '
' → logprob: -16.475208282470703

Token 1114: ' reachable' (ID: 143580)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5215592384338379
    2. ' in' → logprob: -2.521559238433838
    3. '
' → logprob: -2.896559238433838
    4. '```' → logprob: -2.896559238433838
    5. ':
' → logprob: -3.146559238433838
    6. ' can' → logprob: -3.271559238433838
    7. ' exists' → logprob: -3.771559238433838
    8. 'from' → logprob: -3.896559238433838
    9. 'in' → logprob: -4.021559238433838
    10. ' is' → logprob: -4.146559238433838

Token 1115: ' in' (ID: 306)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.11395931243896484
    2. '#' → logprob: -3.613959312438965
    3. 'dist' → logprob: -4.113959312438965
    4. 'visited' → logprob: -4.113959312438965
    5. '
' → logprob: -4.363959312438965
    6. 'graph' → logprob: -5.238959312438965
    7. 'adj' → logprob: -5.238959312438965
    8. 'from' → logprob: -5.238959312438965
    9. 'reachable' → logprob: -5.238959312438965
    10. 'short' → logprob: -5.488959312438965

Token 1116: ' DAG' (ID: 157361)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.1675293743610382
    2. 'graph' → logprob: -2.167529344558716
    3. 'the' → logprob: -3.792529344558716
    4. 'dag' → logprob: -4.417529582977295
    5. ' graph' → logprob: -6.417529582977295
    6. ' DAG' → logprob: -6.792529582977295
    7. 'short' → logprob: -7.292529582977295
    8. '`' → logprob: -7.542529582977295
    9. 'adj' → logprob: -7.917529582977295
    10. '```' → logprob: -8.792529106140137

Token 1117: '.

' (ID: 364)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.0192075427621603
    2. '#' → logprob: -4.89420747756958
    3. 'graph' → logprob: -6.26920747756958
    4. 'D' → logprob: -6.39420747756958
    5. 'short' → logprob: -6.51920747756958
    6. 'adj' → logprob: -6.51920747756958
    7. 'dp' → logprob: -6.76920747756958
    8. 'reachable' → logprob: -7.14420747756958
    9. 'dist' → logprob: -7.51920747756958
    10. '
' → logprob: -7.64420747756958

Token 1118: '#' (ID: 2)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.8130495548248291
    2. 'visited' → logprob: -1.063049554824829
    3. '#' → logprob: -2.813049554824829
    4. 'dist' → logprob: -3.938049554824829
    5. 'out' → logprob: -3.938049554824829
    6. 'adj' → logprob: -4.06304931640625
    7. 'from' → logprob: -4.18804931640625
    8. 'graph' → logprob: -4.18804931640625
    9. 'reachable' → logprob: -4.31304931640625
    10. 'dp' → logprob: -4.56304931640625

Token 1119: ' Since' (ID: 12265)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.6135914325714111
    2. 'visited' → logprob: -1.3635914325714111
    3. 'from' → logprob: -2.738591432571411
    4. 'for' → logprob: -3.238591432571411
    5. 'dist' → logprob: -3.738591432571411
    6. 'adj' → logprob: -3.863591432571411
    7. '#' → logprob: -4.738591194152832
    8. 'reachable' → logprob: -4.988591194152832
    9. 'out' → logprob: -5.113591194152832
    10. 'graph' → logprob: -5.113591194152832

Token 1120: ' Q' (ID: 1486)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.0439852476119995
    2. 'c' → logprob: -1.9189852476119995
    3. 'd' → logprob: -2.293985366821289
    4. 'Q' → logprob: -2.543985366821289
    5. ' d' → logprob: -2.543985366821289
    6. '\n' → logprob: -3.293985366821289
    7. 'b' → logprob: -3.668985366821289
    8. 'for' → logprob: -3.668985366821289
    9. '`' → logprob: -4.293985366821289
    10. 'queries' → logprob: -4.293985366821289

Token 1121: ' up' (ID: 869)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0893290638923645
    2. '```' → logprob: -3.7143290042877197
    3. '[' → logprob: -4.339329242706299
    4. '=' → logprob: -4.839329242706299
    5. ':' → logprob: -5.589329242706299
    6. ')' → logprob: -5.589329242706299
    7. '_
' → logprob: -6.089329242706299
    8. '_count' → logprob: -6.464329242706299
    9. '\n' → logprob: -6.589329242706299
    10. ',' → logprob: -6.589329242706299

Token 1122: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5022122263908386
    2. 'dates' → logprob: -1.1272122859954834
    3. 'date' → logprob: -3.3772122859954834
    4. ' to' → logprob: -4.127212047576904
    5. '#' → logprob: -5.502212047576904
    6. '_to' → logprob: -5.752212047576904
    7. '```' → logprob: -6.127212047576904
    8. ' =' → logprob: -6.377212047576904
    9. 'To' → logprob: -6.877212047576904
    10. 'wards' → logprob: -7.002212047576904

Token 1123: ' ' (ID: 220)
  Prédit: '400'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -0.0005160979344509542
    2. '40' → logprob: -8.000515937805176
    3. ' ' → logprob: -9.625515937805176
    4. '4' → logprob: -10.000515937805176
    5. '10' → logprob: -11.250515937805176
    6. '600' → logprob: -11.375515937805176
    7. '```' → logprob: -11.750515937805176
    8. 'max' → logprob: -12.000515937805176
    9. '450' → logprob: -12.375515937805176
    10. '800' → logprob: -12.625515937805176

Token 1124: '400' (ID: 4812)
  Prédit: '400'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -0.0002880337997339666
    2. '4' → logprob: -8.625288009643555
    3. '```' → logprob: -10.250288009643555
    4. '450' → logprob: -10.625288009643555
    5. '40' → logprob: -10.875288009643555
    6. 'Q' → logprob: -12.250288009643555
    7. '500' → logprob: -12.250288009643555
    8. '600' → logprob: -12.375288009643555
    9. '``' → logprob: -12.875288009643555
    10. '100' → logprob: -13.000288009643555

Token 1125: '00' (ID: 504)
  Prédit: '00'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '00' → logprob: -0.8837289214134216
    2. '0' → logprob: -1.0087289810180664
    3. '40' → logprob: -2.5087289810180664
    4. '```' → logprob: -3.5087289810180664
    5. ')' → logprob: -3.8837289810180664
    6. '4' → logprob: -4.383728981018066
    7. '000' → logprob: -4.383728981018066
    8. '400' → logprob: -5.008728981018066
    9. ':' → logprob: -5.133728981018066
    10. 'Q' → logprob: -5.133728981018066

Token 1126: ' and' (ID: 326)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.18617844581604
    2. 'dist' → logprob: -1.68617844581604
    3. ':
' → logprob: -1.93617844581604
    4. 'import' → logprob: -2.43617844581604
    5. '```' → logprob: -3.06117844581604
    6. '#' → logprob: -3.18617844581604
    7. 'from' → logprob: -3.18617844581604
    8. '
' → logprob: -3.43617844581604
    9. 'reachable' → logprob: -3.93617844581604
    10. 'for' → logprob: -4.186178207397461

Token 1127: ' each' (ID: 2454)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.1204750537872314
    2. 'the' → logprob: -1.8704750537872314
    3. 'c' → logprob: -2.2454750537872314
    4. 'd' → logprob: -2.2454750537872314
    5. 'len' → logprob: -2.9954750537872314
    6. 'each' → logprob: -2.9954750537872314
    7. '
' → logprob: -3.2454750537872314
    8. 'graph' → logprob: -3.3704750537872314
    9. '```' → logprob: -3.3704750537872314
    10. '#' → logprob: -3.8704750537872314

Token 1128: ' BFS' (ID: 190016)
  Prédit: ' query'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' query' → logprob: -0.22874213755130768
    2. 'query' → logprob: -1.8537421226501465
    3. '_query' → logprob: -4.1037421226501465
    4. '_' → logprob: -4.7287421226501465
    5. '
' → logprob: -4.7287421226501465
    6. ' BFS' → logprob: -4.9787421226501465
    7. 'B' → logprob: -5.4787421226501465
    8. ' _' → logprob: -7.9787421226501465
    9. '_B' → logprob: -8.228742599487305
    10. ' ' → logprob: -8.603742599487305

Token 1129: ' is' (ID: 382)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.9769551753997803
    2. ')' → logprob: -1.9769551753997803
    3. ' from' → logprob: -2.1019551753997803
    4. '```' → logprob: -2.4769551753997803
    5. ':' → logprob: -3.1019551753997803
    6. '
' → logprob: -3.4769551753997803
    7. '(
' → logprob: -3.7269551753997803
    8. ',' → logprob: -3.8519551753997803
    9. '(' → logprob: -3.9769551753997803
    10. ' is' → logprob: -4.351955413818359

Token 1130: ' acceptable' (ID: 34028)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'O' → logprob: -1.590325117111206
    2. 'not' → logprob: -2.340325117111206
    3. ' not' → logprob: -2.340325117111206
    4. 'too' → logprob: -2.465325117111206
    5. '```' → logprob: -2.590325117111206
    6. ' O' → logprob: -2.840325117111206
    7. ' costly' → logprob: -3.090325117111206
    8. '`' → logprob: -3.215325117111206
    9. ' too' → logprob: -3.215325117111206
    10. 'likely' → logprob: -3.340325117111206

Token 1131: '.

' (ID: 364)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6848634481430054
    2. '
' → logprob: -2.559863567352295
    3. 'answers' → logprob: -2.559863567352295
    4. 'res' → logprob: -2.809863567352295
    5. 'ans' → logprob: -2.934863567352295
    6. ':
' → logprob: -3.184863567352295
    7. 'visited' → logprob: -3.434863567352295
    8. 'dist' → logprob: -3.934863567352295
    9. 'answer' → logprob: -4.059863567352295
    10. 'result' → logprob: -4.059863567352295

Token 1132: 'dist' (ID: 24126)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.612041711807251
    2. 'answers' → logprob: -1.737041711807251
    3. 'visited' → logprob: -1.862041711807251
    4. 'dag' → logprob: -2.737041711807251
    5. 'res' → logprob: -2.737041711807251
    6. 'dist' → logprob: -2.987041711807251
    7. 'result' → logprob: -2.987041711807251
    8. 'answer' → logprob: -2.987041711807251
    9. 'out' → logprob: -3.112041711807251
    10. 'for' → logprob: -3.487041711807251

Token 1133: '_a' (ID: 10852)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15189988911151886
    2. '_a' → logprob: -2.151899814605713
    3. '_d' → logprob: -3.901899814605713
    4. '_D' → logprob: -5.776899814605713
    5. '_edges' → logprob: -8.401900291442871
    6. '_graph' → logprob: -8.776900291442871
    7. '_)' → logprob: -8.901900291442871
    8. '_b' → logprob: -9.151900291442871
    9. ')' → logprob: -9.276900291442871
    10. '_=' → logprob: -9.651900291442871

Token 1134: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8229181170463562
    2. '[' → logprob: -1.572918176651001
    3. ',' → logprob: -1.822918176651001
    4. '<|end|>' → logprob: -2.322918176651001
    5. ']' → logprob: -3.197918176651001
    6. '[b' → logprob: -3.697918176651001
    7. ',b' → logprob: -5.447917938232422
    8. '```' → logprob: -5.572917938232422
    9. '[:]' → logprob: -5.697917938232422
    10. '[a' → logprob: -5.697917938232422

Token 1135: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.43294039368629456
    2. 'dist' → logprob: -1.0579403638839722
    3. ' dist' → logprob: -6.307940483093262
    4. ' d' → logprob: -6.557940483093262
    5. '[' → logprob: -7.432940483093262
    6. '[d' → logprob: -8.182940483093262
    7. ' [' → logprob: -10.057940483093262
    8. '[-' → logprob: -11.307940483093262
    9. '```' → logprob: -11.557940483093262
    10. '{' → logprob: -11.682940483093262

Token 1136: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -5.407366916188039e-05
    2. '```' → logprob: -11.375054359436035
    3. '[' → logprob: -11.750054359436035
    4. 'ijk' → logprob: -11.750054359436035
    5. ')' → logprob: -11.875054359436035
    6. 'ist' → logprob: -12.250054359436035
    7. '[i' → logprob: -12.500054359436035
    8. ']' → logprob: -12.625054359436035
    9. '[a' → logprob: -13.375054359436035
    10. '[]' → logprob: -14.250054359436035

Token 1137: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.04207781329751015
    2. '(b' → logprob: -3.2920777797698975
    3. 'a' → logprob: -5.917078018188477
    4. 'b' → logprob: -6.792078018188477
    5. '(' → logprob: -8.542078018188477
    6. ' (' → logprob: -13.292078018188477
    7. ')' → logprob: -13.417078018188477
    8. '```' → logprob: -13.417078018188477
    9. '(start' → logprob: -13.417078018188477
    10. 'def' → logprob: -13.667078018188477

Token 1138: ')
' (ID: 446)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.021908767521381378
    2. '
' → logprob: -4.021908760070801
    3. '<|end|>' → logprob: -6.146908760070801
    4. 'd' → logprob: -7.021908760070801
    5. ')' → logprob: -8.3969087600708
    6. '#' → logprob: -8.5219087600708
    7. ' dist' → logprob: -9.5219087600708
    8. 'b' → logprob: -10.2719087600708
    9. '[top' → logprob: -10.6469087600708
    10. '<|end|>' → logprob: -10.8969087600708

Token 1139: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -7.135819760151207e-05
    2. ' dist' → logprob: -10.00007152557373
    3. '
' → logprob: -12.00007152557373
    4. '_' → logprob: -12.25007152557373
    5. '```' → logprob: -12.25007152557373
    6. '_dist' → logprob: -12.37507152557373
    7. '=' → logprob: -13.75007152557373
    8. '.dist' → logprob: -13.75007152557373
    9. '(dist' → logprob: -14.12507152557373
    10. '#' → logprob: -14.12507152557373

Token 1140: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0005847262218594551
    2. '_' → logprob: -7.625584602355957
    3. '_a' → logprob: -9.500584602355957
    4. '_
' → logprob: -11.375584602355957
    5. ' _' → logprob: -11.750584602355957
    6. 'b' → logprob: -13.875584602355957
    7. '```' → logprob: -15.500584602355957
    8. ')' → logprob: -15.625584602355957
    9. '_

' → logprob: -15.875584602355957
    10. '[' → logprob: -16.000585556030273

Token 1141: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.616456925868988
    2. ' =' → logprob: -1.2414569854736328
    3. '[b' → logprob: -2.866456985473633
    4. '_b' → logprob: -3.491456985473633
    5. '[' → logprob: -3.491456985473633
    6. 'b' → logprob: -4.116456985473633
    7. ')' → logprob: -4.366456985473633
    8. '(b' → logprob: -5.116456985473633
    9. '=b' → logprob: -5.741456985473633
    10. '```' → logprob: -5.866456985473633

Token 1142: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0012116642901673913
    2. 'b' → logprob: -6.751211643218994
    3. 'dist' → logprob: -10.626212120056152
    4. ' d' → logprob: -11.001212120056152
    5. ' b' → logprob: -15.251212120056152
    6. '(d' → logprob: -15.501212120056152
    7. ' dist' → logprob: -16.876211166381836
    8. '(b' → logprob: -17.001211166381836
    9. '  ' → logprob: -18.626211166381836
    10. '	d' → logprob: -19.001211166381836

Token 1143: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -5.796184723294573e-06
    2. 'ijk' → logprob: -12.125005722045898
    3. 'ij' → logprob: -15.500005722045898
    4. 'j' → logprob: -17.6250057220459
    5. 'jik' → logprob: -18.0000057220459
    6. '```' → logprob: -18.0000057220459
    7. 'ijkl' → logprob: -19.6250057220459
    8. '[i' → logprob: -19.8750057220459
    9. 'ist' → logprob: -20.0000057220459
    10. 'ijks' → logprob: -20.0000057220459

Token 1144: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00015860427811276168
    2. 'b' → logprob: -8.750158309936523
    3. '(' → logprob: -16.625158309936523
    4. '	b' → logprob: -18.250158309936523
    5. ' (' → logprob: -18.750158309936523
    6. '(
' → logprob: -19.375158309936523
    7. ' b' → logprob: -19.875158309936523
    8. '_b' → logprob: -20.125158309936523
    9. ')b' → logprob: -20.250158309936523
    10. '(B' → logprob: -20.625158309936523

Token 1145: ')
' (ID: 446)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.11664173752069473
    2. 'short' → logprob: -2.7416417598724365
    3. 'graph' → logprob: -3.4916417598724365
    4. '
' → logprob: -4.866641521453857
    5. '#' → logprob: -5.741641521453857
    6. 'D' → logprob: -6.366641521453857
    7. 'dist' → logprob: -7.116641521453857
    8. 'sp' → logprob: -7.741641521453857
    9. 'adj' → logprob: -7.991641521453857
    10. 'd' → logprob: -8.491641998291016

Token 1146: 'dist' (ID: 24126)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.024042068049311638
    2. 'short' → logprob: -4.024042129516602
    3. 'D' → logprob: -6.149042129516602
    4. 'sp' → logprob: -6.524042129516602
    5. 'graph' → logprob: -7.149042129516602
    6. '#' → logprob: -7.274042129516602
    7. 'adj' → logprob: -8.149042129516602
    8. 'from' → logprob: -9.274042129516602
    9. 'edges' → logprob: -9.774042129516602
    10. '```' → logprob: -9.774042129516602

Token 1147: '_ab' (ID: 53632)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7169246673583984
    2. '_a' → logprob: -1.2169246673583984
    3. '_b' → logprob: -1.7169246673583984
    4. '_d' → logprob: -3.8419246673583984
    5. '_c' → logprob: -5.091924667358398
    6. '_order' → logprob: -5.716924667358398
    7. '_ab' → logprob: -6.466924667358398
    8. '_=' → logprob: -7.341924667358398
    9. 's' → logprob: -8.216924667358398
    10. ' =' → logprob: -8.466924667358398

Token 1148: ' =' (ID: 314)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.06125067546963692
    2. ' =' → logprob: -3.561250686645508
    3. '=' → logprob: -3.686250686645508
    4. '=b' → logprob: -6.061250686645508
    5. '[' → logprob: -6.186250686645508
    6. '=[' → logprob: -6.936250686645508
    7. ']' → logprob: -8.561250686645508
    8. '_b' → logprob: -9.561250686645508
    9. 'b' → logprob: -9.686250686645508
    10. '[a' → logprob: -10.186250686645508

Token 1149: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00020354038861114532
    2. ' dist' → logprob: -8.500203132629395
    3. '	dist' → logprob: -21.00020408630371
    4. '(dist' → logprob: -22.62520408630371
    5. '_dist' → logprob: -23.37520408630371
    6. '   ' → logprob: -23.62520408630371
    7. 'Dist' → logprob: -23.87520408630371
    8. '.dist' → logprob: -24.62520408630371
    9. 'distance' → logprob: -24.87520408630371
    10. 'd' → logprob: -25.00020408630371

Token 1150: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0001884015218820423
    2. 'a' → logprob: -9.250188827514648
    3. '_b' → logprob: -9.875188827514648
    4. '_ab' → logprob: -10.500188827514648
    5. '[a' → logprob: -11.625188827514648
    6. '_[' → logprob: -13.625188827514648
    7. '[b' → logprob: -13.750188827514648
    8. '```' → logprob: -14.500188827514648
    9. 'ab' → logprob: -14.750188827514648
    10. '[_' → logprob: -14.750188827514648

Token 1151: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00015920029545668513
    2. 'b' → logprob: -8.75015926361084
    3. '[' → logprob: -14.75015926361084
    4. '[a' → logprob: -16.500158309936523
    5. '```' → logprob: -16.625158309936523
    6. '[S' → logprob: -16.750158309936523
    7. '#' → logprob: -16.875158309936523
    8. '
' → logprob: -17.750158309936523
    9. '+b' → logprob: -18.125158309936523
    10. '   ' → logprob: -18.375158309936523

Token 1152: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036847591400146484
    2. ']' → logprob: -5.628684997558594
    3. '])' → logprob: -10.503684997558594
    4. '')' → logprob: -11.378684997558594
    5. '[' → logprob: -11.628684997558594
    6. ' )' → logprob: -11.753684997558594
    7. '```' → logprob: -12.003684997558594
    8. '#' → logprob: -12.253684997558594
    9. 'if' → logprob: -12.253684997558594
    10. '']' → logprob: -13.003684997558594

Token 1153: '#' (ID: 2)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.010632725432515144
    2. 'short' → logprob: -5.135632514953613
    3. 'D' → logprob: -5.510632514953613
    4. '#' → logprob: -7.885632514953613
    5. 'graph' → logprob: -9.135632514953613
    6. 'adj' → logprob: -9.885632514953613
    7. 'sp' → logprob: -10.385632514953613
    8. 'dp' → logprob: -10.885632514953613
    9. '```' → logprob: -11.135632514953613
    10. 'd' → logprob: -11.635632514953613

Token 1154: ' Build' (ID: 10885)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.04188955947756767
    2. 'short' → logprob: -3.5418896675109863
    3. 'D' → logprob: -4.541889667510986
    4. '#' → logprob: -7.666889667510986
    5. 'sp' → logprob: -7.916889667510986
    6. 'adj' → logprob: -8.666889190673828
    7. 'graph' → logprob: -8.916889190673828
    8. 'd' → logprob: -9.416889190673828
    9. 'edges' → logprob: -10.291889190673828
    10. 'SP' → logprob: -10.291889190673828

Token 1155: ' DAG' (ID: 157361)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.14122261106967926
    2. 'for' → logprob: -2.3912227153778076
    3. 'short' → logprob: -3.7662227153778076
    4. 'D' → logprob: -5.1412224769592285
    5. 'sp' → logprob: -5.1412224769592285
    6. 'adj' → logprob: -6.1412224769592285
    7. 'edges' → logprob: -7.3912224769592285
    8. 'graph' → logprob: -7.3912224769592285
    9. ' dag' → logprob: -7.5162224769592285
    10. 's' → logprob: -8.516222953796387

Token 1156: ' edges' (ID: 22569)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.0010565068805590272
    2. 'D' → logprob: -6.876056671142578
    3. 'short' → logprob: -11.126056671142578
    4. 'adj' → logprob: -13.501056671142578
    5. 'dp' → logprob: -13.501056671142578
    6. ' dag' → logprob: -13.626056671142578
    7. 'Dag' → logprob: -14.001056671142578
    8. 'dig' → logprob: -14.001056671142578
    9. '```' → logprob: -14.001056671142578
    10. 'graph' → logprob: -14.376056671142578

Token 1157: ' where' (ID: 1919)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.1810561716556549
    2. 'for' → logprob: -1.8060561418533325
    3. 'D' → logprob: -7.181056022644043
    4. 'short' → logprob: -7.931056022644043
    5. 'dp' → logprob: -10.056056022644043
    6. 'edges' → logprob: -10.181056022644043
    7. '```' → logprob: -10.681056022644043
    8. ' dag' → logprob: -11.806056022644043
    9. 'd' → logprob: -11.806056022644043
    10. 'adj' → logprob: -11.806056022644043

Token 1158: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12763093411922455
    2. 'u' → logprob: -2.6276309490203857
    3. ' for' → logprob: -3.3776309490203857
    4. 'dist' → logprob: -4.627630710601807
    5. 'graph' → logprob: -7.252630710601807
    6. '(u' → logprob: -7.252630710601807
    7. '```' → logprob: -8.127631187438965
    8. 'edge' → logprob: -8.127631187438965
    9. '_' → logprob: -8.377631187438965
    10. 'cost' → logprob: -8.502631187438965

Token 1159: ' are' (ID: 553)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14407002925872803
    2. 'for' → logprob: -2.5190701484680176
    3. ' =' → logprob: -3.0190701484680176
    4. '=[]' → logprob: -6.144070148468018
    5. ' for' → logprob: -6.894070148468018
    6. 'u' → logprob: -7.019070148468018
    7. '=[]
' → logprob: -8.64406967163086
    8. '[u' → logprob: -9.26906967163086
    9. 'from' → logprob: -9.39406967163086
    10. 'in' → logprob: -9.51906967163086

Token 1160: ' on' (ID: 402)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2711600661277771
    2. '[u' → logprob: -2.396160125732422
    3. '(u' → logprob: -2.896160125732422
    4. 'for' → logprob: -3.271160125732422
    5. 'u' → logprob: -3.396160125732422
    6. '[]
' → logprob: -4.271160125732422
    7. '[(' → logprob: -6.396160125732422
    8. ' for' → logprob: -7.271160125732422
    9. '[](' → logprob: -7.521160125732422
    10. ' (' → logprob: -7.896160125732422

Token 1161: ' shortest' (ID: 70564)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2083040475845337
    2. 'graph' → logprob: -1.4583040475845337
    3. '[]' → logprob: -1.5833040475845337
    4. 'range' → logprob: -2.333303928375244
    5. 'short' → logprob: -2.708303928375244
    6. 'a' → logprob: -3.458303928375244
    7. ' shortest' → logprob: -3.583303928375244
    8. '[]
' → logprob: -4.958303928375244
    9. '[u' → logprob: -5.083303928375244
    10. 'for' → logprob: -5.833303928375244

Token 1162: ' paths' (ID: 23373)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.5462767481803894
    2. 'paths' → logprob: -1.4212768077850342
    3. '_path' → logprob: -2.296276807785034
    4. '_paths' → logprob: -2.546276807785034
    5. ' paths' → logprob: -8.796277046203613
    6. 'for' → logprob: -9.296277046203613
    7. '
' → logprob: -9.671277046203613
    8. ' path' → logprob: -10.046277046203613
    9. '```' → logprob: -10.046277046203613
    10. 'graph' → logprob: -10.296277046203613

Token 1163: ' from' (ID: 591)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.013377973809838295
    2. 'for' → logprob: -4.513378143310547
    3. 'short' → logprob: -6.513378143310547
    4. 'D' → logprob: -7.263378143310547
    5. 'edges' → logprob: -9.888378143310547
    6. 'dp' → logprob: -10.638378143310547
    7. 's' → logprob: -11.013378143310547
    8. 'sp' → logprob: -11.513378143310547
    9. 'd' → logprob: -12.263378143310547
    10. ' dag' → logprob: -12.513378143310547

Token 1164: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.030924787744879723
    2. 'u' → logprob: -4.1559247970581055
    3. 'range' → logprob: -4.5309247970581055
    4. 'graph' → logprob: -5.7809247970581055
    5. 'for' → logprob: -8.030924797058105
    6. ' a' → logprob: -9.030924797058105
    7. ' range' → logprob: -9.655924797058105
    8. 'b' → logprob: -9.780924797058105
    9. '
' → logprob: -10.030924797058105
    10. 'sys' → logprob: -10.155924797058105

Token 1165: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22344565391540527
    2. 'to' → logprob: -2.2234456539154053
    3. ' =' → logprob: -2.9734456539154053
    4. '
' → logprob: -4.223445892333984
    5. '=' → logprob: -4.598445892333984
    6. 'edges' → logprob: -5.723445892333984
    7. 'u' → logprob: -5.848445892333984
    8. ' for' → logprob: -6.348445892333984
    9. ' to' → logprob: -6.598445892333984
    10. '_to' → logprob: -6.723445892333984

Token 1166: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.128163257315464e-07
    2. ' b' → logprob: -15.125
    3. '```' → logprob: -19.0
    4. 'a' → logprob: -19.375
    5. '
' → logprob: -20.625
    6. 'import' → logprob: -21.5
    7. 'v' → logprob: -21.625
    8. '#' → logprob: -21.875
    9. '1' → logprob: -22.125
    10. '   ' → logprob: -22.25

Token 1167: '
' (ID: 198)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.0026267850771546364
    2. 'D' → logprob: -6.002626895904541
    3. 'short' → logprob: -8.877626419067383
    4. '```' → logprob: -12.752626419067383
    5. ' dag' → logprob: -13.627626419067383
    6. 'dig' → logprob: -13.752626419067383
    7. 'Dag' → logprob: -14.002626419067383
    8. 'graph' → logprob: -14.127626419067383
    9. 'dp' → logprob: -14.252626419067383
    10. 'G' → logprob: -14.252626419067383

Token 1168: 'dag' (ID: 10726)
  Prédit: 'dag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.5379096269607544
    2. 'for' → logprob: -0.9129096269607544
    3. 'D' → logprob: -4.787909507751465
    4. 'short' → logprob: -5.162909507751465
    5. 'edges' → logprob: -8.162909507751465
    6. 'dp' → logprob: -9.287909507751465
    7. 'd' → logprob: -10.037909507751465
    8. '```' → logprob: -10.287909507751465
    9. 'adj' → logprob: -10.912909507751465
    10. 'sp' → logprob: -11.162909507751465

Token 1169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31380370259284973
    2. '=' → logprob: -1.3138036727905273
    3. '_edges' → logprob: -7.938803672790527
    4. '_' → logprob: -8.688803672790527
    5. '=[]' → logprob: -11.688803672790527
    6. 'edges' → logprob: -13.188803672790527
    7. '[' → logprob: -13.688803672790527
    8. ' ' → logprob: -13.938803672790527
    9. '[:]' → logprob: -14.063803672790527
    10. ' edges' → logprob: -14.813803672790527

Token 1170: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003428528143558651
    2. ' [[]' → logprob: -8.000343322753906
    3. '[]' → logprob: -12.250343322753906
    4. '[[' → logprob: -13.250343322753906
    5. 'default' → logprob: -15.125343322753906
    6. '[
' → logprob: -15.500343322753906
    7. 'collections' → logprob: -15.625343322753906
    8. '[]
' → logprob: -15.875343322753906
    9. '[['' → logprob: -17.125343322753906
    10. '{' → logprob: -17.250343322753906

Token 1171: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08186384290456772
    2. ' for' → logprob: -2.5818638801574707
    3. '(S' → logprob: -5.831863880157471
    4. ')' → logprob: -11.456863403320312
    5. ' (' → logprob: -11.456863403320312
    6. '
' → logprob: -12.456863403320312
    7. '   ' → logprob: -12.581863403320312
    8. ']' → logprob: -13.206863403320312
    9. '(s' → logprob: -13.331863403320312
    10. ',' → logprob: -13.831863403320312

Token 1172: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08374714106321335
    2. '(S' → logprob: -3.208747148513794
    3. ' range' → logprob: -3.333747148513794
    4. '(range' → logprob: -5.958746910095215
    5. '_' → logprob: -6.458746910095215
    6. 'in' → logprob: -10.458746910095215
    7. ' in' → logprob: -11.333746910095215
    8. 'for' → logprob: -11.458746910095215
    9. '(i' → logprob: -11.583746910095215
    10. 'i' → logprob: -11.583746910095215

Token 1173: ' in' (ID: 306)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.06241576373577118
    2. 'range' → logprob: -2.812415838241577
    3. ' range' → logprob: -8.062416076660156
    4. '(range' → logprob: -8.937416076660156
    5. 'Range' → logprob: -14.312416076660156
    6. ' (' → logprob: -15.062416076660156
    7. '(' → logprob: -15.687416076660156
    8. '0' → logprob: -15.812416076660156
    9. '_range' → logprob: -16.937416076660156
    10. '(
' → logprob: -16.937416076660156

Token 1174: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005249414127320051
    2. ' range' → logprob: -5.255249500274658
    3. '(range' → logprob: -11.7552490234375
    4. '(S' → logprob: -11.7552490234375
    5. '
' → logprob: -18.1302490234375
    6. '	range' → logprob: -19.6302490234375
    7. 'Range' → logprob: -20.6302490234375
    8. '   ' → logprob: -21.1302490234375
    9. '[S' → logprob: -21.7552490234375
    10. '_range' → logprob: -22.2552490234375

Token 1175: '(S' (ID: 6181)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0024763736873865128
    2. '(S' → logprob: -6.002476215362549
    3. ' S' → logprob: -14.377476692199707
    4. '1' → logprob: -15.752476692199707
    5. '0' → logprob: -18.00247573852539
    6. '   ' → logprob: -18.12747573852539
    7. '[S' → logprob: -18.25247573852539
    8. '
' → logprob: -19.00247573852539
    9. '	S' → logprob: -19.50247573852539
    10. '(' → logprob: -20.00247573852539

Token 1176: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.610702363715973e-06
    2. '+
' → logprob: -11.625009536743164
    3. ' +' → logprob: -14.250009536743164
    4. ')]
' → logprob: -17.500009536743164
    5. '
' → logprob: -17.750009536743164
    6. ')]' → logprob: -18.625009536743164
    7. '＋' → logprob: -18.750009536743164
    8. '```' → logprob: -19.000009536743164
    9. '()+' → logprob: -19.125009536743164
    10. '+]' → logprob: -20.250009536743164

Token 1177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -15.625
    3. '```' → logprob: -18.125
    4. '+' → logprob: -18.375
    5. ' ' → logprob: -19.125
    6. '
' → logprob: -20.125
    7. '(' → logprob: -20.5
    8. '2' → logprob: -20.75
    9. '   ' → logprob: -20.875
    10. ')' → logprob: -21.0

Token 1178: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5890963673591614
    2. ')]' → logprob: -0.8390963673591614
    3. ')' → logprob: -4.339096546173096
    4. '])' → logprob: -11.089096069335938
    5. ']
' → logprob: -12.214096069335938
    6. ')]
' → logprob: -13.589096069335938
    7. '])]' → logprob: -15.714096069335938
    8. ')])' → logprob: -15.839096069335938
    9. ')
' → logprob: -15.964096069335938
    10. ' ]' → logprob: -16.089096069335938

Token 1179: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.3458322731312364e-06
    2. '```' → logprob: -12.875007629394531
    3. 'in' → logprob: -13.000007629394531
    4. ' for' → logprob: -13.500007629394531
    5. 'reverse' → logprob: -14.250007629394531
    6. 'rev' → logprob: -15.250007629394531
    7. 'edge' → logprob: -16.87500762939453
    8. '``' → logprob: -17.37500762939453
    9. 'ind' → logprob: -17.37500762939453
    10. 'visited' → logprob: -17.75000762939453

Token 1180: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0019286326132714748
    2. ' u' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.626928329467773
    4. '	u' → logprob: -18.251928329467773
    5. '(u' → logprob: -18.876928329467773
    6. '[u' → logprob: -19.251928329467773
    7. '```' → logprob: -19.501928329467773
    8. '_u' → logprob: -19.626928329467773
    9. ' ' → logprob: -21.626928329467773
    10. '  ' → logprob: -22.001928329467773

Token 1181: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5435299277305603
    2. ',v' → logprob: -1.293529987335205
    3. ',' → logprob: -2.168529987335205
    4. ' in' → logprob: -3.793529987335205
    5. ',u' → logprob: -5.418529987335205
    6. ',in' → logprob: -5.918529987335205
    7. ',_' → logprob: -7.793529987335205
    8. ',n' → logprob: -9.793529510498047
    9. '```' → logprob: -9.793529510498047
    10. ',e' → logprob: -9.918529510498047

Token 1182: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.180258191714529e-06
    2. 'graph' → logprob: -11.750008583068848
    3. ' range' → logprob: -15.500008583068848
    4. '(range' → logprob: -21.75000762939453
    5. '1' → logprob: -24.75000762939453
    6. 'u' → logprob: -25.00000762939453
    7. '```' → logprob: -25.50000762939453
    8. '	range' → logprob: -25.50000762939453
    9. 'Range' → logprob: -25.62500762939453
    10. 'node' → logprob: -26.00000762939453

Token 1183: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0145031176507473
    2. '(' → logprob: -4.264503002166748
    3. '(S' → logprob: -8.014503479003906
    4. 'S' → logprob: -11.639503479003906
    5. ' ' → logprob: -15.764503479003906
    6. '(
' → logprob: -16.889503479003906
    7. '   ' → logprob: -17.639503479003906
    8. '0' → logprob: -18.889503479003906
    9. ',S' → logprob: -19.514503479003906
    10. ' (' → logprob: -19.639503479003906

Token 1184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01814994215965271
    2. 'S' → logprob: -4.0181498527526855
    3. 'len' → logprob: -17.393150329589844
    4. ' S' → logprob: -17.643150329589844
    5. '
' → logprob: -17.893150329589844
    6. '   ' → logprob: -18.143150329589844
    7. ' ' → logprob: -18.143150329589844
    8. '(' → logprob: -18.768150329589844
    9. '(S' → logprob: -19.018150329589844
    10. '```' → logprob: -19.518150329589844

Token 1185: ',S' (ID: 42097)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31383177638053894
    2. ',S' → logprob: -1.3138318061828613
    3. '(S' → logprob: -9.063831329345703
    4. ',len' → logprob: -9.313831329345703
    5. ',s' → logprob: -9.438831329345703
    6. ',u' → logprob: -9.688831329345703
    7. ' ,' → logprob: -9.938831329345703
    8. ',(' → logprob: -10.563831329345703
    9. ',size' → logprob: -11.188831329345703
    10. ',num' → logprob: -11.438831329345703

Token 1186: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.4391956685576588e-05
    2. '+
' → logprob: -11.000024795532227
    3. ' +' → logprob: -12.750024795532227
    4. '```' → logprob: -13.375024795532227
    5. ')+' → logprob: -13.625024795532227
    6. '):
' → logprob: -14.000024795532227
    7. '()+' → logprob: -14.750024795532227
    8. '
' → logprob: -15.250024795532227
    9. '1' → logprob: -16.250024795532227
    10. '):' → logprob: -16.500024795532227

Token 1187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037836082628928125
    2. '(S' → logprob: -8.875378608703613
    3. '+' → logprob: -9.375378608703613
    4. '(R' → logprob: -9.625378608703613
    5. 'S' → logprob: -10.375378608703613
    6. '(' → logprob: -10.750378608703613
    7. ')' → logprob: -11.125378608703613
    8. 'R' → logprob: -11.875378608703613
    9. '```' → logprob: -12.375378608703613
    10. '(u' → logprob: -13.125378608703613

Token 1188: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.38692182302474976
    2. '):' → logprob: -1.1369218826293945
    3. ':' → logprob: -10.386921882629395
    4. '):
' → logprob: -11.636921882629395
    5. ':
' → logprob: -12.386921882629395
    6. ')' → logprob: -12.386921882629395
    7. '   ' → logprob: -13.136921882629395
    8. '):

' → logprob: -15.761921882629395
    9. ']:' → logprob: -16.261920928955078
    10. 'for' → logprob: -16.261920928955078

Token 1189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010103991371579468
    2. '   ' → logprob: -10.125101089477539
    3. '	for' → logprob: -10.250101089477539
    4. ' for' → logprob: -10.875101089477539
    5. 'for' → logprob: -12.125101089477539
    6. ' ' → logprob: -14.125101089477539
    7. '       ' → logprob: -16.12510108947754
    8. '```' → logprob: -16.25010108947754
    9. '    
' → logprob: -16.87510108947754
    10. ' ' → logprob: -17.00010108947754

Token 1190: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003943304473068565
    2. '   ' → logprob: -8.000393867492676
    3. ' for' → logprob: -9.750393867492676
    4. '	for' → logprob: -14.375393867492676
    5. '    
' → logprob: -18.750394821166992
    6. ' ' → logprob: -18.750394821166992
    7. '   ' → logprob: -19.750394821166992
    8. '```' → logprob: -19.750394821166992
    9. '  ' → logprob: -21.250394821166992
    10. '_for' → logprob: -21.375394821166992

Token 1191: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0015062900492921472
    2. '(v' → logprob: -6.501506328582764
    3. ' v' → logprob: -12.501505851745605
    4. ',v' → logprob: -15.876505851745605
    5. '[v' → logprob: -18.001506805419922
    6. '```' → logprob: -18.001506805419922
    7. '	v' → logprob: -18.126506805419922
    8. 'vx' → logprob: -18.251506805419922
    9. 'vv' → logprob: -18.251506805419922
    10. 'vn' → logprob: -19.001506805419922

Token 1192: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.16820143163204193
    2. ',v' → logprob: -2.543201446533203
    3. ',u' → logprob: -2.793201446533203
    4. ',' → logprob: -4.793201446533203
    5. 'in' → logprob: -5.043201446533203
    6. ',in' → logprob: -8.918201446533203
    7. '```' → logprob: -11.043201446533203
    8. ',e' → logprob: -11.043201446533203
    9. ',d' → logprob: -11.793201446533203
    10. ' ,' → logprob: -12.168201446533203

Token 1193: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3134487271308899
    2. ' in' → logprob: -1.3134486675262451
    3. ',' → logprob: -9.813448905944824
    4. '   ' → logprob: -9.938448905944824
    5. '	in' → logprob: -10.688448905944824
    6. '```' → logprob: -11.063448905944824
    7. '_in' → logprob: -11.563448905944824
    8. ',in' → logprob: -12.188448905944824
    9. ',v' → logprob: -12.313448905944824
    10. 'In' → logprob: -12.438448905944824

Token 1194: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.00015860427811276168
    2. ' graph' → logprob: -8.750158309936523
    3. '(graph' → logprob: -16.000158309936523
    4. '	graph' → logprob: -16.875158309936523
    5. '_graph' → logprob: -21.375158309936523
    6. '```' → logprob: -22.125158309936523
    7. '.graph' → logprob: -22.250158309936523
    8. 'raph' → logprob: -22.625158309936523
    9. 'Graph' → logprob: -22.875158309936523
    10. '[(' → logprob: -23.000158309936523

Token 1195: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -5.512236498361744e-07
    2. 'u' → logprob: -14.500000953674316
    3. '```' → logprob: -18.125
    4. '[' → logprob: -19.375
    5. ' [' → logprob: -19.75
    6. '[
' → logprob: -19.875
    7. '(u' → logprob: -20.375
    8. '	u' → logprob: -21.5
    9. '[[' → logprob: -21.5
    10. '   ' → logprob: -21.5

Token 1196: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03517743945121765
    2. '):
' → logprob: -4.285177230834961
    3. ']:' → logprob: -4.285177230834961
    4. ':' → logprob: -5.035177230834961
    5. ']):' → logprob: -7.910177230834961
    6. ']:
' → logprob: -9.410177230834961
    7. '）：' → logprob: -11.660177230834961
    8. 'if' → logprob: -11.785177230834961
    9. '):
' → logprob: -11.910177230834961
    10. ')' → logprob: -11.910177230834961

Token 1197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034754592925310135
    2. '   ' → logprob: -5.753475666046143
    3. 'if' → logprob: -9.128475189208984
    4. ' if' → logprob: -9.128475189208984
    5. '```' → logprob: -10.128475189208984
    6. '<|end|>' → logprob: -10.878475189208984
    7. ' ' → logprob: -12.128475189208984
    8. '	   ' → logprob: -12.503475189208984
    9. '	if' → logprob: -12.878475189208984
    10. '	' → logprob: -13.253475189208984

Token 1198: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.30153825879096985
    2. ' if' → logprob: -1.5515382289886475
    3. '   ' → logprob: -3.0515382289886475
    4. '       ' → logprob: -6.926538467407227
    5. '	if' → logprob: -9.301538467407227
    6. '```' → logprob: -10.426538467407227
    7. '           ' → logprob: -12.676538467407227
    8. ' ' → logprob: -12.926538467407227
    9. 'If' → logprob: -13.676538467407227
    10. '    ' → logprob: -14.176538467407227

Token 1199: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00043162284418940544
    2. ' dist' → logprob: -7.750431537628174
    3. '   ' → logprob: -14.250432014465332
    4. 'abs' → logprob: -15.000432014465332
    5. '(dist' → logprob: -17.500431060791016
    6. '	dist' → logprob: -17.500431060791016
    7. ' ' → logprob: -19.125431060791016
    8. '  ' → logprob: -19.750431060791016
    9. ' abs' → logprob: -20.375431060791016
    10. '_dist' → logprob: -20.625431060791016

Token 1200: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.16038964688777924
    2. '[u' → logprob: -1.9103896617889404
    3. '[_' → logprob: -9.78538990020752
    4. 'a' → logprob: -9.91038990020752
    5. '[a' → logprob: -10.28538990020752
    6. '[v' → logprob: -11.78538990020752
    7. '```' → logprob: -11.91038990020752
    8. '_u' → logprob: -12.16038990020752
    9. '[' → logprob: -12.53538990020752
    10. '_[' → logprob: -14.16038990020752

Token 1201: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.0206720617134124e-05
    2. 'u' → logprob: -12.37501049041748
    3. '[' → logprob: -12.50001049041748
    4. '[v' → logprob: -13.37501049041748
    5. '```' → logprob: -14.50001049041748
    6. ' [' → logprob: -17.250009536743164
    7. '[
' → logprob: -17.375009536743164
    8. '[user' → logprob: -18.000009536743164
    9. '][' → logprob: -18.375009536743164
    10. '\[' → logprob: -18.625009536743164

Token 1202: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5937442183494568
    2. ']+' → logprob: -1.7187442779541016
    3. ']' → logprob: -2.0937442779541016
    4. '[u' → logprob: -2.3437442779541016
    5. '[' → logprob: -3.7187442779541016
    6. '[v' → logprob: -3.9687442779541016
    7. ' +' → logprob: -5.468744277954102
    8. '][' → logprob: -7.218744277954102
    9. ')' → logprob: -8.218744277954102
    10. ')+' → logprob: -8.343744277954102

Token 1203: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005318311974406242
    2. ' +' → logprob: -5.3803181648254395
    3. '+w' → logprob: -7.3803181648254395
    4. '+k' → logprob: -11.380318641662598
    5. '+t' → logprob: -11.505318641662598
    6. '+p' → logprob: -12.005318641662598
    7. '[' → logprob: -12.130318641662598
    8. '+h' → logprob: -12.255318641662598
    9. '+c' → logprob: -12.255318641662598
    10. '+a' → logprob: -12.630318641662598

Token 1204: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.7610454708337784e-05
    2. ' w' → logprob: -10.500027656555176
    3. '	w' → logprob: -20.50002670288086
    4. ''w' → logprob: -22.25002670288086
    5. '*w' → logprob: -22.37502670288086
    6. '_w' → logprob: -22.50002670288086
    7. '(w' → logprob: -22.87502670288086
    8. 'v' → logprob: -23.00002670288086
    9. '```' → logprob: -23.12502670288086
    10. '   ' → logprob: -23.50002670288086

Token 1205: ' +' (ID: 659)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011554195545613766
    2. ' ==' → logprob: -4.51155424118042
    3. '+' → logprob: -7.63655424118042
    4. ']==' → logprob: -11.636553764343262
    5. '===' → logprob: -12.636553764343262
    6. ')==' → logprob: -12.636553764343262
    7. '==
' → logprob: -12.886553764343262
    8. '```' → logprob: -13.136553764343262
    9. '=' → logprob: -13.261553764343262
    10. ' +' → logprob: -13.636553764343262

Token 1206: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.5048530030981055e-06
    2. ' dist' → logprob: -13.500001907348633
    3. '(dist' → logprob: -19.625001907348633
    4. '	dist' → logprob: -22.875001907348633
    5. '```' → logprob: -23.375001907348633
    6. '.dist' → logprob: -23.500001907348633
    7. '   ' → logprob: -23.625001907348633
    8. '_dist' → logprob: -24.125001907348633
    9. 'Dist' → logprob: -24.500001907348633
    10. 'diff' → logprob: -24.875001907348633

Token 1207: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -2.339278580620885e-06
    2. '_a' → logprob: -13.625001907348633
    3. 'b' → logprob: -14.125001907348633
    4. '_[' → logprob: -15.625001907348633
    5. '[v' → logprob: -16.000001907348633
    6. '```' → logprob: -16.625001907348633
    7. '[_' → logprob: -18.750001907348633
    8. 'a' → logprob: -18.875001907348633
    9. '_ab' → logprob: -18.875001907348633
    10. '_' → logprob: -19.250001907348633

Token 1208: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: 0.0
    2. 'v' → logprob: -17.375
    3. '[' → logprob: -18.875
    4. '```' → logprob: -20.75
    5. '(v' → logprob: -21.0
    6. '<v' → logprob: -21.375
    7. '[
' → logprob: -21.75
    8. '][' → logprob: -22.375
    9. '[[' → logprob: -22.5
    10. '	v' → logprob: -22.625

Token 1209: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2519691288471222
    2. ' ==' → logprob: -1.5019690990447998
    3. ']==' → logprob: -10.376969337463379
    4. ')==' → logprob: -12.376969337463379
    5. '=' → logprob: -13.126969337463379
    6. '==
' → logprob: -14.001969337463379
    7. ']' → logprob: -14.251969337463379
    8. ')' → logprob: -14.501969337463379
    9. '===' → logprob: -14.501969337463379
    10. '```' → logprob: -16.626968383789062

Token 1210: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01815333589911461
    2. ' ==' → logprob: -4.018153190612793
    3. '=' → logprob: -13.518153190612793
    4. '==
' → logprob: -13.643153190612793
    5. '===' → logprob: -15.018153190612793
    6. ']==' → logprob: -15.393153190612793
    7. '```' → logprob: -15.518153190612793
    8. ')==' → logprob: -16.39315414428711
    9. '<=' → logprob: -18.01815414428711
    10. ' ' → logprob: -18.39315414428711

Token 1211: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0485873706638813
    2. ' dist' → logprob: -3.0485873222351074
    3. '(dist' → logprob: -17.423587799072266
    4. '	dist' → logprob: -17.798587799072266
    5. '```' → logprob: -18.423587799072266
    6. 'Dist' → logprob: -19.048587799072266
    7. '_dist' → logprob: -19.173587799072266
    8. '
' → logprob: -20.298587799072266
    9. '.dist' → logprob: -20.423587799072266
    10. '`' → logprob: -20.548587799072266

Token 1212: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -0.005234121344983578
    2. '_a' → logprob: -5.255234241485596
    3. 'ab' → logprob: -15.380233764648438
    4. '_' → logprob: -17.005233764648438
    5. 'a' → logprob: -17.380233764648438
    6. '_an' → logprob: -19.380233764648438
    7. '_b' → logprob: -19.505233764648438
    8. '_[' → logprob: -19.630233764648438
    9. '   ' → logprob: -20.005233764648438
    10. '_ap' → logprob: -20.130233764648438

Token 1213: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3490012586116791
    2. ':
' → logprob: -1.2240012884140015
    3. '):
' → logprob: -8.599000930786133
    4. '   ' → logprob: -9.099000930786133
    5. '       ' → logprob: -9.599000930786133
    6. '):' → logprob: -9.849000930786133
    7. ' and' → logprob: -10.224000930786133
    8. '           ' → logprob: -10.724000930786133
    9. '[' → logprob: -10.849000930786133
    10. ']:
' → logprob: -10.974000930786133

Token 1214: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031225793063640594
    2. 'dag' → logprob: -6.628122806549072
    3. ' dag' → logprob: -7.253122806549072
    4. '           ' → logprob: -7.253122806549072
    5. '   ' → logprob: -8.628122329711914
    6. '```' → logprob: -8.753122329711914
    7. '	d' → logprob: -11.253122329711914
    8. '	   ' → logprob: -12.378122329711914
    9. ',d' → logprob: -12.503122329711914
    10. '	       ' → logprob: -12.628122329711914

Token 1215: ' dag' (ID: 8724)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dag' (adapté à ' dag') → logprob: -2.816093228830141e-06
    2. ' dag' → logprob: -13.50000286102295
    3. '   ' → logprob: -13.62500286102295
    4. '```' → logprob: -16.500001907348633
    5. '	d' → logprob: -18.375001907348633
    6. '           ' → logprob: -18.750001907348633
    7. 'd' → logprob: -18.750001907348633
    8. 'dal' → logprob: -19.125001907348633
    9. '       ' → logprob: -19.625001907348633
    10. 'dad' → logprob: -20.000001907348633

Token 1216: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: 0.0
    2. '[v' → logprob: -18.375
    3. '[' → logprob: -20.0
    4. 'u' → logprob: -20.75
    5. ' [' → logprob: -22.375
    6. '```' → logprob: -22.5
    7. '[user' → logprob: -23.125
    8. '[a' → logprob: -24.5
    9. '(u' → logprob: -24.5
    10. '[i' → logprob: -24.625

Token 1217: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0009263493702746928
    2. '.append' → logprob: -7.000926494598389
    3. '.' → logprob: -11.75092601776123
    4. ']' → logprob: -12.62592601776123
    5. ').' → logprob: -13.00092601776123
    6. '[].' → logprob: -15.00092601776123
    7. 'append' → logprob: -15.25092601776123
    8. ' ].' → logprob: -15.62592601776123
    9. '.app' → logprob: -15.87592601776123
    10. ''].' → logprob: -16.250926971435547

Token 1218: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: 0.0
    2. '.append' → logprob: -17.5
    3. ' append' → logprob: -18.0
    4. '_append' → logprob: -19.25
    5. 'app' → logprob: -19.75
    6. 'Append' → logprob: -21.75
    7. 'appen' → logprob: -22.0
    8. '	append' → logprob: -23.75
    9. 'push' → logprob: -26.0
    10. ' Append' → logprob: -26.125

Token 1219: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -1.9361264946837764e-07
    2. '(' → logprob: -17.0
    3. '((' → logprob: -17.5
    4. 'v' → logprob: -18.0
    5. ' (' → logprob: -20.375
    6. '(
' → logprob: -21.5
    7. '[v' → logprob: -21.625
    8. '```' → logprob: -22.625
    9. '	v' → logprob: -22.875
    10. '(V' → logprob: -23.0

Token 1220: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -15.750000953674316
    4. '       ' → logprob: -16.75
    5. '<|end|>' → logprob: -17.25
    6. '   ' → logprob: -17.375
    7. ')}}' → logprob: -17.75
    8. '))' → logprob: -18.0
    9. ')`' → logprob: -18.0
    10. ')return' → logprob: -18.0

Token 1221: '            
' (ID: 7048)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.5214756727218628
    2. 'from' → logprob: -1.3964756727218628
    3. 'import' → logprob: -2.0214757919311523
    4. 'for' → logprob: -4.396475791931152
    5. 'top' → logprob: -4.646475791931152
    6. 'reachable' → logprob: -6.521475791931152
    7. 'order' → logprob: -7.146475791931152
    8. '```' → logprob: -7.521475791931152
    9. 'answer' → logprob: -8.021475791931152
    10. 'answers' → logprob: -8.146475791931152

Token 1222: 'for' (ID: 1938)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.40528520941734314
    2. 'from' → logprob: -1.7802852392196655
    3. 'for' → logprob: -2.030285120010376
    4. 'top' → logprob: -4.155285358428955
    5. 'import' → logprob: -4.655285358428955
    6. 'answers' → logprob: -6.530285358428955
    7. 'reachable' → logprob: -6.780285358428955
    8. 'answer' → logprob: -6.905285358428955
    9. 'order' → logprob: -6.905285358428955
    10. 'result' → logprob: -7.155285358428955

Token 1223: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5841277241706848
    2. 'c' → logprob: -1.33412766456604
    3. '_' → logprob: -2.33412766456604
    4. ' _' → logprob: -3.83412766456604
    5. ' u' → logprob: -4.334127902984619
    6. '_c' → logprob: -4.334127902984619
    7. 'u' → logprob: -4.834127902984619
    8. ' query' → logprob: -4.959127902984619
    9. '_query' → logprob: -5.334127902984619
    10. 'q' → logprob: -5.709127902984619

Token 1224: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.16043280065059662
    2. ',' → logprob: -1.9104328155517578
    3. ' ,' → logprob: -8.910432815551758
    4. 'd' → logprob: -9.660432815551758
    5. '_,' → logprob: -11.910432815551758
    6. ',_' → logprob: -13.535432815551758
    7. ' d' → logprob: -14.035432815551758
    8. ' in' → logprob: -14.410432815551758
    9. 'in' → logprob: -15.785432815551758
    10. ',b' → logprob: -16.410432815551758

Token 1225: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3868870735168457
    2. 'in' → logprob: -1.1368870735168457
    3. ',' → logprob: -11.261886596679688
    4. ',in' → logprob: -13.386886596679688
    5. '_in' → logprob: -15.136886596679688
    6. 'In' → logprob: -15.136886596679688
    7. '	in' → logprob: -15.136886596679688
    8. ',_' → logprob: -16.136886596679688
    9. ' ,' → logprob: -16.511886596679688
    10. 's' → logprob: -16.636886596679688

Token 1226: ' queries' (ID: 32122)
  Prédit: 'queries'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queries' → logprob: -0.0001584850688232109
    2. ' queries' → logprob: -8.750158309936523
    3. 'requests' → logprob: -17.125158309936523
    4. 'questions' → logprob: -17.875158309936523
    5. 'quer' → logprob: -21.875158309936523
    6. 'query' → logprob: -22.125158309936523
    7. 'quests' → logprob: -22.375158309936523
    8. '_queries' → logprob: -23.000158309936523
    9. 'Queries' → logprob: -23.875158309936523
    10. 'commands' → logprob: -24.375158309936523

Token 1227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016086915275081992
    2. ':
' → logprob: -8.750161170959473
    3. '<|end|>' → logprob: -14.625161170959473
    4. ':
' → logprob: -15.000161170959473
    5. '):' → logprob: -15.375161170959473
    6. ',' → logprob: -15.500161170959473
    7. ' :' → logprob: -15.625161170959473
    8. ':

' → logprob: -16.125160217285156
    9. ':list' → logprob: -16.250160217285156
    10. '>:' → logprob: -16.750160217285156

Token 1228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08010925352573395
    2. '```' → logprob: -2.5801093578338623
    3. '``' → logprob: -7.455109119415283
    4. '	if' → logprob: -8.080109596252441
    5. '<|end|>' → logprob: -9.830109596252441
    6. '\t' → logprob: -9.830109596252441
    7. '[' → logprob: -10.080109596252441
    8. '	for' → logprob: -10.705109596252441
    9. '\' → logprob: -10.705109596252441
    10. '    
' → logprob: -11.330109596252441

Token 1229: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3226313591003418
    2. '   ' → logprob: -1.3226313591003418
    3. '```' → logprob: -5.322631359100342
    4. ' if' → logprob: -5.572631359100342
    5. 'import' → logprob: -7.572631359100342
    6. '	if' → logprob: -9.6976318359375
    7. '``' → logprob: -11.0726318359375
    8. '    
' → logprob: -11.4476318359375
    9. '       ' → logprob: -11.4476318359375
    10. 'from' → logprob: -11.9476318359375

Token 1230: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.039611779153347015
    2. '   ' → logprob: -3.28961181640625
    3. '```' → logprob: -6.66461181640625
    4. 'import' → logprob: -8.41461181640625
    5. ' if' → logprob: -9.66461181640625
    6. 'print' → logprob: -13.03961181640625
    7. 'from' → logprob: -13.41461181640625
    8. '``' → logprob: -13.91461181640625
    9. 'visited' → logprob: -13.91461181640625
    10. '       ' → logprob: -14.53961181640625

Token 1231: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09200920909643173
    2. ' if' → logprob: -2.5920093059539795
    3. 'if' → logprob: -4.3420090675354
    4. '```' → logprob: -10.842009544372559
    5. '    ' → logprob: -12.967009544372559
    6. '
' → logprob: -14.967009544372559
    7. '    
' → logprob: -15.217009544372559
    8. '	if' → logprob: -15.342009544372559
    9. '   ' → logprob: -15.342009544372559
    10. '       ' → logprob: -16.342008590698242

Token 1232: ' and' (ID: 326)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6415822505950928
    2. 'on' → logprob: -1.3915822505950928
    3. 'and' → logprob: -2.2665822505950928
    4. 'in' → logprob: -3.7665822505950928
    5. ' and' → logprob: -3.8915822505950928
    6. '_on' → logprob: -4.016582489013672
    7. ' if' → logprob: -4.016582489013672
    8. ' on' → logprob: -4.391582489013672
    9. 'is' → logprob: -5.391582489013672
    10. ',' → logprob: -5.766582489013672

Token 1233: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0015029559144750237
    2. ' d' → logprob: -6.501502990722656
    3. 'dist' → logprob: -14.376502990722656
    4. 'b' → logprob: -17.626502990722656
    5. '   ' → logprob: -18.001502990722656
    6. '
' → logprob: -18.126502990722656
    7. '(d' → logprob: -19.001502990722656
    8. '```' → logprob: -19.126502990722656
    9. '_d' → logprob: -19.251502990722656
    10. ' (' → logprob: -19.751502990722656

Token 1234: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031907858792692423
    2. 'if' → logprob: -6.128190994262695
    3. ' if' → logprob: -7.753190994262695
    4. '```' → logprob: -7.878190994262695
    5. '<|end|>' → logprob: -9.128190994262695
    6. '    
' → logprob: -10.378190994262695
    7. ':' → logprob: -10.753190994262695
    8. '	if' → logprob: -11.503190994262695
    9. '<|end|>' → logprob: -12.253190994262695
    10. '
' → logprob: -12.753190994262695

Token 1235: ' shortest' (ID: 70564)
  Prédit: 'some'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'some' → logprob: -0.23402437567710876
    2. 'dist' → logprob: -2.3590242862701416
    3. 'short' → logprob: -2.6090242862701416
    4. ' shortest' → logprob: -4.359024524688721
    5. ' some' → logprob: -4.484024524688721
    6. 'the' → logprob: -4.609024524688721
    7. 'a' → logprob: -6.109024524688721
    8. ' dist' → logprob: -7.359024524688721
    9. '[' → logprob: -7.609024524688721
    10. 's' → logprob: -7.734024524688721

Token 1236: ' path' (ID: 3104)
  Prédit: '_path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.6846113801002502
    2. 'path' → logprob: -0.9346113801002502
    3. 'paths' → logprob: -2.8096113204956055
    4. '_paths' → logprob: -3.3096113204956055
    5. '   ' → logprob: -5.5596113204956055
    6. ' path' → logprob: -7.0596113204956055
    7. '```' → logprob: -7.0596113204956055
    8. ' paths' → logprob: -8.184611320495605
    9. '_' → logprob: -9.184611320495605
    10. ' ' → logprob: -9.434611320495605

Token 1237: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.11996734328568e-05
    2. '
' → logprob: -10.875041007995605
    3. '    
' → logprob: -11.125041007995605
    4. '```' → logprob: -12.250041007995605
    5. ':' → logprob: -13.750041007995605
    6. 'if' → logprob: -15.125041007995605
    7. ':
' → logprob: -15.250041007995605
    8. '<|end|>' → logprob: -15.375041007995605
    9. '   
' → logprob: -15.625041007995605
    10. '	if' → logprob: -15.625041007995605

Token 1238: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009144435753114522
    2. '```' → logprob: -7.000914573669434
    3. '``' → logprob: -13.500914573669434
    4. 'if' → logprob: -14.000914573669434
    5. '    
' → logprob: -15.125914573669434
    6. '   ' → logprob: -15.250914573669434
    7. ' if' → logprob: -16.000913619995117
    8. '
' → logprob: -16.375913619995117
    9. '       ' → logprob: -16.875913619995117
    10. '`' → logprob: -17.625913619995117

Token 1239: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.578241765499115
    2. '   ' → logprob: -0.828241765499115
    3. '```' → logprob: -6.32824182510376
    4. ' if' → logprob: -7.57824182510376
    5. '	if' → logprob: -13.328241348266602
    6. '``' → logprob: -13.953241348266602
    7. '       ' → logprob: -15.203241348266602
    8. '
' → logprob: -15.953241348266602
    9. '   ' → logprob: -16.8282413482666
    10. '    
' → logprob: -16.9532413482666

Token 1240: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.038330405950546265
    2. ' dist' → logprob: -3.288330316543579
    3. '   ' → logprob: -8.788330078125
    4. '(dist' → logprob: -8.913330078125
    5. ' (' → logprob: -14.288330078125
    6. '	dist' → logprob: -14.538330078125
    7. '    ' → logprob: -15.413330078125
    8. ' ' → logprob: -15.538330078125
    9. '_dist' → logprob: -16.038330078125
    10. '(' → logprob: -16.788330078125

Token 1241: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -9.817902173381299e-05
    2. '[c' → logprob: -10.00009822845459
    3. '[_' → logprob: -10.37509822845459
    4. ' _' → logprob: -11.25009822845459
    5. '_c' → logprob: -12.75009822845459
    6. '_' → logprob: -13.37509822845459
    7. 'a' → logprob: -13.75009822845459
    8. '_[' → logprob: -14.00009822845459
    9. '[a' → logprob: -14.25009822845459
    10. '[' → logprob: -14.87509822845459

Token 1242: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -3.292907877039397e-06
    2. 'c' → logprob: -12.87500286102295
    3. '[' → logprob: -14.50000286102295
    4. ']' → logprob: -17.625003814697266
    5. '][' → logprob: -17.625003814697266
    6. '
' → logprob: -17.625003814697266
    7. '[
' → logprob: -17.875003814697266
    8. '   ' → logprob: -18.125003814697266
    9. ' [' → logprob: -18.125003814697266
    10. '(c' → logprob: -18.250003814697266

Token 1243: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005468539893627167
    2. ']+' → logprob: -5.255468368530273
    3. '[c' → logprob: -8.380468368530273
    4. ']==' → logprob: -13.005468368530273
    5. ' ]' → logprob: -13.630468368530273
    6. '```' → logprob: -14.880468368530273
    7. '[d' → logprob: -15.255468368530273
    8. '[' → logprob: -15.380468368530273
    9. '']' → logprob: -15.505468368530273
    10. ')' → logprob: -15.505468368530273

Token 1244: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11644121259450912
    2. ' +' → logprob: -2.241441249847412
    3. '+c' → logprob: -5.741441249847412
    4. '!=' → logprob: -8.491440773010254
    5. '==' → logprob: -9.741440773010254
    6. ' !=' → logprob: -10.116440773010254
    7. '[c' → logprob: -10.491440773010254
    8. '<=' → logprob: -10.991440773010254
    9. '>' → logprob: -11.116440773010254
    10. '+d' → logprob: -11.616440773010254

Token 1245: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00020389800192788243
    2. ' dist' → logprob: -8.500204086303711
    3. '(dist' → logprob: -15.750204086303711
    4. '0' → logprob: -15.875204086303711
    5. '_dist' → logprob: -17.50020408630371
    6. '   ' → logprob: -17.75020408630371
    7. '	dist' → logprob: -18.37520408630371
    8. '.dist' → logprob: -18.62520408630371
    9. '
' → logprob: -20.00020408630371
    10. ' ' → logprob: -20.37520408630371

Token 1246: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0008395231561735272
    2. '[c' → logprob: -7.250839710235596
    3. '[b' → logprob: -9.750839233398438
    4. 'b' → logprob: -10.500839233398438
    5. '_a' → logprob: -10.750839233398438
    6. '_[' → logprob: -11.625839233398438
    7. '_c' → logprob: -11.875839233398438
    8. '[_' → logprob: -12.625839233398438
    9. '[d' → logprob: -14.125839233398438
    10. '```' → logprob: -14.500839233398438

Token 1247: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.00012773419439326972
    2. '[d' → logprob: -9.000127792358398
    3. '[' → logprob: -13.375127792358398
    4. 'c' → logprob: -13.500127792358398
    5. '```' → logprob: -14.500127792358398
    6. '[
' → logprob: -15.000127792358398
    7. 'd' → logprob: -15.500127792358398
    8. '
' → logprob: -15.625127792358398
    9. '   ' → logprob: -16.3751277923584
    10. ']' → logprob: -17.3751277923584

Token 1248: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20304469764232635
    2. ']' → logprob: -2.4530446529388428
    3. '==' → logprob: -2.4530446529388428
    4. ']==' → logprob: -4.703044891357422
    5. ' !=' → logprob: -6.078044891357422
    6. ' ]' → logprob: -8.703044891357422
    7. '!=' → logprob: -9.578044891357422
    8. '   ' → logprob: -10.828044891357422
    9. '```' → logprob: -10.828044891357422
    10. '>' → logprob: -11.328044891357422

Token 1249: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10089963674545288
    2. ' ==' → logprob: -2.3508996963500977
    3. '!=' → logprob: -7.600899696350098
    4. ' !=' → logprob: -8.850899696350098
    5. '```' → logprob: -11.100899696350098
    6. ']==' → logprob: -11.225899696350098
    7. '==
' → logprob: -12.100899696350098
    8. '>' → logprob: -12.350899696350098
    9. '<=' → logprob: -12.475899696350098
    10. ')==' → logprob: -13.100899696350098

Token 1250: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.004078639671206474
    2. ' dist' → logprob: -5.5040788650512695
    3. '	dist' → logprob: -16.004077911376953
    4. '(dist' → logprob: -16.629077911376953
    5. '   ' → logprob: -17.754077911376953
    6. '```' → logprob: -17.879077911376953
    7. '
' → logprob: -18.004077911376953
    8. '_dist' → logprob: -18.629077911376953
    9. 'Dist' → logprob: -19.254077911376953
    10. '.dist' → logprob: -19.379077911376953

Token 1251: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -4.4849443838757e-06
    2. 'ab' → logprob: -12.625004768371582
    3. '_a' → logprob: -13.875004768371582
    4. '_' → logprob: -17.250003814697266
    5. 'a' → logprob: -17.625003814697266
    6. ''ab' → logprob: -18.000003814697266
    7. '_AB' → logprob: -18.125003814697266
    8. '_ap' → logprob: -18.750003814697266
    9. '#ab' → logprob: -18.875003814697266
    10. 'abc' → logprob: -19.000003814697266

Token 1252: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04617734253406525
    2. '       ' → logprob: -3.546177387237549
    3. '   ' → logprob: -4.671177387237549
    4. 'or' → logprob: -5.546177387237549
    5. ':' → logprob: -6.046177387237549
    6. ':
' → logprob: -7.921177387237549
    7. '	or' → logprob: -8.67117691040039
    8. ' and' → logprob: -9.67117691040039
    9. '           ' → logprob: -11.17117691040039
    10. '	' → logprob: -11.54617691040039

Token 1253: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.07896248996257782
    2. ' dist' → logprob: -2.578962564468384
    3. '   ' → logprob: -9.578962326049805
    4. '(dist' → logprob: -13.703962326049805
    5. '    ' → logprob: -14.078962326049805
    6. '	dist' → logprob: -14.203962326049805
    7. '       ' → logprob: -14.703962326049805
    8. '  ' → logprob: -15.328962326049805
    9. '```' → logprob: -15.953962326049805
    10. '           ' → logprob: -16.703962326049805

Token 1254: '_a' (ID: 10852)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.6931734681129456
    2. '_a' → logprob: -0.6931734681129456
    3. '_d' → logprob: -11.0681734085083
    4. 'a' → logprob: -12.5681734085083
    5. 'b' → logprob: -12.9431734085083
    6. '```' → logprob: -13.0681734085083
    7. '_[' → logprob: -14.1931734085083
    8. '[d' → logprob: -14.1931734085083
    9. '_' → logprob: -14.5681734085083
    10. '[_' → logprob: -15.4431734085083

Token 1255: '[d' (ID: 48377)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.6946406960487366
    2. '[d' → logprob: -0.6946406960487366
    3. '[' → logprob: -6.944640636444092
    4. 'd' → logprob: -7.694640636444092
    5. 'c' → logprob: -10.31964111328125
    6. '[
' → logprob: -11.56964111328125
    7. '   ' → logprob: -11.81964111328125
    8. '```' → logprob: -11.94464111328125
    9. ' ' → logprob: -12.44464111328125
    10. '[[' → logprob: -13.56964111328125

Token 1256: ']' (ID: 60)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0031603723764419556
    2. ']' → logprob: -5.87816047668457
    3. '+d' → logprob: -8.87816047668457
    4. ']+' → logprob: -9.00316047668457
    5. 'd' → logprob: -10.37816047668457
    6. '[' → logprob: -10.87816047668457
    7. '][' → logprob: -11.37816047668457
    8. '```' → logprob: -11.50316047668457
    9. '[c' → logprob: -11.75316047668457
    10. ')' → logprob: -12.12816047668457

Token 1257: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0930454209446907
    2. ' +' → logprob: -2.593045473098755
    3. '+d' → logprob: -4.468045234680176
    4. '[d' → logprob: -6.093045234680176
    5. '[' → logprob: -8.468045234680176
    6. '```' → logprob: -10.343045234680176
    7. 'd' → logprob: -10.718045234680176
    8. ')' → logprob: -11.218045234680176
    9. '<|end|>' → logprob: -11.218045234680176
    10. '+
' → logprob: -11.843045234680176

Token 1258: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0024814847856760025
    2. ' dist' → logprob: -6.002481460571289
    3. 'b' → logprob: -12.252481460571289
    4. '```' → logprob: -14.252481460571289
    5. '(dist' → logprob: -15.252481460571289
    6. '	dist' → logprob: -17.00248146057129
    7. '
' → logprob: -18.00248146057129
    8. '1' → logprob: -18.12748146057129
    9. '_dist' → logprob: -18.50248146057129
    10. '   ' → logprob: -18.50248146057129

Token 1259: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00011081460979767144
    2. 'b' → logprob: -9.125110626220703
    3. '[b' → logprob: -13.875110626220703
    4. 'd' → logprob: -14.500110626220703
    5. '_d' → logprob: -15.375110626220703
    6. '[d' → logprob: -15.875110626220703
    7. '```' → logprob: -18.125110626220703
    8. '_a' → logprob: -18.250110626220703
    9. '	b' → logprob: -18.375110626220703
    10. 'a' → logprob: -19.000110626220703

Token 1260: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.002488618716597557
    2. 'd' → logprob: -6.002488613128662
    3. '```' → logprob: -12.25248908996582
    4. '[
' → logprob: -12.50248908996582
    5. '[' → logprob: -13.00248908996582
    6. '	d' → logprob: -14.62748908996582
    7. '(d' → logprob: -14.75248908996582
    8. '
' → logprob: -15.00248908996582
    9. ')d' → logprob: -15.62748908996582
    10. '>d' → logprob: -15.75248908996582

Token 1261: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.8122761249542236
    2. ']' → logprob: -1.3122761249542236
    3. ' !=' → logprob: -1.8122761249542236
    4. ']!=' → logprob: -2.1872761249542236
    5. '[d' → logprob: -5.8122758865356445
    6. ')!=' → logprob: -5.9372758865356445
    7. 'd' → logprob: -6.4372758865356445
    8. '[c' → logprob: -6.6872758865356445
    9. '```' → logprob: -6.9372758865356445
    10. '   ' → logprob: -7.4372758865356445

Token 1262: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.25386154651641846
    2. ' !=' → logprob: -1.5038615465164185
    3. '==' → logprob: -6.503861427307129
    4. ')!=' → logprob: -9.128861427307129
    5. '```' → logprob: -9.128861427307129
    6. ' ==' → logprob: -9.503861427307129
    7. '   ' → logprob: -10.503861427307129
    8. '!' → logprob: -10.503861427307129
    9. ']!=' → logprob: -11.128861427307129
    10. '>' → logprob: -11.128861427307129

Token 1263: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.048588622361421585
    2. ' dist' → logprob: -3.048588514328003
    3. '(dist' → logprob: -14.048588752746582
    4. '```' → logprob: -15.423588752746582
    5. '	dist' → logprob: -15.673588752746582
    6. '_dist' → logprob: -16.423587799072266
    7. '.dist' → logprob: -17.798587799072266
    8. '-dist' → logprob: -17.923587799072266
    9. '`' → logprob: -18.048587799072266
    10. 'Dist' → logprob: -18.548587799072266

Token 1264: '_ab' (ID: 53632)
  Prédit: '_ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ab' → logprob: -2.2007883671903983e-05
    2. 'ab' → logprob: -10.750021934509277
    3. ''ab' → logprob: -16.000022888183594
    4. 'd' → logprob: -16.250022888183594
    5. '_' → logprob: -16.875022888183594
    6. '_b' → logprob: -17.000022888183594
    7. '```' → logprob: -17.125022888183594
    8. '_AB' → logprob: -17.125022888183594
    9. '_abs' → logprob: -17.250022888183594
    10. '_a' → logprob: -17.500022888183594

Token 1265: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23461304605007172
    2. ':' → logprob: -1.609613060951233
    3. ':
' → logprob: -4.984612941741943
    4. '   ' → logprob: -6.359612941741943
    5. ' or' → logprob: -7.484612941741943
    6. '):
' → logprob: -12.359613418579102
    7. ',' → logprob: -12.359613418579102
    8. ' and' → logprob: -13.234613418579102
    9. '           ' → logprob: -13.234613418579102
    10. '.' → logprob: -13.609613418579102

Token 1266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040362097206525505
    2. '   ' → logprob: -8.50040340423584
    3. '```' → logprob: -9.12540340423584
    4. ' continue' → logprob: -10.62540340423584
    5. ':' → logprob: -11.00040340423584
    6. 'continue' → logprob: -11.12540340423584
    7. '\' → logprob: -11.87540340423584
    8. '
' → logprob: -12.12540340423584
    9. '        
' → logprob: -12.50040340423584
    10. '	' → logprob: -12.75040340423584

Token 1267: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05598529055714607
    2. 'print' (adapté à ' print') → logprob: -3.05598521232605
    3. '   ' → logprob: -5.055985450744629
    4. '```' → logprob: -6.930985450744629
    5. 'continue' → logprob: -11.055985450744629
    6. ' print' → logprob: -12.305985450744629
    7. '``' → logprob: -14.055985450744629
    8. '`' → logprob: -14.555985450744629
    9. '           ' → logprob: -15.430985450744629
    10. '
' → logprob: -15.555985450744629

Token 1268: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.1976255476474762
    2. '(' → logprob: -2.1976256370544434
    3. '('' → logprob: -2.6976256370544434
    4. 'No' → logprob: -7.822625637054443
    5. '(No' → logprob: -7.947625637054443
    6. '(False' → logprob: -9.572625160217285
    7. '(NO' → logprob: -11.072625160217285
    8. ' ("' → logprob: -11.197625160217285
    9. '(
' → logprob: -11.322625160217285
    10. '"No' → logprob: -11.822625160217285

Token 1269: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -5.080963092041202e-06
    2. '"No' → logprob: -12.250004768371582
    3. 'NO' → logprob: -15.500004768371582
    4. ' No' → logprob: -16.3750057220459
    5. '_No' → logprob: -18.7500057220459
    6. '"' → logprob: -19.3750057220459
    7. 'Impossible' → logprob: -20.0000057220459
    8. '“No' → logprob: -20.3750057220459
    9. '.No' → logprob: -21.5000057220459
    10. '>No' → logprob: -22.1250057220459

Token 1270: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.5783427357673645
    2. '")' → logprob: -0.8283427357673645
    3. '       ' → logprob: -6.828342914581299
    4. ')' → logprob: -7.703342914581299
    5. '   ' → logprob: -7.953342914581299
    6. ')
' → logprob: -8.20334243774414
    7. ')")
' → logprob: -8.70334243774414
    8. '")
' → logprob: -10.20334243774414
    9. ')")' → logprob: -10.45334243774414
    10. 'else' → logprob: -12.95334243774414

Token 1271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002899378538131714
    2. '```' → logprob: -6.127899169921875
    3. '   ' → logprob: -7.252899169921875
    4. 'continue' → logprob: -13.252899169921875
    5. '           ' → logprob: -14.127899169921875
    6. '>' → logprob: -14.252899169921875
    7. 'else' → logprob: -14.377899169921875
    8. ',' → logprob: -14.377899169921875
    9. '<|end|>' → logprob: -14.627899169921875
    10. 'elif' → logprob: -15.752899169921875

Token 1272: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001757696009008214
    2. '   ' → logprob: -9.125175476074219
    3. '```' → logprob: -9.875175476074219
    4. 'continue' (adapté à ' continue') → logprob: -11.500175476074219
    5. 'else' → logprob: -13.000175476074219
    6. 'elif' → logprob: -13.500175476074219
    7. ' continue' → logprob: -14.625175476074219
    8. '           ' → logprob: -14.875175476074219
    9. ',' → logprob: -14.875175476074219
    10. '>' → logprob: -16.12517547607422

Token 1273: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010672240518033504
    2. '
' → logprob: -4.635672092437744
    3. '    
' → logprob: -7.385672092437744
    4. '```' → logprob: -8.760672569274902
    5. 'from' → logprob: -9.260672569274902
    6. '        
' → logprob: -11.135672569274902
    7. 'import' → logprob: -11.385672569274902
    8. '  
' → logprob: -12.260672569274902
    9. 'if' → logprob: -12.510672569274902
    10. 'b' → logprob: -12.885672569274902

Token 1274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028952326625585556
    2. '```' → logprob: -4.028952121734619
    3. 'from' → logprob: -4.778952121734619
    4. 'if' → logprob: -7.278952121734619
    5. 'visited' → logprob: -7.778952121734619
    6. 'queue' → logprob: -8.028952598571777
    7. 'import' → logprob: -8.278952598571777
    8. '
' → logprob: -8.528952598571777
    9. ' from' → logprob: -8.903952598571777
    10. '    
' → logprob: -9.403952598571777

Token 1275: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20898398756980896
    2. 'from' → logprob: -1.8339840173721313
    3. 'visited' → logprob: -3.833983898162842
    4. 'import' → logprob: -5.208983898162842
    5. 'if' → logprob: -7.708983898162842
    6. 'queue' → logprob: -8.083984375
    7. 'hq' → logprob: -8.208984375
    8. '
' → logprob: -8.458984375
    9. '```' → logprob: -8.458984375
    10. '    
' → logprob: -8.958984375

Token 1276: ' check' (ID: 2371)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.001444045570679009
    2. 'import' → logprob: -6.626443862915039
    3. 'visited' → logprob: -9.876443862915039
    4. 'if' → logprob: -10.126443862915039
    5. 'hq' → logprob: -11.626443862915039
    6. 'queue' → logprob: -11.876443862915039
    7. '   ' → logprob: -12.501443862915039
    8. ' from' → logprob: -13.001443862915039
    9. '```' → logprob: -13.751443862915039
    10. '#' → logprob: -14.126443862915039

Token 1277: ' reachable' (ID: 143580)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1054946780204773
    2. 'visited' → logprob: -3.480494737625122
    3. 'import' → logprob: -3.855494737625122
    4. '   ' → logprob: -3.855494737625122
    5. 'if' → logprob: -3.855494737625122
    6. '```' → logprob: -6.105494499206543
    7. 'queue' → logprob: -6.605494499206543
    8. 'stack' → logprob: -7.355494499206543
    9. 'len' → logprob: -7.605494499206543
    10. ' from' → logprob: -7.730494499206543

Token 1278: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3166235685348511
    2. 'from' → logprob: -1.316623568534851
    3. 'import' → logprob: -6.691623687744141
    4. ' from' → logprob: -6.941623687744141
    5. 'hq' → logprob: -7.566623687744141
    6. '```' → logprob: -7.941623687744141
    7. '    
' → logprob: -9.94162368774414
    8. 'visited' → logprob: -10.06662368774414
    9. 'queue' → logprob: -10.06662368774414
    10. '
' → logprob: -10.19162368774414

Token 1279: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002170243998989463
    2. ' c' → logprob: -6.252170085906982
    3. 'dag' → logprob: -8.50217056274414
    4. '   ' → logprob: -10.50217056274414
    5. ' dag' → logprob: -12.87717056274414
    6. '	c' → logprob: -13.00217056274414
    7. 'import' → logprob: -13.00217056274414
    8. '```' → logprob: -13.25217056274414
    9. 'deque' → logprob: -14.75217056274414
    10. '_c' → logprob: -14.87717056274414

Token 1280: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003693013568408787
    2. 'from' → logprob: -8.75036907196045
    3. 'import' → logprob: -9.62536907196045
    4. '```' → logprob: -9.62536907196045
    5. '
' → logprob: -10.12536907196045
    6. '    
' → logprob: -11.25036907196045
    7. ' from' → logprob: -11.25036907196045
    8. 'visited' → logprob: -13.00036907196045
    9. 'q' → logprob: -13.12536907196045
    10. '       ' → logprob: -13.62536907196045

Token 1281: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0001049736310960725
    2. ' d' → logprob: -9.250104904174805
    3. 'dag' → logprob: -11.750104904174805
    4. '	d' → logprob: -15.000104904174805
    5. '
' → logprob: -15.500104904174805
    6. '```' → logprob: -16.125104904174805
    7. '   ' → logprob: -16.250104904174805
    8. 'import' → logprob: -16.250104904174805
    9. 'c' → logprob: -17.125104904174805
    10. ' ' → logprob: -17.250104904174805

Token 1282: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008515877649188042
    2. 'from' → logprob: -5.38351583480835
    3. '
' → logprob: -6.25851583480835
    4. 'import' → logprob: -6.50851583480835
    5. '```' → logprob: -8.383516311645508
    6. ' from' → logprob: -8.508516311645508
    7. '    
' → logprob: -10.508516311645508
    8. '	from' → logprob: -12.508516311645508
    9. 'queue' → logprob: -12.633516311645508
    10. 'q' → logprob: -12.758516311645508

Token 1283: ' dag' (ID: 8724)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dag' → logprob: -5.943783253314905e-05
    2. 'import' → logprob: -10.625059127807617
    3. 'deque' → logprob: -11.125059127807617
    4. ' dag' → logprob: -11.625059127807617
    5. 'from' → logprob: -11.625059127807617
    6. 'collections' → logprob: -13.875059127807617
    7. '```' → logprob: -14.000059127807617
    8. '
' → logprob: -15.125059127807617
    9. '`' → logprob: -16.250059127807617
    10. 'dam' → logprob: -16.500059127807617

Token 1284: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006588420830667019
    2. '```' → logprob: -5.381588459014893
    3. 'from' → logprob: -6.881588459014893
    4. '
' → logprob: -7.381588459014893
    5. ' from' → logprob: -8.256587982177734
    6. 'import' → logprob: -10.256587982177734
    7. '    
' → logprob: -11.756587982177734
    8. '``' → logprob: -11.756587982177734
    9. '	from' → logprob: -13.881587982177734
    10. 'q' → logprob: -14.256587982177734

Token 1285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018269339576363564
    2. '```' → logprob: -4.0182695388793945
    3. 'hq' → logprob: -9.768269538879395
    4. '``' → logprob: -10.643269538879395
    5. 'from' → logprob: -11.018269538879395
    6. 'visited' → logprob: -12.518269538879395
    7. ' from' → logprob: -12.518269538879395
    8. '    
' → logprob: -12.893269538879395
    9. ' h' → logprob: -12.893269538879395
    10. 'import' → logprob: -12.893269538879395

Token 1286: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20686177909374237
    2. 'from' → logprob: -1.7068617343902588
    3. '```' → logprob: -6.206861972808838
    4. 'visited' → logprob: -6.331861972808838
    5. 'import' → logprob: -6.581861972808838
    6. ' from' → logprob: -9.08186149597168
    7. 'queue' → logprob: -9.95686149597168
    8. '
' → logprob: -10.45686149597168
    9. '``' → logprob: -10.83186149597168
    10. 'q' → logprob: -11.20686149597168

Token 1287: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00025919382460415363
    2. 'dist' → logprob: -8.375259399414062
    3. 'top' → logprob: -11.125259399414062
    4. '
' → logprob: -12.500259399414062
    5. 'len' → logprob: -12.625259399414062
    6. ' c' → logprob: -13.250259399414062
    7. 'not' → logprob: -13.250259399414062
    8. '```' → logprob: -13.375259399414062
    9. '   ' → logprob: -13.625259399414062
    10. '    
' → logprob: -16.125259399414062

Token 1288: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3869852125644684
    2. ' ==' → logprob: -1.136985182762146
    3. '!=' → logprob: -9.761984825134277
    4. ' !=' → logprob: -10.761984825134277
    5. '>' → logprob: -10.886984825134277
    6. '===' → logprob: -12.511984825134277
    7. ' >' → logprob: -12.511984825134277
    8. '=' → logprob: -13.011984825134277
    9. 'not' → logprob: -13.386984825134277
    10. '==
' → logprob: -13.386984825134277

Token 1289: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.080963092041202e-06
    2. ' d' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.250004768371582
    4. '	d' → logprob: -18.0000057220459
    5. ' ' → logprob: -18.6250057220459
    6. '       ' → logprob: -19.1250057220459
    7. '=d' → logprob: -19.7500057220459
    8. '     ' → logprob: -19.8750057220459
    9. '    
' → logprob: -20.1250057220459
    10. '=' → logprob: -20.1250057220459

Token 1290: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07001145929098129
    2. ':
' → logprob: -2.6950113773345947
    3. '   ' → logprob: -9.820011138916016
    4. ':return' → logprob: -11.570011138916016
    5. '):
' → logprob: -13.195011138916016
    6. '):' → logprob: -13.695011138916016
    7. ' and' → logprob: -13.695011138916016
    8. '==' → logprob: -13.695011138916016
    9. ' or' → logprob: -13.820011138916016
    10. 'and' → logprob: -13.820011138916016

Token 1291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012070910073816776
    2. ':' → logprob: -4.637071132659912
    3. ':
' → logprob: -6.637071132659912
    4. '   ' → logprob: -7.012071132659912
    5. '```' → logprob: -10.262070655822754
    6. ' and' → logprob: -11.137070655822754
    7. '<|end|>' → logprob: -11.262070655822754
    8. ',' → logprob: -12.262070655822754
    9. '
' → logprob: -12.387070655822754
    10. '	   ' → logprob: -12.887070655822754

Token 1292: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08777336031198502
    2. ' print' → logprob: -2.587773323059082
    3. '       ' → logprob: -4.962773323059082
    4. '   ' → logprob: -6.337773323059082
    5. '```' → logprob: -10.087773323059082
    6. '           ' → logprob: -10.587773323059082
    7. '	print' → logprob: -12.087773323059082
    8. '
' → logprob: -12.212773323059082
    9. '               ' → logprob: -14.212773323059082
    10. '``' → logprob: -14.212773323059082

Token 1293: ' c' (ID: 274)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.547789674485102e-05
    2. ' print' → logprob: -10.625035285949707
    3. 'if' → logprob: -12.500035285949707
    4. '   ' → logprob: -12.625035285949707
    5. 'Yes' → logprob: -12.875035285949707
    6. 'Print' → logprob: -14.500035285949707
    7. '```' → logprob: -14.750035285949707
    8. '           ' → logprob: -15.250035285949707
    9. '       ' → logprob: -15.500035285949707
    10. '	print' → logprob: -16.750036239624023

Token 1294: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.14319676160812378
    2. '==' → logprob: -2.0181968212127686
    3. ')' → logprob: -8.768197059631348
    4. 'print' → logprob: -9.268197059631348
    5. '<|end|>' → logprob: -9.518197059631348
    6. ')==' → logprob: -10.643197059631348
    7. '   ' → logprob: -10.643197059631348
    8. ' =' → logprob: -10.643197059631348
    9. '=' → logprob: -10.893197059631348
    10. ' <=' → logprob: -11.518197059631348

Token 1295: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0012496389681473374
    2. ' d' → logprob: -7.00124979019165
    3. 'Yes' → logprob: -8.876249313354492
    4. '
' → logprob: -9.876249313354492
    5. 'c' → logprob: -9.876249313354492
    6. '=' → logprob: -10.251249313354492
    7. '   ' → logprob: -11.876249313354492
    8. 'No' → logprob: -12.126249313354492
    9. '"d' → logprob: -12.126249313354492
    10. 'print' → logprob: -12.251249313354492

Token 1296: ' by' (ID: 656)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7908715605735779
    2. '   ' → logprob: -1.6658716201782227
    3. 'print' → logprob: -2.0408716201782227
    4. ':' → logprob: -2.0408716201782227
    5. '
' → logprob: -3.2908716201782227
    6. 'continue' → logprob: -3.7908716201782227
    7. ' continue' → logprob: -4.415871620178223
    8. '       ' → logprob: -4.415871620178223
    9. '           ' → logprob: -5.165871620178223
    10. ' and' → logprob: -6.165871620178223

Token 1297: ' problem' (ID: 4792)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8323932886123657
    2. 'problem' → logprob: -1.0823932886123657
    3. ' problem' → logprob: -2.957393169403076
    4. '   ' → logprob: -3.832393169403076
    5. '
' → logprob: -3.957393169403076
    6. 'default' → logprob: -4.082393169403076
    7. 'input' → logprob: -4.457393169403076
    8. 'print' → logprob: -4.457393169403076
    9. 'query' → logprob: -4.582393169403076
    10. ' ' → logprob: -4.582393169403076

Token 1298: ' statement' (ID: 9710)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19057932496070862
    2. '
' → logprob: -2.940579414367676
    3. 'continue' → logprob: -3.440579414367676
    4. 'print' → logprob: -3.565579414367676
    5. 'if' → logprob: -3.940579414367676
    6. ':' → logprob: -4.190579414367676
    7. '       ' → logprob: -4.565579414367676
    8. ':
' → logprob: -5.190579414367676
    9. 'else' → logprob: -5.815579414367676
    10. '#' → logprob: -6.440579414367676

Token 1299: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.175990492105484
    2. '       ' → logprob: -2.675990581512451
    3. 'continue' → logprob: -3.050990581512451
    4. '
' → logprob: -3.800990581512451
    5. 'else' → logprob: -4.925990581512451
    6. ':' → logprob: -4.925990581512451
    7. '           ' → logprob: -6.425990581512451
    8. ':
' → logprob: -6.425990581512451
    9. '```' → logprob: -6.550990581512451
    10. '    
' → logprob: -7.050990581512451

Token 1300: ' but' (ID: 889)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8494825959205627
    2. '   ' → logprob: -1.099482536315918
    3. '       ' → logprob: -1.974482536315918
    4. ' print' → logprob: -2.349482536315918
    5. 'continue' → logprob: -6.349482536315918
    6. ' continue' → logprob: -6.724482536315918
    7. '           ' → logprob: -7.349482536315918
    8. '```' → logprob: -7.599482536315918
    9. 'pass' → logprob: -8.349482536315918
    10. '
' → logprob: -8.474482536315918

Token 1301: ' just' (ID: 1327)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6615910530090332
    2. '       ' → logprob: -1.5365910530090332
    3. '   ' → logprob: -1.9115910530090332
    4. 'continue' → logprob: -2.911591053009033
    5. '```' → logprob: -3.036591053009033
    6. '
' → logprob: -5.411591053009033
    7. ' print' → logprob: -5.536591053009033
    8. '           ' → logprob: -5.786591053009033
    9. '#' → logprob: -6.036591053009033
    10. ' continue' → logprob: -6.161591053009033

Token 1302: ' in' (ID: 306)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06080993637442589
    2. '       ' → logprob: -3.060809850692749
    3. '   ' → logprob: -4.935810089111328
    4. '           ' → logprob: -5.560810089111328
    5. 'continue' → logprob: -7.310810089111328
    6. ' print' → logprob: -8.310810089111328
    7. '```' → logprob: -9.060810089111328
    8. 'in' → logprob: -10.185810089111328
    9. 'pass' → logprob: -11.060810089111328
    10. '
' → logprob: -11.935810089111328

Token 1303: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.021136052906513214
    2. 'this' → logprob: -3.8961360454559326
    3. ' case' → logprob: -8.271136283874512
    4. 'that' → logprob: -8.521136283874512
    5. 'code' → logprob: -10.271136283874512
    6. 'if' → logprob: -10.521136283874512
    7. '
' → logprob: -10.646136283874512
    8. '   ' → logprob: -11.271136283874512
    9. '```' → logprob: -11.271136283874512
    10. ' this' → logprob: -11.521136283874512

Token 1304: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07636226713657379
    2. '   ' → logprob: -2.951362371444702
    3. ':
' → logprob: -4.451362133026123
    4. '```' → logprob: -5.076362133026123
    5. ':' → logprob: -5.951362133026123
    6. '
' → logprob: -8.701362609863281
    7. 'print' → logprob: -8.826362609863281
    8. 'continue' → logprob: -9.326362609863281
    9. ',' → logprob: -9.451362609863281
    10. '           ' → logprob: -9.576362609863281

Token 1305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005147300660610199
    2. '   ' → logprob: -5.505147457122803
    3. '```' → logprob: -6.880147457122803
    4. 'continue' → logprob: -11.005146980285645
    5. 'print' → logprob: -11.255146980285645
    6. ':
' → logprob: -12.755146980285645
    7. ':' → logprob: -12.880146980285645
    8. ' continue' → logprob: -13.255146980285645
    9. '           ' → logprob: -13.380146980285645
    10. '``' → logprob: -14.130146980285645

Token 1306: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.013824254274368286
    2. '   ' → logprob: -4.513824462890625
    3. '       ' → logprob: -6.638824462890625
    4. 'continue' → logprob: -6.888824462890625
    5. '```' → logprob: -8.638824462890625
    6. ' print' → logprob: -8.638824462890625
    7. '           ' → logprob: -10.513824462890625
    8. 'if' → logprob: -10.638824462890625
    9. '
' → logprob: -11.263824462890625
    10. 'for' → logprob: -12.263824462890625

Token 1307: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.003323388285934925
    2. '(' → logprob: -5.753323554992676
    3. '("("' → logprob: -9.003323554992676
    4. '('' → logprob: -11.253323554992676
    5. '("")' → logprob: -12.378323554992676
    6. '()' → logprob: -12.378323554992676
    7. '("(' → logprob: -14.628323554992676
    8. '(
' → logprob: -15.253323554992676
    9. '("\' → logprob: -15.753323554992676
    10. '(":' → logprob: -16.62832260131836

Token 1308: 'No' (ID: 3160)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.004694868810474873
    2. 'No' → logprob: -5.379694938659668
    3. '"' → logprob: -9.629694938659668
    4. 'YES' → logprob: -12.879694938659668
    5. ' Yes' → logprob: -13.254694938659668
    6. 'c' → logprob: -13.254694938659668
    7. '   ' → logprob: -13.504694938659668
    8. '"No' → logprob: -14.004694938659668
    9. '“Yes' → logprob: -15.879694938659668
    10. ''' → logprob: -16.00469398498535

Token 1309: '")
' (ID: 1896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.133143350481987
    2. '")
' → logprob: -2.383143424987793
    3. '")' → logprob: -3.633143424987793
    4. '   ' → logprob: -5.258143424987793
    5. '           ' → logprob: -8.133143424987793
    6. ')
' → logprob: -8.508143424987793
    7. ')")
' → logprob: -8.883143424987793
    8. ')' → logprob: -9.133143424987793
    9. ')")' → logprob: -12.383143424987793
    10. '")
' → logprob: -13.258143424987793

Token 1310: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1444173902273178
    2. '       ' → logprob: -2.0194172859191895
    3. 'else' → logprob: -6.8944172859191895
    4. '```' → logprob: -7.2694172859191895
    5. 'continue' → logprob: -11.644417762756348
    6. '
' → logprob: -11.644417762756348
    7. ' else' → logprob: -12.269417762756348
    8. '           ' → logprob: -13.019417762756348
    9. 'elif' → logprob: -13.019417762756348
    10. '    
' → logprob: -13.519417762756348

Token 1311: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37113332748413086
    2. '   ' → logprob: -1.3711333274841309
    3. 'else' → logprob: -3.121133327484131
    4. 'continue' (adapté à ' continue') → logprob: -4.496133327484131
    5. '```' → logprob: -7.371133327484131
    6. 'elif' → logprob: -8.371133804321289
    7. '
' → logprob: -9.746133804321289
    8. ' continue' → logprob: -11.246133804321289
    9. '           ' → logprob: -11.496133804321289
    10. ' else' → logprob: -11.621133804321289

Token 1312: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008903615176677704
    2. '```' → logprob: -4.883903503417969
    3. '
' → logprob: -6.758903503417969
    4. 'from' → logprob: -10.133903503417969
    5. '``' → logprob: -10.258903503417969
    6. '    
' → logprob: -10.633903503417969
    7. 'else' → logprob: -10.883903503417969
    8. 'import' → logprob: -11.758903503417969
    9. 'visited' → logprob: -12.883903503417969
    10. '   ' → logprob: -13.008903503417969

Token 1313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09380687773227692
    2. 'visited' → logprob: -2.8438069820404053
    3. '```' → logprob: -4.218806743621826
    4. 'from' → logprob: -4.468806743621826
    5. 'queue' → logprob: -5.718806743621826
    6. '``' → logprob: -7.968806743621826
    7. 'reachable' → logprob: -8.093807220458984
    8. 'hq' → logprob: -8.343807220458984
    9. 'q' → logprob: -8.468807220458984
    10. 'import' → logprob: -8.593807220458984

Token 1314: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3893042802810669
    2. 'from' → logprob: -1.639304280281067
    3. 'visited' → logprob: -2.1393041610717773
    4. 'import' → logprob: -4.639304161071777
    5. '```' → logprob: -8.139304161071777
    6. '
' → logprob: -8.389304161071777
    7. 'queue' → logprob: -8.639304161071777
    8. '    
' → logprob: -8.889304161071777
    9. 'seen' → logprob: -9.889304161071777
    10. '``' → logprob: -10.389304161071777

Token 1315: ' quick' (ID: 4853)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.17675650119781494
    2. 'visited' → logprob: -1.926756501197815
    3. 'import' → logprob: -4.176756381988525
    4. '   ' → logprob: -7.051756381988525
    5. 'seen' → logprob: -10.051756858825684
    6. '
' → logprob: -10.551756858825684
    7. 'hq' → logprob: -10.551756858825684
    8. '#' → logprob: -10.551756858825684
    9. 'queue' → logprob: -10.926756858825684
    10. '    
' → logprob: -11.051756858825684

Token 1316: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3721049427986145
    2. 'check' → logprob: -1.7471048831939697
    3. 'visit' → logprob: -3.4971048831939697
    4. 'visited' → logprob: -3.8721048831939697
    5. ' if' → logprob: -4.247105121612549
    6. '_check' → logprob: -4.372105121612549
    7. 'from' → logprob: -4.372105121612549
    8. 'search' → logprob: -4.497105121612549
    9. '   ' → logprob: -4.622105121612549
    10. '
' → logprob: -5.247105121612549

Token 1317: ' topo' (ID: 97979)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3246023952960968
    2. '   ' → logprob: -1.3246023654937744
    3. ' if' → logprob: -4.9496026039123535
    4. 'from' → logprob: -5.9496026039123535
    5. 'visited' → logprob: -7.4496026039123535
    6. '```' → logprob: -7.8246026039123535
    7. '    
' → logprob: -8.699602127075195
    8. '
' → logprob: -8.824602127075195
    9. 'top' → logprob: -8.949602127075195
    10. 'import' → logprob: -9.949602127075195

Token 1318: ' order' (ID: 2569)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.43715324997901917
    2. 'visited' → logprob: -1.3121532201766968
    3. 'import' → logprob: -2.6871533393859863
    4. '_order' → logprob: -5.437153339385986
    5. '```' → logprob: -5.687153339385986
    6. '   ' → logprob: -6.187153339385986
    7. 'if' → logprob: -6.187153339385986
    8. 'order' → logprob: -6.312153339385986
    9. '#' → logprob: -7.062153339385986
    10. '
' → logprob: -7.812153339385986

Token 1319: '?' (ID: 30)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5492435097694397
    2. 'visited' → logprob: -1.049243450164795
    3. 'import' → logprob: -2.674243450164795
    4. '#' → logprob: -6.174243450164795
    5. 'top' → logprob: -7.424243450164795
    6. 'queue' → logprob: -8.549243927001953
    7. '   ' → logprob: -8.924243927001953
    8. '
' → logprob: -9.174243927001953
    9. ' from' → logprob: -9.549243927001953
    10. 'stack' → logprob: -9.799243927001953

Token 1320: ' No' (ID: 3004)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.07750657945871353
    2. 'from' → logprob: -2.7025065422058105
    3. 'import' → logprob: -5.3275065422058105
    4. '#' → logprob: -6.2025065422058105
    5. '   ' → logprob: -8.827507019042969
    6. 'vis' → logprob: -9.327507019042969
    7. '
' → logprob: -9.452507019042969
    8. 'seen' → logprob: -9.452507019042969
    9. '```' → logprob: -9.577507019042969
    10. 'def' → logprob: -9.952507019042969

Token 1321: ' pre' (ID: 876)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7688261270523071
    2. 'visited' → logprob: -1.0188261270523071
    3. 'from' → logprob: -1.7688261270523071
    4. 'import' → logprob: -5.893826007843018
    5. '```' → logprob: -6.768826007843018
    6. 'queue' → logprob: -7.643826007843018
    7. '
' → logprob: -9.018826484680176
    8. '``' → logprob: -9.268826484680176
    9. '    
' → logprob: -9.518826484680176
    10. 'q' → logprob: -9.518826484680176

Token 1322: 'computed' (ID: 157929)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.41840577125549316
    2. 'visited' → logprob: -1.4184057712554932
    3. 'from' → logprob: -3.793405771255493
    4. 'd' → logprob: -4.293405532836914
    5. 'computed' → logprob: -4.668405532836914
    6. 'import' → logprob: -4.793405532836914
    7. 'c' → logprob: -5.293405532836914
    8. 'if' → logprob: -5.668405532836914
    9. '[' → logprob: -5.918405532836914
    10. '```' → logprob: -5.918405532836914

Token 1323: ' topo' (ID: 97979)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16034963726997375
    2. 'from' → logprob: -2.4103496074676514
    3. 'visited' → logprob: -2.9103496074676514
    4. 'import' → logprob: -6.0353498458862305
    5. '```' → logprob: -7.0353498458862305
    6. 'queue' → logprob: -8.78534984588623
    7. '    
' → logprob: -9.03534984588623
    8. '
' → logprob: -9.28534984588623
    9. '``' → logprob: -9.53534984588623
    10. 'q' → logprob: -9.53534984588623

Token 1324: ' order' (ID: 2569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0760885551571846
    2. 'from' → logprob: -3.2010886669158936
    3. 'visited' → logprob: -4.2010884284973145
    4. 'import' → logprob: -4.8260884284973145
    5. '
' → logprob: -4.9510884284973145
    6. '```' → logprob: -6.7010884284973145
    7. '    
' → logprob: -7.0760884284973145
    8. 'queue' → logprob: -9.076088905334473
    9. ' from' → logprob: -9.076088905334473
    10. '``' → logprob: -9.826088905334473

Token 1325: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35590696334838867
    2. 'from' → logprob: -1.6059069633483887
    3. 'visited' → logprob: -2.4809069633483887
    4. 'import' → logprob: -4.730906963348389
    5. '```' → logprob: -5.230906963348389
    6. '    
' → logprob: -8.355907440185547
    7. '
' → logprob: -8.480907440185547
    8. '``' → logprob: -8.605907440185547
    9. ' from' → logprob: -9.105907440185547
    10. 'queue' → logprob: -9.980907440185547

Token 1326: ' needed' (ID: 6118)
  Prédit: 'available'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'available' → logprob: -0.4830705225467682
    2. 'None' → logprob: -1.8580704927444458
    3. 'needed' → logprob: -2.1080706119537354
    4. 'not' → logprob: -3.2330706119537354
    5. 'possible' → logprob: -4.233070373535156
    6. 'done' → logprob: -4.483070373535156
    7. ' None' → logprob: -4.983070373535156
    8. ' available' → logprob: -5.483070373535156
    9. 'necessary' → logprob: -5.483070373535156
    10. 'computed' → logprob: -5.608070373535156

Token 1327: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.530480146408081
    2. 'from' → logprob: -1.280480146408081
    3. 'visited' → logprob: -2.030480146408081
    4. '```' → logprob: -6.65548038482666
    5. 'import' → logprob: -7.15548038482666
    6. '
' → logprob: -8.78048038482666
    7. '``' → logprob: -9.40548038482666
    8. '    
' → logprob: -9.90548038482666
    9. 'seen' → logprob: -10.03048038482666
    10. 'queue' → logprob: -10.15548038482666

Token 1328: ' BFS' (ID: 190016)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5622299909591675
    2. 'from' → logprob: -1.5622299909591675
    3. 'visited' → logprob: -1.5622299909591675
    4. 'import' → logprob: -4.812230110168457
    5. '```' → logprob: -6.437230110168457
    6. '
' → logprob: -8.062230110168457
    7. 'queue' → logprob: -8.562230110168457
    8. '``' → logprob: -9.187230110168457
    9. 'found' → logprob: -9.562230110168457
    10. '    
' → logprob: -9.562230110168457

Token 1329: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08607925474643707
    2. 'from' → logprob: -2.5860793590545654
    3. '```' → logprob: -5.836079120635986
    4. 'visited' → logprob: -5.961079120635986
    5. 'q' → logprob: -7.461079120635986
    6. 'queue' → logprob: -7.836079120635986
    7. '
' → logprob: -8.086079597473145
    8. '    
' → logprob: -8.461079597473145
    9. ' from' → logprob: -9.461079597473145
    10. 'que' → logprob: -10.836079597473145

Token 1330: ' fine' (ID: 8975)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05830289050936699
    2. 'from' → logprob: -3.058302879333496
    3. 'visited' → logprob: -4.808302879333496
    4. 'q' → logprob: -7.433302879333496
    5. '```' → logprob: -8.558302879333496
    6. ' from' → logprob: -8.683302879333496
    7. '
' → logprob: -8.808302879333496
    8. 'import' → logprob: -8.933302879333496
    9. 'queue' → logprob: -9.058302879333496
    10. '    
' → logprob: -9.683302879333496

Token 1331: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023678312078118324
    2. 'from' → logprob: -4.023678302764893
    3. 'visited' → logprob: -5.773678302764893
    4. '```' → logprob: -6.148678302764893
    5. 'import' → logprob: -9.02367877960205
    6. '
' → logprob: -9.64867877960205
    7. 'q' → logprob: -10.39867877960205
    8. '    
' → logprob: -10.64867877960205
    9. '``' → logprob: -11.02367877960205
    10. 'queue' → logprob: -12.52367877960205

Token 1332: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008199920994229615
    2. '```' → logprob: -7.875820159912109
    3. 'from' → logprob: -8.00082015991211
    4. 'visited' → logprob: -9.25082015991211
    5. 'import' → logprob: -12.62582015991211
    6. '``' → logprob: -13.75082015991211
    7. '
' → logprob: -14.12582015991211
    8. '    
' → logprob: -14.12582015991211
    9. 'queue' → logprob: -14.25082015991211
    10. 'q' → logprob: -14.25082015991211

Token 1333: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06089663878083229
    2. 'visited' → logprob: -3.310896635055542
    3. 'from' (adapté à ' from') → logprob: -3.810896635055542
    4. '```' → logprob: -8.810896873474121
    5. 'q' → logprob: -9.185896873474121
    6. 'queue' → logprob: -9.310896873474121
    7. 'import' → logprob: -9.810896873474121
    8. '    
' → logprob: -11.060896873474121
    9. ' visited' → logprob: -11.185896873474121
    10. '
' → logprob: -11.310896873474121

Token 1334: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -2.045823566731997e-05
    2. ' collections' → logprob: -10.875020027160645
    3. '   ' → logprob: -15.250020027160645
    4. 'sys' → logprob: -15.500020027160645
    5. '_' → logprob: -15.500020027160645
    6. 'collection' → logprob: -15.625020027160645
    7. '_col' → logprob: -15.625020027160645
    8. '_collection' → logprob: -15.750020027160645
    9. '
' → logprob: -16.25002098083496
    10. '```' → logprob: -16.25002098083496

Token 1335: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.008863095194101334
    2. '
' → logprob: -5.2588629722595215
    3. '```' → logprob: -6.7588629722595215
    4. 'from' → logprob: -7.6338629722595215
    5. 'deque' → logprob: -8.00886344909668
    6. 'ounter' → logprob: -8.38386344909668
    7. 'abc' → logprob: -8.50886344909668
    8. '.Counter' → logprob: -8.50886344909668
    9. ' import' → logprob: -8.63386344909668
    10. 'Counter' → logprob: -8.88386344909668

Token 1336: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0486801378428936
    2. 'collections' → logprob: -3.048680067062378
    3. ' deque' → logprob: -9.923680305480957
    4. '
' → logprob: -10.923680305480957
    5. '```' → logprob: -11.298680305480957
    6. 'queue' → logprob: -11.798680305480957
    7. 'import' → logprob: -12.798680305480957
    8. '   ' → logprob: -13.673680305480957
    9. 'de' → logprob: -14.423680305480957
    10. '`' → logprob: -14.673680305480957

Token 1337: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020353375002741814
    2. '
' → logprob: -4.520353317260742
    3. 'queue' → logprob: -5.020353317260742
    4. '    
' → logprob: -6.770353317260742
    5. 'q' → logprob: -7.395353317260742
    6. '```' → logprob: -8.145353317260742
    7. ' queue' → logprob: -8.645353317260742
    8. 'visited' → logprob: -9.020353317260742
    9. 'que' → logprob: -9.145353317260742
    10. 'deque' → logprob: -9.520353317260742

Token 1338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0064863343723118305
    2. 'queue' → logprob: -5.506486415863037
    3. '
' → logprob: -6.631486415863037
    4. '    
' → logprob: -7.756486415863037
    5. '```' → logprob: -8.381485939025879
    6. 'q' → logprob: -8.631485939025879
    7. 'visited' → logprob: -9.006485939025879
    8. 'deque' → logprob: -10.131485939025879
    9. 'dq' → logprob: -10.506485939025879
    10. 'que' → logprob: -10.631485939025879

Token 1339: ' q' (ID: 2335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32144394516944885
    2. 'queue' → logprob: -1.8214439153671265
    3. 'visited' → logprob: -2.571444034576416
    4. 'q' (adapté à ' q') → logprob: -3.571444034576416
    5. 'que' → logprob: -5.446444034576416
    6. 'dq' → logprob: -6.196444034576416
    7. '```' → logprob: -6.696444034576416
    8. '
' → logprob: -7.946444034576416
    9. 'deque' → logprob: -8.071443557739258
    10. '    
' → logprob: -8.696443557739258

Token 1340: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.078912153840065
    2. '=' → logprob: -2.5789122581481934
    3. '=[]' → logprob: -11.328911781311035
    4. '.append' → logprob: -13.328911781311035
    5. '=q' → logprob: -13.453911781311035
    6. '   ' → logprob: -13.453911781311035
    7. '=[]
' → logprob: -13.703911781311035
    8. '=[' → logprob: -14.578911781311035
    9. ' ' → logprob: -14.828911781311035
    10. '=True' → logprob: -14.953911781311035

Token 1341: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -4.644463479053229e-05
    2. ' deque' → logprob: -10.000046730041504
    3. 'collections' → logprob: -14.250046730041504
    4. 'Deque' → logprob: -15.875046730041504
    5. '```' → logprob: -16.250045776367188
    6. '   ' → logprob: -17.250045776367188
    7. 'de' → logprob: -19.750045776367188
    8. '=' → logprob: -20.750045776367188
    9. '
' → logprob: -20.875045776367188
    10. 'queue' → logprob: -21.375045776367188

Token 1342: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.005111964885145426
    2. '([(' → logprob: -5.880112171173096
    3. '()
' → logprob: -7.130112171173096
    4. '[(' → logprob: -7.380112171173096
    5. '[c' → logprob: -8.380111694335938
    6. '[' → logprob: -8.380111694335938
    7. '()' → logprob: -8.755111694335938
    8. '[q' → logprob: -8.880111694335938
    9. '[u' → logprob: -9.130111694335938
    10. '[d' → logprob: -11.505111694335938

Token 1343: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00021486106561496854
    2. '[c' → logprob: -8.500214576721191
    3. ' c' → logprob: -12.000214576721191
    4. '   ' → logprob: -12.500214576721191
    5. ')c' → logprob: -13.625214576721191
    6. '(c' → logprob: -16.375215530395508
    7. '	c' → logprob: -16.375215530395508
    8. '[' → logprob: -16.875215530395508
    9. ' [' → logprob: -18.000215530395508
    10. '```' → logprob: -18.875215530395508

Token 1344: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.20142902433872223
    2. '])
' → logprob: -1.701429009437561
    3. '   ' → logprob: -11.82642936706543
    4. ')
' → logprob: -12.95142936706543
    5. ')' → logprob: -13.32642936706543
    6. '])
' → logprob: -13.45142936706543
    7. '])

' → logprob: -13.70142936706543
    8. '```' → logprob: -15.20142936706543
    9. ''])' → logprob: -15.70142936706543
    10. ']);' → logprob: -15.70142936706543

Token 1345: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31334057450294495
    2. 'visited' → logprob: -1.3133405447006226
    3. '```' → logprob: -10.438340187072754
    4. 'seen' → logprob: -10.813340187072754
    5. '	' → logprob: -10.938340187072754
    6. ' visited' → logprob: -12.313340187072754
    7. '       ' → logprob: -12.563340187072754
    8. 'vis' → logprob: -13.938340187072754
    9. '   ' → logprob: -13.938340187072754
    10. '``' → logprob: -14.688340187072754

Token 1346: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.006850115954875946
    2. '   ' → logprob: -5.006850242614746
    3. 'seen' → logprob: -9.631850242614746
    4. ' visited' → logprob: -9.756850242614746
    5. '```' → logprob: -12.006850242614746
    6. 'reachable' → logprob: -13.756850242614746
    7. '       ' → logprob: -14.131850242614746
    8. 'vis' → logprob: -14.506850242614746
    9. '
' → logprob: -14.506850242614746
    10. 'dist' → logprob: -14.631850242614746

Token 1347: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005053721833974123
    2. ' =' → logprob: -5.380053520202637
    3. '=set' → logprob: -7.755053520202637
    4. '={' → logprob: -13.005053520202637
    5. '.add' → logprob: -14.005053520202637
    6. '[' → logprob: -14.755053520202637
    7. '   ' → logprob: -14.880053520202637
    8. '=
' → logprob: -15.130053520202637
    9. '```' → logprob: -15.880053520202637
    10. '{' → logprob: -15.880053520202637

Token 1348: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.04359599947929382
    2. 'set' → logprob: -3.543596029281616
    3. '[' → logprob: -4.293595790863037
    4. ' set' → logprob: -9.668596267700195
    5. ' {' → logprob: -11.418596267700195
    6. ' [' → logprob: -11.793596267700195
    7. '(set' → logprob: -12.418596267700195
    8. '   ' → logprob: -12.793596267700195
    9. '[S' → logprob: -12.793596267700195
    10. '=set' → logprob: -13.168596267700195

Token 1349: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.822646693966817e-06
    2. ' False' → logprob: -12.125007629394531
    3. '0' → logprob: -13.500007629394531
    4. '(False' → logprob: -14.250007629394531
    5. 'S' → logprob: -15.250007629394531
    6. '[' → logprob: -16.12500762939453
    7. '   ' → logprob: -16.87500762939453
    8. '[S' → logprob: -17.62500762939453
    9. '
' → logprob: -19.12500762939453
    10. '=False' → logprob: -19.12500762939453

Token 1350: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1315833181142807
    2. ']*(' → logprob: -2.5065832138061523
    3. '(S' → logprob: -3.6315832138061523
    4. ']+' → logprob: -5.631583213806152
    5. ']*' → logprob: -6.131583213806152
    6. '*(' → logprob: -6.131583213806152
    7. '[S' → logprob: -6.381583213806152
    8. '(' → logprob: -6.381583213806152
    9. '   ' → logprob: -6.756583213806152
    10. '[' → logprob: -7.131583213806152

Token 1351: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -4.723352049040841e-06
    2. '(S' → logprob: -12.875004768371582
    3. ' S' → logprob: -13.125004768371582
    4. '   ' → logprob: -16.000003814697266
    5. '
' → logprob: -17.250003814697266
    6. ' ' → logprob: -19.000003814697266
    7. '	S' → logprob: -19.750003814697266
    8. '(' → logprob: -20.125003814697266
    9. 'len' → logprob: -20.375003814697266
    10. ')' → logprob: -20.375003814697266

Token 1352: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.41866585687967e-06
    2. ' +' → logprob: -11.750008583068848
    3. '+
' → logprob: -14.750008583068848
    4. '```' → logprob: -16.50000762939453
    5. '1' → logprob: -18.50000762939453
    6. '＋' → logprob: -18.62500762939453
    7. '[' → logprob: -18.75000762939453
    8. '
' → logprob: -19.00000762939453
    9. '+B' → logprob: -19.25000762939453
    10. '+[' → logprob: -19.37500762939453

Token 1353: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014716439181938767
    2. '+' → logprob: -8.875146865844727
    3. '```' → logprob: -13.125146865844727
    4. '2' → logprob: -13.250146865844727
    5. '10' → logprob: -13.875146865844727
    6. '   ' → logprob: -14.125146865844727
    7. '``' → logprob: -14.500146865844727
    8. '
' → logprob: -15.000146865844727
    9. '11' → logprob: -15.250146865844727
    10. ' ' → logprob: -16.125146865844727

Token 1354: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05531720072031021
    2. ')' → logprob: -2.9303171634674072
    3. '   ' → logprob: -7.805317401885986
    4. ')
' → logprob: -11.680316925048828
    5. ')

' → logprob: -12.430316925048828
    6. ')]' → logprob: -13.305316925048828
    7. '
' → logprob: -13.430316925048828
    8. '[' → logprob: -13.555316925048828
    9. ']
' → logprob: -13.555316925048828
    10. 'True' → logprob: -13.555316925048828

Token 1355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5363170504570007
    2. 'visited' → logprob: -0.9113170504570007
    3. ' visited' → logprob: -5.161316871643066
    4. '	' → logprob: -5.536316871643066
    5. 'True' → logprob: -6.536316871643066
    6. '```' → logprob: -7.161316871643066
    7. '
' → logprob: -7.286316871643066
    8. '\t' → logprob: -8.411316871643066
    9. '    ' → logprob: -9.286316871643066
    10. ' True' → logprob: -10.286316871643066

Token 1356: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.008435378782451153
    2. '   ' → logprob: -4.883435249328613
    3. 'True' → logprob: -7.258435249328613
    4. ' visited' → logprob: -10.008435249328613
    5. '```' → logprob: -10.133435249328613
    6. '	' → logprob: -11.008435249328613
    7. '
' → logprob: -11.508435249328613
    8. '\t' → logprob: -12.383435249328613
    9. '       ' → logprob: -13.133435249328613
    10. '    
' → logprob: -13.258435249328613

Token 1357: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0002319071936653927
    2. '[q' → logprob: -9.000231742858887
    3. '[' → logprob: -9.250231742858887
    4. '[u' → logprob: -12.875231742858887
    5. '=' → logprob: -13.125231742858887
    6. 'c' → logprob: -13.500231742858887
    7. '```' → logprob: -13.500231742858887
    8. '=True' → logprob: -13.625231742858887
    9. '   ' → logprob: -13.875231742858887
    10. '=c' → logprob: -14.125231742858887

Token 1358: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3984173834323883
    2. '=' → logprob: -1.898417353630066
    3. '=True' → logprob: -1.898417353630066
    4. ']=' → logprob: -3.8984174728393555
    5. ')' → logprob: -5.6484174728393555
    6. ' =' → logprob: -5.8984174728393555
    7. 'True' → logprob: -6.2734174728393555
    8. '[' → logprob: -8.648417472839355
    9. '=False' → logprob: -9.148417472839355
    10. '   ' → logprob: -9.273417472839355

Token 1359: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0001239196863025427
    2. '=True' → logprob: -9.125123977661133
    3. ' =' → logprob: -11.125123977661133
    4. '=
' → logprob: -15.750123977661133
    5. '=False' → logprob: -17.375123977661133
    6. ']=' → logprob: -18.875123977661133
    7. 'True' → logprob: -18.875123977661133
    8. ')=' → logprob: -19.750123977661133
    9. '=true' → logprob: -20.125123977661133
    10. '   ' → logprob: -20.750123977661133

Token 1360: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.7697225252486533e-06
    2. ' True' → logprob: -12.500003814697266
    3. '(True' → logprob: -18.625003814697266
    4. '=True' → logprob: -20.375003814697266
    5. '   ' → logprob: -20.500003814697266
    6. '1' → logprob: -21.750003814697266
    7. '[' → logprob: -21.875003814697266
    8. '
' → logprob: -22.500003814697266
    9. 'False' → logprob: -22.875003814697266
    10. 'Yes' → logprob: -23.375003814697266

Token 1361: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1394731104373932
    2. 'while' → logprob: -2.3894731998443604
    3. '	while' → logprob: -3.5144731998443604
    4. ' while' → logprob: -5.014472961425781
    5. '
' → logprob: -6.639472961425781
    6. '```' → logprob: -7.514472961425781
    7. ')' → logprob: -9.639472961425781
    8. '    
' → logprob: -9.764472961425781
    9. '<|end|>' → logprob: -10.639472961425781
    10. 'While' → logprob: -11.264472961425781

Token 1362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5787245035171509
    2. 'while' → logprob: -0.8287245035171509
    3. ' while' → logprob: -6.453724384307861
    4. '	while' → logprob: -7.078724384307861
    5. '
' → logprob: -8.32872486114502
    6. '```' → logprob: -9.07872486114502
    7. '    
' → logprob: -12.57872486114502
    8. 'While' → logprob: -13.32872486114502
    9. '       ' → logprob: -13.45372486114502
    10. '``' → logprob: -14.20372486114502

Token 1363: ' found' (ID: 2491)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.010544619522988796
    2. '   ' → logprob: -5.010544776916504
    3. ' while' → logprob: -6.010544776916504
    4. '	while' → logprob: -6.635544776916504
    5. '```' → logprob: -10.010544776916504
    6. 'found' (adapté à ' found') → logprob: -12.385544776916504
    7. '    
' → logprob: -13.010544776916504
    8. '
' → logprob: -13.010544776916504
    9. 'While' → logprob: -13.760544776916504
    10. '``' → logprob: -14.135544776916504

Token 1364: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2112012356519699
    2. ' =' → logprob: -1.8362011909484863
    3. '=False' → logprob: -4.086201190948486
    4. '=True' → logprob: -4.336201190948486
    5. '<|end|>' → logprob: -6.961201190948486
    6. '   ' → logprob: -10.336201667785645
    7. '<|end|>' → logprob: -10.711201667785645
    8. '
' → logprob: -10.961201667785645
    9. '=
' → logprob: -11.711201667785645
    10. '```' → logprob: -11.836201667785645

Token 1365: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.001502598519437015
    2. ' False' → logprob: -6.501502513885498
    3. 'True' → logprob: -15.751502990722656
    4. '   ' → logprob: -16.626502990722656
    5. '(False' → logprob: -20.501502990722656
    6. '
' → logprob: -20.626502990722656
    7. '=False' → logprob: -20.751502990722656
    8. ' True' → logprob: -22.126502990722656
    9. '```' → logprob: -22.751502990722656
    10. 'false' → logprob: -23.376502990722656

Token 1366: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025129618123173714
    2. '
' → logprob: -4.400129795074463
    3. 'while' → logprob: -5.025129795074463
    4. ' while' → logprob: -5.525129795074463
    5. '	while' → logprob: -6.900129795074463
    6. '```' → logprob: -7.525129795074463
    7. '    
' → logprob: -8.025129318237305
    8. '  
' → logprob: -10.150129318237305
    9. '<|end|>' → logprob: -10.775129318237305
    10. 'While' → logprob: -11.775129318237305

Token 1367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16160143911838531
    2. '	while' → logprob: -2.0366015434265137
    3. 'while' → logprob: -4.661601543426514
    4. ' while' → logprob: -5.411601543426514
    5. '```' → logprob: -5.661601543426514
    6. '
' → logprob: -6.911601543426514
    7. '    
' → logprob: -8.536601066589355
    8. '	
' → logprob: -10.161601066589355
    9. '       ' → logprob: -10.161601066589355
    10. '   ' → logprob: -11.036601066589355

Token 1368: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.11761010438203812
    2. '   ' → logprob: -2.617610216140747
    3. '	while' → logprob: -3.867610216140747
    4. ' while' → logprob: -4.117609977722168
    5. '```' → logprob: -7.492609977722168
    6. '
' → logprob: -8.492609977722168
    7. '    
' → logprob: -11.117609977722168
    8. '``' → logprob: -12.117609977722168
    9. '	
' → logprob: -13.242609977722168
    10. '       ' → logprob: -14.117609977722168

Token 1369: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.10941760987043381
    2. 'hq' → logprob: -2.859417676925659
    3. 'q' → logprob: -3.109417676925659
    4. 'len' → logprob: -6.60941743850708
    5. 'True' → logprob: -9.109417915344238
    6. '   ' → logprob: -9.609417915344238
    7. 'qh' → logprob: -10.109417915344238
    8. '	q' → logprob: -10.484417915344238
    9. ' len' → logprob: -10.609417915344238
    10. '(q' → logprob: -10.859417915344238

Token 1370: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.007510791532695293
    2. ':' → logprob: -5.007510662078857
    3. '.p' → logprob: -7.882510662078857
    4. '   ' → logprob: -8.882511138916016
    5. '.append' → logprob: -8.882511138916016
    6. '```' → logprob: -9.257511138916016
    7. '):
' → logprob: -11.257511138916016
    8. '.extend' → logprob: -11.382511138916016
    9. '.pop' → logprob: -12.882511138916016
    10. 'and' → logprob: -13.007511138916016

Token 1371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031310971826314926
    2. 'u' → logprob: -4.03131103515625
    3. ' u' → logprob: -4.40631103515625
    4. '(u' → logprob: -8.03131103515625
    5. '```' → logprob: -8.40631103515625
    6. 'v' → logprob: -8.90631103515625
    7. ' v' → logprob: -9.78131103515625
    8. '   ' → logprob: -11.03131103515625
    9. 'q' → logprob: -11.15631103515625
    10. '`' → logprob: -11.40631103515625

Token 1372: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' (adapté à ' u') → logprob: -0.0015320050297304988
    2. '   ' → logprob: -6.876532077789307
    3. ' u' → logprob: -7.751532077789307
    4. '	u' → logprob: -10.626531600952148
    5. 'node' → logprob: -10.876531600952148
    6. '       ' → logprob: -11.001531600952148
    7. '```' → logprob: -12.376531600952148
    8. 'v' → logprob: -12.876531600952148
    9. 'x' → logprob: -14.376531600952148
    10. 'cur' → logprob: -14.626531600952148

Token 1373: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3182004690170288
    2. ' =' → logprob: -1.3182004690170288
    3. '=q' → logprob: -5.318200588226318
    4. '=u' → logprob: -11.31820011138916
    5. '=p' → logprob: -12.56820011138916
    6. '=
' → logprob: -13.19320011138916
    7. '=int' → logprob: -13.19320011138916
    8. 'q' → logprob: -13.69320011138916
    9. '```' → logprob: -14.56820011138916
    10. ' =
' → logprob: -14.94320011138916

Token 1374: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.004078639671206474
    2. ' q' → logprob: -5.5040788650512695
    3. 'queue' → logprob: -16.629077911376953
    4. '	q' → logprob: -16.629077911376953
    5. '.q' → logprob: -18.879077911376953
    6. '```' → logprob: -18.879077911376953
    7. '=q' → logprob: -19.129077911376953
    8. '   ' → logprob: -19.254077911376953
    9. '*q' → logprob: -19.379077911376953
    10. 'qid' → logprob: -19.879077911376953

Token 1375: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -6.873571692267433e-05
    2. '.pop' → logprob: -10.000068664550781
    3. '=' → logprob: -11.625068664550781
    4. '.' → logprob: -11.750068664550781
    5. '.append' → logprob: -12.375068664550781
    6. '   ' → logprob: -14.750068664550781
    7. '.=' → logprob: -14.875068664550781
    8. ' .' → logprob: -14.875068664550781
    9. '```' → logprob: -16.12506866455078
    10. '.dequeue' → logprob: -16.25006866455078

Token 1376: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.029763683676719666
    2. 'op' → logprob: -3.529763698577881
    3. '```' → logprob: -12.529763221740723
    4. 'ople' → logprob: -12.654763221740723
    5. 'opl' → logprob: -13.154763221740723
    6. 'p' → logprob: -13.529763221740723
    7. 'append' → logprob: -13.779763221740723
    8. '   ' → logprob: -14.654763221740723
    9. 'opped' → logprob: -15.279763221740723
    10. 'opping' → logprob: -15.404763221740723

Token 1377: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005866340361535549
    2. '
' → logprob: -5.755866527557373
    3. '<|end|>' → logprob: -6.630866527557373
    4. ':
' → logprob: -7.755866527557373
    5. '           ' → logprob: -8.255866050720215
    6. '        
' → logprob: -9.005866050720215
    7. '```' → logprob: -9.255866050720215
    8. '):
' → logprob: -9.505866050720215
    9. 'for' → logprob: -9.755866050720215
    10. ')
' → logprob: -9.880866050720215

Token 1378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003178273618686944
    2. '           ' → logprob: -8.625317573547363
    3. 'if' → logprob: -9.625317573547363
    4. 'for' → logprob: -10.250317573547363
    5. '```' → logprob: -11.625317573547363
    6. ' for' → logprob: -11.875317573547363
    7. '	' → logprob: -12.125317573547363
    8. '   ' → logprob: -12.500317573547363
    9. '	       ' → logprob: -12.750317573547363
    10. '               ' → logprob: -12.875317573547363

Token 1379: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07911515980958939
    2. 'for' → logprob: -2.579115152359009
    3. '       ' → logprob: -9.07911491394043
    4. '           ' → logprob: -9.45411491394043
    5. ' if' → logprob: -10.70411491394043
    6. '   ' → logprob: -11.95411491394043
    7. ' for' → logprob: -13.20411491394043
    8. '```' → logprob: -13.20411491394043
    9. 'If' → logprob: -15.32911491394043
    10. '	if' → logprob: -16.32911491394043

Token 1380: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.011048170737922192
    2. ' u' → logprob: -4.511048316955566
    3. 'd' → logprob: -16.51104736328125
    4. '	u' → logprob: -16.88604736328125
    5. '   ' → logprob: -17.76104736328125
    6. '           ' → logprob: -18.13604736328125
    7. '==' → logprob: -18.38604736328125
    8. '    ' → logprob: -18.88604736328125
    9. '       ' → logprob: -19.01104736328125
    10. ' ' → logprob: -19.13604736328125

Token 1381: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02978045865893364
    2. ' ==' → logprob: -3.529780387878418
    3. '==
' → logprob: -10.529780387878418
    4. ')==' → logprob: -13.654780387878418
    5. '=' → logprob: -14.279780387878418
    6. ']==' → logprob: -14.404780387878418
    7. '===' → logprob: -14.904780387878418
    8. '()==' → logprob: -15.654780387878418
    9. '```' → logprob: -16.029781341552734
    10. '==(' → logprob: -16.404781341552734

Token 1382: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.339278580620885e-06
    2. ' d' → logprob: -13.000001907348633
    3. '   ' → logprob: -18.250001907348633
    4. '```' → logprob: -19.625001907348633
    5. '
' → logprob: -20.375001907348633
    6. '	d' → logprob: -20.500001907348633
    7. '       ' → logprob: -21.000001907348633
    8. '           ' → logprob: -21.250001907348633
    9. '     ' → logprob: -22.250001907348633
    10. '`' → logprob: -22.375001907348633

Token 1383: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05372484773397446
    2. ':' → logprob: -3.303724765777588
    3. '           ' → logprob: -4.178724765777588
    4. '):
' → logprob: -8.428725242614746
    5. '       ' → logprob: -12.178725242614746
    6. '():
' → logprob: -12.678725242614746
    7. '):' → logprob: -12.803725242614746
    8. '               ' → logprob: -12.928725242614746
    9. '<|end|>' → logprob: -12.928725242614746
    10. '```' → logprob: -13.553725242614746

Token 1384: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.8312570318812504e-05
    2. '               ' → logprob: -11.500018119812012
    3. 'print' → logprob: -13.250018119812012
    4. '		' → logprob: -13.375018119812012
    5. '                   ' → logprob: -13.750018119812012
    6. '```' → logprob: -13.875018119812012
    7. 'break' → logprob: -13.875018119812012
    8. '       ' → logprob: -14.375018119812012
    9. ':
' → logprob: -14.875018119812012
    10. '
' → logprob: -15.750018119812012

Token 1385: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.0009433844243176281
    2. 'print' → logprob: -7.000943183898926
    3. '           ' → logprob: -11.375943183898926
    4. '```' → logprob: -11.500943183898926
    5. ' found' → logprob: -11.875943183898926
    6. 'break' → logprob: -13.875943183898926
    7. 'Found' → logprob: -14.000943183898926
    8. '
' → logprob: -14.500943183898926
    9. '       ' → logprob: -14.875943183898926
    10. '(found' → logprob: -15.125943183898926

Token 1386: ' =' (ID: 314)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.4834204912185669
    2. '=' → logprob: -0.9834204912185669
    3. ' =' → logprob: -4.733420372009277
    4. '               ' → logprob: -9.108420372009277
    5. '<|end|>' → logprob: -9.108420372009277
    6. '           ' → logprob: -9.608420372009277
    7. '=False' → logprob: -9.858420372009277
    8. '       ' → logprob: -10.483420372009277
    9. '=
' → logprob: -10.483420372009277
    10. '=true' → logprob: -10.733420372009277

Token 1387: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -5.512236498361744e-07
    2. ' True' → logprob: -14.500000953674316
    3. '=True' → logprob: -18.625
    4. '   ' → logprob: -19.0
    5. '(True' → logprob: -19.375
    6. 'true' → logprob: -19.75
    7. '           ' → logprob: -20.5
    8. '
' → logprob: -20.5
    9. '       ' → logprob: -21.25
    10. 'Yes' → logprob: -22.0

Token 1388: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014525714504998177
    2. '               ' → logprob: -8.875144958496094
    3. '		' → logprob: -12.875144958496094
    4. '                   ' → logprob: -14.000144958496094
    5. '       ' → logprob: -14.250144958496094
    6. '
' → logprob: -14.375144958496094
    7. ':
' → logprob: -15.500144958496094
    8. '```' → logprob: -16.000144958496094
    9. 'break' → logprob: -16.375144958496094
    10. ',' → logprob: -16.625144958496094

Token 1389: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001358400477329269
    2. '               ' → logprob: -9.00013542175293
    3. '       ' → logprob: -12.00013542175293
    4. '                   ' → logprob: -12.75013542175293
    5. '
' → logprob: -13.62513542175293
    6. '		' → logprob: -14.00013542175293
    7. '                       ' → logprob: -15.00013542175293
    8. '```' → logprob: -15.12513542175293
    9. '   ' → logprob: -15.62513542175293
    10. 'break' → logprob: -15.62513542175293

Token 1390: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38801369071006775
    2. 'break' (adapté à ' break') → logprob: -1.1380137205123901
    3. '		' → logprob: -7.76301383972168
    4. ' break' → logprob: -8.26301383972168
    5. '               ' → logprob: -8.38801383972168
    6. '
' → logprob: -8.88801383972168
    7. '	break' → logprob: -10.13801383972168
    8. '```' → logprob: -10.76301383972168
    9. '       ' → logprob: -11.13801383972168
    10. '                   ' → logprob: -11.26301383972168

Token 1391: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015181333583313972
    2. '   ' → logprob: -9.000151634216309
    3. '           ' → logprob: -11.375151634216309
    4. '
' → logprob: -11.750151634216309
    5. 'for' → logprob: -12.250151634216309
    6. '```' → logprob: -13.500151634216309
    7. ' for' → logprob: -14.000151634216309
    8. '               ' → logprob: -14.500151634216309
    9. '	' → logprob: -14.625151634216309
    10. '<|end|>' → logprob: -15.375151634216309

Token 1392: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00258636218495667
    2. '   ' → logprob: -6.127586364746094
    3. '```' → logprob: -7.877586364746094
    4. '           ' → logprob: -11.002586364746094
    5. 'for' → logprob: -13.252586364746094
    6. '               ' → logprob: -14.002586364746094
    7. '<|end|>' → logprob: -14.252586364746094
    8. '``' → logprob: -14.502586364746094
    9. '
' → logprob: -14.627586364746094
    10. ' for' → logprob: -15.002586364746094

Token 1393: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02181336097419262
    2. '       ' → logprob: -4.02181339263916
    3. ' for' → logprob: -6.02181339263916
    4. '   ' → logprob: -6.77181339263916
    5. '```' → logprob: -9.77181339263916
    6. '           ' → logprob: -11.02181339263916
    7. '	for' → logprob: -11.39681339263916
    8. '
' → logprob: -14.77181339263916
    9. '``' → logprob: -15.39681339263916
    10. '               ' → logprob: -15.52181339263916

Token 1394: ' nx' (ID: 50118)
  Prédit: 'nv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nv' → logprob: -0.8920235633850098
    2. 'nx' → logprob: -0.8920235633850098
    3. 'w' → logprob: -1.8920235633850098
    4. 'v' → logprob: -4.39202356338501
    5. ' nxt' → logprob: -4.51702356338501
    6. 'n' → logprob: -5.51702356338501
    7. 'vv' → logprob: -7.51702356338501
    8. ' nv' → logprob: -7.76702356338501
    9. 'x' → logprob: -7.76702356338501
    10. ' w' → logprob: -8.142023086547852

Token 1395: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3133101463317871
    2. 'in' → logprob: -1.313310146331787
    3. 'n' → logprob: -10.313310623168945
    4. '	in' → logprob: -12.188310623168945
    5. 'v' → logprob: -13.188310623168945
    6. 'inx' → logprob: -13.688310623168945
    7. 'e' → logprob: -13.938310623168945
    8. '```' → logprob: -14.188310623168945
    9. 's' → logprob: -14.313310623168945
    10. '_in' → logprob: -14.313310623168945

Token 1396: ' dag' (ID: 8724)
  Prédit: 'dag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dag' → logprob: -0.000158842682139948
    2. ' dag' → logprob: -8.75015926361084
    3. 'd' → logprob: -16.875158309936523
    4. '```' → logprob: -17.000158309936523
    5. 'graph' → logprob: -17.125158309936523
    6. 'dal' → logprob: -17.375158309936523
    7. 'dar' → logprob: -17.750158309936523
    8. 'dak' → logprob: -17.875158309936523
    9. 'da' → logprob: -18.125158309936523
    10. 'dang' → logprob: -18.125158309936523

Token 1397: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.005234475247561932
    2. 'u' → logprob: -5.255234241485596
    3. '[
' → logprob: -15.255234718322754
    4. '[' → logprob: -15.630234718322754
    5. '	u' → logprob: -16.380233764648438
    6. ' u' → logprob: -16.880233764648438
    7. '(u' → logprob: -17.005233764648438
    8. '   ' → logprob: -18.255233764648438
    9. '[n' → logprob: -18.380233764648438
    10. '```' → logprob: -18.380233764648438

Token 1398: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.37421607971191406
    2. '):
' → logprob: -1.499216079711914
    3. ':
' → logprob: -2.749216079711914
    4. ':' → logprob: -4.249216079711914
    5. '           ' → logprob: -5.624216079711914
    6. ']:' → logprob: -5.749216079711914
    7. '       ' → logprob: -6.499216079711914
    8. ']):
' → logprob: -7.374216079711914
    9. '():
' → logprob: -8.124216079711914
    10. '):' → logprob: -8.249216079711914

Token 1399: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.182190554682165e-05
    2. '	       ' → logprob: -10.500061988830566
    3. ' if' → logprob: -11.750061988830566
    4. '               ' → logprob: -11.750061988830566
    5. '		' → logprob: -12.250061988830566
    6. '```' → logprob: -12.250061988830566
    7. 'q' → logprob: -13.375061988830566
    8. 'if' → logprob: -13.500061988830566
    9. '    	   ' → logprob: -13.750061988830566
    10. '		   ' → logprob: -13.875061988830566

Token 1400: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36563119292259216
    2. ' if' → logprob: -1.3656312227249146
    3. 'if' (adapté à ' if') → logprob: -3.365631103515625
    4. '           ' → logprob: -4.115631103515625
    5. '```' → logprob: -10.115631103515625
    6. '                   ' → logprob: -10.365631103515625
    7. '	           ' → logprob: -10.615631103515625
    8. '            ' → logprob: -10.865631103515625
    9. '
' → logprob: -11.365631103515625
    10. ' 
' → logprob: -11.990631103515625

Token 1401: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6931508183479309
    2. 'not' → logprob: -0.6931508183479309
    3. 'visited' → logprob: -13.568150520324707
    4. '           ' → logprob: -14.068150520324707
    5. '(not' → logprob: -14.443150520324707
    6. '!' → logprob: -14.818150520324707
    7. ' ' → logprob: -15.693150520324707
    8. '
' → logprob: -16.068151473999023
    9. ' visited' → logprob: -16.443151473999023
    10. '            
' → logprob: -16.818151473999023

Token 1402: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -2.15310683415737e-05
    2. ' visited' → logprob: -10.750021934509277
    3. '   ' → logprob: -22.25002098083496
    4. 'visible' → logprob: -22.87502098083496
    5. '```' → logprob: -22.87502098083496
    6. '
' → logprob: -23.37502098083496
    7. 'seen' → logprob: -23.87502098083496
    8. '           ' → logprob: -24.00002098083496
    9. 'Visited' → logprob: -24.50002098083496
    10. '       ' → logprob: -25.62502098083496

Token 1403: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -3.79811754100956e-05
    2. '[' → logprob: -11.125038146972656
    3. ' [' → logprob: -12.125038146972656
    4. '[
' → logprob: -12.250038146972656
    5. '   ' → logprob: -12.500038146972656
    6. '(nx' → logprob: -12.750038146972656
    7. '
' → logprob: -12.875038146972656
    8. '           ' → logprob: -14.000038146972656
    9. 'nx' → logprob: -14.500038146972656
    10. '                   ' → logprob: -14.625038146972656

Token 1404: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.4881879400927573e-05
    2. '[n' → logprob: -10.875035285949707
    3. 'nx' → logprob: -11.250035285949707
    4. '[x' → logprob: -13.250035285949707
    5. '(nx' → logprob: -13.875035285949707
    6. '```' → logprob: -16.75003433227539
    7. ' nx' → logprob: -17.37503433227539
    8. '
' → logprob: -17.62503433227539
    9. 'xn' → logprob: -18.00003433227539
    10. 'ex' → logprob: -18.12503433227539

Token 1405: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.2565303444862366
    2. '[n' → logprob: -2.256530284881592
    3. ':
' → logprob: -2.381530284881592
    4. '           ' → logprob: -4.631530284881592
    5. '               ' → logprob: -4.881530284881592
    6. '):
' → logprob: -5.506530284881592
    7. '                   ' → logprob: -6.256530284881592
    8. '       ' → logprob: -6.881530284881592
    9. '(nx' → logprob: -7.381530284881592
    10. '():
' → logprob: -7.756530284881592

Token 1406: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013982143718749285
    2. ' visited' → logprob: -7.001398086547852
    3. '                   ' → logprob: -9.001398086547852
    4. 'visited' → logprob: -9.126398086547852
    5. '```' → logprob: -9.251398086547852
    6. '           ' → logprob: -9.626398086547852
    7. '                       ' → logprob: -11.126398086547852
    8. ' True' → logprob: -11.126398086547852
    9. '                               ' → logprob: -11.126398086547852
    10. '=True' → logprob: -11.251398086547852

Token 1407: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.1283663958311081
    2. ' visited' → logprob: -2.128366470336914
    3. '               ' → logprob: -6.753366470336914
    4. '                   ' → logprob: -8.253366470336914
    5. '```' → logprob: -12.503366470336914
    6. '                       ' → logprob: -13.503366470336914
    7. ' 
' → logprob: -13.753366470336914
    8. '                ' → logprob: -14.128366470336914
    9. '   ' → logprob: -14.503366470336914
    10. '                               ' → logprob: -14.628366470336914

Token 1408: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.00014489953173324466
    2. '```' → logprob: -10.000144958496094
    3. '
' → logprob: -10.125144958496094
    4. '[' → logprob: -11.000144958496094
    5. '   ' → logprob: -11.875144958496094
    6. '[
' → logprob: -12.000144958496094
    7. '           ' → logprob: -12.375144958496094
    8. '               ' → logprob: -12.375144958496094
    9. '                   ' → logprob: -12.375144958496094
    10. '       ' → logprob: -12.500144958496094

Token 1409: 'x' (ID: 87)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.026974255219101906
    2. '[n' → logprob: -3.6519742012023926
    3. 'x' → logprob: -7.901974201202393
    4. '(nx' → logprob: -8.90197467803955
    5. ' nx' → logprob: -9.40197467803955
    6. 'n' → logprob: -10.27697467803955
    7. '
' → logprob: -10.77697467803955
    8. '```' → logprob: -11.27697467803955
    9. 'xn' → logprob: -12.40197467803955
    10. '                   ' → logprob: -13.15197467803955

Token 1410: ']' (ID: 60)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.004715991672128439
    2. '=' → logprob: -6.129715919494629
    3. '
' → logprob: -7.129715919494629
    4. ']' → logprob: -7.504715919494629
    5. ']=' → logprob: -8.004715919494629
    6. '   ' → logprob: -8.379715919494629
    7. '```' → logprob: -8.879715919494629
    8. '       ' → logprob: -9.379715919494629
    9. '[
' → logprob: -9.504715919494629
    10. ' =' → logprob: -9.629715919494629

Token 1411: ' =' (ID: 314)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.09149935096502304
    2. '=' → logprob: -2.4664993286132812
    3. ' =' → logprob: -6.216499328613281
    4. '=True' → logprob: -7.966499328613281
    5. 'True' → logprob: -9.341499328613281
    6. '
' → logprob: -10.091499328613281
    7. '   ' → logprob: -10.591499328613281
    8. '```' → logprob: -10.716499328613281
    9. 'true' → logprob: -11.591499328613281
    10. '[
' → logprob: -11.966499328613281

Token 1412: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0011703446507453918
    2. ' True' → logprob: -6.7511701583862305
    3. '(True' → logprob: -16.626171112060547
    4. '1' → logprob: -19.126171112060547
    5. '               ' → logprob: -19.251171112060547
    6. '
' → logprob: -19.501171112060547
    7. '=True' → logprob: -20.001171112060547
    8. 'true' → logprob: -20.876171112060547
    9. '                   ' → logprob: -21.376171112060547
    10. '```' → logprob: -23.001171112060547

Token 1413: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029371678829193115
    2. ',' → logprob: -7.127937316894531
    3. '                
' → logprob: -7.502937316894531
    4. '<|end|>' → logprob: -7.877937316894531
    5. '```' → logprob: -8.127937316894531
    6. '                   ' → logprob: -8.127937316894531
    7. ',
' → logprob: -9.002937316894531
    8. ',q' → logprob: -9.377937316894531
    9. '                ' → logprob: -9.502937316894531
    10. 'q' → logprob: -9.752937316894531

Token 1414: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003227625507861376
    2. '```' → logprob: -6.503227710723877
    3. '                   ' → logprob: -7.378227710723877
    4. ' q' → logprob: -7.628227710723877
    5. 'q' → logprob: -8.003227233886719
    6. '                ' → logprob: -9.253227233886719
    7. '                       ' → logprob: -10.003227233886719
    8. ',' → logprob: -10.253227233886719
    9. ',q' → logprob: -10.503227233886719
    10. '			' → logprob: -10.628227233886719

Token 1415: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -3.128163257315464e-07
    2. ' q' → logprob: -15.625
    3. '               ' → logprob: -17.625
    4. '                   ' → logprob: -18.375
    5. '```' → logprob: -19.75
    6. '
' → logprob: -20.625
    7. '	q' → logprob: -21.75
    8. 'queue' → logprob: -21.875
    9. '                ' → logprob: -22.375
    10. '_q' → logprob: -22.625

Token 1416: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.611323624383658e-05
    2. '.' → logprob: -10.375065803527832
    3. '.extend' → logprob: -10.875065803527832
    4. '.push' → logprob: -12.375065803527832
    5. '.enqueue' → logprob: -12.375065803527832
    6. 'append' → logprob: -12.500065803527832
    7. '.put' → logprob: -13.000065803527832
    8. ').' → logprob: -14.625065803527832
    9. ' .' → logprob: -14.875065803527832
    10. '.Append' → logprob: -15.750065803527832

Token 1417: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.0009307525469921529
    2. '(' → logprob: -7.0009307861328125
    3. '(n' → logprob: -11.375930786132812
    4. '(
' → logprob: -12.375930786132812
    5. '(nn' → logprob: -12.750930786132812
    6. '((' → logprob: -15.500930786132812
    7. '(nd' → logprob: -15.625930786132812
    8. '(x' → logprob: -16.250930786132812
    9. '(ns' → logprob: -16.750930786132812
    10. ' (' → logprob: -16.875930786132812

Token 1418: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008225302211940289
    2. '[n' → logprob: -5.133225440979004
    3. '(nx' → logprob: -6.383225440979004
    4. ')
' → logprob: -8.258225440979004
    5. '(n' → logprob: -8.883225440979004
    6. '[' → logprob: -10.258225440979004
    7. ')`' → logprob: -10.383225440979004
    8. '))' → logprob: -10.633225440979004
    9. '               ' → logprob: -10.758225440979004
    10. ']' → logprob: -11.508225440979004

Token 1419: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041513726115226746
    2. 'print' → logprob: -3.791513681411743
    3. '```' → logprob: -4.416513919830322
    4. ')' → logprob: -6.416513919830322
    5. ' print' → logprob: -6.791513919830322
    6. '           ' → logprob: -6.916513919830322
    7. '               ' → logprob: -7.541513919830322
    8. '                   ' → logprob: -7.541513919830322
    9. '       ' → logprob: -7.666513919830322
    10. '
' → logprob: -8.541513442993164

Token 1420: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.009730113670229912
    2. '   ' → logprob: -5.634730339050293
    3. '```' → logprob: -5.634730339050293
    4. 'if' → logprob: -6.134730339050293
    5. ' print' → logprob: -8.009730339050293
    6. ' if' → logprob: -11.384730339050293
    7. '       ' → logprob: -11.759730339050293
    8. 'Yes' → logprob: -12.134730339050293
    9. '           ' → logprob: -13.134730339050293
    10. 'True' → logprob: -13.259730339050293

Token 1421: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.3902033970225602e-05
    2. '(' → logprob: -11.250014305114746
    3. '"' → logprob: -15.000014305114746
    4. '('' → logprob: -15.125014305114746
    5. '(("' → logprob: -15.875014305114746
    6. '(
' → logprob: -16.62501335144043
    7. '(""' → logprob: -17.62501335144043
    8. '(found' → logprob: -17.87501335144043
    9. '("("' → logprob: -18.00001335144043
    10. '(f' → logprob: -18.37501335144043

Token 1422: 'Yes' (ID: 13022)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10025110840797424
    2. 'Yes' → logprob: -2.3502511978149414
    3. ''' → logprob: -10.600251197814941
    4. '"No' → logprob: -10.975251197814941
    5. '“Yes' → logprob: -13.225251197814941
    6. 'No' → logprob: -15.100251197814941
    7. '("' → logprob: -15.850251197814941
    8. 'YES' → logprob: -16.225250244140625
    9. ' Yes' → logprob: -18.225250244140625
    10. '{"' → logprob: -18.350250244140625

Token 1423: '"' (ID: 1)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7151364088058472
    2. 'if' → logprob: -0.8401364088058472
    3. ')' → logprob: -2.5901365280151367
    4. 'else' → logprob: -6.090136528015137
    5. '   ' → logprob: -6.465136528015137
    6. '"' → logprob: -9.090136528015137
    7. 'elif' → logprob: -9.340136528015137
    8. '```' → logprob: -9.465136528015137
    9. '	if' → logprob: -10.340136528015137
    10. '()' → logprob: -10.465136528015137

Token 1424: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6382535696029663
    2. ' if' → logprob: -1.1382535696029663
    3. ')' → logprob: -1.8882535696029663
    4. '   ' → logprob: -10.013253211975098
    5. '()' → logprob: -10.888253211975098
    6. '")' → logprob: -13.138253211975098
    7. '	if' → logprob: -13.513253211975098
    8. '"' → logprob: -13.638253211975098
    9. ')
' → logprob: -13.888253211975098
    10. '```' → logprob: -14.138253211975098

Token 1425: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.005233882926404476
    2. ' found' → logprob: -5.2552337646484375
    3. '(found' → logprob: -16.380233764648438
    4. '	found' → logprob: -18.255233764648438
    5. 'Found' → logprob: -20.005233764648438
    6. 'find' → logprob: -21.130233764648438
    7. ' ' → logprob: -21.130233764648438
    8. '
' → logprob: -21.130233764648438
    9. '   ' → logprob: -22.255233764648438
    10. '_found' → logprob: -22.630233764648438

Token 1426: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3870795667171478
    2. ' else' → logprob: -1.1370795965194702
    3. ')' → logprob: -8.512079238891602
    4. '	else' → logprob: -12.887079238891602
    5. '```' → logprob: -13.387079238891602
    6. '   ' → logprob: -14.012079238891602
    7. '_else' → logprob: -14.012079238891602
    8. '==' → logprob: -14.262079238891602
    9. '<|end|>' → logprob: -14.637079238891602
    10. ' )' → logprob: -15.637079238891602

Token 1427: ' "' (ID: 392)
  Prédit: '"No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"No' → logprob: -0.005285103805363178
    2. '"' → logprob: -5.255285263061523
    3. ' "' → logprob: -10.130285263061523
    4. 'No' → logprob: -11.630285263061523
    5. ')' → logprob: -14.005285263061523
    6. ''' → logprob: -14.380285263061523
    7. ' No' → logprob: -14.380285263061523
    8. '   ' → logprob: -15.005285263061523
    9. '")' → logprob: -15.880285263061523
    10. '“No' → logprob: -16.005285263061523

Token 1428: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0067154900170862675
    2. '"No' → logprob: -5.006715297698975
    3. '"' → logprob: -15.756715774536133
    4. ' No' → logprob: -17.631715774536133
    5. '“No' → logprob: -19.756715774536133
    6. ''' → logprob: -20.381715774536133
    7. '```' → logprob: -20.881715774536133
    8. 'NO' → logprob: -21.131715774536133
    9. '_No' → logprob: -21.756715774536133
    10. '   ' → logprob: -22.631715774536133

Token 1429: '")' (ID: 1405)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1291128396987915
    2. '")' → logprob: -2.129112720489502
    3. ')")' → logprob: -6.129112720489502
    4. '')' → logprob: -13.62911319732666
    5. '}")' → logprob: -13.87911319732666
    6. '`)' → logprob: -14.25411319732666
    7. ')"' → logprob: -15.12911319732666
    8. '())' → logprob: -15.62911319732666
    9. ')">' → logprob: -16.504112243652344
    10. ' )' → logprob: -16.754112243652344


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1427
Tokens correctement prédits (1ère position, stricte): 363
Tokens correctement prédits (1ère position, avec adaptation): 388
Tokens correctement prédits (top 10): 918
Précision stricte (1ère position): 25.44%
Précision adaptée (1ère position): 27.19%
Précision (top 10): 64.33%
================================================================================
