================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:57:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import Counter
N, F = map(int, input().split())
pair_count = Counter()
for _ in range(N):
    items = input().split()[1:]
    items.sort()
    for i in range(len(items)):
        for j in range(i+1, len(items)):
            pair_count[(items[i], items[j])] += 1
res = [pair for pair, cnt in pair_count.items() if cnt >= F]
res.sort()
print(len(res))
for a, b in res:
    print(a, b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' Counter' (ID: 32251)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.9447221159934998
    2. 'default' → logprob: -1.3197221755981445
    3. 'deque' → logprob: -1.6947221755981445
    4. ' defaultdict' → logprob: -2.5697221755981445
    5. 'Counter' → logprob: -2.8197221755981445
    6. ' abc' → logprob: -4.4447221755981445
    7. ' Counter' → logprob: -5.4447221755981445
    8. 'named' → logprob: -5.5697221755981445
    9. ' deque' → logprob: -6.5697221755981445
    10. '```' → logprob: -6.6947221755981445

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008582198061048985
    2. '.' → logprob: -7.625858306884766
    3. '\(' → logprob: -8.500858306884766
    4. '\' → logprob: -10.375858306884766
    5. '```' → logprob: -10.500858306884766
    6. 'a' → logprob: -10.750858306884766
    7. ' (' → logprob: -11.000858306884766
    8. 'newline' → logprob: -11.125858306884766
    9. '(
' → logprob: -11.500858306884766
    10. '\n' → logprob: -11.625858306884766

Token 5: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007156368810683489
    2. '(
' → logprob: -6.3821563720703125
    3. '\n' → logprob: -6.7571563720703125
    4. '.' → logprob: -7.5071563720703125
    5. '\' → logprob: -7.5071563720703125
    6. 'a' → logprob: -7.7571563720703125
    7. 'newline' → logprob: -7.7571563720703125
    8. 'import' → logprob: -8.007156372070312
    9. '\(' → logprob: -8.257156372070312
    10. ',' → logprob: -8.507156372070312

Token 6: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47917914390563965
    2. ' =' → logprob: -1.3541791439056396
    3. ',' → logprob: -2.7291791439056396
    4. ' ' → logprob: -4.479179382324219
    5. 'a' → logprob: -4.604179382324219
    6. '.' → logprob: -4.729179382324219
    7. '(' → logprob: -4.854179382324219
    8. '[' → logprob: -5.229179382324219
    9. ')' → logprob: -5.729179382324219
    10. 'umber' → logprob: -5.979179382324219

Token 7: ' F' (ID: 454)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.8715730309486389
    2. ' ' → logprob: -1.1215729713439941
    3. 'input' → logprob: -2.496572971343994
    4. ' input' → logprob: -2.746572971343994
    5. 'K' → logprob: -2.996572971343994
    6. ' counter' → logprob: -3.996572971343994
    7. 'counter' → logprob: -4.621572971343994
    8. ' a' → logprob: -5.121572971343994
    9. 'a' → logprob: -5.621572971343994
    10. ''' → logprob: -5.746572971343994

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5242405533790588
    2. ' =' → logprob: -0.8992405533790588
    3. ',' → logprob: -7.399240493774414
    4. ' ' → logprob: -8.399240493774414
    5. '_' → logprob: -9.274240493774414
    6. 'or' → logprob: -9.899240493774414
    7. '   ' → logprob: -10.524240493774414
    8. '  ' → logprob: -10.774240493774414
    9. '=input' → logprob: -10.774240493774414
    10. '[' → logprob: -11.024240493774414

Token 9: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.09421911835670471
    2. ' int' → logprob: -3.219219207763672
    3. 'map' → logprob: -3.469219207763672
    4. ' input' → logprob: -4.594219207763672
    5. 'int' → logprob: -5.219219207763672
    6. ' ' → logprob: -6.469219207763672
    7. ' list' → logprob: -7.219219207763672
    8. 'input' → logprob: -7.719219207763672
    9. '10' → logprob: -8.344219207763672
    10. ' [' → logprob: -9.719219207763672

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5923969149589539
    2. '(' → logprob: -0.8423969149589539
    3. '(str' → logprob: -4.3423967361450195
    4. '(lambda' → logprob: -6.3423967361450195
    5. 'int' → logprob: -6.9673967361450195
    6. '(input' → logprob: -9.21739673614502
    7. '<|end|>' → logprob: -9.34239673614502
    8. '(eval' → logprob: -9.71739673614502
    9. '()' → logprob: -9.96739673614502
    10. '[int' → logprob: -10.21739673614502

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5677568316459656
    2. ')' → logprob: -1.0677568912506104
    3. '(' → logprob: -2.6927568912506104
    4. '(input' → logprob: -4.192756652832031
    5. ',input' → logprob: -5.942756652832031
    6. 'input' → logprob: -6.442756652832031
    7. '```' → logprob: -6.692756652832031
    8. '`)' → logprob: -8.692756652832031
    9. '`' → logprob: -8.817756652832031
    10. ' ,' → logprob: -8.817756652832031

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47407984733581543
    2. ' input' → logprob: -0.9740798473358154
    3. '(input' → logprob: -13.599080085754395
    4. ',input' → logprob: -14.349080085754395
    5. ')' → logprob: -14.599080085754395
    6. ' ' → logprob: -14.974080085754395
    7. '=input' → logprob: -15.849080085754395
    8. '	input' → logprob: -16.849079132080078
    9. '```' → logprob: -16.974079132080078
    10. ' )' → logprob: -17.974079132080078

Token 13: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.26107147336006165
    2. '())' → logprob: -1.7610714435577393
    3. ')' → logprob: -3.1360714435577393
    4. '()' → logprob: -4.261071681976318
    5. '(' → logprob: -9.13607120513916
    6. '());' → logprob: -9.51107120513916
    7. '))' → logprob: -10.13607120513916
    8. '(),' → logprob: -10.51107120513916
    9. '()))' → logprob: -10.63607120513916
    10. '();' → logprob: -11.51107120513916

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00030900631099939346
    2. 'strip' → logprob: -8.125308990478516
    3. 'rstrip' → logprob: -11.875308990478516
    4. ' split' → logprob: -12.500308990478516
    5. ')' → logprob: -13.750308990478516
    6. 'read' → logprob: -14.375308990478516
    7. '(split' → logprob: -15.000308990478516
    8. '```' → logprob: -16.875308990478516
    9. '_split' → logprob: -16.875308990478516
    10. ' readline' → logprob: -17.250308990478516

Token 15: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030121855437755585
    2. '))' → logprob: -3.5301218032836914
    3. '')' → logprob: -8.905121803283691
    4. '`)' → logprob: -8.905121803283691
    5. '())' → logprob: -10.155121803283691
    6. '),' → logprob: -11.405121803283691
    7. ')`' → logprob: -12.030121803283691
    8. ')>' → logprob: -12.280121803283691
    9. ''))' → logprob: -12.405121803283691
    10. '>)' → logprob: -12.405121803283691

Token 16: 'pair' (ID: 25488)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0106512308120728
    2. 'a' → logprob: -1.0106512308120728
    3. 'arr' → logprob: -1.8856512308120728
    4. 'numbers' → logprob: -3.135651111602783
    5. 'counts' → logprob: -4.385651111602783
    6. 'nums' → logprob: -4.635651111602783
    7. 'S' → logprob: -4.885651111602783
    8. 'data' → logprob: -5.260651111602783
    9. '```' → logprob: -5.635651111602783
    10. 'lst' → logprob: -5.635651111602783

Token 17: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005437385407276452
    2. '_s' → logprob: -7.625543594360352
    3. ' =' → logprob: -11.250543594360352
    4. '_counts' → logprob: -11.375543594360352
    5. '_counter' → logprob: -11.750543594360352
    6. ''s' → logprob: -12.125543594360352
    7. ' s' → logprob: -12.625543594360352
    8. '=' → logprob: -13.000543594360352
    9. 'counter' → logprob: -13.125543594360352
    10. '(s' → logprob: -13.250543594360352

Token 18: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5984792709350586
    2. '[' → logprob: -1.7234792709350586
    3. '=' → logprob: -1.9734792709350586
    4. '(' → logprob: -2.5984792709350586
    5. ' =' → logprob: -2.8484792709350586
    6. ' ' → logprob: -8.598479270935059
    7. ')' → logprob: -8.848479270935059
    8. '_' → logprob: -10.098479270935059
    9. 'er' → logprob: -10.098479270935059
    10. ']' → logprob: -10.223479270935059

Token 19: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.6935386061668396
    2. ' Counter' → logprob: -0.6935386061668396
    3. ' ' → logprob: -9.568538665771484
    4. '{}' → logprob: -9.693538665771484
    5. ' defaultdict' → logprob: -9.693538665771484
    6. ' {}' → logprob: -9.943538665771484
    7. 'default' → logprob: -10.318538665771484
    8. ' []' → logprob: -10.568538665771484
    9. '.Counter' → logprob: -10.693538665771484
    10. ' counter' → logprob: -10.818538665771484

Token 20: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06305818259716034
    2. '()' → logprob: -2.8130581378936768
    3. '((' → logprob: -7.188058376312256
    4. '(
' → logprob: -9.063057899475098
    5. '([' → logprob: -9.313057899475098
    6. '([(' → logprob: -10.313057899475098
    7. '[(' → logprob: -10.938057899475098
    8. '(()' → logprob: -11.188057899475098
    9. '(

' → logprob: -11.313057899475098
    10. '({' → logprob: -11.438057899475098

Token 21: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009297704324126244
    2. ' for' → logprob: -4.759297847747803
    3. '\n' → logprob: -8.384297370910645
    4. '
' → logprob: -8.509297370910645
    5. '(' → logprob: -9.884297370910645
    6. '(
' → logprob: -10.384297370910645
    7. '' → logprob: -10.384297370910645
    8. '[' → logprob: -10.509297370910645
    9. '\' → logprob: -10.884297370910645
    10. '```' → logprob: -11.634297370910645

Token 22: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5030049681663513
    2. ' i' → logprob: -1.378005027770996
    3. '_' → logprob: -2.128005027770996
    4. ' ' → logprob: -3.753005027770996
    5. ' pair' → logprob: -8.378005027770996
    6. 'i' → logprob: -8.878005027770996
    7. ' item' → logprob: -9.003005027770996
    8. '  ' → logprob: -10.253005027770996
    9. ' ' → logprob: -10.753005027770996
    10. ' I' → logprob: -10.878005027770996

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38732442259788513
    2. 'in' → logprob: -1.1373244524002075
    3. ' ' → logprob: -8.387324333190918
    4. 'i' → logprob: -9.637324333190918
    5. 'import' → logprob: -10.137324333190918
    6. 's' → logprob: -11.012324333190918
    7. 'n' → logprob: -11.137324333190918
    8. ',' → logprob: -11.137324333190918
    9. '```' → logprob: -11.512324333190918
    10. ' ,' → logprob: -11.887324333190918

Token 24: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004917914047837257
    2. ' range' → logprob: -7.625491619110107
    3. '(range' → logprob: -13.000492095947266
    4. 'N' → logprob: -15.250492095947266
    5. 'F' → logprob: -15.500492095947266
    6. '	range' → logprob: -15.750492095947266
    7. 'ran' → logprob: -15.875492095947266
    8. '```' → logprob: -16.375492095947266
    9. 'input' → logprob: -16.750492095947266
    10. 'rang' → logprob: -16.750492095947266

Token 25: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20160239934921265
    2. '(N' → logprob: -1.7016024589538574
    3. ' (' → logprob: -9.0766019821167
    4. '(range' → logprob: -10.7016019821167
    5. '(
' → logprob: -10.8266019821167
    6. '(int' → logprob: -10.9516019821167
    7. '(n' → logprob: -12.0766019821167
    8. '(F' → logprob: -12.9516019821167
    9. ' ' → logprob: -13.5766019821167
    10. ' N' → logprob: -14.2016019821167

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0011402154341340065
    2. ')' → logprob: -7.251140117645264
    3. ':' → logprob: -8.626140594482422
    4. ' ):' → logprob: -8.751140594482422
    5. '):
' → logprob: -9.626140594482422
    6. ',' → logprob: -11.501140594482422
    7. '+' → logprob: -11.876140594482422
    8. '   ' → logprob: -13.251140594482422
    9. ' ' → logprob: -13.501140594482422
    10. '():' → logprob: -13.751140594482422

Token 27: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022970570251345634
    2. ' pair' → logprob: -4.647970676422119
    3. ' pairs' → logprob: -5.772970676422119
    4. ' s' → logprob: -6.522970676422119
    5. 'a' → logprob: -6.897970676422119
    6. ' code' → logprob: -7.147970676422119
    7. ' line' → logprob: -7.397970676422119
    8. ' a' → logprob: -7.522970676422119
    9. 'pair' → logprob: -7.647970676422119
    10. '    ' → logprob: -7.897970676422119

Token 28: ' items' (ID: 4732)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4723410904407501
    2. ' a' → logprob: -2.5973410606384277
    3. 'x' → logprob: -2.9723410606384277
    4. 'pair' → logprob: -3.0973410606384277
    5. 's' → logprob: -3.3473410606384277
    6. ' pair' → logprob: -3.5973410606384277
    7. 'name' → logprob: -4.222341060638428
    8. ' x' → logprob: -4.222341060638428
    9. ' s' → logprob: -4.472341060638428
    10. 'A' → logprob: -4.597341060638428

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12349176406860352
    2. '=' → logprob: -2.2484917640686035
    3. '.' → logprob: -5.4984917640686035
    4. ',' → logprob: -6.1234917640686035
    5. ')' → logprob: -6.6234917640686035
    6. '[' → logprob: -6.9984917640686035
    7. '.extend' → logprob: -7.2484917640686035
    8. '   ' → logprob: -7.6234917640686035
    9. '.append' → logprob: -8.623491287231445
    10. ' ' → logprob: -8.748491287231445

Token 30: ' input' (ID: 3422)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6483494639396667
    2. ' list' → logprob: -1.1483495235443115
    3. 'input' → logprob: -2.0233495235443115
    4. ' input' → logprob: -3.7733495235443115
    5. 'map' → logprob: -5.648349285125732
    6. ' map' → logprob: -7.523349285125732
    7. ' tuple' → logprob: -8.14834976196289
    8. 'tuple' → logprob: -8.27334976196289
    9. 'set' → logprob: -9.89834976196289
    10. '[' → logprob: -10.77334976196289

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.20531806349754333
    2. '()' → logprob: -1.7053180932998657
    3. '(' → logprob: -5.580317974090576
    4. '())' → logprob: -10.580318450927734
    5. ')' → logprob: -10.955318450927734
    6. '("("' → logprob: -10.955318450927734
    7. '('' → logprob: -11.080318450927734
    8. '()?>' → logprob: -12.705318450927734
    9. '`()' → logprob: -12.705318450927734
    10. '()>' → logprob: -12.955318450927734

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00411461153998971
    2. 'strip' → logprob: -5.504114627838135
    3. 'rstrip' → logprob: -10.254114151000977
    4. 'spl' → logprob: -14.629114151000977
    5. ' split' → logprob: -15.254114151000977
    6. '```' → logprob: -15.379114151000977
    7. '(split' → logprob: -16.379114151000977
    8. '.split' → logprob: -17.504114151000977
    9. 'replace' → logprob: -18.504114151000977
    10. 'plit' → logprob: -18.504114151000977

Token 33: '()[' (ID: 20778)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0053140390664339066
    2. '(' → logprob: -5.255313873291016
    3. '('' → logprob: -10.380313873291016
    4. '())' → logprob: -10.630313873291016
    5. '()`' → logprob: -11.755313873291016
    6. '(),' → logprob: -13.255313873291016
    7. '()
' → logprob: -13.380313873291016
    8. '("("' → logprob: -13.505313873291016
    9. '`()' → logprob: -13.505313873291016
    10. '(`' → logprob: -13.630313873291016

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4357823431491852
    2. ':' → logprob: -1.1857823133468628
    3. ':]' → logprob: -3.1857824325561523
    4. '0' → logprob: -5.935782432556152
    5. '2' → logprob: -7.060782432556152
    6. '::' → logprob: -7.310782432556152
    7. '-' → logprob: -7.435782432556152
    8. ' :' → logprob: -7.685782432556152
    9. ':-' → logprob: -7.935782432556152
    10. ' ' → logprob: -8.060782432556152

Token 35: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0024792237672954798
    2. ':' → logprob: -6.002479076385498
    3. ':],' → logprob: -13.377479553222656
    4. ']' → logprob: -14.502479553222656
    5. ':]
' → logprob: -14.627479553222656
    6. ':].' → logprob: -14.627479553222656
    7. ':]

' → logprob: -15.127479553222656
    8. ' :]' → logprob: -15.252479553222656
    9. ']:' → logprob: -16.627479553222656
    10. ':)' → logprob: -18.627479553222656

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03647284954786301
    2. ' for' → logprob: -4.286472797393799
    3. '<|end|>' → logprob: -4.661472797393799
    4. '
' → logprob: -5.536472797393799
    5. ' 
' → logprob: -5.661472797393799
    6. '    
' → logprob: -6.036472797393799
    7. ' ' → logprob: -6.911472797393799
    8. 'for' → logprob: -7.161472797393799
    9. '  
' → logprob: -7.661472797393799
    10. '<|end|>' → logprob: -8.911473274230957

Token 37: ' items' (ID: 4732)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18381816148757935
    2. ' for' → logprob: -1.8088181018829346
    3. '   ' → logprob: -6.558818340301514
    4. 'pairs' → logprob: -6.808818340301514
    5. ' pairs' → logprob: -7.683818340301514
    6. ' ' → logprob: -7.933818340301514
    7. 'items' (adapté à ' items') → logprob: -8.683817863464355
    8. '<|end|>' → logprob: -9.058817863464355
    9. '```' → logprob: -9.433817863464355
    10. 'pair' → logprob: -9.558817863464355

Token 38: '.sort' (ID: 19551)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7567426562309265
    2. '<|end|>' → logprob: -1.0067427158355713
    3. ')' → logprob: -2.6317427158355713
    4. ' ' → logprob: -3.6317427158355713
    5. ' =' → logprob: -4.381742477416992
    6. '[:]' → logprob: -4.506742477416992
    7. '=' → logprob: -4.631742477416992
    8. '<|end|>' → logprob: -4.881742477416992
    9. '.' → logprob: -5.131742477416992
    10. '.sort' → logprob: -5.631742477416992

Token 39: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009303949191235006
    2. '(' → logprob: -7.000930309295654
    3. '())' → logprob: -12.250930786132812
    4. '()
' → logprob: -12.375930786132812
    5. '();' → logprob: -13.625930786132812
    6. '()]' → logprob: -13.625930786132812
    7. '()`' → logprob: -13.750930786132812
    8. '()>' → logprob: -14.000930786132812
    9. '()

' → logprob: -14.250930786132812
    10. '(),' → logprob: -14.375930786132812

Token 40: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.003260296303778887
    2. ' for' → logprob: -5.878260135650635
    3. 'from' → logprob: -8.128260612487793
    4. '<|end|>' → logprob: -9.253260612487793
    5. '   ' → logprob: -10.253260612487793
    6. '
' → logprob: -11.878260612487793
    7. 'pairs' → logprob: -12.128260612487793
    8. ' ' → logprob: -12.253260612487793
    9. ')' → logprob: -13.128260612487793
    10. '```' → logprob: -13.503260612487793

Token 42: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.038168635219335556
    2. 'i' → logprob: -3.2881686687469482
    3. ' j' → logprob: -9.663168907165527
    4. 'j' → logprob: -9.788168907165527
    5. ' ' → logprob: -12.538168907165527
    6. '	i' → logprob: -13.913168907165527
    7. 'I' → logprob: -14.288168907165527
    8. '1' → logprob: -14.538168907165527
    9. '_i' → logprob: -15.038168907165527
    10. ' in' → logprob: -15.663168907165527

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013099398463964462
    2. ',' → logprob: -4.888099193572998
    3. 'in' → logprob: -5.263099193572998
    4. ' ' → logprob: -8.513099670410156
    5. 'n' → logprob: -10.138099670410156
    6. ' ,' → logprob: -11.138099670410156
    7. '1' → logprob: -11.388099670410156
    8. '+' → logprob: -11.888099670410156
    9. '  ' → logprob: -12.138099670410156
    10. ',j' → logprob: -12.138099670410156

Token 44: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326353549957275
    2. ' range' → logprob: -1.3132635354995728
    3. ' ' → logprob: -13.813263893127441
    4. '	range' → logprob: -14.938263893127441
    5. '   ' → logprob: -15.313263893127441
    6. '  ' → logprob: -16.313262939453125
    7. '(range' → logprob: -16.438262939453125
    8. 'ran' → logprob: -18.063262939453125
    9. ' xrange' → logprob: -18.688262939453125
    10. '```' → logprob: -18.688262939453125

Token 45: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.001935065840370953
    2. '(' → logprob: -6.251935005187988
    3. ' len' → logprob: -13.001935005187988
    4. 'len' → logprob: -13.001935005187988
    5. '(length' → logprob: -14.001935005187988
    6. ' ' → logprob: -15.376935005187988
    7. '(n' → logprob: -15.751935005187988
    8. ' (' → logprob: -15.876935005187988
    9. '(l' → logprob: -16.126935958862305
    10. '<len' → logprob: -16.251935958862305

Token 46: '(items' (ID: 50514)
  Prédit: '(items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(items' → logprob: -9.639096970204264e-05
    2. 'items' → logprob: -9.500096321105957
    3. '(' → logprob: -11.000096321105957
    4. ' items' → logprob: -12.500096321105957
    5. '	items' → logprob: -15.125096321105957
    6. 's' → logprob: -16.000097274780273
    7. ')' → logprob: -16.125097274780273
    8. ' (' → logprob: -16.625097274780273
    9. '/items' → logprob: -16.750097274780273
    10. '-' → logprob: -17.125097274780273

Token 47: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.534048855304718
    2. '):' → logprob: -1.0340487957000732
    3. ')):
' → logprob: -3.7840487957000732
    4. '   ' → logprob: -4.784049034118652
    5. ')' → logprob: -4.909049034118652
    6. '):
' → logprob: -5.034049034118652
    7. '-' → logprob: -5.159049034118652
    8. ' -' → logprob: -5.659049034118652
    9. '))' → logprob: -6.409049034118652
    10. '       ' → logprob: -7.284049034118652

Token 48: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2801745533943176
    2. '       ' → logprob: -1.7801744937896729
    3. ' for' → logprob: -2.780174493789673
    4. ' ' → logprob: -5.155174732208252
    5. '<|end|>' → logprob: -5.655174732208252
    6. 'for' → logprob: -6.280174732208252
    7. '+' → logprob: -6.530174732208252
    8. '    ' → logprob: -8.530174255371094
    9. '<|end|>' → logprob: -8.905174255371094
    10. ':' → logprob: -8.905174255371094

Token 49: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08042631298303604
    2. 'for' (adapté à ' for') → logprob: -2.5804262161254883
    3. '   ' → logprob: -6.830426216125488
    4. ' ' → logprob: -8.580426216125488
    5. '    ' → logprob: -9.080426216125488
    6. '	for' → logprob: -10.330426216125488
    7. '       ' → logprob: -10.580426216125488
    8. ' ' → logprob: -10.705426216125488
    9. ' j' → logprob: -10.705426216125488
    10. '<|end|>' → logprob: -11.080426216125488

Token 50: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.11298628896474838
    2. 'j' → logprob: -2.2379863262176514
    3. ' range' → logprob: -9.73798656463623
    4. ' i' → logprob: -9.86298656463623
    5. 'range' → logprob: -10.48798656463623
    6. 'i' → logprob: -10.98798656463623
    7. '   ' → logprob: -12.61298656463623
    8. '    ' → logprob: -14.11298656463623
    9. '	j' → logprob: -14.11298656463623
    10. ' ' → logprob: -14.36298656463623

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007512215059250593
    2. 'in' → logprob: -5.257512092590332
    3. '=i' → logprob: -7.257512092590332
    4. '=' → logprob: -7.257512092590332
    5. ' i' → logprob: -7.632512092590332
    6. ' =' → logprob: -8.632512092590332
    7. 'i' → logprob: -9.132512092590332
    8. ' ' → logprob: -9.507512092590332
    9. '   ' → logprob: -11.632512092590332
    10. '<|end|>' → logprob: -12.632512092590332

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07910337299108505
    2. 'range' → logprob: -2.579103469848633
    3. '(range' → logprob: -8.454103469848633
    4. ' xrange' → logprob: -15.579103469848633
    5. '_range' → logprob: -15.704103469848633
    6. '	range' → logprob: -15.829103469848633
    7. '(i' → logprob: -16.829103469848633
    8. 'Range' → logprob: -17.954103469848633
    9. ' ' → logprob: -18.079103469848633
    10. ' i' → logprob: -18.329103469848633

Token 53: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.0020742492051795e-05
    2. ' (' → logprob: -10.375049591064453
    3. '(' → logprob: -11.000049591064453
    4. 'i' → logprob: -13.750049591064453
    5. ' i' → logprob: -14.750049591064453
    6. '(len' → logprob: -15.125049591064453
    7. '   ' → logprob: -16.125049591064453
    8. ')' → logprob: -17.625049591064453
    9. '(j' → logprob: -17.750049591064453
    10. ' ' → logprob: -18.000049591064453

Token 54: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005956291686743498
    2. ' +' → logprob: -5.130956172943115
    3. '1' → logprob: -10.630956649780273
    4. '+i' → logprob: -13.005956649780273
    5. '+j' → logprob: -14.380956649780273
    6. '+)' → logprob: -16.005956649780273
    7. '+
' → logprob: -16.005956649780273
    8. ')+' → logprob: -16.505956649780273
    9. '   ' → logprob: -16.755956649780273
    10. '+n' → logprob: -16.755956649780273

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. 'len' → logprob: -11.875009536743164
    3. ' ' → logprob: -13.000009536743164
    4. '0' → logprob: -16.375009536743164
    5. ' len' → logprob: -16.625009536743164
    6. '   ' → logprob: -16.625009536743164
    7. 'i' → logprob: -17.125009536743164
    8. '2' → logprob: -17.250009536743164
    9. '```' → logprob: -17.250009536743164
    10. ')' → logprob: -17.750009536743164

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5434192419052124
    2. '):' → logprob: -0.9184192419052124
    3. ')' → logprob: -4.543419361114502
    4. ',len' → logprob: -4.918419361114502
    5. '<|end|>' → logprob: -7.168419361114502
    6. ':' → logprob: -8.168418884277344
    7. '<len' → logprob: -8.418418884277344
    8. '):
' → logprob: -8.543418884277344
    9. 'len' → logprob: -8.793418884277344
    10. '(len' → logprob: -9.043418884277344

Token 57: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0052386182360351086
    2. ' len' → logprob: -5.2552385330200195
    3. '(len' → logprob: -13.50523853302002
    4. ' ' → logprob: -14.00523853302002
    5. '   ' → logprob: -14.00523853302002
    6. '<len' → logprob: -14.25523853302002
    7. ')' → logprob: -14.63023853302002
    8. '	len' → logprob: -15.50523853302002
    9. ',len' → logprob: -16.380239486694336
    10. '  ' → logprob: -16.630239486694336

Token 58: '(items' (ID: 50514)
  Prédit: '(items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(items' → logprob: -3.7697225252486533e-06
    2. 'items' → logprob: -12.750003814697266
    3. '(' → logprob: -14.250003814697266
    4. ' items' → logprob: -16.750003814697266
    5. '/items' → logprob: -17.500003814697266
    6. '(objects' → logprob: -17.625003814697266
    7. '	items' → logprob: -18.375003814697266
    8. '(tokens' → logprob: -18.375003814697266
    9. '(events' → logprob: -19.000003814697266
    10. '.items' → logprob: -19.625003814697266

Token 59: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.12281100451946259
    2. '):' → logprob: -2.2478110790252686
    3. ')):
' → logprob: -5.2478108406066895
    4. '))' → logprob: -5.8728108406066895
    5. ')' → logprob: -6.4978108406066895
    6. '       ' → logprob: -9.622811317443848
    7. ')):
' → logprob: -9.747811317443848
    8. '   ' → logprob: -9.747811317443848
    9. ':' → logprob: -9.997811317443848
    10. '):
' → logprob: -10.247811317443848

Token 60: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08098066598176956
    2. ' pair' → logprob: -2.5809807777404785
    3. 'pair' → logprob: -7.3309807777404785
    4. '       ' → logprob: -7.9559807777404785
    5. '<|end|>' → logprob: -7.9559807777404785
    6. '               ' → logprob: -8.70598030090332
    7. ')' → logprob: -8.95598030090332
    8. ' ' → logprob: -9.45598030090332
    9. '(pair' → logprob: -9.58098030090332
    10. '   ' → logprob: -10.08098030090332

Token 61: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.16569402813911438
    2. 'pair' (adapté à ' pair') → logprob: -1.915693998336792
    3. '           ' → logprob: -5.540694236755371
    4. '               ' → logprob: -6.540694236755371
    5. ' key' → logprob: -10.415694236755371
    6. '(pair' → logprob: -11.290694236755371
    7. '_pair' → logprob: -11.415694236755371
    8. 'key' → logprob: -12.415694236755371
    9. '                   ' → logprob: -12.665694236755371
    10. ' paire' → logprob: -12.790694236755371

Token 62: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00010199354437645525
    2. '_' → logprob: -9.875102043151855
    3. '_key' → logprob: -11.000102043151855
    4. '_counts' → logprob: -11.750102043151855
    5. '_pair' → logprob: -12.500102043151855
    6. ')_' → logprob: -12.625102043151855
    7. ' _' → logprob: -13.000102043151855
    8. '_s' → logprob: -13.000102043151855
    9. '_sum' → logprob: -13.750102043151855
    10. '_counter' → logprob: -13.875102043151855

Token 63: '[(' (ID: 20542)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16117435693740845
    2. '[(' → logprob: -1.9111742973327637
    3. '[f' → logprob: -7.161174297332764
    4. '[item' → logprob: -9.536174774169922
    5. '[p' → logprob: -9.661174774169922
    6. '[
' → logprob: -11.036174774169922
    7. '[[' → logprob: -12.786174774169922
    8. '[key' → logprob: -12.786174774169922
    9. '   ' → logprob: -13.286174774169922
    10. '```' → logprob: -13.661174774169922

Token 64: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -4.2987729102605954e-05
    2. ' items' → logprob: -10.125042915344238
    3. '   ' → logprob: -14.000042915344238
    4. ')' → logprob: -14.375042915344238
    5. '(items' → logprob: -14.625042915344238
    6. '	items' → logprob: -14.750042915344238
    7. 'i' → logprob: -15.625042915344238
    8. '.items' → logprob: -16.125043869018555
    9. '/items' → logprob: -16.125043869018555
    10. 'item' → logprob: -16.625043869018555

Token 65: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3306015716807451e-05
    2. '[' → logprob: -11.37501335144043
    3. '[j' → logprob: -14.12501335144043
    4. 'i' → logprob: -14.75001335144043
    5. '[
' → logprob: -15.62501335144043
    6. '```' → logprob: -16.37501335144043
    7. '[I' → logprob: -16.37501335144043
    8. ' [' → logprob: -16.50001335144043
    9. ')[' → logprob: -17.87501335144043
    10. ')' → logprob: -18.12501335144043

Token 66: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.038554102182388306
    2. ',' → logprob: -3.2885541915893555
    3. '],[' → logprob: -8.413554191589355
    4. ']' → logprob: -9.038554191589355
    5. '),' → logprob: -9.788554191589355
    6. ',j' → logprob: -10.413554191589355
    7. ' ],' → logprob: -10.913554191589355
    8. ' ,' → logprob: -11.288554191589355
    9. '<|end|>' → logprob: -11.538554191589355
    10. ''],' → logprob: -11.538554191589355

Token 67: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.3868766129016876
    2. ' items' → logprob: -1.1368765830993652
    3. '	items' → logprob: -12.886877059936523
    4. '(items' → logprob: -13.636877059936523
    5. '_items' → logprob: -14.761877059936523
    6. '.items' → logprob: -14.886877059936523
    7. ')' → logprob: -14.886877059936523
    8. ' ' → logprob: -15.386877059936523
    9. '/items' → logprob: -15.761877059936523
    10. '-items' → logprob: -16.261877059936523

Token 68: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.001998227322474122
    2. 'j' → logprob: -6.251998424530029
    3. '```' → logprob: -10.376997947692871
    4. '[i' → logprob: -11.626997947692871
    5. '   ' → logprob: -11.751997947692871
    6. ']' → logprob: -13.001997947692871
    7. '[
' → logprob: -13.126997947692871
    8. '_j' → logprob: -13.126997947692871
    9. '])' → logprob: -13.376997947692871
    10. ')]' → logprob: -13.376997947692871

Token 69: '])]' (ID: 178925)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43054866790771484
    2. '])]' → logprob: -1.4305486679077148
    3. ')]' → logprob: -2.430548667907715
    4. ')])' → logprob: -3.805548667907715
    5. ']' → logprob: -8.805548667907715
    6. '))' → logprob: -9.180548667907715
    7. ' )' → logprob: -9.430548667907715
    8. '])' → logprob: -9.805548667907715
    9. '）' → logprob: -11.180548667907715
    10. '   ' → logprob: -11.555548667907715

Token 70: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0026201317086815834
    2. ' +=' → logprob: -6.002620220184326
    3. ']+=' → logprob: -8.877619743347168
    4. '+' → logprob: -13.252619743347168
    5. '```' → logprob: -14.002619743347168
    6. '[' → logprob: -14.127619743347168
    7. '=' → logprob: -14.752619743347168
    8. '   ' → logprob: -14.752619743347168
    9. '+=(' → logprob: -14.752619743347168
    10. '+='' → logprob: -15.252619743347168

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '   ' → logprob: -18.000804901123047
    4. '```' → logprob: -18.875804901123047
    5. '+' → logprob: -20.813304901123047
    6. '  ' → logprob: -20.875804901123047
    7. '0' → logprob: -20.938304901123047
    8. ' ' → logprob: -20.938304901123047
    9. '１' → logprob: -21.375804901123047
    10. '100' → logprob: -21.563304901123047

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -20.125001907348633
    4. '```' → logprob: -20.125001907348633
    5. '100' → logprob: -21.375001907348633
    6. '0' → logprob: -21.875001907348633
    7. '１' → logprob: -22.312501907348633
    8. '۱' → logprob: -22.375001907348633
    9. '2' → logprob: -22.562501907348633
    10. 'int' → logprob: -22.687501907348633

Token 73: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22025831043720245
    2. 'if' → logprob: -1.845258355140686
    3. 'print' → logprob: -4.2202582359313965
    4. 'max' → logprob: -5.0952582359313965
    5. 'answer' → logprob: -5.2202582359313965
    6. 'result' → logprob: -5.3452582359313965
    7. 'pairs' → logprob: -5.8452582359313965
    8. 'most' → logprob: -6.9702582359313965
    9. 'valid' → logprob: -7.2202582359313965
    10. ' for' → logprob: -7.3452582359313965

Token 74: 'res' (ID: 430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6097575426101685
    2. 'if' → logprob: -0.9847575426101685
    3. 'max' → logprob: -3.359757423400879
    4. 'pairs' → logprob: -3.859757423400879
    5. 'result' → logprob: -5.359757423400879
    6. '```' → logprob: -5.484757423400879
    7. 'most' → logprob: -5.734757423400879
    8. 'answer' → logprob: -5.734757423400879
    9. 'print' → logprob: -6.109757423400879
    10. '
' → logprob: -6.359757423400879

Token 75: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.22635294497013092
    2. 'ults' → logprob: -1.6013529300689697
    3. ' =' → logprob: -8.47635269165039
    4. 'ul' → logprob: -8.85135269165039
    5. 'ULT' → logprob: -8.97635269165039
    6. 's' → logprob: -9.10135269165039
    7. 'ultat' → logprob: -9.22635269165039
    8. '[' → logprob: -9.22635269165039
    9. '```' → logprob: -10.35135269165039
    10. '=' → logprob: -10.72635269165039

Token 76: ' [' (ID: 723)
  Prédit: '[max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[max' → logprob: -0.27973610162734985
    2. '[' → logprob: -1.654736042022705
    3. '[min' → logprob: -4.279736042022705
    4. '[]' → logprob: -4.779736042022705
    5. 'max' → logprob: -4.904736042022705
    6. ' [' → logprob: -5.154736042022705
    7. '[(' → logprob: -5.279736042022705
    8. '[p' → logprob: -5.779736042022705
    9. 'sorted' → logprob: -5.779736042022705
    10. '{' → logprob: -6.529736042022705

Token 77: 'pair' (ID: 25488)
  Prédit: 'pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.15593144297599792
    2. '(pair' → logprob: -2.2809314727783203
    3. '(p' → logprob: -4.40593147277832
    4. 'k' → logprob: -4.40593147277832
    5. 'p' → logprob: -4.78093147277832
    6. '(k' → logprob: -5.40593147277832
    7. 'key' → logprob: -6.03093147277832
    8. '(key' → logprob: -7.40593147277832
    9. 'kv' → logprob: -7.53093147277832
    10. ' pair' → logprob: -7.78093147277832

Token 78: ' for' (ID: 395)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.1487789750099182
    2. ' for' → logprob: -2.1487789154052734
    3. 'for' → logprob: -3.8987789154052734
    4. '_' → logprob: -7.023778915405273
    5. ' ' → logprob: -9.023778915405273
    6. '   ' → logprob: -9.523778915405273
    7. 'count' → logprob: -9.648778915405273
    8. '((' → logprob: -9.773778915405273
    9. '[' → logprob: -11.148778915405273
    10. '	for' → logprob: -11.273778915405273

Token 79: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.08909868448972702
    2. 'pair' → logprob: -2.4640986919403076
    3. '(pair' → logprob: -9.339098930358887
    4. ',' → logprob: -9.714098930358887
    5. '<pair' → logprob: -12.464098930358887
    6. ' in' → logprob: -12.589098930358887
    7. '_pair' → logprob: -12.839098930358887
    8. ' ' → logprob: -15.589098930358887
    9. 'in' → logprob: -16.08909797668457
    10. '<|end|>' → logprob: -16.21409797668457

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033424021676182747
    2. 'in' → logprob: -6.003342628479004
    3. ' in' → logprob: -7.503342628479004
    4. 'pair' → logprob: -9.128342628479004
    5. ',count' → logprob: -9.628342628479004
    6. 'if' → logprob: -10.003342628479004
    7. 'items' → logprob: -10.253342628479004
    8. ',item' → logprob: -11.503342628479004
    9. ',p' → logprob: -11.878342628479004
    10. ' ,' → logprob: -12.128342628479004

Token 81: ' cnt' (ID: 27340)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.31338849663734436
    2. ' count' → logprob: -1.313388466835022
    3. 'cnt' → logprob: -9.06338882446289
    4. ' cnt' → logprob: -11.93838882446289
    5. ' in' → logprob: -14.06338882446289
    6. '	count' → logprob: -14.18838882446289
    7. 'value' → logprob: -14.43838882446289
    8. '<|end|>' → logprob: -14.56338882446289
    9. ' ' → logprob: -14.93838882446289
    10. 'v' → logprob: -15.06338882446289

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07890576124191284
    2. 'in' → logprob: -2.5789058208465576
    3. '<|end|>' → logprob: -11.703906059265137
    4. ',' → logprob: -13.203906059265137
    5. '	in' → logprob: -13.453906059265137
    6. ' ' → logprob: -13.578906059265137
    7. '<|end|>' → logprob: -13.578906059265137
    8. '```' → logprob: -14.453906059265137
    9. 'to' → logprob: -15.578906059265137
    10. 'In' → logprob: -15.578906059265137

Token 83: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.38687410950660706
    2. 'pair' → logprob: -1.1368740797042847
    3. '(pair' → logprob: -12.886874198913574
    4. '<pair' → logprob: -15.386874198913574
    5. 'counter' → logprob: -15.511874198913574
    6. ' counter' → logprob: -15.886874198913574
    7. '_pair' → logprob: -16.386873245239258
    8. 'Pair' → logprob: -18.386873245239258
    9. 'pairs' → logprob: -18.386873245239258
    10. ' paire' → logprob: -18.636873245239258

Token 84: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.022230489179491997
    2. '.items' → logprob: -4.272230625152588
    3. 'items' → logprob: -5.022230625152588
    4. 'count' → logprob: -7.397230625152588
    5. 's' → logprob: -8.27223014831543
    6. '```' → logprob: -8.39723014831543
    7. 'Count' → logprob: -8.89723014831543
    8. '.iteritems' → logprob: -9.27223014831543
    9. '_counter' → logprob: -10.77223014831543
    10. '_COUNT' → logprob: -10.77223014831543

Token 85: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.001611866056919098
    2. 'items' → logprob: -6.501611709594727
    3. '.' → logprob: -9.251611709594727
    4. '.iteritems' → logprob: -11.751611709594727
    5. '.m' → logprob: -12.626611709594727
    6. ' .' → logprob: -14.376611709594727
    7. ' items' → logprob: -14.876611709594727
    8. ' if' → logprob: -14.876611709594727
    9. '.Items' → logprob: -15.126611709594727
    10. 'if' → logprob: -15.126611709594727

Token 86: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010735384421423078
    2. '()]' → logprob: -6.876073360443115
    3. '())' → logprob: -11.251073837280273
    4. ' ()' → logprob: -11.501073837280273
    5. '()`' → logprob: -12.126073837280273
    6. '()][' → logprob: -12.251073837280273
    7. 'if' → logprob: -12.876073837280273
    8. '()
' → logprob: -13.626073837280273
    9. '()>' → logprob: -13.876073837280273
    10. '`()' → logprob: -14.501073837280273

Token 87: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023270871490240097
    2. 'if' → logprob: -3.773270845413208
    3. ' ' → logprob: -11.273270606994629
    4. '	if' → logprob: -11.898270606994629
    5. '   ' → logprob: -12.398270606994629
    6. '    ' → logprob: -14.273270606994629
    7. '  ' → logprob: -15.148270606994629
    8. '       ' → logprob: -16.023271560668945
    9. ' in' → logprob: -16.148271560668945
    10. '```' → logprob: -16.148271560668945

Token 88: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.17976433038711548
    2. ' cnt' → logprob: -1.8047642707824707
    3. '(cnt' → logprob: -11.429764747619629
    4. '	cnt' → logprob: -12.179764747619629
    5. 'count' → logprob: -14.304764747619629
    6. '[cnt' → logprob: -14.304764747619629
    7. ' ' → logprob: -14.554764747619629
    8. '_cnt' → logprob: -14.679764747619629
    9. '   ' → logprob: -14.679764747619629
    10. 'cn' → logprob: -15.054764747619629

Token 89: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5773058533668518
    2. '>=' → logprob: -0.8273058533668518
    3. '>' → logprob: -7.202305793762207
    4. '==' → logprob: -8.202305793762207
    5. ' >' → logprob: -8.327305793762207
    6. ' ==' → logprob: -9.452305793762207
    7. ' ' → logprob: -11.702305793762207
    8. ']>=' → logprob: -12.452305793762207
    9. '[' → logprob: -12.827305793762207
    10. ')' → logprob: -13.577305793762207

Token 90: ' F' (ID: 454)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.03365238755941391
    2. ' F' → logprob: -3.4086523056030273
    3. ' ' → logprob: -12.283652305603027
    4. ' ' → logprob: -14.408652305603027
    5. '   ' → logprob: -15.283652305603027
    6. '(F' → logprob: -15.533652305603027
    7. '	F' → logprob: -15.658652305603027
    8. '2' → logprob: -15.908652305603027
    9. '1' → logprob: -15.908652305603027
    10. '  ' → logprob: -16.408653259277344

Token 91: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.7755875129951164e-05
    2. ' ]' → logprob: -10.50004768371582
    3. ')]' → logprob: -11.37504768371582
    4. ']
' → logprob: -12.00004768371582
    5. ']

' → logprob: -13.75004768371582
    6. ')' → logprob: -14.12504768371582
    7. '])' → logprob: -15.25004768371582
    8. '()]' → logprob: -15.62504768371582
    9. ']
' → logprob: -15.75004768371582
    10. '`]' → logprob: -16.37504768371582

Token 92: 'res' (ID: 430)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12349081039428711
    2. 'res' → logprob: -2.623490810394287
    3. 'for' → logprob: -3.248490810394287
    4. '
' → logprob: -5.498490810394287
    5. '```' → logprob: -8.373491287231445
    6. '<|end|>' → logprob: -8.748491287231445
    7. ' for' → logprob: -8.873491287231445
    8. ' res' → logprob: -9.998491287231445
    9. 'pairs' → logprob: -10.998491287231445
    10. 'sorted' → logprob: -10.998491287231445

Token 93: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014212513342499733
    2. '(' → logprob: -4.264212608337402
    3. '()
' → logprob: -10.889212608337402
    4. '()`' → logprob: -11.014212608337402
    5. '(reverse' → logprob: -13.389212608337402
    6. ' ()' → logprob: -13.389212608337402
    7. '()

' → logprob: -13.514212608337402
    8. '();' → logprob: -14.014212608337402
    9. '(()' → logprob: -14.014212608337402
    10. '()\' → logprob: -14.014212608337402

Token 95: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1002492681145668
    2. 'print' → logprob: -2.3502492904663086
    3. ' for' → logprob: -10.600249290466309
    4. '```' → logprob: -11.475249290466309
    5. '
' → logprob: -12.725249290466309
    6. '<|end|>' → logprob: -12.975249290466309
    7. 'if' → logprob: -13.600249290466309
    8. '#print' → logprob: -15.850249290466309
    9. '  
' → logprob: -15.975249290466309
    10. '``' → logprob: -15.975249290466309

Token 96: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2432629019021988
    2. '('' → logprob: -2.618263006210327
    3. '(len' → logprob: -2.868263006210327
    4. '("("' → logprob: -3.243263006210327
    5. '(*' → logprob: -3.368263006210327
    6. '(res' → logprob: -4.493262767791748
    7. '("' → logprob: -7.118262767791748
    8. '(sum' → logprob: -8.493263244628906
    9. '(tuple' → logprob: -8.493263244628906
    10. '("(' → logprob: -9.243263244628906

Token 97: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0011759399203583598
    2. '(' → logprob: -6.751175880432129
    3. ')' → logprob: -12.626175880432129
    4. 'res' → logprob: -13.751175880432129
    5. ' (' → logprob: -14.001175880432129
    6. '(rest' → logprob: -16.126176834106445
    7. ')(' → logprob: -16.501176834106445
    8. '```' → logprob: -16.876176834106445
    9. '(
' → logprob: -17.251176834106445
    10. '(

' → logprob: -17.251176834106445

Token 98: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010757996933534741
    2. ')
' → logprob: -7.126075744628906
    3. ',' → logprob: -8.251075744628906
    4. '),' → logprob: -12.751075744628906
    5. ')`' → logprob: -13.001075744628906
    6. '))' → logprob: -13.251075744628906
    7. ')
' → logprob: -13.751075744628906
    8. ' )' → logprob: -13.876075744628906
    9. ',)' → logprob: -15.251075744628906
    10. '`)' → logprob: -15.501075744628906

Token 99: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001725511101540178
    2. 'print' → logprob: -8.87517261505127
    3. ' for' → logprob: -10.62517261505127
    4. '\' → logprob: -12.75017261505127
    5. ')
' → logprob: -13.00017261505127
    6. ')' → logprob: -13.87517261505127
    7. '```' → logprob: -13.87517261505127
    8. '
' → logprob: -14.75017261505127
    9. '('\' → logprob: -15.25017261505127
    10. 'if' → logprob: -15.62517261505127

Token 100: ' a' (ID: 261)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.3486160635948181
    2. ' pair' → logprob: -1.223616123199463
    3. 'p' → logprob: -9.348615646362305
    4. '(pair' → logprob: -10.223615646362305
    5. ' p' → logprob: -11.223615646362305
    6. 'a' → logprob: -11.973615646362305
    7. '_pair' → logprob: -12.098615646362305
    8. '   ' → logprob: -12.348615646362305
    9. 'item' → logprob: -12.348615646362305
    10. ' ' → logprob: -12.473615646362305

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07942549139261246
    2. ',b' → logprob: -2.579425573348999
    3. ' ,' → logprob: -8.079425811767578
    4. ',a' → logprob: -8.954425811767578
    5. ',res' → logprob: -9.829425811767578
    6. 'b' → logprob: -10.704425811767578
    7. ' in' → logprob: -12.579425811767578
    8. 'in' → logprob: -12.829425811767578
    9. ',f' → logprob: -13.079425811767578
    10. ' b' → logprob: -13.329425811767578

Token 102: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00861456897109747
    2. ' b' → logprob: -4.758614540100098
    3. ' ' → logprob: -20.258615493774414
    4. '   ' → logprob: -22.383615493774414
    5. '  ' → logprob: -22.758615493774414
    6. '	b' → logprob: -24.133615493774414
    7. '*b' → logprob: -24.133615493774414
    8. '    ' → logprob: -24.633615493774414
    9. ',b' → logprob: -24.758615493774414
    10. '_b' → logprob: -24.883615493774414

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014185008592903614
    2. 'in' → logprob: -4.264184951782227
    3. ',' → logprob: -11.014184951782227
    4. ' ' → logprob: -12.639184951782227
    5. 'print' → logprob: -14.139184951782227
    6. ' ,' → logprob: -14.889184951782227
    7. '   ' → logprob: -16.139184951782227
    8. '	in' → logprob: -16.139184951782227
    9. '  ' → logprob: -16.389184951782227
    10. '<|end|>' → logprob: -16.514184951782227

Token 104: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00671584764495492
    2. ' res' → logprob: -5.006715774536133
    3. 'print' → logprob: -15.006715774536133
    4. '(res' → logprob: -15.756715774536133
    5. 'r' → logprob: -17.131715774536133
    6. '	res' → logprob: -17.381715774536133
    7. '
' → logprob: -17.506715774536133
    8. '_res' → logprob: -18.381715774536133
    9. 'ress' → logprob: -18.506715774536133
    10. ' ' → logprob: -18.506715774536133

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017264900729060173
    2. ':
' → logprob: -4.1422648429870605
    3. ',' → logprob: -7.3922648429870605
    4. 'print' → logprob: -8.142265319824219
    5. '   ' → logprob: -9.392265319824219
    6. '():
' → logprob: -9.517265319824219
    7. ' print' → logprob: -10.142265319824219
    8. '<|end|>' → logprob: -10.267265319824219
    9. '):
' → logprob: -10.392265319824219
    10. '.print' → logprob: -10.892265319824219

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1161876991391182
    2. ' print' → logprob: -2.241187810897827
    3. 'print' → logprob: -5.741187572479248
    4. '	print' → logprob: -9.366188049316406
    5. '<|end|>' → logprob: -10.116188049316406
    6. '    
' → logprob: -11.991188049316406
    7. '```' → logprob: -11.991188049316406
    8. '       ' → logprob: -12.116188049316406
    9. ' ' → logprob: -13.616188049316406
    10. '(print' → logprob: -14.241188049316406

Token 107: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.023667363449931145
    2. ' print' → logprob: -3.773667335510254
    3. '   ' → logprob: -7.773667335510254
    4. '	print' → logprob: -13.773667335510254
    5. '```' → logprob: -16.14866828918457
    6. '.print' → logprob: -17.39866828918457
    7. 'printf' → logprob: -19.27366828918457
    8. '#print' → logprob: -19.77366828918457
    9. ' ' → logprob: -19.77366828918457
    10. '       ' → logprob: -20.02366828918457

Token 108: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0032977282535284758
    2. '(f' → logprob: -5.753297805786133
    3. 'a' → logprob: -9.128297805786133
    4. '(' → logprob: -11.878297805786133
    5. 'f' → logprob: -12.378297805786133
    6. '('' → logprob: -15.003297805786133
    7. '((' → logprob: -18.003297805786133
    8. ' a' → logprob: -18.253297805786133
    9. '("' → logprob: -18.753297805786133
    10. '```' → logprob: -18.753297805786133

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004025481757707894
    2. ' ,' → logprob: -8.250402450561523
    3. ',b' → logprob: -8.875402450561523
    4. ' b' → logprob: -15.000402450561523
    5. ')' → logprob: -15.250402450561523
    6. ',end' → logprob: -15.250402450561523
    7. ',
' → logprob: -15.500402450561523
    8. ',"' → logprob: -15.750402450561523
    9. ',a' → logprob: -16.375402450561523
    10. '   ' → logprob: -16.750402450561523

Token 110: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00861456897109747
    2. ' b' → logprob: -4.758614540100098
    3. ' ' → logprob: -19.883615493774414
    4. '   ' → logprob: -20.508615493774414
    5. '    ' → logprob: -21.383615493774414
    6. ')b' → logprob: -21.508615493774414
    7. ''b' → logprob: -22.133615493774414
    8. '	b' → logprob: -22.383615493774414
    9. '(b' → logprob: -22.883615493774414
    10. '  ' → logprob: -23.383615493774414

Token 111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.000000953674316
    3. ')}' → logprob: -16.875
    4. ')`' → logprob: -16.875
    5. ' )' → logprob: -17.375
    6. ')#' → logprob: -17.5
    7. '),' → logprob: -17.75
    8. '')' → logprob: -18.0
    9. ')**' → logprob: -18.0
    10. '))' → logprob: -18.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 109
Tokens correctement prédits (1ère position, stricte): 53
Tokens correctement prédits (1ère position, avec adaptation): 55
Tokens correctement prédits (top 10): 94
Précision stricte (1ère position): 48.62%
Précision adaptée (1ère position): 50.46%
Précision (top 10): 86.24%
================================================================================
