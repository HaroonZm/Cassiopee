================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
D,L=map(int,input().split())
print(D//L + (D%L>0))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'D' (ID: 35)
  → Token d'amorce (pas de prédiction)

Token 1: ',L' (ID: 68006)
  → Token d'amorce (pas de prédiction)

Token 2: '=' (ID: 28)
  → Token d'amorce (pas de prédiction)

Token 3: 'map' (ID: 3726)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7214260697364807
    2. ' ' → logprob: -1.721426010131836
    3. '10' → logprob: -2.096426010131836
    4. '[' → logprob: -3.346426010131836
    5. '32' → logprob: -3.471426010131836
    6. '[]' → logprob: -3.721426010131836
    7. '1' → logprob: -3.846426010131836
    8. 'map' → logprob: -4.221426010131836
    9. '5' → logprob: -4.471426010131836
    10. '2' → logprob: -4.471426010131836

Token 4: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048291172832250595
    2. '(lambda' → logprob: -3.4232912063598633
    3. '(int' → logprob: -4.673291206359863
    4. '<|end|>' → logprob: -6.673291206359863
    5. '(input' → logprob: -7.298291206359863
    6. '```' → logprob: -7.798291206359863
    7. '((' → logprob: -7.798291206359863
    8. '(str' → logprob: -8.298291206359863
    9. '(eval' → logprob: -8.548291206359863
    10. '(len' → logprob: -8.548291206359863

Token 5: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12536154687404633
    2. ')' → logprob: -2.250361442565918
    3. '(' → logprob: -4.875361442565918
    4. 'input' → logprob: -5.875361442565918
    5. ',input' → logprob: -7.250361442565918
    6. '(user' → logprob: -8.750361442565918
    7. '=input' → logprob: -8.750361442565918
    8. '(raw' → logprob: -8.875361442565918
    9. '(int' → logprob: -9.125361442565918
    10. '`)' → logprob: -9.375361442565918

Token 6: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.9382027387619019
    2. '()' → logprob: -1.1882027387619019
    3. ')' → logprob: -2.3132028579711914
    4. '(' → logprob: -2.6882028579711914
    5. '('' → logprob: -3.1882028579711914
    6. '(()' → logprob: -3.8132028579711914
    7. '()>' → logprob: -4.438202857971191
    8. '<|end|>' → logprob: -4.563202857971191
    9. '()">' → logprob: -5.188202857971191
    10. '();)' → logprob: -5.313202857971191

Token 7: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.123899558791891e-05
    2. 'strip' → logprob: -9.75007152557373
    3. ' split' → logprob: -12.12507152557373
    4. ')' → logprob: -12.50007152557373
    5. '(split' → logprob: -13.37507152557373
    6. 'rstrip' → logprob: -13.87507152557373
    7. 'spl' → logprob: -14.25007152557373
    8. 'read' → logprob: -15.00007152557373
    9. 'replace' → logprob: -17.000070571899414
    10. 'plit' → logprob: -17.000070571899414

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03098905086517334
    2. '())' → logprob: -3.905989170074463
    3. '))' → logprob: -4.905989170074463
    4. '`)' → logprob: -6.155989170074463
    5. '()' → logprob: -8.155988693237305
    6. '(' → logprob: -8.905988693237305
    7. ')`' → logprob: -9.280988693237305
    8. '')' → logprob: -9.280988693237305
    9. '('' → logprob: -10.405988693237305
    10. '()))' → logprob: -10.405988693237305

Token 9: 'print' (ID: 1598)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9984804391860962
    2. 'a' → logprob: -1.4984804391860962
    3. 'for' → logprob: -2.1234803199768066
    4. 'r' → logprob: -2.9984803199768066
    5. 'if' → logprob: -3.2484803199768066
    6. ',' → logprob: -3.4984803199768066
    7. 'print' → logprob: -3.9984803199768066
    8. ';' → logprob: -4.123480319976807
    9. 'd' → logprob: -4.123480319976807
    10. '```' → logprob: -4.623480319976807

Token 10: '(D' (ID: 9908)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004474732850212604
    2. '('' → logprob: -8.000447273254395
    3. '("("' → logprob: -9.625447273254395
    4. '(D' → logprob: -11.000447273254395
    5. '((' → logprob: -11.625447273254395
    6. '()' → logprob: -12.125447273254395
    7. '("""' → logprob: -12.375447273254395
    8. '("' → logprob: -13.000447273254395
    9. '(`' → logprob: -13.750447273254395
    10. '(L' → logprob: -14.125447273254395

Token 11: '//' (ID: 393)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7047718167304993
    2. ')' → logprob: -0.8297718167304993
    3. '+' → logprob: -2.8297717571258545
    4. '*' → logprob: -4.829771995544434
    5. '-' → logprob: -6.829771995544434
    6. ',L' → logprob: -7.579771995544434
    7. '%' → logprob: -8.954771995544434
    8. '[' → logprob: -8.954771995544434
    9. '//' → logprob: -9.204771995544434
    10. ' )' → logprob: -9.204771995544434

Token 12: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -2.8325677703833207e-05
    2. '2' → logprob: -10.750028610229492
    3. '1' → logprob: -12.875028610229492
    4. ' L' → logprob: -13.125028610229492
    5. '7' → logprob: -14.500028610229492
    6. '10' → logprob: -14.500028610229492
    7. '3' → logprob: -15.625028610229492
    8. '100' → logprob: -15.625028610229492
    9. 'D' → logprob: -15.750028610229492
    10. '5' → logprob: -16.000028610229492

Token 13: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2961512513575144e-05
    2. '))' → logprob: -10.875022888183594
    3. '*' → logprob: -13.750022888183594
    4. '`)' → logprob: -13.875022888183594
    5. ' )' → logprob: -14.750022888183594
    6. ')
' → logprob: -14.875022888183594
    7. '**' → logprob: -15.500022888183594
    8. '```' → logprob: -15.500022888183594
    9. ')`' → logprob: -15.500022888183594
    10. ')))' → logprob: -16.250022888183594

Token 14: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.379322350025177
    2. '(D' → logprob: -1.3793222904205322
    3. '(' → logprob: -3.1293222904205322
    4. ' (' → logprob: -4.504322528839111
    5. 'int' → logprob: -5.879322528839111
    6. '(int' → logprob: -6.254322528839111
    7. ' ' → logprob: -6.879322528839111
    8. 'D' → logprob: -7.129322528839111
    9. 'bool' → logprob: -7.254322528839111
    10. ' D' → logprob: -7.379322528839111

Token 15: 'D' (ID: 35)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08498292416334152
    2. 'D' → logprob: -2.8349828720092773
    3. '(D' → logprob: -4.459982872009277
    4. ' D' → logprob: -5.084982872009277
    5. ' ' → logprob: -6.334982872009277
    6. '(' → logprob: -6.584982872009277
    7. ' (' → logprob: -6.959982872009277
    8. 'int' → logprob: -7.709982872009277
    9. ' int' → logprob: -8.834982872009277
    10. '0' → logprob: -8.834982872009277

Token 16: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12694741785526276
    2. ' %' → logprob: -2.1269474029541016
    3. '%D' → logprob: -11.001947402954102
    4. ' %
' → logprob: -14.001947402954102
    5. '%
' → logprob: -14.126947402954102
    6. ' ' → logprob: -15.251947402954102
    7. ' ' → logprob: -15.751947402954102
    8. '/L' → logprob: -16.3769474029541
    9. '%

' → logprob: -16.7519474029541
    10. '<L' → logprob: -16.7519474029541

Token 17: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.00038014890742488205
    2. ' L' → logprob: -7.875380039215088
    3. '>L' → logprob: -16.75037956237793
    4. 'l' → logprob: -19.37537956237793
    5. ' ' → logprob: -19.50037956237793
    6. '```' → logprob: -19.87537956237793
    7. '	L' → logprob: -20.00037956237793
    8. '_L' → logprob: -20.62537956237793
    9. ''L' → logprob: -20.75037956237793
    10. '`' → logprob: -20.87537956237793

Token 18: '>' (ID: 29)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1285795271396637
    2. '>' → logprob: -2.128579616546631
    3. ' !=' → logprob: -6.628579616546631
    4. '>L' → logprob: -8.878579139709473
    5. '```' → logprob: -10.128579139709473
    6. '!==' → logprob: -10.253579139709473
    7. ' >' → logprob: -10.503579139709473
    8. '()!=' → logprob: -10.503579139709473
    9. ')!=' → logprob: -11.003579139709473
    10. '0' → logprob: -11.378579139709473

Token 19: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. 'L' → logprob: -21.87502098083496
    4. '=' → logprob: -22.37502098083496
    5. '۰' → logprob: -22.87502098083496
    6. '1' → logprob: -23.00002098083496
    7. '9' → logprob: -24.25002098083496
    8. '>' → logprob: -24.37502098083496
    9. '  ' → logprob: -24.50002098083496
    10. ')' → logprob: -24.50002098083496

Token 20: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03804321587085724
    2. '))' → logprob: -3.288043260574341
    3. ')))' → logprob: -13.913043022155762
    4. ')
' → logprob: -14.788043022155762
    5. ' )' → logprob: -15.538043022155762
    6. '`)' → logprob: -16.163043975830078
    7. ')`' → logprob: -16.788043975830078
    8. ')")' → logprob: -17.038043975830078
    9. '))
' → logprob: -17.413043975830078
    10. '})' → logprob: -17.413043975830078


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 18
Tokens correctement prédits (1ère position, stricte): 5
Tokens correctement prédits (1ère position, avec adaptation): 5
Tokens correctement prédits (top 10): 15
Précision stricte (1ère position): 27.78%
Précision adaptée (1ère position): 27.78%
Précision (top 10): 83.33%
================================================================================
