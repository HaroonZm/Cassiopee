================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:24:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
triangles = 0
right = 0
acute = 0
obtuse = 0
while True:
    try:
        a,b,c = map(int,input().split())
    except:
        break
    x,y,z = sorted([a,b,c])
    if x + y <= z:
        print(triangles,right,acute,obtuse)
        break
    triangles += 1
    s = x*x + y*y
    z2 = z*z
    if z2 == s:
        right += 1
    elif z2 < s:
        acute += 1
    else:
        obtuse += 1
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'tri' (ID: 22343)
  → Token d'amorce (pas de prédiction)

Token 1: 'angles' (ID: 34011)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.25873222947120667
    2. '[' → logprob: -1.8837321996688843
    3. '[]' → logprob: -3.258732318878174
    4. ' [' → logprob: -3.383732318878174
    5. ' ' → logprob: -6.008732318878174
    6. ' [[]' → logprob: -7.883732318878174
    7. ' {}' → logprob: -9.008731842041016
    8. '```' → logprob: -9.133731842041016
    9. '{}' → logprob: -9.633731842041016
    10. '[][]' → logprob: -9.758731842041016

Token 4: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08068938553333282
    2. '[]' → logprob: -2.5806894302368164
    3. '3' → logprob: -7.705689430236816
    4. '[[' → logprob: -7.830689430236816
    5. '{}' → logprob: -8.080689430236816
    6. '[int' → logprob: -8.330689430236816
    7. '[(' → logprob: -8.705689430236816
    8. '```' → logprob: -10.080689430236816
    9. ' [' → logprob: -10.580689430236816
    10. '[][]' → logprob: -10.705689430236816

Token 5: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8334064483642578
    2. '\n' → logprob: -1.4584064483642578
    3. '\' → logprob: -1.7084064483642578
    4. '<|end|>' → logprob: -2.958406448364258
    5. '```' → logprob: -3.208406448364258
    6. '=' → logprob: -3.708406448364258
    7. '
' → logprob: -4.458406448364258
    8. '#' → logprob: -4.458406448364258
    9. '+=' → logprob: -6.333406448364258
    10. 'newline' → logprob: -6.958406448364258

Token 6: 'right' (ID: 2460)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6161109209060669
    2. '\n' → logprob: -2.3661108016967773
    3. '\' → logprob: -2.4911108016967773
    4. '
' → logprob: -2.7411108016967773
    5. 't' → logprob: -2.7411108016967773
    6. '=' → logprob: -2.9911108016967773
    7. ' ' → logprob: -3.6161108016967773
    8. '```' → logprob: -3.7411108016967773
    9. '#' → logprob: -4.366110801696777
    10. ',' → logprob: -5.491110801696777

Token 7: ' =' (ID: 314)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.7401342391967773
    2. '_' → logprob: -0.8651342391967773
    3. '_triangle' → logprob: -3.1151342391967773
    4. '_tri' → logprob: -3.2401342391967773
    5. '_angles' → logprob: -4.115134239196777
    6. 'angled' → logprob: -7.490134239196777
    7. 'angle' → logprob: -7.740134239196777
    8. 'angles' → logprob: -7.990134239196777
    9. '=' → logprob: -8.865134239196777
    10. ' =' → logprob: -8.990134239196777

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4773411452770233
    2. '0' → logprob: -0.9773411750793457
    3. ' triangles' → logprob: -6.102341175079346
    4. '1' → logprob: -7.977341175079346
    5. '3' → logprob: -8.352340698242188
    6. 'tri' → logprob: -8.977340698242188
    7. ' []' → logprob: -8.977340698242188
    8. '[]' → logprob: -10.227340698242188
    9. '_tri' → logprob: -10.477340698242188
    10. 'Triangles' → logprob: -10.602340698242188

Token 9: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03229159116744995
    2. '[]' → logprob: -3.6572916507720947
    3. '3' → logprob: -6.907291412353516
    4. 'tri' → logprob: -6.907291412353516
    5. '{}' → logprob: -6.907291412353516
    6. 'True' → logprob: -7.282291412353516
    7. ' ' → logprob: -7.282291412353516
    8. '1' → logprob: -7.782291412353516
    9. ' []' → logprob: -8.407291412353516
    10. '[' → logprob: -8.532291412353516

Token 10: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 11: 'acute' (ID: 31898)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.963006317615509
    2. '
' → logprob: -1.4630062580108643
    3. 't' → logprob: -2.7130062580108643
    4. '```' → logprob: -3.0880062580108643
    5. '<|end|>' → logprob: -3.2130062580108643
    6. ',' → logprob: -3.3380062580108643
    7. '=' → logprob: -3.4630062580108643
    8. '\' → logprob: -3.5880062580108643
    9. ' triangles' → logprob: -3.7130062580108643
    10. '+' → logprob: -3.9630062580108643

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1449938863515854
    2. '=' → logprob: -2.019993782043457
    3. '_' → logprob: -6.394993782043457
    4. ' ' → logprob: -8.269993782043457
    5. 's' → logprob: -9.019993782043457
    6. '<|end|>' → logprob: -9.519993782043457
    7. '_=' → logprob: -9.894993782043457
    8. ')' → logprob: -10.019993782043457
    9. ',' → logprob: -10.894993782043457
    10. ' ' → logprob: -11.644993782043457

Token 13: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12695161998271942
    2. '0' → logprob: -2.1269516944885254
    3. '1' → logprob: -11.626951217651367
    4. ' ' → logprob: -12.626951217651367
    5. '3' → logprob: -13.001951217651367
    6. '<|end|>' → logprob: -13.251951217651367
    7. '```' → logprob: -13.814451217651367
    8. 's' → logprob: -13.876951217651367
    9. '  ' → logprob: -14.001951217651367
    10. ')' → logprob: -14.189451217651367

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1269354522228241
    2. ' ' → logprob: -2.1269354820251465
    3. '1' → logprob: -12.376935005187988
    4. '3' → logprob: -14.064435005187988
    5. '2' → logprob: -15.376935005187988
    6. ' ' → logprob: -15.376935005187988
    7. ' triangles' → logprob: -15.439435005187988
    8. '```' → logprob: -15.626935005187988
    9. '4' → logprob: -15.689435005187988
    10. '  ' → logprob: -15.876935005187988

Token 15: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 16: 'obt' (ID: 172737)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2222098112106323
    2. '<|end|>' → logprob: -1.4722098112106323
    3. '```' → logprob: -1.7222098112106323
    4. 'if' → logprob: -2.597209930419922
    5. 'while' → logprob: -3.097209930419922
    6. '=' → logprob: -3.347209930419922
    7. ' for' → logprob: -3.847209930419922
    8. 'i' → logprob: -3.972209930419922
    9. '#' → logprob: -4.222209930419922
    10. '
' → logprob: -4.347209930419922

Token 17: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.0005505294539034367
    2. '=' → logprob: -7.750550746917725
    3. '_use' → logprob: -10.250550270080566
    4. 'u' → logprob: -11.125550270080566
    5. 't' → logprob: -11.250550270080566
    6. 'uze' → logprob: -11.375550270080566
    7. '```' → logprob: -11.375550270080566
    8. 'us' → logprob: -11.500550270080566
    9. 'used' → logprob: -12.000550270080566
    10. ' =' → logprob: -12.375550270080566

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007342241005972028
    2. '=' → logprob: -7.250734329223633
    3. ' ' → logprob: -11.125734329223633
    4. 's' → logprob: -12.250734329223633
    5. ')' → logprob: -14.375734329223633
    6. ' =)' → logprob: -14.375734329223633
    7. ' =
' → logprob: -14.500734329223633
    8. '_' → logprob: -14.500734329223633
    9. '<|end|>' → logprob: -14.500734329223633
    10. ' +=' → logprob: -14.625734329223633

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07889771461486816
    2. '0' → logprob: -2.578897714614868
    3. ' ' → logprob: -12.578897476196289
    4. '1' → logprob: -13.328897476196289
    5. '```' → logprob: -14.203897476196289
    6. 's' → logprob: -15.516397476196289
    7. ')' → logprob: -15.578897476196289
    8. ' =' → logprob: -15.578897476196289
    9. '<|end|>' → logprob: -15.578897476196289
    10. '  ' → logprob: -15.953897476196289

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324780821800232
    2. ' ' → logprob: -3.773247718811035
    3. '1' → logprob: -14.273247718811035
    4. ' ' → logprob: -14.773247718811035
    5. ')' → logprob: -15.085747718811035
    6. '  ' → logprob: -16.64824867248535
    7. '```' → logprob: -16.77324867248535
    8. '3' → logprob: -16.83574867248535
    9. ''' → logprob: -17.02324867248535
    10. 'None' → logprob: -17.14824867248535

Token 21: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.759166419506073
    2. '```' → logprob: -0.884166419506073
    3. 'while' → logprob: -3.0091664791107178
    4. '\n' → logprob: -3.6341664791107178
    5. '
' → logprob: -4.384166240692139
    6. 'n' → logprob: -4.384166240692139
    7. '\' → logprob: -5.634166240692139
    8. ':' → logprob: -5.634166240692139
    9. '<|end|>' → logprob: -6.009166240692139
    10. ' for' → logprob: -6.134166240692139

Token 22: 'while' (ID: 7032)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8579455018043518
    2. 'for' → logprob: -0.9829455018043518
    3. '\n' → logprob: -2.607945442199707
    4. 'while' → logprob: -3.232945442199707
    5. '
' → logprob: -3.482945442199707
    6. ',' → logprob: -4.607945442199707
    7. ':' → logprob: -4.732945442199707
    8. '\' → logprob: -4.982945442199707
    9. '<|end|>' → logprob: -4.982945442199707
    10. 'n' → logprob: -5.607945442199707

Token 23: ' True' (ID: 6432)
  Prédit: ' triangles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triangles' → logprob: -0.03243007883429527
    2. ' ' → logprob: -3.5324301719665527
    3. ' True' → logprob: -6.157430171966553
    4. ' ' → logprob: -8.782429695129395
    5. ' space' → logprob: -9.782429695129395
    6. ' triangle' → logprob: -10.157429695129395
    7. ' triang' → logprob: -10.157429695129395
    8. ' not' → logprob: -10.282429695129395
    9. ' triangular' → logprob: -10.282429695129395
    10. ' n' → logprob: -10.532429695129395

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.4894986785948277e-05
    2. '':' → logprob: -11.375044822692871
    3. '```' → logprob: -11.875044822692871
    4. ':
' → logprob: -12.000044822692871
    5. '':'' → logprob: -12.500044822692871
    6. '`:' → logprob: -12.500044822692871
    7. '):' → logprob: -12.750044822692871
    8. '():' → logprob: -12.875044822692871
    9. ':**' → logprob: -13.000044822692871
    10. ' :' → logprob: -14.000044822692871

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005009363405406475
    2. '    
' → logprob: -6.505009174346924
    3. ' ' → logprob: -7.255009174346924
    4. ' input' → logprob: -7.630009174346924
    5. ' indentation' → logprob: -7.880009174346924
    6. ' 
' → logprob: -8.005009651184082
    7. '    ' → logprob: -8.130009651184082
    8. ' )' → logprob: -8.505009651184082
    9. ' try' → logprob: -9.130009651184082
    10. ' n' → logprob: -9.130009651184082

Token 26: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3176913857460022
    2. ' line' → logprob: -1.6926913261413574
    3. ' try' → logprob: -2.9426913261413574
    4. 'line' → logprob: -4.442691326141357
    5. 'try' (adapté à ' try') → logprob: -4.692691326141357
    6. ' user' → logprob: -5.567691326141357
    7. ' ' → logprob: -6.317691326141357
    8. 'n' → logprob: -6.692691326141357
    9. ' triangle' → logprob: -6.942691326141357
    10. ' n' → logprob: -7.192691326141357

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001681367284618318
    2. ':
' → logprob: -7.001681327819824
    3. ' :' → logprob: -7.251681327819824
    4. '   ' → logprob: -9.876681327819824
    5. ' :
' → logprob: -12.626681327819824
    6. '):' → logprob: -13.501681327819824
    7. ':

' → logprob: -14.126681327819824
    8. '    ' → logprob: -14.251681327819824
    9. ':return' → logprob: -14.501681327819824
    10. ':
' → logprob: -14.876681327819824

Token 28: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005587925668805838
    2. '   ' → logprob: -5.255588054656982
    3. '    ' → logprob: -9.005587577819824
    4. ':' → logprob: -10.005587577819824
    5. '```' → logprob: -10.130587577819824
    6. ' :' → logprob: -10.255587577819824
    7. ':
' → logprob: -11.630587577819824
    8. '      ' → logprob: -11.755587577819824
    9. '<|end|>' → logprob: -11.755587577819824
    10. '    
' → logprob: -11.880587577819824

Token 29: ' a' (ID: 261)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0930517241358757
    2. 'line' → logprob: -3.0930516719818115
    3. '   ' → logprob: -3.3430516719818115
    4. ' n' → logprob: -5.593051910400391
    5. ' triangle' → logprob: -7.218051910400391
    6. ' data' → logprob: -7.718051910400391
    7. ' x' → logprob: -7.968051910400391
    8. 'n' → logprob: -8.09305191040039
    9. ' inp' → logprob: -8.09305191040039
    10. ' triangles' → logprob: -8.34305191040039

Token 30: ',b' (ID: 17568)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08885930478572845
    2. ' ' → logprob: -3.0888593196868896
    3. '=' → logprob: -3.7138593196868896
    4. ',' → logprob: -4.4638590812683105
    5. ' ,' → logprob: -6.8388590812683105
    6. '=int' → logprob: -7.3388590812683105
    7. ')' → logprob: -8.088859558105469
    8. ' )' → logprob: -8.088859558105469
    9. '  ' → logprob: -8.713859558105469
    10. '[' → logprob: -8.838859558105469

Token 31: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.44643688201904297
    2. ' =' → logprob: -1.071436882019043
    3. '=' → logprob: -4.571436882019043
    4. ',c' → logprob: -5.946436882019043
    5. ' ,' → logprob: -6.446436882019043
    6. ',input' → logprob: -7.071436882019043
    7. ',i' → logprob: -8.196436882019043
    8. ',e' → logprob: -8.696436882019043
    9. ',b' → logprob: -8.946436882019043
    10. ',w' → logprob: -9.071436882019043

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03371739387512207
    2. '=' → logprob: -3.408717393875122
    3. ',' → logprob: -9.658717155456543
    4. ')' → logprob: -12.908717155456543
    5. '=input' → logprob: -13.533717155456543
    6. ' ,' → logprob: -14.033717155456543
    7. '=int' → logprob: -14.283717155456543
    8. ' =)' → logprob: -14.283717155456543
    9. ' ' → logprob: -14.658717155456543
    10. '<|end|>' → logprob: -15.033717155456543

Token 33: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.016535038128495216
    2. 'map' → logprob: -4.266534805297852
    3. ' list' → logprob: -6.516534805297852
    4. ' [' → logprob: -7.766534805297852
    5. ' input' → logprob: -8.016534805297852
    6. '[' → logprob: -10.016534805297852
    7. 'list' → logprob: -10.391534805297852
    8. ' ' → logprob: -10.641534805297852
    9. 'input' → logprob: -11.141534805297852
    10. '	map' → logprob: -11.641534805297852

Token 34: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004606230184435844
    2. '(' → logprob: -5.504606246948242
    3. '(input' → logprob: -7.879606246948242
    4. 'int' → logprob: -10.004606246948242
    5. '(lambda' → logprob: -10.254606246948242
    6. '(list' → logprob: -10.504606246948242
    7. '<int' → logprob: -11.129606246948242
    8. '(str' → logprob: -12.129606246948242
    9. 'list' → logprob: -12.504606246948242
    10. '(float' → logprob: -12.629606246948242

Token 35: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0045282659120857716
    2. '(' → logprob: -6.129528045654297
    3. 'input' → logprob: -6.629528045654297
    4. ')' → logprob: -7.129528045654297
    5. ',input' → logprob: -9.254528045654297
    6. ' input' → logprob: -10.004528045654297
    7. '<|end|>' → logprob: -10.129528045654297
    8. '<input' → logprob: -11.504528045654297
    9. '=input' → logprob: -12.129528045654297
    10. '```' → logprob: -12.254528045654297

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004505250137299299
    2. '()' → logprob: -5.504505157470703
    3. '())' → logprob: -8.004505157470703
    4. '('').' → logprob: -10.629505157470703
    5. '(' → logprob: -10.879505157470703
    6. '('' → logprob: -11.129505157470703
    7. ')' → logprob: -11.754505157470703
    8. '()))' → logprob: -11.879505157470703
    9. '());' → logprob: -12.504505157470703
    10. ' ().' → logprob: -12.504505157470703

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.2762428822461516e-05
    2. 'strip' → logprob: -10.000052452087402
    3. 'rstrip' → logprob: -12.375052452087402
    4. '(split' → logprob: -12.875052452087402
    5. ' split' → logprob: -14.500052452087402
    6. ')' → logprob: -18.12505340576172
    7. '.split' → logprob: -18.12505340576172
    8. 'spl' → logprob: -18.12505340576172
    9. 'replace' → logprob: -18.25005340576172
    10. '```' → logprob: -18.50005340576172

Token 38: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04043504223227501
    2. '()))' → logprob: -3.2904350757598877
    3. '('' → logprob: -6.790434837341309
    4. '()' → logprob: -7.540434837341309
    5. ')' → logprob: -7.665434837341309
    6. '))' → logprob: -9.040434837341309
    7. '(' → logprob: -9.415434837341309
    8. '())
' → logprob: -11.040434837341309
    9. ' ())' → logprob: -11.165434837341309
    10. '()))
' → logprob: -11.415434837341309

Token 39: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' except' (ID: 6384)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ':
' (ID: 734)
  Prédit: ' EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.020695921033620834
    2. 'EOF' → logprob: -3.895695924758911
    3. ' Value' → logprob: -10.145695686340332
    4. '(' → logprob: -10.395695686340332
    5. ':' → logprob: -10.645695686340332
    6. ' (' → logprob: -11.020695686340332
    7. ' Exception' → logprob: -11.395695686340332
    8. ' ' → logprob: -11.520695686340332
    9. 'Value' → logprob: -11.520695686340332
    10. '(Exception' → logprob: -12.020695686340332

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0831817090511322
    2. '   ' → logprob: -3.458181619644165
    3. ' ' → logprob: -3.833181619644165
    4. '    ' → logprob: -4.958181858062744
    5. '	' → logprob: -5.208181858062744
    6. ':' → logprob: -5.833181858062744
    7. ' ' → logprob: -5.958181858062744
    8. '	break' → logprob: -6.208181858062744
    9. '<|end|>' → logprob: -6.583181858062744
    10. ' 	' → logprob: -6.833181858062744

Token 43: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.14408932626247406
    2. 'break' (adapté à ' break') → logprob: -2.0190892219543457
    3. '	break' → logprob: -7.519089221954346
    4. '       ' → logprob: -7.644089221954346
    5. '   ' → logprob: -7.894089221954346
    6. '_break' → logprob: -12.019089698791504
    7. '```' → logprob: -12.394089698791504
    8. ' ' → logprob: -12.894089698791504
    9. 'b' → logprob: -13.644089698791504
    10. '-break' → logprob: -14.019089698791504

Token 44: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03736509382724762
    2. '<|end|>' → logprob: -3.537365198135376
    3. '
' → logprob: -5.912364959716797
    4. '    
' → logprob: -6.537364959716797
    5. '```' → logprob: -7.037364959716797
    6. '<|end|>' → logprob: -7.787364959716797
    7. '\n' → logprob: -7.787364959716797
    8. '  ' → logprob: -8.037364959716797
    9. ' if' → logprob: -8.037364959716797
    10. '  
' → logprob: -8.412364959716797

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09781000763177872
    2. '<|end|>' → logprob: -2.5978100299835205
    3. '
' → logprob: -4.847809791564941
    4. '    
' → logprob: -5.222809791564941
    5. '```' → logprob: -6.847809791564941
    6. '<|end|>' → logprob: -7.222809791564941
    7. ' if' → logprob: -7.222809791564941
    8. '  
' → logprob: -7.347809791564941
    9. '\n' → logprob: -7.472809791564941
    10. ' 
' → logprob: -7.722809791564941

Token 46: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04659102112054825
    2. '```' → logprob: -3.92159104347229
    3. '    
' → logprob: -4.921590805053711
    4. '<|end|>' → logprob: -5.046590805053711
    5. ' if' → logprob: -5.796590805053711
    6. '
' → logprob: -6.046590805053711
    7. '   
' → logprob: -6.546590805053711
    8. ' 
' → logprob: -7.171590805053711
    9. 'if' → logprob: -7.296590805053711
    10. '  ' → logprob: -7.546590805053711

Token 47: ',y' (ID: 16103)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05041928589344025
    2. '=' → logprob: -3.175419330596924
    3. ',' → logprob: -5.175419330596924
    4. 's' → logprob: -7.675419330596924
    5. ' +=' → logprob: -7.800419330596924
    6. '=a' → logprob: -8.300418853759766
    7. ',y' → logprob: -8.425418853759766
    8. ',a' → logprob: -9.300418853759766
    9. '=s' → logprob: -9.550418853759766
    10. '+=' → logprob: -9.925418853759766

Token 48: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -0.01902696117758751
    2. ',' → logprob: -4.269026756286621
    3. ' =' → logprob: -5.894026756286621
    4. ',y' → logprob: -6.894026756286621
    5. '=' → logprob: -8.019026756286621
    6. ' ,' → logprob: -8.019026756286621
    7. ',x' → logprob: -8.394026756286621
    8. ',w' → logprob: -9.644026756286621
    9. ',c' → logprob: -9.894026756286621
    10. ',Z' → logprob: -11.269026756286621

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2538771629333496
    2. '=' → logprob: -1.5038771629333496
    3. ',' → logprob: -6.25387716293335
    4. ' ,' → logprob: -12.128877639770508
    5. ')' → logprob: -13.378877639770508
    6. '```' → logprob: -13.503877639770508
    7. ' ' → logprob: -13.753877639770508
    8. '','=','' → logprob: -14.003877639770508
    9. ' =
' → logprob: -14.128877639770508
    10. '=int' → logprob: -14.128877639770508

Token 50: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.006449731532484293
    2. 'a' → logprob: -5.7564496994018555
    3. ' sorted' → logprob: -5.7564496994018555
    4. '[a' → logprob: -10.006449699401855
    5. '(sorted' → logprob: -10.006449699401855
    6. ' a' → logprob: -12.381449699401855
    7. 'sort' → logprob: -12.756449699401855
    8. '[' → logprob: -12.881449699401855
    9. '   ' → logprob: -13.131449699401855
    10. '.sorted' → logprob: -14.506449699401855

Token 51: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.9319726228713989
    2. '(a' → logprob: -1.056972622871399
    3. '([' → logprob: -1.931972622871399
    4. '(' → logprob: -2.1819725036621094
    5. '(
' → logprob: -7.181972503662109
    6. '(input' → logprob: -9.55697250366211
    7. '(x' → logprob: -9.93197250366211
    8. '(s' → logprob: -10.18197250366211
    9. '([(' → logprob: -10.68197250366211
    10. ' (' → logprob: -11.55697250366211

Token 52: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.128163257315464e-07
    2. ' a' → logprob: -15.75
    3. '[a' → logprob: -16.625
    4. '(a' → logprob: -17.125
    5. '	a' → logprob: -19.75
    6. '   ' → logprob: -21.5
    7. '#a' → logprob: -22.0
    8. ')a' → logprob: -22.25
    9. ''a' → logprob: -22.5
    10. '<a' → logprob: -23.0

Token 53: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3870397210121155
    2. ',b' → logprob: -1.1370396614074707
    3. ',y' → logprob: -9.637040138244629
    4. ',c' → logprob: -9.887040138244629
    5. ' ,' → logprob: -10.262040138244629
    6. ',a' → logprob: -12.387040138244629
    7. ',
' → logprob: -13.387040138244629
    8. ',s' → logprob: -13.512040138244629
    9. ',m' → logprob: -13.887040138244629
    10. '<|end|>' → logprob: -13.887040138244629

Token 54: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.0017414625035598874
    2. ',' → logprob: -6.376741409301758
    3. ' ,' → logprob: -10.501741409301758
    4. 'c' → logprob: -11.626741409301758
    5. ',
' → logprob: -13.876741409301758
    6. ',C' → logprob: -14.751741409301758
    7. '   ' → logprob: -15.876741409301758
    8. ',y' → logprob: -15.876741409301758
    9. ',a' → logprob: -16.376741409301758
    10. ',n' → logprob: -16.376741409301758

Token 55: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00013834332639817148
    2. '])
' → logprob: -9.250138282775879
    3. ')' → logprob: -10.625138282775879
    4. ' ])' → logprob: -12.125138282775879
    5. '   ' → logprob: -12.625138282775879
    6. ']' → logprob: -12.750138282775879
    7. ')])' → logprob: -13.375138282775879
    8. ']))' → logprob: -14.000138282775879
    9. '],' → logprob: -14.250138282775879
    10. '])]' → logprob: -14.500138282775879

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12236671894788742
    2. '<|end|>' → logprob: -2.6223666667938232
    3. '```' → logprob: -3.8723666667938232
    4. '
' → logprob: -4.622366905212402
    5. '    
' → logprob: -5.372366905212402
    6. ' if' → logprob: -6.247366905212402
    7. '\n' → logprob: -6.372366905212402
    8. '  
' → logprob: -6.872366905212402
    9. 'if' → logprob: -7.497366905212402
    10. '   
' → logprob: -7.622366905212402

Token 57: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12686163187026978
    2. 'if' (adapté à ' if') → logprob: -2.501861572265625
    3. ' if' → logprob: -3.501861572265625
    4. '```' → logprob: -5.501861572265625
    5. '    
' → logprob: -6.876861572265625
    6. '<|end|>' → logprob: -7.626861572265625
    7. '  ' → logprob: -8.001861572265625
    8. '
' → logprob: -8.876861572265625
    9. '\n' → logprob: -9.126861572265625
    10. ':' → logprob: -9.251861572265625

Token 58: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5240465402603149
    2. ' x' → logprob: -0.8990465402603149
    3. 'z' → logprob: -7.899046421051025
    4. ' ' → logprob: -8.024046897888184
    5. ' z' → logprob: -9.024046897888184
    6. '(x' → logprob: -9.774046897888184
    7. '	x' → logprob: -11.274046897888184
    8. '   ' → logprob: -11.274046897888184
    9. ' (' → logprob: -12.274046897888184
    10. '(' → logprob: -12.274046897888184

Token 59: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17215083539485931
    2. ' +' → logprob: -1.9221508502960205
    3. '==' → logprob: -5.297150611877441
    4. '>' → logprob: -5.422150611877441
    5. '<=' → logprob: -7.047150611877441
    6. '**' → logprob: -7.672150611877441
    7. ' ==' → logprob: -8.172150611877441
    8. ' >' → logprob: -8.672150611877441
    9. '0' → logprob: -8.922150611877441
    10. '+y' → logprob: -9.047150611877441

Token 60: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014164687134325504
    2. ' y' → logprob: -4.264164924621582
    3. '	y' → logprob: -14.389164924621582
    4. ' ' → logprob: -15.014164924621582
    5. 'z' → logprob: -15.264164924621582
    6. '>' → logprob: -16.639163970947266
    7. '   ' → logprob: -17.389163970947266
    8. 'x' → logprob: -17.889163970947266
    9. 'yz' → logprob: -18.264163970947266
    10. '  ' → logprob: -18.389163970947266

Token 61: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.016141466796398163
    2. '>' → logprob: -4.266141414642334
    3. ' <=' → logprob: -6.266141414642334
    4. '<' → logprob: -10.391141891479492
    5. '```' → logprob: -11.266141891479492
    6. ')<=' → logprob: -11.516141891479492
    7. ' >' → logprob: -12.016141891479492
    8. ']<=' → logprob: -12.391141891479492
    9. '==' → logprob: -13.016141891479492
    10. '">' → logprob: -13.016141891479492

Token 62: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.012523310258984566
    2. ' z' → logprob: -4.387523174285889
    3. '	z' → logprob: -11.262523651123047
    4. ' ' → logprob: -15.137523651123047
    5. ''z' → logprob: -15.137523651123047
    6. '   ' → logprob: -16.012523651123047
    7. '_z' → logprob: -16.762523651123047
    8. 'Z' → logprob: -17.137523651123047
    9. ':z' → logprob: -17.262523651123047
    10. '=z' → logprob: -17.262523651123047

Token 63: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021502818912267685
    2. '       ' → logprob: -4.02150297164917
    3. ':
' → logprob: -5.89650297164917
    4. '   ' → logprob: -7.52150297164917
    5. '           ' → logprob: -11.771502494812012
    6. ' or' → logprob: -11.896502494812012
    7. '    ' → logprob: -12.021502494812012
    8. '	' → logprob: -12.146502494812012
    9. ':return' → logprob: -12.146502494812012
    10. ' :' → logprob: -12.271502494812012

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021223699674010277
    2. ' continue' → logprob: -4.896223545074463
    3. '\n' → logprob: -5.146223545074463
    4. '   ' → logprob: -5.396223545074463
    5. 'continue' → logprob: -5.896223545074463
    6. '	continue' → logprob: -9.396224021911621
    7. '\' → logprob: -9.771224021911621
    8. '    
' → logprob: -10.021224021911621
    9. '           ' → logprob: -10.021224021911621
    10. '```' → logprob: -10.021224021911621

Token 65: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43386101722717285
    2. 'continue' → logprob: -1.5588610172271729
    3. ' continue' → logprob: -2.058861017227173
    4. '   ' → logprob: -4.308860778808594
    5. '	continue' → logprob: -8.183860778808594
    6. '```' → logprob: -8.433860778808594
    7. '           ' → logprob: -10.308860778808594
    8. 'contin' → logprob: -11.933860778808594
    9. ' ' → logprob: -11.933860778808594
    10. '``' → logprob: -12.433860778808594

Token 66: '(tr' (ID: 14363)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10827135294675827
    2. '(' → logprob: -2.483271360397339
    3. '('' → logprob: -3.983271360397339
    4. '("("' → logprob: -8.608271598815918
    5. '("(' → logprob: -9.483271598815918
    6. '(False' → logprob: -10.108271598815918
    7. '("")' → logprob: -10.483271598815918
    8. '()' → logprob: -10.483271598815918
    9. '"' → logprob: -10.858271598815918
    10. '(not' → logprob: -10.858271598815918

Token 67: 'i' (ID: 72)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.04926268383860588
    2. 'i' → logprob: -3.049262762069702
    3. 'a' → logprob: -7.799262523651123
    4. 'tri' → logprob: -9.299263000488281
    5. 'ang' → logprob: -9.799263000488281
    6. 'agles' → logprob: -10.799263000488281
    7. 'an' → logprob: -11.174263000488281
    8. 'angle' → logprob: -11.924263000488281
    9. '_tri' → logprob: -11.924263000488281
    10. '-' → logprob: -12.049263000488281

Token 68: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.0012905937619507313
    2. 'angle' → logprob: -7.001290798187256
    3. 'agles' → logprob: -8.876290321350098
    4. 'ang' → logprob: -9.126290321350098
    5. 'an' → logprob: -10.001290321350098
    6. 'a' → logprob: -11.251290321350098
    7. 'anges' → logprob: -11.501290321350098
    8. 'ANGLES' → logprob: -11.501290321350098
    9. 'es' → logprob: -11.751290321350098
    10. 'ng' → logprob: -11.751290321350098

Token 69: ',right' (ID: 164487)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018705027177929878
    2. ')
' → logprob: -4.018704891204834
    3. ' )' → logprob: -8.768705368041992
    4. ',' → logprob: -8.893705368041992
    5. '+' → logprob: -9.643705368041992
    6. ',end' → logprob: -9.893705368041992
    7. 'continue' → logprob: -10.143705368041992
    8. ')s' → logprob: -11.268705368041992
    9. 's' → logprob: -11.268705368041992
    10. ')
' → logprob: -11.393705368041992

Token 70: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17892208695411682
    2. ',' → logprob: -2.053922176361084
    3. '+' → logprob: -4.053922176361084
    4. ')
' → logprob: -4.928922176361084
    5. ',end' → logprob: -5.178922176361084
    6. ' +' → logprob: -6.303922176361084
    7. ' )' → logprob: -7.053922176361084
    8. '")' → logprob: -8.303921699523926
    9. ' ,' → logprob: -8.553921699523926
    10. ',)' → logprob: -8.678921699523926

Token 71: 'acute' (ID: 31898)
  Prédit: 'acute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acute' → logprob: -0.00017827287956606597
    2. ' acute' → logprob: -9.125178337097168
    3. 'obt' → logprob: -9.625178337097168
    4. 'ac' → logprob: -13.500178337097168
    5. 'acu' → logprob: -13.750178337097168
    6. '0' → logprob: -16.12517738342285
    7. 'right' → logprob: -16.25017738342285
    8. ' ' → logprob: -16.37517738342285
    9. 'acet' → logprob: -16.37517738342285
    10. '   ' → logprob: -16.37517738342285

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.228561349213123e-05
    2. ' ,' → logprob: -10.375052452087402
    3. 'obt' → logprob: -11.250052452087402
    4. ' obt' → logprob: -13.000052452087402
    5. ')' → logprob: -13.250052452087402
    6. 'ob' → logprob: -14.000052452087402
    7. ',obj' → logprob: -14.500052452087402
    8. '```' → logprob: -14.875052452087402
    9. ',
' → logprob: -15.125052452087402
    10. '),' → logprob: -15.125052452087402

Token 73: 'obt' (ID: 172737)
  Prédit: 'obt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obt' → logprob: -3.845798710244708e-05
    2. ' obt' → logprob: -10.500038146972656
    3. 'ob' → logprob: -11.625038146972656
    4. 'Obt' → logprob: -13.750038146972656
    5. '0' → logprob: -15.875038146972656
    6. 'o' → logprob: -15.875038146972656
    7. ' ' → logprob: -16.375038146972656
    8. 'obb' → logprob: -16.625038146972656
    9. '   ' → logprob: -16.625038146972656
    10. 'obl' → logprob: -16.875038146972656

Token 74: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -3.173704271830502e-06
    2. '```' → logprob: -14.50000286102295
    3. '_use' → logprob: -14.87500286102295
    4. 'us' → logprob: -15.12500286102295
    5. ' use' → logprob: -15.37500286102295
    6. 't' → logprob: -15.87500286102295
    7. 'Use' → logprob: -15.87500286102295
    8. '

' → logprob: -16.000003814697266
    9. '=' → logprob: -16.000003814697266
    10. '.use' → logprob: -16.125003814697266

Token 75: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013405199570115656
    2. ')
' → logprob: -9.125134468078613
    3. ' )' → logprob: -11.375134468078613
    4. ',' → logprob: -12.250134468078613
    5. '   ' → logprob: -12.625134468078613
    6. '`)' → logprob: -12.875134468078613
    7. '")' → logprob: -14.250134468078613
    8. '')' → logprob: -14.375134468078613
    9. ')`' → logprob: -14.375134468078613
    10. ',)' → logprob: -14.625134468078613

Token 76: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10207121819257736
    2. '   ' → logprob: -2.4770712852478027
    3. 'continue' → logprob: -4.852071285247803
    4. '	continue' → logprob: -5.977071285247803
    5. '```' → logprob: -6.602071285247803
    6. ' continue' → logprob: -6.852071285247803
    7. '
' → logprob: -9.602070808410645
    8. '        
' → logprob: -9.852070808410645
    9. '	' → logprob: -10.102070808410645
    10. '    
' → logprob: -10.727070808410645

Token 77: ' break' (ID: 2338)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.1628546118736267
    2. 'break' (adapté à ' break') → logprob: -2.1628546714782715
    3. '       ' → logprob: -4.0378546714782715
    4. ' continue' → logprob: -4.4128546714782715
    5. '   ' → logprob: -6.0378546714782715
    6. 'tri' → logprob: -6.4128546714782715
    7. ' break' → logprob: -6.9128546714782715
    8. ' triangles' → logprob: -8.662854194641113
    9. 'contin' → logprob: -9.162854194641113
    10. '	continue' → logprob: -9.412854194641113

Token 78: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011027066502720118
    2. '    
' → logprob: -7.001102924346924
    3. '```' → logprob: -10.126102447509766
    4. '  
' → logprob: -10.376102447509766
    5. 'else' → logprob: -10.751102447509766
    6. ')' → logprob: -10.876102447509766
    7. '   
' → logprob: -11.001102447509766
    8. '<|end|>' → logprob: -11.126102447509766
    9. '  ' → logprob: -11.501102447509766
    10. '`' → logprob: -11.876102447509766

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008171311928890646
    2. 'else' → logprob: -8.37581729888916
    3. '    
' → logprob: -8.37581729888916
    4. ')' → logprob: -9.62581729888916
    5. 'if' → logprob: -9.62581729888916
    6. '```' → logprob: -9.62581729888916
    7. 'elif' → logprob: -10.37581729888916
    8. '<|end|>' → logprob: -10.62581729888916
    9. ' else' → logprob: -11.12581729888916
    10. ' triangles' → logprob: -11.12581729888916

Token 80: ' triangles' (ID: 92927)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23345771431922913
    2. 'tri' → logprob: -1.6084576845169067
    3. ' triangles' → logprob: -5.358457565307617
    4. 'if' → logprob: -6.358457565307617
    5. '```' → logprob: -7.608457565307617
    6. ' if' → logprob: -7.983457565307617
    7. 'else' → logprob: -8.358457565307617
    8. '    
' → logprob: -8.608457565307617
    9. '  ' → logprob: -10.108457565307617
    10. 'elif' → logprob: -10.358457565307617

Token 81: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.13953335583209991
    2. '+=' → logprob: -2.264533281326294
    3. '+' → logprob: -3.639533281326294
    4. ' +' → logprob: -10.139533042907715
    5. '=' → logprob: -10.639533042907715
    6. '<|end|>' → logprob: -11.764533042907715
    7. ' ' → logprob: -12.014533042907715
    8. ']+=' → logprob: -12.764533042907715
    9. ' =' → logprob: -12.889533042907715
    10. '+='' → logprob: -13.014533042907715

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -21.750015258789062
    4. '１' → logprob: -22.000015258789062
    5. '3' → logprob: -22.750015258789062
    6. '```' → logprob: -22.750015258789062
    7. '<|end|>' → logprob: -23.125015258789062
    8. '+' → logprob: -23.500015258789062
    9. '2' → logprob: -23.875015258789062
    10. '۱' → logprob: -23.875015258789062

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. 'a' → logprob: -20.25
    4. '   ' → logprob: -21.125
    5. '１' → logprob: -21.625
    6. '```' → logprob: -21.625
    7. '3' → logprob: -21.875
    8. 'x' → logprob: -22.25
    9. '2' → logprob: -22.3125
    10. '0' → logprob: -22.5

Token 84: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01335340179502964
    2. ' ' → logprob: -5.76335334777832
    3. '<|end|>' → logprob: -5.76335334777832
    4. '    
' → logprob: -6.01335334777832
    5. '    ' → logprob: -6.88835334777832
    6. ' 
' → logprob: -7.01335334777832
    7. '  ' → logprob: -7.01335334777832
    8. '   
' → logprob: -7.38835334777832
    9. '     
' → logprob: -8.51335334777832
    10. '  
' → logprob: -8.51335334777832

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012026732787489891
    2. '    ' → logprob: -4.762026786804199
    3. '     
' → logprob: -6.637026786804199
    4. '    
' → logprob: -6.887026786804199
    5. ' if' → logprob: -8.1370267868042
    6. '```' → logprob: -8.3870267868042
    7. '   
' → logprob: -9.1370267868042
    8. '  ' → logprob: -9.5120267868042
    9. ' ' → logprob: -9.6370267868042
    10. '`' → logprob: -9.8870267868042

Token 86: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03189561516046524
    2. '   ' → logprob: -5.031895637512207
    3. 'r' → logprob: -5.156895637512207
    4. 's' (adapté à ' s') → logprob: -5.281895637512207
    5. 'angle' → logprob: -5.281895637512207
    6. ' if' → logprob: -5.906895637512207
    7. '```' → logprob: -6.156895637512207
    8. 'c' → logprob: -6.906895637512207
    9. 'right' → logprob: -7.031895637512207
    10. 'import' → logprob: -7.781895637512207

Token 87: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.10827434808015823
    2. 'quare' → logprob: -2.733274459838867
    3. ' =' → logprob: -4.483274459838867
    4. 'quares' → logprob: -4.733274459838867
    5. 'um' → logprob: -5.358274459838867
    6. 'quared' → logprob: -5.483274459838867
    7. '=' → logprob: -5.858274459838867
    8. 'qr' → logprob: -5.983274459838867
    9. 'qua' → logprob: -6.733274459838867
    10. 'qu' → logprob: -7.358274459838867

Token 88: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00024144348572008312
    2. '(x' → logprob: -8.37524127960205
    3. ' x' → logprob: -11.62524127960205
    4. 'a' → logprob: -14.00024127960205
    5. '(' → logprob: -15.25024127960205
    6. '[x' → logprob: -15.50024127960205
    7. ' (' → logprob: -15.75024127960205
    8. '((' → logprob: -16.250242233276367
    9. '{x' → logprob: -16.250242233276367
    10. ' ' → logprob: -16.750242233276367

Token 89: '*x' (ID: 46987)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0003015001420862973
    2. 'q' → logprob: -9.000301361083984
    3. '*' → logprob: -9.375301361083984
    4. 'quare' → logprob: -9.750301361083984
    5. '*q' → logprob: -11.125301361083984
    6. '2' → logprob: -11.750301361083984
    7. '*x' → logprob: -12.500301361083984
    8. 'quared' → logprob: -13.125301361083984
    9. 'qr' → logprob: -13.375301361083984
    10. '*s' → logprob: -13.500301361083984

Token 90: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05097237601876259
    2. ' +' → logprob: -3.0509724617004395
    3. '+y' → logprob: -6.0509724617004395
    4. '+
' → logprob: -12.425971984863281
    5. '	' → logprob: -12.550971984863281
    6. '+b' → logprob: -12.675971984863281
    7. 'y' → logprob: -12.800971984863281
    8. '+x' → logprob: -13.425971984863281
    9. ' ' → logprob: -13.675971984863281
    10. '   ' → logprob: -13.800971984863281

Token 91: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004913145676255226
    2. ' y' → logprob: -7.625491142272949
    3. '	y' → logprob: -12.75049114227295
    4. '   ' → logprob: -15.37549114227295
    5. ''y' → logprob: -16.250492095947266
    6. '<|end|>' → logprob: -16.375492095947266
    7. ' ' → logprob: -17.500492095947266
    8. '*y' → logprob: -17.625492095947266
    9. '+y' → logprob: -18.125492095947266
    10. 'Y' → logprob: -18.875492095947266

Token 92: '*y' (ID: 83575)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14384861290454865
    2. '*y' → logprob: -2.0188486576080322
    3. '*x' → logprob: -8.268848419189453
    4. '*b' → logprob: -8.393848419189453
    5. '*z' → logprob: -8.643848419189453
    6. '*c' → logprob: -8.768848419189453
    7. '**' → logprob: -8.893848419189453
    8. ' *' → logprob: -9.268848419189453
    9. '*s' → logprob: -11.268848419189453
    10. '2' → logprob: -11.268848419189453

Token 93: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6807801127433777
    2. '<|end|>' → logprob: -0.9307801127433777
    3. ' -' → logprob: -2.6807801723480225
    4. 'c' → logprob: -4.680779933929443
    5. '<|end|>' → logprob: -5.180779933929443
    6. 'z' → logprob: -5.180779933929443
    7. '-z' → logprob: -5.805779933929443
    8. '>' → logprob: -6.055779933929443
    9. ' ' → logprob: -6.680779933929443
    10. '-c' → logprob: -7.305779933929443

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13953128457069397
    2. '<|end|>' → logprob: -2.389531373977661
    3. 'if' → logprob: -4.514531135559082
    4. 'c' → logprob: -4.514531135559082
    5. '  ' → logprob: -4.889531135559082
    6. ' if' → logprob: -5.889531135559082
    7. '```' → logprob: -7.014531135559082
    8. '  
' → logprob: -7.139531135559082
    9. '<|end|>' → logprob: -7.139531135559082
    10. '-' → logprob: -7.264531135559082

Token 95: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' (adapté à ' z') → logprob: -0.09566545486450195
    2. 'c' → logprob: -2.845665454864502
    3. '   ' → logprob: -4.345665454864502
    4. 'if' → logprob: -4.595665454864502
    5. ' z' → logprob: -5.345665454864502
    6. ' if' → logprob: -5.720665454864502
    7. ' c' → logprob: -7.845665454864502
    8. 's' → logprob: -8.095664978027344
    9. 't' → logprob: -8.220664978027344
    10. '  ' → logprob: -8.470664978027344

Token 96: '2' (ID: 17)
  Prédit: '*z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*z' → logprob: -0.20302912592887878
    2. '*' → logprob: -1.7030291557312012
    3. '*=' → logprob: -7.203029155731201
    4. '**' → logprob: -7.953029155731201
    5. '2' → logprob: -8.453028678894043
    6. '*s' → logprob: -8.453028678894043
    7. ' *' → logprob: -10.578028678894043
    8. '*t' → logprob: -11.578028678894043
    9. '*u' → logprob: -12.328028678894043
    10. '*l' → logprob: -12.453028678894043

Token 97: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575957179069519
    2. ' =' → logprob: -0.825957179069519
    3. '*=' → logprob: -11.575957298278809
    4. '*' → logprob: -12.700957298278809
    5. ' *=' → logprob: -13.075957298278809
    6. '=z' → logprob: -13.450957298278809
    7. ' ' → logprob: -14.200957298278809
    8. '**' → logprob: -15.325957298278809
    9. '2' → logprob: -15.700957298278809
    10. '=s' → logprob: -16.700956344604492

Token 98: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.001178439473733306
    2. ' z' → logprob: -6.75117826461792
    3. '	z' → logprob: -12.251178741455078
    4. '   ' → logprob: -12.626178741455078
    5. ' ' → logprob: -16.251178741455078
    6. 'c' → logprob: -17.251178741455078
    7. '  ' → logprob: -17.251178741455078
    8. '*z' → logprob: -17.376178741455078
    9. ''z' → logprob: -19.001178741455078
    10. '_z' → logprob: -19.126178741455078

Token 99: '*z' (ID: 128629)
  Prédit: '*z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*z' → logprob: -0.001516173011623323
    2. '*' → logprob: -6.501516342163086
    3. ' *' → logprob: -11.251516342163086
    4. 'z' → logprob: -14.126516342163086
    5. '**' → logprob: -16.126516342163086
    6. '*x' → logprob: -18.251516342163086
    7. '*u' → logprob: -18.501516342163086
    8. '*v' → logprob: -18.626516342163086
    9. '*b' → logprob: -18.751516342163086
    10. '*y' → logprob: -18.876516342163086

Token 100: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13555337488651276
    2. '<|end|>' → logprob: -2.1355533599853516
    3. '
' → logprob: -5.510553359985352
    4. '    
' → logprob: -6.635553359985352
    5. '<|end|>' → logprob: -6.885553359985352
    6. ' if' → logprob: -7.385553359985352
    7. '  
' → logprob: -7.510553359985352
    8. 'if' → logprob: -7.885553359985352
    9. '  ' → logprob: -8.385553359985352
    10. ')' → logprob: -9.010553359985352

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018385209143161774
    2. '<|end|>' → logprob: -4.143385410308838
    3. ' if' → logprob: -6.768385410308838
    4. 'if' → logprob: -7.768385410308838
    5. '
' → logprob: -8.51838493347168
    6. '    
' → logprob: -9.01838493347168
    7. '<|end|>' → logprob: -9.14338493347168
    8. ')' → logprob: -9.26838493347168
    9. '  
' → logprob: -9.51838493347168
    10. '```' → logprob: -9.76838493347168

Token 102: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5790859460830688
    2. 'if' (adapté à ' if') → logprob: -0.8290859460830688
    3. ' if' → logprob: -5.829085826873779
    4. '<|end|>' → logprob: -8.829086303710938
    5. '  ' → logprob: -10.454086303710938
    6. '    
' → logprob: -12.204086303710938
    7. '	if' → logprob: -12.454086303710938
    8. ' ' → logprob: -12.579086303710938
    9. 'If' → logprob: -12.579086303710938
    10. '  
' → logprob: -13.454086303710938

Token 103: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.07956014573574066
    2. ' z' → logprob: -2.9545600414276123
    3. 's' → logprob: -3.8295600414276123
    4. ' s' → logprob: -5.954560279846191
    5. '   ' → logprob: -10.704560279846191
    6. ' ' → logprob: -10.954560279846191
    7. 'abs' → logprob: -11.954560279846191
    8. '  ' → logprob: -12.079560279846191
    9. 'x' → logprob: -12.329560279846191
    10. ' abs' → logprob: -12.704560279846191

Token 104: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.388769103679806e-05
    2. '**' → logprob: -10.125093460083008
    3. ' ' → logprob: -11.000093460083008
    4. '==' → logprob: -11.125093460083008
    5. '<' → logprob: -12.000093460083008
    6. '*' → logprob: -12.125093460083008
    7. ' ==' → logprob: -12.625093460083008
    8. '=' → logprob: -12.625093460083008
    9. '_' → logprob: -12.875093460083008
    10. '`' → logprob: -14.750093460083008

Token 105: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.13222521543502808
    2. ' ==' → logprob: -2.132225275039673
    3. '=' → logprob: -5.507225036621094
    4. '>' → logprob: -7.382225036621094
    5. '<' → logprob: -8.257225036621094
    6. ' >' → logprob: -9.382225036621094
    7. '===' → logprob: -9.757225036621094
    8. ':' → logprob: -9.882225036621094
    9. ' <' → logprob: -9.882225036621094
    10. ' =' → logprob: -10.007225036621094

Token 106: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0009115827269852161
    2. ' s' → logprob: -7.000911712646484
    3. ' ' → logprob: -17.875911712646484
    4. '	s' → logprob: -18.750911712646484
    5. '   ' → logprob: -19.500911712646484
    6. '`s' → logprob: -19.625911712646484
    7. '  ' → logprob: -20.375911712646484
    8. '(s' → logprob: -20.500911712646484
    9. '{s' → logprob: -20.500911712646484
    10. '<s' → logprob: -20.750911712646484

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00035333906998857856
    2. ':right' → logprob: -8.500353813171387
    3. ':
' → logprob: -9.000353813171387
    4. '):' → logprob: -11.625353813171387
    5. 'right' → logprob: -12.000353813171387
    6. ' :' → logprob: -12.750353813171387
    7. '   ' → logprob: -13.000353813171387
    8. ' right' → logprob: -13.000353813171387
    9. '>:' → logprob: -14.500353813171387
    10. '       ' → logprob: -14.625353813171387

Token 108: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.38099318742752075
    2. '       ' → logprob: -1.380993127822876
    3. ' right' → logprob: -3.255993127822876
    4. '   ' → logprob: -3.630993127822876
    5. '	right' → logprob: -7.880993366241455
    6. ',right' → logprob: -10.505992889404297
    7. '     ' → logprob: -11.380992889404297
    8. ':right' → logprob: -11.505992889404297
    9. '[right' → logprob: -11.880992889404297
    10. '    ' → logprob: -12.380992889404297

Token 109: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.00043674863991327584
    2. ' right' → logprob: -7.750436782836914
    3. '       ' → logprob: -12.875436782836914
    4. '	right' → logprob: -13.250436782836914
    5. '   ' → logprob: -13.625436782836914
    6. 'rightness' → logprob: -16.000436782836914
    7. ',right' → logprob: -16.125436782836914
    8. 'rights' → logprob: -16.625436782836914
    9. '[right' → logprob: -16.750436782836914
    10. ':right' → logprob: -16.750436782836914

Token 110: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20143067836761475
    2. '+=' → logprob: -1.7014306783676147
    3. '+' → logprob: -11.201430320739746
    4. ']+=' → logprob: -13.201430320739746
    5. '+='' → logprob: -14.576430320739746
    6. '<|end|>' → logprob: -14.576430320739746
    7. '+="' → logprob: -15.326430320739746
    8. '=' → logprob: -15.451430320739746
    9. ' ' → logprob: -15.826430320739746
    10. ' +' → logprob: -16.326431274414062

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -20.625009536743164
    4. '１' → logprob: -21.625009536743164
    5. '```' → logprob: -21.625009536743164
    6. '<|end|>' → logprob: -21.875009536743164
    7. '۱' → logprob: -22.625009536743164
    8. '+' → logprob: -22.875009536743164
    9. '0' → logprob: -23.750009536743164
    10. '१' → logprob: -24.000009536743164

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -21.25
    4. '```' → logprob: -22.0
    5. '１' → logprob: -22.25
    6. '<|end|>' → logprob: -22.375
    7. '۱' → logprob: -22.875
    8. '१' → logprob: -23.25
    9. '১' → logprob: -23.625
    10. '+' → logprob: -23.875

Token 113: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029244232922792435
    2. 'elif' → logprob: -3.7792441844940186
    3. ' elif' → logprob: -5.279244422912598
    4. '<|end|>' → logprob: -7.404244422912598
    5. '    
' → logprob: -9.279244422912598
    6. '	elif' → logprob: -9.529244422912598
    7. '  ' → logprob: -9.654244422912598
    8. '
' → logprob: -11.279244422912598
    9. '  
' → logprob: -11.404244422912598
    10. '    ' → logprob: -12.279244422912598

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6996384859085083
    2. 'elif' → logprob: -0.6996384859085083
    3. ' elif' → logprob: -5.074638366699219
    4. '<|end|>' → logprob: -8.574638366699219
    5. '	elif' → logprob: -11.324638366699219
    6. '  ' → logprob: -11.574638366699219
    7. '    
' → logprob: -13.074638366699219
    8. '    ' → logprob: -13.324638366699219
    9. ' ' → logprob: -13.824638366699219
    10. '```' → logprob: -14.449638366699219

Token 115: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0067301723174750805
    2. ' elif' → logprob: -5.256730079650879
    3. '   ' → logprob: -6.506730079650879
    4. '	elif' → logprob: -13.756730079650879
    5. 'el' → logprob: -14.631730079650879
    6. '  ' → logprob: -15.381730079650879
    7. '    ' → logprob: -15.881730079650879
    8. ' ' → logprob: -17.006731033325195
    9. 'if' → logprob: -17.006731033325195
    10. 'else' → logprob: -17.756731033325195

Token 116: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.026310862973332405
    2. 'z' → logprob: -3.651310920715332
    3. '   ' → logprob: -12.276310920715332
    4. ' s' → logprob: -13.026310920715332
    5. '    ' → logprob: -13.526310920715332
    6. 's' → logprob: -13.901310920715332
    7. ' ' → logprob: -14.401310920715332
    8. '	z' → logprob: -14.401310920715332
    9. ' ' → logprob: -16.526309967041016
    10. '  ' → logprob: -16.776309967041016

Token 117: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.584239938296378e-06
    2. '>' → logprob: -12.375007629394531
    3. ' ' → logprob: -13.750007629394531
    4. '**' → logprob: -14.000007629394531
    5. '<' → logprob: -14.125007629394531
    6. '²' → logprob: -14.875007629394531
    7. ' >' → logprob: -15.625007629394531
    8. '₂' → logprob: -17.25000762939453
    9. '```' → logprob: -17.37500762939453
    10. '۲' → logprob: -17.50000762939453

Token 118: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.621048092842102
    2. ' <' → logprob: -1.371048092842102
    3. '>' → logprob: -1.996048092842102
    4. '<' → logprob: -2.6210479736328125
    5. ' ' → logprob: -8.746047973632812
    6. '.' → logprob: -12.496047973632812
    7. '   ' → logprob: -12.621047973632812
    8. '<|end|>' → logprob: -12.746047973632812
    9. ',' → logprob: -13.121047973632812
    10. '><' → logprob: -13.621047973632812

Token 119: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.693148672580719
    2. ' s' → logprob: -0.693148672580719
    3. ' ' → logprob: -13.943148612976074
    4. ' ' → logprob: -14.693148612976074
    5. '   ' → logprob: -16.56814956665039
    6. '	s' → logprob: -17.19314956665039
    7. '  ' → logprob: -18.44314956665039
    8. '    ' → logprob: -18.44314956665039
    9. '_s' → logprob: -18.69314956665039
    10. ':' → logprob: -19.44314956665039

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006938432343304157
    2. ':
' → logprob: -5.006938457489014
    3. '       ' → logprob: -8.506937980651855
    4. '   ' → logprob: -11.881937980651855
    5. ':
' → logprob: -11.881937980651855
    6. ' :' → logprob: -12.131937980651855
    7. ',' → logprob: -14.756937980651855
    8. ':

' → logprob: -14.756937980651855
    9. '):' → logprob: -15.381937980651855
    10. ' :
' → logprob: -15.381937980651855

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008307586424052715
    2. 'acute' → logprob: -5.258307456970215
    3. ' acute' → logprob: -6.008307456970215
    4. '   ' → logprob: -7.633307456970215
    5. '      ' → logprob: -9.758307456970215
    6. ':
' → logprob: -11.258307456970215
    7. '     ' → logprob: -11.383307456970215
    8. ':' → logprob: -11.758307456970215
    9. '
' → logprob: -12.133307456970215
    10. '    ' → logprob: -12.508307456970215

Token 122: ' acute' (ID: 43944)
  Prédit: 'acute'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acute' (adapté à ' acute') → logprob: -0.12545041739940643
    2. ' acute' → logprob: -2.250450372695923
    3. '       ' → logprob: -4.750450611114502
    4. '   ' → logprob: -5.625450611114502
    5. 'ac' → logprob: -8.750450134277344
    6. ' ' → logprob: -10.375450134277344
    7. '        ' → logprob: -10.750450134277344
    8. '    ' → logprob: -11.000450134277344
    9. '      ' → logprob: -11.250450134277344
    10. ' ac' → logprob: -11.375450134277344

Token 123: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.014195243827998638
    2. '+=' → logprob: -4.264195442199707
    3. '   ' → logprob: -11.014195442199707
    4. '       ' → logprob: -11.389195442199707
    5. '    ' → logprob: -13.264195442199707
    6. ' ' → logprob: -14.389195442199707
    7. ' +' → logprob: -14.764195442199707
    8. '        ' → logprob: -15.014195442199707
    9. '  ' → logprob: -15.514195442199707
    10. '+' → logprob: -15.514195442199707

Token 124: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017023178515955806
    2. ' ' → logprob: -6.376702308654785
    3. '+' → logprob: -16.6267032623291
    4. '   ' → logprob: -18.6267032623291
    5. ' +' → logprob: -19.0017032623291
    6. '１' → logprob: -20.5017032623291
    7. '0' → logprob: -20.5017032623291
    8. '-' → logprob: -20.8767032623291
    9. '       ' → logprob: -21.1267032623291
    10. '<|end|>' → logprob: -21.1267032623291

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '+' → logprob: -17.875009536743164
    4. '0' → logprob: -20.000009536743164
    5. '   ' → logprob: -20.000009536743164
    6. '<|end|>' → logprob: -20.125009536743164
    7. '```' → logprob: -20.375009536743164
    8. '１' → logprob: -20.500009536743164
    9. '-' → logprob: -20.500009536743164
    10. '
' → logprob: -20.937509536743164

Token 126: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017170661594718695
    2. 'else' → logprob: -7.0017170906066895
    3. ' else' → logprob: -7.1267170906066895
    4. 'elif' → logprob: -14.376716613769531
    5. '	else' → logprob: -14.751716613769531
    6. '<|end|>' → logprob: -15.001716613769531
    7. ' elif' → logprob: -15.501716613769531
    8. '  ' → logprob: -16.00171661376953
    9. '    
' → logprob: -16.75171661376953
    10. '    ' → logprob: -16.87671661376953

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014393137767910957
    2. 'else' → logprob: -4.264393329620361
    3. ' else' → logprob: -8.389392852783203
    4. 'elif' → logprob: -13.139392852783203
    5. '	else' → logprob: -15.389392852783203
    6. '  ' → logprob: -16.139392852783203
    7. '```' → logprob: -17.264392852783203
    8. '_else' → logprob: -17.389392852783203
    9. '    
' → logprob: -17.764392852783203
    10. ' ' → logprob: -17.764392852783203

Token 128: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0032746833749115467
    2. '   ' → logprob: -5.753274917602539
    3. ' else' → logprob: -9.253274917602539
    4. 'elif' → logprob: -13.878274917602539
    5. '	else' → logprob: -15.878274917602539
    6. '```' → logprob: -17.00327491760254
    7. '_else' → logprob: -17.50327491760254
    8. '    
' → logprob: -18.37827491760254
    9. '  ' → logprob: -18.62827491760254
    10. 'elses' → logprob: -18.62827491760254

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13303346931934357
    2. ':
' → logprob: -2.133033514022827
    3. '   ' → logprob: -5.633033275604248
    4. '       ' → logprob: -6.383033275604248
    5. ':
' → logprob: -7.383033275604248
    6. ' obt' → logprob: -9.008033752441406
    7. ' :' → logprob: -10.758033752441406
    8. ' :
' → logprob: -11.258033752441406
    9. '    ' → logprob: -11.633033752441406
    10. '  ' → logprob: -12.008033752441406

Token 130: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008785688318312168
    2. 'obt' → logprob: -5.258785724639893
    3. ' obt' → logprob: -5.758785724639893
    4. 'ob' → logprob: -8.633785247802734
    5. '   ' → logprob: -8.758785247802734
    6. '      ' → logprob: -11.008785247802734
    7. '	ob' → logprob: -11.883785247802734
    8. '     ' → logprob: -11.883785247802734
    9. '
' → logprob: -12.008785247802734
    10. '           ' → logprob: -12.258785247802734

Token 131: ' obt' (ID: 5564)
  Prédit: 'obt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obt' (adapté à ' obt') → logprob: -0.0038609972689300776
    2. ' obt' → logprob: -6.003860950469971
    3. '       ' → logprob: -6.628860950469971
    4. '   ' → logprob: -10.378861427307129
    5. 'ob' → logprob: -10.628861427307129
    6. 'Obt' → logprob: -13.253861427307129
    7. ' obtained' → logprob: -13.503861427307129
    8. ' ' → logprob: -13.628861427307129
    9. '      ' → logprob: -13.878861427307129
    10. '```' → logprob: -15.128861427307129

Token 132: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.0001793457195162773
    2. 'u' → logprob: -9.625179290771484
    3. '   ' → logprob: -10.000179290771484
    4. 'used' → logprob: -10.875179290771484
    5. 'ute' → logprob: -12.000179290771484
    6. '>' → logprob: -12.125179290771484
    7. '```' → logprob: -12.125179290771484
    8. 'uste' → logprob: -12.250179290771484
    9. 'ause' → logprob: -12.500179290771484
    10. ' ' → logprob: -13.250179290771484

Token 133: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07891226559877396
    2. '+=' → logprob: -2.5789122581481934
    3. '+' → logprob: -10.953912734985352
    4. ' ' → logprob: -13.328912734985352
    5. ' +' → logprob: -13.453912734985352
    6. ']+=' → logprob: -14.453912734985352
    7. '```' → logprob: -15.453912734985352
    8. ' ' → logprob: -15.453912734985352
    9. '=' → logprob: -15.953912734985352
    10. '+='' → logprob: -15.953912734985352

Token 134: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '+' → logprob: -17.000804901123047
    4. '   ' → logprob: -18.000804901123047
    5. '```' → logprob: -18.875804901123047
    6. '１' → logprob: -18.938304901123047
    7. '0' → logprob: -20.125804901123047
    8. '۱' → logprob: -20.188304901123047
    9. ' ' → logprob: -20.313304901123047
    10. '>' → logprob: -20.313304901123047

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '+' → logprob: -19.750001907348633
    4. '１' → logprob: -20.437501907348633
    5. '0' → logprob: -20.937501907348633
    6. '```' → logprob: -21.125001907348633
    7. '۱' → logprob: -21.187501907348633
    8. '   ' → logprob: -21.312501907348633
    9. '2' → logprob: -21.687501907348633
    10. '' → logprob: -21.937501907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 133
Tokens correctement prédits (1ère position, stricte): 52
Tokens correctement prédits (1ère position, avec adaptation): 58
Tokens correctement prédits (top 10): 114
Précision stricte (1ère position): 39.10%
Précision adaptée (1ère position): 43.61%
Précision (top 10): 85.71%
================================================================================
