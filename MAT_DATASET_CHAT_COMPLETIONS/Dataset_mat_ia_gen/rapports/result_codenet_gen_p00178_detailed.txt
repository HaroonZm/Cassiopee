================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:02:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# Large enough height to accommodate all blocks (max 1000 blocks, each up to length 5)
# We choose 2000 to be safe.
HEIGHT = 2000
WIDTH = 5

def drop_block(board, d, p, q):
    """
    Simulate dropping a block on the board.
    d: direction (1=horizontal, 2=vertical)
    p: length (1 to 5)
    q: position (1 to 5) - left end for horizontal, column for vertical
    board: 2D list representing board state (HEIGHT rows x WIDTH columns)
    """

    q -= 1  # zero-based index

    # Find the landing height of the block
    # Landing height (row) is the lowest row where the block can be placed (bottom row is 0)
    # We start from the bottom and go upward

    if d == 1:
        # horizontal block p-length starting at column q
        # Ensure the block fits horizontally
        if q + p > WIDTH:
            # invalid input technically, but per problem constraints it should not happen
            return

        # For each column of the block, find height of the stacked blocks
        max_height = 0
        for col in range(q, q + p):
            # find topmost filled cell in this column
            col_height = 0
            for row in range(HEIGHT):
                if board[row][col]:
                    col_height = row + 1  # block occupies this or below, so candidate height is next row
            if col_height > max_height:
                max_height = col_height

        # max_height is where the bottom of the block will rest
        # Place the block at max_height row over columns q..q+p-1
        for col in range(q, q + p):
            board[max_height][col] = True

        # After placing, clear any complete lines and settle blocks downwards
        clear_lines(board)

    else:
        # vertical block length p at column q
        # Find the row where depositing vertical block with p height is possible:
        # we need a space of p cells vertically, finding the lowest row where block bottom cell can be placed
        # We drop the block down until any block is immediately below the bottom cell, or bottom row is reached.
        # Check for each possible position the landing row

        # Starting from 0 (ground), we try upward until existing block blocks it.
        landing_row = 0
        while True:
            # check if block fits if placed with bottom cell at landing_row
            # check from landing_row to landing_row + p -1 cells at column q, if any cell occupied
            can_place = True
            if landing_row + p > HEIGHT:
                # out of bounds, cannot place here (should not happen due to large HEIGHT)
                can_place = False
            else:
                for r in range(landing_row, landing_row + p):
                    if board[r][q]:
                        can_place = False
                        break
            if not can_place:
                # cannot place here, must place one row above
                landing_row -= 1
                break
            landing_row += 1

        if landing_row < 0:
            landing_row = 0

        # place block vertical at landing_row to landing_row + p -1
        for r in range(landing_row, landing_row + p):
            board[r][q] = True

        clear_lines(board)


def clear_lines(board):
    """
    Check for full rows and clear them.
    Rows above lines cleared will fall down accordingly.
    """

    # We traverse from bottom (row=0) upwards
    write_row = 0  # position to copy rows downward
    for read_row in range(HEIGHT):
        if all(board[read_row]):
            # Row fully occupied - clear by not copying it down
            continue
        if read_row != write_row:
            # copy row down
            board[write_row] = board[read_row][:]
        write_row += 1

    # Clear remaining rows above
    for r in range(write_row, HEIGHT):
        board[r] = [False] * WIDTH


def count_blocks(board):
    """
    Count how many cells are True (blocks present) on the board.
    """
    count = 0
    for r in range(HEIGHT):
        for c in range(WIDTH):
            if board[r][c]:
                count += 1
    return count

def main():
    input = sys.stdin.readline

    while True:
        line = ''
        while line.strip() == '':
            line = input()
            if line == '':
                return
        n = int(line.strip())
        if n == 0:
            break

        # Initialize empty board
        # bottom row = 0 index
        board = [[False] * WIDTH for _ in range(HEIGHT)]

        for _ in range(n):
            while True:
                line = input()
                if line.strip() != '':
                    break
            d,p,q = map(int,line.strip().split())
            drop_block(board, d, p, q)

        result = count_blocks(board)
        print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.26693636178970337
    2. '\n' → logprob: -2.0169363021850586
    3. 'import' → logprob: -3.1419363021850586
    4. '<|end|>' → logprob: -3.2669363021850586
    5. 'newline' → logprob: -5.516936302185059
    6. '\' → logprob: -5.516936302185059
    7. '<|end|>' → logprob: -6.141936302185059
    8. '' → logprob: -6.266936302185059
    9. 'print' → logprob: -6.891936302185059
    10. '\r' → logprob: -6.891936302185059

Token 4: ' Large' (ID: 27976)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24100935459136963
    2. ' This' → logprob: -2.86600923538208
    3. ' The' → logprob: -3.74100923538208
    4. ' argparse' → logprob: -3.99100923538208
    5. ' is' → logprob: -4.61600923538208
    6. 'def' → logprob: -4.61600923538208
    7. ' argv' → logprob: -4.86600923538208
    8. ' def' → logprob: -4.99100923538208
    9. 'argv' → logprob: -4.99100923538208
    10. 'This' → logprob: -4.99100923538208

Token 5: ' enough' (ID: 4951)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7967298030853271
    2. ' ' → logprob: -0.7967298030853271
    3. ' import' → logprob: -3.796729803085327
    4. ' _' → logprob: -4.046730041503906
    5. 'import' → logprob: -4.171730041503906
    6. '-scale' → logprob: -4.296730041503906
    7. '_data' → logprob: -5.921730041503906
    8. ' )' → logprob: -6.296730041503906
    9. '_scale' → logprob: -6.421730041503906
    10. 'def' → logprob: -6.421730041503906

Token 6: ' height' (ID: 4679)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3720015585422516
    2. '_' → logprob: -1.6220015287399292
    3. ' ' → logprob: -3.2470016479492188
    4. 'to' → logprob: -3.8720016479492188
    5. 'import' → logprob: -4.622001647949219
    6. ' import' → logprob: -4.997001647949219
    7. 'sys' → logprob: -5.247001647949219
    8. ' sys' → logprob: -5.372001647949219
    9. ' _' → logprob: -5.497001647949219
    10. ' for' → logprob: -5.747001647949219

Token 7: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8810744285583496
    2. ' =' → logprob: -1.5060744285583496
    3. ' to' → logprob: -2.5060744285583496
    4. '_' → logprob: -2.6310744285583496
    5. ' for' → logprob: -2.6310744285583496
    6. ' and' → logprob: -3.2560744285583496
    7. ',' → logprob: -3.3810744285583496
    8. ':' → logprob: -4.13107442855835
    9. 'for' → logprob: -4.75607442855835
    10. ' ' → logprob: -5.00607442855835

Token 8: ' accommodate' (ID: 35192)
  Prédit: ' cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cover' → logprob: -0.7926911115646362
    2. ' accommodate' → logprob: -0.9176911115646362
    3. ' allow' → logprob: -4.167691230773926
    4. ' support' → logprob: -4.167691230773926
    5. ' represent' → logprob: -4.167691230773926
    6. 'simulate' → logprob: -4.292691230773926
    7. ' prevent' → logprob: -4.542691230773926
    8. 'cover' → logprob: -4.667691230773926
    9. ' display' → logprob: -4.792691230773926
    10. ' avoid' → logprob: -4.917691230773926

Token 9: ' all' (ID: 722)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3581291735172272
    2. ' all' → logprob: -1.7331291437149048
    3. 'the' → logprob: -2.8581292629241943
    4. ' a' → logprob: -3.9831292629241943
    5. ' any' → logprob: -4.108129024505615
    6. 'all' → logprob: -5.233129024505615
    7. ' for' → logprob: -5.608129024505615
    8. ' of' → logprob: -5.858129024505615
    9. ' your' → logprob: -5.858129024505615
    10. ' and' → logprob: -6.358129024505615

Token 10: ' blocks' (ID: 18125)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'items' → logprob: -2.40189790725708
    2. 'elements' → logprob: -2.40189790725708
    3. 'blocks' → logprob: -2.52689790725708
    4. '#' → logprob: -2.90189790725708
    5. 'sh' → logprob: -3.02689790725708
    6. 'characters' → logprob: -3.15189790725708
    7. 'trees' → logprob: -3.15189790725708
    8. 'rect' → logprob: -3.40189790725708
    9. 'text' → logprob: -3.52689790725708
    10. 'children' → logprob: -3.52689790725708

Token 11: ' (' (ID: 350)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6292843818664551
    2. 'HEIGHT' → logprob: -1.504284381866455
    3. '\' → logprob: -3.004284381866455
    4. ',' → logprob: -3.754284381866455
    5. ' =' → logprob: -4.004284381866455
    6. '_h' → logprob: -4.004284381866455
    7. '#' → logprob: -4.004284381866455
    8. ':' → logprob: -4.254284381866455
    9. 'H' → logprob: -4.254284381866455
    10. '_H' → logprob: -4.754284381866455

Token 12: 'max' (ID: 3228)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7023082971572876
    2. ' ' → logprob: -2.827308177947998
    3. ' the' → logprob: -2.952308177947998
    4. '100' → logprob: -2.952308177947998
    5. ' )' → logprob: -3.202308177947998
    6. ' in' → logprob: -3.577308177947998
    7. '20' → logprob: -3.827308177947998
    8. ' for' → logprob: -4.327308177947998
    9. ' blocks' → logprob: -4.452308177947998
    10. 'the' → logprob: -4.577308177947998

Token 13: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6409494876861572
    2. '_height' → logprob: -1.6409494876861572
    3. '=' → logprob: -2.1409494876861572
    4. ' height' → logprob: -2.5159494876861572
    5. '_blocks' → logprob: -2.5159494876861572
    6. ' )' → logprob: -2.6409494876861572
    7. ' _' → logprob: -3.3909494876861572
    8. ' block' → logprob: -3.7659494876861572
    9. 'height' → logprob: -3.7659494876861572
    10. ' of' → logprob: -3.7659494876861572

Token 14: '100' (ID: 1353)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -1.2909516096115112
    2. '256' → logprob: -1.4159516096115112
    3. 'block' → logprob: -2.165951728820801
    4. '100' → logprob: -3.040951728820801
    5. 'blocks' → logprob: -3.290951728820801
    6. '```' → logprob: -3.665951728820801
    7. '32' → logprob: -3.790951728820801
    8. '64' → logprob: -3.790951728820801
    9. '20' → logprob: -4.290951728820801
    10. 'stack' → logprob: -4.415951728820801

Token 15: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011267331428825855
    2. ' )' → logprob: -5.136267185211182
    3. '0' → logprob: -5.761267185211182
    4. ',' → logprob: -7.761267185211182
    5. '#' → logprob: -8.38626766204834
    6. 's' → logprob: -8.63626766204834
    7. '```' → logprob: -8.63626766204834
    8. ''s' → logprob: -8.76126766204834
    9. ')
' → logprob: -9.26126766204834
    10. ' lines' → logprob: -9.38626766204834

Token 16: ' blocks' (ID: 18125)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0057027884759008884
    2. ')
' → logprob: -5.880702972412109
    3. '```' → logprob: -6.755702972412109
    4. ' )' → logprob: -7.630702972412109
    5. '``' → logprob: -8.38070297241211
    6. ',' → logprob: -8.38070297241211
    7. '#' → logprob: -9.13070297241211
    8. '`)' → logprob: -9.38070297241211
    9. '*' → logprob: -9.50570297241211
    10. ''s' → logprob: -9.63070297241211

Token 17: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003687247633934021
    2. ',' → logprob: -6.628687381744385
    3. ')
' → logprob: -7.253687381744385
    4. '```' → logprob: -7.628687381744385
    5. ' )' → logprob: -8.128686904907227
    6. 's' → logprob: -8.253686904907227
    7. '#' → logprob: -8.628686904907227
    8. ').' → logprob: -9.753686904907227
    9. '`)' → logprob: -10.003686904907227
    10. '``' → logprob: -10.128686904907227

Token 18: ' each' (ID: 2454)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.2679436206817627
    2. ' each' → logprob: -2.2679436206817627
    3. ' width' → logprob: -2.7679436206817627
    4. ' assuming' → logprob: -3.6429436206817627
    5. ' plus' → logprob: -4.642943382263184
    6. ' max' → logprob: -5.017943382263184
    7. '100' → logprob: -5.642943382263184
    8. 'width' → logprob: -5.892943382263184
    9. ' but' → logprob: -6.142943382263184
    10. '#' → logprob: -6.267943382263184

Token 19: ' up' (ID: 869)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40418219566345215
    2. ' with' → logprob: -2.154182195663452
    3. ' of' → logprob: -2.904182195663452
    4. ')' → logprob: -3.154182195663452
    5. ' one' → logprob: -3.654182195663452
    6. ' )' → logprob: -4.279182434082031
    7. ' can' → logprob: -4.904182434082031
    8. '<|end|>' → logprob: -4.904182434082031
    9. ' is' → logprob: -5.279182434082031
    10. '_' → logprob: -5.279182434082031

Token 20: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6370172500610352
    2. '_' → logprob: -1.2620172500610352
    3. 'to' → logprob: -2.387017250061035
    4. ' to' → logprob: -2.887017250061035
    5. '_to' → logprob: -4.637017250061035
    6. ')' → logprob: -5.512017250061035
    7. '100' → logprob: -5.637017250061035
    8. '32' → logprob: -5.762017250061035
    9. ' =' → logprob: -5.762017250061035
    10. ' ' → logprob: -5.762017250061035

Token 21: ' length' (ID: 5517)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4050976037979126
    2. '100' → logprob: -1.1550976037979126
    3. ' height' → logprob: -5.155097484588623
    4. 'height' → logprob: -5.905097484588623
    5. '200' → logprob: -6.280097484588623
    6. '102' → logprob: -6.405097484588623
    7. '10' → logprob: -7.155097484588623
    8. '32' → logprob: -7.280097484588623
    9. '20' → logprob: -7.405097484588623
    10. '1' → logprob: -7.655097484588623

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5771136283874512
    2. '=' → logprob: -1.9521136283874512
    3. '100' → logprob: -1.9521136283874512
    4. ' of' → logprob: -2.952113628387451
    5. '_' → logprob: -3.077113628387451
    6. ' =' → logprob: -3.952113628387451
    7. ' _' → logprob: -4.577113628387451
    8. '256' → logprob: -5.452113628387451
    9. ')' → logprob: -5.577113628387451
    10. ' )' → logprob: -5.952113628387451

Token 23: '5' (ID: 20)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.20113688707351685
    2. '=' → logprob: -2.326136827468872
    3. ' ' → logprob: -2.701136827468872
    4. '10' → logprob: -5.701137065887451
    5. '20' → logprob: -5.951137065887451
    6. '102' → logprob: -6.201137065887451
    7. '1' → logprob: -6.326137065887451
    8. '50' → logprob: -6.951137065887451
    9. '500' → logprob: -7.201137065887451
    10. '200' → logprob: -7.326137065887451

Token 24: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023737922310829163
    2. ')
' → logprob: -4.023737907409668
    3. '#' → logprob: -5.898737907409668
    4. ' )' → logprob: -6.648737907409668
    5. ',' → logprob: -7.773737907409668
    6. '```' → logprob: -7.773737907409668
    7. '``' → logprob: -9.648737907409668
    8. ')
' → logprob: -9.773737907409668
    9. '*' → logprob: -9.898737907409668
    10. ')

' → logprob: -10.148737907409668

Token 25: '#' (ID: 2)
  Prédit: 'HEIGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -0.32367444038391113
    2. 'height' → logprob: -1.5736744403839111
    3. 'H' → logprob: -3.073674440383911
    4. 'MAX' → logprob: -4.948674201965332
    5. 'max' → logprob: -5.323674201965332
    6. '```' → logprob: -5.948674201965332
    7. '_height' → logprob: -6.448674201965332
    8. 'h' → logprob: -6.698674201965332
    9. 'BLOCK' → logprob: -7.198674201965332
    10. '_HEIGHT' → logprob: -7.573674201965332

Token 26: ' We' (ID: 1416)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.2409416288137436
    2. 'HEIGHT' → logprob: -1.7409416437149048
    3. 'H' → logprob: -3.7409415245056152
    4. 'max' → logprob: -5.115941524505615
    5. 'MAX' → logprob: -6.490941524505615
    6. 'h' → logprob: -6.615941524505615
    7. 'import' → logprob: -6.740941524505615
    8. ' height' → logprob: -6.865941524505615
    9. 'block' → logprob: -7.615941524505615
    10. 'grid' → logprob: -7.865941524505615

Token 27: ' choose' (ID: 5655)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.45712268352508545
    2. '_' → logprob: -1.5821226835250854
    3. 'can' → logprob: -3.207122802734375
    4. ''ll' → logprob: -3.457122802734375
    5. '_height' → logprob: -4.332122802734375
    6. ' need' → logprob: -4.457122802734375
    7. ' =' → logprob: -4.832122802734375
    8. ' have' → logprob: -5.207122802734375
    9. ' will' → logprob: -5.332122802734375
    10. ' use' → logprob: -5.457122802734375

Token 28: ' ' (ID: 220)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.3873976469039917
    2. 'height' → logprob: -1.3873976469039917
    3. ' height' → logprob: -1.3873976469039917
    4. ' ' → logprob: -2.0123977661132812
    5. '100' → logprob: -2.5123977661132812
    6. 'a' → logprob: -3.7623977661132812
    7. '5' → logprob: -5.887397766113281
    8. ' an' → logprob: -6.262397766113281
    9. '10' → logprob: -6.637397766113281
    10. ' max' → logprob: -6.762397766113281

Token 29: '200' (ID: 1179)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.38796961307525635
    2. '100' → logprob: -1.5129696130752563
    3. 'a' → logprob: -2.887969493865967
    4. 'max' → logprob: -4.012969493865967
    5. 'h' → logprob: -4.887969493865967
    6. 'H' → logprob: -5.012969493865967
    7. '500' → logprob: -5.387969493865967
    8. '10' → logprob: -6.137969493865967
    9. ' height' → logprob: -6.637969493865967
    10. 'HEIGHT' → logprob: -6.887969493865967

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2878701984882355
    2. ' ' → logprob: -1.412870168685913
    3. '_' → logprob: -7.037870407104492
    4. ' ,' → logprob: -7.412870407104492
    5. ' _' → logprob: -7.412870407104492
    6. '#' → logprob: -7.537870407104492
    7. ' *' → logprob: -7.662870407104492
    8. '*' → logprob: -7.787870407104492
    9. ',' → logprob: -8.037870407104492
    10. 'x' → logprob: -8.162870407104492

Token 31: ' to' (ID: 316)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7351635098457336
    2. 'height' → logprob: -1.3601634502410889
    3. '
' → logprob: -2.485163450241089
    4. 'HEIGHT' → logprob: -2.985163450241089
    5. '0' → logprob: -3.360163450241089
    6. ' 
' → logprob: -4.860163688659668
    7. ' HEIGHT' → logprob: -4.860163688659668
    8. 'import' → logprob: -4.860163688659668
    9. ' height' → logprob: -5.110163688659668
    10. ',' → logprob: -5.235163688659668

Token 32: ' be' (ID: 413)
  Prédit: ' ensure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ensure' → logprob: -0.7352131605148315
    2. ' be' → logprob: -1.1102131605148315
    3. ' avoid' → logprob: -3.235213279724121
    4. ' accommodate' → logprob: -3.360213279724121
    5. ' cover' → logprob: -3.485213279724121
    6. 'ensure' → logprob: -3.485213279724121
    7. ' guarantee' → logprob: -4.860213279724121
    8. ' have' → logprob: -4.985213279724121
    9. '```' → logprob: -5.235213279724121
    10. ' ' → logprob: -5.610213279724121

Token 33: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.11538323014974594
    2. ' safe' → logprob: -2.2403831481933594
    3. 's' → logprob: -7.240383148193359
    4. 'sure' → logprob: -7.365383148193359
    5. 'double' → logprob: -7.615383148193359
    6. ' sure' → logprob: -8.61538314819336
    7. ' double' → logprob: -9.24038314819336
    8. 'a' → logprob: -9.24038314819336
    9. ' generous' → logprob: -9.74038314819336
    10. 'ample' → logprob: -10.36538314819336

Token 34: '.
' (ID: 558)
  Prédit: 'HEIGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -0.6082770824432373
    2. 'height' → logprob: -1.1082770824432373
    3. '
' → logprob: -2.2332770824432373
    4. '_height' → logprob: -5.983277320861816
    5. 'H' → logprob: -5.983277320861816
    6. '\' → logprob: -6.358277320861816
    7. '
' → logprob: -6.608277320861816
    8. '\n' → logprob: -6.733277320861816
    9. 'block' → logprob: -6.733277320861816
    10. '

' → logprob: -6.858277320861816

Token 35: 'HEIGHT' (ID: 105934)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.147429957985878
    2. 'HEIGHT' → logprob: -2.272429943084717
    3. 'block' → logprob: -5.022429943084717
    4. 'max' → logprob: -5.772429943084717
    5. 'width' → logprob: -5.772429943084717
    6. 'H' → logprob: -5.897429943084717
    7. 'board' → logprob: -5.897429943084717
    8. 'grid' → logprob: -5.897429943084717
    9. 'stack' → logprob: -6.272429943084717
    10. 'import' → logprob: -6.647429943084717

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015043864259496331
    2. '=' → logprob: -6.501504421234131
    3. ',' → logprob: -13.501503944396973
    4. ' ' → logprob: -14.376503944396973
    5. '   ' → logprob: -17.37650489807129
    6. ' =
' → logprob: -17.87650489807129
    7. '_SIZE' → logprob: -18.12650489807129
    8. '  ' → logprob: -18.37650489807129
    9. '```' → logprob: -18.50150489807129
    10. ' ,' → logprob: -19.12650489807129

Token 37: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.20142221450805664
    2. ' ' → logprob: -1.7014222145080566
    3. '2' → logprob: -12.701421737670898
    4. '   ' → logprob: -12.951421737670898
    5. '  ' → logprob: -13.326421737670898
    6. ' ' → logprob: -14.076421737670898
    7. '20' → logprob: -15.201421737670898
    8. '２００' → logprob: -16.0764217376709
    9. '    ' → logprob: -16.3264217376709
    10. '```' → logprob: -16.3889217376709

Token 38: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.00020854694594163448
    2. ' ' → logprob: -8.500208854675293
    3. '2' → logprob: -12.375208854675293
    4. '  ' → logprob: -15.375208854675293
    5. '20' → logprob: -15.625208854675293
    6. '   ' → logprob: -15.875208854675293
    7. '２００' → logprob: -16.125207901000977
    8. '`' → logprob: -17.125207901000977
    9. '```' → logprob: -17.312707901000977
    10. '201' → logprob: -18.000207901000977

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.60414821645827e-06
    2. '00' → logprob: -12.625004768371582
    3. ' ' → logprob: -15.000004768371582
    4. '\' → logprob: -15.000004768371582
    5. '०' → logprob: -16.000003814697266
    6. '1' → logprob: -16.125003814697266
    7. '*' → logprob: -16.500003814697266
    8. '۰' → logprob: -16.875003814697266
    9. ' ' → logprob: -17.250003814697266
    10. ')' → logprob: -17.562503814697266

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07975158095359802
    2. '

' → logprob: -3.204751491546631
    3. '
' → logprob: -3.454751491546631
    4. '\n' → logprob: -7.079751491546631
    5. 'HEIGHT' → logprob: -7.079751491546631
    6. '```' → logprob: -7.204751491546631
    7. '

' → logprob: -7.704751491546631
    8. '' → logprob: -8.329751968383789
    9. 'WIDTH' → logprob: -8.454751968383789
    10. '

' → logprob: -8.454751968383789

Token 41: 'WIDTH' (ID: 92354)
  Prédit: 'WIDTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WIDTH' → logprob: -0.02409280836582184
    2. 'width' → logprob: -4.649092674255371
    3. '
' → logprob: -4.774092674255371
    4. '
' → logprob: -6.524092674255371
    5. 'GRID' → logprob: -6.649092674255371
    6. 'BOARD' → logprob: -6.899092674255371
    7. 'W' → logprob: -7.774092674255371
    8. '

' → logprob: -8.024092674255371
    9. '```' → logprob: -9.024092674255371
    10. 'EMPTY' → logprob: -9.149092674255371

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004078997299075127
    2. '=' → logprob: -5.5040788650512695
    3. ' ' → logprob: -14.62907886505127
    4. ' =
' → logprob: -17.129079818725586
    5. ' =)' → logprob: -18.379079818725586
    6. ' =
' → logprob: -18.504079818725586
    7. '```' → logprob: -18.629079818725586
    8. ')' → logprob: -18.879079818725586
    9. '=int' → logprob: -18.879079818725586
    10. '  ' → logprob: -19.004079818725586

Token 43: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.004091224167495966
    2. ' ' → logprob: -5.504091262817383
    3. '9' → logprob: -11.504091262817383
    4. '10' → logprob: -13.254091262817383
    5. '  ' → logprob: -14.504091262817383
    6. '   ' → logprob: -16.004091262817383
    7. '8' → logprob: -16.629091262817383
    8. '=' → logprob: -17.691591262817383
    9. '```' → logprob: -17.754091262817383
    10. '    ' → logprob: -17.816591262817383

Token 44: '5' (ID: 20)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0001394161517964676
    2. '9' → logprob: -9.625139236450195
    3. '10' → logprob: -10.125139236450195
    4. ' ' → logprob: -10.375139236450195
    5. '8' → logprob: -14.250139236450195
    6. '  ' → logprob: -15.000139236450195
    7. '11' → logprob: -15.625139236450195
    8. '   ' → logprob: -15.750139236450195
    9. '40' → logprob: -16.000139236450195
    10. '15' → logprob: -16.125139236450195

Token 45: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44606152176856995
    2. '

' → logprob: -1.0710614919662476
    3. '
' → logprob: -4.196061611175537
    4. '\n' → logprob: -7.571061611175537
    5. '

' → logprob: -7.696061611175537
    6. '' → logprob: -7.821061611175537
    7. '\' → logprob: -9.071061134338379
    8. ' 

' → logprob: -9.071061134338379
    9. '


' → logprob: -9.071061134338379
    10. '

' → logprob: -9.446061134338379

Token 46: 'def' (ID: 1314)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.6667780876159668
    2. '
' → logprob: -2.041778087615967
    3. 'board' → logprob: -2.416778087615967
    4. '

' → logprob: -2.416778087615967
    5. '#' → logprob: -3.541778087615967
    6. 'field' → logprob: -3.541778087615967
    7. '' → logprob: -4.041778087615967
    8. '```' → logprob: -4.541778087615967
    9. 'block' → logprob: -4.666778087615967
    10. 'matrix' → logprob: -4.666778087615967

Token 47: ' drop' (ID: 9440)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1218810081481934
    2. ' main' → logprob: -1.7468810081481934
    3. ' place' → logprob: -1.8718810081481934
    4. ' simulate' → logprob: -1.8718810081481934
    5. ' drop' → logprob: -2.9968810081481934
    6. ' solve' → logprob: -3.2468810081481934
    7. ' t' → logprob: -3.6218810081481934
    8. ' play' → logprob: -4.246881008148193
    9. ' create' → logprob: -4.246881008148193
    10. ' stack' → logprob: -4.996881008148193

Token 48: '_block' (ID: 15644)
  Prédit: '_block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -0.12182683497667313
    2. '_' → logprob: -2.2468268871307373
    3. '_piece' → logprob: -5.246826648712158
    4. '(' → logprob: -6.621826648712158
    5. '(block' → logprob: -7.496826648712158
    6. '_shape' → logprob: -8.121827125549316
    7. '_blocks' → logprob: -8.246827125549316
    8. '()' → logprob: -8.621827125549316
    9. '_bloc' → logprob: -8.621827125549316
    10. '_b' → logprob: -8.746827125549316

Token 49: '(board' (ID: 41261)
  Prédit: '(block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(block' → logprob: -0.33027392625808716
    2. '(' → logprob: -1.4552738666534424
    3. '():' → logprob: -3.0802738666534424
    4. '(:' → logprob: -8.455273628234863
    5. '(Block' → logprob: -8.955273628234863
    6. '(column' → logprob: -9.080273628234863
    7. '(b' → logprob: -9.080273628234863
    8. '(position' → logprob: -9.080273628234863
    9. '(state' → logprob: -9.205273628234863
    10. '(line' → logprob: -9.330273628234863

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004278083215467632
    2. '):' → logprob: -8.000428199768066
    3. ' ,' → logprob: -10.125428199768066
    4. '[' → logprob: -10.250428199768066
    5. ')' → logprob: -11.875428199768066
    6. ',row' → logprob: -12.875428199768066
    7. ',b' → logprob: -13.500428199768066
    8. '   ' → logprob: -13.750428199768066
    9. ':' → logprob: -14.625428199768066
    10. '[],' → logprob: -14.750428199768066

Token 51: ' d' (ID: 272)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.5239649415016174
    2. ' block' → logprob: -0.8989649415016174
    3. ' x' → logprob: -9.398964881896973
    4. 'x' → logprob: -9.398964881896973
    5. 'column' → logprob: -9.398964881896973
    6. 'blocks' → logprob: -9.523964881896973
    7. 'board' → logprob: -9.773964881896973
    8. 'shape' → logprob: -9.773964881896973
    9. '	block' → logprob: -10.273964881896973
    10. ' shape' → logprob: -10.523964881896973

Token 52: ',' (ID: 11)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6350500583648682
    2. 'irection' → logprob: -1.3850500583648682
    3. 'ir' → logprob: -2.010050058364868
    4. 'rop' → logprob: -3.010050058364868
    5. 'own' → logprob: -3.635050058364868
    6. ' x' → logprob: -5.885049819946289
    7. 'y' → logprob: -6.510049819946289
    8. 'istance' → logprob: -6.510049819946289
    9. 'elta' → logprob: -7.010049819946289
    10. 'ist' → logprob: -7.635049819946289

Token 53: ' p' (ID: 275)
  Prédit: ' block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.21743005514144897
    2. 'block' → logprob: -1.9674301147460938
    3. ' x' → logprob: -3.5924301147460938
    4. 'x' → logprob: -4.842430114746094
    5. ' start' → logprob: -5.717430114746094
    6. ' blocks' → logprob: -6.342430114746094
    7. ' shape' → logprob: -6.342430114746094
    8. 'start' → logprob: -6.717430114746094
    9. 'blocks' → logprob: -6.842430114746094
    10. ' ' → logprob: -6.967430114746094

Token 54: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28273966908454895
    2. 'osition' → logprob: -1.7827396392822266
    3. 'os' → logprob: -2.9077396392822266
    4. ',' → logprob: -4.282739639282227
    5. 'x' → logprob: -5.532739639282227
    6. ')' → logprob: -6.282739639282227
    7. 'iece' → logprob: -7.532739639282227
    8. 'block' → logprob: -7.532739639282227
    9. 'irection' → logprob: -7.532739639282227
    10. '):
' → logprob: -8.407739639282227

Token 55: ' q' (ID: 2335)
  Prédit: ' block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.4518851637840271
    2. ' blocks' → logprob: -2.701885223388672
    3. 'block' → logprob: -3.076885223388672
    4. ' height' → logprob: -3.451885223388672
    5. ' y' → logprob: -3.701885223388672
    6. ' board' → logprob: -3.826885223388672
    7. ' shape' → logprob: -3.951885223388672
    8. ' x' → logprob: -4.326885223388672
    9. 'blocks' → logprob: -4.576885223388672
    10. ' length' → logprob: -5.076885223388672

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007981234230101109
    2. ',' → logprob: -5.382981300354004
    3. ')' → logprob: -5.757981300354004
    4. ' ):' → logprob: -9.132981300354004
    5. '):
' → logprob: -10.507981300354004
    6. ':' → logprob: -11.132981300354004
    7. '=' → logprob: -12.007981300354004
    8. '_' → logprob: -12.007981300354004
    9. 's' → logprob: -12.632981300354004
    10. 'e' → logprob: -12.882981300354004

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5009349584579468
    2. ':' → logprob: -1.0009349584579468
    3. '):' → logprob: -4.500935077667236
    4. ' :' → logprob: -5.000935077667236
    5. ':
' → logprob: -6.125935077667236
    6. ',' → logprob: -6.125935077667236
    7. '    ' → logprob: -7.000935077667236
    8. '[' → logprob: -7.375935077667236
    9. ' ' → logprob: -7.375935077667236
    10. ')' → logprob: -7.875935077667236

Token 58: ' """
' (ID: 7037)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.5566792488098145
    2. '   ' → logprob: -1.5566792488098145
    3. ' max' → logprob: -2.1816792488098145
    4. ' y' → logprob: -2.3066792488098145
    5. ' #' → logprob: -2.3066792488098145
    6. ' for' → logprob: -2.6816792488098145
    7. '#' → logprob: -3.3066792488098145
    8. ' ' → logprob: -3.6816792488098145
    9. ' x' → logprob: -4.1816792488098145
    10. '     
' → logprob: -4.1816792488098145

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3351816236972809
    2. '#' → logprob: -1.4601815938949585
    3. ' #' → logprob: -4.210181713104248
    4. '"""' → logprob: -4.460181713104248
    5. '    ' → logprob: -4.835181713104248
    6. ' """' → logprob: -5.460181713104248
    7. ' """
' → logprob: -6.085181713104248
    8. ' ' → logprob: -6.210181713104248
    9. '"""
' → logprob: -6.585181713104248
    10. '  ' → logprob: -6.835181713104248

Token 60: ' Sim' (ID: 7973)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9621610045433044
    2. ' ' → logprob: -2.212161064147949
    3. ' """' → logprob: -2.212161064147949
    4. ' """
' → logprob: -2.462161064147949
    5. ')' → logprob: -2.587161064147949
    6. ' 
' → logprob: -2.837161064147949
    7. '   ' → logprob: -3.462161064147949
    8. ' )' → logprob: -3.962161064147949
    9. ' #' → logprob: -4.087161064147949
    10. '"""' → logprob: -4.212161064147949

Token 61: 'ulate' (ID: 10111)
  Prédit: 'ple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ple' → logprob: -0.9045328497886658
    2. 'ply' → logprob: -1.2795329093933105
    3. 'pl' → logprob: -1.6545329093933105
    4. 'ulate' → logprob: -2.1545329093933105
    5. 'ulates' → logprob: -5.4045329093933105
    6. 'plement' → logprob: -6.7795329093933105
    7. '"""
' → logprob: -7.0295329093933105
    8. '"""' → logprob: -7.0295329093933105
    9. 'ul' → logprob: -7.4045329093933105
    10. ' ply' → logprob: -8.279532432556152

Token 62: ' dropping' (ID: 43479)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.07938365638256073
    2. ' a' → logprob: -2.954383611679077
    3. ' block' → logprob: -5.329383850097656
    4. '(block' → logprob: -5.329383850097656
    5. ' an' → logprob: -5.579383850097656
    6. 'the' → logprob: -6.204383850097656
    7. ')' → logprob: -6.329383850097656
    8. '   ' → logprob: -6.579383850097656
    9. '_block' → logprob: -6.829383850097656
    10. '_' → logprob: -6.829383850097656

Token 63: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.004986593499779701
    2. ' the' → logprob: -5.629986763000488
    3. ' one' → logprob: -7.004986763000488
    4. 'a' → logprob: -7.754986763000488
    5. 'the' → logprob: -10.754986763000488
    6. ' an' → logprob: -11.629986763000488
    7. ' ' → logprob: -11.879986763000488
    8. '_' → logprob: -12.379986763000488
    9. ' block' → logprob: -12.879986763000488
    10. 'one' → logprob: -13.629986763000488

Token 64: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.010398566722869873
    2. 'block' → logprob: -4.7603983879089355
    3. ' ' → logprob: -6.5103983879089355
    4. 'b' → logprob: -10.385398864746094
    5. ' single' → logprob: -10.510398864746094
    6. ' new' → logprob: -10.760398864746094
    7. '_' → logprob: -10.885398864746094
    8. '#' → logprob: -10.885398864746094
    9. 'n' → logprob: -11.010398864746094
    10. '  ' → logprob: -11.135398864746094

Token 65: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6625215411186218
    2. ' into' → logprob: -1.0375216007232666
    3. ' ' → logprob: -3.6625216007232666
    4. ' on' → logprob: -3.7875216007232666
    5. ')' → logprob: -4.2875213623046875
    6. ' onto' → logprob: -4.4125213623046875
    7. ' in' → logprob: -4.5375213623046875
    8. '    ' → logprob: -5.2875213623046875
    9. ' of' → logprob: -5.4125213623046875
    10. ' at' → logprob: -5.5375213623046875

Token 66: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.018010392785072327
    2. 'the' → logprob: -4.64301061630249
    3. ' board' → logprob: -5.39301061630249
    4. ' a' → logprob: -6.26801061630249
    5. 'board' → logprob: -6.39301061630249
    6. ' an' → logprob: -10.393010139465332
    7. ' ' → logprob: -10.518010139465332
    8. '(board' → logprob: -11.143010139465332
    9. '    ' → logprob: -12.268010139465332
    10. 'a' → logprob: -12.518010139465332

Token 67: ' board' (ID: 6796)
  Prédit: ' board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' board' → logprob: -0.11322508752346039
    2. 'board' → logprob: -2.238224983215332
    3. ' ' → logprob: -8.113224983215332
    4. '	board' → logprob: -10.238224983215332
    5. '(board' → logprob: -11.113224983215332
    6. '_board' → logprob: -11.613224983215332
    7. '   ' → logprob: -12.238224983215332
    8. '.board' → logprob: -12.363224983215332
    9. '-board' → logprob: -12.488224983215332
    10. 'b' → logprob: -12.613224983215332

Token 68: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5475976467132568
    2. '):' → logprob: -1.4225976467132568
    3. ',' → logprob: -2.297597646713257
    4. ':' → logprob: -2.797597646713257
    5. ')' → logprob: -4.922597885131836
    6. '):
' → logprob: -5.172597885131836
    7. '
' → logprob: -6.922597885131836
    8. ' into' → logprob: -7.047597885131836
    9. ' at' → logprob: -7.172597885131836
    10. ' ):' → logprob: -7.547597885131836

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3661438226699829
    2. ')' → logprob: -2.7411437034606934
    3. '    
' → logprob: -2.9911437034606934
    4. '\n' → logprob: -3.1161437034606934
    5. ' 
' → logprob: -3.2411437034606934
    6. '#' → logprob: -3.3661437034606934
    7. '
' → logprob: -3.9911437034606934
    8. '<|end|>' → logprob: -4.241143703460693
    9. '    ' → logprob: -4.491143703460693
    10. ' ' → logprob: -5.241143703460693

Token 70: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2580927908420563
    2. ')' → logprob: -2.5080928802490234
    3. ' 
' → logprob: -3.7580928802490234
    4. ' ' → logprob: -3.8830928802490234
    5. '#' → logprob: -4.133092880249023
    6. '\n' → logprob: -4.258092880249023
    7. '    
' → logprob: -4.258092880249023
    8. '
' → logprob: -4.258092880249023
    9. '    ' → logprob: -4.633092880249023
    10. 'n' → logprob: -5.758092880249023

Token 71: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0360363721847534
    2. ')' → logprob: -1.2860363721847534
    3. '):' → logprob: -1.7860363721847534
    4. ' =' → logprob: -2.286036491394043
    5. ' ' → logprob: -3.286036491394043
    6. '=' → logprob: -4.286036491394043
    7. ':' → logprob: -4.411036491394043
    8. '   ' → logprob: -5.411036491394043
    9. ' )' → logprob: -5.411036491394043
    10. '[' → logprob: -5.786036491394043

Token 72: ' direction' (ID: 9262)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.14044930040836334
    2. 'int' → logprob: -2.765449285507202
    3. ' block' → logprob: -3.640449285507202
    4. ' list' → logprob: -3.890449285507202
    5. ' List' → logprob: -5.515449523925781
    6. ' str' → logprob: -6.265449523925781
    7. '[int' → logprob: -6.390449523925781
    8. ' direction' → logprob: -6.515449523925781
    9. ' ' → logprob: -6.640449523925781
    10. ' type' → logprob: -6.765449523925781

Token 73: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23562152683734894
    2. ')' → logprob: -2.485621452331543
    3. ',' → logprob: -2.735621452331543
    4. ' ' → logprob: -3.860621452331543
    5. ':' → logprob: -3.985621452331543
    6. '<|end|>' → logprob: -4.735621452331543
    7. '):
' → logprob: -5.735621452331543
    8. ' ):' → logprob: -6.110621452331543
    9. '<|end|>' → logprob: -6.235621452331543
    10. ' )' → logprob: -6.735621452331543

Token 74: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5891542434692383
    2. ' ' → logprob: -1.8391542434692383
    3. ' )' → logprob: -2.4641542434692383
    4. ' '' → logprob: -3.0891542434692383
    5. ''' → logprob: -3.2141542434692383
    6. '=' → logprob: -3.3391542434692383
    7. ',' → logprob: -3.9641542434692383
    8. '"' → logprob: -4.964154243469238
    9. ' =' → logprob: -4.964154243469238
    10. '')' → logprob: -5.464154243469238

Token 75: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0075887441635132
    2. ' or' → logprob: -1.6325887441635132
    3. '=' → logprob: -1.7575887441635132
    4. ',' → logprob: -1.8825887441635132
    5. ' if' → logprob: -2.6325888633728027
    6. ' for' → logprob: -4.882588863372803
    7. '-' → logprob: -4.882588863372803
    8. ' ' → logprob: -5.007588863372803
    9. '+' → logprob: -5.632588863372803
    10. ' =' → logprob: -6.007588863372803

Token 76: 'horizontal' (ID: 62473)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6235417723655701
    2. 'right' → logprob: -1.1235418319702148
    3. 'horizontal' → logprob: -3.248541831970215
    4. 'down' → logprob: -3.623541831970215
    5. ' left' → logprob: -3.998541831970215
    6. ' right' → logprob: -4.748541831970215
    7. 'vertical' → logprob: -4.748541831970215
    8. '-' → logprob: -5.123541831970215
    9. 'L' → logprob: -5.123541831970215
    10. '1' → logprob: -5.373541831970215

Token 77: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3792557418346405
    2. ',' → logprob: -1.254255771636963
    3. ' or' → logprob: -4.004255771636963
    4. ' )' → logprob: -5.254255771636963
    5. ' ,' → logprob: -5.504255771636963
    6. '),' → logprob: -6.754255771636963
    7. ' block' → logprob: -7.254255771636963
    8. ',
' → logprob: -8.879255294799805
    9. ' for' → logprob: -9.004255294799805
    10. ' and' → logprob: -9.254255294799805

Token 78: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9546023011207581
    2. '-' → logprob: -1.2046022415161133
    3. '0' → logprob: -1.8296022415161133
    4. ' -' → logprob: -2.2046022415161133
    5. ' ' → logprob: -3.4546022415161133
    6. 'vertical' → logprob: -5.454602241516113
    7. ' vertical' → logprob: -6.329602241516113
    8. '```' → logprob: -7.079602241516113
    9. '5' → logprob: -7.204602241516113
    10. ')' → logprob: -7.329602241516113

Token 79: '2' (ID: 17)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.42611774802207947
    2. '2' → logprob: -1.9261177778244019
    3. 'vertical' → logprob: -2.3011176586151123
    4. '0' → logprob: -3.1761176586151123
    5. 'down' → logprob: -3.1761176586151123
    6. ' -' → logprob: -5.176117897033691
    7. ' vertical' → logprob: -5.676117897033691
    8. ' down' → logprob: -6.051117897033691
    9. 'vert' → logprob: -6.676117897033691
    10. ' ' → logprob: -6.676117897033691

Token 80: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009091939777135849
    2. ' =' → logprob: -5.259091854095459
    3. ')' → logprob: -6.384091854095459
    4. 'vertical' → logprob: -7.009091854095459
    5. ',' → logprob: -7.759091854095459
    6. ' or' → logprob: -8.759092330932617
    7. ' vertical' → logprob: -8.759092330932617
    8. 'horizontal' → logprob: -9.384092330932617
    9. '=d' → logprob: -9.884092330932617
    10. '=p' → logprob: -10.009092330932617

Token 81: 'vertical' (ID: 29475)
  Prédit: 'vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vertical' → logprob: -0.013278692960739136
    2. ' vertical' → logprob: -4.388278484344482
    3. 'horizontal' → logprob: -7.888278484344482
    4. '2' → logprob: -9.01327896118164
    5. '1' → logprob: -9.51327896118164
    6. ')' → logprob: -9.76327896118164
    7. '_vertical' → logprob: -10.38827896118164
    8. 'vert' → logprob: -10.76327896118164
    9. '(vertical' → logprob: -10.88827896118164
    10. ' ' → logprob: -11.13827896118164

Token 82: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008467909647151828
    2. '):' → logprob: -7.250846862792969
    3. ',' → logprob: -9.250846862792969
    4. ')
' → logprob: -10.625846862792969
    5. ' )' → logprob: -12.250846862792969
    6. '):
' → logprob: -12.375846862792969
    7. '),' → logprob: -13.250846862792969
    8. '```' → logprob: -13.500846862792969
    9. '   ' → logprob: -14.000846862792969
    10. '):

' → logprob: -14.000846862792969

Token 83: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3561464250087738
    2. '):' → logprob: -1.7311464548110962
    3. '   ' → logprob: -2.4811463356018066
    4. '<|end|>' → logprob: -3.8561463356018066
    5. ' ' → logprob: -5.606146335601807
    6. ' )' → logprob: -5.606146335601807
    7. ',' → logprob: -5.606146335601807
    8. ':' → logprob: -5.731146335601807
    9. '):
' → logprob: -7.356146335601807
    10. ' ):' → logprob: -7.606146335601807

Token 84: ' p' (ID: 275)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03633100539445877
    2. '):' → logprob: -4.2863311767578125
    3. ' )' → logprob: -4.2863311767578125
    4. ',' → logprob: -5.6613311767578125
    5. ' ' → logprob: -6.5363311767578125
    6. ':' → logprob: -7.1613311767578125
    7. '   ' → logprob: -7.5363311767578125
    8. ' ):' → logprob: -7.6613311767578125
    9. '<|end|>' → logprob: -8.036331176757812
    10. '```' → logprob: -8.161331176757812

Token 85: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6728413105010986
    2. ')' → logprob: -1.2978413105010986
    3. ' =' → logprob: -1.9228413105010986
    4. '[' → logprob: -3.6728413105010986
    5. '<|end|>' → logprob: -4.4228410720825195
    6. ' ' → logprob: -5.1728410720825195
    7. ' ,' → logprob: -5.2978410720825195
    8. '=' → logprob: -5.2978410720825195
    9. '   ' → logprob: -5.4228410720825195
    10. ',p' → logprob: -6.2978410720825195

Token 86: ' length' (ID: 5517)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -1.3719005584716797
    2. ' x' → logprob: -1.9969005584716797
    3. ' block' → logprob: -1.9969005584716797
    4. ' length' → logprob: -2.1219005584716797
    5. ' position' → logprob: -2.8719005584716797
    6. ' ' → logprob: -2.9969005584716797
    7. ' column' → logprob: -3.3719005584716797
    8. ' p' → logprob: -3.6219005584716797
    9. ' int' → logprob: -3.7469005584716797
    10. 'row' → logprob: -3.9969005584716797

Token 87: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8309399485588074
    2. ')' → logprob: -1.5809400081634521
    3. '<|end|>' → logprob: -1.7059400081634521
    4. '):' → logprob: -2.330940008163452
    5. '<|end|>' → logprob: -2.955940008163452
    6. ' =' → logprob: -5.205939769744873
    7. '=' → logprob: -5.705939769744873
    8. ' ,' → logprob: -5.830939769744873
    9. ':' → logprob: -6.080939769744873
    10. '):
' → logprob: -6.330939769744873

Token 88: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011613464914262295
    2. ' )' → logprob: -4.636613368988037
    3. '=' → logprob: -8.011613845825195
    4. ',' → logprob: -8.136613845825195
    5. '<|end|>' → logprob: -8.636613845825195
    6. ' of' → logprob: -8.761613845825195
    7. ' ' → logprob: -9.011613845825195
    8. ')
' → logprob: -9.136613845825195
    9. '<|end|>' → logprob: -9.261613845825195
    10. 'p' → logprob: -9.261613845825195

Token 89: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01249681320041418
    2. ',' → logprob: -5.1374969482421875
    3. '+' → logprob: -6.2624969482421875
    4. '<|end|>' → logprob: -6.7624969482421875
    5. ' if' → logprob: -7.1374969482421875
    6. '=' → logprob: -7.6374969482421875
    7. ' +' → logprob: -7.6374969482421875
    8. ' )' → logprob: -8.012496948242188
    9. ' or' → logprob: -8.137496948242188
    10. '<|end|>' → logprob: -8.387496948242188

Token 90: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.05856825038790703
    2. 'WIDTH' → logprob: -3.183568239212036
    3. ' ' → logprob: -5.183568477630615
    4. ' WIDTH' → logprob: -5.308568477630615
    5. '4' → logprob: -5.558568477630615
    6. 'HEIGHT' → logprob: -7.933568477630615
    7. ')' → logprob: -8.058568000793457
    8. '3' → logprob: -9.558568000793457
    9. 'q' → logprob: -9.933568000793457
    10. ' )' → logprob: -10.246068000793457

Token 91: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.005652290303260088
    2. 'WIDTH' → logprob: -5.75565242767334
    3. '4' → logprob: -6.25565242767334
    4. ' ' → logprob: -8.88065242767334
    5. ')' → logprob: -9.00565242767334
    6. 'q' → logprob: -9.38065242767334
    7. '3' → logprob: -9.38065242767334
    8. 'width' → logprob: -11.00565242767334
    9. 'HEIGHT' → logprob: -11.00565242767334
    10. ' WIDTH' → logprob: -11.31815242767334

Token 92: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031531229615211487
    2. ')
' → logprob: -6.378153324127197
    3. ',' → logprob: -6.878153324127197
    4. '   ' → logprob: -8.128152847290039
    5. '<|end|>' → logprob: -10.253152847290039
    6. ' )' → logprob: -10.628152847290039
    7. ')

' → logprob: -11.003152847290039
    8. '<|end|>' → logprob: -11.753152847290039
    9. '):' → logprob: -12.128152847290039
    10. '),' → logprob: -12.128152847290039

Token 93: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6283959150314331
    2. ')' → logprob: -1.128395915031433
    3. ',' → logprob: -3.1283960342407227
    4. ' ' → logprob: -3.2533960342407227
    5. '):' → logprob: -4.378396034240723
    6. '<|end|>' → logprob: -4.503396034240723
    7. ' )' → logprob: -4.753396034240723
    8. ' ,' → logprob: -5.503396034240723
    9. '```' → logprob: -5.503396034240723
    10. '  ' → logprob: -6.003396034240723

Token 94: ' q' (ID: 2335)
  Prédit: ' col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' col' → logprob: -1.581180214881897
    2. ' x' → logprob: -1.831180214881897
    3. ',' → logprob: -1.956180214881897
    4. '   ' → logprob: -1.956180214881897
    5. ')' → logprob: -2.3311800956726074
    6. ' ' → logprob: -3.0811800956726074
    7. ' y' → logprob: -3.2061800956726074
    8. 'x' → logprob: -3.7061800956726074
    9. ' ,' → logprob: -4.331180095672607
    10. '):
' → logprob: -4.331180095672607

Token 95: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03742652013897896
    2. ' =' → logprob: -3.537426471710205
    3. '=' → logprob: -5.162426471710205
    4. ' :' → logprob: -7.287426471710205
    5. ',' → logprob: -7.912426471710205
    6. '):' → logprob: -7.912426471710205
    7. '<|end|>' → logprob: -8.287426948547363
    8. ':int' → logprob: -9.787426948547363
    9. ')' → logprob: -9.787426948547363
    10. '<|end|>' → logprob: -9.912426948547363

Token 96: ' position' (ID: 4010)
  Prédit: ' starting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' starting' → logprob: -1.8417010307312012
    2. ' position' → logprob: -2.216701030731201
    3. ' column' → logprob: -2.341701030731201
    4. ' initial' → logprob: -2.341701030731201
    5. 'int' → logprob: -2.466701030731201
    6. 'position' → logprob: -2.841701030731201
    7. ' x' → logprob: -2.966701030731201
    8. 'x' → logprob: -3.091701030731201
    9. 'column' → logprob: -3.216701030731201
    10. ' start' → logprob: -3.591701030731201

Token 97: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05875396728515625
    2. '   ' → logprob: -3.5587539672851562
    3. '):
' → logprob: -4.558753967285156
    4. ':' → logprob: -4.683753967285156
    5. ',' → logprob: -5.933753967285156
    6. ' ):' → logprob: -6.183753967285156
    7. ')' → logprob: -6.433753967285156
    8. '<|end|>' → logprob: -7.058753967285156
    9. ' :' → logprob: -8.308753967285156
    10. '  ' → logprob: -8.433753967285156

Token 98: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2366572618484497
    2. '0' → logprob: -2.23665714263916
    3. ' )' → logprob: -2.48665714263916
    4. 'int' → logprob: -4.11165714263916
    5. ' ' → logprob: -6.61165714263916
    6. '<|end|>' → logprob: -7.23665714263916
    7. ' int' → logprob: -7.73665714263916
    8. 'x' → logprob: -7.98665714263916
    9. 'p' → logprob: -8.48665714263916
    10. ' x' → logprob: -8.73665714263916

Token 99: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3173423707485199
    2. '<|end|>' → logprob: -2.0673422813415527
    3. '-based' → logprob: -2.5673422813415527
    4. ' to' → logprob: -3.4423422813415527
    5. ',' → logprob: -4.192342281341553
    6. 'based' → logprob: -5.192342281341553
    7. ' based' → logprob: -5.567342281341553
    8. ' ' → logprob: -5.817342281341553
    9. ' )' → logprob: -6.067342281341553
    10. '):
' → logprob: -6.817342281341553

Token 100: ' ' (ID: 220)
  Prédit: ' WIDTH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' WIDTH' → logprob: -0.1990191489458084
    2. 'WIDTH' → logprob: -2.074019193649292
    3. '5' → logprob: -3.324019193649292
    4. ' ' → logprob: -4.199018955230713
    5. ' (' → logprob: -6.574018955230713
    6. '4' → logprob: -7.324018955230713
    7. ')' → logprob: -7.949018955230713
    8. ' )' → logprob: -8.074019432067871
    9. 'HEIGHT' → logprob: -8.324019432067871
    10. '(' → logprob: -9.074019432067871

Token 101: '5' (ID: 20)
  Prédit: 'WIDTH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WIDTH' → logprob: -0.24607744812965393
    2. '5' → logprob: -1.9960774183273315
    3. ' WIDTH' → logprob: -2.871077537536621
    4. '1' → logprob: -5.121077537536621
    5. '3' → logprob: -5.621077537536621
    6. '(W' → logprob: -5.621077537536621
    7. ' ' → logprob: -5.871077537536621
    8. ')' → logprob: -5.871077537536621
    9. 'W' → logprob: -5.996077537536621
    10. '4' → logprob: -6.871077537536621

Token 102: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4785497188568115
    2. '):' → logprob: -0.9785497188568115
    3. '):
' → logprob: -5.478549957275391
    4. ')
' → logprob: -9.22854995727539
    5. ' )' → logprob: -9.47854995727539
    6. ',' → logprob: -10.22854995727539
    7. ' ):' → logprob: -10.35354995727539
    8. '):

' → logprob: -11.22854995727539
    9. '   ' → logprob: -11.22854995727539
    10. '#' → logprob: -12.60354995727539

Token 103: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48269879817962646
    2. '):
' → logprob: -1.6076987981796265
    3. '   ' → logprob: -2.607698917388916
    4. ')' → logprob: -2.732698917388916
    5. ':' → logprob: -3.357698917388916
    6. ':
' → logprob: -5.232698917388916
    7. '
' → logprob: -6.857698917388916
    8. '```' → logprob: -7.482698917388916
    9. ',' → logprob: -7.982698917388916
    10. ')
' → logprob: -8.357698440551758

Token 104: ' left' (ID: 3561)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09502813220024109
    2. ')' → logprob: -3.0950281620025635
    3. '<|end|>' → logprob: -3.9700281620025635
    4. ' )' → logprob: -4.095027923583984
    5. ' ,' → logprob: -6.595027923583984
    6. ' in' → logprob: -7.095027923583984
    7. ' for' → logprob: -7.220027923583984
    8. ' col' → logprob: -7.220027923583984
    9. '#' → logprob: -7.220027923583984
    10. ',' → logprob: -7.345027923583984

Token 105: ' end' (ID: 1268)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2031843215227127
    2. ':' → logprob: -2.9531843662261963
    3. '   ' → logprob: -3.4531843662261963
    4. ',' → logprob: -4.203184127807617
    5. '<|end|>' → logprob: -4.453184127807617
    6. '=' → logprob: -4.578184127807617
    7. '+' → logprob: -4.828184127807617
    8. '):' → logprob: -5.203184127807617
    9. '[' → logprob: -5.328184127807617
    10. ' =' → logprob: -5.703184127807617

Token 106: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6857054233551025
    2. '):' → logprob: -0.9357054233551025
    3. ':' → logprob: -2.5607054233551025
    4. '):
' → logprob: -4.435705184936523
    5. ')' → logprob: -4.935705184936523
    6. '
' → logprob: -5.935705184936523
    7. ':
' → logprob: -6.560705184936523
    8. '```' → logprob: -7.435705184936523
    9. ',' → logprob: -7.560705184936523
    10. ' ' → logprob: -7.685705184936523

Token 107: ' horizontal' (ID: 25511)
  Prédit: ' horizontal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.5617664456367493
    2. 'horizontal' → logprob: -0.9367664456367493
    3. ' the' → logprob: -3.5617663860321045
    4. 'the' → logprob: -4.936766624450684
    5. ' block' → logprob: -7.061766624450684
    6. ' placement' → logprob: -7.811766624450684
    7. ' q' → logprob: -7.936766624450684
    8. 'block' → logprob: -9.186766624450684
    9. 'placement' → logprob: -9.311766624450684
    10. 'vertical' → logprob: -9.561766624450684

Token 108: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7401895523071289
    2. ')' → logprob: -0.9901895523071289
    3. '<|end|>' → logprob: -2.490189552307129
    4. '   ' → logprob: -3.365189552307129
    5. 'def' → logprob: -4.865189552307129
    6. ',' → logprob: -5.115189552307129
    7. ':' → logprob: -5.365189552307129
    8. '):
' → logprob: -5.865189552307129
    9. '
' → logprob: -6.240189552307129
    10. ' ' → logprob: -6.490189552307129

Token 109: ' column' (ID: 6000)
  Prédit: ' top'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.32103458046913147
    2. '#' → logprob: -2.1960346698760986
    3. ' #' → logprob: -2.6960346698760986
    4. 'top' → logprob: -3.3210346698760986
    5. ' ' → logprob: -3.6960346698760986
    6. ' or' → logprob: -4.9460344314575195
    7. ' q' → logprob: -5.3210344314575195
    8. ')' → logprob: -5.4460344314575195
    9. ' y' → logprob: -5.8210344314575195
    10. ' right' → logprob: -6.3210344314575195

Token 110: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8616690635681152
    2. '=' → logprob: -1.2366690635681152
    3. '<|end|>' → logprob: -1.9866690635681152
    4. ' =' → logprob: -2.4866690635681152
    5. ':' → logprob: -4.736669063568115
    6. ' for' → logprob: -4.861669063568115
    7. ',' → logprob: -5.236669063568115
    8. '):' → logprob: -5.236669063568115
    9. ' ' → logprob: -5.361669063568115
    10. ' of' → logprob: -5.486669063568115

Token 111: ' vertical' (ID: 17679)
  Prédit: ' vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.6944940686225891
    2. 'vertical' → logprob: -0.6944940686225891
    3. 'the' → logprob: -7.819494247436523
    4. ' the' → logprob: -8.569494247436523
    5. 'horizontal' → logprob: -8.569494247436523
    6. 'a' → logprob: -8.819494247436523
    7. ' a' → logprob: -9.069494247436523
    8. ' placement' → logprob: -9.569494247436523
    9. 'drop' → logprob: -10.069494247436523
    10. ' drop' → logprob: -10.319494247436523

Token 112: '
' (ID: 198)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.46416425704956055
    2. '):
' → logprob: -1.4641642570495605
    3. '   ' → logprob: -2.2141642570495605
    4. ')' → logprob: -4.3391642570495605
    5. ':' → logprob: -4.5891642570495605
    6. ':
' → logprob: -6.0891642570495605
    7. '
' → logprob: -6.2141642570495605
    8. '```' → logprob: -6.3391642570495605
    9. ',' → logprob: -7.5891642570495605
    10. ' ' → logprob: -8.964164733886719

Token 113: '   ' (ID: 271)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5373681783676147
    2. '   ' → logprob: -1.5373681783676147
    3. '):
' → logprob: -1.7873681783676147
    4. ')' → logprob: -3.7873682975769043
    5. ':' → logprob: -5.162368297576904
    6. ':
' → logprob: -6.537368297576904
    7. '
' → logprob: -7.162368297576904
    8. ',' → logprob: -7.662368297576904
    9. ')
' → logprob: -7.787368297576904
    10. '```' → logprob: -8.037367820739746

Token 114: ' board' (ID: 6796)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2368895262479782
    2. '):' → logprob: -2.236889600753784
    3. '):
' → logprob: -3.236889600753784
    4. '
' → logprob: -3.861889600753784
    5. ':' → logprob: -4.361889362335205
    6. ')' → logprob: -4.361889362335205
    7. '```' → logprob: -5.236889362335205
    8. ':
' → logprob: -5.486889362335205
    9. '\n' → logprob: -6.111889362335205
    10. '    
' → logprob: -6.236889362335205

Token 115: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48606252670288086
    2. '):' → logprob: -1.3610625267028809
    3. '=' → logprob: -2.486062526702881
    4. '   ' → logprob: -4.486062526702881
    5. ')' → logprob: -4.486062526702881
    6. '):
' → logprob: -4.736062526702881
    7. ':' → logprob: -4.861062526702881
    8. ',' → logprob: -5.236062526702881
    9. ' ' → logprob: -8.736063003540039
    10. '    ' → logprob: -9.236063003540039

Token 116: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6499704718589783
    2. ' [' → logprob: -0.8999704718589783
    3. ' [
' → logprob: -3.149970531463623
    4. ' ' → logprob: -4.774970531463623
    5. '[
' → logprob: -5.149970531463623
    6. ' board' → logprob: -5.274970531463623
    7. ' [[' → logprob: -5.774970531463623
    8. '[]' → logprob: -7.149970531463623
    9. ' []' → logprob: -7.274970531463623
    10. 'board' → logprob: -7.399970531463623

Token 117: '2' (ID: 17)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2083057016134262
    2. ' [' → logprob: -2.833305597305298
    3. '[List' → logprob: -3.458305597305298
    4. '[
' → logprob: -3.708305597305298
    5. '[[' → logprob: -3.708305597305298
    6. 'list' → logprob: -4.333305835723877
    7. ' list' → logprob: -4.583305835723877
    8. '[list' → logprob: -4.708305835723877
    9. 'List' → logprob: -5.458305835723877
    10. '[int' → logprob: -5.583305835723877

Token 118: 'D' (ID: 35)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7962035536766052
    2. ')' → logprob: -1.17120361328125
    3. ' )' → logprob: -2.42120361328125
    4. '   ' → logprob: -3.04620361328125
    5. '[][]' → logprob: -3.79620361328125
    6. ' [' → logprob: -4.04620361328125
    7. ' ' → logprob: -4.17120361328125
    8. '[]' → logprob: -4.17120361328125
    9. ']' → logprob: -5.42120361328125
    10. '  ' → logprob: -5.54620361328125

Token 119: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4023302495479584
    2. ')' → logprob: -1.7773302793502808
    3. '_' → logprob: -3.527330160140991
    4. ',' → logprob: -4.02733039855957
    5. '[
' → logprob: -4.15233039855957
    6. '   ' → logprob: -4.27733039855957
    7. '[]' → logprob: -4.27733039855957
    8. '<|end|>' → logprob: -4.40233039855957
    9. ' ' → logprob: -4.77733039855957
    10. ' =' → logprob: -5.02733039855957

Token 120: ' representing' (ID: 25389)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4264560341835022
    2. '   ' → logprob: -1.6764559745788574
    3. '):
' → logprob: -2.5514559745788574
    4. ',' → logprob: -3.5514559745788574
    5. ':' → logprob: -3.8014559745788574
    6. ')' → logprob: -3.8014559745788574
    7. ',
' → logprob: -6.301455974578857
    8. '
' → logprob: -6.801455974578857
    9. '<|end|>' → logprob: -6.926455974578857
    10. '[' → logprob: -7.051455974578857

Token 121: ' board' (ID: 6796)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.01715768873691559
    2. 'the' → logprob: -4.767157554626465
    3. ' board' → logprob: -4.892157554626465
    4. 'board' → logprob: -7.017157554626465
    5. '[' → logprob: -10.267157554626465
    6. ')' → logprob: -10.517157554626465
    7. ' current' → logprob: -11.267157554626465
    8. '(board' → logprob: -11.392157554626465
    9. ' a' → logprob: -11.767157554626465
    10. ' ' → logprob: -13.517157554626465

Token 122: ' state' (ID: 2608)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3704726994037628
    2. '   ' → logprob: -1.7454726696014404
    3. ')' → logprob: -2.4954726696014404
    4. '):
' → logprob: -3.7454726696014404
    5. ':' → logprob: -3.9954726696014404
    6. ',' → logprob: -5.6204729080200195
    7. '
' → logprob: -6.7454729080200195
    8. '[' → logprob: -6.7454729080200195
    9. ' ):' → logprob: -7.3704729080200195
    10. '```' → logprob: -7.7454729080200195

Token 123: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3460519015789032
    2. '   ' → logprob: -1.7210519313812256
    3. ')' → logprob: -2.5960519313812256
    4. '):
' → logprob: -3.9710519313812256
    5. ':' → logprob: -4.5960516929626465
    6. ',' → logprob: -5.2210516929626465
    7. '
' → logprob: -6.2210516929626465
    8. '<|end|>' → logprob: -7.5960516929626465
    9. ',
' → logprob: -7.9710516929626465
    10. ':
' → logprob: -8.221052169799805

Token 124: 'HEIGHT' (ID: 105934)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.459578275680542
    2. '   ' → logprob: -1.959578275680542
    3. '):' → logprob: -2.334578275680542
    4. ' )' → logprob: -3.084578275680542
    5. ',' → logprob: -3.584578275680542
    6. '[' → logprob: -3.959578275680542
    7. '    ' → logprob: -5.209578514099121
    8. '[
' → logprob: -5.334578514099121
    9. ' ,' → logprob: -5.459578514099121
    10. ' ):' → logprob: -5.459578514099121

Token 125: ' rows' (ID: 13585)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22988180816173553
    2. '[' → logprob: -2.354881763458252
    3. ',' → logprob: -2.479881763458252
    4. '   ' → logprob: -5.729881763458252
    5. '-' → logprob: -5.854881763458252
    6. ']' → logprob: -5.854881763458252
    7. '][' → logprob: -5.854881763458252
    8. '[p' → logprob: -6.229881763458252
    9. '[row' → logprob: -6.354881763458252
    10. '[d' → logprob: -6.354881763458252

Token 126: ' x' (ID: 1215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2238457053899765
    2. ')' → logprob: -1.7238457202911377
    3. '[' → logprob: -4.848845481872559
    4. '   ' → logprob: -5.223845481872559
    5. ']' → logprob: -5.848845481872559
    6. ',
' → logprob: -5.973845481872559
    7. '[
' → logprob: -6.723845481872559
    8. ' ,' → logprob: -7.223845481872559
    9. ' and' → logprob: -9.098845481872559
    10. 'import' → logprob: -9.348845481872559

Token 127: ' WIDTH' (ID: 88792)
  Prédit: ' WIDTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' WIDTH' → logprob: -0.2811744511127472
    2. 'WIDTH' → logprob: -1.4061744213104248
    3. ' ' → logprob: -11.156174659729004
    4. '5' → logprob: -12.906174659729004
    5. ' width' → logprob: -13.281174659729004
    6. 'HEIGHT' → logprob: -13.406174659729004
    7. 'W' → logprob: -13.906174659729004
    8. '_WIDTH' → logprob: -13.906174659729004
    9. ')' → logprob: -14.281174659729004
    10. ' HEIGHT' → logprob: -15.156174659729004

Token 128: ' columns' (ID: 15697)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012658209539949894
    2. ']' → logprob: -5.63765811920166
    3. ')
' → logprob: -5.88765811920166
    4. '[' → logprob: -5.88765811920166
    5. ',' → logprob: -6.26265811920166
    6. ' )' → logprob: -7.63765811920166
    7. '[
' → logprob: -8.38765811920166
    8. '):
' → logprob: -8.76265811920166
    9. '):' → logprob: -8.88765811920166
    10. '])' → logprob: -8.88765811920166

Token 129: ')
' (ID: 446)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10412279516458511
    2. '):
' → logprob: -2.8541228771209717
    3. ')' → logprob: -3.2291228771209717
    4. ',' → logprob: -6.729122638702393
    5. '   ' → logprob: -7.979122638702393
    6. ')
' → logprob: -9.97912311553955
    7. '):

' → logprob: -10.35412311553955
    8. ' ):' → logprob: -10.60412311553955
    9. '):
' → logprob: -11.60412311553955
    10. ' )' → logprob: -12.47912311553955

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5604057908058167
    2. '):' → logprob: -1.3104057312011719
    3. ':' → logprob: -2.310405731201172
    4. '):
' → logprob: -3.685405731201172
    5. ')' → logprob: -4.435405731201172
    6. ' 
' → logprob: -4.935405731201172
    7. ':
' → logprob: -5.560405731201172
    8. '    
' → logprob: -5.685405731201172
    9. ' ):' → logprob: -6.685405731201172
    10. ' :' → logprob: -7.060405731201172

Token 131: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29657182097435
    2. ')' → logprob: -2.046571731567383
    3. ' 
' → logprob: -2.921571731567383
    4. '
' → logprob: -3.796571731567383
    5. '#' → logprob: -4.421571731567383
    6. '    
' → logprob: -4.671571731567383
    7. '    ' → logprob: -5.171571731567383
    8. '\n' → logprob: -5.171571731567383
    9. ' ' → logprob: -5.546571731567383
    10. ' for' → logprob: -6.171571731567383

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03046683967113495
    2. ' for' → logprob: -4.6554670333862305
    3. ' 
' → logprob: -4.9054670333862305
    4. '    
' → logprob: -5.1554670333862305
    5. '
' → logprob: -6.4054670333862305
    6. '#' → logprob: -7.0304670333862305
    7. '    ' → logprob: -7.0304670333862305
    8. ' i' → logprob: -7.4054670333862305
    9. ' row' → logprob: -7.7804670333862305
    10. ' #' → logprob: -8.03046703338623

Token 133: ' q' (ID: 2335)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.36836954951286316
    2. 'for' → logprob: -1.6183695793151855
    3. '#' → logprob: -3.3683695793151855
    4. 'y' → logprob: -3.6183695793151855
    5. 'if' → logprob: -4.6183695793151855
    6. ' for' → logprob: -4.6183695793151855
    7. ' row' → logprob: -5.1183695793151855
    8. 'start' → logprob: -5.3683695793151855
    9. 'pos' → logprob: -5.4933695793151855
    10. 'x' → logprob: -5.7433695793151855

Token 134: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.7074165940284729
    2. '=' → logprob: -1.5824165344238281
    3. ' =' → logprob: -1.5824165344238281
    4. '-=' → logprob: -2.582416534423828
    5. '-' → logprob: -4.207416534423828
    6. '_idx' → logprob: -5.957416534423828
    7. '_index' → logprob: -6.707416534423828
    8. ' ' → logprob: -7.707416534423828
    9. '_' → logprob: -8.832416534423828
    10. ')' → logprob: -8.832416534423828

Token 135: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011048054322600365
    2. ' ' → logprob: -4.511047840118408
    3. '   ' → logprob: -15.636048316955566
    4. '```' → logprob: -17.01104736328125
    5. '<|end|>' → logprob: -17.38604736328125
    6. 'import' → logprob: -18.51104736328125
    7. '  ' → logprob: -18.88604736328125
    8. '0' → logprob: -18.88604736328125
    9. '#' → logprob: -19.38604736328125
    10. ' ' → logprob: -19.44854736328125

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '```' → logprob: -18.75
    4. '   ' → logprob: -20.125
    5. '2' → logprob: -20.875
    6. '１' → logprob: -21.625
    7. '0' → logprob: -21.6875
    8. 'to' → logprob: -21.75
    9. 'def' → logprob: -22.0625
    10. '`' → logprob: -22.0625

Token 137: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06477675586938858
    2. '   ' → logprob: -3.439776659011841
    3. '<|end|>' → logprob: -4.18977689743042
    4. '#' → logprob: -4.56477689743042
    5. ' #' → logprob: -6.68977689743042
    6. '    
' → logprob: -7.43977689743042
    7. ' ' → logprob: -7.43977689743042
    8. ' for' → logprob: -7.81477689743042
    9. '```' → logprob: -7.93977689743042
    10. ' if' → logprob: -7.93977689743042

Token 138: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09908004850149155
    2. '#' → logprob: -2.5990800857543945
    3. 'if' → logprob: -4.7240800857543945
    4. '   ' → logprob: -5.3490800857543945
    5. ' if' → logprob: -6.3490800857543945
    6. 'for' → logprob: -6.3490800857543945
    7. '    
' → logprob: -7.0990800857543945
    8. ' #' → logprob: -7.8490800857543945
    9. ' for' → logprob: -7.9740800857543945
    10. ' ' → logprob: -7.9740800857543945

Token 139: ' zero' (ID: 12421)
  Prédit: ' Adjust'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Adjust' → logprob: -0.588830828666687
    2. ' Convert' → logprob: -1.213830828666687
    3. '#' → logprob: -2.8388309478759766
    4. 'Adjust' → logprob: -3.3388309478759766
    5. ' #' → logprob: -3.8388309478759766
    6. 'Convert' → logprob: -4.463830947875977
    7. ' Shift' → logprob: -4.963830947875977
    8. ' convert' → logprob: -5.338830947875977
    9. ' adjust' → logprob: -5.963830947875977
    10. ' shift' → logprob: -6.463830947875977

Token 140: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.25622859597206116
    2. 'based' → logprob: -1.5062285661697388
    3. '-index' → logprob: -5.631228446960449
    4. 'indexed' → logprob: -8.00622844696045
    5. 'index' → logprob: -8.75622844696045
    6. ' based' → logprob: -9.50622844696045
    7. 'Based' → logprob: -9.63122844696045
    8. '_based' → logprob: -10.38122844696045
    9. '#' → logprob: -10.50622844696045
    10. '-' → logprob: -12.13122844696045

Token 141: ' index' (ID: 3472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7967378497123718
    2. '   ' → logprob: -1.5467379093170166
    3. ' if' → logprob: -1.7967379093170166
    4. 'for' → logprob: -3.0467379093170166
    5. ' for' → logprob: -3.0467379093170166
    6. 'y' → logprob: -3.7967379093170166
    7. 'row' → logprob: -3.9217379093170166
    8. '
' → logprob: -4.5467376708984375
    9. '#' → logprob: -5.4217376708984375
    10. 'pos' → logprob: -5.4217376708984375

Token 143: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6933491826057434
    2. ' if' → logprob: -1.1933491230010986
    3. '   ' → logprob: -2.4433491230010986
    4. 'row' → logprob: -3.1933491230010986
    5. 'y' → logprob: -3.9433491230010986
    6. 'for' → logprob: -4.193349361419678
    7. ' for' → logprob: -4.193349361419678
    8. ' row' → logprob: -5.068349361419678
    9. 'pos' → logprob: -5.443349361419678
    10. ' y' → logprob: -6.068349361419678

Token 144: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2513868808746338
    2. 'row' → logprob: -1.7513868808746338
    3. 'y' → logprob: -4.126386642456055
    4. 'start' → logprob: -4.626386642456055
    5. '#' (adapté à ' #') → logprob: -4.876386642456055
    6. 'for' → logprob: -5.001386642456055
    7. 'pos' → logprob: -5.876386642456055
    8. ' if' → logprob: -6.376386642456055
    9. 'max' → logprob: -6.876386642456055
    10. 'x' → logprob: -7.376386642456055

Token 145: ' Find' (ID: 9764)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12522387504577637
    2. ' if' → logprob: -3.0002238750457764
    3. 'start' → logprob: -4.1252241134643555
    4. 'row' → logprob: -4.2502241134643555
    5. '#' → logprob: -4.5002241134643555
    6. 'max' → logprob: -4.7502241134643555
    7. 'y' → logprob: -5.7502241134643555
    8. 'pos' → logprob: -6.1252241134643555
    9. 'for' → logprob: -6.3752241134643555
    10. 'board' → logprob: -6.8752241134643555

Token 146: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.040487367659807205
    2. 'the' → logprob: -4.290487289428711
    3. 'row' → logprob: -5.290487289428711
    4. ' y' → logprob: -5.665487289428711
    5. ' row' → logprob: -5.790487289428711
    6. ' drop' → logprob: -6.165487289428711
    7. ' lowest' → logprob: -6.165487289428711
    8. 'lowest' → logprob: -6.165487289428711
    9. 'height' → logprob: -6.665487289428711
    10. ' start' → logprob: -6.665487289428711

Token 147: ' landing' (ID: 30271)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.6772341132164001
    2. 'row' → logprob: -1.177234172821045
    3. 'max' → logprob: -2.677234172821045
    4. 'height' → logprob: -4.052234172821045
    5. 'drop' → logprob: -4.177234172821045
    6. 'position' → logprob: -4.302234172821045
    7. 'highest' → logprob: -4.302234172821045
    8. ' lowest' → logprob: -4.552234172821045
    9. ' row' → logprob: -4.552234172821045
    10. ' max' → logprob: -5.177234172821045

Token 148: ' height' (ID: 4679)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.5301110148429871
    2. ' row' → logprob: -1.0301110744476318
    3. 'height' → logprob: -3.655111074447632
    4. ' height' → logprob: -3.905111074447632
    5. '_row' → logprob: -5.280110836029053
    6. ' position' → logprob: -6.905110836029053
    7. 'position' → logprob: -7.280110836029053
    8. '_height' → logprob: -7.655110836029053
    9. 'y' → logprob: -8.655111312866211
    10. ' ' → logprob: -9.030111312866211

Token 149: ' of' (ID: 328)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3042462468147278
    2. 'for' → logprob: -1.554246187210083
    3. 'row' → logprob: -4.179246425628662
    4. 'h' → logprob: -4.554246425628662
    5. 'height' → logprob: -4.929246425628662
    6. ' h' → logprob: -5.054246425628662
    7. ' row' → logprob: -5.554246425628662
    8. 'pos' → logprob: -6.429246425628662
    9. 'max' → logprob: -7.179246425628662
    10. ' height' → logprob: -7.304246425628662

Token 150: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.32521891593933105
    2. ' block' → logprob: -2.200218915939331
    3. 'the' → logprob: -2.575218915939331
    4. 'block' → logprob: -3.700218915939331
    5. ' p' → logprob: -3.950218915939331
    6. 'p' → logprob: -4.32521915435791
    7. 'max' → logprob: -5.32521915435791
    8. ' max' → logprob: -5.45021915435791
    9. ' next' → logprob: -5.57521915435791
    10. 'h' → logprob: -5.95021915435791

Token 151: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.09864561259746552
    2. 'lowest' → logprob: -2.8486456871032715
    3. ' block' → logprob: -3.7236456871032715
    4. 'for' → logprob: -5.9736456871032715
    5. 'max' → logprob: -6.0986456871032715
    6. 'start' → logprob: -6.4736456871032715
    7. 'row' → logprob: -7.2236456871032715
    8. 'position' → logprob: -7.2236456871032715
    9. 'highest' → logprob: -7.4736456871032715
    10. 'bottom' → logprob: -7.5986456871032715

Token 152: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5845539569854736
    2. 'for' → logprob: -1.8345539569854736
    3. 'row' → logprob: -2.0845539569854736
    4. 'h' → logprob: -3.2095539569854736
    5. ' h' → logprob: -3.5845539569854736
    6. ' row' → logprob: -3.5845539569854736
    7. 'height' → logprob: -4.0845537185668945
    8. 'max' → logprob: -4.0845537185668945
    9. ' max' → logprob: -5.0845537185668945
    10. '
' → logprob: -5.7095537185668945

Token 153: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23098117113113403
    2. 'for' → logprob: -1.9809811115264893
    3. ' max' → logprob: -3.9809811115264893
    4. 'max' → logprob: -4.105981349945068
    5. '   ' → logprob: -4.355981349945068
    6. 'row' → logprob: -5.355981349945068
    7. 'height' → logprob: -5.730981349945068
    8. '
' → logprob: -5.855981349945068
    9. ' row' → logprob: -6.355981349945068
    10. ' h' → logprob: -7.230981349945068

Token 154: ' #' (ID: 1069)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.381669282913208
    2. 'h' → logprob: -1.506669282913208
    3. 'for' → logprob: -2.006669282913208
    4. 'height' → logprob: -2.006669282913208
    5. 'max' → logprob: -2.006669282913208
    6. ' max' → logprob: -3.756669282913208
    7. 'landing' → logprob: -4.006669044494629
    8. ' for' → logprob: -4.131669044494629
    9. ' landing' → logprob: -4.506669044494629
    10. 'y' → logprob: -4.631669044494629

Token 155: ' Landing' (ID: 72989)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7153443694114685
    2. ' max' → logprob: -2.3403444290161133
    3. 'height' → logprob: -2.5903444290161133
    4. 'landing' → logprob: -2.5903444290161133
    5. 'for' → logprob: -3.0903444290161133
    6. 'row' → logprob: -3.2153444290161133
    7. 'h' → logprob: -3.4653444290161133
    8. ' landing' → logprob: -3.7153444290161133
    9. 'land' → logprob: -3.8403444290161133
    10. 'min' → logprob: -4.340344429016113

Token 156: ' height' (ID: 4679)
  Prédit: '_height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.24045462906360626
    2. '_row' → logprob: -2.11545467376709
    3. ' =' → logprob: -2.49045467376709
    4. '=' → logprob: -5.11545467376709
    5. 'height' → logprob: -6.49045467376709
    6. '_he' → logprob: -7.24045467376709
    7. '_y' → logprob: -7.36545467376709
    8. 'row' → logprob: -7.86545467376709
    9. '_' → logprob: -7.99045467376709
    10. '_pos' → logprob: -8.61545467376709

Token 157: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3484920561313629
    2. '=' → logprob: -1.2234920263290405
    3. ' ' → logprob: -11.223491668701172
    4. ',' → logprob: -11.723491668701172
    5. '_height' → logprob: -12.223491668701172
    6. 'max' → logprob: -12.348491668701172
    7. '=max' → logprob: -12.973491668701172
    8. ' ' → logprob: -13.473491668701172
    9. ')' → logprob: -13.598491668701172
    10. '=row' → logprob: -13.723491668701172

Token 158: 'row' (ID: 843)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2297394871711731
    2. 'h' → logprob: -2.8547394275665283
    3. 'max' → logprob: -3.7297394275665283
    4. ' max' → logprob: -3.8547394275665283
    5. ' =' → logprob: -4.229739665985107
    6. ' h' → logprob: -4.354739665985107
    7. '0' → logprob: -4.479739665985107
    8. 'row' → logprob: -4.479739665985107
    9. '=' → logprob: -4.604739665985107
    10. ' for' → logprob: -4.979739665985107

Token 159: ')' (ID: 8)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0179171562194824
    2. ')' → logprob: -1.1429171562194824
    3. ' =' → logprob: -1.1429171562194824
    4. '_idx' → logprob: -8.26791763305664
    5. 's' → logprob: -8.51791763305664
    6. ' )' → logprob: -9.14291763305664
    7. ')=' → logprob: -9.39291763305664
    8. '_height' → logprob: -9.76791763305664
    9. '_index' → logprob: -9.89291763305664
    10. 'idx' → logprob: -11.26791763305664

Token 160: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12697263062000275
    2. '=' → logprob: -2.1269726753234863
    3. ',' → logprob: -11.251972198486328
    4. 'max' → logprob: -11.751972198486328
    5. ' for' → logprob: -12.751972198486328
    6. ')' → logprob: -12.876972198486328
    7. 's' → logprob: -13.001972198486328
    8. ' ' → logprob: -13.251972198486328
    9. 'height' → logprob: -13.376972198486328
    10. 'for' → logprob: -13.501972198486328

Token 161: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2452070116996765
    2. 'HEIGHT' → logprob: -2.1202070713043213
    3. ' ' → logprob: -2.7452070713043213
    4. '-' → logprob: -4.370206832885742
    5. ' HEIGHT' → logprob: -4.870206832885742
    6. 'max' → logprob: -5.745206832885742
    7. ' max' → logprob: -5.745206832885742
    8. ' next' → logprob: -6.120206832885742
    9. ' -' → logprob: -6.245206832885742
    10. ' the' → logprob: -7.245206832885742

Token 162: ' lowest' (ID: 23120)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39136803150177
    2. 'HEIGHT' → logprob: -1.51636803150177
    3. 'lowest' → logprob: -3.1413679122924805
    4. ' ' → logprob: -4.3913679122924805
    5. ' first' → logprob: -4.7663679122924805
    6. ' HEIGHT' → logprob: -4.7663679122924805
    7. 'highest' → logprob: -4.8913679122924805
    8. 'max' → logprob: -5.1413679122924805
    9. ' highest' → logprob: -5.6413679122924805
    10. 'first' → logprob: -5.8913679122924805

Token 163: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.28899404406547546
    2. ' row' → logprob: -2.163994073867798
    3. ' empty' → logprob: -3.163994073867798
    4. 'empty' → logprob: -3.538994073867798
    5. 'possible' → logprob: -3.913994073867798
    6. ' possible' → logprob: -4.663993835449219
    7. 'occupied' → logprob: -5.413993835449219
    8. ' available' → logprob: -5.538993835449219
    9. ' for' → logprob: -5.538993835449219
    10. 'available' → logprob: -5.663993835449219

Token 164: ' where' (ID: 1919)
  Prédit: ' where'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.5280188322067261
    2. ' at' → logprob: -2.0280189514160156
    3. ' for' → logprob: -2.7780189514160156
    4. '<|end|>' → logprob: -3.2780189514160156
    5. ' with' → logprob: -3.4030189514160156
    6. ' in' → logprob: -3.4030189514160156
    7. ' ' → logprob: -3.9030189514160156
    8. 'where' → logprob: -4.278018951416016
    9. ' =' → logprob: -4.403018951416016
    10. 'with' → logprob: -4.653018951416016

Token 165: ' the' (ID: 290)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -1.104738473892212
    2. 'all' → logprob: -1.229738473892212
    3. 'any' → logprob: -1.854738473892212
    4. 'board' → logprob: -2.354738473892212
    5. ' all' → logprob: -2.604738473892212
    6. ' the' → logprob: -4.354738235473633
    7. 'for' → logprob: -4.479738235473633
    8. 'the' → logprob: -4.604738235473633
    9. ' for' → logprob: -5.104738235473633
    10. 'block' → logprob: -5.354738235473633

Token 166: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.2815999388694763
    2. ' block' → logprob: -1.406599998474121
    3. 'for' → logprob: -9.031599998474121
    4. ' for' → logprob: -10.281599998474121
    5. '#' → logprob: -10.406599998474121
    6. 'board' → logprob: -10.531599998474121
    7. 'd' → logprob: -10.656599998474121
    8. 'current' → logprob: -10.656599998474121
    9. 'space' → logprob: -11.031599998474121
    10. 'p' → logprob: -11.156599998474121

Token 167: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.01663997583091259
    2. 'can' → logprob: -4.1416401863098145
    3. ' could' → logprob: -8.766639709472656
    4. '_can' → logprob: -8.891639709472656
    5. ' is' → logprob: -10.016639709472656
    6. ' above' → logprob: -10.391639709472656
    7. ' cannot' → logprob: -10.516639709472656
    8. 'above' → logprob: -10.641639709472656
    9. ' fits' → logprob: -11.016639709472656
    10. 's' → logprob: -11.391639709472656

Token 168: ' be' (ID: 413)
  Prédit: 'fit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fit' → logprob: -0.9379541873931885
    2. 'rest' → logprob: -1.1879541873931885
    3. ' rest' → logprob: -2.0629541873931885
    4. 'be' → logprob: -2.8129541873931885
    5. ' be' → logprob: -2.9379541873931885
    6. ' fit' → logprob: -3.6879541873931885
    7. 'land' → logprob: -4.312953948974609
    8. 'sit' → logprob: -4.687953948974609
    9. 'fall' → logprob: -6.062953948974609
    10. 'stand' → logprob: -6.187953948974609

Token 169: ' placed' (ID: 12989)
  Prédit: 'placed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placed' → logprob: -0.006168743595480919
    2. ' placed' → logprob: -5.131168842315674
    3. 's' → logprob: -9.256168365478516
    4. ' safely' → logprob: -10.506168365478516
    5. 'd' → logprob: -11.006168365478516
    6. 'supported' → logprob: -11.256168365478516
    7. '```' → logprob: -11.506168365478516
    8. 'land' → logprob: -11.756168365478516
    9. 'put' → logprob: -11.881168365478516
    10. ' ' → logprob: -11.881168365478516

Token 170: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.585798978805542
    2. ' ' → logprob: -1.835798978805542
    3. 'for' → logprob: -2.960798978805542
    4. '=' → logprob: -3.460798978805542
    5. ' =' → logprob: -3.460798978805542
    6. ' at' → logprob: -3.460798978805542
    7. ' in' → logprob: -3.585798978805542
    8. ')' → logprob: -3.960798978805542
    9. ':' → logprob: -4.460799217224121
    10. ',' → logprob: -4.585799217224121

Token 171: 'bottom' (ID: 29677)
  Prédit: ' HEIGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' HEIGHT' → logprob: -1.1231839656829834
    2. ' for' → logprob: -1.2481839656829834
    3. ')' → logprob: -1.7481839656829834
    4. 'HEIGHT' → logprob: -2.4981839656829834
    5. ' the' → logprob: -3.3731839656829834
    6. ' )' → logprob: -4.3731842041015625
    7. '0' → logprob: -4.7481842041015625
    8. ' row' → logprob: -4.8731842041015625
    9. ' i' → logprob: -5.1231842041015625
    10. ' in' → logprob: -5.2481842041015625

Token 172: ' row' (ID: 5225)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6153132319450378
    2. ' =' → logprob: -1.1153132915496826
    3. ')' → logprob: -2.3653132915496826
    4. 'row' → logprob: -4.6153130531311035
    5. '_row' → logprob: -5.4903130531311035
    6. '=row' → logprob: -5.4903130531311035
    7. ' row' → logprob: -5.7403130531311035
    8. ' at' → logprob: -6.6153130531311035
    9. '-' → logprob: -6.6153130531311035
    10. '   ' → logprob: -6.7403130531311035

Token 173: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3825951814651489
    2. '<|end|>' → logprob: -2.0075950622558594
    3. ' -' → logprob: -2.8825950622558594
    4. ' =' → logprob: -3.0075950622558594
    5. '+' → logprob: -4.007595062255859
    6. '=' → logprob: -4.382595062255859
    7. '-' → logprob: -4.382595062255859
    8. ' +' → logprob: -4.882595062255859
    9. ' at' → logprob: -5.257595062255859
    10. '<|end|>' → logprob: -5.632595062255859

Token 174: ' ' (ID: 220)
  Prédit: 'HEIGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -0.18403328955173492
    2. '0' → logprob: -2.1840333938598633
    3. ' HEIGHT' → logprob: -2.9340333938598633
    4. ' ' → logprob: -6.309033393859863
    5. '1' → logprob: -8.059033393859863
    6. '-' → logprob: -9.934033393859863
    7. '   ' → logprob: -11.309033393859863
    8. 'WIDTH' → logprob: -11.559033393859863
    9. '```' → logprob: -11.746533393859863
    10. ' -' → logprob: -11.809033393859863

Token 175: '0' (ID: 15)
  Prédit: 'HEIGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -0.14541514217853546
    2. '0' → logprob: -2.0204150676727295
    3. ' HEIGHT' → logprob: -6.020415306091309
    4. '1' → logprob: -8.520415306091309
    5. ' ' → logprob: -10.145415306091309
    6. '-' → logprob: -11.395415306091309
    7. '   ' → logprob: -11.395415306091309
    8. 'HE' → logprob: -11.770415306091309
    9. 'BOARD' → logprob: -12.145415306091309
    10. 'WIDTH' → logprob: -12.395415306091309

Token 176: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005276330281049013
    2. ' )' → logprob: -6.005276203155518
    3. ',' → logprob: -6.505276203155518
    4. '#' → logprob: -8.505276679992676
    5. ')
' → logprob: -8.505276679992676
    6. '<|end|>' → logprob: -8.880276679992676
    7. ' or' → logprob: -9.130276679992676
    8. ' for' → logprob: -9.255276679992676
    9. '   ' → logprob: -9.255276679992676
    10. ' at' → logprob: -9.380276679992676

Token 177: '   ' (ID: 271)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.8309937119483948
    2. 'for' → logprob: -1.83099365234375
    3. ' for' → logprob: -1.95599365234375
    4. 'max' → logprob: -2.20599365234375
    5. 'height' → logprob: -2.95599365234375
    6. 'h' → logprob: -3.33099365234375
    7. ' row' → logprob: -3.95599365234375
    8. ' max' → logprob: -4.70599365234375
    9. 'current' → logprob: -5.20599365234375
    10. 'pos' → logprob: -5.33099365234375

Token 178: ' #' (ID: 1069)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.5343010425567627
    2. 'max' → logprob: -2.1593010425567627
    3. 'landing' → logprob: -2.2843010425567627
    4. 'height' → logprob: -2.4093010425567627
    5. 'for' → logprob: -3.2843010425567627
    6. 'land' → logprob: -4.409300804138184
    7. ' landing' → logprob: -4.659300804138184
    8. 'h' → logprob: -4.784300804138184
    9. '   ' → logprob: -5.034300804138184
    10. 'lowest' → logprob: -5.159300804138184

Token 179: ' We' (ID: 1416)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.5784120559692383
    2. 'for' → logprob: -1.8284120559692383
    3. 'max' → logprob: -2.5784120559692383
    4. 'landing' → logprob: -2.7034120559692383
    5. 'h' → logprob: -2.9534120559692383
    6. 'height' → logprob: -3.3284120559692383
    7. ' for' → logprob: -4.578412055969238
    8. ' landing' → logprob: -4.953412055969238
    9. ' row' → logprob: -5.078412055969238
    10. 'lowest' → logprob: -5.578412055969238

Token 180: ' start' (ID: 1604)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7666969299316406
    2. ' for' → logprob: -0.8916969299316406
    3. '=' → logprob: -3.3916969299316406
    4. ' =' → logprob: -3.3916969299316406
    5. '   ' → logprob: -3.5166969299316406
    6. ')' → logprob: -5.016696929931641
    7. ' assume' → logprob: -6.016696929931641
    8. 'def' → logprob: -6.141696929931641
    9. ' find' → logprob: -6.141696929931641
    10. '#' → logprob: -6.141696929931641

Token 181: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.5347768664360046
    2. 'from' → logprob: -1.0347769260406494
    3. ' at' → logprob: -2.9097769260406494
    4. 'at' → logprob: -5.90977668762207
    5. 'row' → logprob: -7.40977668762207
    6. ' searching' → logprob: -7.90977668762207
    7. ' with' → logprob: -8.40977668762207
    8. '   ' → logprob: -9.15977668762207
    9. 'with' → logprob: -9.15977668762207
    10. 'height' → logprob: -9.65977668762207

Token 182: ' the' (ID: 290)
  Prédit: 'HEIGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -0.4212549030780792
    2. '0' → logprob: -1.4212548732757568
    3. ' HEIGHT' → logprob: -2.421254873275757
    4. ' ' → logprob: -4.671255111694336
    5. ' the' → logprob: -6.171255111694336
    6. ' row' → logprob: -7.421255111694336
    7. 'row' → logprob: -7.546255111694336
    8. 'the' → logprob: -7.921255111694336
    9. ' bottom' → logprob: -8.921255111694336
    10. 'BOTTOM' → logprob: -8.921255111694336

Token 183: ' bottom' (ID: 8725)
  Prédit: 'HEIGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -0.08539093285799026
    2. '0' → logprob: -3.460391044616699
    3. 'bottom' → logprob: -3.960391044616699
    4. 'top' → logprob: -4.210391044616699
    5. ' HEIGHT' → logprob: -5.210391044616699
    6. ' bottom' → logprob: -5.710391044616699
    7. ' top' → logprob: -5.710391044616699
    8. 'BOTTOM' → logprob: -6.335391044616699
    9. 'highest' → logprob: -6.835391044616699
    10. 'lowest' → logprob: -7.585391044616699

Token 184: ' and' (ID: 326)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.7853406667709351
    2. ' for' → logprob: -1.160340666770935
    3. 'for' → logprob: -2.1603407859802246
    4. ' row' → logprob: -2.5353407859802246
    5. 'height' → logprob: -4.660340785980225
    6. ' and' → logprob: -5.160340785980225
    7. ',' → logprob: -5.535340785980225
    8. ' while' → logprob: -6.035340785980225
    9. 'current' → logprob: -6.035340785980225
    10. 'while' → logprob: -6.160340785980225

Token 185: ' go' (ID: 810)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35199519991874695
    2. 'for' → logprob: -2.4769952297210693
    3. ' check' → logprob: -2.6019952297210693
    4. ' try' → logprob: -3.3519952297210693
    5. ' find' → logprob: -3.6019952297210693
    6. ' go' → logprob: -3.6019952297210693
    7. 'HEIGHT' → logprob: -4.10199499130249
    8. ' HEIGHT' → logprob: -4.22699499130249
    9. ' move' → logprob: -5.47699499130249
    10. ' look' → logprob: -5.72699499130249

Token 186: ' upward' (ID: 71327)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.273982971906662
    2. ' up' → logprob: -1.7739830017089844
    3. ' upwards' → logprob: -2.8989830017089844
    4. '   ' → logprob: -4.648983001708984
    5. 'down' → logprob: -6.273983001708984
    6. ' upward' → logprob: -6.648983001708984
    7. ' ' → logprob: -7.648983001708984
    8. ' down' → logprob: -7.898983001708984
    9. '    ' → logprob: -7.898983001708984
    10. '	up' → logprob: -8.523983001708984

Token 187: '

' (ID: 279)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2668061852455139
    2. ' row' → logprob: -2.391806125640869
    3. 'for' → logprob: -2.766806125640869
    4. 'row' → logprob: -3.141806125640869
    5. '
' → logprob: -4.766806125640869
    6. ':' → logprob: -4.766806125640869
    7. '   ' → logprob: -5.766806125640869
    8. ' while' → logprob: -5.891806125640869
    9. 'height' → logprob: -6.016806125640869
    10. ',' → logprob: -6.266806125640869

Token 188: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8608518242835999
    2. '   ' → logprob: -1.735851764678955
    3. '
' → logprob: -2.110851764678955
    4. ' row' → logprob: -2.360851764678955
    5. 'row' → logprob: -2.485851764678955
    6. 'for' → logprob: -3.485851764678955
    7. ' 
' → logprob: -4.110851764678955
    8. ' i' → logprob: -4.860851764678955
    9. '```' → logprob: -4.860851764678955
    10. 'height' → logprob: -5.110851764678955

Token 189: ' if' (ID: 538)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.44354885816574097
    2. 'for' → logprob: -1.5685489177703857
    3. ' for' → logprob: -2.3185489177703857
    4. ' row' → logprob: -3.4435489177703857
    5. 'height' → logprob: -5.568548679351807
    6. 'i' → logprob: -5.568548679351807
    7. 'pos' → logprob: -5.693548679351807
    8. 'h' → logprob: -6.318548679351807
    9. 'current' → logprob: -6.443548679351807
    10. 'landing' → logprob: -7.193548679351807

Token 190: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.014164687134325504
    2. 'd' → logprob: -4.264164924621582
    3. '	d' → logprob: -14.639164924621582
    4. ' ' → logprob: -15.514164924621582
    5. '  ' → logprob: -15.639164924621582
    6. '   ' → logprob: -15.764164924621582
    7. '#' → logprob: -17.139163970947266
    8. '    ' → logprob: -17.764163970947266
    9. ')d' → logprob: -17.764163970947266
    10. '_d' → logprob: -17.889163970947266

Token 191: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04861677438020706
    2. '==' → logprob: -3.048616886138916
    3. '=' → logprob: -11.798616409301758
    4. '[' → logprob: -11.798616409301758
    5. ' ' → logprob: -12.173616409301758
    6. ')' → logprob: -13.173616409301758
    7. ' ' → logprob: -13.548616409301758
    8. ')==' → logprob: -13.548616409301758
    9. ' =' → logprob: -13.798616409301758
    10. ']==' → logprob: -14.298616409301758

Token 192: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25193315744400024
    2. ' ' → logprob: -1.5019330978393555
    3. '2' → logprob: -12.626933097839355
    4. '0' → logprob: -15.501933097839355
    5. ' ' → logprob: -16.064434051513672
    6. '```' → logprob: -16.376934051513672
    7. '  ' → logprob: -16.751934051513672
    8. '   ' → logprob: -17.001934051513672
    9. '=' → logprob: -17.314434051513672
    10. '<|end|>' → logprob: -17.564434051513672

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013394085690379143
    2. ' ' → logprob: -6.626339435577393
    3. '2' → logprob: -11.251338958740234
    4. '0' → logprob: -15.501338958740234
    5. '```' → logprob: -16.063838958740234
    6. '   ' → logprob: -17.751338958740234
    7. '3' → logprob: -17.751338958740234
    8. '[' → logprob: -18.063838958740234
    9. '  ' → logprob: -18.063838958740234
    10. '=' → logprob: -18.126338958740234

Token 194: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036254855804145336
    2. ':
' → logprob: -5.628625392913818
    3. '   ' → logprob: -11.253625869750977
    4. ' :' → logprob: -11.628625869750977
    5. '):' → logprob: -13.753625869750977
    6. ',' → logprob: -14.128625869750977
    7. ':
' → logprob: -14.378625869750977
    8. ':

' → logprob: -15.253625869750977
    9. ' :
' → logprob: -15.378625869750977
    10. '):
' → logprob: -15.628625869750977

Token 195: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6315913796424866
    2. ' for' → logprob: -1.2565913200378418
    3. 'row' → logprob: -2.506591320037842
    4. '   ' → logprob: -2.631591320037842
    5. ' row' → logprob: -4.506591320037842
    6. 'max' → logprob: -5.381591320037842
    7. 'height' → logprob: -5.506591320037842
    8. ':' → logprob: -6.381591320037842
    9. 'h' → logprob: -6.381591320037842
    10. 'r' → logprob: -7.006591320037842

Token 196: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41719552874565125
    2. ' for' → logprob: -1.9171955585479736
    3. 'row' → logprob: -2.9171955585479736
    4. '   ' → logprob: -3.1671955585479736
    5. 'max' → logprob: -3.5421955585479736
    6. 'lowest' → logprob: -4.0421953201293945
    7. '#' (adapté à ' #') → logprob: -4.5421953201293945
    8. 'height' → logprob: -4.7921953201293945
    9. ' max' → logprob: -4.7921953201293945
    10. ' row' → logprob: -5.0421953201293945

Token 197: ' horizontal' (ID: 25511)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12482169270515442
    2. 'max' → logprob: -2.749821662902832
    3. ' for' → logprob: -3.999821662902832
    4. 'row' → logprob: -4.874821662902832
    5. '#' → logprob: -5.249821662902832
    6. ' max' → logprob: -5.374821662902832
    7. 'height' → logprob: -5.874821662902832
    8. 'col' → logprob: -5.874821662902832
    9. 'start' → logprob: -5.999821662902832
    10. 'lowest' → logprob: -6.249821662902832

Token 198: ' block' (ID: 4355)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.9442233443260193
    2. ' for' → logprob: -1.319223403930664
    3. 'for' → logprob: -1.444223403930664
    4. ' row' → logprob: -2.819223403930664
    5. 'height' → logprob: -4.069223403930664
    6. ':' → logprob: -4.569223403930664
    7. 'pos' → logprob: -5.444223403930664
    8. 'h' → logprob: -5.694223403930664
    9. '   ' → logprob: -6.319223403930664
    10. 'r' → logprob: -6.819223403930664

Token 199: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.760603666305542
    2. '
' → logprob: -1.260603666305542
    3. 'for' → logprob: -2.385603666305542
    4. 'row' → logprob: -3.010603666305542
    5. ' for' → logprob: -3.135603666305542
    6. 'height' → logprob: -3.385603666305542
    7. ':' → logprob: -5.135603904724121
    8. ' row' → logprob: -5.510603904724121
    9. 'max' → logprob: -5.635603904724121
    10. '    
' → logprob: -5.635603904724121

Token 200: '-length' (ID: 53970)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.066235065460205
    2. '_height' → logprob: -1.191235065460205
    3. '_length' → logprob: -2.316235065460205
    4. '=' → logprob: -2.941235065460205
    5. '_len' → logprob: -3.816235065460205
    6. 'for' → logprob: -3.941235065460205
    7. 'length' → logprob: -3.941235065460205
    8. ',' → logprob: -4.316235065460205
    9. 'height' → logprob: -4.441235065460205
    10. 'max' → logprob: -5.066235065460205

Token 201: ' starting' (ID: 8601)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8212605714797974
    2. ':' → logprob: -1.6962605714797974
    3. 'row' → logprob: -1.8212605714797974
    4. 'for' → logprob: -2.196260452270508
    5. ' row' → logprob: -3.821260452270508
    6. 'height' → logprob: -3.946260452270508
    7. ' =' → logprob: -4.321260452270508
    8. ',' → logprob: -5.071260452270508
    9. ':
' → logprob: -5.321260452270508
    10. 'h' → logprob: -5.446260452270508

Token 202: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.14559397101402283
    2. 'from' → logprob: -2.7705938816070557
    3. 'at' → logprob: -3.1455938816070557
    4. ' from' → logprob: -3.5205938816070557
    5. '=' → logprob: -9.895593643188477
    6. 'row' → logprob: -10.520593643188477
    7. ' with' → logprob: -10.645593643188477
    8. ' ' → logprob: -11.020593643188477
    9. ' =' → logprob: -11.020593643188477
    10. ',' → logprob: -11.145593643188477

Token 203: ' column' (ID: 6000)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.3133138120174408
    2. ' q' → logprob: -1.3133138418197632
    3. 'p' → logprob: -11.438313484191895
    4. 'column' → logprob: -11.813313484191895
    5. 'row' → logprob: -12.188313484191895
    6. ' p' → logprob: -12.438313484191895
    7. 'position' → logprob: -12.563313484191895
    8. ' position' → logprob: -12.688313484191895
    9. ' column' → logprob: -12.938313484191895
    10. ' row' → logprob: -13.188313484191895

Token 204: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.5233494639396667
    2. 'q' → logprob: -0.8983494639396667
    3. '[q' → logprob: -9.77334976196289
    4. '
' → logprob: -10.64834976196289
    5. ',q' → logprob: -10.77334976196289
    6. '	q' → logprob: -10.77334976196289
    7. '=' → logprob: -10.77334976196289
    8. ',' → logprob: -10.89834976196289
    9. '=q' → logprob: -11.14834976196289
    10. ' =' → logprob: -11.89834976196289

Token 205: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8913924098014832
    2. '   ' → logprob: -1.016392469406128
    3. ':
' → logprob: -1.641392469406128
    4. '
' → logprob: -5.141392230987549
    5. ' row' → logprob: -5.266392230987549
    6. ' for' → logprob: -5.391392230987549
    7. 'row' → logprob: -5.391392230987549
    8. ',' → logprob: -5.891392230987549
    9. 'height' → logprob: -6.391392230987549
    10. '    
' → logprob: -6.516392230987549

Token 206: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17194868624210358
    2. 'row' → logprob: -2.6719486713409424
    3. ' for' → logprob: -3.5469486713409424
    4. 'height' → logprob: -4.0469489097595215
    5. ' row' → logprob: -4.1719489097595215
    6. 'for' → logprob: -4.1719489097595215
    7. '    
' → logprob: -6.5469489097595215
    8. ' height' → logprob: -6.5469489097595215
    9. '
' → logprob: -6.6719489097595215
    10. '       ' → logprob: -6.7969489097595215

Token 207: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39518871903419495
    2. 'row' → logprob: -1.2701886892318726
    3. 'height' → logprob: -3.645188808441162
    4. 'h' → logprob: -4.895188808441162
    5. 'landing' → logprob: -5.645188808441162
    6. 'max' → logprob: -5.895188808441162
    7. ' for' → logprob: -6.645188808441162
    8. '   ' → logprob: -6.895188808441162
    9. 'pos' → logprob: -7.270188808441162
    10. 'r' → logprob: -7.895188808441162

Token 208: ' Ensure' (ID: 43810)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23010192811489105
    2. 'row' → logprob: -1.8551019430160522
    3. 'height' → logprob: -3.9801018238067627
    4. 'max' → logprob: -4.355102062225342
    5. ' for' → logprob: -4.980102062225342
    6. 'landing' → logprob: -5.980102062225342
    7. 'h' → logprob: -6.480102062225342
    8. 'pos' → logprob: -6.730102062225342
    9. 'lowest' → logprob: -7.105102062225342
    10. ' row' → logprob: -7.230102062225342

Token 209: ' the' (ID: 290)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.49834761023521423
    2. ' all' → logprob: -1.6233476400375366
    3. 'q' → logprob: -1.8733476400375366
    4. ' p' → logprob: -3.873347520828247
    5. 'all' → logprob: -4.373347759246826
    6. 'p' → logprob: -5.623347759246826
    7. ' that' → logprob: -6.873347759246826
    8. ' ' → logprob: -6.998347759246826
    9. ' not' → logprob: -7.248347759246826
    10. '   ' → logprob: -7.873347759246826

Token 210: ' block' (ID: 4355)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.7959824204444885
    2. ' q' → logprob: -0.9209824204444885
    3. ' p' → logprob: -3.5459823608398438
    4. 'p' → logprob: -4.045982360839844
    5. 'block' → logprob: -4.045982360839844
    6. ' block' → logprob: -4.170982360839844
    7. 'for' → logprob: -4.545982360839844
    8. ' for' → logprob: -4.795982360839844
    9. 'all' → logprob: -4.920982360839844
    10. ' next' → logprob: -5.420982360839844

Token 211: ' fits' (ID: 23440)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.15307874977588654
    2. 'can' → logprob: -3.02807879447937
    3. ' is' → logprob: -3.77807879447937
    4. ' fits' → logprob: -4.153078556060791
    5. ' occupies' → logprob: -4.403078556060791
    6. ' does' → logprob: -5.028078556060791
    7. ' has' → logprob: -5.278078556060791
    8. '   ' → logprob: -5.403078556060791
    9. ' doesn't' → logprob: -5.778078556060791
    10. 'max' → logprob: -6.028078556060791

Token 212: ' horizontally' (ID: 113653)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.464307576417923
    2. ' if' → logprob: -1.3393075466156006
    3. '   ' → logprob: -2.5893075466156006
    4. 'if' → logprob: -4.33930778503418
    5. 'and' → logprob: -4.46430778503418
    6. ' at' → logprob: -5.58930778503418
    7. ' for' → logprob: -5.96430778503418
    8. ' in' → logprob: -6.83930778503418
    9. ',' → logprob: -7.08930778503418
    10. '       ' → logprob: -8.33930778503418

Token 213: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07567961513996124
    2. ' and' → logprob: -3.5756795406341553
    3. '   ' → logprob: -3.7006795406341553
    4. 'if' → logprob: -3.9506795406341553
    5. ' for' → logprob: -7.825679779052734
    6. 'and' → logprob: -7.950679779052734
    7. ',' → logprob: -10.200679779052734
    8. '    ' → logprob: -10.825679779052734
    9. ' ' → logprob: -10.825679779052734
    10. '<|end|>' → logprob: -10.825679779052734

Token 214: '       ' (ID: 309)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6952539682388306
    2. '   ' → logprob: -1.4452539682388306
    3. ' if' → logprob: -1.4452539682388306
    4. ' for' → logprob: -4.445253849029541
    5. ':' → logprob: -5.445253849029541
    6. 'if' → logprob: -5.570253849029541
    7. ',' → logprob: -6.195253849029541
    8. '       ' → logprob: -6.195253849029541
    9. 'and' → logprob: -6.570253849029541
    10. ' ' → logprob: -7.070253849029541

Token 215: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20182864367961884
    2. 'if' (adapté à ' if') → logprob: -1.7018285989761353
    3. '   ' → logprob: -8.701828956604004
    4. 'assert' → logprob: -9.201828956604004
    5. ' assert' → logprob: -9.451828956604004
    6. ' and' → logprob: -10.451828956604004
    7. ' for' → logprob: -11.201828956604004
    8. '    ' → logprob: -11.451828956604004
    9. 'for' → logprob: -12.451828956604004
    10. '       ' → logprob: -12.826828956604004

Token 216: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.043068159371614456
    2. 'q' → logprob: -3.1680681705474854
    3. ' p' → logprob: -10.043067932128906
    4. ' not' → logprob: -12.043067932128906
    5. 'p' → logprob: -12.418067932128906
    6. '           ' → logprob: -13.043067932128906
    7. '        ' → logprob: -13.043067932128906
    8. '    ' → logprob: -13.293067932128906
    9. ' (' → logprob: -13.418067932128906
    10. '   ' → logprob: -13.418067932128906

Token 217: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7789191007614136
    2. ' +' → logprob: -0.9039191007614136
    3. ' >' → logprob: -2.653919219970703
    4. '>' → logprob: -3.028919219970703
    5. '<' → logprob: -4.528919219970703
    6. ' <' → logprob: -5.153919219970703
    7. ' ' → logprob: -8.153919219970703
    8. ' <=' → logprob: -8.528919219970703
    9. '<|end|>' → logprob: -9.028919219970703
    10. '<=' → logprob: -9.653919219970703

Token 218: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00861456897109747
    2. ' p' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.008615493774414
    4. '	p' → logprob: -18.008615493774414
    5. '1' → logprob: -18.133615493774414
    6. '<p' → logprob: -18.258615493774414
    7. '   ' → logprob: -19.258615493774414
    8. '(p' → logprob: -19.383615493774414
    9. '+p' → logprob: -19.633615493774414
    10. '  ' → logprob: -20.133615493774414

Token 219: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.391917884349823
    2. '>' → logprob: -1.1419179439544678
    3. ' <=' → logprob: -5.641917705535889
    4. '<=' → logprob: -6.516917705535889
    5. ' ' → logprob: -12.891918182373047
    6. ')' → logprob: -13.266918182373047
    7. '">' → logprob: -13.641918182373047
    8. '>=' → logprob: -13.766918182373047
    9. '```' → logprob: -14.391918182373047
    10. ' >=' → logprob: -14.516918182373047

Token 220: ' WIDTH' (ID: 88792)
  Prédit: ' WIDTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' WIDTH' → logprob: -0.20165053009986877
    2. 'WIDTH' → logprob: -1.7016505002975464
    3. '5' → logprob: -8.701650619506836
    4. ' ' → logprob: -9.826650619506836
    5. ' width' → logprob: -12.201650619506836
    6. 'W' → logprob: -12.701650619506836
    7. '   ' → logprob: -13.076650619506836
    8. '_WIDTH' → logprob: -13.201650619506836
    9. ' W' → logprob: -14.201650619506836
    10. '    ' → logprob: -14.326650619506836

Token 221: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008500874042510986
    2. ':
' → logprob: -5.258501052856445
    3. ':return' → logprob: -5.883501052856445
    4. ' :' → logprob: -8.383501052856445
    5. '):' → logprob: -9.133501052856445
    6. ' or' → logprob: -9.383501052856445
    7. '   ' → logprob: -11.008501052856445
    8. ')' → logprob: -11.383501052856445
    9. ' :
' → logprob: -11.758501052856445
    10. '       ' → logprob: -12.008501052856445

Token 222: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7299227714538574
    2. ':
' → logprob: -1.3549227714538574
    3. '       ' → logprob: -1.6049227714538574
    4. ':return' → logprob: -3.8549227714538574
    5. ' return' → logprob: -4.229922771453857
    6. ':' → logprob: -4.229922771453857
    7. 'return' → logprob: -5.229922771453857
    8. ' :
' → logprob: -6.604922771453857
    9. '\n' → logprob: -7.104922771453857
    10. '   ' → logprob: -7.979922771453857

Token 223: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.36893659830093384
    2. 'return' → logprob: -1.743936538696289
    3. '       ' → logprob: -2.118936538696289
    4. '
' → logprob: -4.743936538696289
    5. ' 
' → logprob: -6.243936538696289
    6. ' raise' → logprob: -6.493936538696289
    7. '\n' → logprob: -7.493936538696289
    8. 'raise' → logprob: -8.493936538696289
    9. ' ' → logprob: -8.993936538696289
    10. '   ' → logprob: -9.243936538696289

Token 224: ' invalid' (ID: 15796)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16082720458507538
    2. 'return' → logprob: -2.035827159881592
    3. ' raise' → logprob: -4.535827159881592
    4. '       ' → logprob: -5.160827159881592
    5. 'raise' → logprob: -6.910827159881592
    6. '           ' → logprob: -8.53582763671875
    7. '    ' → logprob: -9.28582763671875
    8. '   ' → logprob: -9.53582763671875
    9. '
' → logprob: -10.03582763671875
    10. ' ' → logprob: -10.28582763671875

Token 225: ' input' (ID: 3422)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.03131570667028427
    2. ' ' → logprob: -4.156315803527832
    3. ' 
' → logprob: -5.281315803527832
    4. ' \' → logprob: -5.531315803527832
    5. ' return' → logprob: -5.781315803527832
    6. 'return' → logprob: -7.531315803527832
    7. '
' → logprob: -7.656315803527832
    8. '\' → logprob: -7.656315803527832
    9. '  
' → logprob: -7.906315803527832
    10. '\r' → logprob: -7.906315803527832

Token 226: ' technically' (ID: 59986)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.289823293685913
    2. '       ' → logprob: -1.789823293685913
    3. ':
' → logprob: -1.789823293685913
    4. ':return' → logprob: -2.039823293685913
    5. '   ' → logprob: -2.289823293685913
    6. ' return' → logprob: -2.664823293685913
    7. 'return' → logprob: -2.914823293685913
    8. ':' → logprob: -4.164823532104492
    9. '
' → logprob: -4.664823532104492
    10. '           ' → logprob: -5.289823532104492

Token 227: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3448812663555145
    2. '           ' → logprob: -2.719881296157837
    3. ':
' → logprob: -2.719881296157837
    4. 'return' → logprob: -3.094881296157837
    5. '\n' → logprob: -3.344881296157837
    6. ' return' → logprob: -3.594881296157837
    7. ':' → logprob: -4.219881057739258
    8. ':return' → logprob: -4.219881057739258
    9. '
' → logprob: -4.469881057739258
    10. '   ' → logprob: -4.969881057739258

Token 228: ' but' (ID: 889)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.31572428345680237
    2. 'return' → logprob: -1.94072425365448
    3. '       ' → logprob: -2.0657243728637695
    4. '   ' → logprob: -8.81572437286377
    5. '
' → logprob: -9.19072437286377
    6. '           ' → logprob: -9.56572437286377
    7. ' raise' → logprob: -10.19072437286377
    8. '    ' → logprob: -11.44072437286377
    9. 'raise' → logprob: -11.81572437286377
    10. '	return' → logprob: -12.06572437286377

Token 229: ' per' (ID: 777)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04884067177772522
    2. 'return' → logprob: -3.0488407611846924
    3. '       ' → logprob: -8.673840522766113
    4. '   ' → logprob: -9.923840522766113
    5. ' raise' → logprob: -11.173840522766113
    6. '    ' → logprob: -11.923840522766113
    7. ' pass' → logprob: -12.173840522766113
    8. '           ' → logprob: -12.548840522766113
    9. '
' → logprob: -14.048840522766113
    10. 'raise' → logprob: -14.173840522766113

Token 230: ' problem' (ID: 4792)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5417141914367676
    2. 'pass' → logprob: -1.6667141914367676
    3. 'return' → logprob: -1.7917141914367676
    4. 'haps' → logprob: -3.5417141914367676
    5. '
' → logprob: -5.166714191436768
    6. ' pass' → logprob: -5.291714191436768
    7. ' raise' → logprob: -5.416714191436768
    8. '#' → logprob: -5.791714191436768
    9. ' problem' → logprob: -6.291714191436768
    10. '```' → logprob: -6.416714191436768

Token 231: ' constraints' (ID: 31060)
  Prédit: ' statement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' statement' → logprob: -1.3141018152236938
    2. ' constraints' → logprob: -1.5641018152236938
    3. ' return' → logprob: -1.9391018152236938
    4. '       ' → logprob: -2.8141016960144043
    5. '   ' → logprob: -3.0641016960144043
    6. ' logic' → logprob: -3.0641016960144043
    7. '           ' → logprob: -3.1891016960144043
    8. ',' → logprob: -3.1891016960144043
    9. ' description' → logprob: -3.4391016960144043
    10. ':' → logprob: -3.9391016960144043

Token 232: ' it' (ID: 480)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7414869070053101
    2. '       ' → logprob: -1.36648690700531
    3. ',' → logprob: -1.61648690700531
    4. ' return' → logprob: -2.7414870262145996
    5. 'return' → logprob: -5.7414870262146
    6. '               ' → logprob: -6.8664870262146
    7. ' ,' → logprob: -7.3664870262146
    8. ' we' → logprob: -8.741486549377441
    9. '   ' → logprob: -9.616486549377441
    10. ':return' → logprob: -9.741486549377441

Token 233: ' should' (ID: 1757)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.702868640422821
    2. ' return' → logprob: -1.8278687000274658
    3. ' is' → logprob: -1.9528687000274658
    4. '       ' → logprob: -2.577868700027466
    5. 'return' → logprob: -3.577868700027466
    6. ' continues' → logprob: -3.827868700027466
    7. ' will' → logprob: -4.077868461608887
    8. '   ' → logprob: -4.702868461608887
    9. ' continue' → logprob: -4.952868461608887
    10. ' should' → logprob: -5.077868461608887

Token 234: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.1486778259277344
    2. 'return' → logprob: -1.1486778259277344
    3. 'not' → logprob: -1.8986778259277344
    4. ' return' → logprob: -2.3986778259277344
    5. '           ' → logprob: -2.5236778259277344
    6. ' be' → logprob: -4.398677825927734
    7. 'raise' → logprob: -4.648677825927734
    8. 'continue' → logprob: -5.023677825927734
    9. '       ' → logprob: -5.148677825927734
    10. ' raise' → logprob: -5.648677825927734

Token 235: ' happen' (ID: 5659)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0937310457229614
    2. 'return' → logprob: -1.7187310457229614
    3. ' pass' → logprob: -1.7187310457229614
    4. 'continue' → logprob: -2.468730926513672
    5. ' continue' → logprob: -2.593730926513672
    6. 'pass' → logprob: -3.093730926513672
    7. '
' → logprob: -3.468730926513672
    8. ' be' → logprob: -3.718730926513672
    9. ' happen' → logprob: -4.093730926513672
    10. '           ' → logprob: -5.093730926513672

Token 236: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9692533016204834
    2. '       ' → logprob: -1.0942533016204834
    3. '
' → logprob: -1.5942533016204834
    4. '           ' → logprob: -3.4692533016204834
    5. '   ' → logprob: -4.0942535400390625
    6. ',' → logprob: -4.7192535400390625
    7. ':
' → logprob: -4.7192535400390625
    8. ':' → logprob: -5.5942535400390625
    9. '.' → logprob: -5.7192535400390625
    10. ':return' → logprob: -5.9692535400390625

Token 237: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07559584081172943
    2. '           ' → logprob: -2.7005958557128906
    3. '\n' → logprob: -6.450595855712891
    4. '
' → logprob: -6.575595855712891
    5. ' return' → logprob: -6.700595855712891
    6. '   ' → logprob: -7.450595855712891
    7. 'return' → logprob: -7.575595855712891
    8. '               ' → logprob: -9.45059585571289
    9. ',' → logprob: -9.82559585571289
    10. '        
' → logprob: -9.95059585571289

Token 238: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.18145285546779633
    2. ' return' → logprob: -1.8064528703689575
    3. '   ' → logprob: -7.306452751159668
    4. '       ' → logprob: -7.931452751159668
    5. 'pass' → logprob: -8.181452751159668
    6. 'raise' → logprob: -8.556452751159668
    7. ' pass' → logprob: -8.806452751159668
    8. ' raise' → logprob: -10.431452751159668
    9. '           ' → logprob: -11.556452751159668
    10. '    ' → logprob: -11.806452751159668

Token 239: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21276919543743134
    2. '   ' → logprob: -1.9627691507339478
    3. '    
' → logprob: -3.7127692699432373
    4. ' for' → logprob: -5.087769031524658
    5. ' row' → logprob: -5.212769031524658
    6. 'row' → logprob: -5.712769031524658
    7. '  
' → logprob: -5.837769031524658
    8. '0' → logprob: -6.337769031524658
    9. 'for' → logprob: -6.337769031524658
    10. ' 
' → logprob: -6.837769031524658

Token 240: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015515140257775784
    2. '    
' → logprob: -5.015515327453613
    3. 'row' → logprob: -6.515515327453613
    4. '
' → logprob: -6.515515327453613
    5. ' row' → logprob: -6.765515327453613
    6. ' for' → logprob: -7.015515327453613
    7. 'height' → logprob: -7.140515327453613
    8. 'for' → logprob: -7.640515327453613
    9. ' y' → logprob: -7.765515327453613
    10. ' height' → logprob: -8.390515327453613

Token 241: ' #' (ID: 1069)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6248341202735901
    2. 'for' → logprob: -2.1248340606689453
    3. 'height' → logprob: -2.2498340606689453
    4. 'landing' → logprob: -2.2498340606689453
    5. 'max' → logprob: -2.7498340606689453
    6. 'h' → logprob: -4.124834060668945
    7. 'pos' → logprob: -4.249834060668945
    8. 'land' → logprob: -4.499834060668945
    9. 'lowest' → logprob: -5.124834060668945
    10. 'base' → logprob: -5.499834060668945

Token 242: ' For' (ID: 2214)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.115297555923462
    2. 'for' → logprob: -1.365297555923462
    3. 'max' → logprob: -1.990297555923462
    4. 'landing' → logprob: -2.115297555923462
    5. 'height' → logprob: -2.615297555923462
    6. 'start' → logprob: -3.865297555923462
    7. 'lowest' → logprob: -4.490297317504883
    8. 'pos' → logprob: -4.490297317504883
    9. 'land' → logprob: -4.990297317504883
    10. 'base' → logprob: -5.115297317504883

Token 243: ' each' (ID: 2454)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.5369155406951904
    2. 'row' → logprob: -1.4119155406951904
    3. ' h' → logprob: -3.0369155406951904
    4. 'h' → logprob: -3.5369155406951904
    5. ' height' → logprob: -3.5369155406951904
    6. ' col' → logprob: -3.5369155406951904
    7. 'height' → logprob: -3.9119155406951904
    8. 'col' → logprob: -5.1619157791137695
    9. 'r' → logprob: -5.9119157791137695
    10. ' r' → logprob: -6.1619157791137695

Token 244: ' column' (ID: 6000)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.7452492713928223
    2. 'col' → logprob: -1.2452492713928223
    3. ' col' → logprob: -2.1202492713928223
    4. ' row' → logprob: -2.3702492713928223
    5. 'h' → logprob: -4.870249271392822
    6. 'r' → logprob: -5.245249271392822
    7. 'height' → logprob: -5.495249271392822
    8. ' h' → logprob: -5.870249271392822
    9. 'column' → logprob: -7.245249271392822
    10. 'i' → logprob: -7.370249271392822

Token 245: ' of' (ID: 328)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15905195474624634
    2. ' q' → logprob: -2.2840518951416016
    3. ' col' → logprob: -4.659051895141602
    4. 'q' → logprob: -4.784051895141602
    5. ' for' → logprob: -5.659051895141602
    6. 'in' → logprob: -5.909051895141602
    7. ' ' → logprob: -6.034051895141602
    8. '<|end|>' → logprob: -6.034051895141602
    9. ' i' → logprob: -6.159051895141602
    10. ' from' → logprob: -6.284051895141602

Token 246: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2522217631340027
    2. 'the' → logprob: -1.7522218227386475
    3. ' range' → logprob: -3.6272218227386475
    4. 'range' → logprob: -4.002221584320068
    5. ' block' → logprob: -6.252221584320068
    6. ' q' → logprob: -6.627221584320068
    7. 'block' → logprob: -7.627221584320068
    8. ' p' → logprob: -8.502222061157227
    9. 'q' → logprob: -8.752222061157227
    10. ' height' → logprob: -9.002222061157227

Token 247: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.4315294921398163
    2. ' block' → logprob: -1.0565295219421387
    3. 'board' → logprob: -6.431529521942139
    4. ' q' → logprob: -8.05652904510498
    5. 'p' → logprob: -8.93152904510498
    6. 'range' → logprob: -9.05652904510498
    7. 'horizontal' → logprob: -9.05652904510498
    8. ' p' → logprob: -9.18152904510498
    9. 'q' → logprob: -9.43152904510498
    10. ' board' → logprob: -9.68152904510498

Token 248: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9202505350112915
    2. ',' → logprob: -1.0452505350112915
    3. 'max' → logprob: -2.545250415802002
    4. ' max' → logprob: -2.920250415802002
    5. ' col' → logprob: -3.420250415802002
    6. 'height' → logprob: -3.920250415802002
    7. 'lowest' → logprob: -4.795250415802002
    8. ' ,' → logprob: -5.170250415802002
    9. '<|end|>' → logprob: -5.170250415802002
    10. 'highest' → logprob: -5.420250415802002

Token 249: ' find' (ID: 1646)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6484370827674866
    2. ' max' → logprob: -1.7734370231628418
    3. '   ' → logprob: -3.023437023162842
    4. 'height' → logprob: -3.273437023162842
    5. 'landing' → logprob: -3.273437023162842
    6. 'lowest' → logprob: -3.273437023162842
    7. 'min' → logprob: -3.773437023162842
    8. ' landing' → logprob: -4.023437023162842
    9. '       ' → logprob: -4.398437023162842
    10. 'col' → logprob: -4.523437023162842

Token 250: ' height' (ID: 4679)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3148914575576782
    2. 'the' → logprob: -1.6898914575576782
    3. 'max' → logprob: -2.8148913383483887
    4. ' max' → logprob: -4.314891338348389
    5. 'lowest' → logprob: -5.564891338348389
    6. '0' → logprob: -6.439891338348389
    7. 'highest' → logprob: -6.439891338348389
    8. 'HEIGHT' → logprob: -6.564891338348389
    9. 'height' → logprob: -7.564891338348389
    10. ' lowest' → logprob: -7.814891338348389

Token 251: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04428071156144142
    2. 'max' → logprob: -4.169280529022217
    3. 's' → logprob: -4.544280529022217
    4. '=' → logprob: -4.919280529022217
    5. '   ' → logprob: -5.294280529022217
    6. ' max' → logprob: -6.419280529022217
    7. '_max' → logprob: -7.169280529022217
    8. '<|end|>' → logprob: -8.044281005859375
    9. '=max' → logprob: -8.544281005859375
    10. ')' → logprob: -8.544281005859375

Token 252: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5405821800231934
    2. ' the' → logprob: -1.4155821800231934
    3. 'lowest' → logprob: -2.9155821800231934
    4. 'max' → logprob: -3.4155821800231934
    5. 'highest' → logprob: -3.6655821800231934
    6. 'block' → logprob: -4.165582180023193
    7. 'board' → logprob: -4.540582180023193
    8. 'occupied' → logprob: -4.915582180023193
    9. ' ' → logprob: -5.790582180023193
    10. 'column' → logprob: -5.915582180023193

Token 253: ' stacked' (ID: 75875)
  Prédit: 'highest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'highest' → logprob: -0.8658414483070374
    2. ' highest' → logprob: -0.9908414483070374
    3. 'board' → logprob: -2.8658413887023926
    4. 'lowest' → logprob: -2.9908413887023926
    5. 'max' → logprob: -3.6158413887023926
    6. 'block' → logprob: -4.240841388702393
    7. ' first' → logprob: -4.365841388702393
    8. ' next' → logprob: -4.740841388702393
    9. ' lowest' → logprob: -4.740841388702393
    10. ' block' → logprob: -5.240841388702393

Token 254: ' blocks' (ID: 18125)
  Prédit: 'blocks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blocks' → logprob: -1.1304510831832886
    2. 'block' → logprob: -1.5054510831832886
    3. ' block' → logprob: -2.255451202392578
    4. ' blocks' → logprob: -2.505451202392578
    5. 'row' → logprob: -2.755451202392578
    6. 'column' → logprob: -3.630451202392578
    7. ' cells' → logprob: -3.755451202392578
    8. 'cells' → logprob: -3.880451202392578
    9. 'for' → logprob: -4.255451202392578
    10. 'board' → logprob: -4.505451202392578

Token 255: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1379871368408203
    2. 'max' → logprob: -3.2629871368408203
    3. ' max' → logprob: -3.3879871368408203
    4. 'he' → logprob: -3.7629871368408203
    5. ' for' → logprob: -4.26298713684082
    6. 'for' → logprob: -5.51298713684082
    7. ',' → logprob: -6.01298713684082
    8. ' in' → logprob: -6.13798713684082
    9. ' heights' → logprob: -6.38798713684082
    10. ' at' → logprob: -7.01298713684082

Token 256: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15595020353794098
    2. 'max' → logprob: -2.2809503078460693
    3. ' max' → logprob: -3.7809503078460693
    4. 'he' → logprob: -5.65595006942749
    5. 'lowest' → logprob: -5.65595006942749
    6. 'height' → logprob: -5.90595006942749
    7. ' heights' → logprob: -6.03095006942749
    8. 'min' → logprob: -6.40595006942749
    9. 'highest' → logprob: -6.40595006942749
    10. 'col' → logprob: -7.65595006942749

Token 257: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.24934066832065582
    2. 'he' → logprob: -2.249340772628784
    3. ' max' → logprob: -3.624340772628784
    4. 'lowest' → logprob: -3.999340772628784
    5. 'base' → logprob: -4.124340534210205
    6. 'min' → logprob: -4.374340534210205
    7. '   ' → logprob: -4.499340534210205
    8. 'col' → logprob: -4.999340534210205
    9. 'height' → logprob: -5.374340534210205
    10. 'landing' → logprob: -5.624340534210205

Token 258: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.001340123824775219
    2. '_he' → logprob: -7.001339912414551
    3. '_row' → logprob: -8.62633991241455
    4. '_block' → logprob: -9.75133991241455
    5. '_h' → logprob: -9.87633991241455
    6. 'height' → logprob: -10.00133991241455
    7. '_col' → logprob: -10.50133991241455
    8. 'Height' → logprob: -10.87633991241455
    9. '_floor' → logprob: -11.62633991241455
    10. '_pos' → logprob: -11.87633991241455

Token 259: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4287210702896118
    2. '=' → logprob: -1.0537210702896118
    3. 's' → logprob: -11.30372142791748
    4. ' ' → logprob: -12.55372142791748
    5. '   ' → logprob: -13.55372142791748
    6. ')' → logprob: -14.17872142791748
    7. ' ' → logprob: -14.80372142791748
    8. '=max' → logprob: -15.17872142791748
    9. ',' → logprob: -15.30372142791748
    10. '  ' → logprob: -15.42872142791748

Token 260: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08283939212560654
    2. '-' → logprob: -2.7078394889831543
    3. ' ' → logprob: -4.957839488983154
    4. ' -' → logprob: -5.832839488983154
    5. 'max' → logprob: -6.332839488983154
    6. ' max' → logprob: -6.957839488983154
    7. '   ' → logprob: -9.207839012145996
    8. '-max' → logprob: -11.457839012145996
    9. '[' → logprob: -11.957839012145996
    10. '  ' → logprob: -12.770339012145996

Token 261: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07130029052495956
    2. '-' → logprob: -2.6963002681732178
    3. 'max' → logprob: -7.321300506591797
    4. ' ' → logprob: -7.821300506591797
    5. ' -' → logprob: -8.321300506591797
    6. '   ' → logprob: -11.321300506591797
    7. '[' → logprob: -11.321300506591797
    8. ' max' → logprob: -11.446300506591797
    9. '-max' → logprob: -11.821300506591797
    10. '-height' → logprob: -12.946300506591797

Token 262: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9845987558364868
    2. '
' → logprob: -1.2345987558364868
    3. '<|end|>' → logprob: -1.4845987558364868
    4. '   ' → logprob: -2.7345986366271973
    5. 'for' → logprob: -3.3595986366271973
    6. '<|end|>' → logprob: -4.984598636627197
    7. ' ' → logprob: -7.859598636627197
    8. '  
' → logprob: -8.109599113464355
    9. ' 
' → logprob: -8.109599113464355
    10. '    
' → logprob: -8.359599113464355

Token 263: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.494014710187912
    2. '   ' → logprob: -1.4940147399902344
    3. 'for' → logprob: -2.2440147399902344
    4. '
' → logprob: -2.9940147399902344
    5. '<|end|>' → logprob: -4.869014739990234
    6. '	for' → logprob: -7.744014739990234
    7. '<|end|>' → logprob: -8.244014739990234
    8. ' ' → logprob: -8.494014739990234
    9. ' 
' → logprob: -9.119014739990234
    10. '    
' → logprob: -9.244014739990234

Token 264: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4741910696029663
    2. ' for' → logprob: -0.9741910696029663
    3. '   ' → logprob: -9.224190711975098
    4. '
' → logprob: -11.349190711975098
    5. '	for' → logprob: -13.224190711975098
    6. ' 
' → logprob: -14.724190711975098
    7. 'while' → logprob: -15.099190711975098
    8. '```' → logprob: -15.224190711975098
    9. '    ' → logprob: -15.474190711975098
    10. ' ' → logprob: -15.599190711975098

Token 265: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.20482322573661804
    2. ' col' → logprob: -2.5798232555389404
    3. 'c' → logprob: -2.9548232555389404
    4. 'i' → logprob: -3.5798232555389404
    5. 'x' → logprob: -3.8298232555389404
    6. ' c' → logprob: -5.704823017120361
    7. 'j' → logprob: -6.329823017120361
    8. ' i' → logprob: -6.704823017120361
    9. ' x' → logprob: -7.329823017120361
    10. 'offset' → logprob: -8.20482349395752

Token 266: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001781925675459206
    2. 'in' → logprob: -6.501781940460205
    3. ' ' → logprob: -8.376781463623047
    4. '=' → logprob: -11.376781463623047
    5. 's' → logprob: -11.501781463623047
    6. '<|end|>' → logprob: -12.001781463623047
    7. ')' → logprob: -12.251781463623047
    8. ' =' → logprob: -12.251781463623047
    9. ',' → logprob: -12.876781463623047
    10. '_in' → logprob: -13.251781463623047

Token 267: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141586661338806
    2. ' range' → logprob: -1.7014158964157104
    3. '(range' → logprob: -13.326416015625
    4. '	range' → logprob: -14.576416015625
    5. '   ' → logprob: -15.951416015625
    6. ' ' → logprob: -15.951416015625
    7. '[' → logprob: -17.576416015625
    8. '  ' → logprob: -17.826416015625
    9. 'q' → logprob: -18.326416015625
    10. ' q' → logprob: -18.451416015625

Token 268: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.00038896629121154547
    2. '(W' → logprob: -8.625389099121094
    3. '(' → logprob: -8.750389099121094
    4. 'q' → logprob: -10.125389099121094
    5. ' (' → logprob: -12.250389099121094
    6. '(width' → logprob: -13.625389099121094
    7. '   ' → logprob: -13.875389099121094
    8. 'WIDTH' → logprob: -14.125389099121094
    9. '[q' → logprob: -14.250389099121094
    10. '(p' → logprob: -14.500389099121094

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005433554761111736
    2. ' ,' → logprob: -5.380433559417725
    3. ',q' → logprob: -7.255433559417725
    4. ',
' → logprob: -10.630433082580566
    5. ',p' → logprob: -11.005433082580566
    6. '+' → logprob: -11.380433082580566
    7. '   ' → logprob: -11.380433082580566
    8. '           ' → logprob: -11.755433082580566
    9. ' +' → logprob: -12.130433082580566
    10. '       ' → logprob: -12.255433082580566

Token 270: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.002185472520068288
    2. ' q' → logprob: -6.127185344696045
    3. '   ' → logprob: -15.502185821533203
    4. '	q' → logprob: -15.752185821533203
    5. ')' → logprob: -17.127185821533203
    6. ' ' → logprob: -17.752185821533203
    7. '    ' → logprob: -17.752185821533203
    8. 'qh' → logprob: -18.502185821533203
    9. '(q' → logprob: -18.877185821533203
    10. '[q' → logprob: -19.127185821533203

Token 271: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28512224555015564
    2. ' +' → logprob: -1.410122275352478
    3. '+p' → logprob: -5.535122394561768
    4. ')' → logprob: -12.16012191772461
    5. ' ' → logprob: -12.41012191772461
    6. ')+' → logprob: -13.41012191772461
    7. ' ' → logprob: -13.78512191772461
    8. ',' → logprob: -13.84762191772461
    9. ' plus' → logprob: -14.41012191772461
    10. '+k' → logprob: -14.53512191772461

Token 272: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.615255839889869e-05
    2. ' p' → logprob: -9.250096321105957
    3. '1' → logprob: -17.37509536743164
    4. '   ' → logprob: -18.37509536743164
    5. ' ' → logprob: -18.62509536743164
    6. '<p' → logprob: -19.00009536743164
    7. '	p' → logprob: -19.12509536743164
    8. ')p' → logprob: -19.37509536743164
    9. '5' → logprob: -20.00009536743164
    10. '[p' → logprob: -20.00009536743164

Token 273: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08902115374803543
    2. '):' → logprob: -2.4640212059020996
    3. '):
' → logprob: -9.714020729064941
    4. ' ):
' → logprob: -11.464020729064941
    5. '):

' → logprob: -12.464020729064941
    6. ')' → logprob: -12.714020729064941
    7. ' ):' → logprob: -13.464020729064941
    8. '   ' → logprob: -13.964020729064941
    9. ':
' → logprob: -14.589020729064941
    10. ':' → logprob: -15.339020729064941

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0937521681189537
    2. ' if' → logprob: -2.718752145767212
    3. 'if' → logprob: -4.843752384185791
    4. ' max' → logprob: -5.093752384185791
    5. 'max' → logprob: -5.593752384185791
    6. ' while' → logprob: -5.718752384185791
    7. 'while' → logprob: -7.343752384185791
    8. '
' → logprob: -7.718752384185791
    9. ' for' → logprob: -7.968752384185791
    10. '0' → logprob: -8.593751907348633

Token 275: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7683420181274414
    2. ' while' → logprob: -0.8933420181274414
    3. '           ' → logprob: -2.8933420181274414
    4. ' for' → logprob: -3.8933420181274414
    5. 'max' → logprob: -4.518342018127441
    6. 'for' → logprob: -4.643342018127441
    7. ' max' → logprob: -4.768342018127441
    8. '               ' → logprob: -5.143342018127441
    9. 'if' → logprob: -5.518342018127441
    10. 'height' → logprob: -5.768342018127441

Token 276: ' find' (ID: 1646)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.3587058782577515
    2. 'for' → logprob: -1.3587058782577515
    3. 'max' → logprob: -1.6087058782577515
    4. 'while' → logprob: -2.233705997467041
    5. 'col' → logprob: -3.358705997467041
    6. ' for' → logprob: -3.358705997467041
    7. 'height' → logprob: -3.483705997467041
    8. 'r' → logprob: -3.858705997467041
    9. 'h' → logprob: -4.483705997467041
    10. '           ' → logprob: -4.608705997467041

Token 277: ' top' (ID: 2344)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.2064253091812134
    2. ' the' → logprob: -1.4564253091812134
    3. 'HEIGHT' → logprob: -1.7064253091812134
    4. ' HEIGHT' → logprob: -2.331425189971924
    5. ' next' → logprob: -2.456425189971924
    6. ' len' → logprob: -3.331425189971924
    7. 'max' → logprob: -3.581425189971924
    8. 'len' → logprob: -5.206425189971924
    9. ' height' → logprob: -5.581425189971924
    10. ' current' → logprob: -5.581425189971924

Token 278: 'most' (ID: 5309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5811585783958435
    2. '_height' → logprob: -2.2061586380004883
    3. '_row' → logprob: -2.3311586380004883
    4. 'row' → logprob: -2.3311586380004883
    5. ')' → logprob: -3.7061586380004883
    6. '=' → logprob: -3.7061586380004883
    7. ' row' → logprob: -4.081158638000488
    8. '   ' → logprob: -4.581158638000488
    9. ' for' → logprob: -4.706158638000488
    10. '[row' → logprob: -5.581158638000488

Token 279: ' filled' (ID: 14255)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.8222091197967529
    2. ' for' → logprob: -1.572209119796753
    3. ' row' → logprob: -2.572209119796753
    4. 'i' → logprob: -2.822209119796753
    5. ' occupied' → logprob: -2.947209119796753
    6. 'for' → logprob: -3.197209119796753
    7. 'occupied' → logprob: -3.197209119796753
    8. 'height' → logprob: -4.322209358215332
    9. ' i' → logprob: -4.447209358215332
    10. 'h' → logprob: -4.572209358215332

Token 280: ' cell' (ID: 4206)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.19430845975875854
    2. ' row' → logprob: -1.9443085193634033
    3. '_row' → logprob: -4.319308280944824
    4. '[row' → logprob: -4.319308280944824
    5. ' cell' → logprob: -6.194308280944824
    6. '+' → logprob: -7.069308280944824
    7. '=row' → logprob: -7.569308280944824
    8. '(row' → logprob: -7.944308280944824
    9. '_height' → logprob: -7.944308280944824
    10. ' for' → logprob: -8.319308280944824

Token 281: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5206189751625061
    2. ' for' → logprob: -1.1456189155578613
    3. ' at' → logprob: -3.5206189155578613
    4. 'for' → logprob: -4.270618915557861
    5. '           ' → logprob: -4.770618915557861
    6. 'row' → logprob: -5.020618915557861
    7. ' =' → logprob: -5.145618915557861
    8. ' row' → logprob: -5.270618915557861
    9. '[row' → logprob: -6.145618915557861
    10. ',' → logprob: -6.270618915557861

Token 282: ' this' (ID: 495)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.27469733357429504
    2. ' range' → logprob: -1.7746973037719727
    3. 're' → logprob: -3.5246973037719727
    4. 'board' → logprob: -3.5246973037719727
    5. ' reversed' → logprob: -4.899697303771973
    6. ' board' → logprob: -6.024697303771973
    7. '   ' → logprob: -7.149697303771973
    8. 'for' → logprob: -7.899697303771973
    9. '
' → logprob: -8.649697303771973
    10. 'the' → logprob: -9.024697303771973

Token 283: ' column' (ID: 6000)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.1233688592910767
    2. 'range' → logprob: -1.4983688592910767
    3. 'col' → logprob: -1.9983688592910767
    4. ' col' → logprob: -1.9983688592910767
    5. 'board' → logprob: -2.748368740081787
    6. ' for' → logprob: -3.748368740081787
    7. 'for' → logprob: -3.748368740081787
    8. ' row' → logprob: -4.373368740081787
    9. ' board' → logprob: -4.373368740081787
    10. 'column' → logprob: -4.498368740081787

Token 284: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.465341180562973
    2. '           ' → logprob: -1.9653412103652954
    3. ' in' → logprob: -2.840341091156006
    4. ' while' → logprob: -3.465341091156006
    5. '
' → logprob: -3.590341091156006
    6. ',' → logprob: -3.590341091156006
    7. 'for' → logprob: -3.715341091156006
    8. 'row' → logprob: -4.340341091156006
    9. ' row' → logprob: -4.590341091156006
    10. 'while' → logprob: -4.715341091156006

Token 285: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6975253224372864
    2. ' for' → logprob: -0.9475253224372864
    3. 'for' → logprob: -3.5725252628326416
    4. ',' → logprob: -3.6975252628326416
    5. '
' → logprob: -4.447525501251221
    6. ' while' → logprob: -4.697525501251221
    7. ' in' → logprob: -5.197525501251221
    8. '0' → logprob: -5.322525501251221
    9. '=' → logprob: -5.447525501251221
    10. 'while' → logprob: -5.572525501251221

Token 286: ' col' (ID: 996)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.1650227308273315
    2. 'for' → logprob: -1.1650227308273315
    3. 'while' → logprob: -2.040022850036621
    4. ' for' → logprob: -2.165022850036621
    5. 'height' → logprob: -3.165022850036621
    6. ' while' → logprob: -3.290022850036621
    7. ' row' → logprob: -3.790022850036621
    8. ' height' → logprob: -5.415022850036621
    9. 'col' (adapté à ' col') → logprob: -5.415022850036621
    10. 'h' → logprob: -5.540022850036621

Token 287: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.0027079882565885782
    2. '_' → logprob: -6.1277079582214355
    3. ' =' → logprob: -8.752708435058594
    4. 'height' → logprob: -8.752708435058594
    5. '=' → logprob: -9.627708435058594
    6. '_he' → logprob: -10.002708435058594
    7. '_cells' → logprob: -10.877708435058594
    8. '_max' → logprob: -11.377708435058594
    9. '_idx' → logprob: -11.627708435058594
    10. '_fill' → logprob: -12.002708435058594

Token 288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326499581336975
    2. ' =' → logprob: -1.3132649660110474
    3. '   ' → logprob: -13.563264846801758
    4. ' ' → logprob: -13.688264846801758
    5. ')' → logprob: -15.313264846801758
    6. '=
' → logprob: -15.813264846801758
    7. ',' → logprob: -16.188264846801758
    8. '  ' → logprob: -16.313264846801758
    9. '=max' → logprob: -16.938264846801758
    10. '```' → logprob: -16.938264846801758

Token 289: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10796117782592773
    2. 'next' → logprob: -3.1079611778259277
    3. ' next' → logprob: -3.2329611778259277
    4. 'HEIGHT' → logprob: -4.857961177825928
    5. ' ' → logprob: -4.982961177825928
    6. '-' → logprob: -6.357961177825928
    7. 'len' → logprob: -7.232961177825928
    8. ' HEIGHT' → logprob: -8.232961654663086
    9. 'max' → logprob: -8.357961654663086
    10. ' len' → logprob: -8.732961654663086

Token 290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3335322141647339
    2. 'next' → logprob: -1.4585322141647339
    3. 'HEIGHT' → logprob: -3.3335323333740234
    4. '-' → logprob: -5.083532333374023
    5. 'len' → logprob: -5.208532333374023
    6. ' next' → logprob: -6.083532333374023
    7. 'max' → logprob: -7.208532333374023
    8. ' ' → logprob: -8.458532333374023
    9. '[next' → logprob: -9.833532333374023
    10. '[' → logprob: -10.083532333374023

Token 291: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.584424614906311
    2. '           ' → logprob: -0.959424614906311
    3. '<|end|>' → logprob: -3.3344244956970215
    4. '<|end|>' → logprob: -4.8344244956970215
    5. 'while' → logprob: -4.9594244956970215
    6. ' while' → logprob: -5.3344244956970215
    7. '   ' → logprob: -6.8344244956970215
    8. ' for' → logprob: -7.3344244956970215
    9. '       ' → logprob: -7.3344244956970215
    10. ',' → logprob: -7.7094244956970215

Token 292: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2733778655529022
    2. ' while' → logprob: -1.6483778953552246
    3. 'while' → logprob: -3.5233778953552246
    4. ' for' → logprob: -4.273377895355225
    5. '<|end|>' → logprob: -6.398377895355225
    6. 'for' → logprob: -7.023377895355225
    7. '
' → logprob: -8.273377418518066
    8. '<|end|>' → logprob: -8.648377418518066
    9. '       ' → logprob: -9.398377418518066
    10. '   ' → logprob: -9.773377418518066

Token 293: ' for' (ID: 395)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.220909982919693
    2. 'for' (adapté à ' for') → logprob: -1.9709099531173706
    3. ' while' → logprob: -2.97091007232666
    4. ' for' → logprob: -4.97091007232666
    5. 'row' → logprob: -7.72091007232666
    6. '           ' → logprob: -9.09591007232666
    7. '   ' → logprob: -9.97091007232666
    8. '
' → logprob: -9.97091007232666
    9. '            
' → logprob: -11.84591007232666
    10. 'col' → logprob: -12.09591007232666

Token 294: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.006873791106045246
    2. ' row' → logprob: -5.006873607635498
    3. 'r' → logprob: -8.881874084472656
    4. 'h' → logprob: -11.131874084472656
    5. 'height' → logprob: -13.506874084472656
    6. ' h' → logprob: -13.881874084472656
    7. 'i' → logprob: -14.006874084472656
    8. ' r' → logprob: -14.506874084472656
    9. '	row' → logprob: -14.881874084472656
    10. '   ' → logprob: -15.131874084472656

Token 295: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011728443205356598
    2. 'in' → logprob: -6.75117301940918
    3. ',' → logprob: -14.37617301940918
    4. '=' → logprob: -14.50117301940918
    5. '<|end|>' → logprob: -14.50117301940918
    6. '	in' → logprob: -15.25117301940918
    7. ' =' → logprob: -15.75117301940918
    8. 'from' → logprob: -16.12617301940918
    9. ')' → logprob: -16.50117301940918
    10. 'In' → logprob: -16.81367301940918

Token 296: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029753148555755615
    2. ' range' → logprob: -3.5297532081604004
    3. '(range' → logprob: -14.279752731323242
    4. 'board' → logprob: -14.404752731323242
    5. 're' → logprob: -15.029752731323242
    6. '   ' → logprob: -15.154752731323242
    7. ' ' → logprob: -15.279752731323242
    8. '	range' → logprob: -15.404752731323242
    9. '
' → logprob: -15.654752731323242
    10. 'in' → logprob: -17.279752731323242

Token 297: '(' (ID: 7)
  Prédit: 'HEIGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -0.0009614814771339297
    2. '0' → logprob: -7.0009613037109375
    3. ' HEIGHT' → logprob: -10.125961303710938
    4. '(' → logprob: -12.125961303710938
    5. ' ' → logprob: -13.625961303710938
    6. '   ' → logprob: -13.625961303710938
    7. '(H' → logprob: -14.375961303710938
    8. 'len' → logprob: -15.125961303710938
    9. '    ' → logprob: -15.250961303710938
    10. 'WIDTH' → logprob: -15.375961303710938

Token 298: 'HEIGHT' (ID: 105934)
  Prédit: 'HEIGHT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -0.00015229015843942761
    2. '0' → logprob: -9.000152587890625
    3. ' HEIGHT' → logprob: -10.500152587890625
    4. '   ' → logprob: -14.500152587890625
    5. 'WIDTH' → logprob: -15.125152587890625
    6. '1' → logprob: -15.750152587890625
    7. 'height' → logprob: -16.625152587890625
    8. ' ' → logprob: -16.625152587890625
    9. '    ' → logprob: -16.875152587890625
    10. 'len' → logprob: -17.500152587890625

Token 299: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.9281589388847351
    2. '-' → logprob: -1.0531589984893799
    3. '):' → logprob: -1.6781589984893799
    4. ' -' → logprob: -2.67815899848938
    5. ')' → logprob: -9.4281587600708
    6. ' ):
' → logprob: -9.4281587600708
    7. '   ' → logprob: -9.5531587600708
    8. '):

' → logprob: -9.5531587600708
    9. ' ' → logprob: -9.9281587600708
    10. ' ):' → logprob: -10.1781587600708

Token 300: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1276428997516632
    2. ' if' → logprob: -2.627642869949341
    3. 'if' → logprob: -3.127642869949341
    4. '<|end|>' → logprob: -6.62764310836792
    5. '           ' → logprob: -6.75264310836792
    6. '	           ' → logprob: -7.12764310836792
    7. '		       ' → logprob: -9.127642631530762
    8. '	       ' → logprob: -9.252642631530762
    9. '<|end|>' → logprob: -9.377642631530762
    10. ',' → logprob: -10.252642631530762

Token 301: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10124474763870239
    2. ' if' → logprob: -2.3512446880340576
    3. '               ' → logprob: -7.101244926452637
    4. '                   ' → logprob: -8.851244926452637
    5. '	           ' → logprob: -10.601244926452637
    6. '	if' → logprob: -10.726244926452637
    7. '           ' → logprob: -10.976244926452637
    8. '		           ' → logprob: -13.101244926452637
    9. '   ' → logprob: -13.726244926452637
    10. '<|end|>' → logprob: -14.226244926452637

Token 302: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.47598811984062195
    2. ' board' → logprob: -0.9759881496429443
    3. ' not' → logprob: -6.725987911224365
    4. 'not' → logprob: -7.350987911224365
    5. ' ' → logprob: -10.725988388061523
    6. '	board' → logprob: -10.725988388061523
    7. '   ' → logprob: -11.600988388061523
    8. '(board' → logprob: -11.850988388061523
    9. '.board' → logprob: -13.538488388061523
    10. '  ' → logprob: -14.225988388061523

Token 303: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.0017652629176154733
    2. '[col' → logprob: -6.501765251159668
    3. '[' → logprob: -9.126765251159668
    4. 'row' → logprob: -9.876765251159668
    5. ' [' → logprob: -9.876765251159668
    6. '][' → logprob: -11.001765251159668
    7. '               ' → logprob: -12.001765251159668
    8. ' row' → logprob: -12.251765251159668
    9. '   ' → logprob: -12.751765251159668
    10. '                   ' → logprob: -12.876765251159668

Token 304: '][' (ID: 2696)
  Prédit: '[col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[col' → logprob: -0.005977261811494827
    2. '][' → logprob: -5.130977153778076
    3. 'col' → logprob: -11.255977630615234
    4. ')[' → logprob: -11.630977630615234
    5. '[' → logprob: -12.005977630615234
    6. '[row' → logprob: -12.255977630615234
    7. ' [' → logprob: -12.505977630615234
    8. ' ][' → logprob: -13.255977630615234
    9. '               ' → logprob: -13.630977630615234
    10. '
' → logprob: -13.880977630615234

Token 305: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.000627014203928411
    2. ' col' → logprob: -7.375627040863037
    3. '[col' → logprob: -15.000626564025879
    4. '	col' → logprob: -17.125627517700195
    5. '
' → logprob: -17.375627517700195
    6. '   ' → logprob: -17.750627517700195
    7. ' ' → logprob: -17.875627517700195
    8. '(col' → logprob: -17.875627517700195
    9. '                   ' → logprob: -18.500627517700195
    10. '][' → logprob: -18.625627517700195

Token 306: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21425417065620422
    2. ']==' → logprob: -1.8392541408538818
    3. ']:
' → logprob: -3.839254140853882
    4. ']:' → logprob: -4.589254379272461
    5. ']!=' → logprob: -6.839254379272461
    6. ' ]' → logprob: -7.589254379272461
    7. '==' → logprob: -9.089254379272461
    8. ']=='' → logprob: -9.589254379272461
    9. ' ==' → logprob: -9.714254379272461
    10. '):
' → logprob: -9.839254379272461

Token 307: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.029485240578651428
    2. ' break' → logprob: -3.9044852256774902
    3. 'break' → logprob: -5.15448522567749
    4. '               ' → logprob: -6.65448522567749
    5. ' col' → logprob: -8.029485702514648
    6. '                       ' → logprob: -8.404485702514648
    7. ':
' → logprob: -8.529485702514648
    8. ' ==' → logprob: -8.904485702514648
    9. '                  ' → logprob: -9.154485702514648
    10. ' max' → logprob: -9.154485702514648

Token 308: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' (adapté à ' col') → logprob: -0.0650038793683052
    2. ' col' → logprob: -3.3150038719177246
    3. 'break' → logprob: -3.8150038719177246
    4. 'row' → logprob: -5.690003871917725
    5. ' break' → logprob: -7.190003871917725
    6. '                   ' → logprob: -7.815003871917725
    7. '               ' → logprob: -11.190004348754883
    8. ' row' → logprob: -12.065004348754883
    9. 'if' → logprob: -13.440004348754883
    10. '[col' → logprob: -13.815004348754883

Token 309: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.0007286362233571708
    2. 'height' → logprob: -8.375728607177734
    3. '+' → logprob: -8.500728607177734
    4. 'Height' → logprob: -9.625728607177734
    5. '=' → logprob: -10.250728607177734
    6. '_HEIGHT' → logprob: -10.875728607177734
    7. '   ' → logprob: -10.875728607177734
    8. '#' → logprob: -11.250728607177734
    9. '-height' → logprob: -11.375728607177734
    10. ' height' → logprob: -11.688228607177734

Token 310: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519890367984772
    2. ' =' → logprob: -1.5019890069961548
    3. '+=' → logprob: -10.376989364624023
    4. ' +=' → logprob: -11.251989364624023
    5. '=max' → logprob: -11.626989364624023
    6. '=row' → logprob: -13.251989364624023
    7. ' ' → logprob: -13.751989364624023
    8. '>=' → logprob: -14.501989364624023
    9. 'max' → logprob: -14.751989364624023
    10. '>' → logprob: -14.876989364624023

Token 311: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.014183600433170795
    2. ' row' → logprob: -4.264183521270752
    3. 'max' → logprob: -11.26418399810791
    4. ' max' → logprob: -12.63918399810791
    5. 'HEIGHT' → logprob: -13.38918399810791
    6. ' ' → logprob: -14.26418399810791
    7. '	row' → logprob: -14.51418399810791
    8. '(row' → logprob: -14.88918399810791
    9. '   ' → logprob: -15.13918399810791
    10. 'height' → logprob: -15.38918399810791

Token 312: ' +' (ID: 659)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.051203906536102295
    2. '+' → logprob: -3.551203966140747
    3. ' +' → logprob: -4.551203727722168
    4. '
' → logprob: -5.176203727722168
    5. '               ' → logprob: -5.551203727722168
    6. '           ' → logprob: -8.051203727722168
    7. '		           ' → logprob: -8.676203727722168
    8. '<|end|>' → logprob: -8.801203727722168
    9. 'break' → logprob: -9.176203727722168
    10. '                       ' → logprob: -9.676203727722168

Token 313: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015043864259496331
    2. ' ' → logprob: -6.501504421234131
    3. '0' → logprob: -14.001503944396973
    4. '2' → logprob: -15.314003944396973
    5. '5' → logprob: -15.439003944396973
    6. '
' → logprob: -15.939003944396973
    7. ' ' → logprob: -16.31400489807129
    8. '10' → logprob: -16.75150489807129
    9. '   ' → logprob: -16.81400489807129
    10. '+' → logprob: -17.06400489807129

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.204720582696609e-05
    2. ' ' → logprob: -10.000052452087402
    3. '5' → logprob: -12.250052452087402
    4. '0' → logprob: -13.625052452087402
    5. '
' → logprob: -15.000052452087402
    6. '   ' → logprob: -15.875052452087402
    7. '2' → logprob: -16.875051498413086
    8. '4' → logprob: -17.750051498413086
    9. '100' → logprob: -17.875051498413086
    10. '10' → logprob: -18.250051498413086

Token 315: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019970352295786142
    2. '                   ' → logprob: -6.626996994018555
    3. '           ' → logprob: -8.126996994018555
    4. '<|end|>' → logprob: -8.376996994018555
    5. '
' → logprob: -10.376996994018555
    6. '       ' → logprob: -10.501996994018555
    7. 'else' → logprob: -10.626996994018555
    8. ' else' → logprob: -11.126996994018555
    9. ',' → logprob: -11.626996994018555
    10. '   ' → logprob: -11.626996994018555

Token 316: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10927911102771759
    2. '<|end|>' → logprob: -2.359279155731201
    3. '           ' → logprob: -5.734279155731201
    4. '                   ' → logprob: -6.109279155731201
    5. ' else' → logprob: -6.484279155731201
    6. 'else' → logprob: -7.234279155731201
    7. '       ' → logprob: -7.609279155731201
    8. '
' → logprob: -8.734278678894043
    9. '<|end|>' → logprob: -8.859278678894043
    10. '                ' → logprob: -9.109278678894043

Token 317: ' block' (ID: 4355)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46334826946258545
    2. '                   ' → logprob: -1.3383482694625854
    3. '               ' → logprob: -2.713348388671875
    4. '       ' → logprob: -3.713348388671875
    5. ' break' → logprob: -4.463348388671875
    6. '
' → logprob: -5.963348388671875
    7. 'break' → logprob: -6.088348388671875
    8. '<|end|>' → logprob: -7.713348388671875
    9. '   ' → logprob: -7.963348388671875
    10. '    
' → logprob: -9.338348388671875

Token 318: ' occupies' (ID: 134274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 319: ' this' (ID: 495)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.05678211897611618
    2. ' row' → logprob: -4.181782245635986
    3. 'the' → logprob: -4.431782245635986
    4. ' the' → logprob: -4.806782245635986
    5. 'col' → logprob: -5.431782245635986
    6. '[row' → logprob: -5.431782245635986
    7. ' col' → logprob: -5.681782245635986
    8. '
' → logprob: -6.681782245635986
    9. ' a' → logprob: -6.681782245635986
    10. '(row' → logprob: -6.681782245635986

Token 320: ' or' (ID: 503)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.43597134947776794
    2. ' row' → logprob: -1.5609713792800903
    3. ' cell' → logprob: -2.810971260070801
    4. 'cell' → logprob: -3.185971260070801
    5. '<|end|>' → logprob: -4.560971260070801
    6. 'position' → logprob: -4.685971260070801
    7. '
' → logprob: -5.435971260070801
    8. ' position' → logprob: -5.560971260070801
    9. ' space' → logprob: -5.685971260070801
    10. 'space' → logprob: -5.685971260070801

Token 321: ' below' (ID: 4895)
  Prédit: ' higher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' higher' → logprob: -1.0043566226959229
    2. ' the' → logprob: -1.2543566226959229
    3. 'higher' → logprob: -2.504356622695923
    4. ' above' → logprob: -3.004356622695923
    5. 'row' → logprob: -3.504356622695923
    6. 'the' → logprob: -3.629356622695923
    7. ' one' → logprob: -3.754356622695923
    8. ' row' → logprob: -3.879356622695923
    9. 'above' → logprob: -3.879356622695923
    10. '<|end|>' → logprob: -4.254356384277344

Token 322: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07416372001171112
    2. '                   ' → logprob: -2.8241636753082275
    3. '           ' → logprob: -4.574163913726807
    4. '<|end|>' → logprob: -7.074163913726807
    5. '       ' → logprob: -7.574163913726807
    6. '   ' → logprob: -9.074163436889648
    7. '                       ' → logprob: -9.449163436889648
    8. ',' → logprob: -9.574163436889648
    9. '
' → logprob: -9.949163436889648
    10. ' else' → logprob: -10.074163436889648

Token 323: ' so' (ID: 813)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18631981313228607
    2. '                   ' → logprob: -2.1863198280334473
    3. '           ' → logprob: -3.0613198280334473
    4. '<|end|>' → logprob: -5.686319828033447
    5. ' break' → logprob: -5.936319828033447
    6. '       ' → logprob: -6.436319828033447
    7. ' else' → logprob: -7.061319828033447
    8. '
' → logprob: -8.186319351196289
    9. '<|end|>' → logprob: -8.311319351196289
    10. '                    
' → logprob: -8.436319351196289

Token 324: ' candidate' (ID: 17098)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.9334391355514526
    2. ' col' → logprob: -1.1834391355514526
    3. ' break' → logprob: -2.183439254760742
    4. 'break' → logprob: -2.558439254760742
    5. 'max' → logprob: -2.683439254760742
    6. ' max' → logprob: -3.933439254760742
    7. '                   ' → logprob: -4.683439254760742
    8. 'continue' → logprob: -4.808439254760742
    9. ' continue' → logprob: -5.558439254760742
    10. ' breaks' → logprob: -9.058439254760742

Token 325: ' height' (ID: 4679)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: ' is' (ID: 382)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3710716962814331
    2. '           ' → logprob: -1.371071696281433
    3. '                   ' → logprob: -2.9960718154907227
    4. '<|end|>' → logprob: -5.746071815490723
    5. '       ' → logprob: -6.496071815490723
    6. '<|end|>' → logprob: -7.371071815490723
    7. ',' → logprob: -8.621071815490723
    8. '   ' → logprob: -9.371071815490723
    9. ' break' → logprob: -9.371071815490723
    10. '                       ' → logprob: -9.496071815490723

Token 327: ' next' (ID: 2613)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.06359818577766418
    2. ' row' → logprob: -2.813598155975342
    3. 'board' → logprob: -6.563598155975342
    4. 'col' → logprob: -9.8135986328125
    5. 'max' → logprob: -9.9385986328125
    6. ' board' → logprob: -10.3135986328125
    7. ' max' → logprob: -10.4385986328125
    8. ' col' → logprob: -10.8135986328125
    9. '                   ' → logprob: -11.4385986328125
    10. '               ' → logprob: -12.1885986328125

Token 328: ' row' (ID: 5225)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 329: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3815898299217224
    2. '           ' → logprob: -1.3815898895263672
    3. '                   ' → logprob: -2.756589889526367
    4. '       ' → logprob: -6.756589889526367
    5. '<|end|>' → logprob: -7.131589889526367
    6. ',' → logprob: -9.006589889526367
    7. '<|end|>' → logprob: -9.006589889526367
    8. '   ' → logprob: -9.631589889526367
    9. '                       ' → logprob: -10.006589889526367
    10. '
' → logprob: -10.131589889526367

Token 330: '           ' (ID: 352)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.33559465408325195
    2. '           ' → logprob: -1.835594654083252
    3. '               ' → logprob: -2.085594654083252
    4. '
' → logprob: -7.460594654083252
    5. '       ' → logprob: -7.585594654083252
    6. ' break' → logprob: -9.085594177246094
    7. '   ' → logprob: -10.710594177246094
    8. ',' → logprob: -10.710594177246094
    9. 'break' → logprob: -11.085594177246094
    10. '                       ' → logprob: -11.335594177246094

Token 331: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002949770539999008
    2. ' if' → logprob: -6.5029497146606445
    3. '
' → logprob: -7.2529497146606445
    4. '       ' → logprob: -8.127949714660645
    5. '<|end|>' → logprob: -8.752949714660645
    6. ',' → logprob: -10.002949714660645
    7. ' max' → logprob: -10.127949714660645
    8. 'if' (adapté à ' if') → logprob: -10.252949714660645
    9. '<|end|>' → logprob: -10.252949714660645
    10. '               ' → logprob: -10.502949714660645

Token 332: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.3487561345100403
    2. 'col' → logprob: -1.2237560749053955
    3. ' max' → logprob: -8.598755836486816
    4. 'max' → logprob: -9.098755836486816
    5. '	col' → logprob: -12.098755836486816
    6. '   ' → logprob: -12.723755836486816
    7. ' ' → logprob: -12.848755836486816
    8. '(col' → logprob: -13.723755836486816
    9. ' ' → logprob: -14.411255836486816
    10. '    ' → logprob: -14.911255836486816

Token 333: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.0014382082736119628
    2. '[col' → logprob: -8.50143814086914
    3. '   ' → logprob: -9.00143814086914
    4. 'col' → logprob: -9.00143814086914
    5. '           ' → logprob: -9.12643814086914
    6. '[' → logprob: -9.25143814086914
    7. ' ' → logprob: -9.25143814086914
    8. ' col' → logprob: -9.50143814086914
    9. '_he' → logprob: -9.50143814086914
    10. 'height' → logprob: -9.62643814086914

Token 334: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.14268599450588226
    2. ' >' → logprob: -2.017685890197754
    3. '           ' → logprob: -12.517685890197754
    4. ' ' → logprob: -13.017685890197754
    5. '   ' → logprob: -13.642685890197754
    6. '       ' → logprob: -14.017685890197754
    7. '>
' → logprob: -14.642685890197754
    8. '>

' → logprob: -14.892685890197754
    9. '               ' → logprob: -15.392685890197754
    10. 'if' → logprob: -15.517685890197754

Token 335: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4287232756614685
    2. ' max' → logprob: -1.0537233352661133
    3. '           ' → logprob: -11.803723335266113
    4. '	max' → logprob: -12.303723335266113
    5. '
' → logprob: -13.678723335266113
    6. '(max' → logprob: -13.803723335266113
    7. '   ' → logprob: -13.803723335266113
    8. ' ' → logprob: -13.928723335266113
    9. ' col' → logprob: -13.928723335266113
    10. '=max' → logprob: -14.053723335266113

Token 336: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -8.65707261255011e-06
    2. 'height' → logprob: -12.000008583068848
    3. '_max' → logprob: -14.250008583068848
    4. 'max' → logprob: -14.625008583068848
    5. '_' → logprob: -14.875008583068848
    6. '_depth' → logprob: -15.500008583068848
    7. ' height' → logprob: -16.250009536743164
    8. 'Height' → logprob: -16.250009536743164
    9. '   ' → logprob: -16.375009536743164
    10. '-height' → logprob: -16.500009536743164

Token 337: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.31877925992012024
    2. '               ' → logprob: -1.4437792301177979
    3. ':' → logprob: -4.443779468536377
    4. 'max' → logprob: -4.443779468536377
    5. ' max' → logprob: -5.568779468536377
    6. '           ' → logprob: -5.568779468536377
    7. '
' → logprob: -6.068779468536377
    8. '<|end|>' → logprob: -7.318779468536377
    9. '=max' → logprob: -7.693779468536377
    10. '):
' → logprob: -7.943779468536377

Token 338: '               ' (ID: 506)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.15378697216510773
    2. '               ' → logprob: -2.1537868976593018
    3. 'max' → logprob: -3.9037868976593018
    4. ' col' → logprob: -5.153787136077881
    5. '           ' → logprob: -8.778786659240723
    6. '```' → logprob: -9.403786659240723
    7. ' =' → logprob: -10.153786659240723
    8. '                   ' → logprob: -10.153786659240723
    9. '=max' → logprob: -10.403786659240723
    10. 'col' → logprob: -10.403786659240723

Token 339: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.07252135872840881
    2. ' col' → logprob: -2.947521448135376
    3. 'max' (adapté à ' max') → logprob: -4.072521209716797
    4. 'col' → logprob: -7.822521209716797
    5. '                   ' → logprob: -10.447521209716797
    6. '               ' → logprob: -10.947521209716797
    7. '                ' → logprob: -13.822521209716797
    8. ' =' → logprob: -15.072521209716797
    9. '=max' → logprob: -15.197521209716797
    10. '_max' → logprob: -15.697521209716797

Token 340: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -5.512236498361744e-07
    2. 'height' → logprob: -14.875000953674316
    3. '_' → logprob: -16.875
    4. '_he' → logprob: -17.0
    5. '_max' → logprob: -17.5
    6. ' _' → logprob: -18.0
    7. '_depth' → logprob: -18.125
    8. '_width' → logprob: -18.375
    9. '_HEIGHT' → logprob: -18.625
    10. 'Height' → logprob: -18.625

Token 341: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687121868133545
    2. ' =' → logprob: -1.1368712186813354
    3. '=max' → logprob: -15.886871337890625
    4. ' col' → logprob: -17.761871337890625
    5. '＝' → logprob: -18.386871337890625
    6. '=
' → logprob: -18.636871337890625
    7. 'col' → logprob: -19.011871337890625
    8. '           ' → logprob: -19.261871337890625
    9. ' ' → logprob: -19.511871337890625
    10. '=cut' → logprob: -19.511871337890625

Token 342: ' col' (ID: 996)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.023245595395565033
    2. ' col' → logprob: -3.7732455730438232
    3. '	col' → logprob: -16.273244857788086
    4. '_col' → logprob: -17.773244857788086
    5. '[col' → logprob: -17.773244857788086
    6. '(col' → logprob: -17.898244857788086
    7. '   ' → logprob: -18.898244857788086
    8. ' ' → logprob: -19.148244857788086
    9. '.col' → logprob: -19.398244857788086
    10. 'Col' → logprob: -19.523244857788086

Token 343: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -1.9623810658231378e-05
    2. 'height' → logprob: -11.375020027160645
    3. 'ight' → logprob: -12.875020027160645
    4. '_width' → logprob: -13.625020027160645
    5. 't' → logprob: -13.875020027160645
    6. 'ht' → logprob: -14.750020027160645
    7. 'Height' → logprob: -14.750020027160645
    8. '_HEIGHT' → logprob: -14.750020027160645
    9. 'ght' → logprob: -15.000020027160645
    10. 'col' → logprob: -15.000020027160645

Token 344: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20679441094398499
    2. '<|end|>' → logprob: -2.206794500350952
    3. '       ' → logprob: -2.831794500350952
    4. '<|end|>' → logprob: -4.956794261932373
    5. '        
' → logprob: -5.956794261932373
    6. '  
' → logprob: -5.956794261932373
    7. '   ' → logprob: -6.456794261932373
    8. '    
' → logprob: -6.581794261932373
    9. ' return' → logprob: -7.456794261932373
    10. '
' → logprob: -7.831794261932373

Token 345: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09996367245912552
    2. ' 
' → logprob: -3.224963665008545
    3. '   ' → logprob: -3.599963665008545
    4. '       ' → logprob: -4.974963665008545
    5. '  
' → logprob: -5.224963665008545
    6. '    
' → logprob: -5.349963665008545
    7. ' return' → logprob: -5.974963665008545
    8. '\n' → logprob: -6.099963665008545
    9. '<|end|>' → logprob: -6.224963665008545
    10. '        
' → logprob: -6.974963665008545

Token 346: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1697445958852768
    2. ' for' → logprob: -2.6697444915771484
    3. 'for' → logprob: -3.5447444915771484
    4. 'row' → logprob: -3.6697444915771484
    5. ' row' → logprob: -3.9197444915771484
    6. '#' (adapté à ' #') → logprob: -6.044744491577148
    7. '
' → logprob: -6.794744491577148
    8. ' place' → logprob: -7.169744491577148
    9. ' landing' → logprob: -7.169744491577148
    10. '    
' → logprob: -7.294744491577148

Token 347: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1869812309741974
    2. 'row' → logprob: -2.436981201171875
    3. 'place' → logprob: -3.436981201171875
    4. 'landing' → logprob: -4.311981201171875
    5. '   ' → logprob: -4.436981201171875
    6. '#' → logprob: -4.811981201171875
    7. 'start' → logprob: -5.686981201171875
    8. 'placement' → logprob: -5.936981201171875
    9. ' for' → logprob: -6.186981201171875
    10. 'while' → logprob: -6.186981201171875

Token 348: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -0.0001549089647596702
    2. 'height' → logprob: -9.500154495239258
    3. '   ' → logprob: -11.250154495239258
    4. '_' → logprob: -11.500154495239258
    5. '_drop' → logprob: -11.500154495239258
    6. '_depth' → logprob: -11.875154495239258
    7. 'Height' → logprob: -11.875154495239258
    8. ' height' → logprob: -12.125154495239258
    9. '#' → logprob: -12.500154495239258
    10. '_row' → logprob: -12.750154495239258

Token 349: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ' where' (ID: 1919)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.16769783198833466
    2. 'the' → logprob: -2.0426979064941406
    3. ' where' → logprob: -4.042697906494141
    4. ' max' → logprob: -5.417697906494141
    5. 'max' → logprob: -6.292697906494141
    6. ' next' → logprob: -7.917697906494141
    7. 'where' → logprob: -8.54269790649414
    8. ' what' → logprob: -9.16769790649414
    9. '<|end|>' → logprob: -9.79269790649414
    10. ' ' → logprob: -10.54269790649414

Token 351: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.06787490099668503
    2. 'the' → logprob: -3.6928749084472656
    3. ' we' → logprob: -3.6928749084472656
    4. ' to' → logprob: -4.692874908447266
    5. ' block' → logprob: -5.567874908447266
    6. 'we' → logprob: -7.067874908447266
    7. '   ' → logprob: -7.567874908447266
    8. '       ' → logprob: -8.067874908447266
    9. 'block' → logprob: -8.192874908447266
    10. ' next' → logprob: -8.442874908447266

Token 352: ' bottom' (ID: 8725)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.12937410175800323
    2. ' block' → logprob: -2.1293740272521973
    3. 'horizontal' → logprob: -7.129374027252197
    4. 'new' → logprob: -8.129374504089355
    5. 'next' → logprob: -8.129374504089355
    6. 'board' → logprob: -8.379374504089355
    7. ' next' → logprob: -8.379374504089355
    8. 'row' → logprob: -9.254374504089355
    9. ' new' → logprob: -9.504374504089355
    10. ' horizontal' → logprob: -9.629374504089355

Token 353: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.38240939378738403
    2. ' row' → logprob: -2.3824093341827393
    3. 'of' → logprob: -2.5074093341827393
    4. ' block' → logprob: -2.8824093341827393
    5. '+' → logprob: -3.8824093341827393
    6. '   ' → logprob: -4.007409572601318
    7. 'row' → logprob: -4.257409572601318
    8. ' place' → logprob: -4.757409572601318
    9. ' placement' → logprob: -5.507409572601318
    10. '       ' → logprob: -5.882409572601318

Token 354: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.47416219115257263
    2. ' the' → logprob: -0.974162220954895
    3. 'block' → logprob: -9.974162101745605
    4. ' block' → logprob: -10.474162101745605
    5. '   ' → logprob: -12.474162101745605
    6. 'horizontal' → logprob: -12.849162101745605
    7. 'this' → logprob: -13.599162101745605
    8. ' this' → logprob: -14.474162101745605
    9. '[' → logprob: -14.974162101745605
    10. '#' → logprob: -15.349162101745605

Token 355: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.10121630132198334
    2. 'block' → logprob: -2.3512163162231445
    3. 'horizontal' → logprob: -8.476216316223145
    4. ' horizontal' → logprob: -8.601216316223145
    5. ' new' → logprob: -8.976216316223145
    6. ' dropped' → logprob: -9.101216316223145
    7. 'new' → logprob: -9.226216316223145
    8. ' current' → logprob: -9.476216316223145
    9. '   ' → logprob: -9.726216316223145
    10. 'current' → logprob: -10.101216316223145

Token 356: ' will' (ID: 738)
  Prédit: ' will'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' will' → logprob: -0.2529500722885132
    2. ' is' → logprob: -2.7529501914978027
    3. ' should' → logprob: -3.1279501914978027
    4. '       ' → logprob: -3.1279501914978027
    5. '   ' → logprob: -3.5029501914978027
    6. 'will' → logprob: -4.627950191497803
    7. ' to' → logprob: -5.127950191497803
    8. ' can' → logprob: -5.127950191497803
    9. ' sits' → logprob: -5.752950191497803
    10. 'should' → logprob: -5.752950191497803

Token 357: ' rest' (ID: 2867)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.8118104338645935
    2. ' place' → logprob: -0.8118104338645935
    3. ' =' → logprob: -3.4368104934692383
    4. 'place' → logprob: -4.061810493469238
    5. '   ' → logprob: -4.186810493469238
    6. ' block' → logprob: -4.436810493469238
    7. '=' → logprob: -5.686810493469238
    8. ' land' → logprob: -5.936810493469238
    9. 'row' → logprob: -5.936810493469238
    10. ' row' → logprob: -5.936810493469238

Token 358: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23687957227230072
    2. '
' → logprob: -1.611879587173462
    3. '    
' → logprob: -5.361879348754883
    4. '<|end|>' → logprob: -5.361879348754883
    5. '       ' → logprob: -7.611879348754883
    6. '<|end|>' → logprob: -8.111879348754883
    7. '        
' → logprob: -8.236879348754883
    8. ' for' → logprob: -8.736879348754883
    9. '    ' → logprob: -8.736879348754883
    10. '
' → logprob: -9.111879348754883

Token 359: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40942901372909546
    2. '
' → logprob: -1.4094290733337402
    3. '<|end|>' → logprob: -3.4094290733337402
    4. '    
' → logprob: -4.15942907333374
    5. '  
' → logprob: -4.53442907333374
    6. ' for' → logprob: -4.53442907333374
    7. '       ' → logprob: -4.65942907333374
    8. ' 
' → logprob: -5.78442907333374
    9. '        
' → logprob: -6.03442907333374
    10. '\n' → logprob: -6.53442907333374

Token 360: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34483441710472107
    2. ' for' → logprob: -1.7198344469070435
    3. 'for' → logprob: -2.219834327697754
    4. ' row' → logprob: -6.219834327697754
    5. 'row' → logprob: -6.469834327697754
    6. 'while' → logprob: -9.094834327697754
    7. ' while' → logprob: -9.344834327697754
    8. '
' → logprob: -10.219834327697754
    9. '```' → logprob: -10.469834327697754
    10. '    
' → logprob: -10.719834327697754

Token 361: ' Place' (ID: 16303)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11558130383491516
    2. '   ' → logprob: -2.3655812740325928
    3. ' for' → logprob: -4.865581512451172
    4. 'row' → logprob: -4.990581512451172
    5. 'place' → logprob: -7.990581512451172
    6. 'start' → logprob: -9.115581512451172
    7. 'while' → logprob: -9.740581512451172
    8. 'top' → logprob: -10.240581512451172
    9. ' row' → logprob: -10.240581512451172
    10. 'bottom' → logprob: -10.740581512451172

Token 362: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.36035099625587463
    2. 'for' → logprob: -1.2353509664535522
    3. ' the' → logprob: -5.110351085662842
    4. ' block' → logprob: -6.610351085662842
    5. '   ' → logprob: -6.735351085662842
    6. 'block' → logprob: -6.860351085662842
    7. 'row' → logprob: -7.360351085662842
    8. ' row' → logprob: -7.735351085662842
    9. 'the' → logprob: -7.985351085662842
    10. ' at' → logprob: -8.360350608825684

Token 363: ' block' (ID: 4355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26885420083999634
    2. ' for' → logprob: -1.5188541412353516
    3. 'block' → logprob: -4.268854141235352
    4. ' block' → logprob: -6.143854141235352
    5. 'row' → logprob: -7.768854141235352
    6. ' row' → logprob: -9.143854141235352
    7. '   ' → logprob: -10.768854141235352
    8. 'next' → logprob: -11.018854141235352
    9. ' next' → logprob: -11.143854141235352
    10. 'rows' → logprob: -11.893854141235352

Token 364: ' at' (ID: 540)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5459974408149719
    2. '   ' → logprob: -1.0459973812103271
    3. '       ' → logprob: -2.920997381210327
    4. ' at' → logprob: -4.920997619628906
    5. 'for' → logprob: -5.170997619628906
    6. '<|end|>' → logprob: -6.670997619628906
    7. '	for' → logprob: -8.795997619628906
    8. ' on' → logprob: -8.920997619628906
    9. '<|end|>' → logprob: -9.045997619628906
    10. '
' → logprob: -9.045997619628906

Token 365: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1651679426431656
    2. ' max' → logprob: -1.9151679277420044
    3. 'row' → logprob: -6.040167808532715
    4. ' row' → logprob: -7.290167808532715
    5. 'for' → logprob: -7.415167808532715
    6. ' for' → logprob: -7.915167808532715
    7. 'board' → logprob: -8.040167808532715
    8. 'height' → logprob: -8.915167808532715
    9. 'HEIGHT' → logprob: -9.040167808532715
    10. ' HEIGHT' → logprob: -9.415167808532715

Token 366: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -1.6286106983898208e-05
    2. '_he' → logprob: -11.875016212463379
    3. 'height' → logprob: -12.375016212463379
    4. ' _' → logprob: -13.000016212463379
    5. '   ' → logprob: -14.250016212463379
    6. '_' → logprob: -14.500016212463379
    7. '```' → logprob: -14.750016212463379
    8. '_depth' → logprob: -15.000016212463379
    9. '_HEIGHT' → logprob: -15.750016212463379
    10. '       ' → logprob: -16.625017166137695

Token 367: ' row' (ID: 5225)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.44888836145401
    2. '   ' → logprob: -1.3238883018493652
    3. '       ' → logprob: -2.6988883018493652
    4. 'for' → logprob: -3.6988883018493652
    5. '
' → logprob: -6.948888301849365
    6. ',' → logprob: -7.073888301849365
    7. '<|end|>' → logprob: -7.198888301849365
    8. '	for' → logprob: -8.448888778686523
    9. '        
' → logprob: -8.948888778686523
    10. '    
' → logprob: -9.198888778686523

Token 368: ' over' (ID: 1072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27262207865715027
    2. ' for' → logprob: -1.5226221084594727
    3. '       ' → logprob: -4.397622108459473
    4. '<|end|>' → logprob: -5.522622108459473
    5. 'for' → logprob: -6.147622108459473
    6. ',' → logprob: -6.647622108459473
    7. '<|end|>' → logprob: -8.397622108459473
    8. '
' → logprob: -9.147622108459473
    9. '	for' → logprob: -9.397622108459473
    10. '    
' → logprob: -10.022622108459473

Token 369: ' columns' (ID: 15697)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47845014929771423
    2. ' range' → logprob: -1.9784501791000366
    3. 'for' → logprob: -2.353450059890747
    4. ' for' → logprob: -2.853450059890747
    5. '   ' → logprob: -3.103450059890747
    6. ' the' → logprob: -3.978450059890747
    7. '       ' → logprob: -4.103450298309326
    8. 'the' → logprob: -5.728450298309326
    9. 'board' → logprob: -6.353450298309326
    10. 'max' → logprob: -7.103450298309326

Token 370: ' q' (ID: 2335)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0986607074737549
    2. ' for' → logprob: -1.2236607074737549
    3. '       ' → logprob: -1.3486607074737549
    4. 'range' → logprob: -2.723660707473755
    5. '   ' → logprob: -4.098660469055176
    6. ' range' → logprob: -4.348660469055176
    7. '[' → logprob: -4.973660469055176
    8. '[max' → logprob: -5.348660469055176
    9. ',' → logprob: -6.223660469055176
    10. 'max' → logprob: -7.098660469055176

Token 371: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19930848479270935
    2. ':' → logprob: -3.074308395385742
    3. ' to' → logprob: -3.449308395385742
    4. '[q' → logprob: -4.074308395385742
    5. '[' → logprob: -4.699308395385742
    6. '       ' → logprob: -4.949308395385742
    7. '[max' → logprob: -5.074308395385742
    8. '   ' → logprob: -5.074308395385742
    9. ' ,' → logprob: -5.074308395385742
    10. ' ' → logprob: -5.074308395385742

Token 372: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06419658660888672
    2. ' q' → logprob: -3.1891965866088867
    3. 'range' → logprob: -4.564196586608887
    4. 'col' → logprob: -5.064196586608887
    5. ' col' → logprob: -6.064196586608887
    6. ' range' → logprob: -6.564196586608887
    7. '(q' → logprob: -9.064196586608887
    8. '...' → logprob: -9.564196586608887
    9. ' (' → logprob: -9.689196586608887
    10. '[q' → logprob: -10.314196586608887

Token 373: '+p' (ID: 150971)
  Prédit: '+p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+p' → logprob: -0.3064717948436737
    2. '+' → logprob: -1.806471824645996
    3. ' +' → logprob: -2.306471824645996
    4. 'p' → logprob: -10.056471824645996
    5. ' ' → logprob: -11.056471824645996
    6. '   ' → logprob: -11.431471824645996
    7. '```' → logprob: -11.931471824645996
    8. '+n' → logprob: -12.181471824645996
    9. '+(' → logprob: -12.431471824645996
    10. ' ' → logprob: -12.431471824645996

Token 374: '-' (ID: 12)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.802804172039032
    2. 'for' → logprob: -1.4278042316436768
    3. '       ' → logprob: -1.8028042316436768
    4. '   ' → logprob: -2.0528042316436768
    5. '
' → logprob: -5.177803993225098
    6. ',' → logprob: -5.552803993225098
    7. '    ' → logprob: -6.552803993225098
    8. ' 
' → logprob: -6.552803993225098
    9. '        
' → logprob: -6.802803993225098
    10. '  
' → logprob: -7.427803993225098

Token 375: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.182190554682165e-05
    2. ' ' → logprob: -9.750061988830566
    3. '+' → logprob: -13.375061988830566
    4. '   ' → logprob: -14.500061988830566
    5. '```' → logprob: -14.750061988830566
    6. 'p' → logprob: -15.125061988830566
    7. '-' → logprob: -15.250061988830566
    8. 'q' → logprob: -16.00006103515625
    9. '
' → logprob: -16.75006103515625
    10. '  ' → logprob: -17.43756103515625

Token 376: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03671339154243469
    2. '
' → logprob: -3.9117133617401123
    3. ' for' → logprob: -4.286713600158691
    4. '    
' → logprob: -7.161713600158691
    5. 'for' → logprob: -7.536713600158691
    6. '  
' → logprob: -8.161713600158691
    7. '\n' → logprob: -8.786713600158691
    8. '<|end|>' → logprob: -9.036713600158691
    9. '       ' → logprob: -9.161713600158691
    10. '```' → logprob: -9.411713600158691

Token 377: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021961020305752754
    2. ' for' → logprob: -4.521961212158203
    3. '
' → logprob: -4.771961212158203
    4. 'for' → logprob: -6.771961212158203
    5. '    
' → logprob: -7.396961212158203
    6. '  
' → logprob: -8.396961212158203
    7. ' 
' → logprob: -9.396961212158203
    8. '\n' → logprob: -9.521961212158203
    9. '```' → logprob: -9.521961212158203
    10. '	for' → logprob: -9.896961212158203

Token 378: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.269374817609787
    2. ' for' → logprob: -2.0193748474121094
    3. '   ' → logprob: -2.2693748474121094
    4. '	for' → logprob: -11.26937484741211
    5. '       ' → logprob: -11.76937484741211
    6. '```' → logprob: -12.39437484741211
    7. '
' → logprob: -13.51937484741211
    8. ' ' → logprob: -14.39437484741211
    9. '    
' → logprob: -14.51937484741211
    10. '  ' → logprob: -15.01937484741211

Token 379: ' col' (ID: 996)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.4766862094402313
    2. 'col' → logprob: -1.2266862392425537
    3. ' row' → logprob: -2.9766862392425537
    4. ' col' → logprob: -4.226686000823975
    5. 'offset' → logprob: -4.726686000823975
    6. 'i' → logprob: -4.976686000823975
    7. ' offset' → logprob: -6.101686000823975
    8. 'r' → logprob: -6.726686000823975
    9. ' i' → logprob: -7.351686000823975
    10. 'h' → logprob: -8.976686477661133

Token 380: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005942898336797953
    2. 'in' → logprob: -5.1309428215026855
    3. ' ' → logprob: -11.505943298339844
    4. ',' → logprob: -14.005943298339844
    5. ')' → logprob: -14.380943298339844
    6. '=' → logprob: -14.505943298339844
    7. '<|end|>' → logprob: -15.318443298339844
    8. 'In' → logprob: -15.443443298339844
    9. 'import' → logprob: -15.443443298339844
    10. '[' → logprob: -15.568443298339844

Token 381: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804149478673935
    2. ' range' → logprob: -3.288041591644287
    3. '(range' → logprob: -16.913042068481445
    4. ' ' → logprob: -18.913042068481445
    5. ' q' → logprob: -19.788042068481445
    6. '	range' → logprob: -20.038042068481445
    7. 'q' → logprob: -21.038042068481445
    8. '   ' → logprob: -21.163042068481445
    9. '[q' → logprob: -22.163042068481445
    10. 'Range' → logprob: -22.788042068481445

Token 382: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -2.9040898880339228e-05
    2. '(' → logprob: -10.500028610229492
    3. ' (' → logprob: -14.250028610229492
    4. 'q' → logprob: -14.250028610229492
    5. '(max' → logprob: -17.375028610229492
    6. ' q' → logprob: -18.125028610229492
    7. '[q' → logprob: -18.500028610229492
    8. '(query' → logprob: -19.125028610229492
    9. '(col' → logprob: -19.875028610229492
    10. '(
' → logprob: -20.000028610229492

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001875563059002161
    2. ' ,' → logprob: -6.376875400543213
    3. ',q' → logprob: -8.876875877380371
    4. ',
' → logprob: -10.876875877380371
    5. '+' → logprob: -12.001875877380371
    6. ',p' → logprob: -13.001875877380371
    7. ',col' → logprob: -13.126875877380371
    8. ' +' → logprob: -13.376875877380371
    9. ')' → logprob: -14.376875877380371
    10. ' col' → logprob: -14.626875877380371

Token 384: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0031777136027812958
    2. ' q' → logprob: -5.753177642822266
    3. '	q' → logprob: -17.753177642822266
    4. '   ' → logprob: -18.003177642822266
    5. ' ' → logprob: -18.753177642822266
    6. '(q' → logprob: -20.128177642822266
    7. 'col' → logprob: -20.503177642822266
    8. '[q' → logprob: -20.503177642822266
    9. ')' → logprob: -20.628177642822266
    10. '$q' → logprob: -20.753177642822266

Token 385: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3498360216617584
    2. '+' → logprob: -1.224835991859436
    3. '+p' → logprob: -6.5998358726501465
    4. ' ' → logprob: -11.224836349487305
    5. ',' → logprob: -11.349836349487305
    6. ' ' → logprob: -13.474836349487305
    7. 'p' → logprob: -14.599836349487305
    8. ' ,' → logprob: -14.849836349487305
    9. '   ' → logprob: -14.849836349487305
    10. ' plus' → logprob: -15.037336349487305

Token 386: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005933297798037529
    2. ' p' → logprob: -5.1309332847595215
    3. '1' → logprob: -12.38093376159668
    4. ' ' → logprob: -15.13093376159668
    5. '   ' → logprob: -15.75593376159668
    6. '<p' → logprob: -17.13093376159668
    7. '	p' → logprob: -17.50593376159668
    8. '_p' → logprob: -18.00593376159668
    9. '```' → logprob: -18.00593376159668
    10. ')p' → logprob: -18.06843376159668

Token 387: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4747622311115265
    2. '):' → logprob: -0.9747622013092041
    3. '):
' → logprob: -7.599762439727783
    4. ' ):' → logprob: -9.849761962890625
    5. ' ):
' → logprob: -9.974761962890625
    6. ':' → logprob: -10.099761962890625
    7. '   ' → logprob: -11.474761962890625
    8. ')' → logprob: -11.599761962890625
    9. '):

' → logprob: -11.849761962890625
    10. ',' → logprob: -12.224761962890625

Token 388: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005548207554966211
    2. '           ' → logprob: -7.875555038452148
    3. ' board' → logprob: -10.500555038452148
    4. '<|end|>' → logprob: -10.500555038452148
    5. '   ' → logprob: -10.625555038452148
    6. '[' → logprob: -10.875555038452148
    7. '```' → logprob: -10.875555038452148
    8. '        
' → logprob: -11.375555038452148
    9. ' for' → logprob: -11.625555038452148
    10. ',' → logprob: -12.375555038452148

Token 389: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.06131111830472946
    2. '       ' → logprob: -3.4363110065460205
    3. ' board' → logprob: -3.6863110065460205
    4. '           ' → logprob: -6.6863112449646
    5. '	board' → logprob: -7.3113112449646
    6. '   ' → logprob: -8.686310768127441
    7. '               ' → logprob: -9.311310768127441
    8. 'for' → logprob: -10.936310768127441
    9. ' for' → logprob: -11.936310768127441
    10. '(board' → logprob: -12.186310768127441

Token 390: '[max' (ID: 84690)
  Prédit: '[max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[max' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -12.125006675720215
    3. 'max' → logprob: -14.125006675720215
    4. ' [' → logprob: -14.750006675720215
    5. '[MAX' → logprob: -15.000006675720215
    6. '[col' → logprob: -16.62500762939453
    7. '```' → logprob: -16.75000762939453
    8. '[min' → logprob: -17.12500762939453
    9. '[row' → logprob: -17.62500762939453
    10. '][' → logprob: -17.87500762939453

Token 391: '_height' (ID: 21576)
  Prédit: '_height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_height' → logprob: -2.0339031834737398e-05
    2. 'height' → logprob: -10.875020027160645
    3. '[' → logprob: -14.375020027160645
    4. '_he' → logprob: -15.000020027160645
    5. '_HEIGHT' → logprob: -15.875020027160645
    6. '][' → logprob: -16.12502098083496
    7. '[row' → logprob: -17.12502098083496
    8. 'Height' → logprob: -17.37502098083496
    9. 'HEIGHT' → logprob: -17.37502098083496
    10. '\' → logprob: -17.50002098083496

Token 392: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0068682292476296425
    2. '[col' → logprob: -5.006868362426758
    3. ' ][' → logprob: -9.131868362426758
    4. ']' → logprob: -10.506868362426758
    5. '[' → logprob: -12.381868362426758
    6. '"][' → logprob: -12.381868362426758
    7. ' col' → logprob: -13.131868362426758
    8. 'col' → logprob: -13.756868362426758
    9. ' ' → logprob: -14.006868362426758
    10. ''][' → logprob: -14.131868362426758

Token 393: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -2.816093228830141e-06
    2. ' col' → logprob: -13.00000286102295
    3. '[col' → logprob: -14.62500286102295
    4. '	col' → logprob: -20.750001907348633
    5. '(col' → logprob: -21.125001907348633
    6. 'coll' → logprob: -21.875001907348633
    7. 'colm' → logprob: -22.250001907348633
    8. '_col' → logprob: -22.250001907348633
    9. 'cols' → logprob: -22.625001907348633
    10. 'colon' → logprob: -22.625001907348633

Token 394: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000509187753777951
    2. ']=' → logprob: -8.250509262084961
    3. '=' → logprob: -8.500509262084961
    4. ' ]' → logprob: -10.125509262084961
    5. ' =' → logprob: -12.375509262084961
    6. ')' → logprob: -15.625509262084961
    7. '[' → logprob: -16.62550926208496
    8. '][' → logprob: -17.75050926208496
    9. ']+=' → logprob: -18.87550926208496
    10. ' ' → logprob: -18.87550926208496

Token 395: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. '=True' → logprob: -17.328889846801758
    4. ' ' → logprob: -17.953889846801758
    5. '[' → logprob: -18.703889846801758
    6. ')' → logprob: -18.953889846801758
    7. ']' → logprob: -19.328889846801758
    8. ',' → logprob: -19.703889846801758
    9. '   ' → logprob: -19.828889846801758
    10. ']=' → logprob: -19.828889846801758

Token 396: ' True' (ID: 6432)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2520182132720947
    2. 'True' → logprob: -1.5020182132720947
    3. 'd' → logprob: -9.877017974853516
    4. ' True' → logprob: -10.377017974853516
    5. ' ' → logprob: -13.377017974853516
    6. ''#' → logprob: -13.627017974853516
    7. '(True' → logprob: -14.002017974853516
    8. '255' → logprob: -14.627017974853516
    9. ''' → logprob: -14.627017974853516
    10. '2' → logprob: -14.877017974853516

Token 397: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 400: ' After' (ID: 6311)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00035488870344124734
    2. '   ' → logprob: -8.625354766845703
    3. ' return' → logprob: -8.750354766845703
    4. '#' → logprob: -12.500354766845703
    5. 'for' → logprob: -12.500354766845703
    6. 'max' → logprob: -12.500354766845703
    7. 'def' → logprob: -13.375354766845703
    8. '	return' → logprob: -14.500354766845703
    9. 'board' → logprob: -14.625354766845703
    10. 'import' → logprob: -14.875354766845703

Token 401: ' placing' (ID: 33268)
  Prédit: ' placing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placing' → logprob: -0.4008535146713257
    2. 'placing' → logprob: -1.1508535146713257
    3. ' placement' → logprob: -5.150853633880615
    4. 'placement' → logprob: -5.150853633880615
    5. 'place' → logprob: -7.025853633880615
    6. ' place' → logprob: -7.775853633880615
    7. ' setting' → logprob: -8.400853157043457
    8. 'setting' → logprob: -9.025853157043457
    9. ' that' → logprob: -9.150853157043457
    10. ' dropping' → logprob: -9.275853157043457

Token 402: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1772700548171997
    2. ' the' → logprob: -1.5522700548171997
    3. 'the' → logprob: -1.5522700548171997
    4. '   ' → logprob: -2.05226993560791
    5. '#' → logprob: -2.92726993560791
    6. 'return' → logprob: -3.30226993560791
    7. 'max' → logprob: -3.67726993560791
    8. 'block' → logprob: -4.55226993560791
    9. ' block' → logprob: -6.05226993560791
    10. 'for' → logprob: -6.17726993560791

Token 403: ' clear' (ID: 5364)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0974273607134819
    2. '   ' → logprob: -3.3474273681640625
    3. 'for' → logprob: -3.8474273681640625
    4. '#' → logprob: -4.0974273681640625
    5. 'row' → logprob: -4.4724273681640625
    6. 'clear' → logprob: -6.2224273681640625
    7. 'check' → logprob: -6.5974273681640625
    8. 'line' → logprob: -6.8474273681640625
    9. ' return' → logprob: -6.9724273681640625
    10. 'filled' → logprob: -7.5974273681640625

Token 404: ' any' (ID: 1062)
  Prédit: ' full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' full' → logprob: -1.1202377080917358
    2. ' lines' → logprob: -1.1202377080917358
    3. 'lines' → logprob: -1.9952377080917358
    4. 'full' → logprob: -2.4952378273010254
    5. 'rows' → logprob: -3.1202378273010254
    6. '_lines' → logprob: -3.4952378273010254
    7. ' rows' → logprob: -4.120237827301025
    8. ' completed' → logprob: -4.745237827301025
    9. ' any' → logprob: -4.745237827301025
    10. 'completed' → logprob: -4.995237827301025

Token 405: ' complete' (ID: 5533)
  Prédit: ' full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' full' → logprob: -0.32702112197875977
    2. 'full' → logprob: -1.7020211219787598
    3. ' complete' → logprob: -3.4520211219787598
    4. 'complete' → logprob: -3.5770211219787598
    5. ' filled' → logprob: -4.45202112197876
    6. 'filled' → logprob: -4.95202112197876
    7. ' lines' → logprob: -5.20202112197876
    8. 'completed' → logprob: -5.70202112197876
    9. ' completed' → logprob: -6.20202112197876
    10. 'rows' → logprob: -6.32702112197876

Token 406: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.4822416305541992
    2. ' rows' → logprob: -1.1072416305541992
    3. 'rows' → logprob: -3.107241630554199
    4. 'lines' → logprob: -5.357241630554199
    5. ' line' → logprob: -6.482241630554199
    6. ' row' → logprob: -7.857241630554199
    7. 'row' → logprob: -8.3572416305542
    8. '_lines' → logprob: -8.7322416305542
    9. 'line' → logprob: -8.9822416305542
    10. '_rows' → logprob: -9.6072416305542

Token 407: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06942253559827805
    2. '
' → logprob: -2.819422483444214
    3. '    
' → logprob: -5.444422721862793
    4. ' for' → logprob: -7.069422721862793
    5. '       ' → logprob: -7.694422721862793
    6. '<|end|>' → logprob: -8.194422721862793
    7. '  
' → logprob: -8.319422721862793
    8. ' 
' → logprob: -8.444422721862793
    9. ' rows' → logprob: -8.444422721862793
    10. '   
' → logprob: -8.819422721862793

Token 408: ' settle' (ID: 36551)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.19664715230464935
    2. 'update' → logprob: -2.9466471672058105
    3. 'shift' → logprob: -3.1966471672058105
    4. 'adjust' → logprob: -3.5716471672058105
    5. 'clear' → logprob: -4.5716471672058105
    6. ' return' → logprob: -4.6966471672058105
    7. 'move' → logprob: -4.6966471672058105
    8. 'collapse' → logprob: -4.9466471672058105
    9. 'drop' → logprob: -5.5716471672058105
    10. 'compress' → logprob: -5.6966471672058105

Token 409: ' blocks' (ID: 18125)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -1.2847685813903809
    2. ' lines' → logprob: -1.2847685813903809
    3. 'lines' → logprob: -2.034768581390381
    4. '   ' → logprob: -2.159768581390381
    5. ' rows' → logprob: -2.784768581390381
    6. 'while' → logprob: -3.409768581390381
    7. ' for' → logprob: -3.784768581390381
    8. ' while' → logprob: -3.909768581390381
    9. '
' → logprob: -4.034768581390381
    10. 'for' → logprob: -4.534768581390381

Token 410: ' down' (ID: 1917)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49061375856399536
    2. '
' → logprob: -0.9906137585639954
    3. '    
' → logprob: -4.49061393737793
    4. ' 
' → logprob: -7.24061393737793
    5. '  
' → logprob: -7.36561393737793
    6. '\n' → logprob: -7.36561393737793
    7. '       ' → logprob: -7.36561393737793
    8. '        
' → logprob: -7.74061393737793
    9. ' rows' → logprob: -7.86561393737793
    10. '
' → logprob: -8.24061393737793

Token 411: 'wards' (ID: 5323)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35564887523651123
    2. '
' → logprob: -1.2306488752365112
    3. '    
' → logprob: -5.105648994445801
    4. '       ' → logprob: -8.6056489944458
    5. '        
' → logprob: -8.9806489944458
    6. '
' → logprob: -8.9806489944458
    7. '   
' → logprob: -9.1056489944458
    8. '  
' → logprob: -9.2306489944458
    9. ' lines' → logprob: -9.4806489944458
    10. ' 
' → logprob: -9.4806489944458

Token 412: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32247358560562134
    2. '   ' → logprob: -1.3224735260009766
    3. '    
' → logprob: -4.947473526000977
    4. '  
' → logprob: -7.572473526000977
    5. '\n' → logprob: -7.822473526000977
    6. ' 
' → logprob: -8.572473526000977
    7. '   
' → logprob: -8.697473526000977
    8. '
' → logprob: -8.822473526000977
    9. '        
' → logprob: -9.197473526000977
    10. ' rows' → logprob: -9.572473526000977

Token 413: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2080775499343872
    2. '
' → logprob: -1.7080775499343872
    3. '    
' → logprob: -5.208077430725098
    4. '<|end|>' → logprob: -8.333077430725098
    5. '\n' → logprob: -8.958077430725098
    6. 'def' → logprob: -8.958077430725098
    7. 'return' → logprob: -9.083077430725098
    8. '
' → logprob: -9.583077430725098
    9. '  
' → logprob: -9.708077430725098
    10. ' 
' → logprob: -9.708077430725098

Token 414: ' clear' (ID: 5364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10070790350437164
    2. 'for' → logprob: -3.1007080078125
    3. ' for' → logprob: -3.8507080078125
    4. ' lines' → logprob: -4.7257080078125
    5. 'lines' → logprob: -5.4757080078125
    6. 'line' → logprob: -5.6007080078125
    7. '
' → logprob: -5.7257080078125
    8. 'def' → logprob: -6.3507080078125
    9. 'clear' (adapté à ' clear') → logprob: -6.4757080078125
    10. 'row' → logprob: -6.4757080078125

Token 415: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.017208656296133995
    2. '_rows' → logprob: -5.017208576202393
    3. '_line' → logprob: -5.142208576202393
    4. '_' → logprob: -5.892208576202393
    5. '_board' → logprob: -6.892208576202393
    6. '_full' → logprob: -7.767208576202393
    7. '()' → logprob: -8.76720905303955
    8. 'lines' → logprob: -9.26720905303955
    9. '_complete' → logprob: -10.26720905303955
    10. '_completed' → logprob: -10.26720905303955

Token 416: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.17592422664165497
    2. '(' → logprob: -2.050924301147461
    3. '()' → logprob: -3.425924301147461
    4. '(
' → logprob: -9.175924301147461
    5. '(block' → logprob: -11.300924301147461
    6. '(Board' → logprob: -11.550924301147461
    7. '()
' → logprob: -12.050924301147461
    8. '()(' → logprob: -12.175924301147461
    9. '_' → logprob: -12.550924301147461
    10. ' (' → logprob: -12.675924301147461

Token 417: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6950900554656982
    2. ',' → logprob: -0.6950900554656982
    3. '(board' → logprob: -6.320090293884277
    4. ')
' → logprob: -9.195090293884277
    5. '   ' → logprob: -11.320090293884277
    6. ')

' → logprob: -12.195090293884277
    7. ' ,' → logprob: -12.320090293884277
    8. ',b' → logprob: -12.695090293884277
    9. ' )' → logprob: -12.945090293884277
    10. '[' → logprob: -12.945090293884277

Token 418: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 419: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.048678208142519
    2. 'else' (adapté à ' else') → logprob: -3.298678159713745
    3. ' elif' → logprob: -5.798678398132324
    4. '   ' → logprob: -5.923678398132324
    5. 'def' → logprob: -6.298678398132324
    6. '
' → logprob: -6.548678398132324
    7. '<|end|>' → logprob: -6.798678398132324
    8. 'return' → logprob: -8.673678398132324
    9. ' else' → logprob: -9.298678398132324
    10. '```' → logprob: -9.673678398132324

Token 420: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2814311683177948
    2. ':
' → logprob: -1.4064311981201172
    3. '   ' → logprob: -8.531431198120117
    4. ' :' → logprob: -10.531431198120117
    5. ' :
' → logprob: -10.906431198120117
    6. ':

' → logprob: -11.281431198120117
    7. ' if' → logprob: -11.406431198120117
    8. '       ' → logprob: -12.906431198120117
    9. 'if' → logprob: -13.031431198120117
    10. '=' → logprob: -13.156431198120117

Token 421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2402919977903366
    2. '   ' → logprob: -1.865291953086853
    3. ' #' → logprob: -3.3652920722961426
    4. '#' → logprob: -3.9902920722961426
    5. ' ' → logprob: -6.115292072296143
    6. '    ' → logprob: -6.365292072296143
    7. '2' → logprob: -7.490292072296143
    8. '1' → logprob: -8.115291595458984
    9. ' if' → logprob: -8.240291595458984
    10. '	' → logprob: -8.740291595458984

Token 422: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.0008685869397595525
    2. '       ' → logprob: -7.500868797302246
    3. ' #' → logprob: -8.125868797302246
    4. '   ' → logprob: -11.000868797302246
    5. '
' → logprob: -13.250868797302246
    6. 'if' → logprob: -14.500868797302246
    7. ' ' → logprob: -15.000868797302246
    8. 'for' → logprob: -15.375868797302246
    9. '```' → logprob: -16.25086784362793
    10. 'q' → logprob: -16.87586784362793

Token 423: ' vertical' (ID: 17679)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0017364670056849718
    2. '       ' → logprob: -6.751736640930176
    3. ' #' → logprob: -7.876736640930176
    4. 'if' → logprob: -8.876736640930176
    5. '   ' → logprob: -10.501736640930176
    6. 'vertical' → logprob: -11.751736640930176
    7. ' if' → logprob: -12.751736640930176
    8. 'for' → logprob: -13.251736640930176
    9. ' ' → logprob: -13.251736640930176
    10. '
' → logprob: -13.751736640930176

Token 424: ' block' (ID: 4355)
  Prédit: ' block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' block' → logprob: -0.15272487699985504
    2. 'block' → logprob: -2.1527249813079834
    3. '_block' → logprob: -5.027724742889404
    4. '   ' → logprob: -5.277724742889404
    5. '
' → logprob: -5.902724742889404
    6. ' p' → logprob: -6.152724742889404
    7. '#' → logprob: -6.277724742889404
    8. ' for' → logprob: -6.402724742889404
    9. ' if' → logprob: -6.652724742889404
    10. '       ' → logprob: -7.277724742889404

Token 425: ' length' (ID: 5517)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39364540576934814
    2. ' for' → logprob: -2.1436452865600586
    3. '#' → logprob: -2.6436452865600586
    4. 'for' → logprob: -3.2686452865600586
    5. 'p' → logprob: -3.7686452865600586
    6. ' p' → logprob: -4.268645286560059
    7. ' if' → logprob: -4.393645286560059
    8. ' col' → logprob: -4.393645286560059
    9. 'if' → logprob: -4.893645286560059
    10. '   ' → logprob: -5.018645286560059

Token 426: ' p' (ID: 275)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6384701132774353
    2. ' =' → logprob: -0.7634701132774353
    3. ' p' → logprob: -5.38847017288208
    4. 'p' → logprob: -7.51347017288208
    5. '       ' → logprob: -7.76347017288208
    6. '=p' → logprob: -9.138469696044922
    7. ',' → logprob: -9.763469696044922
    8. '        ' → logprob: -10.263469696044922
    9. ' ' → logprob: -10.513469696044922
    10. ' q' → logprob: -11.013469696044922

Token 427: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4110076427459717
    2. ',' → logprob: -1.4110076427459717
    3. ' at' → logprob: -3.2860076427459717
    4. '=' → logprob: -4.286007881164551
    5. ':' → logprob: -4.286007881164551
    6. '   ' → logprob: -4.661007881164551
    7. ' =' → logprob: -5.036007881164551
    8. ':
' → logprob: -5.786007881164551
    9. ' ' → logprob: -6.911007881164551
    10. '#' → logprob: -6.911007881164551

Token 428: ' column' (ID: 6000)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6327573657035828
    2. ' q' → logprob: -0.7577573657035828
    3. 'column' → logprob: -9.382757186889648
    4. ' column' → logprob: -10.132757186889648
    5. ' ' → logprob: -10.757757186889648
    6. 'col' → logprob: -12.507757186889648
    7. ' a' → logprob: -13.132757186889648
    8. ' col' → logprob: -13.382757186889648
    9. '	q' → logprob: -13.882757186889648
    10. ' the' → logprob: -14.132757186889648

Token 429: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.08952146023511887
    2. 'q' → logprob: -2.4645214080810547
    3. ' (' → logprob: -7.839521408081055
    4. '(q' → logprob: -9.714521408081055
    5. '       ' → logprob: -10.464521408081055
    6. '   ' → logprob: -10.589521408081055
    7. ' ' → logprob: -10.714521408081055
    8. ' =' → logprob: -11.464521408081055
    9. '[q' → logprob: -11.964521408081055
    10. ',' → logprob: -12.089521408081055

Token 430: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12002847343683243
    2. '
' → logprob: -2.745028495788574
    3. 'max' → logprob: -4.120028495788574
    4. '   ' → logprob: -4.370028495788574
    5. '#' → logprob: -5.120028495788574
    6. ' col' → logprob: -5.745028495788574
    7. '        
' → logprob: -5.870028495788574
    8. ',' → logprob: -5.995028495788574
    9. 'col' → logprob: -6.120028495788574
    10. ' max' → logprob: -7.120028495788574

Token 431: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06240154057741165
    2. '#' → logprob: -3.687401533126831
    3. 'max' → logprob: -3.687401533126831
    4. '
' → logprob: -5.31240177154541
    5. '   ' → logprob: -5.68740177154541
    6. 'col' → logprob: -7.31240177154541
    7. '        
' → logprob: -7.81240177154541
    8. ' col' → logprob: -8.43740177154541
    9. ' max' → logprob: -8.43740177154541
    10. '```' → logprob: -8.81240177154541

Token 432: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.022333897650241852
    2. '#' (adapté à ' #') → logprob: -4.397334098815918
    3. 'col' → logprob: -5.897334098815918
    4. ' max' → logprob: -5.897334098815918
    5. '   ' → logprob: -6.647334098815918
    6. 'top' → logprob: -6.897334098815918
    7. '       ' → logprob: -7.522334098815918
    8. 'bottom' → logprob: -7.647334098815918
    9. 'min' → logprob: -8.397334098815918
    10. 'height' → logprob: -8.772334098815918

Token 433: ' Find' (ID: 9764)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.03666858375072479
    2. '#' → logprob: -3.911668539047241
    3. '       ' → logprob: -4.78666877746582
    4. 'top' → logprob: -6.03666877746582
    5. ' max' → logprob: -6.16166877746582
    6. 'col' → logprob: -6.78666877746582
    7. '   ' → logprob: -7.16166877746582
    8. 'bottom' → logprob: -7.66166877746582
    9. 'min' → logprob: -8.53666877746582
    10. 'height' → logprob: -8.66166877746582

Token 434: ' the' (ID: 290)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.30341672897338867
    2. ' max' → logprob: -2.0534167289733887
    3. ' the' → logprob: -2.3034167289733887
    4. 'the' → logprob: -3.9284167289733887
    5. 'lowest' → logprob: -5.303416728973389
    6. 'top' → logprob: -6.053416728973389
    7. ' top' → logprob: -6.303416728973389
    8. 'highest' → logprob: -7.178416728973389
    9. ' landing' → logprob: -7.428416728973389
    10. 'height' → logprob: -7.428416728973389

Token 435: ' row' (ID: 5225)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13056407868862152
    2. 'lowest' → logprob: -2.755563974380493
    3. 'landing' → logprob: -3.005563974380493
    4. ' max' → logprob: -5.630564212799072
    5. '#' → logprob: -6.755564212799072
    6. ' landing' → logprob: -6.755564212799072
    7. 'height' → logprob: -7.130564212799072
    8. 'highest' → logprob: -7.255564212799072
    9. 'bottom' → logprob: -7.755564212799072
    10. 'placement' → logprob: -7.880564212799072

Token 436: ' where' (ID: 1919)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9159989953041077
    2. ' where' → logprob: -1.790998935699463
    3. 'max' → logprob: -2.040998935699463
    4. ' of' → logprob: -2.790998935699463
    5. 'where' → logprob: -3.415998935699463
    6. ' to' → logprob: -3.665998935699463
    7. 'of' → logprob: -3.665998935699463
    8. '       ' → logprob: -3.915998935699463
    9. ' =' → logprob: -4.040998935699463
    10. 's' → logprob: -4.165998935699463

Token 437: ' depositing' (ID: 186880)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4875110685825348
    2. 'the' → logprob: -0.9875110387802124
    3. ' block' → logprob: -5.737511157989502
    4. ' to' → logprob: -5.737511157989502
    5. 'to' → logprob: -6.237511157989502
    6. 'block' → logprob: -6.487511157989502
    7. ' vertical' → logprob: -6.987511157989502
    8. 'vertical' → logprob: -6.987511157989502
    9. ' it' → logprob: -7.737511157989502
    10. '#' → logprob: -8.487510681152344

Token 438: ' vertical' (ID: 17679)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3141869604587555
    2. 'the' → logprob: -1.314186930656433
    3. ' blocks' → logprob: -8.564187049865723
    4. ' =' → logprob: -9.189187049865723
    5. ' block' → logprob: -9.439187049865723
    6. '=' → logprob: -9.439187049865723
    7. ' it' → logprob: -9.564187049865723
    8. ' to' → logprob: -9.564187049865723
    9. ' a' → logprob: -9.564187049865723
    10. 'block' → logprob: -9.689187049865723

Token 439: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.22123509645462036
    2. ' block' → logprob: -1.8462350368499756
    3. 'p' → logprob: -4.846235275268555
    4. 'length' → logprob: -4.971235275268555
    5. ' q' → logprob: -5.346235275268555
    6. 'placement' → logprob: -5.596235275268555
    7. 'q' → logprob: -5.721235275268555
    8. ' p' → logprob: -5.721235275268555
    9. 'position' → logprob: -6.346235275268555
    10. ' length' → logprob: -6.596235275268555

Token 440: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5434325337409973
    2. 'max' → logprob: -1.6684324741363525
    3. '=' → logprob: -2.4184324741363525
    4. ' is' → logprob: -3.6684324741363525
    5. ' can' → logprob: -3.9184324741363525
    6. ' max' → logprob: -4.043432712554932
    7. ' to' → logprob: -4.418432712554932
    8. '   ' → logprob: -4.418432712554932
    9. ':' → logprob: -4.418432712554932
    10. 'can' → logprob: -5.293432712554932

Token 441: ' p' (ID: 275)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.9369558691978455
    2. ' length' → logprob: -1.1869559288024902
    3. 'p' → logprob: -1.6869559288024902
    4. ' p' → logprob: -3.4369559288024902
    5. ' the' → logprob: -3.6869559288024902
    6. 'q' → logprob: -4.18695592880249
    7. 'height' → logprob: -4.31195592880249
    8. ' height' → logprob: -4.68695592880249
    9. ' q' → logprob: -5.68695592880249
    10. 'max' → logprob: -5.68695592880249

Token 442: ' height' (ID: 4679)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cells' → logprob: -0.4558883011341095
    2. ' height' → logprob: -2.080888271331787
    3. ' length' → logprob: -2.205888271331787
    4. 'height' → logprob: -3.330888271331787
    5. '-length' → logprob: -3.580888271331787
    6. ' blocks' → logprob: -3.955888271331787
    7. 'cells' → logprob: -4.080888271331787
    8. 'length' → logprob: -4.455888271331787
    9. '-height' → logprob: -5.955888271331787
    10. '<|end|>' → logprob: -5.955888271331787

Token 443: ' is' (ID: 382)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.39213061332702637
    2. 'can' → logprob: -2.5171306133270264
    3. ' to' → logprob: -3.5171306133270264
    4. 'to' → logprob: -3.5171306133270264
    5. ' can' → logprob: -3.6421306133270264
    6. ' max' → logprob: -3.8921306133270264
    7. 'would' → logprob: -4.1421308517456055
    8. ' is' → logprob: -4.2671308517456055
    9. '       ' → logprob: -4.3921308517456055
    10. 'is' → logprob: -4.3921308517456055

Token 444: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.2761625051498413
    2. ' possible' → logprob: -1.7761625051498413
    3. 'safe' → logprob: -3.651162624359131
    4. ' safe' → logprob: -3.776162624359131
    5. 'max' → logprob: -5.276162624359131
    6. 'HEIGHT' → logprob: -5.401162624359131
    7. '0' → logprob: -5.651162624359131
    8. 'allowed' → logprob: -5.776162624359131
    9. 'p' → logprob: -6.651162624359131
    10. ' feasible' → logprob: -6.901162624359131

Token 445: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23821412026882172
    2. '   ' → logprob: -2.2382140159606934
    3. 'max' → logprob: -2.7382140159606934
    4. ' max' → logprob: -4.363214015960693
    5. ':' → logprob: -4.488214015960693
    6. 'row' → logprob: -5.738214015960693
    7. '
' → logprob: -6.113214015960693
    8. ',' → logprob: -6.613214015960693
    9. '#' → logprob: -6.738214015960693
    10. ' col' → logprob: -6.863214015960693

Token 446: '       ' (ID: 309)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4952879548072815
    2. '       ' → logprob: -1.7452878952026367
    3. 'max' → logprob: -2.3702878952026367
    4. ' row' → logprob: -3.3702878952026367
    5. '   ' → logprob: -3.8702878952026367
    6. ' col' → logprob: -4.245287895202637
    7. 'row' → logprob: -4.495287895202637
    8. ' #' → logprob: -4.870287895202637
    9. ' top' → logprob: -4.995287895202637
    10. '#' → logprob: -4.995287895202637

Token 447: ' #' (ID: 1069)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.207672119140625
    2. 'max' → logprob: -1.582672119140625
    3. 'lowest' → logprob: -2.332672119140625
    4. ' for' → logprob: -2.832672119140625
    5. ' lowest' → logprob: -3.582672119140625
    6. ' min' → logprob: -3.582672119140625
    7. ' landing' → logprob: -3.707672119140625
    8. ' bottom' → logprob: -3.832672119140625
    9. 'row' → logprob: -3.957672119140625
    10. ' place' → logprob: -3.957672119140625

Token 448: ' we' (ID: 581)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13536150753498077
    2. ' max' → logprob: -2.885361433029175
    3. 'min' → logprob: -4.135361671447754
    4. 'lowest' → logprob: -4.385361671447754
    5. '#' → logprob: -4.760361671447754
    6. 'bottom' → logprob: -5.010361671447754
    7. '       ' → logprob: -5.260361671447754
    8. 'row' → logprob: -5.385361671447754
    9. 'top' → logprob: -5.635361671447754
    10. 'col' → logprob: -5.885361671447754

Token 449: ' need' (ID: 1309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8062896132469177
    2. ' need' → logprob: -1.3062896728515625
    3. 'for' → logprob: -2.5562896728515625
    4. ' find' → logprob: -2.9312896728515625
    5. ' can' → logprob: -3.9312896728515625
    6. ' start' → logprob: -4.1812896728515625
    7. 'need' → logprob: -4.1812896728515625
    8. ' search' → logprob: -4.3062896728515625
    9. ' want' → logprob: -4.5562896728515625
    10. ' should' → logprob: -4.5562896728515625

Token 450: ' a' (ID: 261)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.37601351737976074
    2. 'max' → logprob: -1.8760135173797607
    3. '0' → logprob: -3.1260135173797607
    4. 'to' → logprob: -3.2510135173797607
    5. ' max' → logprob: -3.6260135173797607
    6. 'q' → logprob: -4.37601375579834
    7. ' for' → logprob: -4.87601375579834
    8. ' q' → logprob: -5.00101375579834
    9. 'p' → logprob: -5.12601375579834
    10. 'for' → logprob: -5.25101375579834

Token 451: ' space' (ID: 4918)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9258550405502319
    2. 'for' → logprob: -1.675855040550232
    3. ' place' → logprob: -2.4258551597595215
    4. 'lowest' → logprob: -2.5508551597595215
    5. ' position' → logprob: -3.0508551597595215
    6. ' lowest' → logprob: -3.6758551597595215
    7. ' row' → logprob: -3.8008551597595215
    8. 'row' → logprob: -4.0508551597595215
    9. ' free' → logprob: -4.3008551597595215
    10. 'n' → logprob: -4.4258551597595215

Token 452: ' of' (ID: 328)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.0963318347930908
    2. 'from' → logprob: -1.5963318347930908
    3. ' from' → logprob: -2.096331834793091
    4. ' to' → logprob: -2.471331834793091
    5. ' for' → logprob: -3.471331834793091
    6. ' in' → logprob: -3.471331834793091
    7. 'for' → logprob: -3.471331834793091
    8. '   ' → logprob: -3.596331834793091
    9. ' that' → logprob: -3.971331834793091
    10. 'row' → logprob: -4.096331596374512

Token 453: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009792806580662727
    2. ' p' → logprob: -4.759792804718018
    3. 'HEIGHT' → logprob: -7.009792804718018
    4. ' at' → logprob: -9.384793281555176
    5. ' HEIGHT' → logprob: -9.384793281555176
    6. '1' → logprob: -10.384793281555176
    7. 'at' → logprob: -10.759793281555176
    8. 'height' → logprob: -11.384793281555176
    9. '
' → logprob: -11.509793281555176
    10. ' ' → logprob: -12.259793281555176

Token 454: ' cells' (ID: 11242)
  Prédit: ' rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.5423832535743713
    2. 'rows' → logprob: -1.1673831939697266
    3. ' consecutive' → logprob: -3.9173831939697266
    4. ' cells' → logprob: -3.9173831939697266
    5. ' contiguous' → logprob: -3.9173831939697266
    6. 'cells' → logprob: -4.167383193969727
    7. 'empty' → logprob: -5.167383193969727
    8. 'continuous' → logprob: -5.167383193969727
    9. '+' → logprob: -5.667383193969727
    10. ' empty' → logprob: -5.917383193969727

Token 455: ' vertically' (ID: 94774)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9322012066841125
    2. ' at' → logprob: -1.1822011470794678
    3. 'for' → logprob: -1.8072011470794678
    4. ' in' → logprob: -2.8072011470794678
    5. ' to' → logprob: -4.182201385498047
    6. ',' → logprob: -4.682201385498047
    7. 'from' → logprob: -5.182201385498047
    8. '   ' → logprob: -5.307201385498047
    9. 'row' → logprob: -5.432201385498047
    10. '
' → logprob: -5.432201385498047

Token 456: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7381789088249207
    2. '
' → logprob: -1.4881789684295654
    3. ' for' → logprob: -1.6131789684295654
    4. '   ' → logprob: -3.6131789684295654
    5. ' at' → logprob: -3.7381789684295654
    6. 'for' → logprob: -4.113178730010986
    7. ',' → logprob: -4.613178730010986
    8. ' in' → logprob: -5.613178730010986
    9. ' available' → logprob: -6.113178730010986
    10. '        
' → logprob: -6.363178730010986

Token 457: ' finding' (ID: 12129)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.7674731612205505
    2. 'for' → logprob: -1.1424732208251953
    3. 'starting' → logprob: -2.8924732208251953
    4. 'start' → logprob: -3.2674732208251953
    5. '#' → logprob: -3.5174732208251953
    6. 'so' → logprob: -3.6424732208251953
    7. ' for' → logprob: -4.392473220825195
    8. ' so' → logprob: -4.392473220825195
    9. 'i' → logprob: -4.392473220825195
    10. ' row' → logprob: -4.767473220825195

Token 458: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2620522975921631
    2. 'max' → logprob: -2.012052297592163
    3. 'a' → logprob: -2.762052297592163
    4. ' the' → logprob: -4.262052536010742
    5. 'lowest' → logprob: -4.262052536010742
    6. 'row' → logprob: -5.887052536010742
    7. ' a' → logprob: -6.762052536010742
    8. ' max' → logprob: -7.637052536010742
    9. 'height' → logprob: -8.512052536010742
    10. 'first' → logprob: -9.387052536010742

Token 459: ' lowest' (ID: 23120)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.31422144174575806
    2. 'max' → logprob: -1.5642213821411133
    3. 'first' → logprob: -3.5642213821411133
    4. 'highest' → logprob: -4.314221382141113
    5. 'row' → logprob: -5.189221382141113
    6. 'HEIGHT' → logprob: -5.814221382141113
    7. 'landing' → logprob: -5.814221382141113
    8. ' first' → logprob: -6.564221382141113
    9. ' max' → logprob: -6.814221382141113
    10. ' lowest' → logprob: -6.939221382141113

Token 460: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.11644153296947479
    2. ' row' → logprob: -2.991441488265991
    3. 'empty' → logprob: -3.366441488265991
    4. ' empty' → logprob: -4.61644172668457
    5. 'possible' → logprob: -4.61644172668457
    6. ' possible' → logprob: -6.61644172668457
    7. 'available' → logprob: -6.86644172668457
    8. 'position' → logprob: -6.99144172668457
    9. 'height' → logprob: -7.86644172668457
    10. ' available' → logprob: -7.99144172668457

Token 461: ' where' (ID: 1919)
  Prédit: ' where'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.9835502505302429
    2. ' for' → logprob: -1.8585503101348877
    3. ' available' → logprob: -2.4835503101348877
    4. 'available' → logprob: -2.4835503101348877
    5. 'for' → logprob: -2.7335503101348877
    6. ' that' → logprob: -2.9835503101348877
    7. ' to' → logprob: -3.1085503101348877
    8. 'where' → logprob: -3.2335503101348877
    9. 'row' → logprob: -4.233550071716309
    10. 'possible' → logprob: -4.358550071716309

Token 462: ' block' (ID: 4355)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.9424112439155579
    2. 'board' → logprob: -1.442411184310913
    3. 'the' → logprob: -1.567411184310913
    4. ' all' → logprob: -2.942411184310913
    5. ' True' → logprob: -3.067411184310913
    6. ' the' → logprob: -3.692411184310913
    7. 'True' → logprob: -3.942411184310913
    8. 'for' → logprob: -5.317411422729492
    9. 'block' → logprob: -5.692411422729492
    10. 'row' → logprob: -5.942411422729492

Token 463: ' bottom' (ID: 8725)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.3945523202419281
    2. 'can' → logprob: -1.1445523500442505
    3. ' for' → logprob: -6.644552230834961
    4. 'for' → logprob: -6.769552230834961
    5. ' of' → logprob: -7.019552230834961
    6. '```' → logprob: -7.269552230834961
    7. 'of' → logprob: -7.644552230834961
    8. 'with' → logprob: -7.644552230834961
    9. '+' → logprob: -7.769552230834961
    10. ' with' → logprob: -7.894552230834961

Token 464: ' cell' (ID: 4206)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.644923210144043
    2. 'can' → logprob: -0.769923210144043
    3. '_can' → logprob: -5.519923210144043
    4. '+' → logprob: -5.894923210144043
    5. ' fits' → logprob: -7.019923210144043
    6. 'placement' → logprob: -7.519923210144043
    7. '```' → logprob: -7.644923210144043
    8. '=' → logprob: -7.894923210144043
    9. 'could' → logprob: -7.894923210144043
    10. ' placement' → logprob: -8.144923210144043

Token 465: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.12228644639253616
    2. 'can' → logprob: -2.247286558151245
    3. '+' → logprob: -5.497286319732666
    4. '```' → logprob: -5.747286319732666
    5. ' is' → logprob: -8.122286796569824
    6. ' +' → logprob: -8.122286796569824
    7. 's' → logprob: -8.122286796569824
    8. ' fits' → logprob: -8.372286796569824
    9. ' and' → logprob: -8.497286796569824
    10. 'and' → logprob: -8.997286796569824

Token 466: ' be' (ID: 413)
  Prédit: 'fit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fit' → logprob: -0.1231008991599083
    2. 'be' → logprob: -2.248100996017456
    3. 'rest' → logprob: -5.373100757598877
    4. ' fit' → logprob: -6.498100757598877
    5. 'stand' → logprob: -6.623100757598877
    6. 'land' → logprob: -6.748100757598877
    7. ' be' → logprob: -6.998100757598877
    8. 'sit' → logprob: -8.373101234436035
    9. '```' → logprob: -8.623101234436035
    10. 'fall' → logprob: -9.623101234436035

Token 467: ' placed' (ID: 12989)
  Prédit: 'placed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placed' → logprob: -0.0008682293118909001
    2. ' placed' → logprob: -7.875868320465088
    3. '0' → logprob: -8.00086784362793
    4. '1' → logprob: -9.37586784362793
    5. '```' → logprob: -10.12586784362793
    6. 'found' → logprob: -11.37586784362793
    7. 'insert' → logprob: -12.62586784362793
    8. 'located' → logprob: -12.87586784362793
    9. 'd' → logprob: -13.25086784362793
    10. 'row' → logprob: -13.62586784362793

Token 468: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22212758660316467
    2. ' for' → logprob: -2.722127676010132
    3. '   ' → logprob: -2.847127676010132
    4. 'row' → logprob: -4.097127437591553
    5. '
' → logprob: -4.597127437591553
    6. ',' → logprob: -5.097127437591553
    7. ' and' → logprob: -5.097127437591553
    8. 'for' → logprob: -5.347127437591553
    9. ' row' → logprob: -5.347127437591553
    10. 'max' → logprob: -5.597127437591553

Token 469: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030319396406412125
    2. '
' → logprob: -3.9053194522857666
    3. '   ' → logprob: -4.9053192138671875
    4. '        
' → logprob: -6.9053192138671875
    5. 'row' → logprob: -8.530319213867188
    6. ' row' → logprob: -8.780319213867188
    7. ' for' → logprob: -8.905319213867188
    8. '

' → logprob: -9.155319213867188
    9. '  
' → logprob: -9.280319213867188
    10. ',' → logprob: -9.280319213867188

Token 470: ' #' (ID: 1069)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.3725743293762207
    2. ' space' → logprob: -1.9975743293762207
    3. 'lowest' → logprob: -2.4975743293762207
    4. 'max' → logprob: -2.8725743293762207
    5. ' bottom' → logprob: -2.8725743293762207
    6. ' lowest' → logprob: -2.9975743293762207
    7. 'space' → logprob: -3.3725743293762207
    8. ' row' → logprob: -3.3725743293762207
    9. 'row' → logprob: -3.7475743293762207
    10. ' landing' → logprob: -3.8725743293762207

Token 471: ' We' (ID: 1416)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -1.0496387481689453
    2. 'max' → logprob: -1.6746387481689453
    3. ' max' → logprob: -2.4246387481689453
    4. 'min' → logprob: -2.9246387481689453
    5. 'bottom' → logprob: -3.2996387481689453
    6. ' min' → logprob: -3.4246387481689453
    7. ' lowest' → logprob: -3.4246387481689453
    8. 'row' → logprob: -3.4246387481689453
    9. 'space' → logprob: -3.9246387481689453
    10. 'pos' → logprob: -4.049638748168945

Token 472: ' drop' (ID: 9440)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5503565073013306
    2. ' find' → logprob: -1.9253565073013306
    3. 'for' → logprob: -1.9253565073013306
    4. 'find' → logprob: -2.300356388092041
    5. ' can' → logprob: -2.675356388092041
    6. ' need' → logprob: -2.800356388092041
    7. ' start' → logprob: -3.300356388092041
    8. 'start' → logprob: -3.425356388092041
    9. '#' → logprob: -3.800356388092041
    10. 'max' → logprob: -3.925356388092041

Token 473: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4658471345901489
    2. 'row' → logprob: -2.3408470153808594
    3. 'the' → logprob: -2.7158470153808594
    4. 'from' → logprob: -3.0908470153808594
    5. 'block' → logprob: -3.3408470153808594
    6. 'down' → logprob: -3.7158470153808594
    7. ' block' → logprob: -4.090847015380859
    8. ' from' → logprob: -4.215847015380859
    9. ' a' → logprob: -4.715847015380859
    10. ' to' → logprob: -4.840847015380859

Token 474: ' block' (ID: 4355)
  Prédit: 'block'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'block' → logprob: -0.04330311343073845
    2. 'lowest' → logprob: -3.9183030128479004
    3. 'bottom' → logprob: -4.7933030128479
    4. 'p' → logprob: -5.5433030128479
    5. 'max' → logprob: -5.7933030128479
    6. 'vertical' → logprob: -6.0433030128479
    7. ' block' → logprob: -6.0433030128479
    8. 'for' → logprob: -6.5433030128479
    9. 'row' → logprob: -8.043303489685059
    10. ' bottom' → logprob: -9.293303489685059

Token 475: ' down' (ID: 1917)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6046143770217896
    2. ' from' → logprob: -1.4796143770217896
    3. ' to' → logprob: -1.9796143770217896
    4. 'to' → logprob: -2.9796142578125
    5. ' until' → logprob: -4.9796142578125
    6. ' at' → logprob: -4.9796142578125
    7. 'row' → logprob: -5.3546142578125
    8. ',' → logprob: -5.9796142578125
    9. 'down' → logprob: -5.9796142578125
    10. ' down' → logprob: -6.1046142578125

Token 476: ' until' (ID: 4609)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.29430925846099854
    2. ' from' → logprob: -1.5443092584609985
    3. ' to' → logprob: -4.044309139251709
    4. ' until' → logprob: -4.544309139251709
    5. 'to' → logprob: -5.169309139251709
    6. 'for' → logprob: -6.169309139251709
    7. ',' → logprob: -6.544309139251709
    8. ' for' → logprob: -6.669309139251709
    9. 'row' → logprob: -6.919309139251709
    10. 'until' → logprob: -7.669309139251709

Token 477: ' any' (ID: 1062)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.9436801671981812
    2. ' True' → logprob: -1.6936801671981812
    3. 'the' → logprob: -2.1936802864074707
    4. 'HEIGHT' → logprob: -2.4436802864074707
    5. 'we' → logprob: -2.8186802864074707
    6. ' the' → logprob: -2.9436802864074707
    7. 'board' → logprob: -3.1936802864074707
    8. ' we' → logprob: -3.5686802864074707
    9. 'there' → logprob: -4.443680286407471
    10. ' there' → logprob: -4.818680286407471

Token 478: ' block' (ID: 4355)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.6060214638710022
    2. 'board' → logprob: -1.8560214042663574
    3. 'occupied' → logprob: -2.4810214042663574
    4. ' row' → logprob: -2.9810214042663574
    5. 'not' → logprob: -3.4810214042663574
    6. 'True' → logprob: -3.8560214042663574
    7. '(board' → logprob: -3.9810214042663574
    8. '(row' → logprob: -4.231021404266357
    9. ' True' → logprob: -4.231021404266357
    10. ' occupied' → logprob: -4.856021404266357

Token 479: ' is' (ID: 382)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.11994082480669022
    2. '[' → logprob: -3.119940757751465
    3. ' at' → logprob: -3.869940757751465
    4. ' in' → logprob: -4.244940757751465
    5. 'in' → logprob: -4.619940757751465
    6. 'at' → logprob: -5.244940757751465
    7. '   ' → logprob: -5.744940757751465
    8. 'below' → logprob: -5.744940757751465
    9. 'row' → logprob: -5.869940757751465
    10. 'found' → logprob: -6.994940757751465

Token 480: ' immediately' (ID: 10731)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -1.0933998823165894
    2. 'found' → logprob: -1.2183998823165894
    3. 'enc' → logprob: -2.468400001525879
    4. 'below' → logprob: -2.468400001525879
    5. 'in' → logprob: -2.593400001525879
    6. 'board' → logprob: -2.968400001525879
    7. 'True' → logprob: -3.468400001525879
    8. 'occupied' → logprob: -5.093400001525879
    9. 'under' → logprob: -5.218400001525879
    10. 'False' → logprob: -5.718400001525879

Token 481: ' below' (ID: 4895)
  Prédit: 'below'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'below' → logprob: -0.009396672248840332
    2. ' below' → logprob: -5.509396553039551
    3. 'above' → logprob: -5.634396553039551
    4. 'under' → logprob: -6.509396553039551
    5. 'bene' → logprob: -8.50939655303955
    6. ' beneath' → logprob: -11.38439655303955
    7. 'at' → logprob: -11.75939655303955
    8. ' above' → logprob: -11.88439655303955
    9. ' under' → logprob: -11.88439655303955
    10. 'occupied' → logprob: -12.75939655303955

Token 482: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42657777667045593
    2. ' for' → logprob: -1.4265778064727783
    3. ',' → logprob: -3.9265778064727783
    4. '   ' → logprob: -4.301577568054199
    5. ' and' → logprob: -4.301577568054199
    6. '<|end|>' → logprob: -4.551577568054199
    7. 'for' → logprob: -4.801577568054199
    8. ' at' → logprob: -4.926577568054199
    9. '
' → logprob: -5.051577568054199
    10. 'row' → logprob: -5.676577568054199

Token 483: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -1.0876017808914185
    2. 'lowest' → logprob: -1.3376017808914185
    3. 'block' → logprob: -2.087601661682129
    4. ' block' → logprob: -2.962601661682129
    5. ' bottom' → logprob: -3.087601661682129
    6. 'top' → logprob: -3.462601661682129
    7. 'position' → logprob: -3.712601661682129
    8. 'target' → logprob: -3.962601661682129
    9. ' lowest' → logprob: -4.337601661682129
    10. 'desired' → logprob: -4.587601661682129

Token 484: ' cell' (ID: 4206)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45210742950439453
    2. '   ' → logprob: -1.9521074295043945
    3. ' for' → logprob: -2.5771074295043945
    4. '
' → logprob: -2.9521074295043945
    5. 'row' → logprob: -4.3271074295043945
    6. ',' → logprob: -4.3271074295043945
    7. 'for' → logprob: -4.5771074295043945
    8. ' row' → logprob: -4.8271074295043945
    9. ' or' → logprob: -4.9521074295043945
    10. ' and' → logprob: -5.0771074295043945

Token 485: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9318172931671143
    2. '
' → logprob: -1.0568172931671143
    3. '   ' → logprob: -2.1818172931671143
    4. 'row' → logprob: -3.4318172931671143
    5. ' max' → logprob: -3.8068172931671143
    6. 'max' → logprob: -3.9318172931671143
    7. ' row' → logprob: -4.056817054748535
    8. ' for' → logprob: -4.306817054748535
    9. '        
' → logprob: -4.806817054748535
    10. '    
' → logprob: -5.431817054748535

Token 486: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.14948612451553345
    2. 'or' → logprob: -2.1494860649108887
    3. '#' → logprob: -5.149486064910889
    4. '       ' → logprob: -5.274486064910889
    5. ' so' → logprob: -5.274486064910889
    6. ' i' → logprob: -6.649486064910889
    7. '   ' → logprob: -7.024486064910889
    8. ' and' → logprob: -7.149486064910889
    9. 'i' → logprob: -7.774486064910889
    10. ' which' → logprob: -8.149486541748047

Token 487: ' bottom' (ID: 8725)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.132714033126831
    2. 'we' → logprob: -1.257714033126831
    3. 'the' → logprob: -1.757714033126831
    4. ' we' → logprob: -2.382714033126831
    5. ' the' → logprob: -2.507714033126831
    6. ' row' → logprob: -3.632714033126831
    7. 'it' → logprob: -5.63271427154541
    8. 'board' → logprob: -5.75771427154541
    9. ' it' → logprob: -5.88271427154541
    10. 'max' → logprob: -6.25771427154541

Token 488: ' row' (ID: 5225)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.026929497718811
    2. ' ==' → logprob: -1.276929497718811
    3. 'row' → logprob: -1.526929497718811
    4. ' row' → logprob: -2.4019293785095215
    5. ' of' → logprob: -4.2769293785095215
    6. '0' → logprob: -4.6519293785095215
    7. 'of' → logprob: -4.9019293785095215
    8. '=' → logprob: -5.5269293785095215
    9. '_row' → logprob: -5.5269293785095215
    10. '   ' → logprob: -5.7769293785095215

Token 489: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44548967480659485
    2. '
' → logprob: -1.1954896450042725
    3. '   ' → logprob: -4.945489883422852
    4. ',' → logprob: -5.070489883422852
    5. 'row' → logprob: -5.070489883422852
    6. 'max' → logprob: -5.320489883422852
    7. ' =' → logprob: -5.445489883422852
    8. ':' → logprob: -5.570489883422852
    9. ' for' → logprob: -5.570489883422852
    10. '#' → logprob: -6.320489883422852

Token 490: ' reached' (ID: 15237)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014580882154405117
    2. ' ' → logprob: -4.764580726623535
    3. '-' → logprob: -5.764580726623535
    4. ' reached' → logprob: -6.514580726623535
    5. 're' → logprob: -6.764580726623535
    6. ' -' → logprob: -8.889580726623535
    7. '-re' → logprob: -11.389580726623535
    8. '   ' → logprob: -12.014580726623535
    9. 'True' → logprob: -12.139580726623535
    10. ' True' → logprob: -12.764580726623535

Token 491: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029915479943156242
    2. '
' → logprob: -4.0299153327941895
    3. ',' → logprob: -5.4049153327941895
    4. '   ' → logprob: -6.1549153327941895
    5. ':' → logprob: -6.5299153327941895
    6. '        
' → logprob: -7.0299153327941895
    7. 'row' → logprob: -7.0299153327941895
    8. ' row' → logprob: -8.279915809631348
    9. '```' → logprob: -8.404915809631348
    10. ' for' → logprob: -8.404915809631348

Token 492: '       ' (ID: 309)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -1.1932522058486938
    2. '   ' → logprob: -2.0682520866394043
    3. '       ' → logprob: -2.0682520866394043
    4. 'row' → logprob: -2.1932520866394043
    5. ' bottom' → logprob: -2.3182520866394043
    6. ' max' → logprob: -2.8182520866394043
    7. ' for' → logprob: -3.1932520866394043
    8. '
' → logprob: -4.193252086639404
    9. 'max' → logprob: -4.193252086639404
    10. 'bottom' → logprob: -4.443252086639404

Token 493: ' #' (ID: 1069)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -1.1334093809127808
    2. ' row' → logprob: -1.2584093809127808
    3. ' bottom' → logprob: -1.7584093809127808
    4. 'bottom' → logprob: -2.7584095001220703
    5. ' max' → logprob: -3.8834095001220703
    6. 'pos' → logprob: -4.13340950012207
    7. 'lowest' → logprob: -4.13340950012207
    8. ' pos' → logprob: -4.38340950012207
    9. ' drop' → logprob: -4.63340950012207
    10. ' for' → logprob: -4.63340950012207

Token 494: ' Check' (ID: 6208)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -1.6193594932556152
    2. 'row' → logprob: -1.7443594932556152
    3. 'lowest' → logprob: -2.2443594932556152
    4. 'pos' → logprob: -2.3693594932556152
    5. 'drop' → logprob: -2.6193594932556152
    6. ' bottom' → logprob: -2.7443594932556152
    7. 'max' → logprob: -3.1193594932556152
    8. ' drop' → logprob: -3.3693594932556152
    9. ' row' → logprob: -3.7443594932556152
    10. 'landing' → logprob: -3.7443594932556152

Token 495: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.801689624786377
    2. ' row' → logprob: -1.676689624786377
    3. 'row' → logprob: -1.926689624786377
    4. 'for' → logprob: -2.551689624786377
    5. ' bottom' → logprob: -2.926689624786377
    6. 'lowest' → logprob: -4.051689624786377
    7. ' lowest' → logprob: -4.176689624786377
    8. ' available' → logprob: -4.676689624786377
    9. ' possible' → logprob: -4.926689624786377
    10. ' from' → logprob: -4.926689624786377

Token 496: ' each' (ID: 2454)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.10928242653608322
    2. ' row' → logprob: -3.4842824935913086
    3. 'HEIGHT' → logprob: -4.234282493591309
    4. 'r' → logprob: -4.484282493591309
    5. 'max' → logprob: -4.734282493591309
    6. 'possible' → logprob: -4.984282493591309
    7. 'lowest' → logprob: -5.234282493591309
    8. 'placement' → logprob: -5.609282493591309
    9. 'pos' → logprob: -5.734282493591309
    10. ' placement' → logprob: -5.984282493591309

Token 497: ' possible' (ID: 4149)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.03884207829833031
    2. ' row' → logprob: -3.288841962814331
    3. 'possible' → logprob: -7.91384220123291
    4. ' possible' → logprob: -8.41384220123291
    5. 'height' → logprob: -9.66384220123291
    6. 'r' → logprob: -10.41384220123291
    7. 'HEIGHT' → logprob: -10.78884220123291
    8. 'pos' → logprob: -11.16384220123291
    9. 'candidate' → logprob: -11.16384220123291
    10. 'start' → logprob: -11.28884220123291

Token 498: ' position' (ID: 4010)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.12837865948677063
    2. ' row' → logprob: -2.2533786296844482
    3. 'position' → logprob: -5.753378868103027
    4. ' position' → logprob: -6.003378868103027
    5. ' placement' → logprob: -6.253378868103027
    6. ' landing' → logprob: -6.253378868103027
    7. 'placement' → logprob: -6.378378868103027
    8. 'landing' → logprob: -7.253378868103027
    9. 'start' → logprob: -7.503378868103027
    10. 'height' → logprob: -7.503378868103027

Token 499: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8169758915901184
    2. 'row' → logprob: -1.3169758319854736
    3. 'for' → logprob: -1.9419758319854736
    4. ' row' → logprob: -2.1919758319854736
    5. 'pos' → logprob: -4.191976070404053
    6. '   ' → logprob: -4.941976070404053
    7. 'from' → logprob: -6.191976070404053
    8. ' at' → logprob: -6.316976070404053
    9. ' pos' → logprob: -6.316976070404053
    10. ' from' → logprob: -6.816976070404053

Token 500: ' landing' (ID: 30271)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -0.7140257954597473
    2. 'bottom' → logprob: -1.9640257358551025
    3. ' bottom' → logprob: -2.3390257358551025
    4. ' lowest' → logprob: -2.9640257358551025
    5. 'placement' → logprob: -3.4640257358551025
    6. 'block' → logprob: -3.5890257358551025
    7. ' placement' → logprob: -3.5890257358551025
    8. ' block' → logprob: -3.7140257358551025
    9. 'HEIGHT' → logprob: -3.8390257358551025
    10. 'board' → logprob: -3.9640257358551025

Token 501: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.314709335565567
    2. 'row' → logprob: -1.5647093057632446
    3. '_row' → logprob: -3.814709424972534
    4. '_height' → logprob: -4.564709186553955
    5. 'height' → logprob: -4.689709186553955
    6. ' height' → logprob: -4.939709186553955
    7. '
' → logprob: -5.814709186553955
    8. ' position' → logprob: -6.189709186553955
    9. ' for' → logprob: -6.564709186553955
    10. ' spot' → logprob: -7.439709186553955

Token 502: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7281965613365173
    2. ' for' → logprob: -1.603196620941162
    3. ':' → logprob: -1.853196620941162
    4. ',' → logprob: -3.103196620941162
    5. ' row' → logprob: -3.353196620941162
    6. '   ' → logprob: -3.853196620941162
    7. 'row' → logprob: -4.353196620941162
    8. '
' → logprob: -4.353196620941162
    9. ' =' → logprob: -4.728196620941162
    10. ':
' → logprob: -5.478196620941162

Token 503: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7434073090553284
    2. '   ' → logprob: -1.2434072494506836
    3. 'row' → logprob: -2.4934072494506836
    4. ' row' → logprob: -3.1184072494506836
    5. 'pos' → logprob: -4.243407249450684
    6. 'lowest' → logprob: -4.243407249450684
    7. ' landing' → logprob: -4.368407249450684
    8. ' possible' → logprob: -4.618407249450684
    9. '```' → logprob: -4.993407249450684
    10. 'possible' → logprob: -5.118407249450684

Token 504: ' #' (ID: 1069)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.3649427592754364
    2. 'for' → logprob: -2.239942789077759
    3. 'land' → logprob: -2.489942789077759
    4. 'row' → logprob: -3.239942789077759
    5. 'max' → logprob: -3.739942789077759
    6. 'bottom' → logprob: -3.989942789077759
    7. 'lowest' → logprob: -4.23994255065918
    8. 'pos' → logprob: -4.73994255065918
    9. 'drop' → logprob: -6.23994255065918
    10. '#' (adapté à ' #') → logprob: -6.36494255065918

Token 505: ' Starting' (ID: 46049)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.41801005601882935
    2. 'lowest' → logprob: -2.2930099964141846
    3. 'bottom' → logprob: -2.9180099964141846
    4. 'land' → logprob: -3.1680099964141846
    5. 'max' → logprob: -3.1680099964141846
    6. 'min' → logprob: -3.4180099964141846
    7. 'for' → logprob: -3.7930099964141846
    8. 'row' → logprob: -4.168010234832764
    9. 'start' → logprob: -4.918010234832764
    10. 'pos' → logprob: -5.168010234832764

Token 506: ' from' (ID: 591)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.43490904569625854
    2. 'from' → logprob: -1.4349091053009033
    3. '_row' → logprob: -2.3099091053009033
    4. ' from' → logprob: -4.434908866882324
    5. 'pos' → logprob: -6.684908866882324
    6. ' at' → logprob: -6.809908866882324
    7. ' row' → logprob: -8.559908866882324
    8. 'point' → logprob: -8.684908866882324
    9. 'with' → logprob: -9.059908866882324
    10. 'at' → logprob: -9.059908866882324

Token 507: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007505475077778101
    2. 'HEIGHT' → logprob: -5.007505416870117
    3. 'row' → logprob: -7.507505416870117
    4. 'p' → logprob: -9.007505416870117
    5. 'bottom' → logprob: -10.632505416870117
    6. ' ' → logprob: -10.632505416870117
    7. 'BOTTOM' → logprob: -11.257505416870117
    8. 'for' → logprob: -11.257505416870117
    9. 'max' → logprob: -11.632505416870117
    10. ' HEIGHT' → logprob: -11.882505416870117

Token 508: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0026678077410906553
    2. 'HEIGHT' → logprob: -6.0026679039001465
    3. 'p' → logprob: -9.502667427062988
    4. 'row' → logprob: -9.877667427062988
    5. ' ' → logprob: -10.502667427062988
    6. 'max' → logprob: -10.752667427062988
    7. ' HEIGHT' → logprob: -12.627667427062988
    8. 'bottom' → logprob: -13.002667427062988
    9. 'BOTTOM' → logprob: -13.002667427062988
    10. 'height' → logprob: -13.127667427062988

Token 509: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1083427667617798
    2. '       ' → logprob: -1.3583427667617798
    3. ' to' → logprob: -1.9833427667617798
    4. 'for' → logprob: -2.8583426475524902
    5. ',' → logprob: -2.9833426475524902
    6. 'while' → logprob: -3.2333426475524902
    7. 'row' → logprob: -3.3583426475524902
    8. ' while' → logprob: -3.3583426475524902
    9. '   ' → logprob: -3.8583426475524902
    10. ' row' → logprob: -4.60834264755249

Token 510: 'ground' (ID: 3033)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40153828263282776
    2. ')' → logprob: -2.276538372039795
    3. 'row' → logprob: -2.276538372039795
    4. 'HEIGHT' → logprob: -2.276538372039795
    5. 'for' → logprob: -4.526538372039795
    6. ' ' → logprob: -6.151538372039795
    7. '),' → logprob: -6.651538372039795
    8. ' row' → logprob: -6.776538372039795
    9. ' for' → logprob: -6.901538372039795
    10. 'max' → logprob: -7.026538372039795

Token 511: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05313652381300926
    2. '),' → logprob: -3.3031365871429443
    3. ',' → logprob: -5.178136348724365
    4. 'row' → logprob: -5.303136348724365
    5. '):
' → logprob: -6.803136348724365
    6. 'level' → logprob: -6.928136348724365
    7. '):' → logprob: -7.553136348724365
    8. ')
' → logprob: -8.303136825561523
    9. ' row' → logprob: -8.303136825561523
    10. ' up' → logprob: -8.678136825561523

Token 512: ' we' (ID: 581)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.4474946856498718
    2. 'land' → logprob: -2.3224947452545166
    3. 'for' → logprob: -2.4474947452545166
    4. ' landing' → logprob: -2.5724947452545166
    5. 'while' → logprob: -3.3224947452545166
    6. '       ' → logprob: -4.3224945068359375
    7. 'row' → logprob: -4.4474945068359375
    8. ' for' → logprob: -4.5724945068359375
    9. 'max' → logprob: -4.8224945068359375
    10. ' while' → logprob: -5.3224945068359375

Token 513: ' try' (ID: 2075)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.3589305877685547
    2. 'while' → logprob: -1.4839305877685547
    3. 'for' → logprob: -2.2339305877685547
    4. ' for' → logprob: -2.2339305877685547
    5. 'can' → logprob: -2.7339305877685547
    6. 'def' → logprob: -3.2339305877685547
    7. ' while' → logprob: -3.2339305877685547
    8. 'try' → logprob: -3.3589305877685547
    9. '       ' → logprob: -3.6089305877685547
    10. ' try' → logprob: -3.9839305877685547

Token 514: ' upward' (ID: 71327)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7117206454277039
    2. 'to' → logprob: -0.9617206454277039
    3. 'row' → logprob: -2.9617207050323486
    4. 'for' → logprob: -3.3367207050323486
    5. ' for' → logprob: -4.8367204666137695
    6. 'rows' → logprob: -4.8367204666137695
    7. '   ' → logprob: -5.7117204666137695
    8. 'HEIGHT' → logprob: -5.7117204666137695
    9. '0' → logprob: -5.8367204666137695
    10. ' row' → logprob: -5.9617204666137695

Token 515: ' until' (ID: 4609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1539008617401123
    2. ' for' → logprob: -1.5289008617401123
    3. 'while' → logprob: -1.6539008617401123
    4. 'row' → logprob: -2.1539008617401123
    5. ':' → logprob: -2.4039008617401123
    6. ' while' → logprob: -4.153901100158691
    7. '
' → logprob: -4.528901100158691
    8. 'pos' → logprob: -4.653901100158691
    9. ':
' → logprob: -4.903901100158691
    10. 'position' → logprob: -5.528901100158691

Token 516: ' existing' (ID: 9595)
  Prédit: 'HEIGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -0.02278648316860199
    2. '(' → logprob: -4.897786617279053
    3. ' HEIGHT' → logprob: -4.897786617279053
    4. 'we' → logprob: -6.522786617279053
    5. 'possible' → logprob: -7.022786617279053
    6. 'the' → logprob: -7.147786617279053
    7. 'True' → logprob: -7.147786617279053
    8. 'row' → logprob: -7.647786617279053
    9. 'max' → logprob: -7.647786617279053
    10. ' (' → logprob: -7.772786617279053

Token 517: ' block' (ID: 4355)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.8393670916557312
    2. 'row' → logprob: -1.339367151260376
    3. 'block' → logprob: -2.589367151260376
    4. 'for' → logprob: -2.714367151260376
    5. 'occupied' → logprob: -3.089367151260376
    6. 'HEIGHT' → logprob: -3.714367151260376
    7. 'blocks' → logprob: -3.839367151260376
    8. 'True' → logprob: -3.964367151260376
    9. ' for' → logprob: -4.089366912841797
    10. ' True' → logprob: -4.339366912841797

Token 518: ' blocks' (ID: 18125)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.215539574623108
    2. ' at' → logprob: -1.715539574623108
    3. 'or' → logprob: -1.840539574623108
    4. 'at' → logprob: -2.8405394554138184
    5. 'blocks' → logprob: -3.0905394554138184
    6. 'in' → logprob: -3.4655394554138184
    7. '<|end|>' → logprob: -3.4655394554138184
    8. 'row' → logprob: -3.5905394554138184
    9. ' in' → logprob: -3.7155394554138184
    10. 's' → logprob: -3.7155394554138184

Token 519: ' it' (ID: 480)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6385396122932434
    2. 'placement' → logprob: -1.3885395526885986
    3. ' the' → logprob: -2.0135395526885986
    4. ' placement' → logprob: -2.7635395526885986
    5. 'landing' → logprob: -5.138539791107178
    6. 'position' → logprob: -6.138539791107178
    7. ' landing' → logprob: -6.138539791107178
    8. '   ' → logprob: -6.138539791107178
    9. 'placing' → logprob: -6.138539791107178
    10. 'down' → logprob: -6.388539791107178

Token 520: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14741800725460052
    2. ' for' → logprob: -2.8974180221557617
    3. '   ' → logprob: -3.3974180221557617
    4. ',' → logprob: -4.647418022155762
    5. 'row' → logprob: -5.022418022155762
    6. ' while' → logprob: -5.272418022155762
    7. 'for' → logprob: -5.397418022155762
    8. ' row' → logprob: -5.647418022155762
    9. ' possible' → logprob: -6.147418022155762
    10. 'pos' → logprob: -6.147418022155762

Token 521: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5453774333000183
    2. '       ' → logprob: -2.420377492904663
    3. '   ' → logprob: -2.545377492904663
    4. 'for' → logprob: -2.795377492904663
    5. ' while' → logprob: -3.170377492904663
    6. 'row' → logprob: -3.420377492904663
    7. ' row' → logprob: -3.420377492904663
    8. 'while' → logprob: -3.670377492904663
    9. '
' → logprob: -4.295377254486084
    10. ' possible' → logprob: -4.545377254486084

Token 522: ' landing' (ID: 30271)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' (adapté à ' landing') → logprob: -0.1417437642812729
    2. 'row' → logprob: -2.8917436599731445
    3. 'land' → logprob: -2.8917436599731445
    4. 'for' → logprob: -4.7667436599731445
    5. 'pos' → logprob: -4.8917436599731445
    6. '   ' → logprob: -6.6417436599731445
    7. ' landing' → logprob: -7.0167436599731445
    8. 'position' → logprob: -7.2667436599731445
    9. 'drop' → logprob: -7.3917436599731445
    10. 'bottom' → logprob: -7.8917436599731445

Token 523: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.17346712946891785
    2. ' =' → logprob: -1.9234671592712402
    3. '=' → logprob: -4.92346715927124
    4. '_height' → logprob: -5.17346715927124
    5. '   ' → logprob: -10.048466682434082
    6. '_pos' → logprob: -10.298466682434082
    7. 'row' → logprob: -10.298466682434082
    8. '=row' → logprob: -10.423466682434082
    9. 'Row' → logprob: -11.048466682434082
    10. '_level' → logprob: -11.173466682434082

Token 524: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858850687742233
    2. '=' → logprob: -3.048588514328003
    3. ' ' → logprob: -14.798588752746582
    4. 's' → logprob: -15.423588752746582
    5. '0' → logprob: -15.673588752746582
    6. '   ' → logprob: -16.298587799072266
    7. 'for' → logprob: -16.548587799072266
    8. ':' → logprob: -17.423587799072266
    9. ',' → logprob: -17.673587799072266
    10. 'found' → logprob: -17.923587799072266

Token 525: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014559264294803143
    2. ' ' → logprob: -4.264559268951416
    3. 'HEIGHT' → logprob: -8.014558792114258
    4. ' HEIGHT' → logprob: -10.014558792114258
    5. '-' → logprob: -11.514558792114258
    6. ' -' → logprob: -12.264558792114258
    7. 'None' → logprob: -13.639558792114258
    8. 'p' → logprob: -13.764558792114258
    9. ' p' → logprob: -14.389558792114258
    10. '   ' → logprob: -14.389558792114258

Token 526: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000746736885048449
    2. 'HEIGHT' → logprob: -7.375746726989746
    3. '-' → logprob: -9.625746726989746
    4. ' ' → logprob: -10.250746726989746
    5. 'None' → logprob: -11.750746726989746
    6. 'max' → logprob: -12.500746726989746
    7. ' HEIGHT' → logprob: -12.750746726989746
    8. ' -' → logprob: -14.125746726989746
    9. 'MAX' → logprob: -14.250746726989746
    10. '-height' → logprob: -14.625746726989746

Token 527: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.9948327541351318
    2. ' while' → logprob: -1.1198327541351318
    3. '       ' → logprob: -1.2448327541351318
    4. '
' → logprob: -4.244832992553711
    5. ' for' → logprob: -7.619832992553711
    6. '	while' → logprob: -8.119832992553711
    7. '   ' → logprob: -8.369832992553711
    8. 'for' → logprob: -8.994832992553711
    9. '        
' → logprob: -9.119832992553711
    10. '<|end|>' → logprob: -9.494832992553711

Token 528: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.23853449523448944
    2. ' while' → logprob: -1.6135344505310059
    3. '
' → logprob: -4.738534450531006
    4. '   ' → logprob: -6.488534450531006
    5. '       ' → logprob: -7.113534450531006
    6. 'for' → logprob: -7.613534450531006
    7. ' for' → logprob: -7.738534450531006
    8. 'While' → logprob: -7.863534450531006
    9. '<|end|>' → logprob: -7.988534450531006
    10. '	while' → logprob: -8.613534927368164

Token 529: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.003302239580079913
    2. 'for' → logprob: -5.753302097320557
    3. 'can' → logprob: -9.503302574157715
    4. ' while' → logprob: -10.753302574157715
    5. '       ' → logprob: -10.878302574157715
    6. 'max' → logprob: -12.378302574157715
    7. 'found' → logprob: -13.003302574157715
    8. '   ' → logprob: -13.128302574157715
    9. 'possible' → logprob: -14.753302574157715
    10. '
' → logprob: -15.753302574157715

Token 530: ' True' (ID: 6432)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.05229220539331436
    2. ' landing' → logprob: -3.0522921085357666
    3. '(' → logprob: -6.052292346954346
    4. '(True' → logprob: -7.552292346954346
    5. 'True' → logprob: -7.927292346954346
    6. ' True' → logprob: -8.177291870117188
    7. ' (' → logprob: -9.302291870117188
    8. 'land' → logprob: -10.052291870117188
    9. '(not' → logprob: -11.052291870117188
    10. '(
' → logprob: -11.552291870117188

Token 531: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9124701619148254
    2. '<|end|>' → logprob: -1.5374701023101807
    3. ' and' → logprob: -1.6624701023101807
    4. '       ' → logprob: -3.1624701023101807
    5. ':
' → logprob: -3.2874701023101807
    6. ':' → logprob: -3.7874701023101807
    7. ' if' → logprob: -4.16247034072876
    8. ',' → logprob: -4.28747034072876
    9. '<|end|>' → logprob: -4.53747034072876
    10. ' in' → logprob: -4.78747034072876

Token 532: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3187192678451538
    2. ' if' → logprob: -1.5687192678451538
    3. '       ' → logprob: -3.3187193870544434
    4. '        ' → logprob: -4.943719387054443
    5. 'if' → logprob: -4.943719387054443
    6. '   ' → logprob: -6.318719387054443
    7. '```' → logprob: -6.318719387054443
    8. ' for' → logprob: -6.568719387054443
    9. '            
' → logprob: -6.693719387054443
    10. '            ' → logprob: -7.193719387054443

Token 533: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009278095327317715
    2. '           ' → logprob: -4.884278297424316
    3. 'can' → logprob: -6.759278297424316
    4. ' if' → logprob: -8.009278297424316
    5. '#' (adapté à ' #') → logprob: -8.759278297424316
    6. '   ' → logprob: -11.509278297424316
    7. 'possible' → logprob: -13.009278297424316
    8. '       ' → logprob: -13.134278297424316
    9. 'landing' → logprob: -13.134278297424316
    10. 'bottom' → logprob: -14.009278297424316

Token 534: ' check' (ID: 2371)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.8602350354194641
    2. 'if' → logprob: -0.9852350354194641
    3. '           ' → logprob: -1.6102349758148193
    4. 'can' → logprob: -5.985235214233398
    5. ' landing' → logprob: -8.110235214233398
    6. '   ' → logprob: -8.110235214233398
    7. 'land' → logprob: -8.860235214233398
    8. ' if' → logprob: -8.985235214233398
    9. '#' → logprob: -9.485235214233398
    10. '       ' → logprob: -9.610235214233398

Token 535: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7508578896522522
    2. ' if' → logprob: -1.3758578300476074
    3. 'landing' → logprob: -1.5008578300476074
    4. ' landing' → logprob: -3.3758578300476074
    5. '           ' → logprob: -4.750857830047607
    6. '   ' → logprob: -5.000857830047607
    7. 'for' → logprob: -6.500857830047607
    8. '       ' → logprob: -7.625857830047607
    9. ' for' → logprob: -8.375858306884766
    10. 'all' → logprob: -8.500858306884766

Token 536: ' block' (ID: 4355)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'landing' → logprob: -8.315936429426074e-05
    2. ' landing' → logprob: -9.625082969665527
    3. '(' → logprob: -11.125082969665527
    4. 'land' → logprob: -13.875082969665527
    5. '   ' → logprob: -14.875082969665527
    6. ' (' → logprob: -15.125082969665527
    7. 'any' → logprob: -15.375082969665527
    8. 'all' → logprob: -15.625082969665527
    9. 'boarding' → logprob: -16.375083923339844
    10. '(p' → logprob: -17.000083923339844

Token 537: ' fits' (ID: 23440)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.3976427912712097
    2. ' at' → logprob: -2.3976428508758545
    3. 'can' → logprob: -2.5226428508758545
    4. ' cells' → logprob: -2.8976428508758545
    5. 'cells' → logprob: -3.2726428508758545
    6. '[top' → logprob: -4.772642612457275
    7. '[' → logprob: -4.897642612457275
    8. '[next' → logprob: -5.397642612457275
    9. ' occupies' → logprob: -5.522642612457275
    10. ' ' → logprob: -5.522642612457275

Token 538: ' if' (ID: 538)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.41817817091941833
    2. ' at' → logprob: -1.1681782007217407
    3. 'and' → logprob: -4.043178081512451
    4. '           ' → logprob: -5.668178081512451
    5. ' if' → logprob: -6.043178081512451
    6. ' in' → logprob: -6.168178081512451
    7. ' or' → logprob: -6.168178081512451
    8. ' for' → logprob: -7.043178081512451
    9. 'at' → logprob: -7.668178081512451
    10. ' landing' → logprob: -7.793178081512451

Token 539: ' placed' (ID: 12989)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.0035165678709745407
    2. ' landing' → logprob: -5.753516674041748
    3. '(' → logprob: -8.12851619720459
    4. 'land' → logprob: -10.37851619720459
    5. ' (' → logprob: -12.12851619720459
    6. 'placement' → logprob: -13.12851619720459
    7. 'boarding' → logprob: -14.00351619720459
    8. 'placing' → logprob: -14.25351619720459
    9. '   ' → logprob: -14.37851619720459
    10. ' ' → logprob: -14.75351619720459

Token 540: ' with' (ID: 483)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.10848207771778107
    2. 'at' → logprob: -2.3584821224212646
    3. '           ' → logprob: -5.1084818840026855
    4. ' in' → logprob: -7.6084818840026855
    5. '[' → logprob: -8.108482360839844
    6. '
' → logprob: -8.483482360839844
    7. '   ' → logprob: -8.608482360839844
    8. 'in' → logprob: -8.983482360839844
    9. 'landing' → logprob: -8.983482360839844
    10. '```' → logprob: -9.233482360839844

Token 541: ' bottom' (ID: 8725)
  Prédit: 'bottom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bottom' → logprob: -0.06015745922923088
    2. 'landing' → logprob: -2.935157537460327
    3. 'top' → logprob: -5.810157299041748
    4. 'its' → logprob: -6.935157299041748
    5. 'the' → logprob: -7.935157299041748
    6. 'base' → logprob: -7.935157299041748
    7. ' bottom' → logprob: -8.310157775878906
    8. 'lowest' → logprob: -8.560157775878906
    9. ' landing' → logprob: -10.435157775878906
    10. ' its' → logprob: -10.435157775878906

Token 542: ' cell' (ID: 4206)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.9291813373565674
    2. 'at' → logprob: -1.5541813373565674
    3. 'row' → logprob: -1.8041813373565674
    4. '_row' → logprob: -2.5541813373565674
    5. 'cell' → logprob: -3.6791813373565674
    6. '=' → logprob: -3.8041813373565674
    7. ' row' → logprob: -4.054181098937988
    8. '+' → logprob: -4.554181098937988
    9. ' cells' → logprob: -4.554181098937988
    10. '           ' → logprob: -4.679181098937988

Token 543: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.017399167641997337
    2. 'at' → logprob: -4.642399311065674
    3. '=' → logprob: -6.142399311065674
    4. ' =' → logprob: -6.767399311065674
    5. '           ' → logprob: -6.767399311065674
    6. '+' → logprob: -6.892399311065674
    7. ' +' → logprob: -7.517399311065674
    8. ')' → logprob: -8.142398834228516
    9. '```' → logprob: -8.517398834228516
    10. ' and' → logprob: -9.642398834228516

Token 544: ' landing' (ID: 30271)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.0032294096890836954
    2. ' landing' → logprob: -5.75322961807251
    3. 'land' → logprob: -9.878229141235352
    4. '```' → logprob: -16.00322914123535
    5. '`' → logprob: -16.12822914123535
    6. 'Landing' → logprob: -16.12822914123535
    7. 'lands' → logprob: -18.00322914123535
    8. '   ' → logprob: -18.75322914123535
    9. 'lan' → logprob: -18.87822914123535
    10. '           ' → logprob: -19.00322914123535

Token 545: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0005137138650752604
    2. '           ' → logprob: -8.875514030456543
    3. ' _' → logprob: -9.000514030456543
    4. '```' → logprob: -9.250514030456543
    5. 'row' → logprob: -9.500514030456543
    6. '_' → logprob: -9.875514030456543
    7. '   ' → logprob: -12.250514030456543
    8. '_ROW' → logprob: -13.250514030456543
    9. ' row' → logprob: -13.500514030456543
    10. '       ' → logprob: -13.625514030456543

Token 546: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10264132171869278
    2. ' +' → logprob: -3.3526413440704346
    3. '           ' → logprob: -3.6026413440704346
    4. '+' → logprob: -3.8526413440704346
    5. '            ' → logprob: -4.8526411056518555
    6. 'and' → logprob: -5.7276411056518555
    7. '               ' → logprob: -7.6026411056518555
    8. ' for' → logprob: -7.6026411056518555
    9. ' at' → logprob: -7.8526411056518555
    10. ' if' → logprob: -8.102641105651855

Token 547: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007417320739477873
    2. ' if' → logprob: -5.25741720199585
    3. ' at' → logprob: -7.50741720199585
    4. ' and' → logprob: -7.50741720199585
    5. ' for' → logprob: -8.132417678833008
    6. '   ' → logprob: -8.757417678833008
    7. 'if' → logprob: -8.757417678833008
    8. '            
' → logprob: -8.882417678833008
    9. ',' → logprob: -9.757417678833008
    10. '+' → logprob: -10.632417678833008

Token 548: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24254217743873596
    2. 'landing' → logprob: -2.117542266845703
    3. '           ' → logprob: -2.367542266845703
    4. 'can' → logprob: -7.617542266845703
    5. ' if' → logprob: -7.992542266845703
    6. '   ' → logprob: -8.492542266845703
    7. ' landing' → logprob: -8.992542266845703
    8. '       ' → logprob: -9.992542266845703
    9. 'for' → logprob: -10.992542266845703
    10. '#' (adapté à ' #') → logprob: -11.117542266845703

Token 549: ' check' (ID: 2371)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.5311468243598938
    2. 'if' → logprob: -0.9061468243598938
    3. '   ' → logprob: -5.531147003173828
    4. 'can' → logprob: -6.656147003173828
    5. ' landing' → logprob: -7.031147003173828
    6. ' if' → logprob: -7.906147003173828
    7. '       ' → logprob: -7.906147003173828
    8. '           ' → logprob: -7.906147003173828
    9. 'for' → logprob: -8.156147003173828
    10. 'land' → logprob: -9.531147003173828

Token 550: ' from' (ID: 591)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6839554309844971
    2. ' if' → logprob: -1.058955430984497
    3. 'any' → logprob: -3.683955430984497
    4. ' any' → logprob: -3.808955430984497
    5. 'for' → logprob: -3.808955430984497
    6. 'landing' → logprob: -4.308955192565918
    7. '   ' → logprob: -4.433955192565918
    8. 'all' → logprob: -4.558955192565918
    9. 'cells' → logprob: -4.558955192565918
    10. 'blocked' → logprob: -4.933955192565918

Token 551: ' landing' (ID: 30271)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.003207896137610078
    2. ' landing' → logprob: -5.753207683563232
    3. '0' → logprob: -11.12820816040039
    4. 'bottom' → logprob: -11.62820816040039
    5. 'top' → logprob: -13.62820816040039
    6. 'placement' → logprob: -14.00320816040039
    7. '   ' → logprob: -14.12820816040039
    8. '(' → logprob: -14.37820816040039
    9. 'land' → logprob: -14.62820816040039
    10. ' ' → logprob: -14.87820816040039

Token 552: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.000116655595775228
    2. 'row' → logprob: -9.625116348266602
    3. '_' → logprob: -11.875116348266602
    4. '+' → logprob: -12.375116348266602
    5. '_line' → logprob: -12.500116348266602
    6. 'Row' → logprob: -12.500116348266602
    7. ')' → logprob: -12.500116348266602
    8. '_token' → logprob: -13.125116348266602
    9. ' _' → logprob: -13.250116348266602
    10. '```' → logprob: -13.250116348266602

Token 553: ' to' (ID: 316)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08257105946540833
    2. '+' → logprob: -2.582571029663086
    3. '           ' → logprob: -6.457571029663086
    4. '<|end|>' → logprob: -7.832571029663086
    5. 'for' → logprob: -8.207571029663086
    6. ' -' → logprob: -8.832571029663086
    7. ' for' → logprob: -9.082571029663086
    8. '[' → logprob: -9.332571029663086
    9. ',' → logprob: -9.457571029663086
    10. ')' → logprob: -9.582571029663086

Token 554: ' landing' (ID: 30271)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.0040874239057302475
    2. ' landing' → logprob: -5.504087448120117
    3. 'land' → logprob: -11.754087448120117
    4. 'Landing' → logprob: -14.504087448120117
    5. 'launch' → logprob: -15.504087448120117
    6. ' ' → logprob: -16.004087448120117
    7. '```' → logprob: -16.629087448120117
    8. 'lands' → logprob: -16.879087448120117
    9. '
' → logprob: -17.504087448120117
    10. '(' → logprob: -17.754087448120117

Token 555: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -7.874882430769503e-05
    2. 'row' → logprob: -9.500079154968262
    3. '_' → logprob: -13.875079154968262
    4. 'Row' → logprob: -14.250079154968262
    5. '+' → logprob: -14.875079154968262
    6. '_ROW' → logprob: -15.125079154968262
    7. '   ' → logprob: -15.250079154968262
    8. '	row' → logprob: -15.750079154968262
    9. '_token' → logprob: -15.750079154968262
    10. '
' → logprob: -16.125078201293945

Token 556: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1813686341047287
    2. '+' → logprob: -1.8063685894012451
    3. '+p' → logprob: -6.431368827819824
    4. '<|end|>' → logprob: -13.306368827819824
    5. '+k' → logprob: -13.681368827819824
    6. ' ' → logprob: -13.931368827819824
    7. 'p' → logprob: -14.056368827819824
    8. '<|end|>' → logprob: -14.056368827819824
    9. '```' → logprob: -14.181368827819824
    10. '+[' → logprob: -14.306368827819824

Token 557: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004090985283255577
    2. ' p' → logprob: -5.504090785980225
    3. '(p' → logprob: -11.379091262817383
    4. ' (' → logprob: -13.879091262817383
    5. '(' → logprob: -16.129091262817383
    6. '   ' → logprob: -17.004091262817383
    7. '[p' → logprob: -17.129091262817383
    8. ' ' → logprob: -17.379091262817383
    9. '<p' → logprob: -17.379091262817383
    10. '{' → logprob: -17.879091262817383

Token 558: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03597641363739967
    2. '+' → logprob: -3.5359764099121094
    3. '+p' → logprob: -6.035976409912109
    4. ' -' → logprob: -7.035976409912109
    5. '<|end|>' → logprob: -7.285976409912109
    6. '           ' → logprob: -7.785976409912109
    7. ')' → logprob: -7.910976409912109
    8. ' ' → logprob: -8.03597640991211
    9. '-' → logprob: -8.28597640991211
    10. '```' → logprob: -8.78597640991211

Token 559: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001239196863025427
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.500123977661133
    4. '```' → logprob: -16.250123977661133
    5. '2' → logprob: -16.625123977661133
    6. '
' → logprob: -18.625123977661133
    7. '       ' → logprob: -18.875123977661133
    8. '=' → logprob: -19.125123977661133
    9. '  ' → logprob: -19.125123977661133
    10. '0' → logprob: -19.250123977661133

Token 560: ' cells' (ID: 11242)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47272393107414246
    2. ' if' → logprob: -1.8477239608764648
    3. ' for' → logprob: -1.9727239608764648
    4. ':' → logprob: -3.472723960876465
    5. ',' → logprob: -3.972723960876465
    6. '<|end|>' → logprob: -4.472723960876465
    7. ' and' → logprob: -4.847723960876465
    8. '       ' → logprob: -6.597723960876465
    9. ' ' → logprob: -6.722723960876465
    10. ':
' → logprob: -6.847723960876465

Token 561: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023038029670715332
    2. ' for' → logprob: -4.148037910461426
    3. ' and' → logprob: -5.898037910461426
    4. ',' → logprob: -6.648037910461426
    5. ' at' → logprob: -6.898037910461426
    6. ' in' → logprob: -7.648037910461426
    7. ' if' → logprob: -7.773037910461426
    8. '<|end|>' → logprob: -9.148037910461426
    9. 'and' → logprob: -9.273037910461426
    10. ':' → logprob: -9.523037910461426

Token 562: ' column' (ID: 6000)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.02530166693031788
    2. 'column' → logprob: -5.025301456451416
    3. ' q' → logprob: -5.150301456451416
    4. 'landing' → logprob: -5.525301456451416
    5. '[q' → logprob: -5.650301456451416
    6. 'col' → logprob: -6.400301456451416
    7. 'board' → logprob: -6.900301456451416
    8. 'columns' → logprob: -8.025301933288574
    9. 'for' → logprob: -8.275301933288574
    10. 'row' → logprob: -8.400301933288574

Token 563: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.6934304237365723
    2. ' q' → logprob: -0.6934304237365723
    3. '[q' → logprob: -8.943429946899414
    4. '(q' → logprob: -10.318429946899414
    5. '_q' → logprob: -10.818429946899414
    6. ',q' → logprob: -11.193429946899414
    7. '   ' → logprob: -11.193429946899414
    8. ' (' → logprob: -11.318429946899414
    9. ' ' → logprob: -11.443429946899414
    10. ',' → logprob: -11.818429946899414

Token 564: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016410628333687782
    2. ' for' → logprob: -4.391410827636719
    3. '<|end|>' → logprob: -6.641410827636719
    4. ',' → logprob: -7.016410827636719
    5. ' if' → logprob: -7.141410827636719
    6. '       ' → logprob: -9.141410827636719
    7. ' ' → logprob: -9.141410827636719
    8. '   ' → logprob: -9.266410827636719
    9. '<|end|>' → logprob: -9.266410827636719
    10. 'for' → logprob: -9.391410827636719

Token 565: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20967012643814087
    2. ' for' → logprob: -2.709670066833496
    3. ' and' → logprob: -2.834670066833496
    4. 'if' → logprob: -3.459670066833496
    5. ' all' → logprob: -5.084670066833496
    6. ' not' → logprob: -5.084670066833496
    7. '           ' → logprob: -5.209670066833496
    8. 'for' → logprob: -5.459670066833496
    9. 'and' → logprob: -5.959670066833496
    10. 'all' → logprob: -6.084670066833496

Token 566: ' any' (ID: 1062)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.037097591906785965
    2. ' landing' → logprob: -3.537097692489624
    3. 'any' → logprob: -6.412097454071045
    4. 'all' → logprob: -6.537097454071045
    5. 'not' → logprob: -6.662097454071045
    6. ' any' → logprob: -7.037097454071045
    7. 'board' → logprob: -7.787097454071045
    8. ' not' → logprob: -7.912097454071045
    9. 'land' → logprob: -7.912097454071045
    10. ' all' → logprob: -7.912097454071045

Token 567: ' cell' (ID: 4206)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.10636331886053085
    2. ' board' → logprob: -3.106363296508789
    3. ' if' → logprob: -3.231363296508789
    4. 'if' → logprob: -4.856363296508789
    5. '           ' → logprob: -5.481363296508789
    6. '(board' → logprob: -6.981363296508789
    7. ' not' → logprob: -7.481363296508789
    8. 'row' → logprob: -7.606363296508789
    9. '[' → logprob: -7.731363296508789
    10. ' for' → logprob: -7.981363296508789

Token 568: ' occupied' (ID: 46186)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9105893969535828
    2. ' is' → logprob: -1.1605894565582275
    3. 'is' → logprob: -2.5355894565582275
    4. '[' → logprob: -2.9105894565582275
    5. '               ' → logprob: -2.9105894565582275
    6. 'occupied' → logprob: -4.160589218139648
    7. 'board' → logprob: -4.785589218139648
    8. '[
' → logprob: -4.785589218139648
    9. '[row' → logprob: -5.160589218139648
    10. '[next' → logprob: -5.660589218139648

Token 569: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8252401351928711
    2. ' and' → logprob: -0.9502401351928711
    3. ' or' → logprob: -2.825240135192871
    4. ',' → logprob: -3.075240135192871
    5. ':' → logprob: -3.700240135192871
    6. '<|end|>' → logprob: -4.200240135192871
    7. 'and' → logprob: -4.700240135192871
    8. ' if' → logprob: -5.075240135192871
    9. ':
' → logprob: -5.450240135192871
    10. '               ' → logprob: -6.075240135192871

Token 570: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012400513514876366
    2. ' and' → logprob: -4.6374006271362305
    3. ',' → logprob: -7.3874006271362305
    4. ' if' → logprob: -7.5124006271362305
    5. ' for' → logprob: -7.5124006271362305
    6. 'and' → logprob: -8.76240062713623
    7. '<|end|>' → logprob: -8.76240062713623
    8. ':' → logprob: -8.88740062713623
    9. ' or' → logprob: -9.13740062713623
    10. '            
' → logprob: -10.26240062713623

Token 571: ' can' (ID: 665)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6606919765472412
    2. ' if' → logprob: -0.9106919765472412
    3. 'if' → logprob: -3.035691976547241
    4. ' for' → logprob: -3.660691976547241
    5. 'for' → logprob: -5.28569221496582
    6. ' can' → logprob: -7.91069221496582
    7. 'blocked' → logprob: -8.16069221496582
    8. 'occupied' → logprob: -8.78569221496582
    9. ' and' → logprob: -8.91069221496582
    10. ' cells' → logprob: -9.16069221496582

Token 572: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -0.8120090365409851
    2. '_' → logprob: -1.3120090961456299
    3. '_fit' → logprob: -1.5620090961456299
    4. '_put' → logprob: -3.18700909614563
    5. ' _' → logprob: -3.81200909614563
    6. '_continue' → logprob: -5.437008857727051
    7. '_find' → logprob: -5.937008857727051
    8. '_fill' → logprob: -6.937008857727051
    9. '_move' → logprob: -7.437008857727051
    10. '_insert' → logprob: -7.437008857727051

Token 573: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25194409489631653
    2. ' =' → logprob: -1.5019440650939941
    3. '=True' → logprob: -11.876944541931152
    4. '=False' → logprob: -12.501944541931152
    5. ' ' → logprob: -13.251944541931152
    6. '=
' → logprob: -14.001944541931152
    7. '   ' → logprob: -14.251944541931152
    8. ' =
' → logprob: -15.251944541931152
    9. 'for' → logprob: -15.376944541931152
    10. '=

' → logprob: -16.001943588256836

Token 574: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.1036437451839447
    2. ' True' → logprob: -2.4786436557769775
    3. 'all' → logprob: -4.478643894195557
    4. ' all' → logprob: -6.228643894195557
    5. '(True' → logprob: -7.478643894195557
    6. 'not' → logprob: -7.603643894195557
    7. ' not' → logprob: -9.228643417358398
    8. '   ' → logprob: -9.853643417358398
    9. 'False' → logprob: -10.353643417358398
    10. ' ' → logprob: -11.603643417358398

Token 575: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6523903012275696
    2. '           ' → logprob: -1.1523902416229248
    3. 'for' → logprob: -2.027390241622925
    4. '
' → logprob: -3.902390241622925
    5. '<|end|>' → logprob: -5.027390480041504
    6. '            
' → logprob: -6.902390480041504
    7. '<|end|>' → logprob: -7.027390480041504
    8. '  
' → logprob: -7.152390480041504
    9. ' 
' → logprob: -7.402390480041504
    10. ' if' → logprob: -7.527390480041504

Token 576: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49863994121551514
    2. ' for' → logprob: -0.9986399412155151
    3. 'for' → logprob: -3.7486400604248047
    4. '
' → logprob: -7.748640060424805
    5. '            
' → logprob: -9.498640060424805
    6. ' at' → logprob: -9.873640060424805
    7. '<|end|>' → logprob: -10.123640060424805
    8. ' 
' → logprob: -10.498640060424805
    9. ' if' → logprob: -10.998640060424805
    10. ',' → logprob: -11.998640060424805

Token 577: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48862189054489136
    2. 'for' → logprob: -0.9886218905448914
    3. '           ' → logprob: -4.238621711730957
    4. '	for' → logprob: -12.238621711730957
    5. '
' → logprob: -13.488621711730957
    6. ' ' → logprob: -13.613621711730957
    7. '		' → logprob: -13.863621711730957
    8. ' ' → logprob: -13.988621711730957
    9. ' if' → logprob: -14.113621711730957
    10. 'if' (adapté à ' if') → logprob: -14.488621711730957

Token 578: ' landing' (ID: 30271)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.026320621371269226
    2. ' landing' → logprob: -3.651320695877075
    3. 'land' → logprob: -11.401320457458496
    4. ' (' → logprob: -13.026320457458496
    5. ' ' → logprob: -13.026320457458496
    6. '   ' → logprob: -13.276320457458496
    7. '(' → logprob: -13.276320457458496
    8. 'Landing' → logprob: -14.651320457458496
    9. ' ' → logprob: -14.901320457458496
    10. '
' → logprob: -15.651320457458496

Token 579: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -8.77627644513268e-06
    2. 'row' → logprob: -12.375008583068848
    3. '+' → logprob: -13.875008583068848
    4. '_ROW' → logprob: -14.375008583068848
    5. '_' → logprob: -14.625008583068848
    6. '_rows' → logprob: -14.750008583068848
    7. '	row' → logprob: -15.250008583068848
    8. ' _' → logprob: -15.375008583068848
    9. '<Row' → logprob: -15.375008583068848
    10. '_col' → logprob: -15.750008583068848

Token 580: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1948940008878708
    2. '+' → logprob: -1.9448939561843872
    3. '+p' → logprob: -3.4448940753936768
    4. ' >' → logprob: -7.069893836975098
    5. '>' → logprob: -7.194893836975098
    6. '<=' → logprob: -8.319893836975098
    7. ' <=' → logprob: -8.444893836975098
    8. '==' → logprob: -10.819893836975098
    9. ' ' → logprob: -11.319893836975098
    10. '<p' → logprob: -11.569893836975098

Token 581: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00023083435371518135
    2. ' p' → logprob: -8.37523078918457
    3. '(p' → logprob: -15.75023078918457
    4. '<|end|>' → logprob: -17.50023078918457
    5. '<p' → logprob: -18.25023078918457
    6. '	p' → logprob: -18.62523078918457
    7. '[p' → logprob: -19.00023078918457
    8. ' ' → logprob: -19.37523078918457
    9. '
' → logprob: -19.87523078918457
    10. ' (' → logprob: -20.87523078918457

Token 582: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6760989427566528
    2. ' >' → logprob: -0.8010989427566528
    3. ' <=' → logprob: -3.9260988235473633
    4. '<=' → logprob: -3.9260988235473633
    5. '-' → logprob: -5.926098823547363
    6. ' -' → logprob: -8.176098823547363
    7. '>=' → logprob: -9.426098823547363
    8. '<' → logprob: -10.301098823547363
    9. ' >=' → logprob: -10.801098823547363
    10. ' ' → logprob: -11.176098823547363

Token 583: ' HEIGHT' (ID: 97392)
  Prédit: 'HEIGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -3.547789674485102e-05
    2. ' HEIGHT' → logprob: -10.250035285949707
    3. '200' → logprob: -16.750036239624023
    4. 'WIDTH' → logprob: -17.750036239624023
    5. '=' → logprob: -18.875036239624023
    6. '
' → logprob: -18.875036239624023
    7. '_HEIGHT' → logprob: -19.375036239624023
    8. 'HE' → logprob: -19.500036239624023
    9. 'height' → logprob: -19.625036239624023
    10. '   ' → logprob: -20.750036239624023

Token 584: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7083360552787781
    2. ':' → logprob: -0.8333360552787781
    3. '               ' → logprob: -3.583336114883423
    4. '           ' → logprob: -3.833336114883423
    5. ' and' → logprob: -3.958336114883423
    6. ' or' → logprob: -6.208335876464844
    7. ' :
' → logprob: -7.583335876464844
    8. 'and' → logprob: -7.708335876464844
    9. ' :' → logprob: -8.333335876464844
    10. '<|end|>' → logprob: -8.458335876464844

Token 585: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005537892691791058
    2. ':
' → logprob: -5.880537986755371
    3. ':' → logprob: -6.505537986755371
    4. '           ' → logprob: -7.255537986755371
    5. '                
' → logprob: -9.505537986755371
    6. ' and' → logprob: -9.630537986755371
    7. '                ' → logprob: -10.005537986755371
    8. ' 
' → logprob: -10.255537986755371
    9. '<|end|>' → logprob: -10.255537986755371
    10. ' or' → logprob: -10.505537986755371

Token 586: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4537654519081116
    2. '           ' → logprob: -1.8287653923034668
    3. ' break' → logprob: -1.8287653923034668
    4. 'break' → logprob: -3.203765392303467
    5. '                   ' → logprob: -6.328765392303467
    6. '       ' → logprob: -7.328765392303467
    7. '   ' → logprob: -8.703765869140625
    8. '	break' → logprob: -8.953765869140625
    9. '
' → logprob: -10.203765869140625
    10. ' return' → logprob: -10.703765869140625

Token 587: ' out' (ID: 842)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.1402902901172638
    2. ' break' → logprob: -2.3902902603149414
    3. '           ' → logprob: -3.2652902603149414
    4. '               ' → logprob: -7.265290260314941
    5. 'return' → logprob: -8.140290260314941
    6. '       ' → logprob: -9.390290260314941
    7. '	break' → logprob: -11.515290260314941
    8. ' return' → logprob: -11.640290260314941
    9. '   ' → logprob: -12.265290260314941
    10. '```' → logprob: -12.265290260314941

Token 588: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.08195708692073822
    2. '_of' → logprob: -3.2069571018218994
    3. 'of' → logprob: -3.3319571018218994
    4. '-of' → logprob: -6.20695686340332
    5. 'Of' → logprob: -8.58195686340332
    6. '=' → logprob: -9.58195686340332
    7. '    ' → logprob: -9.83195686340332
    8. '   ' → logprob: -10.45695686340332
    9. '-' → logprob: -10.45695686340332
    10. '	of' → logprob: -11.08195686340332

Token 589: ' bounds' (ID: 30227)
  Prédit: 'bounds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bounds' → logprob: -0.0912361666560173
    2. 'range' → logprob: -2.591236114501953
    3. 'board' → logprob: -4.591236114501953
    4. 'bound' → logprob: -6.466236114501953
    5. ' bounds' → logprob: -8.091236114501953
    6. 'index' → logprob: -8.466236114501953
    7. ' range' → logprob: -9.966236114501953
    8. 'b' → logprob: -12.216236114501953
    9. 'boundary' → logprob: -12.591236114501953
    10. 'boards' → logprob: -13.841236114501953

Token 590: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03381086513400078
    2. ':
' → logprob: -3.78381085395813
    3. '           ' → logprob: -5.408811092376709
    4. '                   ' → logprob: -5.783811092376709
    5. ':' → logprob: -6.033811092376709
    6. ' break' → logprob: -8.15881061553955
    7. 'break' → logprob: -9.03381061553955
    8. '                ' → logprob: -10.40881061553955
    9. '   ' → logprob: -10.90881061553955
    10. ' :
' → logprob: -11.03381061553955

Token 591: ' cannot' (ID: 6284)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.4661409556865692
    2. ' break' → logprob: -1.2161409854888916
    3. '           ' → logprob: -2.5911409854888916
    4. '	break' → logprob: -7.3411407470703125
    5. '               ' → logprob: -8.091140747070312
    6. '       ' → logprob: -8.341140747070312
    7. '   ' → logprob: -10.216140747070312
    8. ' ' → logprob: -10.966140747070312
    9. '		' → logprob: -10.966140747070312
    10. ' ' → logprob: -13.341140747070312

Token 592: ' place' (ID: 2475)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.2117481231689453
    2. ' place' → logprob: -2.0867481231689453
    3. 'continue' → logprob: -3.0867481231689453
    4. ' continue' → logprob: -4.586748123168945
    5. 'can' → logprob: -4.836748123168945
    6. ' can' → logprob: -6.461748123168945
    7. 'break' → logprob: -6.961748123168945
    8. ' break' → logprob: -8.461748123168945
    9. '_place' → logprob: -9.336748123168945
    10. '```' → logprob: -9.586748123168945

Token 593: ' here' (ID: 2105)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029691006988286972
    2. '           ' → logprob: -4.154691219329834
    3. '                   ' → logprob: -4.904691219329834
    4. ':
' → logprob: -5.904691219329834
    5. '
' → logprob: -6.154691219329834
    6. ' break' → logprob: -8.279690742492676
    7. '\n' → logprob: -8.529690742492676
    8. 'break' → logprob: -8.529690742492676
    9. '   ' → logprob: -9.279690742492676
    10. '                ' → logprob: -9.279690742492676

Token 594: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005530304275453091
    2. ':
' → logprob: -6.13053035736084
    3. '                   ' → logprob: -6.50553035736084
    4. ':' → logprob: -7.00553035736084
    5. 'break' → logprob: -7.88053035736084
    6. '           ' → logprob: -8.13053035736084
    7. ' break' → logprob: -8.63053035736084
    8. ',' → logprob: -10.38053035736084
    9. '			' → logprob: -11.75553035736084
    10. '	break' → logprob: -12.38053035736084

Token 595: 'should' (ID: 10618)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.2106468379497528
    2. ' break' → logprob: -2.335646867752075
    3. '               ' → logprob: -2.460646867752075
    4. '           ' → logprob: -5.085646629333496
    5. ')' → logprob: -6.835646629333496
    6. '                   ' → logprob: -8.335646629333496
    7. '	break' → logprob: -8.960646629333496
    8. ')
' → logprob: -9.460646629333496
    9. '
' → logprob: -10.335646629333496
    10. '```' → logprob: -10.710646629333496

Token 596: ' not' (ID: 625)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36786526441574097
    2. 'return' → logprob: -1.8678653240203857
    3. ' return' → logprob: -3.2428653240203857
    4. 'break' → logprob: -3.6178653240203857
    5. 'not' → logprob: -4.117865085601807
    6. '       ' → logprob: -4.242865085601807
    7. ' not' → logprob: -4.242865085601807
    8. '               ' → logprob: -4.367865085601807
    9. 'continue' → logprob: -4.992865085601807
    10. ' break' → logprob: -4.992865085601807

Token 597: ' happen' (ID: 5659)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6544397473335266
    2. ' happen' → logprob: -1.0294396877288818
    3. 'occur' → logprob: -2.154439687728882
    4. 'continue' → logprob: -5.654439926147461
    5. 'return' → logprob: -6.529439926147461
    6. ' occur' → logprob: -6.779439926147461
    7. ')' → logprob: -8.154439926147461
    8. '```' → logprob: -9.029439926147461
    9. 'be' → logprob: -9.154439926147461
    10. 'pass' → logprob: -9.279439926147461

Token 598: ' due' (ID: 5192)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5935009717941284
    2. ')
' → logprob: -1.0935009717941284
    3. ')' → logprob: -2.218501091003418
    4. '           ' → logprob: -5.843501091003418
    5. '):
' → logprob: -7.468501091003418
    6. '                   ' → logprob: -8.468501091003418
    7. ')

' → logprob: -10.218501091003418
    8. ')
' → logprob: -10.968501091003418
    9. '),' → logprob: -11.593501091003418
    10. ',' → logprob: -11.593501091003418

Token 599: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5250821113586426
    2. 'to' → logprob: -0.9000821113586426
    3. ')' → logprob: -6.525082111358643
    4. '```' → logprob: -9.275081634521484
    5. 'continue' → logprob: -9.650081634521484
    6. 'return' → logprob: -9.775081634521484
    7. 'else' → logprob: -10.400081634521484
    8. '
' → logprob: -10.775081634521484
    9. 'import' → logprob: -10.900081634521484
    10. '_to' → logprob: -10.900081634521484

Token 600: ' large' (ID: 4410)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'problem' → logprob: -1.007704734802246
    2. ' constraints' → logprob: -1.507704734802246
    3. 'constraints' → logprob: -1.632704734802246
    4. ' problem' → logprob: -2.382704734802246
    5. 'HEIGHT' → logprob: -3.007704734802246
    6. 'return' → logprob: -4.132704734802246
    7. 'block' → logprob: -4.382704734802246
    8. 'board' → logprob: -4.632704734802246
    9. ' HEIGHT' → logprob: -4.757704734802246
    10. ' return' → logprob: -5.382704734802246

Token 601: ' HEIGHT' (ID: 97392)
  Prédit: ' board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' board' → logprob: -0.5779595375061035
    2. 'HEIGHT' → logprob: -1.3279595375061035
    3. 'board' → logprob: -2.5779595375061035
    4. 'BOARD' → logprob: -3.0779595375061035
    5. ' HEIGHT' → logprob: -3.4529595375061035
    6. ' BOARD' → logprob: -5.2029595375061035
    7. ' enough' → logprob: -6.3279595375061035
    8. ')' → logprob: -6.3279595375061035
    9. '```' → logprob: -6.3279595375061035
    10. ' size' → logprob: -6.5779595375061035

Token 602: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03720039501786232
    2. ')
' → logprob: -3.912200450897217
    3. '           ' → logprob: -4.162200450897217
    4. ' )' → logprob: -7.787200450897217
    5. '               ' → logprob: -8.287199974060059
    6. ' )
' → logprob: -8.912199974060059
    7. '):
' → logprob: -9.912199974060059
    8. ')

' → logprob: -10.162199974060059
    9. ').' → logprob: -11.787199974060059
    10. '```' → logprob: -11.912199974060059

Token 603: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0038266757037490606
    2. '
' → logprob: -6.75382661819458
    3. ':
' → logprob: -7.25382661819458
    4. '                   ' → logprob: -7.25382661819458
    5. '           ' → logprob: -7.75382661819458
    6. ':' → logprob: -8.253827095031738
    7. '                
' → logprob: -9.128827095031738
    8. '<|end|>' → logprob: -9.378827095031738
    9. '```' → logprob: -9.503827095031738
    10. '                ' → logprob: -10.128827095031738

Token 604: ' can' (ID: 665)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3932271897792816
    2. 'break' → logprob: -1.393227219581604
    3. '               ' → logprob: -3.2682271003723145
    4. ' return' → logprob: -4.0182271003723145
    5. 'return' → logprob: -4.1432271003723145
    6. '           ' → logprob: -5.3932271003723145
    7. '       ' → logprob: -8.893227577209473
    8. '                   ' → logprob: -9.143227577209473
    9. '	break' → logprob: -9.393227577209473
    10. '   ' → logprob: -10.643227577209473

Token 605: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -0.38674917817115784
    2. ' return' → logprob: -2.511749267578125
    3. ' not' → logprob: -2.511749267578125
    4. 'return' → logprob: -2.636749267578125
    5. '_return' → logprob: -3.386749267578125
    6. 'not' → logprob: -3.636749267578125
    7. ' ' → logprob: -4.761749267578125
    8. 'place' → logprob: -5.511749267578125
    9. '_continue' → logprob: -5.636749267578125
    10. '   ' → logprob: -6.136749267578125

Token 606: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14723941683769226
    2. ' =' → logprob: -2.7722394466400146
    3. 'break' → logprob: -3.2722394466400146
    4. ' break' → logprob: -4.5222392082214355
    5. '           ' → logprob: -5.0222392082214355
    6. ' not' → logprob: -5.8972392082214355
    7. '               ' → logprob: -6.0222392082214355
    8. 'return' → logprob: -6.0222392082214355
    9. '=False' → logprob: -6.0222392082214355
    10. '
' → logprob: -6.3972392082214355

Token 607: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0003398726985324174
    2. ' False' → logprob: -8.00033950805664
    3. 'break' → logprob: -12.37533950805664
    4. '   ' → logprob: -15.87533950805664
    5. 'True' → logprob: -16.62533950805664
    6. 'false' → logprob: -17.75033950805664
    7. '```' → logprob: -18.25033950805664
    8. '=False' → logprob: -18.50033950805664
    9. '(False' → logprob: -19.00033950805664
    10. '       ' → logprob: -19.62533950805664

Token 608: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25641530752182007
    2. '               ' → logprob: -1.5064153671264648
    3. '<|end|>' → logprob: -5.881415367126465
    4. '
' → logprob: -7.631415367126465
    5. '            
' → logprob: -7.756415367126465
    6. '```' → logprob: -7.881415367126465
    7. ',' → logprob: -10.006415367126465
    8. 'else' → logprob: -10.131415367126465
    9. '       ' → logprob: -10.256415367126465
    10. '                
' → logprob: -10.256415367126465

Token 609: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013355274684727192
    2. '<|end|>' → logprob: -5.013355255126953
    3. '               ' → logprob: -5.638355255126953
    4. '```' → logprob: -6.138355255126953
    5. '
' → logprob: -8.388355255126953
    6. '<|end|>' → logprob: -8.888355255126953
    7. '       ' → logprob: -9.388355255126953
    8. '            
' → logprob: -9.763355255126953
    9. ',' → logprob: -10.013355255126953
    10. '\n' → logprob: -10.013355255126953

Token 610: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01332834456115961
    2. 'else' (adapté à ' else') → logprob: -4.638328552246094
    3. ' else' → logprob: -5.888328552246094
    4. ' for' → logprob: -8.638328552246094
    5. '            
' → logprob: -8.888328552246094
    6. ' if' → logprob: -9.138328552246094
    7. 'if' → logprob: -9.138328552246094
    8. '       ' → logprob: -9.388328552246094
    9. 'for' → logprob: -9.388328552246094
    10. 'elif' → logprob: -10.888328552246094

Token 611: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3887908160686493
    2. '               ' → logprob: -1.1387908458709717
    3. ' for' → logprob: -6.638790607452393
    4. '   ' → logprob: -8.01379108428955
    5. ':' → logprob: -9.38879108428955
    6. ':
' → logprob: -9.76379108428955
    7. '       ' → logprob: -10.13879108428955
    8. 'for' → logprob: -10.51379108428955
    9. ',' → logprob: -11.01379108428955
    10. '	           ' → logprob: -11.13879108428955

Token 612: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3955828845500946
    2. '               ' → logprob: -1.270582914352417
    3. ' for' → logprob: -3.520582914352417
    4. 'for' → logprob: -4.395582675933838
    5. '   ' → logprob: -5.520582675933838
    6. ' ' → logprob: -10.020583152770996
    7. '       ' → logprob: -10.395583152770996
    8. '```' → logprob: -10.895583152770996
    9. '                   ' → logprob: -11.395583152770996
    10. ' ' → logprob: -12.020583152770996

Token 613: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.21610623598098755
    2. ' for' → logprob: -1.7161061763763428
    3. '           ' → logprob: -4.341106414794922
    4. '               ' → logprob: -6.466106414794922
    5. '   ' → logprob: -12.591106414794922
    6. '```' → logprob: -13.466106414794922
    7. '	for' → logprob: -13.966106414794922
    8. '                   ' → logprob: -14.341106414794922
    9. ' ' → logprob: -14.716106414794922
    10. '       ' → logprob: -14.841106414794922

Token 614: ' r' (ID: 428)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.2877624034881592
    2. 'r' → logprob: -1.5377624034881592
    3. 'i' → logprob: -3.537762403488159
    4. 'offset' → logprob: -5.287762641906738
    5. ' row' → logprob: -7.537762641906738
    6. 'pos' → logprob: -8.287762641906738
    7. 'cell' → logprob: -8.787762641906738
    8. 'delta' → logprob: -10.287762641906738
    9. ' r' → logprob: -10.537762641906738
    10. ' offset' → logprob: -10.662762641906738

Token 615: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009784892201423645
    2. 'in' → logprob: -4.634784698486328
    3. 'In' → logprob: -12.009784698486328
    4. '_in' → logprob: -12.384784698486328
    5. 'range' → logprob: -13.072284698486328
    6. ' ' → logprob: -13.134784698486328
    7. '=' → logprob: -13.259784698486328
    8. 'i' → logprob: -13.572284698486328
    9. 'd' → logprob: -13.884784698486328
    10. '```' → logprob: -13.884784698486328

Token 616: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016036363318562508
    2. ' range' → logprob: -4.141036510467529
    3. '(range' → logprob: -13.391036033630371
    4. '   ' → logprob: -15.266036033630371
    5. 'in' → logprob: -16.141036987304688
    6. ' ' → logprob: -16.141036987304688
    7. '	range' → logprob: -16.266036987304688
    8. ' in' → logprob: -17.516036987304688
    9. 'landing' → logprob: -17.641036987304688
    10. '  ' → logprob: -17.766036987304688

Token 617: '(' (ID: 7)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.00043853666284121573
    2. 'land' → logprob: -8.500438690185547
    3. '(' → logprob: -9.125438690185547
    4. ' landing' → logprob: -9.375438690185547
    5. '           ' → logprob: -10.500438690185547
    6. '   ' → logprob: -11.750438690185547
    7. '[' → logprob: -13.125438690185547
    8. 'lan' → logprob: -14.000438690185547
    9. 'lands' → logprob: -14.375438690185547
    10. '```' → logprob: -14.750438690185547

Token 618: 'landing' (ID: 96238)
  Prédit: 'landing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' → logprob: -5.240481914370321e-05
    2. ' landing' → logprob: -10.125052452087402
    3. 'land' → logprob: -11.375052452087402
    4. '   ' → logprob: -14.875052452087402
    5. '           ' → logprob: -15.875052452087402
    6. '```' → logprob: -16.500051498413086
    7. 'loading' → logprob: -17.000051498413086
    8. 'lying' → logprob: -17.125051498413086
    9. '
' → logprob: -17.375051498413086
    10. ')' → logprob: -17.500051498413086

Token 619: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -2.15310683415737e-05
    2. 'ow' → logprob: -11.125021934509277
    3. 'row' → logprob: -12.500021934509277
    4. ',' → logprob: -13.625021934509277
    5. '_col' → logprob: -14.750021934509277
    6. ',row' → logprob: -15.375021934509277
    7. '[row' → logprob: -15.750021934509277
    8. 'Row' → logprob: -15.875021934509277
    9. ')' → logprob: -15.875021934509277
    10. '_ROW' → logprob: -15.875021934509277

Token 620: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001519503304734826
    2. ' ,' → logprob: -6.751519680023193
    3. '+' → logprob: -8.751519203186035
    4. ' +' → logprob: -8.876519203186035
    5. '           ' → logprob: -11.251519203186035
    6. ',p' → logprob: -11.626519203186035
    7. '       ' → logprob: -12.876519203186035
    8. ' ' → logprob: -12.876519203186035
    9. '   ' → logprob: -12.876519203186035
    10. ',next' → logprob: -12.876519203186035

Token 621: ' landing' (ID: 30271)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.000712074339389801
    2. ' landing' → logprob: -7.250711917877197
    3. 'land' → logprob: -13.500712394714355
    4. 'Landing' → logprob: -14.250712394714355
    5. 'launch' → logprob: -16.37571144104004
    6. ' ' → logprob: -17.62571144104004
    7. '```' → logprob: -18.12571144104004
    8. '   ' → logprob: -18.75071144104004
    9. '
' → logprob: -19.12571144104004
    10. 'lands' → logprob: -19.50071144104004

Token 622: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -9.85366350505501e-05
    2. 'row' → logprob: -9.25009822845459
    3. '+' → logprob: -13.50009822845459
    4. '   ' → logprob: -16.250099182128906
    5. 'rown' → logprob: -16.375099182128906
    6. '_ROW' → logprob: -16.500099182128906
    7. ' +' → logprob: -16.625099182128906
    8. 'Row' → logprob: -16.750099182128906
    9. 'r' → logprob: -17.000099182128906
    10. '_line' → logprob: -17.125099182128906

Token 623: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6954712867736816
    2. ' +' → logprob: -0.6954712867736816
    3. '+p' → logprob: -6.070471286773682
    4. ',' → logprob: -12.570470809936523
    5. '+r' → logprob: -13.570470809936523
    6. '+l' → logprob: -13.695470809936523
    7. ' ' → logprob: -14.070470809936523
    8. '           ' → logprob: -14.445470809936523
    9. '+
' → logprob: -14.695470809936523
    10. '＋' → logprob: -14.820470809936523

Token 624: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0002997120900545269
    2. ' p' → logprob: -8.125299453735352
    3. 'q' → logprob: -13.625299453735352
    4. 'landing' → logprob: -13.875299453735352
    5. '   ' → logprob: -14.875299453735352
    6. ' ' → logprob: -15.250299453735352
    7. '<p' → logprob: -15.625299453735352
    8. '```' → logprob: -16.25029945373535
    9. '(p' → logprob: -16.50029945373535
    10. ')p' → logprob: -16.87529945373535

Token 625: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.026418382301926613
    2. '):' → logprob: -3.651418447494507
    3. ' ):
' → logprob: -9.901418685913086
    4. '):
' → logprob: -10.401418685913086
    5. '[' → logprob: -10.651418685913086
    6. '[q' → logprob: -12.151418685913086
    7. '):

' → logprob: -12.651418685913086
    8. ' ):' → logprob: -13.151418685913086
    9. ':
' → logprob: -13.776418685913086
    10. ')' → logprob: -14.901418685913086

Token 626: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011077094823122025
    2. ' if' → logprob: -7.376107692718506
    3. '		           ' → logprob: -8.626108169555664
    4. '           ' → logprob: -9.001108169555664
    5. 'if' → logprob: -9.376108169555664
    6. '               ' → logprob: -10.251108169555664
    7. '	               ' → logprob: -11.626108169555664
    8. ',' → logprob: -11.751108169555664
    9. '<|end|>' → logprob: -11.876108169555664
    10. '			       ' → logprob: -12.001108169555664

Token 627: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5929016470909119
    2. ' if' → logprob: -0.8429016470909119
    3. '                   ' → logprob: -4.092901706695557
    4. '               ' → logprob: -9.342901229858398
    5. '   ' → logprob: -11.092901229858398
    6. '                       ' → logprob: -11.467901229858398
    7. '	if' → logprob: -11.717901229858398
    8. '           ' → logprob: -13.342901229858398
    9. '```' → logprob: -13.842901229858398
    10. ' ' → logprob: -14.092901229858398

Token 628: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.029809851199388504
    2. ' board' → logprob: -3.5298099517822266
    3. '                   ' → logprob: -10.529809951782227
    4. '               ' → logprob: -11.154809951782227
    5. 'not' → logprob: -12.029809951782227
    6. ' not' → logprob: -12.404809951782227
    7. '           ' → logprob: -13.154809951782227
    8. '(board' → logprob: -13.154809951782227
    9. '	board' → logprob: -13.279809951782227
    10. '   ' → logprob: -14.029809951782227

Token 629: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.004680987913161516
    2. 'r' → logprob: -5.37968111038208
    3. '[' → logprob: -10.004680633544922
    4. '[row' → logprob: -12.129680633544922
    5. ' r' → logprob: -12.379680633544922
    6. ' [' → logprob: -13.129680633544922
    7. '[q' → logprob: -13.504680633544922
    8. '```' → logprob: -13.879680633544922
    9. '[
' → logprob: -15.379680633544922
    10. '   ' → logprob: -15.379680633544922

Token 630: '][' (ID: 2696)
  Prédit: '[q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -0.10265110433101654
    2. '][' → logprob: -2.3526511192321777
    3. '[' → logprob: -6.352651119232178
    4. '[row' → logprob: -7.977651119232178
    5. '[col' → logprob: -8.72765064239502
    6. '[r' → logprob: -10.10265064239502
    7. ')[' → logprob: -10.10265064239502
    8. ' [' → logprob: -11.22765064239502
    9. '[l' → logprob: -11.22765064239502
    10. ' ][' → logprob: -11.85265064239502

Token 631: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.023902514949440956
    2. '[q' → logprob: -3.773902416229248
    3. ' q' → logprob: -7.398902416229248
    4. '][' → logprob: -11.398902893066406
    5. '[' → logprob: -11.523902893066406
    6. '
' → logprob: -12.273902893066406
    7. '(q' → logprob: -12.773902893066406
    8. '   ' → logprob: -13.023902893066406
    9. '```' → logprob: -13.148902893066406
    10. '	q' → logprob: -13.398902893066406

Token 632: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.11803644895553589
    2. ']:
' → logprob: -2.3680365085601807
    3. '][' → logprob: -5.243036270141602
    4. '[' → logprob: -5.618036270141602
    5. '[q' → logprob: -5.618036270141602
    6. ']' → logprob: -6.493036270141602
    7. ']==' → logprob: -6.618036270141602
    8. '[col' → logprob: -7.493036270141602
    9. '[r' → logprob: -7.743036270141602
    10. ':' → logprob: -8.368036270141602

Token 633: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001622695242986083
    2. ' can' → logprob: -6.876622676849365
    3. '                   ' → logprob: -8.876623153686523
    4. ' and' → logprob: -9.251623153686523
    5. 'can' → logprob: -9.626623153686523
    6. '<|end|>' → logprob: -9.751623153686523
    7. ':
' → logprob: -9.876623153686523
    8. ':' → logprob: -10.376623153686523
    9. '                           ' → logprob: -10.501623153686523
    10. ' =' → logprob: -10.751623153686523

Token 634: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' (adapté à ' can') → logprob: -0.04889596253633499
    2. ' can' → logprob: -3.048896074295044
    3. '                           ' → logprob: -8.798895835876465
    4. '                       ' → logprob: -8.923895835876465
    5. '	can' → logprob: -11.423895835876465
    6. '_can' → logprob: -12.173895835876465
    7. '                   ' → logprob: -12.423895835876465
    8. '               ' → logprob: -13.423895835876465
    9. '           ' → logprob: -13.923895835876465
    10. '```' → logprob: -14.298895835876465

Token 635: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -0.00012023169983876869
    2. '_' → logprob: -10.750120162963867
    3. '_places' → logprob: -10.750120162963867
    4. 'place' → logprob: -11.125120162963867
    5. ''t' → logprob: -11.125120162963867
    6. ' not' → logprob: -11.375120162963867
    7. 'Place' → logprob: -11.625120162963867
    8. 'not' → logprob: -12.250120162963867
    9. '   ' → logprob: -12.500120162963867
    10. '_have' → logprob: -13.000120162963867

Token 636: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18116843700408936
    2. '=' → logprob: -1.8061684370040894
    3. '=False' → logprob: -6.931168556213379
    4. '=True' → logprob: -8.681168556213379
    5. '                           ' → logprob: -8.931168556213379
    6. '                       ' → logprob: -9.056168556213379
    7. ' not' → logprob: -12.431168556213379
    8. '                        ' → logprob: -12.431168556213379
    9. '<|end|>' → logprob: -13.056168556213379
    10. ')' → logprob: -13.306168556213379

Token 637: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.01416350994259119
    2. ' False' → logprob: -4.264163494110107
    3. 'True' → logprob: -17.514163970947266
    4. '=False' → logprob: -20.139163970947266
    5. '(False' → logprob: -20.889163970947266
    6. ' True' → logprob: -21.014163970947266
    7. 'false' → logprob: -21.889163970947266
    8. '   ' → logprob: -22.764163970947266
    9. '_false' → logprob: -23.264163970947266
    10. '.False' → logprob: -24.014163970947266

Token 638: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001732775242999196
    2. '<|end|>' → logprob: -7.00173282623291
    3. '                   ' → logprob: -8.12673282623291
    4. '               ' → logprob: -8.75173282623291
    5. '                           ' → logprob: -9.00173282623291
    6. '
' → logprob: -9.62673282623291
    7. '           ' → logprob: -10.00173282623291
    8. '                        ' → logprob: -10.25173282623291
    9. '       ' → logprob: -10.75173282623291
    10. ',' → logprob: -11.00173282623291

Token 639: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0005906827282160521
    2. '               ' → logprob: -8.875590324401855
    3. '                   ' → logprob: -8.875590324401855
    4. '<|end|>' → logprob: -8.875590324401855
    5. '           ' → logprob: -9.875590324401855
    6. '                           ' → logprob: -10.125590324401855
    7. '       ' → logprob: -10.375590324401855
    8. '                        ' → logprob: -11.250590324401855
    9. ',' → logprob: -11.375590324401855
    10. '                      ' → logprob: -12.500590324401855

Token 640: ' break' (ID: 2338)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007489019073545933
    2. 'break' (adapté à ' break') → logprob: -5.257489204406738
    3. ' break' → logprob: -6.257489204406738
    4. '					' → logprob: -8.507489204406738
    5. '                   ' → logprob: -10.007489204406738
    6. '
' → logprob: -10.257489204406738
    7. '               ' → logprob: -10.507489204406738
    8. '                           ' → logprob: -11.632489204406738
    9. '	break' → logprob: -11.882489204406738
    10. '           ' → logprob: -13.007489204406738

Token 641: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06667732447385788
    2. '<|end|>' → logprob: -2.9416773319244385
    3. '
' → logprob: -4.941677093505859
    4. '               ' → logprob: -6.691677093505859
    5. '                       ' → logprob: -6.691677093505859
    6. '                   ' → logprob: -7.066677093505859
    7. '<|end|>' → logprob: -8.06667709350586
    8. ',' → logprob: -8.31667709350586
    9. ')' → logprob: -8.94167709350586
    10. '```' → logprob: -9.19167709350586

Token 642: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029248257633298635
    2. '
' → logprob: -6.127924919128418
    3. '<|end|>' → logprob: -8.002924919128418
    4. '                       ' → logprob: -8.877924919128418
    5. '                   ' → logprob: -9.502924919128418
    6. '               ' → logprob: -9.502924919128418
    7. '```' → logprob: -10.377924919128418
    8. '            
' → logprob: -10.752924919128418
    9. '		' → logprob: -11.127924919128418
    10. ' 
' → logprob: -11.627924919128418

Token 643: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007936524227261543
    2. '
' → logprob: -4.882936477661133
    3. '            
' → logprob: -9.007936477661133
    4. 'if' (adapté à ' if') → logprob: -9.382936477661133
    5. '<|end|>' → logprob: -10.007936477661133
    6. ' if' → logprob: -10.507936477661133
    7. ' 
' → logprob: -11.757936477661133
    8. '   ' → logprob: -12.007936477661133
    9. '        
' → logprob: -12.132936477661133
    10. '<|end|>' → logprob: -12.257936477661133

Token 644: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5793313980102539
    2. ' not' → logprob: -0.8293313980102539
    3. 'can' → logprob: -5.829331398010254
    4. ' can' → logprob: -7.829331398010254
    5. '   ' → logprob: -10.829331398010254
    6. ' landing' → logprob: -11.454331398010254
    7. '(not' → logprob: -12.329331398010254
    8. '	not' → logprob: -12.329331398010254
    9. 'landing' → logprob: -12.329331398010254
    10. 'cannot' → logprob: -13.954331398010254

Token 645: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.2014150768518448
    2. 'can' → logprob: -1.7014150619506836
    3. '	can' → logprob: -13.451415061950684
    4. '_can' → logprob: -14.951415061950684
    5. '(can' → logprob: -17.201416015625
    6. ' ' → logprob: -17.951416015625
    7. '   ' → logprob: -17.951416015625
    8. ' ' → logprob: -18.076416015625
    9. '.can' → logprob: -18.201416015625
    10. 'Can' → logprob: -18.576416015625

Token 646: '_place' (ID: 81501)
  Prédit: '_place'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_place' → logprob: -1.4736459888808895e-05
    2. 'place' → logprob: -11.875014305114746
    3. '_' → logprob: -12.000014305114746
    4. '_continue' → logprob: -15.000014305114746
    5. '_put' → logprob: -15.250014305114746
    6. 'Place' → logprob: -15.250014305114746
    7. ' place' → logprob: -16.000015258789062
    8. '_move' → logprob: -16.125015258789062
    9. '\' → logprob: -16.375015258789062
    10. ' _' → logprob: -16.750015258789062

Token 647: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4420423209667206
    2. ':
' → logprob: -1.192042350769043
    3. ':' → logprob: -2.942042350769043
    4. '           ' → logprob: -7.192042350769043
    5. ',' → logprob: -10.192042350769043
    6. ' or' → logprob: -10.317042350769043
    7. '       ' → logprob: -10.942042350769043
    8. '):
' → logprob: -11.317042350769043
    9. '                   ' → logprob: -11.317042350769043
    10. ' :
' → logprob: -11.442042350769043

Token 648: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0339522622525692
    2. '           ' → logprob: -3.408952236175537
    3. '       ' → logprob: -9.408952713012695
    4. ' break' → logprob: -9.408952713012695
    5. '
' → logprob: -10.408952713012695
    6. ',' → logprob: -10.533952713012695
    7. '                   ' → logprob: -11.158952713012695
    8. '```' → logprob: -11.158952713012695
    9. 'break' → logprob: -11.158952713012695
    10. ':
' → logprob: -11.283952713012695

Token 649: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8858245611190796
    2. ' break' → logprob: -1.2608245611190796
    3. 'break' → logprob: -1.2608245611190796
    4. '               ' → logprob: -4.135824680328369
    5. '   ' → logprob: -5.510824680328369
    6. '       ' → logprob: -7.885824680328369
    7. ' landing' → logprob: -8.635824203491211
    8. '	break' → logprob: -9.635824203491211
    9. ' ' → logprob: -10.385824203491211
    10. 'landing' → logprob: -10.385824203491211

Token 650: ' cannot' (ID: 6284)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.11042975634336472
    2. '               ' → logprob: -2.3604297637939453
    3. 'landing' → logprob: -4.985429763793945
    4. '           ' → logprob: -6.360429763793945
    5. ' break' → logprob: -6.735429763793945
    6. ' landing' → logprob: -7.985429763793945
    7. '   ' → logprob: -10.110429763793945
    8. '#' → logprob: -11.985429763793945
    9. '                   ' → logprob: -11.985429763793945
    10. '	break' → logprob: -11.985429763793945

Token 651: ' place' (ID: 2475)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.32428282499313354
    2. '_place' → logprob: -1.9492828845977783
    3. 'land' → logprob: -2.8242828845977783
    4. 'landing' → logprob: -3.5742828845977783
    5. ' place' → logprob: -3.8242828845977783
    6. 'continue' → logprob: -4.824282646179199
    7. 'break' → logprob: -5.449282646179199
    8. '_land' → logprob: -5.449282646179199
    9. 'placement' → logprob: -5.699282646179199
    10. '#' → logprob: -6.699282646179199

Token 652: ' here' (ID: 2105)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009514177218079567
    2. 'break' → logprob: -4.884514331817627
    3. '           ' → logprob: -6.509514331817627
    4. ' break' → logprob: -8.384513854980469
    5. '
' → logprob: -9.759513854980469
    6. '                   ' → logprob: -9.884513854980469
    7. ' landing' → logprob: -10.884513854980469
    8. 'landing' → logprob: -11.009513854980469
    9. '_break' → logprob: -11.884513854980469
    10. ',' → logprob: -11.884513854980469

Token 653: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017833561869338155
    2. '           ' → logprob: -6.50178337097168
    3. ',' → logprob: -8.87678337097168
    4. '
' → logprob: -9.87678337097168
    5. 'break' → logprob: -10.62678337097168
    6. '                   ' → logprob: -11.12678337097168
    7. ':
' → logprob: -11.50178337097168
    8. ' and' → logprob: -11.50178337097168
    9. ' break' → logprob: -12.12678337097168
    10. '<|end|>' → logprob: -12.75178337097168

Token 654: ' must' (ID: 2804)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14578397572040558
    2. '           ' → logprob: -2.3957839012145996
    3. 'break' → logprob: -3.1457839012145996
    4. ' break' → logprob: -6.5207839012146
    5. 'landing' → logprob: -10.895784378051758
    6. ' landing' → logprob: -11.645784378051758
    7. '                   ' → logprob: -11.895784378051758
    8. '   ' → logprob: -12.270784378051758
    9. '       ' → logprob: -12.395784378051758
    10. 'breaking' → logprob: -13.395784378051758

Token 655: ' place' (ID: 2475)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.5387172698974609
    2. 'landing' → logprob: -1.163717269897461
    3. ' break' → logprob: -2.913717269897461
    4. ' landing' → logprob: -3.788717269897461
    5. 'land' → logprob: -4.038717269897461
    6. '           ' → logprob: -5.038717269897461
    7. '#' → logprob: -7.663717269897461
    8. 'stop' → logprob: -7.663717269897461
    9. 'return' → logprob: -8.038717269897461
    10. ' land' → logprob: -8.038717269897461

Token 656: ' one' (ID: 1001)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.275686651468277
    2. '               ' → logprob: -1.6506866216659546
    3. 'at' → logprob: -3.275686740875244
    4. ' one' → logprob: -5.025686740875244
    5. '           ' → logprob: -6.150686740875244
    6. '                   ' → logprob: -7.400686740875244
    7. 'landing' → logprob: -7.650686740875244
    8. 'break' → logprob: -8.025686264038086
    9. ' landing' → logprob: -8.150686264038086
    10. 'one' → logprob: -8.150686264038086

Token 657: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.017987793311476707
    2. '-' → logprob: -4.7679877281188965
    3. ' row' → logprob: -4.8929877281188965
    4. 'level' → logprob: -6.6429877281188965
    5. 'above' → logprob: -8.517988204956055
    6. ' level' → logprob: -9.392988204956055
    7. 'token' → logprob: -10.017988204956055
    8. ' -' → logprob: -10.392988204956055
    9. 'below' → logprob: -10.892988204956055
    10. 'line' → logprob: -11.017988204956055

Token 658: ' above' (ID: 5151)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6150228381156921
    2. '               ' → logprob: -1.490022897720337
    3. '-' → logprob: -3.240022897720337
    4. '=' → logprob: -3.365022897720337
    5. ' =' → logprob: -3.615022897720337
    6. 's' → logprob: -3.740022897720337
    7. ' at' → logprob: -3.865022897720337
    8. 'break' → logprob: -3.990022897720337
    9. 'd' → logprob: -5.115022659301758
    10. ' before' → logprob: -5.240022659301758

Token 659: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10135257989168167
    2. '           ' → logprob: -2.8513526916503906
    3. '
' → logprob: -3.3513526916503906
    4. '\n' → logprob: -6.851352691650391
    5. ' landing' → logprob: -7.101352691650391
    6. '            
' → logprob: -7.851352691650391
    7. 'landing' → logprob: -8.10135269165039
    8. '                
' → logprob: -8.10135269165039
    9. '                   ' → logprob: -8.72635269165039
    10. ',' → logprob: -9.47635269165039

Token 660: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007331513334065676
    2. '           ' → logprob: -7.250733375549316
    3. '
' → logprob: -11.250733375549316
    4. ',' → logprob: -12.250733375549316
    5. '                   ' → logprob: -13.125733375549316
    6. '```' → logprob: -13.750733375549316
    7. '                
' → logprob: -14.750733375549316
    8. '			' → logprob: -15.250733375549316
    9. ',
' → logprob: -15.625733375549316
    10. ':
' → logprob: -15.750733375549316

Token 661: ' landing' (ID: 30271)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' (adapté à ' landing') → logprob: -0.4017315208911896
    2. '               ' → logprob: -1.6517314910888672
    3. 'break' → logprob: -2.401731491088867
    4. ' landing' → logprob: -3.401731491088867
    5. '           ' → logprob: -4.276731491088867
    6. ' break' → logprob: -6.901731491088867
    7. 'land' → logprob: -9.651731491088867
    8. '   ' → logprob: -9.776731491088867
    9. 'Landing' → logprob: -9.901731491088867
    10. '       ' → logprob: -10.026731491088867

Token 662: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -3.47626737493556e-05
    2. '_token' → logprob: -10.50003433227539
    3. '_' → logprob: -13.87503433227539
    4. ' _' → logprob: -13.87503433227539
    5. '_line' → logprob: -14.00003433227539
    6. '
' → logprob: -14.12503433227539
    7. 'row' → logprob: -14.62503433227539
    8. '```' → logprob: -14.87503433227539
    9. '_ROW' → logprob: -14.87503433227539
    10. '   ' → logprob: -15.00003433227539

Token 663: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.1438494324684143
    2. ' -=' → logprob: -2.2688493728637695
    3. '-' → logprob: -3.6438493728637695
    4. '+=' → logprob: -5.5188493728637695
    5. ' +=' → logprob: -8.76884937286377
    6. '=' → logprob: -8.76884937286377
    7. ' -' → logprob: -10.39384937286377
    8. '   ' → logprob: -10.51884937286377
    9. '```' → logprob: -12.39384937286377
    10. '<|end|>' → logprob: -12.51884937286377

Token 664: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -18.75000762939453
    4. '   ' → logprob: -19.37500762939453
    5. '<|end|>' → logprob: -20.87500762939453
    6. '１' → logprob: -21.06250762939453
    7. '۱' → logprob: -21.12500762939453
    8. '
' → logprob: -21.18750762939453
    9. ' ' → logprob: -21.43750762939453
    10. '0' → logprob: -21.62500762939453

Token 665: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -20.0
    4. '   ' → logprob: -20.75
    5. '
' → logprob: -21.8125
    6. 'from' → logprob: -21.9375
    7. '-' → logprob: -22.5
    8. '１' → logprob: -22.5
    9. '<|end|>' → logprob: -22.6875
    10. '۱' → logprob: -22.9375

Token 666: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8251134753227234
    2. '           ' → logprob: -1.0751135349273682
    3. '<|end|>' → logprob: -2.325113534927368
    4. ' else' → logprob: -3.075113534927368
    5. '               ' → logprob: -3.575113534927368
    6. 'else' → logprob: -3.825113534927368
    7. '            
' → logprob: -5.075113296508789
    8. ' 
' → logprob: -5.325113296508789
    9. '\n' → logprob: -5.575113296508789
    10. '  
' → logprob: -5.575113296508789

Token 667: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042636800557374954
    2. '               ' → logprob: -4.042636871337891
    3. ' else' → logprob: -4.417636871337891
    4. 'else' → logprob: -4.417636871337891
    5. '```' → logprob: -10.79263687133789
    6. '
' → logprob: -11.04263687133789
    7. '       ' → logprob: -11.91763687133789
    8. 'break' → logprob: -12.16763687133789
    9. 'elif' → logprob: -12.29263687133789
    10. '   ' → logprob: -12.66763687133789

Token 668: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10289258509874344
    2. 'break' (adapté à ' break') → logprob: -2.3528926372528076
    3. ' break' → logprob: -5.9778923988342285
    4. '           ' → logprob: -9.227892875671387
    5. '	break' → logprob: -11.102892875671387
    6. '       ' → logprob: -11.727892875671387
    7. 'if' → logprob: -11.852892875671387
    8. '
' → logprob: -11.977892875671387
    9. 'else' → logprob: -12.727892875671387
    10. ' if' → logprob: -12.977892875671387

Token 669: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006215345347300172
    2. '
' → logprob: -8.000621795654297
    3. 'else' → logprob: -8.500621795654297
    4. ' else' → logprob: -10.500621795654297
    5. '       ' → logprob: -11.125621795654297
    6. '            
' → logprob: -11.750621795654297
    7. '<|end|>' → logprob: -11.750621795654297
    8. '```' → logprob: -12.250621795654297
    9. '   ' → logprob: -12.625621795654297
    10. '		' → logprob: -12.750621795654297

Token 670: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010387639049440622
    2. 'else' → logprob: -7.001038551330566
    3. ' else' → logprob: -9.376038551330566
    4. '       ' → logprob: -10.626038551330566
    5. '   ' → logprob: -11.751038551330566
    6. 'elif' → logprob: -12.251038551330566
    7. '
' → logprob: -13.376038551330566
    8. '```' → logprob: -13.501038551330566
    9. '               ' → logprob: -14.876038551330566
    10. '<|end|>' → logprob: -15.126038551330566

Token 671: ' landing' (ID: 30271)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027129482477903366
    2. 'else' → logprob: -4.652129650115967
    3. '       ' → logprob: -4.777129650115967
    4. '   ' → logprob: -5.027129650115967
    5. ' else' → logprob: -7.152129650115967
    6. '
' → logprob: -7.152129650115967
    7. '            
' → logprob: -8.027129173278809
    8. '    
' → logprob: -9.277129173278809
    9. 'elif' → logprob: -9.652129173278809
    10. '        
' → logprob: -9.777129173278809

Token 672: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.3856492842023727e-06
    2. '+=' → logprob: -14.875000953674316
    3. 'row' → logprob: -15.000000953674316
    4. ' +=' → logprob: -15.250000953674316
    5. '   ' → logprob: -16.125001907348633
    6. ' _' → logprob: -16.125001907348633
    7. '_line' → logprob: -16.625001907348633
    8. '_' → logprob: -16.750001907348633
    9. '_ROW' → logprob: -17.125001907348633
    10. 'Row' → logprob: -17.625001907348633

Token 673: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.061968810856342316
    2. ' +=' → logprob: -2.8119688034057617
    3. ']+=' → logprob: -14.561968803405762
    4. '=' → logprob: -14.811968803405762
    5. '   ' → logprob: -15.561968803405762
    6. '+' → logprob: -16.811969757080078
    7. '	' → logprob: -18.311969757080078
    8. '```' → logprob: -18.436969757080078
    9. ' ' → logprob: -18.936969757080078
    10. ' ' → logprob: -20.186969757080078

Token 674: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -18.75002098083496
    4. '```' → logprob: -18.87502098083496
    5. '   ' → logprob: -19.12502098083496
    6. '0' → logprob: -20.18752098083496
    7. '+' → logprob: -21.06252098083496
    8. '
' → logprob: -21.31252098083496
    9. '１' → logprob: -21.93752098083496
    10. '۱' → logprob: -21.93752098083496

Token 675: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -20.0
    4. '0' → logprob: -20.625
    5. '   ' → logprob: -21.375
    6. '
' → logprob: -21.6875
    7. '１' → logprob: -21.9375
    8. '﻿' → logprob: -22.75
    9. '۱' → logprob: -22.75
    10. '-' → logprob: -23.125

Token 676: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5060741901397705
    2. '<|end|>' → logprob: -1.5060741901397705
    3. '
' → logprob: -2.0060741901397705
    4. '   ' → logprob: -3.3810741901397705
    5. '        
' → logprob: -6.006073951721191
    6. '```' → logprob: -6.881073951721191
    7. '    
' → logprob: -7.506073951721191
    8. '#' → logprob: -7.506073951721191
    9. '<|end|>' → logprob: -7.506073951721191
    10. '\n' → logprob: -7.631073951721191

Token 677: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3662353754043579
    2. '       ' → logprob: -1.241235375404358
    3. '
' → logprob: -4.491235256195068
    4. '```' → logprob: -5.991235256195068
    5. '#' → logprob: -6.366235256195068
    6. 'while' → logprob: -6.491235256195068
    7. 'if' → logprob: -8.116235733032227
    8. 'for' → logprob: -8.491235733032227
    9. '        
' → logprob: -9.741235733032227
    10. ' if' → logprob: -10.116235733032227

Token 678: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15615235269069672
    2. 'for' → logprob: -2.4061522483825684
    3. '#' → logprob: -3.4061522483825684
    4. '       ' → logprob: -4.781152248382568
    5. 'landing' → logprob: -5.281152248382568
    6. ' for' → logprob: -5.406152248382568
    7. 'if' (adapté à ' if') → logprob: -6.656152248382568
    8. ' landing' → logprob: -7.406152248382568
    9. 'while' → logprob: -7.656152248382568
    10. '```' → logprob: -8.031152725219727

Token 679: ' landing' (ID: 30271)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.0297523383051157
    2. ' landing' → logprob: -3.529752254486084
    3. 'land' → logprob: -14.654752731323242
    4. ' ' → logprob: -14.904752731323242
    5. '   ' → logprob: -15.279752731323242
    6. 'placement' → logprob: -15.654752731323242
    7. '  ' → logprob: -16.404752731323242
    8. ' not' → logprob: -16.404752731323242
    9. 'not' → logprob: -16.654752731323242
    10. ' ' → logprob: -16.654752731323242

Token 680: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -5.200166469876422e-06
    2. 'row' → logprob: -13.000004768371582
    3. '_line' → logprob: -14.000004768371582
    4. '   ' → logprob: -14.750004768371582
    5. '_height' → logprob: -14.875004768371582
    6. '_' → logprob: -15.500004768371582
    7. ' _' → logprob: -15.500004768371582
    8. '_rows' → logprob: -15.750004768371582
    9. '       ' → logprob: -15.875004768371582
    10. '-' → logprob: -16.1250057220459

Token 681: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.30653223395347595
    2. '>=' → logprob: -1.9315322637557983
    3. ' <' → logprob: -2.431532144546509
    4. '<' → logprob: -3.681532144546509
    5. ' ==' → logprob: -5.681532382965088
    6. '   ' → logprob: -7.681532382965088
    7. ' >' → logprob: -7.806532382965088
    8. '==' → logprob: -8.18153190612793
    9. ' -=' → logprob: -8.18153190612793
    10. ' +=' → logprob: -8.68153190612793

Token 682: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004174679517745972
    2. ' ' → logprob: -5.504174709320068
    3. 'p' → logprob: -9.37917423248291
    4. ' p' → logprob: -11.62917423248291
    5. '1' → logprob: -13.87917423248291
    6. '=' → logprob: -14.25417423248291
    7. '   ' → logprob: -14.37917423248291
    8. ' =' → logprob: -16.004175186157227
    9. '```' → logprob: -16.129175186157227
    10. '(p' → logprob: -16.879175186157227

Token 683: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001612267515156418
    2. ' ' → logprob: -9.000161170959473
    3. 'p' → logprob: -10.250161170959473
    4. ' p' → logprob: -13.500161170959473
    5. '1' → logprob: -15.000161170959473
    6. '۰' → logprob: -16.18766212463379
    7. '-p' → logprob: -16.43766212463379
    8. '=' → logprob: -16.50016212463379
    9. ' -' → logprob: -16.62516212463379
    10. '-' → logprob: -17.00016212463379

Token 684: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.627917468547821
    2. ':' → logprob: -1.1279175281524658
    3. ':
' → logprob: -2.377917528152466
    4. '       ' → logprob: -3.127917528152466
    5. ' =' → logprob: -5.502917289733887
    6. '   ' → logprob: -7.502917289733887
    7. '=' → logprob: -8.252917289733887
    8. ' +=' → logprob: -8.252917289733887
    9. ':return' → logprob: -8.377917289733887
    10. ' +' → logprob: -8.877917289733887

Token 685: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0628485232591629
    2. '       ' → logprob: -3.0628485679626465
    3. 'return' → logprob: -4.5628485679626465
    4. 'landing' → logprob: -6.4378485679626465
    5. '   ' → logprob: -6.9378485679626465
    6. '```' → logprob: -7.3128485679626465
    7. 'for' → logprob: -8.437848091125488
    8. ' return' → logprob: -9.812848091125488
    9. ' landing' → logprob: -9.937848091125488
    10. '#' → logprob: -10.437848091125488

Token 686: ' landing' (ID: 30271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15315793454647064
    2. '           ' → logprob: -2.528157949447632
    3. '       ' → logprob: -3.153157949447632
    4. 'landing' (adapté à ' landing') → logprob: -4.653157711029053
    5. '#' → logprob: -4.778157711029053
    6. ' return' → logprob: -7.028157711029053
    7. 'raise' → logprob: -7.778157711029053
    8. '   ' → logprob: -9.028158187866211
    9. ' landing' → logprob: -9.903158187866211
    10. '```' → logprob: -11.403158187866211

Token 687: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -4.36574100604048e-06
    2. '_height' → logprob: -13.375004768371582
    3. '   ' → logprob: -13.875004768371582
    4. '_line' → logprob: -15.125004768371582
    5. '_rows' → logprob: -15.250004768371582
    6. 'Row' → logprob: -15.750004768371582
    7. 'row' → logprob: -15.875004768371582
    8. '_ROW' → logprob: -16.000003814697266
    9. '_' → logprob: -16.125003814697266
    10. '
' → logprob: -16.375003814697266

Token 688: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16024473309516907
    2. ' =' → logprob: -1.9102447032928467
    3. '+=' → logprob: -11.535244941711426
    4. ' +=' → logprob: -12.285244941711426
    5. '   ' → logprob: -12.785244941711426
    6. '0' → logprob: -13.035244941711426
    7. '       ' → logprob: -14.785244941711426
    8. ' ' → logprob: -15.035244941711426
    9. 'import' → logprob: -15.785244941711426
    10. '           ' → logprob: -15.910244941711426

Token 689: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005651841638609767
    2. ' ' → logprob: -7.500565052032471
    3. 'HEIGHT' → logprob: -11.500565528869629
    4. '   ' → logprob: -13.938065528869629
    5. ' HEIGHT' → logprob: -15.375565528869629
    6. '=' → logprob: -15.938065528869629
    7. '-' → logprob: -16.000564575195312
    8. '  ' → logprob: -16.313064575195312
    9. '           ' → logprob: -16.438064575195312
    10. '       ' → logprob: -16.563064575195312

Token 690: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016706773021724075
    2. ' ' → logprob: -8.875166893005371
    3. 'HEIGHT' → logprob: -11.125166893005371
    4. '-' → logprob: -11.750166893005371
    5. '   ' → logprob: -13.625166893005371
    6. ' -' → logprob: -14.250166893005371
    7. '  ' → logprob: -15.062666893005371
    8. '```' → logprob: -15.187666893005371
    9. 'height' → logprob: -15.437666893005371
    10. ' HEIGHT' → logprob: -15.687666893005371

Token 691: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010155507363379002
    2. 'for' → logprob: -4.63515567779541
    3. '
' → logprob: -8.13515567779541
    4. '   ' → logprob: -9.88515567779541
    5. '#' → logprob: -10.51015567779541
    6. ' for' → logprob: -11.13515567779541
    7. '        
' → logprob: -11.51015567779541
    8. '```' → logprob: -13.01015567779541
    9. 'while' → logprob: -14.38515567779541
    10. '           ' → logprob: -15.63515567779541

Token 692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6946994662284851
    2. 'for' → logprob: -0.6946994662284851
    3. '   ' → logprob: -6.569699287414551
    4. ' for' → logprob: -8.94469928741455
    5. '```' → logprob: -11.19469928741455
    6. '
' → logprob: -13.06969928741455
    7. '	for' → logprob: -13.94469928741455
    8. '#' → logprob: -14.31969928741455
    9. 'while' → logprob: -14.69469928741455
    10. '``' → logprob: -15.56969928741455

Token 693: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007257753168232739
    2. '       ' → logprob: -7.250725746154785
    3. '#' (adapté à ' #') → logprob: -11.500725746154785
    4. ' for' → logprob: -12.125725746154785
    5. '   ' → logprob: -15.375725746154785
    6. '	for' → logprob: -18.2507266998291
    7. '```' → logprob: -18.2507266998291
    8. '
' → logprob: -19.0007266998291
    9. '``' → logprob: -20.3757266998291
    10. '        
' → logprob: -21.2507266998291

Token 694: ' place' (ID: 2475)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.468279752880335e-05
    2. '#' → logprob: -9.750064849853516
    3. '       ' → logprob: -12.000064849853516
    4. ' for' → logprob: -15.750064849853516
    5. '   ' → logprob: -17.000064849853516
    6. '
' → logprob: -17.875064849853516
    7. '```' → logprob: -20.500064849853516
    8. '	for' → logprob: -20.750064849853516
    9. '        
' → logprob: -21.250064849853516
    10. '           ' → logprob: -21.875064849853516

Token 695: ' block' (ID: 4355)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0658971443772316
    2. '       ' → logprob: -3.065897226333618
    3. ' for' → logprob: -4.065896987915039
    4. '   ' → logprob: -11.815896987915039
    5. 'block' → logprob: -13.440896987915039
    6. '```' → logprob: -13.565896987915039
    7. '	for' → logprob: -13.940896987915039
    8. '           ' → logprob: -14.065896987915039
    9. 'from' → logprob: -15.190896987915039
    10. ' ' → logprob: -15.315896987915039

Token 696: ' vertical' (ID: 17679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014458111487329006
    2. 'for' → logprob: -4.264458179473877
    3. ' for' → logprob: -8.139457702636719
    4. '   ' → logprob: -12.889457702636719
    5. '	for' → logprob: -16.38945770263672
    6. '           ' → logprob: -16.88945770263672
    7. ' ' → logprob: -17.38945770263672
    8. 'from' → logprob: -18.38945770263672
    9. '```' → logprob: -18.38945770263672
    10. '#' → logprob: -18.88945770263672

Token 697: ' at' (ID: 540)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0060012019239366055
    2. '       ' → logprob: -5.506000995635986
    3. ' for' → logprob: -6.256000995635986
    4. '   ' → logprob: -13.881001472473145
    5. '```' → logprob: -14.506001472473145
    6. '	for' → logprob: -15.006001472473145
    7. '``' → logprob: -16.881000518798828
    8. '           ' → logprob: -17.506000518798828
    9. ',' → logprob: -17.881000518798828
    10. 'from' → logprob: -18.006000518798828

Token 698: ' landing' (ID: 30271)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.3687363266944885
    2. 'for' → logprob: -1.3687362670898438
    3. ' for' → logprob: -3.9937362670898438
    4. 'range' → logprob: -4.243736267089844
    5. ' landing' → logprob: -4.243736267089844
    6. 'row' → logprob: -6.118736267089844
    7. 'rows' → logprob: -6.743736267089844
    8. 'land' → logprob: -7.493736267089844
    9. ' range' → logprob: -7.618736267089844
    10. 'board' → logprob: -7.743736267089844

Token 699: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0018127481453120708
    2. 'row' → logprob: -6.376812934875488
    3. '[row' → logprob: -10.376812934875488
    4. 'for' → logprob: -11.126812934875488
    5. '_rows' → logprob: -11.876812934875488
    6. '_height' → logprob: -12.001812934875488
    7. '```' → logprob: -12.001812934875488
    8. '[' → logprob: -12.126812934875488
    9. ' =' → logprob: -12.251812934875488
    10. '_' → logprob: -12.251812934875488

Token 700: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048750076442956924
    2. 'for' → logprob: -3.048750162124634
    3. ' for' → logprob: -8.798749923706055
    4. '   ' → logprob: -11.423749923706055
    5. '	for' → logprob: -14.798749923706055
    6. '           ' → logprob: -16.673749923706055
    7. '```' → logprob: -16.673749923706055
    8. ' ' → logprob: -17.798749923706055
    9. '
' → logprob: -18.048749923706055
    10. '	' → logprob: -18.173749923706055

Token 701: ' landing' (ID: 30271)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.000275040598353371
    2. ' landing' → logprob: -8.375274658203125
    3. 'land' → logprob: -10.750274658203125
    4. '   ' → logprob: -11.500274658203125
    5. '```' → logprob: -11.500274658203125
    6. '(' → logprob: -13.625274658203125
    7. '`' → logprob: -14.625274658203125
    8. 'lands' → logprob: -15.125274658203125
    9. 'launch' → logprob: -16.125274658203125
    10. '
' → logprob: -16.125274658203125

Token 702: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -2.2127087504486553e-05
    2. 'row' → logprob: -10.875021934509277
    3. '+' → logprob: -13.375021934509277
    4. '```' → logprob: -14.625021934509277
    5. '   ' → logprob: -15.500021934509277
    6. '_ROW' → logprob: -15.750021934509277
    7. 'Row' → logprob: -15.875021934509277
    8. '_rows' → logprob: -16.250022888183594
    9. '_' → logprob: -16.375022888183594
    10. '_line' → logprob: -16.375022888183594

Token 703: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017568140756338835
    2. ' +' → logprob: -6.62675666809082
    3. '+p' → logprob: -7.75175666809082
    4. '```' → logprob: -14.75175666809082
    5. 'plus' → logprob: -15.62675666809082
    6. '＋' → logprob: -16.75175666809082
    7. '+l' → logprob: -17.00175666809082
    8. '   ' → logprob: -17.25175666809082
    9. '+
' → logprob: -17.37675666809082
    10. ' ' → logprob: -17.62675666809082

Token 704: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007104054093360901
    2. ' p' → logprob: -7.250710487365723
    3. '(p' → logprob: -14.750710487365723
    4. ' (' → logprob: -17.250709533691406
    5. '   ' → logprob: -19.375709533691406
    6. '<p' → logprob: -19.625709533691406
    7. '	p' → logprob: -20.000709533691406
    8. '`' → logprob: -20.375709533691406
    9. ' ' → logprob: -20.500709533691406
    10. '```' → logprob: -20.625709533691406

Token 705: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04878652095794678
    2. ' -' → logprob: -3.0487866401672363
    3. '<|end|>' → logprob: -9.423786163330078
    4. '```' → logprob: -9.548786163330078
    5. ' ' → logprob: -10.673786163330078
    6. '<|end|>' → logprob: -12.173786163330078
    7. 'for' → logprob: -12.423786163330078
    8. '
' → logprob: -12.798786163330078
    9. ')' → logprob: -13.548786163330078
    10. '       ' → logprob: -13.673786163330078

Token 706: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -18.250011444091797
    4. '<|end|>' → logprob: -18.500011444091797
    5. '   ' → logprob: -19.625011444091797
    6. '+' → logprob: -20.375011444091797
    7. '-' → logprob: -21.000011444091797
    8. '<|end|>' → logprob: -21.250011444091797
    9. '2' → logprob: -21.375011444091797
    10. '۱' → logprob: -21.625011444091797

Token 707: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07078864425420761
    2. 'for' → logprob: -3.070788621902466
    3. ' for' → logprob: -3.820788621902466
    4. '   ' → logprob: -10.070788383483887
    5. ',' → logprob: -13.320788383483887
    6. '	for' → logprob: -14.195788383483887
    7. '           ' → logprob: -14.445788383483887
    8. '```' → logprob: -14.570788383483887
    9. ' ' → logprob: -15.570788383483887
    10. '<|end|>' → logprob: -16.070789337158203

Token 708: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008553110994398594
    2. 'for' → logprob: -5.2585530281066895
    3. ' for' → logprob: -5.7585530281066895
    4. '   ' → logprob: -8.758553504943848
    5. '
' → logprob: -14.758553504943848
    6. '	for' → logprob: -15.383553504943848
    7. '```' → logprob: -15.508553504943848
    8. ' ' → logprob: -16.13355255126953
    9. '           ' → logprob: -16.75855255126953
    10. ',' → logprob: -17.88355255126953

Token 709: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007697956636548042
    2. '       ' → logprob: -5.257698059082031
    3. ' for' → logprob: -6.007698059082031
    4. '   ' → logprob: -14.007698059082031
    5. '```' → logprob: -14.757698059082031
    6. '	for' → logprob: -16.00769805908203
    7. '
' → logprob: -18.38269805908203
    8. '``' → logprob: -18.88269805908203
    9. ' ' → logprob: -19.75769805908203
    10. '           ' → logprob: -19.88269805908203

Token 710: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008850566111505032
    2. 'i' → logprob: -5.508850574493408
    3. 'row' → logprob: -5.633850574493408
    4. ' r' → logprob: -6.883850574493408
    5. ' i' → logprob: -9.25885009765625
    6. ' row' → logprob: -9.63385009765625
    7. 'cell' → logprob: -14.38385009765625
    8. 'pos' → logprob: -15.63385009765625
    9. '   ' → logprob: -16.00885009765625
    10. '```' → logprob: -16.63385009765625

Token 711: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020549828186631203
    2. 'in' → logprob: -3.895549774169922
    3. ' ' → logprob: -13.645549774169922
    4. 'i' → logprob: -14.020549774169922
    5. '[' → logprob: -14.270549774169922
    6. '```' → logprob: -14.270549774169922
    7. 's' → logprob: -14.395549774169922
    8. 'n' → logprob: -14.520549774169922
    9. 'range' → logprob: -14.520549774169922
    10. '	in' → logprob: -14.645549774169922

Token 712: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. '(range' → logprob: -18.751171112060547
    4. '	range' → logprob: -21.001171112060547
    5. '   ' → logprob: -23.001171112060547
    6. 'rang' → logprob: -23.626171112060547
    7. 'Range' → logprob: -23.876171112060547
    8. '```' → logprob: -23.876171112060547
    9. '
' → logprob: -24.126171112060547
    10. '.range' → logprob: -24.376171112060547

Token 713: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005945033393800259
    2. 'landing' → logprob: -5.130945205688477
    3. ' landing' → logprob: -11.630945205688477
    4. ' (' → logprob: -12.380945205688477
    5. 'land' → logprob: -12.755945205688477
    6. '```' → logprob: -16.255945205688477
    7. '   ' → logprob: -16.380945205688477
    8. '(
' → logprob: -16.505945205688477
    9. 'lan' → logprob: -16.630945205688477
    10. 'Landing' → logprob: -16.755945205688477

Token 714: 'landing' (ID: 96238)
  Prédit: 'landing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' → logprob: -2.6656825866666622e-05
    2. ' landing' → logprob: -10.62502670288086
    3. 'land' → logprob: -13.00002670288086
    4. '   ' → logprob: -17.50002670288086
    5. '```' → logprob: -17.50002670288086
    6. '
' → logprob: -18.75002670288086
    7. '[' → logprob: -19.25002670288086
    8. 'loading' → logprob: -19.62502670288086
    9. '       ' → logprob: -19.75002670288086
    10. 'launch' → logprob: -19.75002670288086

Token 715: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -3.8889261304575484e-06
    2. 'row' → logprob: -13.125003814697266
    3. '_line' → logprob: -14.250003814697266
    4. '_col' → logprob: -15.125003814697266
    5. 'ow' → logprob: -15.375003814697266
    6. '_rows' → logprob: -16.500003814697266
    7. ',' → logprob: -16.500003814697266
    8. 'r' → logprob: -16.750003814697266
    9. ',row' → logprob: -16.750003814697266
    10. '_ROW' → logprob: -17.000003814697266

Token 716: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003510741807986051
    2. ' ,' → logprob: -8.000350952148438
    3. ',
' → logprob: -11.250350952148438
    4. '   ' → logprob: -14.625350952148438
    5. '```' → logprob: -14.875350952148438
    6. '<|end|>' → logprob: -15.125350952148438
    7. ',r' → logprob: -15.250350952148438
    8. '
' → logprob: -15.625350952148438
    9. ',

' → logprob: -16.000350952148438
    10. '[' → logprob: -16.125350952148438

Token 717: ' landing' (ID: 30271)
  Prédit: 'landing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'landing' → logprob: -0.018189162015914917
    2. ' landing' → logprob: -4.018188953399658
    3. 'land' → logprob: -10.643189430236816
    4. '   ' → logprob: -11.393189430236816
    5. 'Landing' → logprob: -13.643189430236816
    6. ' ' → logprob: -14.018189430236816
    7. '       ' → logprob: -14.143189430236816
    8. '           ' → logprob: -14.893189430236816
    9. '```' → logprob: -14.893189430236816
    10. 'launch' → logprob: -15.393189430236816

Token 718: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0005965200834907591
    2. '+' → logprob: -8.000596046447754
    3. ' +' → logprob: -9.125596046447754
    4. '_height' → logprob: -9.750596046447754
    5. 'row' → logprob: -10.250596046447754
    6. 'landing' → logprob: -11.000596046447754
    7. '_line' → logprob: -11.750596046447754
    8. 'ing' → logprob: -12.000596046447754
    9. '+[' → logprob: -12.500596046447754
    10. '[' → logprob: -12.500596046447754

Token 719: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20144258439540863
    2. ' +' → logprob: -1.7014425992965698
    3. '+p' → logprob: -10.82644271850586
    4. '+
' → logprob: -12.45144271850586
    5. ' +
' → logprob: -13.70144271850586
    6. ' ' → logprob: -13.82644271850586
    7. ' ' → logprob: -14.07644271850586
    8. '```' → logprob: -14.20144271850586
    9. '   ' → logprob: -14.57644271850586
    10. ',' → logprob: -14.95144271850586

Token 720: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.836499985889532e-05
    2. ' p' → logprob: -9.7500581741333
    3. '```' → logprob: -18.250059127807617
    4. ' ' → logprob: -18.875059127807617
    5. '<p' → logprob: -19.125059127807617
    6. '
' → logprob: -19.625059127807617
    7. '   ' → logprob: -19.750059127807617
    8. ')p' → logprob: -20.000059127807617
    9. '(p' → logprob: -20.125059127807617
    10. '1' → logprob: -20.125059127807617

Token 721: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20154763758182526
    2. '):
' → logprob: -1.701547622680664
    3. '):
' → logprob: -9.326547622680664
    4. ':' → logprob: -11.326547622680664
    5. '[' → logprob: -11.326547622680664
    6. ' ):' → logprob: -11.701547622680664
    7. '   ' → logprob: -12.451547622680664
    8. ')' → logprob: -13.326547622680664
    9. '```' → logprob: -13.326547622680664
    10. '):

' → logprob: -14.076547622680664

Token 722: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009075298439711332
    2. '   ' → logprob: -7.2509074211120605
    3. '```' → logprob: -9.125907897949219
    4. '       ' → logprob: -9.875907897949219
    5. 'board' → logprob: -11.500907897949219
    6. '               ' → logprob: -11.750907897949219
    7. ' board' → logprob: -12.125907897949219
    8. '[' → logprob: -12.500907897949219
    9. '	board' → logprob: -12.500907897949219
    10. '		' → logprob: -13.750907897949219

Token 723: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.007723860442638397
    2. ' board' → logprob: -5.257723808288574
    3. '           ' → logprob: -6.007723808288574
    4. '   ' → logprob: -11.757723808288574
    5. '       ' → logprob: -11.882723808288574
    6. '	board' → logprob: -11.882723808288574
    7. '               ' → logprob: -12.257723808288574
    8. '(board' → logprob: -14.632723808288574
    9. '.board' → logprob: -15.757723808288574
    10. ' ' → logprob: -16.25772476196289

Token 724: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.534558552724775e-05
    2. '[row' → logprob: -10.875025749206543
    3. '[' → logprob: -12.375025749206543
    4. 'r' → logprob: -13.875025749206543
    5. '```' → logprob: -14.500025749206543
    6. '[][' → logprob: -16.375024795532227
    7. ' [' → logprob: -16.500024795532227
    8. '][' → logprob: -16.625024795532227
    9. '       ' → logprob: -16.875024795532227
    10. '   ' → logprob: -17.375024795532227

Token 725: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005447674077004194
    2. '[q' → logprob: -5.255447864532471
    3. '[' → logprob: -8.755447387695312
    4. ']' → logprob: -10.505447387695312
    5. ' ][' → logprob: -11.005447387695312
    6. ')[' → logprob: -12.755447387695312
    7. '```' → logprob: -13.380447387695312
    8. '   ' → logprob: -14.255447387695312
    9. '       ' → logprob: -14.255447387695312
    10. '[r' → logprob: -14.380447387695312

Token 726: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.7432603272027336e-06
    2. '[q' → logprob: -13.750001907348633
    3. ' q' → logprob: -14.500001907348633
    4. '	q' → logprob: -17.375001907348633
    5. '[' → logprob: -18.125001907348633
    6. '
' → logprob: -18.500001907348633
    7. 'qml' → logprob: -18.625001907348633
    8. '$q' → logprob: -19.000001907348633
    9. '?q' → logprob: -19.375001907348633
    10. '```' → logprob: -19.500001907348633

Token 727: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004303003195673227
    2. '=' → logprob: -5.754302978515625
    3. ']=' → logprob: -6.879302978515625
    4. ' =' → logprob: -9.629302978515625
    5. ' ]' → logprob: -10.504302978515625
    6. ')' → logprob: -13.379302978515625
    7. '[' → logprob: -14.754302978515625
    8. '<|end|>' → logprob: -15.629302978515625
    9. '=True' → logprob: -15.754302978515625
    10. '][' → logprob: -16.254302978515625

Token 728: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031802060548216105
    2. ' =' → logprob: -5.753180027008057
    3. '[' → logprob: -13.628180503845215
    4. ']' → logprob: -14.503180503845215
    5. '=True' → logprob: -14.878180503845215
    6. ']=' → logprob: -15.003180503845215
    7. '=
' → logprob: -16.1281795501709
    8. '=

' → logprob: -18.3781795501709
    9. '[
' → logprob: -20.0031795501709
    10. ',' → logprob: -20.1281795501709

Token 729: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0015023599844425917
    2. ' True' → logprob: -6.501502513885498
    3. '(True' → logprob: -20.751502990722656
    4. '=True' → logprob: -21.876502990722656
    5. '1' → logprob: -24.001502990722656
    6. '.True' → logprob: -24.751502990722656
    7. 'False' → logprob: -25.751502990722656
    8. 'true' → logprob: -26.376502990722656
    9. 'TRUE' → logprob: -26.501502990722656
    10. ' ' → logprob: -26.626502990722656

Token 730: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.826786994934082
    2. '   ' → logprob: -0.951786994934082
    3. 'clear' → logprob: -1.951786994934082
    4. 'def' → logprob: -3.451786994934082
    5. '       ' → logprob: -6.826786994934082
    6. ' clear' → logprob: -6.826786994934082
    7. '```' → logprob: -8.826786994934082
    8. '    
' → logprob: -9.326786994934082
    9. '	clear' → logprob: -9.451786994934082
    10. '.clear' → logprob: -9.451786994934082

Token 731: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08258774876594543
    2. '   ' → logprob: -2.707587718963623
    3. 'clear' → logprob: -4.707587718963623
    4. '
' → logprob: -5.832587718963623
    5. 'return' → logprob: -8.582588195800781
    6. '```' → logprob: -9.082588195800781
    7. '       ' → logprob: -9.207588195800781
    8. '    
' → logprob: -9.332588195800781
    9. ' clear' → logprob: -9.832588195800781
    10. '	clear' → logprob: -11.582588195800781

Token 732: ' clear' (ID: 5364)
  Prédit: 'clear'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clear' (adapté à ' clear') → logprob: -0.10808134078979492
    2. '   ' → logprob: -2.858081340789795
    3. ' clear' → logprob: -3.108081340789795
    4. '
' → logprob: -7.983081340789795
    5. '```' → logprob: -10.733081817626953
    6. '	clear' → logprob: -11.483081817626953
    7. '       ' → logprob: -13.108081817626953
    8. '.clear' → logprob: -13.483081817626953
    9. 'def' → logprob: -13.858081817626953
    10. '``' → logprob: -13.983081817626953

Token 733: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -2.2246291337069124e-05
    2. '_' → logprob: -11.250021934509277
    3. '_line' → logprob: -11.750021934509277
    4. '_l' → logprob: -15.000021934509277
    5. ' _' → logprob: -15.750021934509277
    6. '```' → logprob: -15.750021934509277
    7. '_LINES' → logprob: -15.875021934509277
    8. '_li' → logprob: -16.000022888183594
    9. '(_' → logprob: -16.500022888183594
    10. '_layers' → logprob: -16.500022888183594

Token 734: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.875000953674316
    3. '(block' → logprob: -16.750001907348633
    4. '(Board' → logprob: -16.875001907348633
    5. '(
' → logprob: -17.125001907348633
    6. '(bank' → logprob: -17.375001907348633
    7. '(deck' → logprob: -18.500001907348633
    8. '(b' → logprob: -19.125001907348633
    9. '(box' → logprob: -19.500001907348633
    10. '(body' → logprob: -19.625001907348633

Token 735: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020634382963180542
    2. '(board' → logprob: -3.895634412765503
    3. '(' → logprob: -10.520634651184082
    4. '   ' → logprob: -10.645634651184082
    5. ' )' → logprob: -11.270634651184082
    6. ')
' → logprob: -11.395634651184082
    7. '()' → logprob: -12.770634651184082
    8. '())' → logprob: -13.270634651184082
    9. '```' → logprob: -13.395634651184082
    10. '[' → logprob: -13.520634651184082

Token 736: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2471589798224159e-05
    2. '```' → logprob: -11.625012397766113
    3. '
' → logprob: -12.750012397766113
    4. '``' → logprob: -15.750012397766113
    5. ' def' → logprob: -15.750012397766113
    6. 'import' → logprob: -15.875012397766113
    7. '    
' → logprob: -17.00001335144043
    8. '  
' → logprob: -17.87501335144043
    9. 'python' → logprob: -18.37501335144043
    10. '\' → logprob: -18.75001335144043

Token 737: ' clear' (ID: 5364)
  Prédit: 'clear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'clear' → logprob: -0.12693022191524506
    2. ' clear' → logprob: -2.1269302368164062
    3. '_clear' → logprob: -14.001930236816406
    4. '	clear' → logprob: -14.501930236816406
    5. 'def' → logprob: -15.376930236816406
    6. '(clear' → logprob: -15.501930236816406
    7. 'main' → logprob: -16.126930236816406
    8. '.clear' → logprob: -16.626930236816406
    9. ' ' → logprob: -17.126930236816406
    10. ' main' → logprob: -17.376930236816406

Token 738: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.250000953674316
    3. '_line' → logprob: -15.250000953674316
    4. '_rows' → logprob: -17.0
    5. '_LINES' → logprob: -17.25
    6. 'def' → logprob: -17.5
    7. '_blocks' → logprob: -18.625
    8. '\' → logprob: -19.125
    9. '```' → logprob: -19.125
    10. 'lines' → logprob: -19.25

Token 739: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: 0.0
    2. '(' → logprob: -18.5
    3. '(block' → logprob: -19.125
    4. '(b' → logprob: -19.125
    5. ' (' → logprob: -19.25
    6. '(Board' → logprob: -19.5
    7. '(deck' → logprob: -20.125
    8. '(box' → logprob: -20.625
    9. '(bank' → logprob: -20.75
    10. '(body' → logprob: -21.625

Token 740: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4928765892982483
    2. '):' → logprob: -0.9928765892982483
    3. '(board' → logprob: -3.9928765296936035
    4. '):

' → logprob: -9.617877006530762
    5. '):
' → logprob: -9.867877006530762
    6. ',' → logprob: -10.742877006530762
    7. '   ' → logprob: -11.117877006530762
    8. 'board' → logprob: -11.742877006530762
    9. ')' → logprob: -11.867877006530762
    10. 'def' → logprob: -13.117877006530762

Token 741: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021587067749351263
    2. ' for' → logprob: -7.2521586418151855
    3. 'for' → logprob: -7.6271586418151855
    4. 'def' → logprob: -7.7521586418151855
    5. '```' → logprob: -8.127159118652344
    6. '
' → logprob: -9.752159118652344
    7. 'rows' → logprob: -10.627159118652344
    8. 'max' → logprob: -10.752159118652344
    9. ' lines' → logprob: -11.002159118652344
    10. 'empty' → logprob: -11.002159118652344

Token 742: ' """
' (ID: 7037)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.46773532032966614
    2. '   ' → logprob: -1.3427352905273438
    3. 'filled' → logprob: -2.9677352905273438
    4. 'rows' → logprob: -3.8427352905273438
    5. 'global' → logprob: -4.092735290527344
    6. 'def' → logprob: -4.717735290527344
    7. '#' → logprob: -5.842735290527344
    8. 'lines' → logprob: -5.967735290527344
    9. 'row' → logprob: -6.092735290527344
    10. ' full' → logprob: -6.592735290527344

Token 743: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005765845999121666
    2. '#' → logprob: -5.380765914916992
    3. '"""
' → logprob: -7.380765914916992
    4. '"""' → logprob: -8.255765914916992
    5. '```' → logprob: -9.505765914916992
    6. 'def' → logprob: -9.505765914916992
    7. 'for' → logprob: -10.505765914916992
    8. ' #' → logprob: -10.630765914916992
    9. 'rows' → logprob: -11.380765914916992
    10. ' """
' → logprob: -11.630765914916992

Token 744: ' Check' (ID: 6208)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.5144822597503662
    2. '#' → logprob: -1.8894822597503662
    3. 'def' → logprob: -2.389482259750366
    4. 'filled' → logprob: -2.889482259750366
    5. 'rows' → logprob: -3.014482259750366
    6. 'non' → logprob: -3.764482259750366
    7. 'empty' → logprob: -4.889482498168945
    8. 'occupied' → logprob: -5.014482498168945
    9. 'lines' → logprob: -5.514482498168945
    10. ' full' → logprob: -5.514482498168945

Token 745: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.658929169178009
    2. '   ' → logprob: -1.0339291095733643
    3. ' for' → logprob: -3.1589291095733643
    4. 'board' → logprob: -3.2839291095733643
    5. '
' → logprob: -4.283929347991943
    6. 'rows' → logprob: -4.408929347991943
    7. 'def' → logprob: -4.533929347991943
    8. '```' → logprob: -5.408929347991943
    9. 'lines' → logprob: -5.908929347991943
    10. '    
' → logprob: -7.158929347991943

Token 746: ' full' (ID: 3149)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.5648012161254883
    2. ' full' → logprob: -1.8148012161254883
    3. 'full' → logprob: -2.5648012161254883
    4. ' complete' → logprob: -3.0648012161254883
    5. ' row' → logprob: -3.1898012161254883
    6. 'complete' → logprob: -3.4398012161254883
    7. 'rows' → logprob: -3.4398012161254883
    8. 'completed' → logprob: -4.314801216125488
    9. ' rows' → logprob: -4.439801216125488
    10. ' completed' → logprob: -5.689801216125488

Token 747: ' rows' (ID: 13585)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.968206524848938
    2. ' rows' → logprob: -1.343206524848938
    3. '_lines' → logprob: -1.843206524848938
    4. 'rows' → logprob: -2.5932064056396484
    5. '_rows' → logprob: -2.5932064056396484
    6. 'lines' → logprob: -3.8432064056396484
    7. 'def' → logprob: -3.9682064056396484
    8. '   ' → logprob: -4.843206405639648
    9. 'board' → logprob: -6.968206405639648
    10. ' for' → logprob: -7.593206405639648

Token 748: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04454457014799118
    2. 'def' → logprob: -4.294544696807861
    3. '(board' → logprob: -4.419544696807861
    4. 'and' → logprob: -5.169544696807861
    5. ' and' → logprob: -5.169544696807861
    6. 'for' → logprob: -5.919544696807861
    7. ' for' → logprob: -6.544544696807861
    8. ' at' → logprob: -7.419544696807861
    9. ' that' → logprob: -7.544544696807861
    10. ',' → logprob: -8.044544219970703

Token 749: ' clear' (ID: 5364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04395473003387451
    2. '   ' → logprob: -4.668954849243164
    3. '
' → logprob: -5.043954849243164
    4. '#' → logprob: -5.168954849243164
    5. 'rows' → logprob: -5.543954849243164
    6. ' new' → logprob: -6.418954849243164
    7. ' for' → logprob: -6.543954849243164
    8. 'new' → logprob: -6.543954849243164
    9. 'remove' → logprob: -6.543954849243164
    10. 'for' → logprob: -6.543954849243164

Token 750: ' them' (ID: 1373)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09549003839492798
    2. ' the' → logprob: -3.845489978790283
    3. 'the' → logprob: -4.095489978790283
    4. '
' → logprob: -4.470489978790283
    5. 'for' → logprob: -4.845489978790283
    6. 'rows' → logprob: -5.220489978790283
    7. ' for' → logprob: -5.220489978790283
    8. 'lines' → logprob: -5.470489978790283
    9. ' lines' → logprob: -5.470489978790283
    10. 'board' → logprob: -5.595489978790283

Token 751: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05658702552318573
    2. '(board' → logprob: -3.681586980819702
    3. ':' → logprob: -4.556587219238281
    4. ':
' → logprob: -4.806587219238281
    5. 'def' → logprob: -5.181587219238281
    6. ',' → logprob: -5.556587219238281
    7. '(' → logprob: -7.556587219238281
    8. ' and' → logprob: -8.556587219238281
    9. '
' → logprob: -8.681587219238281
    10. 'and' → logprob: -9.306587219238281

Token 752: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022826455533504486
    2. 'for' → logprob: -6.752282619476318
    3. ' for' → logprob: -7.627282619476318
    4. 'def' → logprob: -7.752282619476318
    5. '
' → logprob: -9.127283096313477
    6. '    
' → logprob: -10.877283096313477
    7. ' full' → logprob: -11.252283096313477
    8. '```' → logprob: -11.502283096313477
    9. 'rows' → logprob: -11.877283096313477
    10. 'full' → logprob: -12.002283096313477

Token 753: ' Rows' (ID: 153767)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6397916078567505
    2. 'full' → logprob: -1.2647916078567505
    3. ' full' → logprob: -3.014791488647461
    4. 'for' → logprob: -3.264791488647461
    5. 'def' → logprob: -3.389791488647461
    6. ' for' → logprob: -3.889791488647461
    7. 'rows' → logprob: -4.014791488647461
    8. 'filled' → logprob: -4.389791488647461
    9. 'non' → logprob: -5.014791488647461
    10. ' rows' → logprob: -6.139791488647461

Token 754: ' above' (ID: 5151)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31808599829673767
    2. '=' → logprob: -1.69308602809906
    3. '   ' → logprob: -4.06808614730835
    4. 'with' → logprob: -4.31808614730835
    5. 'def' → logprob: -4.44308614730835
    6. '_to' → logprob: -4.81808614730835
    7. ' that' → logprob: -5.06808614730835
    8. ' are' → logprob: -5.06808614730835
    9. 'are' → logprob: -5.44308614730835
    10. ' to' → logprob: -5.81808614730835

Token 755: ' lines' (ID: 8698)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1101206541061401
    2. ' the' → logprob: -1.6101206541061401
    3. 'the' → logprob: -1.6101206541061401
    4. ' =' → logprob: -1.8601206541061401
    5. ' cleared' → logprob: -3.1101207733154297
    6. 'def' → logprob: -4.23512077331543
    7. 'that' → logprob: -4.61012077331543
    8. '   ' → logprob: -4.61012077331543
    9. ' that' → logprob: -4.86012077331543
    10. ' to' → logprob: -5.48512077331543

Token 756: ' cleared' (ID: 42261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4218565225601196
    2. ' =' → logprob: -1.4218565225601196
    3. 'cle' → logprob: -1.9218565225601196
    4. 'with' → logprob: -2.54685640335083
    5. '   ' → logprob: -2.79685640335083
    6. 'that' → logprob: -3.04685640335083
    7. 'to' → logprob: -3.42185640335083
    8. '_to' → logprob: -3.42185640335083
    9. ' to' → logprob: -3.67185640335083
    10. ' that' → logprob: -3.79685640335083

Token 757: ' will' (ID: 738)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.279110074043274
    2. '   ' → logprob: -1.404110074043274
    3. '=' → logprob: -1.654110074043274
    4. ' are' → logprob: -2.4041099548339844
    5. 'def' → logprob: -2.5291099548339844
    6. 'are' → logprob: -2.9041099548339844
    7. ' that' → logprob: -4.529109954833984
    8. ' for' → logprob: -4.529109954833984
    9. 'for' → logprob: -4.654109954833984
    10. ' to' → logprob: -5.154109954833984

Token 758: ' fall' (ID: 5617)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.5773136019706726
    2. 'be' → logprob: -0.8273136019706726
    3. '=' → logprob: -7.702313423156738
    4. 'move' → logprob: -8.452313423156738
    5. ' move' → logprob: -8.702313423156738
    6. '	be' → logprob: -8.827313423156738
    7. 'remain' → logprob: -9.577313423156738
    8. 'shift' → logprob: -10.077313423156738
    9. '_be' → logprob: -10.077313423156738
    10. 'def' → logprob: -10.077313423156738

Token 759: ' down' (ID: 1917)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9529592990875244
    2. 'down' → logprob: -1.0779592990875244
    3. ' down' → logprob: -1.3279592990875244
    4. '
' → logprob: -5.702959060668945
    5. 'def' → logprob: -5.952959060668945
    6. ',' → logprob: -6.327959060668945
    7. ' ' → logprob: -8.077959060668945
    8. '    
' → logprob: -8.577959060668945
    9. '_down' → logprob: -8.702959060668945
    10. '=' → logprob: -9.327959060668945

Token 760: ' accordingly' (ID: 44041)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021194503642618656
    2. 'def' → logprob: -6.877119541168213
    3. '
' → logprob: -7.252119541168213
    4. ',' → logprob: -8.752119064331055
    5. 'for' → logprob: -10.127119064331055
    6. '(' → logprob: -10.127119064331055
    7. '```' → logprob: -10.127119064331055
    8. ':' → logprob: -10.877119064331055
    9. ' for' → logprob: -10.877119064331055
    10. ':
' → logprob: -11.502119064331055

Token 761: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009792207274585962
    2. 'def' → logprob: -8.25097942352295
    3. ':
' → logprob: -8.37597942352295
    4. ':' → logprob: -8.50097942352295
    5. '
' → logprob: -8.75097942352295
    6. '    
' → logprob: -10.50097942352295
    7. 'for' → logprob: -10.62597942352295
    8. '```' → logprob: -10.62597942352295
    9. ' for' → logprob: -11.37597942352295
    10. ',' → logprob: -11.37597942352295

Token 762: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004123192047700286
    2. '
' → logprob: -8.250411987304688
    3. '```' → logprob: -9.625411987304688
    4. 'def' → logprob: -10.125411987304688
    5. '    
' → logprob: -11.375411987304688
    6. ' for' → logprob: -11.875411987304688
    7. 'global' → logprob: -12.125411987304688
    8. 'for' → logprob: -12.875411987304688
    9. '   ' → logprob: -13.000411987304688
    10. ' global' → logprob: -13.125411987304688

Token 763: ' """

' (ID: 28800)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00613058777526021
    2. '
' → logprob: -5.131130695343018
    3. 'def' → logprob: -9.38113021850586
    4. '```' → logprob: -10.00613021850586
    5. '    
' → logprob: -10.63113021850586
    6. 'rows' → logprob: -11.38113021850586
    7. 'for' → logprob: -11.38113021850586
    8. 'global' → logprob: -11.88113021850586
    9. '
' → logprob: -12.38113021850586
    10. ' rows' → logprob: -13.00613021850586

Token 764: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2493409663438797
    2. 'full' → logprob: -1.9993410110473633
    3. 'rows' → logprob: -2.9993410110473633
    4. 'row' → logprob: -3.7493410110473633
    5. 'i' → logprob: -5.624341011047363
    6. 'global' → logprob: -6.499341011047363
    7. 'filled' → logprob: -6.499341011047363
    8. 'write' → logprob: -6.624341011047363
    9. 'new' → logprob: -6.874341011047363
    10. 'def' → logprob: -7.249341011047363

Token 765: ' #' (ID: 1069)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.5387340784072876
    2. 'rows' → logprob: -1.2887340784072876
    3. 'write' → logprob: -3.288733959197998
    4. 'new' → logprob: -3.288733959197998
    5. 'full' → logprob: -3.413733959197998
    6. 'for' → logprob: -4.038733959197998
    7. 'to' → logprob: -5.163733959197998
    8. 'r' → logprob: -5.288733959197998
    9. 'global' → logprob: -6.038733959197998
    10. 'filled' → logprob: -7.038733959197998

Token 766: ' We' (ID: 1416)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.41009265184402466
    2. 'full' → logprob: -2.16009259223938
    3. 'row' → logprob: -2.28509259223938
    4. 'to' → logprob: -3.41009259223938
    5. 'write' → logprob: -3.41009259223938
    6. 'new' → logprob: -3.91009259223938
    7. 'filled' → logprob: -4.035092830657959
    8. 'lines' → logprob: -5.160092830657959
    9. 'for' → logprob: -5.410092830657959
    10. 'cle' → logprob: -6.160092830657959

Token 767: ' traverse' (ID: 66957)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.292067289352417
    2. 'rows' → logprob: -1.542067289352417
    3. 'row' → logprob: -1.667067289352417
    4. 'write' → logprob: -2.167067289352417
    5. 'i' → logprob: -2.792067289352417
    6. '=' → logprob: -3.292067289352417
    7. 'n' → logprob: -3.792067289352417
    8. 'filled' → logprob: -4.042067527770996
    9. ' =' → logprob: -4.292067527770996
    10. 'def' → logprob: -4.667067527770996

Token 768: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7688376903533936
    2. 'row' → logprob: -1.1438376903533936
    3. 'from' → logprob: -1.8938376903533936
    4. ' for' → logprob: -3.7688376903533936
    5. 'board' → logprob: -4.143837928771973
    6. 'rows' → logprob: -4.768837928771973
    7. ' row' → logprob: -4.893837928771973
    8. ' from' → logprob: -5.018837928771973
    9. 'the' → logprob: -6.518837928771973
    10. 'range' → logprob: -6.768837928771973

Token 769: ' bottom' (ID: 8725)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2528309226036072
    2. 'HEIGHT' → logprob: -1.502830982208252
    3. 'BOTTOM' → logprob: -7.877830982208252
    4. 'bottom' → logprob: -8.002830505371094
    5. ' HEIGHT' → logprob: -9.377830505371094
    6. 'row' → logprob: -10.377830505371094
    7. 'height' → logprob: -10.752830505371094
    8. ' ' → logprob: -10.877830505371094
    9. 'len' → logprob: -12.252830505371094
    10. 'range' → logprob: -12.752830505371094

Token 770: ' (' (ID: 350)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6698776483535767
    2. ' to' → logprob: -1.0448776483535767
    3. 'row' → logprob: -2.794877529144287
    4. '=' → logprob: -3.294877529144287
    5. 'up' → logprob: -4.169877529144287
    6. ' up' → logprob: -4.419877529144287
    7. ' =' → logprob: -5.419877529144287
    8. ' row' → logprob: -5.544877529144287
    9. '   ' → logprob: -7.544877529144287
    10. 'in' → logprob: -8.044878005981445

Token 771: 'row' (ID: 843)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03955449163913727
    2. 'HEIGHT' → logprob: -3.2895545959472656
    3. 'row' → logprob: -6.664554595947266
    4. ' HEIGHT' → logprob: -9.789554595947266
    5. ' ' → logprob: -9.914554595947266
    6. 'bottom' → logprob: -10.289554595947266
    7. 'BOTTOM' → logprob: -10.414554595947266
    8. ' row' → logprob: -10.664554595947266
    9. 'range' → logprob: -11.289554595947266
    10. 'for' → logprob: -11.914554595947266

Token 772: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0056998236104846
    2. ' =' → logprob: -5.880699634552002
    3. '0' → logprob: -6.630699634552002
    4. 'HEIGHT' → logprob: -6.630699634552002
    5. ' in' → logprob: -9.63070011138916
    6. 'in' → logprob: -10.00570011138916
    7. ')' → logprob: -10.13070011138916
    8. 'to' → logprob: -10.25570011138916
    9. 'for' → logprob: -11.25570011138916
    10. ' to' → logprob: -11.63070011138916

Token 773: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0025018174201250076
    2. 'HEIGHT' → logprob: -6.002501964569092
    3. ' ' → logprob: -10.752501487731934
    4. ' HEIGHT' → logprob: -13.252501487731934
    5. '```' → logprob: -14.252501487731934
    6. '=' → logprob: -14.502501487731934
    7. '`' → logprob: -14.877501487731934
    8. '
' → logprob: -15.377501487731934
    9. 'for' → logprob: -15.377501487731934
    10. 'WIDTH' → logprob: -15.877501487731934

Token 774: ')' (ID: 8)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.279083788394928
    2. 'to' → logprob: -2.029083728790283
    3. ')' → logprob: -2.279083728790283
    4. ',' → logprob: -5.154083728790283
    5. '   ' → logprob: -6.529083728790283
    6. ' for' → logprob: -7.529083728790283
    7. 'for' → logprob: -7.904083728790283
    8. '):
' → logprob: -8.154084205627441
    9. ' up' → logprob: -8.154084205627441
    10. '
' → logprob: -8.154084205627441

Token 775: ' upwards' (ID: 81327)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6197647452354431
    2. 'to' → logprob: -0.8697647452354431
    3. 'up' → logprob: -4.244764804840088
    4. ' up' → logprob: -4.994764804840088
    5. 'for' → logprob: -4.994764804840088
    6. '   ' → logprob: -5.119764804840088
    7. 'row' → logprob: -5.619764804840088
    8. ' for' → logprob: -5.744764804840088
    9. ' upwards' → logprob: -6.494764804840088
    10. ' row' → logprob: -7.869764804840088

Token 776: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5930382013320923
    2. '   ' → logprob: -1.2180382013320923
    3. '
' → logprob: -2.3430380821228027
    4. 'for' → logprob: -3.3430380821228027
    5. 'row' → logprob: -5.218038082122803
    6. ' row' → logprob: -5.218038082122803
    7. ' to' → logprob: -5.718038082122803
    8. '```' → logprob: -5.843038082122803
    9. ',' → logprob: -6.343038082122803
    10. 'rows' → logprob: -8.343038558959961

Token 777: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03815796226263046
    2. ' for' → logprob: -3.5381579399108887
    3. 'for' → logprob: -5.288157939910889
    4. 'row' → logprob: -6.538157939910889
    5. ' row' → logprob: -6.788157939910889
    6. '```' → logprob: -8.038158416748047
    7. '
' → logprob: -8.788158416748047
    8. 'rows' → logprob: -9.413158416748047
    9. ',' → logprob: -10.163158416748047
    10. ' rows' → logprob: -10.413158416748047

Token 778: ' write' (ID: 5067)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.09243012219667435
    2. 'for' → logprob: -3.2174301147460938
    3. 'write' (adapté à ' write') → logprob: -3.5924301147460938
    4. '   ' → logprob: -4.467430114746094
    5. 'rows' → logprob: -5.967430114746094
    6. 'r' → logprob: -6.467430114746094
    7. 'new' → logprob: -6.967430114746094
    8. ' row' → logprob: -7.092430114746094
    9. 'current' → logprob: -7.092430114746094
    10. ' for' → logprob: -7.592430114746094

Token 779: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.00391964940354228
    2. '_ptr' → logprob: -6.25391960144043
    3. '_idx' → logprob: -7.37891960144043
    4. '_pointer' → logprob: -7.87891960144043
    5. '=' → logprob: -8.00391960144043
    6. '_pos' → logprob: -8.37891960144043
    7. ' =' → logprob: -8.50391960144043
    8. '_index' → logprob: -8.75391960144043
    9. '_' → logprob: -10.37891960144043
    10. 'row' → logprob: -11.25391960144043

Token 780: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11282453685998917
    2. ' =' → logprob: -2.2378244400024414
    3. '=
' → logprob: -13.987824440002441
    4. ',' → logprob: -14.987824440002441
    5. '=row' → logprob: -15.612824440002441
    6. '＝' → logprob: -15.737824440002441
    7. ')' → logprob: -15.862824440002441
    8. ' ' → logprob: -15.987824440002441
    9. '=int' → logprob: -16.112825393676758
    10. '<|end|>' → logprob: -16.237825393676758

Token 781: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.943783253314905e-05
    2. ' ' → logprob: -9.750059127807617
    3. 'HEIGHT' → logprob: -14.000059127807617
    4. '۰' → logprob: -16.250059127807617
    5. '[' → logprob: -16.937559127807617
    6. '   ' → logprob: -17.250059127807617
    7. '=' → logprob: -17.437559127807617
    8. '```' → logprob: -18.062559127807617
    9. '000' → logprob: -18.125059127807617
    10. ' HEIGHT' → logprob: -18.187559127807617

Token 782: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.125005722045898
    3. 'HEIGHT' → logprob: -15.375005722045898
    4. '[' → logprob: -16.5000057220459
    5. '   ' → logprob: -16.5625057220459
    6. '۰' → logprob: -17.0625057220459
    7. '000' → logprob: -18.0000057220459
    8. '```' → logprob: -18.0000057220459
    9. 'height' → logprob: -18.5000057220459
    10. '=' → logprob: -18.5625057220459

Token 783: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09893050789833069
    2. 'for' → logprob: -2.598930597305298
    3. ' for' → logprob: -3.973930597305298
    4. '   ' → logprob: -7.598930358886719
    5. 'while' → logprob: -7.848930358886719
    6. '  
' → logprob: -10.223930358886719
    7. ' while' → logprob: -10.473930358886719
    8. '    
' → logprob: -10.848930358886719
    9. '	for' → logprob: -11.348930358886719
    10. '\n' → logprob: -11.473930358886719

Token 784: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008210649830289185
    2. ' for' → logprob: -7.500821113586426
    3. '
' → logprob: -8.250821113586426
    4. '   ' → logprob: -13.000821113586426
    5. '```' → logprob: -13.000821113586426
    6. 'while' → logprob: -13.625821113586426
    7. 'row' → logprob: -14.500821113586426
    8. 'height' → logprob: -15.500821113586426
    9. 'read' → logprob: -16.00082015991211
    10. '	for' → logprob: -16.12582015991211

Token 785: ' position' (ID: 4010)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0004201866395305842
    2. ' for' → logprob: -8.625420570373535
    3. 'HEIGHT' → logprob: -9.000420570373535
    4. 'while' → logprob: -9.125420570373535
    5. '
' → logprob: -12.000420570373535
    6. '0' → logprob: -14.000420570373535
    7. '#' → logprob: -14.875420570373535
    8. 'height' → logprob: -15.500420570373535
    9. '   ' → logprob: -15.500420570373535
    10. 'write' → logprob: -15.750420570373535

Token 786: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6372078657150269
    2. 'to' → logprob: -1.2622078657150269
    3. '=' → logprob: -2.2622079849243164
    4. ' =' → logprob: -3.3872079849243164
    5. ' for' → logprob: -4.137207984924316
    6. ' to' → logprob: -4.387207984924316
    7. 'row' → logprob: -4.762207984924316
    8. 'in' → logprob: -5.137207984924316
    9. 'write' → logprob: -5.637207984924316
    10. '   ' → logprob: -6.762207984924316

Token 787: ' copy' (ID: 5150)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.0009056262206286192
    2. 'copy' → logprob: -7.250905513763428
    3. 'read' → logprob: -9.625905990600586
    4. '0' → logprob: -9.875905990600586
    5. 'fill' → logprob: -10.625905990600586
    6. 'place' → logprob: -10.875905990600586
    7. ' write' → logprob: -11.250905990600586
    8. 'check' → logprob: -11.750905990600586
    9. 'rewrite' → logprob: -11.750905990600586
    10. 'put' → logprob: -13.375905990600586

Token 788: ' rows' (ID: 13585)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15087063610553741
    2. 'row' → logprob: -2.6508705615997314
    3. ' for' → logprob: -3.2758705615997314
    4. 'while' → logprob: -4.2758708000183105
    5. 'write' → logprob: -5.0258708000183105
    6. '
' → logprob: -5.5258708000183105
    7. 'read' → logprob: -5.7758708000183105
    8. '=' → logprob: -6.0258708000183105
    9. ' =' → logprob: -8.025870323181152
    10. ' while' → logprob: -8.150870323181152

Token 789: ' downward' (ID: 83869)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2072284072637558
    2. ' =' → logprob: -2.082228422164917
    3. 'for' → logprob: -2.832228422164917
    4. ' for' → logprob: -6.457228183746338
    5. '
' → logprob: -6.957228183746338
    6. 'while' → logprob: -7.332228183746338
    7. '=
' → logprob: -8.707228660583496
    8. 'to' → logprob: -9.332228660583496
    9. 'row' → logprob: -10.082228660583496
    10. 'from' → logprob: -10.332228660583496

Token 790: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01651463471353054
    2. '
' → logprob: -5.141514778137207
    3. '   ' → logprob: -5.266514778137207
    4. ' for' → logprob: -5.391514778137207
    5. 'while' → logprob: -7.266514778137207
    6. 'row' → logprob: -9.766514778137207
    7. 'HEIGHT' → logprob: -10.391514778137207
    8. '```' → logprob: -11.516514778137207
    9. '    
' → logprob: -12.016514778137207
    10. 'height' → logprob: -12.766514778137207

Token 791: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.039666324853897095
    2. ' for' → logprob: -3.4146664142608643
    3. '   ' → logprob: -5.289666175842285
    4. 'row' → logprob: -7.539666175842285
    5. '
' → logprob: -8.164666175842285
    6. 'while' → logprob: -9.914666175842285
    7. 'read' → logprob: -10.414666175842285
    8. '```' → logprob: -10.414666175842285
    9. 'i' → logprob: -11.414666175842285
    10. '    
' → logprob: -12.414666175842285

Token 792: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002111694193445146
    2. ' for' → logprob: -8.500210762023926
    3. '   ' → logprob: -12.250210762023926
    4. 'HEIGHT' → logprob: -13.500210762023926
    5. '
' → logprob: -13.875210762023926
    6. '```' → logprob: -14.375210762023926
    7. '	for' → logprob: -17.000211715698242
    8. 'while' → logprob: -17.750211715698242
    9. '    
' → logprob: -18.000211715698242
    10. '``' → logprob: -18.375211715698242

Token 793: ' read' (ID: 1729)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.012447020038962364
    2. ' row' → logprob: -5.012446880340576
    3. 'r' → logprob: -5.262446880340576
    4. 'read' → logprob: -7.637446880340576
    5. 'i' → logprob: -11.012447357177734
    6. ' r' → logprob: -11.137447357177734
    7. 'old' → logprob: -11.762447357177734
    8. ' read' → logprob: -12.637447357177734
    9. 'curr' → logprob: -13.012447357177734
    10. 'current' → logprob: -13.262447357177734

Token 794: '_row' (ID: 19157)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6100214123725891
    2. '_row' → logprob: -1.1100213527679443
    3. 'row' → logprob: -2.3600213527679443
    4. 'in' → logprob: -3.4850213527679443
    5. ' row' → logprob: -6.985021591186523
    6. ' ' → logprob: -7.985021591186523
    7. '_ROW' → logprob: -8.485021591186523
    8. '_' → logprob: -8.985021591186523
    9. '	row' → logprob: -9.110021591186523
    10. '   ' → logprob: -9.360021591186523

Token 795: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008616226725280285
    2. 'in' → logprob: -4.7586164474487305
    3. '	in' → logprob: -14.25861644744873
    4. ',' → logprob: -14.63361644744873
    5. ' ' → logprob: -15.88361644744873
    6. 'import' → logprob: -16.008615493774414
    7. 'range' → logprob: -16.508615493774414
    8. '   ' → logprob: -16.508615493774414
    9. '=' → logprob: -17.383615493774414
    10. ')' → logprob: -17.758615493774414

Token 796: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25198885798454285
    2. ' range' → logprob: -1.5019888877868652
    3. '0' → logprob: -9.751988410949707
    4. ' ' → logprob: -13.626988410949707
    5. '	range' → logprob: -16.001989364624023
    6. '(range' → logprob: -16.626989364624023
    7. '
' → logprob: -16.751989364624023
    8. '   ' → logprob: -17.376989364624023
    9. '  ' → logprob: -18.376989364624023
    10. ')' → logprob: -18.876989364624023

Token 797: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009884051978588104
    2. 'HEIGHT' → logprob: -4.634883880615234
    3. '0' → logprob: -9.509883880615234
    4. 'write' → logprob: -10.509883880615234
    5. ' HEIGHT' → logprob: -12.009883880615234
    6. '(write' → logprob: -12.384883880615234
    7. '(len' → logprob: -12.509883880615234
    8. 'read' → logprob: -12.634883880615234
    9. '   ' → logprob: -13.134883880615234
    10. '(read' → logprob: -13.509883880615234

Token 798: 'HEIGHT' (ID: 105934)
  Prédit: 'HEIGHT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -0.001967650605365634
    2. '0' → logprob: -6.251967430114746
    3. ' HEIGHT' → logprob: -10.251967430114746
    4. '200' → logprob: -13.251967430114746
    5. 'WIDTH' → logprob: -13.501967430114746
    6. 'HE' → logprob: -14.751967430114746
    7. 'height' → logprob: -16.626968383789062
    8. ' ' → logprob: -17.126968383789062
    9. '1' → logprob: -17.126968383789062
    10. '100' → logprob: -17.626968383789062

Token 799: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023378364741802216
    2. '):
' → logprob: -3.773378372192383
    3. '+' → logprob: -10.148378372192383
    4. ' ):' → logprob: -10.523378372192383
    5. '):
' → logprob: -10.898378372192383
    6. '0' → logprob: -11.148378372192383
    7. '=' → logprob: -11.148378372192383
    8. ':' → logprob: -12.273378372192383
    9. ' ' → logprob: -13.023378372192383
    10. ')' → logprob: -13.023378372192383

Token 800: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.042665354907512665
    2. ' if' → logprob: -3.2926652431488037
    3. 'if' → logprob: -5.417665481567383
    4. '   ' → logprob: -10.167665481567383
    5. '<|end|>' → logprob: -10.292665481567383
    6. '	if' → logprob: -10.417665481567383
    7. ',' → logprob: -11.167665481567383
    8. '	   ' → logprob: -11.167665481567383
    9. '```' → logprob: -11.292665481567383
    10. '	' → logprob: -11.542665481567383

Token 801: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002765175187960267
    2. ' if' → logprob: -6.00276517868042
    3. '       ' → logprob: -8.252764701843262
    4. '   ' → logprob: -11.127764701843262
    5. '#' → logprob: -11.377764701843262
    6. '	if' → logprob: -13.627764701843262
    7. 'row' → logprob: -14.127764701843262
    8. '           ' → logprob: -14.502764701843262
    9. 'while' → logprob: -16.627765655517578
    10. 'empty' → logprob: -16.752765655517578

Token 802: ' all' (ID: 722)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.09631697833538055
    2. 'any' → logprob: -2.5963170528411865
    3. 'all' → logprob: -4.221316814422607
    4. ' not' → logprob: -5.971316814422607
    5. ' any' → logprob: -10.846317291259766
    6. 'True' → logprob: -11.596317291259766
    7. 'False' → logprob: -12.096317291259766
    8. ' all' → logprob: -12.346317291259766
    9. '   ' → logprob: -12.721317291259766
    10. '	not' → logprob: -13.471317291259766

Token 803: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.0001911432045744732
    2. '(cell' → logprob: -8.750190734863281
    3. '(not' → logprob: -11.125190734863281
    4. 'board' → logprob: -11.625190734863281
    5. '(' → logprob: -12.000190734863281
    6. 'not' → logprob: -13.625190734863281
    7. '(row' → logprob: -14.000190734863281
    8. '	board' → logprob: -15.750190734863281
    9. '([' → logprob: -15.875190734863281
    10. 'cell' → logprob: -16.00019073486328

Token 804: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.511406809295295e-06
    2. 'read' → logprob: -13.000006675720215
    3. '[row' → logprob: -13.500006675720215
    4. ')[' → logprob: -13.625006675720215
    5. ' [' → logprob: -14.625006675720215
    6. '```' → logprob: -14.875006675720215
    7. ')' → logprob: -15.500006675720215
    8. '=' → logprob: -16.0000057220459
    9. '[
' → logprob: -16.3750057220459
    10. '
' → logprob: -17.0000057220459

Token 805: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.12704360485076904
    2. '[' → logprob: -2.1270437240600586
    3. 'write' → logprob: -9.377043724060059
    4. ' read' → logprob: -12.002043724060059
    5. 'board' → logprob: -12.127043724060059
    6. '(read' → logprob: -12.127043724060059
    7. '][' → logprob: -12.627043724060059
    8. ')' → logprob: -13.252043724060059
    9. '
' → logprob: -13.627043724060059
    10. '[
' → logprob: -14.002043724060059

Token 806: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.00015955790877342224
    2. 'read' → logprob: -9.87515926361084
    3. 'row' → logprob: -10.12515926361084
    4. '_read' → logprob: -10.62515926361084
    5. '_rows' → logprob: -11.37515926361084
    6. '[' → logprob: -11.75015926361084
    7. '][' → logprob: -12.50015926361084
    8. '   ' → logprob: -13.00015926361084
    9. '_line' → logprob: -13.12515926361084
    10. 's' → logprob: -13.12515926361084

Token 807: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.02929655648767948
    2. ']):
' → logprob: -3.779296636581421
    3. '])' → logprob: -5.654296398162842
    4. '[' → logprob: -7.154296398162842
    5. ']' → logprob: -7.654296398162842
    6. ')' → logprob: -7.904296398162842
    7. '):' → logprob: -8.404296875
    8. '[row' → logprob: -8.904296875
    9. '][' → logprob: -9.154296875
    10. '])]' → logprob: -9.154296875

Token 808: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0070993900299072
    2. '       ' → logprob: -1.5070993900299072
    3. ':
' → logprob: -1.5070993900299072
    4. '           ' → logprob: -1.8820993900299072
    5. '<|end|>' → logprob: -4.257099151611328
    6. '[' → logprob: -4.882099151611328
    7. '               ' → logprob: -6.132099151611328
    8. '#' → logprob: -6.132099151611328
    9. '```' → logprob: -6.257099151611328
    10. ' continue' → logprob: -6.257099151611328

Token 809: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7894598841667175
    2. 'continue' → logprob: -0.7894598841667175
    3. ' continue' → logprob: -2.4144599437713623
    4. '           ' → logprob: -6.539459705352783
    5. '   ' → logprob: -7.789459705352783
    6. '	continue' → logprob: -7.914459705352783
    7. '#' (adapté à ' #') → logprob: -10.039460182189941
    8. '               ' → logprob: -10.164460182189941
    9. '_continue' → logprob: -10.914460182189941
    10. '```' → logprob: -11.164460182189941

Token 810: ' Row' (ID: 18215)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.21856282651424408
    2. '       ' → logprob: -2.5935628414154053
    3. '#' → logprob: -3.0935628414154053
    4. 'for' → logprob: -3.4685628414154053
    5. ' continue' → logprob: -3.5935628414154053
    6. '           ' → logprob: -4.468562602996826
    7. '   ' → logprob: -6.218562602996826
    8. 'pass' → logprob: -6.218562602996826
    9. ' for' → logprob: -6.843562602996826
    10. 'board' → logprob: -7.593562602996826

Token 811: ' fully' (ID: 9637)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20053929090499878
    2. ' =' → logprob: -2.0755393505096436
    3. '           ' → logprob: -4.5755391120910645
    4. ' is' → logprob: -4.5755391120910645
    5. '=[]' → logprob: -4.5755391120910645
    6. '#' → logprob: -5.0755391120910645
    7. '[:]' → logprob: -5.7005391120910645
    8. 'is' → logprob: -5.9505391120910645
    9. '.clear' → logprob: -5.9505391120910645
    10. '       ' → logprob: -6.0755391120910645

Token 812: ' occupied' (ID: 46186)
  Prédit: 'filled'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'filled' → logprob: -0.5293012857437134
    2. 'occupied' → logprob: -1.2793012857437134
    3. 'True' → logprob: -2.029301166534424
    4. ' True' → logprob: -7.279301166534424
    5. ' filled' → logprob: -8.154301643371582
    6. '#' → logprob: -9.154301643371582
    7. ' occupied' → logprob: -9.779301643371582
    8. 'true' → logprob: -10.154301643371582
    9. 'clear' → logprob: -10.279301643371582
    10. '=True' → logprob: -10.529301643371582

Token 813: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03914395719766617
    2. '           ' → logprob: -4.289144039154053
    3. ' continue' → logprob: -4.289144039154053
    4. 'continue' → logprob: -5.164144039154053
    5. ':' → logprob: -5.789144039154053
    6. ':
' → logprob: -7.039144039154053
    7. ',' → logprob: -8.164143562316895
    8. ' continues' → logprob: -8.664143562316895
    9. '=' → logprob: -9.289143562316895
    10. '
' → logprob: -9.289143562316895

Token 814: ' clear' (ID: 5364)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2204536199569702
    2. 'continue' → logprob: -1.7204536199569702
    3. ' continue' → logprob: -1.8454536199569702
    4. ' for' → logprob: -1.9704536199569702
    5. 'for' → logprob: -2.2204537391662598
    6. '           ' → logprob: -2.8454537391662598
    7. '       ' → logprob: -3.3454537391662598
    8. ' #' → logprob: -4.47045373916626
    9. 'board' → logprob: -4.59545373916626
    10. ' board' → logprob: -5.84545373916626

Token 815: ' by' (ID: 656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14865291118621826
    2. 'continue' → logprob: -2.273653030395508
    3. ' continue' → logprob: -3.648653030395508
    4. '       ' → logprob: -4.773653030395508
    5. '#' → logprob: -8.148653030395508
    6. '```' → logprob: -9.273653030395508
    7. '
' → logprob: -9.398653030395508
    8. ',' → logprob: -9.523653030395508
    9. '               ' → logprob: -10.148653030395508
    10. ' #' → logprob: -10.773653030395508

Token 816: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7547534108161926
    2. 'sk' → logprob: -0.7547534108161926
    3. ' skipping' → logprob: -3.254753351211548
    4. ' not' → logprob: -4.379753589630127
    5. 'continu' → logprob: -5.004753589630127
    6. 'continue' → logprob: -7.004753589630127
    7. 'skip' → logprob: -7.754753589630127
    8. ' continuing' → logprob: -8.504753112792969
    9. '#' → logprob: -8.754753112792969
    10. 'om' → logprob: -9.254753112792969

Token 817: ' copying' (ID: 61185)
  Prédit: 'copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'copy' → logprob: -0.028394455090165138
    2. ' copying' → logprob: -3.7783944606781006
    3. 'writing' → logprob: -5.2783942222595215
    4. ' writing' → logprob: -10.65339469909668
    5. 'cop' → logprob: -12.02839469909668
    6. 'increment' → logprob: -12.90339469909668
    7. ' copy' → logprob: -14.27839469909668
    8. 'assign' → logprob: -14.65339469909668
    9. '.copy' → logprob: -14.77839469909668
    10. '```' → logprob: -14.90339469909668

Token 818: ' it' (ID: 480)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8068942427635193
    2. '           ' → logprob: -1.056894302368164
    3. 'continue' → logprob: -1.931894302368164
    4. ' continue' → logprob: -2.806894302368164
    5. '               ' → logprob: -7.806894302368164
    6. '```' → logprob: -8.681894302368164
    7. '
' → logprob: -9.431894302368164
    8. ',' → logprob: -9.431894302368164
    9. '   ' → logprob: -9.556894302368164
    10. '	continue' → logprob: -10.306894302368164

Token 819: ' down' (ID: 1917)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39545637369155884
    2. '           ' → logprob: -1.145456314086914
    3. 'continue' → logprob: -5.020456314086914
    4. ' continue' → logprob: -6.645456314086914
    5. '
' → logprob: -8.020456314086914
    6. ',' → logprob: -9.395456314086914
    7. '```' → logprob: -9.770456314086914
    8. '   ' → logprob: -10.395456314086914
    9. '               ' → logprob: -10.770456314086914
    10. ';' → logprob: -10.770456314086914

Token 820: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07049983739852905
    2. '       ' → logprob: -2.695499897003174
    3. 'continue' → logprob: -7.820499897003174
    4. ' continue' → logprob: -9.195499420166016
    5. ',' → logprob: -10.820499420166016
    6. '               ' → logprob: -11.570499420166016
    7. '```' → logprob: -11.820499420166016
    8. 'else' → logprob: -12.195499420166016
    9. '   ' → logprob: -12.695499420166016
    10. '
' → logprob: -12.945499420166016

Token 821: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12812145054340363
    2. '       ' → logprob: -2.1281213760375977
    3. 'continue' → logprob: -7.003121376037598
    4. ' continue' → logprob: -8.253121376037598
    5. '```' → logprob: -11.378121376037598
    6. '               ' → logprob: -12.753121376037598
    7. '   ' → logprob: -13.003121376037598
    8. 'else' → logprob: -13.378121376037598
    9. '
' → logprob: -13.753121376037598
    10. '		' → logprob: -14.628121376037598

Token 822: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.13803346455097198
    2. '           ' → logprob: -2.763033390045166
    3. ' continue' → logprob: -3.263033390045166
    4. '       ' → logprob: -3.638033390045166
    5. 'pass' → logprob: -6.888033390045166
    6. ' pass' → logprob: -8.888033866882324
    7. '	continue' → logprob: -10.013033866882324
    8. '               ' → logprob: -11.388033866882324
    9. '```' → logprob: -11.638033866882324
    10. '   ' → logprob: -11.763033866882324

Token 823: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012176171876490116
    2. '
' → logprob: -7.126217842102051
    3. 'else' → logprob: -8.25121784210205
    4. '        
' → logprob: -9.12621784210205
    5. '   ' → logprob: -12.00121784210205
    6. ' else' → logprob: -12.12621784210205
    7. '<|end|>' → logprob: -12.25121784210205
    8. '	' → logprob: -12.50121784210205
    9. '    
' → logprob: -12.62621784210205
    10. 'elif' → logprob: -12.87621784210205

Token 824: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020455787889659405
    2. 'else' → logprob: -6.377045631408691
    3. '   ' → logprob: -8.502045631408691
    4. ' else' → logprob: -10.252045631408691
    5. '
' → logprob: -11.002045631408691
    6. '        
' → logprob: -11.002045631408691
    7. 'if' → logprob: -11.002045631408691
    8. 'for' → logprob: -11.127045631408691
    9. 'elif' → logprob: -11.502045631408691
    10. '           ' → logprob: -12.127045631408691

Token 825: ' if' (ID: 538)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.34393513202667236
    2. 'for' → logprob: -1.7189351320266724
    3. ' else' → logprob: -3.218935012817383
    4. '       ' → logprob: -3.343935012817383
    5. ' for' → logprob: -3.843935012817383
    6. 'if' (adapté à ' if') → logprob: -4.718935012817383
    7. '   ' → logprob: -5.718935012817383
    8. '#' → logprob: -6.718935012817383
    9. 'while' → logprob: -7.593935012817383
    10. 'board' → logprob: -7.843935012817383

Token 826: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.9007271528244019
    2. 'write' → logprob: -0.9007271528244019
    3. ' write' → logprob: -2.1507272720336914
    4. ' read' → logprob: -2.6507272720336914
    5. ' not' → logprob: -8.400727272033691
    6. 'not' → logprob: -9.275727272033691
    7. 'board' → logprob: -9.900727272033691
    8. ' ' → logprob: -10.650727272033691
    9. '   ' → logprob: -11.525727272033691
    10. '(write' → logprob: -11.525727272033691

Token 827: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0001681405701674521
    2. 'row' → logprob: -8.875167846679688
    3. '_rows' → logprob: -12.250167846679688
    4. 'write' → logprob: -12.375167846679688
    5. '_col' → logprob: -13.125167846679688
    6. 'e' → logprob: -13.375167846679688
    7. 'read' → logprob: -13.375167846679688
    8. 'ow' → logprob: -13.500167846679688
    9. '_line' → logprob: -13.500167846679688
    10. '
' → logprob: -13.750167846679688

Token 828: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.022434739395976067
    2. ' !=' → logprob: -3.897434711456299
    3. '==' → logprob: -6.647434711456299
    4. '>' → logprob: -7.522434711456299
    5. '>=' → logprob: -10.772435188293457
    6. '=' → logprob: -11.272435188293457
    7. ' ==' → logprob: -11.397435188293457
    8. ' >' → logprob: -12.897435188293457
    9. '!==' → logprob: -13.897435188293457
    10. ']!=' → logprob: -14.272435188293457

Token 829: ' write' (ID: 5067)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'write' → logprob: -5.848420551046729e-05
    2. ' write' → logprob: -9.7500581741333
    3. '	write' → logprob: -16.750059127807617
    4. '
' → logprob: -19.125059127807617
    5. '   ' → logprob: -19.500059127807617
    6. '(write' → logprob: -19.625059127807617
    7. '  ' → logprob: -20.875059127807617
    8. 'read' → logprob: -21.250059127807617
    9. ' ' → logprob: -21.250059127807617
    10. '=' → logprob: -22.500059127807617

Token 830: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.1517960956552997e-05
    2. 'row' → logprob: -12.125011444091797
    3. '_' → logprob: -12.750011444091797
    4. '_rows' → logprob: -14.125011444091797
    5. '_line' → logprob: -14.625011444091797
    6. '```' → logprob: -14.625011444091797
    7. '_ROW' → logprob: -14.750011444091797
    8. 'Row' → logprob: -14.875011444091797
    9. '_Row' → logprob: -15.375011444091797
    10. ' _' → logprob: -15.875011444091797

Token 831: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5766450762748718
    2. ':
' → logprob: -0.8266450762748718
    3. '           ' → logprob: -7.3266448974609375
    4. '       ' → logprob: -10.951644897460938
    5. ':
' → logprob: -12.076644897460938
    6. '[' → logprob: -12.326644897460938
    7. ':

' → logprob: -12.451644897460938
    8. '):
' → logprob: -12.576644897460938
    9. ' and' → logprob: -12.701644897460938
    10. '   ' → logprob: -12.951644897460938

Token 832: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001673061487963423
    2. '	       ' → logprob: -9.625166893005371
    3. ' board' → logprob: -10.625166893005371
    4. '		' → logprob: -10.750166893005371
    5. ' for' → logprob: -10.750166893005371
    6. '               ' → logprob: -11.000166893005371
    7. '
' → logprob: -12.875166893005371
    8. '		   ' → logprob: -12.875166893005371
    9. 'board' → logprob: -13.500166893005371
    10. '                   ' → logprob: -13.500166893005371

Token 833: ' #' (ID: 1069)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.21684202551841736
    2. ' board' → logprob: -1.7168420553207397
    3. '           ' → logprob: -4.216842174530029
    4. '	board' → logprob: -8.091841697692871
    5. '       ' → logprob: -9.091841697692871
    6. ' for' → logprob: -9.591841697692871
    7. 'for' → logprob: -10.091841697692871
    8. '               ' → logprob: -11.216841697692871
    9. '.board' → logprob: -11.341841697692871
    10. '(board' → logprob: -11.841841697692871

Token 834: ' copy' (ID: 5150)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.012494118884205818
    2. ' board' → logprob: -4.512494087219238
    3. '           ' → logprob: -6.762494087219238
    4. 'for' → logprob: -8.387494087219238
    5. ' for' → logprob: -9.887494087219238
    6. '	board' → logprob: -12.012494087219238
    7. '.board' → logprob: -13.762494087219238
    8. '#' → logprob: -14.012494087219238
    9. '
' → logprob: -14.512494087219238
    10. '               ' → logprob: -14.762494087219238

Token 835: ' row' (ID: 5225)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.026713937520980835
    2. ' board' → logprob: -3.6517138481140137
    3. '(board' → logprob: -8.901714324951172
    4. '           ' → logprob: -9.151714324951172
    5. '	board' → logprob: -9.276714324951172
    6. 'for' → logprob: -10.276714324951172
    7. ' for' → logprob: -11.026714324951172
    8. '.board' → logprob: -11.151714324951172
    9. '       ' → logprob: -12.651714324951172
    10. '   ' → logprob: -12.901714324951172

Token 836: ' down' (ID: 1917)
  Prédit: '(board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.9362444877624512
    2. 'board' → logprob: -1.0612444877624512
    3. '       ' → logprob: -2.686244487762451
    4. '           ' → logprob: -3.061244487762451
    5. ' board' → logprob: -3.186244487762451
    6. '[' → logprob: -3.561244487762451
    7. '[:]' → logprob: -3.686244487762451
    8. '   ' → logprob: -4.061244487762451
    9. '=' → logprob: -4.561244487762451
    10. ' =' → logprob: -4.936244487762451

Token 837: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09000364691019058
    2. '
' → logprob: -3.090003728866577
    3. '       ' → logprob: -3.840003728866577
    4. '               ' → logprob: -4.715003490447998
    5. ' =' → logprob: -5.590003490447998
    6. ' for' → logprob: -6.465003490447998
    7. '=' → logprob: -6.840003490447998
    8. '(board' → logprob: -7.465003490447998
    9. ':
' → logprob: -7.590003490447998
    10. 'for' → logprob: -7.590003490447998

Token 838: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32820725440979004
    2. ' for' → logprob: -2.20320725440979
    3. 'board' → logprob: -2.57820725440979
    4. ' board' → logprob: -3.07820725440979
    5. 'for' → logprob: -3.82820725440979
    6. '       ' → logprob: -4.578207015991211
    7. '(board' → logprob: -5.078207015991211
    8. '               ' → logprob: -5.703207015991211
    9. '   ' → logprob: -6.703207015991211
    10. '
' → logprob: -6.703207015991211

Token 839: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.00594479450955987
    2. ' board' → logprob: -5.755944728851318
    3. '           ' → logprob: -6.380944728851318
    4. 'for' → logprob: -6.880944728851318
    5. ' for' → logprob: -10.255945205688477
    6. '	board' → logprob: -12.630945205688477
    7. '(board' → logprob: -13.755945205688477
    8. '               ' → logprob: -13.880945205688477
    9. '.board' → logprob: -13.880945205688477
    10. '       ' → logprob: -14.880945205688477

Token 840: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.584239938296378e-06
    2. 'write' → logprob: -12.375007629394531
    3. ' [' → logprob: -14.500007629394531
    4. '   ' → logprob: -14.625007629394531
    5. '
' → logprob: -14.750007629394531
    6. '       ' → logprob: -15.125007629394531
    7. '[word' → logprob: -15.125007629394531
    8. '[w' → logprob: -15.625007629394531
    9. '[to' → logprob: -15.750007629394531
    10. '[
' → logprob: -16.00000762939453

Token 841: 'write' (ID: 9566)
  Prédit: 'write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.00030674142180942
    2. 'read' → logprob: -8.125307083129883
    3. '[' → logprob: -11.875307083129883
    4. ' write' → logprob: -12.750307083129883
    5. '(write' → logprob: -14.750307083129883
    6. '   ' → logprob: -15.750307083129883
    7. '	write' → logprob: -15.875307083129883
    8. '
' → logprob: -16.750307083129883
    9. '_write' → logprob: -17.000307083129883
    10. '```' → logprob: -17.750307083129883

Token 842: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -1.8193366486229934e-05
    2. '[' → logprob: -11.875018119812012
    3. 'write' → logprob: -12.500018119812012
    4. 'row' → logprob: -12.750018119812012
    5. '][' → logprob: -13.250018119812012
    6. '_read' → logprob: -14.625018119812012
    7. 'Row' → logprob: -14.750018119812012
    8. '_write' → logprob: -14.750018119812012
    9. 'read' → logprob: -15.625018119812012
    10. '   ' → logprob: -15.625018119812012

Token 843: ']' (ID: 60)
  Prédit: '][:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][:' → logprob: -0.5893195867538452
    2. ']' → logprob: -1.4643195867538452
    3. ']=' → logprob: -2.2143197059631348
    4. '[:]' → logprob: -2.3393197059631348
    5. '][' → logprob: -4.964319705963135
    6. '[:' → logprob: -6.589319705963135
    7. '=' → logprob: -9.839319229125977
    8. '][]' → logprob: -11.714319229125977
    9. '[' → logprob: -12.714319229125977
    10. ')=' → logprob: -12.839319229125977

Token 844: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16170884668827057
    2. '[:]' → logprob: -1.9117088317871094
    3. ' =' → logprob: -6.911708831787109
    4. '[:' → logprob: -7.661708831787109
    5. '[' → logprob: -11.91170883178711
    6. ']=' → logprob: -12.41170883178711
    7. '.=' → logprob: -13.28670883178711
    8. ')=' → logprob: -14.16170883178711
    9. '[]=' → logprob: -14.16170883178711
    10. '＝' → logprob: -15.16170883178711

Token 845: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.0009868424385786057
    2. ' board' → logprob: -7.0009870529174805
    3. 'list' → logprob: -9.50098705291748
    4. ' list' → logprob: -15.12598705291748
    5. '	board' → logprob: -15.87598705291748
    6. '   ' → logprob: -16.375986099243164
    7. '[' → logprob: -16.750986099243164
    8. '.board' → logprob: -18.375986099243164
    9. '(board' → logprob: -18.375986099243164
    10. ' ' → logprob: -19.625986099243164

Token 846: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00193149340339005
    2. 'read' → logprob: -6.251931667327881
    3. 'copy' → logprob: -13.126931190490723
    4. '   ' → logprob: -14.876931190490723
    5. '(read' → logprob: -16.25193214416504
    6. ' [' → logprob: -16.62693214416504
    7. '```' → logprob: -16.62693214416504
    8. 'READ' → logprob: -16.87693214416504
    9. '[
' → logprob: -17.25193214416504
    10. '_read' → logprob: -17.50193214416504

Token 847: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -8.180258191714529e-06
    2. '[' → logprob: -11.750008583068848
    3. ' read' → logprob: -15.875008583068848
    4. '(read' → logprob: -17.12500762939453
    5. 'copy' → logprob: -17.37500762939453
    6. '   ' → logprob: -18.00000762939453
    7. '	read' → logprob: -18.50000762939453
    8. '.read' → logprob: -18.75000762939453
    9. '_read' → logprob: -18.87500762939453
    10. 'Read' → logprob: -20.50000762939453

Token 848: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.00013595925702247769
    2. 'read' → logprob: -9.000136375427246
    3. 'row' → logprob: -12.125136375427246
    4. '_read' → logprob: -12.750136375427246
    5. 'Row' → logprob: -13.250136375427246
    6. 'write' → logprob: -13.750136375427246
    7. '[' → logprob: -14.375136375427246
    8. ' read' → logprob: -16.25013542175293
    9. ']' → logprob: -16.37513542175293
    10. '_ROW' → logprob: -16.50013542175293

Token 849: '][' (ID: 2696)
  Prédit: '[:]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:]' → logprob: -0.019326699897646904
    2. '.copy' → logprob: -4.269326686859131
    3. '[:' → logprob: -5.269326686859131
    4. '<|end|>' → logprob: -13.269327163696289
    5. '][:' → logprob: -14.894327163696289
    6. '[' → logprob: -15.144327163696289
    7. '.deepcopy' → logprob: -15.269327163696289
    8. '.' → logprob: -15.769327163696289
    9. '[::-' → logprob: -16.64432716369629
    10. ']' → logprob: -16.89432716369629

Token 850: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.022353140637278557
    2. ':' → logprob: -4.397353172302246
    3. '[:]' → logprob: -5.522353172302246
    4. '::' → logprob: -5.647353172302246
    5. ':].' → logprob: -6.647353172302246
    6. ':]
' → logprob: -7.022353172302246
    7. ' :]' → logprob: -10.272353172302246
    8. '[:' → logprob: -11.022353172302246
    9. ' :' → logprob: -11.772353172302246
    10. ':
' → logprob: -12.022353172302246

Token 851: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013767463155090809
    2. '           ' → logprob: -4.388767242431641
    3. 'write' → logprob: -7.013767242431641
    4. '
' → logprob: -8.88876724243164
    5. '<|end|>' → logprob: -9.13876724243164
    6. '   ' → logprob: -9.76376724243164
    7. 'continue' → logprob: -11.38876724243164
    8. '```' → logprob: -12.26376724243164
    9. 'board' → logprob: -12.38876724243164
    10. 'import' → logprob: -12.76376724243164

Token 852: ' write' (ID: 5067)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'write' (adapté à ' write') → logprob: -0.38696789741516113
    2. '       ' → logprob: -1.1369678974151611
    3. ' write' → logprob: -10.136967658996582
    4. '
' → logprob: -10.386967658996582
    5. '   ' → logprob: -10.886967658996582
    6. '	write' → logprob: -12.636967658996582
    7. '           ' → logprob: -13.511967658996582
    8. '(write' → logprob: -13.761967658996582
    9. '.write' → logprob: -14.761967658996582
    10. '```' → logprob: -15.011967658996582

Token 853: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -3.650518920039758e-06
    2. '_line' → logprob: -13.500003814697266
    3. '_' → logprob: -13.750003814697266
    4. 'row' → logprob: -14.875003814697266
    5. '_write' → logprob: -14.875003814697266
    6. 'write' → logprob: -16.125003814697266
    7. '_r' → logprob: -16.625003814697266
    8. ' _' → logprob: -16.750003814697266
    9. '_rows' → logprob: -17.125003814697266
    10. 'r' → logprob: -17.375003814697266

Token 854: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001180704333819449
    2. ' +=' → logprob: -6.751180648803711
    3. '=' → logprob: -11.626180648803711
    4. '+' → logprob: -13.626180648803711
    5. ']+=' → logprob: -15.126180648803711
    6. '   ' → logprob: -17.37618064880371
    7. '+='' → logprob: -18.87618064880371
    8. '+=(' → logprob: -19.75118064880371
    9. '	' → logprob: -19.87618064880371
    10. '    ' → logprob: -20.25118064880371

Token 855: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.7500057220459
    4. '```' → logprob: -21.1250057220459
    5. '<|end|>' → logprob: -22.3750057220459
    6. '
' → logprob: -22.8750057220459
    7. '0' → logprob: -22.9375057220459
    8. '+' → logprob: -23.1250057220459
    9. '۱' → logprob: -23.1250057220459
    10. '       ' → logprob: -23.1250057220459

Token 856: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '   ' → logprob: -21.75
    4. '１' → logprob: -23.625
    5. '```' → logprob: -23.875
    6. '
' → logprob: -24.125
    7. '0' → logprob: -24.25
    8. '۱' → logprob: -24.875
    9. '  ' → logprob: -25.0
    10. '	' → logprob: -25.75

Token 857: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39121776819229126
    2. '   ' → logprob: -1.1412177085876465
    3. '#' → logprob: -6.1412177085876465
    4. 'while' → logprob: -6.1412177085876465
    5. ' for' → logprob: -10.391218185424805
    6. '	for' → logprob: -14.141218185424805
    7. '    
' → logprob: -14.766218185424805
    8. '
' → logprob: -15.016218185424805
    9. '```' → logprob: -15.266218185424805
    10. ' while' → logprob: -15.891218185424805

Token 858: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03168095275759697
    2. '#' → logprob: -3.7816810607910156
    3. 'while' → logprob: -4.781681060791016
    4. '   ' → logprob: -11.281681060791016
    5. ' for' → logprob: -12.281681060791016
    6. '```' → logprob: -14.281681060791016
    7. ' while' → logprob: -16.406681060791016
    8. 'def' → logprob: -16.656681060791016
    9. '	for' → logprob: -17.281681060791016
    10. 'import' → logprob: -17.281681060791016

Token 859: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05552968382835388
    2. '#' (adapté à ' #') → logprob: -3.3055295944213867
    3. 'while' → logprob: -4.055529594421387
    4. '   ' → logprob: -11.555529594421387
    5. ' for' → logprob: -15.180529594421387
    6. 'import' → logprob: -16.680530548095703
    7. ' while' → logprob: -18.180530548095703
    8. 'from' → logprob: -18.555530548095703
    9. '	for' → logprob: -18.555530548095703
    10. '
' → logprob: -18.930530548095703

Token 860: ' Clear' (ID: 22550)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1291159689426422
    2. '#' → logprob: -2.1291160583496094
    3. 'while' → logprob: -6.129116058349609
    4. '   ' → logprob: -12.50411605834961
    5. ' for' → logprob: -12.87911605834961
    6. 'import' → logprob: -14.87911605834961
    7. 'from' → logprob: -16.00411605834961
    8. '	for' → logprob: -16.50411605834961
    9. ' #' → logprob: -16.62911605834961
    10. 'For' → logprob: -17.37911605834961

Token 861: ' remaining' (ID: 15448)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25627002120018005
    2. 'board' → logprob: -2.006269931793213
    3. 'from' → logprob: -3.256269931793213
    4. ' for' → logprob: -3.381269931793213
    5. '#' → logprob: -5.256269931793213
    6. ' board' → logprob: -6.006269931793213
    7. 'remaining' → logprob: -6.006269931793213
    8. ' remaining' → logprob: -6.256269931793213
    9. '   ' → logprob: -6.381269931793213
    10. 'rows' → logprob: -6.381269931793213

Token 862: ' rows' (ID: 13585)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3880688548088074
    2. 'rows' → logprob: -1.1380689144134521
    3. 'board' → logprob: -7.638068675994873
    4. ' for' → logprob: -8.388069152832031
    5. ' rows' → logprob: -8.763069152832031
    6. 'while' → logprob: -9.513069152832031
    7. 'range' → logprob: -9.513069152832031
    8. '   ' → logprob: -9.513069152832031
    9. 'from' → logprob: -10.138069152832031
    10. 'lines' → logprob: -10.138069152832031

Token 863: ' above' (ID: 5151)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05809977278113365
    2. '   ' → logprob: -3.0580997467041016
    3. ' for' → logprob: -5.183099746704102
    4. 'while' → logprob: -6.183099746704102
    5. '[' → logprob: -6.433099746704102
    6. '=' → logprob: -9.433099746704102
    7. 'from' → logprob: -9.933099746704102
    8. '	for' → logprob: -10.808099746704102
    9. '
' → logprob: -11.308099746704102
    10. ' while' → logprob: -11.808099746704102

Token 864: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0040084728971123695
    2. '   ' → logprob: -6.2540082931518555
    3. 'while' → logprob: -6.7540082931518555
    4. ' for' → logprob: -7.0040082931518555
    5. ' while' → logprob: -12.879008293151855
    6. '	for' → logprob: -14.629008293151855
    7. '
' → logprob: -16.504009246826172
    8. 'board' → logprob: -17.004009246826172
    9. ' ' → logprob: -17.129009246826172
    10. '  ' → logprob: -17.254009246826172

Token 865: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2676289677619934
    2. '   ' → logprob: -1.5176289081573486
    3. ' for' → logprob: -4.517629146575928
    4. 'while' → logprob: -5.392629146575928
    5. ' while' → logprob: -9.14262866973877
    6. '	for' → logprob: -12.76762866973877
    7. '
' → logprob: -14.01762866973877
    8. ' ' → logprob: -14.26762866973877
    9. '  ' → logprob: -15.01762866973877
    10. '    ' → logprob: -15.39262866973877

Token 866: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00022153646568767726
    2. 'while' → logprob: -8.500221252441406
    3. ' for' → logprob: -11.500221252441406
    4. '   ' → logprob: -11.750221252441406
    5. '	for' → logprob: -17.875221252441406
    6. ' while' → logprob: -18.500221252441406
    7. '
' → logprob: -20.250221252441406
    8. '    
' → logprob: -21.125221252441406
    9. 'from' → logprob: -21.500221252441406
    10. '	while' → logprob: -22.875221252441406

Token 867: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5768833756446838
    2. 'row' → logprob: -1.076883316040039
    3. 'i' → logprob: -2.326883316040039
    4. 'rw' → logprob: -9.951883316040039
    5. 'write' → logprob: -10.076883316040039
    6. ' i' → logprob: -12.451883316040039
    7. 'w' → logprob: -12.951883316040039
    8. ' row' → logprob: -14.451883316040039
    9. 'rr' → logprob: -14.451883316040039
    10. ' r' → logprob: -14.576883316040039

Token 868: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04860859736800194
    2. 'in' → logprob: -3.0486085414886475
    3. 'range' → logprob: -11.298608779907227
    4. '   ' → logprob: -12.673608779907227
    5. 'write' → logprob: -12.923608779907227
    6. 'i' → logprob: -14.173608779907227
    7. '	in' → logprob: -14.798608779907227
    8. 'n' → logprob: -15.173608779907227
    9. 's' → logprob: -15.423608779907227
    10. ' ' → logprob: -15.673608779907227

Token 869: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. '(range' → logprob: -17.250158309936523
    4. 'in' → logprob: -17.375158309936523
    5. 'write' → logprob: -18.625158309936523
    6. '   ' → logprob: -19.750158309936523
    7. '	range' → logprob: -21.250158309936523
    8. ' ' → logprob: -21.625158309936523
    9. ' in' → logprob: -22.125158309936523
    10. '  ' → logprob: -22.125158309936523

Token 870: '(write' (ID: 121097)
  Prédit: '(write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(write' → logprob: -0.06198001280426979
    2. 'write' → logprob: -2.8119800090789795
    3. ' write' → logprob: -11.436980247497559
    4. '(' → logprob: -14.311980247497559
    5. 'WRITE' → logprob: -14.561980247497559
    6. '	write' → logprob: -15.186980247497559
    7. '   ' → logprob: -15.561980247497559
    8. '[' → logprob: -17.436979293823242
    9. '_write' → logprob: -17.686979293823242
    10. '.write' → logprob: -17.686979293823242

Token 871: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -4.961759259458631e-06
    2. '_write' → logprob: -12.500004768371582
    3. 'write' → logprob: -15.000004768371582
    4. '_rows' → logprob: -15.375004768371582
    5. '   ' → logprob: -16.2500057220459
    6. '_line' → logprob: -16.2500057220459
    7. 's' → logprob: -16.6250057220459
    8. '_' → logprob: -16.6250057220459
    9. 'row' → logprob: -16.7500057220459
    10. 'r' → logprob: -16.7500057220459

Token 872: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.143808109802194e-05
    2. ' ,' → logprob: -10.125041007995605
    3. ',
' → logprob: -14.500041007995605
    4. '   ' → logprob: -14.625041007995605
    5. 'HEIGHT' → logprob: -15.375041007995605
    6. ' HEIGHT' → logprob: -16.125041961669922
    7. ',height' → logprob: -17.500041961669922
    8. '‌,' → logprob: -19.625041961669922
    9. ' ' → logprob: -19.875041961669922
    10. ',len' → logprob: -20.000041961669922

Token 873: ' HEIGHT' (ID: 97392)
  Prédit: 'HEIGHT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -2.339278580620885e-06
    2. ' HEIGHT' → logprob: -13.000001907348633
    3. 'WIDTH' → logprob: -18.625001907348633
    4. '   ' → logprob: -19.625001907348633
    5. '200' → logprob: -20.625001907348633
    6. 'HE' → logprob: -21.500001907348633
    7. 'height' → logprob: -21.875001907348633
    8. 'Height' → logprob: -23.625001907348633
    9. ' ' → logprob: -23.625001907348633
    10. 'len' → logprob: -23.625001907348633

Token 874: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.020779520273208618
    2. '):' → logprob: -3.895779609680176
    3. ' ):
' → logprob: -10.020779609680176
    4. '[' → logprob: -10.270779609680176
    5. '):
' → logprob: -10.395779609680176
    6. '   ' → logprob: -10.520779609680176
    7. ')' → logprob: -10.770779609680176
    8. ']:
' → logprob: -10.895779609680176
    9. ':
' → logprob: -11.145779609680176
    10. ',' → logprob: -11.145779609680176

Token 875: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018129866803064942
    2. '   ' → logprob: -6.376812934875488
    3. '[' → logprob: -9.626812934875488
    4. '[:]' → logprob: -11.001812934875488
    5. ' board' → logprob: -12.251812934875488
    6. '           ' → logprob: -12.376812934875488
    7. '	board' → logprob: -12.626812934875488
    8. 'board' → logprob: -12.626812934875488
    9. '[]' → logprob: -13.001812934875488
    10. '	   ' → logprob: -13.001812934875488

Token 876: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.0001717166742309928
    2. ' board' → logprob: -9.250171661376953
    3. '   ' → logprob: -9.500171661376953
    4. '	board' → logprob: -14.750171661376953
    5. 'for' → logprob: -15.125171661376953
    6. '.board' → logprob: -17.125171661376953
    7. '[' → logprob: -17.750171661376953
    8. '(board' → logprob: -18.000171661376953
    9. '_board' → logprob: -19.625171661376953
    10. '-board' → logprob: -20.125171661376953

Token 877: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -5.512236498361744e-07
    2. 'r' → logprob: -15.750000953674316
    3. '   ' → logprob: -16.25
    4. '[row' → logprob: -16.5
    5. '[' → logprob: -16.625
    6. '[w' → logprob: -18.5
    7. ' [' → logprob: -19.0
    8. '(r' → logprob: -19.125
    9. '[b' → logprob: -20.125
    10. '[[' → logprob: -20.25

Token 878: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0463780015707016
    2. ']=' → logprob: -3.5463778972625732
    3. ' =' → logprob: -4.421378135681152
    4. ']' → logprob: -5.421378135681152
    5. '=[' → logprob: -10.796378135681152
    6. '[:]' → logprob: -10.921378135681152
    7. ')=' → logprob: -11.546378135681152
    8. '[' → logprob: -13.671378135681152
    9. ')' → logprob: -14.046378135681152
    10. ' =[' → logprob: -14.921378135681152

Token 879: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00020580526324920356
    2. ' =' → logprob: -8.750205993652344
    3. '[:]' → logprob: -10.000205993652344
    4. '=[' → logprob: -13.375205993652344
    5. '[' → logprob: -15.125205993652344
    6. ']=' → logprob: -17.625205993652344
    7. '＝' → logprob: -17.750205993652344
    8. '[:' → logprob: -17.875205993652344
    9. '.=' → logprob: -18.250205993652344
    10. '.clear' → logprob: -19.250205993652344

Token 880: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. ' [' → logprob: -13.875000953674316
    3. '   ' → logprob: -16.375001907348633
    4. ' ' → logprob: -17.000001907348633
    5. '[T' → logprob: -18.250001907348633
    6. '([' → logprob: -19.750001907348633
    7. '[F' → logprob: -19.875001907348633
    8. '[self' → logprob: -19.875001907348633
    9. '[new' → logprob: -20.000001907348633
    10. 'False' → logprob: -20.250001907348633

Token 881: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -6.704273118884885e-07
    2. ' False' → logprob: -14.250000953674316
    3. '(False' → logprob: -18.5
    4. '0' → logprob: -20.875
    5. '   ' → logprob: -21.0
    6. '=False' → logprob: -22.25
    7. '.False' → logprob: -22.25
    8. 'false' → logprob: -23.75
    9. '```' → logprob: -24.125
    10. '
' → logprob: -24.625

Token 882: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08281569927930832
    2. ']*' → logprob: -2.582815647125244
    3. ' for' → logprob: -5.582815647125244
    4. 'for' → logprob: -8.957816123962402
    5. ',' → logprob: -11.707816123962402
    6. ' ]' → logprob: -12.082816123962402
    7. '   ' → logprob: -12.832816123962402
    8. ']*(' → logprob: -12.832816123962402
    9. '[' → logprob: -13.582816123962402
    10. '*' → logprob: -13.832816123962402

Token 883: ' *' (ID: 425)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.42622822523117065
    2. '[' → logprob: -1.5512282848358154
    3. '(' → logprob: -2.5512282848358154
    4. '([' → logprob: -2.9262282848358154
    5. ']' → logprob: -6.551228046417236
    6. '(width' → logprob: -7.926228046417236
    7. '(False' → logprob: -8.051228523254395
    8. ']*' → logprob: -8.176228523254395
    9. '   ' → logprob: -8.551228523254395
    10. ' for' → logprob: -8.551228523254395

Token 884: ' WIDTH' (ID: 88792)
  Prédit: 'WIDTH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WIDTH' → logprob: -0.00014489953173324466
    2. '5' → logprob: -9.000144958496094
    3. ' WIDTH' → logprob: -10.750144958496094
    4. 'Width' → logprob: -19.000144958496094
    5. 'W' → logprob: -19.125144958496094
    6. 'HEIGHT' → logprob: -19.500144958496094
    7. 'width' → logprob: -19.875144958496094
    8. '_WIDTH' → logprob: -20.500144958496094
    9. ' ' → logprob: -20.625144958496094
    10. '   ' → logprob: -20.750144958496094

Token 885: '


' (ID: 2499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9988459944725037
    2. '<|end|>' → logprob: -1.4988460540771484
    3. '#' → logprob: -1.7488460540771484
    4. 'import' → logprob: -2.1238460540771484
    5. 'for' → logprob: -2.9988460540771484
    6. 'if' → logprob: -2.9988460540771484
    7. '```' → logprob: -5.748846054077148
    8. 'n' → logprob: -6.123846054077148
    9. ' for' → logprob: -6.248846054077148
    10. '
' → logprob: -6.748846054077148

Token 886: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3352450728416443
    2. '<|end|>' → logprob: -1.585245132446289
    3. '```' → logprob: -3.210245132446289
    4. 'for' → logprob: -4.210245132446289
    5. '<|end|>' → logprob: -4.835245132446289
    6. 'def' → logprob: -5.210245132446289
    7. 'import' → logprob: -5.460245132446289
    8. 'd' → logprob: -6.585245132446289
    9. '...' → logprob: -6.710245132446289
    10. 'n' → logprob: -6.960245132446289

Token 887: ' count' (ID: 3605)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.47439515590667725
    2. 'main' → logprob: -0.9743951559066772
    3. 'simulate' → logprob: -8.349394798278809
    4. ' simulate' → logprob: -10.099394798278809
    5. 'process' → logprob: -11.349394798278809
    6. 'solve' → logprob: -11.474394798278809
    7. ' solve' → logprob: -11.849394798278809
    8. ' process' → logprob: -12.599394798278809
    9. ' run' → logprob: -13.349394798278809
    10. 'run' → logprob: -13.474394798278809

Token 888: '_blocks' (ID: 60244)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1176695823669434
    2. '_f' → logprob: -1.2426695823669434
    3. '_blocks' → logprob: -1.3676695823669434
    4. '_lines' → logprob: -2.6176695823669434
    5. '_cells' → logprob: -4.492669582366943
    6. '_rows' → logprob: -4.617669582366943
    7. '_completed' → logprob: -4.617669582366943
    8. '_s' → logprob: -4.992669582366943
    9. '_full' → logprob: -5.367669582366943
    10. '_complete' → logprob: -5.992669582366943

Token 889: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.0015116469003260136
    2. '(' → logprob: -6.501511573791504
    3. ' (' → logprob: -12.126511573791504
    4. '():' → logprob: -13.876511573791504
    5. '(Board' → logprob: -14.501511573791504
    6. '(b' → logprob: -14.626511573791504
    7. '(deck' → logprob: -14.751511573791504
    8. '(block' → logprob: -14.751511573791504
    9. '(
' → logprob: -16.12651252746582
    10. '(def' → logprob: -16.37651252746582

Token 890: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004697002936154604
    2. '):
' → logprob: -5.504696846008301
    3. '():' → logprob: -8.5046968460083
    4. ')' → logprob: -8.6296968460083
    5. '(board' → logprob: -9.0046968460083
    6. '()' → logprob: -9.7546968460083
    7. ' ):' → logprob: -10.6296968460083
    8. '):
' → logprob: -11.3796968460083
    9. '():
' → logprob: -11.7546968460083
    10. '(' → logprob: -11.8796968460083

Token 891: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1347266137599945
    2. '   ' → logprob: -2.1347265243530273
    3. 'return' → logprob: -5.134726524353027
    4. 'total' → logprob: -6.884726524353027
    5. ' count' → logprob: -7.509726524353027
    6. 'cnt' → logprob: -8.509726524353027
    7. 'result' → logprob: -10.384726524353027
    8. '```' → logprob: -10.509726524353027
    9. '
' → logprob: -11.259726524353027
    10. ' return' → logprob: -11.509726524353027

Token 892: ' """
' (ID: 7037)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07747845351696014
    2. '   ' → logprob: -3.3274784088134766
    3. 'return' → logprob: -3.3274784088134766
    4. 'total' → logprob: -6.327478408813477
    5. 'cnt' → logprob: -7.577478408813477
    6. ' count' → logprob: -7.827478408813477
    7. 'result' → logprob: -10.077478408813477
    8. ' return' → logprob: -10.327478408813477
    9. 'sum' → logprob: -12.202478408813477
    10. ' total' → logprob: -12.952478408813477

Token 893: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5715799927711487
    2. '   ' → logprob: -1.071579933166504
    3. 'return' → logprob: -2.571579933166504
    4. 'total' → logprob: -4.446579933166504
    5. '"""
' → logprob: -5.821579933166504
    6. 'cnt' → logprob: -7.071579933166504
    7. ' count' → logprob: -7.446579933166504
    8. ' return' → logprob: -9.446579933166504
    9. '
' → logprob: -9.446579933166504
    10. '"""' → logprob: -9.571579933166504

Token 894: ' Count' (ID: 6789)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.027287496253848076
    2. 'cnt' → logprob: -4.027287483215332
    3. 'return' → logprob: -5.027287483215332
    4. 'total' → logprob: -6.027287483215332
    5. ' count' → logprob: -10.027287483215332
    6. '   ' → logprob: -10.027287483215332
    7. 'result' → logprob: -10.777287483215332
    8. 'c' → logprob: -11.777287483215332
    9. 'counter' → logprob: -12.777287483215332
    10. 'counts' → logprob: -13.402287483215332

Token 895: ' how' (ID: 1495)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.2874987125396729
    2. ' the' → logprob: -2.287498712539673
    3. '   ' → logprob: -2.412498712539673
    4. '=' → logprob: -2.412498712539673
    5. 'total' → logprob: -2.412498712539673
    6. 'the' → logprob: -2.412498712539673
    7. 'occupied' → logprob: -2.662498712539673
    8. 'blocks' → logprob: -3.037498712539673
    9. '
' → logprob: -3.412498712539673
    10. '_blocks' → logprob: -3.787498712539673

Token 896: ' many' (ID: 1991)
  Prédit: ' many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' many' → logprob: -0.6968284845352173
    2. 'many' → logprob: -0.6968284845352173
    3. '   ' → logprob: -5.821828365325928
    4. 'Many' → logprob: -7.446828365325928
    5. '_many' → logprob: -9.071828842163086
    6. 'def' → logprob: -12.571828842163086
    7. '  ' → logprob: -13.071828842163086
    8. '
' → logprob: -13.071828842163086
    9. '    ' → logprob: -13.571828842163086
    10. ' ' → logprob: -13.696828842163086

Token 897: ' cells' (ID: 11242)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.9012186527252197
    2. 'True' → logprob: -0.9012186527252197
    3. 'cells' → logprob: -3.0262186527252197
    4. 'row' → logprob: -3.1512186527252197
    5. ' True' → logprob: -3.5262186527252197
    6. 'occupied' → logprob: -3.7762186527252197
    7. ' rows' → logprob: -4.651218414306641
    8. ' cells' → logprob: -4.776218414306641
    9. '
' → logprob: -4.776218414306641
    10. '   ' → logprob: -5.276218414306641

Token 898: ' are' (ID: 553)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4299256503582001
    2. ' are' → logprob: -1.5549256801605225
    3. 'are' → logprob: -3.3049256801605225
    4. '=' → logprob: -3.5549256801605225
    5. ' in' → logprob: -3.6799256801605225
    6. 'in' → logprob: -4.304925441741943
    7. '(board' → logprob: -4.304925441741943
    8. '
' → logprob: -5.179925441741943
    9. 'occupied' → logprob: -5.679925441741943
    10. ' of' → logprob: -5.804925441741943

Token 899: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.015272016637027264
    2. ' True' → logprob: -4.51527214050293
    3. 'occupied' → logprob: -5.51527214050293
    4. 'filled' → logprob: -8.76527214050293
    5. 'set' → logprob: -11.64027214050293
    6. 'sum' → logprob: -11.89027214050293
    7. ' filled' → logprob: -12.01527214050293
    8. ' occupied' → logprob: -12.51527214050293
    9. 'any' → logprob: -12.89027214050293
    10. '
' → logprob: -13.51527214050293

Token 900: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26062753796577454
    2. 'in' → logprob: -2.135627508163452
    3. ' in' → logprob: -2.260627508163452
    4. '
' → logprob: -5.635627746582031
    5. ',' → logprob: -7.510627746582031
    6. 'def' → logprob: -7.885627746582031
    7. ' =' → logprob: -8.010627746582031
    8. 'for' → logprob: -8.135627746582031
    9. '```' → logprob: -8.260627746582031
    10. ' for' → logprob: -8.760627746582031

Token 901: 'blocks' (ID: 44754)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.5630656480789185
    2. 'True' → logprob: -1.8130656480789185
    3. ' True' → logprob: -2.313065528869629
    4. '   ' → logprob: -2.813065528869629
    5. ' occupied' → logprob: -3.563065528869629
    6. ')' → logprob: -3.563065528869629
    7. 'filled' → logprob: -4.188065528869629
    8. 'sum' → logprob: -5.188065528869629
    9. 'block' → logprob: -5.188065528869629
    10. '
' → logprob: -5.438065528869629

Token 902: ' present' (ID: 3333)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09284977614879608
    2. ' in' → logprob: -3.2178497314453125
    3. '   ' → logprob: -4.2178497314453125
    4. ' are' → logprob: -4.3428497314453125
    5. ' present' → logprob: -4.4678497314453125
    6. ')
' → logprob: -5.5928497314453125
    7. ' on' → logprob: -5.9678497314453125
    8. ' )' → logprob: -7.4678497314453125
    9. 'present' → logprob: -7.4678497314453125
    10. 'in' → logprob: -7.4678497314453125

Token 903: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14777275919914246
    2. '   ' → logprob: -2.397772789001465
    3. ')
' → logprob: -3.647772789001465
    4. ' in' → logprob: -4.272772789001465
    5. 'in' → logprob: -5.772772789001465
    6. ' on' → logprob: -6.147772789001465
    7. 'on' → logprob: -8.022772789001465
    8. '
' → logprob: -8.272772789001465
    9. ').' → logprob: -8.772772789001465
    10. ' )' → logprob: -9.522772789001465

Token 904: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06779446452856064
    2. 'count' → logprob: -2.9427945613861084
    3. 'total' → logprob: -5.192794322967529
    4. 'def' → logprob: -5.692794322967529
    5. '
' → logprob: -5.817794322967529
    6. '```' → logprob: -8.942794799804688
    7. 'in' → logprob: -9.192794799804688
    8. ' in' → logprob: -9.317794799804688
    9. '(total' → logprob: -9.567794799804688
    10. 'result' → logprob: -9.692794799804688

Token 905: ' the' (ID: 290)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.0003977800370194018
    2. 'the' → logprob: -8.000397682189941
    3. ' board' → logprob: -9.875397682189941
    4. ' the' → logprob: -12.125397682189941
    5. '(board' → logprob: -12.375397682189941
    6. '
' → logprob: -14.625397682189941
    7. '	board' → logprob: -14.625397682189941
    8. '   ' → logprob: -15.250397682189941
    9. '.board' → logprob: -16.875398635864258
    10. '```' → logprob: -18.250398635864258

Token 906: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -2.165027217415627e-05
    2. ' board' → logprob: -10.750021934509277
    3. '	board' → logprob: -16.12502098083496
    4. '(board' → logprob: -17.37502098083496
    5. '.board' → logprob: -18.25002098083496
    6. '
' → logprob: -18.37502098083496
    7. '   ' → logprob: -19.25002098083496
    8. '-board' → logprob: -19.50002098083496
    9. '```' → logprob: -19.50002098083496
    10. 'boarding' → logprob: -19.87502098083496

Token 907: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012515892274677753
    2. '(' → logprob: -6.012516021728516
    3. '```' → logprob: -6.012516021728516
    4. ':
' → logprob: -6.137516021728516
    5. 'def' → logprob: -6.137516021728516
    6. ':' → logprob: -6.387516021728516
    7. '
' → logprob: -7.762516021728516
    8. '(board' → logprob: -8.387516021728516
    9. '(
' → logprob: -8.887516021728516
    10. '(total' → logprob: -9.012516021728516

Token 908: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00579108577221632
    2. 'count' → logprob: -5.255791187286377
    3. '
' → logprob: -8.005790710449219
    4. 'total' → logprob: -9.130790710449219
    5. ' count' → logprob: -9.505790710449219
    6. '```' → logprob: -11.005790710449219
    7. 'return' → logprob: -11.630790710449219
    8. 'cnt' → logprob: -12.755790710449219
    9. '	count' → logprob: -12.880790710449219
    10. 'result' → logprob: -13.255790710449219

Token 909: ' """
' (ID: 7037)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4795174300670624
    2. '   ' → logprob: -0.9795174598693848
    3. 'total' → logprob: -5.979517459869385
    4. 'return' → logprob: -6.604517459869385
    5. '
' → logprob: -6.979517459869385
    6. ' count' → logprob: -7.854517459869385
    7. 'cnt' → logprob: -8.854516983032227
    8. 'result' → logprob: -9.854516983032227
    9. '```' → logprob: -11.854516983032227
    10. '	count' → logprob: -12.104516983032227

Token 910: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.032322634011507034
    2. '   ' → logprob: -3.532322645187378
    3. 'total' → logprob: -6.282322406768799
    4. 'cnt' → logprob: -7.782322406768799
    5. 'result' → logprob: -8.782322883605957
    6. 'return' → logprob: -9.282322883605957
    7. ' count' → logprob: -10.907322883605957
    8. '```' → logprob: -11.157322883605957
    9. '
' → logprob: -13.782322883605957
    10. '``' → logprob: -13.782322883605957

Token 911: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.12348302453756332
    2. 'total' → logprob: -2.3734829425811768
    3. 'return' → logprob: -4.123483180999756
    4. 'cnt' → logprob: -6.123483180999756
    5. 'result' → logprob: -6.373483180999756
    6. ' count' → logprob: -6.623483180999756
    7. '   ' → logprob: -6.873483180999756
    8. ' total' → logprob: -7.623483180999756
    9. ' return' → logprob: -9.748482704162598
    10. ' cnt' → logprob: -12.748482704162598

Token 912: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761833786964417
    2. ' =' → logprob: -0.8261833786964417
    3. '   ' → logprob: -8.826183319091797
    4. ' ' → logprob: -9.826183319091797
    5. ' +=' → logprob: -10.576183319091797
    6. '(' → logprob: -11.826183319091797
    7. '_' → logprob: -12.576183319091797
    8. '  ' → logprob: -13.451183319091797
    9. '+=' → logprob: -13.576183319091797
    10. ' =
' → logprob: -13.951183319091797

Token 913: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012415809032972902
    2. ' ' → logprob: -9.000123977661133
    3. 'sum' → logprob: -14.250123977661133
    4. ' sum' → logprob: -17.375123977661133
    5. '   ' → logprob: -17.875123977661133
    6. ' ' → logprob: -20.750123977661133
    7. '  ' → logprob: -21.000123977661133
    8. '
' → logprob: -21.375123977661133
    9. '000' → logprob: -21.750123977661133
    10. '00' → logprob: -23.250123977661133

Token 914: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. 'sum' → logprob: -14.000000953674316
    3. ' ' → logprob: -17.125
    4. '   ' → logprob: -21.625
    5. '```' → logprob: -21.625
    6. ' sum' → logprob: -22.375
    7. '000' → logprob: -23.0
    8. '
' → logprob: -23.375
    9. '۰' → logprob: -24.0
    10. '``' → logprob: -24.5

Token 915: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2703927159309387
    2. '
' → logprob: -1.520392656326294
    3. 'for' → logprob: -4.395392894744873
    4. ' for' → logprob: -5.145392894744873
    5. '	for' → logprob: -10.020392417907715
    6. '    
' → logprob: -10.520392417907715
    7. '  ' → logprob: -11.520392417907715
    8. '```' → logprob: -11.520392417907715
    9. '   
' → logprob: -12.020392417907715
    10. '       ' → logprob: -12.270392417907715

Token 916: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005160820204764605
    2. '
' → logprob: -5.880160808563232
    3. ' for' → logprob: -6.755160808563232
    4. 'for' → logprob: -6.755160808563232
    5. '    
' → logprob: -11.00516128540039
    6. '```' → logprob: -12.25516128540039
    7. '	for' → logprob: -14.50516128540039
    8. '       ' → logprob: -14.88016128540039
    9. ' 
' → logprob: -15.13016128540039
    10. '``' → logprob: -15.25516128540039

Token 917: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0012559457682073116
    2. '   ' → logprob: -6.751255989074707
    3. ' for' → logprob: -9.501255989074707
    4. '
' → logprob: -11.501255989074707
    5. '```' → logprob: -14.251255989074707
    6. '	for' → logprob: -15.501255989074707
    7. '``' → logprob: -18.00125503540039
    8. ' ' → logprob: -18.37625503540039
    9. '    
' → logprob: -19.75125503540039
    10. '       ' → logprob: -20.00125503540039

Token 918: ' r' (ID: 428)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.014865272678434849
    2. ' row' → logprob: -4.264865398406982
    3. 'r' → logprob: -7.264865398406982
    4. ' r' → logprob: -13.389864921569824
    5. 'board' → logprob: -16.63986587524414
    6. '	row' → logprob: -16.76486587524414
    7. '   ' → logprob: -17.26486587524414
    8. 'range' → logprob: -17.63986587524414
    9. ' ' → logprob: -17.76486587524414
    10. '```' → logprob: -18.88986587524414

Token 919: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006716436706483364
    2. 'in' → logprob: -5.006716251373291
    3. '   ' → logprob: -14.75671672821045
    4. 'range' → logprob: -15.75671672821045
    5. ' ' → logprob: -15.88171672821045
    6. ',' → logprob: -16.506715774536133
    7. 'n' → logprob: -16.756715774536133
    8. 'import' → logprob: -16.881715774536133
    9. '[' → logprob: -17.131715774536133
    10. '0' → logprob: -17.131715774536133

Token 920: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004100485239177942
    2. ' range' → logprob: -5.504100322723389
    3. 'board' → logprob: -10.754100799560547
    4. '   ' → logprob: -14.879100799560547
    5. '0' → logprob: -15.504100799560547
    6. '
' → logprob: -17.004100799560547
    7. ' ' → logprob: -17.504100799560547
    8. ' board' → logprob: -17.504100799560547
    9. '```' → logprob: -17.754100799560547
    10. '    ' → logprob: -17.879100799560547

Token 921: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001681405701674521
    2. 'HEIGHT' → logprob: -9.000167846679688
    3. '(len' → logprob: -10.250167846679688
    4. '   ' → logprob: -12.000167846679688
    5. '(
' → logprob: -13.375167846679688
    6. 'len' → logprob: -14.375167846679688
    7. ' (' → logprob: -14.750167846679688
    8. ' HEIGHT' → logprob: -15.500167846679688
    9. '0' → logprob: -16.125167846679688
    10. '(W' → logprob: -16.500167846679688

Token 922: 'HEIGHT' (ID: 105934)
  Prédit: 'HEIGHT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -1.3856492842023727e-06
    2. '0' → logprob: -14.125000953674316
    3. ' HEIGHT' → logprob: -14.375000953674316
    4. '   ' → logprob: -17.000001907348633
    5. 'WIDTH' → logprob: -18.250001907348633
    6. 'HE' → logprob: -18.750001907348633
    7. 'len' → logprob: -20.375001907348633
    8. '1' → logprob: -20.750001907348633
    9. '200' → logprob: -20.875001907348633
    10. 'height' → logprob: -21.750001907348633

Token 923: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03351256623864174
    2. '):' → logprob: -3.658512592315674
    3. '   ' → logprob: -5.033512592315674
    4. ':
' → logprob: -8.033512115478516
    5. '[' → logprob: -8.908512115478516
    6. ':' → logprob: -9.158512115478516
    7. '       ' → logprob: -10.658512115478516
    8. ',' → logprob: -10.908512115478516
    9. '):
' → logprob: -11.033512115478516
    10. ')' → logprob: -11.908512115478516

Token 924: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04681013524532318
    2. ' for' → logprob: -3.1718101501464844
    3. 'for' → logprob: -5.671810150146484
    4. '       ' → logprob: -8.046810150146484
    5. '```' → logprob: -10.171810150146484
    6. '[' → logprob: -13.546810150146484
    7. '   ' → logprob: -14.171810150146484
    8. ' count' → logprob: -14.421810150146484
    9. '	for' → logprob: -14.921810150146484
    10. 'count' → logprob: -15.421810150146484

Token 925: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00157437555026263
    2. '   ' → logprob: -7.251574516296387
    3. 'count' → logprob: -7.751574516296387
    4. ' for' → logprob: -7.751574516296387
    5. '       ' → logprob: -12.751574516296387
    6. '	for' → logprob: -15.001574516296387
    7. ' count' → logprob: -15.376574516296387
    8. '
' → logprob: -15.501574516296387
    9. '```' → logprob: -16.12657356262207
    10. '  ' → logprob: -17.62657356262207

Token 926: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004620710853487253
    2. ' c' → logprob: -5.379620552062988
    3. '	c' → logprob: -16.254621505737305
    4. 'col' → logprob: -16.254621505737305
    5. '   ' → logprob: -16.629621505737305
    6. 'w' → logprob: -16.629621505737305
    7. '
' → logprob: -16.754621505737305
    8. 'board' → logprob: -17.004621505737305
    9. 'cell' → logprob: -17.129621505737305
    10. '```' → logprob: -18.004621505737305

Token 927: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019294669618830085
    2. 'in' → logprob: -6.25192928314209
    3. '   ' → logprob: -15.37692928314209
    4. ' ' → logprob: -15.50192928314209
    5. '       ' → logprob: -16.626930236816406
    6. '    ' → logprob: -16.876930236816406
    7. 'range' → logprob: -17.001930236816406
    8. '        ' → logprob: -17.251930236816406
    9. 'import' → logprob: -17.376930236816406
    10. '0' → logprob: -17.376930236816406

Token 928: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01416350994259119
    2. ' range' → logprob: -4.264163494110107
    3. '
' → logprob: -18.764163970947266
    4. '   ' → logprob: -19.389163970947266
    5. 'board' → logprob: -19.639163970947266
    6. '0' → logprob: -20.264163970947266
    7. ' ' → logprob: -20.264163970947266
    8. '(range' → logprob: -20.264163970947266
    9. '```' → logprob: -21.014163970947266
    10. '	range' → logprob: -21.389163970947266

Token 929: '(W' (ID: 26031)
  Prédit: 'WIDTH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WIDTH' → logprob: -0.41483625769615173
    2. '(W' → logprob: -1.6648362874984741
    3. 'range' → logprob: -1.9148362874984741
    4. ' range' → logprob: -6.414836406707764
    5. 'W' → logprob: -7.789836406707764
    6. '   ' → logprob: -8.039835929870605
    7. ' WIDTH' → logprob: -8.289835929870605
    8. '(' → logprob: -9.039835929870605
    9. '       ' → logprob: -10.164835929870605
    10. 'Range' → logprob: -10.914835929870605

Token 930: 'IDTH' (ID: 20688)
  Prédit: 'IDTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDTH' → logprob: -0.0020843585953116417
    2. 'WIDTH' → logprob: -6.752084255218506
    3. 'ID' → logprob: -7.002084255218506
    4. 'idth' → logprob: -13.752084732055664
    5. 'D' → logprob: -14.002084732055664
    6. 'IDE' → logprob: -14.252084732055664
    7. '   ' → logprob: -15.502084732055664
    8. '5' → logprob: -15.627084732055664
    9. 'ITH' → logprob: -15.752084732055664
    10. 'I' → logprob: -15.877084732055664

Token 931: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.003345017321407795
    2. '):' → logprob: -6.003345012664795
    3. '       ' → logprob: -7.503345012664795
    4. '   ' → logprob: -8.378345489501953
    5. '           ' → logprob: -10.128345489501953
    6. ' in' → logprob: -11.503345489501953
    7. ',' → logprob: -12.253345489501953
    8. '):
' → logprob: -12.378345489501953
    9. '=' → logprob: -12.628345489501953
    10. ')' → logprob: -12.628345489501953

Token 932: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006428772117942572
    2. ' if' → logprob: -5.1314287185668945
    3. 'if' → logprob: -7.6314287185668945
    4. '	       ' → logprob: -12.506428718566895
    5. '               ' → logprob: -12.506428718566895
    6. '       ' → logprob: -13.131428718566895
    7. '          ' → logprob: -13.256428718566895
    8. '```' → logprob: -13.756428718566895
    9. '            ' → logprob: -14.381428718566895
    10. '            
' → logprob: -14.506428718566895

Token 933: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004994890186935663
    2. 'count' → logprob: -5.754994869232178
    3. ' if' → logprob: -6.504994869232178
    4. '           ' → logprob: -8.254995346069336
    5. '               ' → logprob: -9.754995346069336
    6. ' count' → logprob: -13.379995346069336
    7. '```' → logprob: -17.004995346069336
    8. '       ' → logprob: -17.754995346069336
    9. '   ' → logprob: -18.129995346069336
    10. '[count' → logprob: -18.379995346069336

Token 934: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.029751067981123924
    2. ' board' → logprob: -3.5297510623931885
    3. '(board' → logprob: -15.27975082397461
    4. '           ' → logprob: -15.65475082397461
    5. '	board' → logprob: -16.02975082397461
    6. '   ' → logprob: -16.77975082397461
    7. '.board' → logprob: -17.77975082397461
    8. '       ' → logprob: -18.77975082397461
    9. '               ' → logprob: -19.15475082397461
    10. 'b' → logprob: -20.02975082397461

Token 935: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.9361264946837764e-07
    2. '[row' → logprob: -16.5
    3. ' [' → logprob: -16.625
    4. '[' → logprob: -17.5
    5. 'r' → logprob: -18.75
    6. '   ' → logprob: -19.0
    7. 'board' → logprob: -19.75
    8. '[c' → logprob: -20.25
    9. '][' → logprob: -20.75
    10. '[b' → logprob: -20.875

Token 936: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011279946193099022
    2. '[r' → logprob: -4.511280059814453
    3. '[c' → logprob: -8.511280059814453
    4. ']' → logprob: -11.386280059814453
    5. '[' → logprob: -11.636280059814453
    6. ' ][' → logprob: -12.511280059814453
    7. '   ' → logprob: -13.636280059814453
    8. '
' → logprob: -13.761280059814453
    9. ' [' → logprob: -14.261280059814453
    10. ')[' → logprob: -14.386280059814453

Token 937: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1472419600977446e-06
    2. '][' → logprob: -13.875000953674316
    3. '
' → logprob: -16.875001907348633
    4. '[c' → logprob: -17.125001907348633
    5. ' c' → logprob: -17.250001907348633
    6. 'r' → logprob: -17.375001907348633
    7. ')c' → logprob: -17.875001907348633
    8. ']' → logprob: -19.000001907348633
    9. '	c' → logprob: -19.500001907348633
    10. '```' → logprob: -21.000001907348633

Token 938: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.12728042900562286
    2. ']:' → logprob: -2.1272804737091064
    3. ']==' → logprob: -9.377280235290527
    4. ':
' → logprob: -9.627280235290527
    5. ']' → logprob: -9.752280235290527
    6. '):
' → logprob: -10.002280235290527
    7. ':' → logprob: -10.252280235290527
    8. ']:
' → logprob: -10.752280235290527
    9. '           ' → logprob: -11.377280235290527
    10. '               ' → logprob: -11.752280235290527

Token 939: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01131412386894226
    2. 'count' → logprob: -4.6363139152526855
    3. ' count' → logprob: -7.2613139152526855
    4. '              ' → logprob: -8.886314392089844
    5. '[count' → logprob: -9.011314392089844
    6. '                       ' → logprob: -9.261314392089844
    7. ',count' → logprob: -9.386314392089844
    8. '                   ' → logprob: -9.386314392089844
    9. '+' → logprob: -9.761314392089844
    10. '=count' → logprob: -10.011314392089844

Token 940: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.00334097514860332
    2. ' count' → logprob: -5.753341197967529
    3. '               ' → logprob: -9.128340721130371
    4. '                   ' → logprob: -9.878340721130371
    5. '                       ' → logprob: -13.253340721130371
    6. '	count' → logprob: -14.628340721130371
    7. '           ' → logprob: -15.753340721130371
    8. '                ' → logprob: -15.878340721130371
    9. '                               ' → logprob: -16.003341674804688
    10. '<count' → logprob: -16.503341674804688

Token 941: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014188768342137337
    2. ' +=' → logprob: -4.264188766479492
    3. '+' → logprob: -10.639188766479492
    4. ']+=' → logprob: -13.764188766479492
    5. '=' → logprob: -16.514188766479492
    6. '+="' → logprob: -16.639188766479492
    7. '+='' → logprob: -17.264188766479492
    8. '+=(' → logprob: -17.639188766479492
    9. ')' → logprob: -17.764188766479492
    10. '               ' → logprob: -17.889188766479492

Token 942: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -21.875019073486328
    4. ' ' → logprob: -22.250019073486328
    5. '۱' → logprob: -23.000019073486328
    6. '<|end|>' → logprob: -23.125019073486328
    7. '```' → logprob: -23.250019073486328
    8. '１' → logprob: -23.875019073486328
    9. '+' → logprob: -24.125019073486328
    10. '
' → logprob: -24.250019073486328

Token 943: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '```' → logprob: -23.75
    4. '
' → logprob: -23.875
    5. '   ' → logprob: -25.125
    6. '１' → logprob: -25.125
    7. '+' → logprob: -25.625
    8. '۱' → logprob: -25.75
    9. ' ' → logprob: -26.75
    10. '<|end|>' → logprob: -26.875

Token 944: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3304710388183594
    2. '    
' → logprob: -1.5804710388183594
    3. ' 
' → logprob: -1.8304710388183594
    4. ' return' → logprob: -2.0804710388183594
    5. '
' → logprob: -2.2054710388183594
    6. '  
' → logprob: -3.3304710388183594
    7. '<|end|>' → logprob: -3.5804710388183594
    8. 'return' → logprob: -3.8304710388183594
    9. '               ' → logprob: -4.830471038818359
    10. '       ' → logprob: -4.955471038818359

Token 945: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001200827769935131
    2. 'return' → logprob: -7.7512006759643555
    3. ' return' → logprob: -7.8762006759643555
    4. '    
' → logprob: -8.251200675964355
    5. '
' → logprob: -10.251200675964355
    6. '               ' → logprob: -10.501200675964355
    7. '	return' → logprob: -10.751200675964355
    8. '       ' → logprob: -11.001200675964355
    9. '                
' → logprob: -11.501200675964355
    10. '    ' → logprob: -12.626200675964355

Token 946: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.40806883573532104
    2. '   ' → logprob: -1.1580688953399658
    3. ' return' → logprob: -3.908068895339966
    4. '       ' → logprob: -7.783068656921387
    5. '	return' → logprob: -8.783068656921387
    6. '
' → logprob: -8.908068656921387
    7. '               ' → logprob: -9.158068656921387
    8. '           ' → logprob: -10.408068656921387
    9. ' ' → logprob: -10.783068656921387
    10. '                   ' → logprob: -11.033068656921387

Token 947: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0024756586644798517
    2. ' count' → logprob: -6.002475738525391
    3. '	count' → logprob: -20.62747573852539
    4. '[count' → logprob: -22.87747573852539
    5. '(count' → logprob: -23.00247573852539
    6. 'counts' → logprob: -23.75247573852539
    7. '_count' → logprob: -23.75247573852539
    8. '$count' → logprob: -24.12747573852539
    9. ' ' → logprob: -24.50247573852539
    10. '   ' → logprob: -25.37747573852539

Token 948: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 949: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5109288692474365
    2. '<|end|>' → logprob: -1.7609288692474365
    3. 'import' → logprob: -2.6359288692474365
    4. 'n' → logprob: -3.0109288692474365
    5. '```' → logprob: -3.0109288692474365
    6. 'def' → logprob: -3.6359288692474365
    7. 'd' → logprob: -4.760929107666016
    8. 'if' → logprob: -5.135929107666016
    9. '\n' → logprob: -5.510929107666016
    10. 'input' → logprob: -5.510929107666016

Token 950: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00013834332639817148
    2. 'main' → logprob: -9.500138282775879
    3. ' solve' → logprob: -10.625138282775879
    4. ' process' → logprob: -10.750138282775879
    5. '_main' → logprob: -11.125138282775879
    6. ' simulate' → logprob: -13.750138282775879
    7. ' parse' → logprob: -14.500138282775879
    8. ' solution' → logprob: -15.125138282775879
    9. '	main' → logprob: -15.250138282775879
    10. '_' → logprob: -15.375138282775879

Token 951: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.696077227592468e-05
    2. '(' → logprob: -10.500077247619629
    3. '()' → logprob: -10.750077247619629
    4. '():
' → logprob: -11.125077247619629
    5. ' ():' → logprob: -11.500077247619629
    6. ':' → logprob: -13.500077247619629
    7. '(:' → logprob: -13.875077247619629
    8. '()>' → logprob: -15.625077247619629
    9. '():
' → logprob: -16.000076293945312
    10. '(":' → logprob: -16.125076293945312

Token 952: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004112950060516596
    2. ' board' → logprob: -5.754112720489502
    3. ' input' → logprob: -7.629112720489502
    4. ' import' → logprob: -8.50411319732666
    5. 'import' → logprob: -9.62911319732666
    6. '```' → logprob: -10.25411319732666
    7. 'board' → logprob: -10.37911319732666
    8. '	board' → logprob: -10.62911319732666
    9. ' n' → logprob: -10.75411319732666
    10. ' readline' → logprob: -10.87911319732666

Token 953: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.753403902053833
    2. ' board' → logprob: -1.628403902053833
    3. 'board' → logprob: -2.003403902053833
    4. ' input' → logprob: -2.878403902053833
    5. 'import' → logprob: -3.128403902053833
    6. ' n' → logprob: -3.378403902053833
    7. ' import' → logprob: -3.628403902053833
    8. 'input' (adapté à ' input') → logprob: -3.753403902053833
    9. 'n' → logprob: -4.378403663635254
    10. '```' → logprob: -7.753403663635254

Token 954: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006490831263363361
    2. '_line' → logprob: -5.756490707397461
    3. '_data' → logprob: -6.756490707397461
    4. '=' → logprob: -7.381490707397461
    5. '_lines' → logprob: -7.381490707397461
    6. '().' → logprob: -8.256490707397461
    7. '(' → logprob: -8.506490707397461
    8. ' =' → logprob: -8.631490707397461
    9. '_' → logprob: -9.631490707397461
    10. 'data' → logprob: -9.756490707397461

Token 955: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.004079708829522133
    2. ' sys' → logprob: -5.504079818725586
    3. '	sys' → logprob: -14.004079818725586
    4. '=sys' → logprob: -14.754079818725586
    5. '(sys' → logprob: -16.254079818725586
    6. 'input' → logprob: -20.004079818725586
    7. 'lambda' → logprob: -20.254079818725586
    8. '_sys' → logprob: -22.004079818725586
    9. '```' → logprob: -22.254079818725586
    10. '.sys' → logprob: -22.254079818725586

Token 956: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -8.566264295950532e-05
    2. '.' → logprob: -9.875085830688477
    3. '.stdout' → logprob: -10.750085830688477
    4. '.std' → logprob: -12.375085830688477
    5. '.readline' → logprob: -12.625085830688477
    6. '.argv' → logprob: -12.875085830688477
    7. 'stdin' → logprob: -13.250085830688477
    8. ' .' → logprob: -15.125085830688477
    9. '().' → logprob: -15.875085830688477
    10. '._' → logprob: -16.500085830688477

Token 957: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0015622387873008847
    2. '.stdin' → logprob: -7.501562118530273
    3. 'read' → logprob: -8.126562118530273
    4. '.read' → logprob: -8.251562118530273
    5. '.' → logprob: -8.501562118530273
    6. ' =' → logprob: -8.751562118530273
    7. '=' → logprob: -10.751562118530273
    8. '_read' → logprob: -10.876562118530273
    9. '.readlines' → logprob: -11.251562118530273
    10. 'stdin' → logprob: -11.501562118530273

Token 958: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07407926768064499
    2. '   ' → logprob: -3.3240792751312256
    3. '().' → logprob: -3.8240792751312256
    4. '()
' → logprob: -4.3240790367126465
    5. '()\' → logprob: -8.949079513549805
    6. '
' → logprob: -9.949079513549805
    7. 'n' → logprob: -10.199079513549805
    8. ' ()' → logprob: -10.824079513549805
    9. '();' → logprob: -11.449079513549805
    10. '(' → logprob: -11.699079513549805

Token 959: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2545434534549713
    2. 'n' → logprob: -1.504543423652649
    3. 'N' → logprob: -6.379543304443359
    4. ' n' → logprob: -7.379543304443359
    5. '	n' → logprob: -9.12954330444336
    6. 'T' → logprob: -9.50454330444336
    7. 't' → logprob: -9.62954330444336
    8. 'num' → logprob: -11.25454330444336
    9. '(n' → logprob: -11.62954330444336
    10. '```' → logprob: -11.75454330444336

Token 960: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26711195707321167
    2. 'N' → logprob: -1.5171120166778564
    3. 'board' → logprob: -4.267111778259277
    4. '   ' → logprob: -7.392111778259277
    5. 'T' → logprob: -9.017111778259277
    6. ' n' → logprob: -9.017111778259277
    7. 'num' → logprob: -9.142111778259277
    8. 't' → logprob: -10.392111778259277
    9. ' N' → logprob: -10.767111778259277
    10. ' board' → logprob: -12.142111778259277

Token 961: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5766162276268005
    2. 'True' → logprob: -0.8266162276268005
    3. '(True' → logprob: -7.326616287231445
    4. '1' → logprob: -11.076616287231445
    5. '=True' → logprob: -13.326616287231445
    6. ' ' → logprob: -14.201616287231445
    7. 'true' → logprob: -14.826616287231445
    8. '   ' → logprob: -15.951616287231445
    9. '_true' → logprob: -16.201616287231445
    10. '(' → logprob: -16.951616287231445

Token 962: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07091180235147476
    2. '       ' → logprob: -3.6959118843078613
    3. '():' → logprob: -3.8209118843078613
    4. ':
' → logprob: -4.320911884307861
    5. '   ' → logprob: -5.820911884307861
    6. '():
' → logprob: -6.320911884307861
    7. '(line' → logprob: -6.570911884307861
    8. ',' → logprob: -7.570911884307861
    9. '(' → logprob: -7.695911884307861
    10. ' line' → logprob: -7.820911884307861

Token 963: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6878678798675537
    2. ' line' → logprob: -1.1878678798675537
    3. 'line' → logprob: -1.6878678798675537
    4. '       ' → logprob: -4.937868118286133
    5. '	line' → logprob: -8.062868118286133
    6. 'n' → logprob: -10.062868118286133
    7. 's' → logprob: -11.812868118286133
    8. 'try' → logprob: -11.937868118286133
    9. 'l' → logprob: -12.062868118286133
    10. ' s' → logprob: -12.687868118286133

Token 964: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.000644764571916312
    2. ' line' → logprob: -8.00064468383789
    3. 'n' → logprob: -8.25064468383789
    4. '   ' → logprob: -10.50064468383789
    5. 'N' → logprob: -11.00064468383789
    6. 'l' → logprob: -13.37564468383789
    7. 's' → logprob: -14.50064468383789
    8. 'data' → logprob: -14.62564468383789
    9. '	line' → logprob: -14.62564468383789
    10. 'L' → logprob: -15.25064468383789

Token 965: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022971272468567
    2. '=' → logprob: -1.9102296829223633
    3. '=line' → logprob: -12.160229682922363
    4. 's' → logprob: -16.28523063659668
    5. ' =
' → logprob: -17.16023063659668
    6. '   ' → logprob: -17.41023063659668
    7. ' ' → logprob: -17.53523063659668
    8. '=
' → logprob: -17.66023063659668
    9. '(line' → logprob: -17.78523063659668
    10. 'line' → logprob: -17.78523063659668

Token 966: ' ''
' (ID: 25366)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5215197205543518
    2. ' sys' → logprob: -1.521519660949707
    3. 'input' → logprob: -1.771519660949707
    4. ' input' → logprob: -4.021519660949707
    5. '=sys' → logprob: -13.521519660949707
    6. '(sys' → logprob: -14.021519660949707
    7. '	sys' → logprob: -16.646520614624023
    8. '=input' → logprob: -17.146520614624023
    9. 'line' → logprob: -17.396520614624023
    10. 'stdin' → logprob: -17.521520614624023

Token 967: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3279540240764618
    2. '=' → logprob: -1.3279540538787842
    3. '=line' → logprob: -4.452953815460205
    4. '       ' → logprob: -5.952953815460205
    5. ' line' → logprob: -8.202954292297363
    6. '(line' → logprob: -10.702954292297363
    7. 'line' → logprob: -10.702954292297363
    8. '   ' → logprob: -11.452954292297363
    9. '#line' → logprob: -12.452954292297363
    10. '	line' → logprob: -13.452954292297363

Token 968: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.00034630970912985504
    2. ' line' → logprob: -8.000346183776855
    3. 'try' → logprob: -11.500346183776855
    4. '       ' → logprob: -14.750346183776855
    5. 'while' (adapté à ' while') → logprob: -16.125347137451172
    6. '
' → logprob: -16.375347137451172
    7. '   ' → logprob: -16.625347137451172
    8. '           ' → logprob: -18.250347137451172
    9. '(line' → logprob: -19.000347137451172
    10. '	line' → logprob: -19.500347137451172

Token 969: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.1286863386631012
    2. ' line' → logprob: -2.7536864280700684
    3. 'not' → logprob: -3.5036864280700684
    4. ' not' → logprob: -3.7536864280700684
    5. '(line' → logprob: -6.628686428070068
    6. 'len' → logprob: -7.128686428070068
    7. 'True' → logprob: -7.128686428070068
    8. ' True' → logprob: -7.628686428070068
    9. '(not' → logprob: -9.62868595123291
    10. ' len' → logprob: -10.62868595123291

Token 970: '.strip' (ID: 40613)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.694656491279602
    2. '=' → logprob: -0.819656491279602
    3. '.strip' → logprob: -3.1946563720703125
    4. ' ==' → logprob: -4.4446563720703125
    5. ' =' → logprob: -5.5696563720703125
    6. ':=' → logprob: -5.6946563720703125
    7. ' :=' → logprob: -9.194656372070312
    8. '()==' → logprob: -10.069656372070312
    9. '!=' → logprob: -10.194656372070312
    10. '```' → logprob: -10.694656372070312

Token 971: '()' (ID: 416)
  Prédit: '()=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()==' → logprob: -0.6806774735450745
    2. '==' → logprob: -1.1806774139404297
    3. '()' → logprob: -1.6806774139404297
    4. ' ==' → logprob: -7.93067741394043
    5. '=' → logprob: -10.18067741394043
    6. '===' → logprob: -12.43067741394043
    7. '()!=' → logprob: -13.55567741394043
    8. '()<' → logprob: -13.68067741394043
    9. '()=="' → logprob: -13.93067741394043
    10. '()='' → logprob: -14.30567741394043

Token 972: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.009528345428407192
    2. '()==' → logprob: -5.134528160095215
    3. ' ==' → logprob: -5.759528160095215
    4. '=' → logprob: -7.884528160095215
    5. '()' → logprob: -9.759528160095215
    6. ' =' → logprob: -12.509528160095215
    7. '===' → logprob: -13.259528160095215
    8. '==
' → logprob: -14.884528160095215
    9. ')==' → logprob: -15.884528160095215
    10. '=='' → logprob: -15.884528160095215

Token 973: ' '':
' (ID: 125614)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.575944721698761
    2. '''' → logprob: -0.825944721698761
    3. '"":' → logprob: -12.825944900512695
    4. '''
' → logprob: -13.700944900512695
    5. '""' → logprob: -13.950944900512695
    6. ''''' → logprob: -15.575944900512695
    7. ''',' → logprob: -15.825944900512695
    8. ''\' → logprob: -16.200944900512695
    9. ' '':
' → logprob: -16.325944900512695
    10. '''.' → logprob: -16.325944900512695

Token 974: '           ' (ID: 352)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4587746560573578
    2. '           ' → logprob: -1.3337746858596802
    3. 'line' → logprob: -2.5837745666503906
    4. '       ' → logprob: -3.9587745666503906
    5. ' and' → logprob: -5.458774566650391
    6. ':
' → logprob: -6.583774566650391
    7. '	line' → logprob: -6.833774566650391
    8. '(line' → logprob: -6.833774566650391
    9. ':' → logprob: -7.083774566650391
    10. '=line' → logprob: -7.708774566650391

Token 975: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0005251537077128887
    2. '           ' → logprob: -8.25052547454834
    3. ' line' → logprob: -8.37552547454834
    4. 'l' → logprob: -11.00052547454834
    5. 's' → logprob: -11.37552547454834
    6. '       ' → logprob: -13.12552547454834
    7. 'raw' → logprob: -13.75052547454834
    8. '	line' → logprob: -14.25052547454834
    9. 'try' → logprob: -15.12552547454834
    10. '#line' → logprob: -15.50052547454834

Token 976: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3890516459941864
    2. ' =' → logprob: -1.1390516757965088
    3. '=line' → logprob: -6.13905143737793
    4. '=sys' → logprob: -10.88905143737793
    5. 'line' → logprob: -13.01405143737793
    6. ' line' → logprob: -16.01405143737793
    7. '=
' → logprob: -17.26405143737793
    8. '[line' → logprob: -17.26405143737793
    9. '_line' → logprob: -17.51405143737793
    10. ':=' → logprob: -17.63905143737793

Token 977: ' input' (ID: 3422)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.32503166794776917
    2. 'input' → logprob: -1.3250316381454468
    3. ' sys' → logprob: -4.575031757354736
    4. ' input' → logprob: -6.575031757354736
    5. 'stdin' → logprob: -15.825031280517578
    6. '(sys' → logprob: -17.325031280517578
    7. '=sys' → logprob: -18.075031280517578
    8. 'import' → logprob: -18.325031280517578
    9. '	sys' → logprob: -18.950031280517578
    10. 'Input' → logprob: -19.700031280517578

Token 978: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12734255194664001
    2. '()
' → logprob: -2.127342462539673
    3. '().' → logprob: -7.877342700958252
    4. '()

' → logprob: -11.002342224121094
    5. '()\' → logprob: -12.252342224121094
    6. '(' → logprob: -12.627342224121094
    7. '()
' → logprob: -12.627342224121094
    8. '();' → logprob: -13.377342224121094
    9. '())' → logprob: -13.377342224121094
    10. '()<' → logprob: -14.002342224121094

Token 979: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4298456907272339
    2. '           ' → logprob: -1.0548456907272339
    3. ' if' → logprob: -7.179845809936523
    4. 'if' → logprob: -8.554845809936523
    5. '<|end|>' → logprob: -9.679845809936523
    6. '
' → logprob: -10.179845809936523
    7. '```' → logprob: -10.804845809936523
    8. '<|end|>' → logprob: -11.304845809936523
    9. '        
' → logprob: -11.429845809936523
    10. '   ' → logprob: -11.804845809936523

Token 980: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12414837628602982
    2. '           ' → logprob: -2.624148368835449
    3. ' if' → logprob: -3.124148368835449
    4. '       ' → logprob: -8.24914836883545
    5. 'If' → logprob: -11.99914836883545
    6. '	if' → logprob: -13.37414836883545
    7. 'import' → logprob: -13.37414836883545
    8. 'break' → logprob: -13.62414836883545
    9. '
' → logprob: -14.24914836883545
    10. 's' → logprob: -15.37414836883545

Token 981: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3046915531158447
    2. ' not' → logprob: -2.0546915531158447
    3. 'not' → logprob: -2.0546915531158447
    4. ' line' → logprob: -5.054691314697266
    5. '#line' → logprob: -13.054691314697266
    6. '(line' → logprob: -13.804691314697266
    7. '	line' → logprob: -14.054691314697266
    8. 'len' → logprob: -14.929691314697266
    9. '[line' → logprob: -15.179691314697266
    10. '(not' → logprob: -15.679691314697266

Token 982: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03811952471733093
    2. ' ==' → logprob: -3.2881195545196533
    3. '=' → logprob: -10.538119316101074
    4. 'is' → logprob: -11.163119316101074
    5. ' is' → logprob: -11.663119316101074
    6. '===' → logprob: -11.913119316101074
    7. '==
' → logprob: -12.163119316101074
    8. '=='' → logprob: -12.288119316101074
    9. ')==' → logprob: -12.663119316101074
    10. '.strip' → logprob: -12.913119316101074

Token 983: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0003433296224102378
    2. ''' → logprob: -8.000343322753906
    3. '""' → logprob: -12.750343322753906
    4. '''
' → logprob: -13.500343322753906
    5. ''''' → logprob: -14.000343322753906
    6. ' '':
' → logprob: -14.000343322753906
    7. ' ''' → logprob: -14.125343322753906
    8. ''\' → logprob: -15.250343322753906
    9. ''',' → logprob: -15.500343322753906
    10. '''.' → logprob: -15.625343322753906

Token 984: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.047500282526016235
    2. 'return' → logprob: -3.6725003719329834
    3. ' return' → logprob: -3.9225003719329834
    4. '           ' → logprob: -6.797500133514404
    5. '                   ' → logprob: -10.922500610351562
    6. ':return' → logprob: -11.172500610351562
    7. '	return' → logprob: -12.172500610351562
    8. '                       ' → logprob: -12.422500610351562
    9. '       ' → logprob: -12.797500610351562
    10. 'break' → logprob: -12.797500610351562

Token 985: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.009323570877313614
    2. ' return' → logprob: -5.259323596954346
    3. '               ' → logprob: -5.509323596954346
    4. '                   ' → logprob: -10.759323120117188
    5. 'break' → logprob: -12.009323120117188
    6. '           ' → logprob: -12.884323120117188
    7. '                       ' → logprob: -13.509323120117188
    8. '	return' → logprob: -14.634323120117188
    9. 'import' → logprob: -15.634323120117188
    10. 'if' → logprob: -15.759323120117188

Token 986: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01060064323246479
    2. '
' → logprob: -4.760600566864014
    3. '        
' → logprob: -6.510600566864014
    4. '<|end|>' → logprob: -7.760600566864014
    5. '    
' → logprob: -11.635601043701172
    6. '   ' → logprob: -11.635601043701172
    7. '<|end|>' → logprob: -11.885601043701172
    8. '  
' → logprob: -12.260601043701172
    9. '\n' → logprob: -12.260601043701172
    10. '	' → logprob: -12.385601043701172

Token 987: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008490558248013258
    2. '<|end|>' → logprob: -7.87584924697876
    3. '
' → logprob: -8.375848770141602
    4. '        
' → logprob: -8.625848770141602
    5. '	' → logprob: -10.750848770141602
    6. '           ' → logprob: -11.625848770141602
    7. '<|end|>' → logprob: -11.875848770141602
    8. '  
' → logprob: -12.750848770141602
    9. '   ' → logprob: -12.875848770141602
    10. '		
' → logprob: -12.875848770141602

Token 988: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.13178427517414093
    2. '       ' → logprob: -2.256784200668335
    3. 'N' → logprob: -4.256784439086914
    4. ' n' → logprob: -5.756784439086914
    5. 't' → logprob: -7.631784439086914
    6. '   ' → logprob: -7.756784439086914
    7. 'parts' → logprob: -8.881784439086914
    8. 'try' → logprob: -9.006784439086914
    9. ' parts' → logprob: -9.631784439086914
    10. '
' → logprob: -10.131784439086914

Token 989: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04308390989899635
    2. '=' → logprob: -3.168083906173706
    3. '=int' → logprob: -9.668084144592285
    4. ',' → logprob: -11.168084144592285
    5. '_tokens' → logprob: -13.293084144592285
    6. ' ' → logprob: -13.543084144592285
    7. 'tokens' → logprob: -14.168084144592285
    8. ' ,' → logprob: -14.168084144592285
    9. ')' → logprob: -14.293084144592285
    10. '=line' → logprob: -14.668084144592285

Token 990: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00033546582562848926
    2. ' int' → logprob: -8.000335693359375
    3. '[int' → logprob: -18.125335693359375
    4. '(int' → logprob: -19.250335693359375
    5. '=int' → logprob: -20.625335693359375
    6. 'len' → logprob: -20.875335693359375
    7. '	int' → logprob: -21.250335693359375
    8. '
' → logprob: -21.375335693359375
    9. ' ' → logprob: -21.375335693359375
    10. '   ' → logprob: -21.625335693359375

Token 991: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -8.2994620242971e-06
    2. 'line' → logprob: -11.750008583068848
    3. '(' → logprob: -14.875008583068848
    4. ' line' → logprob: -16.87500762939453
    5. '[line' → logprob: -18.00000762939453
    6. '#line' → logprob: -18.25000762939453
    7. '=line' → logprob: -18.75000762939453
    8. '(n' → logprob: -19.00000762939453
    9. '(
' → logprob: -19.62500762939453
    10. '	line' → logprob: -20.12500762939453

Token 992: '.strip' (ID: 40613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008437154814600945
    2. '.strip' → logprob: -5.008437156677246
    3. '())' → logprob: -6.508437156677246
    4. ')
' → logprob: -9.258437156677246
    5. '()' → logprob: -9.383437156677246
    6. ' )' → logprob: -11.258437156677246
    7. '.rstrip' → logprob: -11.758437156677246
    8. '.readline' → logprob: -11.883437156677246
    9. '().' → logprob: -12.383437156677246
    10. '(' → logprob: -12.383437156677246

Token 993: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0032228680793195963
    2. ')' → logprob: -6.253222942352295
    3. '()' → logprob: -6.753222942352295
    4. '())
' → logprob: -9.003222465515137
    5. '(' → logprob: -13.503222465515137
    6. '()
' → logprob: -14.253222465515137
    7. ' ())' → logprob: -14.378222465515137
    8. '())

' → logprob: -15.628222465515137
    9. '();)' → logprob: -16.253223419189453
    10. ')
' → logprob: -16.253223419189453

Token 994: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03617384657263756
    2. 'for' → logprob: -3.9111738204956055
    3. '   ' → logprob: -4.4111738204956055
    4. ' for' → logprob: -5.7861738204956055
    5. 'if' → logprob: -9.036173820495605
    6. '	for' → logprob: -9.286173820495605
    7. '        
' → logprob: -11.036173820495605
    8. '```' → logprob: -11.286173820495605
    9. 'board' → logprob: -11.536173820495605
    10. 'blocks' → logprob: -11.786173820495605

Token 995: ' if' (ID: 538)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.0023887332063168287
    2. 'if' (adapté à ' if') → logprob: -6.377388954162598
    3. '       ' → logprob: -7.502388954162598
    4. '   ' → logprob: -10.502388954162598
    5. 'for' → logprob: -10.502388954162598
    6. 'block' → logprob: -10.502388954162598
    7. ' board' → logprob: -11.127388954162598
    8. 'boards' → logprob: -11.877388954162598
    9. '```' → logprob: -11.877388954162598
    10. 'break' → logprob: -12.127388954162598

Token 996: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011059137992560863
    2. ' n' → logprob: -4.511059284210205
    3. ' not' → logprob: -11.511058807373047
    4. 'not' → logprob: -13.636058807373047
    5. '	n' → logprob: -16.011058807373047
    6. 'n't' → logprob: -17.886058807373047
    7. ' ' → logprob: -18.136058807373047
    8. '   ' → logprob: -18.261058807373047
    9. ')n' → logprob: -19.636058807373047
    10. '
' → logprob: -19.761058807373047

Token 997: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20144110918045044
    2. '==' → logprob: -1.7014410495758057
    3. '<=' → logprob: -12.076440811157227
    4. ' <=' → logprob: -12.076440811157227
    5. '()==' → logprob: -12.201440811157227
    6. ')==' → logprob: -13.201440811157227
    7. '===' → logprob: -13.201440811157227
    8. '=' → logprob: -13.201440811157227
    9. '==
' → logprob: -13.201440811157227
    10. '```' → logprob: -14.326440811157227

Token 998: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '-' → logprob: -19.00002098083496
    4. '=' → logprob: -19.12502098083496
    5. '   ' → logprob: -19.62502098083496
    6. '۰' → logprob: -20.25002098083496
    7. '
' → logprob: -21.37502098083496
    8. ' ' → logprob: -21.50002098083496
    9. '  ' → logprob: -21.62502098083496
    10. '```' → logprob: -22.18752098083496

Token 999: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '-' → logprob: -18.250001907348633
    4. '```' → logprob: -21.000001907348633
    5. '=' → logprob: -21.750001907348633
    6. '۰' → logprob: -22.000001907348633
    7. '00' → logprob: -23.000001907348633
    8. '1' → logprob: -23.125001907348633
    9. '000' → logprob: -23.250001907348633
    10. '
' → logprob: -23.250001907348633

Token 1000: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4764464795589447
    2. ':
' → logprob: -0.9764465093612671
    3. '       ' → logprob: -6.476446628570557
    4. '           ' → logprob: -7.226446628570557
    5. '   ' → logprob: -9.976446151733398
    6. ':return' → logprob: -10.101446151733398
    7. ':
' → logprob: -12.601446151733398
    8. '	' → logprob: -12.726446151733398
    9. ' :' → logprob: -14.226446151733398
    10. '	   ' → logprob: -14.351446151733398

Token 1001: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.478889215737581e-05
    2. '       ' → logprob: -10.250054359436035
    3. '		' → logprob: -11.750054359436035
    4. '   ' → logprob: -12.375054359436035
    5. '	       ' → logprob: -13.125054359436035
    6. '          ' → logprob: -14.000054359436035
    7. '               ' → logprob: -14.125054359436035
    8. '	   ' → logprob: -14.625054359436035
    9. '         ' → logprob: -14.625054359436035
    10. ' break' → logprob: -14.750054359436035

Token 1002: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4750111997127533
    2. 'break' (adapté à ' break') → logprob: -0.9750112295150757
    3. '           ' → logprob: -7.475011348724365
    4. ' break' → logprob: -8.475010871887207
    5. ' return' → logprob: -9.100010871887207
    6. '       ' → logprob: -10.475010871887207
    7. '	break' → logprob: -11.100010871887207
    8. '	return' → logprob: -13.475010871887207
    9. '               ' → logprob: -13.975010871887207
    10. '
' → logprob: -15.350010871887207

Token 1003: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3977111279964447
    2. '
' → logprob: -1.272711157798767
    3. '   ' → logprob: -3.7727110385894775
    4. '        
' → logprob: -4.272711277008057
    5. '```' → logprob: -5.147711277008057
    6. '<|end|>' → logprob: -5.897711277008057
    7. '    
' → logprob: -6.272711277008057
    8. '``' → logprob: -8.772710800170898
    9. '  
' → logprob: -9.397710800170898
    10. '		
' → logprob: -9.397710800170898

Token 1004: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.370646595954895
    2. '   ' → logprob: -1.495646595954895
    3. 'board' → logprob: -2.4956464767456055
    4. '        
' → logprob: -7.1206464767456055
    5. '	board' → logprob: -7.1206464767456055
    6. '```' → logprob: -7.4956464767456055
    7. ' board' → logprob: -7.7456464767456055
    8. '
' → logprob: -8.120646476745605
    9. '    
' → logprob: -8.995646476745605
    10. '   ' → logprob: -10.620646476745605

Token 1005: ' #' (ID: 1069)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.00012582694762386382
    2. '#' (adapté à ' #') → logprob: -9.625125885009766
    3. '       ' → logprob: -10.500125885009766
    4. '
' → logprob: -10.875125885009766
    5. '   ' → logprob: -12.000125885009766
    6. ' board' → logprob: -13.000125885009766
    7. '	board' → logprob: -13.000125885009766
    8. '        
' → logprob: -14.125125885009766
    9. 'boards' → logprob: -14.250125885009766
    10. 'block' → logprob: -14.500125885009766

Token 1006: ' Initialize' (ID: 19496)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.0002666999935172498
    2. '#' → logprob: -8.500267028808594
    3. '       ' → logprob: -10.000267028808594
    4. ' board' → logprob: -12.125267028808594
    5. '   ' → logprob: -12.250267028808594
    6. 'block' → logprob: -12.375267028808594
    7. '
' → logprob: -14.125267028808594
    8. 'blocks' → logprob: -14.125267028808594
    9. '	board' → logprob: -14.375267028808594
    10. 'boards' → logprob: -14.625267028808594

Token 1007: ' empty' (ID: 8213)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -5.200166469876422e-06
    2. ' board' → logprob: -12.250004768371582
    3. '       ' → logprob: -15.500004768371582
    4. '```' → logprob: -16.1250057220459
    5. '   ' → logprob: -17.3750057220459
    6. '
' → logprob: -17.6250057220459
    7. '	board' → logprob: -17.8750057220459
    8. '(board' → logprob: -20.2500057220459
    9. '``' → logprob: -20.6250057220459
    10. '           ' → logprob: -21.0000057220459

Token 1008: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.006723771803081036
    2. ' board' → logprob: -5.006723880767822
    3. '
' → logprob: -12.006723403930664
    4. '   ' → logprob: -13.881723403930664
    5. '	board' → logprob: -14.256723403930664
    6. '(board' → logprob: -15.506723403930664
    7. '       ' → logprob: -15.756723403930664
    8. '_board' → logprob: -15.881723403930664
    9. '```' → logprob: -16.131723403930664
    10. 'block' → logprob: -16.631723403930664

Token 1009: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00601767236366868
    2. 'board' → logprob: -5.756017684936523
    3. '   ' → logprob: -6.006017684936523
    4. '
' → logprob: -8.131017684936523
    5. ' board' → logprob: -9.756017684936523
    6. '(board' → logprob: -11.631017684936523
    7. '	board' → logprob: -12.631017684936523
    8. '```' → logprob: -12.881017684936523
    9. '        
' → logprob: -13.381017684936523
    10. ' =' → logprob: -14.756017684936523

Token 1010: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16127724945545197
    2. 'board' → logprob: -1.9112772941589355
    3. ' board' → logprob: -7.2862772941589355
    4. '   ' → logprob: -8.286276817321777
    5. '```' → logprob: -9.411276817321777
    6. '
' → logprob: -11.286276817321777
    7. '(board' → logprob: -11.661276817321777
    8. '	board' → logprob: -11.911276817321777
    9. '        
' → logprob: -13.286276817321777
    10. '``' → logprob: -13.536276817321777

Token 1011: ' #' (ID: 1069)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -2.1888679839321412e-05
    2. ' board' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.500021934509277
    4. '       ' → logprob: -16.25002098083496
    5. '	board' → logprob: -16.37502098083496
    6. '```' → logprob: -18.12502098083496
    7. '
' → logprob: -18.87502098083496
    8. '(board' → logprob: -19.37502098083496
    9. '.board' → logprob: -20.50002098083496
    10. 'block' → logprob: -21.12502098083496

Token 1012: ' bottom' (ID: 8725)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -7.743758760625497e-05
    2. ' board' → logprob: -9.750077247619629
    3. '       ' → logprob: -11.000077247619629
    4. '   ' → logprob: -13.125077247619629
    5. '	board' → logprob: -15.250077247619629
    6. '```' → logprob: -16.625078201293945
    7. '(board' → logprob: -17.750078201293945
    8. '.board' → logprob: -19.125078201293945
    9. ' ' → logprob: -19.125078201293945
    10. '
' → logprob: -19.125078201293945

Token 1013: ' row' (ID: 5225)
  Prédit: '_board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_board' → logprob: -0.7754594683647156
    2. ' =' → logprob: -1.2754595279693604
    3. 'board' → logprob: -2.0254595279693604
    4. '=' → logprob: -2.4004595279693604
    5. '_rows' → logprob: -4.275459289550781
    6. '   ' → logprob: -5.400459289550781
    7. 'rows' → logprob: -5.525459289550781
    8. '_row' → logprob: -5.525459289550781
    9. 'row' → logprob: -6.025459289550781
    10. '```' → logprob: -6.150459289550781

Token 1014: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39383870363235474
    2. '=' → logprob: -1.51883864402771
    3. 'board' → logprob: -2.26883864402771
    4. '   ' → logprob: -6.893838882446289
    5. '(board' → logprob: -7.768838882446289
    6. ' is' → logprob: -7.768838882446289
    7. ' board' → logprob: -7.893838882446289
    8. ':' → logprob: -8.268838882446289
    9. 'is' → logprob: -8.893838882446289
    10. '_board' → logprob: -9.268838882446289

Token 1015: ' ' (ID: 220)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.2504635155200958
    2. '[' → logprob: -1.8754634857177734
    3. '[[' → logprob: -2.7504634857177734
    4. '0' → logprob: -5.625463485717773
    5. ' board' → logprob: -8.000463485717773
    6. ' [[' → logprob: -8.375463485717773
    7. ' [' → logprob: -9.000463485717773
    8. 'False' → logprob: -10.500463485717773
    9. '[
' → logprob: -11.375463485717773
    10. '[]' → logprob: -12.000463485717773

Token 1016: '0' (ID: 15)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.11467481404542923
    2. '[' → logprob: -2.4896748065948486
    3. '0' → logprob: -3.9896748065948486
    4. '[[' → logprob: -4.989675045013428
    5. ' board' → logprob: -9.86467456817627
    6. ' [' → logprob: -11.73967456817627
    7. ' [[' → logprob: -12.23967456817627
    8. 'BOARD' → logprob: -12.48967456817627
    9. '```' → logprob: -12.73967456817627
    10. '[
' → logprob: -12.86467456817627

Token 1017: ' index' (ID: 3472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007173155900090933
    2. 'board' → logprob: -7.7507171630859375
    3. '   ' → logprob: -8.500717163085938
    4. ' board' → logprob: -9.750717163085938
    5. ',' → logprob: -11.625717163085938
    6. '
' → logprob: -12.000717163085938
    7. '(board' → logprob: -12.625717163085938
    8. '	board' → logprob: -13.250717163085938
    9. ' =' → logprob: -13.875717163085938
    10. '           ' → logprob: -14.000717163085938

Token 1018: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03869277238845825
    2. 'board' → logprob: -3.2886927127838135
    3. ' board' → logprob: -7.788692951202393
    4. '   ' → logprob: -8.538692474365234
    5. '
' → logprob: -10.663692474365234
    6. '(board' → logprob: -12.163692474365234
    7. '```' → logprob: -12.413692474365234
    8. '	board' → logprob: -12.538692474365234
    9. '           ' → logprob: -13.663692474365234
    10. '        
' → logprob: -14.163692474365234

Token 1019: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08203363418579102
    2. 'board' → logprob: -2.582033634185791
    3. ' board' → logprob: -5.832033634185791
    4. '   ' → logprob: -8.707033157348633
    5. '```' → logprob: -10.832033157348633
    6. '	board' → logprob: -11.207033157348633
    7. '(board' → logprob: -12.457033157348633
    8. ' ' → logprob: -13.832033157348633
    9. '           ' → logprob: -14.207033157348633
    10. '_board' → logprob: -14.957033157348633

Token 1020: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -1.5213274309644476e-05
    2. ' board' → logprob: -11.500015258789062
    3. '       ' → logprob: -12.500015258789062
    4. '   ' → logprob: -13.750015258789062
    5. '	board' → logprob: -15.500015258789062
    6. '```' → logprob: -17.125015258789062
    7. '
' → logprob: -18.500015258789062
    8. '(board' → logprob: -19.125015258789062
    9. '``' → logprob: -20.125015258789062
    10. '.board' → logprob: -20.375015258789062

Token 1021: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759438276290894
    2. ' =' → logprob: -0.8259438276290894
    3. '=[' → logprob: -13.200943946838379
    4. '   ' → logprob: -13.450943946838379
    5. '=
' → logprob: -14.825943946838379
    6. '=[[' → logprob: -15.575943946838379
    7. '=[]' → logprob: -16.075942993164062
    8. ' =[' → logprob: -16.075942993164062
    9. '[' → logprob: -16.325942993164062
    10. ' ' → logprob: -17.075942993164062

Token 1022: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.00012035090912831947
    2. ' [[' → logprob: -9.500120162963867
    3. '[' → logprob: -10.000120162963867
    4. ' [' → logprob: -17.500120162963867
    5. '[
' → logprob: -18.375120162963867
    6. '([[' → logprob: -19.125120162963867
    7. '   ' → logprob: -19.750120162963867
    8. '[list' → logprob: -20.250120162963867
    9. '[]
' → logprob: -20.500120162963867
    10. ' ' → logprob: -20.500120162963867

Token 1023: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.128163257315464e-07
    2. ' False' → logprob: -15.5
    3. '(False' → logprob: -18.375
    4. '=False' → logprob: -21.25
    5. '   ' → logprob: -23.125
    6. '.False' → logprob: -23.25
    7. 'false' → logprob: -24.25
    8. '0' → logprob: -24.75
    9. 'True' → logprob: -25.125
    10. '
' → logprob: -25.125

Token 1024: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08943545818328857
    2. 'for' → logprob: -2.464435577392578
    3. ']' → logprob: -7.839435577392578
    4. '   ' → logprob: -10.089435577392578
    5. ')' → logprob: -10.339435577392578
    6. ']*' → logprob: -11.214435577392578
    7. '	for' → logprob: -11.964435577392578
    8. ' ' → logprob: -12.714435577392578
    9. '    ' → logprob: -12.839435577392578
    10. '  ' → logprob: -15.089435577392578

Token 1025: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06198449432849884
    2. 'for' → logprob: -2.8119845390319824
    3. '   ' → logprob: -11.936984062194824
    4. ']' → logprob: -12.186984062194824
    5. ')' → logprob: -13.436984062194824
    6. ']*' → logprob: -13.686984062194824
    7. ' ' → logprob: -13.936984062194824
    8. '	for' → logprob: -14.436984062194824
    9. '    ' → logprob: -15.061984062194824
    10. '0' → logprob: -15.561984062194824

Token 1026: ' WIDTH' (ID: 88792)
  Prédit: 'WIDTH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WIDTH' → logprob: -0.0700293555855751
    2. '5' → logprob: -2.6950292587280273
    3. ' WIDTH' → logprob: -9.445029258728027
    4. 'W' → logprob: -11.695029258728027
    5. 'width' → logprob: -13.445029258728027
    6. 'HEIGHT' → logprob: -13.445029258728027
    7. 'Width' → logprob: -14.570029258728027
    8. '   ' → logprob: -14.695029258728027
    9. 'WINDOW' → logprob: -15.195029258728027
    10. '(' → logprob: -15.570029258728027

Token 1027: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20141655206680298
    2. 'for' → logprob: -1.7014164924621582
    3. '   ' → logprob: -13.201416969299316
    4. '	for' → logprob: -14.326416969299316
    5. ']' → logprob: -14.576416969299316
    6. ' ' → logprob: -15.826416969299316
    7. ')' → logprob: -16.826416015625
    8. '    ' → logprob: -17.326416015625
    9. '       ' → logprob: -17.576416015625
    10. '           ' → logprob: -17.951416015625

Token 1028: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0046935612335801125
    2. ' _' → logprob: -5.504693508148193
    3. ' range' → logprob: -8.254693984985352
    4. '_range' → logprob: -8.379693984985352
    5. 'range' → logprob: -9.004693984985352
    6. '_i' → logprob: -13.254693984985352
    7. ' ' → logprob: -15.754693984985352
    8. '_A' → logprob: -15.754693984985352
    9. 'i' → logprob: -16.75469398498535
    10. '_t' → logprob: -17.25469398498535

Token 1029: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016648415476083755
    2. '_range' → logprob: -4.266648292541504
    3. '_' → logprob: -6.391648292541504
    4. ' range' → logprob: -7.141648292541504
    5. '(range' → logprob: -13.391648292541504
    6. '_height' → logprob: -13.391648292541504
    7. '_in' → logprob: -13.391648292541504
    8. '_row' → logprob: -13.516648292541504
    9. '	range' → logprob: -13.641648292541504
    10. '_answer' → logprob: -14.141648292541504

Token 1030: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '(range' → logprob: -18.250045776367188
    4. '	range' → logprob: -19.000045776367188
    5. '   ' → logprob: -20.875045776367188
    6. '_range' → logprob: -20.875045776367188
    7. '
' → logprob: -21.125045776367188
    8. ' ' → logprob: -22.250045776367188
    9. '  ' → logprob: -22.500045776367188
    10. '_' → logprob: -22.625045776367188

Token 1031: '(' (ID: 7)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00010235115041723475
    2. ' range' → logprob: -9.250102043151855
    3. '(range' → logprob: -12.000102043151855
    4. '   ' → logprob: -17.750102996826172
    5. ' ' → logprob: -18.625102996826172
    6. '[' → logprob: -19.125102996826172
    7. '	range' → logprob: -19.375102996826172
    8. '(' → logprob: -20.000102996826172
    9. '
' → logprob: -20.125102996826172
    10. ')' → logprob: -20.125102996826172

Token 1032: 'HEIGHT' (ID: 105934)
  Prédit: 'HEIGHT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HEIGHT' → logprob: -1.5048530030981055e-06
    2. ' HEIGHT' → logprob: -14.250001907348633
    3. '200' → logprob: -14.375001907348633
    4. 'WIDTH' → logprob: -15.875001907348633
    5. '0' → logprob: -17.375001907348633
    6. 'HE' → logprob: -18.750001907348633
    7. '
' → logprob: -19.875001907348633
    8. '_HEIGHT' → logprob: -20.125001907348633
    9. 'height' → logprob: -20.250001907348633
    10. '(' → logprob: -21.500001907348633

Token 1033: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.688212614681106e-05
    2. ']' → logprob: -11.625017166137695
    3. ')]
' → logprob: -12.375017166137695
    4. ')' → logprob: -13.125017166137695
    5. '       ' → logprob: -14.250017166137695
    6. '   ' → logprob: -15.000017166137695
    7. ' )' → logprob: -15.625017166137695
    8. ')]

' → logprob: -15.875017166137695
    9. ')],' → logprob: -16.500017166137695
    10. ')]
' → logprob: -16.625017166137695

Token 1034: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010191136971116066
    2. '   ' → logprob: -7.50101900100708
    3. 'for' → logprob: -7.75101900100708
    4. '	for' → logprob: -11.001019477844238
    5. ' for' → logprob: -11.251019477844238
    6. '	   ' → logprob: -13.126019477844238
    7. '	' → logprob: -13.376019477844238
    8. '```' → logprob: -13.751019477844238
    9. '        
' → logprob: -14.876019477844238
    10. '
' → logprob: -15.001019477844238

Token 1035: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002372200833633542
    2. '       ' → logprob: -6.5023722648620605
    3. ' for' → logprob: -7.1273722648620605
    4. 'blocks' → logprob: -9.752371788024902
    5. '	for' → logprob: -13.127371788024902
    6. 'results' → logprob: -13.252371788024902
    7. '   ' → logprob: -13.627371788024902
    8. 'moves' → logprob: -14.127371788024902
    9. 'total' → logprob: -14.252371788024902
    10. 'score' → logprob: -14.502371788024902

Token 1036: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015559245366603136
    2. '_i' → logprob: -6.501555919647217
    3. ' _' → logprob: -10.501556396484375
    4. '_in' → logprob: -10.876556396484375
    5. '_range' → logprob: -12.376556396484375
    6. '_block' → logprob: -14.501556396484375
    7. '_step' → logprob: -14.626556396484375
    8. '_
' → logprob: -15.126556396484375
    9. '_line' → logprob: -15.251556396484375
    10. '_idx' → logprob: -16.126556396484375

Token 1037: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0052386182360351086
    2. 'in' → logprob: -5.2552385330200195
    3. ' ' → logprob: -12.75523853302002
    4. '	in' → logprob: -14.38023853302002
    5. 'range' → logprob: -14.88023853302002
    6. 'i' → logprob: -15.63023853302002
    7. 'import' → logprob: -15.75523853302002
    8. 's' → logprob: -15.88023853302002
    9. ' 
' → logprob: -16.255239486694336
    10. '  ' → logprob: -16.505239486694336

Token 1038: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00018041854491457343
    2. ' range' → logprob: -8.6251802444458
    3. '
' → logprob: -15.1251802444458
    4. 'input' → logprob: -15.5001802444458
    5. '	range' → logprob: -16.250181198120117
    6. '(range' → logprob: -16.625181198120117
    7. '   ' → logprob: -16.625181198120117
    8. ' ' → logprob: -17.000181198120117
    9. 'in' → logprob: -17.125181198120117
    10. '  ' → logprob: -17.875181198120117

Token 1039: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019697926472872496
    2. 'n' → logprob: -6.501969814300537
    3. ' (' → logprob: -8.376969337463379
    4. '(' → logprob: -8.501969337463379
    5. ' n' → logprob: -10.501969337463379
    6. 'range' → logprob: -12.501969337463379
    7. '(range' → logprob: -13.251969337463379
    8. ' range' → logprob: -14.751969337463379
    9. '	n' → logprob: -15.251969337463379
    10. '(
' → logprob: -16.001970291137695

Token 1040: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3186459541320801
    2. '):' → logprob: -1.31864595413208
    3. '():
' → logprob: -5.56864595413208
    4. '       ' → logprob: -7.44364595413208
    5. '()):
' → logprob: -7.69364595413208
    6. '():' → logprob: -8.818645477294922
    7. '   ' → logprob: -9.193645477294922
    8. ':' → logprob: -9.318645477294922
    9. '):
' → logprob: -10.318645477294922
    10. ':
' → logprob: -10.818645477294922

Token 1041: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019042797794099897
    2. '	       ' → logprob: -8.875190734863281
    3. '		' → logprob: -10.625190734863281
    4. 'tokens' → logprob: -12.625190734863281
    5. 'token' → logprob: -13.125190734863281
    6. '		   ' → logprob: -13.125190734863281
    7. '       ' → logprob: -13.250190734863281
    8. '	   ' → logprob: -13.375190734863281
    9. 'code' → logprob: -13.500190734863281
    10. '    	   ' → logprob: -13.625190734863281

Token 1042: ' while' (ID: 2049)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.28140679001808167
    2. 'd' → logprob: -1.7814067602157593
    3. 'cmd' → logprob: -3.906406879425049
    4. ' line' → logprob: -4.281406879425049
    5. 'parts' → logprob: -4.781406879425049
    6. '           ' → logprob: -4.781406879425049
    7. 's' → logprob: -5.031406879425049
    8. 'block' → logprob: -5.281406879425049
    9. 't' → logprob: -5.531406879425049
    10. 'tokens' → logprob: -6.156406879425049

Token 1043: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.06262550503015518
    2. ' True' → logprob: -2.8126254081726074
    3. 'line' → logprob: -7.437625408172607
    4. '(True' → logprob: -10.562625885009766
    5. ' line' → logprob: -10.687625885009766
    6. ' ' → logprob: -11.062625885009766
    7. '   ' → logprob: -12.937625885009766
    8. '
' → logprob: -14.187625885009766
    9. 'true' → logprob: -15.312625885009766
    10. 'len' → logprob: -15.812625885009766

Token 1044: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02341492846608162
    2. ' line' → logprob: -3.8984148502349854
    3. 'line' → logprob: -6.8984150886535645
    4. '   ' → logprob: -7.1484150886535645
    5. '           ' → logprob: -7.7734150886535645
    6. '	           ' → logprob: -8.898414611816406
    7. '	line' → logprob: -9.023414611816406
    8. 'token' → logprob: -9.773414611816406
    9. '(line' → logprob: -10.148414611816406
    10. '			' → logprob: -10.148414611816406

Token 1045: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17952857911586761
    2. 'line' → logprob: -1.9295285940170288
    3. ' line' → logprob: -4.554528713226318
    4. '           ' → logprob: -4.929528713226318
    5. '   ' → logprob: -7.929528713226318
    6. 'code' → logprob: -8.42952823638916
    7. '                   ' → logprob: -8.92952823638916
    8. '	line' → logprob: -8.92952823638916
    9. 'token' → logprob: -9.05452823638916
    10. 'tokens' → logprob: -9.17952823638916

Token 1046: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.030493205413222313
    2. '               ' → logprob: -4.405493259429932
    3. 'cmd' → logprob: -5.030493259429932
    4. 'parts' → logprob: -6.155493259429932
    5. 'block' → logprob: -6.280493259429932
    6. 'l' → logprob: -6.655493259429932
    7. ' line' → logprob: -6.655493259429932
    8. 'op' → logprob: -6.780493259429932
    9. 'instr' → logprob: -7.405493259429932
    10. 's' → logprob: -7.655493259429932

Token 1047: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1607065051794052
    2. '=' → logprob: -2.1607065200805664
    3. '=line' → logprob: -3.4107065200805664
    4. '           ' → logprob: -9.785706520080566
    5. '(line' → logprob: -9.910706520080566
    6. '               ' → logprob: -10.285706520080566
    7. '[line' → logprob: -10.910706520080566
    8. 'line' → logprob: -11.410706520080566
    9. '.strip' → logprob: -12.035706520080566
    10. ' line' → logprob: -12.160706520080566

Token 1048: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005655371583998203
    2. ' input' → logprob: -5.880655288696289
    3. 'sys' → logprob: -5.880655288696289
    4. ' sys' → logprob: -10.005655288696289
    5. '               ' → logprob: -12.755655288696289
    6. '           ' → logprob: -12.755655288696289
    7. 'line' → logprob: -13.255655288696289
    8. '                   ' → logprob: -14.630655288696289
    9. '(input' → logprob: -16.50565528869629
    10. '<input' → logprob: -17.00565528869629

Token 1049: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5811989903450012
    2. '           ' → logprob: -1.3311989307403564
    3. '().' → logprob: -2.4561989307403564
    4. '.strip' → logprob: -3.8311989307403564
    5. ' =' → logprob: -4.0811991691589355
    6. '<|end|>' → logprob: -4.3311991691589355
    7. '<|end|>' → logprob: -4.3311991691589355
    8. '.' → logprob: -5.5811991691589355
    9. '                   ' → logprob: -5.8311991691589355
    10. '=' → logprob: -5.8311991691589355

Token 1050: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09831147640943527
    2. '           ' → logprob: -2.473311424255371
    3. '<|end|>' → logprob: -5.473311424255371
    4. '<|end|>' → logprob: -6.473311424255371
    5. '                   ' → logprob: -6.598311424255371
    6. ' if' → logprob: -7.223311424255371
    7. ' =' → logprob: -8.223311424255371
    8. '       ' → logprob: -8.973311424255371
    9. '.strip' → logprob: -9.098311424255371
    10. '            
' → logprob: -9.223311424255371

Token 1051: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0031185373663902283
    2. '           ' → logprob: -6.253118515014648
    3. 'if' (adapté à ' if') → logprob: -7.253118515014648
    4. ' if' → logprob: -7.753118515014648
    5. '	           ' → logprob: -10.753118515014648
    6. '		       ' → logprob: -12.378118515014648
    7. '	       ' → logprob: -12.503118515014648
    8. 'tokens' → logprob: -12.628118515014648
    9. '                   ' → logprob: -12.753118515014648
    10. '			   ' → logprob: -12.753118515014648

Token 1052: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.011047814972698689
    2. ' line' → logprob: -4.511047840118408
    3. '	line' → logprob: -17.01104736328125
    4. ' ' → logprob: -18.38604736328125
    5. '(line' → logprob: -18.51104736328125
    6. '   ' → logprob: -18.88604736328125
    7. '           ' → logprob: -19.26104736328125
    8. '#line' → logprob: -19.63604736328125
    9. '               ' → logprob: -20.13604736328125
    10. '=line' → logprob: -20.26104736328125

Token 1053: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.00029506313148885965
    2. '.' → logprob: -9.25029468536377
    3. 'strip' → logprob: -9.37529468536377
    4. ' and' → logprob: -10.00029468536377
    5. '                   ' → logprob: -10.75029468536377
    6. ':
' → logprob: -11.12529468536377
    7. '               ' → logprob: -11.62529468536377
    8. 'and' → logprob: -11.87529468536377
    9. '.trim' → logprob: -12.25029468536377
    10. '().' → logprob: -12.87529468536377

Token 1054: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6660264134407043
    2. '()!=' → logprob: -1.5410263538360596
    3. ' !=' → logprob: -2.1660263538360596
    4. '():
' → logprob: -2.2910263538360596
    5. '!=' → logprob: -3.5410263538360596
    6. '():' → logprob: -4.541026592254639
    7. '!='' → logprob: -4.666026592254639
    8. ':
' → logprob: -5.666026592254639
    9. ':' → logprob: -5.791026592254639
    10. '                   ' → logprob: -9.04102611541748

Token 1055: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.14105822145938873
    2. '!=' → logprob: -2.6410582065582275
    3. '                   ' → logprob: -3.8910582065582275
    4. ':
' → logprob: -4.141058444976807
    5. '!='' → logprob: -4.266058444976807
    6. ':' → logprob: -5.016058444976807
    7. '()!=' → logprob: -7.016058444976807
    8. '!="' → logprob: -7.141058444976807
    9. ')!=' → logprob: -8.266057968139648
    10. '               ' → logprob: -8.391057968139648

Token 1056: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.0041134231723845005
    2. ''' → logprob: -5.50411319732666
    3. ' '':
' → logprob: -10.75411319732666
    4. '"":' → logprob: -12.12911319732666
    5. '""' → logprob: -12.62911319732666
    6. '':' → logprob: -13.37911319732666
    7. '''
' → logprob: -13.87911319732666
    8. '"' → logprob: -14.50411319732666
    9. ''''' → logprob: -14.62911319732666
    10. ':' → logprob: -14.75411319732666

Token 1057: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007336281123571098
    2. '                       ' → logprob: -8.375733375549316
    3. ':' → logprob: -8.750733375549316
    4. '               ' → logprob: -9.375733375549316
    5. 'break' → logprob: -9.375733375549316
    6. '		           ' → logprob: -10.125733375549316
    7. ':
' → logprob: -10.125733375549316
    8. '	               ' → logprob: -11.000733375549316
    9. ' break' → logprob: -11.250733375549316
    10. '			       ' → logprob: -11.625733375549316

Token 1058: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09603849798440933
    2. 'break' (adapté à ' break') → logprob: -2.471038579940796
    3. '                       ' → logprob: -5.721038341522217
    4. ' break' → logprob: -5.846038341522217
    5. '				' → logprob: -8.346038818359375
    6. '	break' → logprob: -8.346038818359375
    7. '               ' → logprob: -8.846038818359375
    8. '	               ' → logprob: -9.471038818359375
    9. '   ' → logprob: -9.596038818359375
    10. '		           ' → logprob: -10.221038818359375

Token 1059: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006491714157164097
    2. '       ' → logprob: -9.000649452209473
    3. '		' → logprob: -9.000649452209473
    4. 'tokens' → logprob: -9.500649452209473
    5. '<|end|>' → logprob: -9.875649452209473
    6. '            
' → logprob: -10.000649452209473
    7. '	       ' → logprob: -10.125649452209473
    8. '                   ' → logprob: -10.375649452209473
    9. '               ' → logprob: -10.500649452209473
    10. 'd' → logprob: -10.875649452209473

Token 1060: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008084236644208431
    2. '       ' → logprob: -6.008084297180176
    3. ' parts' → logprob: -6.258084297180176
    4. ' d' → logprob: -6.883084297180176
    5. 'tokens' → logprob: -7.008084297180176
    6. ' tokens' → logprob: -7.258084297180176
    7. 'd' → logprob: -7.258084297180176
    8. 'parts' → logprob: -9.508084297180176
    9. ',' → logprob: -9.883084297180176
    10. '            
' → logprob: -10.258084297180176

Token 1061: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.018743645399808884
    2. '           ' → logprob: -4.268743515014648
    3. 'parts' → logprob: -5.893743515014648
    4. 'tokens' → logprob: -6.768743515014648
    5. 'a' → logprob: -7.768743515014648
    6. 't' → logprob: -9.143743515014648
    7. ' d' → logprob: -9.768743515014648
    8. ' parts' → logprob: -10.768743515014648
    9. 'params' → logprob: -10.768743515014648
    10. 'arr' → logprob: -11.268743515014648

Token 1062: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023070310708135366
    2. ' ,' → logprob: -6.252306938171387
    3. ' =' → logprob: -9.252306938171387
    4. '=' → logprob: -9.252306938171387
    5. '_,' → logprob: -10.502306938171387
    6. ',p' → logprob: -10.502306938171387
    7. 'tokens' → logprob: -10.877306938171387
    8. ',d' → logprob: -11.002306938171387
    9. ' ' → logprob: -11.127306938171387
    10. ',int' → logprob: -11.627306938171387

Token 1063: ',q' (ID: 86188)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004919804632663727
    2. ',q' → logprob: -5.75492000579834
    3. ',p' → logprob: -7.12992000579834
    4. ' ,' → logprob: -7.50492000579834
    5. ',c' → logprob: -9.00492000579834
    6. ',s' → logprob: -9.37992000579834
    7. '=' → logprob: -10.25492000579834
    8. ',a' → logprob: -11.12992000579834
    9. ',input' → logprob: -11.25492000579834
    10. ',n' → logprob: -11.50492000579834

Token 1064: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20148195326328278
    2. '=' → logprob: -1.7014819383621216
    3. '=line' → logprob: -9.701481819152832
    4. ',' → logprob: -12.201481819152832
    5. '=input' → logprob: -13.451481819152832
    6. '=list' → logprob: -15.201481819152832
    7. '=int' → logprob: -15.201481819152832
    8. '   ' → logprob: -16.70148277282715
    9. ' ' → logprob: -16.70148277282715
    10. '＝' → logprob: -17.20148277282715

Token 1065: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0019286326132714748
    2. ' map' → logprob: -6.251928806304932
    3. '	map' → logprob: -17.376928329467773
    4. '(map' → logprob: -17.626928329467773
    5. 'list' → logprob: -18.001928329467773
    6. 'm' → logprob: -18.501928329467773
    7. '[' → logprob: -19.251928329467773
    8. '
' → logprob: -19.751928329467773
    9. '.map' → logprob: -21.251928329467773
    10. 'ma' → logprob: -21.751928329467773

Token 1066: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.018186232075095177
    2. 'int' → logprob: -4.018186092376709
    3. '(str' → logprob: -11.143186569213867
    4. '[int' → logprob: -11.143186569213867
    5. ' int' → logprob: -13.393186569213867
    6. '<int' → logprob: -13.393186569213867
    7. 'str' → logprob: -13.393186569213867
    8. '(' → logprob: -14.018186569213867
    9. '=int' → logprob: -14.393186569213867
    10. ',int' → logprob: -14.518186569213867

Token 1067: ',line' (ID: 171132)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.3722648322582245
    2. ',' → logprob: -1.8722648620605469
    3. ',line' → logprob: -1.8722648620605469
    4. 'line' → logprob: -5.997264862060547
    5. '[line' → logprob: -8.122264862060547
    6. ')' → logprob: -8.122264862060547
    7. '=line' → logprob: -9.122264862060547
    8. '#line' → logprob: -9.622264862060547
    9. ' line' → logprob: -11.372264862060547
    10. ')(' → logprob: -12.247264862060547

Token 1068: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.31386980414390564
    2. '.strip' → logprob: -1.313869833946228
    3. '.split' → logprob: -7.438869953155518
    4. '.' → logprob: -11.56386947631836
    5. 'strip' → logprob: -12.43886947631836
    6. '()' → logprob: -12.68886947631836
    7. '.readline' → logprob: -13.18886947631836
    8. ' .' → logprob: -14.43886947631836
    9. '()
' → logprob: -15.06386947631836
    10. '.rstrip' → logprob: -15.43886947631836

Token 1069: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '()' → logprob: -15.125000953674316
    3. '.split' → logprob: -15.500000953674316
    4. '()
' → logprob: -18.875
    5. '()[' → logprob: -20.0
    6. ' ().' → logprob: -21.0
    7. 'split' → logprob: -21.375
    8. '(' → logprob: -21.5
    9. '   ' → logprob: -22.125
    10. '().'' → logprob: -23.5

Token 1070: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. '(split' → logprob: -18.0
    3. '.split' → logprob: -18.625
    4. ' split' → logprob: -19.375
    5. 'plit' → logprob: -21.125
    6. 'strip' → logprob: -21.375
    7. 'rstrip' → logprob: -21.75
    8. 'spl' → logprob: -23.0
    9. 'sp' → logprob: -24.125
    10. '_split' → logprob: -24.375

Token 1071: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00158056674990803
    2. ')' → logprob: -7.251580715179443
    3. '()' → logprob: -7.501580715179443
    4. '())
' → logprob: -8.251580238342285
    5. '(' → logprob: -9.876580238342285
    6. '('' → logprob: -13.876580238342285
    7. '(','' → logprob: -14.001580238342285
    8. ' ())' → logprob: -14.126580238342285
    9. '()))' → logprob: -14.251580238342285
    10. '());' → logprob: -14.376580238342285

Token 1072: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008470293832942843
    2. 'drop' → logprob: -7.250846862792969
    3. ' drop' → logprob: -9.625846862792969
    4. '       ' → logprob: -9.875846862792969
    5. '   ' → logprob: -11.125846862792969
    6. '
' → logprob: -13.000846862792969
    7. '.drop' → logprob: -13.875846862792969
    8. '(drop' → logprob: -14.750846862792969
    9. '            
' → logprob: -15.000846862792969
    10. '          ' → logprob: -15.750846862792969

Token 1073: ' drop' (ID: 9440)
  Prédit: 'drop'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'drop' (adapté à ' drop') → logprob: -0.10703650116920471
    2. '           ' → logprob: -2.982036590576172
    3. ' drop' → logprob: -2.982036590576172
    4. '       ' → logprob: -9.357036590576172
    5. '.drop' → logprob: -10.982036590576172
    6. '(drop' → logprob: -11.607036590576172
    7. '   ' → logprob: -11.857036590576172
    8. '
' → logprob: -13.232036590576172
    9. '          ' → logprob: -13.607036590576172
    10. '-drop' → logprob: -13.857036590576172

Token 1074: '_block' (ID: 15644)
  Prédit: '_block'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_block' → logprob: -2.339278580620885e-06
    2. '_bloc' → logprob: -13.250001907348633
    3. '_' → logprob: -14.875001907348633
    4. '_blocks' → logprob: -16.250001907348633
    5. '_drop' → logprob: -16.875001907348633
    6. 'block' → logprob: -17.500001907348633
    7. '_BLOCK' → logprob: -17.875001907348633
    8. '_b' → logprob: -18.625001907348633
    9. '_Block' → logprob: -18.875001907348633
    10. '_bl' → logprob: -19.250001907348633

Token 1075: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -0.0009527906076982617
    2. '(block' → logprob: -7.00095272064209
    3. '(' → logprob: -10.50095272064209
    4. '_block' → logprob: -11.62595272064209
    5. '_' → logprob: -13.87595272064209
    6. '_(' → logprob: -13.87595272064209
    7. ' (' → logprob: -14.37595272064209
    8. '(
' → logprob: -14.50095272064209
    9. '(b' → logprob: -14.62595272064209
    10. '_board' → logprob: -14.75095272064209

Token 1076: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07005780935287476
    2. ',d' → logprob: -2.6950578689575195
    3. ' ,' → logprob: -9.82005786895752
    4. '(d' → logprob: -9.82005786895752
    5. ',
' → logprob: -12.94505786895752
    6. '   ' → logprob: -12.94505786895752
    7. ',b' → logprob: -13.32005786895752
    8. '(' → logprob: -13.57005786895752
    9. ',(' → logprob: -13.69505786895752
    10. ')' → logprob: -14.07005786895752

Token 1077: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -3.547789674485102e-05
    2. ' d' → logprob: -10.250035285949707
    3. ')d' → logprob: -17.750036239624023
    4. '	d' → logprob: -18.250036239624023
    5. '
' → logprob: -18.875036239624023
    6. '    ' → logprob: -20.125036239624023
    7. 'p' → logprob: -20.250036239624023
    8. ')' → logprob: -20.250036239624023
    9. '   ' → logprob: -20.375036239624023
    10. '       ' → logprob: -21.125036239624023

Token 1078: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10039526224136353
    2. ',p' → logprob: -2.3503952026367188
    3. ' ,' → logprob: -8.600395202636719
    4. ',
' → logprob: -13.225395202636719
    5. ',q' → logprob: -13.725395202636719
    6. 'p' → logprob: -14.100395202636719
    7. ',d' → logprob: -15.975395202636719
    8. ' p' → logprob: -15.975395202636719
    9. ')' → logprob: -16.35039520263672
    10. '(p' → logprob: -16.47539520263672

Token 1079: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.941850526549388e-06
    2. ' p' → logprob: -11.750007629394531
    3. '   ' → logprob: -23.25000762939453
    4. '<p' → logprob: -23.25000762939453
    5. '
' → logprob: -23.37500762939453
    6. ' ' → logprob: -23.75000762939453
    7. '	p' → logprob: -23.87500762939453
    8. ')p' → logprob: -24.00000762939453
    9. 'q' → logprob: -24.25000762939453
    10. ')' → logprob: -24.37500762939453

Token 1080: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012556035071611404
    2. ',q' → logprob: -4.387556076049805
    3. ' ,' → logprob: -10.012556076049805
    4. ',p' → logprob: -14.137556076049805
    5. ',
' → logprob: -14.387556076049805
    6. 'q' → logprob: -16.387556076049805
    7. '```' → logprob: -17.137556076049805
    8. '`,' → logprob: -17.887556076049805
    9. '   ' → logprob: -18.262556076049805
    10. '[' → logprob: -18.637556076049805

Token 1081: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0007099286303855479
    2. ' q' → logprob: -7.2507100105285645
    3. '	q' → logprob: -19.500709533691406
    4. '   ' → logprob: -22.875709533691406
    5. '
' → logprob: -23.000709533691406
    6. '           ' → logprob: -23.500709533691406
    7. '    ' → logprob: -23.500709533691406
    8. '$q' → logprob: -23.625709533691406
    9. ' ' → logprob: -24.125709533691406
    10. '               ' → logprob: -24.250709533691406

Token 1082: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03599642217159271
    2. ')
' → logprob: -3.535996437072754
    3. '       ' → logprob: -5.160996437072754
    4. '   ' → logprob: -8.910996437072754
    5. '
' → logprob: -8.910996437072754
    6. '<|end|>' → logprob: -9.160996437072754
    7. ')

' → logprob: -9.410996437072754
    8. ')return' → logprob: -11.785996437072754
    9. '        
' → logprob: -12.660996437072754
    10. ' )' → logprob: -13.035996437072754

Token 1083: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0267901923507452
    2. '   ' → logprob: -3.651790142059326
    3. 'print' → logprob: -7.651790142059326
    4. '        
' → logprob: -12.151790618896484
    5. '```' → logprob: -12.151790618896484
    6. '    
' → logprob: -13.151790618896484
    7. 'count' → logprob: -14.401790618896484
    8. '           ' → logprob: -14.651790618896484
    9. '
' → logprob: -15.276790618896484
    10. ' print' → logprob: -15.901790618896484

Token 1084: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006747462786734104
    2. '       ' → logprob: -5.006747245788574
    3. '   ' → logprob: -10.381747245788574
    4. ' print' → logprob: -14.381747245788574
    5. 'result' (adapté à ' result') → logprob: -14.881747245788574
    6. 'count' → logprob: -17.50674819946289
    7. '```' → logprob: -17.88174819946289
    8. '#print' → logprob: -18.00674819946289
    9. '	print' → logprob: -18.13174819946289
    10. '        
' → logprob: -18.25674819946289

Token 1085: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04666099324822426
    2. '=' → logprob: -3.171660900115967
    3. '   ' → logprob: -5.796660900115967
    4. '_' → logprob: -9.421661376953125
    5. '```' → logprob: -9.421661376953125
    6. ' ' → logprob: -9.546661376953125
    7. '       ' → logprob: -9.796661376953125
    8. '    ' → logprob: -9.921661376953125
    9. '_count' → logprob: -10.296661376953125
    10. '[' → logprob: -10.796661376953125

Token 1086: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.004078401252627373
    2. ' count' → logprob: -5.504078388214111
    3. '(count' → logprob: -17.754077911376953
    4. 'str' → logprob: -18.004077911376953
    5. '   ' → logprob: -19.879077911376953
    6. '
' → logprob: -19.879077911376953
    7. '[count' → logprob: -20.254077911376953
    8. '	count' → logprob: -20.254077911376953
    9. '=count' → logprob: -20.879077911376953
    10. ' str' → logprob: -21.629077911376953

Token 1087: '_blocks' (ID: 60244)
  Prédit: '_blocks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_blocks' → logprob: -0.00024025145103223622
    2. '_' → logprob: -8.500240325927734
    3. '(block' → logprob: -11.250240325927734
    4. 'result' → logprob: -11.750240325927734
    5. 'blocks' → logprob: -12.125240325927734
    6. '(result' → logprob: -12.625240325927734
    7. '_result' → logprob: -13.875240325927734
    8. '_(' → logprob: -14.125240325927734
    9. '_
' → logprob: -14.250240325927734
    10. 'Blocks' → logprob: -14.375240325927734

Token 1088: '(board' (ID: 41261)
  Prédit: '(board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(board' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.375000953674316
    3. '(
' → logprob: -15.625000953674316
    4. ' (' → logprob: -17.125
    5. '(Board' → logprob: -17.25
    6. 'board' → logprob: -17.5
    7. '	board' → logprob: -18.25
    8. '(print' → logprob: -18.5
    9. '
' → logprob: -18.75
    10. '(output' → logprob: -18.75

Token 1089: ')
' (ID: 446)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0850210189819336
    2. '
' → logprob: -1.2100210189819336
    3. ')
' → logprob: -1.7100210189819336
    4. '   ' → logprob: -2.4600210189819336
    5. '()
' → logprob: -2.9600210189819336
    6. ' print' → logprob: -4.335021018981934
    7. ')' → logprob: -4.335021018981934
    8. '       ' → logprob: -4.460021018981934
    9. '(print' → logprob: -6.460021018981934
    10. '<|end|>' → logprob: -6.710021018981934

Token 1090: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08917097747325897
    2. '       ' → logprob: -2.5891709327697754
    3. '   ' → logprob: -4.839170932769775
    4. ' print' → logprob: -6.214170932769775
    5. '```' → logprob: -8.214171409606934
    6. '	print' → logprob: -10.839171409606934
    7. '<|end|>' → logprob: -12.089171409606934
    8. '#print' → logprob: -12.089171409606934
    9. '           ' → logprob: -12.214171409606934
    10. '        
' → logprob: -13.214171409606934

Token 1091: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.512236498361744e-07
    2. '       ' → logprob: -15.500000953674316
    3. ' print' → logprob: -15.500000953674316
    4. '   ' → logprob: -18.0
    5. '
' → logprob: -20.125
    6. '```' → logprob: -21.0
    7. '	print' → logprob: -22.0
    8. '        
' → logprob: -22.75
    9. '#print' → logprob: -22.75
    10. 'printf' → logprob: -23.0

Token 1092: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0011712945997714996
    2. 'result' → logprob: -6.751171112060547
    3. '(' → logprob: -14.126171112060547
    4. ' result' → logprob: -14.876171112060547
    5. '(f' → logprob: -18.876171112060547
    6. ' (' → logprob: -19.501171112060547
    7. '=result' → logprob: -19.626171112060547
    8. ',result' → logprob: -20.126171112060547
    9. '(res' → logprob: -20.751171112060547
    10. '	result' → logprob: -20.876171112060547

Token 1093: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6895233531831764e-05
    2. '())' → logprob: -11.62502670288086
    3. ')
' → logprob: -11.75002670288086
    4. '()' → logprob: -12.37502670288086
    5. '   ' → logprob: -12.37502670288086
    6. '`)' → logprob: -14.25002670288086
    7. ')`' → logprob: -15.00002670288086
    8. ' )' → logprob: -15.37502670288086
    9. '       ' → logprob: -15.62502670288086
    10. '))' → logprob: -16.75002670288086

Token 1094: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.002434758935123682
    2. '<|end|>' → logprob: -6.502434730529785
    3. '```' → logprob: -7.627434730529785
    4. '#' → logprob: -8.127434730529785
    5. ' if' → logprob: -9.002434730529785
    6. '
' → logprob: -11.502434730529785
    7. 'main' → logprob: -12.377434730529785
    8. '...' → logprob: -12.627434730529785
    9. 'import' → logprob: -13.502434730529785
    10. 'for' → logprob: -13.627434730529785

Token 1095: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12693661451339722
    2. ' __' → logprob: -2.126936674118042
    3. 'name' → logprob: -12.126936912536621
    4. '_name' → logprob: -14.376936912536621
    5. '```' → logprob: -14.376936912536621
    6. 'True' → logprob: -14.501936912536621
    7. '___' → logprob: -14.626936912536621
    8. 'Name' → logprob: -15.876936912536621
    9. '.__' → logprob: -16.001935958862305
    10. 'if' → logprob: -16.001935958862305

Token 1096: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04188819229602814
    2. '==' → logprob: -3.4168882369995117
    3. ' ==' → logprob: -5.291888236999512
    4. 'name' → logprob: -6.166888236999512
    5. '=="' → logprob: -7.541888236999512
    6. 'if' → logprob: -7.791888236999512
    7. '=='' → logprob: -9.791888236999512
    8. '```' → logprob: -10.416888236999512
    9. ' __' → logprob: -11.166888236999512
    10. '_name' → logprob: -11.666888236999512

Token 1097: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00010199354437645525
    2. '__.__' → logprob: -9.375102043151855
    3. '==' → logprob: -11.750102043151855
    4. '__('' → logprob: -12.750102043151855
    5. '__["' → logprob: -13.250102043151855
    6. '__[' → logprob: -14.000102043151855
    7. '=="' → logprob: -14.125102043151855
    8. '__.' → logprob: -14.125102043151855
    9. '___' → logprob: -14.750102043151855
    10. '__("' → logprob: -15.125102043151855

Token 1098: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3296043574810028
    2. ' ==' → logprob: -1.8296043872833252
    3. '__' → logprob: -2.329604387283325
    4. '=="' → logprob: -4.204604148864746
    5. '=='' → logprob: -4.829604148864746
    6. '==
' → logprob: -11.454604148864746
    7. '===' → logprob: -11.579604148864746
    8. '()==' → logprob: -12.079604148864746
    9. '```' → logprob: -12.204604148864746
    10. '"' → logprob: -12.454604148864746

Token 1099: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5760014057159424
    2. '"' → logprob: -0.8260014057159424
    3. '__' → logprob: -9.701001167297363
    4. ' "__' → logprob: -14.576001167297363
    5. ' '__' → logprob: -15.326001167297363
    6. '('__' → logprob: -17.70100212097168
    7. ''"' → logprob: -17.95100212097168
    8. ''name' → logprob: -18.45100212097168
    9. '"name' → logprob: -18.45100212097168
    10. '"'' → logprob: -18.70100212097168

Token 1100: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20237162709236145
    2. 'main' → logprob: -1.702371597290039
    3. '"' → logprob: -7.202371597290039
    4. ''' → logprob: -8.577371597290039
    5. 'name' → logprob: -11.702371597290039
    6. '___' → logprob: -11.827371597290039
    7. 'built' → logprob: -12.952371597290039
    8. '_main' → logprob: -13.577371597290039
    9. '____' → logprob: -13.702371597290039
    10. '__":
' → logprob: -13.827371597290039

Token 1101: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.03257225081324577
    2. '__' → logprob: -3.5325722694396973
    3. '__':
' → logprob: -5.907572269439697
    4. '__.' → logprob: -10.407571792602539
    5. '__.__' → logprob: -11.032571792602539
    6. '__
' → logprob: -11.032571792602539
    7. '__["' → logprob: -11.282571792602539
    8. '.' → logprob: -12.032571792602539
    9. '__
' → logprob: -12.782571792602539
    10. '.__' → logprob: -13.032571792602539

Token 1102: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.004622968845069408
    2. '   ' → logprob: -6.129622936248779
    3. '	main' → logprob: -6.504622936248779
    4. ' main' → logprob: -7.004622936248779
    5. '__' → logprob: -11.004623413085938
    6. '_main' → logprob: -12.004623413085938
    7. '(main' → logprob: -13.379623413085938
    8. 'import' → logprob: -13.629623413085938
    9. 'Main' → logprob: -14.004623413085938
    10. '```' → logprob: -14.254623413085938

Token 1103: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -15.75
    3. ' main' → logprob: -17.25
    4. '	main' → logprob: -18.75
    5. '_main' → logprob: -24.5
    6. '.main' → logprob: -25.375
    7. 'import' → logprob: -25.375
    8. 'Main' → logprob: -25.75
    9. '(main' → logprob: -26.125
    10. '主' → logprob: -28.375

Token 1104: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1102
Tokens correctement prédits (1ère position, stricte): 307
Tokens correctement prédits (1ère position, avec adaptation): 349
Tokens correctement prédits (top 10): 783
Précision stricte (1ère position): 27.86%
Précision adaptée (1ère position): 31.67%
Précision (top 10): 71.05%
================================================================================
