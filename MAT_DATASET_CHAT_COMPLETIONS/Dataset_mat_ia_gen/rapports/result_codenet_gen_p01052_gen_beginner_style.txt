================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
movies = []
for _ in range(n):
    a, b = map(int, input().split())
    movies.append((a, b))

# Pour chaque jour, on va garder la liste des films disponibles
days = [[] for _ in range(32)]  # index 1 à 31 utilisé

for i, (a, b) in enumerate(movies):
    for d in range(a, b + 1):
        days[d].append(i)

seen = set()
total_happiness = 0

for d in range(1, 32):
    # Choisir un film du jour d (on prend juste le premier pour simplifier)
    # On peut essayer tous les films du jour pour maximiser, mais approche simple:
    chosen = None
    for movie in days[d]:
        chosen = movie
        break
    if chosen is not None:
        if chosen in seen:
            total_happiness += 50
        else:
            total_happiness += 100
            seen.add(chosen)

print(total_happiness)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005387356504797935
    2. '```' → logprob: -8.50053882598877
    3. ''' → logprob: -8.62553882598877
    4. '(n' → logprob: -10.25053882598877
    5. '`' → logprob: -10.62553882598877
    6. ')' → logprob: -10.87553882598877
    7. '('' → logprob: -11.25053882598877
    8. '(
' → logprob: -11.25053882598877
    9. '[' → logprob: -11.37553882598877
    10. '()' → logprob: -11.75053882598877

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1369263231754303
    2. ')' → logprob: -2.2619264125823975
    3. '()' → logprob: -4.011926174163818
    4. '())' → logprob: -5.511926174163818
    5. '(
' → logprob: -7.636926174163818
    6. '('' → logprob: -8.636926651000977
    7. '```' → logprob: -8.636926651000977
    8. '(()' → logprob: -9.011926651000977
    9. '("("' → logprob: -9.261926651000977
    10. '(

' → logprob: -9.636926651000977

Token 5: 'movies' (ID: 71621)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7043724656105042
    2. 'if' → logprob: -1.4543724060058594
    3. 'for' → logprob: -2.3293724060058594
    4. 's' → logprob: -2.4543724060058594
    5. 'f' → logprob: -4.329372406005859
    6. ' ' → logprob: -4.454372406005859
    7. 'x' → logprob: -4.829372406005859
    8. ')' → logprob: -4.954372406005859
    9. 'a' → logprob: -4.954372406005859
    10. ''' → logprob: -5.079372406005859

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007718067150563002
    2. '.' → logprob: -5.382718086242676
    3. '_' → logprob: -7.382718086242676
    4. '['' → logprob: -7.632718086242676
    5. '[]' → logprob: -7.757718086242676
    6. '[m' → logprob: -8.632718086242676
    7. '[n' → logprob: -8.632718086242676
    8. 's' → logprob: -8.632718086242676
    9. '\[' → logprob: -8.882718086242676
    10. ')' → logprob: -9.007718086242676

Token 7: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.18043898046016693
    2. '[]' → logprob: -1.8054389953613281
    3. '[' → logprob: -8.055438995361328
    4. ' ' → logprob: -8.555438995361328
    5. '{}' → logprob: -9.555438995361328
    6. ' [' → logprob: -10.055438995361328
    7. ' {}' → logprob: -10.430438995361328
    8. '[input' → logprob: -11.180438995361328
    9. 'list' → logprob: -11.930438995361328
    10. '[]}' → logprob: -12.805438995361328

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0028671622276306152
    2. ' for' → logprob: -5.877867221832275
    3. '```' → logprob: -9.877866744995117
    4. ' 
' → logprob: -12.627866744995117
    5. '
' → logprob: -13.377866744995117
    6. 'f' → logprob: -13.877866744995117
    7. 'n' → logprob: -14.002866744995117
    8. '<|end|>' → logprob: -14.377866744995117
    9. '' → logprob: -14.627866744995117
    10. '	for' → logprob: -14.627866744995117

Token 9: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.009044568054378033
    2. ' i' → logprob: -4.884044647216797
    3. '  ' → logprob: -6.634044647216797
    4. ' n' → logprob: -9.384044647216797
    5. 'i' → logprob: -11.509044647216797
    6. ' ' → logprob: -11.884044647216797
    7. ' ‌' → logprob: -12.759044647216797
    8. '```' → logprob: -12.759044647216797
    9. ' )' → logprob: -13.009044647216797
    10. ' I' → logprob: -13.509044647216797

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0032761029433459044
    2. 'in' → logprob: -6.2532758712768555
    3. ' ' → logprob: -6.6282758712768555
    4. ' i' → logprob: -12.378275871276855
    5. ',' → logprob: -12.503275871276855
    6. ' n' → logprob: -12.753275871276855
    7. '  ' → logprob: -12.878275871276855
    8. 'n' → logprob: -13.253275871276855
    9. ' ,' → logprob: -13.378275871276855
    10. 'range' → logprob: -13.378275871276855

Token 11: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38687679171562195
    2. 'range' → logprob: -1.1368768215179443
    3. '(range' → logprob: -13.261877059936523
    4. '	range' → logprob: -13.386877059936523
    5. '_range' → logprob: -14.386877059936523
    6. ' xrange' → logprob: -15.011877059936523
    7. '<|end|>' → logprob: -15.136877059936523
    8. 'rang' → logprob: -15.261877059936523
    9. 'n' → logprob: -15.511877059936523
    10. 'in' → logprob: -15.636877059936523

Token 12: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05746091157197952
    2. ' (' → logprob: -3.4324610233306885
    3. '(n' → logprob: -3.8074610233306885
    4. ' n' → logprob: -7.182460784912109
    5. ' range' → logprob: -8.68246078491211
    6. ' ' → logprob: -8.68246078491211
    7. '(range' → logprob: -9.68246078491211
    8. ' )' → logprob: -9.93246078491211
    9. ')' → logprob: -10.30746078491211
    10. '(
' → logprob: -10.43246078491211

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22559784352779388
    2. ')' → logprob: -1.600597858428955
    3. '):
' → logprob: -9.850597381591797
    4. ':' → logprob: -10.225597381591797
    5. ' ):' → logprob: -10.225597381591797
    6. ' )' → logprob: -10.350597381591797
    7. ')n' → logprob: -12.600597381591797
    8. ')>' → logprob: -12.725597381591797
    9. '```' → logprob: -13.100597381591797
    10. ')**' → logprob: -13.350597381591797

Token 14: '   ' (ID: 271)
  Prédit: ' movies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' movies' → logprob: -0.17688824236392975
    2. '   ' → logprob: -2.5518882274627686
    3. ' movie' → logprob: -2.6768882274627686
    4. 'movies' → logprob: -5.176888465881348
    5. ' input' → logprob: -5.801888465881348
    6. '```' → logprob: -6.426888465881348
    7. '    ' → logprob: -6.801888465881348
    8. '    
' → logprob: -6.926888465881348
    9. ' ```' → logprob: -7.176888465881348
    10. ' line' → logprob: -7.176888465881348

Token 15: ' a' (ID: 261)
  Prédit: 'movie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'movie' → logprob: -0.4311372935771942
    2. ' movie' → logprob: -1.3061373233795166
    3. 'title' → logprob: -3.3061373233795166
    4. ' title' → logprob: -3.4311373233795166
    5. 'movies' → logprob: -5.5561370849609375
    6. '   ' → logprob: -6.1811370849609375
    7. 'name' → logprob: -6.3061370849609375
    8. ' movies' → logprob: -6.4311370849609375
    9. ' name' → logprob: -7.5561370849609375
    10. 'film' → logprob: -8.931137084960938

Token 16: ',' (ID: 11)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4947286546230316
    2. ',' → logprob: -2.1197285652160645
    3. 'pp' → logprob: -2.6197285652160645
    4. ' =' → logprob: -3.2447285652160645
    5. '.append' → logprob: -3.3697285652160645
    6. 'dd' → logprob: -3.9947285652160645
    7. 'r' → logprob: -3.9947285652160645
    8. 'udience' → logprob: -4.7447285652160645
    9. ',p' → logprob: -4.7447285652160645
    10. '=' → logprob: -4.8697285652160645

Token 17: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.020651202648878098
    2. ' b' → logprob: -3.89565110206604
    3. ' ' → logprob: -9.270650863647461
    4. 'space' → logprob: -12.020650863647461
    5. 's' → logprob: -12.770650863647461
    6. 'm' → logprob: -12.770650863647461
    7. '=' → logprob: -14.020650863647461
    8. ' =' → logprob: -14.270650863647461
    9. '<|end|>' → logprob: -15.020650863647461
    10. '<|end|>' → logprob: -15.770650863647461

Token 18: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25276464223861694
    2. ' =' → logprob: -1.5027647018432617
    3. ',' → logprob: -7.127764701843262
    4. ')' → logprob: -11.002764701843262
    5. '=input' → logprob: -11.377764701843262
    6. '=int' → logprob: -13.502764701843262
    7. '<|end|>' → logprob: -14.127764701843262
    8. 'input' → logprob: -14.752764701843262
    9. ')=' → logprob: -15.627764701843262
    10. '   ' → logprob: -16.002763748168945

Token 19: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3850862979888916
    2. ' input' → logprob: -1.5100862979888916
    3. 'map' → logprob: -3.0100862979888916
    4. 'input' → logprob: -3.0100862979888916
    5. ' ' → logprob: -9.510086059570312
    6. ' list' → logprob: -10.635086059570312
    7. '   ' → logprob: -12.135086059570312
    8. 'int' → logprob: -12.260086059570312
    9. ' ' → logprob: -12.260086059570312
    10. ' [' → logprob: -12.385086059570312

Token 20: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.015550937503576279
    2. '(' → logprob: -4.5155510902404785
    3. '(str' → logprob: -5.5155510902404785
    4. '(input' → logprob: -8.39055061340332
    5. '<int' → logprob: -9.39055061340332
    6. '[int' → logprob: -9.64055061340332
    7. 'int' → logprob: -10.01555061340332
    8. '(lambda' → logprob: -11.64055061340332
    9. '<|end|>' → logprob: -12.01555061340332
    10. '=int' → logprob: -12.14055061340332

Token 21: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1768283247947693
    2. ',input' → logprob: -1.926828384399414
    3. ',' → logprob: -4.301828384399414
    4. 'input' → logprob: -6.176828384399414
    5. '(' → logprob: -8.176828384399414
    6. ' input' → logprob: -8.676828384399414
    7. ')' → logprob: -8.676828384399414
    8. '=input' → logprob: -8.676828384399414
    9. '[input' → logprob: -11.176828384399414
    10. ' ,' → logprob: -11.176828384399414

Token 22: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25193214416503906
    2. ' input' → logprob: -1.501932144165039
    3. '=input' → logprob: -14.001932144165039
    4. ')' → logprob: -14.251932144165039
    5. '(input' → logprob: -14.501932144165039
    6. ' ' → logprob: -14.876932144165039
    7. ',input' → logprob: -15.251932144165039
    8. '	input' → logprob: -15.501932144165039
    9. '[input' → logprob: -17.00193214416504
    10. ' )' → logprob: -17.12693214416504

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1994775377388578e-05
    2. '()' → logprob: -11.375012397766113
    3. ')' → logprob: -15.625012397766113
    4. '())' → logprob: -15.750012397766113
    5. ' ().' → logprob: -16.875011444091797
    6. '()
' → logprob: -17.000011444091797
    7. '.split' → logprob: -17.500011444091797
    8. '(' → logprob: -17.750011444091797
    9. 'split' → logprob: -18.750011444091797
    10. '('').' → logprob: -19.125011444091797

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003442832676228136
    2. 'strip' → logprob: -8.000344276428223
    3. 'rstrip' → logprob: -12.000344276428223
    4. ')' → logprob: -13.500344276428223
    5. ' split' → logprob: -14.000344276428223
    6. '(split' → logprob: -14.750344276428223
    7. 'spl' → logprob: -17.50034523010254
    8. '()' → logprob: -17.62534523010254
    9. 's' → logprob: -17.62534523010254
    10. '```' → logprob: -17.75034523010254

Token 25: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3142891824245453
    2. '))' → logprob: -1.3142892122268677
    3. '())' → logprob: -7.564289093017578
    4. '()' → logprob: -7.689289093017578
    5. '()))' → logprob: -10.189289093017578
    6. '))
' → logprob: -13.189289093017578
    7. '),' → logprob: -13.314289093017578
    8. ')))' → logprob: -13.314289093017578
    9. ')
' → logprob: -13.564289093017578
    10. ''))' → logprob: -13.689289093017578

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02635801024734974
    2. 'movies' → logprob: -4.276358127593994
    3. ')' → logprob: -5.151358127593994
    4. '```' → logprob: -6.276358127593994
    5. ' movies' → logprob: -7.026358127593994
    6. '    
' → logprob: -7.526358127593994
    7. '[' → logprob: -7.651358127593994
    8. '`' → logprob: -7.901358127593994
    9. '    ' → logprob: -8.026357650756836
    10. '\n' → logprob: -8.151357650756836

Token 27: ' movies' (ID: 13995)
  Prédit: 'movies'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'movies' (adapté à ' movies') → logprob: -0.20022271573543549
    2. ' movies' → logprob: -2.2002227306365967
    3. '   ' → logprob: -2.7002227306365967
    4. '_movies' → logprob: -6.825222492218018
    5. ')' → logprob: -7.325222492218018
    6. 'm' → logprob: -7.825222492218018
    7. 'movie' → logprob: -8.700222969055176
    8. ' if' → logprob: -8.700222969055176
    9. '[' → logprob: -8.825222969055176
    10. '    ' → logprob: -9.075222969055176

Token 28: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2520149052143097
    2. '.' → logprob: -1.5020148754119873
    3. '.setdefault' → logprob: -10.127015113830566
    4. '.push' → logprob: -11.252015113830566
    5. '.extend' → logprob: -11.752015113830566
    6. '.ap' → logprob: -12.127015113830566
    7. '.app' → logprob: -12.252015113830566
    8. '.add' → logprob: -12.627015113830566
    9. '.p' → logprob: -13.127015113830566
    10. '.Append' → logprob: -13.502015113830566

Token 29: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.006119333207607269
    2. '(' → logprob: -5.131119251251221
    3. '(a' → logprob: -8.631119728088379
    4. '([' → logprob: -12.256119728088379
    5. '(
' → logprob: -12.631119728088379
    6. '(('' → logprob: -13.756119728088379
    7. '(((' → logprob: -14.256119728088379
    8. '(tuple' → logprob: -14.881119728088379
    9. '```' → logprob: -15.131119728088379
    10. '(([' → logprob: -15.631119728088379

Token 30: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0921942703134846e-05
    2. ' a' → logprob: -11.50001049041748
    3. '   ' → logprob: -14.62501049041748
    4. 'b' → logprob: -15.87501049041748
    5. '(a' → logprob: -16.750011444091797
    6. ')a' → logprob: -17.625011444091797
    7. '    ' → logprob: -17.750011444091797
    8. '  ' → logprob: -18.625011444091797
    9. ')' → logprob: -18.625011444091797
    10. ''a' → logprob: -18.750011444091797

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012359415413811803
    2. ',b' → logprob: -6.7512359619140625
    3. ' ,' → logprob: -9.751235961914062
    4. ',
' → logprob: -12.126235961914062
    5. ',

' → logprob: -14.876235961914062
    6. '`,' → logprob: -15.251235961914062
    7. ')' → logprob: -15.501235961914062
    8. 'b' → logprob: -15.626235961914062
    9. ',)' → logprob: -15.626235961914062
    10. '',' → logprob: -15.876235961914062

Token 32: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.38690194487571716
    2. 'b' → logprob: -1.1369019746780396
    3. ')b' → logprob: -11.13690185546875
    4. ' ' → logprob: -12.01190185546875
    5. ')' → logprob: -12.26190185546875
    6. ' )' → logprob: -12.88690185546875
    7. ' ' → logprob: -14.51190185546875
    8. 'a' → logprob: -15.07440185546875
    9. '	b' → logprob: -15.13690185546875
    10. ' б' → logprob: -15.26190185546875

Token 33: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6932036876678467
    2. '))' → logprob: -0.6932036876678467
    3. '))
' → logprob: -10.443203926086426
    4. ')))' → logprob: -11.193203926086426
    5. ')
' → logprob: -11.693203926086426
    6. '),' → logprob: -12.818203926086426
    7. '   ' → logprob: -14.568203926086426
    8. ' ))' → logprob: -14.568203926086426
    9. ' )' → logprob: -14.943203926086426
    10. ' ' → logprob: -15.943203926086426

Token 34: '#' (ID: 2)
  Prédit: 'movies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'movies' → logprob: -0.003052458167076111
    2. ')' → logprob: -6.503052234649658
    3. 'sorted' → logprob: -6.878052234649658
    4. 's' → logprob: -9.128052711486816
    5. '```' → logprob: -9.378052711486816
    6. ' movies' → logprob: -10.003052711486816
    7. 'm' → logprob: -10.128052711486816
    8. '.movies' → logprob: -10.878052711486816
    9. '_movies' → logprob: -10.878052711486816
    10. 'movie' → logprob: -11.003052711486816

Token 35: ' Pour' (ID: 13931)
  Prédit: 'movies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'movies' → logprob: -0.5388085246086121
    2. 'm' → logprob: -1.2888085842132568
    3. ' movies' → logprob: -2.413808584213257
    4. 's' → logprob: -3.663808584213257
    5. '#' → logprob: -5.163808345794678
    6. 'sorted' → logprob: -5.538808345794678
    7. ' sorted' → logprob: -5.663808345794678
    8. ' m' → logprob: -6.288808345794678
    9. 'a' → logprob: -6.413808345794678
    10. 'd' → logprob: -7.038808345794678

Token 36: ' chaque' (ID: 21194)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.001615285873413
    2. 'r' → logprob: -1.126615285873413
    3. ' sorted' → logprob: -2.251615285873413
    4. 's' → logprob: -2.626615285873413
    5. 't' → logprob: -3.001615285873413
    6. ' for' → logprob: -4.501615524291992
    7. 'sort' → logprob: -5.126615524291992
    8. 'for' → logprob: -5.251615524291992
    9. ' r' → logprob: -5.251615524291992
    10. ')' → logprob: -5.251615524291992

Token 37: ' jour' (ID: 8379)
  Prédit: ' film'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' film' → logprob: -0.3293556869029999
    2. 'film' → logprob: -2.3293557167053223
    3. ' ' → logprob: -2.5793557167053223
    4. '_' → logprob: -3.3293557167053223
    5. ' movie' → logprob: -3.5793557167053223
    6. 'movie' → logprob: -4.454355716705322
    7. 'm' → logprob: -5.829355716705322
    8. ' )' → logprob: -5.829355716705322
    9. ' filme' → logprob: -5.829355716705322
    10. ',' → logprob: -5.954355716705322

Token 38: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47633764147758484
    2. ' for' → logprob: -1.1013376712799072
    3. ':' → logprob: -4.101337432861328
    4. ' ' → logprob: -4.976337432861328
    5. ',' → logprob: -5.101337432861328
    6. 'n' → logprob: -5.476337432861328
    7. '_' → logprob: -6.226337432861328
    8. 'i' → logprob: -6.351337432861328
    9. ' in' → logprob: -6.476337432861328
    10. ' i' → logprob: -6.726337432861328

Token 39: ' on' (ID: 402)
  Prédit: ' movies'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' movies' → logprob: -1.7071369886398315
    2. 'd' → logprob: -1.9571369886398315
    3. ' ' → logprob: -2.332137107849121
    4. 'movies' → logprob: -2.582137107849121
    5. ' d' → logprob: -3.332137107849121
    6. ' on' → logprob: -3.332137107849121
    7. 'from' → logprob: -3.457137107849121
    8. ' day' → logprob: -3.582137107849121
    9. '_' → logprob: -3.582137107849121
    10. '   ' → logprob: -3.707137107849121

Token 40: ' va' (ID: 3423)
  Prédit: ' va'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' va' → logprob: -1.0998352766036987
    2. ' souhaite' → logprob: -1.9748352766036987
    3. 'tr' → logprob: -2.0998353958129883
    4. ' veut' → logprob: -2.2248353958129883
    5. ' trie' → logprob: -2.3498353958129883
    6. 's' → logprob: -3.9748353958129883
    7. 'cherche' → logprob: -4.224835395812988
    8. ' cherche' → logprob: -4.224835395812988
    9. ' peut' → logprob: -4.349835395812988
    10. ' regarde' → logprob: -4.349835395812988

Token 41: ' garder' (ID: 63069)
  Prédit: ' tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tr' → logprob: -0.49501338601112366
    2. 'tr' → logprob: -1.1200133562088013
    3. ' stock' → logprob: -3.745013475418091
    4. 'stock' → logprob: -5.245013236999512
    5. ' vérifier' → logprob: -5.370013236999512
    6. ' créer' → logprob: -5.745013236999512
    7. ' regarder' → logprob: -5.870013236999512
    8. ' compter' → logprob: -5.870013236999512
    9. ' Trier' → logprob: -6.245013236999512
    10. ' déterminer' → logprob: -6.495013236999512

Token 42: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.4400803744792938
    2. ' uniquement' → logprob: -1.8150804042816162
    3. ' seulement' → logprob: -3.315080404281616
    4. ' le' → logprob: -3.315080404281616
    5. ' la' → logprob: -3.815080404281616
    6. ' only' → logprob: -4.065080165863037
    7. ' un' → logprob: -4.190080165863037
    8. 'a' → logprob: -4.565080165863037
    9. 'les' → logprob: -4.690080165863037
    10. 'la' → logprob: -5.065080165863037

Token 43: ' liste' (ID: 31719)
  Prédit: 'me'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.9115543365478516
    2. 'm' → logprob: -2.2865543365478516
    3. ' liste' → logprob: -2.2865543365478516
    4. ' meilleure' → logprob: -2.6615543365478516
    5. 'liste' → logprob: -2.7865543365478516
    6. ' même' → logprob: -2.9115543365478516
    7. 's' → logprob: -2.9115543365478516
    8. ' meilleur' → logprob: -3.1615543365478516
    9. 'max' → logprob: -4.286554336547852
    10. ' ' → logprob: -4.661554336547852

Token 44: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8339909315109253
    2. 'des' → logprob: -1.0839909315109253
    3. '[]' → logprob: -2.958991050720215
    4. '<|end|>' → logprob: -3.083991050720215
    5. 's' → logprob: -3.208991050720215
    6. '_des' → logprob: -3.583991050720215
    7. '_' → logprob: -3.833991050720215
    8. 'd' → logprob: -4.333991050720215
    9. '[' → logprob: -5.208991050720215
    10. ' ' → logprob: -5.458991050720215

Token 45: ' films' (ID: 16176)
  Prédit: 'films'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'films' → logprob: -0.553828775882721
    2. 'movies' → logprob: -1.1788287162780762
    3. ' films' → logprob: -2.928828716278076
    4. ' movies' → logprob: -4.053828716278076
    5. 'm' → logprob: -4.178828716278076
    6. 'd' → logprob: -5.678828716278076
    7. '[]' → logprob: -5.678828716278076
    8. '[' → logprob: -6.178828716278076
    9. '_' → logprob: -6.178828716278076
    10. ' filmes' → logprob: -6.428828716278076

Token 46: ' disponibles' (ID: 36617)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.3781791925430298
    2. 's' → logprob: -2.0031790733337402
    3. ' viewed' → logprob: -2.2531790733337402
    4. 'view' → logprob: -2.7531790733337402
    5. '_' → logprob: -2.8781790733337402
    6. '[' → logprob: -3.2531790733337402
    7. ',' → logprob: -3.2531790733337402
    8. 'import' → logprob: -3.6281790733337402
    9. 'films' → logprob: -3.8781790733337402
    10. 'reg' → logprob: -3.8781790733337402

Token 47: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5471532940864563
    2. 'available' → logprob: -2.1721532344818115
    3. 'day' → logprob: -3.1721532344818115
    4. '_' → logprob: -3.2971532344818115
    5. 'd' → logprob: -3.4221532344818115
    6. 'jours' → logprob: -3.6721532344818115
    7. 'movies' → logprob: -3.9221532344818115
    8. '.' → logprob: -4.422153472900391
    9. 'films' → logprob: -4.422153472900391
    10. ' disponibles' → logprob: -4.547153472900391

Token 48: 'days' (ID: 20270)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8962535858154297
    2. ',' → logprob: -1.7712535858154297
    3. 'jours' → logprob: -2.6462535858154297
    4. '.' → logprob: -3.1462535858154297
    5. '_' → logprob: -3.1462535858154297
    6. 'day' → logprob: -3.2712535858154297
    7. '```' → logprob: -3.3962535858154297
    8. 'days' → logprob: -3.6462535858154297
    9. 'movies' → logprob: -3.6462535858154297
    10. 'from' → logprob: -4.02125358581543

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.055433377623558044
    2. '=' → logprob: -2.9304332733154297
    3. '_' → logprob: -8.68043327331543
    4. '_available' → logprob: -8.93043327331543
    5. '_movies' → logprob: -9.68043327331543
    6. '[]' → logprob: -9.80543327331543
    7. '[' → logprob: -10.30543327331543
    8. '=[]' → logprob: -10.43043327331543
    9. 's' → logprob: -10.55543327331543
    10. 'available' → logprob: -12.05543327331543

Token 50: ' [[]' (ID: 182908)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.2941557765007019
    2. '{}' → logprob: -1.7941558361053467
    3. ' [[]' → logprob: -3.0441558361053467
    4. ' []' → logprob: -3.7941558361053467
    5. '[]' → logprob: -4.794155597686768
    6. ' [' → logprob: -5.044155597686768
    7. '[' → logprob: -6.419155597686768
    8. ' defaultdict' → logprob: -6.919155597686768
    9. ' [{}' → logprob: -7.544155597686768
    10. ' dict' → logprob: -8.419156074523926

Token 51: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48247939348220825
    2. ' for' → logprob: -1.2324793338775635
    3. ')' → logprob: -2.4824793338775635
    4. ']' → logprob: -5.107479572296143
    5. ',' → logprob: -6.607479572296143
    6. ')]' → logprob: -9.107479095458984
    7. ' ' → logprob: -10.607479095458984
    8. '
' → logprob: -11.107479095458984
    9. '	for' → logprob: -11.732479095458984
    10. '   ' → logprob: -12.107479095458984

Token 52: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17381493747234344
    2. 'range' → logprob: -2.2988150119781494
    3. '_' → logprob: -3.0488150119781494
    4. ' _' → logprob: -4.54881477355957
    5. '(range' → logprob: -7.42381477355957
    6. ' in' → logprob: -8.17381477355957
    7. ' day' → logprob: -9.04881477355957
    8. '_range' → logprob: -9.29881477355957
    9. ' i' → logprob: -10.79881477355957
    10. ' ' → logprob: -11.54881477355957

Token 53: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25609517097473145
    2. 'in' → logprob: -2.2560951709747314
    3. ' in' → logprob: -2.5060951709747314
    4. ' range' → logprob: -3.2560951709747314
    5. 'n' → logprob: -7.756094932556152
    6. '(n' → logprob: -7.756094932556152
    7. '(range' → logprob: -9.256094932556152
    8. 'ange' → logprob: -10.006094932556152
    9. 'days' → logprob: -11.256094932556152
    10. ' n' → logprob: -11.756094932556152

Token 54: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740926921367645
    2. 'range' → logprob: -0.9740927219390869
    3. '(range' → logprob: -11.099092483520508
    4. ' ' → logprob: -15.599092483520508
    5. '	range' → logprob: -16.474092483520508
    6. '   ' → logprob: -16.974092483520508
    7. ')' → logprob: -16.974092483520508
    8. 'rang' → logprob: -17.224092483520508
    9. 'r' → logprob: -17.474092483520508
    10. 'ran' → logprob: -17.599092483520508

Token 55: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07001045346260071
    2. '(' → logprob: -2.6950104236602783
    3. '((' → logprob: -10.3200101852417
    4. '(m' → logprob: -11.0700101852417
    5. '(max' → logprob: -11.4450101852417
    6. '(days' → logprob: -12.1950101852417
    7. '(a' → logprob: -12.4450101852417
    8. '(
' → logprob: -13.8200101852417
    9. '(range' → logprob: -13.9450101852417
    10. '(d' → logprob: -14.0700101852417

Token 56: '32' (ID: 1398)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18020665645599365
    2. '366' → logprob: -2.680206775665283
    3. '365' → logprob: -3.180206775665283
    4. '100' → logprob: -3.555206775665283
    5. '101' → logprob: -4.555206775665283
    6. '400' → logprob: -6.555206775665283
    7. '7' → logprob: -6.805206775665283
    8. '10' → logprob: -6.930206775665283
    9. '367' → logprob: -7.055206775665283
    10. '31' → logprob: -7.055206775665283

Token 57: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002217748697148636
    2. ')' → logprob: -9.250222206115723
    3. ']' → logprob: -9.750222206115723
    4. ' )' → logprob: -10.000222206115723
    5. '])' → logprob: -11.000222206115723
    6. ')])' → logprob: -13.375222206115723
    7. '])]' → logprob: -13.500222206115723
    8. ' ]' → logprob: -13.625222206115723
    9. ' ])' → logprob: -14.625222206115723
    10. '')]' → logprob: -15.750222206115723

Token 58: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2944997549057007
    2. '
' → logprob: -1.7944997549057007
    3. ' for' → logprob: -2.5444998741149902
    4. '<|end|>' → logprob: -4.79449987411499
    5. '
' → logprob: -7.29449987411499
    6. '

' → logprob: -7.79449987411499
    7. '```' → logprob: -8.044499397277832
    8. ' 
' → logprob: -8.794499397277832
    9. '\n' → logprob: -8.919499397277832
    10. '' → logprob: -9.044499397277832

Token 59: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005495445802807808
    2. '
' → logprob: -5.505495548248291
    3. ' for' → logprob: -6.630495548248291
    4. '<|end|>' → logprob: -9.630495071411133
    5. '
' → logprob: -11.630495071411133
    6. '```' → logprob: -12.130495071411133
    7. '' → logprob: -12.755495071411133
    8. '

' → logprob: -12.755495071411133
    9. ' 
' → logprob: -13.130495071411133
    10. 'f' → logprob: -13.255495071411133

Token 60: ' index' (ID: 3472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0764966681599617
    2. '<|end|>' → logprob: -3.3264966011047363
    3. ' 
' → logprob: -3.9514966011047363
    4. '
' → logprob: -4.826496601104736
    5. ' 

' → logprob: -5.701496601104736
    6. '#' → logprob: -6.076496601104736
    7. '<|end|>' → logprob: -6.576496601104736
    8. ' for' → logprob: -7.201496601104736
    9. '0' → logprob: -7.201496601104736
    10. ' ' → logprob: -7.826496601104736

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2946587800979614
    2. ' ' → logprob: -1.5446587800979614
    3. 'ed' → logprob: -3.419658660888672
    4. 'ing' → logprob: -5.419658660888672
    5. '1' → logprob: -6.544658660888672
    6. 'é' → logprob: -7.044658660888672
    7. 'ation' → logprob: -7.294658660888672
    8. '[' → logprob: -8.169658660888672
    9. 'es' → logprob: -8.294658660888672
    10. 'd' → logprob: -8.419658660888672

Token 62: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001200827769935131
    2. '1' → logprob: -7.3762006759643555
    3. ' ' → logprob: -7.5012006759643555
    4. '=' → logprob: -11.876200675964355
    5. 'from' → logprob: -12.376200675964355
    6. 's' → logprob: -12.751200675964355
    7. ' from' → logprob: -13.251200675964355
    8. '[' → logprob: -13.501200675964355
    9. ' =' → logprob: -14.126200675964355
    10. 'ing' → logprob: -14.751200675964355

Token 63: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' ' (ID: 220)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -9.674858301877975e-05
    2. ' ' → logprob: -9.250096321105957
    3. '30' → logprob: -14.500096321105957
    4. '3' → logprob: -17.750097274780273
    5. '```' → logprob: -17.750097274780273
    6. '1' → logprob: -18.750097274780273
    7. '
' → logprob: -19.125097274780273
    8. '29' → logprob: -19.625097274780273
    9. 'day' → logprob: -19.750097274780273
    10. 'n' → logprob: -20.000097274780273

Token 65: '31' (ID: 2911)
  Prédit: '31'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -11.875007629394531
    3. '30' → logprob: -14.875007629394531
    4. '3' → logprob: -17.37500762939453
    5. '1' → logprob: -17.50000762939453
    6. '```' → logprob: -18.00000762939453
    7. 'day' → logprob: -20.25000762939453
    8. '21' → logprob: -20.25000762939453
    9. '311' → logprob: -20.25000762939453
    10. '  ' → logprob: -20.50000762939453

Token 66: ' utilisé' (ID: 53138)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23418238759040833
    2. 'for' → logprob: -2.109182357788086
    3. ' for' → logprob: -2.734182357788086
    4. '<|end|>' → logprob: -4.359182357788086
    5. '
' → logprob: -5.234182357788086
    6. '

' → logprob: -6.109182357788086
    7. ' 
' → logprob: -6.734182357788086
    8. '' → logprob: -8.484182357788086
    9. '<|end|>' → logprob: -8.609182357788086
    10. '```' → logprob: -8.609182357788086

Token 67: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02591436728835106
    2. ' for' → logprob: -3.900914430618286
    3. '
' → logprob: -5.275914192199707
    4. '<|end|>' → logprob: -9.025914192199707
    5. '```' → logprob: -9.525914192199707
    6. '\n' → logprob: -11.025914192199707
    7. '

' → logprob: -11.275914192199707
    8. '
' → logprob: -12.150914192199707
    9. ' 
' → logprob: -12.400914192199707
    10. '<|end|>' → logprob: -13.275914192199707

Token 68: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010711929644457996
    2. ' for' → logprob: -9.375106811523438
    3. '```' → logprob: -10.875106811523438
    4. '
' → logprob: -13.250106811523438
    5. 'd' → logprob: -15.250106811523438
    6. '`' → logprob: -15.250106811523438
    7. 'f' → logprob: -16.250106811523438
    8. '<|end|>' → logprob: -16.375106811523438
    9. 'n' → logprob: -16.500106811523438
    10. '``' → logprob: -16.500106811523438

Token 69: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.24895840883255005
    2. 'a' → logprob: -1.8739583492279053
    3. ' i' → logprob: -3.4989583492279053
    4. ' (' → logprob: -4.748958587646484
    5. ' _' → logprob: -4.998958587646484
    6. ' movie' → logprob: -4.998958587646484
    7. 'i' → logprob: -5.373958587646484
    8. '_' → logprob: -5.373958587646484
    9. ' ' → logprob: -6.498958587646484
    10. 'movie' → logprob: -6.748958587646484

Token 70: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06655898690223694
    2. ',' → logprob: -2.941559076309204
    3. 'in' → logprob: -4.691558837890625
    4. ' ' → logprob: -6.316558837890625
    5. ' ,' → logprob: -7.441558837890625
    6. 'n' → logprob: -11.066558837890625
    7. '  ' → logprob: -12.566558837890625
    8. 's' → logprob: -12.691558837890625
    9. ',n' → logprob: -12.941558837890625
    10. ' n' → logprob: -13.191558837890625

Token 71: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.07853223383426666
    2. ' (' → logprob: -2.8285322189331055
    3. '(movie' → logprob: -4.7035322189331055
    4. '(m' → logprob: -4.9535322189331055
    5. '(' → logprob: -9.078532218933105
    6. '(ab' → logprob: -10.203532218933105
    7. '(ai' → logprob: -10.828532218933105
    8. '(A' → logprob: -10.828532218933105
    9. '(article' → logprob: -11.078532218933105
    10. '((' → logprob: -11.453532218933105

Token 72: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0280383548888494e-06
    2. ' a' → logprob: -13.875000953674316
    3. ')' → logprob: -17.625001907348633
    4. '   ' → logprob: -18.000001907348633
    5. ')a' → logprob: -18.125001907348633
    6. '	a' → logprob: -18.625001907348633
    7. 'start' → logprob: -18.875001907348633
    8. '_a' → logprob: -19.500001907348633
    9. 'а' → logprob: -19.875001907348633
    10. ',a' → logprob: -20.125001907348633

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.700132997939363e-05
    2. ' ,' → logprob: -11.250017166137695
    3. ',b' → logprob: -12.500017166137695
    4. ',
' → logprob: -16.500017166137695
    5. ',)' → logprob: -16.625017166137695
    6. '‌,' → logprob: -17.375017166137695
    7. 'b' → logprob: -17.500017166137695
    8. ')' → logprob: -17.875017166137695
    9. 's' → logprob: -18.250017166137695
    10. '<|end|>' → logprob: -18.250017166137695

Token 74: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024764856789261103
    2. ' b' → logprob: -6.002476692199707
    3. ')' → logprob: -15.002476692199707
    4. ' ' → logprob: -15.127476692199707
    5. ')b' → logprob: -16.25247573852539
    6. '```' → logprob: -17.75247573852539
    7. ',' → logprob: -17.87747573852539
    8. '_' → logprob: -18.50247573852539
    9. '   ' → logprob: -18.50247573852539
    10. '<|end|>' → logprob: -18.62747573852539

Token 75: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.045823566731997e-05
    2. 'in' → logprob: -11.125020027160645
    3. ' )' → logprob: -12.375020027160645
    4. ' in' → logprob: -14.125020027160645
    5. 'a' → logprob: -16.12502098083496
    6. ')
' → logprob: -16.12502098083496
    7. ' ' → logprob: -16.62502098083496
    8. '   ' → logprob: -17.00002098083496
    9. '))' → logprob: -17.00002098083496
    10. '）' → logprob: -17.12502098083496

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14282067120075226
    2. 'in' → logprob: -2.0178205966949463
    3. ' ' → logprob: -9.642820358276367
    4. 's' → logprob: -10.517820358276367
    5. 'n' → logprob: -11.017820358276367
    6. ')' → logprob: -11.767820358276367
    7. ' i' → logprob: -11.892820358276367
    8. ',' → logprob: -12.517820358276367
    9. 'i' → logprob: -12.642820358276367
    10. '  ' → logprob: -12.892820358276367

Token 77: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.020559873431921005
    2. 'enumer' → logprob: -3.895559787750244
    3. ' range' → logprob: -12.145560264587402
    4. ' enumer' → logprob: -12.770560264587402
    5. '<|end|>' → logprob: -12.895560264587402
    6. ' en' → logprob: -13.020560264587402
    7. '```' → logprob: -13.020560264587402
    8. ' in' → logprob: -14.145560264587402
    9. 'en' → logprob: -14.520560264587402
    10. 'Enumer' → logprob: -15.145560264587402

Token 78: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.8312570318812504e-05
    2. '(' → logprob: -11.000018119812012
    3. '(s' → logprob: -14.125018119812012
    4. ')m' → logprob: -15.250018119812012
    5. ' (' → logprob: -15.750018119812012
    6. ')' → logprob: -16.000019073486328
    7. '(movie' → logprob: -16.125019073486328
    8. '(n' → logprob: -16.625019073486328
    9. ')(' → logprob: -17.250019073486328
    10. '(f' → logprob: -17.375019073486328

Token 79: 'ovies' (ID: 56725)
  Prédit: 'ovies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ovies' → logprob: -2.2127087504486553e-05
    2. 'movies' → logprob: -11.875021934509277
    3. 'ov' → logprob: -12.000021934509277
    4. 'oves' → logprob: -12.625021934509277
    5. 'ovie' → logprob: -13.000021934509277
    6. 'o' → logprob: -14.375021934509277
    7. ')' → logprob: -14.625021934509277
    8. '```' → logprob: -14.875021934509277
    9. 'v' → logprob: -15.000021934509277
    10. 's' → logprob: -15.000021934509277

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004307884373702109
    2. ' ):' → logprob: -8.500431060791016
    3. ')' → logprob: -9.000431060791016
    4. '):
' → logprob: -9.375431060791016
    5. ':' → logprob: -11.000431060791016
    6. '):
' → logprob: -13.375431060791016
    7. '():' → logprob: -15.375431060791016
    8. ',' → logprob: -16.375431060791016
    9. ' )' → logprob: -16.375431060791016
    10. ']:' → logprob: -16.625431060791016

Token 81: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.401867538690567
    2. '   ' → logprob: -1.4018675088882446
    3. '<|end|>' → logprob: -3.026867628097534
    4. ' ' → logprob: -4.026867389678955
    5. ' for' → logprob: -4.776867389678955
    6. ':
' → logprob: -5.901867389678955
    7. ')' → logprob: -6.651867389678955
    8. '):' → logprob: -6.651867389678955
    9. ' days' → logprob: -7.401867389678955
    10. '```' → logprob: -7.526867389678955

Token 82: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04152001067996025
    2. 'for' (adapté à ' for') → logprob: -3.416520118713379
    3. '   ' → logprob: -5.541520118713379
    4. '<|end|>' → logprob: -6.041520118713379
    5. ' ' → logprob: -7.791520118713379
    6. '```' → logprob: -8.416520118713379
    7. '    ' → logprob: -8.666520118713379
    8. '
' → logprob: -8.791520118713379
    9. ')' → logprob: -9.416520118713379
    10. '	for' → logprob: -9.666520118713379

Token 83: ' d' (ID: 272)
  Prédit: ' day'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' day' → logprob: -0.19940848648548126
    2. ' d' → logprob: -1.8244085311889648
    3. ' range' → logprob: -4.199408531188965
    4. ' j' → logprob: -6.199408531188965
    5. 'd' → logprob: -6.574408531188965
    6. 'day' → logprob: -7.199408531188965
    7. ' jour' → logprob: -9.699408531188965
    8. 'range' → logprob: -9.949408531188965
    9. 'j' → logprob: -10.199408531188965
    10. ' ' → logprob: -10.449408531188965

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010727039771154523
    2. 'in' → logprob: -7.376072883605957
    3. ' ' → logprob: -8.876072883605957
    4. 'range' → logprob: -9.001072883605957
    5. 'd' → logprob: -9.626072883605957
    6. 'n' → logprob: -9.751072883605957
    7. 'a' → logprob: -11.501072883605957
    8. ' i' → logprob: -11.751072883605957
    9. 's' → logprob: -12.001072883605957
    10. '<|end|>' → logprob: -12.126072883605957

Token 85: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011069283820688725
    2. 'range' → logprob: -4.511069297790527
    3. ' ' → logprob: -11.886069297790527
    4. '	range' → logprob: -11.886069297790527
    5. '(range' → logprob: -12.636069297790527
    6. 'rang' → logprob: -14.261069297790527
    7. ' ran' → logprob: -14.386069297790527
    8. 'r' → logprob: -14.511069297790527
    9. ' xrange' → logprob: -14.761069297790527
    10. '_range' → logprob: -15.261069297790527

Token 86: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0007115975022315979
    2. '(' → logprob: -7.250711441040039
    3. '(b' → logprob: -15.000711441040039
    4. '(i' → logprob: -15.000711441040039
    5. '(A' → logprob: -15.750711441040039
    6. ' (' → logprob: -15.875711441040039
    7. '(
' → logprob: -16.25071144104004
    8. '(s' → logprob: -16.37571144104004
    9. ')' → logprob: -16.50071144104004
    10. '<|end|>' → logprob: -17.00071144104004

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002360190497711301
    2. ' ,' → logprob: -6.6273603439331055
    3. ',b' → logprob: -6.8773603439331055
    4. ',d' → logprob: -13.627360343933105
    5. 'b' → logprob: -13.752360343933105
    6. ' b' → logprob: -15.252360343933105
    7. ' ' → logprob: -16.37735939025879
    8. '，' → logprob: -16.50235939025879
    9. '   ' → logprob: -17.00235939025879
    10. 'd' → logprob: -17.37735939025879

Token 88: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02630099281668663
    2. ' b' → logprob: -3.6513009071350098
    3. '	b' → logprob: -15.526301383972168
    4. 'd' → logprob: -16.02630043029785
    5. ')b' → logprob: -16.02630043029785
    6. '(b' → logprob: -16.52630043029785
    7. ' ' → logprob: -16.90130043029785
    8. '```' → logprob: -17.02630043029785
    9. '   ' → logprob: -17.15130043029785
    10. '>b' → logprob: -17.27630043029785

Token 89: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11283423006534576
    2. ' +' → logprob: -2.2378342151641846
    3. ')' → logprob: -11.862833976745605
    4. ')+' → logprob: -13.112833976745605
    5. '+)' → logprob: -14.487833976745605
    6. 's' → logprob: -14.612833976745605
    7. ' ' → logprob: -14.612833976745605
    8. '1' → logprob: -15.237833976745605
    9. '```' → logprob: -15.362833976745605
    10. '+i' → logprob: -15.737833976745605

Token 90: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013295256067067385
    2. ' ' → logprob: -6.62632942199707
    3. ')' → logprob: -13.25132942199707
    4. '   ' → logprob: -13.75132942199707
    5. '```' → logprob: -14.62632942199707
    6. '  ' → logprob: -16.12632942199707
    7. ',' → logprob: -16.87632942199707
    8. '=' → logprob: -17.43882942199707
    9. '
' → logprob: -18.06382942199707
    10. '+' → logprob: -18.06382942199707

Token 91: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. ')' → logprob: -17.2500057220459
    4. '```' → logprob: -17.7500057220459
    5. '   ' → logprob: -18.8750057220459
    6. '  ' → logprob: -19.3750057220459
    7. '۱' → logprob: -19.8125057220459
    8. '2' → logprob: -20.5000057220459
    9. '0' → logprob: -20.5625057220459
    10. '' → logprob: -20.8750057220459

Token 92: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029174534138292074
    2. '):
' → logprob: -6.002917289733887
    3. ')' → logprob: -7.877917289733887
    4. ' ):' → logprob: -10.252917289733887
    5. ':' → logprob: -10.752917289733887
    6. '):
' → logprob: -12.627917289733887
    7. '   ' → logprob: -14.252917289733887
    8. ']:' → logprob: -14.502917289733887
    9. '+' → logprob: -15.252917289733887
    10. ' )' → logprob: -15.502917289733887

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046398598700761795
    2. '   ' → logprob: -3.546398639678955
    3. ' days' → logprob: -4.296398639678955
    4. ')' → logprob: -7.296398639678955
    5. 'days' → logprob: -7.296398639678955
    6. ' ' → logprob: -8.171398162841797
    7. '(days' → logprob: -8.421398162841797
    8. '        
' → logprob: -8.671398162841797
    9. '
' → logprob: -9.171398162841797
    10. '[' → logprob: -9.171398162841797

Token 94: ' days' (ID: 3376)
  Prédit: ' days'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' days' → logprob: -0.023278439417481422
    2. 'days' (adapté à ' days') → logprob: -3.7732784748077393
    3. '   ' → logprob: -10.64827823638916
    4. '(days' → logprob: -12.64827823638916
    5. '       ' → logprob: -13.39827823638916
    6. '_days' → logprob: -13.64827823638916
    7. '.days' → logprob: -14.27327823638916
    8. ' ' → logprob: -14.52327823638916
    9. ' ' → logprob: -15.14827823638916
    10. '
' → logprob: -15.39827823638916

Token 95: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -4.127333340875339e-06
    2. '[' → logprob: -12.500003814697266
    3. '[
' → logprob: -15.500003814697266
    4. 'd' → logprob: -16.500003814697266
    5. ' [' → logprob: -17.125003814697266
    6. '[df' → logprob: -17.125003814697266
    7. '```' → logprob: -17.250003814697266
    8. '[i' → logprob: -18.250003814697266
    9. '[s' → logprob: -18.750003814697266
    10. '][' → logprob: -18.875003814697266

Token 96: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0034726131707429886
    2. ').' → logprob: -5.753472805023193
    3. '.append' → logprob: -8.378472328186035
    4. ' ].' → logprob: -10.753472328186035
    5. ']' → logprob: -10.878472328186035
    6. '.' → logprob: -11.128472328186035
    7. ')' → logprob: -12.128472328186035
    8. ''].' → logprob: -13.003472328186035
    9. ']).' → logprob: -14.753472328186035
    10. '"].' → logprob: -14.878472328186035

Token 97: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.6240566083070007e-06
    2. '.append' → logprob: -13.625001907348633
    3. ' append' → logprob: -15.125001907348633
    4. 'appen' → logprob: -16.375001907348633
    5. '_append' → logprob: -18.250001907348633
    6. 'Append' → logprob: -18.875001907348633
    7. '	append' → logprob: -19.000001907348633
    8. 'app' → logprob: -20.000001907348633
    9. 'add' → logprob: -21.750001907348633
    10. 'appa' → logprob: -23.500001907348633

Token 98: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.00000286102295
    3. '((' → logprob: -14.75000286102295
    4. 'i' → logprob: -15.87500286102295
    5. ' (' → logprob: -18.125001907348633
    6. '(
' → logprob: -19.750001907348633
    7. ' i' → logprob: -20.500001907348633
    8. ')' → logprob: -21.250001907348633
    9. '(s' → logprob: -21.250001907348633
    10. ')i' → logprob: -21.625001907348633

Token 99: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.935296834039036e-06
    2. ' )' → logprob: -12.87500286102295
    3. ')
' → logprob: -16.125003814697266
    4. '))' → logprob: -16.125003814697266
    5. ')`' → logprob: -17.875003814697266
    6. ')}}' → logprob: -18.875003814697266
    7. ')}' → logprob: -19.000003814697266
    8. ')#' → logprob: -19.125003814697266
    9. '`)' → logprob: -19.125003814697266
    10. '),' → logprob: -19.375003814697266

Token 100: 'seen' (ID: 34177)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selected' → logprob: -1.3028666973114014
    2. 'chosen' → logprob: -2.3028666973114014
    3. 'res' → logprob: -2.4278666973114014
    4. 'dp' → logprob: -2.5528666973114014
    5. 'wat' → logprob: -2.8028666973114014
    6. 'watch' → logprob: -2.9278666973114014
    7. 'seen' → logprob: -3.3028666973114014
    8. 'visited' → logprob: -3.4278666973114014
    9. 'result' → logprob: -3.5528666973114014
    10. 'available' → logprob: -3.8028666973114014

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014977779239416122
    2. '=' → logprob: -4.264977931976318
    3. '[' → logprob: -8.01497745513916
    4. '_' → logprob: -8.88997745513916
    5. ')' → logprob: -9.13997745513916
    6. '[]' → logprob: -9.88997745513916
    7. '_movies' → logprob: -10.01497745513916
    8. ',' → logprob: -10.51497745513916
    9. ' ' → logprob: -10.51497745513916
    10. '=[]' → logprob: -11.01497745513916

Token 102: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.06504599750041962
    2. '[' → logprob: -2.9400460720062256
    3. ' set' → logprob: -4.6900458335876465
    4. ' [' → logprob: -7.5650458335876465
    5. '[]' → logprob: -8.440046310424805
    6. ' ' → logprob: -8.940046310424805
    7. '(set' → logprob: -11.190046310424805
    8. '0' → logprob: -11.565046310424805
    9. '   ' → logprob: -11.690046310424805
    10. '{' → logprob: -11.940046310424805

Token 103: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002231736434623599
    2. '(' → logprob: -6.127231597900391
    3. ' ()' → logprob: -11.00223159790039
    4. '(),' → logprob: -12.00223159790039
    5. '()
' → logprob: -12.25223159790039
    6. '()

' → logprob: -12.50223159790039
    7. '()]' → logprob: -12.75223159790039
    8. '()\' → logprob: -12.87723159790039
    9. '();' → logprob: -13.37723159790039
    10. '([]' → logprob: -13.62723159790039

Token 104: 'total' (ID: 9577)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3969532251358032
    2. 'watch' → logprob: -2.0219531059265137
    3. 'for' → logprob: -2.1469531059265137
    4. 'res' → logprob: -2.1469531059265137
    5. 'selected' → logprob: -2.1469531059265137
    6. 'schedule' → logprob: -2.6469531059265137
    7. 'wat' → logprob: -3.2719531059265137
    8. 'answer' → logprob: -3.6469531059265137
    9. 'results' → logprob: -3.7719531059265137
    10. 'ans' → logprob: -3.7719531059265137

Token 105: '_h' (ID: 3434)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6854202151298523
    2. '_' → logprob: -1.435420274734497
    3. '_movies' → logprob: -2.060420274734497
    4. '=' → logprob: -2.685420274734497
    5. '_days' → logprob: -3.810420274734497
    6. ' +=' → logprob: -3.935420274734497
    7. '_views' → logprob: -4.935420036315918
    8. ' ' → logprob: -6.810420036315918
    9. '_watch' → logprob: -6.935420036315918
    10. '+=' → logprob: -6.935420036315918

Token 106: 'appiness' (ID: 117779)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17342603206634521
    2. '+=' → logprob: -2.9234261512756348
    3. ' =' → logprob: -3.2984261512756348
    4. 'ours' → logprob: -4.048426151275635
    5. 'eld' → logprob: -4.048426151275635
    6. ' +=' → logprob: -4.298426151275635
    7. 'appy' → logprob: -5.423426151275635
    8. 'our' → logprob: -5.798426151275635
    9. 'ost' → logprob: -6.673426151275635
    10. 'e' → logprob: -6.923426151275635

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011050650849938393
    2. '=' → logprob: -4.511050701141357
    3. ' +=' → logprob: -13.3860502243042
    4. ' ' → logprob: -13.7610502243042
    5. ' =)' → logprob: -17.011051177978516
    6. '  ' → logprob: -17.136051177978516
    7. ' =
' → logprob: -17.136051177978516
    8. 's' → logprob: -17.511051177978516
    9. '.' → logprob: -17.636051177978516
    10. ')' → logprob: -17.886051177978516

Token 108: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34844544529914856
    2. ' ' → logprob: -1.2234454154968262
    3. ' ' → logprob: -14.473445892333984
    4. '1' → logprob: -16.598445892333984
    5. '100' → logprob: -16.848445892333984
    6. '<|end|>' → logprob: -17.098445892333984
    7. '`' → logprob: -17.348445892333984
    8. ')' → logprob: -17.660945892333984
    9. ' 
' → logprob: -17.723445892333984
    10. '```' → logprob: -17.785945892333984

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001097417771234177
    2. ' ' → logprob: -9.125109672546387
    3. 'len' → logprob: -15.562609672546387
    4. '100' → logprob: -16.625110626220703
    5. '[]' → logprob: -16.812610626220703
    6. 'sum' → logprob: -17.187610626220703
    7. 'n' → logprob: -17.250110626220703
    8. 'int' → logprob: -17.375110626220703
    9. '```' → logprob: -17.375110626220703
    10. '1' → logprob: -17.437610626220703

Token 110: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011412883177399635
    2. '
' → logprob: -7.12614107131958
    3. ' for' → logprob: -8.126141548156738
    4. '\n' → logprob: -11.251141548156738
    5. '<|end|>' → logprob: -12.126141548156738
    6. 'day' → logprob: -12.251141548156738
    7. '```' → logprob: -12.501141548156738
    8. '
' → logprob: -12.501141548156738
    9. '  
' → logprob: -13.126141548156738
    10. '\' → logprob: -13.626141548156738

Token 111: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.157039049663581e-05
    2. 'max' → logprob: -11.375051498413086
    3. 'day' → logprob: -11.500051498413086
    4. '#' → logprob: -12.375051498413086
    5. 'from' → logprob: -12.375051498413086
    6. 'current' → logprob: -12.500051498413086
    7. 'selected' → logprob: -12.625051498413086
    8. ' for' → logprob: -13.250051498413086
    9. 'd' → logprob: -13.250051498413086
    10. 'import' → logprob: -13.625051498413086

Token 112: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.04983820021152496
    2. ' day' → logprob: -3.0498383045196533
    3. 'd' → logprob: -7.299838066101074
    4. ' range' → logprob: -7.799838066101074
    5. ' _' → logprob: -9.674838066101074
    6. ' ' → logprob: -10.424838066101074
    7. ' i' → logprob: -10.924838066101074
    8. 'day' → logprob: -11.299838066101074
    9. ' jour' → logprob: -11.924838066101074
    10. ' days' → logprob: -12.299838066101074

Token 113: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00902152806520462
    2. 'in' → logprob: -4.759021759033203
    3. ' ' → logprob: -7.884021759033203
    4. 'd' → logprob: -11.509021759033203
    5. ',' → logprob: -12.134021759033203
    6. 'range' → logprob: -12.259021759033203
    7. 's' → logprob: -12.884021759033203
    8. '1' → logprob: -13.634021759033203
    9. ' ,' → logprob: -13.759021759033203
    10. 'n' → logprob: -13.759021759033203

Token 114: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01105159055441618
    2. ' range' → logprob: -4.511051654815674
    3. 'days' → logprob: -13.136051177978516
    4. '1' → logprob: -14.386051177978516
    5. '(range' → logprob: -14.386051177978516
    6. ' ' → logprob: -15.386051177978516
    7. ' days' → logprob: -16.011051177978516
    8. '(' → logprob: -16.636051177978516
    9. '
' → logprob: -16.761051177978516
    10. '   ' → logprob: -16.761051177978516

Token 115: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012356207298580557
    2. '1' → logprob: -9.000123977661133
    3. '(
' → logprob: -16.375123977661133
    4. ' (' → logprob: -17.500123977661133
    5. '(len' → logprob: -17.500123977661133
    6. ' ' → logprob: -18.750123977661133
    7. '(days' → logprob: -19.625123977661133
    8. '   ' → logprob: -19.625123977661133
    9. '```' → logprob: -19.750123977661133
    10. ',' → logprob: -19.875123977661133

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. ' ' → logprob: -12.25001335144043
    3. '   ' → logprob: -12.37501335144043
    4. '(' → logprob: -12.75001335144043
    5. '32' → logprob: -14.12501335144043
    6. '31' → logprob: -14.25001335144043
    7. 'len' → logprob: -15.62501335144043
    8. '
' → logprob: -17.06251335144043
    9. '  ' → logprob: -17.25001335144043
    10. '```' → logprob: -17.37501335144043

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001170460251159966
    2. ' ,' → logprob: -6.751170635223389
    3. '31' → logprob: -16.376171112060547
    4. '32' → logprob: -16.501171112060547
    5. ',
' → logprob: -16.626171112060547
    6. '1' → logprob: -17.376171112060547
    7. ',len' → logprob: -17.751171112060547
    8. '36' → logprob: -18.501171112060547
    9. '34' → logprob: -18.501171112060547
    10. 'd' → logprob: -18.626171112060547

Token 118: ' ' (ID: 220)
  Prédit: '32'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -0.0002166491176467389
    2. ' ' → logprob: -8.500216484069824
    3. 'len' → logprob: -12.000216484069824
    4. '31' → logprob: -12.250216484069824
    5. '   ' → logprob: -14.250216484069824
    6. ' len' → logprob: -14.625216484069824
    7. '33' → logprob: -15.375216484069824
    8. '1' → logprob: -15.625216484069824
    9. '```' → logprob: -15.625216484069824
    10. 'n' → logprob: -16.00021743774414

Token 119: '32' (ID: 1398)
  Prédit: '32'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '32' → logprob: -1.9027791495318525e-05
    2. 'len' → logprob: -11.250019073486328
    3. ' ' → logprob: -13.000019073486328
    4. '31' → logprob: -13.000019073486328
    5. 'n' → logprob: -13.875019073486328
    6. ' len' → logprob: -16.250019073486328
    7. '```' → logprob: -16.625019073486328
    8. '
' → logprob: -16.750019073486328
    9. '1' → logprob: -16.875019073486328
    10. '   ' → logprob: -17.000019073486328

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008968601003289223
    2. '):
' → logprob: -4.758968830108643
    3. ':' → logprob: -8.133968353271484
    4. ' ):' → logprob: -10.008968353271484
    5. ')' → logprob: -11.383968353271484
    6. '):
' → logprob: -13.508968353271484
    7. '   ' → logprob: -14.008968353271484
    8. ']:' → logprob: -14.383968353271484
    9. ' ):
' → logprob: -14.883968353271484
    10. ':
' → logprob: -15.258968353271484

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01410144567489624
    2. ' if' → logprob: -4.889101505279541
    3. 'if' → logprob: -5.139101505279541
    4. '    
' → logprob: -8.264101028442383
    5. 'available' → logprob: -9.639101028442383
    6. 'for' → logprob: -9.639101028442383
    7. '```' → logprob: -9.764101028442383
    8. ' for' → logprob: -10.264101028442383
    9. 'days' → logprob: -10.514101028442383
    10. 'possible' → logprob: -10.764101028442383

Token 122: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2594796121120453
    2. '   ' → logprob: -2.134479522705078
    3. 'available' → logprob: -3.009479522705078
    4. ' if' → logprob: -3.759479522705078
    5. 'best' → logprob: -3.884479522705078
    6. 'for' → logprob: -4.634479522705078
    7. 'max' → logprob: -6.009479522705078
    8. ' best' → logprob: -6.509479522705078
    9. 'c' → logprob: -7.259479522705078
    10. ' available' → logprob: -7.384479522705078

Token 123: ' Cho' (ID: 14207)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.607479989528656
    2. 'available' → logprob: -1.4824800491333008
    3. 'c' → logprob: -2.357480049133301
    4. 'best' → logprob: -2.482480049133301
    5. 'for' → logprob: -3.357480049133301
    6. 'max' → logprob: -5.607480049133301
    7. 'possible' → logprob: -5.857480049133301
    8. ' if' → logprob: -6.357480049133301
    9. 'current' → logprob: -6.732480049133301
    10. '#' → logprob: -6.982480049133301

Token 124: 'isir' (ID: 104403)
  Prédit: 'isir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isir' → logprob: -0.12476308643817902
    2. '   ' → logprob: -3.374763011932373
    3. 'sir' → logprob: -4.374763011932373
    4. 'si' → logprob: -4.749763011932373
    5. 'sis' → logprob: -4.749763011932373
    6. 'se' → logprob: -4.999763011932373
    7. 'isi' → logprob: -5.124763011932373
    8. 's' → logprob: -5.124763011932373
    9. 'sen' → logprob: -5.374763011932373
    10. 'os' → logprob: -5.499763011932373

Token 125: ' un' (ID: 537)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5150746703147888
    2. 'le' → logprob: -2.1400747299194336
    3. ' =' → logprob: -2.8900747299194336
    4. ' if' → logprob: -3.2650747299194336
    5. '=' → logprob: -3.7650747299194336
    6. ')' → logprob: -3.7650747299194336
    7. 'film' → logprob: -4.015074729919434
    8. 'the' → logprob: -4.140074729919434
    9. 'movies' → logprob: -4.265074729919434
    10. 'films' → logprob: -4.390074729919434

Token 126: ' film' (ID: 5586)
  Prédit: 'film'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'film' → logprob: -0.12581312656402588
    2. ' film' → logprob: -2.8758130073547363
    3. 'movie' → logprob: -2.8758130073547363
    4. ' movie' → logprob: -6.125813007354736
    5. 'f' → logprob: -7.625813007354736
    6. 'films' → logprob: -8.125813484191895
    7. 'fil' → logprob: -8.125813484191895
    8. 'if' → logprob: -8.125813484191895
    9. 'i' → logprob: -8.250813484191895
    10. 'indice' → logprob: -9.000813484191895

Token 127: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8552348017692566
    2. ' if' → logprob: -1.3552348613739014
    3. 'if' → logprob: -1.8552348613739014
    4. '   ' → logprob: -2.1052348613739014
    5. '=' → logprob: -3.9802348613739014
    6. '_possible' → logprob: -5.730234622955322
    7. 'possible' → logprob: -5.980234622955322
    8. ',' → logprob: -5.980234622955322
    9. 'indices' → logprob: -6.355234622955322
    10. ')' → logprob: -6.855234622955322

Token 128: ' jour' (ID: 8379)
  Prédit: 'days'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'days' → logprob: -0.0711321011185646
    2. ' days' → logprob: -2.696132183074951
    3. 'jours' → logprob: -7.071132183074951
    4. ' jours' → logprob: -8.446131706237793
    5. 'jour' → logprob: -9.696131706237793
    6. 'day' → logprob: -10.821131706237793
    7. '_days' → logprob: -11.446131706237793
    8. '(days' → logprob: -11.446131706237793
    9. '[' → logprob: -12.071131706237793
    10. 'd' → logprob: -12.696131706237793

Token 129: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9073296785354614
    2. 'if' → logprob: -1.1573296785354614
    3. ' if' → logprob: -1.2823296785354614
    4. ')' → logprob: -7.032329559326172
    5. ' ' → logprob: -7.532329559326172
    6. ':' → logprob: -7.532329559326172
    7. ',' → logprob: -7.657329559326172
    8. 'days' → logprob: -7.657329559326172
    9. '    ' → logprob: -8.407329559326172
    10. '[' → logprob: -8.532329559326172

Token 130: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8308258056640625
    2. '   ' → logprob: -2.2058258056640625
    3. 'days' → logprob: -2.4558258056640625
    4. '(days' → logprob: -2.4558258056640625
    5. ']' → logprob: -2.7058258056640625
    6. ',' → logprob: -2.7058258056640625
    7. ')' → logprob: -2.7058258056640625
    8. '[' → logprob: -2.8308258056640625
    9. '```' → logprob: -2.8308258056640625
    10. 'ays' → logprob: -3.0808258056640625

Token 131: 'on' (ID: 263)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1041566133499146
    2. 'days' → logprob: -1.1041566133499146
    3. ')' → logprob: -2.229156494140625
    4. ' if' → logprob: -2.729156494140625
    5. ' days' → logprob: -3.104156494140625
    6. 'for' → logprob: -3.354156494140625
    7. '   ' → logprob: -3.479156494140625
    8. 'jours' → logprob: -4.104156494140625
    9. ')
' → logprob: -5.354156494140625
    10. '):
' → logprob: -5.479156494140625

Token 132: ' prend' (ID: 37463)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24173623323440552
    2. ' if' → logprob: -1.9917361736297607
    3. ')' → logprob: -3.4917361736297607
    4. 'for' → logprob: -4.74173641204834
    5. '=' → logprob: -5.49173641204834
    6. 'in' → logprob: -5.49173641204834
    7. 'd' → logprob: -5.49173641204834
    8. ' in' → logprob: -5.86673641204834
    9. 'not' → logprob: -5.99173641204834
    10. ' ' → logprob: -6.36673641204834

Token 133: ' juste' (ID: 31553)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0063726902008057
    2. 'days' → logprob: -1.1313726902008057
    3. ' days' → logprob: -2.5063726902008057
    4. 'le' → logprob: -2.7563726902008057
    5. 'max' → logprob: -2.7563726902008057
    6. ' len' → logprob: -3.6313726902008057
    7. '0' → logprob: -4.006372451782227
    8. 'jours' → logprob: -4.131372451782227
    9. ' max' → logprob: -5.131372451782227
    10. ' la' → logprob: -5.131372451782227

Token 134: ' le' (ID: 505)
  Prédit: 'days'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'days' → logprob: -0.496844619512558
    2. ' days' → logprob: -1.4968446493148804
    3. 'le' → logprob: -1.9968446493148804
    4. ' le' → logprob: -3.621844530105591
    5. ' la' → logprob: -6.12184476852417
    6. 'la' → logprob: -7.37184476852417
    7. 'len' → logprob: -7.49684476852417
    8. 'jours' → logprob: -7.74684476852417
    9. 'l' → logprob: -8.121844291687012
    10. ' ' → logprob: -8.371844291687012

Token 135: ' premier' (ID: 15506)
  Prédit: 'days'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'days' → logprob: -0.6941298842430115
    2. 'first' → logprob: -1.1941299438476562
    3. 'max' → logprob: -2.8191299438476562
    4. '0' → logprob: -3.1941299438476562
    5. ' first' → logprob: -3.3191299438476562
    6. 'if' → logprob: -4.069129943847656
    7. ' days' → logprob: -4.069129943847656
    8. 'len' → logprob: -5.319129943847656
    9. 'min' → logprob: -5.444129943847656
    10. '[' → logprob: -5.569129943847656

Token 136: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.376774400472641
    2. ' )' → logprob: -1.2517744302749634
    3. ' if' → logprob: -5.251774311065674
    4. '   ' → logprob: -5.376774311065674
    5. ' disponible' → logprob: -5.376774311065674
    6. 'if' → logprob: -6.001774311065674
    7. ' dans' → logprob: -6.876774311065674
    8. '])' → logprob: -6.876774311065674
    9. 'dans' → logprob: -7.001774311065674
    10. '_' → logprob: -7.001774311065674

Token 137: ' simpl' (ID: 15693)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4253144264221191
    2. ')' → logprob: -2.175314426422119
    3. 'l' → logprob: -2.175314426422119
    4. ' l' → logprob: -2.300314426422119
    5. ' now' → logprob: -2.550314426422119
    6. 'now' → logprob: -2.550314426422119
    7. ' d' → logprob: -3.050314426422119
    8. ' maintenant' → logprob: -3.425314426422119
    9. 'maint' → logprob: -3.550314426422119
    10. ' le' → logprob: -3.925314426422119

Token 138: 'ifier' (ID: 4550)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4097486138343811
    2. 'es' → logprob: -1.1597485542297363
    3. 'ifier' → logprob: -4.534748554229736
    4. 'er' → logprob: -6.409748554229736
    5. 'ément' → logprob: -6.659748554229736
    6. '```' → logprob: -6.659748554229736
    7. 'ifié' → logprob: -6.659748554229736
    8. 'ify' → logprob: -6.909748554229736
    9. 'ement' → logprob: -7.284748554229736
    10. 'ifie' → logprob: -7.659748554229736

Token 139: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5091283321380615
    2. ')' → logprob: -1.2591283321380615
    3. ' if' → logprob: -2.6341283321380615
    4. '):' → logprob: -3.8841283321380615
    5. 'if' → logprob: -4.259128570556641
    6. ':' → logprob: -5.509128570556641
    7. ',' → logprob: -6.384128570556641
    8. ' )' → logprob: -7.384128570556641
    9. '):
' → logprob: -7.634128570556641
    10. ')
' → logprob: -7.759128570556641

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2572453022003174
    2. ' if' → logprob: -2.0072453022003174
    3. 'if' → logprob: -2.3822453022003174
    4. '    
' → logprob: -10.257245063781738
    5. 'for' → logprob: -10.757245063781738
    6. ' for' → logprob: -11.257245063781738
    7. ',' → logprob: -12.007245063781738
    8. ')' → logprob: -12.132245063781738
    9. ' 
' → logprob: -12.382245063781738
    10. '	if' → logprob: -12.507245063781738

Token 141: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8699449300765991
    2. ' if' → logprob: -1.1199449300765991
    3. '   ' → logprob: -1.3699449300765991
    4. 'for' → logprob: -7.994945049285889
    5. ' for' → logprob: -8.36994457244873
    6. '    
' → logprob: -11.49494457244873
    7. ' ' → logprob: -11.61994457244873
    8. '	if' → logprob: -12.24494457244873
    9. '  ' → logprob: -12.49494457244873
    10. 'while' → logprob: -13.61994457244873

Token 142: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.500004768371582
    2. 'if' → logprob: -1.000004768371582
    3. ' if' → logprob: -3.750004768371582
    4. 'for' → logprob: -6.250004768371582
    5. ' for' → logprob: -9.125004768371582
    6. ' ' → logprob: -11.625004768371582
    7. '  ' → logprob: -11.875004768371582
    8. '	if' → logprob: -12.500004768371582
    9. 'while' → logprob: -12.500004768371582
    10. '    
' → logprob: -12.500004768371582

Token 143: ' peut' (ID: 9216)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26355448365211487
    2. ' if' → logprob: -2.263554573059082
    3. 'for' → logprob: -2.388554573059082
    4. '   ' → logprob: -3.513554573059082
    5. ' for' → logprob: -5.888554573059082
    6. 'f' → logprob: -6.013554573059082
    7. 's' → logprob: -8.763554573059082
    8. 'continue' → logprob: -8.888554573059082
    9. '    ' → logprob: -9.638554573059082
    10. ':' → logprob: -9.763554573059082

Token 144: ' essayer' (ID: 92713)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28474363684654236
    2. 'if' → logprob: -1.7847436666488647
    3. ' continue' → logprob: -3.409743547439575
    4. ' continuer' → logprob: -4.159743785858154
    5. 'continue' → logprob: -4.409743785858154
    6. '   ' → logprob: -4.409743785858154
    7. 'contin' → logprob: -5.534743785858154
    8. 'for' → logprob: -7.284743785858154
    9. ' for' → logprob: -7.534743785858154
    10. ' ' → logprob: -8.159743309020996

Token 145: ' tous' (ID: 10688)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6510171890258789
    2. '   ' → logprob: -0.7760171890258789
    3. ' if' → logprob: -5.276017189025879
    4. '    ' → logprob: -5.651017189025879
    5. ' de' → logprob: -6.026017189025879
    6. ':
' → logprob: -6.276017189025879
    7. 'if' → logprob: -6.776017189025879
    8. ' to' → logprob: -7.526017189025879
    9. ' d' → logprob: -7.651017189025879
    10. '       ' → logprob: -7.651017189025879

Token 146: ' les' (ID: 1341)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8258225917816162
    2. ' i' → logprob: -1.7008225917816162
    3. ' if' → logprob: -2.200822591781616
    4. 'for' → logprob: -2.450822591781616
    5. ' films' → logprob: -3.200822591781616
    6. '   ' → logprob: -3.450822591781616
    7. ' film' → logprob: -4.200822830200195
    8. 'i' → logprob: -4.325822830200195
    9. 'films' → logprob: -4.325822830200195
    10. ' indices' → logprob: -4.450822830200195

Token 147: ' films' (ID: 16176)
  Prédit: 'films'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'films' → logprob: -0.16857707500457764
    2. 'movies' → logprob: -2.668577194213867
    3. 'i' → logprob: -4.293577194213867
    4. 'film' → logprob: -4.293577194213867
    5. ' films' → logprob: -4.418577194213867
    6. 'days' → logprob: -4.418577194213867
    7. 'idx' → logprob: -4.543577194213867
    8. 'indices' → logprob: -4.668577194213867
    9. 'jours' → logprob: -5.168577194213867
    10. 'for' → logprob: -5.793577194213867

Token 148: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27555471658706665
    2. ' if' → logprob: -2.150554656982422
    3. ' for' → logprob: -2.900554656982422
    4. 'for' → logprob: -3.025554656982422
    5. 'if' → logprob: -4.150554656982422
    6. ':' → logprob: -6.025554656982422
    7. 'possible' → logprob: -7.400554656982422
    8. ',' → logprob: -7.650554656982422
    9. 'available' → logprob: -7.900554656982422
    10. 'best' → logprob: -8.275554656982422

Token 149: ' jour' (ID: 8379)
  Prédit: 'days'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'days' → logprob: -0.13065101206302643
    2. 'jour' → logprob: -2.7556509971618652
    3. ' days' → logprob: -4.005650997161865
    4. 'd' → logprob: -4.130650997161865
    5. 'jours' → logprob: -4.255650997161865
    6. 'day' → logprob: -5.255650997161865
    7. ' jours' → logprob: -5.880650997161865
    8. ' jour' → logprob: -6.255650997161865
    9. ' d' → logprob: -8.505651473999023
    10. ' day' → logprob: -8.755651473999023

Token 150: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26651692390441895
    2. ' if' → logprob: -2.391516923904419
    3. 'for' → logprob: -3.016516923904419
    4. ':' → logprob: -3.391516923904419
    5. ' for' → logprob: -3.391516923904419
    6. 'if' → logprob: -3.766516923904419
    7. '<|end|>' → logprob: -7.14151668548584
    8. ' ' → logprob: -7.76651668548584
    9. '  ' → logprob: -7.89151668548584
    10. ')' → logprob: -8.01651668548584

Token 151: ' maxim' (ID: 29045)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.41693487763404846
    2. ' i' → logprob: -2.6669349670410156
    3. ' day' → logprob: -2.9169349670410156
    4. ' film' → logprob: -3.1669349670410156
    5. 'd' → logprob: -3.2919349670410156
    6. ' f' → logprob: -3.2919349670410156
    7. ' j' → logprob: -3.6669349670410156
    8. 'i' → logprob: -4.291934967041016
    9. 'f' → logprob: -4.791934967041016
    10. ' max' → logprob: -4.791934967041016

Token 152: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.020935388281941414
    2. 'er' → logprob: -4.520935535430908
    3. 'um' → logprob: -5.645935535430908
    4. 'ser' → logprob: -5.645935535430908
    5. 'izer' → logprob: -6.895935535430908
    6. 'al' → logprob: -7.270935535430908
    7. 'ize' → logprob: -8.27093505859375
    8. '   ' → logprob: -8.52093505859375
    9. 'umer' → logprob: -9.64593505859375
    10. '```' → logprob: -9.77093505859375

Token 153: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1028645038604736
    2. ' max' → logprob: -1.7278645038604736
    3. ' ' → logprob: -1.9778645038604736
    4. 'max' → logprob: -2.3528645038604736
    5. ' if' → logprob: -2.8528645038604736
    6. '<|end|>' → logprob: -3.3528645038604736
    7. ' for' → logprob: -3.4778645038604736
    8. ' _' → logprob: -3.8528645038604736
    9. 'best' → logprob: -4.4778642654418945
    10. ' best' → logprob: -4.4778642654418945

Token 154: ' mais' (ID: 2899)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.6357635855674744
    2. ' best' → logprob: -1.2607636451721191
    3. 'max' → logprob: -2.635763645172119
    4. ' max' → logprob: -2.885763645172119
    5. 'for' → logprob: -3.760763645172119
    6. '   ' → logprob: -4.135763645172119
    7. ' for' → logprob: -4.260763645172119
    8. ' if' → logprob: -6.385763645172119
    9. 'if' → logprob: -6.885763645172119
    10. 'chosen' → logprob: -7.510763645172119

Token 155: ' approche' (ID: 102373)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0497113466262817
    2. ' if' → logprob: -1.5497113466262817
    3. '#' → logprob: -1.7997113466262817
    4. 'for' → logprob: -2.424711227416992
    5. '   ' → logprob: -2.674711227416992
    6. ' for' → logprob: -3.549711227416992
    7. 'continue' → logprob: -3.674711227416992
    8. ' #' → logprob: -4.049711227416992
    9. 'break' → logprob: -4.174711227416992
    10. ' continue' → logprob: -4.674711227416992

Token 156: ' simple' (ID: 4705)
  Prédit: ' naï'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' naï' → logprob: -0.7115984559059143
    2. ' naive' → logprob: -1.3365983963012695
    3. 'na' → logprob: -2.0865983963012695
    4. ' greedy' → logprob: -2.8365983963012695
    5. 'gre' → logprob: -4.3365983963012695
    6. ' simple' → logprob: -4.5865983963012695
    7. 'simple' → logprob: -4.7115983963012695
    8. ' =' → logprob: -5.0865983963012695
    9. 'br' → logprob: -5.3365983963012695
    10. ' brute' → logprob: -5.5865983963012695

Token 157: ':
' (ID: 734)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04289504513144493
    2. ' if' → logprob: -3.4178950786590576
    3. 'if' → logprob: -4.7928948402404785
    4. ' for' → logprob: -8.042895317077637
    5. 'for' → logprob: -8.042895317077637
    6. ':' → logprob: -8.667895317077637
    7. '    
' → logprob: -10.417895317077637
    8. ',' → logprob: -10.917895317077637
    9. ')' → logprob: -11.792895317077637
    10. '  ' → logprob: -11.917895317077637

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012667390517890453
    2. ' if' → logprob: -4.637667179107666
    3. 'if' → logprob: -6.387667179107666
    4. ' for' → logprob: -7.137667179107666
    5. '    
' → logprob: -8.637667655944824
    6. 'for' → logprob: -8.762667655944824
    7. '  
' → logprob: -11.262667655944824
    8. ')' → logprob: -11.262667655944824
    9. ' possible' → logprob: -11.512667655944824
    10. '
' → logprob: -11.762667655944824

Token 159: ' chosen' (ID: 16180)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5820993781089783
    2. '   ' → logprob: -1.582099437713623
    3. 'for' → logprob: -2.082099437713623
    4. ' if' → logprob: -2.457099437713623
    5. ' for' → logprob: -3.957099437713623
    6. 'best' → logprob: -5.582099437713623
    7. 'max' → logprob: -6.957099437713623
    8. ' best' → logprob: -7.457099437713623
    9. 'found' → logprob: -7.457099437713623
    10. 'chosen' (adapté à ' chosen') → logprob: -9.832098960876465

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020671984180808067
    2. '=' → logprob: -4.395671844482422
    3. '_' → logprob: -5.770671844482422
    4. '_movie' → logprob: -6.520671844482422
    5. '_index' → logprob: -6.770671844482422
    6. '_movies' → logprob: -7.520671844482422
    7. '_idx' → logprob: -7.895671844482422
    8. ' ' → logprob: -7.895671844482422
    9. '_fil' → logprob: -8.020671844482422
    10. ')' → logprob: -8.645671844482422

Token 161: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.5435544848442078
    2. 'days' → logprob: -1.4185545444488525
    3. ' None' → logprob: -2.2935545444488525
    4. ' days' → logprob: -2.6685545444488525
    5. '-' → logprob: -5.168554306030273
    6. ' -' → logprob: -7.918554306030273
    7. 'False' → logprob: -8.043554306030273
    8. '0' → logprob: -8.168554306030273
    9. ' ' → logprob: -9.418554306030273
    10. 'movies' → logprob: -10.168554306030273

Token 162: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08602599799633026
    2. ' if' → logprob: -3.0860259532928467
    3. '<|end|>' → logprob: -3.5860259532928467
    4. '    
' → logprob: -6.211026191711426
    5. 'if' → logprob: -6.461026191711426
    6. ' ' → logprob: -6.586026191711426
    7. ' for' → logprob: -6.586026191711426
    8. '
' → logprob: -7.336026191711426
    9. '    ' → logprob: -7.961026191711426
    10. '  ' → logprob: -8.211026191711426

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015101661905646324
    2. ' for' → logprob: -5.265101432800293
    3. '    
' → logprob: -5.640101432800293
    4. ' if' → logprob: -6.015101432800293
    5. '
' → logprob: -6.640101432800293
    6. 'for' → logprob: -6.890101432800293
    7. '  
' → logprob: -7.265101432800293
    8. '  ' → logprob: -8.890101432800293
    9. 'if' → logprob: -8.890101432800293
    10. '   
' → logprob: -8.890101432800293

Token 164: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08755768090486526
    2. ' for' → logprob: -2.587557792663574
    3. '   ' → logprob: -5.212557792663574
    4. 'if' → logprob: -6.337557792663574
    5. 'max' → logprob: -6.837557792663574
    6. ' if' → logprob: -8.212557792663574
    7. ' max' → logprob: -10.087557792663574
    8. 'best' → logprob: -10.962557792663574
    9. '
' → logprob: -13.212557792663574
    10. ' ' → logprob: -13.212557792663574

Token 165: ' movie' (ID: 8249)
  Prédit: 'movie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'movie' → logprob: -1.0424631834030151
    2. 'film' → logprob: -1.0424631834030151
    3. ' film' → logprob: -1.9174631834030151
    4. ' movie' → logprob: -2.4174633026123047
    5. 'f' → logprob: -3.9174633026123047
    6. 'idx' → logprob: -4.292463302612305
    7. 'i' → logprob: -4.792463302612305
    8. ' f' → logprob: -5.167463302612305
    9. ' idx' → logprob: -5.292463302612305
    10. ' i' → logprob: -6.417463302612305

Token 166: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09747549891471863
    2. '_id' → logprob: -2.847475528717041
    3. 's' → logprob: -4.222475528717041
    4. '_index' → logprob: -4.722475528717041
    5. '_idx' → logprob: -5.097475528717041
    6. 'in' → logprob: -6.472475528717041
    7. '_' → logprob: -6.472475528717041
    8. '_in' → logprob: -7.472475528717041
    9. '_i' → logprob: -7.597475528717041
    10. '   ' → logprob: -7.847475528717041

Token 167: ' days' (ID: 3376)
  Prédit: 'days'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'days' → logprob: -0.029752103611826897
    2. ' days' → logprob: -3.529752016067505
    3. '(days' → logprob: -13.779751777648926
    4. 'day' → logprob: -15.779751777648926
    5. '   ' → logprob: -16.154752731323242
    6. '_days' → logprob: -16.404752731323242
    7. 'd' → logprob: -16.779752731323242
    8. ' ' → logprob: -17.154752731323242
    9. 'Days' → logprob: -17.279752731323242
    10. '.days' → logprob: -17.529752731323242

Token 168: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.625000953674316
    3. 'd' → logprob: -15.000000953674316
    4. ' [' → logprob: -18.375
    5. '[
' → logprob: -19.625
    6. '   ' → logprob: -19.875
    7. '	d' → logprob: -20.25
    8. '```' → logprob: -20.75
    9. '(d' → logprob: -20.875
    10. '[df' → logprob: -21.75

Token 169: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.01005036011338234
    2. ']):' → logprob: -5.010050296783447
    3. '):' → logprob: -5.885050296783447
    4. ']' → logprob: -8.135050773620605
    5. ']:
' → logprob: -8.635050773620605
    6. ']):
' → logprob: -10.760050773620605
    7. '   ' → logprob: -11.385050773620605
    8. ':' → logprob: -11.635050773620605
    9. ' ]' → logprob: -12.010050773620605
    10. '])' → logprob: -12.260050773620605

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001566045917570591
    2. ' if' → logprob: -6.751565933227539
    3. '<|end|>' → logprob: -9.001565933227539
    4. '        
' → logprob: -10.001565933227539
    5. ',' → logprob: -10.001565933227539
    6. '   ' → logprob: -10.126565933227539
    7. ':
' → logprob: -10.376565933227539
    8. '
' → logprob: -10.501565933227539
    9. 'if' → logprob: -10.626565933227539
    10. ':' → logprob: -11.001565933227539

Token 171: ' chosen' (ID: 16180)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.24167051911354065
    2. 'if' → logprob: -1.7416704893112183
    3. '       ' → logprob: -3.241670608520508
    4. '   ' → logprob: -7.991670608520508
    5. '	if' → logprob: -11.366670608520508
    6. '    ' → logprob: -12.616670608520508
    7. '
' → logprob: -12.741670608520508
    8. '           ' → logprob: -14.366670608520508
    9. ' ' → logprob: -14.491670608520508
    10. '<|end|>' → logprob: -15.241670608520508

Token 172: ' =' (ID: 314)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.08177892863750458
    2. 'not' → logprob: -2.7067790031433105
    3. ' if' → logprob: -5.5817790031433105
    4. '<|end|>' → logprob: -5.5817790031433105
    5. 'if' → logprob: -6.5817790031433105
    6. ' =' → logprob: -6.9567790031433105
    7. ' ' → logprob: -7.4567790031433105
    8. '=' → logprob: -7.8317790031433105
    9. '<|end|>' → logprob: -8.456778526306152
    10. '
' → logprob: -8.456778526306152

Token 173: ' movie' (ID: 8249)
  Prédit: 'movie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'movie' → logprob: -0.4291079044342041
    2. ' movie' → logprob: -1.054107904434204
    3. 'movies' → logprob: -8.304107666015625
    4. ' movies' → logprob: -8.929107666015625
    5. '(movie' → logprob: -11.554107666015625
    6. ' ' → logprob: -12.304107666015625
    7. '   ' → logprob: -12.304107666015625
    8. 'm' → logprob: -12.554107666015625
    9. '.movie' → logprob: -13.554107666015625
    10. ' ' → logprob: -14.179107666015625

Token 174: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001585793448612094
    2. '
' → logprob: -6.626585960388184
    3. '   ' → logprob: -9.001585960388184
    4. '	' → logprob: -10.751585960388184
    5. ' if' → logprob: -10.751585960388184
    6. 'break' → logprob: -10.751585960388184
    7. '        
' → logprob: -10.876585960388184
    8. '	break' → logprob: -11.376585960388184
    9. 'if' → logprob: -11.501585960388184
    10. '           ' → logprob: -12.376585960388184

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.220573363360018e-05
    2. ' if' → logprob: -10.125082015991211
    3. '        
' → logprob: -11.625082015991211
    4. '	' → logprob: -11.625082015991211
    5. '
' → logprob: -12.000082015991211
    6. ' ' → logprob: -12.250082015991211
    7. '   ' → logprob: -12.750082015991211
    8. 'if' → logprob: -13.250082015991211
    9. '<|end|>' → logprob: -13.500082015991211
    10. ',' → logprob: -13.750082015991211

Token 176: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12146688997745514
    2. 'break' (adapté à ' break') → logprob: -2.746466875076294
    3. ' break' → logprob: -2.996466875076294
    4. '	break' → logprob: -9.371466636657715
    5. '   ' → logprob: -9.746466636657715
    6. ' if' → logprob: -9.871466636657715
    7. 'if' → logprob: -11.121466636657715
    8. '        
' → logprob: -11.121466636657715
    9. '
' → logprob: -11.121466636657715
    10. ' ' → logprob: -11.746466636657715

Token 177: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010195279493927956
    2. ' if' → logprob: -5.135195255279541
    3. 'if' → logprob: -6.510195255279541
    4. '
' → logprob: -6.510195255279541
    5. '    
' → logprob: -7.260195255279541
    6. '  
' → logprob: -8.0101957321167
    7. '<|end|>' → logprob: -9.0101957321167
    8. '   
' → logprob: -10.2601957321167
    9. ' 
' → logprob: -10.5101957321167
    10. '  ' → logprob: -10.8851957321167

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04908178001642227
    2. 'if' → logprob: -3.049081802368164
    3. ' if' → logprob: -7.674081802368164
    4. '    
' → logprob: -11.174081802368164
    5. '
' → logprob: -12.174081802368164
    6. '       ' → logprob: -12.924081802368164
    7. '	if' → logprob: -13.049081802368164
    8. '  
' → logprob: -13.799081802368164
    9. '  ' → logprob: -14.049081802368164
    10. '   ' → logprob: -14.174081802368164

Token 179: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2018272578716278
    2. 'if' (adapté à ' if') → logprob: -1.7018272876739502
    3. ' if' → logprob: -7.826827049255371
    4. '    
' → logprob: -12.076827049255371
    5. '
' → logprob: -12.701827049255371
    6. '	if' → logprob: -13.201827049255371
    7. ' ' → logprob: -13.701827049255371
    8. '```' → logprob: -13.826827049255371
    9. '  ' → logprob: -14.451827049255371
    10. '       ' → logprob: -14.576827049255371

Token 180: ' chosen' (ID: 16180)
  Prédit: ' chosen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chosen' → logprob: -0.038054123520851135
    2. 'chosen' → logprob: -3.2880542278289795
    3. '   ' → logprob: -12.038054466247559
    4. ' ' → logprob: -12.913054466247559
    5. ' chose' → logprob: -13.663054466247559
    6. ' not' → logprob: -13.788054466247559
    7. ' ' → logprob: -14.163054466247559
    8. 'ch' → logprob: -15.163054466247559
    9. ' selected' → logprob: -15.413054466247559
    10. 'd' → logprob: -15.788054466247559

Token 181: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0647568628191948
    2. 'is' → logprob: -3.3147568702697754
    3. ' not' → logprob: -4.064756870269775
    4. 'not' → logprob: -4.689756870269775
    5. ' ' → logprob: -13.064756393432617
    6. ')' → logprob: -13.314756393432617
    7. '   ' → logprob: -15.189756393432617
    8. 'if' → logprob: -15.439756393432617
    9. 'in' → logprob: -15.564756393432617
    10. '!=' → logprob: -15.689756393432617

Token 182: ' not' (ID: 625)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4122864902019501
    2. 'not' → logprob: -1.1622865200042725
    3. ' not' → logprob: -3.9122865200042725
    4. ' None' → logprob: -5.287286281585693
    5. '   ' → logprob: -11.037286758422852
    6. 'n' → logprob: -11.162286758422852
    7. 'none' → logprob: -12.287286758422852
    8. 'Not' → logprob: -12.787286758422852
    9. '	not' → logprob: -13.537286758422852
    10. '_None' → logprob: -13.787286758422852

Token 183: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.848420551046729e-05
    2. ' None' → logprob: -9.7500581741333
    3. '_None' → logprob: -16.750059127807617
    4. '   ' → logprob: -18.000059127807617
    5. 'none' → logprob: -18.125059127807617
    6. 'N' → logprob: -18.250059127807617
    7. '=None' → logprob: -19.125059127807617
    8. '```' → logprob: -19.750059127807617
    9. 'No' → logprob: -19.875059127807617
    10. '_none' → logprob: -19.875059127807617

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4748855531215668
    2. ':
' → logprob: -0.9748855829238892
    3. ' and' → logprob: -7.8498854637146
    4. '       ' → logprob: -7.9748854637146
    5. '   ' → logprob: -9.974885940551758
    6. ',' → logprob: -11.724885940551758
    7. ':

' → logprob: -11.974885940551758
    8. '):
' → logprob: -12.099885940551758
    9. 'and' → logprob: -13.224885940551758
    10. ':
' → logprob: -13.224885940551758

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005340724252164364
    2. '   ' → logprob: -6.005340576171875
    3. ' total' → logprob: -7.005340576171875
    4. ' if' → logprob: -7.130340576171875
    5. '
' → logprob: -8.130340576171875
    6. '        
' → logprob: -8.380340576171875
    7. '```' → logprob: -8.630340576171875
    8. '    
' → logprob: -8.880340576171875
    9. ',' → logprob: -9.505340576171875
    10. '):
' → logprob: -10.880340576171875

Token 186: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.33598464727401733
    2. '   ' → logprob: -1.585984706878662
    3. 'h' → logprob: -3.335984706878662
    4. 'total' → logprob: -3.835984706878662
    5. ' if' → logprob: -3.960984706878662
    6. 'seen' → logprob: -6.085984706878662
    7. '       ' → logprob: -6.960984706878662
    8. '
' → logprob: -7.960984706878662
    9. ' total' → logprob: -8.460984230041504
    10. ' h' → logprob: -8.960984230041504

Token 187: ' chosen' (ID: 16180)
  Prédit: 'chosen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chosen' → logprob: -0.023271339014172554
    2. ' chosen' → logprob: -3.773271322250366
    3. 'movies' → logprob: -11.023271560668945
    4. 'ch' → logprob: -12.523271560668945
    5. '   ' → logprob: -13.273271560668945
    6. 'movie' → logprob: -13.648271560668945
    7. ' movies' → logprob: -14.273271560668945
    8. 'cho' → logprob: -14.773271560668945
    9. ' ' → logprob: -14.898271560668945
    10. 'not' → logprob: -15.023271560668945

Token 188: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1426900327205658
    2. 'not' → logprob: -2.0176899433135986
    3. ')' → logprob: -11.51768970489502
    4. '	not' → logprob: -13.51768970489502
    5. ' no' → logprob: -14.01768970489502
    6. ' ' → logprob: -14.64268970489502
    7. '```' → logprob: -14.76768970489502
    8. 'n' → logprob: -15.14268970489502
    9. ' in' → logprob: -15.26768970489502
    10. ':not' → logprob: -15.39268970489502

Token 189: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' → logprob: -4.596781946020201e-05
    2. ' seen' → logprob: -10.000045776367188
    3. '
' → logprob: -15.125045776367188
    4. '   ' → logprob: -15.625045776367188
    5. 'se' → logprob: -17.250045776367188
    6. 'movies' → logprob: -17.625045776367188
    7. '```' → logprob: -18.375045776367188
    8. 'shown' → logprob: -18.500045776367188
    9. '
' → logprob: -18.750045776367188
    10. 's' → logprob: -18.750045776367188

Token 190: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31443536281585693
    2. ':
' → logprob: -1.314435362815857
    3. '       ' → logprob: -8.314435005187988
    4. 'continue' → logprob: -8.689435005187988
    5. '):
' → logprob: -8.814435005187988
    6. '   ' → logprob: -8.814435005187988
    7. '==' → logprob: -9.314435005187988
    8. '):' → logprob: -9.439435005187988
    9. ')' → logprob: -9.689435005187988
    10. ' continue' → logprob: -9.814435005187988

Token 191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16860899329185486
    2. ' continue' → logprob: -2.5436089038848877
    3. '       ' → logprob: -2.7936089038848877
    4. 'continue' → logprob: -4.418609142303467
    5. '```' → logprob: -6.168609142303467
    6. '   ' → logprob: -7.543609142303467
    7. '
' → logprob: -8.793608665466309
    8. '	continue' → logprob: -9.043608665466309
    9. ':
' → logprob: -9.918608665466309
    10. ' ' → logprob: -10.168608665466309

Token 192: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.6292526125907898
    2. '           ' → logprob: -1.1292526721954346
    3. 'continue' → logprob: -2.5042526721954346
    4. ' total' → logprob: -3.2542526721954346
    5. ' continue' → logprob: -4.5042524337768555
    6. '   ' → logprob: -5.3792524337768555
    7. '               ' → logprob: -5.5042524337768555
    8. '       ' → logprob: -6.2542524337768555
    9. 'pass' → logprob: -7.5042524337768555
    10. '```' → logprob: -8.254252433776855

Token 193: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -2.2603901015827432e-05
    2. '_' → logprob: -11.125022888183594
    3. '_s' → logprob: -12.875022888183594
    4. ' _' → logprob: -13.875022888183594
    5. '_total' → logprob: -14.000022888183594
    6. '+' → logprob: -14.125022888183594
    7. '+h' → logprob: -14.500022888183594
    8. '```' → logprob: -14.875022888183594
    9. 'h' → logprob: -15.375022888183594
    10. '_g' → logprob: -15.875022888183594

Token 194: 'appiness' (ID: 117779)
  Prédit: 'appiness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appiness' → logprob: -0.002632969059050083
    2. 'app' → logprob: -6.252633094787598
    3. 'h' → logprob: -7.502633094787598
    4. 'ap' → logprob: -10.127633094787598
    5. 'appy' → logprob: -10.377633094787598
    6. 'appen' → logprob: -11.252633094787598
    7. '_' → logprob: -11.377633094787598
    8. '```' → logprob: -11.502633094787598
    9. 'appi' → logprob: -11.752633094787598
    10. 'appe' → logprob: -12.002633094787598

Token 195: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3904808759689331
    2. ' +=' → logprob: -1.140480875968933
    3. '   ' → logprob: -6.390480995178223
    4. '+' → logprob: -6.640480995178223
    5. ']+=' → logprob: -9.140480995178223
    6. '```' → logprob: -9.515480995178223
    7. ' -=' → logprob: -9.640480995178223
    8. '       ' → logprob: -9.640480995178223
    9. '-=' → logprob: -9.890480995178223
    10. '=' → logprob: -10.015480995178223

Token 196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07715725153684616
    2. '2' → logprob: -2.7021572589874268
    3. '0' → logprob: -5.202157020568848
    4. 'd' → logprob: -7.702157020568848
    5. 'b' → logprob: -8.202157020568848
    6. '10' → logprob: -8.327157020568848
    7. ' ' → logprob: -8.827157020568848
    8. 'movies' → logprob: -8.952157020568848
    9. '5' → logprob: -9.077157020568848
    10. 'a' → logprob: -9.577157020568848

Token 197: '50' (ID: 1434)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11457955837249756
    2. '2' → logprob: -2.489579677581787
    3. '0' → logprob: -4.114579677581787
    4. 'movies' → logprob: -5.864579677581787
    5. 'b' → logprob: -5.989579677581787
    6. 'd' → logprob: -7.114579677581787
    7. '10' → logprob: -7.364579677581787
    8. '5' → logprob: -7.864579677581787
    9. '100' → logprob: -7.864579677581787
    10. 'n' → logprob: -8.114579200744629

Token 198: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10032205283641815
    2. '
' → logprob: -2.7253220081329346
    3. 'else' → logprob: -3.6003220081329346
    4. ' else' → logprob: -6.225322246551514
    5. '   ' → logprob: -8.225321769714355
    6. '        
' → logprob: -9.225321769714355
    7. '  
' → logprob: -9.475321769714355
    8. '
' → logprob: -10.100321769714355
    9. ' 
' → logprob: -10.225321769714355
    10. '    
' → logprob: -10.350321769714355

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13180683553218842
    2. 'else' → logprob: -2.1318068504333496
    3. ' else' → logprob: -5.38180685043335
    4. '
' → logprob: -8.756806373596191
    5. '   ' → logprob: -9.381806373596191
    6. '```' → logprob: -11.631806373596191
    7. '	else' → logprob: -13.381806373596191
    8. '           ' → logprob: -13.381806373596191
    9. ')' → logprob: -13.506806373596191
    10. '      ' → logprob: -13.631806373596191

Token 200: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.21470342576503754
    2. '       ' → logprob: -1.7147034406661987
    3. ' else' → logprob: -4.339703559875488
    4. '   ' → logprob: -9.214703559875488
    5. '
' → logprob: -10.214703559875488
    6. '```' → logprob: -10.964703559875488
    7. 'elif' → logprob: -13.464703559875488
    8. '	else' → logprob: -13.589703559875488
    9. '        
' → logprob: -14.214703559875488
    10. ')' → logprob: -14.214703559875488

Token 201: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2283945083618164
    2. ':
' → logprob: -1.7283945083618164
    3. ':' → logprob: -4.228394508361816
    4. '       ' → logprob: -4.728394508361816
    5. '   ' → logprob: -7.103394508361816
    6. '{
' → logprob: -7.103394508361816
    7. '```' → logprob: -7.603394508361816
    8. '
' → logprob: -7.853394508361816
    9. 'total' → logprob: -8.353394508361816
    10. ' ' → logprob: -9.728394508361816

Token 202: '           ' (ID: 352)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6412298083305359
    2. '       ' → logprob: -1.2662298679351807
    3. '           ' → logprob: -2.2662298679351807
    4. 'seen' → logprob: -2.5162298679351807
    5. '   ' → logprob: -5.766229629516602
    6. ' total' → logprob: -6.141229629516602
    7. '
' → logprob: -7.391229629516602
    8. ' seen' → logprob: -7.516229629516602
    9. '50' → logprob: -8.391229629516602
    10. 'visited' → logprob: -8.766229629516602

Token 203: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.03407762944698334
    2. 'seen' → logprob: -4.0340776443481445
    3. ' total' → logprob: -4.7840776443481445
    4. '           ' → logprob: -5.0340776443481445
    5. '       ' → logprob: -7.9090776443481445
    6. '   ' → logprob: -8.284077644348145
    7. ' seen' → logprob: -8.534077644348145
    8. '50' → logprob: -10.534077644348145
    9. ' ' → logprob: -10.659077644348145
    10. 'visited' → logprob: -11.409077644348145

Token 204: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -5.228561349213123e-05
    2. 'h' → logprob: -9.875052452087402
    3. '   ' → logprob: -16.125051498413086
    4. '           ' → logprob: -16.500051498413086
    5. '=' → logprob: -16.750051498413086
    6. '       ' → logprob: -16.750051498413086
    7. ' =' → logprob: -16.875051498413086
    8. '_' → logprob: -16.875051498413086
    9. '+=' → logprob: -17.000051498413086
    10. '+h' → logprob: -17.000051498413086

Token 205: 'appiness' (ID: 117779)
  Prédit: 'appiness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appiness' → logprob: -0.012911963276565075
    2. 'app' → logprob: -4.512911796569824
    3. 'h' → logprob: -6.387911796569824
    4. 'ap' → logprob: -9.137911796569824
    5. 'appy' → logprob: -10.637911796569824
    6. 'appen' → logprob: -11.512911796569824
    7. 'appi' → logprob: -11.512911796569824
    8. 'appe' → logprob: -12.262911796569824
    9. '   ' → logprob: -12.387911796569824
    10. '_app' → logprob: -12.887911796569824

Token 206: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4740893542766571
    2. ' +=' → logprob: -0.9740893840789795
    3. '+' → logprob: -12.099089622497559
    4. '   ' → logprob: -12.599089622497559
    5. ']+=' → logprob: -14.099089622497559
    6. '    ' → logprob: -14.349089622497559
    7. ' ' → logprob: -14.599089622497559
    8. '       ' → logprob: -14.974089622497559
    9. '=' → logprob: -15.599089622497559
    10. '        ' → logprob: -15.599089622497559

Token 207: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.004520196467638016
    2. '10' → logprob: -5.754520416259766
    3. '20' → logprob: -7.879520416259766
    4. '1' → logprob: -8.004520416259766
    5. '30' → logprob: -8.129520416259766
    6. '200' → logprob: -9.379520416259766
    7. '25' → logprob: -10.254520416259766
    8. '0' → logprob: -10.254520416259766
    9. '150' → logprob: -10.504520416259766
    10. '5' → logprob: -10.629520416259766

Token 208: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.005298742558807135
    2. '10' → logprob: -5.630298614501953
    3. '20' → logprob: -7.255298614501953
    4. '30' → logprob: -8.130298614501953
    5. '1' → logprob: -8.255298614501953
    6. '200' → logprob: -9.380298614501953
    7. '5' → logprob: -10.005298614501953
    8. '0' → logprob: -10.005298614501953
    9. '50' → logprob: -10.005298614501953
    10. '25' → logprob: -10.130298614501953

Token 209: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4776122570037842
    2. '       ' → logprob: -0.9776122570037842
    3. '
' → logprob: -6.227612495422363
    4. '   ' → logprob: -6.477612495422363
    5. '        
' → logprob: -12.102612495422363
    6. '               ' → logprob: -12.477612495422363
    7. '
' → logprob: -13.102612495422363
    8. '     ' → logprob: -13.852612495422363
    9. '```' → logprob: -13.852612495422363
    10. '    
' → logprob: -14.102612495422363

Token 210: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09585165977478027
    2. '   ' → logprob: -2.4708516597747803
    3. '           ' → logprob: -5.095851898193359
    4. '
' → logprob: -7.220851898193359
    5. '```' → logprob: -11.59585189819336
    6. '    
' → logprob: -12.34585189819336
    7. '        
' → logprob: -12.47085189819336
    8. ' seen' → logprob: -12.47085189819336
    9. 'seen' → logprob: -12.84585189819336
    10. ' ' → logprob: -13.09585189819336

Token 211: ' seen' (ID: 6177)
  Prédit: 'seen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seen' (adapté à ' seen') → logprob: -0.0321759358048439
    2. '   ' → logprob: -3.7821760177612305
    3. ' seen' → logprob: -5.4071760177612305
    4. '           ' → logprob: -5.7821760177612305
    5. '       ' → logprob: -6.6571760177612305
    6. '
' → logprob: -10.90717601776123
    7. ' ' → logprob: -11.65717601776123
    8. '  ' → logprob: -11.90717601776123
    9. '               ' → logprob: -13.90717601776123
    10. '     ' → logprob: -14.15717601776123

Token 212: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.001170460251159966
    2. '.' → logprob: -6.751170635223389
    3. ' .' → logprob: -15.37617015838623
    4. 'add' → logprob: -16.501171112060547
    5. '.update' → logprob: -18.626171112060547
    6. '.Add' → logprob: -18.876171112060547
    7. ' add' → logprob: -19.001171112060547
    8. ')add' → logprob: -19.251171112060547
    9. '.
' → logprob: -20.626171112060547
    10. '	add' → logprob: -21.376171112060547

Token 213: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -9.13388703338569e-06
    2. '(' → logprob: -11.625009536743164
    3. '(choice' → logprob: -16.500009536743164
    4. '(c' → logprob: -17.125009536743164
    5. '(
' → logprob: -17.125009536743164
    6. 'chosen' → logprob: -17.500009536743164
    7. '	ch' → logprob: -17.750009536743164
    8. '(selected' → logprob: -18.250009536743164
    9. ' (' → logprob: -19.125009536743164
    10. '(created' → logprob: -19.625009536743164

Token 214: 'osen' (ID: 10631)
  Prédit: 'osen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'osen' → logprob: -3.128163257315464e-07
    2. 'osed' → logprob: -15.875
    3. 'os' → logprob: -16.625
    4. '[' → logprob: -18.5
    5. 'ose' → logprob: -18.625
    6. 'ossen' → logprob: -18.75
    7. '
' → logprob: -19.25
    8. 'o' → logprob: -19.625
    9. 'chosen' → logprob: -20.0
    10. 'sen' → logprob: -20.25

Token 215: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -13.750000953674316
    3. ' )' → logprob: -17.250001907348633
    4. '))' → logprob: -18.500001907348633
    5. '())' → logprob: -18.875001907348633
    6. '   ' → logprob: -19.000001907348633
    7. ')}' → logprob: -19.125001907348633
    8. ')

' → logprob: -19.375001907348633
    9. ')return' → logprob: -19.375001907348633
    10. ')`' → logprob: -19.625001907348633

Token 216: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.4881879400927573e-05
    2. ' print' → logprob: -10.750035285949707
    3. ')' → logprob: -11.875035285949707
    4. '
' → logprob: -12.500035285949707
    5. '<|end|>' → logprob: -13.375035285949707
    6. '```' → logprob: -14.250035285949707
    7. '#print' → logprob: -16.00003433227539
    8. '#' → logprob: -16.25003433227539
    9. '(print' → logprob: -16.37503433227539
    10. '.print' → logprob: -16.87503433227539

Token 217: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.02975917048752308
    2. '(' → logprob: -3.529759168624878
    3. 'total' → logprob: -12.029759407043457
    4. '(print' → logprob: -14.404759407043457
    5. '(sum' → logprob: -14.529759407043457
    6. '()' → logprob: -14.904759407043457
    7. '(t' → logprob: -15.279759407043457
    8. '('' → logprob: -15.279759407043457
    9. '((' → logprob: -15.904759407043457
    10. ' (' → logprob: -16.02975845336914

Token 218: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -1.9361264946837764e-07
    2. 'h' → logprob: -16.5
    3. ')' → logprob: -19.0
    4. ')_' → logprob: -19.375
    5. '_' → logprob: -19.5
    6. '_g' → logprob: -20.375
    7. '_total' → logprob: -20.625
    8. ' _' → logprob: -20.75
    9. '_H' → logprob: -21.0
    10. 's' → logprob: -21.5

Token 219: 'appiness' (ID: 117779)
  Prédit: 'appiness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appiness' → logprob: -0.034116677939891815
    2. 'app' → logprob: -3.409116744995117
    3. 'ness' → logprob: -8.784116744995117
    4. 'ap' → logprob: -8.784116744995117
    5. '_app' → logprob: -9.159116744995117
    6. 'appy' → logprob: -10.159116744995117
    7. 'appi' → logprob: -12.159116744995117
    8. 'apy' → logprob: -12.409116744995117
    9. 'print' → logprob: -12.784116744995117
    10. 'ess' → logprob: -13.034116744995117

Token 220: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. ' )' → logprob: -13.125001907348633
    3. ')
' → logprob: -17.000001907348633
    4. '())' → logprob: -18.750001907348633
    5. ')`' → logprob: -19.125001907348633
    6. '()' → logprob: -19.375001907348633
    7. '))' → logprob: -19.750001907348633
    8. '')' → logprob: -20.625001907348633
    9. ')#' → logprob: -20.750001907348633
    10. '+' → logprob: -21.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 218
Tokens correctement prédits (1ère position, stricte): 79
Tokens correctement prédits (1ère position, avec adaptation): 86
Tokens correctement prédits (top 10): 162
Précision stricte (1ère position): 36.24%
Précision adaptée (1ère position): 39.45%
Précision (top 10): 74.31%
================================================================================
