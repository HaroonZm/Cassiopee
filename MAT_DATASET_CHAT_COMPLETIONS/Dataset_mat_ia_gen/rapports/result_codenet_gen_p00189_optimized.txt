================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:02:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

input = sys.stdin.readline

while True:
    n = int(input())
    if n == 0:
        break
    edges = [tuple(map(int, input().split())) for _ in range(n)]
    towns = set()
    for a, b, c in edges:
        towns.add(a)
        towns.add(b)
    N = max(towns)+1
    graph = [[] for _ in range(N)]
    for a, b, c in edges:
        graph[a].append((b, c))
        graph[b].append((a, c))
    def dijkstra(s):
        dist = [float('inf')] * N
        dist[s] = 0
        hq = [(0, s)]
        while hq:
            cd, u = heapq.heappop(hq)
            if dist[u] < cd:
                continue
            for v, cost in graph[u]:
                nd = cd + cost
                if nd < dist[v]:
                    dist[v] = nd
                    heapq.heappush(hq, (nd, v))
        return dist
    min_sum = float('inf')
    ans = 0
    for i in range(N):
        dist = dijkstra(i)
        s = sum(dist)
        if s < min_sum:
            min_sum = s
            ans = i
    print(ans, min_sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.6405310816480778e-05
    2. '.' → logprob: -11.375016212463379
    3. '#' → logprob: -13.875016212463379
    4. '_' → logprob: -14.125016212463379
    5. '=' → logprob: -14.500016212463379
    6. 'ify' → logprob: -14.875016212463379
    7. 'queue' → logprob: -15.250016212463379
    8. 'u' → logprob: -15.375016212463379
    9. ')' → logprob: -15.625016212463379
    10. '[' → logprob: -15.625016212463379

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8491789102554321
    2. '
' → logprob: -1.7241789102554321
    3. '\n' → logprob: -1.7241789102554321
    4. '

' → logprob: -2.7241787910461426
    5. '\' → logprob: -2.9741787910461426
    6. '<|end|>' → logprob: -3.5991787910461426
    7. 'import' → logprob: -3.7241787910461426
    8. '' → logprob: -4.224178791046143
    9. '```' → logprob: -4.224178791046143
    10. '<|end|>' → logprob: -5.224178791046143

Token 7: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9195020794868469
    2. 'def' → logprob: -1.2945020198822021
    3. '\' → logprob: -2.419502019882202
    4. '
' → logprob: -3.169502019882202
    5. 'from' → logprob: -3.294502019882202
    6. 'import' → logprob: -3.419502019882202
    7. '' → logprob: -3.419502019882202
    8. 'class' → logprob: -3.669502019882202
    9. '```' → logprob: -3.794502019882202
    10. '\n' → logprob: -3.794502019882202

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.033907774835824966
    2. '.' → logprob: -3.408907890319824
    3. ')' → logprob: -8.908907890319824
    4. '()' → logprob: -10.533907890319824
    5. '(.)' → logprob: -10.533907890319824
    6. '```' → logprob: -11.283907890319824
    7. ' (' → logprob: -11.283907890319824
    8. '[' → logprob: -12.158907890319824
    9. '<|end|>' → logprob: -12.158907890319824
    10. '(
' → logprob: -12.283907890319824

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5769377946853638
    2. 'sys' → logprob: -0.8269377946853638
    3. 'input' → logprob: -7.076937675476074
    4. ' input' → logprob: -8.951937675476074
    5. '	sys' → logprob: -10.826937675476074
    6. '=sys' → logprob: -13.076937675476074
    7. '(sys' → logprob: -14.451937675476074
    8. '```' → logprob: -14.576937675476074
    9. 'lambda' → logprob: -14.701937675476074
    10. ' ' → logprob: -15.201937675476074

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3511665165424347
    2. '.stdin' → logprob: -1.2261664867401123
    3. '.readline' → logprob: -7.101166725158691
    4. '.stdout' → logprob: -7.226166725158691
    5. '.input' → logprob: -8.101166725158691
    6. ' .' → logprob: -8.226166725158691
    7. '.argv' → logprob: -8.726166725158691
    8. '.path' → logprob: -9.226166725158691
    9. '.std' → logprob: -9.976166725158691
    10. '.next' → logprob: -10.351166725158691

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0037150459829717875
    2. '.read' → logprob: -6.1287150382995605
    3. '.' → logprob: -6.5037150382995605
    4. '.readlines' → logprob: -10.878715515136719
    5. 'read' → logprob: -11.628715515136719
    6. '.Read' → logprob: -13.878715515136719
    7. '.buffer' → logprob: -14.003715515136719
    8. '```' → logprob: -14.878715515136719
    9. ' readline' → logprob: -15.003715515136719
    10. '.get' → logprob: -15.753715515136719

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14115305244922638
    2. '()' → logprob: -2.14115309715271
    3. '(
' → logprob: -4.641152858734131
    4. '
' → logprob: -6.141152858734131
    5. '()
' → logprob: -6.641152858734131
    6. 'def' → logprob: -8.766153335571289
    7. '()

' → logprob: -8.891153335571289
    8. '(n' → logprob: -9.141153335571289
    9. '\n' → logprob: -9.141153335571289
    10. '()\' → logprob: -9.141153335571289

Token 13: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31369125843048096
    2. 'def' → logprob: -1.313691258430481
    3. '(n' → logprob: -8.188691139221191
    4. 'N' → logprob: -9.438691139221191
    5. '(' → logprob: -10.438691139221191
    6. 'for' → logprob: -11.313691139221191
    7. 'd' → logprob: -11.313691139221191
    8. '\' → logprob: -12.938691139221191
    9. 'num' → logprob: -12.938691139221191
    10. 'data' → logprob: -13.313691139221191

Token 14: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006844787858426571
    2. ' True' → logprob: -5.756844997406006
    3. '  ' → logprob: -6.256844997406006
    4. ' (' → logprob: -7.256844997406006
    5. ' not' → logprob: -7.756844997406006
    6. ' )' → logprob: -8.756844520568848
    7. '(' → logprob: -8.881844520568848
    8. ' space' → logprob: -9.381844520568848
    9. ' ' → logprob: -10.256844520568848
    10. '    ' → logprob: -10.381844520568848

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007230373448692262
    2. '():' → logprob: -7.375722885131836
    3. ' :' → logprob: -9.875722885131836
    4. ':**' → logprob: -10.250722885131836
    5. '(:' → logprob: -13.125722885131836
    6. ':
' → logprob: -13.250722885131836
    7. '):' → logprob: -13.375722885131836
    8. ' ():' → logprob: -13.875722885131836
    9. ':return' → logprob: -14.750722885131836
    10. '(' → logprob: -14.875722885131836

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09268712997436523
    2. ' ' → logprob: -3.5926871299743652
    3. '    
' → logprob: -3.7176871299743652
    4. '    ' → logprob: -3.8426871299743652
    5. ' 
' → logprob: -4.717687129974365
    6. '  
' → logprob: -6.717687129974365
    7. '  ' → logprob: -7.342687129974365
    8. ' readline' → logprob: -7.717687129974365
    9. '    
    
' → logprob: -7.842687129974365
    10. '<|end|>' → logprob: -7.967687129974365

Token 17: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.3464182913303375
    2. ' n' → logprob: -1.4714182615280151
    3. 'num' → logprob: -3.9714183807373047
    4. 'x' → logprob: -4.721418380737305
    5. '   ' → logprob: -4.971418380737305
    6. ' line' → logprob: -5.221418380737305
    7. ' num' → logprob: -5.471418380737305
    8. 'line' → logprob: -5.596418380737305
    9. 'number' → logprob: -5.596418380737305
    10. 'data' → logprob: -5.971418380737305

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12705452740192413
    2. '=' → logprob: -2.127054452896118
    3. ' ' → logprob: -9.377054214477539
    4. ' ==' → logprob: -10.502054214477539
    5. '=int' → logprob: -12.127054214477539
    6. ' =)' → logprob: -12.627054214477539
    7. ' :=' → logprob: -14.002054214477539
    8. ',' → logprob: -14.127054214477539
    9. '.' → logprob: -14.252054214477539
    10. '=input' → logprob: -14.377054214477539

Token 19: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.15115855634212494
    2. 'int' → logprob: -2.026158571243286
    3. ' input' → logprob: -4.901158332824707
    4. 'input' → logprob: -7.026158332824707
    5. ' ' → logprob: -9.526158332824707
    6. '=int' → logprob: -10.151158332824707
    7. '<int' → logprob: -13.026158332824707
    8. ' in' → logprob: -13.651158332824707
    9. 'in' → logprob: -14.026158332824707
    10. ' =' → logprob: -14.151158332824707

Token 20: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004114373121410608
    2. '(' → logprob: -5.504114151000977
    3. 'input' → logprob: -10.254114151000977
    4. '(sys' → logprob: -15.629114151000977
    5. '(in' → logprob: -15.629114151000977
    6. '(
' → logprob: -16.004114151000977
    7. ' (' → logprob: -16.504114151000977
    8. '()' → logprob: -17.379114151000977
    9. ' input' → logprob: -17.629114151000977
    10. '(

' → logprob: -17.629114151000977

Token 21: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0006979000172577798
    2. '()' → logprob: -8.00069808959961
    3. '()))' → logprob: -8.25069808959961
    4. '().' → logprob: -9.50069808959961
    5. ')' → logprob: -11.37569808959961
    6. ' ())' → logprob: -11.87569808959961
    7. '())
' → logprob: -12.12569808959961
    8. '(' → logprob: -13.37569808959961
    9. '()),' → logprob: -15.25069808959961
    10. '())

' → logprob: -15.62569808959961

Token 22: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3878316283226013
    2. ' not' → logprob: -1.137831687927246
    3. 'n' → logprob: -7.137831687927246
    4. 'not' → logprob: -8.762831687927246
    5. ' ' → logprob: -11.887831687927246
    6. ' ' → logprob: -13.387831687927246
    7. '	n' → logprob: -15.012831687927246
    8. ' n't' → logprob: -15.637831687927246
    9. '```' → logprob: -16.38783073425293
    10. '   ' → logprob: -16.88783073425293

Token 25: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.012520251795649529
    2. '==' → logprob: -4.3875203132629395
    3. '=' → logprob: -12.512519836425781
    4. ')' → logprob: -13.137519836425781
    5. ' ' → logprob: -13.262519836425781
    6. ' =' → logprob: -14.012519836425781
    7. ' <=' → logprob: -14.137519836425781
    8. ')==' → logprob: -14.137519836425781
    9. ' <' → logprob: -15.637519836425781
    10. '()==' → logprob: -15.887519836425781

Token 26: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06196802109479904
    2. '0' → logprob: -2.8119680881500244
    3. ' ' → logprob: -14.811967849731445
    4. '_' → logprob: -16.936967849731445
    5. '=' → logprob: -17.561967849731445
    6. '  ' → logprob: -17.624467849731445
    7. ')' → logprob: -17.811967849731445
    8. '۰' → logprob: -17.936967849731445
    9. '​' → logprob: -18.749467849731445
    10. 'EOF' → logprob: -18.874467849731445

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001502717612311244
    2. ' ' → logprob: -6.501502513885498
    3. ')' → logprob: -15.001502990722656
    4. '   ' → logprob: -18.001502990722656
    5. '۰' → logprob: -18.001502990722656
    6. '-' → logprob: -18.126502990722656
    7. '  ' → logprob: -18.251502990722656
    8. '=' → logprob: -18.251502990722656
    9. '    ' → logprob: -18.626502990722656
    10. '_' → logprob: -18.876502990722656

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010875897714868188
    2. ':
' → logprob: -7.001087665557861
    3. '   ' → logprob: -8.876087188720703
    4. ' :' → logprob: -10.376087188720703
    5. ':return' → logprob: -13.126087188720703
    6. ' break' → logprob: -13.876087188720703
    7. '       ' → logprob: -14.376087188720703
    8. '	break' → logprob: -14.626087188720703
    9. ' :
' → logprob: -15.001087188720703
    10. '  ' → logprob: -15.626087188720703

Token 29: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003248181426897645
    2. '   ' → logprob: -5.75324821472168
    3. ' break' → logprob: -10.75324821472168
    4. '	break' → logprob: -11.12824821472168
    5. '    ' → logprob: -11.50324821472168
    6. '	' → logprob: -12.12824821472168
    7. '      ' → logprob: -12.62824821472168
    8. '     ' → logprob: -12.62824821472168
    9. 'break' → logprob: -12.87824821472168
    10. '\n' → logprob: -13.12824821472168

Token 30: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3977573812007904
    2. '       ' → logprob: -1.5227574110031128
    3. 'break' (adapté à ' break') → logprob: -2.2727572917938232
    4. '   ' → logprob: -5.022757530212402
    5. '	break' → logprob: -7.772757530212402
    6. '           ' → logprob: -11.522757530212402
    7. '_break' → logprob: -12.272757530212402
    8. '```' → logprob: -12.397757530212402
    9. ' ' → logprob: -13.022757530212402
    10. 'b' → logprob: -13.022757530212402

Token 31: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5873730182647705
    2. '   ' → logprob: -1.3373730182647705
    3. '    
' → logprob: -2.5873730182647705
    4. '\n' → logprob: -3.4623730182647705
    5. '<|end|>' → logprob: -4.087372779846191
    6. 'heap' → logprob: -4.212372779846191
    7. ' 
' → logprob: -4.712372779846191
    8. ' ' → logprob: -5.087372779846191
    9. '' → logprob: -5.087372779846191
    10. '  
' → logprob: -5.587372779846191

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05927054211497307
    2. 'heap' → logprob: -3.0592706203460693
    3. '    
' → logprob: -5.18427038192749
    4. '```' → logprob: -6.43427038192749
    5. 'he' → logprob: -6.55927038192749
    6. '    ' → logprob: -7.80927038192749
    7. 'prices' → logprob: -8.184270858764648
    8. 'numbers' → logprob: -9.434270858764648
    9. '<|end|>' → logprob: -9.434270858764648
    10. 'scores' → logprob: -9.559270858764648

Token 33: ' edges' (ID: 22569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7037462592124939
    2. 'heap' → logprob: -1.3287463188171387
    3. '    
' → logprob: -1.9537463188171387
    4. '
' → logprob: -2.9537463188171387
    5. 'he' → logprob: -4.078746318817139
    6. ' heap' → logprob: -5.578746318817139
    7. '```' → logprob: -5.578746318817139
    8. '    ' → logprob: -5.828746318817139
    9. 'data' → logprob: -6.703746318817139
    10. '\n' → logprob: -6.703746318817139

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014169970527291298
    2. '=' → logprob: -4.264170169830322
    3. '=[]' → logprob: -12.639169692993164
    4. '[' → logprob: -14.014169692993164
    5. ' ' → logprob: -14.264169692993164
    6. '   ' → logprob: -15.014169692993164
    7. '[]' → logprob: -15.514169692993164
    8. '[:]' → logprob: -15.639169692993164
    9. '_' → logprob: -15.764169692993164
    10. ',' → logprob: -15.764169692993164

Token 35: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0299806147813797
    2. ' []' → logprob: -3.5299806594848633
    3. '{}' → logprob: -9.029980659484863
    4. '[' → logprob: -9.279980659484863
    5. '[]
' → logprob: -11.279980659484863
    6. '[]}' → logprob: -13.654980659484863
    7. ' {}' → logprob: -14.404980659484863
    8. '[][]' → logprob: -14.529980659484863
    9. ' [' → logprob: -14.529980659484863
    10. ' [[]' → logprob: -14.654980659484863

Token 36: 'tuple' (ID: 52834)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.001892222324386239
    2. 'list' → logprob: -6.62689208984375
    3. ']' → logprob: -8.62689208984375
    4. ' []' → logprob: -8.62689208984375
    5. '[]
' → logprob: -8.62689208984375
    6. '[' → logprob: -11.62689208984375
    7. '[]

' → logprob: -12.00189208984375
    8. 'tuple' → logprob: -12.75189208984375
    9. '][]' → logprob: -12.87689208984375
    10. '()]' → logprob: -13.62689208984375

Token 37: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0018938910216093063
    2. '(input' → logprob: -6.501893997192383
    3. '(int' → logprob: -8.001893997192383
    4. 'map' → logprob: -10.126893997192383
    5. '(' → logprob: -11.251893997192383
    6. 'input' → logprob: -13.751893997192383
    7. '(list' → logprob: -14.251893997192383
    8. '()' → logprob: -14.501893997192383
    9. '(sorted' → logprob: -14.501893997192383
    10. ' map' → logprob: -15.376893997192383

Token 38: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.022735433652997017
    2. '<|end|>' → logprob: -4.772735595703125
    3. '(input' → logprob: -5.272735595703125
    4. '(' → logprob: -5.647735595703125
    5. ')' → logprob: -6.147735595703125
    6. '(str' → logprob: -6.647735595703125
    7. 'int' → logprob: -7.772735595703125
    8. ',int' → logprob: -8.022735595703125
    9. '<|end|>' → logprob: -8.272735595703125
    10. '(lambda' → logprob: -8.272735595703125

Token 39: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08088061213493347
    2. ',input' → logprob: -2.580880641937256
    3. ',' → logprob: -6.705880641937256
    4. 'input' → logprob: -7.830880641937256
    5. '(' → logprob: -8.080880165100098
    6. ')' → logprob: -10.205880165100098
    7. ' input' → logprob: -12.080880165100098
    8. '=input' → logprob: -12.330880165100098
    9. '[input' → logprob: -12.580880165100098
    10. ' (' → logprob: -13.080880165100098

Token 40: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019325626781210303
    2. ' input' → logprob: -6.251932621002197
    3. ')' → logprob: -13.376932144165039
    4. '(input' → logprob: -13.876932144165039
    5. ',input' → logprob: -14.501932144165039
    6. '   ' → logprob: -14.751932144165039
    7. '	input' → logprob: -15.126932144165039
    8. '=input' → logprob: -16.37693214416504
    9. '[input' → logprob: -16.62693214416504
    10. '))' → logprob: -17.25193214416504

Token 41: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.27099974633893e-05
    2. '()' → logprob: -11.375012397766113
    3. '()))' → logprob: -14.750012397766113
    4. ' ().' → logprob: -14.875012397766113
    5. '(' → logprob: -15.375012397766113
    6. ')' → logprob: -16.87501335144043
    7. '()
' → logprob: -16.87501335144043
    8. '())' → logprob: -17.37501335144043
    9. 'split' → logprob: -17.50001335144043
    10. '.split' → logprob: -17.62501335144043

Token 42: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.030169282108545303
    2. 'strip' → logprob: -3.5301692485809326
    3. 'rstrip' → logprob: -7.780169486999512
    4. ' split' → logprob: -14.655169486999512
    5. '(split' → logprob: -15.780169486999512
    6. 'read' → logprob: -16.405168533325195
    7. ' strip' → logprob: -17.155168533325195
    8. '().' → logprob: -17.155168533325195
    9. ' ' → logprob: -17.405168533325195
    10. '.split' → logprob: -18.280168533325195

Token 43: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16047494113445282
    2. '()))' → logprob: -1.9104748964309692
    3. ')' → logprob: -9.66047477722168
    4. '()' → logprob: -9.78547477722168
    5. '(' → logprob: -9.78547477722168
    6. '())' → logprob: -10.53547477722168
    7. ')))' → logprob: -11.03547477722168
    8. ' ))' → logprob: -11.91047477722168
    9. '()))
' → logprob: -12.16047477722168
    10. '))
' → logprob: -12.53547477722168

Token 44: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.33247241377830505
    2. ')' → logprob: -2.082472324371338
    3. 'for' → logprob: -2.332472324371338
    4. '   ' → logprob: -2.957472324371338
    5. '()' → logprob: -5.082472324371338
    6. '    ' → logprob: -7.082472324371338
    7. '(' → logprob: -7.457472324371338
    8. ']' → logprob: -7.707472324371338
    9. '	for' → logprob: -7.957472324371338
    10. ' )' → logprob: -8.207472801208496

Token 45: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01930319331586361
    2. ' range' → logprob: -4.269303321838379
    3. 'range' → logprob: -5.769303321838379
    4. ' _' → logprob: -6.769303321838379
    5. '_range' → logprob: -7.269303321838379
    6. ' in' → logprob: -9.019303321838379
    7. '_i' → logprob: -11.144303321838379
    8. 'i' → logprob: -12.269303321838379
    9. '	range' → logprob: -12.394303321838379
    10. '(range' → logprob: -12.519303321838379

Token 46: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7138369083404541
    2. ' in' → logprob: -0.8388369083404541
    3. 'range' → logprob: -2.588836908340454
    4. ' range' → logprob: -5.963836669921875
    5. ' ' → logprob: -8.213836669921875
    6. '(range' → logprob: -10.588836669921875
    7. 'n' → logprob: -11.338836669921875
    8. '  ' → logprob: -11.588836669921875
    9. '	range' → logprob: -11.588836669921875
    10. '(' → logprob: -12.588836669921875

Token 47: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001186299603432417
    2. ' range' → logprob: -6.751186370849609
    3. '   ' → logprob: -12.37618637084961
    4. 'rang' → logprob: -12.75118637084961
    5. '(range' → logprob: -13.00118637084961
    6. ' ' → logprob: -13.62618637084961
    7. '	range' → logprob: -13.62618637084961
    8. '[' → logprob: -14.12618637084961
    9. '  ' → logprob: -14.12618637084961
    10. 'ran' → logprob: -14.12618637084961

Token 48: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.6060808522743173e-05
    2. '(' → logprob: -10.875025749206543
    3. 'n' → logprob: -11.875025749206543
    4. ')n' → logprob: -16.87502670288086
    5. ' (' → logprob: -17.12502670288086
    6. ' n' → logprob: -17.87502670288086
    7. ')' → logprob: -17.87502670288086
    8. '((' → logprob: -18.50002670288086
    9. '(
' → logprob: -19.75002670288086
    10. '(N' → logprob: -19.87502670288086

Token 49: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004191138141322881
    2. ')' → logprob: -8.375418663024902
    3. ']' → logprob: -9.250418663024902
    4. ' )' → logprob: -9.375418663024902
    5. ' ]' → logprob: -12.875418663024902
    6. '   ' → logprob: -13.500418663024902
    7. ')])' → logprob: -14.000418663024902
    8. '))' → logprob: -14.750418663024902
    9. ')]
' → logprob: -15.125418663024902
    10. '])]' → logprob: -15.250418663024902

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2766892910003662
    2. 'graph' → logprob: -2.151689291000366
    3. 'mst' → logprob: -3.276689291000366
    4. '    
' → logprob: -3.651689291000366
    5. 'heap' → logprob: -4.151689529418945
    6. 'dist' → logprob: -4.901689529418945
    7. '<|end|>' → logprob: -4.901689529418945
    8. '
' → logprob: -4.901689529418945
    9. 'distance' → logprob: -5.776689529418945
    10. 'visited' → logprob: -6.276689529418945

Token 51: ' towns' (ID: 39847)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.20561879873275757
    2. 'edges' → logprob: -2.5806188583374023
    3. 'heap' → logprob: -3.8306188583374023
    4. 'parent' → logprob: -3.8306188583374023
    5. ' graph' → logprob: -4.330618858337402
    6. 'adj' → logprob: -4.330618858337402
    7. 'dist' → logprob: -4.705618858337402
    8. '   ' → logprob: -5.080618858337402
    9. 'parents' → logprob: -5.455618858337402
    10. 'distance' → logprob: -5.830618858337402

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13109621405601501
    2. '=' → logprob: -2.756096124649048
    3. ',' → logprob: -2.881096124649048
    4. ')' → logprob: -6.881096363067627
    5. '_' → logprob: -7.256096363067627
    6. '_map' → logprob: -8.131095886230469
    7. '_edges' → logprob: -8.506095886230469
    8. '_set' → logprob: -9.006095886230469
    9. '_dist' → logprob: -9.131095886230469
    10. '_cost' → logprob: -9.256095886230469

Token 53: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.2752651572227478
    2. '{}' → logprob: -1.6502652168273926
    3. ' set' → logprob: -3.2752652168273926
    4. '{' → logprob: -5.650265216827393
    5. '[]' → logprob: -5.650265216827393
    6. ' {}' → logprob: -5.775265216827393
    7. ' []' → logprob: -8.150264739990234
    8. 'dict' → logprob: -9.275264739990234
    9. 'len' → logprob: -9.400264739990234
    10. ' {' → logprob: -9.775264739990234

Token 54: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004593862977344543
    2. '(edges' → logprob: -8.125459671020508
    3. '(' → logprob: -9.500459671020508
    4. '(range' → logprob: -9.750459671020508
    5. '()
' → logprob: -11.625459671020508
    6. '(t' → logprob: -12.250459671020508
    7. ' ()' → logprob: -12.375459671020508
    8. '(edge' → logprob: -12.625459671020508
    9. '([' → logprob: -13.500459671020508
    10. 'edges' → logprob: -13.875459671020508

Token 55: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.765559196472168
    2. ' for' → logprob: -1.015559196472168
    3. '   ' → logprob: -1.765559196472168
    4. '    
' → logprob: -7.390559196472168
    5. '<|end|>' → logprob: -8.015559196472168
    6. '	for' → logprob: -8.640559196472168
    7. ' 
' → logprob: -8.765559196472168
    8. ' ' → logprob: -9.265559196472168
    9. '  ' → logprob: -9.390559196472168
    10. '  
' → logprob: -9.515559196472168

Token 56: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06357850134372711
    2. ' for' → logprob: -2.8135786056518555
    3. '   ' → logprob: -6.4385786056518555
    4. '	for' → logprob: -11.813578605651855
    5. 'edges' → logprob: -13.688578605651855
    6. '    
' → logprob: -13.938578605651855
    7. '```' → logprob: -13.938578605651855
    8. ' 
' → logprob: -16.43857765197754
    9. ' ' → logprob: -16.43857765197754
    10. '
' → logprob: -16.43857765197754

Token 57: ' a' (ID: 261)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.44109687209129333
    2. 'u' → logprob: -1.3160969018936157
    3. 'a' → logprob: -3.191096782684326
    4. ' a' → logprob: -3.691096782684326
    5. ' edge' → logprob: -4.816096782684326
    6. 'e' → logprob: -5.691096782684326
    7. ' e' → logprob: -6.191096782684326
    8. ' s' → logprob: -6.566096782684326
    9. 'edge' → logprob: -6.566096782684326
    10. ' _' → logprob: -7.066096782684326

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002380403922870755
    2. ' ,' → logprob: -6.37738037109375
    3. ',b' → logprob: -7.37738037109375
    4. 'b' → logprob: -10.37738037109375
    5. ',t' → logprob: -12.00238037109375
    6. ' in' → logprob: -12.25238037109375
    7. ',v' → logprob: -13.25238037109375
    8. '<|end|>' → logprob: -13.37738037109375
    9. '_,' → logprob: -14.50238037109375
    10. ',a' → logprob: -14.50238037109375

Token 59: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009756443090736866
    2. ' b' → logprob: -4.634756565093994
    3. 's' → logprob: -16.009756088256836
    4. 't' → logprob: -16.384756088256836
    5. ',b' → logprob: -16.509756088256836
    6. 'c' → logprob: -16.634756088256836
    7. '<|end|>' → logprob: -16.884756088256836
    8. '_b' → logprob: -17.259756088256836
    9. ' ' → logprob: -17.384756088256836
    10. ',' → logprob: -17.634756088256836

Token 60: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09207554161548615
    2. ',' → logprob: -2.7170755863189697
    3. 'in' → logprob: -3.9670755863189697
    4. ' ,' → logprob: -5.842075347900391
    5. ' ' → logprob: -10.46707534790039
    6. ',in' → logprob: -10.84207534790039
    7. ',b' → logprob: -12.21707534790039
    8. '   ' → logprob: -13.59207534790039
    9. ',a' → logprob: -13.71707534790039
    10. '	in' → logprob: -13.84207534790039

Token 61: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11602117121219635
    2. 'w' → logprob: -2.616021156311035
    3. '_' → logprob: -3.741021156311035
    4. 'd' → logprob: -5.366021156311035
    5. ' c' → logprob: -5.991021156311035
    6. 'cost' → logprob: -6.116021156311035
    7. '_c' → logprob: -6.991021156311035
    8. ' w' → logprob: -7.241021156311035
    9. 'l' → logprob: -7.741021156311035
    10. '_w' → logprob: -8.491021156311035

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023298820480704308
    2. 'in' → logprob: -3.773298740386963
    3. '   ' → logprob: -10.398299217224121
    4. '	in' → logprob: -11.898299217224121
    5. '    ' → logprob: -12.273299217224121
    6. ' ' → logprob: -12.648299217224121
    7. ',' → logprob: -13.023299217224121
    8. ' ,' → logprob: -13.398299217224121
    9. '  ' → logprob: -13.523299217224121
    10. '_in' → logprob: -13.773299217224121

Token 63: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.033663686364889145
    2. 'edges' → logprob: -3.408663749694824
    3. '(edges' → logprob: -11.283663749694824
    4. '.edges' → logprob: -13.158663749694824
    5. '_edges' → logprob: -13.533663749694824
    6. ' ' → logprob: -14.033663749694824
    7. '   ' → logprob: -15.283663749694824
    8. ' in' → logprob: -15.783663749694824
    9. ' edge' → logprob: -15.783663749694824
    10. '```' → logprob: -16.283662796020508

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00625676941126585
    2. ':
' → logprob: -5.506256580352783
    3. '   ' → logprob: -6.381256580352783
    4. '.' → logprob: -8.631257057189941
    5. '       ' → logprob: -9.006257057189941
    6. ',' → logprob: -9.881257057189941
    7. '<|end|>' → logprob: -10.256257057189941
    8. '.add' → logprob: -10.631257057189941
    9. '):' → logprob: -11.006257057189941
    10. ' :' → logprob: -11.131257057189941

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016637545777484775
    2. ' towns' → logprob: -6.751663684844971
    3. '   ' → logprob: -8.626664161682129
    4. '    ' → logprob: -9.126664161682129
    5. '           ' → logprob: -10.251664161682129
    6. '      ' → logprob: -10.251664161682129
    7. '        ' → logprob: -10.626664161682129
    8. '        
' → logprob: -10.626664161682129
    9. ' ' → logprob: -10.876664161682129
    10. ',t' → logprob: -11.501664161682129

Token 66: ' towns' (ID: 39847)
  Prédit: ' towns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' towns' → logprob: -0.28425267338752747
    2. '       ' → logprob: -1.534252643585205
    3. '    ' → logprob: -4.034252643585205
    4. '   ' → logprob: -5.409252643585205
    5. '        ' → logprob: -5.534252643585205
    6. 't' → logprob: -5.534252643585205
    7. 'town' → logprob: -7.409252643585205
    8. '	t' → logprob: -7.909252643585205
    9. ' t' → logprob: -8.159253120422363
    10. ' ' → logprob: -9.284253120422363

Token 67: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.32159581780433655
    2. '.' → logprob: -1.3215957880020142
    3. '.update' → logprob: -4.821595668792725
    4. ' .' → logprob: -8.321596145629883
    5. 'add' → logprob: -14.446596145629883
    6. '.setdefault' → logprob: -14.946596145629883
    7. '.union' → logprob: -15.321596145629883
    8. '   ' → logprob: -15.321596145629883
    9. ' ' → logprob: -15.571596145629883
    10. '.append' → logprob: -15.821596145629883

Token 68: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00038443657103925943
    2. '(' → logprob: -7.875384330749512
    3. 'a' → logprob: -12.375384330749512
    4. '(A' → logprob: -16.625385284423828
    5. '(b' → logprob: -16.750385284423828
    6. '((' → logprob: -17.125385284423828
    7. ' (' → logprob: -17.625385284423828
    8. ' a' → logprob: -17.875385284423828
    9. '(s' → logprob: -18.250385284423828
    10. '(i' → logprob: -18.250385284423828

Token 69: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2014596164226532
    2. ')' → logprob: -1.7014596462249756
    3. ')
' → logprob: -10.326459884643555
    4. ' )
' → logprob: -11.451459884643555
    5. ')b' → logprob: -13.951459884643555
    6. ' )' → logprob: -14.201459884643555
    7. '   ' → logprob: -14.576459884643555
    8. ')

' → logprob: -14.701459884643555
    9. '),' → logprob: -15.951459884643555
    10. ')a' → logprob: -16.701459884643555

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33246883749961853
    2. ' 
' → logprob: -2.4574687480926514
    3. '   ' → logprob: -2.7074687480926514
    4. '        
' → logprob: -2.9574687480926514
    5. '  
' → logprob: -3.5824687480926514
    6. '    
' → logprob: -3.8324687480926514
    7. ' ' → logprob: -4.7074689865112305
    8. '   
' → logprob: -5.3324689865112305
    9. 'b' → logprob: -6.3324689865112305
    10. '`' → logprob: -6.3324689865112305

Token 71: ' towns' (ID: 39847)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11995034664869308
    2. ' b' → logprob: -2.494950294494629
    3. '       ' → logprob: -3.494950294494629
    4. ' ' → logprob: -10.619950294494629
    5. '	b' → logprob: -10.619950294494629
    6. '	' → logprob: -10.744950294494629
    7. ' ' → logprob: -10.869950294494629
    8. '    ' → logprob: -10.869950294494629
    9. '        ' → logprob: -10.994950294494629
    10. '        
' → logprob: -11.119950294494629

Token 72: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.12696705758571625
    2. '.' → logprob: -2.126966953277588
    3. '.update' → logprob: -11.251967430114746
    4. 'add' → logprob: -11.501967430114746
    5. ' .' → logprob: -11.876967430114746
    6. '.
' → logprob: -12.626967430114746
    7. '.union' → logprob: -12.876967430114746
    8. '<|end|>' → logprob: -13.876967430114746
    9. '.setdefault' → logprob: -14.126967430114746
    10. '   ' → logprob: -15.376967430114746

Token 73: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.016036715358495712
    2. '(' → logprob: -4.141036510467529
    3. '(B' → logprob: -14.016036987304688
    4. ' (' → logprob: -14.266036987304688
    5. ' b' → logprob: -14.641036987304688
    6. '(
' → logprob: -15.141036987304688
    7. 'b' → logprob: -15.766036987304688
    8. '(c' → logprob: -17.016036987304688
    9. '(a' → logprob: -17.141036987304688
    10. '(s' → logprob: -17.891036987304688

Token 74: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015872348740231246
    2. ')
' → logprob: -9.000158309936523
    3. ' )' → logprob: -10.625158309936523
    4. '   ' → logprob: -12.000158309936523
    5. ')

' → logprob: -13.750158309936523
    6. '<|end|>' → logprob: -13.875158309936523
    7. ')return' → logprob: -14.625158309936523
    8. '
' → logprob: -15.000158309936523
    9. ')n' → logprob: -15.250158309936523
    10. ')#' → logprob: -15.500158309936523

Token 75: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.8195821642875671
    2. '   ' → logprob: -0.9445821642875671
    3. 'parent' → logprob: -3.069582223892212
    4. 'mst' → logprob: -3.194582223892212
    5. 'adj' → logprob: -3.444582223892212
    6. ' graph' → logprob: -4.069581985473633
    7. 'dist' → logprob: -4.444581985473633
    8. 'parents' → logprob: -5.444581985473633
    9. 'distance' → logprob: -5.819581985473633
    10. '    
' → logprob: -6.069581985473633

Token 76: ' N' (ID: 478)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.12642712891101837
    2. 'parent' → logprob: -3.001427173614502
    3. 'adj' → logprob: -3.126427173614502
    4. 'dist' → logprob: -4.751427173614502
    5. 'max' → logprob: -5.501427173614502
    6. '   ' → logprob: -5.626427173614502
    7. 'mst' → logprob: -6.126427173614502
    8. 'parents' → logprob: -6.251427173614502
    9. ' graph' → logprob: -6.751427173614502
    10. 'cost' → logprob: -7.376427173614502

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0789753794670105
    2. '=' → logprob: -2.5789754390716553
    3. '   ' → logprob: -10.328975677490234
    4. 'um' → logprob: -11.203975677490234
    5. '_' → logprob: -11.453975677490234
    6. ' ' → logprob: -11.828975677490234
    7. '  ' → logprob: -12.578975677490234
    8. '-' → logprob: -13.328975677490234
    9. 'o' → logprob: -13.328975677490234
    10. '=len' → logprob: -13.328975677490234

Token 78: ' max' (ID: 2999)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6388052701950073
    2. 'max' → logprob: -1.3888052701950073
    3. ' max' → logprob: -1.8888052701950073
    4. ' len' → logprob: -2.638805389404297
    5. 'min' → logprob: -13.013805389404297
    6. '(len' → logprob: -13.138805389404297
    7. '(max' → logprob: -15.388805389404297
    8. '[len' → logprob: -15.513805389404297
    9. '	len' → logprob: -16.013805389404297
    10. '  ' → logprob: -16.263805389404297

Token 79: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0011705794604495168
    2. '(' → logprob: -6.751170635223389
    3. '(max' → logprob: -15.62617015838623
    4. ' (' → logprob: -16.501171112060547
    5. 't' → logprob: -17.251171112060547
    6. '(`' → logprob: -17.376171112060547
    7. '(
' → logprob: -17.501171112060547
    8. '	t' → logprob: -17.626171112060547
    9. '((' → logprob: -17.876171112060547
    10. '()' → logprob: -18.251171112060547

Token 80: 'owns' (ID: 65060)
  Prédit: 'owns'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'owns' → logprob: -0.18516872823238373
    2. '(t' → logprob: -2.185168743133545
    3. '(' → logprob: -2.935168743133545
    4. 'own' → logprob: -6.560168743133545
    5. 'ows' → logprob: -6.685168743133545
    6. 'ow' → logprob: -8.935168266296387
    7. ' towns' → logprob: -9.185168266296387
    8. ')' → logprob: -9.685168266296387
    9. 'owners' → logprob: -10.060168266296387
    10. 'ons' → logprob: -10.185168266296387

Token 81: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009545699693262577
    2. ' )' → logprob: -4.884545803070068
    3. ')+' → logprob: -6.259545803070068
    4. '+' → logprob: -11.75954532623291
    5. ')
' → logprob: -12.25954532623291
    6. ' +' → logprob: -12.50954532623291
    7. ',' → logprob: -12.75954532623291
    8. '   ' → logprob: -13.75954532623291
    9. '))' → logprob: -14.00954532623291
    10. ' ' → logprob: -14.50954532623291

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028052295092493296
    2. ' ' → logprob: -5.877805233001709
    3. '0' → logprob: -15.75280475616455
    4. '   ' → logprob: -16.002805709838867
    5. ' ' → logprob: -16.502805709838867
    6. '2' → logprob: -17.752805709838867
    7. '  ' → logprob: -17.752805709838867
    8. '+' → logprob: -18.627805709838867
    9. '```' → logprob: -18.877805709838867
    10. '`' → logprob: -18.877805709838867

Token 83: '
' (ID: 198)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.665104866027832
    2. '   ' → logprob: -2.040104866027832
    3. 'dist' → logprob: -2.415104866027832
    4. 'mst' → logprob: -2.415104866027832
    5. ' graph' → logprob: -3.165104866027832
    6. 'distance' → logprob: -3.540104866027832
    7. 'parent' → logprob: -3.665104866027832
    8. '
' → logprob: -3.790104866027832
    9. 'visited' → logprob: -4.290104866027832
    10. '    
' → logprob: -4.665104866027832

Token 84: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.23864437639713287
    2. 'dist' → logprob: -2.7386443614959717
    3. '   ' → logprob: -2.9886443614959717
    4. ' graph' → logprob: -3.2386443614959717
    5. 'parent' → logprob: -3.9886443614959717
    6. '
' → logprob: -4.613644599914551
    7. 'adj' → logprob: -4.613644599914551
    8. 'distance' → logprob: -4.738644599914551
    9. '    
' → logprob: -5.863644599914551
    10. 'parents' → logprob: -6.738644599914551

Token 85: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.09185121208429337
    2. 'parent' → logprob: -2.966851234436035
    3. 'adj' → logprob: -3.591851234436035
    4. 'parents' → logprob: -5.841851234436035
    5. ' graph' → logprob: -6.591851234436035
    6. '   ' → logprob: -6.841851234436035
    7. 'dist' → logprob: -7.091851234436035
    8. 'tree' → logprob: -7.591851234436035
    9. 'cost' → logprob: -7.591851234436035
    10. 'visited' → logprob: -8.091851234436035

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015080781886354089
    2. '=' → logprob: -6.5015082359313965
    3. '[' → logprob: -12.876507759094238
    4. ' =[' → logprob: -13.251507759094238
    5. ' ' → logprob: -14.001507759094238
    6. ' =
' → logprob: -16.001508712768555
    7. ')' → logprob: -16.376508712768555
    8. ']' → logprob: -16.501508712768555
    9. '=[]' → logprob: -16.501508712768555
    10. '[]' → logprob: -16.626508712768555

Token 87: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31340643763542175
    2. ' [[]' → logprob: -1.3134064674377441
    3. ' [' → logprob: -9.188405990600586
    4. '{' → logprob: -10.188405990600586
    5. ' {' → logprob: -13.438405990600586
    6. '[]' → logprob: -14.063405990600586
    7. '[[' → logprob: -14.438405990600586
    8. '   ' → logprob: -14.563405990600586
    9. 'default' → logprob: -14.938405990600586
    10. ' defaultdict' → logprob: -14.938405990600586

Token 88: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.553105354309082
    2. 'for' → logprob: -0.928105354309082
    3. ')' → logprob: -3.678105354309082
    4. ']' → logprob: -5.678105354309082
    5. ',' → logprob: -7.178105354309082
    6. '	for' → logprob: -10.803105354309082
    7. '<|end|>' → logprob: -11.053105354309082
    8. ')]' → logprob: -11.553105354309082
    9. ' ' → logprob: -12.053105354309082
    10. '[' → logprob: -12.803105354309082

Token 89: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.029860178008675575
    2. ' range' → logprob: -3.904860258102417
    3. 'range' → logprob: -5.154860019683838
    4. ' _' → logprob: -6.404860019683838
    5. '(range' → logprob: -6.654860019683838
    6. '_range' → logprob: -7.779860019683838
    7. '(' → logprob: -9.654860496520996
    8. ' ' → logprob: -10.529860496520996
    9. ' in' → logprob: -10.904860496520996
    10. '_graph' → logprob: -11.529860496520996

Token 90: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5777978301048279
    2. 'range' → logprob: -0.8277978301048279
    3. ' in' → logprob: -6.827797889709473
    4. ' range' → logprob: -7.452797889709473
    5. 'i' → logprob: -9.077797889709473
    6. '(range' → logprob: -10.077797889709473
    7. 'graph' → logprob: -11.327797889709473
    8. '	range' → logprob: -12.327797889709473
    9. 'raph' → logprob: -12.827797889709473
    10. '_' → logprob: -12.827797889709473

Token 91: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1269291490316391
    2. ' range' → logprob: -2.1269290447235107
    3. '(range' → logprob: -14.50192928314209
    4. '	range' → logprob: -15.25192928314209
    5. 'rang' → logprob: -15.50192928314209
    6. 'ran' → logprob: -17.001928329467773
    7. 'ra' → logprob: -17.251928329467773
    8. ' ' → logprob: -17.751928329467773
    9. 'r' → logprob: -18.126928329467773
    10. ' rang' → logprob: -18.251928329467773

Token 92: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -4.143808109802194e-05
    2. '(' → logprob: -10.375041007995605
    3. 'N' → logprob: -11.625041007995605
    4. ' (' → logprob: -14.375041007995605
    5. '(n' → logprob: -14.500041007995605
    6. '(
' → logprob: -17.250041961669922
    7. ')(' → logprob: -17.625041961669922
    8. '	N' → logprob: -17.750041961669922
    9. '((' → logprob: -17.875041961669922
    10. '[N' → logprob: -18.000041961669922

Token 93: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00037716879160143435
    2. ']' → logprob: -8.12537670135498
    3. ')' → logprob: -9.50037670135498
    4. '])' → logprob: -12.87537670135498
    5. ' )' → logprob: -13.75037670135498
    6. ' ]' → logprob: -13.87537670135498
    7. ')])' → logprob: -14.50037670135498
    8. '])]' → logprob: -14.87537670135498
    9. ')]
' → logprob: -15.37537670135498
    10. ' ' → logprob: -15.62537670135498

Token 94: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03874713182449341
    2. ' for' → logprob: -3.6637470722198486
    3. '   ' → logprob: -4.413747310638428
    4. '	for' → logprob: -8.66374683380127
    5. '<|end|>' → logprob: -9.66374683380127
    6. '    
' → logprob: -11.41374683380127
    7. '
' → logprob: -12.53874683380127
    8. ' ' → logprob: -13.03874683380127
    9. '```' → logprob: -13.28874683380127
    10. '  ' → logprob: -13.28874683380127

Token 95: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11033155024051666
    2. ' for' → logprob: -2.3603315353393555
    3. '   ' → logprob: -4.6103315353393555
    4. '	for' → logprob: -9.110331535339355
    5. '    
' → logprob: -12.360331535339355
    6. ' ' → logprob: -12.360331535339355
    7. ' 
' → logprob: -13.360331535339355
    8. '  ' → logprob: -13.485331535339355
    9. '
' → logprob: -13.610331535339355
    10. '```' → logprob: -13.860331535339355

Token 96: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2014196664094925
    2. ' a' → logprob: -1.701419711112976
    3. '   ' → logprob: -12.826419830322266
    4. '	a' → logprob: -13.076419830322266
    5. '(a' → logprob: -14.576419830322266
    6. 'u' → logprob: -15.076419830322266
    7. ' (' → logprob: -15.201419830322266
    8. ' ' → logprob: -15.826419830322266
    9. '_a' → logprob: -15.826419830322266
    10. '_' → logprob: -16.201419830322266

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008662670850753784
    2. ' ,' → logprob: -4.758662700653076
    3. ',b' → logprob: -10.008662223815918
    4. ',a' → logprob: -14.258662223815918
    5. ',c' → logprob: -14.758662223815918
    6. '<|end|>' → logprob: -14.883662223815918
    7. ',
' → logprob: -15.008662223815918
    8. ',n' → logprob: -15.508662223815918
    9. '‌,' → logprob: -15.758662223815918
    10. '_,' → logprob: -15.758662223815918

Token 98: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.575940728187561
    2. ' b' → logprob: -0.825940728187561
    3. '<|end|>' → logprob: -14.45094108581543
    4. ' ' → logprob: -14.57594108581543
    5. 'c' → logprob: -15.95094108581543
    6. ' c' → logprob: -16.95094108581543
    7. '    ' → logprob: -16.95094108581543
    8. '   ' → logprob: -17.32594108581543
    9. '	b' → logprob: -17.95094108581543
    10. ')b' → logprob: -18.07594108581543

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004244842566549778
    2. ' ,' → logprob: -5.504244804382324
    3. ',c' → logprob: -8.754244804382324
    4. ' in' → logprob: -12.254244804382324
    5. '‌,' → logprob: -14.504244804382324
    6. '```' → logprob: -15.129244804382324
    7. ',b' → logprob: -15.379244804382324
    8. ' ' → logprob: -15.504244804382324
    9. ',e' → logprob: -15.754244804382324
    10. ' c' → logprob: -15.754244804382324

Token 100: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03804263845086098
    2. ' c' → logprob: -3.2880425453186035
    3. ' ' → logprob: -14.163043022155762
    4. '	c' → logprob: -14.913043022155762
    5. ')c' → logprob: -16.788042068481445
    6. '  ' → logprob: -17.663042068481445
    7. '0' → logprob: -17.788042068481445
    8. ',c' → logprob: -17.788042068481445
    9. '_c' → logprob: -18.163042068481445
    10. '1' → logprob: -18.288042068481445

Token 101: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06012860685586929
    2. ':' → logprob: -3.685128688812256
    3. '.' → logprob: -3.810128688812256
    4. 'in' → logprob: -5.185128688812256
    5. ',' → logprob: -6.185128688812256
    6. '.append' → logprob: -6.185128688812256
    7. '   ' → logprob: -7.435128688812256
    8. ' .' → logprob: -8.060128211975098
    9. '[' → logprob: -8.685128211975098
    10. ' ,' → logprob: -9.560128211975098

Token 102: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.16027672588825226
    2. ' edges' → logprob: -1.9102767705917358
    3. '(edges' → logprob: -10.285276412963867
    4. '   ' → logprob: -12.410276412963867
    5. '_edges' → logprob: -12.410276412963867
    6. '.edges' → logprob: -12.785276412963867
    7. '
' → logprob: -13.035276412963867
    8. ' ' → logprob: -13.285276412963867
    9. 'edge' → logprob: -13.785276412963867
    10. 'graph' → logprob: -13.910276412963867

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011351724155247211
    2. ':
' → logprob: -4.511351585388184
    3. '   ' → logprob: -8.261351585388184
    4. '       ' → logprob: -11.011351585388184
    5. '):' → logprob: -11.511351585388184
    6. ',' → logprob: -12.136351585388184
    7. '):
' → logprob: -12.636351585388184
    8. '[' → logprob: -12.761351585388184
    9. ':
' → logprob: -13.136351585388184
    10. ' :' → logprob: -13.886351585388184

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007359567563980818
    2. '   ' → logprob: -5.007359504699707
    3. '
' → logprob: -8.257359504699707
    4. '    
' → logprob: -9.007359504699707
    5. '	graph' → logprob: -9.382359504699707
    6. '        
' → logprob: -9.757359504699707
    7. 'graph' → logprob: -10.507359504699707
    8. ' 
' → logprob: -10.757359504699707
    9. '<|end|>' → logprob: -11.007359504699707
    10. '```' → logprob: -11.132359504699707

Token 105: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.2470255345106125
    2. 'graph' (adapté à ' graph') → logprob: -1.747025489807129
    3. '   ' → logprob: -3.122025489807129
    4. '	graph' → logprob: -7.747025489807129
    5. '       ' → logprob: -10.122025489807129
    6. '
' → logprob: -10.622025489807129
    7. '    ' → logprob: -11.872025489807129
    8. '(graph' → logprob: -12.497025489807129
    9. '```' → logprob: -12.622025489807129
    10. ' 
' → logprob: -13.247025489807129

Token 106: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -14.125001907348633
    3. 'a' → logprob: -14.625001907348633
    4. '[b' → logprob: -14.875001907348633
    5. '   ' → logprob: -16.375001907348633
    6. ' [' → logprob: -16.375001907348633
    7. '[c' → logprob: -19.000001907348633
    8. '[A' → logprob: -19.125001907348633
    9. ' a' → logprob: -19.875001907348633
    10. '[u' → logprob: -20.000001907348633

Token 107: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.04288477078080177
    2. '.append' → logprob: -3.7928848266601562
    3. ').' → logprob: -4.292884826660156
    4. '.' → logprob: -5.167884826660156
    5. ' ].' → logprob: -10.542884826660156
    6. '   ' → logprob: -10.917884826660156
    7. ']' → logprob: -11.542884826660156
    8. '}.' → logprob: -11.667884826660156
    9. ',' → logprob: -12.417884826660156
    10. '.app' → logprob: -12.542884826660156

Token 108: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.6240566083070007e-06
    2. 'app' → logprob: -13.750001907348633
    3. ' append' → logprob: -15.375001907348633
    4. 'appen' → logprob: -15.875001907348633
    5. '.append' → logprob: -16.000001907348633
    6. ' ' → logprob: -16.750001907348633
    7. 'push' → logprob: -18.625001907348633
    8. 'appe' → logprob: -18.875001907348633
    9. 'add' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.375001907348633

Token 109: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.26660987734794617
    2. '(' → logprob: -1.7666099071502686
    3. '(b' → logprob: -2.7666099071502686
    4. ' (' → logprob: -8.391610145568848
    5. '(B' → logprob: -11.266610145568848
    6. ' ((' → logprob: -14.266610145568848
    7. '(a' → logprob: -14.391610145568848
    8. ' ' → logprob: -15.016610145568848
    9. '   ' → logprob: -15.391610145568848
    10. '(
' → logprob: -15.516610145568848

Token 110: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.033652156591415405
    2. ' b' → logprob: -3.4086520671844482
    3. 'c' → logprob: -12.908652305603027
    4. '   ' → logprob: -13.033652305603027
    5. ' ' → logprob: -14.408652305603027
    6. ' c' → logprob: -14.658652305603027
    7. ')b' → logprob: -15.033652305603027
    8. '	b' → logprob: -15.783652305603027
    9. ',b' → logprob: -16.03365135192871
    10. '    ' → logprob: -16.78365135192871

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008581006550230086
    2. ',c' → logprob: -7.375858306884766
    3. ' ,' → logprob: -8.375858306884766
    4. 'c' → logprob: -14.250858306884766
    5. ',
' → logprob: -15.250858306884766
    6. '‌,' → logprob: -16.250858306884766
    7. '```' → logprob: -17.250858306884766
    8. ',

' → logprob: -17.250858306884766
    9. '`,' → logprob: -17.625858306884766
    10. ' ' → logprob: -17.625858306884766

Token 112: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4287187457084656
    2. ' c' → logprob: -1.0537188053131104
    3. ' ' → logprob: -11.928718566894531
    4. ' ' → logprob: -12.928718566894531
    5. ')c' → logprob: -12.928718566894531
    6. '	c' → logprob: -13.053718566894531
    7. '    ' → logprob: -13.178718566894531
    8. '   ' → logprob: -13.803718566894531
    9. ',c' → logprob: -15.553718566894531
    10. ' 
' → logprob: -15.803718566894531

Token 113: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004356298595666885
    2. ')' → logprob: -5.504356384277344
    3. ',' → logprob: -8.879356384277344
    4. '))
' → logprob: -9.629356384277344
    5. ' ))' → logprob: -9.754356384277344
    6. '),' → logprob: -12.129356384277344
    7. ')))' → logprob: -13.004356384277344
    8. '));' → logprob: -13.379356384277344
    9. ' )' → logprob: -13.504356384277344
    10. '   ' → logprob: -13.504356384277344

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057443466037511826
    2. '   ' → logprob: -3.057443380355835
    3. '	graph' → logprob: -5.432443618774414
    4. 'graph' → logprob: -5.557443618774414
    5. ' graph' → logprob: -7.557443618774414
    6. '	' → logprob: -10.307443618774414
    7. ' ' → logprob: -11.932443618774414
    8. '(graph' → logprob: -12.182443618774414
    9. '     ' → logprob: -12.682443618774414
    10. '    ' → logprob: -12.807443618774414

Token 115: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.07164166867733002
    2. 'graph' (adapté à ' graph') → logprob: -2.696641683578491
    3. '	graph' → logprob: -6.696641445159912
    4. '       ' → logprob: -8.07164192199707
    5. '   ' → logprob: -9.32164192199707
    6. '(graph' → logprob: -10.44664192199707
    7. '    ' → logprob: -10.69664192199707
    8. ' ' → logprob: -12.69664192199707
    9. '        ' → logprob: -12.94664192199707
    10. ' ' → logprob: -13.07164192199707

Token 116: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.20144149661064148
    2. '[a' → logprob: -1.7014415264129639
    3. '[' → logprob: -10.576441764831543
    4. 'a' → logprob: -13.576441764831543
    5. 'b' → logprob: -13.826441764831543
    6. '[A' → logprob: -16.201440811157227
    7. ' [' → logprob: -16.326440811157227
    8. '[u' → logprob: -16.576440811157227
    9. '[
' → logprob: -16.701440811157227
    10. '[c' → logprob: -16.951440811157227

Token 117: '].' (ID: 1651)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6548954248428345
    2. ').' → logprob: -0.7798954248428345
    3. '].' → logprob: -4.404895305633545
    4. '.append' → logprob: -5.279895305633545
    5. '       ' → logprob: -6.779895305633545
    6. ')' → logprob: -6.779895305633545
    7. '   ' → logprob: -6.904895305633545
    8. '.' → logprob: -7.654895305633545
    9. ' ,' → logprob: -7.654895305633545
    10. '           ' → logprob: -9.404895782470703

Token 118: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.704273118884885e-07
    2. '.append' → logprob: -15.125000953674316
    3. ' append' → logprob: -15.500000953674316
    4. 'appen' → logprob: -15.500000953674316
    5. '	append' → logprob: -17.0
    6. 'app' → logprob: -18.25
    7. '```' → logprob: -20.5
    8. 'Append' → logprob: -20.625
    9. '   ' → logprob: -20.875
    10. ' ' → logprob: -21.0

Token 119: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.717296517104842e-05
    2. ' (' → logprob: -10.875057220458984
    3. '(a' → logprob: -11.125057220458984
    4. ' ((' → logprob: -11.250057220458984
    5. '(' → logprob: -11.500057220458984
    6. '(b' → logprob: -15.125057220458984
    7. ' ' → logprob: -17.250057220458984
    8. '(
' → logprob: -17.250057220458984
    9. ',' → logprob: -19.250057220458984
    10. ')' → logprob: -19.375057220458984

Token 120: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.404745439183898e-05
    2. ' a' → logprob: -10.62503433227539
    3. '(a' → logprob: -11.87503433227539
    4. ',a' → logprob: -13.12503433227539
    5. ',' → logprob: -14.37503433227539
    6. ')a' → logprob: -16.50003433227539
    7. '	a' → logprob: -17.25003433227539
    8. ' (' → logprob: -17.25003433227539
    9. '(' → logprob: -17.37503433227539
    10. 'c' → logprob: -18.00003433227539

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.5027299822540954e-05
    2. ' ,' → logprob: -9.875055313110352
    3. ',c' → logprob: -12.625055313110352
    4. 'c' → logprob: -16.87505531311035
    5. ',
' → logprob: -17.00005531311035
    6. '),' → logprob: -17.50005531311035
    7. '‌,' → logprob: -17.75005531311035
    8. '```' → logprob: -18.87505531311035
    9. '   ' → logprob: -19.12505531311035
    10. ' ' → logprob: -19.25005531311035

Token 122: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.012514007277786732
    2. 'c' → logprob: -4.387514114379883
    3. ' ' → logprob: -13.387514114379883
    4. ' ' → logprob: -13.387514114379883
    5. ')c' → logprob: -15.012514114379883
    6. ' 
' → logprob: -15.137514114379883
    7. '	c' → logprob: -15.637514114379883
    8. '<|end|>' → logprob: -16.137514114379883
    9. ',' → logprob: -16.262514114379883
    10. '```' → logprob: -16.387514114379883

Token 123: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06198393553495407
    2. '))' → logprob: -2.811983823776245
    3. ' )' → logprob: -11.686984062194824
    4. ')
' → logprob: -12.561984062194824
    5. ')))' → logprob: -13.686984062194824
    6. '   ' → logprob: -13.811984062194824
    7. '))
' → logprob: -13.936984062194824
    8. ' ))' → logprob: -14.686984062194824
    9. ')}' → logprob: -14.936984062194824
    10. ',' → logprob: -15.186984062194824

Token 124: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.09226763248443604
    2. '   ' → logprob: -3.2172675132751465
    3. 'visited' → logprob: -4.3422675132751465
    4. 'distance' → logprob: -4.5922675132751465
    5. 'mst' → logprob: -4.9672675132751465
    6. ' dist' → logprob: -5.8422675132751465
    7. 'start' → logprob: -5.8422675132751465
    8. 'total' → logprob: -5.9672675132751465
    9. '    
' → logprob: -6.2172675132751465
    10. 'parent' → logprob: -6.3422675132751465

Token 125: ' def' (ID: 1056)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08377805352210999
    2. 'start' → logprob: -3.583778142929077
    3. 'distance' → logprob: -3.958778142929077
    4. 'visited' → logprob: -3.958778142929077
    5. 'def' (adapté à ' def') → logprob: -5.958777904510498
    6. '   ' → logprob: -6.208777904510498
    7. 'pq' → logprob: -6.583777904510498
    8. 'parent' → logprob: -6.708777904510498
    9. 'total' → logprob: -6.833777904510498
    10. 'mst' → logprob: -6.958777904510498

Token 126: ' d' (ID: 272)
  Prédit: ' prim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prim' → logprob: -0.13861198723316193
    2. ' d' → logprob: -2.1386120319366455
    3. 'prim' → logprob: -4.638611793518066
    4. 'd' → logprob: -6.638611793518066
    5. 'Prim' → logprob: -8.013611793518066
    6. ' kr' → logprob: -9.638611793518066
    7. ' mst' → logprob: -9.763611793518066
    8. ' Prim' → logprob: -9.888611793518066
    9. ' dfs' → logprob: -10.138611793518066
    10. ' ' → logprob: -10.513611793518066

Token 127: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.20236577093601227
    2. 'i' → logprob: -2.2023658752441406
    3. 'ijk' → logprob: -3.2023658752441406
    4. 'ij' → logprob: -3.4523658752441406
    5. '_' → logprob: -9.45236587524414
    6. '[i' → logprob: -9.70236587524414
    7. '_i' → logprob: -10.32736587524414
    8. 'jik' → logprob: -10.45236587524414
    9. '(i' → logprob: -10.57736587524414
    10. 'j' → logprob: -10.82736587524414

Token 128: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03221956267952919
    2. '(start' → logprob: -3.657219648361206
    3. '(node' → logprob: -6.157219409942627
    4. '(graph' → logprob: -6.782219409942627
    5. '(source' → logprob: -6.782219409942627
    6. '(s' → logprob: -7.157219409942627
    7. ' (' → logprob: -7.782219409942627
    8. '(src' → logprob: -9.532219886779785
    9. '(u' → logprob: -9.782219886779785
    10. '(root' → logprob: -10.157219886779785

Token 129: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011164903844473884
    2. ' ,' → logprob: -9.12511157989502
    3. ',s' → logprob: -13.75011157989502
    4. ',start' → logprob: -14.37511157989502
    5. ',node' → logprob: -14.50011157989502
    6. '):' → logprob: -15.87511157989502
    7. ',v' → logprob: -15.87511157989502
    8. ',n' → logprob: -16.000112533569336
    9. '   ' → logprob: -16.500112533569336
    10. ',u' → logprob: -16.875112533569336

Token 130: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8095823526382446
    2. 'dist' → logprob: -0.9345823526382446
    3. '	dist' → logprob: -2.934582233428955
    4. '       ' → logprob: -3.184582233428955
    5. ' distances' → logprob: -3.559582233428955
    6. ' dist' → logprob: -3.684582233428955
    7. '    ' → logprob: -4.934582233428955
    8. '(dist' → logprob: -6.184582233428955
    9. '_dist' → logprob: -6.434582233428955
    10. 'distance' → logprob: -7.809582233428955

Token 131: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.1632830947637558
    2. ' dist' → logprob: -1.913283109664917
    3. 'import' → logprob: -6.538282871246338
    4. ' distances' → logprob: -7.038282871246338
    5. '   ' → logprob: -8.413283348083496
    6. ' import' → logprob: -8.538283348083496
    7. 'distance' → logprob: -8.663283348083496
    8. ' distance' → logprob: -10.038283348083496
    9. '
' → logprob: -10.288283348083496
    10. '	dist' → logprob: -10.538283348083496

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026353247463703156
    2. '=' → logprob: -3.651353359222412
    3. '[' → logprob: -10.401352882385254
    4. '=[' → logprob: -11.401352882385254
    5. ' =[' → logprob: -12.651352882385254
    6. '[]' → logprob: -12.901352882385254
    7. '=[]' → logprob: -13.401352882385254
    8. ',' → logprob: -13.651352882385254
    9. '[s' → logprob: -13.776352882385254
    10. 's' → logprob: -14.151352882385254

Token 133: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25291499495506287
    2. ' [' → logprob: -1.5029150247573853
    3. '[int' → logprob: -7.377914905548096
    4. '[n' → logprob: -8.627915382385254
    5. '[N' → logprob: -9.627915382385254
    6. '{' → logprob: -10.252915382385254
    7. '[node' → logprob: -10.377915382385254
    8. '[len' → logprob: -12.002915382385254
    9. '[num' → logprob: -12.127915382385254
    10. '[min' → logprob: -12.252915382385254

Token 134: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -8.590104698669165e-05
    2. '10' → logprob: -9.500085830688477
    3. 'int' → logprob: -11.625085830688477
    4. ' float' → logprob: -13.625085830688477
    5. '1' → logprob: -14.375085830688477
    6. '(float' → logprob: -15.625085830688477
    7. 'sys' → logprob: -16.750085830688477
    8. '100' → logprob: -17.000085830688477
    9. '0' → logprob: -18.000085830688477
    10. '-' → logprob: -18.250085830688477

Token 135: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -4.000763510703109e-05
    2. ''in' → logprob: -10.750040054321289
    3. '("' → logprob: -11.375040054321289
    4. '(' → logprob: -12.375040054321289
    5. ''' → logprob: -13.000040054321289
    6. '(in' → logprob: -15.000040054321289
    7. 'inf' → logprob: -16.75004005432129
    8. '"' → logprob: -17.87504005432129
    9. ''s' → logprob: -18.00004005432129
    10. ' ('' → logprob: -18.12504005432129

Token 136: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.6240566083070007e-06
    2. 'in' → logprob: -13.500001907348633
    3. ' inf' → logprob: -16.375001907348633
    4. ''in' → logprob: -16.750001907348633
    5. '')' → logprob: -17.750001907348633
    6. ''' → logprob: -18.125001907348633
    7. '-inf' → logprob: -18.250001907348633
    8. '_inf' → logprob: -18.500001907348633
    9. 'i' → logprob: -18.750001907348633
    10. '.inf' → logprob: -19.125001907348633

Token 137: '')]' (ID: 94377)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4751763641834259
    2. '')]' → logprob: -0.9751763343811035
    3. ']' → logprob: -7.3501763343811035
    4. ')' → logprob: -8.100176811218262
    5. '')' → logprob: -9.350176811218262
    6. '']' → logprob: -10.225176811218262
    7. '")]' → logprob: -11.850176811218262
    8. ' '' → logprob: -12.100176811218262
    9. ''' → logprob: -12.350176811218262
    10. '),' → logprob: -12.850176811218262

Token 138: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43266957998275757
    2. '<|end|>' → logprob: -2.4326696395874023
    3. ' for' → logprob: -2.8076696395874023
    4. ',' → logprob: -2.8076696395874023
    5. ' ]' → logprob: -3.3076696395874023
    6. ')' → logprob: -4.057669639587402
    7. ' ' → logprob: -4.307669639587402
    8. 'for' → logprob: -4.432669639587402
    9. ' 
' → logprob: -4.557669639587402
    10. '
' → logprob: -4.807669639587402

Token 139: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00033581978641450405
    2. ' N' → logprob: -8.000335693359375
    3. '(N' → logprob: -14.875335693359375
    4. '   ' → logprob: -17.875335693359375
    5. '	N' → logprob: -18.250335693359375
    6. '(' → logprob: -19.000335693359375
    7. ' ' → logprob: -19.125335693359375
    8. 'n' → logprob: -20.000335693359375
    9. 'len' → logprob: -20.375335693359375
    10. ' ' → logprob: -20.625335693359375

Token 140: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009381442330777645
    2. '<|end|>' → logprob: -5.634381294250488
    3. '
' → logprob: -6.384381294250488
    4. ')' → logprob: -7.134381294250488
    5. '' → logprob: -7.259381294250488
    6. ' 
' → logprob: -7.259381294250488
    7. '       ' → logprob: -7.259381294250488
    8. '    
' → logprob: -8.634381294250488
    9. '[' → logprob: -9.009381294250488
    10. '  
' → logprob: -9.134381294250488

Token 141: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.19894030690193176
    2. '<|end|>' → logprob: -2.3239402770996094
    3. ' dist' → logprob: -3.1989402770996094
    4. '	dist' → logprob: -4.073940277099609
    5. '
' → logprob: -4.948940277099609
    6. '       ' → logprob: -5.323940277099609
    7. '   ' → logprob: -6.073940277099609
    8. ' 
' → logprob: -6.198940277099609
    9. ' ' → logprob: -6.323940277099609
    10. 's' → logprob: -6.698940277099609

Token 142: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.048608142882585526
    2. ' dist' → logprob: -3.0486080646514893
    3. '   ' → logprob: -11.54860782623291
    4. 's' → logprob: -12.54860782623291
    5. '
' → logprob: -13.17360782623291
    6. '	dist' → logprob: -13.17360782623291
    7. ' s' → logprob: -13.79860782623291
    8. 'd' → logprob: -14.04860782623291
    9. ' 
' → logprob: -14.67360782623291
    10. '0' → logprob: -14.79860782623291

Token 143: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0013272607466205955
    2. '[' → logprob: -6.626327037811279
    3. ' [' → logprob: -14.626327514648438
    4. '[src' → logprob: -15.126327514648438
    5. 's' → logprob: -15.876327514648438
    6. '[start' → logprob: -16.001327514648438
    7. '[S' → logprob: -16.251327514648438
    8. '```' → logprob: -16.626327514648438
    9. '[source' → logprob: -16.876327514648438
    10. '	s' → logprob: -17.376327514648438

Token 144: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023009662982076406
    2. ']=' → logprob: -6.25230073928833
    3. ' ]' → logprob: -8.127301216125488
    4. '=' → logprob: -9.877301216125488
    5. ' =' → logprob: -11.127301216125488
    6. '[' → logprob: -11.752301216125488
    7. ')' → logprob: -13.752301216125488
    8. 's' → logprob: -14.002301216125488
    9. '[s' → logprob: -15.127301216125488
    10. ' ' → logprob: -15.752301216125488

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327101588249207
    2. '=' → logprob: -1.3132710456848145
    3. '[' → logprob: -12.188270568847656
    4. ']' → logprob: -13.688270568847656
    5. ')' → logprob: -14.563270568847656
    6. '<|end|>' → logprob: -14.563270568847656
    7. ']=' → logprob: -14.938270568847656
    8. ' =
' → logprob: -15.063270568847656
    9. ' ' → logprob: -15.188270568847656
    10. '.=' → logprob: -15.688270568847656

Token 146: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.125028610229492
    4. ' ' → logprob: -17.312528610229492
    5. '۰' → logprob: -17.625028610229492
    6. '  ' → logprob: -18.250028610229492
    7. '０' → logprob: -18.937528610229492
    8. '
' → logprob: -18.937528610229492
    9. '00' → logprob: -19.125028610229492
    10. 's' → logprob: -19.250028610229492

Token 147: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -17.937501907348633
    4. 's' → logprob: -18.875001907348633
    5. '   ' → logprob: -19.000001907348633
    6. '０' → logprob: -19.062501907348633
    7. '00' → logprob: -20.062501907348633
    8. '1' → logprob: -20.187501907348633
    9. ' ' → logprob: -20.187501907348633
    10. '٠' → logprob: -20.250001907348633

Token 148: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020446468144655228
    2. '<|end|>' → logprob: -4.395446300506592
    3. '   ' → logprob: -5.395446300506592
    4. '' → logprob: -6.770446300506592
    5. '
' → logprob: -7.020446300506592
    6. '    
' → logprob: -7.770446300506592
    7. ' 
' → logprob: -8.27044677734375
    8. '       ' → logprob: -8.39544677734375
    9. '  
' → logprob: -9.39544677734375
    10. '<|end|>' → logprob: -10.02044677734375

Token 149: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6783734560012817
    2. '   ' → logprob: -0.8033734560012817
    3. '<|end|>' → logprob: -3.803373336791992
    4. '    
' → logprob: -4.803373336791992
    5. ' 
' → logprob: -5.928373336791992
    6. '' → logprob: -5.928373336791992
    7. '  
' → logprob: -6.678373336791992
    8. '
' → logprob: -6.678373336791992
    9. '       ' → logprob: -7.053373336791992
    10. ' ' → logprob: -7.178373336791992

Token 150: ' h' (ID: 312)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.9136873483657837
    2. 'pq' → logprob: -1.1636873483657837
    3. 'hq' → logprob: -1.4136873483657837
    4. 'queue' → logprob: -3.163687229156494
    5. 'q' → logprob: -7.163687229156494
    6. 'h' (adapté à ' h') → logprob: -8.913687705993652
    7. '   ' → logprob: -8.913687705993652
    8. ' heap' → logprob: -10.038687705993652
    9. 'priority' → logprob: -12.038687705993652
    10. ' pq' → logprob: -12.163687705993652

Token 151: 'q' (ID: 80)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2927075922489166
    2. ' =' → logprob: -1.7927075624465942
    3. '=' → logprob: -2.792707681655884
    4. 'q' → logprob: -3.792707681655884
    5. 'p' → logprob: -6.667707443237305
    6. '=[]' → logprob: -6.792707443237305
    7. 'eep' → logprob: -8.167707443237305
    8. '   ' → logprob: -8.542707443237305
    9. 'op' → logprob: -9.292707443237305
    10. '=[]
' → logprob: -9.417707443237305

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016069328412413597
    2. '=' → logprob: -4.141069412231445
    3. '=[]' → logprob: -10.766069412231445
    4. ' ' → logprob: -12.016069412231445
    5. 'q' → logprob: -12.641069412231445
    6. ',' → logprob: -13.516069412231445
    7. '.' → logprob: -13.766069412231445
    8. '.append' → logprob: -14.766069412231445
    9. '.heap' → logprob: -14.766069412231445
    10. ')' → logprob: -15.141069412231445

Token 153: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0034524109214544296
    2. '[]' → logprob: -6.253452301025391
    3. ' [(' → logprob: -6.503452301025391
    4. '[' → logprob: -11.00345230102539
    5. '[]
' → logprob: -12.37845230102539
    6. ' []' → logprob: -12.62845230102539
    7. '[((' → logprob: -15.62845230102539
    8. '[
' → logprob: -17.87845230102539
    9. '[h' → logprob: -17.87845230102539
    10. ' [' → logprob: -17.87845230102539

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010664248111424968
    2. ' ' → logprob: -9.250106811523438
    3. '(' → logprob: -12.250106811523438
    4. 's' → logprob: -12.750106811523438
    5. 'dist' → logprob: -13.000106811523438
    6. '(dist' → logprob: -15.875106811523438
    7. ' dist' → logprob: -16.375106811523438
    8. '   ' → logprob: -16.625106811523438
    9. ')' → logprob: -16.875106811523438
    10. ' (' → logprob: -17.125106811523438

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013344056205824018
    2. ',s' → logprob: -6.626334190368652
    3. 's' → logprob: -12.376334190368652
    4. ' ,' → logprob: -12.626334190368652
    5. ',
' → logprob: -14.626334190368652
    6. ' s' → logprob: -15.001334190368652
    7. ')' → logprob: -16.50133514404297
    8. '0' → logprob: -17.25133514404297
    9. '，' → logprob: -17.25133514404297
    10. '```' → logprob: -18.12633514404297

Token 156: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002475777640938759
    2. ' s' → logprob: -6.002475738525391
    3. '{s' → logprob: -18.62747573852539
    4. '<|end|>' → logprob: -18.62747573852539
    5. ')' → logprob: -18.75247573852539
    6. '_s' → logprob: -18.75247573852539
    7. '(s' → logprob: -19.25247573852539
    8. ')s' → logprob: -19.37747573852539
    9. '	s' → logprob: -19.50247573852539
    10. ' ' → logprob: -19.50247573852539

Token 157: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0004348413785919547
    2. ')' → logprob: -8.000434875488281
    3. ')]
' → logprob: -9.500434875488281
    4. ']' → logprob: -11.750434875488281
    5. '),' → logprob: -12.500434875488281
    6. ' )' → logprob: -12.500434875488281
    7. '   ' → logprob: -12.875434875488281
    8. '))' → logprob: -13.750434875488281
    9. ')]

' → logprob: -13.750434875488281
    10. ')])' → logprob: -13.750434875488281

Token 158: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05912258103489876
    2. ' while' → logprob: -3.9341225624084473
    3. '       ' → logprob: -4.559122562408447
    4. '	while' → logprob: -4.684122562408447
    5. 'while' → logprob: -5.059122562408447
    6. '<|end|>' → logprob: -5.559122562408447
    7. ')' → logprob: -6.184122562408447
    8. '    
' → logprob: -6.434122562408447
    9. ' 
' → logprob: -6.809122562408447
    10. ',' → logprob: -6.934122562408447

Token 159: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.19199974834918976
    2. ' while' → logprob: -1.9419997930526733
    3. '   ' → logprob: -3.941999673843384
    4. '	while' → logprob: -4.441999912261963
    5. '       ' → logprob: -10.566999435424805
    6. '    ' → logprob: -11.316999435424805
    7. ' ' → logprob: -11.566999435424805
    8. ')' → logprob: -11.566999435424805
    9. '    
' → logprob: -11.566999435424805
    10. ' 
' → logprob: -12.316999435424805

Token 160: ' h' (ID: 312)
  Prédit: 'hq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hq' → logprob: -0.062034230679273605
    2. ' h' → logprob: -2.8120341300964355
    3. '	h' → logprob: -9.812034606933594
    4. 'h' → logprob: -11.562034606933594
    5. '(h' → logprob: -13.812034606933594
    6. ' ' → logprob: -14.562034606933594
    7. '<h' → logprob: -15.687034606933594
    8. ' ' → logprob: -15.937034606933594
    9. '_h' → logprob: -16.312034606933594
    10. '   ' → logprob: -16.562034606933594

Token 161: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0007692479994148016
    2. '[' → logprob: -7.625769138336182
    3. 'e' → logprob: -8.50076961517334
    4. 'c' → logprob: -11.75076961517334
    5. '
' → logprob: -12.12576961517334
    6. 'Q' → logprob: -12.25076961517334
    7. '   ' → logprob: -12.43826961517334
    8. '[
' → logprob: -12.56326961517334
    9. '```' → logprob: -12.68826961517334
    10. '       ' → logprob: -12.81326961517334

Token 162: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006026438437402248
    2. ':
' → logprob: -5.256026268005371
    3. '):' → logprob: -7.756026268005371
    4. '[' → logprob: -8.631026268005371
    5. '.pop' → logprob: -9.381026268005371
    6. ',' → logprob: -10.006026268005371
    7. '):
' → logprob: -11.131026268005371
    8. ' and' → logprob: -11.131026268005371
    9. 'and' → logprob: -12.131026268005371
    10. ']:' → logprob: -12.756026268005371

Token 163: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09437859058380127
    2. ',' → logprob: -2.8443784713745117
    3. '           ' → logprob: -3.5943784713745117
    4. '   ' → logprob: -7.219378471374512
    5. ' ,' → logprob: -7.219378471374512
    6. ' ' → logprob: -7.219378471374512
    7. ')' → logprob: -7.469378471374512
    8. '        ' → logprob: -7.469378471374512
    9. '    ' → logprob: -8.719378471374512
    10. '      ' → logprob: -8.969378471374512

Token 164: ' cd' (ID: 24852)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.9246562719345093
    2. 'd' → logprob: -1.0496562719345093
    3. ' d' → logprob: -1.9246562719345093
    4. 'dist' → logprob: -2.674656391143799
    5. ' cost' → logprob: -4.174656391143799
    6. ' dist' → logprob: -4.299656391143799
    7. 'c' → logprob: -5.299656391143799
    8. ' c' → logprob: -6.924656391143799
    9. '   ' → logprob: -7.049656391143799
    10. 'w' → logprob: -7.799656391143799

Token 165: ',' (ID: 11)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.4899784326553345
    2. ',' → logprob: -0.9899784326553345
    3. 'istance' → logprob: -4.239978313446045
    4. ' ,' → logprob: -7.239978313446045
    5. 'cost' → logprob: -8.239978790283203
    6. 'ost' → logprob: -8.989978790283203
    7. 'st' → logprob: -9.239978790283203
    8. '_cost' → logprob: -9.739978790283203
    9. 'dist' → logprob: -9.864978790283203
    10. 'ists' → logprob: -11.864978790283203

Token 166: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.48764878511428833
    2. 'u' → logprob: -1.2376487255096436
    3. ' v' → logprob: -2.9876487255096436
    4. 'v' → logprob: -3.2376487255096436
    5. ' node' → logprob: -5.737648963928223
    6. 'node' → logprob: -6.862648963928223
    7. 'cv' → logprob: -7.237648963928223
    8. 'cu' → logprob: -8.112648963928223
    9. 'cur' → logprob: -8.362648963928223
    10. ' cv' → logprob: -8.487648963928223

Token 167: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5232499241828918
    2. '=' → logprob: -0.8982499241828918
    3. ')' → logprob: -9.273249626159668
    4. ')=' → logprob: -10.523249626159668
    5. '   ' → logprob: -13.023249626159668
    6. ' ' → logprob: -13.898249626159668
    7. '=u' → logprob: -14.523249626159668
    8. ']' → logprob: -15.023249626159668
    9. ' )' → logprob: -15.023249626159668
    10. ',' → logprob: -15.398249626159668

Token 168: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.2071240395307541
    2. 'heap' → logprob: -1.7071239948272705
    3. ' he' → logprob: -5.70712423324585
    4. 'he' → logprob: -6.08212423324585
    5. '(heap' → logprob: -10.332123756408691
    6. 'hq' → logprob: -10.707123756408691
    7. '.heap' → logprob: -11.332123756408691
    8. ' ' → logprob: -11.957123756408691
    9. ' ' → logprob: -12.582123756408691
    10. 'h' → logprob: -12.832123756408691

Token 169: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -15.625000953674316
    3. '[' → logprob: -15.750000953674316
    4. 'p' → logprob: -16.0
    5. '	q' → logprob: -16.0
    6. '[q' → logprob: -17.375
    7. '
' → logprob: -18.125
    8. ')' → logprob: -18.25
    9. '

' → logprob: -18.5
    10. 'ify' → logprob: -18.5

Token 170: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -9.014684110297821e-06
    2. '.' → logprob: -12.625008583068848
    3. 'he' → logprob: -13.000008583068848
    4. 'q' → logprob: -13.375008583068848
    5. ' he' → logprob: -13.750008583068848
    6. '.pop' → logprob: -14.875008583068848
    7. '.heap' → logprob: -15.375008583068848
    8. ' .' → logprob: -16.125009536743164
    9. '.h' → logprob: -17.625009536743164
    10. '.q' → logprob: -17.750009536743164

Token 171: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0005592276575043797
    2. 'pp' → logprob: -7.500559329986572
    3. 'ap' → logprob: -12.125558853149414
    4. 'p' → logprob: -15.125558853149414
    5. 'q' → logprob: -15.125558853149414
    6. 'pop' → logprob: -16.500558853149414
    7. 'qp' → logprob: -16.750558853149414
    8. '[' → logprob: -16.875558853149414
    9. '```' → logprob: -18.000558853149414
    10. 'appen' → logprob: -18.250558853149414

Token 172: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0024779161904007196
    2. 'p' → logprob: -6.502478122711182
    3. 'app' → logprob: -7.752478122711182
    4. 'pp' → logprob: -8.127477645874023
    5. 'ush' → logprob: -8.502477645874023
    6. 'ap' → logprob: -10.502477645874023
    7. 'q' → logprob: -11.877477645874023
    8. '[' → logprob: -12.502477645874023
    9. 'pop' → logprob: -12.502477645874023
    10. '```' → logprob: -14.002477645874023

Token 173: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.9027791495318525e-05
    2. '(' → logprob: -11.000019073486328
    3. '(q' → logprob: -13.375019073486328
    4. ',h' → logprob: -15.625019073486328
    5. '(heap' → logprob: -15.625019073486328
    6. '(
' → logprob: -16.000019073486328
    7. ')' → logprob: -17.000019073486328
    8. '(u' → logprob: -17.000019073486328
    9. ' (' → logprob: -17.125019073486328
    10. '(n' → logprob: -17.125019073486328

Token 174: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0280383548888494e-06
    2. ')' → logprob: -14.500000953674316
    3. 'Q' → logprob: -15.750000953674316
    4. '[' → logprob: -16.000001907348633
    5. '_q' → logprob: -16.500001907348633
    6. '[q' → logprob: -16.875001907348633
    7. '	q' → logprob: -17.625001907348633
    8. ',' → logprob: -17.750001907348633
    9. '(q' → logprob: -18.250001907348633
    10. ')
' → logprob: -18.625001907348633

Token 175: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008721290156245232
    2. ')
' → logprob: -4.758721351623535
    3. '           ' → logprob: -9.258721351623535
    4. '       ' → logprob: -12.383721351623535
    5. ' )' → logprob: -12.383721351623535
    6. ')
' → logprob: -14.133721351623535
    7. '               ' → logprob: -14.383721351623535
    8. '   ' → logprob: -14.508721351623535
    9. ')

' → logprob: -14.758721351623535
    10. ' )
' → logprob: -15.133721351623535

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.054214585572481155
    2. '       ' → logprob: -3.4292144775390625
    3. '
' → logprob: -4.6792144775390625
    4. '<|end|>' → logprob: -4.9292144775390625
    5. '   ' → logprob: -5.9292144775390625
    6. ' 
' → logprob: -7.9292144775390625
    7. '            
' → logprob: -8.429214477539062
    8. '    
' → logprob: -8.929214477539062
    9. '        
' → logprob: -9.304214477539062
    10. '  
' → logprob: -9.429214477539062

Token 177: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5260214805603027
    2. '       ' → logprob: -1.2760214805603027
    3. ' if' → logprob: -2.7760214805603027
    4. '
' → logprob: -3.7760214805603027
    5. '   ' → logprob: -3.7760214805603027
    6. 'if' (adapté à ' if') → logprob: -4.276021480560303
    7. '<|end|>' → logprob: -6.026021480560303
    8. ' 
' → logprob: -6.151021480560303
    9. '    ' → logprob: -7.151021480560303
    10. '    
' → logprob: -7.776021480560303

Token 178: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.8518774509429932
    2. 'dist' → logprob: -1.1018774509429932
    3. 'cd' → logprob: -1.8518774509429932
    4. ' cd' → logprob: -2.476877450942993
    5. '	cd' → logprob: -9.101877212524414
    6. '	dist' → logprob: -9.726877212524414
    7. '   ' → logprob: -11.851877212524414
    8. '(cd' → logprob: -12.726877212524414
    9. '```' → logprob: -12.851877212524414
    10. ' ' → logprob: -12.976877212524414

Token 179: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -8.180258191714529e-06
    2. '[' → logprob: -12.250008583068848
    3. 'u' → logprob: -12.625008583068848
    4. '<u' → logprob: -17.00000762939453
    5. '```' → logprob: -17.37500762939453
    6. '[s' → logprob: -17.75000762939453
    7. ' [' → logprob: -18.00000762939453
    8. '[c' → logprob: -18.12500762939453
    9. '	u' → logprob: -19.00000762939453
    10. 's' → logprob: -19.25000762939453

Token 180: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.10505078732967377
    2. ' <' → logprob: -2.355050802230835
    3. '<u' → logprob: -5.480050563812256
    4. '<int' → logprob: -8.105051040649414
    5. '!=' → logprob: -9.730051040649414
    6. '<ll' → logprob: -9.855051040649414
    7. '<len' → logprob: -10.230051040649414
    8. '[' → logprob: -10.605051040649414
    9. '<n' → logprob: -10.605051040649414
    10. '<v' → logprob: -10.730051040649414

Token 181: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.13053572177886963
    2. ' <' → logprob: -2.13053560256958
    3. '<u' → logprob: -5.75553560256958
    4. '<int' → logprob: -9.005536079406738
    5. '<v' → logprob: -9.630536079406738
    6. '<c' → logprob: -10.255536079406738
    7. '<n' → logprob: -10.255536079406738
    8. '<ll' → logprob: -10.380536079406738
    9. '<len' → logprob: -10.755536079406738
    10. '[' → logprob: -11.005536079406738

Token 182: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0008072483469732106
    2. ' cd' → logprob: -7.125807285308838
    3. '	cd' → logprob: -12.87580680847168
    4. 'cdn' → logprob: -15.87580680847168
    5. '_cd' → logprob: -16.12580680847168
    6. '(cd' → logprob: -17.37580680847168
    7. ' ' → logprob: -18.00080680847168
    8. '.cd' → logprob: -18.37580680847168
    9. 'cdr' → logprob: -19.25080680847168
    10. '```' → logprob: -19.75080680847168

Token 183: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07110323756933212
    2. ':
' → logprob: -2.69610333442688
    3. '       ' → logprob: -6.821103096008301
    4. '           ' → logprob: -10.5711030960083
    5. 'continue' → logprob: -11.0711030960083
    6. ' continue' → logprob: -11.0711030960083
    7. '   ' → logprob: -11.8211030960083
    8. '	continue' → logprob: -12.0711030960083
    9. ':
' → logprob: -13.4461030960083
    10. '               ' → logprob: -13.6961030960083

Token 184: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1407998949289322
    2. 'continue' → logprob: -2.8907999992370605
    3. ' continue' → logprob: -3.1407999992370605
    4. '               ' → logprob: -4.1407999992370605
    5. '           ' → logprob: -4.2657999992370605
    6. ':' → logprob: -6.3907999992370605
    7. '	continue' → logprob: -7.6407999992370605
    8. '   ' → logprob: -8.890799522399902
    9. ':
' → logprob: -9.140799522399902
    10. '_continue' → logprob: -9.265799522399902

Token 185: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.2602204978466034
    2. 'continue' (adapté à ' continue') → logprob: -1.5102205276489258
    3. '       ' → logprob: -4.885220527648926
    4. '	continue' → logprob: -7.760220527648926
    5. '           ' → logprob: -8.635220527648926
    6. '_continue' → logprob: -10.135220527648926
    7. '               ' → logprob: -10.635220527648926
    8. '   ' → logprob: -10.635220527648926
    9. 'contin' → logprob: -12.760220527648926
    10. ' continues' → logprob: -13.510220527648926

Token 186: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019723230972886086
    2. '       ' → logprob: -4.269723415374756
    3. '            
' → logprob: -6.644723415374756
    4. '
' → logprob: -6.894723415374756
    5. '   ' → logprob: -7.144723415374756
    6. ' 
' → logprob: -7.394723415374756
    7. '    
' → logprob: -7.519723415374756
    8. ' for' → logprob: -8.144722938537598
    9. '        
' → logprob: -8.394722938537598
    10. '  
' → logprob: -8.519722938537598

Token 187: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14060436189174652
    2. '       ' → logprob: -3.015604257583618
    3. '   ' → logprob: -3.265604257583618
    4. ' for' → logprob: -3.265604257583618
    5. '            
' → logprob: -6.515604496002197
    6. 'for' → logprob: -6.765604496002197
    7. '    
' → logprob: -7.140604496002197
    8. ' 
' → logprob: -7.390604496002197
    9. '
' → logprob: -7.515604496002197
    10. '    ' → logprob: -8.515604019165039

Token 188: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.29054051637649536
    2. 'for' (adapté à ' for') → logprob: -1.9155404567718506
    3. '   ' → logprob: -2.4155404567718506
    4. '       ' → logprob: -4.29054069519043
    5. '           ' → logprob: -6.66554069519043
    6. '	for' → logprob: -8.79054069519043
    7. ' ' → logprob: -9.04054069519043
    8. '   ' → logprob: -9.29054069519043
    9. ' 
' → logprob: -10.04054069519043
    10. ' ' → logprob: -10.04054069519043

Token 189: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.029793769121170044
    2. ' v' → logprob: -3.5297937393188477
    3. '(v' → logprob: -10.154793739318848
    4. '	v' → logprob: -13.404793739318848
    5. 'to' → logprob: -13.529793739318848
    6. 'nv' → logprob: -15.154793739318848
    7. '<v' → logprob: -15.279793739318848
    8. ',v' → logprob: -15.529793739318848
    9. 'vv' → logprob: -15.779793739318848
    10. '_v' → logprob: -15.779793739318848

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038682064041495323
    2. ' ,' → logprob: -8.250387191772461
    3. ',w' → logprob: -9.500387191772461
    4. ',c' → logprob: -10.000387191772461
    5. 'w' → logprob: -13.250387191772461
    6. '‌,' → logprob: -14.000387191772461
    7. 'c' → logprob: -14.625387191772461
    8. ',d' → logprob: -14.875387191772461
    9. ',v' → logprob: -15.000387191772461
    10. '_,' → logprob: -15.500387191772461

Token 191: ' cost' (ID: 3097)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.12784789502620697
    2. ' w' → logprob: -2.127847909927368
    3. 'cost' → logprob: -7.377847671508789
    4. ' cost' → logprob: -8.627847671508789
    5. 'c' → logprob: -9.752847671508789
    6. 'weight' → logprob: -10.752847671508789
    7. ' c' → logprob: -11.627847671508789
    8. 'd' → logprob: -11.627847671508789
    9. 'wt' → logprob: -12.252847671508789
    10. 'wv' → logprob: -12.377847671508789

Token 192: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02325759083032608
    2. 'in' → logprob: -3.7732574939727783
    3. '	in' → logprob: -12.7732572555542
    4. ')' → logprob: -12.8982572555542
    5. ' ' → logprob: -13.0232572555542
    6. 's' → logprob: -13.6482572555542
    7. ',' → logprob: -14.0232572555542
    8. ' )' → logprob: -14.8982572555542
    9. '_in' → logprob: -14.8982572555542
    10. ' ' → logprob: -15.5232572555542

Token 193: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6933255195617676
    2. 'graph' → logprob: -0.6933255195617676
    3. '	graph' → logprob: -8.81832504272461
    4. '(graph' → logprob: -10.69332504272461
    5. ' ' → logprob: -12.31832504272461
    6. '   ' → logprob: -14.19332504272461
    7. 'raph' → logprob: -14.56832504272461
    8. '_graph' → logprob: -15.31832504272461
    9. 'graphql' → logprob: -15.31832504272461
    10. 'space' → logprob: -15.56832504272461

Token 194: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.3663626305060461e-05
    2. ':' → logprob: -11.87501335144043
    3. 'u' → logprob: -13.12501335144043
    4. '[' → logprob: -13.25001335144043
    5. '):' → logprob: -14.00001335144043
    6. ']' → logprob: -14.75001335144043
    7. '[v' → logprob: -14.87501335144043
    8. ')' → logprob: -15.25001335144043
    9. '(u' → logprob: -15.37501335144043
    10. '   ' → logprob: -15.37501335144043

Token 195: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18185624480247498
    2. '):
' → logprob: -1.8068562746047974
    3. ':' → logprob: -6.556856155395508
    4. ']:' → logprob: -7.931856155395508
    5. ' ):' → logprob: -9.556856155395508
    6. ')' → logprob: -9.681856155395508
    7. ']:
' → logprob: -9.931856155395508
    8. '):
' → logprob: -10.056856155395508
    9. ':
' → logprob: -10.556856155395508
    10. '       ' → logprob: -10.556856155395508

Token 196: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032693336252123117
    2. '           ' → logprob: -5.878269195556641
    3. '<|end|>' → logprob: -8.37826919555664
    4. ',' → logprob: -9.50326919555664
    5. ':' → logprob: -10.12826919555664
    6. '       ' → logprob: -10.75326919555664
    7. ' if' → logprob: -10.75326919555664
    8. '                
' → logprob: -11.12826919555664
    9. '            ' → logprob: -11.50326919555664
    10. '              ' → logprob: -11.62826919555664

Token 197: ' nd' (ID: 5914)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17739112675189972
    2. ' 
' → logprob: -2.8023910522460938
    3. ' ' → logprob: -3.0523910522460938
    4. ' if' → logprob: -4.052391052246094
    5. '                ' → logprob: -4.177391052246094
    6. '                
' → logprob: -5.177391052246094
    7. '                   ' → logprob: -5.427391052246094
    8. '<|end|>' → logprob: -5.677391052246094
    9. '           ' → logprob: -5.927391052246094
    10. ' new' → logprob: -6.802391052246094

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3870472013950348
    2. '=' → logprob: -1.1370471715927124
    3. 'ist' → logprob: -8.887046813964844
    4. 'istance' → logprob: -10.387046813964844
    5. ',' → logprob: -13.887046813964844
    6. ' ' → logprob: -14.012046813964844
    7. '>' → logprob: -14.012046813964844
    8. ')' → logprob: -14.012046813964844
    9. ' =
' → logprob: -14.012046813964844
    10. '=
' → logprob: -15.012046813964844

Token 199: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.6931595802307129
    2. ' cd' → logprob: -0.6931595802307129
    3. '	cd' → logprob: -12.068159103393555
    4. ' dist' → logprob: -12.318159103393555
    5. 'dist' → logprob: -13.818159103393555
    6. '(cd' → logprob: -13.943159103393555
    7. '_cd' → logprob: -15.443159103393555
    8. ' cds' → logprob: -16.818159103393555
    9. '.cd' → logprob: -17.193159103393555
    10. ' ' → logprob: -17.818159103393555

Token 200: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.055003587156534195
    2. '+' → logprob: -2.9300036430358887
    3. '+c' → logprob: -9.05500316619873
    4. ' ' → logprob: -13.43000316619873
    5. ' plus' → logprob: -14.05500316619873
    6. ' ' → logprob: -14.18000316619873
    7. '+C' → logprob: -14.55500316619873
    8. ' +
' → logprob: -15.05500316619873
    9. '＋' → logprob: -15.43000316619873
    10. '+k' → logprob: -16.430004119873047

Token 201: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.07889165729284286
    2. 'cost' → logprob: -2.5788917541503906
    3. '(cost' → logprob: -14.07889175415039
    4. 'c' → logprob: -14.32889175415039
    5. ' c' → logprob: -15.32889175415039
    6. ' ' → logprob: -16.45389175415039
    7. ' ' → logprob: -16.57889175415039
    8. '_cost' → logprob: -17.32889175415039
    9. ' kost' → logprob: -17.45389175415039
    10. ' kosten' → logprob: -18.82889175415039

Token 202: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019689571112394333
    2. '<|end|>' → logprob: -4.144689559936523
    3. '           ' → logprob: -6.894689559936523
    4. '                ' → logprob: -7.519689559936523
    5. '                   ' → logprob: -7.519689559936523
    6. ')' → logprob: -7.894689559936523
    7. '<|end|>' → logprob: -7.894689559936523
    8. '                
' → logprob: -8.394689559936523
    9. '              ' → logprob: -8.894689559936523
    10. '
' → logprob: -9.144689559936523

Token 203: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006932547548785806
    2. '<|end|>' → logprob: -7.500693321228027
    3. '                ' → logprob: -10.000693321228027
    4. '           ' → logprob: -10.250693321228027
    5. '              ' → logprob: -10.875693321228027
    6. '                
' → logprob: -11.375693321228027
    7. '                   ' → logprob: -11.875693321228027
    8. '			' → logprob: -12.375693321228027
    9. '       ' → logprob: -12.750693321228027
    10. '<|end|>' → logprob: -12.750693321228027

Token 204: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029426096007227898
    2. ' if' → logprob: -3.904426097869873
    3. '                ' → logprob: -5.279426097869873
    4. ' ' → logprob: -6.404426097869873
    5. 'if' (adapté à ' if') → logprob: -7.154426097869873
    6. '                
' → logprob: -7.529426097869873
    7. ' 
' → logprob: -7.654426097869873
    8. '           ' → logprob: -9.904425621032715
    9. '<|end|>' → logprob: -9.904425621032715
    10. '              ' → logprob: -10.279425621032715

Token 205: ' nd' (ID: 5914)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.7057023048400879
    2. ' nd' → logprob: -0.7057023048400879
    3. 'dist' → logprob: -5.080702304840088
    4. 'nd' → logprob: -5.080702304840088
    5. '	dist' → logprob: -11.33070182800293
    6. '(nd' → logprob: -11.58070182800293
    7. ' ' → logprob: -12.33070182800293
    8. '(dist' → logprob: -12.33070182800293
    9. '   ' → logprob: -12.45570182800293
    10. ' ' → logprob: -12.83070182800293

Token 206: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.009788908995687962
    2. '<' → logprob: -4.634788990020752
    3. '<|end|>' → logprob: -11.009788513183594
    4. ' ' → logprob: -12.384788513183594
    5. ' ' → logprob: -12.384788513183594
    6. '[' → logprob: -12.884788513183594
    7. '<int' → logprob: -14.509788513183594
    8. '<th' → logprob: -14.509788513183594
    9. ')' → logprob: -14.634788513183594
    10. ' >=' → logprob: -15.009788513183594

Token 207: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.38687458634376526
    2. ' dist' → logprob: -1.1368745565414429
    3. '	dist' → logprob: -12.761874198913574
    4. '(dist' → logprob: -14.761874198913574
    5. '
' → logprob: -16.01187515258789
    6. '_dist' → logprob: -16.51187515258789
    7. 'Dist' → logprob: -17.26187515258789
    8. '```' → logprob: -17.51187515258789
    9. ' ' → logprob: -17.63687515258789
    10. '   ' → logprob: -17.63687515258789

Token 208: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.5
    3. 'v' → logprob: -15.875
    4. '[u' → logprob: -17.375
    5. ' [' → logprob: -20.875
    6. ' v' → logprob: -21.125
    7. '```' → logprob: -21.25
    8. '[val' → logprob: -21.625
    9. '[
' → logprob: -21.75
    10. '	v' → logprob: -21.875

Token 209: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.41923511028289795
    2. ']:
' → logprob: -1.669235110282898
    3. ':' → logprob: -3.0442352294921875
    4. '):
' → logprob: -3.0442352294921875
    5. ':
' → logprob: -3.5442352294921875
    6. '):' → logprob: -3.5442352294921875
    7. '}:' → logprob: -7.7942352294921875
    8. '[' → logprob: -9.044235229492188
    9. '():
' → logprob: -9.169235229492188
    10. ']' → logprob: -9.169235229492188

Token 210: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009195583988912404
    2. '               ' → logprob: -8.125919342041016
    3. '                       ' → logprob: -8.375919342041016
    4. 'dist' → logprob: -8.750919342041016
    5. '                    
' → logprob: -10.250919342041016
    6. '                    ' → logprob: -10.500919342041016
    7. ':
' → logprob: -10.625919342041016
    8. ' dist' → logprob: -10.750919342041016
    9. '           ' → logprob: -10.875919342041016
    10. '                           ' → logprob: -11.000919342041016

Token 211: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.0015078396536409855
    2. 'dist' (adapté à ' dist') → logprob: -6.501507759094238
    3. '                   ' → logprob: -13.251507759094238
    4. '	dist' → logprob: -13.626507759094238
    5. '_dist' → logprob: -13.751507759094238
    6. '                    ' → logprob: -14.501507759094238
    7. '                       ' → logprob: -15.126507759094238
    8. '(dist' → logprob: -15.376507759094238
    9. 'Dist' → logprob: -16.126508712768555
    10. '                ' → logprob: -16.376508712768555

Token 212: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -2.4272752852994017e-05
    2. '[' → logprob: -11.00002384185791
    3. 'v' → logprob: -12.00002384185791
    4. '=v' → logprob: -14.62502384185791
    5. '=' → logprob: -15.75002384185791
    6. '<v' → logprob: -15.75002384185791
    7. '	v' → logprob: -16.250024795532227
    8. '[val' → logprob: -16.250024795532227
    9. ',v' → logprob: -16.500024795532227
    10. '(v' → logprob: -16.750024795532227

Token 213: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6214890480041504
    2. '[v' → logprob: -0.8714890480041504
    3. ']=' → logprob: -3.8714890480041504
    4. '=' → logprob: -4.12148904800415
    5. ' =' → logprob: -5.24648904800415
    6. '[' → logprob: -6.74648904800415
    7. '=v' → logprob: -8.246488571166992
    8. ')' → logprob: -8.496488571166992
    9. 'v' → logprob: -8.621488571166992
    10. ' ]' → logprob: -9.121488571166992

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760250091552734
    2. '=' → logprob: -0.8260250091552734
    3. '[v' → logprob: -10.326025009155273
    4. '=v' → logprob: -10.451025009155273
    5. ',' → logprob: -11.701025009155273
    6. '[' → logprob: -11.826025009155273
    7. ' =
' → logprob: -13.076025009155273
    8. ']' → logprob: -13.451025009155273
    9. '=
' → logprob: -13.826025009155273
    10. ' =
' → logprob: -14.451025009155273

Token 215: ' nd' (ID: 5914)
  Prédit: ' nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nd' → logprob: -0.1602301150560379
    2. 'nd' → logprob: -1.9102301597595215
    3. '(nd' → logprob: -12.535229682922363
    4. '_nd' → logprob: -14.285229682922363
    5. ' ' → logprob: -15.285229682922363
    6. 'ng' → logprob: -15.660229682922363
    7. 'n' → logprob: -15.785229682922363
    8. ' nde' → logprob: -16.03523063659668
    9. 'ndl' → logprob: -16.28523063659668
    10. ' ng' → logprob: -16.41023063659668

Token 216: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007157695363275707
    2. '               ' → logprob: -7.875715732574463
    3. '           ' → logprob: -9.250716209411621
    4. '				' → logprob: -9.750716209411621
    5. ',' → logprob: -10.000716209411621
    6. '                       ' → logprob: -10.625716209411621
    7. '                    
' → logprob: -10.750716209411621
    8. '<|end|>' → logprob: -10.750716209411621
    9. '       ' → logprob: -11.000716209411621
    10. '                    ' → logprob: -11.625716209411621

Token 217: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -8.375538163818419e-05
    2. 'heap' → logprob: -10.500083923339844
    3. '				' → logprob: -10.750083923339844
    4. '               ' → logprob: -11.375083923339844
    5. '           ' → logprob: -11.500083923339844
    6. ' heap' → logprob: -12.500083923339844
    7. '                    
' → logprob: -13.125083923339844
    8. '                       ' → logprob: -13.250083923339844
    9. ',' → logprob: -14.125083923339844
    10. '		           ' → logprob: -14.125083923339844

Token 218: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0009115827269852161
    2. ' heap' → logprob: -7.000911712646484
    3. 'he' → logprob: -18.875911712646484
    4. '                   ' → logprob: -19.500911712646484
    5. '   ' → logprob: -20.000911712646484
    6. '           ' → logprob: -20.500911712646484
    7. '               ' → logprob: -20.625911712646484
    8. '(heap' → logprob: -20.750911712646484
    9. '.heap' → logprob: -22.000911712646484
    10. '
' → logprob: -23.250911712646484

Token 219: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.816093228830141e-06
    2. 'p' → logprob: -13.12500286102295
    3. 'push' → logprob: -15.62500286102295
    4. '.he' → logprob: -15.62500286102295
    5. '```' → logprob: -15.62500286102295
    6. 'h' → logprob: -16.000001907348633
    7. '.push' → logprob: -16.250001907348633
    8. '[' → logprob: -16.375001907348633
    9. 'app' → logprob: -17.125001907348633
    10. 'he' → logprob: -17.125001907348633

Token 220: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00017314712749794126
    2. 'q' → logprob: -8.875173568725586
    3. '.push' → logprob: -11.125173568725586
    4. 'he' → logprob: -11.375173568725586
    5. 'push' → logprob: -12.250173568725586
    6. '.heap' → logprob: -14.250173568725586
    7. '.p' → logprob: -14.750173568725586
    8. '```' → logprob: -15.250173568725586
    9. '.' → logprob: -15.375173568725586
    10. ' he' → logprob: -15.625173568725586

Token 221: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.013978377915918827
    2. 'pp' → logprob: -4.888978481292725
    3. 'q' → logprob: -5.388978481292725
    4. 'p' → logprob: -6.388978481292725
    5. 'push' → logprob: -10.138978004455566
    6. 'ap' → logprob: -10.263978004455566
    7. '[' → logprob: -10.888978004455566
    8. 'op' → logprob: -12.013978004455566
    9. 'qp' → logprob: -13.263978004455566
    10. '```' → logprob: -13.638978004455566

Token 222: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -0.04843655973672867
    2. 'p' → logprob: -3.5484366416931152
    3. 'app' → logprob: -4.923436641693115
    4. 'op' → logprob: -5.048436641693115
    5. 'pp' → logprob: -5.923436641693115
    6. 'push' → logprob: -6.423436641693115
    7. 'q' → logprob: -7.798436641693115
    8. 'ap' → logprob: -9.798436164855957
    9. '```' → logprob: -11.173436164855957
    10. '[' → logprob: -11.798436164855957

Token 223: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.8087270038668066e-05
    2. '(' → logprob: -10.500027656555176
    3. '(q' → logprob: -15.375027656555176
    4. '(heap' → logprob: -15.375027656555176
    5. '(
' → logprob: -16.875028610229492
    6. '(n' → logprob: -17.375028610229492
    7. ' (' → logprob: -17.750028610229492
    8. '(k' → logprob: -17.750028610229492
    9. '((' → logprob: -18.500028610229492
    10. '(v' → logprob: -18.750028610229492

Token 224: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00028767617186531425
    2. '(h' → logprob: -8.250288009643555
    3. '(q' → logprob: -10.625288009643555
    4. 'c' → logprob: -14.500288009643555
    5. ')' → logprob: -15.125288009643555
    6. 'Q' → logprob: -15.250288009643555
    7. '(heap' → logprob: -15.375288009643555
    8. '	q' → logprob: -15.750288009643555
    9. ',q' → logprob: -16.250288009643555
    10. 'qh' → logprob: -16.250288009643555

Token 225: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.009192822501063347
    2. ',' → logprob: -5.009192943572998
    3. '(' → logprob: -6.134192943572998
    4. ')' → logprob: -9.38419246673584
    5. ' (' → logprob: -9.38419246673584
    6. ',h' → logprob: -9.50919246673584
    7. ' ,' → logprob: -10.50919246673584
    8. ',(' → logprob: -11.50919246673584
    9. '(v' → logprob: -11.63419246673584
    10. '(n' → logprob: -12.25919246673584

Token 226: ' (' (ID: 350)
  Prédit: '(nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nd' → logprob: -0.024423951283097267
    2. ' (' → logprob: -3.774423837661743
    3. '(' → logprob: -7.149424076080322
    4. '(n' → logprob: -7.899424076080322
    5. '(nn' → logprob: -11.774423599243164
    6. '(ns' → logprob: -12.649423599243164
    7. '   ' → logprob: -13.024423599243164
    8. '(cd' → logprob: -13.399423599243164
    9. '(nt' → logprob: -13.399423599243164
    10. '(nx' → logprob: -13.899423599243164

Token 227: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0003920655872207135
    2. ' nd' → logprob: -7.875391960144043
    3. '(nd' → logprob: -11.375391960144043
    4. '   ' → logprob: -16.00039291381836
    5. '_nd' → logprob: -16.12539291381836
    6. ' ' → logprob: -16.75039291381836
    7. '```' → logprob: -17.00039291381836
    8. '
' → logprob: -17.12539291381836
    9. '  ' → logprob: -17.25039291381836
    10. ')' → logprob: -17.37539291381836

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011689399980241433
    2. ',v' → logprob: -9.250117301940918
    3. ' ,' → logprob: -11.000117301940918
    4. 'v' → logprob: -13.500117301940918
    5. ')' → logprob: -13.750117301940918
    6. ',
' → logprob: -14.750117301940918
    7. '),' → logprob: -14.875117301940918
    8. '[' → logprob: -15.250117301940918
    9. '<|end|>' → logprob: -16.0001163482666
    10. ' v' → logprob: -16.2501163482666

Token 229: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.001170225441455841
    2. ' v' → logprob: -6.7511701583862305
    3. '	v' → logprob: -18.876171112060547
    4. ')v' → logprob: -19.376171112060547
    5. '```' → logprob: -20.876171112060547
    6. ' ' → logprob: -20.876171112060547
    7. 'vq' → logprob: -21.376171112060547
    8. 've' → logprob: -21.501171112060547
    9. '[v' → logprob: -21.501171112060547
    10. '   ' → logprob: -22.126171112060547

Token 230: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -7.743758760625497e-05
    2. '))
' → logprob: -10.000077247619629
    3. ')' → logprob: -10.500077247619629
    4. ' ))' → logprob: -13.000077247619629
    5. ')))' → logprob: -13.250077247619629
    6. '))

' → logprob: -16.125078201293945
    7. '));' → logprob: -16.500078201293945
    8. ')
' → logprob: -17.625078201293945
    9. '),' → logprob: -17.625078201293945
    10. '))
' → logprob: -17.875078201293945

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5348218679428101
    2. '   ' → logprob: -0.9098218679428101
    3. '
' → logprob: -4.9098219871521
    4. '<|end|>' → logprob: -6.9098219871521
    5. ' return' → logprob: -7.1598219871521
    6. ')' → logprob: -7.1598219871521
    7. '    
' → logprob: -7.2848219871521
    8. 'return' → logprob: -8.409821510314941
    9. '    ' → logprob: -8.534821510314941
    10. '        
' → logprob: -8.909821510314941

Token 232: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15784665942192078
    2. '       ' → logprob: -2.407846689224243
    3. 'return' (adapté à ' return') → logprob: -2.907846689224243
    4. ' return' → logprob: -6.657846450805664
    5. '	return' → logprob: -9.407846450805664
    6. '
' → logprob: -11.157846450805664
    7. '    
' → logprob: -11.782846450805664
    8. '    ' → logprob: -12.032846450805664
    9. '           ' → logprob: -12.157846450805664
    10. 'dist' → logprob: -12.407846450805664

Token 233: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0004306692280806601
    2. ' dist' → logprob: -7.750430583953857
    3. '(dist' → logprob: -17.125431060791016
    4. '	dist' → logprob: -19.500431060791016
    5. '[' → logprob: -20.250431060791016
    6. 'dest' → logprob: -21.375431060791016
    7. 'diff' → logprob: -21.375431060791016
    8. 'd' → logprob: -21.375431060791016
    9. ' ' → logprob: -21.500431060791016
    10. '   ' → logprob: -21.750431060791016

Token 234: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3698761463165283
    2. '    
' → logprob: -1.6198761463165283
    3. 'dist' → logprob: -1.6198761463165283
    4. '<|end|>' → logprob: -1.9948761463165283
    5. '
' → logprob: -2.4948761463165283
    6. 'start' → logprob: -3.3698761463165283
    7. '  
' → logprob: -3.4948761463165283
    8. 'distance' → logprob: -4.119875907897949
    9. 's' → logprob: -4.744875907897949
    10. ' distances' → logprob: -5.119875907897949

Token 235: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08407576382160187
    2. 'start' → logprob: -3.959075689315796
    3. 'd' → logprob: -4.834075927734375
    4. '   ' → logprob: -4.959075927734375
    5. 'min' → logprob: -5.459075927734375
    6. ' dist' → logprob: -5.459075927734375
    7. 'max' → logprob: -5.459075927734375
    8. 'distance' → logprob: -5.459075927734375
    9. 'best' → logprob: -5.584075927734375
    10. 'result' → logprob: -5.834075927734375

Token 236: ' min' (ID: 1349)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05010967701673508
    2. 'start' → logprob: -4.30010986328125
    3. '   ' → logprob: -4.67510986328125
    4. 'd' → logprob: -5.92510986328125
    5. 'result' → logprob: -6.05010986328125
    6. ' dist' → logprob: -6.30010986328125
    7. 'distance' → logprob: -6.30010986328125
    8. 'max' → logprob: -6.30010986328125
    9. 'min' (adapté à ' min') → logprob: -6.42510986328125
    10. 'total' → logprob: -6.42510986328125

Token 237: '_sum' (ID: 29859)
  Prédit: '_dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.7134250402450562
    2. '_cost' → logprob: -1.3384250402450562
    3. '_path' → logprob: -2.5884251594543457
    4. '_distance' → logprob: -3.0884251594543457
    5. '_' → logprob: -3.3384251594543457
    6. '_total' → logprob: -3.8384251594543457
    7. '_node' → logprob: -3.8384251594543457
    8. '_cycle' → logprob: -4.588425159454346
    9. '_sp' → logprob: -5.088425159454346
    10. '_t' → logprob: -5.338425159454346

Token 238: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.049119461327791214
    2. '=' → logprob: -3.049119472503662
    3. ',' → logprob: -8.049118995666504
    4. '_' → logprob: -8.674118995666504
    5. '(' → logprob: -11.674118995666504
    6. ' ,' → logprob: -12.174118995666504
    7. ' _' → logprob: -12.174118995666504
    8. '   ' → logprob: -12.549118995666504
    9. '_=' → logprob: -12.549118995666504
    10. '[' → logprob: -12.924118995666504

Token 239: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -2.816093228830141e-06
    2. ' float' → logprob: -12.87500286102295
    3. 'sum' → logprob: -16.625001907348633
    4. '[' → logprob: -16.750001907348633
    5. 'int' → logprob: -16.875001907348633
    6. 'flo' → logprob: -17.625001907348633
    7. '(float' → logprob: -18.000001907348633
    8. 'sys' → logprob: -18.500001907348633
    9. 'min' → logprob: -18.625001907348633
    10. '0' → logprob: -18.875001907348633

Token 240: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.375006675720215
    3. ''s' → logprob: -13.625006675720215
    4. '('_' → logprob: -15.125006675720215
    5. ''in' → logprob: -15.500006675720215
    6. 'inf' → logprob: -15.875006675720215
    7. '_inf' → logprob: -16.2500057220459
    8. '(in' → logprob: -16.5000057220459
    9. '("' → logprob: -16.6250057220459
    10. '('-' → logprob: -16.7500057220459

Token 241: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: 0.0
    2. ' inf' → logprob: -17.25
    3. '')' → logprob: -17.75
    4. ''' → logprob: -18.5
    5. 'in' → logprob: -18.625
    6. 'info' → logprob: -19.125
    7. '-inf' → logprob: -19.5
    8. ')' → logprob: -19.875
    9. 'sys' → logprob: -20.125
    10. '.inf' → logprob: -20.375

Token 242: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024352990090847015
    2. ')
' → logprob: -3.77435302734375
    3. ' )' → logprob: -7.14935302734375
    4. '   ' → logprob: -8.77435302734375
    5. ' )
' → logprob: -8.89935302734375
    6. ')
' → logprob: -10.64935302734375
    7. '
' → logprob: -13.39935302734375
    8. ',' → logprob: -13.77435302734375
    9. ')

' → logprob: -14.27435302734375
    10. '')' → logprob: -14.52435302734375

Token 243: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019635096192359924
    2. ' for' → logprob: -4.394635200500488
    3. '
' → logprob: -5.769635200500488
    4. '   ' → logprob: -5.894635200500488
    5. 'center' → logprob: -8.269635200500488
    6. 'min' → logprob: -8.394635200500488
    7. '    
' → logprob: -8.644635200500488
    8. 'start' → logprob: -9.394635200500488
    9. 'best' → logprob: -9.394635200500488
    10. 'result' → logprob: -9.644635200500488

Token 244: ' ans' (ID: 3345)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14403897523880005
    2. 'min' → logprob: -2.7690389156341553
    3. 'best' → logprob: -3.5190389156341553
    4. 'center' → logprob: -3.8940389156341553
    5. 'candidate' → logprob: -5.269039154052734
    6. 'central' → logprob: -5.519039154052734
    7. 'answer' → logprob: -5.644039154052734
    8. 'ans' (adapté à ' ans') → logprob: -5.769039154052734
    9. 'res' → logprob: -6.644039154052734
    10. 'result' → logprob: -7.144039154052734

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760310888290405
    2. '=' → logprob: -0.8260310888290405
    3. ',' → logprob: -9.576030731201172
    4. '_' → logprob: -11.201030731201172
    5. '=None' → logprob: -12.951030731201172
    6. ' ' → logprob: -13.701030731201172
    7. ' =
' → logprob: -13.826030731201172
    8. 's' → logprob: -13.826030731201172
    9. '_idx' → logprob: -14.951030731201172
    10. '_=' → logprob: -14.951030731201172

Token 246: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0022052128333598375
    2. 'None' → logprob: -6.2522053718566895
    3. '[]' → logprob: -8.877204895019531
    4. '0' → logprob: -9.377204895019531
    5. ' -' → logprob: -10.127204895019531
    6. 'float' → logprob: -12.752204895019531
    7. ' None' → logprob: -13.002204895019531
    8. '-none' → logprob: -13.252204895019531
    9. '   ' → logprob: -13.752204895019531
    10. '(-' → logprob: -14.002204895019531

Token 247: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.017039798200130463
    2. 'None' → logprob: -4.642039775848389
    3. '[]' → logprob: -5.142039775848389
    4. '0' → logprob: -6.642039775848389
    5. 'float' → logprob: -9.767040252685547
    6. 'min' → logprob: -11.142040252685547
    7. ' -' → logprob: -12.142040252685547
    8. '()' → logprob: -12.392040252685547
    9. '(-' → logprob: -12.392040252685547
    10. '-min' → logprob: -12.767040252685547

Token 248: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1924586147069931
    2. '   ' → logprob: -2.1924586296081543
    3. ' for' → logprob: -2.9424586296081543
    4. '
' → logprob: -4.567458629608154
    5. '    
' → logprob: -8.817458152770996
    6. ' 
' → logprob: -9.442458152770996
    7. '	for' → logprob: -10.067458152770996
    8. '  
' → logprob: -10.817458152770996
    9. '   
' → logprob: -12.067458152770996
    10. '  ' → logprob: -12.192458152770996

Token 249: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0030521005392074585
    2. ' for' → logprob: -6.253052234649658
    3. '   ' → logprob: -6.878052234649658
    4. '
' → logprob: -9.3780517578125
    5. '    
' → logprob: -12.3780517578125
    6. '	for' → logprob: -13.2530517578125
    7. ' 
' → logprob: -13.6280517578125
    8. '  
' → logprob: -14.6280517578125
    9. '   
' → logprob: -16.0030517578125
    10. '<|end|>' → logprob: -16.0030517578125

Token 250: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.088346359931165e-07
    2. ' for' → logprob: -14.375000953674316
    3. '   ' → logprob: -15.125000953674316
    4. '    
' → logprob: -19.0
    5. '0' → logprob: -20.75
    6. '
' → logprob: -20.875
    7. '	for' → logprob: -21.0
    8. 'from' → logprob: -21.125
    9. '```' → logprob: -21.25
    10. 'fo' → logprob: -22.375

Token 251: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18468311429023743
    2. ' i' → logprob: -2.434683084487915
    3. 'x' → logprob: -4.059683322906494
    4. ' town' → logprob: -4.559683322906494
    5. 'node' → logprob: -4.684683322906494
    6. 'u' → logprob: -4.684683322906494
    7. 'v' → logprob: -4.684683322906494
    8. 's' → logprob: -4.934683322906494
    9. 'town' → logprob: -5.059683322906494
    10. 'start' → logprob: -6.059683322906494

Token 252: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038120780140161514
    2. 'in' → logprob: -3.288120746612549
    3. ' ' → logprob: -9.538121223449707
    4. ',' → logprob: -13.538121223449707
    5. '   ' → logprob: -13.538121223449707
    6. '	in' → logprob: -13.913121223449707
    7. 'range' → logprob: -14.163121223449707
    8. 'n' → logprob: -14.538121223449707
    9. '  ' → logprob: -14.663121223449707
    10. '0' → logprob: -14.788121223449707

Token 253: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03192806988954544
    2. ' range' → logprob: -3.531928062438965
    3. 'town' → logprob: -6.156928062438965
    4. ' towns' → logprob: -10.156928062438965
    5. '(range' → logprob: -11.781928062438965
    6. 't' → logprob: -12.656928062438965
    7. '	range' → logprob: -13.531928062438965
    8. 'rang' → logprob: -14.156928062438965
    9. 'ranges' → logprob: -14.156928062438965
    10. '   ' → logprob: -14.281928062438965

Token 254: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.01429431326687336
    2. '(' → logprob: -4.264294147491455
    3. '(len' → logprob: -9.264294624328613
    4. 'N' → logprob: -10.389294624328613
    5. '(n' → logprob: -12.639294624328613
    6. '1' → logprob: -13.389294624328613
    7. 'len' → logprob: -15.639294624328613
    8. '(M' → logprob: -16.389293670654297
    9. '(T' → logprob: -16.639293670654297
    10. ' (' → logprob: -16.889293670654297

Token 255: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.055136483162641525
    2. '):
' → logprob: -2.9301364421844482
    3. ')' → logprob: -9.180136680603027
    4. '   ' → logprob: -9.305136680603027
    5. ' ):' → logprob: -10.555136680603027
    6. ':' → logprob: -10.680136680603027
    7. '):
' → logprob: -12.055136680603027
    8. '+' → logprob: -12.930136680603027
    9. ' ):
' → logprob: -14.430136680603027
    10. ',' → logprob: -14.680136680603027

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009945790283381939
    2. '   ' → logprob: -5.509945869445801
    3. ':' → logprob: -6.634945869445801
    4. '    ' → logprob: -6.884945869445801
    5. '        
' → logprob: -7.009945869445801
    6. ' ' → logprob: -7.509945869445801
    7. ',' → logprob: -7.884945869445801
    8. '
' → logprob: -8.0099458694458
    9. '    
' → logprob: -8.8849458694458
    10. '<|end|>' → logprob: -8.8849458694458

Token 257: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.01730474643409252
    2. 'd' → logprob: -4.39230489730835
    3. ' dist' → logprob: -5.51730489730835
    4. '   ' → logprob: -7.64230489730835
    5. 'if' → logprob: -9.267304420471191
    6. ' d' → logprob: -9.892304420471191
    7. 'ds' → logprob: -10.392304420471191
    8. 'sum' → logprob: -10.892304420471191
    9. ' distances' → logprob: -10.892304420471191
    10. '	dist' → logprob: -10.892304420471191

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760892033576965
    2. ' =' → logprob: -0.8260892033576965
    3. '[i' → logprob: -9.201088905334473
    4. 's' → logprob: -10.576088905334473
    5. '=i' → logprob: -11.701088905334473
    6. 'i' → logprob: -11.826088905334473
    7. 'sum' → logprob: -13.576088905334473
    8. '[' → logprob: -13.576088905334473
    9. ')' → logprob: -13.951088905334473
    10. '_i' → logprob: -14.076088905334473

Token 259: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.313264936208725
    2. ' d' → logprob: -1.3132649660110474
    3. '   ' → logprob: -12.938264846801758
    4. '	d' → logprob: -14.938264846801758
    5. ')d' → logprob: -15.563264846801758
    6. '(d' → logprob: -15.938264846801758
    7. ' ' → logprob: -16.688264846801758
    8. '[d' → logprob: -17.188264846801758
    9. '  ' → logprob: -18.188264846801758
    10. ')' → logprob: -18.438264846801758

Token 260: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -3.9054008084349334e-05
    2. '[i' → logprob: -10.750039100646973
    3. 'ijk' → logprob: -11.625039100646973
    4. '(i' → logprob: -12.250039100646973
    5. 'ij' → logprob: -12.875039100646973
    6. 'ist' → logprob: -14.125039100646973
    7. 'i' → logprob: -14.625039100646973
    8. 'jik' → logprob: -17.000038146972656
    9. '(' → logprob: -17.375038146972656
    10. 'ijkl' → logprob: -17.500038146972656

Token 261: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.625000953674316
    3. '(
' → logprob: -19.125
    4. ' (' → logprob: -20.625
    5. '[i' → logprob: -21.75
    6. '(ii' → logprob: -22.25
    7. 'i' → logprob: -22.375
    8. '(I' → logprob: -22.75
    9. '   ' → logprob: -23.375
    10. ')' → logprob: -23.875

Token 262: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2015077769756317
    2. ')' → logprob: -1.701507806777954
    3. '       ' → logprob: -10.326507568359375
    4. ')
' → logprob: -10.451507568359375
    5. ' )
' → logprob: -10.951507568359375
    6. '   ' → logprob: -11.201507568359375
    7. ' )' → logprob: -13.701507568359375
    8. ')

' → logprob: -15.076507568359375
    9. ')`
' → logprob: -16.201507568359375
    10. ' ' → logprob: -16.951507568359375

Token 263: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27758273482322693
    2. 'sum' → logprob: -1.6525827646255493
    3. ' sum' → logprob: -3.2775826454162598
    4. '
' → logprob: -5.90258264541626
    5. '    
' → logprob: -6.27758264541626
    6. ' s' → logprob: -6.52758264541626
    7. '_sum' → logprob: -6.65258264541626
    8. 'total' → logprob: -6.65258264541626
    9. ' total' → logprob: -6.77758264541626
    10. 's' → logprob: -6.77758264541626

Token 264: ' s' (ID: 265)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3519945442676544
    2. 's' (adapté à ' s') → logprob: -2.226994514465332
    3. 'if' → logprob: -2.476994514465332
    4. 'curr' → logprob: -3.726994514465332
    5. 'current' → logprob: -4.101994514465332
    6. 'cur' → logprob: -4.351994514465332
    7. ' total' → logprob: -4.476994514465332
    8. 'sum' → logprob: -4.726994514465332
    9. '_sum' → logprob: -4.851994514465332
    10. 'tmp' → logprob: -5.226994514465332

Token 265: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.03753985837101936
    2. ' =' → logprob: -3.6625399589538574
    3. '=' → logprob: -4.537539958953857
    4. '=sum' → logprob: -8.4125394821167
    5. '_sum' → logprob: -8.9125394821167
    6. 'u' → logprob: -10.0375394821167
    7. 'sum' → logprob: -10.4125394821167
    8. '_' → logprob: -11.0375394821167
    9. 'ums' → logprob: -12.4125394821167
    10. '   ' → logprob: -12.4125394821167

Token 266: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.005358144640922546
    2. ' sum' → logprob: -5.7553582191467285
    3. '0' → logprob: -6.1303582191467285
    4. ' ' → logprob: -13.63035774230957
    5. 'max' → logprob: -15.00535774230957
    6. '(sum' → logprob: -15.38035774230957
    7. '	sum' → logprob: -15.63035774230957
    8. 'min' → logprob: -15.75535774230957
    9. '   ' → logprob: -16.00535774230957
    10. '=sum' → logprob: -16.13035774230957

Token 267: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.2768291234970093
    2. '(d' → logprob: -1.5268291234970093
    3. '([' → logprob: -4.151829242706299
    4. '(x' → logprob: -5.026829242706299
    5. '(' → logprob: -6.401829242706299
    6. '(filter' → logprob: -8.27682876586914
    7. 'dist' → logprob: -8.65182876586914
    8. '(v' → logprob: -9.40182876586914
    9. '(distance' → logprob: -9.77682876586914
    10. 'd' → logprob: -10.40182876586914

Token 268: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043043080950155854
    2. '[j' → logprob: -9.1254301071167
    3. '[v' → logprob: -9.5004301071167
    4. ')
' → logprob: -9.6254301071167
    5. ' )' → logprob: -10.0004301071167
    6. '[' → logprob: -10.1254301071167
    7. ' if' → logprob: -10.1254301071167
    8. '[i' → logprob: -11.1254301071167
    9. ' for' → logprob: -11.8754301071167
    10. ')+' → logprob: -11.8754301071167

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44826942682266235
    2. '
' → logprob: -1.0732693672180176
    3. '   ' → logprob: -4.448269367218018
    4. '<|end|>' → logprob: -6.073269367218018
    5. ' if' → logprob: -6.198269367218018
    6. '
' → logprob: -7.073269367218018
    7. '        
' → logprob: -7.198269367218018
    8. ' 
' → logprob: -7.698269367218018
    9. ' ' → logprob: -7.948269367218018
    10. '  
' → logprob: -7.948269367218018

Token 270: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.582360565662384
    2. ' if' → logprob: -0.832360565662384
    3. '       ' → logprob: -5.082360744476318
    4. '   ' → logprob: -8.58236026763916
    5. '	if' → logprob: -12.33236026763916
    6. ' ' → logprob: -13.70736026763916
    7. '           ' → logprob: -14.08236026763916
    8. '
' → logprob: -14.58236026763916
    9. '    ' → logprob: -14.70736026763916
    10. '  ' → logprob: -15.08236026763916

Token 271: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.02054644376039505
    2. 's' → logprob: -3.8955464363098145
    3. ' ' → logprob: -13.020546913146973
    4. ' ' → logprob: -13.270546913146973
    5. '<s' → logprob: -16.020545959472656
    6. '   ' → logprob: -16.270545959472656
    7. '(s' → logprob: -16.395545959472656
    8. ' min' → logprob: -16.583045959472656
    9. '	s' → logprob: -16.958045959472656
    10. 'min' → logprob: -17.395545959472656

Token 272: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.06995799392461777
    2. '<' → logprob: -2.694957971572876
    3. ' ' → logprob: -11.319957733154297
    4. ' ' → logprob: -12.194957733154297
    5. '[' → logprob: -13.694957733154297
    6. '<s' → logprob: -13.819957733154297
    7. ' <=' → logprob: -14.694957733154297
    8. '   ' → logprob: -14.944957733154297
    9. ' <
' → logprob: -15.569957733154297
    10. '<n' → logprob: -15.944957733154297

Token 273: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.02324547804892063
    2. ' min' → logprob: -3.7732455730438232
    3. '	min' → logprob: -18.398244857788086
    4. '   ' → logprob: -19.023244857788086
    5. ' ' → logprob: -21.398244857788086
    6. '_min' → logprob: -22.023244857788086
    7. '=min' → logprob: -22.148244857788086
    8. '(min' → logprob: -22.398244857788086
    9. '[min' → logprob: -22.523244857788086
    10. '    ' → logprob: -23.148244857788086

Token 274: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -8.65707261255011e-06
    2. '_' → logprob: -12.625008583068848
    3. '_s' → logprob: -12.875008583068848
    4. '_min' → logprob: -13.250008583068848
    5. 'sum' → logprob: -14.125008583068848
    6. ' _' → logprob: -16.250009536743164
    7. '__' → logprob: -17.000009536743164
    8. '_ans' → logprob: -17.125009536743164
    9. '\' → logprob: -17.625009536743164
    10. '_num' → logprob: -18.500009536743164

Token 275: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.693487286567688
    2. ':
' → logprob: -0.693487286567688
    3. '       ' → logprob: -8.443487167358398
    4. ' :
' → logprob: -10.193487167358398
    5. '           ' → logprob: -10.568487167358398
    6. ':
' → logprob: -11.068487167358398
    7. '):
' → logprob: -11.193487167358398
    8. '   ' → logprob: -11.568487167358398
    9. ' and' → logprob: -11.818487167358398
    10. ' :' → logprob: -12.193487167358398

Token 276: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47595205903053284
    2. '       ' → logprob: -0.9759520292282104
    3. ' min' → logprob: -6.9759521484375
    4. ':
' → logprob: -8.4759521484375
    5. '```' → logprob: -8.6009521484375
    6. '               ' → logprob: -9.3509521484375
    7. ':' → logprob: -9.7259521484375
    8. '
' → logprob: -9.9759521484375
    9. '	       ' → logprob: -10.1009521484375
    10. '   ' → logprob: -10.1009521484375

Token 277: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.07008615136146545
    2. 'min' (adapté à ' min') → logprob: -2.6950862407684326
    3. '           ' → logprob: -8.945086479187012
    4. '               ' → logprob: -11.695086479187012
    5. ' s' → logprob: -12.945086479187012
    6. 's' → logprob: -13.320086479187012
    7. '            ' → logprob: -13.445086479187012
    8. '	min' → logprob: -13.570086479187012
    9. '   ' → logprob: -13.945086479187012
    10. '
' → logprob: -14.195086479187012

Token 278: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -8.77627644513268e-06
    2. '_s' → logprob: -12.250008583068848
    3. '_' → logprob: -13.125008583068848
    4. '_min' → logprob: -14.500008583068848
    5. ' _' → logprob: -14.625008583068848
    6. '=_' → logprob: -15.375008583068848
    7. 'sum' → logprob: -15.625008583068848
    8. '_ans' → logprob: -16.125009536743164
    9. '_set' → logprob: -16.250009536743164
    10. '\' → logprob: -16.250009536743164

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38691914081573486
    2. '=' → logprob: -1.1369191408157349
    3. '=s' → logprob: -10.511919021606445
    4. ',' → logprob: -11.011919021606445
    5. ' s' → logprob: -13.261919021606445
    6. ' ' → logprob: -13.761919021606445
    7. 's' → logprob: -14.136919021606445
    8. '   ' → logprob: -15.011919021606445
    9. ',s' → logprob: -15.511919021606445
    10. '＝' → logprob: -15.636919021606445

Token 280: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10020667314529419
    2. ' s' → logprob: -2.3502066135406494
    3. '<s' → logprob: -17.60020637512207
    4. '_s' → logprob: -19.10020637512207
    5. '	s' → logprob: -19.60020637512207
    6. ' ' → logprob: -19.60020637512207
    7. '
' → logprob: -19.97520637512207
    8. '{s' → logprob: -20.22520637512207
    9. '[s' → logprob: -21.72520637512207
    10. 'swer' → logprob: -21.85020637512207

Token 281: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12890957295894623
    2. '
' → logprob: -2.1289095878601074
    3. ' ans' → logprob: -6.503909587860107
    4. '       ' → logprob: -8.62890911102295
    5. ' 
' → logprob: -9.37890911102295
    6. ',' → logprob: -10.25390911102295
    7. '   ' → logprob: -10.50390911102295
    8. '```' → logprob: -10.87890911102295
    9. '
' → logprob: -11.00390911102295
    10. '	ans' → logprob: -11.12890911102295

Token 282: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010122348554432392
    2. ' ans' → logprob: -4.760122299194336
    3. '
' → logprob: -7.385122299194336
    4. '   ' → logprob: -7.885122299194336
    5. '```' → logprob: -8.635122299194336
    6. 'ans' → logprob: -8.760122299194336
    7. '       ' → logprob: -9.010122299194336
    8. ',' → logprob: -11.135122299194336
    9. '	ans' → logprob: -11.260122299194336
    10. '[' → logprob: -12.510122299194336

Token 283: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.003178782993927598
    2. ' ans' → logprob: -5.753178596496582
    3. 'answer' → logprob: -15.003178596496582
    4. '	ans' → logprob: -15.128178596496582
    5. '           ' → logprob: -15.503178596496582
    6. '   ' → logprob: -15.878178596496582
    7. '_ans' → logprob: -17.7531795501709
    8. '
' → logprob: -18.0031795501709
    9. '(ans' → logprob: -18.0031795501709
    10. 'ann' → logprob: -18.3781795501709

Token 284: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932230591773987
    2. ' =' → logprob: -0.6932230591773987
    3. '=i' → logprob: -9.568222999572754
    4. ' ' → logprob: -12.193222999572754
    5. '＝' → logprob: -15.068222999572754
    6. ' i' → logprob: -15.943222999572754
    7. '=
' → logprob: -16.81822395324707
    8. ' ' → logprob: -17.06822395324707
    9. '<|end|>' → logprob: -17.06822395324707
    10. ' =
' → logprob: -17.44322395324707

Token 285: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004078401252627373
    2. ' i' → logprob: -5.504078388214111
    3. '	i' → logprob: -17.879077911376953
    4. '   ' → logprob: -18.004077911376953
    5. ' ' → logprob: -19.379077911376953
    6. ' ' → logprob: -19.754077911376953
    7. '[i' → logprob: -20.504077911376953
    8. '
' → logprob: -21.379077911376953
    9. '```' → logprob: -21.379077911376953
    10. '(i' → logprob: -21.504077911376953

Token 286: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10043354332447052
    2. '
' → logprob: -2.350433588027954
    3. '   ' → logprob: -8.850433349609375
    4. ' print' → logprob: -10.350433349609375
    5. '    
' → logprob: -10.850433349609375
    6. '
' → logprob: -10.975433349609375
    7. '  
' → logprob: -11.725433349609375
    8. '```' → logprob: -13.100433349609375
    9. ' 
' → logprob: -13.225433349609375
    10. '

' → logprob: -13.850433349609375

Token 287: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00041732576210051775
    2. '   ' → logprob: -8.000417709350586
    3. ' print' → logprob: -9.750417709350586
    4. '
' → logprob: -10.875417709350586
    5. '```' → logprob: -12.625417709350586
    6. '    
' → logprob: -13.750417709350586
    7. '  
' → logprob: -15.875417709350586
    8. '	print' → logprob: -16.500417709350586
    9. '#print' → logprob: -16.750417709350586
    10. '(print' → logprob: -17.875417709350586

Token 288: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0001290454383706674
    2. '
' → logprob: -9.500128746032715
    3. '   ' → logprob: -10.250128746032715
    4. ' print' → logprob: -11.625128746032715
    5. '    
' → logprob: -12.000128746032715
    6. '```' → logprob: -12.625128746032715
    7. '  
' → logprob: -15.500128746032715
    8. ' 
' → logprob: -16.25012969970703
    9. '   
' → logprob: -16.62512969970703
    10. '``' → logprob: -17.37512969970703

Token 289: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.816093228830141e-06
    2. 'ans' → logprob: -13.25000286102295
    3. '(' → logprob: -14.00000286102295
    4. '()' → logprob: -17.000001907348633
    5. ' (' → logprob: -17.625001907348633
    6. '(answer' → logprob: -17.875001907348633
    7. '(f' → logprob: -18.000001907348633
    8. '(abs' → logprob: -19.250001907348633
    9. '	ans' → logprob: -19.375001907348633
    10. '(a' → logprob: -19.375001907348633

Token 290: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')`' → logprob: -16.5
    4. ')
' → logprob: -17.625
    5. '))' → logprob: -18.125
    6. '`)' → logprob: -18.25
    7. '')' → logprob: -18.25
    8. '()' → logprob: -19.25
    9. '())' → logprob: -19.375
    10. ')}' → logprob: -19.625

Token 291: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0012744003906846046
    2. 'int' → logprob: -7.251274585723877
    3. ' min' → logprob: -7.501274585723877
    4. ')' → logprob: -12.251274108886719
    5. 'round' → logprob: -12.876274108886719
    6. 'end' → logprob: -13.501274108886719
    7. 'max' → logprob: -14.251274108886719
    8. '(min' → logprob: -14.376274108886719
    9. ' int' → logprob: -14.626274108886719
    10. '[min' → logprob: -15.001274108886719

Token 292: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.0564331205387134e-05
    2. '_' → logprob: -11.87501049041748
    3. ' _' → logprob: -14.00001049041748
    4. 'sum' → logprob: -14.25001049041748
    5. ')' → logprob: -14.87501049041748
    6. '__' → logprob: -15.25001049041748
    7. '\' → logprob: -15.25001049041748
    8. '_s' → logprob: -15.37501049041748
    9. '_set' → logprob: -15.75001049041748
    10. '_val' → logprob: -16.000011444091797

Token 293: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.507972572464496e-05
    2. ' )' → logprob: -9.87509536743164
    3. '<|end|>' → logprob: -10.87509536743164
    4. '())' → logprob: -11.50009536743164
    5. '```' → logprob: -12.25009536743164
    6. '()' → logprob: -12.25009536743164
    7. ')
' → logprob: -13.37509536743164
    8. '*' → logprob: -14.37509536743164
    9. '(' → logprob: -14.50009536743164
    10. '+' → logprob: -15.25009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 291
Tokens correctement prédits (1ère position, stricte): 141
Tokens correctement prédits (1ère position, avec adaptation): 154
Tokens correctement prédits (top 10): 269
Précision stricte (1ère position): 48.45%
Précision adaptée (1ère position): 52.92%
Précision (top 10): 92.44%
================================================================================
