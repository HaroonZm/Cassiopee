================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def expected_value(n, m, k):
    # dp[i][j] = number of ways to get sum j with i dice
    # sums range from i to i*m
    max_sum = n * m
    dp_prev = [0] * (max_sum + 1)
    dp_prev[0] = 1  # base case, zero dice sum zero ways considered 1 to start transitions

    for _ in range(n):
        dp_curr = [0] * (max_sum + 1)
        for s in range(max_sum + 1):
            if dp_prev[s] == 0:
                continue
            for face in range(1, m + 1):
                if s + face <= max_sum:
                    dp_curr[s + face] += dp_prev[s]
        dp_prev = dp_curr

    total_ways = m ** n
    expected = 0.0
    for s in range(n, max_sum + 1):
        count = dp_prev[s]
        val = max(1, s - k)
        expected += count * val

    return expected / total_ways

for line in sys.stdin:
    n,m,k = map(int, line.split())
    if n == 0 and m == 0 and k == 0:
        break
    ans = expected_value(n, m, k)
    print(f"{ans:.8f}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.26693636178970337
    2. '\n' → logprob: -2.0169363021850586
    3. 'import' → logprob: -3.1419363021850586
    4. '<|end|>' → logprob: -3.2669363021850586
    5. 'newline' → logprob: -5.516936302185059
    6. '\' → logprob: -5.516936302185059
    7. '<|end|>' → logprob: -6.141936302185059
    8. '' → logprob: -6.266936302185059
    9. 'print' → logprob: -6.891936302185059
    10. '\r' → logprob: -6.891936302185059

Token 4: ' expected' (ID: 5930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015342106111347675
    2. ' main' → logprob: -6.2653422355651855
    3. ' space' → logprob: -6.3903422355651855
    4. ' ' → logprob: -6.7653422355651855
    5. '<|end|>' → logprob: -6.7653422355651855
    6. ' process' → logprob: -6.8903422355651855
    7. '  ' → logprob: -6.8903422355651855
    8. ' a' → logprob: -7.1403422355651855
    9. ' sys' → logprob: -7.5153422355651855
    10. '_' → logprob: -7.6403422355651855

Token 5: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.261834979057312
    2. '_value' → logprob: -1.636834979057312
    3. '_output' → logprob: -3.8868350982666016
    4. ' _' → logprob: -5.636835098266602
    5. '_return' → logprob: -5.761835098266602
    6. '_error' → logprob: -6.261835098266602
    7. '(' → logprob: -6.636835098266602
    8. '_space' → logprob: -7.011835098266602
    9. '_result' → logprob: -7.136835098266602
    10. '_input' → logprob: -7.261835098266602

Token 6: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002608952345326543
    2. '_' → logprob: -6.002608776092529
    3. ' (' → logprob: -10.002609252929688
    4. '<|end|>' → logprob: -11.002609252929688
    5. ')' → logprob: -11.627609252929688
    6. ' ' → logprob: -11.752609252929688
    7. '<|end|>' → logprob: -11.752609252929688
    8. 's' → logprob: -12.127609252929688
    9. '(user' → logprob: -12.252609252929688
    10. '(x' → logprob: -13.127609252929688

Token 7: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11502732336521149
    2. ')' → logprob: -2.36502742767334
    3. ',' → logprob: -4.36502742767334
    4. ':' → logprob: -6.36502742767334
    5. ' ):' → logprob: -9.74002742767334
    6. '**' → logprob: -10.11502742767334
    7. '):
' → logprob: -10.24002742767334
    8. '*' → logprob: -10.61502742767334
    9. '=' → logprob: -11.11502742767334
    10. '[' → logprob: -11.24002742767334

Token 8: ' m' (ID: 284)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.20618747174739838
    2. 'p' → logprob: -2.3311874866485596
    3. ' k' → logprob: -3.7061874866485596
    4. ' x' → logprob: -4.0811872482299805
    5. 'k' → logprob: -4.5811872482299805
    6. 'x' → logprob: -5.4561872482299805
    7. ' m' → logprob: -5.7061872482299805
    8. ' )' → logprob: -5.9561872482299805
    9. ')' → logprob: -6.0811872482299805
    10. 'prob' → logprob: -6.0811872482299805

Token 9: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016677843406796455
    2. ',' → logprob: -4.6416778564453125
    3. ')' → logprob: -5.0166778564453125
    4. '):
' → logprob: -9.141677856445312
    5. ':' → logprob: -9.266677856445312
    6. '=' → logprob: -11.016677856445312
    7. '*' → logprob: -11.641677856445312
    8. '**' → logprob: -11.641677856445312
    9. '```' → logprob: -12.266677856445312
    10. ')>' → logprob: -12.641677856445312

Token 10: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6580023169517517
    2. 'k' → logprob: -1.2830023765563965
    3. ' p' → logprob: -1.9080023765563965
    4. 'p' → logprob: -3.9080023765563965
    5. ' )' → logprob: -4.4080023765563965
    6. ' x' → logprob: -6.0330023765563965
    7. ' t' → logprob: -6.1580023765563965
    8. ' d' → logprob: -6.1580023765563965
    9. ' ' → logprob: -6.4080023765563965
    10. ' s' → logprob: -6.4080023765563965

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027405659202486277
    2. ')' → logprob: -6.002740383148193
    3. ',' → logprob: -8.627740859985352
    4. ':' → logprob: -9.752740859985352
    5. '):
' → logprob: -11.002740859985352
    6. '**' → logprob: -13.252740859985352
    7. ''):' → logprob: -13.252740859985352
    8. '=' → logprob: -13.627740859985352
    9. '*' → logprob: -13.627740859985352
    10. ' ):' → logprob: -14.252740859985352

Token 12: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6004467606544495
    2. '   ' → logprob: -0.8504467606544495
    3. ' ' → logprob: -5.225446701049805
    4. '):' → logprob: -5.350446701049805
    5. '    ' → logprob: -6.100446701049805
    6. ':
' → logprob: -6.225446701049805
    7. '    
' → logprob: -6.350446701049805
    8. ' 
' → logprob: -6.725446701049805
    9. ' :' → logprob: -7.100446701049805
    10. '```' → logprob: -7.100446701049805

Token 13: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38445213437080383
    2. '    ' → logprob: -1.6344521045684814
    3. '     
' → logprob: -3.6344521045684814
    4. '```' → logprob: -3.6344521045684814
    5. ' ' → logprob: -3.8844521045684814
    6. ' 
' → logprob: -4.0094523429870605
    7. '       ' → logprob: -5.5094523429870605
    8. ' ```' → logprob: -5.6344523429870605
    9. '`' → logprob: -5.8844523429870605
    10. '    
' → logprob: -6.0094523429870605

Token 14: ' dp' (ID: 21546)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.3327866494655609
    2. '   ' → logprob: -2.7077865600585938
    3. ' if' → logprob: -3.4577865600585938
    4. ' ' → logprob: -3.4577865600585938
    5. ' result' → logprob: -3.5827865600585938
    6. 'total' → logprob: -4.082786560058594
    7. ' expected' → logprob: -4.207786560058594
    8. ' possible' → logprob: -4.457786560058594
    9. ' return' → logprob: -4.707786560058594
    10. ' import' → logprob: -4.707786560058594

Token 15: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018667351454496384
    2. ' ' → logprob: -5.143667221069336
    3. '=' → logprob: -5.393667221069336
    4. '_' → logprob: -5.518667221069336
    5. '[' → logprob: -5.518667221069336
    6. ' =[' → logprob: -11.268667221069336
    7. '```' → logprob: -11.518667221069336
    8. '_space' → logprob: -11.643667221069336
    9. ')' → logprob: -11.768667221069336
    10. ',' → logprob: -11.893667221069336

Token 16: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.034571077674627304
    2. ' ][' → logprob: -3.9095711708068848
    3. ']' → logprob: -4.284571170806885
    4. ' ]' → logprob: -9.784570693969727
    5. '][:' → logprob: -10.909570693969727
    6. '   ' → logprob: -11.159570693969727
    7. ',' → logprob: -11.159570693969727
    8. '][]' → logprob: -11.534570693969727
    9. ' ' → logprob: -11.659570693969727
    10. '[' → logprob: -12.159570693969727

Token 17: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.000309840717818588
    2. 'v' → logprob: -9.875309944152832
    3. 's' → logprob: -9.875309944152832
    4. '0' → logprob: -10.250309944152832
    5. 'm' → logprob: -10.500309944152832
    6. 'k' → logprob: -10.500309944152832
    7. 'n' → logprob: -11.000309944152832
    8. ' j' → logprob: -11.250309944152832
    9. 'd' → logprob: -11.375309944152832
    10. '][' → logprob: -11.500309944152832

Token 18: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022934334352612495
    2. ' ]' → logprob: -4.272934436798096
    3. '][' → logprob: -4.897934436798096
    4. ' ][' → logprob: -6.897934436798096
    5. ']=' → logprob: -9.022933959960938
    6. '   ' → logprob: -10.647933959960938
    7. '][]' → logprob: -11.022933959960938
    8. '[' → logprob: -11.022933959960938
    9. '=' → logprob: -11.397933959960938
    10. ')' → logprob: -11.522933959960938

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34154006838798523
    2. ']' → logprob: -2.3415400981903076
    3. '[' → logprob: -2.7165400981903076
    4. '=' → logprob: -2.9665400981903076
    5. ' ]' → logprob: -3.0915400981903076
    6. '<|end|>' → logprob: -4.2165398597717285
    7. ' ][' → logprob: -4.9665398597717285
    8. '][' → logprob: -6.3415398597717285
    9. ')' → logprob: -6.8415398597717285
    10. ' ' → logprob: -6.9665398597717285

Token 20: ' number' (ID: 2086)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.32172855734825134
    2. '0' → logprob: -1.3217285871505737
    3. ' expected' → logprob: -6.071728706359863
    4. ' (' → logprob: -6.696728706359863
    5. ' [' → logprob: -7.071728706359863
    6. ' dp' → logprob: -7.196728706359863
    7. 'expected' → logprob: -7.696728706359863
    8. ' max' → logprob: -7.821728706359863
    9. 'dp' → logprob: -8.071728706359863
    10. ' sum' → logprob: -8.196728706359863

Token 21: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8957083225250244
    2. 'of' → logprob: -1.1457083225250244
    3. ' of' → logprob: -2.1457083225250244
    4. '_' → logprob: -2.7707083225250244
    5. '_of' → logprob: -3.5207083225250244
    6. ']' → logprob: -4.145708084106445
    7. 's' → logprob: -4.270708084106445
    8. '<|end|>' → logprob: -4.895708084106445
    9. '.' → logprob: -5.395708084106445
    10. ')' → logprob: -5.395708084106445

Token 22: ' ways' (ID: 6984)
  Prédit: ' ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.09394166618585587
    2. ' sequences' → logprob: -2.9689416885375977
    3. 'ways' → logprob: -4.843941688537598
    4. ' steps' → logprob: -6.093941688537598
    5. ' coins' → logprob: -6.218941688537598
    6. ' arrays' → logprob: -6.343941688537598
    7. ' subsets' → logprob: -6.343941688537598
    8. ' times' → logprob: -6.343941688537598
    9. ' subse' → logprob: -6.843941688537598
    10. '_' → logprob: -6.968941688537598

Token 23: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1416912078857422
    2. ' to' → logprob: -2.266691207885742
    3. '    ' → logprob: -5.016691207885742
    4. '   ' → logprob: -5.141691207885742
    5. ' ' → logprob: -5.141691207885742
    6. ' [' → logprob: -6.016691207885742
    7. '\[' → logprob: -6.016691207885742
    8. '[i' → logprob: -6.641691207885742
    9. 'to' → logprob: -6.766691207885742
    10. '[
' → logprob: -7.766691207885742

Token 24: ' get' (ID: 717)
  Prédit: ' reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reach' → logprob: -0.7706485390663147
    2. ' choose' → logprob: -1.39564847946167
    3. ' have' → logprob: -2.39564847946167
    4. ' achieve' → logprob: -3.39564847946167
    5. ' select' → logprob: -3.52064847946167
    6. ' distribute' → logprob: -3.64564847946167
    7. ' pick' → logprob: -3.77064847946167
    8. ' get' → logprob: -4.27064847946167
    9. ' place' → logprob: -4.52064847946167
    10. 'choose' → logprob: -4.52064847946167

Token 25: ' sum' (ID: 4215)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.2050894498825073
    2. ' i' → logprob: -1.2050894498825073
    3. ' j' → logprob: -1.5800894498825073
    4. ' ' → logprob: -2.705089569091797
    5. ' to' → logprob: -2.705089569091797
    6. ' the' → logprob: -3.455089569091797
    7. 'i' → logprob: -4.955089569091797
    8. 'j' → logprob: -5.205089569091797
    9. ' exactly' → logprob: -5.830089569091797
    10. '<|end|>' → logprob: -5.830089569091797

Token 26: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1970253586769104
    2. ' i' → logprob: -2.3220252990722656
    3. ' =' → logprob: -2.9470252990722656
    4. '=' → logprob: -4.072025299072266
    5. '_' → logprob: -6.197025299072266
    6. '<|end|>' → logprob: -6.197025299072266
    7. ' s' → logprob: -6.697025299072266
    8. 's' → logprob: -7.197025299072266
    9. 'i' → logprob: -7.197025299072266
    10. '    ' → logprob: -7.697025299072266

Token 27: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8609136343002319
    2. '[' → logprob: -1.110913634300232
    3. ' ' → logprob: -1.985913634300232
    4. '    ' → logprob: -3.4859137535095215
    5. ']' → logprob: -4.2359137535095215
    6. '_' → logprob: -4.2359137535095215
    7. '```' → logprob: -4.4859137535095215
    8. '\[' → logprob: -4.7359137535095215
    9. '  ' → logprob: -4.8609137535095215
    10. ' ]' → logprob: -5.2359137535095215

Token 28: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.11287267506122589
    2. 'i' → logprob: -2.23787260055542
    3. ' exactly' → logprob: -10.237873077392578
    4. 'exact' → logprob: -12.362873077392578
    5. ' the' → logprob: -12.987873077392578
    6. ' at' → logprob: -13.612873077392578
    7. ' a' → logprob: -13.612873077392578
    8. '	i' → logprob: -14.237873077392578
    9. ' ' → logprob: -14.362873077392578
    10. '   ' → logprob: -14.612873077392578

Token 29: ' dice' (ID: 22078)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.09322591871023178
    2. ' dice' → logprob: -2.9682259559631348
    3. ' coins' → logprob: -3.8432259559631348
    4. ' ' → logprob: -5.468225955963135
    5. ' dices' → logprob: -5.968225955963135
    6. ' eggs' → logprob: -6.718225955963135
    7. ' draws' → logprob: -6.718225955963135
    8. ' tokens' → logprob: -7.093225955963135
    9. ' steps' → logprob: -7.218225955963135
    10. ' spaces' → logprob: -7.343225955963135

Token 30: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1631324291229248
    2. '[' → logprob: -2.538132429122925
    3. ' ' → logprob: -3.288132429122925
    4. ']' → logprob: -4.538132667541504
    5. '\' → logprob: -5.538132667541504
    6. '```' → logprob: -5.538132667541504
    7. '\[' → logprob: -5.913132667541504
    8. ' ]' → logprob: -6.038132667541504
    9. '    ' → logprob: -6.538132667541504
    10. ',' → logprob: -6.788132667541504

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20714391767978668
    2. '[' → logprob: -2.332144021987915
    3. ' ' → logprob: -3.457144021987915
    4. '_' → logprob: -3.582144021987915
    5. '```' → logprob: -4.707143783569336
    6. '    ' → logprob: -5.082143783569336
    7. ']' → logprob: -5.582143783569336
    8. ' ]' → logprob: -5.832143783569336
    9. '\[' → logprob: -5.957143783569336
    10. '\' → logprob: -6.957143783569336

Token 32: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2689596712589264
    2. ' dp' → logprob: -2.2689597606658936
    3. 'dp' → logprob: -3.0189597606658936
    4. 'd' → logprob: -3.1439597606658936
    5. ' ' → logprob: -3.5189597606658936
    6. '\' → logprob: -5.8939595222473145
    7. '```' → logprob: -6.7689595222473145
    8. ' 
' → logprob: -6.7689595222473145
    9. 'n' → logprob: -7.0189595222473145
    10. '    ' → logprob: -7.0189595222473145

Token 33: ' sums' (ID: 73121)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.4047110676765442
    2. 'dp' → logprob: -1.6547110080718994
    3. '   ' → logprob: -2.4047110080718994
    4. 'd' → logprob: -3.4047110080718994
    5. ' ' → logprob: -4.9047112464904785
    6. '    ' → logprob: -5.7797112464904785
    7. ' d' → logprob: -6.0297112464904785
    8. ' ]' → logprob: -6.9047112464904785
    9. 'n' → logprob: -7.2797112464904785
    10. ' ```' → logprob: -7.4047112464904785

Token 34: ' range' (ID: 3352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04021589457988739
    2. ']' → logprob: -4.290215969085693
    3. ' ' → logprob: -4.665215969085693
    4. '=' → logprob: -5.040215969085693
    5. '_' → logprob: -5.165215969085693
    6. ' ]' → logprob: -6.290215969085693
    7. ')' → logprob: -7.040215969085693
    8. '   ' → logprob: -8.040215492248535
    9. '[' → logprob: -8.665215492248535
    10. ',' → logprob: -8.790215492248535

Token 35: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.26478061079978943
    2. '=' → logprob: -2.6397805213928223
    3. ' =' → logprob: -2.6397805213928223
    4. 'from' → logprob: -3.0147805213928223
    5. ' up' → logprob: -4.014780521392822
    6. ' ' → logprob: -4.014780521392822
    7. ':' → logprob: -6.014780521392822
    8. ' to' → logprob: -7.639780521392822
    9. '_' → logprob: -7.764780521392822
    10. '    ' → logprob: -8.38978099822998

Token 36: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.023315709084272385
    2. 'i' → logprob: -3.773315668106079
    3. ' ' → logprob: -9.8983154296875
    4. '0' → logprob: -11.5233154296875
    5. ' n' → logprob: -12.2733154296875
    6. ' k' → logprob: -13.2733154296875
    7. '	i' → logprob: -13.7733154296875
    8. '_i' → logprob: -13.8983154296875
    9. 'n' → logprob: -15.0233154296875
    10. '[i' → logprob: -15.6483154296875

Token 37: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0345335453748703
    2. 'to' → logprob: -4.284533500671387
    3. ' ' → logprob: -4.909533500671387
    4. '```' → logprob: -5.159533500671387
    5. '[i' → logprob: -5.909533500671387
    6. '   ' → logprob: -6.409533500671387
    7. '    ' → logprob: -8.284533500671387
    8. '[' → logprob: -8.534533500671387
    9. '=' → logprob: -8.659533500671387
    10. ',' → logprob: -8.659533500671387

Token 38: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4345037341117859
    2. ' i' → logprob: -1.0595037937164307
    3. '6' → logprob: -5.809503555297852
    4. ' ' → logprob: -6.184503555297852
    5. 'm' → logprob: -8.434503555297852
    6. ' m' → logprob: -9.059503555297852
    7. '10' → logprob: -9.684503555297852
    8. 'ik' → logprob: -9.684503555297852
    9. '3' → logprob: -10.184503555297852
    10. '7' → logprob: -10.559503555297852

Token 39: '*m' (ID: 85049)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6656972765922546
    2. '*i' → logprob: -1.2906973361968994
    3. '*n' → logprob: -2.6656973361968994
    4. ' *' → logprob: -2.6656973361968994
    5. ',' → logprob: -4.04069709777832
    6. '*m' → logprob: -4.29069709777832
    7. '```' → logprob: -4.66569709777832
    8. '*(' → logprob: -5.16569709777832
    9. ' ' → logprob: -5.91569709777832
    10. '*j' → logprob: -5.91569709777832

Token 40: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015363587066531181
    2. '```' → logprob: -5.640363693237305
    3. ' ' → logprob: -5.765363693237305
    4. '    ' → logprob: -6.015363693237305
    5. 'dp' → logprob: -6.265363693237305
    6. 'n' → logprob: -6.765363693237305
    7. '\' → logprob: -7.640363693237305
    8. '
' → logprob: -7.890363693237305
    9. ' dp' → logprob: -8.015363693237305
    10. '    
' → logprob: -8.140363693237305

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0065337116830050945
    2. ' dp' → logprob: -6.131533622741699
    3. 'dp' → logprob: -6.256533622741699
    4. ' ' → logprob: -6.631533622741699
    5. '```' → logprob: -7.631533622741699
    6. '    ' → logprob: -8.5065336227417
    7. '    
' → logprob: -9.6315336227417
    8. ' 
' → logprob: -10.0065336227417
    9. '
' → logprob: -10.0065336227417
    10. 'd' → logprob: -10.2565336227417

Token 42: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09159019589424133
    2. 'd' → logprob: -3.216590166091919
    3. ' ' → logprob: -4.341590404510498
    4. ' dp' → logprob: -4.591590404510498
    5. 'dp' → logprob: -4.716590404510498
    6. '    ' → logprob: -5.591590404510498
    7. '```' → logprob: -5.841590404510498
    8. 'n' → logprob: -6.091590404510498
    9. ' ```' → logprob: -6.341590404510498
    10. ' \' → logprob: -7.091590404510498

Token 43: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.006922688335180283
    2. '_' → logprob: -5.131922721862793
    3. '_s' → logprob: -7.631922721862793
    4. '_value' → logprob: -8.256922721862793
    5. '_val' → logprob: -8.381922721862793
    6. '_j' → logprob: -11.756922721862793
    7. 'sum' → logprob: -12.381922721862793
    8. '_score' → logprob: -13.256922721862793
    9. '_len' → logprob: -13.756922721862793
    10. '_size' → logprob: -13.756922721862793

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0788925439119339
    2. '=' → logprob: -2.578892469406128
    3. '_' → logprob: -13.703892707824707
    4. ' ' → logprob: -14.328892707824707
    5. '_=' → logprob: -15.328892707824707
    6. '  ' → logprob: -15.328892707824707
    7. '   ' → logprob: -15.453892707824707
    8. ',' → logprob: -16.45389175415039
    9. ' =
' → logprob: -16.70389175415039
    10. ')' → logprob: -16.95389175415039

Token 45: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02286652848124504
    2. 'n' → logprob: -3.8978664875030518
    3. ' m' → logprob: -6.397866725921631
    4. ' k' → logprob: -8.022866249084473
    5. 'm' → logprob: -9.272866249084473
    6. ' ' → logprob: -9.272866249084473
    7. ' i' → logprob: -9.647866249084473
    8. 'k' → logprob: -10.022866249084473
    9. 'i' → logprob: -10.647866249084473
    10. ' ' → logprob: -13.272866249084473

Token 46: ' *' (ID: 425)
  Prédit: '*m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*m' → logprob: -0.45324674248695374
    2. '*' → logprob: -1.7032467126846313
    3. ' *' → logprob: -1.7032467126846313
    4. '*k' → logprob: -8.4532470703125
    5. '*n' → logprob: -11.0782470703125
    6. '*i' → logprob: -11.7032470703125
    7. ' ' → logprob: -12.7032470703125
    8. '**' → logprob: -13.0782470703125
    9. '*j' → logprob: -13.3282470703125
    10. '*u' → logprob: -13.5782470703125

Token 47: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5759462714195251
    2. 'm' → logprob: -0.8259462714195251
    3. ' ' → logprob: -12.200945854187012
    4. '	m' → logprob: -14.950945854187012
    5. '   ' → logprob: -15.825945854187012
    6. '<|end|>' → logprob: -15.825945854187012
    7. '    ' → logprob: -15.950945854187012
    8. 'space' → logprob: -16.075946807861328
    9. ' ' → logprob: -16.138446807861328
    10. '(m' → logprob: -16.513446807861328

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03179158270359039
    2. '   ' → logprob: -4.156791687011719
    3. '\n' → logprob: -5.406791687011719
    4. '    
' → logprob: -5.656791687011719
    5. '```' → logprob: -6.281791687011719
    6. '
' → logprob: -6.406791687011719
    7. 'dp' → logprob: -6.531791687011719
    8. ' 
' → logprob: -7.156791687011719
    9. '  
' → logprob: -7.406791687011719
    10. ' dp' → logprob: -8.281791687011719

Token 49: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17575493454933167
    2. '   ' → logprob: -2.175755023956299
    3. '    
' → logprob: -4.300755023956299
    4. 'dp' → logprob: -4.300755023956299
    5. ' 
' → logprob: -4.675755023956299
    6. ' dp' → logprob: -4.800755023956299
    7. '     
' → logprob: -7.175755023956299
    8. '   
' → logprob: -7.300755023956299
    9. '```' → logprob: -7.925755023956299
    10. '  
' → logprob: -8.30075454711914

Token 50: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.5046106576919556
    2. 'dp' (adapté à ' dp') → logprob: -1.5046106576919556
    3. '   ' → logprob: -1.7546106576919556
    4. '
' → logprob: -7.754610538482666
    5. '	dp' → logprob: -8.379611015319824
    6. '    
' → logprob: -8.629611015319824
    7. '```' → logprob: -8.879611015319824
    8. ' 
' → logprob: -9.629611015319824
    9. 'import' → logprob: -10.004611015319824
    10. ' ' → logprob: -10.754611015319824

Token 51: '_prev' (ID: 60491)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016603630036115646
    2. '=' → logprob: -4.141603469848633
    3. '[' → logprob: -7.891603469848633
    4. ' ' → logprob: -8.891603469848633
    5. ' =[' → logprob: -10.516603469848633
    6. '=[' → logprob: -10.891603469848633
    7. '   ' → logprob: -13.016603469848633
    8. '[i' → logprob: -13.266603469848633
    9. ']' → logprob: -13.391603469848633
    10. '=[[' → logprob: -13.641603469848633

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07911064475774765
    2. '=' → logprob: -2.579110622406006
    3. '[' → logprob: -8.704111099243164
    4. ' ' → logprob: -10.329111099243164
    5. ' =[' → logprob: -11.954111099243164
    6. '=[' → logprob: -12.454111099243164
    7. ']' → logprob: -12.829111099243164
    8. ',' → logprob: -12.954111099243164
    9. '   ' → logprob: -13.079111099243164
    10. '[:]' → logprob: -13.829111099243164

Token 53: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014320983551442623
    2. ' [' → logprob: -4.2643208503723145
    3. '{' → logprob: -8.764321327209473
    4. ' {' → logprob: -14.514321327209473
    5. '[n' → logprob: -15.264321327209473
    6. '[int' → logprob: -15.264321327209473
    7. '[i' → logprob: -16.389320373535156
    8. '[s' → logprob: -17.139320373535156
    9. ' ' → logprob: -17.389320373535156
    10. '[j' → logprob: -17.514320373535156

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026317482814192772
    2. '1' → logprob: -3.651317596435547
    3. ' ' → logprob: -11.026317596435547
    4. ']' → logprob: -14.901317596435547
    5. '```' → logprob: -16.276317596435547
    6. '-' → logprob: -16.776317596435547
    7. '   ' → logprob: -16.901317596435547
    8. 'int' → logprob: -17.026317596435547
    9. '۰' → logprob: -17.213817596435547
    10. '[' → logprob: -17.338817596435547

Token 55: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005907938349992037
    2. ']*(' → logprob: -5.255908012390137
    3. ' ]' → logprob: -8.130908012390137
    4. ']*' → logprob: -8.255908012390137
    5. ' for' → logprob: -9.380908012390137
    6. 'for' → logprob: -11.255908012390137
    7. ',' → logprob: -11.255908012390137
    8. ']+' → logprob: -12.255908012390137
    9. ']int' → logprob: -14.505908012390137
    10. ' *' → logprob: -14.505908012390137

Token 56: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07739394158124924
    2. '*' → logprob: -3.0773940086364746
    3. '<|end|>' → logprob: -4.577394008636475
    4. ' +' → logprob: -4.952394008636475
    5. '+' → logprob: -5.327394008636475
    6. '*(' → logprob: -5.702394008636475
    7. ' ' → logprob: -6.827394008636475
    8. ' for' → logprob: -8.077393531799316
    9. ']' → logprob: -8.327393531799316
    10. ',' → logprob: -8.577393531799316

Token 57: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.5478780269622803
    2. '(k' → logprob: -1.6728780269622803
    3. '(m' → logprob: -2.0478780269622803
    4. '(' → logprob: -2.9228780269622803
    5. '(n' → logprob: -3.4228780269622803
    6. ' (' → logprob: -4.547878265380859
    7. '((' → logprob: -5.047878265380859
    8. '(i' → logprob: -7.297878265380859
    9. '0' → logprob: -8.17287826538086
    10. '1' → logprob: -8.29787826538086

Token 58: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1071939468383789
    2. '(max' → logprob: -2.857193946838379
    3. 'k' → logprob: -4.232193946838379
    4. '(k' → logprob: -4.732193946838379
    5. '(n' → logprob: -5.357193946838379
    6. 'n' → logprob: -5.482193946838379
    7. ' max' → logprob: -5.482193946838379
    8. 'm' → logprob: -5.857193946838379
    9. '(m' → logprob: -6.607193946838379
    10. '(' → logprob: -6.607193946838379

Token 59: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00019388488726690412
    2. '_' → logprob: -9.25019359588623
    3. '+' → logprob: -9.75019359588623
    4. '_s' → logprob: -10.75019359588623
    5. ' _' → logprob: -12.37519359588623
    6. ' +' → logprob: -12.87519359588623
    7. 'sum' → logprob: -13.12519359588623
    8. '_max' → logprob: -13.75019359588623
    9. ')' → logprob: -14.00019359588623
    10. '_val' → logprob: -14.12519359588623

Token 60: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03364615887403488
    2. ' +' → logprob: -3.4086461067199707
    3. ' ' → logprob: -16.033645629882812
    4. '＋' → logprob: -16.658645629882812
    5. '+
' → logprob: -16.783645629882812
    6. ' -' → logprob: -17.158645629882812
    7. '   ' → logprob: -17.408645629882812
    8. '-' → logprob: -17.783645629882812
    9. '+xml' → logprob: -17.908645629882812
    10. '+

' → logprob: -18.033645629882812

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006715967319905758
    2. ' ' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.006715774536133
    4. '2' → logprob: -16.131715774536133
    5. '  ' → logprob: -16.256715774536133
    6. '```' → logprob: -16.506715774536133
    7. ')' → logprob: -17.381715774536133
    8. '    ' → logprob: -18.506715774536133
    9. ' ' → logprob: -18.506715774536133
    10. '7' → logprob: -18.694215774536133

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '2' → logprob: -15.500015258789062
    4. '0' → logprob: -16.375015258789062
    5. 'k' → logprob: -17.000015258789062
    6. '10' → logprob: -17.312515258789062
    7. '   ' → logprob: -17.750015258789062
    8. '(' → logprob: -18.062515258789062
    9. '{' → logprob: -18.375015258789062
    10. '100' → logprob: -18.437515258789062

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021879478299524635
    2. ')
' → logprob: -8.500218391418457
    3. ' )' → logprob: -12.125218391418457
    4. ')

' → logprob: -12.750218391418457
    5. '<|end|>' → logprob: -13.000218391418457
    6. '   ' → logprob: -13.125218391418457
    7. ')
' → logprob: -13.375218391418457
    8. '),' → logprob: -15.500218391418457
    9. '```' → logprob: -15.875218391418457
    10. '<|end|>' → logprob: -16.250219345092773

Token 64: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3659820556640625
    2. '   ' → logprob: -1.2409820556640625
    3. ' dp' → logprob: -4.8659820556640625
    4. '
' → logprob: -5.4909820556640625
    5. '	dp' → logprob: -6.1159820556640625
    6. '    
' → logprob: -6.6159820556640625
    7. '<|end|>' → logprob: -7.3659820556640625
    8. ' 
' → logprob: -7.7409820556640625
    9. '  
' → logprob: -8.115982055664062
    10. '```' → logprob: -9.240982055664062

Token 65: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.030878445133566856
    2. ' dp' → logprob: -3.7808785438537598
    3. '   ' → logprob: -4.90587854385376
    4. '```' → logprob: -9.530878067016602
    5. '	dp' → logprob: -9.655878067016602
    6. ' ' → logprob: -10.780878067016602
    7. '`' → logprob: -11.280878067016602
    8. '  ' → logprob: -11.905878067016602
    9. '[' → logprob: -12.155878067016602
    10. '(dp' → logprob: -12.780878067016602

Token 66: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -1.7120533811976202e-05
    2. '_previous' → logprob: -11.625017166137695
    3. 'prev' → logprob: -12.750017166137695
    4. '_' → logprob: -13.625017166137695
    5. '_next' → logprob: -14.125017166137695
    6. '_pre' → logprob: -14.625017166137695
    7. '```' → logprob: -14.750017166137695
    8. '[' → logprob: -15.000017166137695
    9. '[_' → logprob: -15.125017166137695
    10. 'Prev' → logprob: -15.125017166137695

Token 67: '[' (ID: 58)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.22557874023914337
    2. '[' → logprob: -1.600578784942627
    3. '[m' → logprob: -9.850578308105469
    4. '[i' → logprob: -10.350578308105469
    5. '[-' → logprob: -10.850578308105469
    6. ' [' → logprob: -11.225578308105469
    7. '[len' → logprob: -11.225578308105469
    8. 'n' → logprob: -11.975578308105469
    9. '[max' → logprob: -12.350578308105469
    10. ' =' → logprob: -12.475578308105469

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006591808632947505
    2. 'n' → logprob: -7.875658988952637
    3. ' ' → logprob: -8.250658988952637
    4. '1' → logprob: -11.875658988952637
    5. 'i' → logprob: -12.750658988952637
    6. ']' → logprob: -12.875658988952637
    7. '  ' → logprob: -13.625658988952637
    8. ' n' → logprob: -14.000658988952637
    9. ')' → logprob: -14.313158988952637
    10. '   ' → logprob: -14.438158988952637

Token 69: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010311149060726166
    2. ' ]' → logprob: -5.135311126708984
    3. ')' → logprob: -6.385311126708984
    4. '=' → logprob: -6.510311126708984
    5. ']=' → logprob: -7.260311126708984
    6. ' =' → logprob: -7.760311126708984
    7. ' )' → logprob: -10.010311126708984
    8. ')]' → logprob: -11.510311126708984
    9. ')=' → logprob: -11.635311126708984
    10. ' ' → logprob: -13.635311126708984

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.575940728187561
    2. '=' → logprob: -0.825940728187561
    3. '=True' → logprob: -14.70094108581543
    4. ' +=' → logprob: -16.07594108581543
    5. '=int' → logprob: -16.45094108581543
    6. ' ' → logprob: -16.45094108581543
    7. '<|end|>' → logprob: -16.45094108581543
    8. '＝' → logprob: -16.57594108581543
    9. ' |=' → logprob: -16.70094108581543
    10. ']=' → logprob: -17.07594108581543

Token 71: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0683535037969705e-05
    2. '0' → logprob: -11.87501049041748
    3. ' ' → logprob: -12.50001049041748
    4. '<|end|>' → logprob: -17.750011444091797
    5. '۱' → logprob: -18.375011444091797
    6. '  ' → logprob: -18.875011444091797
    7. '   ' → logprob: -19.000011444091797
    8. '১' → logprob: -20.375011444091797
    9. '<|end|>' → logprob: -21.187511444091797
    10. '१' → logprob: -21.375011444091797

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038169484469108284
    2. '0' → logprob: -7.8753814697265625
    3. ' ' → logprob: -13.375381469726562
    4. '<|end|>' → logprob: -18.250381469726562
    5. '  ' → logprob: -18.500381469726562
    6. '۱' → logprob: -18.687881469726562
    7. '[' → logprob: -18.812881469726562
    8. '   ' → logprob: -18.812881469726562
    9. '{' → logprob: -19.312881469726562
    10. '```' → logprob: -19.562881469726562

Token 73: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1145898774266243
    2. '
' → logprob: -3.2395899295806885
    3. ' ' → logprob: -3.8645899295806885
    4. '\' → logprob: -4.364589691162109
    5. '\n' → logprob: -4.989589691162109
    6. '    
' → logprob: -5.114589691162109
    7. '[' → logprob: -5.489589691162109
    8. '<|end|>' → logprob: -5.614589691162109
    9. '' → logprob: -5.864589691162109
    10. ' 
' → logprob: -5.989589691162109

Token 75: ' base' (ID: 3611)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4674167037010193
    2. '0' → logprob: -1.092416763305664
    3. 'def' → logprob: -4.717416763305664
    4. '  ' → logprob: -4.967416763305664
    5. '   ' → logprob: -5.592416763305664
    6. ' for' → logprob: -5.592416763305664
    7. '#' → logprob: -5.717416763305664
    8. 'for' → logprob: -5.717416763305664
    9. '    ' → logprob: -6.592416763305664
    10. '\' → logprob: -7.092416763305664

Token 76: ' case' (ID: 1890)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23334020376205444
    2. '\n' → logprob: -2.983340263366699
    3. '<|end|>' → logprob: -3.358340263366699
    4. '\' → logprob: -3.483340263366699
    5. '[' → logprob: -3.483340263366699
    6. '    
' → logprob: -4.233340263366699
    7. '```' → logprob: -4.233340263366699
    8. '   
' → logprob: -5.233340263366699
    9. ' 
' → logprob: -5.608340263366699
    10. '   ' → logprob: -5.858340263366699

Token 77: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9646689891815186
    2. ' 
' → logprob: -1.8396689891815186
    3. '\n' → logprob: -1.9646689891815186
    4. '   ' → logprob: -1.9646689891815186
    5. '    
' → logprob: -3.3396689891815186
    6. '[' → logprob: -3.3396689891815186
    7. '\' → logprob: -3.3396689891815186
    8. '<|end|>' → logprob: -3.8396689891815186
    9. ' ' → logprob: -4.214669227600098
    10. '   
' → logprob: -4.964669227600098

Token 78: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5224586129188538
    2. ' ' → logprob: -1.147458553314209
    3. '   ' → logprob: -2.647458553314209
    4. '<|end|>' → logprob: -5.522458553314209
    5. '    ' → logprob: -6.022458553314209
    6. ')' → logprob: -6.147458553314209
    7. '[' → logprob: -6.397458553314209
    8. '  ' → logprob: -6.522458553314209
    9. ' 
' → logprob: -6.647458553314209
    10. ' ' → logprob: -7.147458553314209

Token 79: ' dice' (ID: 22078)
  Prédit: ' dice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dice' → logprob: -0.32474032044410706
    2. 'dice' → logprob: -1.8247402906417847
    3. '<|end|>' → logprob: -3.824740409851074
    4. '  ' → logprob: -3.824740409851074
    5. ' ways' → logprob: -4.074740409851074
    6. 'Dice' → logprob: -4.824740409851074
    7. ' ' → logprob: -5.074740409851074
    8. 's' → logprob: -5.324740409851074
    9. 'd' → logprob: -5.449740409851074
    10. ',' → logprob: -5.699740409851074

Token 80: ' sum' (ID: 4215)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5535680651664734
    2. '<|end|>' → logprob: -1.3035681247711182
    3. '   ' → logprob: -2.678568124771118
    4. '\n' → logprob: -3.803568124771118
    5. '<|end|>' → logprob: -4.553567886352539
    6. '    
' → logprob: -4.553567886352539
    7. '[' → logprob: -4.803567886352539
    8. '  ' → logprob: -5.178567886352539
    9. ' 
' → logprob: -5.428567886352539
    10. '   
' → logprob: -5.553567886352539

Token 81: ' zero' (ID: 12421)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' ways' (ID: 6984)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48535075783729553
    2. '\n' → logprob: -1.6103507280349731
    3. '\' → logprob: -2.8603508472442627
    4. '<|end|>' → logprob: -2.8603508472442627
    5. '   ' → logprob: -3.9853508472442627
    6. '    
' → logprob: -4.110350608825684
    7. '' → logprob: -5.110350608825684
    8. ' 
' → logprob: -5.360350608825684
    9. '  
' → logprob: -5.485350608825684
    10. '[' → logprob: -5.735350608825684

Token 83: ' considered' (ID: 9474)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2152880430221558
    2. '\n' → logprob: -1.3402880430221558
    3. '<|end|>' → logprob: -2.2152881622314453
    4. '[' → logprob: -2.4652881622314453
    5. '\' → logprob: -2.9652881622314453
    6. '   ' → logprob: -3.0902881622314453
    7. '```' → logprob: -3.5902881622314453
    8. ' ' → logprob: -3.8402881622314453
    9. '0' → logprob: -3.9652881622314453
    10. '' → logprob: -4.215288162231445

Token 84: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41559919714927673
    2. '\n' → logprob: -1.9155992269515991
    3. '[' → logprob: -2.9155991077423096
    4. '\' → logprob: -3.5405991077423096
    5. '<|end|>' → logprob: -3.6655991077423096
    6. '   ' → logprob: -4.540599346160889
    7. '' → logprob: -4.540599346160889
    8. '    
' → logprob: -4.540599346160889
    9. '  
' → logprob: -4.790599346160889
    10. ' ' → logprob: -4.915599346160889

Token 85: '1' (ID: 16)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4603458046913147
    2. '<|end|>' → logprob: -1.46034574508667
    3. '\' → logprob: -3.21034574508667
    4. '\n' → logprob: -3.46034574508667
    5. '<|end|>' → logprob: -4.21034574508667
    6. '.' → logprob: -5.21034574508667
    7. ' for' → logprob: -5.21034574508667
    8. ' ' → logprob: -5.46034574508667
    9. ',' → logprob: -5.71034574508667
    10. '0' → logprob: -5.83534574508667

Token 86: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0697706937789917
    2. '<|end|>' → logprob: -3.0697708129882812
    3. '\n' → logprob: -5.319770812988281
    4. '    
' → logprob: -5.819770812988281
    5. ' 
' → logprob: -6.069770812988281
    6. '<|end|>' → logprob: -6.194770812988281
    7. '' → logprob: -6.819770812988281
    8. '  
' → logprob: -7.069770812988281
    9. '   ' → logprob: -7.069770812988281
    10. '[' → logprob: -7.194770812988281

Token 87: ' start' (ID: 1604)
  Prédit: ' represent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' represent' → logprob: -0.15649472177028656
    2. 'represent' → logprob: -2.031494617462158
    3. '1' → logprob: -5.531494617462158
    4. ' indicate' → logprob: -6.156494617462158
    5. 'start' → logprob: -6.406494617462158
    6. '0' → logprob: -6.406494617462158
    7. 'count' → logprob: -6.781494617462158
    8. ' ' → logprob: -7.656494617462158
    9. 'reflect' → logprob: -7.781494617462158
    10. ' denote' → logprob: -8.281495094299316

Token 88: ' transitions' (ID: 59824)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0686272531747818
    2. '<|end|>' → logprob: -3.06862735748291
    3. '\n' → logprob: -5.19362735748291
    4. '   ' → logprob: -5.69362735748291
    5. '    
' → logprob: -5.81862735748291
    6. '' → logprob: -6.81862735748291
    7. '<|end|>' → logprob: -6.81862735748291
    8. '  
' → logprob: -6.94362735748291
    9. '\' → logprob: -6.94362735748291
    10. ' 
' → logprob: -6.94362735748291

Token 89: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16950373351573944
    2. '<|end|>' → logprob: -2.919503688812256
    3. '\n' → logprob: -3.419503688812256
    4. ' 
' → logprob: -3.919503688812256
    5. '    
' → logprob: -4.669503688812256
    6. '' → logprob: -4.919503688812256
    7. '\' → logprob: -4.919503688812256
    8. '  
' → logprob: -5.044503688812256
    9. '   ' → logprob: -5.044503688812256
    10. '<|end|>' → logprob: -6.044503688812256

Token 90: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.13307146728038788
    2. '\n' → logprob: -3.1330714225769043
    3. ' 
' → logprob: -3.6330714225769043
    4. '\' → logprob: -4.383071422576904
    5. '  
' → logprob: -4.758071422576904
    6. '[' → logprob: -4.883071422576904
    7. '    
' → logprob: -5.133071422576904
    8. '   ' → logprob: -5.633071422576904
    9. '' → logprob: -5.758071422576904
    10. ' ' → logprob: -5.883071422576904

Token 91: ' for' (ID: 395)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1385614424943924
    2. 'for' (adapté à ' for') → logprob: -3.138561487197876
    3. '   ' → logprob: -3.513561487197876
    4. ' for' → logprob: -4.138561248779297
    5. '\' → logprob: -4.263561248779297
    6. '
' → logprob: -4.513561248779297
    7. '    
' → logprob: -5.263561248779297
    8. ' 
' → logprob: -6.013561248779297
    9. ' ' → logprob: -6.388561248779297
    10. '```' → logprob: -6.513561248779297

Token 92: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004234274383634329
    2. ' _' → logprob: -6.004234313964844
    3. ' ' → logprob: -6.504234313964844
    4. 'i' → logprob: -9.004234313964844
    5. '_' → logprob: -9.129234313964844
    6. ' n' → logprob: -11.504234313964844
    7. ' ‌' → logprob: -11.879234313964844
    8. ' space' → logprob: -13.129234313964844
    9. '_i' → logprob: -13.379234313964844
    10. '	i' → logprob: -13.379234313964844

Token 93: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.032846830785274506
    2. ' in' → logprob: -3.5328469276428223
    3. 'i' → logprob: -6.157846927642822
    4. 'range' → logprob: -7.282846927642822
    5. 'import' → logprob: -9.407846450805664
    6. 'n' → logprob: -9.657846450805664
    7. ' ' → logprob: -10.157846450805664
    8. '1' → logprob: -10.407846450805664
    9. '   ' → logprob: -11.532846450805664
    10. '  ' → logprob: -11.907846450805664

Token 94: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011219589039683342
    2. ' range' → logprob: -4.511219501495361
    3. '(range' → logprob: -8.76121997833252
    4. 'ange' → logprob: -11.76121997833252
    5. '	range' → logprob: -12.63621997833252
    6. ')' → logprob: -13.88621997833252
    7. '<|end|>' → logprob: -14.38621997833252
    8. '```' → logprob: -14.51121997833252
    9. '_range' → logprob: -14.63621997833252
    10. ' xrange' → logprob: -14.88621997833252

Token 95: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004746841266751289
    2. '(n' → logprob: -5.379746913909912
    3. ' (' → logprob: -9.129746437072754
    4. '1' → logprob: -11.379746437072754
    5. ')' → logprob: -13.254746437072754
    6. '(range' → logprob: -13.379746437072754
    7. ' ' → logprob: -13.879746437072754
    8. ' in' → logprob: -14.004746437072754
    9. 'n' → logprob: -14.754746437072754
    10. '   ' → logprob: -15.254746437072754

Token 96: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006743087433278561
    2. ' ):' → logprob: -7.625674247741699
    3. ')' → logprob: -9.2506742477417
    4. '):
' → logprob: -10.0006742477417
    5. '+' → logprob: -10.3756742477417
    6. ':' → logprob: -11.6256742477417
    7. ',' → logprob: -13.3756742477417
    8. '   ' → logprob: -14.0006742477417
    9. '1' → logprob: -14.1256742477417
    10. ' )' → logprob: -15.0006742477417

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4991772472858429
    2. '   ' → logprob: -1.2491772174835205
    3. '    ' → logprob: -3.1241772174835205
    4. ' dp' → logprob: -3.4991772174835205
    5. 'dp' → logprob: -4.7491774559021
    6. ' ' → logprob: -4.8741774559021
    7. '	dp' → logprob: -5.7491774559021
    8. '<|end|>' → logprob: -5.7491774559021
    9. '     ' → logprob: -6.3741774559021
    10. '    
' → logprob: -6.7491774559021

Token 98: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.34020787477493286
    2. 'dp' (adapté à ' dp') → logprob: -1.340207815170288
    3. '   ' → logprob: -3.715207815170288
    4. '       ' → logprob: -6.590208053588867
    5. '	dp' → logprob: -7.215208053588867
    6. '    ' → logprob: -10.090208053588867
    7. ' ' → logprob: -10.715208053588867
    8. '_dp' → logprob: -10.840208053588867
    9. '(dp' → logprob: -11.340208053588867
    10. '  ' → logprob: -11.715208053588867

Token 99: '_curr' (ID: 92432)
  Prédit: '_prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -0.17712655663490295
    2. '_curr' → logprob: -2.92712664604187
    3. '_' → logprob: -3.30212664604187
    4. '_current' → logprob: -3.55212664604187
    5. '_new' → logprob: -3.67712664604187
    6. '_next' → logprob: -4.302126407623291
    7. '_cur' → logprob: -6.802126407623291
    8. ' _' → logprob: -6.927126407623291
    9. '=_' → logprob: -7.177126407623291
    10. '_now' → logprob: -7.802126407623291

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0010336418636143208
    2. '=' → logprob: -6.876033782958984
    3. ' =[' → logprob: -14.376033782958984
    4. ' ' → logprob: -15.751033782958984
    5. '[' → logprob: -16.251033782958984
    6. '=[' → logprob: -18.626033782958984
    7. ')' → logprob: -18.751033782958984
    8. '   ' → logprob: -19.251033782958984
    9. '```' → logprob: -19.376033782958984
    10. ',' → logprob: -19.563533782958984

Token 101: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5759400129318237
    2. '[' → logprob: -0.8259400129318237
    3. ' ' → logprob: -14.700940132141113
    4. '   ' → logprob: -16.325939178466797
    5. '  ' → logprob: -17.700939178466797
    6. '[len' → logprob: -18.450939178466797
    7. '[s' → logprob: -18.825939178466797
    8. '([' → logprob: -18.825939178466797
    9. ' ' → logprob: -19.075939178466797
    10. '[n' → logprob: -19.325939178466797

Token 102: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. ')' → logprob: -17.625019073486328
    4. '[' → logprob: -17.750019073486328
    5. '   ' → logprob: -17.750019073486328
    6. '۰' → logprob: -18.250019073486328
    7. '  ' → logprob: -18.375019073486328
    8. ']' → logprob: -18.375019073486328
    9. ' [' → logprob: -19.375019073486328
    10. '```' → logprob: -19.625019073486328

Token 103: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008493896573781967
    2. ' *' → logprob: -5.008493900299072
    3. ']*(' → logprob: -7.008493900299072
    4. ')' → logprob: -7.633493900299072
    5. '*' → logprob: -8.758493423461914
    6. ']*' → logprob: -9.133493423461914
    7. ' ]' → logprob: -9.258493423461914
    8. ' ' → logprob: -11.758493423461914
    9. ' for' → logprob: -11.883493423461914
    10. '*(' → logprob: -12.258493423461914

Token 104: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.012731306254863739
    2. '*' → logprob: -4.387731075286865
    3. '*(' → logprob: -9.512731552124023
    4. ')' → logprob: -9.887731552124023
    5. ' ' → logprob: -10.387731552124023
    6. ' (' → logprob: -10.637731552124023
    7. '(max' → logprob: -11.512731552124023
    8. ']' → logprob: -11.637731552124023
    9. '(' → logprob: -12.137731552124023
    10. ' ' → logprob: -12.512731552124023

Token 105: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.008669880218803883
    2. ' (' → logprob: -4.758669853210449
    3. '(len' → logprob: -9.88366985321045
    4. '(' → logprob: -12.88366985321045
    5. '((' → logprob: -14.00866985321045
    6. '(min' → logprob: -15.88366985321045
    7. '   ' → logprob: -16.008670806884766
    8. ' ' → logprob: -16.008670806884766
    9. '(m' → logprob: -16.258670806884766
    10. '(MAX' → logprob: -16.758670806884766

Token 106: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.007519907783716917
    2. '(max' → logprob: -5.007519721984863
    3. ' max' → logprob: -7.132519721984863
    4. ' (' → logprob: -12.882519721984863
    5. 'len' → logprob: -13.882519721984863
    6. '   ' → logprob: -14.257519721984863
    7. '	max' → logprob: -15.007519721984863
    8. '(' → logprob: -15.507519721984863
    9. ' ' → logprob: -15.507519721984863
    10. '[max' → logprob: -15.507519721984863

Token 107: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.6286106983898208e-05
    2. '_' → logprob: -11.500016212463379
    3. 'sum' → logprob: -13.000016212463379
    4. '_s' → logprob: -13.125016212463379
    5. ')' → logprob: -14.625016212463379
    6. '_max' → logprob: -14.875016212463379
    7. ' _' → logprob: -15.250016212463379
    8. '+' → logprob: -16.375017166137695
    9. '_prev' → logprob: -16.500017166137695
    10. '_SUM' → logprob: -16.500017166137695

Token 108: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020752996206284
    2. ' +' → logprob: -2.350207567214966
    3. '+)' → logprob: -15.975207328796387
    4. '<|end|>' → logprob: -15.975207328796387
    5. ' +
' → logprob: -16.100208282470703
    6. ')' → logprob: -16.225208282470703
    7. ' plus' → logprob: -16.350208282470703
    8. '+
' → logprob: -16.600208282470703
    9. ' ' → logprob: -16.600208282470703
    10. '+

' → logprob: -16.850208282470703

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001706963055767119
    2. ' ' → logprob: -6.376707077026367
    3. '0' → logprob: -13.251707077026367
    4. '   ' → logprob: -14.001707077026367
    5. '2' → logprob: -14.626707077026367
    6. '10' → logprob: -15.689207077026367
    7. 'm' → logprob: -15.689207077026367
    8. '+' → logprob: -15.751707077026367
    9. '
' → logprob: -15.939207077026367
    10. ')' → logprob: -16.126707077026367

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.88418151892256e-05
    2. ' ' → logprob: -9.750059127807617
    3. '0' → logprob: -14.875059127807617
    4. '2' → logprob: -16.750059127807617
    5. '   ' → logprob: -16.875059127807617
    6. '+' → logprob: -17.937559127807617
    7. '```' → logprob: -18.562559127807617
    8. '(' → logprob: -18.812559127807617
    9. '
' → logprob: -18.812559127807617
    10. '  ' → logprob: -19.062559127807617

Token 111: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0346834659576416
    2. ')
' → logprob: -4.0346832275390625
    3. '   ' → logprob: -4.1596832275390625
    4. '       ' → logprob: -7.2846832275390625
    5. ')
' → logprob: -10.534683227539062
    6. ')

' → logprob: -10.659683227539062
    7. ' ' → logprob: -11.284683227539062
    8. '
' → logprob: -11.534683227539062
    9. ' )' → logprob: -11.784683227539062
    10. '    
' → logprob: -13.034683227539062

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7229381203651428
    2. ' for' → logprob: -0.7229381203651428
    3. '   ' → logprob: -3.972938060760498
    4. 'for' → logprob: -4.722938060760498
    5. '	for' → logprob: -6.722938060760498
    6. '<|end|>' → logprob: -8.097938537597656
    7. ' ' → logprob: -9.972938537597656
    8. '	   ' → logprob: -10.972938537597656
    9. '    ' → logprob: -11.097938537597656
    10. '  ' → logprob: -11.722938537597656

Token 113: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5355709195137024
    2. 'for' (adapté à ' for') → logprob: -0.9105709195137024
    3. '   ' → logprob: -4.410571098327637
    4. '       ' → logprob: -9.035571098327637
    5. ' ' → logprob: -9.910571098327637
    6. '	for' → logprob: -10.035571098327637
    7. '  ' → logprob: -12.285571098327637
    8. 'For' → logprob: -13.535571098327637
    9. ' For' → logprob: -14.285571098327637
    10. '    ' → logprob: -14.285571098327637

Token 114: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0542736053466797
    2. ' s' → logprob: -1.1792736053466797
    3. ' j' → logprob: -1.4292736053466797
    4. ' sum' → logprob: -2.8042736053466797
    5. 'j' → logprob: -4.17927360534668
    6. 's' → logprob: -5.05427360534668
    7. 'i' → logprob: -5.05427360534668
    8. ' total' → logprob: -5.17927360534668
    9. 'sum' → logprob: -5.30427360534668
    10. ' prev' → logprob: -5.55427360534668

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002262663561850786
    2. 'in' → logprob: -6.627262592315674
    3. ' ' → logprob: -7.002262592315674
    4. ' i' → logprob: -11.002263069152832
    5. '  ' → logprob: -13.377263069152832
    6. ' _' → logprob: -13.752263069152832
    7. ' ,' → logprob: -14.002263069152832
    8. 'n' → logprob: -14.002263069152832
    9. ',' → logprob: -14.252263069152832
    10. '	in' → logprob: -14.377263069152832

Token 116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3869797885417938
    2. ' range' → logprob: -1.1369798183441162
    3. ' ' → logprob: -10.011980056762695
    4. '(range' → logprob: -10.261980056762695
    5. '   ' → logprob: -10.886980056762695
    6. '	range' → logprob: -12.261980056762695
    7. '  ' → logprob: -12.761980056762695
    8. '    ' → logprob: -13.636980056762695
    9. ' xrange' → logprob: -14.386980056762695
    10. '_range' → logprob: -16.011980056762695

Token 117: '(max' (ID: 17178)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0688894987106323
    2. '(max' → logprob: -1.3188894987106323
    3. '(_' → logprob: -1.8188894987106323
    4. '_' → logprob: -1.9438894987106323
    5. '(_)' → logprob: -2.943889617919922
    6. '(' → logprob: -4.068889617919922
    7. '(len' → logprob: -5.193889617919922
    8. 'max' → logprob: -5.818889617919922
    9. '(_,' → logprob: -6.568889617919922
    10. 'n' → logprob: -7.193889617919922

Token 118: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.002418822143226862
    2. '_prev' → logprob: -7.1274189949035645
    3. '(' → logprob: -7.2524189949035645
    4. '_s' → logprob: -7.3774189949035645
    5. '(_' → logprob: -9.752418518066406
    6. '(n' → logprob: -9.752418518066406
    7. '(prev' → logprob: -10.502418518066406
    8. '_curr' → logprob: -10.627418518066406
    9. ')' → logprob: -11.002418518066406
    10. 'sum' → logprob: -11.502418518066406

Token 119: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6785755157470703
    2. ' -' → logprob: -1.0535755157470703
    3. '-' → logprob: -2.3035755157470703
    4. ' +' → logprob: -3.3035755157470703
    5. '):' → logprob: -5.55357551574707
    6. '-n' → logprob: -6.42857551574707
    7. ')' → logprob: -8.05357551574707
    8. ',' → logprob: -8.55357551574707
    9. '-m' → logprob: -8.55357551574707
    10. '   ' → logprob: -8.67857551574707

Token 120: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011033779446734115
    2. ' ' → logprob: -9.125110626220703
    3. '0' → logprob: -14.125110626220703
    4. '(' → logprob: -14.750110626220703
    5. '   ' → logprob: -17.250110626220703
    6. 'm' → logprob: -17.250110626220703
    7. '
' → logprob: -17.625110626220703
    8. '(m' → logprob: -17.750110626220703
    9. ' (' → logprob: -18.000110626220703
    10. '  ' → logprob: -19.125110626220703

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014406509581021965
    2. ' ' → logprob: -9.375144004821777
    3. '0' → logprob: -9.750144004821777
    4. '(' → logprob: -14.875144004821777
    5. '+' → logprob: -14.875144004821777
    6. 'n' → logprob: -16.750144958496094
    7. 'm' → logprob: -16.875144958496094
    8. '   ' → logprob: -17.000144958496094
    9. '
' → logprob: -17.125144958496094
    10. ' -' → logprob: -17.250144958496094

Token 122: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12705011665821075
    2. '):
' → logprob: -2.1270501613616943
    3. '):
' → logprob: -10.127050399780273
    4. ' ):' → logprob: -10.252050399780273
    5. ':' → logprob: -10.502050399780273
    6. '       ' → logprob: -12.127050399780273
    7. ' ):
' → logprob: -12.377050399780273
    8. '   ' → logprob: -12.377050399780273
    9. '):

' → logprob: -12.877050399780273
    10. ')' → logprob: -13.252050399780273

Token 123: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29469022154808044
    2. ' if' → logprob: -2.0446901321411133
    3. '           ' → logprob: -2.2946901321411133
    4. '<|end|>' → logprob: -3.9196901321411133
    5. 'if' → logprob: -6.669690132141113
    6. '	       ' → logprob: -6.794690132141113
    7. ':' → logprob: -7.544690132141113
    8. '<|end|>' → logprob: -7.669690132141113
    9. '               ' → logprob: -7.794690132141113
    10. '```' → logprob: -8.669690132141113

Token 124: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2221982181072235
    2. '           ' → logprob: -2.097198247909546
    3. 'if' (adapté à ' if') → logprob: -2.722198247909546
    4. ' for' → logprob: -5.222198009490967
    5. '               ' → logprob: -5.472198009490967
    6. 'for' → logprob: -7.097198009490967
    7. ' dp' → logprob: -9.097198486328125
    8. 'dp' → logprob: -9.597198486328125
    9. '       ' → logprob: -10.222198486328125
    10. '   ' → logprob: -10.597198486328125

Token 125: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.17981195449829102
    2. 'dp' → logprob: -1.804811954498291
    3. 's' → logprob: -10.804811477661133
    4. ' s' → logprob: -11.179811477661133
    5. '	dp' → logprob: -11.429811477661133
    6. '0' → logprob: -11.679811477661133
    7. ' ' → logprob: -12.304811477661133
    8. '(dp' → logprob: -12.554811477661133
    9. '_dp' → logprob: -13.179811477661133
    10. ' not' → logprob: -13.929811477661133

Token 126: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -3.173704271830502e-06
    2. 'prev' → logprob: -13.87500286102295
    3. '_pred' → logprob: -14.25000286102295
    4. '_previous' → logprob: -15.00000286102295
    5. '_curr' → logprob: -15.25000286102295
    6. '```' → logprob: -15.62500286102295
    7. '_pre' → logprob: -16.125003814697266
    8. '_prec' → logprob: -16.625003814697266
    9. 'Prev' → logprob: -16.750003814697266
    10. '_next' → logprob: -16.750003814697266

Token 127: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00020377879263833165
    2. '[' → logprob: -9.000204086303711
    3. ' [' → logprob: -10.125204086303711
    4. 's' → logprob: -10.750204086303711
    5. ' s' → logprob: -11.625204086303711
    6. '>' → logprob: -12.750204086303711
    7. ' ' → logprob: -13.125204086303711
    8. '(s' → logprob: -13.625204086303711
    9. ')' → logprob: -14.000204086303711
    10. '[
' → logprob: -14.500204086303711

Token 128: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.19081734120845795
    2. ' >' → logprob: -2.065817356109619
    3. '!=' → logprob: -3.815817356109619
    4. ' !=' → logprob: -3.940817356109619
    5. ']>' → logprob: -6.065817356109619
    6. ']' → logprob: -6.565817356109619
    7. ']!=' → logprob: -8.190816879272461
    8. '==' → logprob: -8.315816879272461
    9. ':' → logprob: -8.315816879272461
    10. ')' → logprob: -8.440816879272461

Token 129: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.09439235925674438
    2. ' >' → logprob: -3.2193922996520996
    3. '!=' → logprob: -3.3443922996520996
    4. ' !=' → logprob: -4.9693922996521
    5. '==' → logprob: -5.3443922996521
    6. ':' → logprob: -6.3443922996521
    7. ' ==' → logprob: -7.0943922996521
    8. '">' → logprob: -8.594392776489258
    9. ')>' → logprob: -9.344392776489258
    10. '0' → logprob: -9.844392776489258

Token 130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005928678438067436
    2. ' ' → logprob: -5.1309285163879395
    3. '1' → logprob: -16.50592803955078
    4. '   ' → logprob: -17.88092803955078
    5. ' ' → logprob: -18.00592803955078
    6. '۰' → logprob: -18.19342803955078
    7. '>' → logprob: -18.56842803955078
    8. ' ' → logprob: -18.81842803955078
    9. '  ' → logprob: -18.94342803955078
    10. '  ' → logprob: -19.00592803955078

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '1' → logprob: -19.00010871887207
    4. 'not' → logprob: -19.87510871887207
    5. '۰' → logprob: -20.00010871887207
    6. '   ' → logprob: -21.37510871887207
    7. '```' → logprob: -21.37510871887207
    8. '  ' → logprob: -21.50010871887207
    9. 'sys' → logprob: -21.56260871887207
    10. ' ' → logprob: -21.62510871887207

Token 132: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.047425828874111176
    2. ':
' → logprob: -3.4224257469177246
    3. '               ' → logprob: -4.297425746917725
    4. '           ' → logprob: -10.547426223754883
    5. ' continue' → logprob: -10.547426223754883
    6. 'continue' → logprob: -11.672426223754883
    7. ':return' → logprob: -12.547426223754883
    8. ' or' → logprob: -12.672426223754883
    9. '       ' → logprob: -13.172426223754883
    10. ',' → logprob: -13.172426223754883

Token 133: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018073876854032278
    2. ' continue' → logprob: -6.37680721282959
    3. 'continue' → logprob: -9.62680721282959
    4. '           ' → logprob: -11.00180721282959
    5. ' continues' → logprob: -12.62680721282959
    6. '	continue' → logprob: -12.75180721282959
    7. '	           ' → logprob: -12.87680721282959
    8. '       ' → logprob: -13.37680721282959
    9. '              ' → logprob: -13.37680721282959
    10. '             ' → logprob: -13.62680721282959

Token 134: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5151866674423218
    2. 'continue' (adapté à ' continue') → logprob: -1.2651866674423218
    3. '               ' → logprob: -2.1401867866516113
    4. '                   ' → logprob: -6.140186786651611
    5. '	continue' → logprob: -7.515186786651611
    6. '           ' → logprob: -10.390186309814453
    7. '_continue' → logprob: -10.765186309814453
    8. '   ' → logprob: -11.765186309814453
    9. 'contin' → logprob: -12.390186309814453
    10. '	           ' → logprob: -12.515186309814453

Token 135: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008394040050916374
    2. '       ' → logprob: -7.5008392333984375
    3. ' for' → logprob: -8.875839233398438
    4. '<|end|>' → logprob: -10.125839233398438
    5. '            
' → logprob: -10.375839233398438
    6. '               ' → logprob: -11.125839233398438
    7. '
' → logprob: -11.500839233398438
    8. '          ' → logprob: -11.875839233398438
    9. '   ' → logprob: -12.125839233398438
    10. 'for' → logprob: -12.250839233398438

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01730158179998398
    2. '       ' → logprob: -4.142301559448242
    3. ' for' → logprob: -7.142301559448242
    4. '<|end|>' → logprob: -8.892301559448242
    5. '            
' → logprob: -9.392301559448242
    6. '        
' → logprob: -9.392301559448242
    7. '          ' → logprob: -10.642301559448242
    8. '               ' → logprob: -10.767301559448242
    9. ',' → logprob: -10.767301559448242
    10. 'for' → logprob: -10.892301559448242

Token 137: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6496967077255249
    2. ' for' → logprob: -0.7746967077255249
    3. 'for' (adapté à ' for') → logprob: -4.3996968269348145
    4. '           ' → logprob: -5.5246968269348145
    5. '<|end|>' → logprob: -8.774696350097656
    6. '        
' → logprob: -8.899696350097656
    7. '        ' → logprob: -9.524696350097656
    8. ' ' → logprob: -9.899696350097656
    9. '    ' → logprob: -10.274696350097656
    10. '   ' → logprob: -10.399696350097656

Token 138: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.10664451867341995
    2. ' face' → logprob: -2.356644630432129
    3. 'f' → logprob: -5.606644630432129
    4. 'roll' → logprob: -6.731644630432129
    5. ' f' → logprob: -7.606644630432129
    6. ' roll' → logprob: -8.231644630432129
    7. 'val' → logprob: -8.856644630432129
    8. 'die' → logprob: -8.856644630432129
    9. 'dice' → logprob: -9.106644630432129
    10. ' die' → logprob: -9.606644630432129

Token 139: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006110093556344509
    2. 'in' → logprob: -5.131110191345215
    3. '_value' → logprob: -9.381110191345215
    4. 'value' → logprob: -10.631110191345215
    5. '_' → logprob: -10.881110191345215
    6. 's' → logprob: -11.131110191345215
    7. ' ' → logprob: -11.256110191345215
    8. '_in' → logprob: -11.506110191345215
    9. '	in' → logprob: -12.756110191345215
    10. ' i' → logprob: -13.131110191345215

Token 140: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011048289015889168
    2. 'range' → logprob: -4.511048316955566
    3. '(range' → logprob: -14.886048316955566
    4. '	range' → logprob: -16.38604736328125
    5. '1' → logprob: -17.63604736328125
    6. ' ' → logprob: -19.51104736328125
    7. '_range' → logprob: -20.01104736328125
    8. '.range' → logprob: -20.63604736328125
    9. ' xrange' → logprob: -21.01104736328125
    10. '-range' → logprob: -22.13604736328125

Token 141: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00029625516617670655
    2. '1' → logprob: -8.125296592712402
    3. '[' → logprob: -16.125295639038086
    4. ' ' → logprob: -17.375295639038086
    5. ' (' → logprob: -17.750295639038086
    6. '<|end|>' → logprob: -18.250295639038086
    7. 'from' → logprob: -19.375295639038086
    8. '{' → logprob: -19.750295639038086
    9. 's' → logprob: -20.625295639038086
    10. ')' → logprob: -20.750295639038086

Token 142: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.843177233240567e-05
    2. ' ' → logprob: -11.000018119812012
    3. '(' → logprob: -13.500018119812012
    4. '   ' → logprob: -15.250018119812012
    5. ')' → logprob: -17.500019073486328
    6. '۱' → logprob: -18.375019073486328
    7. '[' → logprob: -18.875019073486328
    8. '{' → logprob: -19.125019073486328
    9. 'from' → logprob: -19.250019073486328
    10. 'm' → logprob: -19.500019073486328

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05644936114549637
    2. ' ,' → logprob: -3.0564494132995605
    3. ',m' → logprob: -4.9314494132995605
    4. 'm' → logprob: -7.4314494132995605
    5. '   ' → logprob: -11.931448936462402
    6. ',
' → logprob: -12.056448936462402
    7. ' m' → logprob: -12.056448936462402
    8. ' ' → logprob: -13.431448936462402
    9. '‌,' → logprob: -14.806448936462402
    10. '	m' → logprob: -14.806448936462402

Token 144: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.04858759790658951
    2. ' m' → logprob: -3.0485875606536865
    3. '	m' → logprob: -16.173587799072266
    4. ')m' → logprob: -16.173587799072266
    5. ' ' → logprob: -17.298587799072266
    6. '<|end|>' → logprob: -17.423587799072266
    7. '+m' → logprob: -17.798587799072266
    8. '   ' → logprob: -18.298587799072266
    9. ')' → logprob: -18.298587799072266
    10. '<m' → logprob: -18.423587799072266

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519291639328003
    2. ' +' → logprob: -1.5019291639328003
    3. ' ' → logprob: -17.376928329467773
    4. '   ' → logprob: -17.501928329467773
    5. ' +
' → logprob: -18.876928329467773
    6. '+
' → logprob: -19.126928329467773
    7. '+m' → logprob: -19.376928329467773
    8. '＋' → logprob: -19.501928329467773
    9. '+k' → logprob: -19.626928329467773
    10. '```' → logprob: -19.876928329467773

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011782010551542044
    2. ' ' → logprob: -6.75117826461792
    3. ')' → logprob: -12.126177787780762
    4. '7' → logprob: -13.126177787780762
    5. '+' → logprob: -15.501177787780762
    6. '```' → logprob: -15.501177787780762
    7. ' )' → logprob: -16.126178741455078
    8. '6' → logprob: -16.251178741455078
    9. '2' → logprob: -16.751178741455078
    10. '   ' → logprob: -17.876178741455078

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. ')' → logprob: -17.75009536743164
    4. '```' → logprob: -18.37509536743164
    5. '   ' → logprob: -19.00009536743164
    6. '7' → logprob: -19.25009536743164
    7. '2' → logprob: -19.87509536743164
    8. '  ' → logprob: -20.50009536743164
    9. '+' → logprob: -20.62509536743164
    10. ' )' → logprob: -20.87509536743164

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6402449011802673
    2. '):
' → logprob: -1.140244960784912
    3. ':' → logprob: -1.890244960784912
    4. ':
' → logprob: -6.265244960784912
    5. '):
' → logprob: -9.640244483947754
    6. ')' → logprob: -10.515244483947754
    7. ']:' → logprob: -11.015244483947754
    8. ',' → logprob: -12.015244483947754
    9. '):

' → logprob: -12.140244483947754
    10. ' :' → logprob: -12.140244483947754

Token 149: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015220011584460735
    2. '           ' → logprob: -4.8902201652526855
    3. '<|end|>' → logprob: -5.2652201652526855
    4. ':' → logprob: -7.0152201652526855
    5. '       ' → logprob: -8.515219688415527
    6. '<|end|>' → logprob: -8.765219688415527
    7. ',' → logprob: -8.890219688415527
    8. '                
' → logprob: -9.140219688415527
    9. ':
' → logprob: -9.265219688415527
    10. ' ' → logprob: -9.265219688415527

Token 150: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2761383652687073
    2. 'if' (adapté à ' if') → logprob: -2.5261383056640625
    3. 'dp' → logprob: -2.7761383056640625
    4. ' dp' → logprob: -2.7761383056640625
    5. '                   ' → logprob: -3.9011383056640625
    6. ' new' → logprob: -4.9011383056640625
    7. 'new' → logprob: -5.7761383056640625
    8. '               ' → logprob: -5.9011383056640625
    9. ' next' → logprob: -6.5261383056640625
    10. 'next' → logprob: -6.9011383056640625

Token 151: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6931551098823547
    2. ' s' → logprob: -0.6931551098823547
    3. '   ' → logprob: -12.693155288696289
    4. ' ' → logprob: -12.943155288696289
    5. '(s' → logprob: -13.443155288696289
    6. '_s' → logprob: -15.193155288696289
    7. '	s' → logprob: -15.818155288696289
    8. '<s' → logprob: -15.943155288696289
    9. '  ' → logprob: -16.31815528869629
    10. ' ' → logprob: -16.44315528869629

Token 152: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17974749207496643
    2. ' +' → logprob: -1.804747462272644
    3. '+
' → logprob: -14.179747581481934
    4. '＋' → logprob: -14.179747581481934
    5. '+s' → logprob: -14.804747581481934
    6. ' plus' → logprob: -15.304747581481934
    7. ' +
' → logprob: -15.554747581481934
    8. '<|end|>' → logprob: -15.679747581481934
    9. '+a' → logprob: -16.429746627807617
    10. ' ' → logprob: -16.804746627807617

Token 153: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.00029744720086455345
    2. ' face' → logprob: -8.125297546386719
    3. '(face' → logprob: -13.750297546386719
    4. '1' → logprob: -15.875297546386719
    5. ' ' → logprob: -16.50029754638672
    6. '   ' → logprob: -17.12529754638672
    7. '.face' → logprob: -17.50029754638672
    8. '_face' → logprob: -17.62529754638672
    9. 'faces' → logprob: -18.50029754638672
    10. '```' → logprob: -18.87529754638672

Token 154: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3868788182735443
    2. '<=' → logprob: -1.1368788480758667
    3. '<|end|>' → logprob: -12.636878967285156
    4. ')<=' → logprob: -13.511878967285156
    5. ']<=' → logprob: -13.761878967285156
    6. ' ' → logprob: -14.136878967285156
    7. '<' → logprob: -14.886878967285156
    8. ')' → logprob: -15.136878967285156
    9. ' ≤' → logprob: -15.761878967285156
    10. '≤' → logprob: -15.761878967285156

Token 155: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0015023599844425917
    2. ' max' → logprob: -6.501502513885498
    3. '	max' → logprob: -17.501502990722656
    4. '(max' → logprob: -17.876502990722656
    5. '[max' → logprob: -18.376502990722656
    6. '_max' → logprob: -19.501502990722656
    7. '=max' → logprob: -19.751502990722656
    8. 'maxlength' → logprob: -19.751502990722656
    9. ' ' → logprob: -19.876502990722656
    10. 'm' → logprob: -20.376502990722656

Token 156: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -7.896309739408025e-07
    2. '_s' → logprob: -14.250000953674316
    3. 'sum' → logprob: -16.125
    4. '_' → logprob: -16.875
    5. '_max' → logprob: -17.375
    6. '_SUM' → logprob: -19.0
    7. '__' → logprob: -20.0
    8. '_val' → logprob: -20.25
    9. '_ans' → logprob: -20.25
    10. '_S' → logprob: -20.375

Token 157: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2520930767059326
    2. ':
' → logprob: -1.5020930767059326
    3. '):
' → logprob: -10.127093315124512
    4. ':

' → logprob: -10.502093315124512
    5. '               ' → logprob: -11.002093315124512
    6. ' and' → logprob: -11.127093315124512
    7. ':
' → logprob: -11.377093315124512
    8. ' :
' → logprob: -11.752093315124512
    9. '<|end|>' → logprob: -11.752093315124512
    10. '                   ' → logprob: -11.877093315124512

Token 158: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01899070478975773
    2. '               ' → logprob: -4.268990516662598
    3. '                       ' → logprob: -6.643990516662598
    4. ' dp' → logprob: -6.643990516662598
    5. 'dp' → logprob: -7.518990516662598
    6. '(dp' → logprob: -7.893990516662598
    7. '<|end|>' → logprob: -8.018990516662598
    8. '<|end|>' → logprob: -8.393990516662598
    9. '	dp' → logprob: -9.143990516662598
    10. '		           ' → logprob: -9.393990516662598

Token 159: ' dp' (ID: 21546)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2725580930709839
    2. ' dp' → logprob: -1.5225580930709839
    3. 'dp' (adapté à ' dp') → logprob: -4.272558212280273
    4. '                   ' → logprob: -5.147558212280273
    5. '	dp' → logprob: -8.522558212280273
    6. '               ' → logprob: -8.772558212280273
    7. '(dp' → logprob: -9.397558212280273
    8. '                               ' → logprob: -9.897558212280273
    9. '                           ' → logprob: -9.897558212280273
    10. '                    ' → logprob: -10.522558212280273

Token 160: '_curr' (ID: 92432)
  Prédit: '_curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -1.8670179997570813e-05
    2. '_prev' → logprob: -11.500019073486328
    3. '_cur' → logprob: -12.250019073486328
    4. 'curr' → logprob: -13.250019073486328
    5. '_current' → logprob: -13.625019073486328
    6. '[curr' → logprob: -14.625019073486328
    7. '_next' → logprob: -16.000019073486328
    8. 'Curr' → logprob: -16.625019073486328
    9. '_' → logprob: -17.375019073486328
    10. '	curr' → logprob: -17.625019073486328

Token 161: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -2.4153549020411447e-05
    2. '[' → logprob: -10.75002384185791
    3. ' [' → logprob: -12.87502384185791
    4. '                   ' → logprob: -17.375024795532227
    5. '[
' → logprob: -18.125024795532227
    6. '   ' → logprob: -18.375024795532227
    7. 's' → logprob: -18.750024795532227
    8. '[S' → logprob: -18.875024795532227
    9. '                       ' → logprob: -19.125024795532227
    10. '                           ' → logprob: -19.250024795532227

Token 162: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04859543219208717
    2. ' +' → logprob: -3.048595428466797
    3. '[' → logprob: -12.798595428466797
    4. '+s' → logprob: -13.548595428466797
    5. ']' → logprob: -13.673595428466797
    6. ']+' → logprob: -14.298595428466797
    7. '＋' → logprob: -14.423595428466797
    8. ']+=' → logprob: -14.923595428466797
    9. 's' → logprob: -15.173595428466797
    10. ' ' → logprob: -15.798595428466797

Token 163: ' face' (ID: 4950)
  Prédit: 'face'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'face' → logprob: -0.0008099827100522816
    2. ' face' → logprob: -7.125810146331787
    3. '(face' → logprob: -12.625809669494629
    4. '_face' → logprob: -13.625809669494629
    5. ' ' → logprob: -14.625809669494629
    6. '   ' → logprob: -15.625809669494629
    7. '.face' → logprob: -15.625809669494629
    8. 'f' → logprob: -16.750810623168945
    9. 'facet' → logprob: -16.875810623168945
    10. '1' → logprob: -17.125810623168945

Token 164: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018263261765241623
    2. ']+=' → logprob: -4.018263339996338
    3. ' ]' → logprob: -9.14326286315918
    4. '+=' → logprob: -12.89326286315918
    5. '[' → logprob: -14.01826286315918
    6. ' +=' → logprob: -14.39326286315918
    7. '```' → logprob: -14.39326286315918
    8. '`]' → logprob: -14.51826286315918
    9. ']+' → logprob: -14.76826286315918
    10. '+]' → logprob: -15.14326286315918

Token 165: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20947225391864777
    2. ' +=' → logprob: -1.7094722986221313
    3. ']+=' → logprob: -4.834472179412842
    4. '=' → logprob: -10.83447265625
    5. '[' → logprob: -10.83447265625
    6. ']' → logprob: -11.08447265625
    7. '+' → logprob: -11.58447265625
    8. '```' → logprob: -12.08447265625
    9. ' ' → logprob: -13.45947265625
    10. '   ' → logprob: -14.20947265625

Token 166: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0067154900170862675
    2. ' dp' → logprob: -5.006715297698975
    3. '	dp' → logprob: -15.631715774536133
    4. '(dp' → logprob: -17.256715774536133
    5. '_dp' → logprob: -18.131715774536133
    6. '                   ' → logprob: -19.506715774536133
    7. 'dc' → logprob: -20.006715774536133
    8. '           ' → logprob: -20.256715774536133
    9. 'd' → logprob: -20.256715774536133
    10. 'dt' → logprob: -20.381715774536133

Token 167: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -2.4868770196917467e-05
    2. 'prev' → logprob: -10.625024795532227
    3. 'Prev' → logprob: -15.125024795532227
    4. '_previous' → logprob: -15.750024795532227
    5. '_curr' → logprob: -17.875024795532227
    6. '_pred' → logprob: -18.375024795532227
    7. '_prior' → logprob: -18.625024795532227
    8. '_next' → logprob: -19.125024795532227
    9. '```' → logprob: -19.125024795532227
    10. '	prev' → logprob: -19.375024795532227

Token 168: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -12.375004768371582
    3. 's' → logprob: -14.875004768371582
    4. ' [' → logprob: -17.250003814697266
    5. '(s' → logprob: -18.750003814697266
    6. '	s' → logprob: -19.125003814697266
    7. '[
' → logprob: -19.250003814697266
    8. '```' → logprob: -19.500003814697266
    9. ' s' → logprob: -19.750003814697266
    10. '`s' → logprob: -20.000003814697266

Token 169: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4461517930030823
    2. '<|end|>' → logprob: -1.0711517333984375
    3. '<|end|>' → logprob: -4.5711517333984375
    4. ')' → logprob: -5.1961517333984375
    5. '
' → logprob: -7.5711517333984375
    6. ' ]' → logprob: -8.571151733398438
    7. '               ' → logprob: -9.071151733398438
    8. '       ' → logprob: -9.571151733398438
    9. ')]' → logprob: -9.946151733398438
    10. ']
' → logprob: -9.946151733398438

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.41866585687967e-06
    2. '	' → logprob: -13.125008583068848
    3. '        
' → logprob: -13.500008583068848
    4. '<|end|>' → logprob: -13.500008583068848
    5. '   ' → logprob: -13.875008583068848
    6. '```' → logprob: -14.500008583068848
    7. '           ' → logprob: -15.125008583068848
    8. '
' → logprob: -15.250008583068848
    9. '        ' → logprob: -15.625008583068848
    10. '      ' → logprob: -15.750008583068848

Token 171: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.1910063624382019
    2. '   ' → logprob: -1.9410064220428467
    3. ' dp' → logprob: -3.9410064220428467
    4. '       ' → logprob: -4.566006183624268
    5. '
' → logprob: -8.191006660461426
    6. '	dp' → logprob: -9.066006660461426
    7. '_dp' → logprob: -10.191006660461426
    8. '(dp' → logprob: -11.316006660461426
    9. '```' → logprob: -11.941006660461426
    10. '
' → logprob: -12.191006660461426

Token 172: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -7.278864359250292e-05
    2. '_curr' → logprob: -10.000072479248047
    3. '_' → logprob: -10.750072479248047
    4. '_next' → logprob: -13.625072479248047
    5. '_previous' → logprob: -14.125072479248047
    6. '_current' → logprob: -14.750072479248047
    7. '_prec' → logprob: -15.000072479248047
    8. ' _' → logprob: -15.000072479248047
    9. ''_' → logprob: -15.000072479248047
    10. 'prev' → logprob: -15.125072479248047

Token 173: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751643538475037
    2. ' =' → logprob: -3.5297515392303467
    3. ',' → logprob: -13.779751777648926
    4. '＝' → logprob: -16.52975082397461
    5. '[:]' → logprob: -17.27975082397461
    6. '=

' → logprob: -17.77975082397461
    7. '[' → logprob: -18.02975082397461
    8. '=}' → logprob: -18.27975082397461
    9. '_' → logprob: -18.40475082397461
    10. '_=' → logprob: -18.52975082397461

Token 174: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0009115827269852161
    2. ' dp' → logprob: -7.000911712646484
    3. '(dp' → logprob: -18.500911712646484
    4. '	dp' → logprob: -18.625911712646484
    5. 'df' → logprob: -20.000911712646484
    6. 'dc' → logprob: -20.250911712646484
    7. '_dp' → logprob: -20.500911712646484
    8. '[' → logprob: -20.625911712646484
    9. '```' → logprob: -20.625911712646484
    10. 'd' → logprob: -20.750911712646484

Token 175: '_curr' (ID: 92432)
  Prédit: '_curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_curr' → logprob: -0.0001438266917830333
    2. 'curr' → logprob: -9.000144004821777
    3. '_prev' → logprob: -11.125144004821777
    4. '_cur' → logprob: -12.500144004821777
    5. '_' → logprob: -14.250144004821777
    6. 'Curr' → logprob: -14.500144004821777
    7. ' _' → logprob: -15.375144004821777
    8. '[curr' → logprob: -15.500144004821777
    9. '_current' → logprob: -16.12514305114746
    10. ' curr' → logprob: -16.50014305114746

Token 176: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7285830974578857
    2. '   ' → logprob: -0.7285830974578857
    3. '    
' → logprob: -3.4785830974578857
    4. '<|end|>' → logprob: -6.228583335876465
    5. ' 
' → logprob: -6.978583335876465
    6. '  
' → logprob: -7.728583335876465
    7. '   
' → logprob: -8.853583335876465
    8. '
' → logprob: -8.978583335876465
    9. '```' → logprob: -9.853583335876465
    10. '<|end|>' → logprob: -9.853583335876465

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016668464988470078
    2. ' total' → logprob: -4.641668319702148
    3. 'total' → logprob: -6.141668319702148
    4. '
' → logprob: -6.266668319702148
    5. '    
' → logprob: -6.516668319702148
    6. ' return' → logprob: -7.391668319702148
    7. ' 
' → logprob: -8.391668319702148
    8. '    ' → logprob: -8.641668319702148
    9. 'return' → logprob: -9.266668319702148
    10. '   
' → logprob: -10.016668319702148

Token 178: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.004369478672742844
    2. ' total' → logprob: -5.879369258880615
    3. '   ' → logprob: -6.504369258880615
    4. 'result' → logprob: -11.129369735717773
    5. 'return' → logprob: -11.379369735717773
    6. '#' → logprob: -11.629369735717773
    7. 'expected' → logprob: -11.879369735717773
    8. 'prob' → logprob: -12.629369735717773
    9. '    
' → logprob: -12.879369735717773
    10. 'ways' → logprob: -13.129369735717773

Token 179: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003811234375461936
    2. ' =' → logprob: -6.003811359405518
    3. '=' → logprob: -7.003811359405518
    4. '_count' → logprob: -8.62881088256836
    5. '_sum' → logprob: -10.00381088256836
    6. '_counts' → logprob: -10.62881088256836
    7. '_prob' → logprob: -10.62881088256836
    8. '_probability' → logprob: -10.75381088256836
    9. '_=' → logprob: -10.87881088256836
    10. '_pos' → logprob: -11.25381088256836

Token 180: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.00025084958178922534
    2. 'count' → logprob: -8.875250816345215
    3. 'out' → logprob: -10.375250816345215
    4. ' ways' → logprob: -10.625250816345215
    5. '_' → logprob: -11.375250816345215
    6. 'cases' → logprob: -11.750250816345215
    7. 'poss' → logprob: -11.875250816345215
    8. 'sum' → logprob: -12.125250816345215
    9. 'counts' → logprob: -12.125250816345215
    10. 'roll' → logprob: -12.375250816345215

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024783893022686243
    2. '=' → logprob: -6.00247859954834
    3. ' ' → logprob: -13.87747859954834
    4. '=sum' → logprob: -14.00247859954834
    5. ',' → logprob: -15.37747859954834
    6. '  ' → logprob: -15.37747859954834
    7. 'sum' → logprob: -16.502477645874023
    8. '   ' → logprob: -16.752477645874023
    9. ')' → logprob: -17.002477645874023
    10. '.' → logprob: -17.002477645874023

Token 182: ' m' (ID: 284)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5808576345443726
    2. 'm' → logprob: -0.8308576345443726
    3. ' m' → logprob: -6.580857753753662
    4. '   ' → logprob: -6.830857753753662
    5. ' sum' → logprob: -6.830857753753662
    6. 'dp' → logprob: -7.455857753753662
    7. 'pow' → logprob: -7.705857753753662
    8. '0' → logprob: -9.330857276916504
    9. '(m' → logprob: -9.455857276916504
    10. 'max' → logprob: -10.455857276916504

Token 183: ' **' (ID: 6240)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.02324605919420719
    2. ' **' → logprob: -3.7732460498809814
    3. '***' → logprob: -15.648245811462402
    4. '*n' → logprob: -15.773245811462402
    5. '```' → logprob: -15.898245811462402
    6. '^' → logprob: -16.52324676513672
    7. 'n' → logprob: -17.39824676513672
    8. '*' → logprob: -17.64824676513672
    9. '***/' → logprob: -18.14824676513672
    10. '**
' → logprob: -18.14824676513672

Token 184: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.615255839889869e-05
    2. ' n' → logprob: -9.250096321105957
    3. '(n' → logprob: -18.62509536743164
    4. '_n' → logprob: -19.50009536743164
    5. '	n' → logprob: -19.50009536743164
    6. '```' → logprob: -20.12509536743164
    7. ')n' → logprob: -21.00009536743164
    8. '$n' → logprob: -22.25009536743164
    9. '   ' → logprob: -22.50009536743164
    10. '<n' → logprob: -22.87509536743164

Token 185: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.172376811504364
    2. '   ' → logprob: -2.547376871109009
    3. '    
' → logprob: -3.422376871109009
    4. '<|end|>' → logprob: -3.672376871109009
    5. '  
' → logprob: -5.29737663269043
    6. '   
' → logprob: -5.42237663269043
    7. '
' → logprob: -5.54737663269043
    8. 'total' → logprob: -6.29737663269043
    9. ' 
' → logprob: -6.29737663269043
    10. '<|end|>' → logprob: -6.67237663269043

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07719013839960098
    2. '
' → logprob: -3.2021901607513428
    3. 'expected' → logprob: -4.077189922332764
    4. 'total' → logprob: -5.327189922332764
    5. '    
' → logprob: -5.452189922332764
    6. '```' → logprob: -5.952189922332764
    7. 'sum' → logprob: -6.327189922332764
    8. ' expected' → logprob: -7.077189922332764
    9. ' total' → logprob: -7.327189922332764
    10. 'prob' → logprob: -7.452189922332764

Token 187: ' expected' (ID: 5930)
  Prédit: 'expected'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expected' (adapté à ' expected') → logprob: -0.0293684471398592
    2. 'result' → logprob: -4.1543684005737305
    3. '   ' → logprob: -4.7793684005737305
    4. ' expected' → logprob: -6.4043684005737305
    5. 'expect' → logprob: -6.4043684005737305
    6. 'ev' → logprob: -7.2793684005737305
    7. 'numer' → logprob: -9.02936840057373
    8. 'total' → logprob: -9.02936840057373
    9. 'res' → logprob: -9.40436840057373
    10. 'exp' → logprob: -9.52936840057373

Token 188: ' =' (ID: 314)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.22235362231731415
    2. '_' → logprob: -2.59735369682312
    3. '_sum' → logprob: -2.84735369682312
    4. ' =' → logprob: -2.84735369682312
    5. '=' → logprob: -5.722353458404541
    6. '_val' → logprob: -6.222353458404541
    7. '_total' → logprob: -6.347353458404541
    8. ' _' → logprob: -8.0973539352417
    9. 'value' → logprob: -8.0973539352417
    10. '_values' → logprob: -8.2223539352417

Token 189: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2545207142829895
    2. ' ' → logprob: -1.5045206546783447
    3. ' sum' → logprob: -6.129520893096924
    4. 'sum' → logprob: -7.879520893096924
    5. '   ' → logprob: -10.754520416259766
    6. ' ' → logprob: -12.004520416259766
    7. '  ' → logprob: -14.129520416259766
    8. '(sum' → logprob: -14.379520416259766
    9. '```' → logprob: -14.629520416259766
    10. ' (' → logprob: -14.754520416259766

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02080508880317211
    2. 'sum' → logprob: -3.8958051204681396
    3. ' sum' → logprob: -8.895805358886719
    4. ' ' → logprob: -9.270805358886719
    5. '   ' → logprob: -10.770805358886719
    6. 'k' → logprob: -13.270805358886719
    7. 'float' → logprob: -13.520805358886719
    8. '```' → logprob: -13.770805358886719
    9. 's' → logprob: -13.833305358886719
    10. '(sum' → logprob: -13.958305358886719

Token 191: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02456866204738617
    2. '<|end|>' → logprob: -4.399568557739258
    3. '    
' → logprob: -5.649568557739258
    4. '
' → logprob: -5.774568557739258
    5. '    ' → logprob: -6.774568557739258
    6. ' 
' → logprob: -7.149568557739258
    7. ' ' → logprob: -7.149568557739258
    8. ' for' → logprob: -7.399568557739258
    9. 'for' → logprob: -7.524568557739258
    10. '<|end|>' → logprob: -7.899568557739258

Token 192: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5861019492149353
    2. 'for' → logprob: -0.8361019492149353
    3. ' for' → logprob: -4.83610200881958
    4. 'def' → logprob: -6.58610200881958
    5. '   ' → logprob: -8.336101531982422
    6. 'append' → logprob: -9.086101531982422
    7. ' ' → logprob: -9.586101531982422
    8. 'from' → logprob: -9.836101531982422
    9. '```' → logprob: -9.836101531982422
    10. '    
' → logprob: -10.086101531982422

Token 193: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5489196181297302
    2. '   ' → logprob: -1.173919677734375
    3. '<|end|>' → logprob: -3.048919677734375
    4. ' for' → logprob: -3.298919677734375
    5. 'for' → logprob: -4.798919677734375
    6. '    
' → logprob: -4.798919677734375
    7. ' 
' → logprob: -5.548919677734375
    8. ' ' → logprob: -5.673919677734375
    9. '  
' → logprob: -5.923919677734375
    10. '<|end|>' → logprob: -7.673919677734375

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009157438762485981
    2. '    
' → logprob: -7.62591552734375
    3. ' for' → logprob: -9.12591552734375
    4. '
' → logprob: -9.12591552734375
    5. '<|end|>' → logprob: -9.50091552734375
    6. 'for' → logprob: -9.87591552734375
    7. ' 
' → logprob: -10.25091552734375
    8. ')' → logprob: -11.25091552734375
    9. '    ' → logprob: -11.37591552734375
    10. ' ' → logprob: -12.00091552734375

Token 195: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.490578830242157
    2. 'for' (adapté à ' for') → logprob: -0.990578830242157
    3. ' for' → logprob: -4.115578651428223
    4. 'total' → logprob: -10.365578651428223
    5. '    
' → logprob: -11.990578651428223
    6. '  ' → logprob: -12.615578651428223
    7. '```' → logprob: -12.990578651428223
    8. '	for' → logprob: -13.365578651428223
    9. ' total' → logprob: -13.365578651428223
    10. ' ' → logprob: -14.490578651428223

Token 196: ' s' (ID: 265)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.1861227750778198
    2. ' sum' → logprob: -1.3111227750778198
    3. ' s' → logprob: -1.5611227750778198
    4. 's' → logprob: -1.5611227750778198
    5. ' value' → logprob: -6.436122894287109
    6. 'value' → logprob: -6.936122894287109
    7. '_sum' → logprob: -7.061122894287109
    8. ' val' → logprob: -8.06112289428711
    9. '   ' → logprob: -8.56112289428711
    10. 'score' → logprob: -8.68612289428711

Token 197: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011077526025474072
    2. 'in' → logprob: -4.511077404022217
    3. ' ' → logprob: -10.886077880859375
    4. ',' → logprob: -13.011077880859375
    5. '   ' → logprob: -13.511077880859375
    6. 's' → logprob: -13.761077880859375
    7. '=' → logprob: -13.886077880859375
    8. '_in' → logprob: -14.011077880859375
    9. '	in' → logprob: -14.011077880859375
    10. 'range' → logprob: -14.136077880859375

Token 198: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02329416014254093
    2. ' range' → logprob: -3.77329421043396
    3. '(range' → logprob: -10.648294448852539
    4. 'k' → logprob: -11.773294448852539
    5. '   ' → logprob: -11.898294448852539
    6. ' ' → logprob: -13.148294448852539
    7. 'n' → logprob: -13.523294448852539
    8. '	range' → logprob: -13.773294448852539
    9. '```' → logprob: -13.898294448852539
    10. ')' → logprob: -14.023294448852539

Token 199: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009825548622757196
    2. '(' → logprob: -7.125982761383057
    3. '(k' → logprob: -8.875982284545898
    4. '(max' → logprob: -11.000982284545898
    5. ' (' → logprob: -11.375982284545898
    6. 'n' → logprob: -12.750982284545898
    7. '   ' → logprob: -13.125982284545898
    8. '((' → logprob: -14.000982284545898
    9. '(s' → logprob: -14.250982284545898
    10. ' n' → logprob: -14.250982284545898

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05504262447357178
    2. ' ,' → logprob: -3.6800427436828613
    3. ' *' → logprob: -4.305042743682861
    4. '*' → logprob: -5.055042743682861
    5. ',k' → logprob: -5.680042743682861
    6. '*k' → logprob: -5.805042743682861
    7. ',n' → logprob: -6.805042743682861
    8. '*n' → logprob: -7.555042743682861
    9. ' ' → logprob: -9.180042266845703
    10. ' +' → logprob: -9.805042266845703

Token 201: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.002853021025657654
    2. ' max' → logprob: -5.877852916717529
    3. 'n' → logprob: -10.627853393554688
    4. 'len' → logprob: -11.502853393554688
    5. '(max' → logprob: -12.377853393554688
    6. 'k' → logprob: -12.377853393554688
    7. ' n' → logprob: -13.252853393554688
    8. 'min' → logprob: -13.252853393554688
    9. '   ' → logprob: -14.377853393554688
    10. ' ' → logprob: -14.877853393554688

Token 202: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.802049756515771e-05
    2. 'sum' → logprob: -9.875067710876465
    3. '_s' → logprob: -12.125067710876465
    4. 's' → logprob: -12.500067710876465
    5. '+' → logprob: -13.250067710876465
    6. 'n' → logprob: -13.500067710876465
    7. ')' → logprob: -13.750067710876465
    8. '   ' → logprob: -14.000067710876465
    9. '_value' → logprob: -15.000067710876465
    10. '_SUM' → logprob: -15.125067710876465

Token 203: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22543460130691528
    2. '+' → logprob: -1.6004345417022705
    3. '   ' → logprob: -11.475434303283691
    4. ' -' → logprob: -12.100434303283691
    5. '+n' → logprob: -13.350434303283691
    6. '):' → logprob: -13.475434303283691
    7. ',' → logprob: -13.600434303283691
    8. ' ' → logprob: -14.850434303283691
    9. '+k' → logprob: -15.100434303283691
    10. '):
' → logprob: -15.725434303283691

Token 204: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011188744247192517
    2. ' ' → logprob: -9.12511157989502
    3. '   ' → logprob: -12.87511157989502
    4. '0' → logprob: -16.500112533569336
    5. '```' → logprob: -16.500112533569336
    6. '
' → logprob: -16.625112533569336
    7. '):
' → logprob: -16.875112533569336
    8. ')' → logprob: -17.625112533569336
    9. ',' → logprob: -18.000112533569336
    10. '    ' → logprob: -18.250112533569336

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.375006675720215
    4. '```' → logprob: -16.7500057220459
    5. '
' → logprob: -16.8750057220459
    6. ')' → logprob: -17.1250057220459
    7. '0' → logprob: -18.1250057220459
    8. '):
' → logprob: -18.3750057220459
    9. '``' → logprob: -18.6250057220459
    10. '  ' → logprob: -18.8750057220459

Token 206: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012673391960561275
    2. ':' → logprob: -5.012673377990723
    3. '):
' → logprob: -5.137673377990723
    4. '   ' → logprob: -10.137673377990723
    5. ')' → logprob: -11.387673377990723
    6. '):
' → logprob: -12.137673377990723
    7. ' ):' → logprob: -12.137673377990723
    8. ',' → logprob: -12.512673377990723
    9. ':
' → logprob: -14.387673377990723
    10. '+' → logprob: -14.762673377990723

Token 207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023356860037893057
    2. '<|end|>' → logprob: -6.502335548400879
    3. ' if' → logprob: -8.002335548400879
    4. '   ' → logprob: -9.002335548400879
    5. ' ' → logprob: -9.252335548400879
    6. '    ' → logprob: -9.627335548400879
    7. ')' → logprob: -10.627335548400879
    8. ' expected' → logprob: -10.752335548400879
    9. '<|end|>' → logprob: -10.752335548400879
    10. ',' → logprob: -10.877335548400879

Token 208: ' count' (ID: 3605)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8372372388839722
    2. '       ' → logprob: -1.8372372388839722
    3. ' expected' → logprob: -1.9622372388839722
    4. 'prob' → logprob: -2.0872373580932617
    5. 'expected' → logprob: -2.4622373580932617
    6. 'if' → logprob: -3.0872373580932617
    7. ' probability' → logprob: -5.087237358093262
    8. ' prob' → logprob: -5.962237358093262
    9. '   ' → logprob: -6.087237358093262
    10. '           ' → logprob: -7.837237358093262

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22556684911251068
    2. '=' → logprob: -1.6005668640136719
    3. '=s' → logprob: -9.850566864013672
    4. 's' → logprob: -10.100566864013672
    5. '   ' → logprob: -10.600566864013672
    6. '[' → logprob: -11.725566864013672
    7. '[s' → logprob: -11.975566864013672
    8. ' ' → logprob: -12.100566864013672
    9. ')' → logprob: -12.475566864013672
    10. '=count' → logprob: -12.850566864013672

Token 210: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16022878885269165
    2. ' dp' → logprob: -1.9102287292480469
    3. '	dp' → logprob: -12.660228729248047
    4. '   ' → logprob: -14.285228729248047
    5. '(dp' → logprob: -15.035228729248047
    6. '_dp' → logprob: -15.410228729248047
    7. '       ' → logprob: -15.660228729248047
    8. '    ' → logprob: -17.410228729248047
    9. '.dp' → logprob: -17.660228729248047
    10. ' ' → logprob: -17.910228729248047

Token 211: '_prev' (ID: 60491)
  Prédit: '_prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prev' → logprob: -2.1008713702030946e-06
    2. '_curr' → logprob: -13.375001907348633
    3. 'prev' → logprob: -15.125001907348633
    4. '```' → logprob: -17.000001907348633
    5. '_previous' → logprob: -17.125001907348633
    6. 'Prev' → logprob: -17.250001907348633
    7. '_current' → logprob: -18.250001907348633
    8. '_next' → logprob: -19.250001907348633
    9. '[_' → logprob: -19.375001907348633
    10. '_prior' → logprob: -19.375001907348633

Token 212: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -15.000000953674316
    3. ' [' → logprob: -15.375000953674316
    4. 's' → logprob: -16.625
    5. '   ' → logprob: -17.0
    6. '```' → logprob: -17.375
    7. '\[' → logprob: -17.5
    8. '[
' → logprob: -17.625
    9. ' ' → logprob: -19.5
    10. ' s' → logprob: -19.875

Token 213: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6077712178230286
    2. ']' → logprob: -0.8577712178230286
    3. ' *' → logprob: -4.357771396636963
    4. ')
' → logprob: -5.357771396636963
    5. '   ' → logprob: -5.607771396636963
    6. ']
' → logprob: -5.607771396636963
    7. '
' → logprob: -5.732771396636963
    8. '       ' → logprob: -6.232771396636963
    9. '*' → logprob: -7.982771396636963
    10. ')]' → logprob: -8.357770919799805

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013557689264416695
    2. ' if' → logprob: -4.8885579109191895
    3. '<|end|>' → logprob: -6.0135579109191895
    4. '   ' → logprob: -6.2635579109191895
    5. ' ' → logprob: -7.7635579109191895
    6. '        
' → logprob: -8.263557434082031
    7. ',' → logprob: -8.888557434082031
    8. '    ' → logprob: -9.388557434082031
    9. ' 
' → logprob: -9.388557434082031
    10. '    
' → logprob: -9.513557434082031

Token 215: ' val' (ID: 1459)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6119080185890198
    2. ' if' → logprob: -1.111907958984375
    3. ' expected' → logprob: -2.361907958984375
    4. 'expected' → logprob: -4.361907958984375
    5. 'if' → logprob: -4.486907958984375
    6. 'prob' → logprob: -4.861907958984375
    7. ' probability' → logprob: -6.361907958984375
    8. ' prob' → logprob: -8.486907958984375
    9. '```' → logprob: -8.611907958984375
    10. '        
' → logprob: -8.861907958984375

Token 216: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2993532121181488
    2. '=' → logprob: -1.9243532419204712
    3. '   ' → logprob: -2.7993531227111816
    4. ' ' → logprob: -3.5493531227111816
    5. ' +=' → logprob: -4.924353122711182
    6. '_' → logprob: -5.924353122711182
    7. '  ' → logprob: -6.174353122711182
    8. 's' → logprob: -6.424353122711182
    9. '       ' → logprob: -6.549353122711182
    10. ',' → logprob: -6.799353122711182

Token 217: ' max' (ID: 2999)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.009404182434082
    2. 's' → logprob: -1.259404182434082
    3. '(s' → logprob: -2.009404182434082
    4. 'count' → logprob: -2.134404182434082
    5. ' count' → logprob: -3.009404182434082
    6. ' (' → logprob: -3.384404182434082
    7. '(count' → logprob: -4.634404182434082
    8. '   ' → logprob: -6.759404182434082
    9. ' float' → logprob: -7.009404182434082
    10. '(' → logprob: -7.134404182434082

Token 218: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004819564986974001
    2. '(s' → logprob: -5.379819393157959
    3. '(k' → logprob: -8.879819869995117
    4. '0' → logprob: -9.879819869995117
    5. '((' → logprob: -12.379819869995117
    6. ' (' → logprob: -12.754819869995117
    7. 'k' → logprob: -13.879819869995117
    8. '(
' → logprob: -15.379819869995117
    9. 's' → logprob: -15.629819869995117
    10. '(n' → logprob: -15.879819869995117

Token 219: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017407136037945747
    2. 's' → logprob: -4.392406940460205
    3. ' ' → logprob: -5.767406940460205
    4. ' s' → logprob: -7.267406940460205
    5. '(' → logprob: -7.767406940460205
    6. '(s' → logprob: -7.892406940460205
    7. 'k' → logprob: -8.642407417297363
    8. '(k' → logprob: -11.017407417297363
    9. ',' → logprob: -11.267407417297363
    10. ')' → logprob: -11.517407417297363

Token 220: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003601336502470076
    2. '0' → logprob: -8.875360488891602
    3. ',s' → logprob: -9.000360488891602
    4. ',
' → logprob: -10.375360488891602
    5. ' ,' → logprob: -10.625360488891602
    6. 's' → logprob: -11.125360488891602
    7. ',k' → logprob: -12.000360488891602
    8. '+' → logprob: -12.625360488891602
    9. ',(' → logprob: -12.875360488891602
    10. '```' → logprob: -13.625360488891602

Token 221: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.022237369790673256
    2. ' s' → logprob: -4.147237300872803
    3. 'k' → logprob: -5.772237300872803
    4. '(s' → logprob: -5.897237300872803
    5. '0' → logprob: -8.647237777709961
    6. ' k' → logprob: -10.522237777709961
    7. ')' → logprob: -10.647237777709961
    8. ' (' → logprob: -10.647237777709961
    9. ' ' → logprob: -10.897237777709961
    10. '(k' → logprob: -10.897237777709961

Token 222: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0879606083035469
    2. '-' → logprob: -2.587960720062256
    3. '-k' → logprob: -4.712960720062256
    4. ')' → logprob: -10.712960243225098
    5. ' ' → logprob: -11.587960243225098
    6. 'k' → logprob: -12.337960243225098
    7. '   ' → logprob: -12.587960243225098
    8. ',' → logprob: -13.087960243225098
    9. ' -
' → logprob: -13.212960243225098
    10. '+' → logprob: -13.337960243225098

Token 223: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0077253952622413635
    2. ' k' → logprob: -4.882725238800049
    3. '(k' → logprob: -9.257725715637207
    4. ' (' → logprob: -11.257725715637207
    5. '(n' → logprob: -12.257725715637207
    6. ' ' → logprob: -13.257725715637207
    7. 'n' → logprob: -13.632725715637207
    8. '(' → logprob: -14.382725715637207
    9. '(s' → logprob: -14.382725715637207
    10. ')' → logprob: -14.882725715637207

Token 224: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015676865354180336
    2. ')
' → logprob: -4.265676975250244
    3. '+' → logprob: -6.640676975250244
    4. ' )' → logprob: -9.390676498413086
    5. '```' → logprob: -10.140676498413086
    6. ')

' → logprob: -10.640676498413086
    7. ' +' → logprob: -11.015676498413086
    8. '[' → logprob: -11.640676498413086
    9. ' )
' → logprob: -12.515676498413086
    10. ')`' → logprob: -12.640676498413086

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00931919738650322
    2. ')' → logprob: -5.634319305419922
    3. ' *' → logprob: -5.759319305419922
    4. '<|end|>' → logprob: -6.884319305419922
    5. '*' → logprob: -7.509319305419922
    6. '
' → logprob: -7.884319305419922
    7. '   ' → logprob: -8.884319305419922
    8. ',' → logprob: -9.384319305419922
    9. '        
' → logprob: -9.384319305419922
    10. ' expected' → logprob: -9.884319305419922

Token 226: ' expected' (ID: 5930)
  Prédit: ' expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expected' → logprob: -0.5840860605239868
    2. 'expected' (adapté à ' expected') → logprob: -1.0840860605239868
    3. '       ' → logprob: -2.3340859413146973
    4. '   ' → logprob: -5.334085941314697
    5. '
' → logprob: -7.209085941314697
    6. '	expected' → logprob: -7.209085941314697
    7. '```' → logprob: -8.459086418151855
    8. '        
' → logprob: -8.834086418151855
    9. '(expected' → logprob: -8.959086418151855
    10. '_expected' → logprob: -9.209086418151855

Token 227: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38735005259513855
    2. '+=' → logprob: -1.137350082397461
    3. ']+=' → logprob: -8.262350082397461
    4. '+=(' → logprob: -10.012350082397461
    5. '   ' → logprob: -10.137350082397461
    6. '+' → logprob: -10.137350082397461
    7. '```' → logprob: -10.262350082397461
    8. '    ' → logprob: -10.887350082397461
    9. '	' → logprob: -11.262350082397461
    10. '=' → logprob: -12.262350082397461

Token 228: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.005637820810079575
    2. ' count' → logprob: -5.8806376457214355
    3. 'val' → logprob: -6.1306376457214355
    4. '(count' → logprob: -7.5056376457214355
    5. ' val' → logprob: -9.255638122558594
    6. '(val' → logprob: -12.255638122558594
    7. '   ' → logprob: -13.130638122558594
    8. ' (' → logprob: -14.005638122558594
    9. ' ' → logprob: -15.755638122558594
    10. '[count' → logprob: -16.130638122558594

Token 229: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0003454753023106605
    2. '*' → logprob: -8.000345230102539
    3. ' ' → logprob: -12.750345230102539
    4. '[val' → logprob: -13.125345230102539
    5. '(s' → logprob: -14.000345230102539
    6. 's' → logprob: -14.125345230102539
    7. '```' → logprob: -14.250345230102539
    8. '<|end|>' → logprob: -14.750345230102539
    9. '`' → logprob: -15.000345230102539
    10. ' /' → logprob: -15.000345230102539

Token 230: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.474138468503952
    2. ' val' → logprob: -0.9741384983062744
    3. '(val' → logprob: -9.724138259887695
    4. ' (' → logprob: -13.599138259887695
    5. '	val' → logprob: -16.099138259887695
    6. '(' → logprob: -16.349138259887695
    7. '```' → logprob: -16.349138259887695
    8. '_val' → logprob: -16.599138259887695
    9. '[val' → logprob: -16.849138259887695
    10. '.val' → logprob: -17.599138259887695

Token 231: '

' (ID: 279)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4975285828113556
    2. '   ' → logprob: -1.4975285530090332
    3. '
' → logprob: -2.372528553009033
    4. '/' → logprob: -2.747528553009033
    5. ' /
' → logprob: -4.997528553009033
    6. '/
' → logprob: -6.747528553009033
    7. ' ' → logprob: -7.122528553009033
    8. '    
' → logprob: -7.372528553009033
    9. ' 
' → logprob: -7.872528553009033
    10. '
' → logprob: -8.247529029846191

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.605933666229248
    2. ' /' → logprob: -0.855933666229248
    3. '/' → logprob: -4.230933666229248
    4. ' /
' → logprob: -4.605933666229248
    5. '
' → logprob: -5.980933666229248
    6. '    
' → logprob: -7.730933666229248
    7. ' ' → logprob: -7.730933666229248
    8. ' total' → logprob: -7.855933666229248
    9. '/
' → logprob: -8.105934143066406
    10. '*' → logprob: -8.480934143066406

Token 233: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20320913195610046
    2. ' return' → logprob: -2.453209161758423
    3. 'expected' → logprob: -3.078209161758423
    4. '   ' → logprob: -3.078209161758423
    5. ' expected' → logprob: -5.328208923339844
    6. 'total' → logprob: -7.703208923339844
    7. '
' → logprob: -8.578208923339844
    8. ' total' → logprob: -8.703208923339844
    9. '```' → logprob: -9.828208923339844
    10. '    
' → logprob: -10.828208923339844

Token 234: ' expected' (ID: 5930)
  Prédit: ' expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expected' → logprob: -0.04862608388066292
    2. 'expected' → logprob: -3.048626184463501
    3. '(expected' → logprob: -10.298625946044922
    4. ' ' → logprob: -13.423625946044922
    5. ' total' → logprob: -13.548625946044922
    6. '	expected' → logprob: -14.548625946044922
    7. '   ' → logprob: -14.548625946044922
    8. ' (' → logprob: -14.798625946044922
    9. '_expected' → logprob: -15.048625946044922
    10. '0' → logprob: -15.673625946044922

Token 235: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.03369768336415291
    2. '/' → logprob: -3.4086976051330566
    3. '   ' → logprob: -10.908698081970215
    4. ' ' → logprob: -11.033698081970215
    5. ' ' → logprob: -12.158698081970215
    6. '/div' → logprob: -13.283698081970215
    7. '  ' → logprob: -13.283698081970215
    8. ' /
' → logprob: -13.408698081970215
    9. '*' → logprob: -14.283698081970215
    10. ',' → logprob: -14.283698081970215

Token 236: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00033546582562848926
    2. ' total' → logprob: -8.000335693359375
    3. '(total' → logprob: -17.375335693359375
    4. '   ' → logprob: -18.000335693359375
    5. '	total' → logprob: -19.375335693359375
    6. '_total' → logprob: -20.625335693359375
    7. '$total' → logprob: -20.625335693359375
    8. ' ' → logprob: -21.000335693359375
    9. '.total' → logprob: -21.375335693359375
    10. ',total' → logprob: -21.375335693359375

Token 237: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '\' → logprob: -17.125
    3. 'ways' → logprob: -17.625
    4. '__' → logprob: -18.375
    5. 'Ways' → logprob: -18.375
    6. ' _' → logprob: -18.5
    7. '```' → logprob: -18.625
    8. '_total' → logprob: -18.625
    9. '_way' → logprob: -18.75
    10. 'total' → logprob: -18.875

Token 238: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -1.0280383548888494e-06
    2. 'way' → logprob: -14.500000953674316
    3. 'Ways' → logprob: -15.750000953674316
    4. ' ways' → logprob: -15.875000953674316
    5. 'WAYS' → logprob: -15.875000953674316
    6. '```' → logprob: -16.500001907348633
    7. 'n' → logprob: -18.750001907348633
    8. 'w' → logprob: -19.125001907348633
    9. 'methods' → logprob: -19.500001907348633
    10. 'works' → logprob: -19.875001907348633

Token 239: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 240: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 241: ' line' (ID: 2543)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16567836701869965
    2. ' n' → logprob: -2.2906782627105713
    3. ' _' → logprob: -3.2906782627105713
    4. ' ' → logprob: -4.54067850112915
    5. ' line' → logprob: -6.54067850112915
    6. '_' → logprob: -7.29067850112915
    7. ' num' → logprob: -7.79067850112915
    8. ' die' → logprob: -8.665678024291992
    9. 'n' → logprob: -8.915678024291992
    10. ' dice' → logprob: -8.915678024291992

Token 242: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00766884908080101
    2. 'in' → logprob: -4.882668972015381
    3. ' =' → logprob: -11.382668495178223
    4. ' ' → logprob: -11.507668495178223
    5. '()' → logprob: -11.507668495178223
    6. '(' → logprob: -11.882668495178223
    7. 'line' → logprob: -12.132668495178223
    8. '   ' → logprob: -13.132668495178223
    9. 's' → logprob: -13.382668495178223
    10. '=' → logprob: -13.507668495178223

Token 243: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.018153570592403412
    2. ' sys' → logprob: -4.018153667449951
    3. '=sys' → logprob: -12.768153190612793
    4. '	sys' → logprob: -14.768153190612793
    5. '(sys' → logprob: -14.893153190612793
    6. 'stdin' → logprob: -17.39315414428711
    7. '```' → logprob: -17.51815414428711
    8. 'in' → logprob: -18.89315414428711
    9. 'iter' → logprob: -19.64315414428711
    10. ' ' → logprob: -19.64315414428711

Token 244: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.07035640627145767
    2. 'stdin' → logprob: -2.6953563690185547
    3. '(stdin' → logprob: -8.320356369018555
    4. '.readline' → logprob: -9.320356369018555
    5. 'in' → logprob: -10.070356369018555
    6. ' stdin' → logprob: -10.695356369018555
    7. 'import' → logprob: -11.695356369018555
    8. 'input' → logprob: -12.445356369018555
    9. '.' → logprob: -12.445356369018555
    10. '```' → logprob: -13.320356369018555

Token 245: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.041567474603652954
    2. ':' → logprob: -3.41656756401062
    3. '.readlines' → logprob: -5.291567325592041
    4. '.' → logprob: -5.916567325592041
    5. ' readline' → logprob: -10.4165678024292
    6. ':
' → logprob: -10.6665678024292
    7. '():' → logprob: -10.6665678024292
    8. '.rstrip' → logprob: -10.7915678024292
    9. ' in' → logprob: -11.2915678024292
    10. '   ' → logprob: -11.6665678024292

Token 246: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010654778219759464
    2. ' if' → logprob: -5.635654926300049
    3. '    
' → logprob: -5.635654926300049
    4. '.strip' → logprob: -6.385654926300049
    5. ' line' → logprob: -7.510654926300049
    6. 'strip' → logprob: -8.51065444946289
    7. 'if' → logprob: -9.01065444946289
    8. '.rstrip' → logprob: -9.01065444946289
    9. 'line' → logprob: -9.63565444946289
    10. ':' → logprob: -9.63565444946289

Token 247: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.6817962527275085
    2. 'line' → logprob: -1.5567963123321533
    3. ' line' → logprob: -1.9317963123321533
    4. ' n' → logprob: -2.8067963123321533
    5. '   ' → logprob: -3.1817963123321533
    6. 'if' → logprob: -4.181796073913574
    7. ' if' → logprob: -4.431796073913574
    8. ' parts' → logprob: -6.056796073913574
    9. 'tokens' → logprob: -6.056796073913574
    10. 'params' → logprob: -6.181796073913574

Token 248: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002943479048553854
    2. ' ,' → logprob: -9.25029468536377
    3. ',m' → logprob: -9.62529468536377
    4. ',k' → logprob: -10.00029468536377
    5. ',n' → logprob: -10.37529468536377
    6. ',int' → logprob: -10.75029468536377
    7. ',s' → logprob: -12.12529468536377
    8. ',line' → logprob: -12.12529468536377
    9. '_,' → logprob: -12.75029468536377
    10. '=' → logprob: -12.87529468536377

Token 249: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5244013071060181
    2. ',k' → logprob: -0.8994013071060181
    3. ',m' → logprob: -7.2744011878967285
    4. ' ,' → logprob: -9.024401664733887
    5. '=' → logprob: -9.274401664733887
    6. ',n' → logprob: -9.649401664733887
    7. ' =' → logprob: -10.524401664733887
    8. ',e' → logprob: -10.524401664733887
    9. ',c' → logprob: -10.649401664733887
    10. ',s' → logprob: -10.649401664733887

Token 250: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12718217074871063
    2. ' =' → logprob: -2.1271822452545166
    3. '=line' → logprob: -8.377182006835938
    4. '=int' → logprob: -11.252182006835938
    5. '=n' → logprob: -12.002182006835938
    6. '=input' → logprob: -13.002182006835938
    7. ',' → logprob: -13.752182006835938
    8. '=list' → logprob: -15.127182006835938
    9. '=str' → logprob: -15.502182006835938
    10. '=parse' → logprob: -15.752182006835938

Token 251: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0004311460361350328
    2. ' map' → logprob: -7.750431060791016
    3. 'line' → logprob: -14.750431060791016
    4. '(map' → logprob: -16.750431060791016
    5. 'list' → logprob: -18.125431060791016
    6. '	map' → logprob: -19.375431060791016
    7. '.map' → logprob: -20.000431060791016
    8. '[' → logprob: -21.500431060791016
    9. ' line' → logprob: -21.875431060791016
    10. 'm' → logprob: -22.375431060791016

Token 252: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001116404077038169
    2. '(str' → logprob: -7.0011162757873535
    3. 'int' → logprob: -9.251116752624512
    4. '(lambda' → logprob: -9.376116752624512
    5. '(' → logprob: -11.376116752624512
    6. '(line' → logprob: -12.251116752624512
    7. 'str' → logprob: -13.001116752624512
    8. '[int' → logprob: -13.251116752624512
    9. '<int' → logprob: -13.501116752624512
    10. 'lambda' → logprob: -14.251116752624512

Token 253: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.008855647407472134
    2. ',line' → logprob: -5.383855819702148
    3. 'line' → logprob: -5.633855819702148
    4. ',' → logprob: -8.008855819702148
    5. ')' → logprob: -8.883855819702148
    6. '=line' → logprob: -9.633855819702148
    7. ' line' → logprob: -10.133855819702148
    8. '[line' → logprob: -10.383855819702148
    9. '#line' → logprob: -10.758855819702148
    10. '(' → logprob: -11.008855819702148

Token 254: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -7.493430894101039e-05
    2. ' line' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.75007438659668
    4. '(line' → logprob: -18.25007438659668
    5. '	line' → logprob: -18.87507438659668
    6. '[line' → logprob: -19.75007438659668
    7. '=line' → logprob: -19.87507438659668
    8. ')' → logprob: -20.75007438659668
    9. '#line' → logprob: -20.87507438659668
    10. ',line' → logprob: -21.62507438659668

Token 255: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.09053069353103638
    2. '().' → logprob: -2.8405306339263916
    3. '.split' → logprob: -3.5905306339263916
    4. '.readline' → logprob: -7.965530872344971
    5. '.' → logprob: -9.215530395507812
    6. '.rstrip' → logprob: -9.340530395507812
    7. 'strip' → logprob: -10.340530395507812
    8. 'split' → logprob: -13.090530395507812
    9. ' .' → logprob: -13.090530395507812
    10. '(strip' → logprob: -13.340530395507812

Token 256: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0018899721326306462
    2. '()' → logprob: -6.626890182495117
    3. ')' → logprob: -7.501890182495117
    4. '())
' → logprob: -12.001890182495117
    5. '(' → logprob: -13.126890182495117
    6. '(','' → logprob: -13.751890182495117
    7. '('' → logprob: -14.126890182495117
    8. '()))' → logprob: -14.751890182495117
    9. ' ())' → logprob: -15.001890182495117
    10. '(),' → logprob: -15.001890182495117

Token 257: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.43945279717445374
    2. '   ' → logprob: -1.1894527673721313
    3. ' print' → logprob: -3.439452886581421
    4. '<|end|>' → logprob: -5.564452648162842
    5. '    
' → logprob: -5.689452648162842
    6. '
' → logprob: -5.814452648162842
    7. ',' → logprob: -6.064452648162842
    8. 'result' → logprob: -6.064452648162842
    9. ' if' → logprob: -6.939452648162842
    10. 'n' → logprob: -7.564452648162842

Token 258: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009938681032508612
    2. 'result' → logprob: -7.000993728637695
    3. ' print' → logprob: -9.500993728637695
    4. 'if' (adapté à ' if') → logprob: -12.375993728637695
    5. 'res' → logprob: -13.250993728637695
    6. ' result' → logprob: -14.750993728637695
    7. 'answer' → logprob: -14.875993728637695
    8. 'expected' → logprob: -15.250993728637695
    9. 'value' → logprob: -15.875993728637695
    10. ' if' → logprob: -16.250993728637695

Token 259: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.018151935189962387
    2. 'n' → logprob: -4.018151760101318
    3. '(n' → logprob: -13.893152236938477
    4. ' (' → logprob: -14.393152236938477
    5. ' ' → logprob: -15.893152236938477
    6. ' not' → logprob: -16.018152236938477
    7. '	n' → logprob: -16.018152236938477
    8. '(' → logprob: -16.643152236938477
    9. ' ' → logprob: -17.268152236938477
    10. '  ' → logprob: -18.768152236938477

Token 260: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2021363526582718
    2. '==' → logprob: -1.7021363973617554
    3. ' ' → logprob: -7.327136516571045
    4. '0' → logprob: -10.327136039733887
    5. '=' → logprob: -11.452136039733887
    6. ' <=' → logprob: -11.952136039733887
    7. '<=' → logprob: -12.827136039733887
    8. ')==' → logprob: -12.952136039733887
    9. ',' → logprob: -13.077136039733887
    10. '===' → logprob: -13.202136039733887

Token 261: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020354038861114532
    2. ' ' → logprob: -8.500203132629395
    3. '۰' → logprob: -18.25020408630371
    4. '=' → logprob: -19.50020408630371
    5. '   ' → logprob: -19.62520408630371
    6. '０' → logprob: -19.87520408630371
    7. 'm' → logprob: -20.37520408630371
    8. 'k' → logprob: -20.50020408630371
    9. '  ' → logprob: -20.87520408630371
    10. '```' → logprob: -20.87520408630371

Token 262: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3782830137643032e-05
    2. ' ' → logprob: -11.25001335144043
    3. 'm' → logprob: -15.00001335144043
    4. 'k' → logprob: -15.87501335144043
    5. '۰' → logprob: -16.62501335144043
    6. '０' → logprob: -16.87501335144043
    7. '```' → logprob: -17.50001335144043
    8. 'n' → logprob: -18.12501335144043
    9. '
' → logprob: -18.56251335144043
    10. '०' → logprob: -18.56251335144043

Token 263: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6931493282318115
    2. 'and' → logprob: -0.6931493282318115
    3. ' ' → logprob: -13.69314956665039
    4. ' or' → logprob: -14.81814956665039
    5. '	and' → logprob: -14.94314956665039
    6. ':' → logprob: -15.19314956665039
    7. 'a' → logprob: -17.31814956665039
    8. ' a' → logprob: -17.94314956665039
    9. '  ' → logprob: -17.94314956665039
    10. '   ' → logprob: -18.06814956665039

Token 264: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00317783304490149
    2. ' m' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.128177642822266
    4. '	m' → logprob: -17.378177642822266
    5. '  ' → logprob: -18.253177642822266
    6. ' ' → logprob: -18.378177642822266
    7. '    ' → logprob: -20.003177642822266
    8. ' ' → logprob: -20.753177642822266
    9. ',m' → logprob: -21.128177642822266
    10. '(m' → logprob: -22.128177642822266

Token 265: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.38687366247177124
    2. ' ==' → logprob: -1.136873722076416
    3. ' ' → logprob: -14.261873245239258
    4. '=' → logprob: -14.511873245239258
    5. '===' → logprob: -14.761873245239258
    6. '0' → logprob: -15.261873245239258
    7. '==
' → logprob: -15.886873245239258
    8. 'k' → logprob: -16.261873245239258
    9. '```' → logprob: -16.261873245239258
    10. ')==' → logprob: -16.511873245239258

Token 266: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '<|end|>' → logprob: -17.000709533691406
    4. '  ' → logprob: -17.375709533691406
    5. ' and' → logprob: -17.750709533691406
    6. '   ' → logprob: -17.750709533691406
    7. 'and' → logprob: -17.875709533691406
    8. '۰' → logprob: -18.625709533691406
    9. '=' → logprob: -18.938209533691406
    10. '<|end|>' → logprob: -19.000709533691406

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -17.500009536743164
    4. '۰' → logprob: -18.125009536743164
    5. '   ' → logprob: -18.375009536743164
    6. '```' → logprob: -18.562509536743164
    7. '  ' → logprob: -18.625009536743164
    8. '<|end|>' → logprob: -19.375009536743164
    9. 'and' → logprob: -19.562509536743164
    10. '=' → logprob: -19.625009536743164

Token 268: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018151231110095978
    2. 'and' → logprob: -4.01815128326416
    3. '	and' → logprob: -14.76815128326416
    4. ' и' → logprob: -15.14315128326416
    5. '<|end|>' → logprob: -15.14315128326416
    6. ' ' → logprob: -16.268150329589844
    7. '   ' → logprob: -16.268150329589844
    8. '<|end|>' → logprob: -16.518150329589844
    9. 'そして' → logprob: -17.143150329589844
    10. 'และ' → logprob: -17.268150329589844

Token 269: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.006723302416503429
    2. ' k' → logprob: -5.006723403930664
    3. '0' → logprob: -11.756723403930664
    4. ' ' → logprob: -15.756723403930664
    5. '	k' → logprob: -17.506723403930664
    6. '   ' → logprob: -18.381723403930664
    7. '  ' → logprob: -20.381723403930664
    8. ' ' → logprob: -23.006723403930664
    9. '_k' → logprob: -23.256723403930664
    10. ',k' → logprob: -23.256723403930664

Token 270: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16028068959712982
    2. ' ==' → logprob: -1.910280704498291
    3. '0' → logprob: -10.035280227661133
    4. '=' → logprob: -13.035280227661133
    5. '==
' → logprob: -13.035280227661133
    6. ' ' → logprob: -13.285280227661133
    7. ')==' → logprob: -13.285280227661133
    8. '()==' → logprob: -13.785280227661133
    9. ' ' → logprob: -14.035280227661133
    10. '===' → logprob: -14.160280227661133

Token 271: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.875011444091797
    4. '  ' → logprob: -19.375011444091797
    5. '۰' → logprob: -19.625011444091797
    6. '```' → logprob: -21.250011444091797
    7. '০' → logprob: -21.562511444091797
    8. ' ' → logprob: -22.000011444091797
    9. '０' → logprob: -22.000011444091797
    10. '
' → logprob: -22.125011444091797

Token 272: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '۰' → logprob: -18.50000762939453
    4. '   ' → logprob: -19.37500762939453
    5. '<|end|>' → logprob: -20.37500762939453
    6. '０' → logprob: -20.50000762939453
    7. '०' → logprob: -20.62500762939453
    8. '০' → logprob: -20.75000762939453
    9. '-' → logprob: -21.06250762939453
    10. '<|end|>' → logprob: -21.12500762939453

Token 273: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07467217743396759
    2. ':
' → logprob: -2.824672222137451
    3. '   ' → logprob: -4.574672222137451
    4. '       ' → logprob: -6.074672222137451
    5. ':return' → logprob: -12.699671745300293
    6. '	break' → logprob: -13.074671745300293
    7. '.' → logprob: -13.824671745300293
    8. '):
' → logprob: -13.824671745300293
    9. ',' → logprob: -13.824671745300293
    10. '():
' → logprob: -14.074671745300293

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005026352009736001
    2. '   ' → logprob: -7.625502586364746
    3. ' break' → logprob: -11.750502586364746
    4. '	break' → logprob: -13.125502586364746
    5. 'break' → logprob: -13.375502586364746
    6. '<|end|>' → logprob: -13.875502586364746
    7. '           ' → logprob: -14.500502586364746
    8. '      ' → logprob: -14.750502586364746
    9. '     ' → logprob: -15.125502586364746
    10. '	   ' → logprob: -15.375502586364746

Token 275: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.6160817742347717
    2. '       ' → logprob: -1.366081714630127
    3. ' break' → logprob: -1.616081714630127
    4. '   ' → logprob: -5.116081714630127
    5. '	break' → logprob: -8.741082191467285
    6. '           ' → logprob: -13.491082191467285
    7. '
' → logprob: -13.616082191467285
    8. '_break' → logprob: -14.741082191467285
    9. ' ' → logprob: -15.741082191467285
    10. '     ' → logprob: -15.991082191467285

Token 276: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02453400380909443
    2. '    
' → logprob: -4.274534225463867
    3. '
' → logprob: -5.149534225463867
    4. 'print' → logprob: -5.524534225463867
    5. ' print' → logprob: -8.399534225463867
    6. '<|end|>' → logprob: -8.774534225463867
    7. '  
' → logprob: -9.399534225463867
    8. '        
' → logprob: -11.274534225463867
    9. '   
' → logprob: -11.524534225463867
    10. ' 
' → logprob: -11.774534225463867

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07441007345914841
    2. 'print' → logprob: -2.9494099617004395
    3. ' print' → logprob: -3.9494099617004395
    4. '    
' → logprob: -10.074410438537598
    5. 'result' → logprob: -11.949410438537598
    6. '
' → logprob: -12.074410438537598
    7. '	print' → logprob: -12.199410438537598
    8. ' result' → logprob: -12.449410438537598
    9. '```' → logprob: -12.699410438537598
    10. 'output' → logprob: -13.699410438537598

Token 278: ' ans' (ID: 3345)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009295573458075523
    2. ' print' → logprob: -4.759295463562012
    3. '   ' → logprob: -7.634295463562012
    4. 'result' → logprob: -8.634295463562012
    5. ' result' → logprob: -11.134295463562012
    6. '```' → logprob: -13.259295463562012
    7. 'output' → logprob: -13.759295463562012
    8. '	print' → logprob: -14.134295463562012
    9. '    
' → logprob: -14.634295463562012
    10. '
' → logprob: -15.384295463562012

Token 279: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026409097015857697
    2. '=' → logprob: -3.651409149169922
    3. '_' → logprob: -10.276409149169922
    4. ')' → logprob: -10.901409149169922
    5. 'print' → logprob: -11.276409149169922
    6. '   ' → logprob: -11.651409149169922
    7. ' ' → logprob: -11.901409149169922
    8. ',' → logprob: -12.026409149169922
    9. '  ' → logprob: -13.026409149169922
    10. ':' → logprob: -13.276409149169922

Token 280: ' expected' (ID: 5930)
  Prédit: ' expected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expected' → logprob: -0.31326642632484436
    2. 'expected' → logprob: -1.313266396522522
    3. '(expected' → logprob: -13.18826675415039
    4. 'round' → logprob: -13.31326675415039
    5. ' round' → logprob: -14.93826675415039
    6. '	expected' → logprob: -15.31326675415039
    7. ' f' → logprob: -15.81326675415039
    8. 'int' → logprob: -16.06326675415039
    9. 'f' → logprob: -16.18826675415039
    10. '.expected' → logprob: -17.06326675415039

Token 281: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.500000953674316
    3. 'value' → logprob: -15.750000953674316
    4. '_val' → logprob: -15.875000953674316
    5. '_values' → logprob: -17.5
    6. ' _' → logprob: -18.375
    7. '_VALUE' → logprob: -18.75
    8. '_Value' → logprob: -19.0
    9. '_answer' → logprob: -19.625
    10. '_output' → logprob: -19.625

Token 282: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.949026571121067e-05
    2. '(' → logprob: -9.250099182128906
    3. ' (' → logprob: -12.750099182128906
    4. '(
' → logprob: -15.125099182128906
    5. '```' → logprob: -17.875099182128906
    6. '
' → logprob: -18.250099182128906
    7. 'n' → logprob: -19.000099182128906
    8. '<n' → logprob: -19.125099182128906
    9. '\(' → logprob: -19.125099182128906
    10. ' ' → logprob: -19.250099182128906

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02633316069841385
    2. ',m' → logprob: -3.6513330936431885
    3. ' ,' → logprob: -10.40133285522461
    4. ',
' → logprob: -13.40133285522461
    5. 'm' → logprob: -14.40133285522461
    6. '(m' → logprob: -16.02633285522461
    7. '   ' → logprob: -16.02633285522461
    8. ',k' → logprob: -16.52633285522461
    9. ')' → logprob: -17.15133285522461
    10. '```' → logprob: -17.15133285522461

Token 284: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -6.988221684878226e-06
    2. ' m' → logprob: -11.875006675720215
    3. '   ' → logprob: -19.50000762939453
    4. '
' → logprob: -21.00000762939453
    5. ')' → logprob: -21.25000762939453
    6. ')m' → logprob: -21.37500762939453
    7. '```' → logprob: -21.75000762939453
    8. 'k' → logprob: -22.12500762939453
    9. '    ' → logprob: -22.37500762939453
    10. ' ' → logprob: -22.37500762939453

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.033661723136901855
    2. ',k' → logprob: -3.4086618423461914
    3. ' ,' → logprob: -11.533661842346191
    4. 'k' → logprob: -12.408661842346191
    5. ')' → logprob: -14.033661842346191
    6. ',
' → logprob: -14.408661842346191
    7. '```' → logprob: -15.783661842346191
    8. '),' → logprob: -16.408660888671875
    9. '-' → logprob: -16.533660888671875
    10. ',n' → logprob: -16.533660888671875

Token 286: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.339278580620885e-06
    2. ' k' → logprob: -13.000001907348633
    3. '	k' → logprob: -20.125001907348633
    4. ')' → logprob: -20.875001907348633
    5. '{k' → logprob: -21.000001907348633
    6. '   ' → logprob: -21.500001907348633
    7. '"k' → logprob: -22.250001907348633
    8. '
' → logprob: -22.375001907348633
    9. '*k' → logprob: -22.375001907348633
    10. '```' → logprob: -23.125001907348633

Token 287: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011454029940068722
    2. ')
' → logprob: -4.511454105377197
    3. '   ' → logprob: -7.886454105377197
    4. 'print' → logprob: -11.011453628540039
    5. ')
' → logprob: -11.511453628540039
    6. ' )' → logprob: -13.886453628540039
    7. '<|end|>' → logprob: -14.636453628540039
    8. ')

' → logprob: -15.261453628540039
    9. ')`' → logprob: -15.761453628540039
    10. '),' → logprob: -15.761453628540039

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04867252707481384
    2. 'print' → logprob: -3.0486724376678467
    3. ' print' → logprob: -9.798672676086426
    4. '```' → logprob: -10.548672676086426
    5. '	print' → logprob: -13.548672676086426
    6. '<|end|>' → logprob: -13.798672676086426
    7. '    
' → logprob: -15.048672676086426
    8. '#print' → logprob: -15.923672676086426
    9. '``' → logprob: -16.17367172241211
    10. '(print' → logprob: -16.29867172241211

Token 289: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9146995327901095e-05
    2. ' print' → logprob: -11.000019073486328
    3. '   ' → logprob: -13.000019073486328
    4. '```' → logprob: -16.500019073486328
    5. 'printf' → logprob: -19.500019073486328
    6. '	print' → logprob: -19.750019073486328
    7. '
' → logprob: -19.750019073486328
    8. '#print' → logprob: -21.750019073486328
    9. '.print' → logprob: -22.500019073486328
    10. '``' → logprob: -22.750019073486328

Token 290: '(f' (ID: 1526)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.393406480550766
    2. '(f' → logprob: -1.1434065103530884
    3. '(round' → logprob: -5.393406391143799
    4. '("{' → logprob: -6.893406391143799
    5. '(' → logprob: -7.768406391143799
    6. '(int' → logprob: -8.018406867980957
    7. '("%.' → logprob: -9.143406867980957
    8. 'f' → logprob: -10.768406867980957
    9. 'ans' → logprob: -10.768406867980957
    10. '('{' → logprob: -11.268406867980957

Token 291: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.029844094067811966
    2. '{' → logprob: -3.529844045639038
    3. ''{' → logprob: -9.279844284057617
    4. '"' → logprob: -15.279844284057617
    5. '("{' → logprob: -17.529844284057617
    6. '"${' → logprob: -17.654844284057617
    7. '{"' → logprob: -18.154844284057617
    8. '){' → logprob: -18.279844284057617
    9. '{x' → logprob: -19.404844284057617
    10. '{return' → logprob: -20.029844284057617

Token 292: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -9.088346359931165e-07
    2. ' ans' → logprob: -14.125000953674316
    3. '(ans' → logprob: -17.0
    4. '	ans' → logprob: -18.0
    5. 'answer' → logprob: -20.0
    6. 'round' → logprob: -20.0
    7. 'anst' → logprob: -20.625
    8. '{' → logprob: -20.625
    9. '_ans' → logprob: -20.625
    10. '   ' → logprob: -21.0

Token 293: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -4.320199877838604e-07
    2. ' :.' → logprob: -15.5
    3. ':' → logprob: -15.75
    4. '.' → logprob: -18.125
    5. '}")' → logprob: -19.875
    6. '{' → logprob: -20.625
    7. ' .' → logprob: -21.5
    8. ':{' → logprob: -21.75
    9. ':e' → logprob: -23.0
    10. ':\' → logprob: -23.0

Token 294: '8' (ID: 23)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.3412587642669678
    2. '9' → logprob: -2.0912587642669678
    3. '10' → logprob: -2.5912587642669678
    4. '4' → logprob: -3.7162587642669678
    5. '7' → logprob: -3.7162587642669678
    6. '8' → logprob: -3.9662587642669678
    7. '5' → logprob: -4.841259002685547
    8. '12' → logprob: -5.216259002685547
    9. '3' → logprob: -5.466259002685547
    10. '2' → logprob: -5.841259002685547

Token 295: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.9361264946837764e-07
    2. '6' → logprob: -16.625
    3. 'lf' → logprob: -17.5
    4. 'g' → logprob: -17.75
    5. 'e' → logprob: -19.0
    6. '{' → logprob: -19.5
    7. '
' → logprob: -20.125
    8. '```' → logprob: -21.0
    9. '

' → logprob: -21.75
    10. '}' → logprob: -22.0

Token 296: '}")' (ID: 122365)
  Prédit: '}")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.0022134194150567055
    2. '")' → logprob: -6.502213478088379
    3. ')")' → logprob: -7.252213478088379
    4. '}")
' → logprob: -13.252213478088379
    5. ')' → logprob: -15.502213478088379
    6. ')}' → logprob: -16.252212524414062
    7. '})' → logprob: -16.502212524414062
    8. '}' → logprob: -16.627212524414062
    9. '}")
' → logprob: -17.002212524414062
    10. '")}' → logprob: -17.752212524414062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 294
Tokens correctement prédits (1ère position, stricte): 132
Tokens correctement prédits (1ère position, avec adaptation): 140
Tokens correctement prédits (top 10): 253
Précision stricte (1ère position): 44.90%
Précision adaptée (1ère position): 47.62%
Précision (top 10): 86.05%
================================================================================
