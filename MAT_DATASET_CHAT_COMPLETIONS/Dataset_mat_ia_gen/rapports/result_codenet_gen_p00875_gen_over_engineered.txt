================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:20:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class SubstitutionRule:
    def __init__(self, pattern: str, replacement: str):
        self.pattern = pattern
        self.replacement = replacement

    def apply(self, s: str) -> str:
        parts = []
        i = 0
        length = len(s)
        p_len = len(self.pattern)
        while i < length:
            if s.startswith(self.pattern, i):
                parts.append(self.replacement)
                i += p_len
            else:
                parts.append(s[i])
                i += 1
        return ''.join(parts)


class SubstitutionSet:
    def __init__(self, rules):
        self.rules = rules  # list of SubstitutionRule

    def possible_next_states(self, s: str):
        next_states = []
        for rule in self.rules:
            result = rule.apply(s)
            if result != s:
                next_states.append(result)
        return next_states


class BFSState:
    def __init__(self, string: str, steps: int):
        self.string = string
        self.steps = steps


class SubstitutionSolver:
    MAX_STEPS = 100  # safety limit

    def __init__(self, substitution_set: SubstitutionSet, start: str, target: str):
        self.substitution_set = substitution_set
        self.start = start
        self.target = target

    def minimum_substitutions(self) -> int:
        from collections import deque

        visited = set()
        queue = deque()
        queue.append(BFSState(self.start, 0))
        visited.add(self.start)

        while queue:
            current_state = queue.popleft()
            if current_state.string == self.target:
                return current_state.steps
            if current_state.steps >= self.MAX_STEPS:
                continue
            for next_str in self.substitution_set.possible_next_states(current_state.string):
                if next_str not in visited:
                    visited.add(next_str)
                    queue.append(BFSState(next_str, current_state.steps + 1))
        return -1


class InputParser:
    def __init__(self):
        self.datasets = []

    def parse(self):
        import sys
        lines = sys.stdin.read().splitlines()
        index = 0
        while True:
            if index >= len(lines):
                break
            n_line = lines[index].strip()
            index += 1
            if n_line == '0':
                break
            n = int(n_line)
            rules = []
            for _ in range(n):
                line = lines[index].strip()
                index += 1
                alpha, beta = line.split(' ')
                rules.append(SubstitutionRule(alpha, beta))
            gamma = lines[index].strip()
            index += 1
            delta = lines[index].strip()
            index += 1
            self.datasets.append((rules, gamma, delta))


class OutputHandler:
    @staticmethod
    def output_results(results):
        for res in results:
            print(res)


def main():
    parser = InputParser()
    parser.parse()
    results = []
    for rules, gamma, delta in parser.datasets:
        substitution_set = SubstitutionSet(rules)
        solver = SubstitutionSolver(substitution_set, gamma, delta)
        res = solver.minimum_substitutions()
        results.append(res)
    OutputHandler.output_results(results)


if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Sub' (ID: 5934)
  → Token d'amorce (pas de prédiction)

Token 2: 'stitution' (ID: 20066)
  → Token d'amorce (pas de prédiction)

Token 3: 'Rule' (ID: 11845)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.530165433883667
    2. '(' → logprob: -0.905165433883667
    3. '{' → logprob: -5.405165672302246
    4. '.' → logprob: -6.530165672302246
    5. ' :' → logprob: -7.530165672302246
    6. ' ' → logprob: -9.155165672302246
    7. '[' → logprob: -9.280165672302246
    8. '(:' → logprob: -9.530165672302246
    9. ' (' → logprob: -9.780165672302246
    10. '```' → logprob: -9.905165672302246

Token 4: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13332082331180573
    2. ':' → logprob: -2.3833208084106445
    3. '{' → logprob: -3.5083208084106445
    4. '.' → logprob: -7.0083208084106445
    5. ' ' → logprob: -7.3833208084106445
    6. '[' → logprob: -8.008320808410645
    7. ' {' → logprob: -8.383320808410645
    8. ' (' → logprob: -8.508320808410645
    9. ' :' → logprob: -9.133320808410645
    10. '_' → logprob: -10.008320808410645

Token 5: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31063249707221985
    2. ':' → logprob: -1.4356324672698975
    3. '```' → logprob: -4.185632705688477
    4. '.' → logprob: -4.935632705688477
    5. '   ' → logprob: -5.310632705688477
    6. '(
' → logprob: -7.810632705688477
    7. ''' → logprob: -8.060632705688477
    8. '`' → logprob: -9.060632705688477
    9. '[' → logprob: -9.310632705688477
    10. '(:' → logprob: -9.435632705688477

Token 6: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0719125047326088
    2. '    ' → logprob: -3.4469125270843506
    3. '   ' → logprob: -4.1969122886657715
    4. '(' → logprob: -4.8219122886657715
    5. ' (' → logprob: -6.0719122886657715
    6. '```' → logprob: -6.0719122886657715
    7. '<|end|>' → logprob: -6.3219122886657715
    8. ' ```' → logprob: -6.9469122886657715
    9. ' 
' → logprob: -7.1969122886657715
    10. '(space' → logprob: -7.1969122886657715

Token 7: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01269693672657013
    2. ' ' → logprob: -5.762696743011475
    3. '_' → logprob: -6.012696743011475
    4. ' process' → logprob: -6.637696743011475
    5. '<|end|>' → logprob: -6.887696743011475
    6. ' def' → logprob: -7.012696743011475
    7. ' __' → logprob: -7.887696743011475
    8. '  ' → logprob: -8.387697219848633
    9. '__' → logprob: -8.387697219848633
    10. ' space' → logprob: -8.512697219848633

Token 8: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.5048530030981055e-06
    2. ' init' → logprob: -13.750001907348633
    3. '_init' → logprob: -15.500001907348633
    4. 'ini' → logprob: -16.875001907348633
    5. '	init' → logprob: -18.125001907348633
    6. 'i' → logprob: -18.875001907348633
    7. 'in' → logprob: -20.250001907348633
    8. 'inite' → logprob: -21.000001907348633
    9. '_' → logprob: -21.250001907348633
    10. 'int' → logprob: -21.250001907348633

Token 9: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.20673701167106628
    2. '__' → logprob: -1.7067370414733887
    3. '__(
' → logprob: -5.831737041473389
    4. '(' → logprob: -6.581737041473389
    5. '__((' → logprob: -7.331737041473389
    6. '__('' → logprob: -9.20673656463623
    7. '__(*' → logprob: -9.33173656463623
    8. '(self' → logprob: -9.95673656463623
    9. '_' → logprob: -10.33173656463623
    10. '__("' → logprob: -11.08173656463623

Token 10: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0039618052542209625
    2. ' self' → logprob: -5.62896203994751
    3. ')' → logprob: -8.503961563110352
    4. '(self' → logprob: -9.003961563110352
    5. ' )' → logprob: -10.878961563110352
    6. ''s' → logprob: -13.003961563110352
    7. 's' → logprob: -13.003961563110352
    8. ' ' → logprob: -13.128961563110352
    9. '_self' → logprob: -13.253961563110352
    10. 'space' → logprob: -13.753961563110352

Token 11: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19920650124549866
    2. ')' → logprob: -2.699206590652466
    3. '_' → logprob: -2.699206590652466
    4. 'self' → logprob: -3.449206590652466
    5. ' ,' → logprob: -5.449206352233887
    6. '):' → logprob: -5.949206352233887
    7. '_self' → logprob: -6.574206352233887
    8. '_,' → logprob: -6.949206352233887
    9. ' )' → logprob: -7.074206352233887
    10. '(' → logprob: -7.199206352233887

Token 12: ' pattern' (ID: 8302)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2832929790019989
    2. ' self' → logprob: -1.4082930088043213
    3. 'text' → logprob: -6.783292770385742
    4. ' text' → logprob: -8.783292770385742
    5. 'sub' → logprob: -9.033292770385742
    6. 'sentence' → logprob: -9.033292770385742
    7. 's' → logprob: -9.158292770385742
    8. ' replacement' → logprob: -9.283292770385742
    9. 'replacement' → logprob: -9.533292770385742
    10. 'source' → logprob: -9.908292770385742

Token 13: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2921907901763916
    2. ',' → logprob: -1.6671907901763916
    3. ')' → logprob: -2.9171907901763916
    4. '.' → logprob: -5.6671905517578125
    5. ':' → logprob: -5.9171905517578125
    6. '):
' → logprob: -6.0421905517578125
    7. '=' → logprob: -7.9171905517578125
    8. '   ' → logprob: -8.167190551757812
    9. '<|end|>' → logprob: -8.292190551757812
    10. 's' → logprob: -8.917190551757812

Token 14: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.22808603942394257
    2. 'str' → logprob: -1.603085994720459
    3. ' ' → logprob: -7.603085994720459
    4. ')' → logprob: -7.728085994720459
    5. ''s' → logprob: -8.228086471557617
    6. 's' → logprob: -8.353086471557617
    7. 'r' → logprob: -8.478086471557617
    8. ' '' → logprob: -8.603086471557617
    9. ' )' → logprob: -8.853086471557617
    10. '[str' → logprob: -9.103086471557617

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.792693018913269
    2. '):' → logprob: -0.917693018913269
    3. ')' → logprob: -1.917693018913269
    4. '):
' → logprob: -7.792693138122559
    5. '   ' → logprob: -8.542693138122559
    6. '<|end|>' → logprob: -8.917693138122559
    7. '),' → logprob: -10.417693138122559
    8. ':' → logprob: -10.542693138122559
    9. '```' → logprob: -10.792693138122559
    10. '.' → logprob: -10.792693138122559

Token 16: ' replacement' (ID: 19207)
  Prédit: 'replacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replacement' → logprob: -0.21545495092868805
    2. ' replacement' → logprob: -1.7154549360275269
    3. 're' → logprob: -4.715455055236816
    4. 'target' → logprob: -6.465455055236816
    5. ' target' → logprob: -6.840455055236816
    6. 'sub' → logprob: -7.340455055236816
    7. ')' → logprob: -7.965455055236816
    8. 'replace' → logprob: -8.090455055236816
    9. '   ' → logprob: -8.590455055236816
    10. ' )' → logprob: -8.840455055236816

Token 17: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47887301445007324
    2. '):' → logprob: -0.9788730144500732
    3. ')' → logprob: -5.478873252868652
    4. ':str' → logprob: -8.353873252868652
    5. '=' → logprob: -9.228873252868652
    6. '):
' → logprob: -9.478873252868652
    7. ' ):' → logprob: -9.603873252868652
    8. '_token' → logprob: -10.478873252868652
    9. '   ' → logprob: -10.978873252868652
    10. ' :' → logprob: -11.103873252868652

Token 18: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.3501310348510742
    2. 'str' → logprob: -1.2251310348510742
    3. ')' → logprob: -6.725131034851074
    4. ' ' → logprob: -8.100131034851074
    5. '<|end|>' → logprob: -9.725131034851074
    6. '[str' → logprob: -10.725131034851074
    7. '(str' → logprob: -11.100131034851074
    8. ' )' → logprob: -11.100131034851074
    9. '	str' → logprob: -11.225131034851074
    10. ':str' → logprob: -11.350131034851074

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0029205416794866323
    2. ')' → logprob: -5.877920627593994
    3. '):
' → logprob: -9.502920150756836
    4. ':' → logprob: -11.002920150756836
    5. ',' → logprob: -11.252920150756836
    6. '   ' → logprob: -11.877920150756836
    7. ''):' → logprob: -13.877920150756836
    8. ' ):' → logprob: -14.502920150756836
    9. '```' → logprob: -14.627920150756836
    10. '),' → logprob: -14.877920150756836

Token 20: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005789662711322308
    2. '   ' → logprob: -6.005789756774902
    3. 'self' → logprob: -6.005789756774902
    4. '<|end|>' → logprob: -8.380789756774902
    5. ')' → logprob: -9.005789756774902
    6. '    ' → logprob: -9.380789756774902
    7. ':' → logprob: -9.630789756774902
    8. '```' → logprob: -9.880789756774902
    9. '\' → logprob: -10.130789756774902
    10. ' self' → logprob: -10.130789756774902

Token 21: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.053095269948244095
    2. '       ' → logprob: -3.0530953407287598
    3. ' self' → logprob: -5.42809534072876
    4. '   ' → logprob: -9.803094863891602
    5. '           ' → logprob: -10.678094863891602
    6. '        ' → logprob: -12.053094863891602
    7. '```' → logprob: -12.428094863891602
    8. '_self' → logprob: -12.803094863891602
    9. '\' → logprob: -13.178094863891602
    10. '         ' → logprob: -13.303094863891602

Token 22: '.pattern' (ID: 76901)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.012560389935970306
    2. '.pattern' → logprob: -4.3875603675842285
    3. ' .' → logprob: -11.262560844421387
    4. '.code' → logprob: -11.887560844421387
    5. '._' → logprob: -12.012560844421387
    6. '.target' → logprob: -12.637560844421387
    7. 'pattern' → logprob: -13.012560844421387
    8. '.token' → logprob: -13.262560844421387
    9. '.user' → logprob: -13.262560844421387
    10. '.p' → logprob: -13.387560844421387

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26508527994155884
    2. '=' → logprob: -1.515085220336914
    3. '<|end|>' → logprob: -4.640085220336914
    4. ' ' → logprob: -6.890085220336914
    5. ')' → logprob: -7.015085220336914
    6. ' ==' → logprob: -7.890085220336914
    7. '<|end|>' → logprob: -7.890085220336914
    8. '.' → logprob: -9.140085220336914
    9. '       ' → logprob: -9.515085220336914
    10. '_' → logprob: -9.640085220336914

Token 24: ' pattern' (ID: 8302)
  Prédit: ' pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -0.018152866512537003
    2. 'pattern' → logprob: -4.018152713775635
    3. '(pattern' → logprob: -13.643153190612793
    4. ' replacement' → logprob: -13.643153190612793
    5. '_pattern' → logprob: -16.018152236938477
    6. 'replacement' → logprob: -16.018152236938477
    7. '.pattern' → logprob: -16.143152236938477
    8. 'Pattern' → logprob: -16.268152236938477
    9. ' ' → logprob: -16.768152236938477
    10. ' ' → logprob: -17.643152236938477

Token 25: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1887190341949463
    2. '<|end|>' → logprob: -1.9387190341949463
    3. '\' → logprob: -4.938718795776367
    4. '\n' → logprob: -5.188718795776367
    5. '```' → logprob: -6.063718795776367
    6. '.' → logprob: -6.188718795776367
    7. '
' → logprob: -6.313718795776367
    8. '_' → logprob: -6.313718795776367
    9. 'newline' → logprob: -6.313718795776367
    10. ')' → logprob: -6.813718795776367

Token 26: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.041721947491168976
    2. '<|end|>' → logprob: -3.541722059249878
    3. '
' → logprob: -5.666721820831299
    4. '        
' → logprob: -5.916721820831299
    5. 'newline' → logprob: -6.666721820831299
    6. '        ' → logprob: -7.291721820831299
    7. '\' → logprob: -7.416721820831299
    8. ' 
' → logprob: -7.666721820831299
    9. ' ' → logprob: -7.666721820831299
    10. '\n' → logprob: -7.791721820831299

Token 27: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7035245299339294
    2. 'self' (adapté à ' self') → logprob: -0.7035245299339294
    3. ' self' → logprob: -4.578524589538574
    4. '        ' → logprob: -11.578524589538574
    5. ' ' → logprob: -11.703524589538574
    6. '	self' → logprob: -11.703524589538574
    7. '   ' → logprob: -11.828524589538574
    8. '      ' → logprob: -12.703524589538574
    9. '_self' → logprob: -13.078524589538574
    10. ',' → logprob: -13.203524589538574

Token 28: '.re' (ID: 2859)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0022403046023100615
    2. '.re' → logprob: -6.127240180969238
    3. 'replacement' → logprob: -10.377240180969238
    4. '.pattern' → logprob: -11.752240180969238
    5. ' .' → logprob: -12.127240180969238
    6. '.replace' → logprob: -12.252240180969238
    7. '.rep' → logprob: -14.002240180969238
    8. '.sub' → logprob: -14.377240180969238
    9. ' replacement' → logprob: -14.627240180969238
    10. '.target' → logprob: -15.002240180969238

Token 29: 'placement' (ID: 17947)
  Prédit: 'placement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -6.749814019713085e-06
    2. 'place' → logprob: -12.125006675720215
    3. 'plac' → logprob: -14.250006675720215
    4. 'pl' → logprob: -15.375006675720215
    5. 'replacement' → logprob: -15.500006675720215
    6. 'p' → logprob: -16.87500762939453
    7. 'placements' → logprob: -17.50000762939453
    8. ' placement' → logprob: -17.75000762939453
    9. 'pla' → logprob: -18.75000762939453
    10. 'placing' → logprob: -20.12500762939453

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10080414265394211
    2. '=' → logprob: -2.350804090499878
    3. ' ' → logprob: -7.600804328918457
    4. '<|end|>' → logprob: -9.475804328918457
    5. ')' → logprob: -11.475804328918457
    6. ' =
' → logprob: -12.600804328918457
    7. '_' → logprob: -12.975804328918457
    8. ' =)' → logprob: -14.100804328918457
    9. '<|end|>' → logprob: -14.100804328918457
    10. ' )' → logprob: -14.600804328918457

Token 31: ' replacement' (ID: 19207)
  Prédit: ' replacement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' replacement' → logprob: -0.10021012276411057
    2. 'replacement' → logprob: -2.350210189819336
    3. ' ' → logprob: -13.100210189819336
    4. 're' → logprob: -13.850210189819336
    5. ' ' → logprob: -15.850210189819336
    6. 'Replacement' → logprob: -16.100210189819336
    7. '   ' → logprob: -16.600210189819336
    8. '```' → logprob: -16.975210189819336
    9. '`' → logprob: -17.100210189819336
    10. '"' → logprob: -17.100210189819336

Token 32: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21723045408725739
    2. '<|end|>' → logprob: -2.3422305583953857
    3. '   ' → logprob: -3.0922305583953857
    4. '\n' → logprob: -4.217230319976807
    5. '\' → logprob: -4.217230319976807
    6. '    
' → logprob: -4.967230319976807
    7. '```' → logprob: -5.092230319976807
    8. '.' → logprob: -5.967230319976807
    9. 'n' → logprob: -6.967230319976807
    10. 'def' → logprob: -7.092230319976807

Token 33: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1268574446439743
    2. '   ' → logprob: -2.2518575191497803
    3. '    
' → logprob: -4.751857280731201
    4. '```' → logprob: -5.876857280731201
    5. ' 
' → logprob: -7.251857280731201
    6. 'def' → logprob: -7.626857280731201
    7. '\' → logprob: -8.00185775756836
    8. '<|end|>' → logprob: -8.50185775756836
    9. '\n' → logprob: -8.75185775756836
    10. '  
' → logprob: -8.87685775756836

Token 34: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0841066762804985
    2. '   ' → logprob: -2.834106683731079
    3. ' def' → logprob: -3.834106683731079
    4. 'd' → logprob: -9.0841064453125
    5. '```' → logprob: -9.4591064453125
    6. '    
' → logprob: -10.7091064453125
    7. '	def' → logprob: -11.3341064453125
    8. ' ' → logprob: -11.3341064453125
    9. ' 
' → logprob: -11.7091064453125
    10. '
' → logprob: -12.0841064453125

Token 35: ' apply' (ID: 6096)
  Prédit: ' apply'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' apply' → logprob: -0.07492239028215408
    2. ' ' → logprob: -2.6999223232269287
    3. ' def' → logprob: -6.199922561645508
    4. ' space' → logprob: -6.699922561645508
    5. 'apply' → logprob: -7.449922561645508
    6. ' match' → logprob: -7.574922561645508
    7. ' ```' → logprob: -8.949922561645508
    8. ' `' → logprob: -9.699922561645508
    9. '_apply' → logprob: -9.824922561645508
    10. ' applies' → logprob: -9.824922561645508

Token 36: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0025689988397061825
    2. '(self' → logprob: -6.002569198608398
    3. ' (' → logprob: -10.127569198608398
    4. '_' → logprob: -10.752569198608398
    5. '(
' → logprob: -11.627569198608398
    6. '<|end|>' → logprob: -12.627569198608398
    7. 'self' → logprob: -12.877569198608398
    8. ' ' → logprob: -13.127569198608398
    9. '(s' → logprob: -13.502569198608398
    10. '```' → logprob: -13.627569198608398

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.531813702778891e-05
    2. ' ,' → logprob: -10.12509536743164
    3. '):' → logprob: -10.37509536743164
    4. ')' → logprob: -11.75009536743164
    5. ',text' → logprob: -12.62509536743164
    6. 'self' → logprob: -12.75009536743164
    7. 's' → logprob: -12.87509536743164
    8. ',s' → logprob: -14.00009536743164
    9. ',p' → logprob: -14.12509536743164
    10. ',line' → logprob: -14.12509536743164

Token 38: ' s' (ID: 265)
  Prédit: ' text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.20247113704681396
    2. 'text' → logprob: -1.702471137046814
    3. ' string' → logprob: -7.7024712562561035
    4. 'string' → logprob: -8.452470779418945
    5. ' input' → logprob: -8.827470779418945
    6. ' word' → logprob: -9.952470779418945
    7. 'self' → logprob: -9.952470779418945
    8. ' s' → logprob: -10.077470779418945
    9. ' self' → logprob: -10.077470779418945
    10. 'input' → logprob: -10.952470779418945

Token 39: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5792409181594849
    2. '):' → logprob: -0.8292409181594849
    3. ')' → logprob: -5.829240798950195
    4. ',' → logprob: -9.204240798950195
    5. ':str' → logprob: -9.204240798950195
    6. ' :' → logprob: -9.704240798950195
    7. ' ):' → logprob: -9.954240798950195
    8. '):
' → logprob: -11.204240798950195
    9. 's' → logprob: -11.954240798950195
    10. 'tring' → logprob: -12.329240798950195

Token 40: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.06200510635972023
    2. 'str' → logprob: -2.812005043029785
    3. ')' → logprob: -11.062005043029785
    4. 's' → logprob: -11.437005043029785
    5. ' ' → logprob: -12.562005043029785
    6. ':str' → logprob: -13.437005043029785
    7. '[str' → logprob: -13.562005043029785
    8. '(str' → logprob: -13.687005043029785
    9. '	str' → logprob: -13.687005043029785
    10. ' )' → logprob: -13.937005043029785

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022413700353354216
    2. '):' → logprob: -6.127241134643555
    3. ')->' → logprob: -10.002241134643555
    4. ' )' → logprob: -12.127241134643555
    5. '   ' → logprob: -12.752241134643555
    6. '):
' → logprob: -14.252241134643555
    7. ':' → logprob: -14.377241134643555
    8. '`)' → logprob: -14.377241134643555
    9. ')>' → logprob: -16.252241134643555
    10. '')' → logprob: -16.502241134643555

Token 42: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.45618513226509094
    2. ':' → logprob: -1.3311851024627686
    3. ')->' → logprob: -2.9561851024627686
    4. ' ->' → logprob: -3.0811851024627686
    5. ')' → logprob: -5.831185340881348
    6. '):' → logprob: -6.831185340881348
    7. ':return' → logprob: -9.456185340881348
    8. '()->' → logprob: -10.581185340881348
    9. ' )->' → logprob: -10.956185340881348
    10. '   ' → logprob: -11.081185340881348

Token 43: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.02057703770697117
    2. 'str' → logprob: -3.8955769538879395
    3. ' ' → logprob: -10.645577430725098
    4. 's' → logprob: -12.395577430725098
    5. '	str' → logprob: -13.020577430725098
    6. ' ' → logprob: -13.645577430725098
    7. ' Optional' → logprob: -14.145577430725098
    8. ' bool' → logprob: -14.270577430725098
    9. ' s' → logprob: -14.520577430725098
    10. '[str' → logprob: -14.645577430725098

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013357517309486866
    2. '):' → logprob: -9.500133514404297
    3. ':return' → logprob: -10.125133514404297
    4. ':
' → logprob: -11.625133514404297
    5. ':**' → logprob: -12.375133514404297
    6. '():' → logprob: -12.500133514404297
    7. ' :' → logprob: -14.875133514404297
    8. ':def' → logprob: -15.000133514404297
    9. '       ' → logprob: -15.125133514404297
    10. ',' → logprob: -15.750133514404297

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009338518721051514
    2. 'return' → logprob: -7.125933647155762
    3. ' return' → logprob: -10.375933647155762
    4. '.' → logprob: -10.625933647155762
    5. '      ' → logprob: -11.000933647155762
    6. '   ' → logprob: -11.000933647155762
    7. ':' → logprob: -12.000933647155762
    8. '    ' → logprob: -12.250933647155762
    9. '        ' → logprob: -12.375933647155762
    10. 's' → logprob: -12.500933647155762

Token 46: ' parts' (ID: 7881)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09469407796859741
    2. '       ' → logprob: -2.719694137573242
    3. ' return' → logprob: -3.969694137573242
    4. 's' → logprob: -5.219694137573242
    5. 'import' → logprob: -9.594694137573242
    6. ' s' → logprob: -10.094694137573242
    7. '```' → logprob: -11.219694137573242
    8. 're' → logprob: -11.344694137573242
    9. ':return' → logprob: -11.594694137573242
    10. 'r' → logprob: -12.219694137573242

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001210591522976756
    2. '=' → logprob: -6.876210689544678
    3. '.replace' → logprob: -9.62621021270752
    4. '.' → logprob: -10.37621021270752
    5. '       ' → logprob: -10.62621021270752
    6. '.split' → logprob: -11.00121021270752
    7. '=[]' → logprob: -11.87621021270752
    8. '[' → logprob: -12.12621021270752
    9. '[]' → logprob: -12.37621021270752
    10. ')' → logprob: -12.75121021270752

Token 48: ' []
' (ID: 8911)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.01603730209171772
    2. 's' → logprob: -4.141037464141846
    3. '[]' → logprob: -13.766036987304688
    4. ' []' → logprob: -14.266036987304688
    5. '       ' → logprob: -15.266036987304688
    6. ' self' → logprob: -15.266036987304688
    7. '<|end|>' → logprob: -15.266036987304688
    8. '	s' → logprob: -15.641036987304688
    9. ' ' → logprob: -15.766036987304688
    10. 'self' → logprob: -16.891036987304688

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019375091418623924
    2. ' i' → logprob: -4.894375324249268
    3. ' for' → logprob: -5.144375324249268
    4. 'for' → logprob: -5.769375324249268
    5. 'i' → logprob: -6.394375324249268
    6. '   ' → logprob: -8.76937484741211
    7. ' =' → logprob: -9.26937484741211
    8. ' current' → logprob: -9.26937484741211
    9. '        ' → logprob: -9.64437484741211
    10. '      ' → logprob: -10.01937484741211

Token 50: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4159327447414398
    2. 'i' (adapté à ' i') → logprob: -1.1659327745437622
    3. 'index' → logprob: -5.290932655334473
    4. '       ' → logprob: -5.415932655334473
    5. 'start' → logprob: -5.415932655334473
    6. 'pos' → logprob: -5.540932655334473
    7. ' start' → logprob: -5.665932655334473
    8. ' index' → logprob: -6.040932655334473
    9. ' pos' → logprob: -6.290932655334473
    10. 'idx' → logprob: -7.415932655334473

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37049856781959534
    2. '=' → logprob: -1.245498538017273
    3. ' +=' → logprob: -4.8704986572265625
    4. '<|end|>' → logprob: -4.8704986572265625
    5. ' ' → logprob: -5.4954986572265625
    6. '+=' → logprob: -7.4954986572265625
    7. 'n' → logprob: -7.7454986572265625
    8. '<|end|>' → logprob: -8.120498657226562
    9. '+' → logprob: -8.495498657226562
    10. ' ==' → logprob: -8.745498657226562

Token 52: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1128234788775444
    2. ' ' → logprob: -2.237823486328125
    3. '<|end|>' → logprob: -14.112823486328125
    4. '1' → logprob: -16.175323486328125
    5. '۰' → logprob: -16.362823486328125
    6. ')' → logprob: -16.612823486328125
    7. ' ' → logprob: -17.175323486328125
    8. '  ' → logprob: -17.362823486328125
    9. '```' → logprob: -18.050323486328125
    10. 's' → logprob: -18.112823486328125

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۰' → logprob: -17.375015258789062
    4. '   ' → logprob: -19.000015258789062
    5. 'len' → logprob: -19.062515258789062
    6. '000' → logprob: -19.125015258789062
    7. '```' → logprob: -19.125015258789062
    8. '00' → logprob: -19.187515258789062
    9. 's' → logprob: -19.375015258789062
    10. '012' → logprob: -19.500015258789062

Token 54: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7091988921165466
    2. '<|end|>' → logprob: -0.8341988921165466
    3. '       ' → logprob: -3.0841989517211914
    4. '
' → logprob: -4.459198951721191
    5. ' 
' → logprob: -5.959198951721191
    6. '  ' → logprob: -6.084198951721191
    7. '<|end|>' → logprob: -6.334198951721191
    8. ' while' → logprob: -6.334198951721191
    9. ')' → logprob: -6.584198951721191
    10. 'while' → logprob: -6.709198951721191

Token 56: ' length' (ID: 5517)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6532331109046936
    2. 'while' → logprob: -0.7782331109046936
    3. '<|end|>' → logprob: -4.028233051300049
    4. '
' → logprob: -7.028233051300049
    5. ' ' → logprob: -7.403233051300049
    6. '	while' → logprob: -7.903233051300049
    7. 'n' → logprob: -9.028233528137207
    8. '       ' → logprob: -9.028233528137207
    9. 's' → logprob: -9.403233528137207
    10. 'w' → logprob: -9.528233528137207

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.749565064907074
    2. '<|end|>' → logprob: -0.999565064907074
    3. '=' → logprob: -2.6245651245117188
    4. ' ' → logprob: -2.8745651245117188
    5. ' <=' → logprob: -3.8745651245117188
    6. ' ==' → logprob: -5.874565124511719
    7. '<|end|>' → logprob: -5.999565124511719
    8. ')' → logprob: -7.249565124511719
    9. '  ' → logprob: -7.499565124511719
    10. '   ' → logprob: -7.499565124511719

Token 58: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0003360582049936056
    2. 'len' → logprob: -8.000335693359375
    3. '(len' → logprob: -15.000335693359375
    4. '=len' → logprob: -16.625335693359375
    5. '	len' → logprob: -17.250335693359375
    6. ' ' → logprob: -18.000335693359375
    7. '[len' → logprob: -18.125335693359375
    8. ',len' → logprob: -18.750335693359375
    9. '<len' → logprob: -19.375335693359375
    10. ' ' → logprob: -20.125335693359375

Token 59: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0004399671161081642
    2. '(' → logprob: -7.7504401206970215
    3. 's' → logprob: -11.625439643859863
    4. ' (' → logprob: -15.875439643859863
    5. '(
' → logprob: -16.25044059753418
    6. '(self' → logprob: -16.50044059753418
    7. '(parts' → logprob: -18.12544059753418
    8. '(i' → logprob: -18.25044059753418
    9. '(ss' → logprob: -18.62544059753418
    10. '(str' → logprob: -19.37544059753418

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019495772721711546
    2. ' )' → logprob: -8.750194549560547
    3. ')
' → logprob: -10.250194549560547
    4. ' ' → logprob: -14.750194549560547
    5. '))' → logprob: -15.500194549560547
    6. ')

' → logprob: -16.375194549560547
    7. ' )
' → logprob: -16.375194549560547
    8. '）' → logprob: -16.625194549560547
    9. '       ' → logprob: -16.750194549560547
    10. '):
' → logprob: -17.375194549560547

Token 61: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9335519075393677
    2. ' while' → logprob: -1.8085519075393677
    3. '
' → logprob: -2.058551788330078
    4. ' 
' → logprob: -2.308551788330078
    5. '<|end|>' → logprob: -2.433551788330078
    6. '       ' → logprob: -2.683551788330078
    7. 'while' → logprob: -3.183551788330078
    8. '```' → logprob: -5.308551788330078
    9. '	while' → logprob: -6.058551788330078
    10. '  
' → logprob: -6.308551788330078

Token 62: ' p' (ID: 275)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6387379765510559
    2. ' while' → logprob: -0.7637379765510559
    3. ' ' → logprob: -6.13873815536499
    4. '       ' → logprob: -6.63873815536499
    5. '```' → logprob: -7.13873815536499
    6. '
' → logprob: -7.38873815536499
    7. '<|end|>' → logprob: -7.76373815536499
    8. '	while' → logprob: -8.638737678527832
    9. ' 
' → logprob: -8.763737678527832
    10. 'While' → logprob: -9.263737678527832

Token 63: '_len' (ID: 13683)
  Prédit: 'attern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'attern' → logprob: -0.001058771857060492
    2. 'at' → logprob: -7.001058578491211
    3. 'atter' → logprob: -9.501058578491211
    4. 'while' → logprob: -10.876058578491211
    5. 'a' → logprob: -11.251058578491211
    6. 'atern' → logprob: -12.126058578491211
    7. 'pattern' → logprob: -12.251058578491211
    8. '   ' → logprob: -12.376058578491211
    9. 'len' → logprob: -12.376058578491211
    10. 'length' → logprob: -12.626058578491211

Token 64: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38876616954803467
    2. ' =' → logprob: -1.1387661695480347
    3. '=len' → logprob: -7.263766288757324
    4. '==' → logprob: -8.513766288757324
    5. ' ' → logprob: -8.513766288757324
    6. 'at' → logprob: -8.888766288757324
    7. 'attern' → logprob: -9.138766288757324
    8. '   ' → logprob: -9.638766288757324
    9. ' ==' → logprob: -10.013766288757324
    10. '       ' → logprob: -10.138766288757324

Token 65: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.25192990899086
    2. 'len' → logprob: -1.5019298791885376
    3. '	len' → logprob: -14.501930236816406
    4. '(len' → logprob: -15.626930236816406
    5. '   ' → logprob: -17.001930236816406
    6. '=len' → logprob: -17.126930236816406
    7. ' ' → logprob: -17.626930236816406
    8. '[len' → logprob: -17.876930236816406
    9. '       ' → logprob: -18.376930236816406
    10. 'l' → logprob: -18.626930236816406

Token 66: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019517067121341825
    2. '(' → logprob: -6.251951694488525
    3. '(s' → logprob: -10.751952171325684
    4. '(this' → logprob: -13.501952171325684
    5. '(sel' → logprob: -16.126951217651367
    6. 'self' → logprob: -16.626951217651367
    7. '(
' → logprob: -16.751951217651367
    8. ' (' → logprob: -18.001951217651367
    9. '(

' → logprob: -19.376951217651367
    10. '(object' → logprob: -19.376951217651367

Token 67: '.pattern' (ID: 76901)
  Prédit: '.pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -2.4391956685576588e-05
    2. '.' → logprob: -10.750024795532227
    3. ' .' → logprob: -13.125024795532227
    4. '.p' → logprob: -14.250024795532227
    5. 'pattern' → logprob: -15.000024795532227
    6. ').' → logprob: -18.500024795532227
    7. '.period' → logprob: -19.250024795532227
    8. '.Pattern' → logprob: -19.375024795532227
    9. '.policy' → logprob: -20.000024795532227
    10. ' ' → logprob: -20.500024795532227

Token 68: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002497302368283272
    2. ')
' → logprob: -6.00249719619751
    3. '       ' → logprob: -11.502497673034668
    4. ' )' → logprob: -11.627497673034668
    5. ')
' → logprob: -14.377497673034668
    6. ')

' → logprob: -14.752497673034668
    7. '))' → logprob: -15.002497673034668
    8. '   ' → logprob: -15.127497673034668
    9. ')p' → logprob: -15.502497673034668
    10. ' )
' → logprob: -15.752497673034668

Token 69: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3796024024486542
    2. '       ' → logprob: -2.0046024322509766
    3. '<|end|>' → logprob: -2.3796024322509766
    4. ' while' → logprob: -2.8796024322509766
    5. ' 
' → logprob: -4.629602432250977
    6. 'while' → logprob: -4.879602432250977
    7. ' ' → logprob: -5.754602432250977
    8. '	while' → logprob: -6.004602432250977
    9. '        
' → logprob: -6.004602432250977
    10. '\n' → logprob: -6.254602432250977

Token 70: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3192611634731293
    2. ' while' → logprob: -1.5692611932754517
    3. '
' → logprob: -3.194261074066162
    4. '       ' → logprob: -4.194261074066162
    5. '	while' → logprob: -5.944261074066162
    6. '<|end|>' → logprob: -6.319261074066162
    7. '```' → logprob: -6.694261074066162
    8. 'While' → logprob: -7.194261074066162
    9. '\n' → logprob: -7.569261074066162
    10. '   ' → logprob: -7.944261074066162

Token 71: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0040807779878377914
    2. 'i' → logprob: -5.504080772399902
    3. ' ' → logprob: -13.629080772399902
    4. '	i' → logprob: -14.129080772399902
    5. ' ' → logprob: -16.50408172607422
    6. '(i' → logprob: -16.62908172607422
    7. '   ' → logprob: -16.87908172607422
    8. ' True' → logprob: -17.00408172607422
    9. '```' → logprob: -17.37908172607422
    10. '_i' → logprob: -17.50408172607422

Token 72: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04331327974796295
    2. '<' → logprob: -3.1683132648468018
    3. ' <=' → logprob: -8.543313026428223
    4. ' ' → logprob: -9.418313026428223
    5. '<|end|>' → logprob: -10.668313026428223
    6. '<=' → logprob: -12.043313026428223
    7. '<len' → logprob: -12.668313026428223
    8. ' <
' → logprob: -13.168313026428223
    9. ' <",' → logprob: -14.168313026428223
    10. ' less' → logprob: -14.168313026428223

Token 73: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.023273780941963196
    2. 'length' → logprob: -3.7732737064361572
    3. ' len' → logprob: -10.773273468017578
    4. ' ' → logprob: -12.773273468017578
    5. 'len' → logprob: -13.648273468017578
    6. 'ength' → logprob: -13.898273468017578
    7. ' l' → logprob: -14.023273468017578
    8. ' leng' → logprob: -15.023273468017578
    9. '	length' → logprob: -15.023273468017578
    10. 'leng' → logprob: -15.148273468017578

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00302869058214128
    2. ':
' → logprob: -5.878028869628906
    3. ' and' → logprob: -8.628028869628906
    4. ' :' → logprob: -10.378028869628906
    5. 'and' → logprob: -12.253028869628906
    6. '):' → logprob: -12.503028869628906
    7. ':

' → logprob: -13.628028869628906
    8. ':**' → logprob: -13.878028869628906
    9. '):
' → logprob: -14.253028869628906
    10. ' :
' → logprob: -14.378028869628906

Token 75: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.042745590209961
    2. '       ' → logprob: -1.167745590209961
    3. '<|end|>' → logprob: -1.667745590209961
    4. '           ' → logprob: -2.417745590209961
    5. '        ' → logprob: -3.542745590209961
    6. '<|end|>' → logprob: -4.917745590209961
    7. ':' → logprob: -5.667745590209961
    8. ' 
' → logprob: -5.792745590209961
    9. '   ' → logprob: -6.042745590209961
    10. '        
' → logprob: -6.292745590209961

Token 76: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0932435989379883
    2. '           ' → logprob: -1.3432435989379883
    3. ' ' → logprob: -1.9682435989379883
    4. '<|end|>' → logprob: -1.9682435989379883
    5. 'if' (adapté à ' if') → logprob: -2.2182435989379883
    6. '       ' → logprob: -5.343243598937988
    7. '<|end|>' → logprob: -5.343243598937988
    8. '            ' → logprob: -6.593243598937988
    9. '               ' → logprob: -6.718243598937988
    10. '        ' → logprob: -6.718243598937988

Token 77: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0011061598779633641
    2. 's' → logprob: -6.876106262207031
    3. ' i' → logprob: -9.876106262207031
    4. ' ' → logprob: -10.876106262207031
    5. '<|end|>' → logprob: -13.876106262207031
    6. 'i' → logprob: -14.251106262207031
    7. ' (' → logprob: -14.751106262207031
    8. '(s' → logprob: -15.001106262207031
    9. ' self' → logprob: -15.501106262207031
    10. ' ' → logprob: -15.876106262207031

Token 78: '.startswith' (ID: 64340)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010330478107789531
    2. '.startswith' → logprob: -9.250102996826172
    3. '   ' → logprob: -12.625102996826172
    4. '[' → logprob: -13.750102996826172
    5. '```' → logprob: -14.000102996826172
    6. '       ' → logprob: -14.250102996826172
    7. '           ' → logprob: -14.375102996826172
    8. 'i' → logprob: -15.375102996826172
    9. 'startswith' → logprob: -15.625102996826172
    10. '[
' → logprob: -16.125102996826172

Token 79: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010424555512145162
    2. '(' → logprob: -6.876042366027832
    3. '(this' → logprob: -12.376042366027832
    4. ' (' → logprob: -12.626042366027832
    5. '((' → logprob: -14.001042366027832
    6. '(
' → logprob: -14.626042366027832
    7. '(s' → logprob: -14.751042366027832
    8. '('' → logprob: -16.50104331970215
    9. ')' → logprob: -16.50104331970215
    10. 'self' → logprob: -16.87604331970215

Token 80: '.pattern' (ID: 76901)
  Prédit: '.pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pattern' → logprob: -1.27099974633893e-05
    2. 'pattern' → logprob: -12.000012397766113
    3. ' .' → logprob: -13.750012397766113
    4. '.' → logprob: -13.750012397766113
    5. 'self' → logprob: -13.875012397766113
    6. '.self' → logprob: -14.250012397766113
    7. '           ' → logprob: -14.250012397766113
    8. '       ' → logprob: -14.750012397766113
    9. '.p' → logprob: -14.875012397766113
    10. '[self' → logprob: -14.875012397766113

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027813989436253905
    2. ',i' → logprob: -8.62527847290039
    3. ' ,' → logprob: -9.62527847290039
    4. ')' → logprob: -11.25027847290039
    5. '           ' → logprob: -12.00027847290039
    6. '[i' → logprob: -13.12527847290039
    7. '       ' → logprob: -13.12527847290039
    8. '   ' → logprob: -13.12527847290039
    9. '               ' → logprob: -14.12527847290039
    10. '<|end|>' → logprob: -14.25027847290039

Token 82: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16022910177707672
    2. 'i' → logprob: -1.9102290868759155
    3. ')' → logprob: -13.285228729248047
    4. '	i' → logprob: -13.660228729248047
    5. ')i' → logprob: -14.160228729248047
    6. '    ' → logprob: -14.785228729248047
    7. '   ' → logprob: -15.410228729248047
    8. ',i' → logprob: -15.660228729248047
    9. ' )' → logprob: -15.660228729248047
    10. ' 
' → logprob: -16.035228729248047

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009135056287050247
    2. '):
' → logprob: -4.7591352462768555
    3. ')' → logprob: -7.7591352462768555
    4. '       ' → logprob: -10.384135246276855
    5. '           ' → logprob: -10.509135246276855
    6. ':' → logprob: -10.759135246276855
    7. '):

' → logprob: -12.259135246276855
    8. '):
' → logprob: -12.759135246276855
    9. ' ):' → logprob: -13.384135246276855
    10. '   ' → logprob: -13.759135246276855

Token 84: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19629935920238495
    2. '               ' → logprob: -2.1962993144989014
    3. '           ' → logprob: -3.5712993144989014
    4. ':
' → logprob: -4.3212995529174805
    5. '):' → logprob: -4.4462995529174805
    6. ')' → logprob: -5.1962995529174805
    7. '<|end|>' → logprob: -5.5712995529174805
    8. ',' → logprob: -6.3212995529174805
    9. '):
' → logprob: -7.4462995529174805
    10. '
' → logprob: -8.19629955291748

Token 85: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.29145365953445435
    2. '               ' → logprob: -2.4164535999298096
    3. 'parts' (adapté à ' parts') → logprob: -2.4164535999298096
    4. '           ' → logprob: -2.6664535999298096
    5. '                   ' → logprob: -6.166453838348389
    6. '
' → logprob: -7.416453838348389
    7. '(parts' → logprob: -8.16645336151123
    8. '_parts' → logprob: -8.54145336151123
    9. 'replacement' → logprob: -8.54145336151123
    10. '                ' → logprob: -8.66645336151123

Token 86: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0017718080198392272
    2. '.' → logprob: -6.501771926879883
    3. '.extend' → logprob: -8.251771926879883
    4. ' .' → logprob: -11.751771926879883
    5. '.app' → logprob: -15.126771926879883
    6. 'append' → logprob: -15.876771926879883
    7. '.ap' → logprob: -16.001771926879883
    8. '.Append' → logprob: -16.751771926879883
    9. ' +=' → logprob: -16.751771926879883
    10. ').' → logprob: -17.001771926879883

Token 87: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6939738988876343
    2. '(self' → logprob: -0.6939738988876343
    3. '(
' → logprob: -7.318974018096924
    4. '(s' → logprob: -9.568973541259766
    5. '(

' → logprob: -10.068973541259766
    6. '('' → logprob: -10.693973541259766
    7. '(this' → logprob: -11.068973541259766
    8. '(f' → logprob: -12.443973541259766
    9. ' (' → logprob: -13.318973541259766
    10. '((' → logprob: -13.443973541259766

Token 88: '.re' (ID: 2859)
  Prédit: '.re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.re' → logprob: -8.061054359131958e-06
    2. '.' → logprob: -11.875007629394531
    3. 'replacement' → logprob: -14.500007629394531
    4. '.replace' → logprob: -15.875007629394531
    5. '.rep' → logprob: -15.875007629394531
    6. ').' → logprob: -16.37500762939453
    7. '	re' → logprob: -16.62500762939453
    8. '".' → logprob: -17.12500762939453
    9. '.r' → logprob: -17.37500762939453
    10. '.con' → logprob: -17.62500762939453

Token 89: 'placement' (ID: 17947)
  Prédit: 'placement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.17212824523448944
    2. '.' → logprob: -2.047128200531006
    3. '.place' → logprob: -4.297128200531006
    4. 'place' → logprob: -4.672128200531006
    5. 'plac' → logprob: -6.672128200531006
    6. '.p' → logprob: -6.672128200531006
    7. '.pl' → logprob: -6.797128200531006
    8. 'p' → logprob: -6.797128200531006
    9. '       ' → logprob: -8.172128677368164
    10. 'pl' → logprob: -8.422128677368164

Token 90: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015255718026310205
    2. '               ' → logprob: -7.376525402069092
    3. ')
' → logprob: -7.376525402069092
    4. '<|end|>' → logprob: -9.00152587890625
    5. '           ' → logprob: -9.50152587890625
    6. ',' → logprob: -11.37652587890625
    7. '<|end|>' → logprob: -11.50152587890625
    8. ' )' → logprob: -11.87652587890625
    9. '),' → logprob: -11.87652587890625
    10. '                   ' → logprob: -12.12652587890625

Token 91: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.055519308894872665
    2. '<|end|>' → logprob: -3.9305193424224854
    3. '                
' → logprob: -4.430519104003906
    4. 'i' → logprob: -5.180519104003906
    5. '
' → logprob: -5.555519104003906
    6. '                ' → logprob: -5.555519104003906
    7. '           ' → logprob: -6.305519104003906
    8. '            
' → logprob: -6.680519104003906
    9. ')' → logprob: -6.805519104003906
    10. '              ' → logprob: -6.805519104003906

Token 92: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0018116753781214356
    2. ' i' → logprob: -6.376811504364014
    3. '               ' → logprob: -9.501811981201172
    4. '
' → logprob: -11.251811981201172
    5. ' ' → logprob: -12.251811981201172
    6. '           ' → logprob: -12.376811981201172
    7. ' 
' → logprob: -12.376811981201172
    8. '                   ' → logprob: -12.751811981201172
    9. '            
' → logprob: -14.126811981201172
    10. '                ' → logprob: -14.126811981201172

Token 93: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.39373183250427246
    2. '+=' → logprob: -1.1437318325042725
    3. '+' → logprob: -5.018732070922852
    4. ' ' → logprob: -9.018732070922852
    5. ' +' → logprob: -9.643732070922852
    6. '<|end|>' → logprob: -10.518732070922852
    7. '=' → logprob: -12.643732070922852
    8. '+='' → logprob: -13.268732070922852
    9. '+=(' → logprob: -13.393732070922852
    10. ' =' → logprob: -13.518732070922852

Token 94: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.676292231422849e-05
    2. ' p' → logprob: -11.000017166137695
    3. 'len' → logprob: -18.000017166137695
    4. '	p' → logprob: -19.875017166137695
    5. '           ' → logprob: -20.875017166137695
    6. '```' → logprob: -20.875017166137695
    7. '_p' → logprob: -21.000017166137695
    8. '<p' → logprob: -21.375017166137695
    9. '
' → logprob: -21.625017166137695
    10. '$p' → logprob: -21.750017166137695

Token 95: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -3.047134305234067e-05
    2. 'len' → logprob: -10.500030517578125
    3. 'l' → logprob: -14.000030517578125
    4. '_LEN' → logprob: -14.375030517578125
    5. 'en' → logprob: -14.625030517578125
    6. 'Len' → logprob: -15.750030517578125
    7. 'e' → logprob: -15.875030517578125
    8. '_' → logprob: -16.250030517578125
    9. '	len' → logprob: -16.375030517578125
    10. 't' → logprob: -16.375030517578125

Token 96: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008409019559621811
    2. 'else' → logprob: -5.258409023284912
    3. '       ' → logprob: -6.758409023284912
    4. ' else' → logprob: -7.383409023284912
    5. 'elif' → logprob: -7.883409023284912
    6. '
' → logprob: -8.008408546447754
    7. '               ' → logprob: -8.133408546447754
    8. '<|end|>' → logprob: -8.633408546447754
    9. '            
' → logprob: -9.758408546447754
    10. '```' → logprob: -10.008408546447754

Token 97: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024636121466755867
    2. 'else' → logprob: -3.7746360301971436
    3. ' else' → logprob: -7.024636268615723
    4. 'elif' → logprob: -8.774636268615723
    5. '```' → logprob: -9.149636268615723
    6. '       ' → logprob: -9.149636268615723
    7. '               ' → logprob: -9.774636268615723
    8. '<|end|>' → logprob: -10.149636268615723
    9. '            
' → logprob: -11.524636268615723
    10. '
' → logprob: -11.899636268615723

Token 98: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6091141104698181
    2. '       ' → logprob: -1.234114170074463
    3. ' else' → logprob: -1.859114170074463
    4. '           ' → logprob: -4.734114170074463
    5. 'elif' → logprob: -8.609113693237305
    6. '```' → logprob: -8.984113693237305
    7. '   ' → logprob: -9.359113693237305
    8. '	else' → logprob: -10.609113693237305
    9. ' elif' → logprob: -11.609113693237305
    10. 'e' → logprob: -11.984113693237305

Token 99: ':
' (ID: 734)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15333077311515808
    2. ' parts' → logprob: -2.0283308029174805
    3. 'parts' → logprob: -4.6533308029174805
    4. '           ' → logprob: -8.15333080291748
    5. '                
' → logprob: -8.40333080291748
    6. '       ' → logprob: -8.77833080291748
    7. '```' → logprob: -9.65333080291748
    8. ' 
' → logprob: -9.77833080291748
    9. '   ' → logprob: -9.90333080291748
    10. '            
' → logprob: -10.52833080291748

Token 101: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.012801569886505604
    2. 'parts' (adapté à ' parts') → logprob: -4.387801647186279
    3. '               ' → logprob: -9.012801170349121
    4. '           ' → logprob: -9.512801170349121
    5. '            ' → logprob: -10.887801170349121
    6. ' 
' → logprob: -11.012801170349121
    7. '_parts' → logprob: -11.012801170349121
    8. '                ' → logprob: -11.512801170349121
    9. '(parts' → logprob: -12.012801170349121
    10. '       ' → logprob: -12.387801170349121

Token 102: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000816773681435734
    2. '.' → logprob: -7.125816822052002
    3. '.app' → logprob: -12.375816345214844
    4. '.Append' → logprob: -13.000816345214844
    5. 'append' → logprob: -13.000816345214844
    6. ' .' → logprob: -13.625816345214844
    7. '.extend' → logprob: -13.750816345214844
    8. '           ' → logprob: -14.750816345214844
    9. '.add' → logprob: -15.875816345214844
    10. '.ap' → logprob: -16.125816345214844

Token 103: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.018481183797121048
    2. 's' → logprob: -4.018481254577637
    3. '(' → logprob: -8.018481254577637
    4. '(
' → logprob: -13.268481254577637
    5. ' s' → logprob: -16.51848030090332
    6. '`s' → logprob: -17.89348030090332
    7. ')s' → logprob: -18.26848030090332
    8. '('' → logprob: -18.64348030090332
    9. ''s' → logprob: -18.76848030090332
    10. '	s' → logprob: -19.39348030090332

Token 104: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.0
    3. '[I' → logprob: -18.625
    4. '[
' → logprob: -19.125
    5. 'i' → logprob: -20.25
    6. '```' → logprob: -20.375
    7. '[index' → logprob: -21.875
    8. '   ' → logprob: -22.0
    9. '[j' → logprob: -22.5
    10. ' ' → logprob: -23.25

Token 105: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021327676251530647
    2. '])' → logprob: -3.8963277339935303
    3. ' )' → logprob: -7.521327495574951
    4. ']' → logprob: -9.27132797241211
    5. ')
' → logprob: -9.39632797241211
    6. ' ])' → logprob: -10.89632797241211
    7. ')]' → logprob: -11.27132797241211
    8. ')])' → logprob: -11.52132797241211
    9. '))' → logprob: -11.77132797241211
    10. '           ' → logprob: -12.02132797241211

Token 106: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2972746193408966
    2. 'i' → logprob: -1.5472745895385742
    3. '           ' → logprob: -3.297274589538574
    4. ' i' → logprob: -5.297274589538574
    5. '
' → logprob: -7.297274589538574
    6. '            
' → logprob: -7.547274589538574
    7. '                
' → logprob: -8.047274589538574
    8. '    
' → logprob: -8.672274589538574
    9. '       ' → logprob: -8.922274589538574
    10. ' 
' → logprob: -9.047274589538574

Token 107: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.001503313542343676
    2. ' i' → logprob: -6.5015034675598145
    3. '           ' → logprob: -14.751502990722656
    4. '               ' → logprob: -14.876502990722656
    5. '1' → logprob: -15.626502990722656
    6. '	i' → logprob: -18.001502990722656
    7. '   ' → logprob: -18.251502990722656
    8. '                   ' → logprob: -19.001502990722656
    9. ' ' → logprob: -19.126502990722656
    10. '```' → logprob: -19.626502990722656

Token 108: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.005857924465090036
    2. ' +=' → logprob: -5.255857944488525
    3. '+' → logprob: -7.380857944488525
    4. '+='' → logprob: -15.380857467651367
    5. '+="' → logprob: -15.505857467651367
    6. '=' → logprob: -15.880857467651367
    7. '++' → logprob: -16.130857467651367
    8. ']+=' → logprob: -16.255857467651367
    9. '<|end|>' → logprob: -16.380857467651367
    10. ')' → logprob: -17.755857467651367

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.000001907348633
    4. '```' → logprob: -19.625001907348633
    5. '<|end|>' → logprob: -20.625001907348633
    6. '
' → logprob: -21.250001907348633
    7. '  ' → logprob: -22.000001907348633
    8. '۱' → logprob: -22.000001907348633
    9. '１' → logprob: -22.375001907348633
    10. '       ' → logprob: -23.000001907348633

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -18.125003814697266
    4. '<|end|>' → logprob: -20.312503814697266
    5. '  ' → logprob: -20.437503814697266
    6. '   ' → logprob: -20.437503814697266
    7. '１' → logprob: -20.500003814697266
    8. '۱' → logprob: -20.687503814697266
    9. '
' → logprob: -21.187503814697266
    10. ' ' → logprob: -21.500003814697266

Token 111: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48611003160476685
    2. '       ' → logprob: -0.9861100316047668
    3. 'return' → logprob: -4.986110210418701
    4. '        
' → logprob: -6.236110210418701
    5. '\n' → logprob: -6.486110210418701
    6. ' return' → logprob: -7.486110210418701
    7. '
' → logprob: -7.986110210418701
    8. ' 
' → logprob: -8.611109733581543
    9. '' → logprob: -9.111109733581543
    10. '    
' → logprob: -9.236109733581543

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00883922167122364
    2. 'return' → logprob: -4.883839130401611
    3. '
' → logprob: -7.383839130401611
    4. '   ' → logprob: -8.13383960723877
    5. ' return' → logprob: -8.25883960723877
    6. '        
' → logprob: -11.38383960723877
    7. '```' → logprob: -11.75883960723877
    8. '    
' → logprob: -12.13383960723877
    9. '      ' → logprob: -12.38383960723877
    10. '	return' → logprob: -12.63383960723877

Token 113: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03393279016017914
    2. '       ' → logprob: -4.033932685852051
    3. '
' → logprob: -4.908932685852051
    4. ' return' → logprob: -4.908932685852051
    5. '```' → logprob: -8.53393268585205
    6. '        
' → logprob: -8.65893268585205
    7. '   ' → logprob: -8.78393268585205
    8. ')' → logprob: -9.53393268585205
    9. '	return' → logprob: -9.65893268585205
    10. ' ' → logprob: -10.65893268585205

Token 114: ' ''.' (ID: 105941)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.027243293821811676
    2. '''.' → logprob: -3.7772433757781982
    3. ' ''.' → logprob: -5.902243137359619
    4. ' "".' → logprob: -6.902243137359619
    5. '''' → logprob: -8.652243614196777
    6. '""' → logprob: -9.652243614196777
    7. ''' → logprob: -11.527243614196777
    8. '''
' → logprob: -14.277243614196777
    9. ''"' → logprob: -14.652243614196777
    10. ' ' → logprob: -14.777243614196777

Token 115: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -6.392202976712724e-06
    2. '```' → logprob: -13.500006675720215
    3. 'j' → logprob: -13.875006675720215
    4. 'concat' → logprob: -14.125006675720215
    5. ' join' → logprob: -14.125006675720215
    6. '''.' → logprob: -14.375006675720215
    7. '``' → logprob: -14.500006675720215
    8. 'jo' → logprob: -15.000006675720215
    9. '.join' → logprob: -15.250006675720215
    10. '`' → logprob: -15.625006675720215

Token 116: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.0002615742268972099
    2. '(' → logprob: -8.250261306762695
    3. '(
' → logprob: -16.625261306762695
    4. '(points' → logprob: -17.375261306762695
    5. ' (' → logprob: -17.500261306762695
    6. '(p' → logprob: -18.250261306762695
    7. '(posts' → logprob: -18.250261306762695
    8. 'parts' → logprob: -18.875261306762695
    9. '(part' → logprob: -19.250261306762695
    10. '('' → logprob: -19.250261306762695

Token 117: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0921942703134846e-05
    2. ')
' → logprob: -11.50001049041748
    3. ' )' → logprob: -14.50001049041748
    4. '<|end|>' → logprob: -15.37501049041748
    5. ')

' → logprob: -16.875011444091797
    6. ')`' → logprob: -18.625011444091797
    7. ')return' → logprob: -19.000011444091797
    8. '   ' → logprob: -19.125011444091797
    9. '),' → logprob: -19.250011444091797
    10. ')
' → logprob: -19.375011444091797

Token 118: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8448646664619446
    2. 'class' → logprob: -1.2198646068572998
    3. 'r' → logprob: -1.7198646068572998
    4. 's' → logprob: -2.9698646068573
    5. 'n' → logprob: -4.094864845275879
    6. '```' → logprob: -5.219864845275879
    7. 'rule' → logprob: -5.594864845275879
    8. 'a' → logprob: -5.719864845275879
    9. '
' → logprob: -5.719864845275879
    10. '[' → logprob: -5.969864845275879

Token 119: ' Sub' (ID: 5934)
  Prédit: ' Sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Sub' → logprob: -0.8915371894836426
    2. ' String' → logprob: -1.3915371894836426
    3. ' Multi' → logprob: -2.3915371894836426
    4. ' Text' → logprob: -2.6415371894836426
    5. ' ' → logprob: -3.6415371894836426
    6. ' Composite' → logprob: -3.7665371894836426
    7. ' Advanced' → logprob: -4.266537189483643
    8. ' Context' → logprob: -4.391537189483643
    9. ' Re' → logprob: -4.516537189483643
    10. ' Prefix' → logprob: -4.516537189483643

Token 120: 'stitution' (ID: 20066)
  Prédit: 'stitution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stitution' → logprob: -0.004904143046587706
    2. 'string' → logprob: -5.879904270172119
    3. 'stit' → logprob: -7.379904270172119
    4. 'sequence' → logprob: -8.254903793334961
    5. 'st' → logprob: -8.379903793334961
    6. 'word' → logprob: -8.879903793334961
    7. 'class' → logprob: -8.879903793334961
    8. 'stitute' → logprob: -9.504903793334961
    9. ' string' → logprob: -9.754903793334961
    10. 's' → logprob: -9.879903793334961

Token 121: 'Set' (ID: 1984)
  Prédit: 'Rule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rule' → logprob: -0.2965173125267029
    2. 'Engine' → logprob: -2.6715173721313477
    3. 'Chain' → logprob: -2.6715173721313477
    4. 'Rules' → logprob: -2.7965173721313477
    5. 'Set' → logprob: -4.421517372131348
    6. 'Processor' → logprob: -4.546517372131348
    7. 'System' → logprob: -4.546517372131348
    8. 'Sequence' → logprob: -4.671517372131348
    9. 'List' → logprob: -5.671517372131348
    10. 'Ap' → logprob: -6.046517372131348

Token 122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016450724797323346
    2. '(' → logprob: -6.751645088195801
    3. ' :' → logprob: -8.7516450881958
    4. ':
' → logprob: -8.7516450881958
    5. '<|end|>' → logprob: -9.0016450881958
    6. '):' → logprob: -11.7516450881958
    7. '(":' → logprob: -12.2516450881958
    8. '():' → logprob: -12.6266450881958
    9. '(object' → logprob: -13.1266450881958
    10. '(:' → logprob: -13.3766450881958

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005433809128589928
    2. ' def' → logprob: -8.375543594360352
    3. 'def' → logprob: -8.500543594360352
    4. ':
' → logprob: -9.750543594360352
    5. '    
' → logprob: -10.750543594360352
    6. '
' → logprob: -11.250543594360352
    7. ':' → logprob: -12.125543594360352
    8. '	def' → logprob: -13.000543594360352
    9. ' 
' → logprob: -13.250543594360352
    10. 'class' → logprob: -13.500543594360352

Token 124: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2949454188346863
    2. 'def' (adapté à ' def') → logprob: -1.544945478439331
    3. '   ' → logprob: -3.169945478439331
    4. 'class' → logprob: -10.29494571685791
    5. '
' → logprob: -10.91994571685791
    6. '	def' → logprob: -11.04494571685791
    7. ' ' → logprob: -11.54494571685791
    8. ' 
' → logprob: -11.66994571685791
    9. '    ' → logprob: -12.16994571685791
    10. '    
' → logprob: -13.04494571685791

Token 125: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.006532642524689436
    2. '__' → logprob: -5.881532669067383
    3. '_' → logprob: -6.381532669067383
    4. '_init' → logprob: -6.381532669067383
    5. 'init' → logprob: -8.381532669067383
    6. ' init' → logprob: -9.756532669067383
    7. ' ' → logprob: -10.631532669067383
    8. ' ' → logprob: -11.131532669067383
    9. ' _' → logprob: -12.256532669067383
    10. ' ___' → logprob: -13.256532669067383

Token 126: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -8.602024900028482e-05
    2. 'nit' → logprob: -9.500085830688477
    3. 'it' → logprob: -12.125085830688477
    4. '_init' → logprob: -13.375085830688477
    5. 'ini' → logprob: -13.625085830688477
    6. '   ' → logprob: -14.250085830688477
    7. '	init' → logprob: -14.625085830688477
    8. 'in' → logprob: -14.750085830688477
    9. ' init' → logprob: -15.125085830688477
    10. '
' → logprob: -15.375085830688477

Token 127: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.003544955048710108
    2. '__(
' → logprob: -6.253544807434082
    3. '__' → logprob: -6.628544807434082
    4. '(self' → logprob: -8.628544807434082
    5. '(' → logprob: -9.628544807434082
    6. '__((' → logprob: -10.378544807434082
    7. '_(' → logprob: -12.128544807434082
    8. ' (' → logprob: -12.878544807434082
    9. '__(*' → logprob: -13.003544807434082
    10. '<|end|>' → logprob: -13.253544807434082

Token 128: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.305326966568828e-05
    2. ' self' → logprob: -9.875093460083008
    3. '
' → logprob: -10.500093460083008
    4. ')' → logprob: -11.500093460083008
    5. '):
' → logprob: -13.125093460083008
    6. '	self' → logprob: -15.000093460083008
    7. '

' → logprob: -15.250093460083008
    8. '   ' → logprob: -15.250093460083008
    9. '       ' → logprob: -15.500093460083008
    10. ' ' → logprob: -15.625093460083008

Token 129: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5314223170280457
    2. ',' → logprob: -1.1564223766326904
    3. ' ' → logprob: -3.4064223766326904
    4. 'self' → logprob: -3.6564223766326904
    5. '):' → logprob: -4.156422138214111
    6. ' )' → logprob: -5.156422138214111
    7. '<|end|>' → logprob: -5.531422138214111
    8. '):
' → logprob: -5.656422138214111
    9. ' self' → logprob: -5.781422138214111
    10. ' ,' → logprob: -5.906422138214111

Token 130: ' rules' (ID: 9607)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08107157796621323
    2. 'rules' → logprob: -2.581071615219116
    3. ' self' → logprob: -6.706071376800537
    4. ')' → logprob: -7.581071376800537
    5. ' rules' → logprob: -7.956071376800537
    6. '):
' → logprob: -10.956071853637695
    7. '       ' → logprob: -11.331071853637695
    8. '   ' → logprob: -11.456071853637695
    9. 'sub' → logprob: -11.581071853637695
    10. '
' → logprob: -11.706071853637695

Token 131: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24858343601226807
    2. '=None' → logprob: -2.2485833168029785
    3. '):' → logprob: -2.4985833168029785
    4. '=[]' → logprob: -3.9985833168029785
    5. '=' → logprob: -4.3735833168029785
    6. ')' → logprob: -7.3735833168029785
    7. '):
' → logprob: -7.3735833168029785
    8. ' =' → logprob: -9.748583793640137
    9. ' ):' → logprob: -10.498583793640137
    10. ':list' → logprob: -10.998583793640137

Token 132: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023658976424485445
    2. '<|end|>' → logprob: -7.127366065979004
    3. ' self' → logprob: -7.502366065979004
    4. ':' → logprob: -7.627366065979004
    5. '[]' → logprob: -8.377366065979004
    6. ',' → logprob: -9.377366065979004
    7. '[' → logprob: -10.002366065979004
    8. 'self' → logprob: -10.002366065979004
    9. '):
' → logprob: -10.877366065979004
    10. '   ' → logprob: -11.002366065979004

Token 133: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.47634437680244446
    2. ' self' → logprob: -0.9763443470001221
    3. '       ' → logprob: -6.101344585418701
    4. '	self' → logprob: -10.726344108581543
    5. '   ' → logprob: -14.101344108581543
    6. ' ' → logprob: -14.101344108581543
    7. '(self' → logprob: -14.851344108581543
    8. '[self' → logprob: -14.976344108581543
    9. ' ' → logprob: -15.351344108581543
    10. '	' → logprob: -15.601344108581543

Token 134: '.rules' (ID: 85922)
  Prédit: '.rules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rules' → logprob: -0.002641652710735798
    2. 'rules' → logprob: -6.502641677856445
    3. '.' → logprob: -6.877641677856445
    4. ' rules' → logprob: -10.127641677856445
    5. '_rules' → logprob: -10.502641677856445
    6. ' .' → logprob: -10.627641677856445
    7. '.r' → logprob: -11.752641677856445
    8. '.rule' → logprob: -11.877641677856445
    9. 'Rules' → logprob: -14.127641677856445
    10. '._' → logprob: -15.127641677856445

Token 135: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02632596157491207
    2. '=' → logprob: -3.6513259410858154
    3. ' ' → logprob: -11.026326179504395
    4. '<|end|>' → logprob: -12.901326179504395
    5. '  ' → logprob: -13.651326179504395
    6. '=[]' → logprob: -13.651326179504395
    7. '.' → logprob: -13.651326179504395
    8. '.extend' → logprob: -14.151326179504395
    9. '_' → logprob: -14.401326179504395
    10. ')' → logprob: -14.651326179504395

Token 136: ' rules' (ID: 9607)
  Prédit: 'rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rules' → logprob: -0.07889804989099503
    2. ' rules' → logprob: -2.5788979530334473
    3. '[]' → logprob: -12.078898429870605
    4. 'list' → logprob: -13.203898429870605
    5. ' []' → logprob: -15.328898429870605
    6. ' list' → logprob: -15.578898429870605
    7. '.rules' → logprob: -15.703898429870605
    8. '[' → logprob: -16.95389747619629
    9. '   ' → logprob: -17.20389747619629
    10. ' ' → logprob: -17.82889747619629

Token 137: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4130600690841675
    2. '<|end|>' → logprob: -1.1630600690841675
    3. '

' → logprob: -3.788060188293457
    4. '<|end|>' → logprob: -5.913060188293457
    5. '   ' → logprob: -8.788060188293457
    6. 'def' → logprob: -8.913060188293457
    7. '    
' → logprob: -9.163060188293457
    8. '  
' → logprob: -10.038060188293457
    9. '
    
' → logprob: -11.413060188293457
    10. ' def' → logprob: -11.413060188293457

Token 138: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1314963698387146
    2. '

' → logprob: -2.3814964294433594
    3. 'def' → logprob: -3.6314964294433594
    4. '    
' → logprob: -6.006496429443359
    5. '<|end|>' → logprob: -7.256496429443359
    6. '
    
' → logprob: -8.13149642944336
    7. '  
' → logprob: -8.25649642944336
    8. '   ' → logprob: -8.25649642944336
    9. '        
' → logprob: -9.13149642944336
    10. ' def' → logprob: -9.63149642944336

Token 139: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.04447570815682411
    2. 'list' → logprob: -3.169475793838501
    3. 'List' → logprob: -7.044475555419922
    4. ' List' → logprob: -7.544475555419922
    5. ' []' → logprob: -10.919475555419922
    6. ' ' → logprob: -11.794475555419922
    7. ' type' → logprob: -11.919475555419922
    8. '[list' → logprob: -12.044475555419922
    9. ':list' → logprob: -12.044475555419922
    10. ' [' → logprob: -12.294475555419922

Token 140: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 141: ' Sub' (ID: 5934)
  Prédit: 'Sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sub' → logprob: -0.0789109393954277
    2. ' Sub' → logprob: -2.5789108276367188
    3. '<|end|>' → logprob: -11.203910827636719
    4. 'Subclass' → logprob: -12.203910827636719
    5. '_sub' → logprob: -14.328910827636719
    6. '_Sub' → logprob: -14.328910827636719
    7. '(Sub' → logprob: -14.703910827636719
    8. 'Subview' → logprob: -15.078910827636719
    9. '<|end|>' → logprob: -15.578910827636719
    10. 'sub' → logprob: -16.20391082763672

Token 142: 'stitution' (ID: 20066)
  Prédit: 'stitution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stitution' → logprob: -1.6240566083070007e-06
    2. 'stit' → logprob: -14.125001907348633
    3. 'st' → logprob: -14.625001907348633
    4. 'stitute' → logprob: -16.625001907348633
    5. 'station' → logprob: -17.000001907348633
    6. 'utation' → logprob: -17.000001907348633
    7. 'sti' → logprob: -17.125001907348633
    8. 'ution' → logprob: -17.625001907348633
    9. 'istit' → logprob: -18.000001907348633
    10. 'stitut' → logprob: -18.125001907348633

Token 143: 'Rule' (ID: 11845)
  Prédit: 'Rule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rule' → logprob: -3.7697225252486533e-06
    2. 'Rules' → logprob: -12.500003814697266
    3. '_rule' → logprob: -17.875003814697266
    4. ' Rule' → logprob: -18.500003814697266
    5. 'rule' → logprob: -19.375003814697266
    6. '.Rule' → logprob: -19.625003814697266
    7. '_RULE' → logprob: -20.000003814697266
    8. 'Ru' → logprob: -21.125003814697266
    9. 'R' → logprob: -21.625003814697266
    10. 'RULE' → logprob: -21.875003814697266

Token 144: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10121393948793411
    2. '   ' → logprob: -2.4762139320373535
    3. '

' → logprob: -4.9762139320373535
    4. '<|end|>' → logprob: -5.8512139320373535
    5. 'def' → logprob: -6.8512139320373535
    6. '    
' → logprob: -6.8512139320373535
    7. '<|end|>' → logprob: -8.726214408874512
    8. '  
' → logprob: -10.101214408874512
    9. ' def' → logprob: -10.351214408874512
    10. '
' → logprob: -11.351214408874512

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006524595431983471
    2. 'def' → logprob: -5.381524562835693
    3. '
' → logprob: -7.006524562835693
    4. ' def' → logprob: -7.631524562835693
    5. '    
' → logprob: -7.631524562835693
    6. '  
' → logprob: -11.881525039672852
    7. '        
' → logprob: -12.131525039672852
    8. ' 
' → logprob: -12.506525039672852
    9. '	def' → logprob: -12.631525039672852
    10. '<|end|>' → logprob: -12.756525039672852

Token 146: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015036711702123284
    2. ' def' → logprob: -6.5015034675598145
    3. '   ' → logprob: -13.626503944396973
    4. 'de' → logprob: -15.876503944396973
    5. 'd' → logprob: -17.251502990722656
    6. '	def' → logprob: -19.876502990722656
    7. ' ' → logprob: -20.126502990722656
    8. '```' → logprob: -20.626502990722656
    9. '
' → logprob: -21.626502990722656
    10. 'class' → logprob: -21.876502990722656

Token 147: ' possible' (ID: 4149)
  Prédit: ' apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' apply' → logprob: -0.05492459610104561
    2. 'apply' → logprob: -2.929924488067627
    3. '_apply' → logprob: -11.304924964904785
    4. ' ' → logprob: -11.804924964904785
    5. ' substitute' → logprob: -11.804924964904785
    6. ' def' → logprob: -12.054924964904785
    7. ' applies' → logprob: -12.929924964904785
    8. 'def' → logprob: -13.804924964904785
    9. '.apply' → logprob: -13.929924964904785
    10. '   ' → logprob: -14.054924964904785

Token 148: '_next' (ID: 25436)
  Prédit: '_re'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.3330654501914978
    2. '_sub' → logprob: -1.4580655097961426
    3. '_strings' → logprob: -3.8330655097961426
    4. '_' → logprob: -4.458065509796143
    5. '_s' → logprob: -5.083065509796143
    6. 's' → logprob: -6.083065509796143
    7. '_next' → logprob: -6.208065509796143
    8. '_results' → logprob: -6.708065509796143
    9. '_transform' → logprob: -6.833065509796143
    10. '_con' → logprob: -7.958065509796143

Token 149: '_states' (ID: 53795)
  Prédit: '_strings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_strings' → logprob: -0.2624744474887848
    2. '_states' → logprob: -2.262474536895752
    3. 's' → logprob: -3.137474536895752
    4. '_tokens' → logprob: -3.387474536895752
    5. '(self' → logprob: -3.887474536895752
    6. '(' → logprob: -4.887474536895752
    7. '_words' → logprob: -5.137474536895752
    8. '_steps' → logprob: -5.762474536895752
    9. '_' → logprob: -5.762474536895752
    10. '_chars' → logprob: -6.387474536895752

Token 150: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004112592898309231
    2. '(' → logprob: -5.504112720489502
    3. ' (' → logprob: -10.629112243652344
    4. '(s' → logprob: -12.004112243652344
    5. '(
' → logprob: -12.629112243652344
    6. 'self' → logprob: -15.879112243652344
    7. '   ' → logprob: -16.129112243652344
    8. '(Self' → logprob: -16.504112243652344
    9. '(sel' → logprob: -16.629112243652344
    10. ' self' → logprob: -16.754112243652344

Token 151: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011113843880593777
    2. ' (' → logprob: -4.76111364364624
    3. '(' → logprob: -6.38611364364624
    4. ',' → logprob: -7.63611364364624
    5. '(
' → logprob: -9.511114120483398
    6. '(s' → logprob: -9.511114120483398
    7. ')' → logprob: -9.761114120483398
    8. '   ' → logprob: -10.386114120483398
    9. 'self' → logprob: -10.636114120483398
    10. ' self' → logprob: -10.636114120483398

Token 152: ' s' (ID: 265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12230934202671051
    2. 's' → logprob: -2.747309446334839
    3. ' self' → logprob: -3.122309446334839
    4. ' s' → logprob: -4.99730920791626
    5. '       ' → logprob: -8.872309684753418
    6. '   ' → logprob: -10.122309684753418
    7. ')' → logprob: -11.372309684753418
    8. ' ' → logprob: -11.997309684753418
    9. 'def' → logprob: -11.997309684753418
    10. '(self' → logprob: -12.747309684753418

Token 153: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00045665193465538323
    2. '):' → logprob: -8.125456809997559
    3. ' :' → logprob: -9.125456809997559
    4. ',' → logprob: -10.750456809997559
    5. '):
' → logprob: -10.875456809997559
    6. ':str' → logprob: -12.125456809997559
    7. '   ' → logprob: -12.250456809997559
    8. ')' → logprob: -14.750456809997559
    9. ' ):' → logprob: -15.375456809997559
    10. 's' → logprob: -15.875456809997559

Token 154: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.2814112901687622
    2. 'str' → logprob: -1.4064112901687622
    3. ')' → logprob: -8.406411170959473
    4. '   ' → logprob: -11.281411170959473
    5. 's' → logprob: -11.531411170959473
    6. ':str' → logprob: -12.406411170959473
    7. ' )' → logprob: -13.281411170959473
    8. '       ' → logprob: -13.406411170959473
    9. ' ' → logprob: -13.406411170959473
    10. '	str' → logprob: -13.531411170959473

Token 155: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03418995440006256
    2. '):' → logprob: -3.4091899394989014
    3. '):
' → logprob: -7.6591901779174805
    4. ' )' → logprob: -10.53419017791748
    5. ')->' → logprob: -11.03419017791748
    6. ',' → logprob: -11.65919017791748
    7. '   ' → logprob: -11.90919017791748
    8. ':' → logprob: -12.28419017791748
    9. ' ):' → logprob: -12.28419017791748
    10. '):
' → logprob: -12.78419017791748

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03843102604150772
    2. ':' → logprob: -3.66343092918396
    3. '[]' → logprob: -4.788431167602539
    4. '        
' → logprob: -7.038431167602539
    5. ' []' → logprob: -7.163431167602539
    6. ':
' → logprob: -7.913431167602539
    7. ',' → logprob: -8.288431167602539
    8. '
' → logprob: -8.663431167602539
    9. '[' → logprob: -8.913431167602539
    10. '   ' → logprob: -8.913431167602539

Token 157: ' next' (ID: 2613)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -1.3120102882385254
    2. ' states' → logprob: -1.5620102882385254
    3. 'result' → logprob: -1.8120102882385254
    4. 'states' → logprob: -1.9370102882385254
    5. 'next' (adapté à ' next') → logprob: -2.8120102882385254
    6. '       ' → logprob: -3.1870102882385254
    7. ' results' → logprob: -3.6870102882385254
    8. ' next' → logprob: -3.6870102882385254
    9. '
' → logprob: -3.9370102882385254
    10. ' result' → logprob: -4.187010288238525

Token 158: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -0.001136050675995648
    2. '_' → logprob: -6.87613582611084
    3. 's' → logprob: -9.50113582611084
    4. ' =' → logprob: -11.62613582611084
    5. '_s' → logprob: -11.87613582611084
    6. '_spaces' → logprob: -13.25113582611084
    7. '_tokens' → logprob: -13.50113582611084
    8. ' _' → logprob: -13.62613582611084
    9. 'States' → logprob: -13.62613582611084
    10. '_steps' → logprob: -14.12613582611084

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0006324975984171033
    2. '=' → logprob: -7.375632286071777
    3. '=[]' → logprob: -12.500632286071777
    4. 's' → logprob: -13.750632286071777
    5. ' ' → logprob: -14.250632286071777
    6. '[]' → logprob: -16.125633239746094
    7. ':' → logprob: -16.375633239746094
    8. '=[]
' → logprob: -16.375633239746094
    9. ',' → logprob: -16.625633239746094
    10. ')' → logprob: -16.625633239746094

Token 160: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7939167618751526
    2. 'set' → logprob: -1.0439167022705078
    3. ' set' → logprob: -1.7939167022705078
    4. ' []' → logprob: -3.543916702270508
    5. '[]
' → logprob: -7.418916702270508
    6. ' []
' → logprob: -10.793916702270508
    7. '	set' → logprob: -11.543916702270508
    8. '[]}' → logprob: -12.543916702270508
    9. '{}' → logprob: -12.668916702270508
    10. '[' → logprob: -12.668916702270508

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010438569821417332
    2. ' for' → logprob: -4.635438442230225
    3. '
' → logprob: -7.760438442230225
    4. 'for' → logprob: -8.885438919067383
    5. '        
' → logprob: -9.260438919067383
    6. ' 
' → logprob: -11.760438919067383
    7. '  
' → logprob: -12.760438919067383
    8. '   ' → logprob: -13.260438919067383
    9. ',' → logprob: -13.260438919067383
    10. '' → logprob: -14.010438919067383

Token 162: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011156410910189152
    2. ' for' → logprob: -4.5111565589904785
    3. '       ' → logprob: -9.13615608215332
    4. '
' → logprob: -14.88615608215332
    5. '   ' → logprob: -15.26115608215332
    6. '	for' → logprob: -15.38615608215332
    7. ' ' → logprob: -18.63615608215332
    8. '        
' → logprob: -19.13615608215332
    9. '```' → logprob: -19.13615608215332
    10. '  ' → logprob: -19.38615608215332

Token 163: ' rule' (ID: 10652)
  Prédit: 'rule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rule' → logprob: -0.2254462093114853
    2. ' rule' → logprob: -1.6004462242126465
    3. 'r' → logprob: -10.725445747375488
    4. 'i' → logprob: -12.725445747375488
    5. ' ' → logprob: -13.350445747375488
    6. '   ' → logprob: -13.350445747375488
    7. ' i' → logprob: -13.600445747375488
    8. '(rule' → logprob: -14.100445747375488
    9. '_rule' → logprob: -14.350445747375488
    10. ' r' → logprob: -14.350445747375488

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0002736138121690601
    2. 'in' → logprob: -8.250273704528809
    3. ' ' → logprob: -11.875273704528809
    4. '	in' → logprob: -13.750273704528809
    5. 's' → logprob: -14.125273704528809
    6. ' i' → logprob: -14.250273704528809
    7. ',' → logprob: -14.375273704528809
    8. '_in' → logprob: -14.625273704528809
    9. '_' → logprob: -14.875273704528809
    10. '  ' → logprob: -15.250273704528809

Token 165: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3132738173007965
    2. ' self' → logprob: -1.3132737874984741
    3. '
' → logprob: -11.813273429870605
    4. '	self' → logprob: -13.188273429870605
    5. '(self' → logprob: -13.813273429870605
    6. '       ' → logprob: -14.563273429870605
    7. '[self' → logprob: -14.688273429870605
    8. '<|end|>' → logprob: -15.313273429870605
    9. '_self' → logprob: -15.938273429870605
    10. '           ' → logprob: -16.688274383544922

Token 166: '.rules' (ID: 85922)
  Prédit: '.rules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rules' → logprob: -4.0126840758603066e-05
    2. '.' → logprob: -10.375040054321289
    3. 'rules' → logprob: -12.000040054321289
    4. ' .' → logprob: -14.125040054321289
    5. 'ules' → logprob: -14.750040054321289
    6. '.roles' → logprob: -14.750040054321289
    7. '.rule' → logprob: -15.375040054321289
    8. '.r' → logprob: -15.500040054321289
    9. '.routes' → logprob: -15.625040054321289
    10. '.questions' → logprob: -15.875040054321289

Token 167: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07016494870185852
    2. ':
' → logprob: -2.695164918899536
    3. ',' → logprob: -9.445164680480957
    4. '):' → logprob: -9.820164680480957
    5. '):
' → logprob: -10.195164680480957
    6. ' :' → logprob: -10.695164680480957
    7. '<|end|>' → logprob: -11.445164680480957
    8. ' and' → logprob: -12.570164680480957
    9. ' :
' → logprob: -12.570164680480957
    10. '       ' → logprob: -12.695164680480957

Token 168: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.058730240911245346
    2. '
' → logprob: -3.308730125427246
    3. ' for' → logprob: -4.308730125427246
    4. '            
' → logprob: -6.058730125427246
    5. ':' → logprob: -6.183730125427246
    6. 'for' → logprob: -6.933730125427246
    7. ':
' → logprob: -7.183730125427246
    8. ',' → logprob: -8.808730125427246
    9. ' and' → logprob: -8.808730125427246
    10. '       ' → logprob: -9.058730125427246

Token 169: ' result' (ID: 1534)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.575643539428711
    2. ' length' → logprob: -1.700643539428711
    3. '   ' → logprob: -1.825643539428711
    4. '       ' → logprob: -1.825643539428711
    5. ' parts' → logprob: -2.450643539428711
    6. 'for' → logprob: -2.825643539428711
    7. 'length' → logprob: -3.325643539428711
    8. '           ' → logprob: -3.700643539428711
    9. ' i' → logprob: -4.075643539428711
    10. ' p' → logprob: -4.325643539428711

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0048389071598649025
    2. '=' → logprob: -5.379838943481445
    3. 's' → logprob: -8.629838943481445
    4. ' ' → logprob: -10.254838943481445
    5. ',' → logprob: -13.004838943481445
    6. '_' → logprob: -14.254838943481445
    7. ')' → logprob: -14.629838943481445
    8. ' =
' → logprob: -15.254838943481445
    9. '	' → logprob: -15.629838943481445
    10. ' s' → logprob: -15.754838943481445

Token 171: ' rule' (ID: 10652)
  Prédit: 'rule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rule' → logprob: -0.07889474183320999
    2. ' rule' → logprob: -2.578894853591919
    3. '(rule' → logprob: -12.45389461517334
    4. '
' → logprob: -14.32889461517334
    5. ' ' → logprob: -15.57889461517334
    6. '_rule' → logprob: -15.82889461517334
    7. '.rule' → logprob: -15.95389461517334
    8. 's' → logprob: -17.703895568847656
    9. '[' → logprob: -17.828895568847656
    10. 'Rule' → logprob: -18.203895568847656

Token 172: '.apply' (ID: 23624)
  Prédit: '.apply'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.apply' → logprob: -0.0001305950863752514
    2. '.' → logprob: -9.000130653381348
    3. 'apply' → logprob: -11.875130653381348
    4. ' .' → logprob: -16.12512969970703
    5. '   ' → logprob: -17.50012969970703
    6. '.ap' → logprob: -18.00012969970703
    7. ' apply' → logprob: -18.00012969970703
    8. '.Apply' → logprob: -18.25012969970703
    9. '`.' → logprob: -18.75012969970703
    10. '
' → logprob: -18.87512969970703

Token 173: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.003607555292546749
    2. '(' → logprob: -5.628607749938965
    3. '(
' → logprob: -12.753607749938965
    4. 's' → logprob: -12.878607749938965
    5. '<|end|>' → logprob: -13.753607749938965
    6. '('' → logprob: -15.253607749938965
    7. ' (' → logprob: -15.378607749938965
    8. '(

' → logprob: -16.00360679626465
    9. ')' → logprob: -16.25360679626465
    10. '()' → logprob: -16.50360679626465

Token 174: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.576329231262207
    2. ')
' → logprob: -0.826329231262207
    3. ')
' → logprob: -8.076329231262207
    4. ')

' → logprob: -9.576329231262207
    5. ' )
' → logprob: -12.576329231262207
    6. ',' → logprob: -13.326329231262207
    7. ' )' → logprob: -13.951329231262207
    8. ')`
' → logprob: -14.826329231262207
    9. '       ' → logprob: -14.951329231262207
    10. '):
' → logprob: -15.076329231262207

Token 175: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22685596346855164
    2. '
' → logprob: -1.601855993270874
    3. '            
' → logprob: -7.101855754852295
    4. ' 
' → logprob: -8.101856231689453
    5. ' if' → logprob: -8.976856231689453
    6. '<|end|>' → logprob: -9.351856231689453
    7. ',' → logprob: -10.851856231689453
    8. '
' → logprob: -10.851856231689453
    9. '  
' → logprob: -10.976856231689453
    10. ')' → logprob: -12.226856231689453

Token 176: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21730957925319672
    2. 'if' (adapté à ' if') → logprob: -2.2173094749450684
    3. '           ' → logprob: -2.4673094749450684
    4. '
' → logprob: -6.467309474945068
    5. ' next' → logprob: -10.717309951782227
    6. 'next' → logprob: -11.342309951782227
    7. '            
' → logprob: -11.842309951782227
    8. ' 
' → logprob: -12.592309951782227
    9. '	if' → logprob: -13.467309951782227
    10. 'If' → logprob: -13.842309951782227

Token 177: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.0036025596782565117
    2. 'result' → logprob: -5.628602504730225
    3. '(result' → logprob: -13.753602981567383
    4. ' ' → logprob: -14.503602981567383
    5. '	result' → logprob: -14.628602981567383
    6. ' ' → logprob: -16.503602981567383
    7. '[result' → logprob: -16.503602981567383
    8. ' res' → logprob: -16.878602981567383
    9. ' not' → logprob: -17.253602981567383
    10. ' rule' → logprob: -17.378602981567383

Token 178: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.009760101325809956
    2. '!=' → logprob: -4.634759902954102
    3. ' and' → logprob: -13.134759902954102
    4. ' not' → logprob: -14.634759902954102
    5. ' ' → logprob: -14.759759902954102
    6. ')!=' → logprob: -15.134759902954102
    7. ' ' → logprob: -15.509759902954102
    8. '()!=' → logprob: -15.884759902954102
    9. 'and' → logprob: -15.884759902954102
    10. ']!=' → logprob: -16.1347599029541

Token 179: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.10021993517875671
    2. 's' → logprob: -2.350219964981079
    3. ' ' → logprob: -11.3502197265625
    4. '<|end|>' → logprob: -14.3502197265625
    5. '(s' → logprob: -15.2252197265625
    6. ' ' → logprob: -15.3502197265625
    7. '	s' → logprob: -15.6002197265625
    8. '
' → logprob: -16.1002197265625
    9. ' 
' → logprob: -16.2252197265625
    10. '_s' → logprob: -17.2252197265625

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38730141520500183
    2. ':
' → logprob: -1.1373014450073242
    3. ' and' → logprob: -8.387301445007324
    4. '):
' → logprob: -8.762301445007324
    5. '):' → logprob: -11.137301445007324
    6. ':

' → logprob: -11.887301445007324
    7. 'and' → logprob: -12.012301445007324
    8. ':
' → logprob: -12.262301445007324
    9. ',' → logprob: -12.512301445007324
    10. ' :
' → logprob: -12.887301445007324

Token 181: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009078120812773705
    2. ' next' → logprob: -5.759078025817871
    3. 'next' → logprob: -5.884078025817871
    4. '
' → logprob: -6.009078025817871
    5. ':
' → logprob: -8.634078025817871
    6. '[next' → logprob: -8.634078025817871
    7. '           ' → logprob: -9.134078025817871
    8. '                
' → logprob: -10.009078025817871
    9. '(next' → logprob: -10.134078025817871
    10. '):
' → logprob: -10.634078025817871

Token 182: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.18268844485282898
    2. 'next' (adapté à ' next') → logprob: -2.3076884746551514
    3. '
' → logprob: -2.8076884746551514
    4. '                   ' → logprob: -5.182688236236572
    5. '               ' → logprob: -7.182688236236572
    6. '[next' → logprob: -7.682688236236572
    7. '           ' → logprob: -9.43268871307373
    8. '(next' → logprob: -9.93268871307373
    9. '	next' → logprob: -10.05768871307373
    10. '.next' → logprob: -10.18268871307373

Token 183: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -6.511406809295295e-06
    2. '_' → logprob: -12.125006675720215
    3. 'States' → logprob: -15.125006675720215
    4. '               ' → logprob: -15.500006675720215
    5. '           ' → logprob: -15.625006675720215
    6. ' _' → logprob: -16.0000057220459
    7. '_
' → logprob: -16.8750057220459
    8. '
' → logprob: -17.1250057220459
    9. '                
' → logprob: -17.2500057220459
    10. ' states' → logprob: -17.6250057220459

Token 184: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004099654499441385
    2. '.' → logprob: -5.5040998458862305
    3. ' .' → logprob: -10.87909984588623
    4. '.extend' → logprob: -13.50409984588623
    5. '.app' → logprob: -14.75409984588623
    6. '.add' → logprob: -15.25409984588623
    7. 'append' → logprob: -15.87909984588623
    8. '.ap' → logprob: -16.754098892211914
    9. '.push' → logprob: -16.754098892211914
    10. '.
' → logprob: -17.254098892211914

Token 185: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.004460854921489954
    2. '(' → logprob: -5.50446081161499
    3. '((' → logprob: -7.87946081161499
    4. ' (' → logprob: -12.629461288452148
    5. 'result' → logprob: -15.754461288452148
    6. '(res' → logprob: -15.879461288452148
    7. '(
' → logprob: -15.879461288452148
    8. '(results' → logprob: -16.12946128845215
    9. '(s' → logprob: -16.75446128845215
    10. '(resultado' → logprob: -17.62946128845215

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024103635922074318
    2. ')
' → logprob: -3.7741036415100098
    3. '       ' → logprob: -7.14910364151001
    4. '
' → logprob: -10.149103164672852
    5. ')return' → logprob: -10.899103164672852
    6. '<|end|>' → logprob: -11.899103164672852
    7. ')
' → logprob: -13.274103164672852
    8. ' )' → logprob: -13.274103164672852
    9. ')

' → logprob: -14.399103164672852
    10. ' ' → logprob: -14.899103164672852

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5254150629043579
    2. '
' → logprob: -0.9004150629043579
    3. '        
' → logprob: -7.025414943695068
    4. 'return' → logprob: -7.150414943695068
    5. ' return' → logprob: -7.900414943695068
    6. '
' → logprob: -8.900415420532227
    7. '    
' → logprob: -10.400415420532227
    8. '   ' → logprob: -11.150415420532227
    9. '  
' → logprob: -11.150415420532227
    10. ' 
' → logprob: -11.650415420532227

Token 188: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007939716801047325
    2. '       ' → logprob: -5.50793981552124
    3. '
' → logprob: -5.75793981552124
    4. ' return' → logprob: -7.38293981552124
    5. '        
' → logprob: -10.257939338684082
    6. '   ' → logprob: -10.507939338684082
    7. ' ' → logprob: -13.132939338684082
    8. '```' → logprob: -13.132939338684082
    9. '    
' → logprob: -13.257939338684082
    10. '
' → logprob: -13.632939338684082

Token 189: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.12693609297275543
    2. 'next' → logprob: -2.126936197280884
    3. '[next' → logprob: -11.876935958862305
    4. '	next' → logprob: -14.126935958862305
    5. '.next' → logprob: -15.876935958862305
    6. '(next' → logprob: -16.001935958862305
    7. '_next' → logprob: -16.876935958862305
    8. ' ' → logprob: -17.376935958862305
    9. ',next' → logprob: -18.751935958862305
    10. '[' → logprob: -18.876935958862305

Token 190: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -4.961759259458631e-06
    2. '_' → logprob: -12.625004768371582
    3. '_state' → logprob: -14.625004768371582
    4. ' _' → logprob: -14.750004768371582
    5. '_next' → logprob: -14.875004768371582
    6. '_st' → logprob: -15.125004768371582
    7. 'states' → logprob: -16.6250057220459
    8. 'States' → logprob: -16.8750057220459
    9. 'next' → logprob: -17.3750057220459
    10. '_stats' → logprob: -17.8750057220459

Token 191: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.28995630145072937
    2. 'def' → logprob: -1.4149563312530518
    3. '#' → logprob: -5.039956092834473
    4. '<|end|>' → logprob: -7.164956092834473
    5. '```' → logprob: -7.289956092834473
    6. 'from' → logprob: -8.414956092834473
    7. ' class' → logprob: -8.789956092834473
    8. '[' → logprob: -8.789956092834473
    9. 'import' → logprob: -9.164956092834473
    10. '<|end|>' → logprob: -9.414956092834473

Token 193: ' BFS' (ID: 190016)
  Prédit: 'Sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sub' → logprob: -0.9714421033859253
    2. 'State' → logprob: -1.2214421033859253
    3. ' State' → logprob: -2.596442222595215
    4. ' Sub' → logprob: -2.721442222595215
    5. 'String' → logprob: -2.971442222595215
    6. 'Transformation' → logprob: -4.346442222595215
    7. 'Test' → logprob: -4.471442222595215
    8. 'Solution' → logprob: -4.471442222595215
    9. 'Re' → logprob: -4.971442222595215
    10. ' String' → logprob: -5.096442222595215

Token 194: 'State' (ID: 1881)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13656875491142273
    2. 'State' → logprob: -3.761568784713745
    3. 'Explorer' → logprob: -3.761568784713745
    4. 'Searcher' → logprob: -3.761568784713745
    5. 'Solver' → logprob: -4.011568546295166
    6. 'Search' → logprob: -4.636568546295166
    7. ':
' → logprob: -4.761568546295166
    8. '(' → logprob: -4.886568546295166
    9. 'Traversal' → logprob: -5.636568546295166
    10. 'Optimizer' → logprob: -6.511568546295166

Token 195: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00035608073812909424
    2. ':
' → logprob: -8.00035572052002
    3. ' :' → logprob: -12.25035572052002
    4. '():' → logprob: -12.62535572052002
    5. '(object' → logprob: -12.75035572052002
    6. ':

' → logprob: -12.75035572052002
    7. '(' → logprob: -13.00035572052002
    8. ':**' → logprob: -13.00035572052002
    9. ':
' → logprob: -15.12535572052002
    10. '):' → logprob: -15.25035572052002

Token 196: '   ' (ID: 271)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32144299149513245
    2. '   ' → logprob: -1.69644296169281
    3. ':' → logprob: -2.4464430809020996
    4. 'def' → logprob: -6.4464430809021
    5. '(object' → logprob: -6.4464430809021
    6. ' def' → logprob: -7.4464430809021
    7. '):
' → logprob: -7.8214430809021
    8. '<|end|>' → logprob: -7.9464430809021
    9. '  ' → logprob: -9.071442604064941
    10. '
' → logprob: -10.071442604064941

Token 197: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.24385391175746918
    2. ':
' → logprob: -2.118853807449341
    3. '   ' → logprob: -2.993853807449341
    4. ':' → logprob: -3.743853807449341
    5. ' def' → logprob: -4.11885404586792
    6. '
' → logprob: -5.99385404586792
    7. 'class' → logprob: -6.74385404586792
    8. '__' → logprob: -7.11885404586792
    9. '```' → logprob: -7.24385404586792
    10. ':def' → logprob: -7.86885404586792

Token 198: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1356348693370819
    2. '_init' → logprob: -3.2606348991394043
    3. 'init' → logprob: -3.2606348991394043
    4. ' def' → logprob: -3.7606348991394043
    5. ' init' → logprob: -4.510634899139404
    6. '__' → logprob: -4.760634899139404
    7. ' ' → logprob: -5.385634899139404
    8. 'def' → logprob: -7.760634899139404
    9. '  ' → logprob: -7.885634899139404
    10. '```' → logprob: -7.885634899139404

Token 199: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.988221684878226e-06
    2. ' init' → logprob: -12.250006675720215
    3. 'int' → logprob: -14.250006675720215
    4. '
' → logprob: -14.875006675720215
    5. '_init' → logprob: -15.125006675720215
    6. '   ' → logprob: -15.250006675720215
    7. '```' → logprob: -15.375006675720215
    8. '  ' → logprob: -16.12500762939453
    9. ' ' → logprob: -16.75000762939453
    10. '

' → logprob: -17.12500762939453

Token 200: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.06253334879875183
    2. '(self' → logprob: -2.812533378601074
    3. '_(' → logprob: -7.937533378601074
    4. '__(
' → logprob: -9.437533378601074
    5. ' (' → logprob: -9.937533378601074
    6. 'self' → logprob: -10.687533378601074
    7. '<|end|>' → logprob: -10.937533378601074
    8. '(' → logprob: -10.937533378601074
    9. '__' → logprob: -11.812533378601074
    10. '<>(' → logprob: -12.937533378601074

Token 201: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.466968650580384e-05
    2. ' self' → logprob: -10.750054359436035
    3. 's' → logprob: -11.125054359436035
    4. '(self' → logprob: -11.375054359436035
    5. ',' → logprob: -12.750054359436035
    6. '
' → logprob: -13.500054359436035
    7. '       ' → logprob: -13.750054359436035
    8. '   ' → logprob: -14.375054359436035
    9. ',self' → logprob: -14.750054359436035
    10. '	self' → logprob: -16.00005531311035

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001182052365038544
    2. ' ,' → logprob: -9.375118255615234
    3. 'self' → logprob: -10.750118255615234
    4. ',s' → logprob: -12.625118255615234
    5. '<|end|>' → logprob: -12.875118255615234
    6. ',self' → logprob: -13.500118255615234
    7. 's' → logprob: -14.125118255615234
    8. '(self' → logprob: -14.125118255615234
    9. '‌,' → logprob: -14.250118255615234
    10. '_,' → logprob: -14.375118255615234

Token 203: ' string' (ID: 1621)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.2397310733795166
    2. ' string' → logprob: -1.7397310733795166
    3. 's' → logprob: -1.8647310733795166
    4. 'string' → logprob: -1.9897310733795166
    5. ' current' → logprob: -2.7397310733795166
    6. ' state' → logprob: -2.8647310733795166
    7. 'state' → logprob: -2.8647310733795166
    8. ' value' → logprob: -3.4897310733795166
    9. 'value' → logprob: -3.8647310733795166
    10. 'current' → logprob: -4.7397308349609375

Token 204: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4574298560619354
    2. ':' → logprob: -1.2074298858642578
    3. '):' → logprob: -2.707429885864258
    4. ')' → logprob: -7.832429885864258
    5. ' :' → logprob: -8.207429885864258
    6. '):
' → logprob: -8.457429885864258
    7. ' ):' → logprob: -8.582429885864258
    8. ' ,' → logprob: -8.582429885864258
    9. ':str' → logprob: -9.207429885864258
    10. '   ' → logprob: -11.332429885864258

Token 205: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.47413408756256104
    2. ' str' → logprob: -0.974134087562561
    3. ',' → logprob: -11.22413444519043
    4. ':str' → logprob: -11.34913444519043
    5. ')' → logprob: -11.97413444519043
    6. 's' → logprob: -12.22413444519043
    7. '   ' → logprob: -12.47413444519043
    8. '):
' → logprob: -12.47413444519043
    9. '[str' → logprob: -12.59913444519043
    10. '	str' → logprob: -12.72413444519043

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002557115163654089
    2. '):' → logprob: -6.002557277679443
    3. '):
' → logprob: -9.627556800842285
    4. ' ,' → logprob: -11.252556800842285
    5. ',
' → logprob: -14.627556800842285
    6. ')' → logprob: -14.627556800842285
    7. ' ):' → logprob: -15.127556800842285
    8. '   ' → logprob: -15.252556800842285
    9. '       ' → logprob: -15.377556800842285
    10. ',parent' → logprob: -15.502556800842285

Token 207: ' steps' (ID: 10331)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.5486205816268921
    2. ' depth' → logprob: -1.048620581626892
    3. 'steps' → logprob: -4.048620700836182
    4. 'parent' → logprob: -4.048620700836182
    5. ' steps' → logprob: -4.173620700836182
    6. ' parent' → logprob: -4.548620700836182
    7. 'path' → logprob: -5.423620700836182
    8. 'level' → logprob: -5.923620700836182
    9. ' path' → logprob: -6.548620700836182
    10. ' level' → logprob: -7.048620700836182

Token 208: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12235289812088013
    2. '):' → logprob: -2.7473528385162354
    3. '=' → logprob: -3.1223528385162354
    4. ',' → logprob: -5.3723530769348145
    5. ':int' → logprob: -6.3723530769348145
    6. '=None' → logprob: -8.622352600097656
    7. '_taken' → logprob: -8.997352600097656
    8. '):
' → logprob: -9.372352600097656
    9. '_completed' → logprob: -9.372352600097656
    10. ')' → logprob: -9.872352600097656

Token 209: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006739169359207153
    2. ' int' → logprob: -5.006739139556885
    3. '[int' → logprob: -11.631739616394043
    4. ':int' → logprob: -12.256739616394043
    5. '0' → logprob: -12.881739616394043
    6. ')' → logprob: -13.006739616394043
    7. '):
' → logprob: -13.506739616394043
    8. 'list' → logprob: -14.006739616394043
    9. ' ' → logprob: -14.631739616394043
    10. '	int' → logprob: -14.756739616394043

Token 210: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002832934260368347
    2. '):
' → logprob: -6.002832889556885
    3. ',' → logprob: -8.127833366394043
    4. '=' → logprob: -9.752833366394043
    5. ':' → logprob: -13.877833366394043
    6. '):
' → logprob: -14.127833366394043
    7. ' ):' → logprob: -14.127833366394043
    8. '=None' → logprob: -14.377833366394043
    9. ')' → logprob: -15.252833366394043
    10. '   ' → logprob: -15.377833366394043

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022437504958361387
    2. '):
' → logprob: -6.502243518829346
    3. '):' → logprob: -8.002243995666504
    4. ',' → logprob: -9.252243995666504
    5. ':' → logprob: -9.377243995666504
    6. ')' → logprob: -9.377243995666504
    7. '   ' → logprob: -9.502243995666504
    8. '<|end|>' → logprob: -9.877243995666504
    9. ':
' → logprob: -12.502243995666504
    10. 'self' → logprob: -12.627243995666504

Token 212: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.13052336871623993
    2. ' self' → logprob: -2.130523443222046
    3. '       ' → logprob: -5.630523204803467
    4. 'string' → logprob: -14.005523681640625
    5. '   ' → logprob: -14.380523681640625
    6. '	self' → logprob: -14.755523681640625
    7. ' ' → logprob: -16.005523681640625
    8. ' string' → logprob: -16.630523681640625
    9. ' ' → logprob: -16.755523681640625
    10. '      ' → logprob: -17.380523681640625

Token 213: '.string' (ID: 8466)
  Prédit: '.string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.string' → logprob: -0.2031758725643158
    2. '.' → logprob: -1.7031759023666382
    3. ' string' → logprob: -6.703176021575928
    4. 'string' → logprob: -7.578176021575928
    5. ' .' → logprob: -11.57817554473877
    6. '.str' → logprob: -12.32817554473877
    7. '_string' → logprob: -12.45317554473877
    8. '	string' → logprob: -13.32817554473877
    9. ' ' → logprob: -14.57817554473877
    10. ',string' → logprob: -14.82817554473877

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3496769666671753
    2. '=' → logprob: -1.2246769666671753
    3. ',' → logprob: -6.849677085876465
    4. '<|end|>' → logprob: -9.349677085876465
    5. ' ' → logprob: -9.849677085876465
    6. ' ,' → logprob: -11.099677085876465
    7. ')' → logprob: -11.224677085876465
    8. '<|end|>' → logprob: -13.974677085876465
    9. ':' → logprob: -14.474677085876465
    10. ' =
' → logprob: -14.724677085876465

Token 215: ' string' (ID: 1621)
  Prédit: ' string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.31326204538345337
    2. 'string' → logprob: -1.3132619857788086
    3. '	string' → logprob: -16.188262939453125
    4. '
' → logprob: -16.938262939453125
    5. ' ' → logprob: -16.938262939453125
    6. '(string' → logprob: -17.188262939453125
    7. 's' → logprob: -17.188262939453125
    8. ' strings' → logprob: -17.563262939453125
    9. '_string' → logprob: -17.563262939453125
    10. ' 
' → logprob: -17.688262939453125

Token 216: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012296605564188212
    2. 'self' → logprob: -9.750123023986816
    3. ',' → logprob: -10.750123023986816
    4. '   ' → logprob: -11.000123023986816
    5. '
' → logprob: -11.000123023986816
    6. ' self' → logprob: -12.375123023986816
    7. '<|end|>' → logprob: -12.375123023986816
    8. ' ' → logprob: -14.625123023986816
    9. '        
' → logprob: -15.125123023986816
    10. ',
' → logprob: -15.500123023986816

Token 218: ' self' (ID: 1051)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.002917214762419462
    2. ' steps' → logprob: -5.877917289733887
    3. 'self' (adapté à ' self') → logprob: -9.127917289733887
    4. '       ' → logprob: -13.252917289733887
    5. 'step' → logprob: -14.002917289733887
    6. '   ' → logprob: -14.627917289733887
    7. ' self' → logprob: -14.752917289733887
    8. '.steps' → logprob: -16.25291633605957
    9. '
' → logprob: -16.62791633605957
    10. '_steps' → logprob: -17.62791633605957

Token 219: '.steps' (ID: 126813)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.181062713265419
    2. '_steps' → logprob: -1.9310626983642578
    3. ' steps' → logprob: -4.181062698364258
    4. '.steps' → logprob: -5.806062698364258
    5. '_' → logprob: -7.556062698364258
    6. ',' → logprob: -7.681062698364258
    7. '
' → logprob: -8.306062698364258
    8. '       ' → logprob: -9.056062698364258
    9. '   ' → logprob: -9.056062698364258
    10. 'Steps' → logprob: -9.181062698364258

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048597704619169235
    2. '=' → logprob: -3.048597812652588
    3. ' ' → logprob: -11.79859733581543
    4. '<|end|>' → logprob: -13.17359733581543
    5. ' +=' → logprob: -14.79859733581543
    6. ' =
' → logprob: -15.42359733581543
    7. '   ' → logprob: -16.04859733581543
    8. ',' → logprob: -17.29859733581543
    9. '<|end|>' → logprob: -17.29859733581543
    10. '       ' → logprob: -17.54859733581543

Token 221: ' steps' (ID: 10331)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.5759484171867371
    2. ' steps' → logprob: -0.8259484171867371
    3. '0' → logprob: -11.700948715209961
    4. 'step' → logprob: -14.450948715209961
    5. ' step' → logprob: -17.20094871520996
    6. ' ' → logprob: -17.20094871520996
    7. '_steps' → logprob: -18.07594871520996
    8. '1' → logprob: -18.57594871520996
    9. '.steps' → logprob: -18.57594871520996
    10. '   ' → logprob: -19.07594871520996

Token 222: '


' (ID: 2499)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.8586909174919128
    2. '
' → logprob: -0.9836909174919128
    3. '<|end|>' → logprob: -1.6086909770965576
    4. '<|end|>' → logprob: -6.4836907386779785
    5. '


' → logprob: -7.7336907386779785
    6. 'def' → logprob: -8.983691215515137
    7. '   ' → logprob: -9.858691215515137
    8. '



' → logprob: -11.358691215515137
    9. 'class' → logprob: -11.733691215515137
    10. ')' → logprob: -12.233691215515137

Token 223: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.03329673781991005
    2. 'def' → logprob: -3.533296823501587
    3. 'from' → logprob: -5.658296585083008
    4. '
' → logprob: -10.908296585083008
    5. ' class' → logprob: -11.033296585083008
    6. 'import' → logprob: -11.783296585083008
    7. '```' → logprob: -12.408296585083008
    8. 'c' → logprob: -14.158296585083008
    9. '<class' → logprob: -14.658296585083008
    10. ' from' → logprob: -14.783296585083008

Token 224: ' Sub' (ID: 5934)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -0.7832085490226746
    2. 'Solver' → logprob: -1.7832086086273193
    3. ' BFS' → logprob: -2.5332086086273193
    4. 'Transformation' → logprob: -2.7832086086273193
    5. 'Sub' → logprob: -3.1582086086273193
    6. ' Solver' → logprob: -3.5332086086273193
    7. 'B' → logprob: -3.5332086086273193
    8. ' Solution' → logprob: -3.7832086086273193
    9. 'Transformer' → logprob: -4.15820837020874
    10. 'String' → logprob: -4.15820837020874

Token 225: 'stitution' (ID: 20066)
  Prédit: 'stitution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stitution' → logprob: -0.0005014431662857533
    2. 'string' → logprob: -7.87550163269043
    3. 'sequence' → logprob: -10.00050163269043
    4. 'st' → logprob: -10.37550163269043
    5. 'stit' → logprob: -10.50050163269043
    6. 'stitute' → logprob: -12.25050163269043
    7. 'duction' → logprob: -13.00050163269043
    8. 'word' → logprob: -13.25050163269043
    9. 'rule' → logprob: -14.12550163269043
    10. 'station' → logprob: -14.25050163269043

Token 226: 'Solver' (ID: 70484)
  Prédit: 'System'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'System' → logprob: -0.687983512878418
    2. 'Solver' → logprob: -1.187983512878418
    3. 'Finder' → logprob: -2.687983512878418
    4. 'Engine' → logprob: -3.062983512878418
    5. 'Sequence' → logprob: -4.437983512878418
    6. 'Set' → logprob: -4.562983512878418
    7. 'Searcher' → logprob: -4.687983512878418
    8. 'Explorer' → logprob: -4.812983512878418
    9. 'Problem' → logprob: -5.062983512878418
    10. 'Search' → logprob: -5.687983512878418

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026310283690690994
    2. ':
' → logprob: -3.6513102054595947
    3. ' :' → logprob: -13.026309967041016
    4. ':def' → logprob: -13.151309967041016
    5. ':

' → logprob: -13.276309967041016
    6. '<|end|>' → logprob: -13.901309967041016
    7. '(object' → logprob: -14.526309967041016
    8. ' :
' → logprob: -14.526309967041016
    9. '(' → logprob: -14.651309967041016
    10. ':
' → logprob: -14.651309967041016

Token 228: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015312091272789985
    2. ' def' → logprob: -9.250153541564941
    3. 'def' → logprob: -9.875153541564941
    4. '```' → logprob: -13.000153541564941
    5. '    
' → logprob: -13.625153541564941
    6. '
' → logprob: -14.125153541564941
    7. '   ' → logprob: -15.250153541564941
    8. '	def' → logprob: -15.250153541564941
    9. ':' → logprob: -15.750153541564941
    10. '<|end|>' → logprob: -15.750153541564941

Token 229: ' MAX' (ID: 16960)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08067245781421661
    2. ' def' → logprob: -2.5806725025177
    3. '   ' → logprob: -6.330672264099121
    4. ' ' → logprob: -15.830672264099121
    5. '	def' → logprob: -16.205673217773438
    6. '```' → logprob: -17.330673217773438
    7. '  ' → logprob: -17.580673217773438
    8. 'class' → logprob: -17.705673217773438
    9. '__' → logprob: -17.705673217773438
    10. '    ' → logprob: -18.330673217773438

Token 230: '_ST' (ID: 4975)
  Prédit: '_ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ST' → logprob: -0.0007859219331294298
    2. '_DEPTH' → logprob: -7.250785827636719
    3. '_' → logprob: -10.250785827636719
    4. '_STEP' → logprob: -10.875785827636719
    5. 'ST' → logprob: -12.125785827636719
    6. '_ITER' → logprob: -12.750785827636719
    7. '_steps' → logprob: -12.875785827636719
    8. '_S' → logprob: -13.000785827636719
    9. '_MAX' → logprob: -13.250785827636719
    10. '_B' → logprob: -13.500785827636719

Token 231: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -3.976922744186595e-05
    2. 'EP' → logprob: -10.500040054321289
    3. 'E' → logprob: -11.500040054321289
    4. 'PS' → logprob: -14.125040054321289
    5. ' EPS' → logprob: -14.375040054321289
    6. '
' → logprob: -15.125040054321289
    7. 'eps' → logprob: -15.375040054321289
    8. '_eps' → logprob: -16.87504005432129
    9. '```' → logprob: -17.25004005432129
    10. '

' → logprob: -17.25004005432129

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018159780651330948
    2. '=' → logprob: -4.018159866333008
    3. '   ' → logprob: -11.893159866333008
    4. ' ' → logprob: -13.018159866333008
    5. '  ' → logprob: -14.768159866333008
    6. '    ' → logprob: -15.143159866333008
    7. ':' → logprob: -16.018159866333008
    8. '_' → logprob: -17.768159866333008
    9. ' =
' → logprob: -17.768159866333008
    10. ' :' → logprob: -18.018159866333008

Token 233: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2490970641374588
    2. '100' → logprob: -2.1240971088409424
    3. '20' → logprob: -2.6240971088409424
    4. ' ' → logprob: -3.6240971088409424
    5. '50' → logprob: -6.374096870422363
    6. '15' → logprob: -10.624096870422363
    7. '30' → logprob: -10.874096870422363
    8. '5' → logprob: -11.624096870422363
    9. '  ' → logprob: -11.999096870422363
    10. '25' → logprob: -12.374096870422363

Token 234: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018632246181368828
    2. '100' → logprob: -4.518632411956787
    3. '20' → logprob: -4.893632411956787
    4. '50' → logprob: -9.893631935119629
    5. '15' → logprob: -11.893631935119629
    6. '30' → logprob: -13.518631935119629
    7. '5' → logprob: -13.518631935119629
    8. '25' → logprob: -14.018631935119629
    9. ' ' → logprob: -14.768631935119629
    10. '40' → logprob: -15.768631935119629

Token 235: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.371033638715744
    2. '
' → logprob: -1.2460336685180664
    3. '    
' → logprob: -3.9960336685180664
    4. 'def' → logprob: -5.871033668518066
    5. '<|end|>' → logprob: -7.746033668518066
    6. '0' → logprob: -8.371033668518066
    7. ' def' → logprob: -8.621033668518066
    8. '        
' → logprob: -9.871033668518066
    9. ' 
' → logprob: -9.996033668518066
    10. '  
' → logprob: -10.496033668518066

Token 236: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3214220702648163
    2. '
' → logprob: -1.4464221000671387
    3. 'def' → logprob: -3.4464221000671387
    4. ' def' → logprob: -5.446422100067139
    5. '    
' → logprob: -5.821422100067139
    6. '

' → logprob: -9.57142162322998
    7. ' ' → logprob: -9.69642162322998
    8. '<|end|>' → logprob: -10.07142162322998
    9. ',' → logprob: -10.32142162322998
    10. '  
' → logprob: -10.57142162322998

Token 237: ' safety' (ID: 9246)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.047230374068021774
    2. 'def' → logprob: -3.2972304821014404
    3. ' 
' → logprob: -5.797230243682861
    4. '
' → logprob: -6.172230243682861
    5. ' ' → logprob: -6.172230243682861
    6. '100' → logprob: -7.547230243682861
    7. '  
' → logprob: -8.04723072052002
    8. '   ' → logprob: -8.67223072052002
    9. ' 

' → logprob: -8.79723072052002
    10. '    ' → logprob: -8.79723072052002

Token 238: ' limit' (ID: 5967)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.49065101146698
    2. '_limit' → logprob: -1.49065101146698
    3. '    
' → logprob: -1.61565101146698
    4. ' limit' → logprob: -2.2406511306762695
    5. 'limit' → logprob: -2.6156511306762695
    6. '_threshold' → logprob: -3.4906511306762695
    7. '_LIMIT' → logprob: -3.4906511306762695
    8. '
' → logprob: -3.8656511306762695
    9. '_' → logprob: -4.2406511306762695
    10. '  
' → logprob: -4.3656511306762695

Token 239: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6256067752838135
    2. '   ' → logprob: -0.8756067752838135
    3. '<|end|>' → logprob: -3.8756067752838135
    4. 'def' → logprob: -4.250606536865234
    5. ' def' → logprob: -5.000606536865234
    6. '    
' → logprob: -5.625606536865234
    7. '<|end|>' → logprob: -6.625606536865234
    8. ' ' → logprob: -7.750606536865234
    9. '  
' → logprob: -7.875606536865234
    10. ',' → logprob: -7.875606536865234

Token 240: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00888081081211567
    2. 'def' → logprob: -4.758880615234375
    3. ' def' → logprob: -8.383880615234375
    4. '
' → logprob: -10.633880615234375
    5. '    
' → logprob: -11.508880615234375
    6. ',' → logprob: -13.883880615234375
    7. ')' → logprob: -14.008880615234375
    8. '	def' → logprob: -14.258880615234375
    9. ':' → logprob: -15.133880615234375
    10. '```' → logprob: -15.883880615234375

Token 241: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.65101717156358e-05
    2. ' def' → logprob: -9.250096321105957
    3. '   ' → logprob: -14.750096321105957
    4. 'de' → logprob: -17.875097274780273
    5. 'from' → logprob: -18.250097274780273
    6. '
' → logprob: -19.375097274780273
    7. ' ' → logprob: -19.875097274780273
    8. 'class' → logprob: -20.875097274780273
    9. '	def' → logprob: -21.250097274780273
    10. '  ' → logprob: -21.750097274780273

Token 242: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02045055665075779
    2. ' def' → logprob: -4.020450592041016
    3. '__' → logprob: -6.520450592041016
    4. ' find' → logprob: -7.895450592041016
    5. ' solve' → logprob: -8.020450592041016
    6. 'def' → logprob: -9.145450592041016
    7. 'solve' → logprob: -11.645450592041016
    8. 'find' → logprob: -12.770450592041016
    9. ' ' → logprob: -13.020450592041016
    10. ' ' → logprob: -13.770450592041016

Token 243: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -16.75
    3. 'def' → logprob: -18.375
    4. '__' → logprob: -18.875
    5. '_init' → logprob: -19.5
    6. 'new' → logprob: -19.5
    7. '   ' → logprob: -19.5
    8. '```' → logprob: -19.875
    9. 'call' → logprob: -20.125
    10. '  ' → logprob: -20.875

Token 244: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04347924143075943
    2. '__(' → logprob: -3.1684792041778564
    3. '(' → logprob: -8.043478965759277
    4. ' (' → logprob: -9.293478965759277
    5. '__(
' → logprob: -11.043478965759277
    6. 'self' → logprob: -11.418478965759277
    7. '__' → logprob: -11.668478965759277
    8. ')(' → logprob: -11.918478965759277
    9. ' ' → logprob: -12.293478965759277
    10. ',' → logprob: -12.418478965759277

Token 245: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.194110756041482e-05
    2. ' self' → logprob: -10.000061988830566
    3. '
' → logprob: -11.125061988830566
    4. ')' → logprob: -14.625061988830566
    5. '   ' → logprob: -14.625061988830566
    6. ',' → logprob: -14.750061988830566
    7. '(self' → logprob: -15.125061988830566
    8. ')
' → logprob: -17.37506103515625
    9. '):
' → logprob: -17.62506103515625
    10. ')(' → logprob: -18.25006103515625

Token 246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004432016983628273
    2. 'self' → logprob: -5.504432201385498
    3. ' ,' → logprob: -8.00443172454834
    4. ' self' → logprob: -12.00443172454834
    5. '(self' → logprob: -12.37943172454834
    6. ',self' → logprob: -12.87943172454834
    7. ')' → logprob: -13.00443172454834
    8. ',
' → logprob: -13.25443172454834
    9. '):
' → logprob: -13.75443172454834
    10. '   ' → logprob: -14.75443172454834

Token 247: ' substitution' (ID: 92838)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.05324616655707359
    2. 'start' → logprob: -3.803246259689331
    3. ' substitution' → logprob: -4.678246021270752
    4. 'initial' → logprob: -5.053246021270752
    5. 'rules' → logprob: -5.303246021270752
    6. 'self' → logprob: -5.553246021270752
    7. 'target' → logprob: -6.303246021270752
    8. ' start' → logprob: -7.178246021270752
    9. 'subst' → logprob: -7.178246021270752
    10. 'subs' → logprob: -7.428246021270752

Token 248: '_set' (ID: 5451)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7987865209579468
    2. '_set' → logprob: -0.7987865209579468
    3. '_rules' → logprob: -2.5487866401672363
    4. 'Set' → logprob: -4.048786640167236
    5. '_sets' → logprob: -6.048786640167236
    6. 'set' → logprob: -6.673786640167236
    7. 'rules' → logprob: -7.173786640167236
    8. 'Rules' → logprob: -8.673786163330078
    9. '_s' → logprob: -10.798786163330078
    10. ' rules' → logprob: -11.048786163330078

Token 249: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3226257264614105
    2. '):' → logprob: -1.322625756263733
    3. ',' → logprob: -4.822625637054443
    4. '):
' → logprob: -7.322625637054443
    5. ' :' → logprob: -7.822625637054443
    6. ' ):' → logprob: -8.697626113891602
    7. '}:' → logprob: -11.322626113891602
    8. '   ' → logprob: -11.447626113891602
    9. ')' → logprob: -11.697626113891602
    10. ' ' → logprob: -12.322626113891602

Token 250: ' Sub' (ID: 5934)
  Prédit: 'Sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sub' → logprob: -0.4741261601448059
    2. ' Sub' → logprob: -0.9741261601448059
    3. '_sub' → logprob: -10.599125862121582
    4. 'sub' → logprob: -11.349125862121582
    5. '_Sub' → logprob: -12.599125862121582
    6. '):
' → logprob: -12.724125862121582
    7. '(Sub' → logprob: -13.349125862121582
    8. ')' → logprob: -13.474125862121582
    9. 'Subclass' → logprob: -14.099125862121582
    10. '-sub' → logprob: -14.349125862121582

Token 251: 'stitution' (ID: 20066)
  Prédit: 'stitution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stitution' → logprob: -1.7120533811976202e-05
    2. 'st' → logprob: -11.750017166137695
    3. 'stit' → logprob: -12.250017166137695
    4. 'utation' → logprob: -13.750017166137695
    5. 'ution' → logprob: -14.500017166137695
    6. ')' → logprob: -14.500017166137695
    7. 'ust' → logprob: -14.750017166137695
    8. 'istit' → logprob: -14.875017166137695
    9. 'ist' → logprob: -15.125017166137695
    10. 'tit' → logprob: -15.500017166137695

Token 252: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -7.672236824873835e-05
    2. 'set' → logprob: -9.875076293945312
    3. 'Rule' → logprob: -10.875076293945312
    4. '_set' → logprob: -12.875076293945312
    5. 'Rules' → logprob: -13.750076293945312
    6. '):
' → logprob: -14.375076293945312
    7. ' set' → logprob: -14.500076293945312
    8. ')' → logprob: -14.625076293945312
    9. 'et' → logprob: -15.000076293945312
    10. 'Sets' → logprob: -15.750076293945312

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13471317291259766
    2. '):
' → logprob: -2.3847131729125977
    3. '):' → logprob: -3.3847131729125977
    4. '   ' → logprob: -11.384713172912598
    5. ' ,' → logprob: -11.884713172912598
    6. '):
' → logprob: -12.009713172912598
    7. '):

' → logprob: -13.384713172912598
    8. ')' → logprob: -13.634713172912598
    9. '       ' → logprob: -13.759713172912598
    10. ',
' → logprob: -14.259713172912598

Token 254: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4784207344055176
    2. ' start' → logprob: -1.9784207344055176
    3. 'initial' → logprob: -2.3534207344055176
    4. 'target' → logprob: -2.3534207344055176
    5. ' initial' → logprob: -3.6034207344055176
    6. ' target' → logprob: -3.7284207344055176
    7. 'source' → logprob: -8.85342025756836
    8. 'goal' → logprob: -9.10342025756836
    9. 'starting' → logprob: -9.60342025756836
    10. 'max' → logprob: -9.72842025756836

Token 255: ':' (ID: 25)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.00644889660179615
    2. ':' → logprob: -5.131448745727539
    3. '_str' → logprob: -8.756448745727539
    4. '_' → logprob: -9.006448745727539
    5. ',' → logprob: -9.131448745727539
    6. 'string' → logprob: -9.881448745727539
    7. '_:' → logprob: -10.131448745727539
    8. '_state' → logprob: -10.756448745727539
    9. ' string' → logprob: -12.881448745727539
    10. '):' → logprob: -12.881448745727539

Token 256: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.062218520790338516
    2. ' str' → logprob: -2.812218427658081
    3. ':str' → logprob: -9.06221866607666
    4. '):
' → logprob: -9.81221866607666
    5. ':' → logprob: -10.81221866607666
    6. ')' → logprob: -11.18721866607666
    7. '[str' → logprob: -11.43721866607666
    8. ',' → logprob: -11.56221866607666
    9. '_str' → logprob: -11.56221866607666
    10. 's' → logprob: -12.31221866607666

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01633792370557785
    2. '):
' → logprob: -4.266337871551514
    3. '):' → logprob: -6.141337871551514
    4. ' ,' → logprob: -11.141338348388672
    5. '):

' → logprob: -13.516338348388672
    6. '   ' → logprob: -13.516338348388672
    7. '):
' → logprob: -13.891338348388672
    8. ',
' → logprob: -14.141338348388672
    9. '       ' → logprob: -14.891338348388672
    10. ')' → logprob: -15.141338348388672

Token 258: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.3989056348800659
    2. ' target' → logprob: -1.898905634880066
    3. 'goal' → logprob: -2.0239057540893555
    4. ' goal' → logprob: -3.5239057540893555
    5. 'end' → logprob: -4.1489057540893555
    6. ' end' → logprob: -6.3989057540893555
    7. '   ' → logprob: -10.398905754089355
    8. ' ' → logprob: -10.523905754089355
    9. '  ' → logprob: -11.398905754089355
    10. 'stop' → logprob: -11.648905754089355

Token 259: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000122608442325145
    2. ':str' → logprob: -9.250123023986816
    3. '):' → logprob: -10.875123023986816
    4. ' :' → logprob: -11.875123023986816
    5. '):
' → logprob: -14.625123023986816
    6. ' ):' → logprob: -17.7501220703125
    7. '_:' → logprob: -17.7501220703125
    8. '   ' → logprob: -18.1251220703125
    9. ':string' → logprob: -18.1251220703125
    10. ',' → logprob: -18.5001220703125

Token 260: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.16023509204387665
    2. ' str' → logprob: -1.910235047340393
    3. ')' → logprob: -12.410235404968262
    4. '[str' → logprob: -12.535235404968262
    5. '	str' → logprob: -14.035235404968262
    6. ':str' → logprob: -14.535235404968262
    7. ' ' → logprob: -14.910235404968262
    8. '):
' → logprob: -14.910235404968262
    9. '(str' → logprob: -15.160235404968262
    10. 's' → logprob: -15.285235404968262

Token 261: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07891115546226501
    2. '):
' → logprob: -2.578911066055298
    3. '   ' → logprob: -11.828910827636719
    4. ')' → logprob: -12.203910827636719
    5. '):
' → logprob: -13.078910827636719
    6. ' ):' → logprob: -13.078910827636719
    7. ':' → logprob: -13.203910827636719
    8. ',' → logprob: -13.328910827636719
    9. '       ' → logprob: -14.078910827636719
    10. ' ):
' → logprob: -15.078910827636719

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.542423165636137e-05
    2. 'self' → logprob: -9.500085830688477
    3. ' self' → logprob: -12.250085830688477
    4. '
' → logprob: -12.750085830688477
    5. '   ' → logprob: -13.750085830688477
    6. '```' → logprob: -14.625085830688477
    7. '	' → logprob: -14.875085830688477
    8. ',' → logprob: -15.000085830688477
    9. '        
' → logprob: -15.500085830688477
    10. '	   ' → logprob: -16.500085830688477

Token 263: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.025134040042757988
    2. '       ' → logprob: -3.7751340866088867
    3. ' self' → logprob: -6.275134086608887
    4. '   ' → logprob: -12.525134086608887
    5. '	self' → logprob: -15.150134086608887
    6. 'def' → logprob: -15.775134086608887
    7. ' ' → logprob: -16.77513313293457
    8. '(self' → logprob: -17.40013313293457
    9. 'import' → logprob: -17.52513313293457
    10. '     ' → logprob: -18.90013313293457

Token 264: '.sub' (ID: 7619)
  Prédit: '.sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sub' → logprob: -0.001068654702976346
    2. ' .' → logprob: -7.251068592071533
    3. '.start' → logprob: -8.501069068908691
    4. '.' → logprob: -9.126069068908691
    5. 'sub' → logprob: -10.626069068908691
    6. '.subscription' → logprob: -11.501069068908691
    7. '.s' → logprob: -12.376069068908691
    8. '	sub' → logprob: -13.876069068908691
    9. '.target' → logprob: -14.001069068908691
    10. '.substr' → logprob: -14.126069068908691

Token 265: 'stitution' (ID: 20066)
  Prédit: 'stitution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stitution' → logprob: -2.45848218582978e-06
    2. 'st' → logprob: -13.37500286102295
    3. 'stit' → logprob: -14.75000286102295
    4. '_' → logprob: -15.75000286102295
    5. 'station' → logprob: -16.250001907348633
    6. 'stitute' → logprob: -16.625001907348633
    7. 'tit' → logprob: -17.875001907348633
    8. 'struction' → logprob: -18.000001907348633
    9. 'set' → logprob: -18.125001907348633
    10. '_set' → logprob: -18.250001907348633

Token 266: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -9.245724504580721e-05
    2. 'set' → logprob: -9.375092506408691
    3. 's' → logprob: -12.125092506408691
    4. '_sets' → logprob: -13.500092506408691
    5. 'Set' → logprob: -14.875092506408691
    6. '_' → logprob: -15.375092506408691
    7. '   ' → logprob: -17.000091552734375
    8. '_list' → logprob: -17.125091552734375
    9. '_s' → logprob: -17.375091552734375
    10. ' set' → logprob: -17.625091552734375

Token 267: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.100211963057518
    2. '=' → logprob: -2.3502118587493896
    3. '   ' → logprob: -12.975212097167969
    4. ' ' → logprob: -13.475212097167969
    5. '=sub' → logprob: -13.975212097167969
    6. '  ' → logprob: -15.350212097167969
    7. ',' → logprob: -15.350212097167969
    8. '    ' → logprob: -16.47521209716797
    9. ')' → logprob: -17.10021209716797
    10. '
' → logprob: -17.72521209716797

Token 268: ' substitution' (ID: 92838)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.0789095088839531
    2. ' substitution' → logprob: -2.578909397125244
    3. ' sub' → logprob: -11.078909873962402
    4. '	sub' → logprob: -13.578909873962402
    5. 'subst' → logprob: -14.578909873962402
    6. '(sub' → logprob: -14.578909873962402
    7. '.sub' → logprob: -14.703909873962402
    8. ' substitute' → logprob: -15.078909873962402
    9. 'submission' → logprob: -15.078909873962402
    10. 'subs' → logprob: -15.203909873962402

Token 269: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -0.00017278951418120414
    2. 'set' → logprob: -8.87517261505127
    3. 'Set' → logprob: -10.37517261505127
    4. 'et' → logprob: -13.87517261505127
    5. 's' → logprob: -14.87517261505127
    6. '_' → logprob: -15.75017261505127
    7. '_sets' → logprob: -16.625173568725586
    8. ' set' → logprob: -17.500173568725586
    9. '_SET' → logprob: -17.500173568725586
    10. '
' → logprob: -17.625173568725586

Token 270: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001737431448418647
    2. 'self' → logprob: -8.750173568725586
    3. ',' → logprob: -11.875173568725586
    4. ' self' → logprob: -12.125173568725586
    5. '
' → logprob: -13.125173568725586
    6. '   ' → logprob: -15.000173568725586
    7. '<|end|>' → logprob: -15.500173568725586
    8. ' ' → logprob: -16.625173568725586
    9. '```' → logprob: -16.625173568725586
    10. '           ' → logprob: -17.000173568725586

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006152157671749592
    2. 'self' → logprob: -5.131152153015137
    3. '
' → logprob: -8.756152153015137
    4. ' self' → logprob: -9.881152153015137
    5. '   ' → logprob: -11.506152153015137
    6. ',' → logprob: -12.881152153015137
    7. '	self' → logprob: -14.381152153015137
    8. ' ' → logprob: -15.256152153015137
    9. '	' → logprob: -15.506152153015137
    10. '           ' → logprob: -15.756152153015137

Token 272: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.004630076698958874
    2. ' self' → logprob: -5.504630088806152
    3. '       ' → logprob: -7.504630088806152
    4. 'start' → logprob: -14.629630088806152
    5. '   ' → logprob: -15.129630088806152
    6. '	self' → logprob: -16.129629135131836
    7. '
' → logprob: -16.504629135131836
    8. ' ' → logprob: -17.254629135131836
    9. '(self' → logprob: -18.504629135131836
    10. '     ' → logprob: -18.629629135131836

Token 273: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.0039454177021980286
    2. '.' → logprob: -5.753945350646973
    3. 'start' → logprob: -7.378945350646973
    4. ' .' → logprob: -9.628945350646973
    5. '.target' → logprob: -9.753945350646973
    6. ' start' → logprob: -11.128945350646973
    7. '_start' → logprob: -13.003945350646973
    8. '.current' → logprob: -13.878945350646973
    9. '.Start' → logprob: -15.378945350646973
    10. 'Start' → logprob: -15.628945350646973

Token 274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4303112328052521
    2. ' =' → logprob: -1.0553112030029297
    3. '<|end|>' → logprob: -7.05531120300293
    4. ',' → logprob: -8.55531120300293
    5. 'string' → logprob: -8.93031120300293
    6. '_' → logprob: -9.05531120300293
    7. '_string' → logprob: -9.30531120300293
    8. ')' → logprob: -9.43031120300293
    9. ' ' → logprob: -10.68031120300293
    10. '       ' → logprob: -10.80531120300293

Token 275: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.2014193832874298
    2. 'start' → logprob: -1.7014193534851074
    3. ' ' → logprob: -12.951419830322266
    4. 'target' → logprob: -14.076419830322266
    5. ' ' → logprob: -14.451419830322266
    6. ' 
' → logprob: -14.576419830322266
    7. '"' → logprob: -14.701419830322266
    8. '[start' → logprob: -15.201419830322266
    9. ' target' → logprob: -15.326419830322266
    10. '
' → logprob: -15.326419830322266

Token 276: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005234848940744996
    2. '
' → logprob: -7.875523567199707
    3. 'self' → logprob: -9.375523567199707
    4. ',' → logprob: -10.125523567199707
    5. '<|end|>' → logprob: -11.500523567199707
    6. ',
' → logprob: -13.375523567199707
    7. '        
' → logprob: -13.500523567199707
    8. ' self' → logprob: -13.625523567199707
    9. '           ' → logprob: -14.000523567199707
    10. '      ' → logprob: -14.250523567199707

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003629527287557721
    2. 'self' → logprob: -5.628629684448242
    3. ' self' → logprob: -10.753629684448242
    4. '
' → logprob: -12.003629684448242
    5. '   ' → logprob: -14.003629684448242
    6. ',' → logprob: -14.878629684448242
    7. '           ' → logprob: -14.878629684448242
    8. '	self' → logprob: -16.253629684448242
    9. '        
' → logprob: -16.503629684448242
    10. '      ' → logprob: -16.503629684448242

Token 278: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0017925129504874349
    2. ' self' → logprob: -6.5017924308776855
    3. '       ' → logprob: -8.251792907714844
    4. '
' → logprob: -10.501792907714844
    5. '   ' → logprob: -13.626792907714844
    6. 'target' → logprob: -14.626792907714844
    7. '        
' → logprob: -16.751792907714844
    8. '           ' → logprob: -17.251792907714844
    9. '     ' → logprob: -17.501792907714844
    10. '	self' → logprob: -17.626792907714844

Token 279: '.target' (ID: 11090)
  Prédit: '.target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -0.09087255597114563
    2. '.' → logprob: -2.9658725261688232
    3. '=' → logprob: -3.9658725261688232
    4. 'target' → logprob: -4.465872764587402
    5. '_target' → logprob: -5.840872764587402
    6. ' =' → logprob: -6.590872764587402
    7. ' target' → logprob: -8.465872764587402
    8. ',' → logprob: -9.215872764587402
    9. '.
' → logprob: -9.840872764587402
    10. '.start' → logprob: -9.965872764587402

Token 280: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.25193002820014954
    2. 'target' → logprob: -1.5019299983978271
    3. '(target' → logprob: -14.376930236816406
    4. '	target' → logprob: -16.126930236816406
    5. ' ' → logprob: -16.376930236816406
    6. '[target' → logprob: -17.376930236816406
    7. ' ' → logprob: -17.501930236816406
    8. '_target' → logprob: -17.501930236816406
    9. ',target' → logprob: -18.501930236816406
    10. 'start' → logprob: -18.626930236816406

Token 282: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8930156826972961
    2. '   ' → logprob: -1.3930156230926514
    3. '<|end|>' → logprob: -1.6430156230926514
    4. '       ' → logprob: -2.0180156230926514
    5. 'def' → logprob: -5.2680158615112305
    6. '    
' → logprob: -5.5180158615112305
    7. '<|end|>' → logprob: -5.6430158615112305
    8. '        
' → logprob: -6.2680158615112305
    9. ' def' → logprob: -7.8930158615112305
    10. ',' → logprob: -8.14301586151123

Token 283: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6437869668006897
    2. '
' → logprob: -0.7687869668006897
    3. 'def' → logprob: -4.643786907196045
    4. '       ' → logprob: -7.768786907196045
    5. '<|end|>' → logprob: -8.018787384033203
    6. ' def' → logprob: -8.143787384033203
    7. '    
' → logprob: -8.518787384033203
    8. '

' → logprob: -9.643787384033203
    9. '```' → logprob: -9.768787384033203
    10. '        
' → logprob: -10.143787384033203

Token 284: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015430726343765855
    2. ' def' → logprob: -6.501543045043945
    3. '   ' → logprob: -10.126543045043945
    4. 'de' → logprob: -14.626543045043945
    5. 'd' → logprob: -15.876543045043945
    6. '	def' → logprob: -16.126543045043945
    7. '
' → logprob: -16.376543045043945
    8. '```' → logprob: -17.751543045043945
    9. '    
' → logprob: -18.501543045043945
    10. ' ' → logprob: -19.126543045043945

Token 285: ' minimum' (ID: 11085)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.5769356489181519
    2. 'solve' → logprob: -0.8269356489181519
    3. ' find' → logprob: -7.826935768127441
    4. 'def' → logprob: -8.326935768127441
    5. ' bfs' → logprob: -8.576935768127441
    6. 'b' → logprob: -9.326935768127441
    7. 'find' → logprob: -10.201935768127441
    8. ' def' → logprob: -10.576935768127441
    9. ' run' → logprob: -12.201935768127441
    10. 'search' → logprob: -13.076935768127441

Token 286: '_sub' (ID: 11572)
  Prédit: '_steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_steps' → logprob: -0.001154270488768816
    2. '_' → logprob: -7.12615442276001
    3. '_distance' → logprob: -9.501153945922852
    4. '_step' → logprob: -9.501153945922852
    5. '_moves' → logprob: -9.751153945922852
    6. '_solution' → logprob: -10.001153945922852
    7. '_transform' → logprob: -10.126153945922852
    8. '_trans' → logprob: -10.501153945922852
    9. '_number' → logprob: -12.126153945922852
    10. '_length' → logprob: -12.251153945922852

Token 287: 'stit' (ID: 5028)
  Prédit: 'stitution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stitution' → logprob: -0.017067452892661095
    2. 'stit' → logprob: -5.0170674324035645
    3. '_steps' → logprob: -5.8920674324035645
    4. 'sequence' → logprob: -6.1420674324035645
    5. 'steps' → logprob: -6.1420674324035645
    6. 'se' → logprob: -6.8920674324035645
    7. 'string' → logprob: -7.2670674324035645
    8. 'st' → logprob: -7.7670674324035645
    9. '_sequence' → logprob: -8.017067909240723
    10. '_' → logprob: -8.517067909240723

Token 288: 'utions' (ID: 5773)
  Prédit: 'utions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utions' → logprob: -0.14337825775146484
    2. 'ution' → logprob: -2.018378257751465
    3. 'ions' → logprob: -8.143378257751465
    4. 'u' → logprob: -9.643378257751465
    5. 'ut' → logprob: -9.643378257751465
    6. 'utations' → logprob: -10.018378257751465
    7. 'ute' → logprob: -10.143378257751465
    8. 'uctions' → logprob: -10.268378257751465
    9. 'e' → logprob: -10.393378257751465
    10. 'tion' → logprob: -11.393378257751465

Token 289: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0016439995961263776
    2. '(' → logprob: -6.501644134521484
    3. ' (' → logprob: -8.876644134521484
    4. '(s' → logprob: -13.251644134521484
    5. 'self' → logprob: -16.001644134521484
    6. '(
' → logprob: -16.126644134521484
    7. '   ' → logprob: -17.501644134521484
    8. '(se' → logprob: -17.501644134521484
    9. '(sel' → logprob: -17.626644134521484
    10. ' ' → logprob: -17.876644134521484

Token 290: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.30765047669410706
    2. ',' → logprob: -1.4326504468917847
    3. ')(' → logprob: -5.057650566101074
    4. '(' → logprob: -5.307650566101074
    5. 'self' → logprob: -5.307650566101074
    6. ')' → logprob: -5.432650566101074
    7. ' (' → logprob: -5.557650566101074
    8. ' ,' → logprob: -7.557650566101074
    9. '):' → logprob: -8.057650566101074
    10. '   ' → logprob: -9.182650566101074

Token 291: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01918485201895237
    2. '(' → logprob: -4.0191850662231445
    3. ':' → logprob: -7.1441850662231445
    4. ' ->' → logprob: -9.269185066223145
    5. '(
' → logprob: -10.019185066223145
    6. '->' → logprob: -10.144185066223145
    7. 'self' → logprob: -10.894185066223145
    8. ' (' → logprob: -11.269185066223145
    9. '(s' → logprob: -11.394185066223145
    10. '():' → logprob: -11.644185066223145

Token 292: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0011743901995941997
    2. ' int' → logprob: -6.751174449920654
    3. 'Optional' → logprob: -13.126173973083496
    4. '(int' → logprob: -13.376173973083496
    5. '[int' → logprob: -14.626173973083496
    6. ' Optional' → logprob: -16.626174926757812
    7. 'None' → logprob: -17.626174926757812
    8. '	int' → logprob: -17.876174926757812
    9. '   ' → logprob: -18.001174926757812
    10. ' ' → logprob: -18.126174926757812

Token 293: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.045994751155376434
    2. ':
' → logprob: -3.170994758605957
    3. '       ' → logprob: -6.420994758605957
    4. '(self' → logprob: -6.795994758605957
    5. '(' → logprob: -9.420994758605957
    6. '):
' → logprob: -9.920994758605957
    7. '   ' → logprob: -10.545994758605957
    8. '):' → logprob: -10.670994758605957
    9. '():' → logprob: -10.795994758605957
    10. 'self' → logprob: -11.545994758605957

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.911954500945285e-05
    2. '```' → logprob: -9.500088691711426
    3. ' queue' → logprob: -12.000088691711426
    4. 'visited' → logprob: -12.750088691711426
    5. ' visited' → logprob: -13.375088691711426
    6. 'queue' → logprob: -14.000088691711426
    7. 'from' → logprob: -14.250088691711426
    8. '
' → logprob: -14.500088691711426
    9. '   ' → logprob: -14.625088691711426
    10. ' from' → logprob: -14.750088691711426

Token 295: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.0004014753212686628
    2. ' from' → logprob: -8.000401496887207
    3. 'visited' → logprob: -10.250401496887207
    4. '       ' → logprob: -10.500401496887207
    5. 'queue' → logprob: -13.250401496887207
    6. '```' → logprob: -13.625401496887207
    7. 'import' → logprob: -16.50040054321289
    8. '
' → logprob: -17.12540054321289
    9. 'seen' → logprob: -18.25040054321289
    10. '	from' → logprob: -18.25040054321289

Token 296: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.1002068892121315
    2. 'collections' → logprob: -2.3502068519592285
    3. ' queue' → logprob: -15.100207328796387
    4. 'queue' → logprob: -17.35020637512207
    5. 'Collections' → logprob: -18.60020637512207
    6. 'collection' → logprob: -19.85020637512207
    7. '.collections' → logprob: -19.85020637512207
    8. '_' → logprob: -20.22520637512207
    9. ' collection' → logprob: -20.35020637512207
    10. '```' → logprob: -20.35020637512207

Token 297: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.026357311755418777
    2. 'deque' → logprob: -4.901357173919678
    3. 'queue' → logprob: -5.151357173919678
    4. ' import' → logprob: -5.276357173919678
    5. 'n' → logprob: -5.651357173919678
    6. 'd' → logprob: -6.776357173919678
    7. 'on' → logprob: -7.526357173919678
    8. 't' → logprob: -7.651357173919678
    9. 'port' → logprob: -8.151357650756836
    10. 'de' → logprob: -8.401357650756836

Token 298: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.01815907657146454
    2. ' deque' → logprob: -4.018158912658691
    3. 'de' → logprob: -11.643158912658691
    4. '```' → logprob: -15.143158912658691
    5. 'collections' → logprob: -16.518159866333008
    6. 'Deque' → logprob: -18.018159866333008
    7. '
' → logprob: -18.518159866333008
    8. '.de' → logprob: -18.893159866333008
    9. 'd' → logprob: -19.268159866333008
    10. 'queue' → logprob: -19.393159866333008

Token 299: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0011033025803044438
    2. '       ' → logprob: -7.501103401184082
    3. '        
' → logprob: -8.001103401184082
    4. ' queue' → logprob: -10.001103401184082
    5. 'queue' → logprob: -10.126103401184082
    6. '' → logprob: -10.626103401184082
    7. '
' → logprob: -10.751103401184082
    8. ' 
' → logprob: -11.126103401184082
    9. '  
' → logprob: -11.251103401184082
    10. '    
' → logprob: -11.626103401184082

Token 300: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006188060622662306
    2. '       ' → logprob: -5.131187915802002
    3. '        
' → logprob: -8.63118839263916
    4. ' queue' → logprob: -10.63118839263916
    5. 'queue' → logprob: -10.75618839263916
    6. ' 
' → logprob: -11.63118839263916
    7. '

' → logprob: -12.13118839263916
    8. '  
' → logprob: -12.38118839263916
    9. '    
' → logprob: -12.50618839263916
    10. 'q' → logprob: -13.13118839263916

Token 301: ' visited' (ID: 18416)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.048780959099531174
    2. 'visited' (adapté à ' visited') → logprob: -3.048780918121338
    3. ' queue' → logprob: -8.798781394958496
    4. ' visited' → logprob: -10.548781394958496
    5. '   ' → logprob: -11.673781394958496
    6. '       ' → logprob: -12.673781394958496
    7. '```' → logprob: -13.048781394958496
    8. '        
' → logprob: -13.798781394958496
    9. 'deque' → logprob: -14.673781394958496
    10. '
' → logprob: -15.048781394958496

Token 302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024763736873865128
    2. '=' → logprob: -6.002476215362549
    3. '=set' → logprob: -14.252476692199707
    4. ',' → logprob: -18.25247573852539
    5. ' ' → logprob: -18.37747573852539
    6. ':' → logprob: -18.87747573852539
    7. ' ={' → logprob: -18.87747573852539
    8. ' ' → logprob: -19.75247573852539
    9. ')' → logprob: -20.37747573852539
    10. 's' → logprob: -20.62747573852539

Token 303: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6389119625091553
    2. ' {' → logprob: -1.3889119625091553
    3. 'set' → logprob: -1.8889119625091553
    4. ' set' → logprob: -2.6389119625091553
    5. '{s' → logprob: -9.513912200927734
    6. '=set' → logprob: -10.888912200927734
    7. '{sub' → logprob: -11.763912200927734
    8. '	set' → logprob: -12.513912200927734
    9. '   ' → logprob: -13.138912200927734
    10. ' ' → logprob: -13.513912200927734

Token 304: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.32199475169181824
    2. '()' → logprob: -1.3219947814941406
    3. '([' → logprob: -4.821994781494141
    4. '([(' → logprob: -8.19699478149414
    5. '(['' → logprob: -9.94699478149414
    6. '       ' → logprob: -9.94699478149414
    7. '(' → logprob: -10.07199478149414
    8. '([
' → logprob: -10.07199478149414
    9. '()

' → logprob: -10.19699478149414
    10. '(queue' → logprob: -10.44699478149414

Token 305: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016887469682842493
    2. '
' → logprob: -7.1266889572143555
    3. 'queue' → logprob: -7.5016889572143555
    4. ' queue' → logprob: -8.376688957214355
    5. '        
' → logprob: -9.501688957214355
    6. '```' → logprob: -11.376688957214355
    7. '	queue' → logprob: -12.876688957214355
    8. 'deque' → logprob: -13.001688957214355
    9. '   ' → logprob: -13.376688957214355
    10. '(queue' → logprob: -13.751688957214355

Token 306: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.20449981093406677
    2. ' queue' → logprob: -1.7044998407363892
    3. '       ' → logprob: -5.8294997215271
    4. '
' → logprob: -9.329500198364258
    5. '```' → logprob: -10.829500198364258
    6. 'deque' → logprob: -11.204500198364258
    7. 'q' → logprob: -11.329500198364258
    8. '        
' → logprob: -12.954500198364258
    9. 'que' → logprob: -13.579500198364258
    10. '	queue' → logprob: -13.954500198364258

Token 307: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03990106284618378
    2. '=' → logprob: -3.2899010181427
    3. '.append' → logprob: -7.039901256561279
    4. '(' → logprob: -7.664901256561279
    5. '.' → logprob: -7.914901256561279
    6. ' ' → logprob: -9.914900779724121
    7. '(queue' → logprob: -10.789900779724121
    8. '.enqueue' → logprob: -11.539900779724121
    9. '.add' → logprob: -11.789900779724121
    10. '.dequeue' → logprob: -12.039900779724121

Token 308: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.03805285319685936
    2. 'deque' → logprob: -3.288052797317505
    3. ' collections' → logprob: -11.913052558898926
    4. 'Deque' → logprob: -12.913052558898926
    5. ' ' → logprob: -14.538052558898926
    6. 'collections' → logprob: -14.663052558898926
    7. ' de' → logprob: -14.788052558898926
    8. 'de' → logprob: -15.163052558898926
    9. ' dequeue' → logprob: -15.788052558898926
    10. ' queue' → logprob: -16.163053512573242

Token 309: '()
' (ID: 1234)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.01815076172351837
    2. '([(' → logprob: -4.768150806427002
    3. '()
' → logprob: -5.143150806427002
    4. '()' → logprob: -5.643150806427002
    5. '([
' → logprob: -9.268150329589844
    6. '(' → logprob: -11.893150329589844
    7. '[(' → logprob: -12.768150329589844
    8. '()

' → logprob: -12.768150329589844
    9. '[' → logprob: -13.893150329589844
    10. '(B' → logprob: -14.518150329589844

Token 310: '       ' (ID: 309)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.5748846530914307
    2. '       ' → logprob: -0.9498846530914307
    3. '
' → logprob: -3.6998846530914307
    4. 'queue' → logprob: -4.074884414672852
    5. ' queue' → logprob: -5.449884414672852
    6. '(' → logprob: -6.199884414672852
    7. '        
' → logprob: -7.699884414672852
    8. '()
' → logprob: -7.949884414672852
    9. '(
' → logprob: -7.949884414672852
    10. '[' → logprob: -8.074884414672852

Token 311: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.23273293673992157
    2. ' queue' → logprob: -1.732732892036438
    3. '       ' → logprob: -3.4827330112457275
    4. '(queue' → logprob: -9.607732772827148
    5. '
' → logprob: -11.107732772827148
    6. '	queue' → logprob: -11.482732772827148
    7. '```' → logprob: -11.857732772827148
    8. '.queue' → logprob: -12.107732772827148
    9. '        
' → logprob: -12.982732772827148
    10. '   ' → logprob: -13.482732772827148

Token 312: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004762618336826563
    2. '.' → logprob: -5.379762649536133
    3. '.enqueue' → logprob: -9.004762649536133
    4. '.extend' → logprob: -12.129762649536133
    5. '.push' → logprob: -12.629762649536133
    6. ' .' → logprob: -12.754762649536133
    7. '.put' → logprob: -12.879762649536133
    8. '().' → logprob: -13.629762649536133
    9. '.emplace' → logprob: -13.629762649536133
    10. '.Append' → logprob: -14.504762649536133

Token 313: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -9.746380237629637e-05
    2. '(' → logprob: -9.250097274780273
    3. '((' → logprob: -14.000097274780273
    4. '(
' → logprob: -14.625097274780273
    5. ' (' → logprob: -17.750097274780273
    6. '(S' → logprob: -18.250097274780273
    7. '(b' → logprob: -18.750097274780273
    8. ' BFS' → logprob: -18.750097274780273
    9. '(A' → logprob: -18.875097274780273
    10. '(self' → logprob: -19.000097274780273

Token 314: 'FS' (ID: 14179)
  Prédit: 'FS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FS' → logprob: -9.088346359931165e-07
    2. 'F' → logprob: -14.000000953674316
    3. 'FSM' → logprob: -17.75
    4. 'S' → logprob: -18.125
    5. ' FS' → logprob: -19.875
    6. 'fs' → logprob: -20.625
    7. 'SF' → logprob: -20.875
    8. '_FS' → logprob: -21.625
    9. 'PS' → logprob: -21.75
    10. ')' → logprob: -22.125

Token 315: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: -4.320199877838604e-07
    2. 'state' → logprob: -16.25
    3. '	State' → logprob: -16.5
    4. '<State' → logprob: -16.875
    5. '_state' → logprob: -17.25
    6. '_STATE' → logprob: -17.25
    7. '_State' → logprob: -18.125
    8. ' State' → logprob: -18.625
    9. 'S' → logprob: -19.375
    10. 'States' → logprob: -19.375

Token 316: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002834111684933305
    2. '(' → logprob: -5.877834320068359
    3. '(
' → logprob: -10.87783432006836
    4. '(s' → logprob: -12.00283432006836
    5. '(this' → logprob: -13.37783432006836
    6. ')(' → logprob: -13.87783432006836
    7. '(

' → logprob: -14.25283432006836
    8. ' (' → logprob: -14.75283432006836
    9. '((' → logprob: -15.37783432006836
    10. ')' → logprob: -16.25283432006836

Token 317: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.00019126241386402398
    2. '.' → logprob: -9.000191688537598
    3. 'start' → logprob: -9.625191688537598
    4. ' .' → logprob: -14.125191688537598
    5. ' start' → logprob: -14.875191688537598
    6. ':start' → logprob: -16.00019073486328
    7. '.user' → logprob: -16.12519073486328
    8. '.START' → logprob: -16.37519073486328
    9. '.star' → logprob: -17.00019073486328
    10. '	start' → logprob: -17.25019073486328

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.282920129597187e-05
    2. ' ,' → logprob: -11.500012397766113
    3. ',
' → logprob: -13.750012397766113
    4. '0' → logprob: -14.125012397766113
    5. ')' → logprob: -15.125012397766113
    6. '‌,' → logprob: -15.875012397766113
    7. '),' → logprob: -16.37501335144043
    8. ',

' → logprob: -16.50001335144043
    9. '
' → logprob: -16.87501335144043
    10. ' ' → logprob: -17.12501335144043

Token 319: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '           ' → logprob: -16.625179290771484
    4. '   ' → logprob: -16.750179290771484
    5. '       ' → logprob: -17.125179290771484
    6. ')' → logprob: -18.375179290771484
    7. '               ' → logprob: -19.000179290771484
    8. '
' → logprob: -19.500179290771484
    9. '                   ' → logprob: -19.625179290771484
    10. '۰' → logprob: -19.750179290771484

Token 320: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.25
    4. '۰' → logprob: -19.5
    5. ')' → logprob: -20.375
    6. '
' → logprob: -20.375
    7. '           ' → logprob: -20.875
    8. '=' → logprob: -22.0
    9. '       ' → logprob: -22.375
    10. '1' → logprob: -22.5

Token 321: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002047124784439802
    2. ')' → logprob: -6.627047061920166
    3. '))
' → logprob: -7.252047061920166
    4. ')
' → logprob: -12.002047538757324
    5. '))

' → logprob: -13.127047538757324
    6. ' ))' → logprob: -13.127047538757324
    7. '));' → logprob: -13.877047538757324
    8. '),' → logprob: -14.502047538757324
    9. ')))' → logprob: -15.252047538757324
    10. '       ' → logprob: -16.502046585083008

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1631019413471222
    2. '
' → logprob: -1.9131019115447998
    3. '        
' → logprob: -6.538102149963379
    4. ' while' → logprob: -7.913102149963379
    5. ' 
' → logprob: -8.038102149963379
    6. '<|end|>' → logprob: -8.163102149963379
    7. '    
' → logprob: -8.788102149963379
    8. '   ' → logprob: -9.163102149963379
    9. ' visited' → logprob: -9.663102149963379
    10. '  
' → logprob: -9.913102149963379

Token 323: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.13231001794338226
    2. 'while' → logprob: -2.132309913635254
    3. '       ' → logprob: -5.257309913635254
    4. ' while' → logprob: -9.632309913635254
    5. ' visited' → logprob: -10.007309913635254
    6. '
' → logprob: -10.007309913635254
    7. '        
' → logprob: -13.382309913635254
    8. '   ' → logprob: -15.132309913635254
    9. '```' → logprob: -15.632309913635254
    10. 'visit' → logprob: -16.00731086730957

Token 324: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00020687808864749968
    2. '.' → logprob: -8.50020694732666
    3. ' .' → logprob: -12.75020694732666
    4. 'add' → logprob: -15.12520694732666
    5. '.update' → logprob: -17.375205993652344
    6. ')add' → logprob: -17.500205993652344
    7. '.append' → logprob: -17.750205993652344
    8. '.
' → logprob: -17.875205993652344
    9. '.Add' → logprob: -18.125205993652344
    10. '
' → logprob: -18.375205993652344

Token 325: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001505578518845141
    2. '(' → logprob: -6.501505374908447
    3. ' (' → logprob: -12.876505851745605
    4. '((' → logprob: -14.751505851745605
    5. '(
' → logprob: -15.501505851745605
    6. '(s' → logprob: -16.37650489807129
    7. '(this' → logprob: -17.37650489807129
    8. '(sel' → logprob: -18.62650489807129
    9. '(

' → logprob: -18.75150489807129
    10. '(Self' → logprob: -19.50150489807129

Token 326: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -1.981667537620524e-06
    2. '.' → logprob: -14.250001907348633
    3. 'start' → logprob: -14.250001907348633
    4. ' .' → logprob: -14.375001907348633
    5. ' start' → logprob: -17.500001907348633
    6. '.st' → logprob: -17.750001907348633
    7. '.star' → logprob: -17.875001907348633
    8. '.self' → logprob: -19.250001907348633
    9. '.s' → logprob: -19.250001907348633
    10. '.Start' → logprob: -19.500001907348633

Token 327: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008055794751271605
    2. ')
' → logprob: -7.125805377960205
    3. ')

' → logprob: -14.750805854797363
    4. '       ' → logprob: -15.000805854797363
    5. ' )' → logprob: -16.000804901123047
    6. '
' → logprob: -16.375804901123047
    7. '))' → logprob: -16.500804901123047
    8. ')`' → logprob: -16.500804901123047
    9. '),' → logprob: -16.750804901123047
    10. ')
' → logprob: -16.875804901123047

Token 328: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29472464323043823
    2. '       ' → logprob: -1.544724702835083
    3. '        
' → logprob: -3.544724702835083
    4. ' 
' → logprob: -5.044724464416504
    5. '    
' → logprob: -6.169724464416504
    6. '  
' → logprob: -6.294724464416504
    7. ' while' → logprob: -7.044724464416504
    8. '```' → logprob: -7.919724464416504
    9. '<|end|>' → logprob: -8.419724464416504
    10. '   ' → logprob: -8.419724464416504

Token 329: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0020562850404530764
    2. '       ' → logprob: -6.502056121826172
    3. ' while' → logprob: -7.502056121826172
    4. '
' → logprob: -14.002056121826172
    5. '	while' → logprob: -14.377056121826172
    6. '        
' → logprob: -15.502056121826172
    7. '   ' → logprob: -15.752056121826172
    8. '```' → logprob: -16.002056121826172
    9. 'wh' → logprob: -16.502056121826172
    10. 'While' → logprob: -17.002056121826172

Token 330: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.2014152854681015
    2. ' queue' → logprob: -1.7014153003692627
    3. '(queue' → logprob: -14.076415061950684
    4. '	queue' → logprob: -14.326415061950684
    5. 'len' → logprob: -14.951415061950684
    6. ' len' → logprob: -16.326416015625
    7. 'que' → logprob: -16.576416015625
    8. '.queue' → logprob: -16.701416015625
    9. '   ' → logprob: -16.826416015625
    10. 'q' → logprob: -18.201416015625

Token 331: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004472348664421588
    2. ':
' → logprob: -7.7504472732543945
    3. '):' → logprob: -11.250447273254395
    4. '):
' → logprob: -14.625447273254395
    5. '.' → logprob: -14.750447273254395
    6. ')' → logprob: -14.750447273254395
    7. ' :' → logprob: -15.000447273254395
    8. 'opleft' → logprob: -15.125447273254395
    9. '.pop' → logprob: -15.250447273254395
    10. '>:' → logprob: -15.250447273254395

Token 332: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006928142625838518
    2. 'state' → logprob: -5.131927967071533
    3. ' state' → logprob: -7.506927967071533
    4. '
' → logprob: -8.506928443908691
    5. '            
' → logprob: -8.756928443908691
    6. 'current' → logprob: -11.256928443908691
    7. '```' → logprob: -11.381928443908691
    8. ' current' → logprob: -11.631928443908691
    9. ',state' → logprob: -11.631928443908691
    10. '    
' → logprob: -11.756928443908691

Token 333: ' current' (ID: 2208)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.46784883737564087
    2. 'current' (adapté à ' current') → logprob: -1.717848777770996
    3. ' state' → logprob: -2.217848777770996
    4. ' current' → logprob: -2.467848777770996
    5. '           ' → logprob: -7.467848777770996
    6. 'curr' → logprob: -11.717848777770996
    7. 'cur' → logprob: -12.342848777770996
    8. ' curr' → logprob: -13.092848777770996
    9. '```' → logprob: -13.342848777770996
    10. '               ' → logprob: -14.467848777770996

Token 334: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.008849265985190868
    2. ' =' → logprob: -4.883849143981934
    3. '=' → logprob: -6.758849143981934
    4. '_' → logprob: -9.883849143981934
    5. 'state' → logprob: -11.008849143981934
    6. 'State' → logprob: -11.633849143981934
    7. ' _' → logprob: -13.883849143981934
    8. '   ' → logprob: -14.633849143981934
    9. '_STATE' → logprob: -14.633849143981934
    10. '	' → logprob: -14.758849143981934

Token 335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011726059019565582
    2. '=' → logprob: -6.7511725425720215
    3. ':' → logprob: -13.37617301940918
    4. ' ' → logprob: -14.25117301940918
    5. '    ' → logprob: -17.00117301940918
    6. '   ' → logprob: -17.12617301940918
    7. ',' → logprob: -17.37617301940918
    8. '	' → logprob: -17.50117301940918
    9. ' =
' → logprob: -17.62617301940918
    10. ')' → logprob: -17.87617301940918

Token 336: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.38687145709991455
    2. 'queue' → logprob: -1.1368714570999146
    3. '.queue' → logprob: -15.636871337890625
    4. '(queue' → logprob: -15.886871337890625
    5. '	queue' → logprob: -16.136871337890625
    6. 'que' → logprob: -17.136871337890625
    7. 'deque' → logprob: -19.136871337890625
    8. 'Queue' → logprob: -19.636871337890625
    9. '_queue' → logprob: -19.636871337890625
    10. ' ' → logprob: -19.761871337890625

Token 337: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0001863750658230856
    2. '.' → logprob: -8.7501859664917
    3. '.pop' → logprob: -10.5001859664917
    4. '.dequeue' → logprob: -15.5001859664917
    5. ' .' → logprob: -16.250186920166016
    6. '   ' → logprob: -17.500186920166016
    7. 'p' → logprob: -18.000186920166016
    8. ').' → logprob: -18.000186920166016
    9. '.poll' → logprob: -18.750186920166016
    10. '```' → logprob: -19.000186920166016

Token 338: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0015243870439007878
    2. 'op' → logprob: -6.501524448394775
    3. 'ople' → logprob: -10.751523971557617
    4. 'opl' → logprob: -14.751523971557617
    5. 'opup' → logprob: -16.126523971557617
    6. 'oplevel' → logprob: -16.751523971557617
    7. 'opf' → logprob: -16.876523971557617
    8. 'opt' → logprob: -17.501523971557617
    9. 'oph' → logprob: -17.501523971557617
    10. '```' → logprob: -17.876523971557617

Token 339: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14707808196544647
    2. '()
' → logprob: -2.522078037261963
    3. '
' → logprob: -3.522078037261963
    4. ')' → logprob: -3.772078037261963
    5. '<|end|>' → logprob: -6.397078037261963
    6. '           ' → logprob: -7.147078037261963
    7. '()

' → logprob: -7.897078037261963
    8. ')
' → logprob: -8.272078514099121
    9. '())' → logprob: -8.397078514099121
    10. '            
' → logprob: -8.647078514099121

Token 340: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2891910672187805
    2. '
' → logprob: -1.4141910076141357
    3. '            
' → logprob: -5.164191246032715
    4. ' 
' → logprob: -6.789191246032715
    5. ' if' → logprob: -7.289191246032715
    6. 'if' → logprob: -8.664191246032715
    7. '\n' → logprob: -9.539191246032715
    8. '<|end|>' → logprob: -10.039191246032715
    9. '    
' → logprob: -10.414191246032715
    10. '        
' → logprob: -10.414191246032715

Token 341: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.025640886276960373
    2. '           ' → logprob: -4.275640964508057
    3. ' if' → logprob: -4.525640964508057
    4. 'current' → logprob: -7.525640964508057
    5. '            
' → logprob: -11.025640487670898
    6. '
' → logprob: -11.150640487670898
    7. ' current' → logprob: -11.900640487670898
    8. 'for' → logprob: -12.150640487670898
    9. '       ' → logprob: -14.650640487670898
    10. '```' → logprob: -14.900640487670898

Token 342: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.12692873179912567
    2. ' current' → logprob: -2.1269288063049316
    3. '(current' → logprob: -15.626928329467773
    4. 'Current' → logprob: -16.501928329467773
    5. '.current' → logprob: -16.501928329467773
    6. 'urrent' → logprob: -16.626928329467773
    7. '$current' → logprob: -16.626928329467773
    8. '_current' → logprob: -17.126928329467773
    9. 'cur' → logprob: -17.626928329467773
    10. '	current' → logprob: -17.751928329467773

Token 343: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -7.946405094116926e-05
    2. '._' → logprob: -9.500079154968262
    3. '_' → logprob: -13.750079154968262
    4. '_states' → logprob: -13.875079154968262
    5. 'State' → logprob: -14.250079154968262
    6. 'state' → logprob: -14.625079154968262
    7. ' _' → logprob: -15.000079154968262
    8. '_.' → logprob: -15.375079154968262
    9. '_stat' → logprob: -15.750079154968262
    10. '.state' → logprob: -15.750079154968262

Token 344: '.string' (ID: 8466)
  Prédit: '.string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.string' → logprob: -7.896309739408025e-07
    2. 'string' → logprob: -14.875000953674316
    3. ' .' → logprob: -15.750000953674316
    4. '.' → logprob: -15.875000953674316
    5. '.str' → logprob: -17.125
    6. '.stringify' → logprob: -18.5
    7. '
' → logprob: -18.5
    8. ' string' → logprob: -18.75
    9. '.symbol' → logprob: -18.75
    10. '$string' → logprob: -19.375

Token 345: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011048882268369198
    2. '==' → logprob: -4.511048793792725
    3. ' =' → logprob: -14.261049270629883
    4. '=' → logprob: -15.636049270629883
    5. ')' → logprob: -16.136049270629883
    6. ' ' → logprob: -16.511049270629883
    7. ')==' → logprob: -17.011049270629883
    8. '==
' → logprob: -18.386049270629883
    9. ']==' → logprob: -18.511049270629883
    10. '```' → logprob: -18.761049270629883

Token 346: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4740806519985199
    2. 'self' → logprob: -0.9740806818008423
    3. '(self' → logprob: -13.849081039428711
    4. '
' → logprob: -13.974081039428711
    5. '           ' → logprob: -14.099081039428711
    6. '	self' → logprob: -15.099081039428711
    7. '[self' → logprob: -15.474081039428711
    8. '            ' → logprob: -15.974081039428711
    9. '_self' → logprob: -16.09908103942871
    10. '               ' → logprob: -16.09908103942871

Token 347: '.target' (ID: 11090)
  Prédit: '.target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -3.03521392197581e-05
    2. 'target' → logprob: -10.500030517578125
    3. '.' → logprob: -13.000030517578125
    4. ' .' → logprob: -14.500030517578125
    5. ' target' → logprob: -16.875030517578125
    6. '.t' → logprob: -17.375030517578125
    7. '	target' → logprob: -17.750030517578125
    8. '.tar' → logprob: -19.125030517578125
    9. '.
' → logprob: -19.500030517578125
    10. '.Target' → logprob: -19.500030517578125

Token 348: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5770549178123474
    2. ':' → logprob: -0.8270549178123474
    3. ':return' → logprob: -6.827054977416992
    4. '               ' → logprob: -11.077054977416992
    5. ':
' → logprob: -12.327054977416992
    6. '           ' → logprob: -12.577054977416992
    7. ' and' → logprob: -13.202054977416992
    8. ':

' → logprob: -13.452054977416992
    9. ' :
' → logprob: -13.702054977416992
    10. '):
' → logprob: -13.827054977416992

Token 349: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00332516897469759
    2. ' return' → logprob: -6.00332498550415
    3. 'return' → logprob: -7.25332498550415
    4. '
' → logprob: -10.253325462341309
    5. '                
' → logprob: -10.378325462341309
    6. '           ' → logprob: -10.753325462341309
    7. ':
' → logprob: -11.128325462341309
    8. ':return' → logprob: -11.253325462341309
    9. '                   ' → logprob: -12.128325462341309
    10. '                ' → logprob: -12.378325462341309

Token 350: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.025106139481067657
    2. ' return' → logprob: -4.275105953216553
    3. '               ' → logprob: -4.525105953216553
    4. '
' → logprob: -10.900106430053711
    5. '                   ' → logprob: -11.150106430053711
    6. '           ' → logprob: -11.150106430053711
    7. '   ' → logprob: -14.275106430053711
    8. '	return' → logprob: -14.400106430053711
    9. '{return' → logprob: -14.650106430053711
    10. '                
' → logprob: -16.02510643005371

Token 351: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.00861456897109747
    2. ' current' → logprob: -4.758614540100098
    3. '[current' → logprob: -18.258615493774414
    4. '(current' → logprob: -18.508615493774414
    5. '$current' → logprob: -18.508615493774414
    6. '0' → logprob: -18.508615493774414
    7. '
' → logprob: -18.758615493774414
    8. '	current' → logprob: -19.008615493774414
    9. '.current' → logprob: -19.008615493774414
    10. 'urrent' → logprob: -19.258615493774414

Token 352: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -6.742448022123426e-05
    2. 'state' → logprob: -9.625067710876465
    3. '._' → logprob: -14.625067710876465
    4. '.state' → logprob: -15.250067710876465
    5. '_states' → logprob: -15.250067710876465
    6. '_steps' → logprob: -16.00006675720215
    7. 'State' → logprob: -16.12506675720215
    8. '_step' → logprob: -17.12506675720215
    9. '_STATE' → logprob: -17.75006675720215
    10. '-state' → logprob: -18.25006675720215

Token 353: '.steps' (ID: 126813)
  Prédit: '.steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.steps' → logprob: -4.35837464465294e-05
    2. ' .' → logprob: -11.000043869018555
    3. '.step' → logprob: -11.250043869018555
    4. '.' → logprob: -11.500043869018555
    5. '.points' → logprob: -13.125043869018555
    6. '.string' → logprob: -14.625043869018555
    7. '.states' → logprob: -15.125043869018555
    8. '.str' → logprob: -15.375043869018555
    9. '.state' → logprob: -16.125043869018555
    10. '.s' → logprob: -16.250043869018555

Token 354: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15868259966373444
    2. '           ' → logprob: -2.1586825847625732
    3. '            
' → logprob: -3.5336825847625732
    4. '        
' → logprob: -7.408682823181152
    5. '    
' → logprob: -7.658682823181152
    6. ' 
' → logprob: -8.283682823181152
    7. '       ' → logprob: -8.408682823181152
    8. '  
' → logprob: -8.783682823181152
    9. '\n' → logprob: -9.033682823181152
    10. '           
' → logprob: -10.158682823181152

Token 355: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10320474952459335
    2. '
' → logprob: -2.3532047271728516
    3. '            
' → logprob: -5.978204727172852
    4. '       ' → logprob: -8.353204727172852
    5. '        
' → logprob: -9.603204727172852
    6. '    
' → logprob: -9.978204727172852
    7. ' for' → logprob: -10.853204727172852
    8. ' 
' → logprob: -11.103204727172852
    9. '  
' → logprob: -11.228204727172852
    10. 'for' → logprob: -11.353204727172852

Token 356: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.42516955733299255
    2. 'for' → logprob: -1.425169587135315
    3. 'next' → logprob: -2.3001694679260254
    4. '           ' → logprob: -5.300169467926025
    5. 'possible' → logprob: -8.175169944763184
    6. ' if' → logprob: -8.675169944763184
    7. ' next' → logprob: -9.550169944763184
    8. '            
' → logprob: -9.675169944763184
    9. ' for' → logprob: -10.050169944763184
    10. 'Next' → logprob: -12.050169944763184

Token 357: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.47407761216163635
    2. 'current' → logprob: -0.974077582359314
    3. '           ' → logprob: -15.349077224731445
    4. '	current' → logprob: -16.099077224731445
    5. '.current' → logprob: -16.599077224731445
    6. '   ' → logprob: -16.724077224731445
    7. '(current' → logprob: -16.974077224731445
    8. '_current' → logprob: -17.349077224731445
    9. '               ' → logprob: -17.724077224731445
    10. '[current' → logprob: -18.224077224731445

Token 358: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.282920129597187e-05
    2. 'state' → logprob: -11.500012397766113
    3. 'State' → logprob: -13.375012397766113
    4. '.state' → logprob: -14.500012397766113
    5. '_states' → logprob: -15.125012397766113
    6. '_STATE' → logprob: -16.12501335144043
    7. '   ' → logprob: -16.87501335144043
    8. '._' → logprob: -17.62501335144043
    9. '.' → logprob: -18.12501335144043
    10. '_step' → logprob: -18.25001335144043

Token 359: '.steps' (ID: 126813)
  Prédit: '.steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.steps' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.375000953674316
    3. ' .' → logprob: -14.750000953674316
    4. '.step' → logprob: -15.750000953674316
    5. 'steps' → logprob: -17.125001907348633
    6. '
' → logprob: -18.625001907348633
    7. '.states' → logprob: -18.875001907348633
    8. '.st' → logprob: -19.125001907348633
    9. '.points' → logprob: -19.750001907348633
    10. '.
' → logprob: -19.875001907348633

Token 360: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.010486929677426815
    2. '>=' → logprob: -4.635487079620361
    3. ' ' → logprob: -7.260487079620361
    4. ' ==' → logprob: -11.510486602783203
    5. ' <' → logprob: -11.885486602783203
    6. '	' → logprob: -13.010486602783203
    7. ')>=' → logprob: -13.135486602783203
    8. '   ' → logprob: -13.260486602783203
    9. ' ' → logprob: -13.760486602783203
    10. '==' → logprob: -13.885486602783203

Token 361: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008663143962621689
    2. ' self' → logprob: -4.758663177490234
    3. 'Sub' → logprob: -10.383663177490234
    4. 'Self' → logprob: -11.258663177490234
    5. '   ' → logprob: -13.758663177490234
    6. '       ' → logprob: -13.883663177490234
    7. '           ' → logprob: -14.133663177490234
    8. ' Sub' → logprob: -14.133663177490234
    9. '
' → logprob: -14.383663177490234
    10. '(self' → logprob: -15.008663177490234

Token 362: '.MAX' (ID: 25075)
  Prédit: '.MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MAX' → logprob: -7.743758760625497e-05
    2. 'MAX' → logprob: -9.500077247619629
    3. '.' → logprob: -13.000077247619629
    4. '_MAX' → logprob: -16.625078201293945
    5. '.MIN' → logprob: -16.875078201293945
    6. ' MAX' → logprob: -18.375078201293945
    7. '(MAX' → logprob: -18.875078201293945
    8. '.Max' → logprob: -19.125078201293945
    9. ' .' → logprob: -19.375078201293945
    10. '.NUM' → logprob: -20.000078201293945

Token 363: '_ST' (ID: 4975)
  Prédit: '_ST'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ST' → logprob: -2.1008713702030946e-06
    2. 'ST' → logprob: -13.125001907348633
    3. '	ST' → logprob: -18.250001907348633
    4. '_S' → logprob: -19.125001907348633
    5. '_STEP' → logprob: -19.250001907348633
    6. '_' → logprob: -19.375001907348633
    7. '_steps' → logprob: -19.875001907348633
    8. '_SUB' → logprob: -20.125001907348633
    9. '\' → logprob: -20.250001907348633
    10. '```' → logprob: -20.500001907348633

Token 364: 'EPS' (ID: 82793)
  Prédit: 'EPS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'EPS' → logprob: -4.961759259458631e-06
    2. 'eps' → logprob: -13.000004768371582
    3. 'E' → logprob: -13.500004768371582
    4. 'PS' → logprob: -13.875004768371582
    5. 'EP' → logprob: -15.125004768371582
    6. 'EPA' → logprob: -17.5000057220459
    7. 'S' → logprob: -17.6250057220459
    8. ' EPS' → logprob: -18.2500057220459
    9. 'ES' → logprob: -18.2500057220459
    10. 'EPT' → logprob: -18.5000057220459

Token 365: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16165761649608612
    2. ':' → logprob: -1.9116575717926025
    3. '               ' → logprob: -6.911657810211182
    4. '           ' → logprob: -7.911657810211182
    5. ':return' → logprob: -9.786657333374023
    6. '):
' → logprob: -12.786657333374023
    7. 'continue' → logprob: -13.036657333374023
    8. ':

' → logprob: -13.036657333374023
    9. ':
' → logprob: -13.661657333374023
    10. ' continue' → logprob: -13.661657333374023

Token 366: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0031312520150095224
    2. 'continue' → logprob: -5.87813138961792
    3. ' continue' → logprob: -8.253130912780762
    4. '           ' → logprob: -9.753130912780762
    5. '
' → logprob: -12.878130912780762
    6. '                   ' → logprob: -13.753130912780762
    7. '	continue' → logprob: -13.878130912780762
    8. '_continue' → logprob: -13.878130912780762
    9. '                
' → logprob: -14.878130912780762
    10. 'return' → logprob: -14.878130912780762

Token 367: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.05083823949098587
    2. ' continue' → logprob: -3.3008382320404053
    3. '               ' → logprob: -4.925838470458984
    4. 'return' → logprob: -5.925838470458984
    5. 'break' → logprob: -6.175838470458984
    6. '           ' → logprob: -7.675838470458984
    7. ' break' → logprob: -9.050838470458984
    8. ' return' → logprob: -9.300838470458984
    9. '	continue' → logprob: -10.550838470458984
    10. '   ' → logprob: -12.300838470458984

Token 368: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007999799214303493
    2. '
' → logprob: -5.507999897003174
    3. '            
' → logprob: -5.632999897003174
    4. '    
' → logprob: -9.507999420166016
    5. '       ' → logprob: -9.882999420166016
    6. '  
' → logprob: -10.132999420166016
    7. '<|end|>' → logprob: -10.382999420166016
    8. '        
' → logprob: -10.632999420166016
    9. ' for' → logprob: -10.632999420166016
    10. ',' → logprob: -10.882999420166016

Token 369: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01067519560456276
    2. ' for' → logprob: -5.135675430297852
    3. 'for' → logprob: -6.135675430297852
    4. '            
' → logprob: -6.260675430297852
    5. 'next' → logprob: -8.135675430297852
    6. ' next' → logprob: -8.760675430297852
    7. '       ' → logprob: -9.385675430297852
    8. '
' → logprob: -10.010675430297852
    9. '        
' → logprob: -11.010675430297852
    10. '    
' → logprob: -11.010675430297852

Token 370: ' for' (ID: 395)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5589728355407715
    2. 'for' (adapté à ' for') → logprob: -1.0589728355407715
    3. ' next' → logprob: -3.3089728355407715
    4. '           ' → logprob: -3.8089728355407715
    5. ' for' → logprob: -3.8089728355407715
    6. 'possible' → logprob: -8.30897331237793
    7. '            
' → logprob: -8.68397331237793
    8. 'Next' → logprob: -10.80897331237793
    9. 'new' → logprob: -11.80897331237793
    10. 'states' → logprob: -11.80897331237793

Token 371: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.10053616762161255
    2. ' next' → logprob: -2.3505361080169678
    3. 'new' → logprob: -8.475536346435547
    4. '   ' → logprob: -10.225536346435547
    5. 'result' → logprob: -10.725536346435547
    6. ' new' → logprob: -10.850536346435547
    7. 'state' → logprob: -11.600536346435547
    8. '```' → logprob: -11.725536346435547
    9. '       ' → logprob: -12.350536346435547
    10. 'Next' → logprob: -12.475536346435547

Token 372: '_str' (ID: 6182)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.1298036426305771
    2. '_string' → logprob: -2.1298036575317383
    3. '_str' → logprob: -6.254803657531738
    4. '_result' → logprob: -7.629803657531738
    5. '_states' → logprob: -7.754803657531738
    6. '_strings' → logprob: -11.379803657531738
    7. '_' → logprob: -11.879803657531738
    8. '_s' → logprob: -12.004803657531738
    9. 'string' → logprob: -12.504803657531738
    10. '_version' → logprob: -12.754803657531738

Token 373: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01468015369027853
    2. 'ing' → logprob: -4.3896803855896
    3. 'in' → logprob: -6.1396803855896
    4. ' ' → logprob: -12.139679908752441
    5. ',' → logprob: -13.514679908752441
    6. ' ing' → logprob: -13.764679908752441
    7. 'ings' → logprob: -13.764679908752441
    8. '  ' → logprob: -14.264679908752441
    9. 'g' → logprob: -14.389679908752441
    10. 'e' → logprob: -15.139679908752441

Token 374: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3869544267654419
    2. 'self' → logprob: -1.136954426765442
    3. '           ' → logprob: -9.511954307556152
    4. '(self' → logprob: -12.636954307556152
    5. '               ' → logprob: -13.011954307556152
    6. '	self' → logprob: -13.636954307556152
    7. '   ' → logprob: -14.011954307556152
    8. '[self' → logprob: -14.886954307556152
    9. 'this' → logprob: -15.386954307556152
    10. '       ' → logprob: -15.636954307556152

Token 375: '.sub' (ID: 7619)
  Prédit: '.sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sub' → logprob: -1.0802738870552275e-05
    2. 'sub' → logprob: -11.75001049041748
    3. '.' → logprob: -13.62501049041748
    4. '.s' → logprob: -14.37501049041748
    5. ' .' → logprob: -14.50001049041748
    6. '       ' → logprob: -15.50001049041748
    7. '   ' → logprob: -16.375011444091797
    8. '	sub' → logprob: -16.500011444091797
    9. '           ' → logprob: -17.375011444091797
    10. '..' → logprob: -18.000011444091797

Token 376: 'stitution' (ID: 20066)
  Prédit: 'stitution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stitution' → logprob: -1.9504606825648807e-05
    2. 'utation' → logprob: -12.250019073486328
    3. 'it' → logprob: -12.500019073486328
    4. 'stit' → logprob: -12.750019073486328
    5. 'st' → logprob: -13.125019073486328
    6. 'tit' → logprob: -13.500019073486328
    7. 'istit' → logprob: -13.750019073486328
    8. 'ist' → logprob: -14.375019073486328
    9. 's' → logprob: -14.750019073486328
    10. 't' → logprob: -15.000019073486328

Token 377: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -2.141186450899113e-05
    2. 'Set' → logprob: -11.250020980834961
    3. 'set' → logprob: -12.125020980834961
    4. 'et' → logprob: -13.500020980834961
    5. 'erset' → logprob: -13.750020980834961
    6. '_' → logprob: -15.875020980834961
    7. '.set' → logprob: -16.37502098083496
    8. '._' → logprob: -16.50002098083496
    9. '_sets' → logprob: -16.87502098083496
    10. 'er' → logprob: -17.50002098083496

Token 378: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -2.176947600673884e-05
    2. '.' → logprob: -11.125021934509277
    3. '.next' → logprob: -12.625021934509277
    4. ' .' → logprob: -13.125021934509277
    5. 'possible' → logprob: -14.500021934509277
    6. '.p' → logprob: -15.000021934509277
    7. 'Possible' → logprob: -15.750021934509277
    8. ').' → logprob: -16.00002098083496
    9. '   ' → logprob: -16.25002098083496
    10. '[pos' → logprob: -16.50002098083496

Token 379: 'sible' (ID: 15301)
  Prédit: 'sible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sible' → logprob: -2.5776860184123507e-06
    2. 's' → logprob: -13.37500286102295
    3. 'ible' → logprob: -14.12500286102295
    4. 'isible' → logprob: -17.250001907348633
    5. '```' → logprob: -17.250001907348633
    6. 'possible' → logprob: -17.375001907348633
    7. 'si' → logprob: -17.625001907348633
    8. '_possible' → logprob: -18.500001907348633
    9. 'sib' → logprob: -18.875001907348633
    10. '_' → logprob: -19.750001907348633

Token 380: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.7432603272027336e-06
    2. 'next' → logprob: -13.375001907348633
    3. '_' → logprob: -17.250001907348633
    4. '```' → logprob: -18.125001907348633
    5. '_NEXT' → logprob: -18.875001907348633
    6. 'Next' → logprob: -19.000001907348633
    7. ' next' → logprob: -19.250001907348633
    8. '[next' → logprob: -19.250001907348633
    9. '_states' → logprob: -19.375001907348633
    10. '(next' → logprob: -20.375001907348633

Token 381: '_states' (ID: 53795)
  Prédit: '_states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_states' → logprob: -4.008129963040119e-06
    2. '_next' → logprob: -13.000003814697266
    3. '_' → logprob: -13.625003814697266
    4. 's' → logprob: -15.625003814697266
    5. 'states' → logprob: -16.375003814697266
    6. ' states' → logprob: -16.625003814697266
    7. 'States' → logprob: -17.375003814697266
    8. '_state' → logprob: -17.500003814697266
    9. '```' → logprob: -17.625003814697266
    10. ' _' → logprob: -17.875003814697266

Token 382: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -2.939851037808694e-05
    2. '(' → logprob: -10.500029563903809
    3. '(
' → logprob: -13.625029563903809
    4. ' (' → logprob: -14.625029563903809
    5. '(Current' → logprob: -16.625028610229492
    6. '(next' → logprob: -16.750028610229492
    7. 'current' → logprob: -17.375028610229492
    8. '((' → logprob: -17.625028610229492
    9. '(cur' → logprob: -17.875028610229492
    10. '(curr' → logprob: -18.000028610229492

Token 383: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.00013214473437983543
    2. 'state' → logprob: -10.00013256072998
    3. '_str' → logprob: -10.00013256072998
    4. '._' → logprob: -10.62513256072998
    5. '_string' → logprob: -12.50013256072998
    6. ')' → logprob: -13.00013256072998
    7. '.state' → logprob: -13.12513256072998
    8. '   ' → logprob: -13.12513256072998
    9. '_states' → logprob: -13.37513256072998
    10. '```' → logprob: -13.75013256072998

Token 384: '.string' (ID: 8466)
  Prédit: '.string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.string' → logprob: -0.00036787090357393026
    2. '.' → logprob: -8.125368118286133
    3. '.str' → logprob: -10.375368118286133
    4. 'string' → logprob: -10.500368118286133
    5. ' .' → logprob: -11.875368118286133
    6. '.stringify' → logprob: -13.500368118286133
    7. '.s' → logprob: -14.250368118286133
    8. ' string' → logprob: -14.625368118286133
    9. '```' → logprob: -14.625368118286133
    10. ').' → logprob: -14.750368118286133

Token 385: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38732588291168213
    2. '):
' → logprob: -1.1373258829116821
    3. ' ):' → logprob: -8.26232624053955
    4. ' ):
' → logprob: -9.38732624053955
    5. ':' → logprob: -9.63732624053955
    6. '           ' → logprob: -11.38732624053955
    7. '):
' → logprob: -11.63732624053955
    8. '():
' → logprob: -11.76232624053955
    9. '       ' → logprob: -12.01232624053955
    10. ')' → logprob: -12.26232624053955

Token 386: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029609426856040955
    2. '           ' → logprob: -5.877961158752441
    3. '                
' → logprob: -10.502961158752441
    4. '<|end|>' → logprob: -10.627961158752441
    5. ' if' → logprob: -10.752961158752441
    6. '       ' → logprob: -10.877961158752441
    7. '```' → logprob: -11.252961158752441
    8. '                   ' → logprob: -11.377961158752441
    9. '   ' → logprob: -11.627961158752441
    10. '            
' → logprob: -12.002961158752441

Token 387: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39257198572158813
    2. ' if' → logprob: -1.7675719261169434
    3. '                ' → logprob: -2.0175719261169434
    4. ' ' → logprob: -4.392571926116943
    5. '                   ' → logprob: -5.767571926116943
    6. '           ' → logprob: -6.517571926116943
    7. '                
' → logprob: -6.892571926116943
    8. ' 
' → logprob: -7.142571926116943
    9. '            ' → logprob: -7.392571926116943
    10. ' ' → logprob: -8.017572402954102

Token 388: ' next' (ID: 2613)
  Prédit: ' next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.3868715465068817
    2. 'next' → logprob: -1.136871576309204
    3. '(next' → logprob: -15.386871337890625
    4. ' not' → logprob: -15.761871337890625
    5. 'not' → logprob: -16.011871337890625
    6. '[next' → logprob: -16.761871337890625
    7. '	next' → logprob: -17.136871337890625
    8. '.next' → logprob: -18.636871337890625
    9. '_next' → logprob: -18.761871337890625
    10. ' nex' → logprob: -20.511871337890625

Token 389: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -4.008129963040119e-06
    2. '_' → logprob: -13.625003814697266
    3. 'str' → logprob: -13.625003814697266
    4. '_next' → logprob: -14.375003814697266
    5. ' _' → logprob: -15.250003814697266
    6. '   ' → logprob: -16.250003814697266
    7. '_STR' → logprob: -16.375003814697266
    8. '           ' → logprob: -16.750003814697266
    9. '```' → logprob: -16.750003814697266
    10. '`' → logprob: -17.000003814697266

Token 390: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0024763736873865128
    2. 'not' → logprob: -6.002476215362549
    3. ')' → logprob: -14.877476692199707
    4. '	not' → logprob: -15.752476692199707
    5. ' in' → logprob: -16.00247573852539
    6. ' no' → logprob: -16.87747573852539
    7. '<|end|>' → logprob: -17.75247573852539
    8. ' )' → logprob: -17.87747573852539
    9. ' ' → logprob: -19.00247573852539
    10. '_not' → logprob: -19.62747573852539

Token 391: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4368676543235779
    2. '<|end|>' → logprob: -1.1868677139282227
    3. 'in' → logprob: -3.3118677139282227
    4. '<|end|>' → logprob: -5.061867713928223
    5. ')' → logprob: -5.936867713928223
    6. '.' → logprob: -7.561867713928223
    7. ' not' → logprob: -7.561867713928223
    8. ' ' → logprob: -7.936867713928223
    9. ' )' → logprob: -7.936867713928223
    10. ' to' → logprob: -8.311867713928223

Token 392: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.07888989895582199
    2. ' visited' → logprob: -2.578889846801758
    3. '
' → logprob: -16.203889846801758
    4. '   ' → logprob: -17.328889846801758
    5. '```' → logprob: -17.828889846801758
    6. ' ' → logprob: -17.828889846801758
    7. 'vis' → logprob: -18.578889846801758
    8. '       ' → logprob: -18.828889846801758
    9. 'visit' → logprob: -18.953889846801758
    10. 'Visited' → logprob: -19.078889846801758

Token 393: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06271384656429291
    2. ':
' → logprob: -2.812713861465454
    3. '                   ' → logprob: -8.187713623046875
    4. '):
' → logprob: -8.312713623046875
    5. '):' → logprob: -9.437713623046875
    6. '               ' → logprob: -9.687713623046875
    7. ')' → logprob: -11.062713623046875
    8. ':

' → logprob: -11.437713623046875
    9. '<|end|>' → logprob: -11.437713623046875
    10. ',' → logprob: -11.562713623046875

Token 394: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0025969420094043016
    2. '                    
' → logprob: -6.752596855163574
    3. '               ' → logprob: -7.127596855163574
    4. '                       ' → logprob: -8.127596855163574
    5. ' visited' → logprob: -9.877596855163574
    6. '           ' → logprob: -9.877596855163574
    7. '                    ' → logprob: -10.002596855163574
    8. '                  ' → logprob: -10.377596855163574
    9. '                           ' → logprob: -10.752596855163574
    10. '                
' → logprob: -10.752596855163574

Token 395: ' visited' (ID: 18416)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5571617484092712
    2. ' queue' → logprob: -1.182161808013916
    3. 'queue' → logprob: -2.932161808013916
    4. '                       ' → logprob: -3.432161808013916
    5. ' visited' → logprob: -4.182161808013916
    6. '
' → logprob: -4.682161808013916
    7. 'visited' (adapté à ' visited') → logprob: -4.682161808013916
    8. '               ' → logprob: -7.932161808013916
    9. '                    ' → logprob: -8.182161331176758
    10. '       ' → logprob: -8.807161331176758

Token 396: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -3.6789137084269896e-05
    2. '.' → logprob: -10.25003719329834
    3. ' .' → logprob: -14.37503719329834
    4. 'add' → logprob: -14.37503719329834
    5. ' add' → logprob: -16.500036239624023
    6. '.Add' → logprob: -17.250036239624023
    7. '	add' → logprob: -17.625036239624023
    8. ')add' → logprob: -18.250036239624023
    9. '<|end|>' → logprob: -18.500036239624023
    10. '_add' → logprob: -18.625036239624023

Token 397: '(next' (ID: 28757)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.5213274309644476e-05
    2. '_' → logprob: -11.125015258789062
    3. '_s' → logprob: -15.375015258789062
    4. '_)' → logprob: -17.375015258789062
    5. ' _' → logprob: -17.500015258789062
    6. '_
' → logprob: -17.875015258789062
    7. '_st' → logprob: -18.250015258789062
    8. ')' → logprob: -18.250015258789062
    9. '_STR' → logprob: -18.750015258789062
    10. 'str' → logprob: -19.000015258789062

Token 399: ')
' (ID: 446)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.24617893993854523
    2. ')' → logprob: -1.7461789846420288
    3. ')
' → logprob: -3.2461788654327393
    4. '
' → logprob: -5.996179103851318
    5. ',' → logprob: -6.871179103851318
    6. '               ' → logprob: -7.871179103851318
    7. '<|end|>' → logprob: -8.49617862701416
    8. '                    
' → logprob: -8.62117862701416
    9. ',
' → logprob: -8.74617862701416
    10. '                    ' → logprob: -9.37117862701416

Token 400: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08782162517309189
    2. '                    
' → logprob: -2.7128217220306396
    3. ' 
' → logprob: -4.9628214836120605
    4. '                    ' → logprob: -5.2128214836120605
    5. '
' → logprob: -6.9628214836120605
    6. '               ' → logprob: -6.9628214836120605
    7. '    
' → logprob: -8.087821960449219
    8. '                     
' → logprob: -8.087821960449219
    9. '  
' → logprob: -8.337821960449219
    10. '(' → logprob: -8.337821960449219

Token 401: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.3872987926006317
    2. ' queue' → logprob: -1.137298822402954
    3. '                   ' → logprob: -7.762298583984375
    4. '(queue' → logprob: -14.512298583984375
    5. '   ' → logprob: -14.887298583984375
    6. '.queue' → logprob: -15.262298583984375
    7. '	queue' → logprob: -15.262298583984375
    8. '                       ' → logprob: -15.637298583984375
    9. '       ' → logprob: -15.887298583984375
    10. '
' → logprob: -15.887298583984375

Token 402: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.0921942703134846e-05
    2. '.' → logprob: -11.87501049041748
    3. '.enqueue' → logprob: -13.00001049041748
    4. '.extend' → logprob: -14.25001049041748
    5. '.app' → logprob: -15.00001049041748
    6. '.put' → logprob: -15.25001049041748
    7. '.push' → logprob: -15.87501049041748
    8. 'append' → logprob: -17.250011444091797
    9. ' .' → logprob: -17.500011444091797
    10. '.add' → logprob: -17.625011444091797

Token 403: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0004497381451074034
    2. '(' → logprob: -7.7504496574401855
    3. '(
' → logprob: -10.875450134277344
    4. '(

' → logprob: -15.625450134277344
    5. ' (' → logprob: -17.125450134277344
    6. 'B' → logprob: -17.875450134277344
    7. ' BFS' → logprob: -18.250450134277344
    8. '(
' → logprob: -19.000450134277344
    9. '((' → logprob: -19.125450134277344
    10. '(A' → logprob: -19.125450134277344

Token 404: 'FS' (ID: 14179)
  Prédit: 'FS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FS' → logprob: -7.3458322731312364e-06
    2. 'F' → logprob: -11.875007629394531
    3. 'FSM' → logprob: -15.250007629394531
    4. 'SF' → logprob: -17.37500762939453
    5. 'S' → logprob: -17.62500762939453
    6. ' FS' → logprob: -17.87500762939453
    7. 'State' → logprob: -18.87500762939453
    8. '   ' → logprob: -19.25000762939453
    9. '_FS' → logprob: -19.62500762939453
    10. 'DFS' → logprob: -20.00000762939453

Token 405: 'State' (ID: 1881)
  Prédit: 'State'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'State' → logprob: 0.0
    2. 'St' → logprob: -17.875
    3. 'Stat' → logprob: -18.125
    4. 'States' → logprob: -18.25
    5. 'S' → logprob: -19.5
    6. '_STATE' → logprob: -19.5
    7. '	State' → logprob: -19.625
    8. '(State' → logprob: -19.75
    9. 'state' → logprob: -19.75
    10. '(B' → logprob: -19.875

Token 406: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.00016909420082811266
    2. '(' → logprob: -8.875168800354004
    3. 'next' → logprob: -10.750168800354004
    4. '(current' → logprob: -12.125168800354004
    5. '(
' → logprob: -13.125168800354004
    6. ' next' → logprob: -15.375168800354004
    7. '(

' → logprob: -17.12516975402832
    8. '[next' → logprob: -17.37516975402832
    9. '	next' → logprob: -17.87516975402832
    10. '(n' → logprob: -17.87516975402832

Token 407: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -9.388769103679806e-05
    2. 'str' → logprob: -9.500093460083008
    3. '_' → logprob: -12.000093460083008
    4. 'Str' → logprob: -12.250093460083008
    5. '_state' → logprob: -13.000093460083008
    6. 'next' → logprob: -13.125093460083008
    7. 'state' → logprob: -14.500093460083008
    8. '```' → logprob: -14.875093460083008
    9. '_next' → logprob: -14.875093460083008
    10. '._' → logprob: -15.000093460083008

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013273799559101462
    2. ',current' → logprob: -6.6263275146484375
    3. ' ,' → logprob: -14.501327514648438
    4. '(current' → logprob: -14.876327514648438
    5. ',
' → logprob: -15.376327514648438
    6. 'current' → logprob: -15.501327514648438
    7. '   ' → logprob: -17.126327514648438
    8. ',c' → logprob: -17.626327514648438
    9. '',' → logprob: -18.001327514648438
    10. ' current' → logprob: -18.126327514648438

Token 409: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.20141352713108063
    2. 'current' → logprob: -1.7014135122299194
    3. '                   ' → logprob: -15.70141315460205
    4. '	current' → logprob: -17.701414108276367
    5. '                       ' → logprob: -18.076414108276367
    6. 'Current' → logprob: -18.451414108276367
    7. '(current' → logprob: -18.951414108276367
    8. '                           ' → logprob: -18.951414108276367
    9. '_current' → logprob: -19.076414108276367
    10. '.current' → logprob: -19.701414108276367

Token 410: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.003273491282016039
    2. 'state' → logprob: -5.7532734870910645
    3. 'State' → logprob: -9.378273963928223
    4. '.state' → logprob: -12.503273963928223
    5. '-state' → logprob: -13.128273963928223
    6. '+' → logprob: -13.628273963928223
    7. ' state' → logprob: -13.753273963928223
    8. '1' → logprob: -14.128273963928223
    9. '_STATE' → logprob: -14.628273963928223
    10. '_states' → logprob: -14.878273963928223

Token 411: '.steps' (ID: 126813)
  Prédit: '.steps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.steps' → logprob: -7.3458322731312364e-06
    2. '.' → logprob: -12.500007629394531
    3. ' .' → logprob: -12.625007629394531
    4. '.
' → logprob: -16.25000762939453
    5. 'steps' → logprob: -16.62500762939453
    6. '.step' → logprob: -17.50000762939453
    7. ' steps' → logprob: -19.50000762939453
    8. '
' → logprob: -19.62500762939453
    9. '.st' → logprob: -19.75000762939453
    10. '.states' → logprob: -20.00000762939453

Token 412: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759416222572327
    2. ' +' → logprob: -0.8259416222572327
    3. '                   ' → logprob: -13.450942039489746
    4. '                    ' → logprob: -15.575942039489746
    5. '+
' → logprob: -15.575942039489746
    6. ' +
' → logprob: -16.07594108581543
    7. '＋' → logprob: -16.20094108581543
    8. '1' → logprob: -16.20094108581543
    9. ' ' → logprob: -16.95094108581543
    10. '               ' → logprob: -17.32594108581543

Token 413: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.750019073486328
    4. '```' → logprob: -19.250019073486328
    5. ')' → logprob: -21.125019073486328
    6. '           ' → logprob: -21.500019073486328
    7. '                   ' → logprob: -21.750019073486328
    8. '۱' → logprob: -22.000019073486328
    9. '       ' → logprob: -22.125019073486328
    10. '
' → logprob: -22.125019073486328

Token 414: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -18.75
    4. '```' → logprob: -19.75
    5. '
' → logprob: -20.75
    6. ')' → logprob: -22.0
    7. '       ' → logprob: -22.75
    8. '  ' → logprob: -23.0
    9. '           ' → logprob: -23.5
    10. '۱' → logprob: -24.125

Token 415: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00043674863991327584
    2. '))
' → logprob: -7.750436782836914
    3. ')' → logprob: -12.125436782836914
    4. ')))' → logprob: -15.625436782836914
    5. ' ))' → logprob: -15.875436782836914
    6. '               ' → logprob: -16.500436782836914
    7. '           ' → logprob: -16.625436782836914
    8. '                   ' → logprob: -17.000436782836914
    9. '       ' → logprob: -17.500436782836914
    10. ')
' → logprob: -17.750436782836914

Token 416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029827317222952843
    2. '<|end|>' → logprob: -3.779827356338501
    3. '
' → logprob: -5.654827117919922
    4. ')' → logprob: -6.154827117919922
    5. '```' → logprob: -8.529827117919922
    6. '        
' → logprob: -8.654827117919922
    7. 'return' → logprob: -8.779827117919922
    8. ' return' → logprob: -8.779827117919922
    9. '   ' → logprob: -9.404827117919922
    10. ':return' → logprob: -10.779827117919922

Token 417: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0001769616355886683
    2. '       ' → logprob: -8.750177383422852
    3. ' return' → logprob: -11.250177383422852
    4. 'raise' → logprob: -12.625177383422852
    5. '-' → logprob: -14.125177383422852
    6. '
' → logprob: -14.250177383422852
    7. '   ' → logprob: -14.625177383422852
    8. 'None' → logprob: -16.00017738342285
    9. '	return' → logprob: -16.25017738342285
    10. '```' → logprob: -17.25017738342285

Token 418: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002036595979006961
    2. ' -' → logprob: -8.500204086303711
    3. 'None' → logprob: -16.00020408630371
    4. '-f' → logprob: -20.37520408630371
    5. '-inf' → logprob: -20.50020408630371
    6. ' None' → logprob: -20.62520408630371
    7. '   ' → logprob: -20.62520408630371
    8. '-none' → logprob: -20.87520408630371
    9. ' ' → logprob: -21.12520408630371
    10. 'float' → logprob: -21.50020408630371

Token 419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '2' → logprob: -21.5
    4. '```' → logprob: -22.125
    5. '１' → logprob: -22.375
    6. '   ' → logprob: -22.5
    7. '۱' → logprob: -23.0
    8. 'int' → logprob: -23.125
    9. '-' → logprob: -23.25
    10. '  ' → logprob: -23.625

Token 420: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 421: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0347161702811718
    2. '<|end|>' → logprob: -3.4097161293029785
    3. '```' → logprob: -7.2847161293029785
    4. 'def' → logprob: -8.784716606140137
    5. '<|end|>' → logprob: -9.159716606140137
    6. '[' → logprob: -10.284716606140137
    7. 'a' → logprob: -10.659716606140137
    8. '
' → logprob: -11.159716606140137
    9. '.' → logprob: -11.909716606140137
    10. ' #' → logprob: -12.034716606140137

Token 422: ' Input' (ID: 10090)
  Prédit: ' Sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Sub' → logprob: -0.17382647097110748
    2. ' Solution' → logprob: -3.1738264560699463
    3. ' Reverse' → logprob: -3.5488264560699463
    4. ' Br' → logprob: -3.9238264560699463
    5. ' Re' → logprob: -4.423826694488525
    6. ' String' → logprob: -4.548826694488525
    7. 'Sub' → logprob: -4.923826694488525
    8. ' Grammar' → logprob: -5.173826694488525
    9. ' Solver' → logprob: -5.548826694488525
    10. ' Transformation' → logprob: -5.673826694488525

Token 423: 'Parser' (ID: 9231)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.8066148161888123
    2. 'Parser' → logprob: -1.306614875793457
    3. 'Reader' → logprob: -1.556614875793457
    4. ':' → logprob: -3.431614875793457
    5. 'Processor' → logprob: -3.556614875793457
    6. 'Data' → logprob: -5.681614875793457
    7. 'Provider' → logprob: -5.931614875793457
    8. 'Validator' → logprob: -7.056614875793457
    9. 'Generator' → logprob: -7.181614875793457
    10. ':
' → logprob: -7.181614875793457

Token 424: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001422770437784493
    2. ':
' → logprob: -8.875142097473145
    3. ':def' → logprob: -14.000142097473145
    4. ':

' → logprob: -15.250142097473145
    5. '<|end|>' → logprob: -15.250142097473145
    6. '(' → logprob: -15.375142097473145
    7. '():' → logprob: -15.375142097473145
    8. ' :' → logprob: -15.500142097473145
    9. ':**' → logprob: -15.625142097473145
    10. '(object' → logprob: -16.62514305114746

Token 425: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01056325901299715
    2. ' def' → logprob: -4.635563373565674
    3. 'def' → logprob: -8.385562896728516
    4. '<|end|>' → logprob: -8.385562896728516
    5. '    
' → logprob: -8.635562896728516
    6. '```' → logprob: -9.635562896728516
    7. '    ' → logprob: -11.010562896728516
    8. ' 
' → logprob: -11.385562896728516
    9. '
' → logprob: -11.635562896728516
    10. '<|end|>' → logprob: -11.885562896728516

Token 426: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.03809874504804611
    2. 'def' (adapté à ' def') → logprob: -3.2880988121032715
    3. '   ' → logprob: -9.788098335266113
    4. ' @' → logprob: -13.788098335266113
    5. '@' → logprob: -15.913098335266113
    6. '	def' → logprob: -17.28809928894043
    7. 'de' → logprob: -18.78809928894043
    8. 'class' → logprob: -20.03809928894043
    9. ' de' → logprob: -20.16309928894043
    10. ':def' → logprob: -20.41309928894043

Token 427: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.702469527721405
    2. '_init' → logprob: -1.3274695873260498
    3. ' __' → logprob: -2.20246958732605
    4. 'parse' → logprob: -3.20246958732605
    5. '_parse' → logprob: -4.202469348907471
    6. 'init' → logprob: -4.202469348907471
    7. '_lines' → logprob: -4.327469348907471
    8. 'def' → logprob: -4.452469348907471
    9. 'int' → logprob: -4.702469348907471
    10. ' parse' → logprob: -4.952469348907471

Token 428: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -16.75
    3. ' init' → logprob: -18.0
    4. 'ini' → logprob: -19.125
    5. '_init' → logprob: -19.75
    6. '(init' → logprob: -20.875
    7. 'inite' → logprob: -21.125
    8. 'new' → logprob: -21.75
    9. '	init' → logprob: -21.875
    10. 'int' → logprob: -22.0

Token 429: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6335476040840149
    2. '__(' → logprob: -0.7585476040840149
    3. '(' → logprob: -7.758547782897949
    4. '__(
' → logprob: -8.50854778289795
    5. '__' → logprob: -8.75854778289795
    6. ' (' → logprob: -9.75854778289795
    7. 'self' → logprob: -9.88354778289795
    8. '<|end|>' → logprob: -11.25854778289795
    9. ')(' → logprob: -12.00854778289795
    10. '<>(' → logprob: -12.00854778289795

Token 430: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.68153518543113e-05
    2. ')' → logprob: -10.250057220458984
    3. ' self' → logprob: -11.500057220458984
    4. '
' → logprob: -11.875057220458984
    5. '):
' → logprob: -13.125057220458984
    6. '   ' → logprob: -13.500057220458984
    7. '(self' → logprob: -15.125057220458984
    8. '       ' → logprob: -15.875057220458984
    9. '	self' → logprob: -16.250057220458984
    10. ')
' → logprob: -16.625057220458984

Token 431: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03558649867773056
    2. 'self' → logprob: -4.160586357116699
    3. '):' → logprob: -4.160586357116699
    4. '(self' → logprob: -6.535586357116699
    5. '):
' → logprob: -6.910586357116699
    6. ',self' → logprob: -7.660586357116699
    7. ')' → logprob: -7.785586357116699
    8. ' self' → logprob: -8.6605863571167
    9. '<|end|>' → logprob: -9.4105863571167
    10. ' ,' → logprob: -10.0355863571167

Token 432: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0014596428954973817
    2. '       ' → logprob: -7.00145959854126
    3. ' self' → logprob: -7.62645959854126
    4. '   ' → logprob: -10.376460075378418
    5. '
' → logprob: -10.626460075378418
    6. '	self' → logprob: -12.376460075378418
    7. '(self' → logprob: -14.751460075378418
    8. 'def' → logprob: -15.376460075378418
    9. ' ' → logprob: -17.0014591217041
    10. '     ' → logprob: -17.1264591217041

Token 433: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.15986891090869904
    2. '       ' → logprob: -2.2848689556121826
    3. 'pass' → logprob: -3.1598689556121826
    4. ' pass' → logprob: -6.2848687171936035
    5. ' self' → logprob: -6.5348687171936035
    6. '   ' → logprob: -9.034869194030762
    7. 'def' → logprob: -9.784869194030762
    8. '
' → logprob: -10.534869194030762
    9. 'import' → logprob: -13.784869194030762
    10. '	pass' → logprob: -13.784869194030762

Token 434: '.datasets' (ID: 136555)
  Prédit: '.rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rules' → logprob: -0.006709093693643808
    2. '.lines' → logprob: -5.256709098815918
    3. '.pattern' → logprob: -7.881709098815918
    4. '.sub' → logprob: -8.506709098815918
    5. '.input' → logprob: -8.506709098815918
    6. 'rules' → logprob: -9.131709098815918
    7. '.rule' → logprob: -9.131709098815918
    8. '.inputs' → logprob: -9.506709098815918
    9. '.steps' → logprob: -9.506709098815918
    10. '.r' → logprob: -9.756709098815918

Token 435: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20181724429130554
    2. ' =' → logprob: -1.701817274093628
    3. '=[]' → logprob: -7.826817035675049
    4. '   ' → logprob: -13.951817512512207
    5. '=[]
' → logprob: -13.951817512512207
    6. '<|end|>' → logprob: -13.951817512512207
    7. ':' → logprob: -14.201817512512207
    8. ' ' → logprob: -14.826817512512207
    9. '[]' → logprob: -15.076817512512207
    10. '={}' → logprob: -15.576817512512207

Token 436: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -5.5577775128767826e-06
    2. '[]
' → logprob: -12.250005722045898
    3. '[]

' → logprob: -14.750005722045898
    4. ' []' → logprob: -16.0000057220459
    5. '[]}' → logprob: -16.0000057220459
    6. '[' → logprob: -17.1250057220459
    7. '{}' → logprob: -18.0000057220459
    8. '[]"' → logprob: -18.2500057220459
    9. 'list' → logprob: -18.8750057220459
    10. '[])' → logprob: -19.0000057220459

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07949210703372955
    2. '
' → logprob: -2.5794920921325684
    3. '    
' → logprob: -8.579492568969727
    4. '<|end|>' → logprob: -8.704492568969727
    5. 'def' → logprob: -8.829492568969727
    6. ' def' → logprob: -9.329492568969727
    7. '

' → logprob: -12.454492568969727
    8. ' 
' → logprob: -12.704492568969727
    9. '<|end|>' → logprob: -12.954492568969727
    10. '        
' → logprob: -13.579492568969727

Token 438: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.8351892473874614e-05
    2. ' def' → logprob: -10.000048637390137
    3. '   ' → logprob: -12.750048637390137
    4. '
' → logprob: -18.00004768371582
    5. '	def' → logprob: -18.87504768371582
    6. 'class' → logprob: -20.37504768371582
    7. ' ' → logprob: -20.87504768371582
    8. 'import' → logprob: -22.87504768371582
    9. '    
' → logprob: -23.75004768371582
    10. 'de' → logprob: -24.12504768371582

Token 439: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.012094815261662006
    2. 'add' → logprob: -4.762094974517822
    3. ' parse' → logprob: -5.762094974517822
    4. 'read' → logprob: -8.387094497680664
    5. 'load' → logprob: -9.887094497680664
    6. ' add' → logprob: -10.137094497680664
    7. 'append' → logprob: -12.262094497680664
    8. 'process' → logprob: -12.262094497680664
    9. ' read' → logprob: -13.637094497680664
    10. ' load' → logprob: -15.137094497680664

Token 440: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00017410075815860182
    2. '(' → logprob: -8.875174522399902
    3. 'self' → logprob: -11.000174522399902
    4. '_line' → logprob: -11.125174522399902
    5. '_input' → logprob: -13.375174522399902
    6. '(
' → logprob: -15.250174522399902
    7. '(s' → logprob: -15.375174522399902
    8. ' self' → logprob: -15.500174522399902
    9. ' (' → logprob: -15.625174522399902
    10. 'line' → logprob: -16.125173568725586

Token 441: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4312328100204468
    2. 'self' → logprob: -1.8062328100204468
    3. '_line' → logprob: -2.3062329292297363
    4. '(self' → logprob: -2.9312329292297363
    5. '_input' → logprob: -3.5562329292297363
    6. ')' → logprob: -6.681232929229736
    7. ',self' → logprob: -6.931232929229736
    8. '_lines' → logprob: -7.556232929229736
    9. 'line' → logprob: -7.931232929229736
    10. 'input' → logprob: -8.056232452392578

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019043663050979376
    2. '   ' → logprob: -6.751904487609863
    3. 'self' → logprob: -7.876904487609863
    4. ' self' → logprob: -8.251904487609863
    5. 'import' → logprob: -9.751904487609863
    6. 'n' → logprob: -11.876904487609863
    7. '(self' → logprob: -12.376904487609863
    8. '           ' → logprob: -13.126904487609863
    9. 'input' → logprob: -13.126904487609863
    10. ' line' → logprob: -13.251904487609863

Token 443: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.07319354265928268
    2. 'while' → logprob: -3.0731935501098633
    3. 'lines' → logprob: -4.948193550109863
    4. 'n' → logprob: -4.948193550109863
    5. ' import' → logprob: -5.073193550109863
    6. 'datasets' → logprob: -6.073193550109863
    7. 'data' → logprob: -7.948193550109863
    8. ' n' → logprob: -8.198193550109863
    9. ' while' → logprob: -8.323193550109863
    10. 'try' → logprob: -8.698193550109863

Token 444: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.001502717612311244
    2. ' sys' → logprob: -6.501502513885498
    3. '=sys' → logprob: -15.501502990722656
    4. '	sys' → logprob: -16.876502990722656
    5. 're' → logprob: -17.251502990722656
    6. 'json' → logprob: -17.501502990722656
    7. '_sys' → logprob: -17.751502990722656
    8. '.sys' → logprob: -18.751502990722656
    9. '```' → logprob: -19.001502990722656
    10. '(sys' → logprob: -19.126502990722656

Token 445: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013240495463833213
    2. ' for' → logprob: -7.25132417678833
    3. 'for' → logprob: -7.75132417678833
    4. ' lines' → logprob: -9.626323699951172
    5. '        
' → logprob: -10.126323699951172
    6. '<|end|>' → logprob: -10.751323699951172
    7. '
' → logprob: -11.001323699951172
    8. ' line' → logprob: -11.626323699951172
    9. ',' → logprob: -11.626323699951172
    10. 'n' → logprob: -12.876323699951172

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033865992445498705
    2. '
' → logprob: -6.753386497497559
    3. ' for' → logprob: -6.753386497497559
    4. 'for' → logprob: -7.003386497497559
    5. ' lines' → logprob: -9.128386497497559
    6. '        
' → logprob: -11.378386497497559
    7. ',' → logprob: -12.503386497497559
    8. 'n' → logprob: -13.003386497497559
    9. ' line' → logprob: -13.003386497497559
    10. 'lines' → logprob: -13.128386497497559

Token 447: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' (adapté à ' lines') → logprob: -0.7711104154586792
    2. ' lines' → logprob: -0.8961104154586792
    3. 'for' → logprob: -2.7711105346679688
    4. ' for' → logprob: -3.6461105346679688
    5. '       ' → logprob: -3.8961105346679688
    6. 'input' → logprob: -4.771110534667969
    7. ' input' → logprob: -5.396110534667969
    8. 'data' → logprob: -5.396110534667969
    9. 'line' → logprob: -6.646110534667969
    10. ' data' → logprob: -7.271110534667969

Token 448: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25208884477615356
    2. ' =' → logprob: -1.5020887851715088
    3. '()' → logprob: -9.12708854675293
    4. '   ' → logprob: -11.50208854675293
    5. '=
' → logprob: -11.50208854675293
    6. ' =
' → logprob: -12.25208854675293
    7. '()
' → logprob: -12.37708854675293
    8. '       ' → logprob: -12.37708854675293
    9. '=line' → logprob: -12.75208854675293
    10. '_' → logprob: -13.00208854675293

Token 449: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.006979390978813171
    2. ' sys' → logprob: -5.006979465484619
    3. '[' → logprob: -8.256978988647461
    4. ' [' → logprob: -12.631978988647461
    5. 'list' → logprob: -14.256978988647461
    6. '(sys' → logprob: -14.756978988647461
    7. '=sys' → logprob: -15.756978988647461
    8. '	sys' → logprob: -16.00697898864746
    9. '[s' → logprob: -17.50697898864746
    10. '[]' → logprob: -17.75697898864746

Token 450: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.584861744660884e-05
    2. '.' → logprob: -10.250045776367188
    3. '.stdout' → logprob: -12.125045776367188
    4. 'stdin' → logprob: -13.125045776367188
    5. '.argv' → logprob: -13.375045776367188
    6. '.std' → logprob: -14.125045776367188
    7. '._' → logprob: -15.000045776367188
    8. '.stderr' → logprob: -16.125045776367188
    9. ' stdin' → logprob: -16.625045776367188
    10. '.__' → logprob: -17.125045776367188

Token 451: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.06287539750337601
    2. '.readline' → logprob: -2.812875509262085
    3. '.read' → logprob: -7.687875270843506
    4. '.' → logprob: -7.812875270843506
    5. 'read' → logprob: -10.062875747680664
    6. '.buffer' → logprob: -14.437875747680664
    7. 'lines' → logprob: -15.312875747680664
    8. '   ' → logprob: -15.437875747680664
    9. 'buffer' → logprob: -15.562875747680664
    10. ' readline' → logprob: -15.687875747680664

Token 452: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.1002236008644104
    2. '()' → logprob: -2.3502235412597656
    3. '()
' → logprob: -11.475223541259766
    4. '(' → logprob: -12.725223541259766
    5. '()

' → logprob: -13.600223541259766
    6. '()\' → logprob: -14.225223541259766
    7. 'lines' → logprob: -14.475223541259766
    8. '()`' → logprob: -15.100223541259766
    9. '()
' → logprob: -15.475223541259766
    10. 'line' → logprob: -15.850223541259766

Token 453: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.25251805782318115
    2. 'strip' → logprob: -1.5025180578231812
    3. 'decode' → logprob: -8.377517700195312
    4. 'rstrip' → logprob: -8.627517700195312
    5. 'read' → logprob: -8.752517700195312
    6. 'lines' → logprob: -11.252517700195312
    7. '(split' → logprob: -13.002517700195312
    8. '().' → logprob: -13.127517700195312
    9. 'replace' → logprob: -13.377517700195312
    10. ' split' → logprob: -13.877517700195312

Token 454: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.006725549232214689
    2. '('\' → logprob: -5.006725311279297
    3. '()' → logprob: -11.631725311279297
    4. '("\' → logprob: -14.381725311279297
    5. 'line' → logprob: -14.756725311279297
    6. '(' → logprob: -15.006725311279297
    7. '()\' → logprob: -17.631725311279297
    8. '('' → logprob: -18.506725311279297
    9. 'lin' → logprob: -18.756725311279297
    10. '()
' → logprob: -19.006725311279297

Token 455: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08916683495044708
    2. '       ' → logprob: -2.7141668796539307
    3. '()
' → logprob: -3.9641668796539307
    4. '()

' → logprob: -11.089166641235352
    5. '   ' → logprob: -11.464166641235352
    6. '<|end|>' → logprob: -11.839166641235352
    7. '()[' → logprob: -12.089166641235352
    8. '()\' → logprob: -12.464166641235352
    9. '        
' → logprob: -12.589166641235352
    10. '();' → logprob: -12.589166641235352

Token 456: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011455760104581714
    2. '
' → logprob: -7.376145362854004
    3. 'index' → logprob: -9.001145362854004
    4. 'i' → logprob: -9.251145362854004
    5. '   ' → logprob: -9.251145362854004
    6. '	' → logprob: -9.376145362854004
    7. ' i' → logprob: -10.501145362854004
    8. 'idx' → logprob: -10.501145362854004
    9. '        
' → logprob: -10.751145362854004
    10. ' index' → logprob: -11.626145362854004

Token 457: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19176684319972992
    2. 'idx' → logprob: -2.4417667388916016
    3. 'index' (adapté à ' index') → logprob: -2.4417667388916016
    4. '       ' → logprob: -8.441766738891602
    5. 'n' → logprob: -8.566766738891602
    6. 'self' → logprob: -11.066766738891602
    7. ' idx' → logprob: -11.066766738891602
    8. 'line' → logprob: -11.191766738891602
    9. 'current' → logprob: -11.941766738891602
    10. 'lines' → logprob: -11.941766738891602

Token 458: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132927417755127
    2. '=' → logprob: -1.3132927417755127
    3. ' +=' → logprob: -11.188292503356934
    4. '<|end|>' → logprob: -12.063292503356934
    5. ' ' → logprob: -12.313292503356934
    6. '+=' → logprob: -12.813292503356934
    7. ')' → logprob: -14.188292503356934
    8. '0' → logprob: -14.313292503356934
    9. '_' → logprob: -14.438292503356934
    10. ' =
' → logprob: -15.063292503356934

Token 459: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '1' → logprob: -18.125085830688477
    4. '   ' → logprob: -18.500085830688477
    5. '       ' → logprob: -19.500085830688477
    6. '```' → logprob: -21.375085830688477
    7. '۰' → logprob: -21.500085830688477
    8. '=' → logprob: -21.875085830688477
    9. '[' → logprob: -21.875085830688477
    10. '  ' → logprob: -22.875085830688477

Token 460: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '1' → logprob: -16.2500057220459
    4. '   ' → logprob: -19.1250057220459
    5. '۰' → logprob: -19.5000057220459
    6. '```' → logprob: -19.8125057220459
    7. '=' → logprob: -19.9375057220459
    8. '[' → logprob: -20.5625057220459
    9. '０' → logprob: -21.3125057220459
    10. 'len' → logprob: -21.3750057220459

Token 461: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0703047439455986
    2. '
' → logprob: -2.9453046321868896
    3. 'while' → logprob: -4.445304870605469
    4. ' while' → logprob: -5.945304870605469
    5. '<|end|>' → logprob: -7.570304870605469
    6. '        
' → logprob: -8.445304870605469
    7. '	while' → logprob: -9.570304870605469
    8. ',' → logprob: -10.070304870605469
    9. '   ' → logprob: -10.570304870605469
    10. '```' → logprob: -11.195304870605469

Token 462: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27293816208839417
    2. 'while' → logprob: -1.5229381322860718
    3. ' while' → logprob: -3.8979382514953613
    4. '	while' → logprob: -8.522937774658203
    5. '   ' → logprob: -9.397937774658203
    6. '```' → logprob: -9.522937774658203
    7. 'n' → logprob: -10.022937774658203
    8. '<|end|>' → logprob: -10.647937774658203
    9. '
' → logprob: -10.772937774658203
    10. '        
' → logprob: -11.272937774658203

Token 463: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.6202099323272705
    2. 'while' (adapté à ' while') → logprob: -0.8702099323272705
    3. ' n' → logprob: -3.8702099323272705
    4. 'n' → logprob: -4.120209693908691
    5. '       ' → logprob: -5.495209693908691
    6. 'num' → logprob: -6.495209693908691
    7. ' num' → logprob: -8.370209693908691
    8. 'datasets' → logprob: -8.995209693908691
    9. 'dataset' → logprob: -9.370209693908691
    10. ' datasets' → logprob: -10.370209693908691

Token 464: ' True' (ID: 6432)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.25194862484931946
    2. ' index' → logprob: -1.501948595046997
    3. ' True' → logprob: -11.126948356628418
    4. 'True' → logprob: -12.376948356628418
    5. '	index' → logprob: -14.876948356628418
    6. '   ' → logprob: -16.501949310302734
    7. '(index' → logprob: -16.751949310302734
    8. ' ' → logprob: -17.251949310302734
    9. ' lines' → logprob: -17.626949310302734
    10. '    ' → logprob: -17.751949310302734

Token 465: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28586432337760925
    2. ':
' → logprob: -1.4108643531799316
    3. '           ' → logprob: -5.785864353179932
    4. ' and' → logprob: -6.785864353179932
    5. '       ' → logprob: -8.035863876342773
    6. ',' → logprob: -9.785863876342773
    7. '<|end|>' → logprob: -10.410863876342773
    8. 'and' → logprob: -10.660863876342773
    9. '):
' → logprob: -11.285863876342773
    10. '   ' → logprob: -11.285863876342773

Token 466: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7213045954704285
    2. ' if' → logprob: -1.0963046550750732
    3. 'if' → logprob: -1.9713046550750732
    4. '       ' → logprob: -3.2213046550750732
    5. '   ' → logprob: -7.471304416656494
    6. '```' → logprob: -12.096304893493652
    7. '	if' → logprob: -12.346304893493652
    8. '	   ' → logprob: -12.346304893493652
    9. '    ' → logprob: -12.596304893493652
    10. '	       ' → logprob: -13.096304893493652

Token 467: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.14998428523540497
    2. ' if' → logprob: -2.024984359741211
    3. '           ' → logprob: -5.024984359741211
    4. '   ' → logprob: -7.649984359741211
    5. 'line' → logprob: -8.649984359741211
    6. 'n' → logprob: -11.149984359741211
    7. ' line' → logprob: -11.149984359741211
    8. '       ' → logprob: -11.149984359741211
    9. 'num' → logprob: -12.274984359741211
    10. ' ' → logprob: -12.649984359741211

Token 468: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -9.77022064034827e-05
    2. ' index' → logprob: -9.250097274780273
    3. 'lines' → logprob: -13.875097274780273
    4. '   ' → logprob: -14.625097274780273
    5. '	index' → logprob: -16.750097274780273
    6. '       ' → logprob: -17.000097274780273
    7. '           ' → logprob: -18.250097274780273
    8. ' ' → logprob: -18.375097274780273
    9. ' lines' → logprob: -18.875097274780273
    10. '(index' → logprob: -19.250097274780273

Token 469: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.22547084093093872
    2. ' >=' → logprob: -1.600470781326294
    3. ']>=' → logprob: -10.850470542907715
    4. '==' → logprob: -10.975470542907715
    5. '+' → logprob: -11.725470542907715
    6. ')>=' → logprob: -11.850470542907715
    7. ' ' → logprob: -13.100470542907715
    8. '=' → logprob: -13.350470542907715
    9. ' ==' → logprob: -13.975470542907715
    10. '>' → logprob: -14.725470542907715

Token 470: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -7.3458322731312364e-06
    2. ' len' → logprob: -11.875007629394531
    3. '=len' → logprob: -16.62500762939453
    4. '<len' → logprob: -17.00000762939453
    5. '           ' → logprob: -17.12500762939453
    6. 'length' → logprob: -17.75000762939453
    7. '	len' → logprob: -17.87500762939453
    8. '(len' → logprob: -18.12500762939453
    9. '[len' → logprob: -18.62500762939453
    10. ',len' → logprob: -19.00000762939453

Token 471: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.00839542131870985
    2. 'lines' → logprob: -5.258395195007324
    3. ' lines' → logprob: -5.758395195007324
    4. '	lines' → logprob: -14.883395195007324
    5. '.lines' → logprob: -17.75839614868164
    6. '(line' → logprob: -17.88339614868164
    7. '(' → logprob: -18.88339614868164
    8. '_lines' → logprob: -19.00839614868164
    9. 'line' → logprob: -19.63339614868164
    10. '-lines' → logprob: -20.00839614868164

Token 472: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.09624585509300232
    2. ':
' → logprob: -3.346245765686035
    3. '):
' → logprob: -3.471245765686035
    4. ':' → logprob: -3.971245765686035
    5. ')' → logprob: -5.471245765686035
    6. '):' → logprob: -6.471245765686035
    7. 'or' → logprob: -7.596245765686035
    8. '           ' → logprob: -8.471245765686035
    9. ' and' → logprob: -10.596245765686035
    10. '():
' → logprob: -10.596245765686035

Token 473: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004533607512712479
    2. '           ' → logprob: -5.504533767700195
    3. '       ' → logprob: -8.379533767700195
    4. '   ' → logprob: -8.629533767700195
    5. '
' → logprob: -11.004533767700195
    6. '                   ' → logprob: -11.254533767700195
    7. 'break' → logprob: -13.004533767700195
    8. '              ' → logprob: -13.129533767700195
    9. '                
' → logprob: -13.254533767700195
    10. ' ' → logprob: -13.629533767700195

Token 474: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.04212227836251259
    2. '               ' → logprob: -3.5421223640441895
    3. ' break' → logprob: -4.5421223640441895
    4. 'return' → logprob: -6.5421223640441895
    5. '           ' → logprob: -9.167121887207031
    6. '                   ' → logprob: -9.667121887207031
    7. '	break' → logprob: -10.667121887207031
    8. '
' → logprob: -12.417121887207031
    9. ' return' → logprob: -12.792121887207031
    10. '   ' → logprob: -13.667121887207031

Token 475: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.048961348831653595
    2. '           ' → logprob: -3.6739614009857178
    3. '            
' → logprob: -3.9239614009857178
    4. '    
' → logprob: -6.173961162567139
    5. '  
' → logprob: -8.923961639404297
    6. ' 
' → logprob: -9.423961639404297
    7. '

' → logprob: -9.798961639404297
    8. '\n' → logprob: -9.798961639404297
    9. '        
' → logprob: -10.048961639404297
    10. '
' → logprob: -10.048961639404297

Token 476: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004343006294220686
    2. '
' → logprob: -6.504343032836914
    3. 'line' → logprob: -7.004343032836914
    4. ' if' → logprob: -7.129343032836914
    5. '            
' → logprob: -7.629343032836914
    6. ' line' → logprob: -8.379343032836914
    7. 'if' → logprob: -9.129343032836914
    8. '    
' → logprob: -9.129343032836914
    9. '       ' → logprob: -9.879343032836914
    10. '   ' → logprob: -10.129343032836914

Token 477: ' n' (ID: 297)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.23703014850616455
    2. 'n' (adapté à ' n') → logprob: -2.362030029296875
    3. 'start' → logprob: -2.737030029296875
    4. 'count' → logprob: -4.737030029296875
    5. '           ' → logprob: -4.862030029296875
    6. 'if' → logprob: -4.862030029296875
    7. 'num' → logprob: -4.987030029296875
    8. 'first' → logprob: -5.112030029296875
    9. 'dataset' → logprob: -5.987030029296875
    10. 'k' → logprob: -6.237030029296875

Token 478: '_line' (ID: 14418)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760794281959534
    2. ' =' → logprob: -0.8260794281959534
    3. '=int' → logprob: -9.326079368591309
    4. '_line' → logprob: -11.326079368591309
    5. '=
' → logprob: -11.326079368591309
    6. ' =
' → logprob: -11.826079368591309
    7. '   ' → logprob: -12.451079368591309
    8. ' ' → logprob: -12.576079368591309
    9. '    ' → logprob: -12.701079368591309
    10. '=line' → logprob: -12.701079368591309

Token 479: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142902433872223
    2. ' =' → logprob: -1.701429009437561
    3. 's' → logprob: -11.20142936706543
    4. '=line' → logprob: -14.20142936706543
    5. ' ' → logprob: -14.82642936706543
    6. '=
' → logprob: -15.07642936706543
    7. '   ' → logprob: -15.57642936706543
    8. '  ' → logprob: -15.95142936706543
    9. 'd' → logprob: -15.95142936706543
    10. ' =
' → logprob: -16.82642936706543

Token 480: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.061969365924596786
    2. ' lines' → logprob: -2.81196928024292
    3. '(lines' → logprob: -14.186969757080078
    4. '	lines' → logprob: -14.436969757080078
    5. '   ' → logprob: -15.436969757080078
    6. 'line' → logprob: -16.186969757080078
    7. ' ' → logprob: -17.436969757080078
    8. '-lines' → logprob: -17.561969757080078
    9. '.lines' → logprob: -17.811969757080078
    10. 'int' → logprob: -18.686969757080078

Token 481: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.0003971839905716479
    2. 'index' → logprob: -8.625396728515625
    3. ' =' → logprob: -9.250396728515625
    4. '=index' → logprob: -9.375396728515625
    5. '=' → logprob: -10.625396728515625
    6. '[' → logprob: -12.375396728515625
    7. '```' → logprob: -13.875396728515625
    8. ' [' → logprob: -13.875396728515625
    9. '[
' → logprob: -14.250396728515625
    10. 'def' → logprob: -14.250396728515625

Token 482: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.09789173305034637
    2. ']' → logprob: -2.7228918075561523
    3. ']
' → logprob: -3.5978918075561523
    4. '.strip' → logprob: -9.222891807556152
    5. '
' → logprob: -10.347891807556152
    6. ' ].' → logprob: -10.597891807556152
    7. '];' → logprob: -11.222891807556152
    8. ']
' → logprob: -12.222891807556152
    9. 'strip' → logprob: -12.472891807556152
    10. '           ' → logprob: -12.847891807556152

Token 483: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -3.128163257315464e-07
    2. 'rstrip' → logprob: -15.25
    3. ' strip' → logprob: -17.5
    4. 'split' → logprob: -18.875
    5. '.strip' → logprob: -20.25
    6. '_strip' → logprob: -20.875
    7. 'str' → logprob: -22.0
    8. 'trim' → logprob: -22.5
    9. '(strip' → logprob: -22.5
    10. '-strip' → logprob: -23.75

Token 484: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.36820465326309204
    2. '()' → logprob: -1.2432045936584473
    3. '           ' → logprob: -4.118204593658447
    4. '       ' → logprob: -7.368204593658447
    5. '
' → logprob: -7.868204593658447
    6. '<|end|>' → logprob: -8.243205070495605
    7. 'if' → logprob: -8.368205070495605
    8. '(n' → logprob: -8.368205070495605
    9. '<|end|>' → logprob: -8.618205070495605
    10. '            
' → logprob: -8.743205070495605

Token 485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12985296547412872
    2. 'if' → logprob: -2.1298530101776123
    3. ' if' → logprob: -6.754852771759033
    4. '       ' → logprob: -7.129852771759033
    5. '
' → logprob: -7.379852771759033
    6. 'n' → logprob: -9.254853248596191
    7. 'index' → logprob: -9.504853248596191
    8. '\n' → logprob: -10.379853248596191
    9. '            
' → logprob: -10.629853248596191
    10. '```' → logprob: -10.629853248596191

Token 486: ' index' (ID: 3472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31336018443107605
    2. 'index' (adapté à ' index') → logprob: -1.3133602142333984
    3. '           ' → logprob: -9.313360214233398
    4. '       ' → logprob: -12.438360214233398
    5. ' if' → logprob: -12.813360214233398
    6. 'n' → logprob: -14.188360214233398
    7. ' index' → logprob: -14.313360214233398
    8. 'try' → logprob: -16.6883602142334
    9. '```' → logprob: -16.8133602142334
    10. '            
' → logprob: -17.4383602142334

Token 487: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20148105919361115
    2. ' +=' → logprob: -1.7014811038970947
    3. '+' → logprob: -10.326480865478516
    4. '==' → logprob: -11.076480865478516
    5. '```' → logprob: -11.951480865478516
    6. '++' → logprob: -12.576480865478516
    7. ']+=' → logprob: -12.701480865478516
    8. '>=' → logprob: -13.201480865478516
    9. '=' → logprob: -13.201480865478516
    10. '+="' → logprob: -14.451480865478516

Token 488: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '
' → logprob: -16.625001907348633
    4. '```' → logprob: -18.250001907348633
    5. '   ' → logprob: -21.375001907348633
    6. '１' → logprob: -22.125001907348633
    7. '`' → logprob: -22.125001907348633
    8. '0' → logprob: -22.500001907348633
    9. '۱' → logprob: -23.000001907348633
    10. '``' → logprob: -23.062501907348633

Token 489: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -20.625
    4. '
' → logprob: -20.75
    5. '0' → logprob: -21.0
    6. '１' → logprob: -22.125
    7. '۱' → logprob: -22.5
    8. '   ' → logprob: -22.75
    9. '

' → logprob: -23.5
    10. '१' → logprob: -23.8125

Token 490: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17215785384178162
    2. '           ' → logprob: -2.4221577644348145
    3. ' if' → logprob: -2.6721577644348145
    4. '       ' → logprob: -8.547158241271973
    5. '
' → logprob: -9.547158241271973
    6. '            
' → logprob: -10.672158241271973
    7. '   ' → logprob: -11.172158241271973
    8. 'n' → logprob: -12.297158241271973
    9. '          ' → logprob: -13.047158241271973
    10. '               ' → logprob: -13.297158241271973

Token 491: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0018802082631736994
    2. '           ' → logprob: -6.751880168914795
    3. ' if' → logprob: -7.251880168914795
    4. '       ' → logprob: -14.251880645751953
    5. '```' → logprob: -15.751880645751953
    6. 'n' → logprob: -15.876880645751953
    7. '            
' → logprob: -16.751880645751953
    8. '
' → logprob: -17.251880645751953
    9. 'If' → logprob: -17.251880645751953
    10. '   ' → logprob: -17.251880645751953

Token 492: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -7.3458322731312364e-06
    2. ' if' → logprob: -12.000007629394531
    3. 'i' → logprob: -14.250007629394531
    4. '           ' → logprob: -14.875007629394531
    5. 'n' → logprob: -16.12500762939453
    6. '
' → logprob: -17.00000762939453
    7. 'try' → logprob: -18.12500762939453
    8. '       ' → logprob: -18.87500762939453
    9. '            
' → logprob: -20.00000762939453
    10. 'If' → logprob: -20.12500762939453

Token 493: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04541752114892006
    2. 'not' → logprob: -3.795417547225952
    3. ' not' → logprob: -3.920417547225952
    4. ' n' → logprob: -6.170417308807373
    5. 'n't' → logprob: -12.795417785644531
    6. '   ' → logprob: -13.795417785644531
    7. '	n' → logprob: -15.045417785644531
    8. ' ' → logprob: -15.420417785644531
    9. '           ' → logprob: -16.04541778564453
    10. '```' → logprob: -16.17041778564453

Token 494: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.5928495486150496e-05
    2. '_' → logprob: -11.250016212463379
    3. '==' → logprob: -14.000016212463379
    4. 'line' → logprob: -14.375016212463379
    5. '_lin' → logprob: -14.375016212463379
    6. 'ine' → logprob: -15.375016212463379
    7. '_lines' → logprob: -16.125015258789062
    8. '_LINE' → logprob: -16.250015258789062
    9. '=' → logprob: -16.375015258789062
    10. '_l' → logprob: -16.625015258789062

Token 495: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2014671415090561
    2. ' ==' → logprob: -1.7014671564102173
    3. '=' → logprob: -10.076467514038086
    4. '===' → logprob: -12.326467514038086
    5. '()==' → logprob: -12.951467514038086
    6. '==
' → logprob: -13.326467514038086
    7. ' =' → logprob: -13.951467514038086
    8. ')==' → logprob: -14.201467514038086
    9. '[' → logprob: -14.201467514038086
    10. ']==' → logprob: -14.326467514038086

Token 496: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07793210446834564
    2. '''' → logprob: -2.952932119369507
    3. '"' → logprob: -3.827932119369507
    4. '""' → logprob: -7.327931880950928
    5. '0' → logprob: -7.952931880950928
    6. ''end' → logprob: -12.452932357788086
    7. '''
' → logprob: -12.577932357788086
    8. ' '' → logprob: -12.577932357788086
    9. ''O' → logprob: -12.952932357788086
    10. '"":' → logprob: -13.452932357788086

Token 497: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004905993700958788
    2. ''' → logprob: -7.625490665435791
    3. ' ' → logprob: -13.875490188598633
    4. '"' → logprob: -14.250490188598633
    5. '':' → logprob: -14.375490188598633
    6. '''' → logprob: -14.750490188598633
    7. '':
' → logprob: -16.375490188598633
    8. '```' → logprob: -17.000490188598633
    9. ' '' → logprob: -17.375490188598633
    10. '""' → logprob: -18.125490188598633

Token 498: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.38926512002944946
    2. '':' → logprob: -1.1392650604248047
    3. ''' → logprob: -6.139265060424805
    4. '':
' → logprob: -8.639265060424805
    5. ''):
' → logprob: -10.264265060424805
    6. ':' → logprob: -12.139265060424805
    7. '\n' → logprob: -12.264265060424805
    8. ':
' → logprob: -12.389265060424805
    9. '':

' → logprob: -12.764265060424805
    10. '<|end|>' → logprob: -13.514265060424805

Token 499: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006268949946388602
    2. '           ' → logprob: -7.500627040863037
    3. ':' → logprob: -10.625626564025879
    4. '                   ' → logprob: -11.250626564025879
    5. '       ' → logprob: -11.625626564025879
    6. '   ' → logprob: -12.000626564025879
    7. '              ' → logprob: -12.000626564025879
    8. ':
' → logprob: -12.000626564025879
    9. '	           ' → logprob: -13.000626564025879
    10. '<|end|>' → logprob: -13.500626564025879

Token 500: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7614327669143677
    2. 'break' (adapté à ' break') → logprob: -0.7614327669143677
    3. ' break' → logprob: -2.761432647705078
    4. '	break' → logprob: -6.386432647705078
    5. '           ' → logprob: -7.136432647705078
    6. '                   ' → logprob: -8.261432647705078
    7. '	           ' → logprob: -11.386432647705078
    8. 'return' → logprob: -11.386432647705078
    9. '			' → logprob: -11.511432647705078
    10. '                       ' → logprob: -12.011432647705078

Token 501: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005463555920869112
    2. 'n' → logprob: -5.255463600158691
    3. '       ' → logprob: -9.505463600158691
    4. '
' → logprob: -10.005463600158691
    5. ' n' → logprob: -10.005463600158691
    6. 'num' → logprob: -10.505463600158691
    7. '            
' → logprob: -10.880463600158691
    8. '   ' → logprob: -12.880463600158691
    9. '          ' → logprob: -12.880463600158691
    10. '```' → logprob: -12.880463600158691

Token 502: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0638137236237526
    2. 'n' → logprob: -2.8138136863708496
    3. ' n' → logprob: -6.43881368637085
    4. '       ' → logprob: -8.938814163208008
    5. 'num' → logprob: -9.813814163208008
    6. '   ' → logprob: -11.313814163208008
    7. '            
' → logprob: -11.438814163208008
    8. '
' → logprob: -11.438814163208008
    9. '```' → logprob: -11.938814163208008
    10. '	       ' → logprob: -12.813814163208008

Token 503: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.02353428676724434
    2. ' n' → logprob: -3.7735342979431152
    3. 'num' → logprob: -8.273533821105957
    4. '           ' → logprob: -10.523533821105957
    5. ' num' → logprob: -12.148533821105957
    6. '
' → logprob: -15.023533821105957
    7. '	n' → logprob: -15.398533821105957
    8. 'count' → logprob: -15.773533821105957
    9. 'try' → logprob: -15.898533821105957
    10. 'N' → logprob: -16.148534774780273

Token 504: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759867429733276
    2. '=' → logprob: -0.8259867429733276
    3. '=int' → logprob: -10.200986862182617
    4. ' ' → logprob: -12.325986862182617
    5. '    ' → logprob: -13.450986862182617
    6. '   ' → logprob: -13.950986862182617
    7. ' =
' → logprob: -14.825986862182617
    8. '=
' → logprob: -15.075986862182617
    9. '_' → logprob: -15.450986862182617
    10. ',' → logprob: -15.450986862182617

Token 505: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009114635176956654
    2. ' int' → logprob: -7.000911235809326
    3. '(int' → logprob: -20.625911712646484
    4. '[int' → logprob: -21.125911712646484
    5. '=int' → logprob: -22.125911712646484
    6. '<int' → logprob: -23.250911712646484
    7. '
' → logprob: -23.375911712646484
    8. '	int' → logprob: -23.500911712646484
    9. '   ' → logprob: -24.250911712646484
    10. ':int' → logprob: -24.750911712646484

Token 506: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012654215970542282
    2. '(' → logprob: -9.000126838684082
    3. 'n' → logprob: -13.125126838684082
    4. ' (' → logprob: -14.125126838684082
    5. '(
' → logprob: -15.125126838684082
    6. ' n' → logprob: -15.750126838684082
    7. ')n' → logprob: -19.125125885009766
    8. ')' → logprob: -19.625125885009766
    9. '	n' → logprob: -19.625125885009766
    10. '
' → logprob: -20.000125885009766

Token 507: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0010456704767420888
    2. '(n' → logprob: -7.1260457038879395
    3. '_n' → logprob: -8.626045227050781
    4. 'line' → logprob: -10.251045227050781
    5. 'n' → logprob: -11.376045227050781
    6. ')' → logprob: -11.876045227050781
    7. '(' → logprob: -13.251045227050781
    8. 'Line' → logprob: -13.376045227050781
    9. ')n' → logprob: -13.626045227050781
    10. '(line' → logprob: -14.251045227050781

Token 508: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002613358374219388
    2. ')
' → logprob: -8.375261306762695
    3. '<|end|>' → logprob: -10.875261306762695
    4. '           ' → logprob: -12.000261306762695
    5. ' )' → logprob: -12.875261306762695
    6. '       ' → logprob: -13.625261306762695
    7. '<|end|>' → logprob: -14.250261306762695
    8. '               ' → logprob: -15.875261306762695
    9. ')
' → logprob: -16.125261306762695
    10. ' ' → logprob: -16.250261306762695

Token 509: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23369979858398438
    2. '       ' → logprob: -2.4836997985839844
    3. 'rules' → logprob: -2.6086997985839844
    4. ' rules' → logprob: -2.9836997985839844
    5. '   ' → logprob: -7.608699798583984
    6. '_rules' → logprob: -10.483699798583984
    7. '```' → logprob: -10.483699798583984
    8. 'r' → logprob: -10.608699798583984
    9. '	   ' → logprob: -10.733699798583984
    10. 'sub' → logprob: -10.858699798583984

Token 510: ' rules' (ID: 9607)
  Prédit: 'rules'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rules' (adapté à ' rules') → logprob: -0.0021155239082872868
    2. ' rules' → logprob: -6.252115726470947
    3. '           ' → logprob: -8.877115249633789
    4. 'sub' → logprob: -10.252115249633789
    5. 'rule' → logprob: -12.627115249633789
    6. '_rules' → logprob: -13.252115249633789
    7. '.rules' → logprob: -13.502115249633789
    8. '```' → logprob: -13.627115249633789
    9. '            
' → logprob: -14.252115249633789
    10. '
' → logprob: -14.252115249633789

Token 511: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014173151925206184
    2. '=' → logprob: -4.2641730308532715
    3. '=[]' → logprob: -11.63917350769043
    4. '   ' → logprob: -15.76417350769043
    5. '[]' → logprob: -16.01417350769043
    6. 's' → logprob: -16.26417350769043
    7. ',' → logprob: -16.26417350769043
    8. '=[]
' → logprob: -16.51417350769043
    9. '  ' → logprob: -16.76417350769043
    10. ' ' → logprob: -16.88917350769043

Token 512: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03812537342309952
    2. '[]
' → logprob: -3.2881252765655518
    3. ' []' → logprob: -9.538125038146973
    4. '[' → logprob: -11.913125038146973
    5. ' []
' → logprob: -12.538125038146973
    6. '[]>' → logprob: -14.663125038146973
    7. '=[]' → logprob: -14.788125038146973
    8. '[]

' → logprob: -15.288125038146973
    9. '[]}' → logprob: -15.538125038146973
    10. '[])
' → logprob: -16.03812599182129

Token 513: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03630652651190758
    2. 'for' → logprob: -3.411306619644165
    3. '       ' → logprob: -6.411306381225586
    4. ' for' → logprob: -7.036306381225586
    5. '   ' → logprob: -9.161306381225586
    6. '	       ' → logprob: -11.786306381225586
    7. '		' → logprob: -12.036306381225586
    8. '	for' → logprob: -12.036306381225586
    9. '	   ' → logprob: -12.161306381225586
    10. '<|end|>' → logprob: -12.911306381225586

Token 514: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000286364956991747
    2. '           ' → logprob: -8.500286102294922
    3. ' for' → logprob: -9.750286102294922
    4. '       ' → logprob: -10.625286102294922
    5. '   ' → logprob: -15.625286102294922
    6. '	for' → logprob: -16.375286102294922
    7. 'while' → logprob: -17.875286102294922
    8. '```' → logprob: -19.500286102294922
    9. ' ' → logprob: -20.125286102294922
    10. '               ' → logprob: -21.000286102294922

Token 515: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009120595059357584
    2. ' _' → logprob: -7.000912189483643
    3. '_i' → logprob: -14.750911712646484
    4. '_j' → logprob: -16.625911712646484
    5. '_=' → logprob: -17.375911712646484
    6. '_rule' → logprob: -17.625911712646484
    7. 'i' → logprob: -17.875911712646484
    8. ' ' → logprob: -18.250911712646484
    9. ' i' → logprob: -18.625911712646484
    10. '_

' → logprob: -18.750911712646484

Token 516: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -5.796184723294573e-06
    2. 'in' → logprob: -12.875005722045898
    3. 'i' → logprob: -13.500005722045898
    4. 'range' → logprob: -14.000005722045898
    5. '_' → logprob: -14.375005722045898
    6. ' i' → logprob: -15.625005722045898
    7. ' _' → logprob: -15.750005722045898
    8. ' ' → logprob: -15.875005722045898
    9. 'index' → logprob: -19.5000057220459
    10. ' range' → logprob: -19.6250057220459

Token 517: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00033546582562848926
    2. ' range' → logprob: -8.000335693359375
    3. '_range' → logprob: -19.625335693359375
    4. '	range' → logprob: -19.750335693359375
    5. '   ' → logprob: -20.375335693359375
    6. '
' → logprob: -20.750335693359375
    7. 'rang' → logprob: -20.875335693359375
    8. ' ' → logprob: -21.125335693359375
    9. '(range' → logprob: -21.750335693359375
    10. '_' → logprob: -22.125335693359375

Token 518: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011922130361199379
    2. ' n' → logprob: -5.011922359466553
    3. '(n' → logprob: -5.261922359466553
    4. '	n' → logprob: -12.136921882629395
    5. 'range' → logprob: -13.886921882629395
    6. '_n' → logprob: -14.136921882629395
    7. '
' → logprob: -15.011921882629395
    8. ',n' → logprob: -15.636921882629395
    9. ')n' → logprob: -15.886921882629395
    10. '   ' → logprob: -16.01192283630371

Token 519: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10310787707567215
    2. '):' → logprob: -2.3531079292297363
    3. ':' → logprob: -6.353107929229736
    4. ':
' → logprob: -6.978107929229736
    5. ' ):
' → logprob: -9.978107452392578
    6. '       ' → logprob: -10.353107452392578
    7. '           ' → logprob: -10.353107452392578
    8. '):
' → logprob: -10.478107452392578
    9. '   ' → logprob: -10.728107452392578
    10. ')' → logprob: -10.853107452392578

Token 520: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.038952041417360306
    2. '           ' → logprob: -3.538952112197876
    3. '   ' → logprob: -5.913951873779297
    4. '```' → logprob: -6.413951873779297
    5. ' line' → logprob: -6.538951873779297
    6. '
' → logprob: -6.788951873779297
    7. '#line' → logprob: -8.163951873779297
    8. 'line' → logprob: -8.288951873779297
    9. '	           ' → logprob: -8.663951873779297
    10. '<|end|>' → logprob: -9.038951873779297

Token 521: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6070963740348816
    2. 'rule' → logprob: -1.6070964336395264
    3. ' rule' → logprob: -1.8570964336395264
    4. 'line' (adapté à ' line') → logprob: -2.6070964336395264
    5. 'pattern' → logprob: -3.9820964336395264
    6. ' pattern' → logprob: -5.232096195220947
    7. ' parts' → logprob: -7.857096195220947
    8. 'parts' → logprob: -9.607096672058105
    9. 'sub' → logprob: -9.732096672058105
    10. '           ' → logprob: -9.732096672058105

Token 522: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005240514408797026
    2. '=' → logprob: -5.255240440368652
    3. '=line' → logprob: -12.380240440368652
    4. 's' → logprob: -13.630240440368652
    5. ' ' → logprob: -15.130240440368652
    6. '_tokens' → logprob: -15.880240440368652
    7. '	' → logprob: -15.880240440368652
    8. 'tokens' → logprob: -16.13024139404297
    9. ' =
' → logprob: -16.50524139404297
    10. '           ' → logprob: -16.50524139404297

Token 523: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.20141461491584778
    2. ' lines' → logprob: -1.7014145851135254
    3. '(lines' → logprob: -14.201415061950684
    4. '	lines' → logprob: -14.576415061950684
    5. 'line' → logprob: -16.951414108276367
    6. '   ' → logprob: -17.326414108276367
    7. 'rules' → logprob: -17.701414108276367
    8. '_lines' → logprob: -18.201414108276367
    9. '-lines' → logprob: -18.826414108276367
    10. '.lines' → logprob: -18.951414108276367

Token 524: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.00014048899174667895
    2. 'index' → logprob: -8.875140190124512
    3. ' index' → logprob: -14.750140190124512
    4. '#index' → logprob: -16.875141143798828
    5. '(index' → logprob: -17.375141143798828
    6. ',index' → logprob: -17.500141143798828
    7. ' [' → logprob: -18.125141143798828
    8. '	index' → logprob: -18.125141143798828
    9. '```' → logprob: -18.125141143798828
    10. '=index' → logprob: -18.125141143798828

Token 525: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0010250702034682035
    2. ']' → logprob: -7.001025199890137
    3. ']
' → logprob: -9.251025199890137
    4. '           ' → logprob: -11.876025199890137
    5. ' ].' → logprob: -13.001025199890137
    6. '.strip' → logprob: -13.126025199890137
    7. '()].' → logprob: -13.751025199890137
    8. '
' → logprob: -14.001025199890137
    9. ''].' → logprob: -14.001025199890137
    10. '[index' → logprob: -14.001025199890137

Token 526: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9385402993066236e-05
    2. 'split' → logprob: -11.250019073486328
    3. 'rstrip' → logprob: -12.000019073486328
    4. '_strip' → logprob: -16.500019073486328
    5. ' strip' → logprob: -17.125019073486328
    6. '.strip' → logprob: -18.125019073486328
    7. 'index' → logprob: -18.375019073486328
    8. '-strip' → logprob: -21.500019073486328
    9. 'str' → logprob: -21.625019073486328
    10. 'pop' → logprob: -22.125019073486328

Token 527: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12714385986328125
    2. '()
' → logprob: -2.1271438598632812
    3. '           ' → logprob: -9.252143859863281
    4. '               ' → logprob: -10.127143859863281
    5. '()

' → logprob: -10.377143859863281
    6. '().' → logprob: -11.127143859863281
    7. '()\' → logprob: -11.502143859863281
    8. '()
' → logprob: -11.627143859863281
    9. '();' → logprob: -12.627143859863281
    10. '(),' → logprob: -12.752143859863281

Token 528: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0750323086977005
    2. 'index' → logprob: -3.2000322341918945
    3. 'tokens' → logprob: -4.0750322341918945
    4. '           ' → logprob: -4.7000322341918945
    5. 'token' → logprob: -6.3250322341918945
    6. '<|end|>' → logprob: -7.3250322341918945
    7. '#index' → logprob: -7.8250322341918945
    8. '       ' → logprob: -7.9500322341918945
    9. '[index' → logprob: -8.200032234191895
    10. '
' → logprob: -8.325032234191895

Token 529: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.000229046301683411
    2. '               ' → logprob: -8.500228881835938
    3. 'parts' → logprob: -11.250228881835938
    4. '           ' → logprob: -12.375228881835938
    5. 'rule' → logprob: -12.750228881835938
    6. ' index' → logprob: -12.750228881835938
    7. '       ' → logprob: -14.375228881835938
    8. 'rules' → logprob: -14.750228881835938
    9. 'pattern' → logprob: -15.375228881835938
    10. 'tokens' → logprob: -15.375228881835938

Token 530: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.12787191569805145
    2. ' +=' → logprob: -2.1278719902038574
    3. '<|end|>' → logprob: -7.377871990203857
    4. '++' → logprob: -8.6278715133667
    5. '```' → logprob: -9.8778715133667
    6. ']+=' → logprob: -10.5028715133667
    7. '+' → logprob: -11.0028715133667
    8. '=' → logprob: -11.7528715133667
    9. '<|end|>' → logprob: -11.7528715133667
    10. '+='' → logprob: -12.0028715133667

Token 531: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -18.875019073486328
    4. '   ' → logprob: -20.500019073486328
    5. '
' → logprob: -21.125019073486328
    6. '１' → logprob: -21.625019073486328
    7. '۱' → logprob: -22.250019073486328
    8. ' ' → logprob: -23.000019073486328
    9. '  ' → logprob: -23.375019073486328
    10. '0' → logprob: -23.750019073486328

Token 532: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '```' → logprob: -20.25
    4. '１' → logprob: -21.75
    5. '
' → logprob: -22.25
    6. '   ' → logprob: -22.375
    7. '۱' → logprob: -23.375
    8. '2' → logprob: -23.6875
    9. '0' → logprob: -23.875
    10. '3' → logprob: -24.1875

Token 533: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02421964704990387
    2. 'pattern' → logprob: -4.399219512939453
    3. ' parts' → logprob: -5.274219512939453
    4. 'parts' → logprob: -5.899219512939453
    5. 'tokens' → logprob: -6.399219512939453
    6. ' pattern' → logprob: -6.774219512939453
    7. ' tokens' → logprob: -8.524219512939453
    8. '           ' → logprob: -8.774219512939453
    9. 'rule' → logprob: -8.774219512939453
    10. ',' → logprob: -8.899219512939453

Token 534: '               ' (ID: 506)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.030362652614712715
    2. '               ' → logprob: -3.655362606048584
    3. 'parts' → logprob: -5.780362606048584
    4. ' pattern' → logprob: -7.405362606048584
    5. 'rule' → logprob: -9.280363082885742
    6. 'from' → logprob: -9.655363082885742
    7. 'pat' → logprob: -9.905363082885742
    8. '       ' → logprob: -10.405363082885742
    9. '           ' → logprob: -10.655363082885742
    10. 'sub' → logprob: -11.030363082885742

Token 535: ' alpha' (ID: 17406)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.008952890522778034
    2. 'parts' → logprob: -5.008953094482422
    3. 'from' → logprob: -7.258953094482422
    4. 'p' → logprob: -7.508953094482422
    5. 'pat' → logprob: -7.633953094482422
    6. 'src' → logprob: -8.133953094482422
    7. 'a' → logprob: -9.383953094482422
    8. ' pattern' → logprob: -10.508953094482422
    9. '   ' → logprob: -10.883953094482422
    10. 'lhs' → logprob: -11.383953094482422

Token 536: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07088170945644379
    2. 'bet' → logprob: -3.0708816051483154
    3. ',b' → logprob: -4.0708818435668945
    4. 'beta' → logprob: -5.4458818435668945
    5. ' ,' → logprob: -8.695881843566895
    6. 'b' → logprob: -9.445881843566895
    7. '_beta' → logprob: -9.820881843566895
    8. ',s' → logprob: -9.820881843566895
    9. '_,' → logprob: -10.320881843566895
    10. 'index' → logprob: -10.570881843566895

Token 537: ' beta' (ID: 21306)
  Prédit: 'beta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beta' → logprob: -0.015083448961377144
    2. 'replacement' → logprob: -5.390083312988281
    3. 'omega' → logprob: -5.515083312988281
    4. 'rest' → logprob: -6.015083312988281
    5. 'arrow' → logprob: -6.390083312988281
    6. 'sub' → logprob: -8.265083312988281
    7. 're' → logprob: -8.265083312988281
    8. ' beta' → logprob: -8.390083312988281
    9. 'replace' → logprob: -8.390083312988281
    10. 'subst' → logprob: -8.890083312988281

Token 538: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889948040246964
    2. ' =' → logprob: -2.578899383544922
    3. ',' → logprob: -11.578899383544922
    4. '=line' → logprob: -15.078899383544922
    5. ' ' → logprob: -16.828899383544922
    6. '   ' → logprob: -17.828899383544922
    7. ')' → logprob: -19.078899383544922
    8. '_' → logprob: -19.078899383544922
    9. '＝' → logprob: -19.078899383544922
    10. '	' → logprob: -19.078899383544922

Token 539: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0485873706638813
    2. ' line' → logprob: -3.0485873222351074
    3. '(line' → logprob: -18.673587799072266
    4. '[line' → logprob: -18.673587799072266
    5. '	line' → logprob: -19.423587799072266
    6. '=line' → logprob: -20.048587799072266
    7. '_line' → logprob: -20.548587799072266
    8. '#line' → logprob: -21.548587799072266
    9. 'map' → logprob: -21.923587799072266
    10. ',line' → logprob: -22.048587799072266

Token 540: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.7403689026832581
    2. '=' → logprob: -0.9903689026832581
    3. ' =' → logprob: -2.1153688430786133
    4. '.' → logprob: -3.4903688430786133
    5. 'split' → logprob: -8.490368843078613
    6. '.=' → logprob: -8.615368843078613
    7. ' .' → logprob: -9.615368843078613
    8. ',' → logprob: -10.240368843078613
    9. '_split' → logprob: -11.365368843078613
    10. '.s' → logprob: -11.365368843078613

Token 541: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0434364415705204
    2. '('' → logprob: -3.1684365272521973
    3. '(None' → logprob: -7.918436527252197
    4. '(max' → logprob: -10.918436050415039
    5. '()
' → logprob: -11.043436050415039
    6. '("' → logprob: -11.168436050415039
    7. '(' → logprob: -11.293436050415039
    8. 'None' → logprob: -12.043436050415039
    9. '();' → logprob: -13.168436050415039
    10. ''' → logprob: -13.793436050415039

Token 542: ' ')
' (ID: 49195)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.662125289440155
    2. '()' → logprob: -1.0371253490447998
    3. '('' → logprob: -2.4121253490448
    4. ' ' → logprob: -4.787125110626221
    5. ')' → logprob: -5.037125110626221
    6. ' '' → logprob: -5.662125110626221
    7. '<|end|>' → logprob: -5.662125110626221
    8. ' None' → logprob: -5.912125110626221
    9. 'None' → logprob: -6.287125110626221
    10. ' )' → logprob: -6.412125110626221

Token 543: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011931675486266613
    2. '
' → logprob: -4.761931896209717
    3. '                
' → logprob: -6.261931896209717
    4. ',' → logprob: -7.011931896209717
    5. '           ' → logprob: -9.261931419372559
    6. ',
' → logprob: -9.261931419372559
    7. '<|end|>' → logprob: -9.511931419372559
    8. '
' → logprob: -9.761931419372559
    9. '            
' → logprob: -10.261931419372559
    10. ')' → logprob: -10.636931419372559

Token 544: ' rules' (ID: 9607)
  Prédit: 'rules'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rules' (adapté à ' rules') → logprob: -0.0023606636095792055
    2. '               ' → logprob: -6.752360820770264
    3. ' rules' → logprob: -6.752360820770264
    4. 'rule' → logprob: -10.877360343933105
    5. '           ' → logprob: -13.252360343933105
    6. 'r' → logprob: -14.752360343933105
    7. '.rules' → logprob: -15.377360343933105
    8. '       ' → logprob: -15.627360343933105
    9. '_rules' → logprob: -16.627361297607422
    10. '
' → logprob: -17.252361297607422

Token 545: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001427538663847372
    2. '.' → logprob: -8.875143051147461
    3. 'append' → logprob: -13.750143051147461
    4. '.app' → logprob: -13.875143051147461
    5. ' .' → logprob: -14.625143051147461
    6. '=' → logprob: -15.375143051147461
    7. ').' → logprob: -16.00014305114746
    8. '.ap' → logprob: -16.62514305114746
    9. ' =' → logprob: -17.37514305114746
    10. '.py' → logprob: -17.75014305114746

Token 546: '(Sub' (ID: 143826)
  Prédit: '(Sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Sub' → logprob: -0.0011705794604495168
    2. 'Sub' → logprob: -6.751170635223389
    3. ' Sub' → logprob: -15.25117015838623
    4. '(' → logprob: -16.876171112060547
    5. '_Sub' → logprob: -18.751171112060547
    6. '           ' → logprob: -18.876171112060547
    7. '               ' → logprob: -19.001171112060547
    8. '_sub' → logprob: -19.501171112060547
    9. '   ' → logprob: -19.876171112060547
    10. '.Sub' → logprob: -20.501171112060547

Token 547: 'stitution' (ID: 20066)
  Prédit: 'stitution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stitution' → logprob: -2.2200749754119897e-06
    2. 'stit' → logprob: -13.250001907348633
    3. 'st' → logprob: -15.000001907348633
    4. ' substitution' → logprob: -17.125001907348633
    5. 'station' → logprob: -17.375001907348633
    6. 'sti' → logprob: -17.500001907348633
    7. '           ' → logprob: -18.250001907348633
    8. 'stitute' → logprob: -18.500001907348633
    9. 'istit' → logprob: -18.875001907348633
    10. 'tit' → logprob: -19.250001907348633

Token 548: 'Rule' (ID: 11845)
  Prédit: 'Rule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rule' → logprob: -1.9361264946837764e-07
    2. ' Rule' → logprob: -17.125
    3. 'rule' → logprob: -17.25
    4. 'Rules' → logprob: -17.875
    5. '_rule' → logprob: -18.125
    6. 'R' → logprob: -19.0
    7. 'Ru' → logprob: -19.125
    8. '.Rule' → logprob: -20.125
    9. ' rule' → logprob: -20.25
    10. '
' → logprob: -20.75

Token 549: '(alpha' (ID: 82669)
  Prédit: '(alpha'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(alpha' → logprob: -0.000574836041778326
    2. 'alpha' → logprob: -7.500575065612793
    3. '(' → logprob: -11.000575065612793
    4. '(beta' → logprob: -12.375575065612793
    5. '(
' → logprob: -14.625575065612793
    6. ')' → logprob: -15.625575065612793
    7. '	alpha' → logprob: -16.625574111938477
    8. ' alpha' → logprob: -17.000574111938477
    9. ' (' → logprob: -17.125574111938477
    10. '.alpha' → logprob: -17.625574111938477

Token 550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.5941604690160602e-05
    2. ' ,' → logprob: -11.250025749206543
    3. ',
' → logprob: -11.750025749206543
    4. ',b' → logprob: -12.625025749206543
    5. 'beta' → logprob: -14.500025749206543
    6. ',

' → logprob: -15.125025749206543
    7. ' beta' → logprob: -15.500025749206543
    8. ')' → logprob: -16.00002670288086
    9. '(beta' → logprob: -16.37502670288086
    10. '‌,' → logprob: -16.50002670288086

Token 551: ' beta' (ID: 21306)
  Prédit: 'beta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'beta' → logprob: -0.00018006093159783632
    2. ' beta' → logprob: -8.6251802444458
    3. '
' → logprob: -15.5001802444458
    4. 'alpha' → logprob: -16.375179290771484
    5. '.beta' → logprob: -16.750179290771484
    6. '(beta' → logprob: -16.875179290771484
    7. '                   ' → logprob: -17.500179290771484
    8. '
' → logprob: -18.625179290771484
    9. '_beta' → logprob: -18.875179290771484
    10. 'b' → logprob: -19.000179290771484

Token 552: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002703953068703413
    2. '))' → logprob: -8.25027084350586
    3. ')
' → logprob: -11.62527084350586
    4. ' )' → logprob: -16.12527084350586
    5. '       ' → logprob: -17.37527084350586
    6. ')))' → logprob: -18.12527084350586
    7. '))
' → logprob: -18.12527084350586
    8. ')`' → logprob: -18.62527084350586
    9. ')}' → logprob: -19.25027084350586
    10. ')

' → logprob: -19.37527084350586

Token 553: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6926038265228271
    2. '       ' → logprob: -1.1926038265228271
    3. '<|end|>' → logprob: -1.8176038265228271
    4. '           ' → logprob: -3.442603826522827
    5. '<|end|>' → logprob: -7.317604064941406
    6. '        
' → logprob: -8.067604064941406
    7. '```' → logprob: -8.567604064941406
    8. ')' → logprob: -9.692604064941406
    9. '   ' → logprob: -9.692604064941406
    10. '               ' → logprob: -9.942604064941406

Token 554: ' gamma' (ID: 40570)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.05887331813573837
    2. 'target' → logprob: -2.933873414993286
    3. '           ' → logprob: -5.808873176574707
    4. 's' → logprob: -8.183873176574707
    5. ' start' → logprob: -8.558873176574707
    6. 'initial' → logprob: -8.558873176574707
    7. '
' → logprob: -9.558873176574707
    8. '       ' → logprob: -9.558873176574707
    9. 'end' → logprob: -10.558873176574707
    10. 'string' → logprob: -10.933873176574707

Token 555: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2414364516735077
    2. '=' → logprob: -2.11643648147583
    3. ',' → logprob: -2.36643648147583
    4. ' ,' → logprob: -8.491436004638672
    5. '=line' → logprob: -11.241436004638672
    6. ',line' → logprob: -12.616436004638672
    7. '_line' → logprob: -13.616436004638672
    8. '           ' → logprob: -13.991436004638672
    9. ' ' → logprob: -14.366436004638672
    10. '=input' → logprob: -15.491436004638672

Token 556: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5759512782096863
    2. ' lines' → logprob: -0.8259512782096863
    3. '(lines' → logprob: -11.45095157623291
    4. '	lines' → logprob: -13.95095157623291
    5. 'line' → logprob: -15.32595157623291
    6. '-lines' → logprob: -16.825950622558594
    7. '_lines' → logprob: -17.575950622558594
    8. '.lines' → logprob: -17.575950622558594
    9. ' ' → logprob: -18.075950622558594
    10. '   ' → logprob: -18.575950622558594

Token 557: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -1.9385402993066236e-05
    2. 'index' → logprob: -10.875019073486328
    3. '[' → logprob: -15.875019073486328
    4. '
' → logprob: -16.125019073486328
    5. '```' → logprob: -16.125019073486328
    6. ',index' → logprob: -17.000019073486328
    7. '       ' → logprob: -17.375019073486328
    8. '[line' → logprob: -18.250019073486328
    9. '#index' → logprob: -18.375019073486328
    10. '[in' → logprob: -18.500019073486328

Token 558: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00041494169272482395
    2. '.strip' → logprob: -7.875414848327637
    3. '.' → logprob: -11.875414848327637
    4. ''].' → logprob: -12.125414848327637
    5. ' ].' → logprob: -12.125414848327637
    6. ']' → logprob: -12.250414848327637
    7. '"].' → logprob: -12.250414848327637
    8. '().' → logprob: -13.250414848327637
    9. ').' → logprob: -13.375414848327637
    10. '
' → logprob: -13.625414848327637

Token 559: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.320199877838604e-07
    2. 'rstrip' → logprob: -14.875
    3. ' strip' → logprob: -18.125
    4. '.strip' → logprob: -18.875
    5. 'split' → logprob: -20.375
    6. '```' → logprob: -21.125
    7. '_strip' → logprob: -21.25
    8. '(strip' → logprob: -21.375
    9. '
' → logprob: -22.25
    10. 'stripe' → logprob: -22.625

Token 560: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8807532787322998
    2. '<|end|>' → logprob: -1.2557532787322998
    3. '<|end|>' → logprob: -2.1307532787323
    4. '
' → logprob: -2.2557532787323
    5. 'index' → logprob: -3.2557532787323
    6. '       ' → logprob: -4.505753517150879
    7. '()' → logprob: -4.755753517150879
    8. '#index' → logprob: -4.880753517150879
    9. '()
' → logprob: -5.130753517150879
    10. '               ' → logprob: -6.630753517150879

Token 561: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02959877997636795
    2. 'index' → logprob: -4.154598712921143
    3. '       ' → logprob: -5.154598712921143
    4. '<|end|>' → logprob: -5.154598712921143
    5. '
' → logprob: -6.779598712921143
    6. '<|end|>' → logprob: -7.654598712921143
    7. '#index' → logprob: -9.1545991897583
    8. '```' → logprob: -9.9045991897583
    9. '            
' → logprob: -10.6545991897583
    10. '[index' → logprob: -10.7795991897583

Token 562: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -2.975612187583465e-05
    2. ' index' → logprob: -10.500029563903809
    3. '       ' → logprob: -13.250029563903809
    4. '           ' → logprob: -15.625029563903809
    5. '#index' → logprob: -16.500030517578125
    6. '_index' → logprob: -17.125030517578125
    7. '	index' → logprob: -17.625030517578125
    8. '
' → logprob: -18.125030517578125
    9. '@index' → logprob: -18.375030517578125
    10. 'Index' → logprob: -18.500030517578125

Token 563: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.029272478073835373
    2. ' +=' → logprob: -4.029272556304932
    3. '+' → logprob: -4.529272556304932
    4. '++' → logprob: -9.154272079467773
    5. '<|end|>' → logprob: -9.654272079467773
    6. '=' → logprob: -10.529272079467773
    7. '```' → logprob: -10.654272079467773
    8. '+='' → logprob: -11.029272079467773
    9. ']+=' → logprob: -11.154272079467773
    10. '+="' → logprob: -12.279272079467773

Token 564: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -16.750011444091797
    4. '
' → logprob: -17.125011444091797
    5. '   ' → logprob: -18.375011444091797
    6. '           ' → logprob: -19.875011444091797
    7. '１' → logprob: -20.000011444091797
    8. '+' → logprob: -20.312511444091797
    9. '`' → logprob: -20.375011444091797
    10. '۱' → logprob: -20.437511444091797

Token 565: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '0' → logprob: -19.375
    4. '```' → logprob: -20.25
    5. '
' → logprob: -20.625
    6. '   ' → logprob: -21.25
    7. '１' → logprob: -21.375
    8. '۱' → logprob: -22.375
    9. '2' → logprob: -23.6875
    10. '(' → logprob: -23.6875

Token 566: '
' (ID: 198)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.34583571553230286
    2. '           ' → logprob: -1.8458356857299805
    3. 'target' → logprob: -2.2208356857299805
    4. 'start' → logprob: -4.3458356857299805
    5. '
' → logprob: -5.8458356857299805
    6. ' delta' → logprob: -6.2208356857299805
    7. 'theta' → logprob: -6.2208356857299805
    8. 'result' → logprob: -6.7208356857299805
    9. 'alpha' → logprob: -6.7208356857299805
    10. 'beta' → logprob: -7.5958356857299805

Token 567: '           ' (ID: 352)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.3458268642425537
    2. '           ' → logprob: -1.3458268642425537
    3. 'target' → logprob: -3.8458268642425537
    4. 'theta' → logprob: -5.345827102661133
    5. 'beta' → logprob: -6.095827102661133
    6. 'start' → logprob: -6.845827102661133
    7. 'alpha' → logprob: -7.470827102661133
    8. ' delta' → logprob: -7.595827102661133
    9. 'omega' → logprob: -8.345827102661133
    10. '
' → logprob: -8.595827102661133

Token 568: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' (adapté à ' delta') → logprob: -0.0077243372797966
    2. 'omega' → logprob: -5.882724285125732
    3. 'sigma' → logprob: -6.507724285125732
    4. 'theta' → logprob: -7.007724285125732
    5. 'tau' → logprob: -7.382724285125732
    6. 'eta' → logprob: -7.882724285125732
    7. 'rho' → logprob: -8.00772476196289
    8. 'd' → logprob: -8.00772476196289
    9. 'phi' → logprob: -8.25772476196289
    10. 'epsilon' → logprob: -8.50772476196289

Token 569: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407761216163635
    2. ' =' → logprob: -0.974077582359314
    3. '=line' → logprob: -14.599077224731445
    4. ' ' → logprob: -15.724077224731445
    5. '=
' → logprob: -18.099077224731445
    6. '＝' → logprob: -18.099077224731445
    7. '<|end|>' → logprob: -18.849077224731445
    8. ' ' → logprob: -19.224077224731445
    9. ')' → logprob: -19.349077224731445
    10. ',' → logprob: -19.849077224731445

Token 570: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.2519327998161316
    2. 'lines' → logprob: -1.5019328594207764
    3. '(lines' → logprob: -12.626933097839355
    4. '	lines' → logprob: -14.876933097839355
    5. '.lines' → logprob: -18.25193214416504
    6. '_lines' → logprob: -18.50193214416504
    7. '-lines' → logprob: -18.75193214416504
    8. 'line' → logprob: -19.87693214416504
    9. '   ' → logprob: -20.25193214416504
    10. ' lignes' → logprob: -20.87693214416504

Token 571: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -3.8889261304575484e-06
    2. 'index' → logprob: -12.500003814697266
    3. '=index' → logprob: -16.750003814697266
    4. '[ind' → logprob: -18.125003814697266
    5. '```' → logprob: -18.375003814697266
    6. ',index' → logprob: -18.500003814697266
    7. ':index' → logprob: -19.000003814697266
    8. '(index' → logprob: -19.125003814697266
    9. '@index' → logprob: -19.125003814697266
    10. '[' → logprob: -19.875003814697266

Token 572: '].' (ID: 1651)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.001399879576638341
    2. '.' → logprob: -7.126399993896484
    3. ' .' → logprob: -7.626399993896484
    4. '].' → logprob: -9.876399993896484
    5. ').' → logprob: -11.126399993896484
    6. '().' → logprob: -11.251399993896484
    7. '.readline' → logprob: -11.751399993896484
    8. '.str' → logprob: -12.126399993896484
    9. '.trim' → logprob: -12.376399993896484
    10. '_strip' → logprob: -13.251399993896484

Token 573: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.9361264946837764e-07
    2. '.strip' → logprob: -16.875
    3. ' strip' → logprob: -17.375
    4. 'rstrip' → logprob: -17.75
    5. 'str' → logprob: -18.0
    6. 'stripe' → logprob: -19.75
    7. '
' → logprob: -20.125
    8. 'split' → logprob: -20.375
    9. '_strip' → logprob: -20.75
    10. '(strip' → logprob: -22.0

Token 574: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23049676418304443
    2. '           ' → logprob: -2.355496883392334
    3. '()
' → logprob: -2.355496883392334
    4. '<|end|>' → logprob: -4.980496883392334
    5. '(index' → logprob: -5.105496883392334
    6. '<|end|>' → logprob: -7.105496883392334
    7. 'index' → logprob: -7.355496883392334
    8. '#index' → logprob: -7.730496883392334
    9. '[index' → logprob: -7.730496883392334
    10. '               ' → logprob: -9.105496406555176

Token 575: '           ' (ID: 352)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.38956937193870544
    2. '       ' → logprob: -1.1395694017410278
    3. '           ' → logprob: -6.139569282531738
    4. '   ' → logprob: -8.139569282531738
    5. ' index' → logprob: -9.014569282531738
    6. '[index' → logprob: -9.764569282531738
    7. '#index' → logprob: -11.014569282531738
    8. '```' → logprob: -11.264569282531738
    9. '	index' → logprob: -11.639569282531738
    10. ',index' → logprob: -11.889569282531738

Token 576: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.00022022522171027958
    2. ' index' → logprob: -8.50022029876709
    3. '       ' → logprob: -11.12522029876709
    4. '           ' → logprob: -14.12522029876709
    5. '#index' → logprob: -14.87522029876709
    6. '[index' → logprob: -15.25022029876709
    7. '	index' → logprob: -15.37522029876709
    8. '_index' → logprob: -15.62522029876709
    9. '=index' → logprob: -16.000219345092773
    10. '@index' → logprob: -16.750219345092773

Token 577: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07893606275320053
    2. ' +=' → logprob: -2.5789361000061035
    3. '+' → logprob: -10.078935623168945
    4. ']+=' → logprob: -13.203935623168945
    5. '=' → logprob: -13.828935623168945
    6. '           ' → logprob: -14.328935623168945
    7. '```' → logprob: -14.703935623168945
    8. '   ' → logprob: -16.203935623168945
    9. '       ' → logprob: -16.328935623168945
    10. ' +' → logprob: -16.703935623168945

Token 578: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '
' → logprob: -19.625
    4. '```' → logprob: -19.875
    5. '   ' → logprob: -20.5
    6. '１' → logprob: -22.625
    7. '۱' → logprob: -23.0
    8. '(' → logprob: -23.125
    9. '=' → logprob: -23.25
    10. '+' → logprob: -23.75

Token 579: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -19.75
    4. '   ' → logprob: -20.375
    5. '
' → logprob: -20.625
    6. '１' → logprob: -21.125
    7. '0' → logprob: -21.25
    8. '۱' → logprob: -22.5
    9. '``' → logprob: -23.25
    10. '' → logprob: -24.125

Token 580: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25404220819473267
    2. '           ' → logprob: -1.504042148590088
    3. ' self' → logprob: -6.254042148590088
    4. '       ' → logprob: -8.629042625427246
    5. '   ' → logprob: -12.879042625427246
    6. '            
' → logprob: -13.129042625427246
    7. '
' → logprob: -13.379042625427246
    8. '```' → logprob: -14.129042625427246
    9. '	self' → logprob: -14.379042625427246
    10. '          ' → logprob: -14.754042625427246

Token 581: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017524146242067218
    2. 'self' → logprob: -6.3767523765563965
    3. '       ' → logprob: -10.376752853393555
    4. ' self' → logprob: -11.251752853393555
    5. 'rules' → logprob: -13.001752853393555
    6. 'sub' → logprob: -13.751752853393555
    7. '   ' → logprob: -14.001752853393555
    8. '```' → logprob: -14.876752853393555
    9. '
' → logprob: -15.251752853393555
    10. '<|end|>' → logprob: -15.501752853393555

Token 582: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00013560164370574057
    2. '           ' → logprob: -9.00013542175293
    3. ' self' → logprob: -11.50013542175293
    4. 'sub' → logprob: -13.87513542175293
    5. 'solver' → logprob: -14.75013542175293
    6. 'from' → logprob: -15.25013542175293
    7. 'dataset' → logprob: -15.87513542175293
    8. 'solution' → logprob: -16.75013542175293
    9. 'subs' → logprob: -17.12513542175293
    10. '```' → logprob: -17.12513542175293

Token 583: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -1.3902033970225602e-05
    2. '.datas' → logprob: -12.000014305114746
    3. 'datasets' → logprob: -12.625014305114746
    4. '.dataset' → logprob: -13.250014305114746
    5. ' .' → logprob: -13.500014305114746
    6. '.data' → logprob: -14.250014305114746
    7. '.dat' → logprob: -14.875014305114746
    8. '.targets' → logprob: -16.25001335144043
    9. '.' → logprob: -16.87501335144043
    10. '.sub' → logprob: -17.37501335144043

Token 584: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.1557283111615106e-05
    2. '.' → logprob: -10.125041961669922
    3. 'append' → logprob: -14.500041961669922
    4. '.app' → logprob: -14.500041961669922
    5. ' .' → logprob: -15.000041961669922
    6. '.extend' → logprob: -17.125041961669922
    7. '.Append' → logprob: -17.375041961669922
    8. '.ap' → logprob: -17.500041961669922
    9. ').' → logprob: -18.125041961669922
    10. '.setdefault' → logprob: -18.125041961669922

Token 585: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.004682288039475679
    2. '(Sub' → logprob: -5.7546820640563965
    3. '(' → logprob: -6.5046820640563965
    4. '(
' → logprob: -12.004682540893555
    5. '(('' → logprob: -15.379682540893555
    6. '(sub' → logprob: -15.379682540893555
    7. '(S' → logprob: -15.879682540893555
    8. '(((' → logprob: -16.004682540893555
    9. '(("' → logprob: -16.879682540893555
    10. '([' → logprob: -17.004682540893555

Token 586: 'rules' (ID: 50321)
  Prédit: 'rules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rules' → logprob: -7.040457421680912e-05
    2. ' rules' → logprob: -10.125070571899414
    3. 'n' → logprob: -10.875070571899414
    4. 'gamma' → logprob: -12.375070571899414
    5. '(n' → logprob: -13.125070571899414
    6. '   ' → logprob: -13.500070571899414
    7. '(r' → logprob: -14.000070571899414
    8. '       ' → logprob: -14.500070571899414
    9. 'rule' → logprob: -14.750070571899414
    10. 'r' → logprob: -14.750070571899414

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.933173426659778e-05
    2. ' ,' → logprob: -9.875069618225098
    3. ',g' → logprob: -11.375069618225098
    4. ',
' → logprob: -12.000069618225098
    5. 'gamma' → logprob: -16.50006866455078
    6. ',

' → logprob: -18.12506866455078
    7. '
' → logprob: -18.12506866455078
    8. '   ' → logprob: -18.62506866455078
    9. ' gamma' → logprob: -18.75006866455078
    10. ',\
' → logprob: -19.87506866455078

Token 588: ' gamma' (ID: 40570)
  Prédit: 'gamma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gamma' → logprob: -0.002476135268807411
    2. ' gamma' → logprob: -6.002476215362549
    3. '   ' → logprob: -16.00247573852539
    4. '.gamma' → logprob: -16.25247573852539
    5. 'gam' → logprob: -16.37747573852539
    6. '           ' → logprob: -17.00247573852539
    7. '_gamma' → logprob: -17.37747573852539
    8. 'γ' → logprob: -17.50247573852539
    9. 'Gamma' → logprob: -18.00247573852539
    10. '                   ' → logprob: -18.00247573852539

Token 589: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.0033853515051305e-05
    2. ' ,' → logprob: -9.750060081481934
    3. ',
' → logprob: -13.500060081481934
    4. ',d' → logprob: -15.500060081481934
    5. '           ' → logprob: -18.375059127807617
    6. '‌,' → logprob: -18.625059127807617
    7. ',

' → logprob: -18.750059127807617
    8. '<|end|>' → logprob: -18.875059127807617
    9. '<|end|>' → logprob: -19.375059127807617
    10. ',line' → logprob: -19.875059127807617

Token 590: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.0031781906727701426
    2. ' delta' → logprob: -5.753178119659424
    3. '(delta' → logprob: -15.503178596496582
    4. ')' → logprob: -17.253177642822266
    5. '
' → logprob: -17.503177642822266
    6. '_delta' → logprob: -17.628177642822266
    7. ' 
' → logprob: -17.753177642822266
    8. 'Delta' → logprob: -17.878177642822266
    9. '   ' → logprob: -18.003177642822266
    10. 'del' → logprob: -18.003177642822266

Token 591: '))


' (ID: 49252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061975862830877304
    2. '))' → logprob: -2.8119759559631348
    3. ')
' → logprob: -12.311975479125977
    4. '))
' → logprob: -12.936975479125977
    5. ' )' → logprob: -14.311975479125977
    6. ')))' → logprob: -15.061975479125977
    7. ')}' → logprob: -15.561975479125977
    8. '       ' → logprob: -16.686975479125977
    9. '   ' → logprob: -17.436975479125977
    10. ' ))' → logprob: -17.436975479125977

Token 592: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.029454102739691734
    2. '   ' → logprob: -3.654453992843628
    3. '<|end|>' → logprob: -6.404454231262207
    4. ' def' → logprob: -7.029454231262207
    5. '
' → logprob: -7.654454231262207
    6. '	def' → logprob: -9.654454231262207
    7. '```' → logprob: -10.779454231262207
    8. 'if' → logprob: -10.779454231262207
    9. '<|end|>' → logprob: -11.904454231262207
    10. '    
' → logprob: -12.279454231262207

Token 593: ' Output' (ID: 18315)
  Prédit: 'Sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Sub' → logprob: -0.6263024806976318
    2. 'Solver' → logprob: -1.6263024806976318
    3. 'Solution' → logprob: -2.251302480697632
    4. 'Runner' → logprob: -2.501302480697632
    5. 'Main' → logprob: -2.876302480697632
    6. ' Sub' → logprob: -4.251302719116211
    7. ' Solver' → logprob: -5.376302719116211
    8. ' Solution' → logprob: -6.751302719116211
    9. 'main' → logprob: -7.001302719116211
    10. ' Runner' → logprob: -7.001302719116211

Token 594: 'Handler' (ID: 4139)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.014972495846450329
    2. 'Handler' → logprob: -4.514972686767578
    3. 'ter' → logprob: -6.139972686767578
    4. 'Printer' → logprob: -7.514972686767578
    5. 'Generator' → logprob: -7.764972686767578
    6. ':
' → logprob: -8.014972686767578
    7. 'Formatter' → logprob: -8.764972686767578
    8. ':' → logprob: -9.514972686767578
    9. 'Manager' → logprob: -9.514972686767578
    10. 'Builder' → logprob: -9.639972686767578

Token 595: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.017927029868588e-05
    2. ':
' → logprob: -9.500080108642578
    3. ':def' → logprob: -12.375080108642578
    4. '():' → logprob: -14.875080108642578
    5. ':

' → logprob: -15.750080108642578
    6. '):' → logprob: -16.000080108642578
    7. '(' → logprob: -16.750080108642578
    8. '>:' → logprob: -17.125080108642578
    9. '<|end|>' → logprob: -17.125080108642578
    10. '(object' → logprob: -17.250080108642578

Token 596: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001297258073464036
    2. 'def' → logprob: -7.126297473907471
    3. ' def' → logprob: -8.626296997070312
    4. 'class' → logprob: -8.626296997070312
    5. '```' → logprob: -9.001296997070312
    6. '
' → logprob: -12.376296997070312
    7. ':' → logprob: -13.376296997070312
    8. ' class' → logprob: -14.001296997070312
    9. '	def' → logprob: -14.126296997070312
    10. ' ' → logprob: -14.251296997070312

Token 597: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00011570196511456743
    2. 'class' → logprob: -9.750115394592285
    3. ' def' → logprob: -10.250115394592285
    4. '   ' → logprob: -10.750115394592285
    5. '@' (adapté à ' @') → logprob: -14.750115394592285
    6. '```' → logprob: -15.875115394592285
    7. '	def' → logprob: -18.0001163482666
    8. '
' → logprob: -18.7501163482666
    9. 'de' → logprob: -20.1251163482666
    10. 'staticmethod' → logprob: -20.8751163482666

Token 598: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -7.5649528298527e-05
    2. 'classmethod' → logprob: -9.500075340270996
    3. 'dat' → logprob: -14.375075340270996
    4. 'static' → logprob: -16.625076293945312
    5. 'property' → logprob: -17.750076293945312
    6. '@@' → logprob: -18.500076293945312
    7. '@' → logprob: -19.500076293945312
    8. '__' → logprob: -21.750076293945312
    9. 'st' → logprob: -23.500076293945312
    10. ' static' → logprob: -23.750076293945312

Token 599: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04213736206293106
    2. '
' → logprob: -3.542137384414673
    3. '   ' → logprob: -4.792137145996094
    4. ' def' → logprob: -5.542137145996094
    5. '(def' → logprob: -10.167137145996094
    6. '()
' → logprob: -10.542137145996094
    7. '(' → logprob: -11.292137145996094
    8. '    
' → logprob: -12.792137145996094
    9. ' ' → logprob: -12.792137145996094
    10. '	def' → logprob: -12.917137145996094

Token 600: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005104990559630096
    2. ' def' → logprob: -8.250510215759277
    3. '
' → logprob: -8.500510215759277
    4. '   ' → logprob: -10.000510215759277
    5. '	def' → logprob: -15.500510215759277
    6. '(def' → logprob: -16.375511169433594
    7. ':def' → logprob: -17.125511169433594
    8. '\' → logprob: -18.375511169433594
    9. ' ' → logprob: -18.500511169433594
    10. '```' → logprob: -18.750511169433594

Token 601: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.56102097814437e-05
    2. ' def' → logprob: -10.250045776367188
    3. '
' → logprob: -11.500045776367188
    4. '   ' → logprob: -18.000045776367188
    5. 'write' → logprob: -18.125045776367188
    6. 'define' → logprob: -18.500045776367188
    7. '    
' → logprob: -19.000045776367188
    8. 'print' → logprob: -19.625045776367188
    9. '```' → logprob: -19.750045776367188
    10. '	def' → logprob: -19.875045776367188

Token 602: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03516259416937828
    2. 'write' → logprob: -4.285162448883057
    3. 'process' → logprob: -4.285162448883057
    4. 'handle' → logprob: -5.285162448883057
    5. 'solve' → logprob: -7.160162448883057
    6. ' print' → logprob: -7.660162448883057
    7. 'format' → logprob: -8.285162925720215
    8. 'run' → logprob: -8.410162925720215
    9. 'output' → logprob: -9.410162925720215
    10. 'display' → logprob: -9.785162925720215

Token 603: '_results' (ID: 31049)
  Prédit: '(results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.10542375594377518
    2. '(' → logprob: -2.48042368888855
    3. '(lines' → logprob: -5.230423927307129
    4. '(result' → logprob: -5.355423927307129
    5. '(min' → logprob: -6.230423927307129
    6. '(len' → logprob: -7.105423927307129
    7. '(s' → logprob: -7.605423927307129
    8. '(line' → logprob: -7.605423927307129
    9. '(number' → logprob: -8.230423927307129
    10. '(output' → logprob: -8.355423927307129

Token 604: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.03852863982319832
    2. '(d' → logprob: -3.2885286808013916
    3. '(data' → logprob: -8.663528442382812
    4. '(' → logprob: -9.038528442382812
    5. '(result' → logprob: -9.413528442382812
    6. '(datas' → logprob: -10.538528442382812
    7. '(def' → logprob: -10.663528442382812
    8. '(output' → logprob: -10.913528442382812
    9. '(dataset' → logprob: -11.163528442382812
    10. '(outputs' → logprob: -11.288528442382812

Token 605: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005644109100103378
    2. '(results' → logprob: -5.25564432144165
    3. '):' → logprob: -8.005643844604492
    4. 'results' → logprob: -9.880643844604492
    5. ':' → logprob: -11.630643844604492
    6. '):
' → logprob: -11.880643844604492
    7. ' ,' → logprob: -12.005643844604492
    8. '   ' → logprob: -14.005643844604492
    9. ')(' → logprob: -14.380643844604492
    10. ')' → logprob: -15.005643844604492

Token 606: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0682271420955658
    2. '   ' → logprob: -2.9432270526885986
    3. ' for' → logprob: -4.943227291107178
    4. 'for' → logprob: -5.318227291107178
    5. '```' → logprob: -7.818227291107178
    6. '[' → logprob: -7.943227291107178
    7. '(' → logprob: -8.31822681427002
    8. '[
' → logprob: -10.44322681427002
    9. '[]' → logprob: -10.69322681427002
    10. ':' → logprob: -10.81822681427002

Token 607: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001967531396076083
    2. ' for' → logprob: -6.251967430114746
    3. '       ' → logprob: -10.751967430114746
    4. '   ' → logprob: -11.001967430114746
    5. 'import' → logprob: -14.751967430114746
    6. '	for' → logprob: -15.501967430114746
    7. '
' → logprob: -15.751967430114746
    8. '```' → logprob: -17.251968383789062
    9. 'print' → logprob: -20.626968383789062
    10. ' ' → logprob: -20.626968383789062

Token 608: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3880276083946228
    2. 'result' → logprob: -1.1380276679992676
    3. ' res' → logprob: -7.638027667999268
    4. 'r' → logprob: -7.888027667999268
    5. ' result' → logprob: -8.13802719116211
    6. 'steps' → logprob: -12.01302719116211
    7. ' r' → logprob: -14.38802719116211
    8. 'step' → logprob: -16.38802719116211
    9. ' steps' → logprob: -17.88802719116211
    10. 'i' → logprob: -18.88802719116211

Token 609: ' in' (ID: 306)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.12133881449699402
    2. ' in' → logprob: -2.6213388442993164
    3. 'ults' → logprob: -3.2463388442993164
    4. 'ultat' → logprob: -7.121338844299316
    5. ' ult' → logprob: -7.246338844299316
    6. 'ut' → logprob: -8.371338844299316
    7. 'ul' → logprob: -8.871338844299316
    8. 'ульт' → logprob: -9.246338844299316
    9. 'ulta' → logprob: -9.371338844299316
    10. 'ault' → logprob: -9.496338844299316

Token 610: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -1.3306015716807451e-05
    2. ' results' → logprob: -11.25001335144043
    3. 'res' → logprob: -15.37501335144043
    4. '(results' → logprob: -17.37501335144043
    5. '
' → logprob: -18.25001335144043
    6. '	results' → logprob: -18.50001335144043
    7. 'result' → logprob: -19.25001335144043
    8. '.results' → logprob: -20.62501335144043
    9. '[' → logprob: -20.87501335144043
    10. '   ' → logprob: -22.25001335144043

Token 611: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03236430138349533
    2. ':
' → logprob: -3.5323643684387207
    3. '           ' → logprob: -6.032364368438721
    4. ',' → logprob: -10.032363891601562
    5. '():
' → logprob: -10.032363891601562
    6. '():' → logprob: -10.032363891601562
    7. '       ' → logprob: -10.907363891601562
    8. '.' → logprob: -11.032363891601562
    9. '):' → logprob: -11.782363891601562
    10. 'print' → logprob: -11.782363891601562

Token 612: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11767591536045074
    2. 'print' → logprob: -2.242676019668579
    3. ' print' → logprob: -5.36767578125
    4. '       ' → logprob: -9.11767578125
    5. '```' → logprob: -10.24267578125
    6. '   ' → logprob: -10.49267578125
    7. '	       ' → logprob: -14.11767578125
    8. '
' → logprob: -14.36767578125
    9. '	print' → logprob: -14.49267578125
    10. '`' → logprob: -14.74267578125

Token 613: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.56102097814437e-05
    2. ' print' → logprob: -10.000045776367188
    3. 'if' → logprob: -16.000045776367188
    4. '           ' → logprob: -16.750045776367188
    5. '               ' → logprob: -20.500045776367188
    6. '   ' → logprob: -20.875045776367188
    7. '```' → logprob: -21.125045776367188
    8. '	print' → logprob: -21.625045776367188
    9. ' if' → logprob: -22.750045776367188
    10. '       ' → logprob: -23.875045776367188

Token 614: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0005538671393878758
    2. 'res' → logprob: -7.500554084777832
    3. '(' → logprob: -14.000554084777832
    4. '$res' → logprob: -18.000553131103516
    5. '0' → logprob: -18.625553131103516
    6. ' res' → logprob: -19.250553131103516
    7. '(-' → logprob: -19.500553131103516
    8. '(
' → logprob: -20.000553131103516
    9. '	res' → logprob: -20.625553131103516
    10. '('' → logprob: -20.875553131103516

Token 615: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '()' → logprob: -15.250000953674316
    3. ')
' → logprob: -16.0
    4. '())' → logprob: -16.5
    5. ' )' → logprob: -16.625
    6. ')`' → logprob: -17.625
    7. '))' → logprob: -18.375
    8. '')' → logprob: -19.625
    9. '`)' → logprob: -19.625
    10. ')}' → logprob: -20.0

Token 616: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3520123064517975
    2. 'if' → logprob: -1.602012276649475
    3. 'class' → logprob: -2.3520123958587646
    4. '```' → logprob: -9.977012634277344
    5. '
' → logprob: -12.102012634277344
    6. 'import' → logprob: -13.102012634277344
    7. 'parser' → logprob: -13.227012634277344
    8. 'code' → logprob: -13.602012634277344
    9. 'from' → logprob: -13.852012634277344
    10. ' if' → logprob: -13.977012634277344

Token 617: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.048682861030101776
    2. 'main' → logprob: -3.048682928085327
    3. ' run' → logprob: -9.548683166503906
    4. ' solve' → logprob: -10.923683166503906
    5. 'run' → logprob: -12.173683166503906
    6. 'solve' → logprob: -13.798683166503906
    7. ' process' → logprob: -17.423683166503906
    8. 'process' → logprob: -17.798683166503906
    9. '	main' → logprob: -18.173683166503906
    10. ' solution' → logprob: -19.548683166503906

Token 618: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -7.779520092299208e-05
    2. '():
' → logprob: -9.500078201293945
    3. ' ():' → logprob: -12.875078201293945
    4. '()' → logprob: -15.375078201293945
    5. '():
' → logprob: -16.125078201293945
    6. ':' → logprob: -18.000078201293945
    7. '(' → logprob: -18.250078201293945
    8. '_' → logprob: -18.625078201293945
    9. '():

' → logprob: -19.125078201293945
    10. '().' → logprob: -20.375078201293945

Token 619: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011381425894796848
    2. ' parser' → logprob: -4.88638162612915
    3. 'parser' → logprob: -5.63638162612915
    4. 'import' → logprob: -9.136381149291992
    5. 'input' → logprob: -9.886381149291992
    6. ' input' → logprob: -10.761381149291992
    7. ' import' → logprob: -11.386381149291992
    8. '	parser' → logprob: -12.636381149291992
    9. '   ' → logprob: -12.886381149291992
    10. 'ip' → logprob: -13.386381149291992

Token 620: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.02436426468193531
    2. '   ' → logprob: -4.274364471435547
    3. ' parser' → logprob: -4.774364471435547
    4. 'import' → logprob: -6.399364471435547
    5. 'input' → logprob: -10.274364471435547
    6. ' import' → logprob: -12.649364471435547
    7. 'from' → logprob: -13.024364471435547
    8. '	parser' → logprob: -13.774364471435547
    9. 'ip' → logprob: -15.024364471435547
    10. ' ' → logprob: -15.399364471435547

Token 621: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0206151120364666
    2. '=' → logprob: -3.8956151008605957
    3. '.parse' → logprob: -10.520615577697754
    4. '.' → logprob: -10.645615577697754
    5. '=parse' → logprob: -11.145615577697754
    6. '()' → logprob: -13.020615577697754
    7. '_parser' → logprob: -13.270615577697754
    8. ' ' → logprob: -14.395615577697754
    9. '().' → logprob: -14.395615577697754
    10. 'Parser' → logprob: -14.770615577697754

Token 622: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -5.512236498361744e-07
    2. ' Input' → logprob: -14.500000953674316
    3. '_input' → logprob: -23.5
    4. '	Input' → logprob: -23.625
    5. '<Input' → logprob: -24.375
    6. 'input' → logprob: -25.125
    7. '_Input' → logprob: -25.75
    8. 'Output' → logprob: -26.0
    9. '\Input' → logprob: -26.0
    10. 'INPUT' → logprob: -27.25

Token 623: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -4.320199877838604e-07
    2. 'parser' → logprob: -15.625
    3. 'Handler' → logprob: -16.125
    4. '(Parser' → logprob: -17.25
    5. '_parser' → logprob: -18.375
    6. '.Parser' → logprob: -18.625
    7. 'Processor' → logprob: -20.0
    8. 'Parse' → logprob: -21.0
    9. ' Parser' → logprob: -21.625
    10. '-parser' → logprob: -21.875

Token 624: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04866332933306694
    2. '()
' → logprob: -3.048663377761841
    3. '   ' → logprob: -10.048663139343262
    4. '.parse' → logprob: -11.173663139343262
    5. '()
' → logprob: -12.298663139343262
    6. '().' → logprob: -12.548663139343262
    7. '();' → logprob: -13.173663139343262
    8. '()

' → logprob: -13.173663139343262
    9. '()\' → logprob: -13.423663139343262
    10. '(parser' → logprob: -14.298663139343262

Token 625: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002162990625947714
    2. 'parser' → logprob: -6.252162933349609
    3. '	parser' → logprob: -8.87716293334961
    4. ' parser' → logprob: -9.37716293334961
    5. '
' → logprob: -11.87716293334961
    6. '(parser' → logprob: -13.75216293334961
    7. '    
' → logprob: -14.00216293334961
    8. '  ' → logprob: -14.87716293334961
    9. '_parser' → logprob: -15.00216293334961
    10. '.parser' → logprob: -15.75216293334961

Token 626: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -3.1186566047836095e-05
    2. '   ' → logprob: -10.500031471252441
    3. ' parser' → logprob: -12.625031471252441
    4. '	parser' → logprob: -16.000030517578125
    5. 'parse' → logprob: -16.125030517578125
    6. '.parser' → logprob: -18.375030517578125
    7. '    
' → logprob: -18.375030517578125
    8. '(parser' → logprob: -18.375030517578125
    9. '
' → logprob: -18.375030517578125
    10. '_parser' → logprob: -19.750030517578125

Token 627: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -4.4849443838757e-06
    2. '.' → logprob: -12.375004768371582
    3. 'parse' → logprob: -16.000003814697266
    4. '.parser' → logprob: -17.125003814697266
    5. ' .' → logprob: -17.250003814697266
    6. '=parse' → logprob: -17.500003814697266
    7. '.Parse' → logprob: -18.625003814697266
    8. '.p' → logprob: -19.500003814697266
    9. '.
' → logprob: -20.250003814697266
    10. '.process' → logprob: -20.375003814697266

Token 628: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.705125093460083
    2. '   ' → logprob: -0.955125093460083
    3. 'results' → logprob: -2.205125093460083
    4. ' results' → logprob: -4.580124855041504
    5. '    
' → logprob: -7.580124855041504
    6. '	results' → logprob: -8.830124855041504
    7. '
' → logprob: -11.455124855041504
    8. ' 
' → logprob: -11.830124855041504
    9. 'for' → logprob: -12.455124855041504
    10. 'result' → logprob: -12.580124855041504

Token 629: '   ' (ID: 271)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.07701478153467178
    2. ' results' → logprob: -3.077014684677124
    3. '   ' → logprob: -3.577014684677124
    4. 'solver' → logprob: -10.577014923095703
    5. 'for' → logprob: -11.202014923095703
    6. 'outputs' → logprob: -12.077014923095703
    7. '	results' → logprob: -12.202014923095703
    8. 'result' → logprob: -12.202014923095703
    9. 'solutions' → logprob: -12.452014923095703
    10. ' for' → logprob: -12.827014923095703

Token 630: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -2.5776860184123507e-06
    2. ' results' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.25000286102295
    4. 'outputs' → logprob: -18.375001907348633
    5. '	results' → logprob: -20.250001907348633
    6. 'for' → logprob: -20.625001907348633
    7. 'result' → logprob: -20.875001907348633
    8. 'answers' → logprob: -22.750001907348633
    9. '    
' → logprob: -22.875001907348633
    10. '```' → logprob: -22.875001907348633

Token 631: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020589184015989304
    2. '=' → logprob: -3.8955891132354736
    3. '=[]' → logprob: -10.020588874816895
    4. '[]' → logprob: -13.520588874816895
    5. '=[]
' → logprob: -14.520588874816895
    6. '_' → logprob: -14.770588874816895
    7. 's' → logprob: -15.020588874816895
    8. '[' → logprob: -16.77058982849121
    9. ' =[' → logprob: -16.77058982849121
    10. '[:]' → logprob: -16.89558982849121

Token 632: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0003374886582605541
    2. '[]
' → logprob: -8.000337600708008
    3. ' []' → logprob: -13.500337600708008
    4. '[' → logprob: -14.750337600708008
    5. '[]

' → logprob: -16.125337600708008
    6. '[]}' → logprob: -16.750337600708008
    7. '[]>' → logprob: -17.375337600708008
    8. '[]"' → logprob: -17.875337600708008
    9. '[])' → logprob: -19.250337600708008
    10. '[],' → logprob: -19.625337600708008

Token 633: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2578539550304413
    2. 'for' → logprob: -1.5078539848327637
    3. ' for' → logprob: -5.132853984832764
    4. '
' → logprob: -12.757853507995605
    5. '	for' → logprob: -13.257853507995605
    6. '```' → logprob: -13.757853507995605
    7. '    
' → logprob: -13.882853507995605
    8. '  ' → logprob: -15.257853507995605
    9. '<|end|>' → logprob: -15.757853507995605
    10. ' ' → logprob: -15.757853507995605

Token 634: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001129602751461789
    2. '   ' → logprob: -9.250112533569336
    3. ' for' → logprob: -11.000112533569336
    4. '
' → logprob: -17.500112533569336
    5. '```' → logprob: -17.500112533569336
    6. '	for' → logprob: -19.500112533569336
    7. '    
' → logprob: -19.750112533569336
    8. '``' → logprob: -20.250112533569336
    9. 'from' → logprob: -20.500112533569336
    10. '       ' → logprob: -20.750112533569336

Token 635: ' rules' (ID: 9607)
  Prédit: 'rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rules' → logprob: -0.0016316171968355775
    2. '(r' → logprob: -6.626631736755371
    3. ' rules' → logprob: -8.376631736755371
    4. 'dataset' → logprob: -10.251631736755371
    5. 'r' → logprob: -11.126631736755371
    6. '   ' → logprob: -11.626631736755371
    7. '(' → logprob: -12.001631736755371
    8. 'datasets' → logprob: -12.751631736755371
    9. ' (' → logprob: -13.001631736755371
    10. '(dataset' → logprob: -14.001631736755371

Token 636: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.451116051815916e-05
    2. ' ,' → logprob: -11.250024795532227
    3. ' in' → logprob: -11.625024795532227
    4. 'in' → logprob: -14.000024795532227
    5. '_,' → logprob: -14.875024795532227
    6. ',d' → logprob: -15.500024795532227
    7. ',data' → logprob: -16.000024795532227
    8. 's' → logprob: -16.125024795532227
    9. ',input' → logprob: -16.375024795532227
    10. '‌,' → logprob: -16.625024795532227

Token 637: ' gamma' (ID: 40570)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5258461833000183
    2. 'gamma' → logprob: -0.9008461833000183
    3. ' start' → logprob: -6.275846004486084
    4. ' gamma' → logprob: -7.275846004486084
    5. 'g' → logprob: -10.025846481323242
    6. '   ' → logprob: -10.150846481323242
    7. 'source' → logprob: -10.275846481323242
    8. 's' → logprob: -11.650846481323242
    9. 'src' → logprob: -12.650846481323242
    10. 'γ' → logprob: -12.775846481323242

Token 638: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.941850526549388e-06
    2. ' ,' → logprob: -11.875007629394531
    3. ',target' → logprob: -14.125007629394531
    4. '_,' → logprob: -16.25000762939453
    5. ',
' → logprob: -17.12500762939453
    6. ',start' → logprob: -17.37500762939453
    7. ',d' → logprob: -18.00000762939453
    8. 's' → logprob: -18.00000762939453
    9. 'delta' → logprob: -18.00000762939453
    10. '   ' → logprob: -18.12500762939453

Token 639: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.002476016292348504
    2. ' delta' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.25247573852539
    4. 'target' → logprob: -16.87747573852539
    5. '
' → logprob: -17.37747573852539
    6. ' ' → logprob: -18.25247573852539
    7. 'd' → logprob: -18.25247573852539
    8. '  ' → logprob: -18.62747573852539
    9. '_delta' → logprob: -18.62747573852539
    10. '(delta' → logprob: -18.87747573852539

Token 640: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0024820810649544
    2. 'in' → logprob: -6.002481937408447
    3. '   ' → logprob: -12.502482414245605
    4. ',' → logprob: -13.252482414245605
    5. '	in' → logprob: -15.252482414245605
    6. ':' → logprob: -15.377482414245605
    7. '    ' → logprob: -15.752482414245605
    8. ':
' → logprob: -15.752482414245605
    9. ' ' → logprob: -16.00248146057129
    10. '  ' → logprob: -17.25248146057129

Token 641: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.009763171896338463
    2. ' parser' → logprob: -4.634763240814209
    3. '   ' → logprob: -12.13476276397705
    4. ' ' → logprob: -14.38476276397705
    5. '
' → logprob: -14.88476276397705
    6. '(parser' → logprob: -15.38476276397705
    7. '	parser' → logprob: -15.63476276397705
    8. 'parse' → logprob: -16.009763717651367
    9. '    ' → logprob: -16.384763717651367
    10. '  ' → logprob: -16.384763717651367

Token 642: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -6.034592388459714e-06
    2. '.datas' → logprob: -12.375005722045898
    3. '.dataset' → logprob: -13.875005722045898
    4. 'datasets' → logprob: -14.625005722045898
    5. ' .' → logprob: -15.750005722045898
    6. '.dat' → logprob: -16.3750057220459
    7. '.' → logprob: -16.8750057220459
    8. '.results' → logprob: -16.8750057220459
    9. '.data' → logprob: -17.3750057220459
    10. '.records' → logprob: -18.8750057220459

Token 643: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18002833425998688
    2. ':
' → logprob: -1.8050283193588257
    3. '       ' → logprob: -9.055027961730957
    4. '   ' → logprob: -9.430027961730957
    5. '):
' → logprob: -9.805027961730957
    6. '):' → logprob: -11.305027961730957
    7. ',' → logprob: -11.680027961730957
    8. ':
' → logprob: -12.430027961730957
    9. ':

' → logprob: -13.055027961730957
    10. ' :
' → logprob: -13.305027961730957

Token 644: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016718494007363915
    2. '   ' → logprob: -6.75167179107666
    3. 'sub' → logprob: -7.62667179107666
    4. ' substitution' → logprob: -12.12667179107666
    5. '
' → logprob: -13.00167179107666
    6. '           ' → logprob: -13.12667179107666
    7. '```' → logprob: -13.62667179107666
    8. 's' → logprob: -14.50167179107666
    9. ' sub' → logprob: -14.62667179107666
    10. '	sub' → logprob: -15.12667179107666

Token 645: ' substitution' (ID: 92838)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.863585352897644
    2. ' substitution' → logprob: -0.863585352897644
    3. 'solver' → logprob: -2.4885854721069336
    4. '       ' → logprob: -2.8635854721069336
    5. ' solver' → logprob: -4.613585472106934
    6. ' sub' → logprob: -6.613585472106934
    7. '   ' → logprob: -6.613585472106934
    8. 'set' → logprob: -6.863585472106934
    9. 'subs' → logprob: -7.488585472106934
    10. ' substitutions' → logprob: -7.613585472106934

Token 646: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -5.919942486798391e-05
    2. 'set' → logprob: -9.750059127807617
    3. 'Set' → logprob: -14.625059127807617
    4. '_sets' → logprob: -16.750059127807617
    5. '   ' → logprob: -16.875059127807617
    6. '_sub' → logprob: -17.000059127807617
    7. 's' → logprob: -17.500059127807617
    8. '       ' → logprob: -17.750059127807617
    9. '_solver' → logprob: -17.875059127807617
    10. ' set' → logprob: -17.875059127807617

Token 647: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061968132853507996
    2. '=' → logprob: -2.8119680881500244
    3. '=sub' → logprob: -14.811967849731445
    4. '<|end|>' → logprob: -18.436967849731445
    5. 's' → logprob: -18.936967849731445
    6. ')' → logprob: -18.936967849731445
    7. '=subprocess' → logprob: -19.061967849731445
    8. '＝' → logprob: -19.061967849731445
    9. ' ' → logprob: -19.061967849731445
    10. '=set' → logprob: -19.186967849731445

Token 648: ' Sub' (ID: 5934)
  Prédit: 'Sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sub' → logprob: -0.0040785204619169235
    2. ' Sub' → logprob: -5.504078388214111
    3. '(Sub' → logprob: -18.504077911376953
    4. '   ' → logprob: -18.629077911376953
    5. '_sub' → logprob: -19.129077911376953
    6. '_Sub' → logprob: -19.379077911376953
    7. 'sub' → logprob: -20.254077911376953
    8. '.Sub' → logprob: -20.379077911376953
    9. ' ' → logprob: -21.129077911376953
    10. 'Subclass' → logprob: -21.879077911376953

Token 649: 'stitution' (ID: 20066)
  Prédit: 'stitution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stitution' → logprob: -3.292907877039397e-06
    2. 'stit' → logprob: -13.37500286102295
    3. 'tit' → logprob: -14.12500286102295
    4. 'st' → logprob: -14.62500286102295
    5. 'utation' → logprob: -15.37500286102295
    6. 'istit' → logprob: -16.625003814697266
    7. 'ist' → logprob: -17.125003814697266
    8. 'sit' → logprob: -17.500003814697266
    9. 'ub' → logprob: -17.750003814697266
    10. 'stitut' → logprob: -17.750003814697266

Token 650: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -1.0280383548888494e-06
    2. 'set' → logprob: -14.250000953674316
    3. 'et' → logprob: -15.500000953674316
    4. 'S' → logprob: -17.750001907348633
    5. 'Sets' → logprob: -17.750001907348633
    6. '_set' → logprob: -18.000001907348633
    7. 'Rule' → logprob: -18.000001907348633
    8. 't' → logprob: -19.000001907348633
    9. 'Sub' → logprob: -19.500001907348633
    10. 'erset' → logprob: -19.500001907348633

Token 651: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -8.792751032160595e-05
    2. 'rules' → logprob: -9.37508773803711
    3. 'r' → logprob: -12.75008773803711
    4. '[r' → logprob: -16.37508773803711
    5. 'Sub' → logprob: -17.37508773803711
    6. '(' → logprob: -17.62508773803711
    7. ' rules' → logprob: -17.87508773803711
    8. '(
' → logprob: -18.87508773803711
    9. '(rule' → logprob: -18.87508773803711
    10. '(results' → logprob: -19.00008773803711

Token 652: 'ules' (ID: 3787)
  Prédit: 'ules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ules' → logprob: -0.00026181264547631145
    2. 'rules' → logprob: -8.250262260437012
    3. 'ule' → logprob: -16.250261306762695
    4. 'ul' → logprob: -16.750261306762695
    5. ' rules' → logprob: -16.750261306762695
    6. '[' → logprob: -17.250261306762695
    7. '   ' → logprob: -17.375261306762695
    8. 'les' → logprob: -17.500261306762695
    9. '```' → logprob: -17.500261306762695
    10. '.rules' → logprob: -17.625261306762695

Token 653: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7993330359458923
    2. ')
' → logprob: -0.7993330359458923
    3. '       ' → logprob: -2.299333095550537
    4. ',' → logprob: -8.049332618713379
    5. ')
' → logprob: -9.424332618713379
    6. '   ' → logprob: -12.299332618713379
    7. '           ' → logprob: -12.424332618713379
    8. ')

' → logprob: -12.799332618713379
    9. '      ' → logprob: -13.924332618713379
    10. '
' → logprob: -14.424332618713379

Token 654: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06381148844957352
    2. 'solver' → logprob: -2.8138115406036377
    3. ' solver' → logprob: -6.313811302185059
    4. '   ' → logprob: -10.563811302185059
    5. 's' → logprob: -13.688811302185059
    6. '_solver' → logprob: -13.813811302185059
    7. '           ' → logprob: -13.938811302185059
    8. '
' → logprob: -14.063811302185059
    9. 'solution' → logprob: -14.188811302185059
    10. 'start' → logprob: -15.563811302185059

Token 655: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.0011773703154176474
    2. ' solver' → logprob: -7.0011773109436035
    3. '       ' → logprob: -8.251177787780762
    4. '   ' → logprob: -12.501177787780762
    5. 'sol' → logprob: -14.751177787780762
    6. 'solution' → logprob: -15.251177787780762
    7. '_solver' → logprob: -16.251176834106445
    8. 'Solver' → logprob: -16.626176834106445
    9. '        
' → logprob: -16.626176834106445
    10. 'resolver' → logprob: -16.626176834106445

Token 656: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804183006286621
    2. '=' → logprob: -3.288041830062866
    3. '   ' → logprob: -15.663042068481445
    4. '.' → logprob: -16.788042068481445
    5. ')' → logprob: -17.038042068481445
    6. '    ' → logprob: -17.163042068481445
    7. '```' → logprob: -17.288042068481445
    8. ' ' → logprob: -17.538042068481445
    9. '        ' → logprob: -17.913042068481445
    10. ' =
' → logprob: -17.913042068481445

Token 657: ' Sub' (ID: 5934)
  Prédit: 'Sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sub' → logprob: -0.00020377879263833165
    2. ' Sub' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.00020408630371
    4. '(Sub' → logprob: -16.25020408630371
    5. '_Sub' → logprob: -18.62520408630371
    6. '_sub' → logprob: -20.00020408630371
    7. '.Sub' → logprob: -20.25020408630371
    8. '       ' → logprob: -20.37520408630371
    9. '           ' → logprob: -21.00020408630371
    10. ' ' → logprob: -22.12520408630371

Token 658: 'stitution' (ID: 20066)
  Prédit: 'stitution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stitution' → logprob: -1.2471589798224159e-05
    2. 'st' → logprob: -11.625012397766113
    3. 'tit' → logprob: -13.250012397766113
    4. 'stit' → logprob: -14.875012397766113
    5. 'ist' → logprob: -15.125012397766113
    6. 'istit' → logprob: -15.250012397766113
    7. 'it' → logprob: -16.12501335144043
    8. 'utation' → logprob: -16.37501335144043
    9. '```' → logprob: -16.37501335144043
    10. 'sti' → logprob: -16.50001335144043

Token 659: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -4.320199877838604e-07
    2. 'solver' → logprob: -15.75
    3. '_solver' → logprob: -16.875
    4. 'Set' → logprob: -17.75
    5. 'Sub' → logprob: -18.125
    6. 'Solve' → logprob: -18.25
    7. 'Sol' → logprob: -19.0
    8. ' Solver' → logprob: -20.0
    9. 'olver' → logprob: -20.125
    10. ' solver' → logprob: -20.75

Token 660: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -4.246537173457909e-06
    2. '       ' → logprob: -13.250003814697266
    3. '(' → logprob: -13.750003814697266
    4. '(Sub' → logprob: -14.125003814697266
    5. '(
' → logprob: -15.750003814697266
    6. '=sub' → logprob: -15.875003814697266
    7. 'sub' → logprob: -16.000003814697266
    8. '(substr' → logprob: -16.250003814697266
    9. '(subscription' → logprob: -17.000003814697266
    10. '[sub' → logprob: -17.500003814697266

Token 661: 'stitution' (ID: 20066)
  Prédit: 'stitution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stitution' → logprob: -0.006906356196850538
    2. 'utation' → logprob: -5.006906509399414
    3. 'ution' → logprob: -9.131906509399414
    4. 'st' → logprob: -10.631906509399414
    5. 'it' → logprob: -11.631906509399414
    6. 'ut' → logprob: -11.881906509399414
    7. 'set' → logprob: -11.881906509399414
    8. '_set' → logprob: -12.131906509399414
    9. '_rules' → logprob: -12.131906509399414
    10. 'stit' → logprob: -13.006906509399414

Token 662: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -2.816093228830141e-06
    2. 'set' → logprob: -13.25000286102295
    3. 'Set' → logprob: -14.00000286102295
    4. '_' → logprob: -17.125001907348633
    5. ',' → logprob: -17.375001907348633
    6. '_sets' → logprob: -17.750001907348633
    7. '_,' → logprob: -18.000001907348633
    8. '.set' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.500001907348633
    10. 'et' → logprob: -18.500001907348633

Token 663: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1875571544806007e-05
    2. ',
' → logprob: -12.375011444091797
    3. ' ,' → logprob: -12.375011444091797
    4. ',r' → logprob: -13.125011444091797
    5. ',g' → logprob: -14.500011444091797
    6. '       ' → logprob: -15.125011444091797
    7. ')' → logprob: -15.375011444091797
    8. ',s' → logprob: -15.625011444091797
    9. '(' → logprob: -17.500011444091797
    10. ')
' → logprob: -17.750011444091797

Token 664: ' gamma' (ID: 40570)
  Prédit: 'gamma'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gamma' → logprob: -0.0005536287208087742
    2. ' gamma' → logprob: -7.500553607940674
    3. '
' → logprob: -14.625554084777832
    4. 'delta' → logprob: -16.000553131103516
    5. '
' → logprob: -17.750553131103516
    6. 'Gamma' → logprob: -17.750553131103516
    7. '_gamma' → logprob: -18.000553131103516
    8. '   ' → logprob: -18.000553131103516
    9. '.gamma' → logprob: -18.000553131103516
    10. 'γ' → logprob: -19.000553131103516

Token 665: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.512236498361744e-07
    2. ' ,' → logprob: -14.750000953674316
    3. ',
' → logprob: -16.5
    4. ',d' → logprob: -19.75
    5. '   ' → logprob: -20.0
    6. '‌,' → logprob: -20.0
    7. '       ' → logprob: -20.25
    8. '           ' → logprob: -20.625
    9. '‍,' → logprob: -20.75
    10. '',' → logprob: -21.75

Token 666: ' delta' (ID: 18800)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.07888978719711304
    2. ' delta' → logprob: -2.578889846801758
    3. '(delta' → logprob: -17.203889846801758
    4. '_delta' → logprob: -19.828889846801758
    5. 'Delta' → logprob: -19.953889846801758
    6. '.delta' → logprob: -20.953889846801758
    7. '
' → logprob: -21.453889846801758
    8. 'd' → logprob: -21.703889846801758
    9. 'δ' → logprob: -21.828889846801758
    10. '```' → logprob: -21.953889846801758

Token 667: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20404672622680664
    2. ')
' → logprob: -1.7040467262268066
    3. '       ' → logprob: -5.954046726226807
    4. ')
' → logprob: -10.579046249389648
    5. '           ' → logprob: -12.329046249389648
    6. '   ' → logprob: -13.204046249389648
    7. ')`
' → logprob: -14.329046249389648
    8. '               ' → logprob: -14.579046249389648
    9. ').' → logprob: -14.579046249389648
    10. ')

' → logprob: -14.704046249389648

Token 668: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010779796168208122
    2. 'results' → logprob: -5.135779857635498
    3. 'result' → logprob: -5.385779857635498
    4. '   ' → logprob: -8.63577938079834
    5. 'steps' → logprob: -10.26077938079834
    6. '
' → logprob: -10.88577938079834
    7. ' results' → logprob: -11.63577938079834
    8. '```' → logprob: -12.01077938079834
    9. 'res' → logprob: -12.26077938079834
    10. ' result' → logprob: -12.63577938079834

Token 669: ' res' (ID: 694)
  Prédit: 'steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'steps' → logprob: -0.11312011629343033
    2. 'result' → logprob: -2.6131200790405273
    3. 'res' (adapté à ' res') → logprob: -3.6131200790405273
    4. 'results' → logprob: -5.113120079040527
    5. ' steps' → logprob: -7.738120079040527
    6. ' result' → logprob: -9.488120079040527
    7. '       ' → logprob: -9.488120079040527
    8. 'step' → logprob: -9.738120079040527
    9. ' res' → logprob: -11.238120079040527
    10. ' results' → logprob: -13.113120079040527

Token 670: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5783072710037231
    2. 'ults' → logprob: -0.8283072710037231
    3. '=' → logprob: -6.453307151794434
    4. 'ult' → logprob: -7.453307151794434
    5. 'uts' → logprob: -9.203307151794434
    6. 'u' → logprob: -10.453307151794434
    7. 's' → logprob: -10.703307151794434
    8. 'lts' → logprob: -10.828307151794434
    9. 'uls' → logprob: -11.703307151794434
    10. 'ts' → logprob: -12.078307151794434

Token 671: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.006715370807796717
    2. ' solver' → logprob: -5.006715297698975
    3. 'sol' → logprob: -19.631715774536133
    4. '_solver' → logprob: -22.131715774536133
    5. 'solve' → logprob: -23.256715774536133
    6. 'Solver' → logprob: -23.631715774536133
    7. 's' → logprob: -23.881715774536133
    8. '       ' → logprob: -24.006715774536133
    9. '   ' → logprob: -24.256715774536133
    10. '```' → logprob: -24.256715774536133

Token 672: '.minimum' (ID: 126839)
  Prédit: '.minimum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.minimum' → logprob: -1.8193366486229934e-05
    2. '.' → logprob: -11.000018119812012
    3. '.maximum' → logprob: -13.500018119812012
    4. '.min' → logprob: -17.750019073486328
    5. ' .' → logprob: -18.125019073486328
    6. '.Minimum' → logprob: -19.000019073486328
    7. '.m' → logprob: -19.875019073486328
    8. 'minimum' → logprob: -20.125019073486328
    9. '.minute' → logprob: -20.750019073486328
    10. '.previous' → logprob: -21.000019073486328

Token 673: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.875000953674316
    3. 'sub' → logprob: -15.250000953674316
    4. 'Sub' → logprob: -18.375
    5. '_SUB' → logprob: -19.25
    6. '_Sub' → logprob: -19.625
    7. '_s' → logprob: -21.0
    8. '-sub' → logprob: -21.625
    9. '_
' → logprob: -22.0
    10. ' Sub' → logprob: -22.25

Token 674: 'stit' (ID: 5028)
  Prédit: 'stit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stit' → logprob: -6.933173426659778e-05
    2. 'stitution' → logprob: -9.875069618225098
    3. 'sti' → logprob: -11.375069618225098
    4. 'utations' → logprob: -13.625069618225098
    5. 'utions' → logprob: -13.875069618225098
    6. 'stitut' → logprob: -14.250069618225098
    7. ' substitutions' → logprob: -14.500069618225098
    8. 'stitute' → logprob: -14.500069618225098
    9. 'st' → logprob: -15.000069618225098
    10. 'istit' → logprob: -15.000069618225098

Token 675: 'utions' (ID: 5773)
  Prédit: 'utions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utions' → logprob: -5.080963092041202e-06
    2. 'ions' → logprob: -13.250004768371582
    3. 't' → logprob: -13.750004768371582
    4. 'utations' → logprob: -13.875004768371582
    5. 'ution' → logprob: -15.000004768371582
    6. 'ut' → logprob: -15.000004768371582
    7. 'ations' → logprob: -15.250004768371582
    8. '
' → logprob: -15.750004768371582
    9. 'ptions' → logprob: -17.0000057220459
    10. '

' → logprob: -17.7500057220459

Token 676: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001439459010725841
    2. '()
' → logprob: -8.875144004821777
    3. '()`' → logprob: -13.250144004821777
    4. '())' → logprob: -13.750144004821777
    5. '()

' → logprob: -15.250144004821777
    6. '()
' → logprob: -15.375144004821777
    7. ' ()' → logprob: -15.375144004821777
    8. '()"' → logprob: -15.500144004821777
    9. '();' → logprob: -15.875144004821777
    10. '()\' → logprob: -16.37514305114746

Token 677: '       ' (ID: 309)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.5926761627197266
    2. '       ' → logprob: -0.8426761627197266
    3. ' results' → logprob: -4.342676162719727
    4. '
' → logprob: -5.967676162719727
    5. '   ' → logprob: -7.342676162719727
    6. '	results' → logprob: -8.592676162719727
    7. '(results' → logprob: -8.842676162719727
    8. '```' → logprob: -10.842676162719727
    9. '           ' → logprob: -11.467676162719727
    10. '        
' → logprob: -11.967676162719727

Token 678: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -4.310693111619912e-05
    2. '       ' → logprob: -10.750042915344238
    3. ' results' → logprob: -10.750042915344238
    4. '	results' → logprob: -16.125043869018555
    5. '   ' → logprob: -18.500043869018555
    6. '(results' → logprob: -19.375043869018555
    7. '.results' → logprob: -19.375043869018555
    8. '
' → logprob: -19.500043869018555
    9. 'result' → logprob: -20.000043869018555
    10. '_results' → logprob: -20.375043869018555

Token 679: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024861192796379328
    2. '.' → logprob: -6.002486228942871
    3. '.app' → logprob: -12.127486228942871
    4. '.extend' → logprob: -12.752486228942871
    5. '.ap' → logprob: -13.252486228942871
    6. 'append' → logprob: -16.002485275268555
    7. '.push' → logprob: -17.002485275268555
    8. '.add' → logprob: -17.127485275268555
    9. '.Append' → logprob: -17.127485275268555
    10. '​.' → logprob: -17.127485275268555

Token 680: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00020592445798683912
    2. '(' → logprob: -8.500205993652344
    3. 'res' → logprob: -13.000205993652344
    4. '(
' → logprob: -16.625205993652344
    5. '(str' → logprob: -19.500205993652344
    6. ' (' → logprob: -19.750205993652344
    7. ' res' → logprob: -20.500205993652344
    8. '=res' → logprob: -20.875205993652344
    9. '	res' → logprob: -21.125205993652344
    10. '(re' → logprob: -21.250205993652344

Token 681: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007617156486958265
    2. ')
' → logprob: -4.882616996765137
    3. '   ' → logprob: -12.132616996765137
    4. '
' → logprob: -12.632616996765137
    5. '       ' → logprob: -14.632616996765137
    6. ')return' → logprob: -15.007616996765137
    7. ' )' → logprob: -15.007616996765137
    8. ')
' → logprob: -15.382616996765137
    9. '```' → logprob: -15.382616996765137
    10. ')`' → logprob: -15.507616996765137

Token 682: '   ' (ID: 271)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.0024030047934502363
    2. '   ' → logprob: -6.2524027824401855
    3. '
' → logprob: -7.7524027824401855
    4. '	Output' → logprob: -10.502403259277344
    5. ' Output' → logprob: -11.127403259277344
    6. '    
' → logprob: -13.627403259277344
    7. '```' → logprob: -14.502403259277344
    8. '(Output' → logprob: -15.377403259277344
    9. '_output' → logprob: -15.752403259277344
    10. '  ' → logprob: -16.377403259277344

Token 683: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' (adapté à ' Output') → logprob: -0.0007139815716072917
    2. '
' → logprob: -7.25071382522583
    3. '   ' → logprob: -12.875714302062988
    4. '	Output' → logprob: -14.000714302062988
    5. ' Output' → logprob: -14.625714302062988
    6. '    
' → logprob: -15.500714302062988
    7. '_output' → logprob: -17.750713348388672
    8. '```' → logprob: -18.000713348388672
    9. '

' → logprob: -18.250713348388672
    10. '
' → logprob: -18.625713348388672

Token 684: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: 0.0
    2. '_Handler' → logprob: -17.0
    3. ' Handler' → logprob: -18.875
    4. '_handler' → logprob: -20.0
    5. 'Handle' → logprob: -20.375
    6. 'Hand' → logprob: -20.625
    7. 'handler' → logprob: -21.5
    8. 'Handlers' → logprob: -21.5
    9. '_HANDLER' → logprob: -22.0
    10. '.Handler' → logprob: -22.0

Token 685: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.0001114106344175525
    2. '.' → logprob: -9.12511157989502
    3. 'output' → logprob: -13.75011157989502
    4. ' .' → logprob: -14.50011157989502
    5. '```' → logprob: -15.00011157989502
    6. '.outputs' → logprob: -16.000110626220703
    7. '(output' → logprob: -16.750110626220703
    8. '.Output' → logprob: -16.875110626220703
    9. '
' → logprob: -16.875110626220703
    10. '​.' → logprob: -17.125110626220703

Token 686: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -3.128163257315464e-07
    2. 'results' → logprob: -15.625
    3. '_' → logprob: -17.0
    4. '_result' → logprob: -17.0
    5. '(results' → logprob: -17.5
    6. 'Results' → logprob: -18.625
    7. '_RESULTS' → logprob: -19.75
    8. 's' → logprob: -19.75
    9. '_res' → logprob: -20.375
    10. '```' → logprob: -20.5

Token 687: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -9.674858301877975e-05
    2. '(' → logprob: -9.250096321105957
    3. ' (' → logprob: -14.875096321105957
    4. '(res' → logprob: -16.375097274780273
    5. '(result' → logprob: -16.750097274780273
    6. '(
' → logprob: -16.875097274780273
    7. '("("' → logprob: -17.625097274780273
    8. '(outputs' → logprob: -17.625097274780273
    9. '()' → logprob: -18.000097274780273
    10. '((' → logprob: -18.375097274780273

Token 688: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030416471417993307
    2. '()' → logprob: -6.503041744232178
    3. '())' → logprob: -6.503041744232178
    4. '(' → logprob: -11.12804126739502
    5. ')
' → logprob: -11.25304126739502
    6. ' )' → logprob: -12.00304126739502
    7. '()
' → logprob: -13.00304126739502
    8. ')`' → logprob: -14.75304126739502
    9. '```' → logprob: -14.87804126739502
    10. '[' → logprob: -14.87804126739502

Token 689: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.9361264946837764e-07
    2. ' if' → logprob: -16.25
    3. '```' → logprob: -17.75
    4. '
' → logprob: -18.375
    5. '#' → logprob: -21.5
    6. '    
' → logprob: -21.875
    7. '	if' → logprob: -22.375
    8. '#if' → logprob: -22.5
    9. 'If' → logprob: -23.375
    10. 'main' → logprob: -23.5

Token 690: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.22812312841415405
    2. '__' → logprob: -1.6031231880187988
    3. '_' → logprob: -5.978123188018799
    4. '_name' → logprob: -9.35312271118164
    5. ' ' → logprob: -10.35312271118164
    6. '___' → logprob: -11.35312271118164
    7. 'name' → logprob: -11.35312271118164
    8. ' ' → logprob: -11.47812271118164
    9. ' _' → logprob: -12.10312271118164
    10. 'space' → logprob: -12.72812271118164

Token 691: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4082138240337372
    2. ' ==' → logprob: -1.5332138538360596
    3. '==' → logprob: -2.1582138538360596
    4. '=="' → logprob: -6.7832136154174805
    5. ' __' → logprob: -6.9082136154174805
    6. 'name' → logprob: -7.4082136154174805
    7. '=='' → logprob: -7.7832136154174805
    8. 'if' → logprob: -8.65821361541748
    9. '__.__' → logprob: -8.90821361541748
    10. '.__' → logprob: -9.28321361541748

Token 692: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.2200749754119897e-06
    2. '__.__' → logprob: -13.750001907348633
    3. '==' → logprob: -14.250001907348633
    4. '__
' → logprob: -16.250001907348633
    5. '```' → logprob: -16.250001907348633
    6. '____' → logprob: -16.375001907348633
    7. '___' → logprob: -17.000001907348633
    8. '__.' → logprob: -17.250001907348633
    9. '__('' → logprob: -17.500001907348633
    10. '__["' → logprob: -18.625001907348633

Token 693: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004096208605915308
    2. '==' → logprob: -5.504096031188965
    3. ' ==' → logprob: -11.379096031188965
    4. '=="' → logprob: -12.629096031188965
    5. '=='' → logprob: -14.254096031188965
    6. '__.__' → logprob: -14.254096031188965
    7. '=' → logprob: -14.504096031188965
    8. '___' → logprob: -15.129096031188965
    9. '_' → logprob: -15.254096031188965
    10. '____' → logprob: -15.754096031188965

Token 694: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12694469094276428
    2. ''' → logprob: -2.1269447803497314
    3. ' "__' → logprob: -11.501944541931152
    4. '__' → logprob: -12.376944541931152
    5. ' '__' → logprob: -13.751944541931152
    6. '"name' → logprob: -14.751944541931152
    7. '"user' → logprob: -15.376944541931152
    8. ''name' → logprob: -16.00194549560547
    9. '"class' → logprob: -16.37694549560547
    10. ''"' → logprob: -16.75194549560547

Token 695: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0009655343601480126
    2. 'name' → logprob: -7.500965595245361
    3. '__' → logprob: -7.875965595245361
    4. 'if' → logprob: -11.375965118408203
    5. 'file' → logprob: -12.000965118408203
    6. 'python' → logprob: -12.250965118408203
    7. 'built' → logprob: -12.375965118408203
    8. '_main' → logprob: -14.250965118408203
    9. 'py' → logprob: -14.500965118408203
    10. 'code' → logprob: -14.500965118408203

Token 696: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.0380503311753273
    2. '__' → logprob: -3.288050413131714
    3. '__":
' → logprob: -12.163050651550293
    4. '__.' → logprob: -13.413050651550293
    5. '_' → logprob: -13.913050651550293
    6. '__:' → logprob: -13.913050651550293
    7. '__.__' → logprob: -16.163049697875977
    8. '___' → logprob: -16.913049697875977
    9. '.__' → logprob: -17.663049697875977
    10. ''' → logprob: -17.663049697875977

Token 697: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00016384923947043717
    2. ' main' → logprob: -8.750164031982422
    3. '__' → logprob: -12.750164031982422
    4. '	main' → logprob: -13.375164031982422
    5. '_main' → logprob: -14.625164031982422
    6. '   ' → logprob: -14.750164031982422
    7. '(main' → logprob: -17.000164031982422
    8. 'import' → logprob: -17.625164031982422
    9. 'Main' → logprob: -17.625164031982422
    10. '
' → logprob: -17.625164031982422

Token 698: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.75
    3. '	main' → logprob: -20.375
    4. 'import' → logprob: -24.0
    5. '   ' → logprob: -24.875
    6. '(main' → logprob: -25.375
    7. '_main' → logprob: -25.5
    8. '.main' → logprob: -25.625
    9. 'mai' → logprob: -26.5
    10. '
' → logprob: -26.625

Token 699: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 697
Tokens correctement prédits (1ère position, stricte): 356
Tokens correctement prédits (1ère position, avec adaptation): 412
Tokens correctement prédits (top 10): 643
Précision stricte (1ère position): 51.08%
Précision adaptée (1ère position): 59.11%
Précision (top 10): 92.25%
================================================================================
