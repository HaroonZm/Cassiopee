================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
H, R = map(int, input().split())

top = H + R

if top > 0:
    print(1)
elif top == 0:
    print(0)
else:
    print(-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'H' (ID: 39)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' R' (ID: 460)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33519068360328674
    2. ' =' → logprob: -2.210190773010254
    3. '(' → logprob: -2.460190773010254
    4. ',' → logprob: -3.585190773010254
    5. ';' → logprob: -4.210190773010254
    6. ')' → logprob: -4.460190773010254
    7. '[' → logprob: -4.585190773010254
    8. '.' → logprob: -4.960190773010254
    9. 'e' → logprob: -5.460190773010254
    10. 'i' → logprob: -6.210190773010254

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3997594118118286
    2. '0' → logprob: -1.7747594118118286
    3. ' torch' → logprob: -3.524759292602539
    4. ' H' → logprob: -4.149759292602539
    5. '10' → logprob: -4.149759292602539
    6. ' np' → logprob: -4.149759292602539
    7. ' map' → logprob: -4.649759292602539
    8. ' tf' → logprob: -5.149759292602539
    9. '1' → logprob: -5.274759292602539
    10. ' [],' → logprob: -5.274759292602539

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7395175099372864
    2. '(int' → logprob: -0.7395175099372864
    3. '(lambda' → logprob: -3.4895174503326416
    4. '(str' → logprob: -4.989517688751221
    5. '<|end|>' → logprob: -5.489517688751221
    6. '(input' → logprob: -7.239517688751221
    7. '```' → logprob: -7.489517688751221
    8. 'int' → logprob: -7.614517688751221
    9. '(len' → logprob: -8.239517211914062
    10. '(eval' → logprob: -8.489517211914062

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4202435314655304
    2. ')' → logprob: -1.420243501663208
    3. '(' → logprob: -2.420243501663208
    4. ',' → logprob: -5.295243740081787
    5. '(user' → logprob: -5.795243740081787
    6. ',input' → logprob: -7.170243740081787
    7. 'input' → logprob: -7.545243740081787
    8. '(int' → logprob: -7.920243740081787
    9. '`)' → logprob: -8.170243263244629
    10. '(raw' → logprob: -8.170243263244629

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1002582237124443
    2. ' input' → logprob: -2.3502581119537354
    3. '(input' → logprob: -9.975257873535156
    4. ')' → logprob: -13.100257873535156
    5. '<input' → logprob: -13.725257873535156
    6. ',input' → logprob: -13.975257873535156
    7. '=input' → logprob: -15.225257873535156
    8. '[input' → logprob: -15.475257873535156
    9. '	input' → logprob: -16.100257873535156
    10. ' ' → logprob: -16.100257873535156

Token 8: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4458998143672943
    2. '()' → logprob: -1.0708998441696167
    3. '`()' → logprob: -5.945899963378906
    4. '(' → logprob: -6.070899963378906
    5. '().' → logprob: -6.195899963378906
    6. '()))' → logprob: -6.445899963378906
    7. '());' → logprob: -6.570899963378906
    8. '(()' → logprob: -6.695899963378906
    9. '()`' → logprob: -6.820899963378906
    10. '();)' → logprob: -6.945899963378906

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005310012027621269
    2. 'strip' → logprob: -5.25531005859375
    3. 'read' → logprob: -9.88031005859375
    4. 'rstrip' → logprob: -10.75531005859375
    5. ' split' → logprob: -13.13031005859375
    6. ')' → logprob: -14.00531005859375
    7. '(split' → logprob: -15.38031005859375
    8. 'startswith' → logprob: -15.50531005859375
    9. 'replace' → logprob: -15.63031005859375
    10. 'decode' → logprob: -16.13031005859375

Token 10: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16978353261947632
    2. '())' → logprob: -1.919783592224121
    3. '))' → logprob: -5.044783592224121
    4. '()' → logprob: -6.044783592224121
    5. '(' → logprob: -8.419783592224121
    6. '`)' → logprob: -8.544783592224121
    7. '()))' → logprob: -8.544783592224121
    8. ')`' → logprob: -11.044783592224121
    9. ' ())' → logprob: -11.794783592224121
    10. '('' → logprob: -11.794783592224121

Token 11: 'top' (ID: 8169)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18481549620628357
    2. 'a' → logprob: -3.4348154067993164
    3. 'grid' → logprob: -3.9348154067993164
    4. 'matrix' → logprob: -3.9348154067993164
    5. 'area' → logprob: -4.684815406799316
    6. 'height' → logprob: -4.809815406799316
    7. 's' → logprob: -4.809815406799316
    8. 'if' → logprob: -4.934815406799316
    9. 'h' → logprob: -5.059815406799316
    10. 'x' → logprob: -5.059815406799316

Token 12: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09762849658727646
    2. ' =' → logprob: -2.722628593444824
    3. '=' → logprob: -4.097628593444824
    4. '[' → logprob: -5.347628593444824
    5. '_height' → logprob: -6.847628593444824
    6. ',' → logprob: -7.472628593444824
    7. '_stack' → logprob: -7.972628593444824
    8. '_layer' → logprob: -8.347628593444824
    9. '_left' → logprob: -8.347628593444824
    10. '[]' → logprob: -8.472628593444824

Token 13: ' H' (ID: 487)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3766103982925415
    2. '[' → logprob: -1.8766103982925415
    3. '0' → logprob: -2.001610279083252
    4. '[int' → logprob: -4.376610279083252
    5. ' []' → logprob: -5.501610279083252
    6. 'H' → logprob: -5.876610279083252
    7. 'list' → logprob: -6.126610279083252
    8. '[max' → logprob: -7.126610279083252
    9. ' [' → logprob: -7.251610279083252
    10. '[min' → logprob: -7.376610279083252

Token 14: ' +' (ID: 659)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0859507322311401
    2. '-' → logprob: -1.4609507322311401
    3. ',' → logprob: -2.4609508514404297
    4. '+' → logprob: -2.5859508514404297
    5. '[' → logprob: -2.7109508514404297
    6. ')' → logprob: -3.3359508514404297
    7. ' -' → logprob: -3.7109508514404297
    8. '*' → logprob: -3.8359508514404297
    9. ' +' → logprob: -4.08595085144043
    10. '```' → logprob: -4.46095085144043

Token 15: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.43304508924484253
    2. ' R' → logprob: -1.1830451488494873
    3. '1' → logprob: -3.4330451488494873
    4. ' ' → logprob: -4.683044910430908
    5. '2' → logprob: -7.433044910430908
    6. ' (' → logprob: -7.558044910430908
    7. '10' → logprob: -7.808044910430908
    8. '20' → logprob: -8.058045387268066
    9. '(' → logprob: -8.308045387268066
    10. '50' → logprob: -8.683045387268066

Token 16: '

' (ID: 279)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.1265803575515747
    2. '<|end|>' → logprob: -1.1265803575515747
    3. '-' → logprob: -1.7515803575515747
    4. '>' → logprob: -2.876580238342285
    5. ')' → logprob: -3.626580238342285
    6. '```' → logprob: -3.751580238342285
    7. '+' → logprob: -4.876580238342285
    8. '#' → logprob: -4.876580238342285
    9. ' ' → logprob: -5.001580238342285
    10. ' -' → logprob: -5.001580238342285

Token 17: 'if' (ID: 366)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.045883297920227
    2. '*' → logprob: -1.295883297920227
    3. '+' → logprob: -1.545883297920227
    4. ')' → logprob: -3.2958831787109375
    5. 'print' → logprob: -3.9208831787109375
    6. '#' → logprob: -4.1708831787109375
    7. ' ' → logprob: -4.1708831787109375
    8. 'if' → logprob: -4.2958831787109375
    9. '<|end|>' → logprob: -4.4208831787109375
    10. '>' → logprob: -5.1708831787109375

Token 18: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.020205723121762276
    2. ' ' → logprob: -4.270205497741699
    3. ' H' → logprob: -5.270205497741699
    4. ' not' → logprob: -7.895205497741699
    5. 'top' → logprob: -8.2702054977417
    6. ' R' → logprob: -8.6452054977417
    7. ' space' → logprob: -10.7702054977417
    8. ' ' → logprob: -10.8952054977417
    9. ' (' → logprob: -11.2702054977417
    10. '(top' → logprob: -12.6452054977417

Token 19: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.010707732290029526
    2. '>' → logprob: -5.510707855224609
    3. ' >=' → logprob: -5.510707855224609
    4. ' ==' → logprob: -7.010707855224609
    5. ' <=' → logprob: -7.135707855224609
    6. ' <' → logprob: -7.260707855224609
    7. ' !=' → logprob: -9.38570785522461
    8. ' ' → logprob: -10.26070785522461
    9. '  ' → logprob: -11.76070785522461
    10. '==' → logprob: -11.88570785522461

Token 20: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49197855591773987
    2. ' ' → logprob: -0.9919785261154175
    3. '100' → logprob: -4.866978645324707
    4. '10' → logprob: -5.241978645324707
    5. '1' → logprob: -6.491978645324707
    6. '50' → logprob: -7.116978645324707
    7. '18' → logprob: -7.366978645324707
    8. '180' → logprob: -7.616978645324707
    9. '9' → logprob: -8.241978645324707
    10. '99' → logprob: -8.616978645324707

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33287012577056885
    2. '10' → logprob: -1.9578701257705688
    3. ' ' → logprob: -2.7078700065612793
    4. '100' → logprob: -3.0828700065612793
    5. '50' → logprob: -4.707870006561279
    6. '1' → logprob: -5.457870006561279
    7. '20' → logprob: -6.332870006561279
    8. '9' → logprob: -6.332870006561279
    9. '18' → logprob: -6.582870006561279
    10. '200' → logprob: -6.582870006561279

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.4987974029500037e-05
    2. ' :' → logprob: -10.750024795532227
    3. ':**' → logprob: -13.625024795532227
    4. ':
' → logprob: -14.250024795532227
    5. ' and' → logprob: -14.625024795532227
    6. ',' → logprob: -15.000024795532227
    7. '=' → logprob: -15.875024795532227
    8. '+:' → logprob: -16.000024795532227
    9. '):' → logprob: -16.125024795532227
    10. ',:' → logprob: -16.500024795532227

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041685476899147034
    2. '    ' → logprob: -4.041685581207275
    3. ' print' → logprob: -4.541685581207275
    4. '\n' → logprob: -4.666685581207275
    5. 'print' → logprob: -7.041685581207275
    6. ' ' → logprob: -7.416685581207275
    7. '\' → logprob: -7.541685581207275
    8. '    
' → logprob: -7.791685581207275
    9. ':' → logprob: -8.666685104370117
    10. ' \' → logprob: -9.416685104370117

Token 24: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.04974065348505974
    2. 'print' (adapté à ' print') → logprob: -3.5497405529022217
    3. '   ' → logprob: -4.049740791320801
    4. '    ' → logprob: -6.924740791320801
    5. ' pass' → logprob: -7.299740791320801
    6. ' top' → logprob: -8.0497407913208
    7. ' ' → logprob: -9.4247407913208
    8. ' `' → logprob: -10.4247407913208
    9. ' space' → logprob: -10.5497407913208
    10. '```' → logprob: -10.5497407913208

Token 25: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3427335321903229
    2. '(top' → logprob: -1.7177335023880005
    3. '("' → logprob: -2.21773362159729
    4. '('' → logprob: -6.967733383178711
    5. '("("' → logprob: -8.217733383178711
    6. '(True' → logprob: -8.467733383178711
    7. '()' → logprob: -8.592733383178711
    8. 'top' → logprob: -9.342733383178711
    9. '"' → logprob: -9.842733383178711
    10. '("")' → logprob: -11.092733383178711

Token 26: '1' (ID: 16)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7017125487327576
    2. 'top' → logprob: -0.7017125487327576
    3. '")' → logprob: -5.576712608337402
    4. '1' → logprob: -6.076712608337402
    5. ''t' → logprob: -7.076712608337402
    6. ' top' → logprob: -8.326712608337402
    7. ''"' → logprob: -8.576712608337402
    8. '(top' → logprob: -8.576712608337402
    9. ''' → logprob: -8.826712608337402
    10. ')' → logprob: -8.951712608337402

Token 27: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ' )' → logprob: -13.250003814697266
    3. ')
' → logprob: -14.000003814697266
    4. '+' → logprob: -15.250003814697266
    5. '*' → logprob: -15.500003814697266
    6. '')' → logprob: -15.875003814697266
    7. '))' → logprob: -16.000003814697266
    8. '**' → logprob: -16.750003814697266
    9. '0' → logprob: -17.375003814697266
    10. '+)' → logprob: -17.500003814697266

Token 28: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.11938165873289108
    2. ' else' → logprob: -2.2443816661834717
    3. 'elif' → logprob: -5.369381427764893
    4. ':' → logprob: -7.369381427764893
    5. '<|end|>' → logprob: -7.744381427764893
    6. '```' → logprob: -8.36938190460205
    7. ' elif' → logprob: -8.86938190460205
    8. ')' → logprob: -8.86938190460205
    9. '.' → logprob: -8.99438190460205
    10. '
' → logprob: -10.99438190460205

Token 29: ' top' (ID: 2344)
  Prédit: ' top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' top' → logprob: -0.008831185288727283
    2. 'top' → logprob: -4.883831024169922
    3. ' ' → logprob: -6.758831024169922
    4. '0' → logprob: -11.133831024169922
    5. ' ' → logprob: -11.508831024169922
    6. '(top' → logprob: -11.883831024169922
    7. ' (' → logprob: -12.133831024169922
    8. '	top' → logprob: -12.258831024169922
    9. ' not' → logprob: -12.383831024169922
    10. ' -' → logprob: -12.758831024169922

Token 30: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6584401726722717
    2. ' ==' → logprob: -1.033440113067627
    3. ' >' → logprob: -2.408440113067627
    4. '==' → logprob: -3.783440113067627
    5. '<' → logprob: -4.658440113067627
    6. '>' → logprob: -6.158440113067627
    7. ' ' → logprob: -6.783440113067627
    8. ' <=' → logprob: -6.908440113067627
    9. ' >=' → logprob: -10.408440589904785
    10. '<=' → logprob: -10.533440589904785

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17976275086402893
    2. ' ' → logprob: -1.8047627210617065
    3. ' -' → logprob: -12.054762840270996
    4. '1' → logprob: -12.304762840270996
    5. '<|end|>' → logprob: -13.054762840270996
    6. '  ' → logprob: -13.554762840270996
    7. '-' → logprob: -13.992262840270996
    8. ' ' → logprob: -14.492262840270996
    9. '   ' → logprob: -14.742262840270996
    10. ')' → logprob: -14.867262840270996

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006367852329276502
    2. ' ' → logprob: -7.375636577606201
    3. '-' → logprob: -11.87563705444336
    4. '<|end|>' → logprob: -13.50063705444336
    5. '1' → logprob: -14.37563705444336
    6. ':' → logprob: -15.62563705444336
    7. '  ' → logprob: -15.68813705444336
    8. '   ' → logprob: -15.75063705444336
    9. ' -' → logprob: -15.93813705444336
    10. '2' → logprob: -16.31313705444336

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003015001420862973
    2. ':
' → logprob: -8.125301361083984
    3. '   ' → logprob: -12.250301361083984
    4. ' :' → logprob: -14.750301361083984
    5. '):' → logprob: -16.000301361083984
    6. ':
' → logprob: -17.250301361083984
    7. ':

' → logprob: -17.375301361083984
    8. ')' → logprob: -17.875301361083984
    9. '):
' → logprob: -18.125301361083984
    10. ':return' → logprob: -18.250301361083984

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007352970424108207
    2. '       ' → logprob: -8.12573528289795
    3. '0' → logprob: -8.25073528289795
    4. ':' → logprob: -9.62573528289795
    5. ' ' → logprob: -11.25073528289795
    6. 'print' → logprob: -11.37573528289795
    7. '1' → logprob: -11.50073528289795
    8. '4' → logprob: -11.62573528289795
    9. ' print' → logprob: -11.62573528289795
    10. '    ' → logprob: -11.75073528289795

Token 35: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7048866748809814
    2. 'print' (adapté à ' print') → logprob: -0.8298866748809814
    3. '   ' → logprob: -2.7048866748809814
    4. '	print' → logprob: -6.704886436462402
    5. ' ' → logprob: -7.204886436462402
    6. '       ' → logprob: -8.204886436462402
    7. '0' → logprob: -8.704886436462402
    8. '    ' → logprob: -8.954886436462402
    9. ' ' → logprob: -9.329886436462402
    10. '```' → logprob: -9.329886436462402

Token 36: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.180879816180095e-05
    2. '0' → logprob: -10.000051498413086
    3. '()' → logprob: -12.125051498413086
    4. ' (' → logprob: -15.000051498413086
    5. '(-' → logprob: -15.000051498413086
    6. '('' → logprob: -16.250051498413086
    7. '(
' → logprob: -16.250051498413086
    8. '((' → logprob: -17.625051498413086
    9. '("("' → logprob: -17.625051498413086
    10. '(

' → logprob: -18.125051498413086

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003112711710855365
    2. '2' → logprob: -8.625310897827148
    3. '1' → logprob: -9.125310897827148
    4. ')' → logprob: -11.375310897827148
    5. ' ' → logprob: -12.000310897827148
    6. '(' → logprob: -12.875310897827148
    7. '   ' → logprob: -13.625310897827148
    8. '-' → logprob: -14.750310897827148
    9. '```' → logprob: -15.000310897827148
    10. '3' → logprob: -16.00031089782715

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003184363478794694
    2. ')
' → logprob: -5.7531843185424805
    3. '   ' → logprob: -12.37818431854248
    4. 'else' → logprob: -13.62818431854248
    5. ' )' → logprob: -14.37818431854248
    6. ')
' → logprob: -15.62818431854248
    7. ')

' → logprob: -16.003185272216797
    8. '')' → logprob: -16.253185272216797
    9. ' else' → logprob: -16.628185272216797
    10. ':)' → logprob: -16.878185272216797

Token 39: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00028934504371136427
    2. ' else' → logprob: -8.250288963317871
    3. '<|end|>' → logprob: -11.375288963317871
    4. 'elif' → logprob: -11.500288963317871
    5. '```' → logprob: -12.875288963317871
    6. '_else' → logprob: -14.000288963317871
    7. '#else' → logprob: -14.375288963317871
    8. ')' → logprob: -14.375288963317871
    9. '	else' → logprob: -14.875288963317871
    10. 'e' → logprob: -15.125288963317871

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003389190824236721
    2. ':
' → logprob: -8.000338554382324
    3. '   ' → logprob: -12.875338554382324
    4. ' :' → logprob: -14.250338554382324
    5. ':
' → logprob: -15.625338554382324
    6. ':

' → logprob: -17.25033950805664
    7. '):' → logprob: -18.12533950805664
    8. '.' → logprob: -18.75033950805664
    9. ' :
' → logprob: -18.87533950805664
    10. '```' → logprob: -19.00033950805664

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03684978559613228
    2. '-' → logprob: -3.5368497371673584
    3. 'print' → logprob: -5.1618499755859375
    4. '(-' → logprob: -6.9118499755859375
    5. '(' → logprob: -8.286849975585938
    6. '  ' → logprob: -10.536849975585938
    7. '```' → logprob: -10.661849975585938
    8. ' -' → logprob: -11.411849975585938
    9. '	print' → logprob: -11.536849975585938
    10. '1' → logprob: -11.536849975585938

Token 42: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5763658285140991
    2. '-' → logprob: -0.8263658285140991
    3. '   ' → logprob: -7.951365947723389
    4. '(-' → logprob: -9.95136547088623
    5. ' print' → logprob: -11.70136547088623
    6. '-print' → logprob: -11.95136547088623
    7. '```' → logprob: -12.45136547088623
    8. '(' → logprob: -12.82636547088623
    9. ' -' → logprob: -13.32636547088623
    10. '(print' → logprob: -14.45136547088623

Token 43: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.023260852321982384
    2. '(' → logprob: -3.7732608318328857
    3. '-' → logprob: -11.398261070251465
    4. '(
' → logprob: -13.023261070251465
    5. '()' → logprob: -13.773261070251465
    6. '1' → logprob: -15.023261070251465
    7. '(

' → logprob: -16.02326011657715
    8. '(--' → logprob: -16.27326011657715
    9. ' (-' → logprob: -16.64826011657715
    10. '(+' → logprob: -17.02326011657715

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ')' → logprob: -14.500000953674316
    3. ' ' → logprob: -16.25
    4. '１' → logprob: -20.875
    5. '`)' → logprob: -21.0
    6. ' )' → logprob: -21.5
    7. '0' → logprob: -21.5
    8. '')' → logprob: -22.25
    9. '   ' → logprob: -22.375
    10. '(' → logprob: -22.625

Token 45: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.25
    3. ' )' → logprob: -18.0
    4. ')`' → logprob: -18.25
    5. '))' → logprob: -18.625
    6. '`)' → logprob: -20.125
    7. '')' → logprob: -20.25
    8. '）' → logprob: -21.375
    9. '```' → logprob: -21.375
    10. ')#' → logprob: -22.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 43
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 39
Précision stricte (1ère position): 41.86%
Précision adaptée (1ère position): 44.19%
Précision (top 10): 90.70%
================================================================================
