================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Tuple, Dict, Any
import sys
import heapq
import bisect

sys.setrecursionlimit(10**7)
input = sys.stdin.readline

class Task:
    __slots__ = ['id', 'attributes']
    def __init__(self, id: int, attributes: List[int]):
        self.id = id
        self.attributes = attributes

class DependencyGraph:
    def __init__(self, n: int):
        self.n = n
        self.adj: List[List[int]] = [[] for _ in range(n + 1)]
        self.in_degree: List[int] = [0] * (n + 1)

    def add_edge(self, frm: int, to: int):
        self.adj[frm].append(to)
        self.in_degree[to] += 1

class EvaluationOrder:
    def __init__(self, order: List[int]):
        self.order = order  # 1-based indices of attribute priority

    def key_func(self, task: Task) -> Tuple:
        # Return tuple for priority heap: negate values for max priority
        # Also add task.id for tie-break determinism
        return tuple(-task.attributes[i - 1] for i in self.order) + (task.id,)

class Scheduler:
    """
    Ultra sophisticated scheduler for UnixGnu15 OS,
    built with extensibility and abstraction in mind.
    """
    def __init__(self, tasks: List[Task], graph: DependencyGraph,
                 initial_eval_order: EvaluationOrder,
                 order_change_points: List[Tuple[int, EvaluationOrder]]):
        self.tasks = tasks
        self.graph = graph
        self.eval_order_changes = order_change_points
        self.eval_order = initial_eval_order

        # Index tasks by id for quick access
        self.task_map: Dict[int, Task] = {t.id: t for t in tasks}

        # Current heap and tracking structures
        self.ready_heap: List[Tuple[Any, int]] = []
        self.executed_count = 0
        self.change_iter = iter(order_change_points)
        self.next_change = next(self.change_iter, None)

    def _push_ready_task(self, task_id: int):
        task = self.task_map[task_id]
        key = self.eval_order.key_func(task)
        heapq.heappush(self.ready_heap, (key, task_id))

    def _update_ready_heap_order(self):
        # When eval_order changes, need to re-heapify
        new_heap = []
        for _, tid in self.ready_heap:
            task = self.task_map[tid]
            key = self.eval_order.key_func(task)
            new_heap.append((key, tid))
        heapq.heapify(new_heap)
        self.ready_heap = new_heap

    def _check_order_change(self):
        # If current executed count matches next change point, update order
        if self.next_change and self.executed_count == self.next_change[0]:
            self.eval_order = self.next_change[1]
            self._update_ready_heap_order()
            self.next_change = next(self.change_iter, None)

    def run(self) -> List[int]:
        # Initialize ready tasks (in_degree == 0)
        for i in range(1, self.graph.n + 1):
            if self.graph.in_degree[i] == 0:
                self._push_ready_task(i)

        execution_order: List[int] = []

        while self.ready_heap:
            self._check_order_change()
            _, tid = heapq.heappop(self.ready_heap)
            execution_order.append(tid)
            self.executed_count += 1

            for nxt in self.graph.adj[tid]:
                self.graph.in_degree[nxt] -= 1
                if self.graph.in_degree[nxt] == 0:
                    self._push_ready_task(nxt)

        return execution_order

class InputParser:
    @staticmethod
    def parse() -> Tuple[List[Task], DependencyGraph, EvaluationOrder, List[Tuple[int, EvaluationOrder]]]:
        N, K = map(int, input().split())
        tasks = []
        for i in range(1, N+1):
            attributes = list(map(int, input().split()))
            tasks.append(Task(i, attributes))

        graph = DependencyGraph(N)
        D = int(input())
        for _ in range(D):
            a, b = map(int, input().split())
            graph.add_edge(a, b)

        initial_order = list(map(int, input().split()))
        initial_eval_order = EvaluationOrder(initial_order)

        R = int(input())
        changes = []
        for _ in range(R):
            data = list(map(int, input().split()))
            m = data[0]
            order = data[1:]
            changes.append((m, EvaluationOrder(order)))

        return tasks, graph, initial_eval_order, changes

def main():
    tasks, graph, initial_eval_order, changes = InputParser.parse()
    scheduler = Scheduler(tasks, graph, initial_eval_order, changes)
    result = scheduler.run()
    print('\n'.join(map(str, result)))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.015827767550945282
    2. ' Any' → logprob: -4.515827655792236
    3. 'List' → logprob: -5.890827655792236
    4. ' Optional' → logprob: -6.640827655792236
    5. 'Any' → logprob: -8.140828132629395
    6. ' Union' → logprob: -8.140828132629395
    7. ' Generator' → logprob: -9.890828132629395
    8. ' Iterable' → logprob: -11.015828132629395
    9. 'Optional' → logprob: -11.140828132629395
    10. ' Tuple' → logprob: -11.890828132629395

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.38013091683387756
    2. 'def' → logprob: -2.0051310062408447
    3. '\n' → logprob: -3.3801310062408447
    4. '<|end|>' → logprob: -3.5051310062408447
    5. '[' → logprob: -4.005130767822266
    6. '
' → logprob: -4.005130767822266
    7. '\' → logprob: -4.130130767822266
    8. ',' → logprob: -4.130130767822266
    9. 'import' → logprob: -4.255130767822266
    10. '<|end|>' → logprob: -5.380130767822266

Token 5: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.7062650322914124
    2. 'Optional' → logprob: -0.7062650322914124
    3. 'Dict' → logprob: -5.331264972686768
    4. 'Tuple' → logprob: -5.581264972686768
    5. ' Dict' → logprob: -6.081264972686768
    6. ' Union' → logprob: -7.081264972686768
    7. ' Tuple' → logprob: -7.456264972686768
    8. 'Union' → logprob: -7.956264972686768
    9. 'Any' → logprob: -8.956265449523926
    10. 'Iterable' → logprob: -9.331265449523926

Token 6: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17107652127742767
    2. '```' → logprob: -2.546076536178589
    3. ',' → logprob: -3.796076536178589
    4. ':' → logprob: -4.29607629776001
    5. 'import' → logprob: -4.67107629776001
    6. '`' → logprob: -5.17107629776001
    7. '\' → logprob: -5.29607629776001
    8. '(' → logprob: -5.42107629776001
    9. '[' → logprob: -5.67107629776001
    10. '\n' → logprob: -5.79607629776001

Token 7: ' Dict' (ID: 55179)
  Prédit: ' Dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.1546926200389862
    2. 'Dict' → logprob: -2.1546926498413086
    3. ' Optional' → logprob: -4.654692649841309
    4. ' Union' → logprob: -4.779692649841309
    5. 'Optional' → logprob: -5.654692649841309
    6. 'Union' → logprob: -6.654692649841309
    7. 'Iterable' → logprob: -6.904692649841309
    8. 'Set' → logprob: -7.279692649841309
    9. ' Callable' → logprob: -7.279692649841309
    10. 'dict' → logprob: -7.654692649841309

Token 8: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9529421925544739
    2. '```' → logprob: -1.327942132949829
    3. '[' → logprob: -2.077942132949829
    4. ',' → logprob: -2.202942132949829
    5. '(' → logprob: -3.327942132949829
    6. '<|end|>' → logprob: -3.702942132949829
    7. ':' → logprob: -4.327942371368408
    8. 'import' → logprob: -4.952942371368408
    9. '`' → logprob: -5.202942371368408
    10. '\[' → logprob: -5.577942371368408

Token 9: ' Any' (ID: 8281)
  Prédit: 'Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Any' → logprob: -0.7973251342773438
    2. 'Set' → logprob: -1.2973251342773438
    3. 'Union' → logprob: -2.1723251342773438
    4. ' Union' → logprob: -2.6723251342773438
    5. 'Optional' → logprob: -3.2973251342773438
    6. ' Any' → logprob: -3.5473251342773438
    7. ' Optional' → logprob: -4.672325134277344
    8. ' Set' → logprob: -5.047325134277344
    9. 'Iterable' → logprob: -5.047325134277344
    10. 'Callable' → logprob: -6.422325134277344

Token 10: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1373361349105835
    2. ':' → logprob: -1.7623361349105835
    3. 'def' → logprob: -2.012336254119873
    4. '```' → logprob: -2.262336254119873
    5. '<|end|>' → logprob: -2.637336254119873
    6. '(' → logprob: -3.137336254119873
    7. 'import' → logprob: -3.512336254119873
    8. '[' → logprob: -3.512336254119873
    9. '\n' → logprob: -3.887336254119873
    10. 'a' → logprob: -4.137336254119873

Token 11: 'import' (ID: 561)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5816342234611511
    2. ',' → logprob: -1.706634283065796
    3. 'def' → logprob: -3.206634283065796
    4. ':' → logprob: -3.206634283065796
    5. 'import' → logprob: -3.331634283065796
    6. '\' → logprob: -3.581634283065796
    7. '\n' → logprob: -3.831634283065796
    8. '`' → logprob: -3.956634283065796
    9. '<|end|>' → logprob: -4.081634044647217
    10. '[' → logprob: -4.206634044647217

Token 12: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.07133091986179352
    2. ' json' → logprob: -3.571331024169922
    3. ' re' → logprob: -4.446331024169922
    4. ' typing' → logprob: -4.446331024169922
    5. ' sys' → logprob: -4.946331024169922
    6. ' requests' → logprob: -5.321331024169922
    7. ' numpy' → logprob: -6.071331024169922
    8. ' pandas' → logprob: -6.321331024169922
    9. ' collections' → logprob: -7.946331024169922
    10. 'requests' → logprob: -8.696331024169922

Token 13: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.306625247001648
    2. '```' → logprob: -1.556625247001648
    3. '\n' → logprob: -1.806625247001648
    4. '.' → logprob: -1.931625247001648
    5. '\' → logprob: -2.3066253662109375
    6. 'import' → logprob: -3.1816253662109375
    7. '<|end|>' → logprob: -4.0566253662109375
    8. ',' → logprob: -4.3066253662109375
    9. '' → logprob: -5.3066253662109375
    10. '[
' → logprob: -5.3066253662109375

Token 14: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2028608322143555
    2. '.' → logprob: -1.3278608322143555
    3. '```' → logprob: -1.8278608322143555
    4. '\n' → logprob: -2.2028608322143555
    5. '\' → logprob: -2.9528608322143555
    6. '
' → logprob: -3.2028608322143555
    7. ',' → logprob: -3.8278608322143555
    8. '' → logprob: -4.8278608322143555
    9. 'def' → logprob: -4.9528608322143555
    10. '`' → logprob: -5.2028608322143555

Token 15: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00016241880075540394
    2. 'os' → logprob: -8.875162124633789
    3. ' re' → logprob: -11.500162124633789
    4. ' io' → logprob: -12.000162124633789
    5. ' typing' → logprob: -13.000162124633789
    6. ' json' → logprob: -13.250162124633789
    7. ' math' → logprob: -13.875162124633789
    8. ' argparse' → logprob: -15.125162124633789
    9. ' pathlib' → logprob: -15.625162124633789
    10. ' traceback' → logprob: -15.750162124633789

Token 16: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -9.729906196298543e-06
    2. 'queue' → logprob: -12.500009536743164
    3. '#' → logprob: -13.250009536743164
    4. 'p' → logprob: -13.750009536743164
    5. 't' → logprob: -14.750009536743164
    6. '[' → logprob: -14.750009536743164
    7. '```' → logprob: -14.875009536743164
    8. 'u' → logprob: -15.125009536743164
    9. 's' → logprob: -15.125009536743164
    10. '_' → logprob: -15.375009536743164

Token 17: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40965428948402405
    2. '

' → logprob: -1.5346542596817017
    3. '\n' → logprob: -2.284654378890991
    4. '\' → logprob: -4.909654140472412
    5. '<|end|>' → logprob: -5.284654140472412
    6. 'def' → logprob: -6.659654140472412
    7. '```' → logprob: -6.659654140472412
    8. '' → logprob: -6.909654140472412
    9. 'newline' → logprob: -7.909654140472412
    10. '<|end|>' → logprob: -8.15965461730957

Token 18: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21506786346435547
    2. 'def' → logprob: -2.4650678634643555
    3. '

' → logprob: -3.2150678634643555
    4. '\n' → logprob: -3.5900678634643555
    5. '\' → logprob: -4.2150678634643555
    6. '```' → logprob: -4.3400678634643555
    7. 'class' → logprob: -5.4650678634643555
    8. '<|end|>' → logprob: -5.8400678634643555
    9. '' → logprob: -6.0900678634643555
    10. '.' → logprob: -7.2150678634643555

Token 19: ' bis' (ID: 7204)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.0519554540514946
    2. ' math' → logprob: -3.801955461502075
    3. ' itertools' → logprob: -3.801955461502075
    4. 'collections' → logprob: -5.676955223083496
    5. ' threading' → logprob: -6.676955223083496
    6. ' os' → logprob: -7.176955223083496
    7. ' operator' → logprob: -9.051955223083496
    8. ' re' → logprob: -9.176955223083496
    9. ' bis' → logprob: -9.301955223083496
    10. ' io' → logprob: -9.801955223083496

Token 20: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.007614674977958202
    2. 't' → logprob: -4.882614612579346
    3. 'ected' → logprob: -12.632615089416504
    4. 'ection' → logprob: -13.132615089416504
    5. 'e' → logprob: -13.882615089416504
    6. '>' → logprob: -14.132615089416504
    7. 'ec' → logprob: -14.507615089416504
    8. 'ects' → logprob: -15.257615089416504
    9. 'ectl' → logprob: -15.257615089416504
    10. 'ecta' → logprob: -15.757615089416504

Token 21: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.12231460958719254
    2. '
' → logprob: -2.247314691543579
    3. '<|end|>' → logprob: -5.747314453125
    4. '\n' → logprob: -6.372314453125
    5. 'def' → logprob: -7.122314453125
    6. '


' → logprob: -7.122314453125
    7. ' 

' → logprob: -7.872314453125
    8. 'class' → logprob: -7.872314453125
    9. 'import' → logprob: -7.872314453125
    10. '' → logprob: -7.997314453125

Token 22: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5524474382400513
    2. 'class' → logprob: -1.6774474382400513
    3. 'd' → logprob: -1.8024474382400513
    4. '
' → logprob: -3.6774473190307617
    5. '#' → logprob: -3.8024473190307617
    6. '```' → logprob: -4.302447319030762
    7. '\' → logprob: -5.177447319030762
    8. 'import' → logprob: -6.552447319030762
    9. '

' → logprob: -6.802447319030762
    10. 'c' → logprob: -7.427447319030762

Token 23: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.9054008084349334e-05
    2. ' .' → logprob: -11.500039100646973
    3. '.user' → logprob: -12.875039100646973
    4. '.stdout' → logprob: -13.000039100646973
    5. '.exit' → logprob: -13.125039100646973
    6. '.​' → logprob: -13.125039100646973
    7. '.setdefault' → logprob: -13.250039100646973
    8. '.argv' → logprob: -13.250039100646973
    9. '<|end|>' → logprob: -13.375039100646973
    10. '.readline' → logprob: -13.375039100646973

Token 24: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.5477925539016724
    2. '_limit' → logprob: -1.4227925539016724
    3. '_rec' → logprob: -2.797792434692383
    4. '_version' → logprob: -3.922792434692383
    5. '_trace' → logprob: -4.422792434692383
    6. 'limit' → logprob: -4.672792434692383
    7. '_exc' → logprob: -4.922792434692383
    8. '_depth' → logprob: -4.922792434692383
    9. '_max' → logprob: -5.172792434692383
    10. '_val' → logprob: -5.297792434692383

Token 25: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.005389806814491749
    2. 'urs' → logprob: -6.13038969039917
    3. 'ur' → logprob: -6.38038969039917
    4. 'ursive' → logprob: -6.88038969039917
    5. 'ursor' → logprob: -8.005390167236328
    6. 'urf' → logprob: -9.880390167236328
    7. 'urse' → logprob: -11.255390167236328
    8. 'ut' → logprob: -11.630390167236328
    9. '_' → logprob: -11.755390167236328
    10. 't' → logprob: -12.005390167236328

Token 26: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.07899477332830429
    2. '_limit' → logprob: -2.5789947509765625
    3. 'lim' → logprob: -9.578994750976562
    4. '_depth' → logprob: -10.953994750976562
    5. 'depth' → logprob: -12.578994750976562
    6. '_lim' → logprob: -12.703994750976562
    7. 'LIMIT' → logprob: -13.078994750976562
    8. '_LIMIT' → logprob: -13.203994750976562
    9. '.limit' → logprob: -13.453994750976562
    10. '-limit' → logprob: -13.453994750976562

Token 27: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.8889261304575484e-06
    2. '(
' → logprob: -13.875003814697266
    3. '((' → logprob: -14.125003814697266
    4. ' (' → logprob: -14.125003814697266
    5. '(

' → logprob: -14.125003814697266
    6. '("("' → logprob: -14.625003814697266
    7. '()' → logprob: -16.500003814697266
    8. '```' → logprob: -17.000003814697266
    9. '(None' → logprob: -17.250003814697266
    10. '<|end|>' → logprob: -18.000003814697266

Token 28: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014165629632771015
    2. '100' → logprob: -4.26416540145874
    3. '300' → logprob: -14.139165878295898
    4. ' ' → logprob: -14.389165878295898
    5. '500' → logprob: -14.764165878295898
    6. '200' → logprob: -15.639165878295898
    7. '1' → logprob: -15.764165878295898
    8. '999' → logprob: -16.8891658782959
    9. 'int' → logprob: -18.0141658782959
    10. '250' → logprob: -18.2641658782959

Token 29: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.1502344310283661
    2. '7' → logprob: -2.7752344608306885
    3. '0' → logprob: -3.4002344608306885
    4. '00' → logprob: -3.4002344608306885
    5. '6' → logprob: -5.275234222412109
    6. '5' → logprob: -5.775234222412109
    7. '4' → logprob: -6.400234222412109
    8. '**' → logprob: -7.650234222412109
    9. '```' → logprob: -10.40023422241211
    10. '07' → logprob: -11.27523422241211

Token 30: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.000566137779969722
    2. '9' → logprob: -7.500566005706787
    3. '8' → logprob: -11.375566482543945
    4. '6' → logprob: -13.250566482543945
    5. '**' → logprob: -20.125566482543945
    6. '```' → logprob: -21.000566482543945
    7. ' ' → logprob: -22.625566482543945
    8. '

' → logprob: -22.875566482543945
    9. '７' → logprob: -23.625566482543945
    10. '``' → logprob: -23.750566482543945

Token 31: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -15.625000953674316
    4. '))' → logprob: -17.875
    5. '),' → logprob: -18.875
    6. ')
' → logprob: -19.375
    7. ')

' → logprob: -19.375
    8. ')`' → logprob: -20.375
    9. '}' → logprob: -20.625
    10. '```' → logprob: -20.75

Token 32: 'input' (ID: 2586)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.39982870221138
    2. '
' → logprob: -1.1498286724090576
    3. 'def' → logprob: -5.024828910827637
    4. 'class' → logprob: -5.399828910827637
    5. '
' → logprob: -7.149828910827637
    6. '```' → logprob: -7.149828910827637
    7. '\n' → logprob: -9.274828910827637
    8. '


' → logprob: -10.274828910827637
    9. '\' → logprob: -10.774828910827637
    10. '' → logprob: -11.399828910827637

Token 33: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009293294278904796
    2. '<|end|>' → logprob: -8.50092887878418
    3. '()' → logprob: -8.62592887878418
    4. '```' → logprob: -9.00092887878418
    5. '=' → logprob: -9.50092887878418
    6. '("("' → logprob: -10.00092887878418
    7. ' =' → logprob: -10.12592887878418
    8. ')' → logprob: -10.37592887878418
    9. '(
' → logprob: -10.50092887878418
    10. '.' → logprob: -10.62592887878418

Token 34: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7475288510322571
    2. 'sys' → logprob: -0.7475288510322571
    3. ' sys' → logprob: -3.1225287914276123
    4. ' input' → logprob: -4.747529029846191
    5. 'raw' → logprob: -9.622529029846191
    6. '=sys' → logprob: -10.122529029846191
    7. 'lambda' → logprob: -10.622529029846191
    8. '=input' → logprob: -10.872529029846191
    9. '	sys' → logprob: -10.997529029846191
    10. 'open' → logprob: -11.372529029846191

Token 35: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00017839208885561675
    2. '.readline' → logprob: -8.875178337097168
    3. ' .' → logprob: -11.125178337097168
    4. '.stdin' → logprob: -12.250178337097168
    5. '.​' → logprob: -12.250178337097168
    6. '.)' → logprob: -12.625178337097168
    7. '().' → logprob: -13.625178337097168
    8. '.`' → logprob: -13.625178337097168
    9. '​.' → logprob: -13.750178337097168
    10. ').' → logprob: -13.750178337097168

Token 36: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0002647927321959287
    2. '.' → logprob: -9.000265121459961
    3. '.read' → logprob: -9.125265121459961
    4. 'read' → logprob: -10.625265121459961
    5. '.readlines' → logprob: -13.000265121459961
    6. '.buffer' → logprob: -13.250265121459961
    7. ' readline' → logprob: -14.250265121459961
    8. 'buffer' → logprob: -14.375265121459961
    9. '<|end|>' → logprob: -14.500265121459961
    10. '.Read' → logprob: -14.750265121459961

Token 37: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4255203604698181
    2. '

' → logprob: -1.550520420074463
    3. 'def' → logprob: -2.175520420074463
    4. 'class' → logprob: -4.800520420074463
    5. '\n' → logprob: -4.925520420074463
    6. '```' → logprob: -6.300520420074463
    7. '
' → logprob: -6.925520420074463
    8. '' → logprob: -7.050520420074463
    9. '\' → logprob: -7.425520420074463
    10. '#' → logprob: -8.425519943237305

Token 38: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1554291844367981
    2. 'def' → logprob: -2.5304291248321533
    3. '
' → logprob: -2.9054291248321533
    4. '

' → logprob: -4.780429363250732
    5. '\n' → logprob: -8.405428886413574
    6. '```' → logprob: -8.405428886413574
    7. '\' → logprob: -8.655428886413574
    8. ' class' → logprob: -8.655428886413574
    9. 'n' → logprob: -8.780428886413574
    10. '#' → logprob: -9.655428886413574

Token 39: ' Task' (ID: 10148)
  Prédit: ' Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Segment' → logprob: -0.982607364654541
    2. ' ' → logprob: -1.107607364654541
    3. ' Solution' → logprob: -2.357607364654541
    4. ' Trie' → logprob: -2.732607364654541
    5. ' Binary' → logprob: -3.732607364654541
    6. ' A' → logprob: -3.857607364654541
    7. ' My' → logprob: -3.857607364654541
    8. ' Node' → logprob: -4.232607364654541
    9. ' Solver' → logprob: -4.607607364654541
    10. ' Tre' → logprob: -4.607607364654541

Token 40: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015787787269800901
    2. '(' → logprob: -6.7515788078308105
    3. 'Scheduler' → logprob: -8.751578330993652
    4. ':**' → logprob: -9.626578330993652
    5. ' :' → logprob: -9.751578330993652
    6. '():' → logprob: -10.251578330993652
    7. ':
' → logprob: -11.126578330993652
    8. '(Task' → logprob: -11.251578330993652
    9. 's' → logprob: -12.001578330993652
    10. '):' → logprob: -12.126578330993652

Token 41: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7914518713951111
    2. '   ' → logprob: -0.9164518713951111
    3. '(' → logprob: -2.041451930999756
    4. ' ' → logprob: -4.916451930999756
    5. ' :' → logprob: -5.791451930999756
    6. ' def' → logprob: -6.416451930999756
    7. '    ' → logprob: -7.041451930999756
    8. '(object' → logprob: -7.041451930999756
    9. ':
' → logprob: -7.166451930999756
    10. '  ' → logprob: -7.416451930999756

Token 42: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.10413740575313568
    2. '   ' → logprob: -2.979137420654297
    3. 'def' → logprob: -3.104137420654297
    4. '    ' → logprob: -6.604137420654297
    5. '(' → logprob: -7.229137420654297
    6. ' ' → logprob: -7.354137420654297
    7. ':' → logprob: -9.104137420654297
    8. ' (' → logprob: -9.854137420654297
    9. '    
' → logprob: -10.104137420654297
    10. 'class' → logprob: -10.104137420654297

Token 43: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.002879057079553604
    2. 'slots' → logprob: -6.0028791427612305
    3. 'i' → logprob: -7.8778791427612305
    4. ' init' → logprob: -11.50287914276123
    5. 'in' → logprob: -12.12787914276123
    6. 'slot' → logprob: -13.00287914276123
    7. ' slots' → logprob: -13.37787914276123
    8. 'int' → logprob: -13.50287914276123
    9. '_init' → logprob: -13.75287914276123
    10. 'ini' → logprob: -14.12787914276123

Token 44: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01003879215568304
    2. '=' → logprob: -5.01003885269165
    3. '=['' → logprob: -6.01003885269165
    4. '__[' → logprob: -7.63503885269165
    5. ' =' → logprob: -9.010038375854492
    6. '___' → logprob: -9.385038375854492
    7. '=[' → logprob: -9.635038375854492
    8. '__.__' → logprob: -10.885038375854492
    9. '__('' → logprob: -11.135038375854492
    10. '__["' → logprob: -11.260038375854492

Token 45: ' =' (ID: 314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002061638282611966
    2. '=' → logprob: -6.37706184387207
    3. '__[' → logprob: -8.75206184387207
    4. '=['' → logprob: -9.00206184387207
    5. '___' → logprob: -10.25206184387207
    6. ' =' → logprob: -11.50206184387207
    7. '__["' → logprob: -11.50206184387207
    8. '__('' → logprob: -12.00206184387207
    9. '_' → logprob: -12.37706184387207
    10. '=["' → logprob: -12.50206184387207

Token 46: ' ['' (ID: 5140)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.19230055809021
    2. '['' → logprob: -1.31730055809021
    3. '['_' → logprob: -2.31730055809021
    4. ''s' → logprob: -2.44230055809021
    5. '('_' → logprob: -2.44230055809021
    6. ''title' → logprob: -2.81730055809021
    7. ''_' → logprob: -3.31730055809021
    8. '('__' → logprob: -4.067300796508789
    9. '('' → logprob: -4.317300796508789
    10. ''name' → logprob: -5.317300796508789

Token 47: 'id' (ID: 315)
  Prédit: 'priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'priority' → logprob: -0.20394378900527954
    2. 'id' → logprob: -2.4539437294006348
    3. 'time' → logprob: -3.0789437294006348
    4. 'duration' → logprob: -4.328943729400635
    5. 'start' → logprob: -5.078943729400635
    6. 'deadline' → logprob: -5.328943729400635
    7. 'name' → logprob: -5.453943729400635
    8. '_id' → logprob: -5.578943729400635
    9. '_priority' → logprob: -5.703943729400635
    10. 'cost' → logprob: -5.703943729400635

Token 48: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0018565307836979628
    2. ' ',' → logprob: -6.876856327056885
    3. '_',' → logprob: -7.376856327056885
    4. '']' → logprob: -8.876856803894043
    5. ',' → logprob: -10.876856803894043
    6. '_' → logprob: -11.251856803894043
    7. ''' → logprob: -11.376856803894043
    8. '','' → logprob: -11.626856803894043
    9. '_id' → logprob: -13.001856803894043
    10. ' ']' → logprob: -13.751856803894043

Token 49: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.19369861483573914
    2. ''' → logprob: -2.3186986446380615
    3. 'priority' → logprob: -3.0686986446380615
    4. ' priority' → logprob: -4.193698406219482
    5. ''s' → logprob: -4.568698406219482
    6. ''name' → logprob: -6.943698406219482
    7. ''description' → logprob: -7.068698406219482
    8. ''t' → logprob: -7.568698406219482
    9. ''d' → logprob: -7.818698406219482
    10. ''value' → logprob: -7.943698406219482

Token 50: 'attributes' (ID: 27253)
  Prédit: 'priority'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'priority' → logprob: -0.060831356793642044
    2. 'deadline' → logprob: -4.060831546783447
    3. 'duration' → logprob: -4.435831546783447
    4. 'time' → logprob: -4.560831546783447
    5. 'start' → logprob: -4.810831546783447
    6. 'name' → logprob: -5.810831546783447
    7. 'difficulty' → logprob: -5.935831546783447
    8. 'cost' → logprob: -6.560831546783447
    9. 'score' → logprob: -7.310831546783447
    10. 'dependencies' → logprob: -7.310831546783447

Token 51: '']
' (ID: 9756)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.3133375942707062
    2. '']' → logprob: -1.3133375644683838
    3. ''' → logprob: -10.563337326049805
    4. ',' → logprob: -10.563337326049805
    5. ']' → logprob: -11.313337326049805
    6. ' ']' → logprob: -12.563337326049805
    7. ' ',' → logprob: -13.313337326049805
    8. '_' → logprob: -13.938337326049805
    9. '_',' → logprob: -14.063337326049805
    10. '','' → logprob: -14.063337326049805

Token 52: '   ' (ID: 271)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8319885730743408
    2. ' =' → logprob: -0.8319885730743408
    3. '=' → logprob: -2.206988573074341
    4. ':' → logprob: -4.081988334655762
    5. '   ' → logprob: -6.581988334655762
    6. ' ,' → logprob: -7.331988334655762
    7. ' ' → logprob: -7.956988334655762
    8. '  ' → logprob: -9.956988334655762
    9. '<|end|>' → logprob: -10.206988334655762
    10. ' :' → logprob: -10.581988334655762

Token 53: ' def' (ID: 1056)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.41786593198776245
    2. ' =' → logprob: -1.6678659915924072
    3. '=' → logprob: -2.1678659915924072
    4. 'def' (adapté à ' def') → logprob: -4.292865753173828
    5. ' def' → logprob: -4.417865753173828
    6. '
' → logprob: -5.417865753173828
    7. ',' → logprob: -5.917865753173828
    8. ':
' → logprob: -6.542865753173828
    9. '    
' → logprob: -6.792865753173828
    10. ':def' → logprob: -7.542865753173828

Token 54: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.14047904312610626
    2. ' init' → logprob: -2.64047908782959
    3. ' ' → logprob: -2.89047908782959
    4. ' ' → logprob: -7.01547908782959
    5. ' _' → logprob: -7.14047908782959
    6. ' ‌' → logprob: -7.39047908782959
    7. ' def' → logprob: -7.64047908782959
    8. '  ' → logprob: -7.64047908782959
    9. 'init' → logprob: -8.89047908782959
    10. '_' → logprob: -9.14047908782959

Token 55: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00015860427811276168
    2. 'slots' → logprob: -8.750158309936523
    3. 'slot' → logprob: -16.875158309936523
    4. 'ini' → logprob: -16.875158309936523
    5. '_init' → logprob: -17.750158309936523
    6. ' init' → logprob: -17.750158309936523
    7. 'new' → logprob: -19.000158309936523
    8. '_slots' → logprob: -19.250158309936523
    9. 'inite' → logprob: -19.375158309936523
    10. 'in' → logprob: -20.000158309936523

Token 56: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07479552179574966
    2. '__' → logprob: -3.3247954845428467
    3. '(' → logprob: -3.5747954845428467
    4. ' (' → logprob: -5.699795722961426
    5. '(self' → logprob: -5.824795722961426
    6. '<|end|>' → logprob: -7.574795722961426
    7. '__((' → logprob: -7.824795722961426
    8. '__(
' → logprob: -7.949795722961426
    9. '__('' → logprob: -8.699795722961426
    10. '__(*' → logprob: -9.199795722961426

Token 57: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.2723104848410003e-05
    2. ' self' → logprob: -10.750022888183594
    3. 'id' → logprob: -14.000022888183594
    4. '(self' → logprob: -16.125022888183594
    5. '	self' → logprob: -16.375022888183594
    6. ')' → logprob: -17.125022888183594
    7. 's' → logprob: -17.375022888183594
    8. '_self' → logprob: -17.375022888183594
    9. '
' → logprob: -18.125022888183594
    10. ',self' → logprob: -18.375022888183594

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11335121840238571
    2. '(' → logprob: -2.9883511066436768
    3. ' ,' → logprob: -3.3633511066436768
    4. ' (' → logprob: -4.613351345062256
    5. '(self' → logprob: -5.363351345062256
    6. ')' → logprob: -6.113351345062256
    7. '<|end|>' → logprob: -6.113351345062256
    8. 'self' → logprob: -6.738351345062256
    9. ' )' → logprob: -7.488351345062256
    10. ' ' → logprob: -8.113350868225098

Token 59: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.7480432987213135
    2. 'self' → logprob: -1.3730432987213135
    3. ' id' → logprob: -1.8730432987213135
    4. ' self' → logprob: -2.1230432987213135
    5. '_id' → logprob: -11.248043060302734
    6. ' ' → logprob: -11.248043060302734
    7. ' task' → logprob: -11.998043060302734
    8. '	id' → logprob: -12.498043060302734
    9. 'task' → logprob: -12.623043060302734
    10. 'idf' → logprob: -13.248043060302734

Token 60: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002204974414780736
    2. ':' → logprob: -6.627204895019531
    3. ' ,' → logprob: -7.127204895019531
    4. '):' → logprob: -10.002204895019531
    5. ')' → logprob: -10.877204895019531
    6. '<|end|>' → logprob: -12.877204895019531
    7. ':int' → logprob: -13.002204895019531
    8. ' :' → logprob: -13.502204895019531
    9. '‌,' → logprob: -13.877204895019531
    10. ',
' → logprob: -13.877204895019531

Token 61: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6932042241096497
    2. ' int' → logprob: -0.6932042241096497
    3. ' ' → logprob: -10.443203926086426
    4. '<|end|>' → logprob: -11.943203926086426
    5. ':int' → logprob: -12.193203926086426
    6. '[int' → logprob: -12.568203926086426
    7. '	int' → logprob: -12.943203926086426
    8. '=int' → logprob: -12.943203926086426
    9. ' str' → logprob: -12.943203926086426
    10. '<int' → logprob: -13.693203926086426

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.771655115589965e-05
    2. ' ,' → logprob: -11.000018119812012
    3. ')' → logprob: -15.000018119812012
    4. '‌,' → logprob: -15.250018119812012
    5. ',int' → logprob: -16.000017166137695
    6. '):' → logprob: -17.000017166137695
    7. ',
' → logprob: -17.250017166137695
    8. ' ' → logprob: -18.000017166137695
    9. ',)' → logprob: -18.125017166137695
    10. '<|end|>' → logprob: -18.750017166137695

Token 63: ' attributes' (ID: 15187)
  Prédit: ' attributes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' attributes' → logprob: -0.0028290078043937683
    2. 'attributes' → logprob: -5.877829074859619
    3. ' ' → logprob: -11.502828598022461
    4. ' attrs' → logprob: -12.377828598022461
    5. ' atributos' → logprob: -12.752828598022461
    6. ' ' → logprob: -13.252828598022461
    7. ' attribute' → logprob: -13.252828598022461
    8. ' a' → logprob: -13.752828598022461
    9. ' attr' → logprob: -14.252828598022461
    10. 'Attributes' → logprob: -14.752828598022461

Token 64: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04983331635594368
    2. '):' → logprob: -3.049833297729492
    3. ',' → logprob: -7.424833297729492
    4. ')' → logprob: -7.674833297729492
    5. ' ):' → logprob: -9.549833297729492
    6. ' :' → logprob: -9.674833297729492
    7. ']:' → logprob: -10.924833297729492
    8. ':list' → logprob: -11.174833297729492
    9. '}:' → logprob: -12.299833297729492
    10. ''):' → logprob: -13.174833297729492

Token 65: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.18220333755016327
    2. 'List' → logprob: -1.8072032928466797
    3. 'Dict' → logprob: -6.43220329284668
    4. ' Dict' → logprob: -7.43220329284668
    5. ' dict' → logprob: -9.18220329284668
    6. ' Any' → logprob: -9.93220329284668
    7. 'Any' → logprob: -10.05720329284668
    8. ' Tuple' → logprob: -10.80720329284668
    9. 'dict' → logprob: -11.05720329284668
    10. ' ' → logprob: -11.55720329284668

Token 66: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.004207324702292681
    2. '[Any' → logprob: -6.004207134246826
    3. '[str' → logprob: -6.879207134246826
    4. '[' → logprob: -7.379207134246826
    5. ')' → logprob: -10.504207611083984
    6. '<int' → logprob: -11.129207611083984
    7. '<|end|>' → logprob: -11.254207611083984
    8. ' ' → logprob: -12.254207611083984
    9. '<|end|>' → logprob: -12.254207611083984
    10. '[List' → logprob: -12.379207611083984

Token 67: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.18579982221126556
    2. ']' → logprob: -2.4357998371124268
    3. '])' → logprob: -2.6857998371124268
    4. ']:' → logprob: -5.185799598693848
    5. '):' → logprob: -5.560799598693848
    6. '],' → logprob: -5.935799598693848
    7. ')' → logprob: -6.685799598693848
    8. ',' → logprob: -8.435799598693848
    9. ']):
' → logprob: -8.935799598693848
    10. ']=' → logprob: -9.935799598693848

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017284706234931946
    2. ')' → logprob: -4.392284870147705
    3. '<|end|>' → logprob: -6.267284870147705
    4. ' ' → logprob: -7.142284870147705
    5. '   ' → logprob: -7.392284870147705
    6. '    ' → logprob: -7.892284870147705
    7. ',' → logprob: -8.142284393310547
    8. ' )' → logprob: -8.642284393310547
    9. '      ' → logprob: -8.642284393310547
    10. '        ' → logprob: -8.892284393310547

Token 69: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5796790719032288
    2. ' self' → logprob: -0.8296790719032288
    3. '       ' → logprob: -5.704679012298584
    4. ' ' → logprob: -8.329679489135742
    5. '	self' → logprob: -9.454679489135742
    6. ' ' → logprob: -9.829679489135742
    7. '        ' → logprob: -11.079679489135742
    8. '   ' → logprob: -11.704679489135742
    9. '    ' → logprob: -13.329679489135742
    10. '_self' → logprob: -13.829679489135742

Token 70: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -0.061990320682525635
    2. '.' → logprob: -2.811990261077881
    3. ' .' → logprob: -10.936990737915039
    4. '.user' → logprob: -13.561990737915039
    5. ' ' → logprob: -14.061990737915039
    6. 'id' → logprob: -14.311990737915039
    7. '	id' → logprob: -14.936990737915039
    8. ' id' → logprob: -15.561990737915039
    9. '‌.' → logprob: -15.811990737915039
    10. '.ids' → logprob: -16.06199073791504

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043620869517326355
    2. '=' → logprob: -3.1686208248138428
    3. ' ' → logprob: -7.418621063232422
    4. ',' → logprob: -12.043621063232422
    5. ')' → logprob: -12.918621063232422
    6. ' =)' → logprob: -13.043621063232422
    7. '<|end|>' → logprob: -13.168621063232422
    8. '    ' → logprob: -13.168621063232422
    9. ' ,' → logprob: -13.293621063232422
    10. '  ' → logprob: -13.418621063232422

Token 72: ' id' (ID: 1211)
  Prédit: ' id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' id' → logprob: -0.062019217759370804
    2. 'id' → logprob: -2.812019109725952
    3. ' ' → logprob: -10.062019348144531
    4. ' ' → logprob: -11.687019348144531
    5. '	id' → logprob: -15.312019348144531
    6. '_id' → logprob: -16.81201934814453
    7. '(id' → logprob: -16.93701934814453
    8. '0' → logprob: -17.18701934814453
    9. '=id' → logprob: -17.18701934814453
    10. '?id' → logprob: -17.81201934814453

Token 73: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1304493099451065
    2. '<|end|>' → logprob: -2.5054492950439453
    3. '
' → logprob: -3.5054492950439453
    4. '        
' → logprob: -6.130449295043945
    5. '        ' → logprob: -6.255449295043945
    6. ' 
' → logprob: -6.505449295043945
    7. ' ' → logprob: -6.630449295043945
    8. '<|end|>' → logprob: -6.755449295043945
    9. ',' → logprob: -7.255449295043945
    10. '  
' → logprob: -7.255449295043945

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43955889344215393
    2. '<|end|>' → logprob: -1.0645588636398315
    3. '
' → logprob: -5.314558982849121
    4. '        
' → logprob: -5.689558982849121
    5. '<|end|>' → logprob: -7.064558982849121
    6. '        ' → logprob: -7.814558982849121
    7. ' 
' → logprob: -7.814558982849121
    8. '  
' → logprob: -8.689558982849121
    9. ' ' → logprob: -8.939558982849121
    10. ',' → logprob: -9.064558982849121

Token 75: ' self' (ID: 1051)
  Prédit: 'attributes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attributes' → logprob: -0.11689438670873642
    2. 'self' (adapté à ' self') → logprob: -2.366894483566284
    3. ' attributes' → logprob: -4.366894245147705
    4. ' self' → logprob: -5.616894245147705
    5. '       ' → logprob: -8.491894721984863
    6. '   ' → logprob: -11.491894721984863
    7. '.attributes' → logprob: -12.616894721984863
    8. ' ' → logprob: -13.491894721984863
    9. '_attributes' → logprob: -14.366894721984863
    10. 'Attributes' → logprob: -14.491894721984863

Token 76: '.attributes' (ID: 54514)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5772262811660767
    2. '.attributes' → logprob: -0.8272262811660767
    3. 'attributes' → logprob: -6.702226161956787
    4. ' .' → logprob: -10.827226638793945
    5. ' attributes' → logprob: -11.452226638793945
    6. '.attribute' → logprob: -12.077226638793945
    7. '.
' → logprob: -12.202226638793945
    8. '.attrs' → logprob: -12.452226638793945
    9. '.Attributes' → logprob: -12.702226638793945
    10. '.attr' → logprob: -13.202226638793945

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25206565856933594
    2. '=' → logprob: -1.502065658569336
    3. '[:]' → logprob: -9.502065658569336
    4. '[' → logprob: -10.752065658569336
    5. ' ' → logprob: -10.877065658569336
    6. '.append' → logprob: -11.877065658569336
    7. '.extend' → logprob: -12.252065658569336
    8. ')' → logprob: -12.627065658569336
    9. '.' → logprob: -13.127065658569336
    10. ']' → logprob: -14.252065658569336

Token 78: ' attributes' (ID: 15187)
  Prédit: 'attributes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attributes' → logprob: -0.2014189064502716
    2. ' attributes' → logprob: -1.7014188766479492
    3. 'attribute' → logprob: -12.82641887664795
    4. '(attributes' → logprob: -13.20141887664795
    5. ' atributos' → logprob: -15.07641887664795
    6. ' attribute' → logprob: -15.32641887664795
    7. '.attributes' → logprob: -15.45141887664795
    8. ' ' → logprob: -16.326419830322266
    9. '_attributes' → logprob: -16.826419830322266
    10. 'attr' → logprob: -17.076419830322266

Token 79: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10667912662029266
    2. '   ' → logprob: -2.7316792011260986
    3. '<|end|>' → logprob: -3.7316792011260986
    4. '    
' → logprob: -5.3566789627075195
    5. 'def' → logprob: -5.7316789627075195
    6. '\n' → logprob: -6.6066789627075195
    7. '<|end|>' → logprob: -7.3566789627075195
    8. ' def' → logprob: -7.3566789627075195
    9. '  
' → logprob: -7.9816789627075195
    10. ' 
' → logprob: -7.9816789627075195

Token 80: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08370240777730942
    2. '   ' → logprob: -2.958702325820923
    3. 'def' → logprob: -4.208702564239502
    4. '    
' → logprob: -5.208702564239502
    5. '<|end|>' → logprob: -5.208702564239502
    6. '<|end|>' → logprob: -7.208702564239502
    7. '\n' → logprob: -7.583702564239502
    8. ' def' → logprob: -7.583702564239502
    9. '

' → logprob: -8.583702087402344
    10. ' 
' → logprob: -9.208702087402344

Token 81: ' Dependency' (ID: 73162)
  Prédit: ' Task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Task' → logprob: -0.3620561361312866
    2. ' Scheduler' → logprob: -1.2370561361312866
    3. ' Solution' → logprob: -4.987056255340576
    4. ' Priority' → logprob: -5.612056255340576
    5. ' Solver' → logprob: -7.112056255340576
    6. ' Heap' → logprob: -7.362056255340576
    7. ' Processor' → logprob: -7.487056255340576
    8. ' Worker' → logprob: -8.237055778503418
    9. 'Scheduler' → logprob: -9.112055778503418
    10. ' Manager' → logprob: -9.112055778503418

Token 82: 'Graph' (ID: 9922)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012602333445101976
    2. '(' → logprob: -7.501260280609131
    3. 'Manager' → logprob: -8.376259803771973
    4. '):' → logprob: -8.876259803771973
    5. '():' → logprob: -9.126259803771973
    6. ':
' → logprob: -9.501259803771973
    7. '(Task' → logprob: -10.251259803771973
    8. '>:' → logprob: -10.376259803771973
    9. ':**' → logprob: -11.626259803771973
    10. 's' → logprob: -11.876259803771973

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.9040898880339228e-05
    2. '():' → logprob: -11.875028610229492
    3. ' :' → logprob: -12.000028610229492
    4. ':
' → logprob: -12.125028610229492
    5. '):' → logprob: -12.750028610229492
    6. '<|end|>' → logprob: -13.250028610229492
    7. ':**' → logprob: -13.625028610229492
    8. '(' → logprob: -13.750028610229492
    9. '>:' → logprob: -13.750028610229492
    10. '(object' → logprob: -13.875028610229492

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01581990346312523
    2. ':' → logprob: -4.515820026397705
    3. ' def' → logprob: -6.140820026397705
    4. 'def' → logprob: -6.890820026397705
    5. ':
' → logprob: -7.265820026397705
    6. '    
' → logprob: -7.390820026397705
    7. '	def' → logprob: -9.390819549560547
    8. '<|end|>' → logprob: -10.015819549560547
    9. ':def' → logprob: -10.515819549560547
    10. '```' → logprob: -10.765819549560547

Token 85: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4818296730518341
    2. ' def' → logprob: -1.2318296432495117
    3. 'def' (adapté à ' def') → logprob: -2.4818296432495117
    4. ':' → logprob: -5.231829643249512
    5. ':
' → logprob: -7.106829643249512
    6. '    
' → logprob: -8.106829643249512
    7. ' 
' → logprob: -9.231829643249512
    8. ' ' → logprob: -9.606829643249512
    9. ':def' → logprob: -9.606829643249512
    10. '	def' → logprob: -9.731829643249512

Token 86: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4850830137729645
    2. ' init' → logprob: -1.360082983970642
    3. ' ' → logprob: -2.6100831031799316
    4. 'init' → logprob: -3.1100831031799316
    5. '_init' → logprob: -4.985083103179932
    6. ' def' → logprob: -6.860083103179932
    7. ' ' → logprob: -7.360083103179932
    8. ' _' → logprob: -7.735083103179932
    9. ' `' → logprob: -8.360082626342773
    10. ' ```' → logprob: -9.485082626342773

Token 87: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0006886058254167438
    2. 'it' → logprob: -8.125688552856445
    3. 'in' → logprob: -8.625688552856445
    4. 'i' → logprob: -9.500688552856445
    5. 'ini' → logprob: -10.125688552856445
    6. 'nit' → logprob: -10.125688552856445
    7. '```' → logprob: -10.625688552856445
    8. 'int' → logprob: -11.000688552856445
    9. '   ' → logprob: -12.250688552856445
    10. '
' → logprob: -13.125688552856445

Token 88: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.5428351759910583
    2. '(self' → logprob: -1.0428352355957031
    3. '(' → logprob: -2.792835235595703
    4. ')(' → logprob: -5.667835235595703
    5. ' (' → logprob: -6.917835235595703
    6. '__(
' → logprob: -8.792835235595703
    7. '__' → logprob: -9.292835235595703
    8. '_(' → logprob: -9.292835235595703
    9. '<>(' → logprob: -9.417835235595703
    10. '```' → logprob: -9.542835235595703

Token 89: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000543857691809535
    2. ' self' → logprob: -8.000543594360352
    3. ')' → logprob: -8.500543594360352
    4. '   ' → logprob: -13.750543594360352
    5. '
' → logprob: -13.750543594360352
    6. ' ' → logprob: -13.875543594360352
    7. '):
' → logprob: -14.875543594360352
    8. '  ' → logprob: -15.375543594360352
    9. '(self' → logprob: -15.375543594360352
    10. ')(' → logprob: -15.375543594360352

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22789868712425232
    2. '):' → logprob: -1.8528987169265747
    3. ' ,' → logprob: -3.602898597717285
    4. ' ):' → logprob: -4.102898597717285
    5. ')' → logprob: -6.602898597717285
    6. 'self' → logprob: -6.977898597717285
    7. ' )' → logprob: -8.477898597717285
    8. ' ' → logprob: -8.602898597717285
    9. ':' → logprob: -8.852898597717285
    10. '):
' → logprob: -9.477898597717285

Token 91: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2672930359840393
    2. ' self' → logprob: -1.6422929763793945
    3. 'n' → logprob: -3.8922929763793945
    4. ' n' → logprob: -4.6422929763793945
    5. ')' → logprob: -5.5172929763793945
    6. '):
' → logprob: -6.2672929763793945
    7. 'num' → logprob: -6.7672929763793945
    8. '):' → logprob: -7.2672929763793945
    9. 'tasks' → logprob: -7.3922929763793945
    10. ' num' → logprob: -7.6422929763793945

Token 92: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11846263706684113
    2. ',' → logprob: -2.243462562561035
    3. '):' → logprob: -5.243462562561035
    4. ':int' → logprob: -8.368462562561035
    5. ')' → logprob: -9.868462562561035
    6. ' ,' → logprob: -10.243462562561035
    7. ' ):' → logprob: -11.493462562561035
    8. ' :' → logprob: -11.993462562561035
    9. ':,' → logprob: -13.118462562561035
    10. ',int' → logprob: -13.743462562561035

Token 93: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3141603469848633
    2. ' int' → logprob: -1.3141603469848633
    3. ')' → logprob: -7.189160346984863
    4. ' )' → logprob: -9.689160346984863
    5. ' ' → logprob: -10.814160346984863
    6. ':int' → logprob: -10.814160346984863
    7. '):
' → logprob: -11.564160346984863
    8. '=int' → logprob: -12.064160346984863
    9. ']int' → logprob: -12.314160346984863
    10. '[int' → logprob: -12.564160346984863

Token 94: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25429537892341614
    2. ',' → logprob: -1.5042953491210938
    3. ')' → logprob: -6.379295349121094
    4. ' ):' → logprob: -7.379295349121094
    5. ' ,' → logprob: -11.004295349121094
    6. '):
' → logprob: -11.379295349121094
    7. ':' → logprob: -11.879295349121094
    8. ' )' → logprob: -12.379295349121094
    9. '):
' → logprob: -13.629295349121094
    10. '),' → logprob: -14.254295349121094

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004048602189868689
    2. '   ' → logprob: -6.004048824310303
    3. ' self' → logprob: -7.754048824310303
    4. ' ' → logprob: -8.129048347473145
    5. 'self' → logprob: -8.254048347473145
    6. ',' → logprob: -8.379048347473145
    7. '	   ' → logprob: -9.504048347473145
    8. '	' → logprob: -9.879048347473145
    9. 'n' → logprob: -10.379048347473145
    10. '<|end|>' → logprob: -10.379048347473145

Token 96: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.033745743334293365
    2. ' self' → logprob: -3.533745765686035
    3. '       ' → logprob: -5.533745765686035
    4. '   ' → logprob: -10.658745765686035
    5. '	self' → logprob: -11.408745765686035
    6. '(self' → logprob: -14.033745765686035
    7. ' ' → logprob: -15.283745765686035
    8. '[self' → logprob: -15.283745765686035
    9. ',self' → logprob: -16.65874481201172
    10. '           ' → logprob: -17.15874481201172

Token 97: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1347576528787613
    2. '.id' → logprob: -2.8847577571868896
    3. '.n' → logprob: -2.8847577571868896
    4. ' .' → logprob: -5.3847575187683105
    5. '.ids' → logprob: -5.6347575187683105
    6. ' =' → logprob: -7.0097575187683105
    7. '.nodes' → logprob: -7.1347575187683105
    8. '.user' → logprob: -7.7597575187683105
    9. 'id' → logprob: -7.8847575187683105
    10. '.tasks' → logprob: -7.8847575187683105

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14355432987213135
    2. '=' → logprob: -2.018554210662842
    3. ' ' → logprob: -7.518554210662842
    4. ',' → logprob: -9.1435546875
    5. ')' → logprob: -9.3935546875
    6. '<|end|>' → logprob: -9.7685546875
    7. '=int' → logprob: -10.5185546875
    8. '  ' → logprob: -11.1435546875
    9. ':' → logprob: -11.3935546875
    10. '   ' → logprob: -11.5185546875

Token 99: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03804241120815277
    2. 'n' → logprob: -3.2880423069000244
    3. '	n' → logprob: -14.163042068481445
    4. ' ' → logprob: -15.538042068481445
    5. ' ' → logprob: -17.788042068481445
    6. ' [' → logprob: -18.788042068481445
    7. ' н' → logprob: -18.913042068481445
    8. '_n' → logprob: -19.413042068481445
    9. ')n' → logprob: -19.413042068481445
    10. '    ' → logprob: -19.538042068481445

Token 100: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0342637300491333
    2. '       ' → logprob: -1.1592637300491333
    3. 'self' → logprob: -1.1592637300491333
    4. ' self' → logprob: -4.284263610839844
    5. '   ' → logprob: -7.034263610839844
    6. ' ' → logprob: -7.409263610839844
    7. ',' → logprob: -7.784263610839844
    8. '<|end|>' → logprob: -7.784263610839844
    9. '
' → logprob: -8.284263610839844
    10. '  
' → logprob: -8.534263610839844

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10149572789669037
    2. 'self' → logprob: -2.9764957427978516
    3. '
' → logprob: -3.9764957427978516
    4. ' ' → logprob: -4.726495742797852
    5. ' self' → logprob: -4.976495742797852
    6. '   ' → logprob: -5.851495742797852
    7. '  
' → logprob: -6.101495742797852
    8. '<|end|>' → logprob: -6.351495742797852
    9. '        
' → logprob: -6.476495742797852
    10. ',' → logprob: -7.226495742797852

Token 102: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.023575391620397568
    2. ' self' → logprob: -3.7735753059387207
    3. '       ' → logprob: -8.023575782775879
    4. '
' → logprob: -14.148575782775879
    5. '   ' → logprob: -14.523575782775879
    6. '[self' → logprob: -14.773575782775879
    7. '	self' → logprob: -15.398575782775879
    8. '        
' → logprob: -15.648575782775879
    9. '           ' → logprob: -16.523574829101562
    10. ' 
' → logprob: -17.023574829101562

Token 103: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.80903559923172
    2. '._' → logprob: -1.0590355396270752
    3. '.graph' → logprob: -2.809035539627075
    4. '_ad' → logprob: -3.184035539627075
    5. '_adj' → logprob: -4.184035778045654
    6. 'adj' → logprob: -4.559035778045654
    7. '.tasks' → logprob: -4.559035778045654
    8. ' .' → logprob: -4.684035778045654
    9. '_graph' → logprob: -4.684035778045654
    10. ' =' → logprob: -4.809035778045654

Token 104: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.612634362885728e-05
    2. 'jac' → logprob: -9.500076293945312
    3. 'js' → logprob: -13.875076293945312
    4. 'jc' → logprob: -16.125076293945312
    5. 'ja' → logprob: -16.375076293945312
    6. '[j' → logprob: -17.500076293945312
    7. 'jl' → logprob: -18.125076293945312
    8. ' j' → logprob: -19.250076293945312
    9. 'jf' → logprob: -19.375076293945312
    10. '_j' → logprob: -19.750076293945312

Token 105: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1316794604063034
    2. 'acency' → logprob: -2.3816795349121094
    3. ' =' → logprob: -3.5066795349121094
    4. '_list' → logprob: -7.131679534912109
    5. 'list' → logprob: -9.50667953491211
    6. 'acent' → logprob: -10.00667953491211
    7. 'List' → logprob: -10.38167953491211
    8. '=[]' → logprob: -11.00667953491211
    9. 'ac' → logprob: -11.13167953491211
    10. ':' → logprob: -13.63167953491211

Token 106: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.08213697373867035
    2. '[List' → logprob: -2.832136869430542
    3. 'Dict' → logprob: -4.082137107849121
    4. ' List' → logprob: -5.832137107849121
    5. '[' → logprob: -9.457137107849121
    6. ' Dict' → logprob: -9.957137107849121
    7. ' [[]' → logprob: -10.457137107849121
    8. ' =' → logprob: -11.957137107849121
    9. '=' → logprob: -13.582137107849121
    10. '	List' → logprob: -13.832137107849121

Token 107: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.0013736842665821314
    2. '[' → logprob: -6.626373767852783
    3. '=' → logprob: -10.251373291015625
    4. ' =' → logprob: -12.376373291015625
    5. '<List' → logprob: -13.626373291015625
    6. '(List' → logprob: -13.626373291015625
    7. '[list' → logprob: -13.751373291015625
    8. '   ' → logprob: -14.001373291015625
    9. '[
' → logprob: -14.126373291015625
    10. 'List' → logprob: -14.126373291015625

Token 108: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -8.220573363360018e-05
    2. 'int' → logprob: -9.625082015991211
    3. '[' → logprob: -11.125082015991211
    4. '<int' → logprob: -14.500082015991211
    5. ']int' → logprob: -14.500082015991211
    6. '[Int' → logprob: -15.625082015991211
    7. '(int' → logprob: -16.50008201599121
    8. '=int' → logprob: -17.12508201599121
    9. '```' → logprob: -17.12508201599121
    10. '	int' → logprob: -17.75008201599121

Token 109: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -4.453737710718997e-05
    2. ']]=' → logprob: -10.125044822692871
    3. ']' → logprob: -13.000044822692871
    4. ' ]]' → logprob: -14.000044822692871
    5. '']]' → logprob: -14.250044822692871
    6. '"]]' → logprob: -15.500044822692871
    7. ']]]' → logprob: -16.125043869018555
    8. ']]

' → logprob: -16.375043869018555
    9. ')]' → logprob: -16.375043869018555
    10. ']]
' → logprob: -16.750043869018555

Token 110: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931700706481934
    2. ' =' → logprob: -0.6931700706481934
    3. ' ' → logprob: -10.818170547485352
    4. '=[]' → logprob: -13.693170547485352
    5. ']' → logprob: -13.943170547485352
    6. ')' → logprob: -14.443170547485352
    7. ' =[' → logprob: -16.06817054748535
    8. '=[' → logprob: -16.81817054748535
    9. '   ' → logprob: -16.81817054748535
    10. '[' → logprob: -17.31817054748535

Token 111: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023262597620487213
    2. ' [[]' → logprob: -3.7732625007629395
    3. '[]' → logprob: -11.023262977600098
    4. ' [' → logprob: -14.773262977600098
    5. '   ' → logprob: -15.273262977600098
    6. ' ' → logprob: -16.02326202392578
    7. '[:]' → logprob: -16.77326202392578
    8. '[[' → logprob: -17.02326202392578
    9. ' []' → logprob: -18.64826202392578
    10. '[i' → logprob: -18.64826202392578

Token 112: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06200947239995003
    2. 'for' → logprob: -2.812009572982788
    3. ' ' → logprob: -10.312009811401367
    4. ']' → logprob: -11.937009811401367
    5. '	for' → logprob: -13.937009811401367
    6. ')' → logprob: -14.937009811401367
    7. 'f' → logprob: -15.312009811401367
    8. '   ' → logprob: -15.312009811401367
    9. '  ' → logprob: -16.562009811401367
    10. '()' → logprob: -16.687009811401367

Token 113: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5463319420814514
    2. ' _' → logprob: -0.9213319420814514
    3. ' range' → logprob: -3.9213318824768066
    4. 'range' → logprob: -6.421331882476807
    5. '_range' → logprob: -6.921331882476807
    6. ' ' → logprob: -8.046332359313965
    7. ' i' → logprob: -9.296332359313965
    8. '(range' → logprob: -10.046332359313965
    9. '_i' → logprob: -10.796332359313965
    10. ' in' → logprob: -11.171332359313965

Token 114: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0063208662904798985
    2. 'in' → logprob: -5.631320953369141
    3. ' range' → logprob: -6.756320953369141
    4. '(range' → logprob: -7.006320953369141
    5. ' in' → logprob: -7.631320953369141
    6. 'ange' → logprob: -8.88132095336914
    7. '.range' → logprob: -11.63132095336914
    8. 'ran' → logprob: -12.88132095336914
    9. 'raph' → logprob: -13.38132095336914
    10. 'rang' → logprob: -13.63132095336914

Token 115: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815146580338478
    2. ' range' → logprob: -4.01815128326416
    3. '(range' → logprob: -13.89315128326416
    4. '   ' → logprob: -15.39315128326416
    5. '	range' → logprob: -16.018152236938477
    6. ' ' → logprob: -16.393152236938477
    7. 'rang' → logprob: -16.768152236938477
    8. 'ran' → logprob: -17.393152236938477
    9. 'r' → logprob: -17.643152236938477
    10. ']' → logprob: -18.268152236938477

Token 116: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -12.125007629394531
    3. '(self' → logprob: -13.250007629394531
    4. ' (' → logprob: -16.25000762939453
    5. '](' → logprob: -16.50000762939453
    6. 'n' → logprob: -16.62500762939453
    7. '(range' → logprob: -16.62500762939453
    8. '((' → logprob: -17.12500762939453
    9. ')n' → logprob: -17.12500762939453
    10. ']' → logprob: -17.75000762939453

Token 117: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005595852271653712
    2. ']' → logprob: -7.5005598068237305
    3. ')' → logprob: -13.12555980682373
    4. '])' → logprob: -13.37555980682373
    5. ')]
' → logprob: -13.75055980682373
    6. ' ]' → logprob: -14.50055980682373
    7. ']]' → logprob: -15.00055980682373
    8. '])]' → logprob: -15.12555980682373
    9. ']
' → logprob: -15.37555980682373
    10. ')],' → logprob: -15.87555980682373

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009759158827364445
    2. ' ' → logprob: -4.634758949279785
    3. '   ' → logprob: -14.134758949279785
    4. '2' → logprob: -14.134758949279785
    5. '0' → logprob: -14.634758949279785
    6. ')' → logprob: -14.634758949279785
    7. ' )' → logprob: -15.384758949279785
    8. '```' → logprob: -16.0097599029541
    9. '  ' → logprob: -16.1347599029541
    10. ']' → logprob: -16.9472599029541

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '0' → logprob: -15.500003814697266
    4. '   ' → logprob: -17.750003814697266
    5. '```' → logprob: -18.375003814697266
    6. '2' → logprob: -18.875003814697266
    7. '
' → logprob: -19.875003814697266
    8. '１' → logprob: -20.000003814697266
    9. '  ' → logprob: -20.250003814697266
    10. '

' → logprob: -20.500003814697266

Token 120: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5764382481575012
    2. ')]' → logprob: -0.8264382481575012
    3. '])' → logprob: -7.9514384269714355
    4. ')' → logprob: -9.076437950134277
    5. ']
' → logprob: -11.451437950134277
    6. '])]' → logprob: -11.951437950134277
    7. ' ]' → logprob: -12.076437950134277
    8. ']}' → logprob: -12.951437950134277
    9. ']]' → logprob: -13.576437950134277
    10. '()]' → logprob: -13.951437950134277

Token 121: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44163453578948975
    2. '<|end|>' → logprob: -1.4416345357894897
    3. '   ' → logprob: -2.3166346549987793
    4. '       ' → logprob: -4.566634654998779
    5. 'self' → logprob: -5.441634654998779
    6. '    
' → logprob: -6.316634654998779
    7. ' ' → logprob: -6.441634654998779
    8. ',' → logprob: -6.941634654998779
    9. '  
' → logprob: -7.066634654998779
    10. ' self' → logprob: -7.566634654998779

Token 122: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00210208329372108
    2. ' self' → logprob: -6.752101898193359
    3. '       ' → logprob: -7.127101898193359
    4. '   ' → logprob: -9.12710189819336
    5. '	self' → logprob: -11.62710189819336
    6. '
' → logprob: -12.50210189819336
    7. ' ' → logprob: -13.25210189819336
    8. 'def' → logprob: -14.00210189819336
    9. '[self' → logprob: -14.37710189819336
    10. '  ' → logprob: -14.50210189819336

Token 123: '.in' (ID: 2250)
  Prédit: '.ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ind' → logprob: -0.20659343898296356
    2. '.in' → logprob: -1.70659339427948
    3. 'ind' → logprob: -6.8315935134887695
    4. '.' → logprob: -6.8315935134887695
    5. '.de' → logprob: -7.2065935134887695
    6. ' .' → logprob: -7.5815935134887695
    7. '.dep' → logprob: -7.7065935134887695
    8. '_ind' → logprob: -8.33159351348877
    9. '.degree' → logprob: -8.33159351348877
    10. '.rev' → logprob: -8.58159351348877

Token 124: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.006692038383334875
    2. '_deg' → logprob: -5.256691932678223
    3. '_de' → logprob: -6.756691932678223
    4. 'degree' → logprob: -8.756691932678223
    5. 'deg' → logprob: -9.006691932678223
    6. 'd' → logprob: -11.756691932678223
    7. 'de' → logprob: -13.256691932678223
    8. '_edges' → logprob: -13.381691932678223
    9. '```' → logprob: -14.006691932678223
    10. 'degrees' → logprob: -14.631691932678223

Token 125: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3136163353919983
    2. '=' → logprob: -1.3136162757873535
    3. ':' → logprob: -8.188616752624512
    4. '[' → logprob: -9.688616752624512
    5. '[:]' → logprob: -11.938616752624512
    6. 's' → logprob: -12.938616752624512
    7. '<|end|>' → logprob: -13.313616752624512
    8. '=[' → logprob: -13.813616752624512
    9. ' =[' → logprob: -13.813616752624512
    10. ' ' → logprob: -14.313616752624512

Token 126: ' List' (ID: 2655)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004239381290972233
    2. ' [' → logprob: -5.504239559173584
    3. '[List' → logprob: -9.254239082336426
    4. '[n' → logprob: -9.879239082336426
    5. '[int' → logprob: -11.379239082336426
    6. '[Int' → logprob: -14.254239082336426
    7. '[self' → logprob: -14.379239082336426
    8. '[node' → logprob: -15.129239082336426
    9. '[N' → logprob: -15.754239082336426
    10. '[num' → logprob: -15.879239082336426

Token 127: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.6801348328590393
    2. '=' → logprob: -1.4301347732543945
    3. ' =' → logprob: -1.4301347732543945
    4. '[' → logprob: -4.5551347732543945
    5. '[List' → logprob: -5.6801347732543945
    6. ':' → logprob: -7.8051347732543945
    7. '=[' → logprob: -8.430134773254395
    8. '[Int' → logprob: -9.055134773254395
    9. '(int' → logprob: -9.305134773254395
    10. '=int' → logprob: -10.430134773254395

Token 128: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.7729658540920354e-05
    2. ' ]' → logprob: -11.500027656555176
    3. '=' → logprob: -12.125027656555176
    4. '[' → logprob: -12.500027656555176
    5. ' =' → logprob: -12.875027656555176
    6. ' ' → logprob: -13.125027656555176
    7. ')' → logprob: -13.500027656555176
    8. ']=' → logprob: -13.750027656555176
    9. '   ' → logprob: -14.750027656555176
    10. '(' → logprob: -15.625027656555176

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022534668445587
    2. ' =' → logprob: -1.9102253913879395
    3. ' ' → logprob: -15.035224914550781
    4. ' =[' → logprob: -15.410224914550781
    5. ']' → logprob: -15.785224914550781
    6. '[' → logprob: -15.785224914550781
    7. '=[' → logprob: -15.910224914550781
    8. ')' → logprob: -16.03522491455078
    9. '<|end|>' → logprob: -16.41022491455078
    10. '＝' → logprob: -17.03522491455078

Token 130: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03804252669215202
    2. ' [' → logprob: -3.2880425453186035
    3. '[n' → logprob: -14.538042068481445
    4. '   ' → logprob: -15.413042068481445
    5. '0' → logprob: -16.288042068481445
    6. ' ' → logprob: -16.663042068481445
    7. '[int' → logprob: -16.788042068481445
    8. '([' → logprob: -16.913042068481445
    9. '[self' → logprob: -17.288042068481445
    10. '[m' → logprob: -17.913042068481445

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -18.000017166137695
    4. '۰' → logprob: -18.562517166137695
    5. ')' → logprob: -18.687517166137695
    6. '```' → logprob: -19.437517166137695
    7. ']' → logprob: -19.750017166137695
    8. '  ' → logprob: -19.937517166137695
    9. '000' → logprob: -20.000017166137695
    10. '
' → logprob: -20.125017166137695

Token 132: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01659495197236538
    2. ' for' → logprob: -4.766594886779785
    3. ']*(' → logprob: -5.016594886779785
    4. ']*' → logprob: -7.266594886779785
    5. 'for' → logprob: -7.391594886779785
    6. ' ]' → logprob: -12.891594886779785
    7. '*(' → logprob: -13.516594886779785
    8. ']+' → logprob: -13.891594886779785
    9. '*' → logprob: -14.016594886779785
    10. ')' → logprob: -14.891594886779785

Token 133: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8143288493156433
    2. ' for' → logprob: -1.064328908920288
    3. ' *' → logprob: -1.814328908920288
    4. ']' → logprob: -3.564328908920288
    5. 'for' → logprob: -4.314328670501709
    6. '*(' → logprob: -5.189328670501709
    7. ']*(' → logprob: -6.939328670501709
    8. ']*' → logprob: -7.689328670501709
    9. ')' → logprob: -8.064329147338867
    10. ' ' → logprob: -10.064329147338867

Token 134: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.93448489275761e-05
    2. ' (' → logprob: -9.625079154968262
    3. '(' → logprob: -11.625079154968262
    4. '(self' → logprob: -12.500079154968262
    5. '   ' → logprob: -15.000079154968262
    6. '(len' → logprob: -16.375080108642578
    7. 'n' → logprob: -16.375080108642578
    8. '((' → logprob: -16.750080108642578
    9. '(nn' → logprob: -17.125080108642578
    10. ' ' → logprob: -17.625080108642578

Token 135: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008797031827270985
    2. '(n' → logprob: -4.7587971687316895
    3. ' n' → logprob: -8.758796691894531
    4. 'self' → logprob: -11.383796691894531
    5. ' (' → logprob: -11.883796691894531
    6. '   ' → logprob: -12.508796691894531
    7. '
' → logprob: -13.758796691894531
    8. '(' → logprob: -14.133796691894531
    9. '(self' → logprob: -14.133796691894531
    10. '	n' → logprob: -15.383796691894531

Token 136: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11282496154308319
    2. ' +' → logprob: -2.2378249168395996
    3. '+
' → logprob: -13.737825393676758
    4. ' +
' → logprob: -14.487825393676758
    5. ')' → logprob: -14.737825393676758
    6. '＋' → logprob: -16.112825393676758
    7. ' ' → logprob: -16.612825393676758
    8. ' plus' → logprob: -16.612825393676758
    9. '+)' → logprob: -16.737825393676758
    10. '
' → logprob: -16.737825393676758

Token 137: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001933277933858335
    2. ' ' → logprob: -6.2519330978393555
    3. '2' → logprob: -12.876933097839355
    4. '   ' → logprob: -13.751933097839355
    5. '7' → logprob: -14.626933097839355
    6. '+' → logprob: -15.626933097839355
    7. ')' → logprob: -15.751933097839355
    8. '```' → logprob: -16.251934051513672
    9. '
' → logprob: -16.376934051513672
    10. '  ' → logprob: -16.376934051513672

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.75001335144043
    3. '2' → logprob: -12.62501335144043
    4. '
' → logprob: -14.50001335144043
    5. '   ' → logprob: -14.87501335144043
    6. '+' → logprob: -15.31251335144043
    7. '7' → logprob: -15.50001335144043
    8. '

' → logprob: -15.93751335144043
    9. '```' → logprob: -16.18751335144043
    10. ')' → logprob: -16.56251335144043

Token 139: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8193366486229934e-05
    2. ')
' → logprob: -11.500018119812012
    3. '<|end|>' → logprob: -12.500018119812012
    4. ' )' → logprob: -13.000018119812012
    5. ']' → logprob: -13.750018119812012
    6. '])' → logprob: -15.375018119812012
    7. '   ' → logprob: -16.000019073486328
    8. '),' → logprob: -16.375019073486328
    9. ')

' → logprob: -16.500019073486328
    10. '       ' → logprob: -16.500019073486328

Token 140: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5999651551246643
    2. '<|end|>' → logprob: -0.8499651551246643
    3. '   ' → logprob: -4.0999650955200195
    4. 'def' → logprob: -5.8499650955200195
    5. '    
' → logprob: -6.3499650955200195
    6. '<|end|>' → logprob: -7.0999650955200195
    7. '  
' → logprob: -7.9749650955200195
    8. ' 
' → logprob: -8.09996509552002
    9. '

' → logprob: -8.09996509552002
    10. ' def' → logprob: -8.22496509552002

Token 141: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.014574074186384678
    2. ' def' → logprob: -4.63957405090332
    3. '   ' → logprob: -5.38957405090332
    4. '
' → logprob: -8.63957405090332
    5. '<|end|>' → logprob: -10.26457405090332
    6. '    
' → logprob: -11.13957405090332
    7. ' ' → logprob: -12.51457405090332
    8. '        
' → logprob: -12.63957405090332
    9. '<|end|>' → logprob: -13.38957405090332
    10. '

' → logprob: -13.38957405090332

Token 142: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.010400928556919098
    2. '_add' → logprob: -5.010400772094727
    3. 'add' → logprob: -5.635400772094727
    4. '.add' → logprob: -10.010400772094727
    5. ' def' → logprob: -10.385400772094727
    6. ' ' → logprob: -11.885400772094727
    7. ')add' → logprob: -12.010400772094727
    8. '_' → logprob: -12.135400772094727
    9. '	add' → logprob: -12.760400772094727
    10. ' addedge' → logprob: -12.760400772094727

Token 143: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.0025635301135480404
    2. '_' → logprob: -6.2525634765625
    3. '_dependency' → logprob: -7.8775634765625
    4. '_task' → logprob: -8.3775634765625
    5. '_connection' → logprob: -11.5025634765625
    6. '_node' → logprob: -12.0025634765625
    7. '_neighbor' → logprob: -13.2525634765625
    8. '_edges' → logprob: -13.8775634765625
    9. '_child' → logprob: -14.1275634765625
    10. '_depend' → logprob: -14.1275634765625

Token 144: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.020892543718218803
    2. '(' → logprob: -3.89589262008667
    3. '(s' → logprob: -8.520892143249512
    4. ' (' → logprob: -9.270892143249512
    5. 'self' → logprob: -10.770892143249512
    6. '<|end|>' → logprob: -10.895892143249512
    7. '(sel' → logprob: -12.520892143249512
    8. '(u' → logprob: -13.270892143249512
    9. '(
' → logprob: -13.270892143249512
    10. ')(' → logprob: -13.395892143249512

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011349477805197239
    2. ' ,' → logprob: -5.261349678039551
    3. 'self' → logprob: -5.636349678039551
    4. ',u' → logprob: -6.511349678039551
    5. ')' → logprob: -7.636349678039551
    6. '(self' → logprob: -9.26134967803955
    7. '(u' → logprob: -9.51134967803955
    8. 'from' → logprob: -9.63634967803955
    9. 'u' → logprob: -9.63634967803955
    10. ')(' → logprob: -9.88634967803955

Token 146: ' frm' (ID: 45032)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.23534230887889862
    2. 'u' → logprob: -1.735342264175415
    3. 'from' → logprob: -4.110342502593994
    4. ' from' → logprob: -4.610342502593994
    5. 'frm' → logprob: -5.360342502593994
    6. ' frm' → logprob: -6.235342502593994
    7. 'src' → logprob: -9.735342025756836
    8. ')' → logprob: -9.860342025756836
    9. 'fr' → logprob: -9.985342025756836
    10. 'start' → logprob: -10.610342025756836

Token 147: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042531240615062416
    2. ' ,' → logprob: -7.875425338745117
    3. '_,' → logprob: -10.125425338745117
    4. ',int' → logprob: -13.250425338745117
    5. ')' → logprob: -13.625425338745117
    6. '‌,' → logprob: -14.625425338745117
    7. '_id' → logprob: -14.750425338745117
    8. '_' → logprob: -15.250425338745117
    9. 'self' → logprob: -15.875425338745117
    10. ' ' → logprob: -16.000425338745117

Token 148: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5607429146766663
    2. ' int' → logprob: -1.1857428550720215
    3. '<|end|>' → logprob: -3.1857428550720215
    4. ',' → logprob: -3.5607428550720215
    5. ' ' → logprob: -4.0607428550720215
    6. ' ,' → logprob: -4.6857428550720215
    7. ',int' → logprob: -4.6857428550720215
    8. ')' → logprob: -4.9357428550720215
    9. ':int' → logprob: -5.3107428550720215
    10. 'self' → logprob: -6.9357428550720215

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.635164754698053e-05
    2. ' ,' → logprob: -9.625066757202148
    3. '‌,' → logprob: -15.875066757202148
    4. '<|end|>' → logprob: -17.00006675720215
    5. ',int' → logprob: -17.37506675720215
    6. ',
' → logprob: -17.62506675720215
    7. '<|end|>' → logprob: -18.62506675720215
    8. ',

' → logprob: -18.87506675720215
    9. '‍,' → logprob: -19.00006675720215
    10. ')' → logprob: -19.12506675720215

Token 150: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.004624868277460337
    2. ' to' → logprob: -5.379624843597412
    3. '	to' → logprob: -13.00462532043457
    4. ' ' → logprob: -13.50462532043457
    5. '  ' → logprob: -15.50462532043457
    6. '   ' → logprob: -15.87962532043457
    7. ')' → logprob: -16.12962532043457
    8. ' 
' → logprob: -16.50462532043457
    9. 'toq' → logprob: -16.75462532043457
    10. '
' → logprob: -16.87962532043457

Token 151: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004040525760501623
    2. '):' → logprob: -5.629040718078613
    3. ':int' → logprob: -8.379040718078613
    4. ' ):' → logprob: -8.879040718078613
    5. ' :' → logprob: -9.879040718078613
    6. ')' → logprob: -11.379040718078613
    7. '):
' → logprob: -12.129040718078613
    8. ',' → logprob: -14.379040718078613
    9. 'int' → logprob: -14.629040718078613
    10. ' )' → logprob: -15.129040718078613

Token 152: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07894046604633331
    2. ' int' → logprob: -2.5789403915405273
    3. ')' → logprob: -10.328940391540527
    4. ' )' → logprob: -11.953940391540527
    5. ':int' → logprob: -12.078940391540527
    6. '=int' → logprob: -13.078940391540527
    7. '[int' → logprob: -13.828940391540527
    8. ' ' → logprob: -14.078940391540527
    9. ',int' → logprob: -14.578940391540527
    10. ']int' → logprob: -14.703940391540527

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03385799750685692
    2. ')' → logprob: -3.408858060836792
    3. ' ):' → logprob: -9.408858299255371
    4. ':' → logprob: -9.533858299255371
    5. '):
' → logprob: -9.908858299255371
    6. ' )' → logprob: -12.783858299255371
    7. '   ' → logprob: -13.283858299255371
    8. ' ' → logprob: -14.158858299255371
    9. ''):' → logprob: -14.408858299255371
    10. '):
' → logprob: -14.533858299255371

Token 154: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00958277378231287
    2. '<|end|>' → logprob: -5.384582996368408
    3. ' self' → logprob: -6.384582996368408
    4. ')' → logprob: -6.759582996368408
    5. '   ' → logprob: -8.00958251953125
    6. '):' → logprob: -8.13458251953125
    7. 'self' → logprob: -8.13458251953125
    8. '):
' → logprob: -8.75958251953125
    9. ':' → logprob: -8.75958251953125
    10. ' 
' → logprob: -8.88458251953125

Token 155: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.29495304822921753
    2. 'self' (adapté à ' self') → logprob: -1.4199531078338623
    3. '       ' → logprob: -4.294952869415283
    4. '	self' → logprob: -10.169953346252441
    5. ' ' → logprob: -11.169953346252441
    6. 's' → logprob: -13.169953346252441
    7. '   ' → logprob: -13.169953346252441
    8. '[self' → logprob: -13.169953346252441
    9. '(self' → logprob: -13.169953346252441
    10. 'Self' → logprob: -13.669953346252441

Token 156: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -7.465036105713807e-06
    2. '.' → logprob: -12.125007629394531
    3. ' .' → logprob: -15.500007629394531
    4. '.Ad' → logprob: -15.625007629394531
    5. '.act' → logprob: -16.00000762939453
    6. 'adj' → logprob: -16.12500762939453
    7. '.edges' → logprob: -16.12500762939453
    8. '.frm' → logprob: -16.12500762939453
    9. '.ac' → logprob: -16.50000762939453
    10. '.am' → logprob: -16.50000762939453

Token 157: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.333223139634356e-05
    2. 'd' → logprob: -10.375033378601074
    3. 'jac' → logprob: -14.500033378601074
    4. '[' → logprob: -15.000033378601074
    5. '[j' → logprob: -15.750033378601074
    6. '.append' → logprob: -15.875033378601074
    7. '
' → logprob: -16.250032424926758
    8. 'f' → logprob: -16.250032424926758
    9. '```' → logprob: -16.625032424926758
    10. 'ј' → logprob: -16.750032424926758

Token 158: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '[to' → logprob: -13.375001907348633
    3. '[from' → logprob: -15.375001907348633
    4. ')[' → logprob: -16.500001907348633
    5. '[self' → logprob: -16.625001907348633
    6. ' [' → logprob: -18.375001907348633
    7. '   ' → logprob: -18.750001907348633
    8. '][' → logprob: -19.000001907348633
    9. '[obj' → logprob: -19.000001907348633
    10. '[src' → logprob: -19.375001907348633

Token 159: 'frm' (ID: 51488)
  Prédit: 'frm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frm' → logprob: -0.029869314283132553
    2. '[' → logprob: -3.529869318008423
    3. ' frm' → logprob: -9.904869079589844
    4. '(frm' → logprob: -10.779869079589844
    5. 'fr' → logprob: -11.404869079589844
    6. ')' → logprob: -11.779869079589844
    7. '.frm' → logprob: -12.029869079589844
    8. '][' → logprob: -12.404869079589844
    9. ']' → logprob: -12.654869079589844
    10. '[from' → logprob: -12.654869079589844

Token 160: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -2.5107177862082608e-05
    2. ' ].' → logprob: -11.750024795532227
    3. '[' → logprob: -11.875024795532227
    4. ']' → logprob: -12.375024795532227
    5. '][' → logprob: -12.500024795532227
    6. '   ' → logprob: -13.750024795532227
    7. '.append' → logprob: -14.375024795532227
    8. '       ' → logprob: -15.750024795532227
    9. 'append' → logprob: -16.375024795532227
    10. '.' → logprob: -16.625024795532227

Token 161: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: 0.0
    2. 'appen' → logprob: -17.625
    3. ' append' → logprob: -18.375
    4. '.append' → logprob: -18.5
    5. 'push' → logprob: -18.875
    6. 'app' → logprob: -21.125
    7. '	append' → logprob: -21.375
    8. '_append' → logprob: -22.125
    9. 'Append' → logprob: -22.75
    10. 'add' → logprob: -22.75

Token 162: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -9.610702363715973e-06
    2. '(' → logprob: -12.250009536743164
    3. 'to' → logprob: -12.250009536743164
    4. ' (' → logprob: -18.375009536743164
    5. '(
' → logprob: -18.625009536743164
    6. '(To' → logprob: -18.625009536743164
    7. '[to' → logprob: -19.625009536743164
    8. ',to' → logprob: -19.875009536743164
    9. '(the' → logprob: -20.125009536743164
    10. ' to' → logprob: -21.000009536743164

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03811068832874298
    2. ')
' → logprob: -3.2881107330322266
    3. '       ' → logprob: -9.663110733032227
    4. ')
' → logprob: -12.788110733032227
    5. ' )' → logprob: -13.163110733032227
    6. ' )
' → logprob: -14.913110733032227
    7. ')

' → logprob: -15.788110733032227
    8. '),' → logprob: -15.913110733032227
    9. '   ' → logprob: -16.163110733032227
    10. ')#' → logprob: -17.288110733032227

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021427445113658905
    2. 'self' → logprob: -3.8964273929595947
    3. '
' → logprob: -7.396427631378174
    4. ' self' → logprob: -8.271427154541016
    5. '   ' → logprob: -12.646427154541016
    6. ',' → logprob: -12.896427154541016
    7. '<|end|>' → logprob: -13.271427154541016
    8. '[self' → logprob: -13.396427154541016
    9. '	self' → logprob: -13.771427154541016
    10. ' ' → logprob: -13.896427154541016

Token 165: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00691855326294899
    2. ' self' → logprob: -5.006918430328369
    3. '       ' → logprob: -8.506918907165527
    4. '
' → logprob: -14.256918907165527
    5. '   ' → logprob: -15.256918907165527
    6. ' ' → logprob: -16.88191795349121
    7. '	self' → logprob: -16.88191795349121
    8. '           ' → logprob: -17.50691795349121
    9. '[self' → logprob: -17.75691795349121
    10. '        
' → logprob: -18.88191795349121

Token 166: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -6.034592388459714e-06
    2. '.' → logprob: -12.500005722045898
    3. 'in' → logprob: -13.500005722045898
    4. ' .' → logprob: -14.750005722045898
    5. '.In' → logprob: -16.2500057220459
    6. '[in' → logprob: -16.3750057220459
    7. 'In' → logprob: -16.5000057220459
    8. ').' → logprob: -17.1250057220459
    9. '_in' → logprob: -17.3750057220459
    10. '].' → logprob: -17.3750057220459

Token 167: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -1.0325924449716695e-05
    2. '_depth' → logprob: -12.12501049041748
    3. '_de' → logprob: -12.62501049041748
    4. '_' → logprob: -14.62501049041748
    5. '_d' → logprob: -15.50001049041748
    6. '_deg' → logprob: -16.125009536743164
    7. '-degree' → logprob: -16.250009536743164
    8. '_distance' → logprob: -16.250009536743164
    9. '[' → logprob: -16.250009536743164
    10. 'degree' → logprob: -16.375009536743164

Token 168: '[to' (ID: 139069)
  Prédit: '[to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[to' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.625
    3. ' [' → logprob: -20.125
    4. 'to' → logprob: -20.25
    5. '[from' → logprob: -20.5
    6. '[
' → logprob: -21.0
    7. '```' → logprob: -21.0
    8. '(to' → logprob: -21.75
    9. '[self' → logprob: -22.0
    10. '[target' → logprob: -22.375

Token 169: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06120717152953148
    2. ']+=' → logprob: -3.3112070560455322
    3. '+=' → logprob: -4.311207294464111
    4. ' +=' → logprob: -4.811207294464111
    5. ')' → logprob: -6.936207294464111
    6. ' ]' → logprob: -8.061206817626953
    7. '+' → logprob: -10.311206817626953
    8. '+]' → logprob: -11.936206817626953
    9. '[' → logprob: -12.061206817626953
    10. ']+' → logprob: -12.186206817626953

Token 170: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0042669158428907394
    2. ' +=' → logprob: -5.504266738891602
    3. '+' → logprob: -8.754266738891602
    4. ']+=' → logprob: -10.504266738891602
    5. '[' → logprob: -12.754266738891602
    6. '+='' → logprob: -15.879266738891602
    7. '```' → logprob: -16.5042667388916
    8. '+="' → logprob: -16.5042667388916
    9. '++' → logprob: -17.8792667388916
    10. '=' → logprob: -17.8792667388916

Token 171: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.836499985889532e-05
    2. ' ' → logprob: -9.7500581741333
    3. '   ' → logprob: -21.625059127807617
    4. '```' → logprob: -22.500059127807617
    5. '0' → logprob: -24.750059127807617
    6. '  ' → logprob: -24.875059127807617
    7. ' ' → logprob: -25.000059127807617
    8. '
' → logprob: -25.250059127807617
    9. '１' → logprob: -25.500059127807617
    10. '۱' → logprob: -26.250059127807617

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -20.75
    3. '```' → logprob: -24.0
    4. '   ' → logprob: -26.0
    5. '１' → logprob: -27.25
    6. '
' → logprob: -27.5
    7. '۱' → logprob: -28.75
    8. '0' → logprob: -29.0
    9. '

' → logprob: -29.125
    10. 'int' → logprob: -29.125

Token 173: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.021931862458586693
    2. '   ' → logprob: -4.6469316482543945
    3. '<|end|>' → logprob: -4.7719316482543945
    4. '    
' → logprob: -6.3969316482543945
    5. 'def' → logprob: -7.3969316482543945
    6. '

' → logprob: -7.8969316482543945
    7. '  
' → logprob: -7.8969316482543945
    8. '```' → logprob: -8.646931648254395
    9. '<|end|>' → logprob: -9.021931648254395
    10. ' def' → logprob: -9.146931648254395

Token 174: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009545818902552128
    2. 'def' → logprob: -5.009545803070068
    3. '   ' → logprob: -6.509545803070068
    4. ' def' → logprob: -7.509545803070068
    5. '

' → logprob: -7.634545803070068
    6. '    
' → logprob: -8.759546279907227
    7. '  
' → logprob: -9.884546279907227
    8. ' 
' → logprob: -10.259546279907227
    9. '<|end|>' → logprob: -11.009546279907227
    10. '```' → logprob: -11.259546279907227

Token 175: ' Evaluation' (ID: 58680)
  Prédit: ' Task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Task' → logprob: -0.8183466196060181
    2. ' Scheduler' → logprob: -1.318346619606018
    3. 'Scheduler' → logprob: -1.693346619606018
    4. 'Task' → logprob: -2.5683465003967285
    5. 'Solution' → logprob: -4.4433465003967285
    6. ' Solution' → logprob: -4.8183465003967285
    7. ' Top' → logprob: -5.5683465003967285
    8. 'Top' → logprob: -6.0683465003967285
    9. 'Priority' → logprob: -6.5683465003967285
    10. ' Solver' → logprob: -6.5683465003967285

Token 176: 'Order' (ID: 4861)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19930672645568848
    2. 'Engine' → logprob: -2.6993067264556885
    3. 'Strategy' → logprob: -3.3243067264556885
    4. 'Criteria' → logprob: -3.4493067264556885
    5. 'Context' → logprob: -4.074306488037109
    6. 'Scheduler' → logprob: -4.824306488037109
    7. '():' → logprob: -5.449306488037109
    8. 'Function' → logprob: -5.949306488037109
    9. 'Order' → logprob: -6.324306488037109
    10. ':
' → logprob: -6.449306488037109

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034511767444200814
    2. ':
' → logprob: -8.125345230102539
    3. '(' → logprob: -11.375345230102539
    4. '():' → logprob: -11.750345230102539
    5. '(Task' → logprob: -11.875345230102539
    6. '):' → logprob: -11.875345230102539
    7. '>:' → logprob: -12.750345230102539
    8. ':

' → logprob: -13.250345230102539
    9. ':**' → logprob: -13.375345230102539
    10. ':def' → logprob: -13.375345230102539

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0062453956343233585
    2. ' def' → logprob: -5.6312456130981445
    3. 'def' → logprob: -6.6312456130981445
    4. ':' → logprob: -6.7562456130981445
    5. ':
' → logprob: -8.881245613098145
    6. '(' → logprob: -11.631245613098145
    7. ':def' → logprob: -12.131245613098145
    8. '	def' → logprob: -13.381245613098145
    9. '):
' → logprob: -13.381245613098145
    10. '   ' → logprob: -13.881245613098145

Token 179: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.03812572360038757
    2. 'def' (adapté à ' def') → logprob: -3.28812575340271
    3. '   ' → logprob: -9.413125991821289
    4. ':' → logprob: -13.413125991821289
    5. ' ' → logprob: -14.788125991821289
    6. ':def' → logprob: -14.788125991821289
    7. '	def' → logprob: -15.788125991821289
    8. '  ' → logprob: -15.788125991821289
    9. 'class' → logprob: -17.03812599182129
    10. ':
' → logprob: -17.03812599182129

Token 180: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.38386932015419006
    2. 'init' → logprob: -1.8838692903518677
    3. '__' → logprob: -2.0088694095611572
    4. '_init' → logprob: -3.6338694095611572
    5. ' init' → logprob: -5.883869171142578
    6. ' def' → logprob: -6.258869171142578
    7. '_' → logprob: -7.383869171142578
    8. 'def' → logprob: -7.508869171142578
    9. ' _' → logprob: -9.258869171142578
    10. '```' → logprob: -9.383869171142578

Token 181: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. '_init' → logprob: -17.875
    3. ' init' → logprob: -19.5
    4. 'ini' → logprob: -20.0
    5. 'int' → logprob: -20.25
    6. 'def' → logprob: -21.125
    7. '(init' → logprob: -22.0
    8. 'inite' → logprob: -22.625
    9. 'in' → logprob: -22.75
    10. 'slots' → logprob: -22.75

Token 182: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.011089440435171127
    2. '(self' → logprob: -4.511089324951172
    3. '__' → logprob: -10.261089324951172
    4. '__(
' → logprob: -12.386089324951172
    5. 'self' → logprob: -13.886089324951172
    6. '_(' → logprob: -14.511089324951172
    7. '(' → logprob: -14.511089324951172
    8. '__((' → logprob: -15.261089324951172
    9. ' (' → logprob: -15.511089324951172
    10. '__('' → logprob: -17.011089324951172

Token 183: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020818933262489736
    2. ' self' → logprob: -8.500207901000977
    3. '
' → logprob: -13.000207901000977
    4. ',' → logprob: -13.500207901000977
    5. ')' → logprob: -14.500207901000977
    6. '(self' → logprob: -15.375207901000977
    7. '   ' → logprob: -15.875207901000977
    8. ',self' → logprob: -16.250207901000977
    9. ' ' → logprob: -17.625207901000977
    10. '       ' → logprob: -17.750207901000977

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20236732065677643
    2. 'self' → logprob: -1.7023673057556152
    3. '(self' → logprob: -7.827367305755615
    4. ' self' → logprob: -8.577367782592773
    5. ',self' → logprob: -9.077367782592773
    6. ' ,' → logprob: -9.327367782592773
    7. '__,' → logprob: -9.702367782592773
    8. '__(' → logprob: -9.702367782592773
    9. ' (' → logprob: -11.202367782592773
    10. ',
' → logprob: -12.077367782592773

Token 185: ' order' (ID: 2569)
  Prédit: 'tasks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tasks' → logprob: -0.3257428705692291
    2. ' tasks' → logprob: -1.3257428407669067
    3. ' graph' → logprob: -5.075742721557617
    4. 'graph' → logprob: -5.200742721557617
    5. ' n' → logprob: -8.575742721557617
    6. 'n' → logprob: -8.575742721557617
    7. 'task' → logprob: -9.075742721557617
    8. ' task' → logprob: -10.575742721557617
    9. 'dependency' → logprob: -10.700742721557617
    10. 'num' → logprob: -10.825742721557617

Token 186: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0042276280000805855
    2. '):' → logprob: -6.129227638244629
    3. '=' → logprob: -6.504227638244629
    4. '=[]' → logprob: -8.504227638244629
    5. '=None' → logprob: -8.504227638244629
    6. ')' → logprob: -9.379227638244629
    7. ',' → logprob: -11.129227638244629
    8. '):
' → logprob: -11.504227638244629
    9. '=[],' → logprob: -12.004227638244629
    10. ':list' → logprob: -12.129227638244629

Token 187: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0004311460361350328
    2. ' List' → logprob: -7.750431060791016
    3. ')' → logprob: -15.125431060791016
    4. '[List' → logprob: -15.875431060791016
    5. 'list' → logprob: -17.375431060791016
    6. 'None' → logprob: -17.500431060791016
    7. '	List' → logprob: -17.500431060791016
    8. 'Optional' → logprob: -17.625431060791016
    9. 'int' → logprob: -18.250431060791016
    10. '   ' → logprob: -18.875431060791016

Token 188: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.002515969565138221
    2. '[' → logprob: -6.00251579284668
    3. 'int' → logprob: -10.12751579284668
    4. '[Int' → logprob: -15.62751579284668
    5. 'Task' → logprob: -17.50251579284668
    6. '<int' → logprob: -17.62751579284668
    7. '```' → logprob: -18.12751579284668
    8. ',int' → logprob: -18.12751579284668
    9. ')' → logprob: -18.25251579284668
    10. '[List' → logprob: -18.25251579284668

Token 189: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.018205663189291954
    2. ']' → logprob: -4.393205642700195
    3. '])' → logprob: -5.393205642700195
    4. '):' → logprob: -7.393205642700195
    5. ']):
' → logprob: -8.018205642700195
    6. ']:' → logprob: -9.393205642700195
    7. ')' → logprob: -9.518205642700195
    8. ':' → logprob: -11.518205642700195
    9. '>):' → logprob: -11.768205642700195
    10. '],' → logprob: -12.143205642700195

Token 190: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004311191849410534
    2. 'self' → logprob: -5.5043110847473145
    3. ' self' → logprob: -8.504311561584473
    4. ':' → logprob: -11.754311561584473
    5. '<|end|>' → logprob: -12.004311561584473
    6. ',' → logprob: -12.129311561584473
    7. '   ' → logprob: -13.129311561584473
    8. '.' → logprob: -13.629311561584473
    9. '=' → logprob: -13.629311561584473
    10. '        
' → logprob: -14.004311561584473

Token 191: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0013735649408772588
    2. '       ' → logprob: -6.751373767852783
    3. ' self' → logprob: -8.501373291015625
    4. '	self' → logprob: -16.751373291015625
    5. '(self' → logprob: -17.501373291015625
    6. '
' → logprob: -18.001373291015625
    7. '   ' → logprob: -18.376373291015625
    8. '0' → logprob: -19.126373291015625
    9. ' ' → logprob: -19.376373291015625
    10. ',self' → logprob: -19.751373291015625

Token 192: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.007128907833248377
    2. 'order' → logprob: -5.257128715515137
    3. '=' → logprob: -6.632128715515137
    4. ' =' → logprob: -8.132128715515137
    5. '.' → logprob: -8.757128715515137
    6. '._' → logprob: -10.382128715515137
    7. '_order' → logprob: -10.882128715515137
    8. ':' → logprob: -10.882128715515137
    9. '.orders' → logprob: -11.257128715515137
    10. ' order' → logprob: -11.382128715515137

Token 193: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014172375202179
    2. ' =' → logprob: -1.7014172077178955
    3. ':' → logprob: -12.826416969299316
    4. ' ' → logprob: -15.076416969299316
    5. ')' → logprob: -15.451416969299316
    6. '=[]' → logprob: -15.576416969299316
    7. ',' → logprob: -16.576417922973633
    8. '  ' → logprob: -16.576417922973633
    9. '   ' → logprob: -16.576417922973633
    10. '<|end|>' → logprob: -16.826417922973633

Token 194: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.2014133334159851
    2. ' order' → logprob: -1.7014133930206299
    3. '	order' → logprob: -18.326414108276367
    4. ' ' → logprob: -19.076414108276367
    5. '[]' → logprob: -19.326414108276367
    6. '$order' → logprob: -19.951414108276367
    7. ' []' → logprob: -20.201414108276367
    8. '(order' → logprob: -21.076414108276367
    9. 'orde' → logprob: -21.201414108276367
    10. ' ordem' → logprob: -22.826414108276367

Token 195: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0758868157863617
    2. '<|end|>' → logprob: -3.4508867263793945
    3. 'def' → logprob: -3.5758867263793945
    4. ' def' → logprob: -4.7008867263793945
    5. '   ' → logprob: -6.2008867263793945
    6. '<|end|>' → logprob: -6.4508867263793945
    7. '    
' → logprob: -8.450886726379395
    8. '

' → logprob: -8.825886726379395
    9. '	def' → logprob: -9.325886726379395
    10. ' 
' → logprob: -10.075886726379395

Token 196: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5852444171905518
    2. '
' → logprob: -1.2102444171905518
    3. '<|end|>' → logprob: -1.9602444171905518
    4. ' def' → logprob: -6.085244178771973
    5. '<|end|>' → logprob: -7.210244178771973
    6. '

' → logprob: -7.835244178771973
    7. '   ' → logprob: -8.085244178771973
    8. ' ' → logprob: -9.085244178771973
    9. '[' → logprob: -9.835244178771973
    10. '    
' → logprob: -9.960244178771973

Token 197: ' ' (ID: 220)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.06658853590488434
    2. ' List' → logprob: -2.9415886402130127
    3. 'order' → logprob: -6.316588401794434
    4. '#' → logprob: -6.316588401794434
    5. 'list' → logprob: -6.566588401794434
    6. 'indices' → logprob: -6.691588401794434
    7. 'positions' → logprob: -6.816588401794434
    8. 'The' → logprob: -7.441588401794434
    9. '"""' → logprob: -7.691588401794434
    10. 'Dict' → logprob: -7.816588401794434

Token 198: '1' (ID: 16)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.03643562272191048
    2. 'order' → logprob: -4.161435604095459
    3. 'list' → logprob: -4.536435604095459
    4. '[]' → logprob: -6.411435604095459
    5. 'Dict' → logprob: -6.411435604095459
    6. 'The' → logprob: -6.786435604095459
    7. 'positions' → logprob: -6.786435604095459
    8. 'indices' → logprob: -7.286435604095459
    9. 'the' → logprob: -7.536435604095459
    10. '#' → logprob: -7.911435604095459

Token 199: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.009029445238411427
    2. '-index' → logprob: -5.384029388427734
    3. 'based' → logprob: -6.134029388427734
    4. ' -' → logprob: -6.509029388427734
    5. '-' → logprob: -7.759029388427734
    6. ' based' → logprob: -9.009029388427734
    7. '-base' → logprob: -9.009029388427734
    8. '-Based' → logprob: -10.509029388427734
    9. 'Based' → logprob: -10.884029388427734
    10. '_based' → logprob: -11.509029388427734

Token 200: ' indices' (ID: 30378)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' of' (ID: 328)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ' attribute' (ID: 13118)
  Prédit: 'tasks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tasks' → logprob: -0.011625015176832676
    2. ' tasks' → logprob: -4.511624813079834
    3. 'the' → logprob: -7.886624813079834
    4. 'evalu' → logprob: -8.886625289916992
    5. 'Task' → logprob: -10.636625289916992
    6. 'task' → logprob: -11.136625289916992
    7. ' the' → logprob: -11.136625289916992
    8. ' evaluated' → logprob: -12.761625289916992
    9. ' Task' → logprob: -13.386625289916992
    10. 'Tasks' → logprob: -13.511625289916992

Token 203: ' priority' (ID: 17621)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19709928333759308
    2. 'values' → logprob: -2.822099208831787
    3. '<|end|>' → logprob: -2.947099208831787
    4. 'indices' → logprob: -3.572099208831787
    5. 'levels' → logprob: -3.947099208831787
    6. 'keys' → logprob: -5.197099208831787
    7. 'positions' → logprob: -5.947099208831787
    8. 'evalu' → logprob: -6.447099208831787
    9. 'groups' → logprob: -7.322099208831787
    10. 'lists' → logprob: -7.322099208831787

Token 204: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2859652638435364
    2. '<|end|>' → logprob: -1.7859652042388916
    3. '
' → logprob: -3.1609652042388916
    4. 'def' → logprob: -3.6609652042388916
    5. '       ' → logprob: -5.410965442657471
    6. '<|end|>' → logprob: -5.785965442657471
    7. ' ' → logprob: -6.535965442657471
    8. '    
' → logprob: -6.660965442657471
    9. ' def' → logprob: -6.910965442657471
    10. ',' → logprob: -7.160965442657471

Token 205: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32074442505836487
    2. '   ' → logprob: -1.8207443952560425
    3. ' def' → logprob: -2.195744514465332
    4. ')' → logprob: -7.695744514465332
    5. ',' → logprob: -8.195744514465332
    6. ':' → logprob: -8.570744514465332
    7. '    
' → logprob: -9.445744514465332
    8. ' ' → logprob: -9.570744514465332
    9. ' 
' → logprob: -10.195744514465332
    10. '	def' → logprob: -10.195744514465332

Token 206: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0002671768015716225
    2. ' def' → logprob: -8.250267028808594
    3. '   ' → logprob: -12.625267028808594
    4. ')' → logprob: -12.875267028808594
    5. ':' → logprob: -18.000267028808594
    6. '):' → logprob: -18.500267028808594
    7. '@' → logprob: -18.625267028808594
    8. ']' → logprob: -19.375267028808594
    9. '@property' → logprob: -20.000267028808594
    10. '	def' → logprob: -20.250267028808594

Token 207: ' key' (ID: 2140)
  Prédit: 'compare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compare' → logprob: -0.25851622223854065
    2. 'def' → logprob: -2.258516311645508
    3. ' def' → logprob: -3.508516311645508
    4. 'evaluate' → logprob: -3.508516311645508
    5. ' compare' → logprob: -3.758516311645508
    6. '__' → logprob: -4.133516311645508
    7. ' evaluate' → logprob: -5.508516311645508
    8. 'get' → logprob: -5.508516311645508
    9. 'prior' → logprob: -5.758516311645508
    10. '_compare' → logprob: -5.758516311645508

Token 208: '_func' (ID: 22252)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0052360063418745995
    2. '(' → logprob: -5.2552361488342285
    3. ' (' → logprob: -13.88023567199707
    4. '(s' → logprob: -14.75523567199707
    5. 'self' → logprob: -15.00523567199707
    6. '(
' → logprob: -15.88023567199707
    7. '   ' → logprob: -16.63023567199707
    8. '(sel' → logprob: -16.75523567199707
    9. '(this' → logprob: -17.13023567199707
    10. '(task' → logprob: -17.38023567199707

Token 209: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004388942907098681
    2. '(' → logprob: -7.750438690185547
    3. ' (' → logprob: -11.750438690185547
    4. '(s' → logprob: -16.375438690185547
    5. '   ' → logprob: -17.000438690185547
    6. 'self' → logprob: -17.500438690185547
    7. '(
' → logprob: -17.750438690185547
    8. '=self' → logprob: -17.750438690185547
    9. ' ' → logprob: -18.000438690185547
    10. '(this' → logprob: -18.125438690185547

Token 210: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002810225123539567
    2. ' ,' → logprob: -6.127810001373291
    3. 'self' → logprob: -7.502810001373291
    4. ',self' → logprob: -10.00281047821045
    5. '(self' → logprob: -11.00281047821045
    6. ')' → logprob: -11.87781047821045
    7. '):' → logprob: -13.75281047821045
    8. '   ' → logprob: -14.00281047821045
    9. ',
' → logprob: -14.25281047821045
    10. '       ' → logprob: -14.37781047821045

Token 211: ' task' (ID: 5296)
  Prédit: ' task'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' task' → logprob: -0.5394428372383118
    2. 'task' → logprob: -0.9144428372383118
    3. 'attributes' → logprob: -4.914443016052246
    4. ' attributes' → logprob: -5.414443016052246
    5. 'attr' → logprob: -5.914443016052246
    6. 'attrs' → logprob: -7.664443016052246
    7. ' attrs' → logprob: -7.789443016052246
    8. ' attr' → logprob: -7.789443016052246
    9. ' x' → logprob: -9.289443016052246
    10. 'x' → logprob: -9.539443016052246

Token 212: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.035434406250715256
    2. ',' → logprob: -3.7854344844818115
    3. ':' → logprob: -5.160434246063232
    4. ')' → logprob: -5.535434246063232
    5. '):
' → logprob: -6.535434246063232
    6. ' ):' → logprob: -7.035434246063232
    7. '   ' → logprob: -10.28543472290039
    8. ' )' → logprob: -10.66043472290039
    9. 'self' → logprob: -11.66043472290039
    10. '):
' → logprob: -12.03543472290039

Token 213: ' Task' (ID: 10148)
  Prédit: 'Task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Task' → logprob: -0.175841823220253
    2. ')' → logprob: -2.300841808319092
    3. ' Task' → logprob: -2.925841808319092
    4. ' )' → logprob: -6.550841808319092
    5. '):
' → logprob: -6.675841808319092
    6. ' task' → logprob: -6.925841808319092
    7. '_Task' → logprob: -6.925841808319092
    8. 'task' → logprob: -7.800841808319092
    9. '	Task' → logprob: -8.17584228515625
    10. '.Task' → logprob: -8.17584228515625

Token 214: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47492560744285583
    2. '):' → logprob: -0.9749256372451782
    3. '):
' → logprob: -7.474925518035889
    4. ',' → logprob: -8.349925994873047
    5. ')->' → logprob: -10.849925994873047
    6. '   ' → logprob: -11.849925994873047
    7. ':' → logprob: -12.099925994873047
    8. ' ):' → logprob: -12.224925994873047
    9. ' )' → logprob: -12.349925994873047
    10. '):
' → logprob: -13.224925994873047

Token 215: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012314081192016602
    2. '):' → logprob: -4.6373138427734375
    3. '->' → logprob: -7.0123138427734375
    4. ')' → logprob: -7.6373138427734375
    5. '(self' → logprob: -8.137313842773438
    6. '(' → logprob: -8.637313842773438
    7. ':return' → logprob: -8.887313842773438
    8. ' ->' → logprob: -9.012313842773438
    9. '       ' → logprob: -9.262313842773438
    10. ',' → logprob: -9.637313842773438

Token 216: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.7551654577255249
    2. 'tuple' → logprob: -1.505165457725525
    3. ' tuple' → logprob: -1.755165457725525
    4. ' Tuple' → logprob: -2.0051655769348145
    5. '_tuple' → logprob: -8.630165100097656
    6. '[' → logprob: -8.880165100097656
    7. '.Tuple' → logprob: -9.130165100097656
    8. '(tuple' → logprob: -9.380165100097656
    9. 'Any' → logprob: -10.630165100097656
    10. '   ' → logprob: -11.505165100097656

Token 217: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.167970672249794
    2. '[int' → logprob: -1.9179706573486328
    3. ':
' → logprob: -5.417970657348633
    4. '[Any' → logprob: -5.917970657348633
    5. '[' → logprob: -7.542970657348633
    6. ':int' → logprob: -10.417970657348633
    7. '[
' → logprob: -11.792970657348633
    8. '(int' → logprob: -11.917970657348633
    9. '):' → logprob: -13.042970657348633
    10. 'int' → logprob: -13.042970657348633

Token 218: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12889887392520905
    2. '       ' → logprob: -2.253898859024048
    3. '(
' → logprob: -5.128899097442627
    4. '(tuple' → logprob: -5.753899097442627
    5. '():' → logprob: -6.253899097442627
    6. '()' → logprob: -6.378899097442627
    7. 'return' → logprob: -7.003899097442627
    8. '   ' → logprob: -7.128899097442627
    9. ' (' → logprob: -7.628899097442627
    10. ':' → logprob: -8.128898620605469

Token 219: ' #' (ID: 1069)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.03239615634083748
    2. 'return' → logprob: -3.532396078109741
    3. ' tuple' → logprob: -6.53239631652832
    4. '(tuple' → logprob: -6.90739631652832
    5. '   ' → logprob: -8.78239631652832
    6. ' return' → logprob: -11.28239631652832
    7. '       ' → logprob: -11.53239631652832
    8. 'task' → logprob: -11.78239631652832
    9. '(
' → logprob: -14.03239631652832
    10. '    ' → logprob: -14.40739631652832

Token 220: ' Return' (ID: 6318)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.47782671451568604
    2. 'tuple' → logprob: -0.977826714515686
    3. ' tuple' → logprob: -5.9778265953063965
    4. ' return' → logprob: -6.8528265953063965
    5. '   ' → logprob: -8.977827072143555
    6. '(tuple' → logprob: -10.852827072143555
    7. 'result' → logprob: -13.227827072143555
    8. 'ret' → logprob: -13.852827072143555
    9. '  ' → logprob: -14.102827072143555
    10. '    ' → logprob: -14.477827072143555

Token 221: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0006927779759280384
    2. ' tuple' → logprob: -7.750692844390869
    3. '(tuple' → logprob: -8.250692367553711
    4. 'task' → logprob: -14.250692367553711
    5. '   ' → logprob: -15.250692367553711
    6. '(' → logprob: -16.62569236755371
    7. '       ' → logprob: -18.25069236755371
    8. '(
' → logprob: -18.62569236755371
    9. '_tuple' → logprob: -18.75069236755371
    10. '(task' → logprob: -19.25069236755371

Token 222: ' for' (ID: 395)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.46738094091415405
    2. '(' → logprob: -1.2173810005187988
    3. '(task' → logprob: -3.217381000518799
    4. '(
' → logprob: -3.342381000518799
    5. 'tuple' → logprob: -6.592381000518799
    6. '([' → logprob: -7.967381000518799
    7. '(t' → logprob: -10.34238052368164
    8. ' (' → logprob: -10.34238052368164
    9. '(*' → logprob: -10.46738052368164
    10. 'task' → logprob: -10.59238052368164

Token 223: ' priority' (ID: 17621)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.36337044835090637
    2. 'tuple' → logprob: -1.363370418548584
    3. ' task' → logprob: -3.613370418548584
    4. 'task' → logprob: -3.988370418548584
    5. '(tuple' → logprob: -6.113370418548584
    6. '(task' → logprob: -6.988370418548584
    7. '[' → logprob: -10.113370895385742
    8. 'comparison' → logprob: -10.238370895385742
    9. '(' → logprob: -10.488370895385742
    10. 'priority' → logprob: -10.488370895385742

Token 224: ' heap' (ID: 37237)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9177343249320984
    2. '(tuple' → logprob: -1.1677343845367432
    3. '(task' → logprob: -1.9177343845367432
    4. '(
' → logprob: -2.167734384536743
    5. '([' → logprob: -4.167734146118164
    6. 'tuple' → logprob: -5.542734146118164
    7. ' =' → logprob: -6.042734146118164
    8. ':' → logprob: -6.292734146118164
    9. 'return' → logprob: -6.792734146118164
    10. '   ' → logprob: -7.042734146118164

Token 225: ':' (ID: 25)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34863677620887756
    2. '(
' → logprob: -1.9736367464065552
    3. '(tuple' → logprob: -2.7236368656158447
    4. '=' → logprob: -3.5986368656158447
    5. ' =' → logprob: -3.9736368656158447
    6. ':' → logprob: -4.723636627197266
    7. '(task' → logprob: -5.098636627197266
    8. 'return' → logprob: -5.348636627197266
    9. '   ' → logprob: -5.473636627197266
    10. '([' → logprob: -5.598636627197266

Token 226: ' negate' (ID: 163104)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.20256537199020386
    2. ' tuple' → logprob: -1.7025654315948486
    3. '(tuple' → logprob: -6.8275651931762695
    4. '   ' → logprob: -9.70256519317627
    5. '(' → logprob: -13.32756519317627
    6. '       ' → logprob: -14.07756519317627
    7. ' ' → logprob: -14.07756519317627
    8. '
' → logprob: -14.32756519317627
    9. '    ' → logprob: -14.45256519317627
    10. 'return' → logprob: -14.70256519317627

Token 227: ' values' (ID: 4824)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.5745410323143005
    2. '(tuple' → logprob: -1.0745410919189453
    3. ' tuple' → logprob: -3.0745410919189453
    4. '(' → logprob: -4.449541091918945
    5. 'task' → logprob: -4.449541091918945
    6. '(
' → logprob: -4.824541091918945
    7. '(task' → logprob: -4.949541091918945
    8. '(-' → logprob: -5.324541091918945
    9. '[' → logprob: -6.449541091918945
    10. 'd' → logprob: -6.699541091918945

Token 228: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3914474248886108
    2. '(tuple' → logprob: -1.5164474248886108
    3. '(-' → logprob: -1.7664474248886108
    4. '=' → logprob: -2.2664475440979004
    5. '([-' → logprob: -2.2664475440979004
    6. '(
' → logprob: -2.8914475440979004
    7. ' =' → logprob: -3.6414475440979004
    8. '([' → logprob: -3.8914475440979004
    9. '(task' → logprob: -4.2664475440979
    10. 'tuple' → logprob: -4.7664475440979

Token 229: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8534911274909973
    2. '-' → logprob: -1.4784910678863525
    3. 'min' → logprob: -2.1034910678863525
    4. 'descending' → logprob: -2.3534910678863525
    5. 'reverse' → logprob: -2.8534910678863525
    6. 'priority' → logprob: -4.478491306304932
    7. 'attr' → logprob: -4.728491306304932
    8. 'self' → logprob: -4.978491306304932
    9. 'higher' → logprob: -5.103491306304932
    10. 'task' → logprob: -5.228491306304932

Token 230: ' priority' (ID: 17621)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.655482530593872
    2. ',' → logprob: -1.780482530593872
    3. '       ' → logprob: -2.280482530593872
    4. '(task' → logprob: -2.280482530593872
    5. 'heap' → logprob: -2.530482530593872
    6. ')' → logprob: -2.780482530593872
    7. '   ' → logprob: -2.905482530593872
    8. '(-' → logprob: -3.530482530593872
    9. 'return' → logprob: -4.155482292175293
    10. '_value' → logprob: -4.155482292175293

Token 231: '
' (ID: 198)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.9091121554374695
    2. '(' → logprob: -1.1591122150421143
    3. 'return' → logprob: -3.0341122150421143
    4. '(tuple' → logprob: -3.0341122150421143
    5. 'tuple' → logprob: -3.0341122150421143
    6. '[' → logprob: -3.1591122150421143
    7. '([' → logprob: -3.9091122150421143
    8. '(-' → logprob: -4.659111976623535
    9. '       ' → logprob: -4.784111976623535
    10. ' =' → logprob: -4.909111976623535

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8654288053512573
    2. '(
' → logprob: -1.8654288053512573
    3. '(' → logprob: -2.115428924560547
    4. 'tuple' → logprob: -2.240428924560547
    5. '(tuple' → logprob: -2.865428924560547
    6. 'return' → logprob: -2.990428924560547
    7. '(-' → logprob: -3.240428924560547
    8. '   ' → logprob: -3.740428924560547
    9. ' tuple' → logprob: -5.365428924560547
    10. ' return' → logprob: -5.365428924560547

Token 233: ' #' (ID: 1069)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.14079079031944275
    2. 'return' → logprob: -2.3907907009124756
    3. ' tuple' → logprob: -3.3907907009124756
    4. '   ' → logprob: -5.890790939331055
    5. ' return' → logprob: -6.265790939331055
    6. '(tuple' → logprob: -7.390790939331055
    7. '       ' → logprob: -7.390790939331055
    8. '(-' → logprob: -8.765790939331055
    9. '           ' → logprob: -12.390790939331055
    10. ' ' → logprob: -12.640790939331055

Token 234: ' Also' (ID: 8820)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02996823750436306
    2. ' return' → logprob: -3.65496826171875
    3. 'tuple' → logprob: -6.02996826171875
    4. '   ' → logprob: -6.90496826171875
    5. ' tuple' → logprob: -8.77996826171875
    6. '       ' → logprob: -10.15496826171875
    7. '
' → logprob: -10.77996826171875
    8. 'result' → logprob: -10.90496826171875
    9. '	return' → logprob: -11.65496826171875
    10. ' ' → logprob: -13.52996826171875

Token 235: ' add' (ID: 1147)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5917401313781738
    2. 'return' → logprob: -0.8417401313781738
    3. '       ' → logprob: -5.591740131378174
    4. '   ' → logprob: -5.591740131378174
    5. ' =' → logprob: -6.591740131378174
    6. 'tuple' → logprob: -6.841740131378174
    7. ' tuple' → logprob: -6.966740131378174
    8. ':' → logprob: -6.966740131378174
    9. 'neg' → logprob: -7.091740131378174
    10. 'def' → logprob: -7.466740131378174

Token 236: ' task' (ID: 5296)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.06979835778474808
    2. 'tuple' → logprob: -3.319798469543457
    3. ' task' → logprob: -4.069798469543457
    4. 'task' → logprob: -5.694798469543457
    5. ' a' → logprob: -5.819798469543457
    6. ' self' → logprob: -6.069798469543457
    7. ' len' → logprob: -6.569798469543457
    8. 'self' → logprob: -6.819798469543457
    9. ' -' → logprob: -7.069798469543457
    10. 'len' → logprob: -7.444798469543457

Token 237: '.id' (ID: 2858)
  Prédit: '.attributes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.attributes' → logprob: -0.5264357924461365
    2. '.id' → logprob: -0.9014357924461365
    3. 'attributes' → logprob: -6.526435852050781
    4. '.' → logprob: -7.151435852050781
    5. 'id' → logprob: -7.651435852050781
    6. '   ' → logprob: -8.776435852050781
    7. '_id' → logprob: -9.651435852050781
    8. '.priority' → logprob: -9.776435852050781
    9. '.attribute' → logprob: -9.776435852050781
    10. ' .' → logprob: -10.526435852050781

Token 238: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4599662125110626
    2. '(' → logprob: -1.2099661827087402
    3. ',
' → logprob: -3.5849661827087402
    4. '(
' → logprob: -4.08496618270874
    5. '       ' → logprob: -5.33496618270874
    6. 'return' → logprob: -5.58496618270874
    7. '=' → logprob: -5.83496618270874
    8. '   ' → logprob: -6.08496618270874
    9. '(),' → logprob: -6.08496618270874
    10. ' =' → logprob: -6.20996618270874

Token 239: ' tie' (ID: 22244)
  Prédit: ' tie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tie' → logprob: -0.02861829474568367
    2. ' t' → logprob: -3.903618335723877
    3. 'tie' → logprob: -4.903618335723877
    4. 't' → logprob: -7.528618335723877
    5. ' stability' → logprob: -10.528617858886719
    6. ' stable' → logprob: -10.653617858886719
    7. ' consistent' → logprob: -11.153617858886719
    8. ' break' → logprob: -11.778617858886719
    9. ' a' → logprob: -13.028617858886719
    10. 'break' → logprob: -13.403617858886719

Token 240: '-break' (ID: 62263)
  Prédit: '-break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-break' → logprob: -0.23653796315193176
    2. '_break' → logprob: -1.9865379333496094
    3. '-breaking' → logprob: -2.9865379333496094
    4. 'breaker' → logprob: -4.236537933349609
    5. 'break' → logprob: -5.236537933349609
    6. ' breaker' → logprob: -6.486537933349609
    7. 'br' → logprob: -7.486537933349609
    8. '-' → logprob: -7.861537933349609
    9. 'breaking' → logprob: -7.986537933349609
    10. 'Breaker' → logprob: -7.986537933349609

Token 241: ' determin' (ID: 22124)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.9898214340209961
    2. ')' → logprob: -1.989821434020996
    3. ',' → logprob: -1.989821434020996
    4. 'r' → logprob: -2.614821434020996
    5. 'return' → logprob: -2.614821434020996
    6. '       ' → logprob: -2.739821434020996
    7. '   ' → logprob: -3.114821434020996
    8. ' return' → logprob: -4.239821434020996
    9. '           ' → logprob: -4.489821434020996
    10. 'ing' → logprob: -4.614821434020996

Token 242: 'ism' (ID: 2367)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.17010155320167542
    2. 'ation' → logprob: -1.920101523399353
    3. 'ing' → logprob: -5.670101642608643
    4. 'es' → logprob: -5.795101642608643
    5. 'ed' → logprob: -7.295101642608643
    6. 'a' → logprob: -7.295101642608643
    7. '```' → logprob: -7.420101642608643
    8. 'acy' → logprob: -7.670101642608643
    9. 'ism' → logprob: -8.295101165771484
    10. 'er' → logprob: -9.170101165771484

Token 243: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41570430994033813
    2. '(' → logprob: -2.1657042503356934
    3. 'return' → logprob: -2.5407042503356934
    4. ',' → logprob: -2.6657042503356934
    5. '(
' → logprob: -3.1657042503356934
    6. ' return' → logprob: -4.665704250335693
    7. ' (' → logprob: -4.790704250335693
    8. '   ' → logprob: -5.290704250335693
    9. ')' → logprob: -6.165704250335693
    10. '[' → logprob: -6.290704250335693

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04251136630773544
    2. '(' → logprob: -4.167511463165283
    3. 'return' → logprob: -4.792511463165283
    4. ' return' → logprob: -5.042511463165283
    5. ' (' → logprob: -5.667511463165283
    6. '(
' → logprob: -5.667511463165283
    7. 'tuple' → logprob: -7.167511463165283
    8. '(tuple' → logprob: -7.167511463165283
    9. ' (
' → logprob: -7.417511463165283
    10. ',' → logprob: -8.167510986328125

Token 245: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.21662002801895142
    2. 'tuple' → logprob: -1.9666199684143066
    3. ' return' → logprob: -3.4666199684143066
    4. ' tuple' → logprob: -4.091619968414307
    5. '   ' → logprob: -5.341619968414307
    6. '       ' → logprob: -6.216619968414307
    7. '(tuple' → logprob: -9.591620445251465
    8. '	return' → logprob: -11.341620445251465
    9. '(-' → logprob: -12.091620445251465
    10. '    ' → logprob: -12.466620445251465

Token 246: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.010033601894974709
    2. ' tuple' → logprob: -4.88503360748291
    3. '(tuple' → logprob: -6.13503360748291
    4. '(-' → logprob: -8.51003360748291
    5. '(' → logprob: -10.13503360748291
    6. '   ' → logprob: -11.38503360748291
    7. '(-(' → logprob: -13.63503360748291
    8. '(
' → logprob: -13.63503360748291
    9. '(*' → logprob: -13.88503360748291
    10. '((-' → logprob: -13.88503360748291

Token 247: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.001982044894248247
    2. '([-' → logprob: -6.25198221206665
    3. '((-' → logprob: -10.251981735229492
    4. '(' → logprob: -11.751981735229492
    5. '[-' → logprob: -11.876981735229492
    6. '-' → logprob: -12.751981735229492
    7. '(-(' → logprob: -15.126981735229492
    8. '(
' → logprob: -16.376981735229492
    9. '([' → logprob: -17.626981735229492
    10. '((' → logprob: -18.001981735229492

Token 248: 'task' (ID: 15921)
  Prédit: 'task'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'task' → logprob: -0.0038852267898619175
    2. 'get' → logprob: -5.753885269165039
    3. ' task' → logprob: -7.878885269165039
    4. '(task' → logprob: -8.628885269165039
    5. 'attr' → logprob: -9.128885269165039
    6. ' getattr' → logprob: -11.378885269165039
    7. 'val' → logprob: -11.753885269165039
    8. 'a' → logprob: -12.378885269165039
    9. 'v' → logprob: -12.503885269165039
    10. '(' → logprob: -12.878885269165039

Token 249: '.attributes' (ID: 54514)
  Prédit: '.attributes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.attributes' → logprob: -4.811348480870947e-05
    2. 'attributes' → logprob: -10.37504768371582
    3. '.' → logprob: -11.37504768371582
    4. ' .' → logprob: -12.50004768371582
    5. '.attribute' → logprob: -13.87504768371582
    6. '.properties' → logprob: -16.37504768371582
    7. '.values' → logprob: -16.37504768371582
    8. '_.' → logprob: -16.50004768371582
    9. ').' → logprob: -16.75004768371582
    10. '.id' → logprob: -17.00004768371582

Token 250: '[i' (ID: 1768)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.02132708951830864
    2. '[i' → logprob: -4.021327018737793
    3. '[idx' → logprob: -6.146327018737793
    4. '[index' → logprob: -7.646327018737793
    5. '[' → logprob: -8.021327018737793
    6. 'self' → logprob: -9.021327018737793
    7. '[pos' → logprob: -10.396327018737793
    8. '[o' → logprob: -10.771327018737793
    9. '[ind' → logprob: -11.271327018737793
    10. '[x' → logprob: -11.396327018737793

Token 251: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007251526229083538
    2. '-' → logprob: -6.257251739501953
    3. ' for' → logprob: -6.757251739501953
    4. ' ]' → logprob: -6.757251739501953
    5. 'for' → logprob: -6.757251739501953
    6. ' -' → logprob: -7.007251739501953
    7. 'nd' → logprob: -8.382251739501953
    8. '])' → logprob: -8.757251739501953
    9. ')' → logprob: -9.257251739501953
    10. 'x' → logprob: -9.632251739501953

Token 252: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.2762428822461516e-05
    2. ' ' → logprob: -10.250052452087402
    3. ']' → logprob: -11.000052452087402
    4. '```' → logprob: -15.500052452087402
    5. ')' → logprob: -15.750052452087402
    6. '0' → logprob: -16.12505340576172
    7. '   ' → logprob: -16.50005340576172
    8. 'for' → logprob: -17.37505340576172
    9. '])' → logprob: -17.87505340576172
    10. ' ]' → logprob: -17.87505340576172

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.081584716506768e-05
    2. ' ' → logprob: -11.000020980834961
    3. '0' → logprob: -12.875020980834961
    4. ')' → logprob: -15.562520980834961
    5. '   ' → logprob: -15.750020980834961
    6. 'self' → logprob: -16.00002098083496
    7. '```' → logprob: -16.12502098083496
    8. '2' → logprob: -16.18752098083496
    9. 'len' → logprob: -16.56252098083496
    10. '
' → logprob: -16.81252098083496

Token 254: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5842982530593872
    2. ')' → logprob: -1.0842982530593872
    3. 'for' → logprob: -2.8342981338500977
    4. ',' → logprob: -3.2092981338500977
    5. ' ' → logprob: -5.959298133850098
    6. ' )' → logprob: -6.834298133850098
    7. ' ,' → logprob: -7.334298133850098
    8. '<|end|>' → logprob: -8.459298133850098
    9. ' if' → logprob: -8.584298133850098
    10. ',)' → logprob: -9.209298133850098

Token 255: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.31642627716064453
    2. 'for' → logprob: -1.5664262771606445
    3. ',' → logprob: -2.8164262771606445
    4. ')' → logprob: -6.9414262771606445
    5. ' if' → logprob: -7.1914262771606445
    6. ' ,' → logprob: -7.8164262771606445
    7. ' ' → logprob: -8.066426277160645
    8. 'if' → logprob: -8.941426277160645
    9. '  ' → logprob: -11.566426277160645
    10. '   ' → logprob: -11.566426277160645

Token 256: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04858918860554695
    2. ' i' → logprob: -3.0485892295837402
    3. '	i' → logprob: -14.548588752746582
    4. ' ' → logprob: -14.548588752746582
    5. '   ' → logprob: -15.548588752746582
    6. '`' → logprob: -16.0485897064209
    7. ')' → logprob: -16.1735897064209
    8. 'self' → logprob: -16.4235897064209
    9. ')i' → logprob: -16.4235897064209
    10. ' in' → logprob: -16.5485897064209

Token 257: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03812147304415703
    2. 'in' → logprob: -3.288121461868286
    3. '<|end|>' → logprob: -9.538121223449707
    4. '<|end|>' → logprob: -12.663121223449707
    5. 'self' → logprob: -13.288121223449707
    6. ' ' → logprob: -14.038121223449707
    7. ')' → logprob: -14.163121223449707
    8. 'In' → logprob: -15.288121223449707
    9. '	in' → logprob: -15.663121223449707
    10. '.' → logprob: -15.788121223449707

Token 258: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002615742268972099
    2. ' self' → logprob: -8.250261306762695
    3. '(self' → logprob: -16.750261306762695
    4. '
' → logprob: -17.000261306762695
    5. '[self' → logprob: -17.125261306762695
    6. '   ' → logprob: -17.500261306762695
    7. ')' → logprob: -17.625261306762695
    8. '	self' → logprob: -17.875261306762695
    9. '       ' → logprob: -18.375261306762695
    10. ' ' → logprob: -18.625261306762695

Token 259: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.00033903829171322286
    2. 'order' → logprob: -8.00033950805664
    3. '.' → logprob: -12.75033950805664
    4. '	order' → logprob: -15.25033950805664
    5. ' order' → logprob: -15.75033950805664
    6. ' .' → logprob: -15.75033950805664
    7. '.user' → logprob: -16.62533950805664
    8. '$order' → logprob: -17.37533950805664
    9. '(order' → logprob: -17.75033950805664
    10. ').' → logprob: -18.25033950805664

Token 260: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007821206003427505
    2. ')+' → logprob: -4.882821083068848
    3. ' )' → logprob: -8.507821083068848
    4. ')+(' → logprob: -11.757821083068848
    5. '),' → logprob: -12.882821083068848
    6. ')+'' → logprob: -13.632821083068848
    7. ')+"' → logprob: -14.882821083068848
    8. ']' → logprob: -15.132821083068848
    9. '+' → logprob: -15.882821083068848
    10. '   ' → logprob: -16.007822036743164

Token 261: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06690256297588348
    2. '+' → logprob: -2.8169026374816895
    3. '+(' → logprob: -5.4419026374816895
    4. ')' → logprob: -8.191902160644531
    5. ')+' → logprob: -9.691902160644531
    6. '(' → logprob: -9.691902160644531
    7. '       ' → logprob: -10.316902160644531
    8. '+[' → logprob: -10.566902160644531
    9. ' +(' → logprob: -10.691902160644531
    10. ')+(' → logprob: -10.691902160644531

Token 262: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18513405323028564
    2. '(i' → logprob: -2.185133934020996
    3. '(id' → logprob: -3.435133934020996
    4. '(task' → logprob: -3.935133934020996
    5. ' (' → logprob: -6.310133934020996
    6. '(t' → logprob: -6.685133934020996
    7. '(tuple' → logprob: -7.185133934020996
    8. '(ip' → logprob: -8.685133934020996
    9. '(ii' → logprob: -8.935133934020996
    10. '(x' → logprob: -9.685133934020996

Token 263: 'task' (ID: 15921)
  Prédit: 'task'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'task' → logprob: -0.006728991866111755
    2. ' task' → logprob: -5.0067291259765625
    3. '-task' → logprob: -11.506729125976562
    4. '	task' → logprob: -13.881729125976562
    5. '-' → logprob: -14.256729125976562
    6. ' -' → logprob: -14.256729125976562
    7. ' ' → logprob: -14.881729125976562
    8. '   ' → logprob: -15.131729125976562
    9. '(task' → logprob: -15.381729125976562
    10. '  ' → logprob: -15.756729125976562

Token 264: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -0.00029589756741188467
    2. '.' → logprob: -8.750295639038086
    3. ').' → logprob: -9.500295639038086
    4. '`.' → logprob: -10.500295639038086
    5. '".' → logprob: -10.875295639038086
    6. ''.' → logprob: -11.750295639038086
    7. ' .' → logprob: -12.750295639038086
    8. '.ids' → logprob: -13.625295639038086
    9. '}.' → logprob: -14.000295639038086
    10. ' ' → logprob: -15.000295639038086

Token 265: ',' (ID: 11)
  Prédit: ',)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',)' → logprob: -5.9795445849886164e-05
    2. ',' → logprob: -9.750060081481934
    3. ',)
' → logprob: -13.625060081481934
    4. ')' → logprob: -15.875060081481934
    5. ',),' → logprob: -16.375059127807617
    6. ' ,' → logprob: -17.750059127807617
    7. ',:)' → logprob: -20.375059127807617
    8. '(),' → logprob: -20.375059127807617
    9. '_,' → logprob: -20.500059127807617
    10. ',),
' → logprob: -21.125059127807617

Token 266: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011748670367524028
    2. ' )' → logprob: -6.7511749267578125
    3. ')
' → logprob: -12.501174926757812
    4. ')

' → logprob: -14.376174926757812
    5. ')#' → logprob: -16.126174926757812
    6. ',)' → logprob: -16.376174926757812
    7. '))' → logprob: -16.626174926757812
    8. ')`' → logprob: -16.751174926757812
    9. '0' → logprob: -17.251174926757812
    10. '),' → logprob: -17.376174926757812

Token 267: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2329956740140915
    2. '<|end|>' → logprob: -2.2329957485198975
    3. 'class' → logprob: -2.3579957485198975
    4. '<|end|>' → logprob: -6.107995510101318
    5. 'def' → logprob: -6.982995510101318
    6. '

' → logprob: -6.982995510101318
    7. '  
' → logprob: -7.232995510101318
    8. ')' → logprob: -7.857995510101318
    9. '    
' → logprob: -7.982995510101318
    10. '   ' → logprob: -8.982995986938477

Token 268: ' Scheduler' (ID: 94229)
  Prédit: ' Task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Task' → logprob: -0.9015843272209167
    2. ' Scheduler' → logprob: -1.5265843868255615
    3. 'Scheduler' → logprob: -1.6515843868255615
    4. 'Task' → logprob: -2.7765843868255615
    5. ' Solution' → logprob: -3.1515843868255615
    6. 'Solution' → logprob: -3.5265843868255615
    7. 'Evaluator' → logprob: -4.276584148406982
    8. ' Solver' → logprob: -4.401584148406982
    9. ' Priority' → logprob: -5.151584148406982
    10. 'Priority' → logprob: -5.651584148406982

Token 269: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.953082341467962e-05
    2. ':
' → logprob: -11.000039100646973
    3. '):' → logprob: -11.875039100646973
    4. ' :' → logprob: -12.250039100646973
    5. '>:' → logprob: -12.625039100646973
    6. '(' → logprob: -13.250039100646973
    7. ':def' → logprob: -13.375039100646973
    8. '():' → logprob: -13.500039100646973
    9. ':**' → logprob: -14.125039100646973
    10. '：' → logprob: -14.250039100646973

Token 270: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021631620824337006
    2. ' def' → logprob: -4.021631717681885
    3. 'def' → logprob: -6.021631717681885
    4. ':' → logprob: -7.646631717681885
    5. '	def' → logprob: -7.771631717681885
    6. ':
' → logprob: -9.396631240844727
    7. '(' → logprob: -11.396631240844727
    8. ':def' → logprob: -11.396631240844727
    9. '    
' → logprob: -11.521631240844727
    10. ',' → logprob: -12.146631240844727

Token 271: ' """
' (ID: 7037)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.12697367370128632
    2. 'def' → logprob: -2.1269736289978027
    3. '   ' → logprob: -10.001974105834961
    4. ':def' → logprob: -16.00197410583496
    5. '	def' → logprob: -16.25197410583496
    6. 'class' → logprob: -17.25197410583496
    7. ':' → logprob: -17.25197410583496
    8. ' ' → logprob: -18.12697410583496
    9. '  ' → logprob: -18.62697410583496
    10. ' __' → logprob: -18.75197410583496

Token 272: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5281662940979004
    2. 'def' → logprob: -0.9031662940979004
    3. '   ' → logprob: -6.1531662940979
    4. 'init' → logprob: -6.6531662940979
    5. ' __' → logprob: -6.6531662940979
    6. '__' → logprob: -8.403165817260742
    7. '_init' → logprob: -11.028165817260742
    8. '  ' → logprob: -11.153165817260742
    9. '	def' → logprob: -11.153165817260742
    10. ')' → logprob: -11.778165817260742

Token 273: ' Ultra' (ID: 38414)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.09434669464826584
    2. 'def' → logprob: -2.844346761703491
    3. '   ' → logprob: -3.469346761703491
    4. ' """
' → logprob: -7.844346523284912
    5. 'class' → logprob: -8.59434700012207
    6. '"""
' → logprob: -10.46934700012207
    7. '
' → logprob: -10.59434700012207
    8. ' class' → logprob: -10.84434700012207
    9. '    ' → logprob: -10.96934700012207
    10. ' A' → logprob: -11.71934700012207

Token 274: ' sophisticated' (ID: 36278)
  Prédit: '-efficient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-efficient' → logprob: -0.873677670955658
    2. '-fast' → logprob: -1.4986777305603027
    3. 'Fast' → logprob: -1.6236777305603027
    4. 'fast' → logprob: -2.7486777305603027
    5. ' fast' → logprob: -3.3736777305603027
    6. '-' → logprob: -3.9986777305603027
    7. 'efficient' → logprob: -4.123677730560303
    8. 'Hard' → logprob: -5.873677730560303
    9. '-hard' → logprob: -5.873677730560303
    10. 'Optim' → logprob: -5.873677730560303

Token 275: ' scheduler' (ID: 59732)
  Prédit: ' Scheduler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Scheduler' → logprob: -0.8087469339370728
    2. ' scheduler' → logprob: -1.5587469339370728
    3. 'Scheduler' → logprob: -2.058746814727783
    4. ' code' → logprob: -2.808746814727783
    5. ' class' → logprob: -3.433746814727783
    6. '<|end|>' → logprob: -3.683746814727783
    7. ' ' → logprob: -3.808746814727783
    8. ' task' → logprob: -4.058746814727783
    9. '<|end|>' → logprob: -4.433746814727783
    10. '_scheduler' → logprob: -4.808746814727783

Token 276: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: ' Unix' (ID: 99392)
  Prédit: ' tasks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tasks' → logprob: -1.2174971103668213
    2. ' task' → logprob: -1.5924971103668213
    3. 'tasks' → logprob: -2.0924971103668213
    4. 'task' → logprob: -2.3424971103668213
    5. 'evalu' → logprob: -2.7174971103668213
    6. ' scheduling' → logprob: -3.3424971103668213
    7. 'dependent' → logprob: -3.8424971103668213
    8. 's' → logprob: -3.8424971103668213
    9. ' priorit' → logprob: -4.217496871948242
    10. ' complex' → logprob: -4.467496871948242

Token 278: 'G' (ID: 38)
  Prédit: '-like'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-like' → logprob: -1.3982375860214233
    2. ' systems' → logprob: -1.5232375860214233
    3. ' tasks' → logprob: -1.6482375860214233
    4. '-style' → logprob: -2.148237705230713
    5. ' processes' → logprob: -3.023237705230713
    6. ' task' → logprob: -3.523237705230713
    7. ' shell' → logprob: -3.773237705230713
    8. 'like' → logprob: -4.273237705230713
    9. ' batch' → logprob: -4.273237705230713
    10. ' system' → logprob: -4.273237705230713

Token 279: 'nu' (ID: 8502)
  Prédit: 'ame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ame' → logprob: -0.9093923568725586
    2. 'ames' → logprob: -1.7843923568725586
    3. 'rid' → logprob: -2.9093923568725586
    4. 'Tasks' → logprob: -3.2843923568725586
    5. 'Make' → logprob: -3.4093923568725586
    6. 'o' → logprob: -3.5343923568725586
    7. 'Task' → logprob: -3.5343923568725586
    8. 'raph' → logprob: -3.6593923568725586
    9. 'Code' → logprob: -4.159392356872559
    10. 'Jobs' → logprob: -4.784392356872559

Token 280: '15' (ID: 1055)
  Prédit: ' tasks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tasks' → logprob: -0.6226891279220581
    2. ' Tasks' → logprob: -2.1226892471313477
    3. 'Tasks' → logprob: -2.1226892471313477
    4. 'Task' → logprob: -2.9976892471313477
    5. ' system' → logprob: -3.2476892471313477
    6. ' systems' → logprob: -3.4976892471313477
    7. ' Task' → logprob: -3.9976892471313477
    8. ' task' → logprob: -4.372689247131348
    9. '.py' → logprob: -5.372689247131348
    10. '<|end|>' → logprob: -5.497689247131348

Token 281: ' OS' (ID: 15060)
  Prédit: ' tasks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tasks' → logprob: -0.28217193484306335
    2. ' problem' → logprob: -3.4071719646453857
    3. '.' → logprob: -3.6571719646453857
    4. ' that' → logprob: -3.9071719646453857
    5. '<|end|>' → logprob: -4.157171726226807
    6. ':' → logprob: -4.407171726226807
    7. ' problems' → logprob: -4.532171726226807
    8. '   ' → logprob: -4.532171726226807
    9. ' Tasks' → logprob: -4.657171726226807
    10. ' system' → logprob: -4.657171726226807

Token 282: ',
' (ID: 412)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3931927978992462
    2. '.' → logprob: -2.643192768096924
    3. ' that' → logprob: -2.768192768096924
    4. '<|end|>' → logprob: -2.768192768096924
    5. '   ' → logprob: -3.143192768096924
    6. '
' → logprob: -3.518192768096924
    7. ':
' → logprob: -4.018192768096924
    8. '<|end|>' → logprob: -4.268192768096924
    9. ' with' → logprob: -5.393192768096924
    10. '...' → logprob: -5.518192768096924

Token 283: '   ' (ID: 271)
  Prédit: ' capable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capable' → logprob: -0.7305810451507568
    2. '   ' → logprob: -0.9805810451507568
    3. ' designed' → logprob: -2.605581045150757
    4. ' able' → logprob: -2.855581045150757
    5. ' that' → logprob: -5.355581283569336
    6. ' with' → logprob: -6.730581283569336
    7. ' implementing' → logprob: -6.730581283569336
    8. ' which' → logprob: -6.855581283569336
    9. 'des' → logprob: -7.730581283569336
    10. ' supporting' → logprob: -7.730581283569336

Token 284: ' built' (ID: 8113)
  Prédit: ' capable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' capable' → logprob: -0.4275280237197876
    2. ' designed' → logprob: -2.177527904510498
    3. '   ' → logprob: -2.427527904510498
    4. ' able' → logprob: -3.177527904510498
    5. ' def' → logprob: -4.052527904510498
    6. ' that' → logprob: -4.177527904510498
    7. 'def' → logprob: -4.552527904510498
    8. ' supporting' → logprob: -4.552527904510498
    9. 'des' → logprob: -4.677527904510498
    10. ' implementing' → logprob: -5.677527904510498

Token 285: ' with' (ID: 483)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.274042010307312
    2. ' upon' → logprob: -1.274042010307312
    3. ' for' → logprob: -1.399042010307312
    4. ' to' → logprob: -2.1490421295166016
    5. '   ' → logprob: -2.8990421295166016
    6. ' with' → logprob: -4.649042129516602
    7. '-in' → logprob: -5.899042129516602
    8. ' around' → logprob: -6.024042129516602
    9. 'on' → logprob: -6.274042129516602
    10. 'for' → logprob: -6.524042129516602

Token 286: ' extens' (ID: 34241)
  Prédit: ' advanced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' advanced' → logprob: -1.3163156509399414
    2. 'advanced' → logprob: -2.0663156509399414
    3. 'performance' → logprob: -2.1913156509399414
    4. 'priority' → logprob: -2.4413156509399414
    5. ' performance' → logprob: -2.9413156509399414
    6. ' priority' → logprob: -3.9413156509399414
    7. 'ext' → logprob: -3.9413156509399414
    8. 'heap' → logprob: -3.9413156509399414
    9. 'top' → logprob: -4.066315650939941
    10. ' type' → logprob: -4.191315650939941

Token 287: 'ibility' (ID: 4295)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03649549186229706
    2. 'ion' → logprob: -4.161495685577393
    3. 'ed' → logprob: -4.411495685577393
    4. 'ive' → logprob: -5.286495685577393
    5. 'ions' → logprob: -6.536495685577393
    6. 'ible' → logprob: -7.536495685577393
    7. 'eded' → logprob: -7.661495685577393
    8. 'ely' → logprob: -8.536495208740234
    9. 'def' → logprob: -9.411495208740234
    10. 'ibility' → logprob: -9.411495208740234

Token 288: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10100555419921875
    2. ',' → logprob: -2.9760055541992188
    3. '.' → logprob: -3.8510055541992188
    4. ':' → logprob: -5.101005554199219
    5. '   ' → logprob: -5.101005554199219
    6. '<|end|>' → logprob: -5.226005554199219
    7. 'and' → logprob: -6.351005554199219
    8. ' ,' → logprob: -6.601005554199219
    9. ' ' → logprob: -6.976005554199219
    10. ')' → logprob: -7.851005554199219

Token 289: ' abstraction' (ID: 129564)
  Prédit: 'performance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'performance' → logprob: -0.31117525696754456
    2. 'eff' → logprob: -2.1861753463745117
    3. ' performance' → logprob: -3.3111753463745117
    4. 'rob' → logprob: -3.5611753463745117
    5. 'sc' → logprob: -4.061175346374512
    6. ' efficiency' → logprob: -4.561175346374512
    7. 'speed' → logprob: -4.811175346374512
    8. 'high' → logprob: -4.811175346374512
    9. 'priority' → logprob: -5.061175346374512
    10. 'optimization' → logprob: -5.061175346374512

Token 290: ' in' (ID: 306)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.38525286316871643
    2. ' in' → logprob: -1.385252833366394
    3. '   ' → logprob: -3.8852529525756836
    4. '"""' → logprob: -4.010252952575684
    5. ',' → logprob: -4.260252952575684
    6. ' purposes' → logprob: -5.760252952575684
    7. ' for' → logprob: -5.760252952575684
    8. 'in' → logprob: -6.135252952575684
    9. ' ' → logprob: -6.635252952575684
    10. '.
' → logprob: -7.010252952575684

Token 291: ' mind' (ID: 4246)
  Prédit: 'mind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mind' → logprob: -0.3871062994003296
    2. ' mind' → logprob: -1.1371062994003296
    3. 'python' → logprob: -8.887105941772461
    4. 's' → logprob: -11.137105941772461
    5. ' scheduling' → logprob: -11.262105941772461
    6. ' Python' → logprob: -11.637105941772461
    7. 'thought' → logprob: -11.637105941772461
    8. 'code' → logprob: -12.137105941772461
    9. 'Python' → logprob: -12.137105941772461
    10. 'design' → logprob: -12.512105941772461

Token 292: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8193899989128113
    2. ':' → logprob: -0.8193899989128113
    3. '   ' → logprob: -2.694390058517456
    4. ',' → logprob: -3.944390058517456
    5. '
' → logprob: -4.569389820098877
    6. '.
' → logprob: -4.819389820098877
    7. ':
' → logprob: -5.069389820098877
    8. '<|end|>' → logprob: -5.944389820098877
    9. ',
' → logprob: -6.569389820098877
    10. ')' → logprob: -7.694389820098877

Token 293: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5352835059165955
    2. '   ' → logprob: -0.9102835059165955
    3. '    
' → logprob: -4.66028356552124
    4. ')' → logprob: -7.03528356552124
    5. ' 
' → logprob: -7.28528356552124
    6. ' def' → logprob: -8.660283088684082
    7. '```' → logprob: -8.910283088684082
    8. ':' → logprob: -9.160283088684082
    9. '  
' → logprob: -9.160283088684082
    10. ')
' → logprob: -9.160283088684082

Token 294: ' """
' (ID: 7037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8491414189338684
    2. '   ' → logprob: -1.2241413593292236
    3. ' """
' → logprob: -1.8491413593292236
    4. ' 
' → logprob: -3.2241413593292236
    5. '"""' → logprob: -3.7241413593292236
    6. ' def' → logprob: -4.099141597747803
    7. '"""
' (adapté à ' """
') → logprob: -4.224141597747803
    8. ' """' → logprob: -4.599141597747803
    9. '    
' → logprob: -4.849141597747803
    10. ')' → logprob: -5.974141597747803

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7012619972229004
    2. ' def' → logprob: -0.7012619972229004
    3. 'def' → logprob: -4.8262619972229
    4. '
' → logprob: -10.201261520385742
    5. '    
' → logprob: -10.701261520385742
    6. ' 
' → logprob: -12.576261520385742
    7. '	def' → logprob: -13.826261520385742
    8. '    ' → logprob: -14.451261520385742
    9. '   ' → logprob: -15.076261520385742
    10. ')' → logprob: -15.576261520385742

Token 296: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.25715357065200806
    2. ' def' → logprob: -1.5071535110473633
    3. '   ' → logprob: -5.257153511047363
    4. '    ' → logprob: -15.632153511047363
    5. ' ' → logprob: -15.632153511047363
    6. '	def' → logprob: -15.632153511047363
    7. '
' → logprob: -16.63215446472168
    8. '  ' → logprob: -16.75715446472168
    9. 'class' → logprob: -16.88215446472168
    10. '__' → logprob: -17.38215446472168

Token 297: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.10339287668466568
    2. 'def' → logprob: -2.8533928394317627
    3. ' __' → logprob: -3.2283928394317627
    4. '_init' → logprob: -7.978393077850342
    5. 'init' → logprob: -8.353392601013184
    6. '__' → logprob: -8.728392601013184
    7. ' init' → logprob: -9.228392601013184
    8. ' _' → logprob: -9.478392601013184
    9. '_' → logprob: -11.103392601013184
    10. ' ' → logprob: -11.603392601013184

Token 298: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -17.625
    3. '_init' → logprob: -19.625
    4. 'def' → logprob: -20.375
    5. 'ini' → logprob: -21.25
    6. 'in' → logprob: -21.625
    7. 'inite' → logprob: -22.0
    8. '
' → logprob: -22.5
    9. '   ' → logprob: -22.5
    10. 'i' → logprob: -22.5

Token 299: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.000570667558349669
    2. '__' → logprob: -7.500570774078369
    3. '__(
' → logprob: -11.250570297241211
    4. '__((' → logprob: -12.500570297241211
    5. '__('' → logprob: -14.500570297241211
    6. '(self' → logprob: -15.375570297241211
    7. '___' → logprob: -16.50057029724121
    8. '_(' → logprob: -16.87557029724121
    9. '__(*' → logprob: -16.87557029724121
    10. '__("' → logprob: -17.00057029724121

Token 300: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00023739055905025452
    2. ' self' → logprob: -8.875237464904785
    3. '
' → logprob: -9.500237464904785
    4. '   ' → logprob: -10.875237464904785
    5. '       ' → logprob: -13.625237464904785
    6. ')' → logprob: -14.500237464904785
    7. '(self' → logprob: -14.500237464904785
    8. ',' → logprob: -14.625237464904785
    9. ' ' → logprob: -15.125237464904785
    10. '    
' → logprob: -16.12523651123047

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011907526291906834
    2. 'self' → logprob: -4.511907577514648
    3. '(self' → logprob: -7.261907577514648
    4. ',self' → logprob: -10.261907577514648
    5. ' ,' → logprob: -10.636907577514648
    6. '__(' → logprob: -10.761907577514648
    7. '__,' → logprob: -11.011907577514648
    8. ' self' → logprob: -11.011907577514648
    9. ',
' → logprob: -11.261907577514648
    10. ' (' → logprob: -11.511907577514648

Token 302: ' tasks' (ID: 13638)
  Prédit: 'tasks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tasks' → logprob: -0.8267104029655457
    2. 'self' → logprob: -0.9517104029655457
    3. ' tasks' → logprob: -2.4517104625701904
    4. 'n' → logprob: -2.9517104625701904
    5. ' self' → logprob: -3.9517104625701904
    6. ' n' → logprob: -4.701710224151611
    7. 'num' → logprob: -4.951710224151611
    8. ')' → logprob: -7.326710224151611
    9. '):
' → logprob: -7.576710224151611
    10. '   ' → logprob: -7.826710224151611

Token 303: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.688212614681106e-05
    2. ',' → logprob: -11.250017166137695
    3. '):' → logprob: -13.000017166137695
    4. '_:' → logprob: -13.875017166137695
    5. '=' → logprob: -14.750017166137695
    6. ' :' → logprob: -16.125017166137695
    7. '__:' → logprob: -16.750017166137695
    8. '):
' → logprob: -17.000017166137695
    9. '   ' → logprob: -17.125017166137695
    10. ')' → logprob: -17.250017166137695

Token 304: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.5759568214416504
    2. ' List' → logprob: -0.8259568214416504
    3. '   ' → logprob: -11.950956344604492
    4. '[List' → logprob: -12.825956344604492
    5. 'Dict' → logprob: -13.200956344604492
    6. ')' → logprob: -13.450956344604492
    7. ',List' → logprob: -13.825956344604492
    8. '	List' → logprob: -14.200956344604492
    9. '(List' → logprob: -14.200956344604492
    10. '       ' → logprob: -14.200956344604492

Token 305: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.5120287066092715e-05
    2. '<Task' → logprob: -10.500035285949707
    3. '[int' → logprob: -12.875035285949707
    4. '[
' → logprob: -13.000035285949707
    5. '	Task' → logprob: -14.625035285949707
    6. '(Task' → logprob: -15.000035285949707
    7. ',' → logprob: -15.000035285949707
    8. ' ' → logprob: -15.250035285949707
    9. ' [' → logprob: -15.375035285949707
    10. 'Task' → logprob: -15.625035285949707

Token 306: 'Task' (ID: 5927)
  Prédit: 'Task'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Task' → logprob: 0.0
    2. ' Task' → logprob: -17.75
    3. '	Task' → logprob: -18.625
    4. '[' → logprob: -20.25
    5. '<Task' → logprob: -21.625
    6. 'task' → logprob: -22.125
    7. 'int' → logprob: -22.375
    8. 'Tasks' → logprob: -22.375
    9. '_Task' → logprob: -23.125
    10. '(Task' → logprob: -23.375

Token 307: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014882885850965977
    2. '],' → logprob: -4.389883041381836
    3. ']):' → logprob: -6.764883041381836
    4. ']):
' → logprob: -7.764883041381836
    5. '):' → logprob: -7.889883041381836
    6. '),' → logprob: -8.389883041381836
    7. ']' → logprob: -9.389883041381836
    8. ')' → logprob: -9.764883041381836
    9. '):
' → logprob: -10.764883041381836
    10. '       ' → logprob: -11.639883041381836

Token 308: ' graph' (ID: 7465)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.10375744104385376
    2. 'evaluation' → logprob: -2.603757381439209
    3. 'dependencies' → logprob: -4.728757381439209
    4. 'dep' → logprob: -4.728757381439209
    5. 'dependency' → logprob: -5.728757381439209
    6. ' eval' → logprob: -6.603757381439209
    7. 'graph' → logprob: -7.228757381439209
    8. 'deps' → logprob: -7.478757381439209
    9. ' evaluation' → logprob: -8.228757858276367
    10. 'order' → logprob: -8.728757858276367

Token 309: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012182132340967655
    2. '):' → logprob: -6.751218318939209
    3. '):
' → logprob: -10.00121784210205
    4. '   ' → logprob: -13.75121784210205
    5. ' :' → logprob: -14.62621784210205
    6. '_:' → logprob: -14.75121784210205
    7. ',' → logprob: -15.50121784210205
    8. ')' → logprob: -15.75121784210205
    9. ' ):' → logprob: -15.75121784210205
    10. '}:' → logprob: -16.751218795776367

Token 310: ' Dependency' (ID: 73162)
  Prédit: 'Dependency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dependency' → logprob: -0.020829612389206886
    2. ' Dependency' → logprob: -3.895829677581787
    3. ')' → logprob: -9.520829200744629
    4. '):
' → logprob: -9.645829200744629
    5. '):' → logprob: -10.395829200744629
    6. '       ' → logprob: -10.395829200744629
    7. '   ' → logprob: -10.520829200744629
    8. ':' → logprob: -11.270829200744629
    9. ',' → logprob: -11.520829200744629
    10. ' dependency' → logprob: -11.770829200744629

Token 311: 'Graph' (ID: 9922)
  Prédit: 'Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: 0.0
    2. ')' → logprob: -18.5
    3. 'Graphs' → logprob: -19.0
    4. '.Graph' → logprob: -19.125
    5. ' Graph' → logprob: -19.25
    6. 'graph' → logprob: -19.875
    7. '(Graph' → logprob: -20.125
    8. '_graph' → logprob: -21.0
    9. 'raph' → logprob: -21.375
    10. '_GRAPH' → logprob: -21.375

Token 312: ',
' (ID: 412)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04996578395366669
    2. '):' → logprob: -3.0499658584594727
    3. ',' → logprob: -6.674965858459473
    4. '):
' → logprob: -9.674965858459473
    5. '   ' → logprob: -10.549965858459473
    6. ')' → logprob: -10.924965858459473
    7. '       ' → logprob: -12.299965858459473
    8. '):

' → logprob: -13.299965858459473
    9. ' ):
' → logprob: -13.674965858459473
    10. ''):
' → logprob: -16.049964904785156

Token 313: '                ' (ID: 408)
  Prédit: ' eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' eval' → logprob: -0.9231890439987183
    2. 'eval' → logprob: -0.9231890439987183
    3. 'evaluation' → logprob: -2.173189163208008
    4. ' evaluation' → logprob: -2.548189163208008
    5. 'order' → logprob: -5.923189163208008
    6. '   ' → logprob: -5.923189163208008
    7. '       ' → logprob: -6.298189163208008
    8. 'e' → logprob: -6.548189163208008
    9. ' order' → logprob: -6.673189163208008
    10. ',' → logprob: -7.423189163208008

Token 314: ' initial' (ID: 4871)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.07493135333061218
    2. 'evaluation' → logprob: -2.6999313831329346
    3. 'order' → logprob: -5.6999311447143555
    4. 'priority' → logprob: -6.9499311447143555
    5. ' eval' → logprob: -7.9499311447143555
    6. 'e' → logprob: -8.824931144714355
    7. ' evaluation' → logprob: -9.699931144714355
    8. 'ev' → logprob: -9.949931144714355
    9. 'evalu' → logprob: -11.074931144714355
    10. 'evaluate' → logprob: -11.574931144714355

Token 315: '_eval' (ID: 60420)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.019649358466267586
    2. '_priority' → logprob: -5.269649505615234
    3. '_attributes' → logprob: -5.519649505615234
    4. '_eval' → logprob: -5.769649505615234
    5. '_attrs' → logprob: -6.144649505615234
    6. '_e' → logprob: -6.894649505615234
    7. '_prior' → logprob: -7.269649505615234
    8. '_values' → logprob: -7.644649505615234
    9. '_state' → logprob: -7.769649505615234
    10. 'order' → logprob: -8.144649505615234

Token 316: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.16425412893295288
    2. 'uation' → logprob: -1.9142541885375977
    3. 'u' → logprob: -5.914254188537598
    4. 'ution' → logprob: -7.039254188537598
    5. 'order' → logprob: -8.164254188537598
    6. 'uator' → logprob: -9.414254188537598
    7. 'uate' → logprob: -11.039254188537598
    8. 'utation' → logprob: -11.039254188537598
    9. 'Order' → logprob: -11.539254188537598
    10. '_u' → logprob: -12.414254188537598

Token 317: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022094044834375381
    2. '):' → logprob: -8.500221252441406
    3. ',' → logprob: -11.750221252441406
    4. ')' → logprob: -12.250221252441406
    5. '=None' → logprob: -13.375221252441406
    6. '):
' → logprob: -13.750221252441406
    7. '_:' → logprob: -14.250221252441406
    8. '=' → logprob: -14.625221252441406
    9. ' :' → logprob: -15.250221252441406
    10. '),' → logprob: -15.875221252441406

Token 318: ' Evaluation' (ID: 58680)
  Prédit: 'Evaluation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Evaluation' → logprob: -0.0272639412432909
    2. ' Evaluation' → logprob: -3.652263879776001
    3. 'List' → logprob: -7.15226411819458
    4. ' List' → logprob: -8.902263641357422
    5. ')' → logprob: -10.777263641357422
    6. 'evaluation' → logprob: -11.527263641357422
    7. 'Eval' → logprob: -12.902263641357422
    8. ' evaluation' → logprob: -13.027263641357422
    9. '[' → logprob: -13.152263641357422
    10. 'Evaluator' → logprob: -13.402263641357422

Token 319: 'Order' (ID: 4861)
  Prédit: 'Order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Order' → logprob: -6.704273118884885e-07
    2. 'order' → logprob: -15.375000953674316
    3. ')' → logprob: -15.750000953674316
    4. '[' → logprob: -16.75
    5. '_order' → logprob: -17.0
    6. 'Evaluation' → logprob: -17.125
    7. '_Order' → logprob: -17.375
    8. '   ' → logprob: -17.875
    9. ' Order' → logprob: -18.0
    10. '	Order' → logprob: -18.0

Token 320: ',
' (ID: 412)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16243071854114532
    2. '):' → logprob: -1.912430763244629
    3. ',' → logprob: -6.287430763244629
    4. '   ' → logprob: -8.537430763244629
    5. ')' → logprob: -9.787430763244629
    6. '):
' → logprob: -10.037430763244629
    7. '       ' → logprob: -10.412430763244629
    8. ':' → logprob: -12.162430763244629
    9. '                ' → logprob: -12.287430763244629
    10. '):

' → logprob: -12.787430763244629

Token 321: '                ' (ID: 408)
  Prédit: '                '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                ' → logprob: -0.040549296885728836
    2. 'priority' → logprob: -5.665549278259277
    3. '                 ' → logprob: -5.790549278259277
    4. 'max' → logprob: -5.915549278259277
    5. 'current' → logprob: -6.040549278259277
    6. ' current' → logprob: -6.165549278259277
    7. 'final' → logprob: -6.290549278259277
    8. ' priority' → logprob: -6.415549278259277
    9. '):
' → logprob: -6.415549278259277
    10. 'initial' → logprob: -6.665549278259277

Token 322: ' order' (ID: 2569)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.894007682800293
    2. 'available' → logprob: -2.644007682800293
    3. 'resource' → logprob: -2.894007682800293
    4. 'attribute' → logprob: -2.894007682800293
    5. 'priority' → logprob: -3.144007682800293
    6. 'dependency' → logprob: -3.144007682800293
    7. 'reverse' → logprob: -3.394007682800293
    8. 'current' → logprob: -3.519007682800293
    9. 'final' → logprob: -3.644007682800293
    10. 'allowed' → logprob: -3.644007682800293

Token 323: '_change' (ID: 36082)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3140866756439209
    2. 's' → logprob: -1.564086675643921
    3. '_changes' → logprob: -4.0640869140625
    4. '_stack' → logprob: -4.8140869140625
    5. '_change' → logprob: -5.1890869140625
    6. '_counts' → logprob: -5.5640869140625
    7. '_history' → logprob: -5.6890869140625
    8. '_queue' → logprob: -5.9390869140625
    9. '_count' → logprob: -6.4390869140625
    10. '=' → logprob: -6.4390869140625

Token 324: '_points' (ID: 30070)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3936644494533539
    2. '_points' → logprob: -3.0186643600463867
    3. '_threshold' → logprob: -3.0186643600463867
    4. '_interval' → logprob: -3.5186643600463867
    5. '_inter' → logprob: -3.7686643600463867
    6. '_events' → logprob: -3.8936643600463867
    7. '_callback' → logprob: -3.8936643600463867
    8. '_freq' → logprob: -4.143664360046387
    9. '_times' → logprob: -4.518664360046387
    10. ':' → logprob: -4.643664360046387

Token 325: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005588700296357274
    2. '=' → logprob: -7.750558853149414
    3. '):' → logprob: -9.375558853149414
    4. '=None' → logprob: -10.750558853149414
    5. '=[]' → logprob: -11.875558853149414
    6. ')' → logprob: -12.125558853149414
    7. ',' → logprob: -12.750558853149414
    8. '):
' → logprob: -12.750558853149414
    9. ' :' → logprob: -12.875558853149414
    10. ' =' → logprob: -14.750558853149414

Token 326: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.08815665543079376
    2. 'Dict' → logprob: -2.9631567001342773
    3. ' List' → logprob: -3.4631567001342773
    4. '[List' → logprob: -7.213156700134277
    5. ' Dict' → logprob: -8.213156700134277
    6. '[]' → logprob: -8.838156700134277
    7. '[])' → logprob: -9.588156700134277
    8. '[]):' → logprob: -10.338156700134277
    9. '	List' → logprob: -10.463156700134277
    10. ')' → logprob: -10.713156700134277

Token 327: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42933520674705505
    2. '[int' → logprob: -1.0543352365493774
    3. '[List' → logprob: -7.429335117340088
    4. '[Int' → logprob: -10.804335594177246
    5. '[
' → logprob: -11.554335594177246
    6. ':' → logprob: -12.554335594177246
    7. 'int' → logprob: -13.429335594177246
    8. '[Index' → logprob: -13.804335594177246
    9. '   ' → logprob: -14.179335594177246
    10. '):' → logprob: -14.179335594177246

Token 328: 'Tuple' (ID: 40048)
  Prédit: 'Evaluation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Evaluation' → logprob: -0.5461578369140625
    2. 'Tuple' → logprob: -1.0461578369140625
    3. 'int' → logprob: -2.6711578369140625
    4. '[int' → logprob: -8.921157836914062
    5. 'List' → logprob: -9.671157836914062
    6. 'evaluation' → logprob: -10.171157836914062
    7. '[' → logprob: -10.546157836914062
    8. 'Int' → logprob: -10.671157836914062
    9. ' Tuple' → logprob: -11.296157836914062
    10. 'Eval' → logprob: -11.421157836914062

Token 329: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.5597102396423e-05
    2. 'int' → logprob: -10.250035285949707
    3. ',int' → logprob: -15.750035285949707
    4. '[' → logprob: -17.000036239624023
    5. '   ' → logprob: -17.375036239624023
    6. '[List' → logprob: -17.625036239624023
    7. ']int' → logprob: -17.750036239624023
    8. '[str' → logprob: -17.875036239624023
    9. '(int' → logprob: -18.250036239624023
    10. ')' → logprob: -18.500036239624023

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002067588793579489
    2. ',int' → logprob: -8.62520694732666
    3. ' ,' → logprob: -10.75020694732666
    4. ',
' → logprob: -13.12520694732666
    5. '[int' → logprob: -13.75020694732666
    6. 'int' → logprob: -13.87520694732666
    7. ',List' → logprob: -14.12520694732666
    8. ']])' → logprob: -15.75020694732666
    9. ',

' → logprob: -16.000205993652344
    10. ']],' → logprob: -16.000205993652344

Token 331: ' Evaluation' (ID: 58680)
  Prédit: 'Evaluation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Evaluation' → logprob: -0.0026470019947737455
    2. 'List' → logprob: -6.0026469230651855
    3. 'int' → logprob: -9.002647399902344
    4. ' Evaluation' → logprob: -10.127647399902344
    5. 'evaluation' → logprob: -13.002647399902344
    6. 'Eval' → logprob: -13.127647399902344
    7. 'Any' → logprob: -13.877647399902344
    8. 'str' → logprob: -14.627647399902344
    9. ' List' → logprob: -14.877647399902344
    10. 'Order' → logprob: -15.252647399902344

Token 332: 'Order' (ID: 4861)
  Prédit: 'Order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Order' → logprob: -4.320199877838604e-07
    2. 'Evaluation' → logprob: -15.5
    3. '_order' → logprob: -17.5
    4. '	Order' → logprob: -17.5
    5. ' Order' → logprob: -17.875
    6. 'order' → logprob: -18.125
    7. ']' → logprob: -18.5
    8. '_ORDER' → logprob: -18.5
    9. 'Ordering' → logprob: -18.75
    10. '[' → logprob: -18.75

Token 333: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.047570765018463135
    2. ']])' → logprob: -3.4225707054138184
    3. ']],' → logprob: -4.297570705413818
    4. ']],
' → logprob: -8.797571182250977
    5. ']' → logprob: -10.297571182250977
    6. ',' → logprob: -11.797571182250977
    7. ')]' → logprob: -11.922571182250977
    8. ']]:
' → logprob: -12.047571182250977
    9. ']]]' → logprob: -12.297571182250977
    10. ']):' → logprob: -12.422571182250977

Token 334: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12892454862594604
    2. '):
' → logprob: -2.128924608230591
    3. ')' → logprob: -6.628924369812012
    4. '   ' → logprob: -7.753924369812012
    5. ',' → logprob: -8.878924369812012
    6. '       ' → logprob: -10.503924369812012
    7. '):
' → logprob: -10.753924369812012
    8. ']):' → logprob: -11.003924369812012
    9. ':' → logprob: -11.128924369812012
    10. ' ):' → logprob: -11.378924369812012

Token 335: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00040302498382516205
    2. 'self' → logprob: -8.25040340423584
    3. ')' → logprob: -10.50040340423584
    4. '):' → logprob: -10.62540340423584
    5. '):
' → logprob: -10.87540340423584
    6. ',' → logprob: -10.87540340423584
    7. ':' → logprob: -11.00040340423584
    8. '   ' → logprob: -11.37540340423584
    9. ' self' → logprob: -11.37540340423584
    10. '
' → logprob: -12.37540340423584

Token 336: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03597813844680786
    2. '       ' → logprob: -4.035978317260742
    3. ' self' → logprob: -4.035978317260742
    4. '   ' → logprob: -13.535978317260742
    5. 'def' → logprob: -15.785978317260742
    6. '(self' → logprob: -15.910978317260742
    7. '	self' → logprob: -16.160978317260742
    8. ' ' → logprob: -17.910978317260742
    9. '#' → logprob: -18.535978317260742
    10. 'tasks' → logprob: -18.910978317260742

Token 337: '.tasks' (ID: 57793)
  Prédit: '.tasks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tasks' → logprob: -0.0008198728901334107
    2. ' .' → logprob: -7.625819683074951
    3. '.' → logprob: -8.25082015991211
    4. 'tasks' → logprob: -10.37582015991211
    5. ' tasks' → logprob: -10.50082015991211
    6. '.t' → logprob: -11.75082015991211
    7. '.task' → logprob: -13.12582015991211
    8. '   ' → logprob: -14.62582015991211
    9. '._' → logprob: -14.75082015991211
    10. '.Tasks' → logprob: -15.50082015991211

Token 338: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3876955807209015
    2. '=' → logprob: -1.137695550918579
    3. ':' → logprob: -7.262695789337158
    4. '   ' → logprob: -9.8876953125
    5. '_dict' → logprob: -11.0126953125
    6. '_map' → logprob: -11.1376953125
    7. '_id' → logprob: -11.2626953125
    8. ',' → logprob: -11.6376953125
    9. '_by' → logprob: -12.0126953125
    10. ')' → logprob: -12.6376953125

Token 339: ' tasks' (ID: 13638)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.2367643266916275
    2. 'tasks' → logprob: -1.6117643117904663
    3. ' {' → logprob: -4.986764430999756
    4. ' tasks' → logprob: -5.986764430999756
    5. '[' → logprob: -6.361764430999756
    6. '[t' → logprob: -9.111763954162598
    7. ' [' → logprob: -10.111763954162598
    8. '{id' → logprob: -10.486763954162598
    9. '(tasks' → logprob: -10.736763954162598
    10. '   ' → logprob: -11.486763954162598

Token 340: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07434987276792526
    2. '<|end|>' → logprob: -3.324349880218506
    3. '
' → logprob: -3.449349880218506
    4. ',' → logprob: -6.074349880218506
    5. '<|end|>' → logprob: -7.449349880218506
    6. '        
' → logprob: -8.324349403381348
    7. 'self' → logprob: -8.449349403381348
    8. '[self' → logprob: -9.199349403381348
    9. '[' → logprob: -9.199349403381348
    10. ')' → logprob: -9.449349403381348

Token 341: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008651299867779016
    2. '
' → logprob: -7.6258649826049805
    3. '<|end|>' → logprob: -8.25086498260498
    4. 'self' → logprob: -9.87586498260498
    5. '        
' → logprob: -10.50086498260498
    6. ',' → logprob: -11.12586498260498
    7. '[self' → logprob: -12.25086498260498
    8. '[' → logprob: -12.37586498260498
    9. ' self' → logprob: -12.62586498260498
    10. ',
' → logprob: -12.87586498260498

Token 342: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -7.016616291366518e-05
    2. '       ' → logprob: -9.750070571899414
    3. 'task' → logprob: -11.875070571899414
    4. ' self' → logprob: -12.375070571899414
    5. 'graph' → logprob: -14.625070571899414
    6. '   ' → logprob: -16.500070571899414
    7. 'n' → logprob: -16.875070571899414
    8. 'tasks' → logprob: -17.125070571899414
    9. 'for' → logprob: -17.500070571899414
    10. '{' → logprob: -17.875070571899414

Token 343: '.graph' (ID: 18104)
  Prédit: '.tasks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tasks' → logprob: -0.29548710584640503
    2. '.task' → logprob: -2.04548716545105
    3. '.id' → logprob: -2.54548716545105
    4. '_tasks' → logprob: -4.420486927032471
    5. '.graph' → logprob: -4.545486927032471
    6. ' =' → logprob: -5.045486927032471
    7. '.ids' → logprob: -5.545486927032471
    8. '._' → logprob: -5.795486927032471
    9. 'tasks' → logprob: -5.795486927032471
    10. '_id' → logprob: -6.295486927032471

Token 344: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3488396108150482
    2. ' =' → logprob: -1.2238396406173706
    3. '   ' → logprob: -8.22383975982666
    4. '       ' → logprob: -10.09883975982666
    5. '.' → logprob: -10.59883975982666
    6. ' ' → logprob: -11.34883975982666
    7. ',' → logprob: -11.59883975982666
    8. '=self' → logprob: -11.84883975982666
    9. '    ' → logprob: -12.09883975982666
    10. ':' → logprob: -12.47383975982666

Token 345: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.029752686619758606
    2. ' graph' → logprob: -3.529752731323242
    3. '	graph' → logprob: -13.404752731323242
    4. '(graph' → logprob: -14.404752731323242
    5. '.graph' → logprob: -17.279752731323242
    6. '_graph' → logprob: -17.529752731323242
    7. 'Graph' → logprob: -17.529752731323242
    8. '
' → logprob: -18.029752731323242
    9. 'raph' → logprob: -18.279752731323242
    10. 'graphql' → logprob: -18.529752731323242

Token 346: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002870801545213908
    2. '<|end|>' → logprob: -8.875287055969238
    3. '
' → logprob: -9.625287055969238
    4. 'self' → logprob: -9.875287055969238
    5. ',' → logprob: -10.625287055969238
    6. '        
' → logprob: -13.375287055969238
    7. '      ' → logprob: -14.125287055969238
    8. '   ' → logprob: -14.500287055969238
    9. ' self' → logprob: -14.750287055969238
    10. ',
' → logprob: -14.750287055969238

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.253713218029588e-05
    2. 'self' → logprob: -9.750062942504883
    3. '
' → logprob: -12.875062942504883
    4. ' self' → logprob: -14.625062942504883
    5. '        
' → logprob: -15.000062942504883
    6. '   ' → logprob: -15.375062942504883
    7. ',' → logprob: -15.625062942504883
    8. '      ' → logprob: -15.750062942504883
    9. '	' → logprob: -16.000062942504883
    10. '<|end|>' → logprob: -16.000062942504883

Token 348: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.664371848164592e-05
    2. '       ' → logprob: -11.125016212463379
    3. ' self' → logprob: -13.250016212463379
    4. '
' → logprob: -17.250017166137695
    5. 'import' → logprob: -17.250017166137695
    6. '   ' → logprob: -17.875017166137695
    7. '        
' → logprob: -18.500017166137695
    8. 'order' → logprob: -18.500017166137695
    9. '	self' → logprob: -19.250017166137695
    10. 'from' → logprob: -19.250017166137695

Token 349: '.eval' (ID: 67829)
  Prédit: '.initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initial' → logprob: -0.6744799017906189
    2. '.current' → logprob: -1.5494799613952637
    3. '.order' → logprob: -1.9244799613952637
    4. '.task' → logprob: -2.5494799613952637
    5. '.tasks' → logprob: -3.9244799613952637
    6. '.eval' → logprob: -3.9244799613952637
    7. '.' → logprob: -6.049479961395264
    8. '.execution' → logprob: -6.299479961395264
    9. '.process' → logprob: -6.424479961395264
    10. '.e' → logprob: -6.799479961395264

Token 350: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -1.27099974633893e-05
    2. 'ution' → logprob: -11.625012397766113
    3. '_orders' → logprob: -13.375012397766113
    4. 'order' → logprob: -14.375012397766113
    5. 'uation' → logprob: -14.500012397766113
    6. '_change' → logprob: -14.625012397766113
    7. '_' → logprob: -15.625012397766113
    8. 'er' → logprob: -15.875012397766113
    9. 'u' → logprob: -16.62501335144043
    10. '_ORDER' → logprob: -16.87501335144043

Token 351: '_changes' (ID: 119201)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1271739900112152
    2. ' =' → logprob: -2.127173900604248
    3. 's' → logprob: -8.877174377441406
    4. '   ' → logprob: -10.502174377441406
    5. '_change' → logprob: -10.627174377441406
    6. '_' → logprob: -11.002174377441406
    7. '_points' → logprob: -11.127174377441406
    8. '_changes' → logprob: -11.377174377441406
    9. '=self' → logprob: -12.252174377441406
    10. '=_' → logprob: -13.002174377441406

Token 352: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17976373434066772
    2. ' =' → logprob: -1.8047637939453125
    3. '=[]' → logprob: -11.679763793945312
    4. ':' → logprob: -11.804763793945312
    5. ',' → logprob: -13.804763793945312
    6. '   ' → logprob: -14.429763793945312
    7. ')' → logprob: -15.054763793945312
    8. '.append' → logprob: -15.179763793945312
    9. ' ' → logprob: -15.929763793945312
    10. '<|end|>' → logprob: -15.929763793945312

Token 353: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.02536884695291519
    2. ' order' → logprob: -4.275368690490723
    3. 'sorted' → logprob: -4.525368690490723
    4. ' sorted' → logprob: -9.275368690490723
    5. '[(' → logprob: -9.275368690490723
    6. '[]' → logprob: -10.025368690490723
    7. '[' → logprob: -10.775368690490723
    8. '[]
' → logprob: -11.025368690490723
    9. 'ordered' → logprob: -11.400368690490723
    10. '{' → logprob: -11.650368690490723

Token 354: '_change' (ID: 36082)
  Prédit: '_change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -2.4034345187828876e-05
    2. '_changes' → logprob: -11.12502384185791
    3. 'change' → logprob: -12.12502384185791
    4. '_points' → logprob: -12.75002384185791
    5. 'Change' → logprob: -14.87502384185791
    6. '_' → logprob: -15.37502384185791
    7. '_CHANGE' → logprob: -16.500024795532227
    8. 'points' → logprob: -16.875024795532227
    9. '   ' → logprob: -16.875024795532227
    10. '_order' → logprob: -17.250024795532227

Token 355: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.011442238464951515
    2. 'points' → logprob: -4.511442184448242
    3. 's' → logprob: -8.136442184448242
    4. 'oints' → logprob: -10.011442184448242
    5. 'Points' → logprob: -10.136442184448242
    6. '   ' → logprob: -13.136442184448242
    7. '_pts' → logprob: -13.136442184448242
    8. 'int' → logprob: -13.386442184448242
    9. 'nts' → logprob: -13.636442184448242
    10. 'ed' → logprob: -13.636442184448242

Token 356: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016234104987233877
    2. '
' → logprob: -6.501623630523682
    3. 'self' → logprob: -10.001623153686523
    4. '   ' → logprob: -10.251623153686523
    5. '        
' → logprob: -11.001623153686523
    6. ',' → logprob: -11.251623153686523
    7. ' self' → logprob: -13.001623153686523
    8. ' 
' → logprob: -13.626623153686523
    9. '      ' → logprob: -13.751623153686523
    10. 'def' → logprob: -13.876623153686523

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000263481488218531
    2. '
' → logprob: -9.125263214111328
    3. '   ' → logprob: -9.250263214111328
    4. 'self' → logprob: -10.375263214111328
    5. '<|end|>' → logprob: -11.000263214111328
    6. ' self' → logprob: -12.875263214111328
    7. ',' → logprob: -12.875263214111328
    8. ')' → logprob: -13.625263214111328
    9. '        
' → logprob: -13.875263214111328
    10. 'def' → logprob: -13.875263214111328

Token 358: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.010974599979817867
    2. '       ' → logprob: -4.635974407196045
    3. 'current' → logprob: -7.010974407196045
    4. '   ' → logprob: -9.135974884033203
    5. 'def' → logprob: -9.135974884033203
    6. ' self' → logprob: -10.385974884033203
    7. '#' → logprob: -10.635974884033203
    8. 'index' → logprob: -10.885974884033203
    9. 'for' → logprob: -11.260974884033203
    10. 'curr' → logprob: -12.885974884033203

Token 359: '.eval' (ID: 67829)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.04206422343850136
    2. '.eval' → logprob: -3.5420641899108887
    3. 'current' → logprob: -5.292064189910889
    4. '.curr' → logprob: -5.792064189910889
    5. '.task' → logprob: -6.667064189910889
    6. '.cur' → logprob: -7.042064189910889
    7. '.next' → logprob: -7.792064189910889
    8. '.tasks' → logprob: -7.792064189910889
    9. 'eval' → logprob: -8.542064666748047
    10. '.order' → logprob: -8.667064666748047

Token 360: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -4.4060561776859686e-05
    2. 'order' → logprob: -10.500043869018555
    3. '_orders' → logprob: -12.125043869018555
    4. '_index' → logprob: -12.375043869018555
    5. '_current' → logprob: -12.625043869018555
    6. '_change' → logprob: -14.250043869018555
    7. '   ' → logprob: -14.250043869018555
    8. 'Order' → logprob: -14.875043869018555
    9. '       ' → logprob: -15.000043869018555
    10. '_' → logprob: -15.250043869018555

Token 361: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760749578475952
    2. ' =' → logprob: -0.8260749578475952
    3. 's' → logprob: -10.076074600219727
    4. '_index' → logprob: -10.076074600219727
    5. '_idx' → logprob: -10.451074600219727
    6. '   ' → logprob: -11.826074600219727
    7. '_' → logprob: -12.576074600219727
    8. 'index' → logprob: -13.076074600219727
    9. '=current' → logprob: -13.576074600219727
    10. '_changes' → logprob: -13.701074600219727

Token 362: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.0003802680876106024
    2. ' initial' → logprob: -7.875380039215088
    3. 'order' → logprob: -16.75037956237793
    4. '	initial' → logprob: -17.12537956237793
    5. 'self' → logprob: -17.37537956237793
    6. 'Initial' → logprob: -17.37537956237793
    7. '
' → logprob: -17.37537956237793
    8. '(initial' → logprob: -17.75037956237793
    9. '   ' → logprob: -19.00037956237793
    10. '0' → logprob: -19.25037956237793

Token 363: '_eval' (ID: 60420)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.5760172605514526
    2. '_eval' → logprob: -0.8260172605514526
    3. '_e' → logprob: -10.076017379760742
    4. 'eval' → logprob: -10.451017379760742
    5. 'Eval' → logprob: -13.076017379760742
    6. 'order' → logprob: -13.576017379760742
    7. 'Order' → logprob: -13.701017379760742
    8. '_' → logprob: -14.576017379760742
    9. '.eval' → logprob: -14.701017379760742
    10. '=_' → logprob: -14.951017379760742

Token 364: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.05911482498049736
    2. 'Order' → logprob: -3.059114933013916
    3. 'order' → logprob: -4.559114933013916
    4. '_ORDER' → logprob: -15.434114456176758
    5. ' order' → logprob: -15.559114456176758
    6. '_Order' → logprob: -16.184114456176758
    7. 'ORDER' → logprob: -16.309114456176758
    8. '-order' → logprob: -16.559114456176758
    9. 'ord' → logprob: -16.684114456176758
    10. ' Order' → logprob: -17.559114456176758

Token 365: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005749725736677647
    2. '
' → logprob: -5.255749702453613
    3. '   ' → logprob: -8.130749702453613
    4. 'self' → logprob: -9.005749702453613
    5. 'def' → logprob: -10.505749702453613
    6. ',' → logprob: -10.630749702453613
    7. '<|end|>' → logprob: -10.755749702453613
    8. '        
' → logprob: -11.755749702453613
    9. ' self' → logprob: -12.005749702453613
    10. ',
' → logprob: -12.755749702453613

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014373396523296833
    2. '   ' → logprob: -4.764373302459717
    3. 'def' → logprob: -5.389373302459717
    4. 'self' → logprob: -7.514373302459717
    5. '<|end|>' → logprob: -8.264373779296875
    6. '
' → logprob: -9.139373779296875
    7. ',' → logprob: -9.514373779296875
    8. ')' → logprob: -10.014373779296875
    9. '        
' → logprob: -10.014373779296875
    10. ' def' → logprob: -10.639373779296875

Token 367: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.5107177862082608e-05
    2. '#' (adapté à ' #') → logprob: -10.875024795532227
    3. '       ' → logprob: -12.500024795532227
    4. 'def' → logprob: -13.375024795532227
    5. 'for' → logprob: -14.500024795532227
    6. ' self' → logprob: -15.625024795532227
    7. '   ' → logprob: -15.625024795532227
    8. '        
' → logprob: -18.000024795532227
    9. '
' → logprob: -18.125024795532227
    10. '	self' → logprob: -18.250024795532227

Token 368: ' Index' (ID: 14580)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016313401283696294
    2. 'task' → logprob: -10.250163078308105
    3. '#' → logprob: -10.375163078308105
    4. '   ' → logprob: -10.625163078308105
    5. 'def' → logprob: -10.875163078308105
    6. 'id' → logprob: -11.125163078308105
    7. '       ' → logprob: -11.500163078308105
    8. ' self' → logprob: -11.500163078308105
    9. 'n' → logprob: -11.875163078308105
    10. 'current' → logprob: -12.500163078308105

Token 369: ' tasks' (ID: 13638)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.6671735048294067
    2. ' =' → logprob: -1.4171735048294067
    3. '_by' → logprob: -1.9171735048294067
    4. '_tasks' → logprob: -3.417173385620117
    5. 'map' → logprob: -4.167173385620117
    6. 'ed' → logprob: -4.542173385620117
    7. 'es' → logprob: -4.667173385620117
    8. '_task' → logprob: -5.292173385620117
    9. ' map' → logprob: -5.792173385620117
    10. 'self' → logprob: -5.792173385620117

Token 370: ' by' (ID: 656)
  Prédit: '_by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -0.01017556618899107
    2. 'by' → logprob: -5.135175704956055
    3. ' =' → logprob: -6.260175704956055
    4. ' by' → logprob: -7.260175704956055
    5. 'ed' → logprob: -7.385175704956055
    6. '=' → logprob: -7.885175704956055
    7. 'd' → logprob: -8.385175704956055
    8. ':' → logprob: -8.635175704956055
    9. 'self' → logprob: -9.385175704956055
    10. 'By' → logprob: -9.760175704956055

Token 371: ' id' (ID: 1211)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.021122736856341362
    2. 'task' → logprob: -4.646122932434082
    3. ' id' → logprob: -5.146122932434082
    4. 'lambda' → logprob: -5.396122932434082
    5. ' task' → logprob: -7.896122932434082
    6. 'their' → logprob: -8.771122932434082
    7. ' lambda' → logprob: -9.146122932434082
    8. '[id' → logprob: -9.271122932434082
    9. '[' → logprob: -9.521122932434082
    10. ' their' → logprob: -10.146122932434082

Token 372: ' for' (ID: 395)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7075604796409607
    2. '       ' → logprob: -1.5825605392456055
    3. ' =' → logprob: -1.7075605392456055
    4. '
' → logprob: -2.7075605392456055
    5. ' self' → logprob: -3.9575605392456055
    6. ':' → logprob: -3.9575605392456055
    7. '[self' → logprob: -5.3325605392456055
    8. '=' → logprob: -5.5825605392456055
    9. '=self' → logprob: -6.3325605392456055
    10. ',' → logprob: -6.9575605392456055

Token 373: ' quick' (ID: 4853)
  Prédit: 'quick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quick' → logprob: -0.6346627473831177
    2. 'fast' → logprob: -1.2596627473831177
    3. ' quick' → logprob: -1.8846627473831177
    4. 'self' → logprob: -4.134662628173828
    5. ' fast' → logprob: -4.634662628173828
    6. 'direct' → logprob: -6.259662628173828
    7. ' faster' → logprob: -6.884662628173828
    8. ' easy' → logprob: -7.009662628173828
    9. 'easy' → logprob: -7.009662628173828
    10. 'O' → logprob: -7.134662628173828

Token 374: ' access' (ID: 3158)
  Prédit: ' access'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' access' → logprob: -0.014590875245630741
    2. 'access' → logprob: -4.264590740203857
    3. '_access' → logprob: -8.389591217041016
    4. ' lookup' → logprob: -9.139591217041016
    5. 'lookup' → logprob: -10.014591217041016
    6. '[]' → logprob: -10.889591217041016
    7. '[' → logprob: -11.014591217041016
    8. '_lookup' → logprob: -11.889591217041016
    9. '-access' → logprob: -13.389591217041016
    10. '_' → logprob: -14.514591217041016

Token 375: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12112604826688766
    2. 'self' → logprob: -2.3711259365081787
    3. '
' → logprob: -4.371126174926758
    4. ' self' → logprob: -5.496126174926758
    5. '<|end|>' → logprob: -6.121126174926758
    6. ',' → logprob: -7.246126174926758
    7. '        
' → logprob: -8.246126174926758
    8. '{' → logprob: -8.621126174926758
    9. '[self' → logprob: -8.871126174926758
    10. ':' → logprob: -9.371126174926758

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1860235333442688
    2. 'self' → logprob: -1.811023473739624
    3. ' self' → logprob: -5.311023712158203
    4. '
' → logprob: -7.436023712158203
    5. '<|end|>' → logprob: -8.061023712158203
    6. '[self' → logprob: -8.811023712158203
    7. '{' → logprob: -9.686023712158203
    8. '   ' → logprob: -10.061023712158203
    9. '        
' → logprob: -10.186023712158203
    10. ',' → logprob: -10.311023712158203

Token 377: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002905443077906966
    2. ' self' → logprob: -6.002905368804932
    3. '       ' → logprob: -7.752905368804932
    4. '   ' → logprob: -16.377904891967773
    5. '	self' → logprob: -17.127904891967773
    6. '[self' → logprob: -17.127904891967773
    7. '(self' → logprob: -18.752904891967773
    8. ',self' → logprob: -19.377904891967773
    9. ' ' → logprob: -19.502904891967773
    10. '        
' → logprob: -20.002904891967773

Token 378: '.task' (ID: 27230)
  Prédit: '.task'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.task' → logprob: -0.21951784193515778
    2. '.tasks' → logprob: -1.7195178270339966
    3. '._' → logprob: -4.719517707824707
    4. 'task' → logprob: -5.844517707824707
    5. '.id' → logprob: -6.094517707824707
    6. '_task' → logprob: -6.344517707824707
    7. 'tasks' → logprob: -6.469517707824707
    8. '_tasks' → logprob: -7.969517707824707
    9. 'id' → logprob: -9.094517707824707
    10. '_id' → logprob: -10.344517707824707

Token 379: '_map' (ID: 11824)
  Prédit: '_by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_by' → logprob: -0.33067643642425537
    2. 's' → logprob: -1.3306764364242554
    3. '_map' → logprob: -4.330676555633545
    4. '_dict' → logprob: -6.080676555633545
    5. '_id' → logprob: -6.705676555633545
    6. 'by' → logprob: -8.455676078796387
    7. '_index' → logprob: -8.580676078796387
    8. 'id' → logprob: -9.080676078796387
    9. '_idx' → logprob: -11.205676078796387
    10. 'dict' → logprob: -11.205676078796387

Token 380: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04859338700771332
    2. ' =' → logprob: -3.048593282699585
    3. ':' → logprob: -12.423593521118164
    4. '[' → logprob: -14.048593521118164
    5. '={' → logprob: -14.298593521118164
    6. '={}' → logprob: -15.048593521118164
    7. ' ={' → logprob: -16.423593521118164
    8. '{' → logprob: -16.673593521118164
    9. '   ' → logprob: -16.923593521118164
    10. ' ' → logprob: -17.423593521118164

Token 381: ' Dict' (ID: 55179)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.00043138445471413434
    2. ' Dict' → logprob: -7.750431537628174
    3. 'dict' → logprob: -14.375431060791016
    4. '.Dict' → logprob: -16.625431060791016
    5. 'List' → logprob: -17.250431060791016
    6. '   ' → logprob: -18.375431060791016
    7. '_dict' → logprob: -19.125431060791016
    8. ' dict' → logprob: -20.375431060791016
    9. '[' → logprob: -20.625431060791016
    10. 'Dic' → logprob: -21.125431060791016

Token 382: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.2729995988775045e-06
    2. 'int' → logprob: -12.250006675720215
    3. '=int' → logprob: -13.875006675720215
    4. '<int' → logprob: -15.000006675720215
    5. '(int' → logprob: -16.8750057220459
    6. ' =' → logprob: -17.2500057220459
    7. '[in' → logprob: -17.6250057220459
    8. '[Int' → logprob: -18.2500057220459
    9. '[' → logprob: -18.5000057220459
    10. '[i' → logprob: -18.5000057220459

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2127087504486553e-05
    2. '[' → logprob: -11.125021934509277
    3. ' ,' → logprob: -12.375021934509277
    4. 'Task' → logprob: -13.875021934509277
    5. ']' → logprob: -14.125021934509277
    6. '[int' → logprob: -14.375021934509277
    7. ',int' → logprob: -14.750021934509277
    8. ',List' → logprob: -16.250022888183594
    9. ',
' → logprob: -16.500022888183594
    10. 'int' → logprob: -16.625022888183594

Token 384: ' Task' (ID: 10148)
  Prédit: 'Task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Task' → logprob: -0.00012368128227535635
    2. ' Task' → logprob: -9.000123977661133
    3. '	Task' → logprob: -15.125123977661133
    4. 'task' → logprob: -18.750123977661133
    5. '   ' → logprob: -19.000123977661133
    6. ']' → logprob: -19.625123977661133
    7. ' ' → logprob: -19.625123977661133
    8. '_Task' → logprob: -19.750123977661133
    9. '.Task' → logprob: -19.875123977661133
    10. '<Task' → logprob: -20.250123977661133

Token 385: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.7432603272027336e-06
    2. ']=' → logprob: -13.625001907348633
    3. ' ]' → logprob: -15.250001907348633
    4. '']' → logprob: -16.125001907348633
    5. '   ' → logprob: -17.500001907348633
    6. ']={' → logprob: -17.625001907348633
    7. '`]' → logprob: -18.250001907348633
    8. ']
' → logprob: -18.250001907348633
    9. '"]' → logprob: -18.375001907348633
    10. ')' → logprob: -19.000001907348633

Token 386: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048408225178719
    2. ' =' → logprob: -4.511048316955566
    3. '={}' → logprob: -14.886048316955566
    4. '={' → logprob: -15.261048316955566
    5. ']' → logprob: -17.261049270629883
    6. '{' → logprob: -17.761049270629883
    7. ')' → logprob: -17.886049270629883
    8. ' ={' → logprob: -18.386049270629883
    9. '[' → logprob: -18.636049270629883
    10. '={}
' → logprob: -18.886049270629883

Token 387: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0018886608304455876
    2. ' {' → logprob: -6.751888751983643
    3. '{id' → logprob: -7.251888751983643
    4. '{x' → logprob: -12.251888275146484
    5. '{i' → logprob: -12.501888275146484
    6. '{}' → logprob: -14.751888275146484
    7. '{}
' → logprob: -15.626888275146484
    8. '{k' → logprob: -16.376888275146484
    9. '{name' → logprob: -16.501888275146484
    10. '{s' → logprob: -17.251888275146484

Token 388: 't' (ID: 83)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'task' → logprob: -0.005293288733810186
    2. 't' → logprob: -5.255293369293213
    3. ' task' → logprob: -9.755292892456055
    4. ' t' → logprob: -13.505292892456055
    5. '   ' → logprob: -15.630292892456055
    6. '	task' → logprob: -17.380292892456055
    7. 'tsk' → logprob: -18.255292892456055
    8. '(task' → logprob: -18.505292892456055
    9. '       ' → logprob: -19.130292892456055
    10. 'tasks' → logprob: -19.630292892456055

Token 389: '.id' (ID: 2858)
  Prédit: '.id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.id' → logprob: -9.849109119386412e-06
    2. 't' → logprob: -12.750009536743164
    3. 'ask' → logprob: -12.750009536743164
    4. '.t' → logprob: -12.875009536743164
    5. 'id' → logprob: -15.250009536743164
    6. ' .' → logprob: -15.375009536743164
    7. '(t' → logprob: -15.625009536743164
    8. '.' → logprob: -15.750009536743164
    9. '.task' → logprob: -16.000009536743164
    10. 'task' → logprob: -16.500009536743164

Token 390: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018163522705435753
    2. ':t' → logprob: -4.018163681030273
    3. ' :' → logprob: -11.268163681030273
    4. 't' → logprob: -14.643163681030273
    5. '   ' → logprob: -15.393163681030273
    6. '       ' → logprob: -16.893163681030273
    7. ' t' → logprob: -17.143163681030273
    8. '	t' → logprob: -17.393163681030273
    9. '(t' → logprob: -17.518163681030273
    10. '=t' → logprob: -17.893163681030273

Token 391: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.011048054322600365
    2. ' t' → logprob: -4.511047840118408
    3. '	t' → logprob: -15.636048316955566
    4. '`t' → logprob: -16.88604736328125
    5. '   ' → logprob: -17.01104736328125
    6. ' ' → logprob: -18.26104736328125
    7. 'task' → logprob: -18.76104736328125
    8. ')t' → logprob: -19.13604736328125
    9. ' ' → logprob: -19.76104736328125
    10. '(t' → logprob: -20.01104736328125

Token 392: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3132762610912323
    2. 'for' → logprob: -1.3132762908935547
    3. ':' → logprob: -11.938276290893555
    4. '	for' → logprob: -12.438276290893555
    5. ' ' → logprob: -13.313276290893555
    6. '   ' → logprob: -14.063276290893555
    7. 't' → logprob: -14.688276290893555
    8. '}' → logprob: -15.063276290893555
    9. '
' → logprob: -15.063276290893555
    10. ')' → logprob: -15.688276290893555

Token 393: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0007585270795971155
    2. ' t' → logprob: -7.250758647918701
    3. 'tasks' → logprob: -10.250758171081543
    4. 'self' → logprob: -12.125758171081543
    5. 'task' → logprob: -12.500758171081543
    6. '	t' → logprob: -13.625758171081543
    7. ' tasks' → logprob: -13.875758171081543
    8. ' ' → logprob: -15.000758171081543
    9. '   ' → logprob: -15.188258171081543
    10. '
' → logprob: -15.688258171081543

Token 394: ' in' (ID: 306)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.021085267886519432
    2. ' t' → logprob: -4.271085262298584
    3. 'self' → logprob: -6.271085262298584
    4. 'tasks' → logprob: -6.396085262298584
    5. ' in' → logprob: -6.521085262298584
    6. ' tasks' → logprob: -6.896085262298584
    7. ' self' → logprob: -7.396085262298584
    8. 'in' → logprob: -9.396085739135742
    9. 'asks' → logprob: -9.771085739135742
    10. '<|end|>' → logprob: -10.521085739135742

Token 395: ' tasks' (ID: 13638)
  Prédit: 'tasks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tasks' → logprob: -0.001160696498118341
    2. 'self' → logprob: -6.876160621643066
    3. ' tasks' → logprob: -9.001160621643066
    4. 't' → logprob: -13.876160621643066
    5. '(tasks' → logprob: -13.876160621643066
    6. 'task' → logprob: -14.251160621643066
    7. ' self' → logprob: -14.501160621643066
    8. '   ' → logprob: -14.626160621643066
    9. '.tasks' → logprob: -14.876160621643066
    10. '
' → logprob: -15.876160621643066

Token 396: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -5.88418151892256e-05
    2. '       ' → logprob: -10.125059127807617
    3. '}
' → logprob: -11.625059127807617
    4. ' }' → logprob: -11.625059127807617
    5. '   ' → logprob: -14.375059127807617
    6. ',' → logprob: -15.375059127807617
    7. '}

' → logprob: -17.500059127807617
    8. '
' → logprob: -17.750059127807617
    9. ')' → logprob: -18.125059127807617
    10. '})' → logprob: -18.500059127807617

Token 397: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009265808388590813
    2. 'self' → logprob: -5.009265899658203
    3. 'def' → logprob: -6.634265899658203
    4. '   ' → logprob: -7.134265899658203
    5. '
' → logprob: -8.134265899658203
    6. ' self' → logprob: -9.759265899658203
    7. '<|end|>' → logprob: -9.884265899658203
    8. '        
' → logprob: -11.134265899658203
    9. '    
' → logprob: -12.759265899658203
    10. ')' → logprob: -12.884265899658203

Token 398: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001633762731216848
    2. '#' (adapté à ' #') → logprob: -7.376633644104004
    3. '       ' → logprob: -7.376633644104004
    4. 'def' → logprob: -8.001633644104004
    5. '   ' → logprob: -10.751633644104004
    6. ' self' → logprob: -10.876633644104004
    7. 'for' → logprob: -12.626633644104004
    8. '        
' → logprob: -14.251633644104004
    9. '
' → logprob: -14.751633644104004
    10. '	self' → logprob: -15.376633644104004

Token 399: ' Current' (ID: 14536)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005269214976578951
    2. 'def' → logprob: -5.7552690505981445
    3. '#' → logprob: -7.0052690505981445
    4. 'import' → logprob: -7.6302690505981445
    5. 'heap' → logprob: -8.505269050598145
    6. '   ' → logprob: -8.630269050598145
    7. 'from' → logprob: -9.255269050598145
    8. '       ' → logprob: -9.380269050598145
    9. 'for' → logprob: -9.755269050598145
    10. 'current' → logprob: -10.505269050598145

Token 400: ' heap' (ID: 37237)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.9820261001586914
    2. 'heap' → logprob: -1.4820261001586914
    3. '_eval' → logprob: -1.9820261001586914
    4. '_heap' → logprob: -2.8570261001586914
    5. '_order' → logprob: -3.2320261001586914
    6. 'order' → logprob: -3.7320261001586914
    7. '_time' → logprob: -3.7320261001586914
    8. 'time' → logprob: -3.9820261001586914
    9. 'queue' → logprob: -4.232026100158691
    10. '_ready' → logprob: -4.357026100158691

Token 401: ' and' (ID: 326)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3383990526199341
    2. '=' → logprob: -1.838399052619934
    3. ':' → logprob: -2.4633989334106445
    4. '       ' → logprob: -3.7133989334106445
    5. 'self' → logprob: -4.8383989334106445
    6. '=[]' → logprob: -5.2133989334106445
    7. ' self' → logprob: -6.2133989334106445
    8. ',' → logprob: -6.8383989334106445
    9. '<|end|>' → logprob: -6.9633989334106445
    10. '   ' → logprob: -8.088398933410645

Token 402: ' tracking' (ID: 20254)
  Prédit: 'ready'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ready' → logprob: -1.0724536180496216
    2. 'queue' → logprob: -1.5724536180496216
    3. 'order' → logprob: -1.9474536180496216
    4. 'available' → logprob: -2.572453498840332
    5. 'visited' → logprob: -2.822453498840332
    6. 'eval' → logprob: -3.197453498840332
    7. 'current' → logprob: -3.947453498840332
    8. 'heap' → logprob: -4.072453498840332
    9. 'self' → logprob: -4.572453498840332
    10. 'waiting' → logprob: -4.572453498840332

Token 403: ' structures' (ID: 21207)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28005003929138184
    2. '       ' → logprob: -2.155050039291382
    3. ' self' → logprob: -2.780050039291382
    4. ' of' → logprob: -3.030050039291382
    5. 'import' → logprob: -5.030050277709961
    6. 'heap' → logprob: -5.905050277709961
    7. 'of' → logprob: -6.030050277709961
    8. ' heap' → logprob: -6.405050277709961
    9. ' for' → logprob: -7.280050277709961
    10. '   ' → logprob: -7.280050277709961

Token 404: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01804657094180584
    2. '
' → logprob: -4.5180463790893555
    3. 'self' → logprob: -5.0180463790893555
    4. ' self' → logprob: -8.643046379089355
    5. ',' → logprob: -9.143046379089355
    6. '        
' → logprob: -10.518046379089355
    7. '<|end|>' → logprob: -11.393046379089355
    8. '  
' → logprob: -12.268046379089355
    9. '   ' → logprob: -12.393046379089355
    10. ':' → logprob: -12.643046379089355

Token 405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011028258595615625
    2. 'self' → logprob: -7.001102924346924
    3. '
' → logprob: -8.876102447509766
    4. ' self' → logprob: -10.001102447509766
    5. ',' → logprob: -13.001102447509766
    6. '<|end|>' → logprob: -13.251102447509766
    7. '        
' → logprob: -14.001102447509766
    8. '      ' → logprob: -15.126102447509766
    9. '   ' → logprob: -15.376102447509766
    10. '           ' → logprob: -16.126102447509766

Token 406: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002656271681189537
    2. '       ' → logprob: -8.500266075134277
    3. ' self' → logprob: -9.875266075134277
    4. 'import' → logprob: -11.625266075134277
    5. '
' → logprob: -13.875266075134277
    6. '   ' → logprob: -15.000266075134277
    7. 'heap' → logprob: -15.875266075134277
    8. '        
' → logprob: -16.00026512145996
    9. 'from' → logprob: -16.50026512145996
    10. '	self' → logprob: -17.75026512145996

Token 407: '.ready' (ID: 65119)
  Prédit: '.heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.heap' → logprob: -0.922355592250824
    2. '.ready' → logprob: -1.7973556518554688
    3. 'ready' → logprob: -2.0473556518554688
    4. '.available' → logprob: -2.1723556518554688
    5. 'heap' → logprob: -2.2973556518554688
    6. 'available' → logprob: -2.5473556518554688
    7. 'import' → logprob: -5.297355651855469
    8. '   ' → logprob: -5.922355651855469
    9. ' heap' → logprob: -6.797355651855469
    10. '.' → logprob: -7.297355651855469

Token 408: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.8528261184692383
    2. '_tasks' → logprob: -1.1028261184692383
    3. ' =' → logprob: -1.7278261184692383
    4. '=' → logprob: -3.2278261184692383
    5. '=[]' → logprob: -4.477826118469238
    6. ':' → logprob: -4.977826118469238
    7. 'heap' → logprob: -5.727826118469238
    8. '_queue' → logprob: -6.727826118469238
    9. '_' → logprob: -7.352826118469238
    10. 'tasks' → logprob: -8.602826118469238

Token 409: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3889803886413574
    2. ' =' → logprob: -1.1389803886413574
    3. '=[]' → logprob: -6.263980388641357
    4. ':' → logprob: -8.513980865478516
    5. '=[]
' → logprob: -14.138980865478516
    6. '   ' → logprob: -14.388980865478516
    7. '=[],' → logprob: -15.013980865478516
    8. ',' → logprob: -15.763980865478516
    9. ' ' → logprob: -15.763980865478516
    10. ')' → logprob: -16.138980865478516

Token 410: ' List' (ID: 2655)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5871099829673767
    2. 'List' → logprob: -0.8371099829673767
    3. ' List' → logprob: -5.4621100425720215
    4. ' []' → logprob: -5.4621100425720215
    5. 'list' → logprob: -6.0871100425720215
    6. '[List' → logprob: -8.337109565734863
    7. '[]}' → logprob: -10.212109565734863
    8. ' list' → logprob: -10.712109565734863
    9. '=[]' → logprob: -10.837109565734863
    10. '[]
' → logprob: -11.337109565734863

Token 411: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.040073901414871216
    2. '=' → logprob: -3.290073871612549
    3. ' =' → logprob: -6.290073871612549
    4. '   ' → logprob: -9.415074348449707
    5. '=[]' → logprob: -9.915074348449707
    6. '[
' → logprob: -11.415074348449707
    7. ' ' → logprob: -12.040074348449707
    8. '[(' → logprob: -12.040074348449707
    9. '[Any' → logprob: -12.040074348449707
    10. '  ' → logprob: -12.665074348449707

Token 412: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.00011188744247192517
    2. '[' → logprob: -9.50011157989502
    3. ' Tuple' → logprob: -10.50011157989502
    4. '   ' → logprob: -12.00011157989502
    5. 'int' → logprob: -13.87511157989502
    6. '       ' → logprob: -14.25011157989502
    7. 'tuple' → logprob: -14.25011157989502
    8. 'Task' → logprob: -14.37511157989502
    9. '           ' → logprob: -16.000112533569336
    10. ' ' → logprob: -16.500112533569336

Token 413: '[Any' (ID: 157082)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023648271337151527
    2. ']' → logprob: -3.773648262023926
    3. ']=' → logprob: -8.523648262023926
    4. '[int' → logprob: -9.148648262023926
    5. '=' → logprob: -10.273648262023926
    6. '[
' → logprob: -10.523648262023926
    7. ',' → logprob: -11.523648262023926
    8. '   ' → logprob: -11.648648262023926
    9. 'Tuple' → logprob: -12.148648262023926
    10. ' =' → logprob: -12.398648262023926

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019245444855187088
    2. ']]' → logprob: -9.000192642211914
    3. ',int' → logprob: -10.125192642211914
    4. '[int' → logprob: -11.125192642211914
    5. '[' → logprob: -11.875192642211914
    6. ' ,' → logprob: -12.625192642211914
    7. '   ' → logprob: -13.625192642211914
    8. ',float' → logprob: -13.750192642211914
    9. ',List' → logprob: -13.875192642211914
    10. ',[' → logprob: -15.500192642211914

Token 415: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.9054008084349334e-05
    2. '...' → logprob: -11.125039100646973
    3. ' int' → logprob: -11.375039100646973
    4. '[int' → logprob: -11.875039100646973
    5. '   ' → logprob: -13.500039100646973
    6. 'Task' → logprob: -13.750039100646973
    7. 'List' → logprob: -13.750039100646973
    8. '
' → logprob: -14.750039100646973
    9. '```' → logprob: -15.250039100646973
    10. '  ' → logprob: -15.750039100646973

Token 416: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.007656795904040337
    2. ',' → logprob: -4.882656574249268
    3. ')]' → logprob: -10.757657051086426
    4. ']' → logprob: -11.257657051086426
    5. ']]=' → logprob: -11.757657051086426
    6. ' ]]' → logprob: -12.757657051086426
    7. '']]' → logprob: -13.257657051086426
    8. '   ' → logprob: -13.632657051086426
    9. ']]]' → logprob: -14.007657051086426
    10. ']]
' → logprob: -15.007657051086426

Token 417: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871122896671295
    2. '=' → logprob: -1.1371122598648071
    3. '<|end|>' → logprob: -8.762112617492676
    4. ')' → logprob: -10.012112617492676
    5. '=[]' → logprob: -11.762112617492676
    6. ' ' → logprob: -12.012112617492676
    7. ']' → logprob: -12.512112617492676
    8. '
' → logprob: -12.637112617492676
    9. '       ' → logprob: -12.637112617492676
    10. '<|end|>' → logprob: -12.762112617492676

Token 418: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0019933474250137806
    2. '[]
' → logprob: -6.251993179321289
    3. ' []' → logprob: -9.876993179321289
    4. '[]

' → logprob: -11.376993179321289
    5. '[' → logprob: -13.501993179321289
    6. ' []
' → logprob: -15.626993179321289
    7. '[])' → logprob: -16.12699317932129
    8. '[]"' → logprob: -16.25199317932129
    9. '[]}' → logprob: -16.75199317932129
    10. '[],' → logprob: -16.75199317932129

Token 419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04892865940928459
    2. 'self' → logprob: -3.173928737640381
    3. '<|end|>' → logprob: -5.423928737640381
    4. '   ' → logprob: -7.423928737640381
    5. ' self' → logprob: -7.548928737640381
    6. '
' → logprob: -8.673928260803223
    7. 'def' → logprob: -9.173928260803223
    8. '	self' → logprob: -10.298928260803223
    9. '```' → logprob: -11.423928260803223
    10. '<|end|>' → logprob: -11.798928260803223

Token 420: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.021033670753240585
    2. '       ' → logprob: -4.521033763885498
    3. 'for' → logprob: -5.896033763885498
    4. '   ' → logprob: -5.896033763885498
    5. ' self' → logprob: -5.896033763885498
    6. 'def' → logprob: -7.146033763885498
    7. 'heap' → logprob: -8.77103328704834
    8. ')' → logprob: -9.02103328704834
    9. '        
' → logprob: -9.27103328704834
    10. 'current' → logprob: -9.39603328704834

Token 421: '.execut' (ID: 195634)
  Prédit: 'processed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'processed' → logprob: -1.2248756885528564
    2. 'current' → logprob: -1.4748756885528564
    3. 'completed' → logprob: -2.2248756885528564
    4. 'time' → logprob: -2.4748756885528564
    5. 'visited' → logprob: -2.5998756885528564
    6. '.current' → logprob: -2.8498756885528564
    7. '.vis' → logprob: -3.4748756885528564
    8. '.completed' → logprob: -3.5998756885528564
    9. '.time' → logprob: -3.7248756885528564
    10. '.process' → logprob: -3.8498756885528564

Token 422: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0011429571313783526
    2. 'e' → logprob: -7.376142978668213
    3. 'ing' → logprob: -7.876142978668213
    4. 'ion' → logprob: -9.126142501831055
    5. 'able' → logprob: -10.626142501831055
    6. 'ute' → logprob: -13.376142501831055
    7. '```' → logprob: -14.126142501831055
    8. 'uted' → logprob: -14.876142501831055
    9. 'ution' → logprob: -16.001142501831055
    10. 'ions' → logprob: -16.001142501831055

Token 423: '_count' (ID: 7536)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3799755573272705
    2. '_count' → logprob: -1.8799755573272705
    3. '=' → logprob: -2.5049755573272705
    4. '_tasks' → logprob: -3.1299755573272705
    5. '=set' → logprob: -4.129975318908691
    6. '_set' → logprob: -4.129975318908691
    7. '_ids' → logprob: -5.254975318908691
    8. ':' → logprob: -7.504975318908691
    9. '=[]' → logprob: -10.254975318908691
    10. '_task' → logprob: -10.629975318908691

Token 424: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407931089401245
    2. ' =' → logprob: -0.9740793108940125
    3. ' ' → logprob: -13.974079132080078
    4. '=int' → logprob: -14.849079132080078
    5. '<|end|>' → logprob: -14.849079132080078
    6. ':' → logprob: -15.224079132080078
    7. ')' → logprob: -15.724079132080078
    8. '  ' → logprob: -15.849079132080078
    9. ',' → logprob: -16.224079132080078
    10. '   ' → logprob: -17.224079132080078

Token 425: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.25002098083496
    4. '۰' → logprob: -20.12502098083496
    5. '000' → logprob: -20.75002098083496
    6. '  ' → logprob: -21.12502098083496
    7. '
' → logprob: -21.25002098083496
    8. '00' → logprob: -21.62502098083496
    9. '=' → logprob: -21.87502098083496
    10. '[' → logprob: -22.25002098083496

Token 426: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '۰' → logprob: -18.6250057220459
    4. '   ' → logprob: -19.5000057220459
    5. '=' → logprob: -19.6250057220459
    6. '000' → logprob: -20.3750057220459
    7. '```' → logprob: -20.5000057220459
    8. '০' → logprob: -20.8125057220459
    9. ')' → logprob: -20.8125057220459
    10. '{' → logprob: -21.0625057220459

Token 427: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03246054798364639
    2. '   ' → logprob: -4.282460689544678
    3. '<|end|>' → logprob: -4.407460689544678
    4. '
' → logprob: -5.532460689544678
    5. 'def' → logprob: -7.407460689544678
    6. 'self' → logprob: -7.907460689544678
    7. ',' → logprob: -8.53246021270752
    8. ')' → logprob: -8.53246021270752
    9. ' ' → logprob: -9.03246021270752
    10. '<|end|>' → logprob: -9.28246021270752

Token 429: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04035547748208046
    2. '       ' → logprob: -3.2903554439544678
    3. 'def' → logprob: -6.915355682373047
    4. ' self' → logprob: -7.415355682373047
    5. '   ' → logprob: -7.790355682373047
    6. ')' → logprob: -9.165355682373047
    7. '
' → logprob: -9.540355682373047
    8. 'for' → logprob: -9.665355682373047
    9. '        
' → logprob: -11.165355682373047
    10. '	self' → logprob: -11.665355682373047

Token 430: '.change' (ID: 34001)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.44389116764068604
    2. '.time' → logprob: -2.1938910484313965
    3. '.next' → logprob: -2.9438910484313965
    4. '.order' → logprob: -3.1938910484313965
    5. '.execution' → logprob: -3.4438910484313965
    6. '.change' → logprob: -3.5688910484313965
    7. '.eval' → logprob: -4.4438910484313965
    8. '.max' → logprob: -4.5688910484313965
    9. '.total' → logprob: -4.6938910484313965
    10. '.execut' → logprob: -4.9438910484313965

Token 431: '_iter' (ID: 27043)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.11253964155912399
    2. '_index' → logprob: -2.737539529800415
    3. '_idx' → logprob: -3.737539529800415
    4. 's' → logprob: -4.487539768218994
    5. '_pointer' → logprob: -5.987539768218994
    6. '_indices' → logprob: -6.362539768218994
    7. '_point' → logprob: -6.362539768218994
    8. '_pts' → logprob: -8.362539291381836
    9. '_ptr' → logprob: -8.487539291381836
    10. '_p' → logprob: -9.862539291381836

Token 432: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1894092559814453
    2. '=' → logprob: -2.1894092559814453
    3. 'ator' → logprob: -2.8144092559814453
    4. '   ' → logprob: -8.064409255981445
    5. 'er' → logprob: -9.314409255981445
    6. '_' → logprob: -9.939409255981445
    7. ':' → logprob: -10.314409255981445
    8. '__' → logprob: -10.689409255981445
    9. '=None' → logprob: -10.814409255981445
    10. '  ' → logprob: -11.064409255981445

Token 433: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.008920161053538322
    2. '0' → logprob: -4.758920192718506
    3. ' iter' → logprob: -8.133919715881348
    4. ' ' → logprob: -11.883919715881348
    5. '   ' → logprob: -12.633919715881348
    6. '(iter' → logprob: -13.633919715881348
    7. '	iter' → logprob: -14.383919715881348
    8. 'enumer' → logprob: -16.758920669555664
    9. '       ' → logprob: -17.633920669555664
    10. '```' → logprob: -17.758920669555664

Token 434: '(order' (ID: 33050)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.700132997939363e-05
    2. '(' → logprob: -11.750017166137695
    3. 'self' → logprob: -11.750017166137695
    4. '(order' → logprob: -14.625017166137695
    5. ' (' → logprob: -15.500017166137695
    6. '(
' → logprob: -15.625017166137695
    7. '((' → logprob: -15.875017166137695
    8. '(s' → logprob: -16.000017166137695
    9. '(en' → logprob: -17.375017166137695
    10. '(ord' → logprob: -17.750017166137695

Token 435: '_change' (ID: 36082)
  Prédit: '_change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.0029130501206964254
    2. '_changes' → logprob: -5.877912998199463
    3. '_order' → logprob: -10.502913475036621
    4. 's' → logprob: -10.502913475036621
    5. 'change' → logprob: -10.877913475036621
    6. '_points' → logprob: -11.752913475036621
    7. ')' → logprob: -11.752913475036621
    8. 'changes' → logprob: -12.377913475036621
    9. 'Change' → logprob: -12.502913475036621
    10. '_ch' → logprob: -13.627913475036621

Token 436: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.12850405275821686
    2. 's' → logprob: -2.1285040378570557
    3. 'points' → logprob: -6.503504276275635
    4. 'oints' → logprob: -10.128503799438477
    5. '_pts' → logprob: -10.753503799438477
    6. 'Points' → logprob: -12.628503799438477
    7. 'ts' → logprob: -12.878503799438477
    8. '_p' → logprob: -13.378503799438477
    9. '_positions' → logprob: -13.628503799438477
    10. '_POINTS' → logprob: -13.878503799438477

Token 437: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000511091377120465
    2. ')
' → logprob: -7.625511169433594
    3. '       ' → logprob: -11.625511169433594
    4. ' )' → logprob: -11.750511169433594
    5. '   ' → logprob: -12.375511169433594
    6. ',' → logprob: -15.125511169433594
    7. '<|end|>' → logprob: -15.250511169433594
    8. ')
' → logprob: -15.375511169433594
    9. ')

' → logprob: -15.625511169433594
    10. ' ' → logprob: -15.750511169433594

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43483391404151917
    2. '<|end|>' → logprob: -1.4348338842391968
    3. 'self' → logprob: -2.9348340034484863
    4. ',' → logprob: -4.184834003448486
    5. '   ' → logprob: -4.184834003448486
    6. 'def' → logprob: -4.434834003448486
    7. '
' → logprob: -5.184834003448486
    8. ')' → logprob: -5.684834003448486
    9. ' self' → logprob: -6.184834003448486
    10. '<|end|>' → logprob: -6.309834003448486

Token 439: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.013486543670296669
    2. '       ' → logprob: -4.513486385345459
    3. 'next' → logprob: -6.263486385345459
    4. 'try' → logprob: -8.263486862182617
    5. ' self' → logprob: -8.638486862182617
    6. '   ' → logprob: -10.638486862182617
    7. 'current' → logprob: -11.138486862182617
    8. '        
' → logprob: -11.388486862182617
    9. 'def' → logprob: -11.763486862182617
    10. '_next' → logprob: -12.138486862182617

Token 440: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.6974126100540161
    2. '.current' → logprob: -0.8224126100540161
    3. 'current' → logprob: -3.3224124908447266
    4. 'next' → logprob: -4.447412490844727
    5. '_next' → logprob: -5.822412490844727
    6. '_current' → logprob: -5.822412490844727
    7. '.change' → logprob: -5.822412490844727
    8. 'def' → logprob: -7.197412490844727
    9. '._' → logprob: -7.197412490844727
    10. 'change' → logprob: -7.447412490844727

Token 441: '_change' (ID: 36082)
  Prédit: '_change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.009286721237003803
    2. 'change' → logprob: -5.384286880493164
    3. '_token' → logprob: -5.634286880493164
    4. '_order' → logprob: -8.134286880493164
    5. '_' → logprob: -8.509286880493164
    6. '<|end|>' → logprob: -8.509286880493164
    7. ' =' → logprob: -9.884286880493164
    8. '(change' → logprob: -9.884286880493164
    9. '=' → logprob: -10.759286880493164
    10. '_time' → logprob: -10.884286880493164

Token 442: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5578939318656921
    2. '_time' → logprob: -1.307893991470337
    3. ' =' → logprob: -1.932893991470337
    4. '_' → logprob: -5.432893753051758
    5. '_point' → logprob: -5.557893753051758
    6. '=_' → logprob: -6.432893753051758
    7. ',' → logprob: -7.807893753051758
    8. '=None' → logprob: -8.057893753051758
    9. ':' → logprob: -8.182893753051758
    10. '_timestamp' → logprob: -8.432893753051758

Token 443: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.001115808030590415
    2. ' next' → logprob: -7.001115798950195
    3. '(next' → logprob: -8.751115798950195
    4. 'None' → logprob: -10.001115798950195
    5. ' None' → logprob: -14.376115798950195
    6. '	next' → logprob: -17.126115798950195
    7. '   ' → logprob: -17.376115798950195
    8. '(None' → logprob: -18.001115798950195
    9. 'self' → logprob: -18.751115798950195
    10. 'none' → logprob: -19.001115798950195

Token 444: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.954393079970032e-05
    2. '(' → logprob: -10.000049591064453
    3. 'self' → logprob: -12.500049591064453
    4. '(
' → logprob: -14.875049591064453
    5. ' (' → logprob: -17.375049591064453
    6. '(this' → logprob: -18.000049591064453
    7. '(change' → logprob: -18.500049591064453
    8. ' self' → logprob: -19.500049591064453
    9. '(s' → logprob: -20.500049591064453
    10. '(iter' → logprob: -20.625049591064453

Token 445: '.change' (ID: 34001)
  Prédit: '.change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.change' → logprob: -0.00036287534749135375
    2. 'change' → logprob: -8.00036334991455
    3. '.' → logprob: -11.62536334991455
    4. ' .' → logprob: -11.87536334991455
    5. ').' → logprob: -12.00036334991455
    6. ' change' → logprob: -13.37536334991455
    7. '_change' → logprob: -13.87536334991455
    8. '.eval' → logprob: -13.87536334991455
    9. '(change' → logprob: -14.62536334991455
    10. ' ' → logprob: -14.87536334991455

Token 446: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -1.8624639324116288e-06
    2. 'iter' → logprob: -14.000001907348633
    3. '_it' → logprob: -14.750001907348633
    4. '_change' → logprob: -15.750001907348633
    5. 'Iter' → logprob: -16.250001907348633
    6. ')' → logprob: -16.875001907348633
    7. '_iters' → logprob: -17.000001907348633
    8. '   ' → logprob: -17.125001907348633
    9. '_itr' → logprob: -17.125001907348633
    10. 's' → logprob: -17.375001907348633

Token 447: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022349476348608732
    2. ')' → logprob: -6.627234935760498
    3. ',None' → logprob: -7.377234935760498
    4. ' ,' → logprob: -8.252235412597656
    5. 'None' → logprob: -11.252235412597656
    6. '(None' → logprob: -12.752235412597656
    7. '(),' → logprob: -13.252235412597656
    8. ',null' → logprob: -13.502235412597656
    9. ' ' → logprob: -13.877235412597656
    10. '(' → logprob: -14.127235412597656

Token 448: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.07893429696559906
    2. '(None' → logprob: -2.5789341926574707
    3. ' None' → logprob: -10.078934669494629
    4. '(' → logprob: -13.203934669494629
    5. '(-' → logprob: -14.578934669494629
    6. '_None' → logprob: -16.078933715820312
    7. ' (' → logprob: -16.203933715820312
    8. ',None' → logprob: -16.703933715820312
    9. ')' → logprob: -17.703933715820312
    10. '(N' → logprob: -18.078933715820312

Token 449: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.580929347255733e-05
    2. ')
' → logprob: -11.625016212463379
    3. ' )' → logprob: -12.375016212463379
    4. '<|end|>' → logprob: -13.750016212463379
    5. '   ' → logprob: -14.750016212463379
    6. '()' → logprob: -15.125016212463379
    7. '       ' → logprob: -15.125016212463379
    8. '())' → logprob: -15.750016212463379
    9. ' ' → logprob: -16.375015258789062
    10. '),' → logprob: -16.625015258789062

Token 450: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1468195617198944
    2. 'def' → logprob: -2.146819591522217
    3. ')' → logprob: -4.021819591522217
    4. ' def' → logprob: -6.771819591522217
    5. '       ' → logprob: -7.896819591522217
    6. '	def' → logprob: -9.896819114685059
    7. ',' → logprob: -10.146819114685059
    8. '<|end|>' → logprob: -10.396819114685059
    9. '    
' → logprob: -10.771819114685059
    10. '.' → logprob: -11.146819114685059

Token 451: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1408180147409439
    2. '   ' → logprob: -2.5158181190490723
    3. ' def' → logprob: -3.0158181190490723
    4. ')' → logprob: -7.390818119049072
    5. '	def' → logprob: -7.515818119049072
    6. '       ' → logprob: -9.390817642211914
    7. '<|end|>' → logprob: -9.640817642211914
    8. 'self' → logprob: -10.140817642211914
    9. ':' → logprob: -10.265817642211914
    10. '    
' → logprob: -10.765817642211914

Token 452: ' _' (ID: 1175)
  Prédit: 'prepare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prepare' → logprob: -0.7728044390678406
    2. 'initialize' → logprob: -1.0228044986724854
    3. ' prepare' → logprob: -2.2728044986724854
    4. ' initialize' → logprob: -3.0228044986724854
    5. 'build' → logprob: -4.397804260253906
    6. ' build' → logprob: -5.647804260253906
    7. 'setup' → logprob: -6.022804260253906
    8. 'push' → logprob: -6.147804260253906
    9. 'init' → logprob: -6.272804260253906
    10. 'run' → logprob: -7.022804260253906

Token 453: 'push' (ID: 18873)
  Prédit: 'prepare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prepare' → logprob: -0.6749919652938843
    2. 'initialize' → logprob: -1.6749919652938843
    3. 'push' → logprob: -1.9249919652938843
    4. 'build' → logprob: -2.049992084503174
    5. 'populate' → logprob: -4.549992084503174
    6. 'init' → logprob: -4.549992084503174
    7. 'setup' → logprob: -6.049992084503174
    8. 'pop' → logprob: -6.299992084503174
    9. 'update' → logprob: -6.424992084503174
    10. 'fill' → logprob: -6.924992084503174

Token 454: '_ready' (ID: 78121)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001589250285178423
    2. '(' → logprob: -6.501589298248291
    3. 'self' → logprob: -9.876588821411133
    4. ' (' → logprob: -11.501588821411133
    5. '(
' → logprob: -11.751588821411133
    6. '(task' → logprob: -12.001588821411133
    7. '(s' → logprob: -12.251588821411133
    8. 'task' → logprob: -13.501588821411133
    9. '(sel' → logprob: -13.876588821411133
    10. '   ' → logprob: -13.876588821411133

Token 455: '_task' (ID: 27167)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010693699587136507
    2. '(' → logprob: -7.37606954574585
    3. '_task' → logprob: -8.126069068908691
    4. '(task' → logprob: -9.376069068908691
    5. 'task' → logprob: -10.876069068908691
    6. ' (' → logprob: -11.126069068908691
    7. '(Task' → logprob: -11.376069068908691
    8. 'self' → logprob: -11.626069068908691
    9. '   ' → logprob: -12.501069068908691
    10. '(
' → logprob: -12.751069068908691

Token 456: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.392824874026701e-05
    2. '(' → logprob: -10.37503433227539
    3. '       ' → logprob: -13.87503433227539
    4. 'self' → logprob: -14.37503433227539
    5. '   ' → logprob: -14.87503433227539
    6. '(
' → logprob: -15.00003433227539
    7. ' (' → logprob: -15.37503433227539
    8. '(sel' → logprob: -16.25003433227539
    9. '(task' → logprob: -16.87503433227539
    10. '(s' → logprob: -17.25003433227539

Token 457: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09189818799495697
    2. ',' → logprob: -2.466898202896118
    3. '(task' → logprob: -6.591897964477539
    4. '(' → logprob: -6.966897964477539
    5. 'self' → logprob: -8.341897964477539
    6. ' (' → logprob: -8.466897964477539
    7. ')(' → logprob: -9.341897964477539
    8. ',self' → logprob: -10.091897964477539
    9. ')' → logprob: -11.216897964477539
    10. ',(' → logprob: -11.341897964477539

Token 458: ' task' (ID: 5296)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'task' → logprob: -0.02385782264173031
    2. 'self' → logprob: -4.023857593536377
    3. ' task' → logprob: -5.273857593536377
    4. '   ' → logprob: -8.148858070373535
    5. '       ' → logprob: -8.398858070373535
    6. ' self' → logprob: -10.148858070373535
    7. '	task' → logprob: -12.148858070373535
    8. ')' → logprob: -13.148858070373535
    9. 't' → logprob: -13.273858070373535
    10. 'id' → logprob: -14.148858070373535

Token 459: '_id' (ID: 1537)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009559521451592445
    2. ':' → logprob: -6.259559631347656
    3. '(self' → logprob: -6.509559631347656
    4. '(task' → logprob: -6.634559631347656
    5. '.task' → logprob: -6.759559631347656
    6. ' (' → logprob: -6.759559631347656
    7. ' ,' → logprob: -6.884559631347656
    8. 'self' → logprob: -8.134559631347656
    9. ')' → logprob: -8.134559631347656
    10. '):' → logprob: -8.259559631347656

Token 460: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4088612198829651
    2. ':' → logprob: -1.9088611602783203
    3. '):' → logprob: -2.0338611602783203
    4. '):
' → logprob: -2.9088611602783203
    5. ')' → logprob: -6.65886116027832
    6. '   ' → logprob: -8.53386116027832
    7. ' ,' → logprob: -9.03386116027832
    8. 'self' → logprob: -9.03386116027832
    9. '):
' → logprob: -9.15886116027832
    10. ' ):' → logprob: -9.78386116027832

Token 461: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.015015599317848682
    2. ')' → logprob: -4.515015602111816
    3. ' int' → logprob: -6.265015602111816
    4. 'task' → logprob: -7.140015602111816
    5. '[int' → logprob: -7.765015602111816
    6. '):
' → logprob: -8.015015602111816
    7. 'self' → logprob: -8.140015602111816
    8. '):' → logprob: -9.890015602111816
    9. ' task' → logprob: -9.890015602111816
    10. '(int' → logprob: -10.765015602111816

Token 462: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1600940227508545
    2. ')' → logprob: -2.4100940227508545
    3. '):' → logprob: -3.0350940227508545
    4. ',' → logprob: -4.660094261169434
    5. '):
' → logprob: -7.535094261169434
    6. '   ' → logprob: -10.660094261169434
    7. ' ):
' → logprob: -10.910094261169434
    8. '):

' → logprob: -12.035094261169434
    9. ' )' → logprob: -12.410094261169434
    10. ')->' → logprob: -13.160094261169434

Token 463: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008974085212685168
    2. ' task' → logprob: -7.625897407531738
    3. 'task' → logprob: -8.750897407531738
    4. ',' → logprob: -9.000897407531738
    5. ' key' → logprob: -10.500897407531738
    6. ' heap' → logprob: -10.875897407531738
    7. 'token' → logprob: -10.875897407531738
    8. ' token' → logprob: -11.250897407531738
    9. ' self' → logprob: -11.375897407531738
    10. 'heap' → logprob: -11.750897407531738

Token 464: ' task' (ID: 5296)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7387646436691284
    2. 'heap' → logprob: -0.9887646436691284
    3. ' heap' → logprob: -1.9887646436691284
    4. 'key' → logprob: -5.113764762878418
    5. 'task' (adapté à ' task') → logprob: -5.363764762878418
    6. ' key' → logprob: -6.488764762878418
    7. ' task' → logprob: -7.363764762878418
    8. 'entry' → logprob: -8.613764762878418
    9. 'item' → logprob: -9.238764762878418
    10. 'priority' → logprob: -9.238764762878418

Token 465: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22545751929283142
    2. ' =' → logprob: -1.6004575490951538
    3. ')' → logprob: -11.100457191467285
    4. '_key' → logprob: -11.600457191467285
    5. '   ' → logprob: -11.850457191467285
    6. '=self' → logprob: -12.350457191467285
    7. '_obj' → logprob: -13.475457191467285
    8. '_' → logprob: -13.850457191467285
    9. '_id' → logprob: -13.975457191467285
    10. ':' → logprob: -14.225457191467285

Token 466: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001189510803669691
    2. ' self' → logprob: -6.751189708709717
    3. '       ' → logprob: -10.876189231872559
    4. '=self' → logprob: -15.626189231872559
    5. '(self' → logprob: -16.501190185546875
    6. '   ' → logprob: -16.876190185546875
    7. '	self' → logprob: -17.001190185546875
    8. '
' → logprob: -17.126190185546875
    9. '[self' → logprob: -17.751190185546875
    10. '           ' → logprob: -17.876190185546875

Token 467: '.task' (ID: 27230)
  Prédit: '.task'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.task' → logprob: -0.0015100972959771752
    2. 'task' → logprob: -6.501510143280029
    3. ' task' → logprob: -12.751509666442871
    4. '.tasks' → logprob: -13.251509666442871
    5. 'self' → logprob: -13.876509666442871
    6. '	task' → logprob: -14.001509666442871
    7. '.' → logprob: -14.251509666442871
    8. '_task' → logprob: -16.001510620117188
    9. ' .' → logprob: -16.001510620117188
    10. '._' → logprob: -16.126510620117188

Token 468: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0018850883934646845
    2. 'self' → logprob: -7.626884937286377
    3. 'map' → logprob: -7.626884937286377
    4. ' =' → logprob: -8.126885414123535
    5. 's' → logprob: -8.751885414123535
    6. '=' → logprob: -8.876885414123535
    7. ')' → logprob: -9.251885414123535
    8. '=self' → logprob: -9.501885414123535
    9. 'Map' → logprob: -9.876885414123535
    10. '_id' → logprob: -10.751885414123535

Token 469: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02843790128827095
    2. 'task' → logprob: -3.903437852859497
    3. '(task' → logprob: -5.153438091278076
    4. ')' → logprob: -6.903438091278076
    5. ',' → logprob: -7.403438091278076
    6. '[
' → logprob: -9.653437614440918
    7. ')
' → logprob: -9.778437614440918
    8. '   ' → logprob: -9.903437614440918
    9. ' task' → logprob: -10.028437614440918
    10. '=' → logprob: -10.153437614440918

Token 470: 'task' (ID: 15921)
  Prédit: 'task'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'task' → logprob: -9.088346359931165e-07
    2. ' task' → logprob: -14.125000953674316
    3. '(task' → logprob: -15.875000953674316
    4. '	task' → logprob: -19.375
    5. '[' → logprob: -20.0
    6. ')' → logprob: -20.625
    7. '.task' → logprob: -22.0
    8. '   ' → logprob: -22.125
    9. 't' → logprob: -22.875
    10. ' ' → logprob: -23.625

Token 471: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.173704271830502e-06
    2. 'id' → logprob: -12.87500286102295
    3. '.id' → logprob: -15.37500286102295
    4. '_' → logprob: -16.125003814697266
    5. '   ' → logprob: -17.125003814697266
    6. '_i' → logprob: -17.500003814697266
    7. ')' → logprob: -17.500003814697266
    8. ']' → logprob: -17.750003814697266
    9. ' id' → logprob: -18.125003814697266
    10. '._' → logprob: -18.375003814697266

Token 472: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16033674776554108
    2. ')' → logprob: -1.9103367328643799
    3. ')
' → logprob: -10.0353364944458
    4. ' )
' → logprob: -10.7853364944458
    5. '       ' → logprob: -11.0353364944458
    6. '   ' → logprob: -11.4103364944458
    7. ',' → logprob: -12.4103364944458
    8. '])
' → logprob: -12.4103364944458
    9. ')

' → logprob: -13.0353364944458
    10. '),' → logprob: -13.5353364944458

Token 473: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05326605960726738
    2. ' heap' → logprob: -3.3032660484313965
    3. 'heap' → logprob: -4.6782660484313965
    4. ' key' → logprob: -5.8032660484313965
    5. 'key' → logprob: -5.9282660484313965
    6. 'entry' → logprob: -10.303266525268555
    7. 'priority' → logprob: -10.678266525268555
    8. 'item' → logprob: -10.928266525268555
    9. ' entry' → logprob: -11.178266525268555
    10. 'self' → logprob: -12.303266525268555

Token 474: ' key' (ID: 2140)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.34519845247268677
    2. '       ' → logprob: -1.470198392868042
    3. 'key' (adapté à ' key') → logprob: -3.220198392868042
    4. ' heap' → logprob: -3.845198392868042
    5. 'entry' → logprob: -8.345198631286621
    6. ' key' → logprob: -8.345198631286621
    7. '   ' → logprob: -9.220198631286621
    8. 'priority' → logprob: -9.470198631286621
    9. 'item' → logprob: -10.845198631286621
    10. 'he' → logprob: -11.970198631286621

Token 475: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0165634136646986
    2. ' =' → logprob: -4.141563415527344
    3. '=self' → logprob: -7.641563415527344
    4. ',' → logprob: -10.391563415527344
    5. '=
' → logprob: -12.141563415527344
    6. '_func' → logprob: -12.391563415527344
    7. 'func' → logprob: -13.391563415527344
    8. '   ' → logprob: -13.641563415527344
    9. ')' → logprob: -13.891563415527344
    10. 'self' → logprob: -13.891563415527344

Token 476: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0014025020645931363
    2. ' self' → logprob: -6.626402378082275
    3. '(self' → logprob: -9.501402854919434
    4. '(' → logprob: -14.626402854919434
    5. 'tuple' → logprob: -14.626402854919434
    6. '(-' → logprob: -14.876402854919434
    7. ' (' → logprob: -15.626402854919434
    8. '-self' → logprob: -15.751402854919434
    9. '	self' → logprob: -16.251401901245117
    10. '[self' → logprob: -17.251401901245117

Token 477: '.eval' (ID: 67829)
  Prédit: '.eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.eval' → logprob: -0.00020926215802319348
    2. '.key' → logprob: -9.125208854675293
    3. 'eval' → logprob: -9.375208854675293
    4. '.' → logprob: -12.250208854675293
    5. '_eval' → logprob: -12.250208854675293
    6. '_.' → logprob: -13.500208854675293
    7. '.ev' → logprob: -14.125208854675293
    8. 'self' → logprob: -14.250208854675293
    9. '.e' → logprob: -14.500208854675293
    10. '._' → logprob: -14.500208854675293

Token 478: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -2.339278580620885e-06
    2. 'order' → logprob: -13.500001907348633
    3. 'Order' → logprob: -14.125001907348633
    4. '_ORDER' → logprob: -16.500001907348633
    5. '_' → logprob: -17.875001907348633
    6. '._' → logprob: -18.500001907348633
    7. '_orders' → logprob: -19.000001907348633
    8. '.order' → logprob: -19.000001907348633
    9. '_Order' → logprob: -19.250001907348633
    10. '_ord' → logprob: -19.750001907348633

Token 479: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -5.512236498361744e-07
    2. '.' → logprob: -14.875000953674316
    3. ' .' → logprob: -17.125
    4. 'key' → logprob: -17.125
    5. ',key' → logprob: -18.625
    6. '   ' → logprob: -19.0
    7. ':key' → logprob: -19.125
    8. '(key' → logprob: -19.125
    9. '[key' → logprob: -19.875
    10. '\.' → logprob: -20.25

Token 480: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -1.9027791495318525e-05
    2. 'func' → logprob: -11.625019073486328
    3. '_' → logprob: -11.750019073486328
    4. '_fun' → logprob: -14.750019073486328
    5. '_FUNC' → logprob: -14.875019073486328
    6. '(_' → logprob: -15.250019073486328
    7. '(' → logprob: -15.500019073486328
    8. 'Func' → logprob: -15.625019073486328
    9. '_f' → logprob: -16.250019073486328
    10. ')_' → logprob: -16.375019073486328

Token 481: '(task' (ID: 32743)
  Prédit: '(task'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(task' → logprob: -7.584239938296378e-06
    2. '(' → logprob: -11.875007629394531
    3. ' (' → logprob: -15.500007629394531
    4. '(
' → logprob: -15.875007629394531
    5. 'task' → logprob: -16.00000762939453
    6. '(tasks' → logprob: -16.25000762939453
    7. '(Task' → logprob: -17.37500762939453
    8. '(t' → logprob: -18.87500762939453
    9. ')' → logprob: -19.12500762939453
    10. ' task' → logprob: -19.25000762939453

Token 482: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7712149620056152
    2. ',' → logprob: -1.2712149620056152
    3. ')
' → logprob: -1.8962149620056152
    4. '),' → logprob: -2.2712149620056152
    5. '       ' → logprob: -5.896214962005615
    6. ',
' → logprob: -8.146215438842773
    7. '),
' → logprob: -8.396215438842773
    8. '   ' → logprob: -9.146215438842773
    9. ')
' → logprob: -9.771215438842773
    10. ',)' → logprob: -9.896215438842773

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009460686706006527
    2. 'heap' → logprob: -4.75946044921875
    3. ' heap' → logprob: -7.50946044921875
    4. 'self' → logprob: -8.63446044921875
    5. '
' → logprob: -10.00946044921875
    6. ',' → logprob: -10.63446044921875
    7. '(heap' → logprob: -10.63446044921875
    8. ')' → logprob: -11.63446044921875
    9. '.heap' → logprob: -12.50946044921875
    10. 'he' → logprob: -12.63446044921875

Token 484: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.026035398244857788
    2. '       ' → logprob: -3.7760353088378906
    3. ' heap' → logprob: -5.901035308837891
    4. 'self' → logprob: -10.02603530883789
    5. '(heap' → logprob: -13.40103530883789
    6. 'he' → logprob: -13.90103530883789
    7. '   ' → logprob: -14.40103530883789
    8. 'import' → logprob: -14.52603530883789
    9. '.heap' → logprob: -14.65103530883789
    10. '	' → logprob: -14.90103530883789

Token 485: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0001322639436693862
    2. '.he' → logprob: -9.00013256072998
    3. '.push' → logprob: -12.50013256072998
    4. ' .' → logprob: -13.12513256072998
    5. '.' → logprob: -13.50013256072998
    6. '.append' → logprob: -14.87513256072998
    7. '.heap' → logprob: -14.87513256072998
    8. ').' → logprob: -15.12513256072998
    9. 'push' → logprob: -15.87513256072998
    10. 'h' → logprob: -16.250131607055664

Token 486: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00010521204239921644
    2. '.heap' → logprob: -9.250104904174805
    3. '.' → logprob: -11.750104904174805
    4. '.push' → logprob: -13.750104904174805
    5. 'he' → logprob: -16.625104904174805
    6. ' .' → logprob: -17.375104904174805
    7. ').' → logprob: -17.875104904174805
    8. '   ' → logprob: -17.875104904174805
    9. '.h' → logprob: -18.125104904174805
    10. '.put' → logprob: -18.375104904174805

Token 487: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -5.9153885558771435e-06
    2. 'ap' → logprob: -12.125005722045898
    3. 'pp' → logprob: -15.000005722045898
    4. 'push' → logprob: -16.8750057220459
    5. 'a' → logprob: -18.8750057220459
    6. '```' → logprob: -19.8750057220459
    7. '[' → logprob: -20.0000057220459
    8. ' app' → logprob: -20.8750057220459
    9. 'q' → logprob: -20.8750057220459
    10. 'appen' → logprob: -21.0000057220459

Token 488: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -9.591415437171236e-05
    2. 'push' → logprob: -9.375096321105957
    3. 'le' → logprob: -12.000096321105957
    4. 'sh' → logprob: -12.875096321105957
    5. 'p' → logprob: -14.000096321105957
    6. 'u' → logprob: -14.375096321105957
    7. 't' → logprob: -15.375096321105957
    8. 'pp' → logprob: -15.625096321105957
    9. 'ut' → logprob: -16.12509536743164
    10. 'app' → logprob: -16.62509536743164

Token 489: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.625001907348633
    3. 'self' → logprob: -14.000001907348633
    4. ' (' → logprob: -17.625001907348633
    5. ' self' → logprob: -19.625001907348633
    6. '(
' → logprob: -19.625001907348633
    7. ',self' → logprob: -19.625001907348633
    8. '(this' → logprob: -19.750001907348633
    9. '(s' → logprob: -19.875001907348633
    10. '	self' → logprob: -20.750001907348633

Token 490: '.ready' (ID: 65119)
  Prédit: '.ready'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ready' → logprob: -0.04927879944443703
    2. '(self' → logprob: -3.424278736114502
    3. 'self' → logprob: -4.674278736114502
    4. 'ready' → logprob: -6.174278736114502
    5. '.self' → logprob: -6.299278736114502
    6. ')' → logprob: -7.049278736114502
    7. '.' → logprob: -7.299278736114502
    8. '(' → logprob: -8.54927921295166
    9. ' ready' → logprob: -8.67427921295166
    10. ' self' → logprob: -9.42427921295166

Token 491: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.00039706481038592756
    2. 'self' → logprob: -8.750396728515625
    3. '(self' → logprob: -9.125396728515625
    4. '_task' → logprob: -9.750396728515625
    5. '_ready' → logprob: -10.000396728515625
    6. '_queue' → logprob: -11.625396728515625
    7. '_tasks' → logprob: -11.875396728515625
    8. ')_' → logprob: -13.250396728515625
    9. 'heap' → logprob: -13.625396728515625
    10. '       ' → logprob: -13.875396728515625

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034630970912985504
    2. '(key' → logprob: -9.125346183776855
    3. ' ,' → logprob: -9.375346183776855
    4. '(' → logprob: -9.500346183776855
    5. ',key' → logprob: -10.125346183776855
    6. ',(' → logprob: -10.875346183776855
    7. ' (' → logprob: -11.875346183776855
    8. '((' → logprob: -12.625346183776855
    9. '       ' → logprob: -13.000346183776855
    10. ',
' → logprob: -13.375346183776855

Token 493: ' (' (ID: 350)
  Prédit: '(key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.04864891245961189
    2. ' (' → logprob: -3.0486488342285156
    3. '(' → logprob: -10.298648834228516
    4. '   ' → logprob: -10.923648834228516
    5. '[key' → logprob: -12.173648834228516
    6. ' ' → logprob: -13.923648834228516
    7. '(Key' → logprob: -14.173648834228516
    8. '
' → logprob: -14.423648834228516
    9. ' key' → logprob: -14.423648834228516
    10. ')' → logprob: -14.798648834228516

Token 494: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.0009119403548538685
    2. ' key' → logprob: -7.000911712646484
    3. '
' → logprob: -15.500911712646484
    4. '(key' → logprob: -15.500911712646484
    5. '[key' → logprob: -17.250911712646484
    6. '   ' → logprob: -17.500911712646484
    7. '	key' → logprob: -17.875911712646484
    8. ')' → logprob: -18.750911712646484
    9. '$key' → logprob: -18.875911712646484
    10. ',key' → logprob: -19.125911712646484

Token 495: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ' ,' → logprob: -13.12500286102295
    3. ',
' → logprob: -14.62500286102295
    4. ')' → logprob: -16.250003814697266
    5. ',int' → logprob: -16.250003814697266
    6. '‌,' → logprob: -16.250003814697266
    7. '<|end|>' → logprob: -17.375003814697266
    8. ',t' → logprob: -17.500003814697266
    9. ',

' → logprob: -17.625003814697266
    10. ',user' → logprob: -17.625003814697266

Token 496: ' task' (ID: 5296)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'task' → logprob: -0.004620949272066355
    2. ' task' → logprob: -5.3796210289001465
    3. '   ' → logprob: -14.754620552062988
    4. '	task' → logprob: -15.629620552062988
    5. ' ' → logprob: -16.879621505737305
    6. 't' → logprob: -17.504621505737305
    7. ')' → logprob: -17.879621505737305
    8. '(task' → logprob: -18.004621505737305
    9. '
' → logprob: -18.379621505737305
    10. 'id' → logprob: -18.754621505737305

Token 497: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0432315468788147
    2. '.id' → logprob: -3.16823148727417
    3. 'id' → logprob: -8.418231964111328
    4. ')' → logprob: -13.168231964111328
    5. '_.' → logprob: -13.168231964111328
    6. '._' → logprob: -13.293231964111328
    7. '	id' → logprob: -13.668231964111328
    8. '   ' → logprob: -13.793231964111328
    9. ' id' → logprob: -13.918231964111328
    10. '.' → logprob: -14.043231964111328

Token 498: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007424455252476037
    2. ')' → logprob: -7.250742435455322
    3. '))
' → logprob: -10.37574291229248
    4. ')
' → logprob: -14.87574291229248
    5. ' ))' → logprob: -15.00074291229248
    6. '))

' → logprob: -15.50074291229248
    7. '       ' → logprob: -15.75074291229248
    8. ')))' → logprob: -16.375741958618164
    9. '   ' → logprob: -16.500741958618164
    10. '));' → logprob: -17.000741958618164

Token 499: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4237063527107239
    2. 'def' (adapté à ' def') → logprob: -1.548706293106079
    3. '   ' → logprob: -2.548706293106079
    4. ' def' → logprob: -3.923706293106079
    5. ' 
' → logprob: -4.298706531524658
    6. '<|end|>' → logprob: -4.548706531524658
    7. '    
' → logprob: -5.423706531524658
    8. '  
' → logprob: -5.798706531524658
    9. ' ' → logprob: -6.923706531524658
    10. '	def' → logprob: -7.048706531524658

Token 501: ' _' (ID: 1175)
  Prédit: '_pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pop' → logprob: -1.4468430280685425
    2. ' prepare' → logprob: -1.5718430280685425
    3. 'prepare' → logprob: -1.9468430280685425
    4. '_prepare' → logprob: -2.821843147277832
    5. 'initialize' → logprob: -2.946843147277832
    6. ' initialize' → logprob: -3.071843147277832
    7. ' run' → logprob: -3.196843147277832
    8. '_schedule' → logprob: -3.446843147277832
    9. '_run' → logprob: -3.696843147277832
    10. '_initialize' → logprob: -3.946843147277832

Token 502: 'update' (ID: 4076)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.07772278785705566
    2. 'prepare' → logprob: -2.7027227878570557
    3. 'push' → logprob: -5.577722549438477
    4. 'update' → logprob: -6.952722549438477
    5. 'process' → logprob: -7.077722549438477
    6. 'initialize' → logprob: -7.077722549438477
    7. 'populate' → logprob: -7.952722549438477
    8. 'build' → logprob: -8.327722549438477
    9. 'load' → logprob: -8.952722549438477
    10. 'execute' → logprob: -9.077722549438477

Token 503: '_ready' (ID: 78121)
  Prédit: '_eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eval' → logprob: -0.017917659133672714
    2. '_order' → logprob: -4.392917633056641
    3. 'eval' → logprob: -6.017917633056641
    4. '_ready' → logprob: -6.142917633056641
    5. '_e' → logprob: -7.892917633056641
    6. '_heap' → logprob: -8.89291763305664
    7. '_key' → logprob: -8.89291763305664
    8. '_priority' → logprob: -9.76791763305664
    9. 'order' → logprob: -10.39291763305664
    10. '_keys' → logprob: -11.76791763305664

Token 504: '_heap' (ID: 88741)
  Prédit: '_tasks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tasks' → logprob: -0.10088001936674118
    2. '_task' → logprob: -2.8508799076080322
    3. '_order' → logprob: -3.9758799076080322
    4. '_heap' → logprob: -4.100880146026611
    5. '()' → logprob: -6.975880146026611
    6. 'tasks' → logprob: -7.725880146026611
    7. '_' → logprob: -8.475879669189453
    8. '_eval' → logprob: -8.475879669189453
    9. '_ready' → logprob: -8.850879669189453
    10. '_orders' → logprob: -8.975879669189453

Token 505: '_order' (ID: 17446)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008756125462241471
    2. '(' → logprob: -7.250875473022461
    3. 'self' → logprob: -9.000875473022461
    4. '(
' → logprob: -10.625875473022461
    5. '   ' → logprob: -11.875875473022461
    6. '       ' → logprob: -12.250875473022461
    7. ' (' → logprob: -12.875875473022461
    8. '	self' → logprob: -14.000875473022461
    9. 'def' → logprob: -14.000875473022461
    10. ' ' → logprob: -15.000875473022461

Token 506: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.318681188422488e-05
    2. 'self' → logprob: -11.75001335144043
    3. '(' → logprob: -12.25001335144043
    4. '   ' → logprob: -15.12501335144043
    5. ' (' → logprob: -17.25001335144043
    6. '       ' → logprob: -17.37501335144043
    7. '()' → logprob: -17.50001335144043
    8. 'def' → logprob: -18.00001335144043
    9. '(s' → logprob: -18.12501335144043
    10. ' ' → logprob: -18.25001335144043

Token 507: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04526931047439575
    2. 'self' → logprob: -4.29526948928833
    3. '):' → logprob: -4.54526948928833
    4. ')(' → logprob: -4.67026948928833
    5. '):
' → logprob: -5.17026948928833
    6. ')' → logprob: -5.54526948928833
    7. '   ' → logprob: -8.045269012451172
    8. 's' → logprob: -8.795269012451172
    9. '(' → logprob: -8.795269012451172
    10. '):

' → logprob: -9.295269012451172

Token 508: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000969583576079458
    2. 'self' → logprob: -7.250969409942627
    3. 'temp' → logprob: -9.625969886779785
    4. ' self' → logprob: -9.750969886779785
    5. 'old' → logprob: -10.875969886779785
    6. 'tmp' → logprob: -11.000969886779785
    7. 'current' → logprob: -11.125969886779785
    8. '   ' → logprob: -11.500969886779785
    9. 'tasks' → logprob: -11.750969886779785
    10. '#' → logprob: -11.875969886779785

Token 509: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.17148160934448242
    2. 'new' → logprob: -2.7964816093444824
    3. '       ' → logprob: -3.1714816093444824
    4. 'keys' → logprob: -3.6714816093444824
    5. 'old' → logprob: -4.296481609344482
    6. '#' (adapté à ' #') → logprob: -4.921481609344482
    7. 'current' → logprob: -6.546481609344482
    8. 'tasks' → logprob: -6.546481609344482
    9. 'temp' → logprob: -6.671481609344482
    10. 'for' → logprob: -6.796481609344482

Token 510: ' When' (ID: 4296)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.4546146094799042
    2. 'self' → logprob: -1.7046146392822266
    3. 'keys' → logprob: -2.9546146392822266
    4. 'temp' → logprob: -3.4546146392822266
    5. '#' → logprob: -3.8296146392822266
    6. 'ready' → logprob: -4.079614639282227
    7. 'heap' → logprob: -4.079614639282227
    8. 'old' → logprob: -4.579614639282227
    9. 'tmp' → logprob: -4.829614639282227
    10. 'tasks' → logprob: -5.079614639282227

Token 511: ' eval' (ID: 29383)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04669933393597603
    2. ' self' → logprob: -3.171699285507202
    3. 'True' → logprob: -6.671699523925781
    4. 'len' → logprob: -6.921699523925781
    5. ' True' → logprob: -7.171699523925781
    6. 'order' → logprob: -8.921699523925781
    7. 'the' → logprob: -9.171699523925781
    8. ' the' → logprob: -9.296699523925781
    9. '#' → logprob: -9.421699523925781
    10. '
' → logprob: -9.671699523925781

Token 512: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.0008495326619595289
    2. 'uation' → logprob: -7.250849723815918
    3. 'u' → logprob: -9.125849723815918
    4. 'ution' → logprob: -10.875849723815918
    5. 'ual' → logprob: -12.500849723815918
    6. 'uating' → logprob: -13.250849723815918
    7. '   ' → logprob: -13.625849723815918
    8. 'uator' → logprob: -13.750849723815918
    9. 'order' → logprob: -13.875849723815918
    10. 'uated' → logprob: -14.250849723815918

Token 513: ' changes' (ID: 6629)
  Prédit: 'changes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changes' → logprob: -0.8131282329559326
    2. ' changes' → logprob: -1.0631282329559326
    3. '_changes' → logprob: -1.5631282329559326
    4. '   ' → logprob: -7.813128471374512
    5. 's' → logprob: -8.188128471374512
    6. ' is' → logprob: -8.438128471374512
    7. 'is' → logprob: -8.688128471374512
    8. '=' → logprob: -8.688128471374512
    9. '_change' → logprob: -8.813128471374512
    10. '_changed' → logprob: -9.438128471374512

Token 514: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05861591175198555
    2. '       ' → logprob: -3.5586159229278564
    3. ':' → logprob: -4.183615684509277
    4. ':
' → logprob: -4.558615684509277
    5. ',
' → logprob: -6.683615684509277
    6. 'self' → logprob: -8.058615684509277
    7. '):
' → logprob: -8.183615684509277
    8. '   ' → logprob: -8.308615684509277
    9. ' =' → logprob: -8.683615684509277
    10. '=' → logprob: -8.808615684509277

Token 515: ' need' (ID: 1309)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.9134124517440796
    2. 'old' → logprob: -1.1634124517440796
    3. 'new' → logprob: -1.7884124517440796
    4. ' old' → logprob: -3.163412570953369
    5. '       ' → logprob: -3.413412570953369
    6. 'self' → logprob: -4.038412570953369
    7. ' self' → logprob: -5.038412570953369
    8. 'tmp' → logprob: -5.038412570953369
    9. 'temp' → logprob: -5.538412570953369
    10. ' temp' → logprob: -6.288412570953369

Token 516: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6932443380355835
    2. 'to' → logprob: -0.6932443380355835
    3. '       ' → logprob: -10.193243980407715
    4. '   ' → logprob: -11.068243980407715
    5. 'def' → logprob: -11.318243980407715
    6. ' ' → logprob: -12.443243980407715
    7. ' =' → logprob: -12.568243980407715
    8. '
' → logprob: -12.568243980407715
    9. '_to' → logprob: -12.568243980407715
    10. '=' → logprob: -12.693243980407715

Token 517: ' re' (ID: 322)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.00015943869948387146
    2. ' rebuild' → logprob: -9.62515926361084
    3. 'heap' → logprob: -11.25015926361084
    4. 'res' → logprob: -11.37515926361084
    5. 'self' → logprob: -11.50015926361084
    6. 'refresh' → logprob: -11.50015926361084
    7. ' re' → logprob: -11.62515926361084
    8. 'reh' → logprob: -11.87515926361084
    9. 'replace' → logprob: -12.12515926361084
    10. 'ree' → logprob: -12.12515926361084

Token 518: '-' (ID: 12)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.47448039054870605
    2. 'build' → logprob: -0.974480390548706
    3. 'push' → logprob: -8.099480628967285
    4. '_heap' → logprob: -10.224480628967285
    5. ' heap' → logprob: -10.599480628967285
    6. '-' → logprob: -10.724480628967285
    7. '-build' → logprob: -12.349480628967285
    8. '_build' → logprob: -12.724480628967285
    9. ' build' → logprob: -12.974480628967285
    10. '
' → logprob: -13.349480628967285

Token 519: 'heap' (ID: 38535)
  Prédit: 'heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.14300532639026642
    2. 'build' → logprob: -2.14300537109375
    3. 'push' → logprob: -4.14300537109375
    4. 'compute' → logprob: -10.01800537109375
    5. ' heap' → logprob: -11.64300537109375
    6. '_heap' → logprob: -11.76800537109375
    7. 'key' → logprob: -12.64300537109375
    8. 'populate' → logprob: -12.76800537109375
    9. '
' → logprob: -13.76800537109375
    10. 'construct' → logprob: -13.76800537109375

Token 520: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.0003520277969073504
    2. 'q' → logprob: -8.625351905822754
    3. 'if' → logprob: -10.250351905822754
    4. 'fy' → logprob: -10.500351905822754
    5. 'lify' → logprob: -10.500351905822754
    6. 'f' → logprob: -11.000351905822754
    7. '   ' → logprob: -11.250351905822754
    8. '
' → logprob: -11.375351905822754
    9. '       ' → logprob: -11.750351905822754
    10. '

' → logprob: -12.000351905822754

Token 521: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19714213907718658
    2. 'self' → logprob: -2.4471421241760254
    3. 'tasks' → logprob: -3.3221421241760254
    4. 'tmp' → logprob: -4.697142124176025
    5. 'old' → logprob: -5.072142124176025
    6. 'task' → logprob: -5.072142124176025
    7. 'all' → logprob: -5.322142124176025
    8. ' =' → logprob: -5.322142124176025
    9. 'keys' → logprob: -5.322142124176025
    10. ' self' → logprob: -5.822142124176025

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031022541224956512
    2. 'self' → logprob: -6.2531023025512695
    3. ' self' → logprob: -7.3781023025512695
    4. ',' → logprob: -8.37810230255127
    5. '   ' → logprob: -8.87810230255127
    6. 'task' → logprob: -10.12810230255127
    7. ' task' → logprob: -10.37810230255127
    8. 'tasks' → logprob: -10.50310230255127
    9. ' current' → logprob: -11.25310230255127
    10. 'keys' → logprob: -11.87810230255127

Token 523: ' new' (ID: 620)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3728184700012207
    2. 'keys' → logprob: -2.3728184700012207
    3. 'old' → logprob: -2.4978184700012207
    4. 'new' (adapté à ' new') → logprob: -2.9978184700012207
    5. '       ' → logprob: -3.3728184700012207
    6. 'temp' → logprob: -4.497818470001221
    7. 'tasks' → logprob: -4.622818470001221
    8. 'all' → logprob: -4.872818470001221
    9. ' self' → logprob: -4.997818470001221
    10. 'tmp' → logprob: -5.122818470001221

Token 524: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.206966370344162
    2. '_ready' → logprob: -1.7069664001464844
    3. '_list' → logprob: -5.831966400146484
    4. '_keys' → logprob: -7.081966400146484
    5. '_tasks' → logprob: -7.331966400146484
    6. 'heap' → logprob: -7.956966400146484
    7. 'ready' → logprob: -8.331966400146484
    8. '_order' → logprob: -8.706966400146484
    9. '_items' → logprob: -8.831966400146484
    10. ' =' → logprob: -9.831966400146484

Token 525: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31414446234703064
    2. ' =' → logprob: -1.314144492149353
    3. '=[]' → logprob: -7.064144611358643
    4. '=[]
' → logprob: -11.564144134521484
    5. '   ' → logprob: -11.939144134521484
    6. ':' → logprob: -12.064144134521484
    7. '[:]' → logprob: -13.439144134521484
    8. '[]' → logprob: -14.064144134521484
    9. '=[' → logprob: -14.439144134521484
    10. '=
' → logprob: -14.439144134521484

Token 526: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10065562278032303
    2. '[]
' → logprob: -2.3506555557250977
    3. '[(' → logprob: -8.100655555725098
    4. '[' → logprob: -9.350655555725098
    5. '[
' → logprob: -10.100655555725098
    6. '[]

' → logprob: -11.100655555725098
    7. ' []' → logprob: -13.350655555725098
    8. '[],' → logprob: -15.100655555725098
    9. '[])
' → logprob: -15.475655555725098
    10. '[])' → logprob: -15.475655555725098

Token 527: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011761920526623726
    2. 'for' → logprob: -4.5117621421813965
    3. ' for' → logprob: -7.2617621421813965
    4. '   ' → logprob: -11.511761665344238
    5. '
' → logprob: -14.511761665344238
    6. '	for' → logprob: -14.886761665344238
    7. ' ' → logprob: -15.011761665344238
    8. ',' → logprob: -15.636761665344238
    9. '        
' → logprob: -15.761761665344238
    10. '	' → logprob: -16.011762619018555

Token 528: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014870671555399895
    2. '       ' → logprob: -4.264870643615723
    3. ' for' → logprob: -7.264870643615723
    4. '   ' → logprob: -12.639870643615723
    5. 'while' → logprob: -12.889870643615723
    6. '	for' → logprob: -13.639870643615723
    7. ' ' → logprob: -15.639870643615723
    8. '	' → logprob: -18.51487159729004
    9. '  ' → logprob: -18.51487159729004
    10. '      ' → logprob: -19.13987159729004

Token 529: ' _,' (ID: 18042)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.3587533235549927
    2. '_,' → logprob: -1.3587533235549927
    3. '(_,' → logprob: -3.483753204345703
    4. '(key' → logprob: -5.108753204345703
    5. '_key' → logprob: -5.233753204345703
    6. ' _,' → logprob: -6.858753204345703
    7. ' key' → logprob: -7.733753204345703
    8. '(_' → logprob: -8.483753204345703
    9. '(' → logprob: -8.733753204345703
    10. ',key' → logprob: -8.858753204345703

Token 530: ' tid' (ID: 8692)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'task' → logprob: -0.006724368315190077
    2. 'tid' → logprob: -5.0067243576049805
    3. ' task' → logprob: -11.75672435760498
    4. 't' → logprob: -14.63172435760498
    5. '(task' → logprob: -14.75672435760498
    6. ' tid' → logprob: -15.63172435760498
    7. '_task' → logprob: -16.131725311279297
    8. '_tid' → logprob: -17.131725311279297
    9. '	task' → logprob: -17.256725311279297
    10. 'ti' → logprob: -19.006725311279297

Token 531: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38732749223709106
    2. 'in' → logprob: -1.1373274326324463
    3. ',' → logprob: -7.762327671051025
    4. '       ' → logprob: -11.512327194213867
    5. '        ' → logprob: -12.137327194213867
    6. '   ' → logprob: -12.387327194213867
    7. ' ' → logprob: -12.887327194213867
    8. '    ' → logprob: -12.887327194213867
    9. ' ,' → logprob: -13.262327194213867
    10. '  ' → logprob: -14.012327194213867

Token 532: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.505351095460355e-05
    2. ' self' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.87507438659668
    4. '[self' → logprob: -18.50007438659668
    5. ' ' → logprob: -18.62507438659668
    6. '(self' → logprob: -18.87507438659668
    7. '	self' → logprob: -19.25007438659668
    8. '  ' → logprob: -20.37507438659668
    9. 'list' → logprob: -20.75007438659668
    10. '    ' → logprob: -21.00007438659668

Token 533: '.ready' (ID: 65119)
  Prédit: '.ready'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ready' → logprob: -0.008618712425231934
    2. 'ready' → logprob: -4.7586188316345215
    3. 'self' → logprob: -13.133618354797363
    4. ' ready' → logprob: -13.383618354797363
    5. 'Ready' → logprob: -15.758618354797363
    6. '_ready' → logprob: -16.25861930847168
    7. '   ' → logprob: -16.50861930847168
    8. '.' → logprob: -16.63361930847168
    9. '
' → logprob: -16.63361930847168
    10. ' .' → logprob: -16.88361930847168

Token 534: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -1.4021237802808173e-05
    2. '_tasks' → logprob: -12.000014305114746
    3. 'heap' → logprob: -12.000014305114746
    4. 'Heap' → logprob: -14.875014305114746
    5. '_task' → logprob: -15.000014305114746
    6. '
' → logprob: -15.875014305114746
    7. '   ' → logprob: -15.875014305114746
    8. '```' → logprob: -16.00001335144043
    9. '_' → logprob: -16.25001335144043
    10. '.heap' → logprob: -16.75001335144043

Token 535: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2263283133506775
    2. ':' → logprob: -1.6013283729553223
    3. '           ' → logprob: -7.476328372955322
    4. '):
' → logprob: -8.851327896118164
    5. '       ' → logprob: -8.976327896118164
    6. ':
' → logprob: -10.226327896118164
    7. ',' → logprob: -10.601327896118164
    8. '):' → logprob: -12.601327896118164
    9. ' :
' → logprob: -12.601327896118164
    10. ':

' → logprob: -13.101327896118164

Token 536: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00029482474201358855
    2. 'task' → logprob: -9.62529468536377
    3. 'self' → logprob: -9.87529468536377
    4. ',' → logprob: -9.87529468536377
    5. '	       ' → logprob: -11.00029468536377
    6. ' task' → logprob: -11.00029468536377
    7. '):
' → logprob: -11.25029468536377
    8. ' self' → logprob: -11.25029468536377
    9. '       ' → logprob: -11.50029468536377
    10. ':
' → logprob: -11.87529468536377

Token 537: ' task' (ID: 5296)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'task' (adapté à ' task') → logprob: -0.0714898630976677
    2. 'self' → logprob: -3.1964898109436035
    3. '           ' → logprob: -3.8214898109436035
    4. ' task' → logprob: -5.6964898109436035
    5. 'new' → logprob: -6.5714898109436035
    6. '       ' → logprob: -7.0714898109436035
    7. 'key' → logprob: -8.321490287780762
    8. ' self' → logprob: -8.946490287780762
    9. 't' → logprob: -9.696490287780762
    10. '	task' → logprob: -9.946490287780762

Token 538: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012513183988630772
    2. '=' → logprob: -4.387513160705566
    3. '_id' → logprob: -13.637513160705566
    4. ' ' → logprob: -14.262513160705566
    5. '   ' → logprob: -14.262513160705566
    6. '=_' → logprob: -15.512513160705566
    7. 'id' → logprob: -15.637513160705566
    8. '  ' → logprob: -16.137514114379883
    9. '=self' → logprob: -16.262514114379883
    10. ' =
' → logprob: -16.512514114379883

Token 539: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008620131760835648
    2. ' self' → logprob: -4.758620262145996
    3. '           ' → logprob: -12.383620262145996
    4. '       ' → logprob: -14.633620262145996
    5. '   ' → logprob: -15.758620262145996
    6. '[self' → logprob: -15.758620262145996
    7. '=self' → logprob: -15.758620262145996
    8. '	self' → logprob: -16.00861930847168
    9. '(self' → logprob: -16.38361930847168
    10. ' ' → logprob: -16.88361930847168

Token 540: '.task' (ID: 27230)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'task' → logprob: -0.34884458780288696
    2. '.task' → logprob: -1.2238445281982422
    3. ' task' → logprob: -8.223844528198242
    4. '_task' → logprob: -10.348844528198242
    5. 'self' → logprob: -10.598844528198242
    6. '	task' → logprob: -11.098844528198242
    7. 'user' → logprob: -11.098844528198242
    8. '
' → logprob: -11.223844528198242
    9. '.user' → logprob: -11.598844528198242
    10. 'tasks' → logprob: -11.973844528198242

Token 541: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -2.816093228830141e-06
    2. 'self' → logprob: -13.75000286102295
    3. '._' → logprob: -14.37500286102295
    4. 'Map' → logprob: -14.75000286102295
    5. 'map' → logprob: -15.37500286102295
    6. 's' → logprob: -16.250001907348633
    7. '_MAP' → logprob: -16.375001907348633
    8. '.map' → logprob: -16.500001907348633
    9. '_task' → logprob: -17.000001907348633
    10. 'id' → logprob: -17.375001907348633

Token 542: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.392202976712724e-06
    2. '(t' → logprob: -12.625006675720215
    3. 'tid' → logprob: -13.500006675720215
    4. '[
' → logprob: -14.125006675720215
    5. '[t' → logprob: -15.625006675720215
    6. '_tid' → logprob: -15.625006675720215
    7. ' [' → logprob: -15.875006675720215
    8. 't' → logprob: -16.1250057220459
    9. '```' → logprob: -16.3750057220459
    10. '
' → logprob: -16.7500057220459

Token 543: 'tid' (ID: 24066)
  Prédit: 'tid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tid' → logprob: -4.127333340875339e-06
    2. ' tid' → logprob: -12.500003814697266
    3. '_tid' → logprob: -14.875003814697266
    4. 't' → logprob: -17.750003814697266
    5. '(t' → logprob: -20.875003814697266
    6. '[' → logprob: -20.875003814697266
    7. 'ted' → logprob: -21.000003814697266
    8. '```' → logprob: -21.125003814697266
    9. 'ti' → logprob: -21.375003814697266
    10. '   ' → logprob: -21.875003814697266

Token 544: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.14806464314460754
    2. ']' → logprob: -2.023064613342285
    3. '           ' → logprob: -5.398064613342285
    4. ')
' → logprob: -8.023064613342285
    5. ']
' → logprob: -8.273064613342285
    6. ')' → logprob: -8.398064613342285
    7. ']

' → logprob: -11.398064613342285
    8. '       ' → logprob: -11.398064613342285
    9. ']()
' → logprob: -11.898064613342285
    10. ')]' → logprob: -13.023064613342285

Token 545: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002868417650461197
    2. '       ' → logprob: -9.125287055969238
    3. ' key' → logprob: -9.375287055969238
    4. 'key' → logprob: -10.500287055969238
    5. 'new' → logprob: -11.125287055969238
    6. '
' → logprob: -11.500287055969238
    7. ' new' → logprob: -11.625287055969238
    8. '```' → logprob: -11.875287055969238
    9. '	       ' → logprob: -11.875287055969238
    10. '   ' → logprob: -12.250287055969238

Token 546: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' (adapté à ' key') → logprob: -0.037993405014276505
    2. ' key' → logprob: -3.7879934310913086
    3. '           ' → logprob: -4.287993431091309
    4. 'new' → logprob: -7.162993431091309
    5. 'k' → logprob: -10.162993431091309
    6. '       ' → logprob: -10.412993431091309
    7. ' new' → logprob: -10.787993431091309
    8. '	key' → logprob: -11.412993431091309
    9. '   ' → logprob: -11.537993431091309
    10. 'heap' → logprob: -11.787993431091309

Token 547: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.100211963057518
    2. ' =' → logprob: -2.3502118587493896
    3. '=self' → logprob: -12.475212097167969
    4. ')' → logprob: -14.100212097167969
    5. '=
' → logprob: -14.725212097167969
    6. '=

' → logprob: -16.22521209716797
    7. ')=' → logprob: -16.60021209716797
    8. 'self' → logprob: -17.22521209716797
    9. '           ' → logprob: -17.47521209716797
    10. ' =
' → logprob: -17.60021209716797

Token 548: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048589304089546204
    2. ' self' → logprob: -3.0485892295837402
    3. '           ' → logprob: -13.423589706420898
    4. '=self' → logprob: -15.423589706420898
    5. '(self' → logprob: -16.1735897064209
    6. '	self' → logprob: -16.4235897064209
    7. '[self' → logprob: -17.2985897064209
    8. '               ' → logprob: -17.2985897064209
    9. '
' → logprob: -18.5485897064209
    10. '            ' → logprob: -18.9235897064209

Token 549: '.eval' (ID: 67829)
  Prédit: '.eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.eval' → logprob: -0.1797892451286316
    2. 'eval' → logprob: -1.8047893047332764
    3. 'self' → logprob: -10.429789543151855
    4. ' eval' → logprob: -12.304789543151855
    5. '_eval' → logprob: -12.804789543151855
    6. '.' → logprob: -13.429789543151855
    7. 'def' → logprob: -14.054789543151855
    8. 'Eval' → logprob: -14.179789543151855
    9. '(eval' → logprob: -14.304789543151855
    10. '.ev' → logprob: -14.679789543151855

Token 550: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -1.664371848164592e-05
    2. 'Order' → logprob: -11.250016212463379
    3. 'order' → logprob: -13.000016212463379
    4. '_ORDER' → logprob: -14.000016212463379
    5. 'self' → logprob: -16.500017166137695
    6. '.order' → logprob: -17.500017166137695
    7. '_Order' → logprob: -17.500017166137695
    8. '_queue' → logprob: -17.625017166137695
    9. '.Order' → logprob: -17.750017166137695
    10. '._' → logprob: -17.750017166137695

Token 551: '.key' (ID: 8839)
  Prédit: '.key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.key' → logprob: -2.1008713702030946e-06
    2. '.' → logprob: -13.125001907348633
    3. ' .' → logprob: -17.375001907348633
    4. 'key' → logprob: -18.125001907348633
    5. ' key' → logprob: -19.250001907348633
    6. '	key' → logprob: -20.000001907348633
    7. '.Key' → logprob: -20.375001907348633
    8. '.keys' → logprob: -20.875001907348633
    9. '[key' → logprob: -21.000001907348633
    10. '   ' → logprob: -21.250001907348633

Token 552: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -4.417976379045285e-05
    2. '._' → logprob: -11.125043869018555
    3. '.func' → logprob: -11.125043869018555
    4. '.key' → logprob: -12.125043869018555
    5. '```' → logprob: -12.875043869018555
    6. 'func' → logprob: -13.125043869018555
    7. '(key' → logprob: -13.500043869018555
    8. '_FUNC' → logprob: -14.375043869018555
    9. ')' → logprob: -14.875043869018555
    10. '_fun' → logprob: -15.000043869018555

Token 553: '(task' (ID: 32743)
  Prédit: '(task'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(task' → logprob: -2.935296834039036e-06
    2. 'task' → logprob: -12.75000286102295
    3. ' task' → logprob: -18.625003814697266
    4. '(' → logprob: -18.625003814697266
    5. '(t' → logprob: -20.500003814697266
    6. '	task' → logprob: -21.125003814697266
    7. '(Task' → logprob: -21.500003814697266
    8. '(tasks' → logprob: -21.750003814697266
    9. '(token' → logprob: -22.500003814697266
    10. ' (' → logprob: -22.875003814697266

Token 554: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3159240484237671
    2. ')
' → logprob: -1.315924048423767
    3. '           ' → logprob: -5.940924167633057
    4. ')
' → logprob: -10.940923690795898
    5. '),' → logprob: -12.940923690795898
    6. '       ' → logprob: -13.065923690795898
    7. '               ' → logprob: -13.065923690795898
    8. ',' → logprob: -14.315923690795898
    9. ')

' → logprob: -14.315923690795898
    10. '          ' → logprob: -14.440923690795898

Token 555: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001064486219547689
    2. 'new' → logprob: -7.001064300537109
    3. ' new' → logprob: -9.00106430053711
    4. '       ' → logprob: -11.12606430053711
    5. '```' → logprob: -12.62606430053711
    6. '   ' → logprob: -12.87606430053711
    7. '               ' → logprob: -13.00106430053711
    8. '	       ' → logprob: -13.62606430053711
    9. ')new' → logprob: -13.87606430053711
    10. '          ' → logprob: -13.87606430053711

Token 556: ' new' (ID: 620)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3071426451206207
    2. 'new' (adapté à ' new') → logprob: -1.4321426153182983
    3. ' new' → logprob: -3.807142734527588
    4. 'heap' → logprob: -5.807142734527588
    5. ' heap' → logprob: -8.55714225769043
    6. '   ' → logprob: -8.68214225769043
    7. '       ' → logprob: -9.93214225769043
    8. '               ' → logprob: -11.80714225769043
    9. '
' → logprob: -12.18214225769043
    10. ' ' → logprob: -12.93214225769043

Token 557: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.00032962486147880554
    2. 'heap' → logprob: -8.125329971313477
    3. 'new' → logprob: -11.500329971313477
    4. '
' → logprob: -11.500329971313477
    5. '.append' → logprob: -13.500329971313477
    6. '_key' → logprob: -13.625329971313477
    7. '.heap' → logprob: -13.625329971313477
    8. 'key' → logprob: -13.625329971313477
    9. '_he' → logprob: -13.875329971313477
    10. '   ' → logprob: -14.250329971313477

Token 558: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00036846695002168417
    2. '.' → logprob: -8.000368118286133
    3. 'append' → logprob: -10.625368118286133
    4. '.app' → logprob: -12.750368118286133
    5. '.push' → logprob: -12.875368118286133
    6. '.ap' → logprob: -13.750368118286133
    7. ' .' → logprob: -14.875368118286133
    8. 'pp' → logprob: -15.250368118286133
    9. '.p' → logprob: -15.250368118286133
    10. '.Append' → logprob: -15.250368118286133

Token 559: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.062039948999881744
    2. '(key' → logprob: -2.812039852142334
    3. '(' → logprob: -9.687040328979492
    4. ' (' → logprob: -11.562040328979492
    5. '   ' → logprob: -15.437040328979492
    6. ' ((' → logprob: -15.562040328979492
    7. '(
' → logprob: -15.937040328979492
    8. ' ' → logprob: -17.562040328979492
    9. '[key' → logprob: -17.812040328979492
    10. '(('' → logprob: -17.937040328979492

Token 560: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.676292231422849e-05
    2. ' key' → logprob: -11.000017166137695
    3. '(key' → logprob: -17.375017166137695
    4. '   ' → logprob: -20.125017166137695
    5. '	key' → logprob: -20.625017166137695
    6. '.key' → logprob: -22.125017166137695
    7. '
' → logprob: -22.125017166137695
    8. 'Key' → logprob: -22.250017166137695
    9. ',key' → logprob: -22.375017166137695
    10. '[key' → logprob: -22.500017166137695

Token 561: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.339278580620885e-06
    2. ' ,' → logprob: -13.875001907348633
    3. '<|end|>' → logprob: -14.125001907348633
    4. ',
' → logprob: -14.875001907348633
    5. '‌,' → logprob: -15.875001907348633
    6. ',user' → logprob: -18.000001907348633
    7. '<|end|>' → logprob: -18.000001907348633
    8. ',

' → logprob: -18.000001907348633
    9. ',t' → logprob: -18.125001907348633
    10. ',
' → logprob: -18.750001907348633

Token 562: ' tid' (ID: 8692)
  Prédit: 'tid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tid' → logprob: -0.16023458540439606
    2. ' tid' → logprob: -1.9102345705032349
    3. 'task' → logprob: -11.910234451293945
    4. '_tid' → logprob: -13.035234451293945
    5. ' task' → logprob: -14.785234451293945
    6. ' ' → logprob: -15.410234451293945
    7. '   ' → logprob: -15.410234451293945
    8. 'td' → logprob: -15.910234451293945
    9. 'ted' → logprob: -16.160234451293945
    10. ' tids' → logprob: -16.410234451293945

Token 563: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.221262127161026
    2. ')
' → logprob: -1.7212620973587036
    3. '))' → logprob: -4.471261978149414
    4. '))
' → logprob: -4.846261978149414
    5. '       ' → logprob: -7.971261978149414
    6. ')
' → logprob: -11.471261978149414
    7. '   ' → logprob: -13.221261978149414
    8. ')

' → logprob: -13.221261978149414
    9. ' )' → logprob: -13.846261978149414
    10. '))
' → logprob: -14.346261978149414

Token 564: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039454687386751175
    2. '
' → logprob: -3.289454698562622
    3. 'self' → logprob: -7.414454460144043
    4. '```' → logprob: -8.164454460144043
    5. '
' → logprob: -8.539454460144043
    6. ' self' → logprob: -8.789454460144043
    7. 'heap' → logprob: -9.664454460144043
    8. ' heap' → logprob: -10.664454460144043
    9. '        
' → logprob: -10.664454460144043
    10. '   ' → logprob: -11.289454460144043

Token 565: ' heap' (ID: 37237)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47848570346832275
    2. 'self' → logprob: -1.6034857034683228
    3. 'heap' (adapté à ' heap') → logprob: -2.228485584259033
    4. ' self' → logprob: -2.978485584259033
    5. ' heap' → logprob: -3.978485584259033
    6. '
' → logprob: -6.478485584259033
    7. '
' → logprob: -9.728486061096191
    8. 'import' → logprob: -9.853486061096191
    9. '.heap' → logprob: -10.228486061096191
    10. ' ' → logprob: -10.478486061096191

Token 566: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0003013809327967465
    2. '.heap' → logprob: -8.750301361083984
    3. 'ify' → logprob: -9.000301361083984
    4. 'heap' → logprob: -10.875301361083984
    5. '(heap' → logprob: -15.500301361083984
    6. 'hq' → logprob: -15.875301361083984
    7. 'ql' → logprob: -16.750301361083984
    8. 'qq' → logprob: -17.125301361083984
    9. '.he' → logprob: -17.125301361083984
    10. '.q' → logprob: -17.125301361083984

Token 567: '.heap' (ID: 177287)
  Prédit: '.heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.heap' → logprob: -0.00014191943046171218
    2. 'heap' → logprob: -9.000142097473145
    3. '.he' → logprob: -11.125142097473145
    4. 'q' → logprob: -12.750142097473145
    5. '.' → logprob: -14.500142097473145
    6. 'ify' → logprob: -15.500142097473145
    7. '(heap' → logprob: -16.625141143798828
    8. ' heap' → logprob: -17.000141143798828
    9. '._' → logprob: -17.125141143798828
    10. '.q' → logprob: -18.375141143798828

Token 568: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -7.719917630311102e-05
    2. 'q' → logprob: -9.625077247619629
    3. 'replace' → logprob: -11.875077247619629
    4. 'heap' → logprob: -12.750077247619629
    5. 'lify' → logprob: -14.250077247619629
    6. 'fy' → logprob: -14.750077247619629
    7. 'IFY' → logprob: -16.500076293945312
    8. 'if' → logprob: -16.750076293945312
    9. '.heap' → logprob: -16.875076293945312
    10. 'ush' → logprob: -17.750076293945312

Token 569: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -5.512236498361744e-07
    2. 'new' → logprob: -14.750000953674316
    3. '(self' → logprob: -16.875
    4. '(' → logprob: -17.25
    5. ',new' → logprob: -21.0
    6. '[new' → logprob: -21.125
    7. ')new' → logprob: -21.125
    8. ' (' → logprob: -21.5
    9. ' new' → logprob: -21.75
    10. '=new' → logprob: -21.875

Token 570: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.005256287753582001
    2. '_ready' → logprob: -5.755256175994873
    3. 'new' → logprob: -7.005256175994873
    4. 'heap' → logprob: -7.255256175994873
    5. 'ready' → logprob: -8.130256652832031
    6. ')' → logprob: -10.130256652832031
    7. '.heap' → logprob: -10.630256652832031
    8. 'e' → logprob: -10.880256652832031
    9. '_' → logprob: -11.130256652832031
    10. '_queue' → logprob: -11.380256652832031

Token 571: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6017783284187317
    2. ')
' → logprob: -1.226778268814087
    3. '       ' → logprob: -1.851778268814087
    4. '
' → logprob: -6.476778507232666
    5. 'self' → logprob: -8.476778030395508
    6. '   ' → logprob: -9.351778030395508
    7. ',' → logprob: -10.351778030395508
    8. '           ' → logprob: -10.726778030395508
    9. ')
' → logprob: -10.976778030395508
    10. '<|end|>' → logprob: -11.226778030395508

Token 572: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033370524179190397
    2. 'self' → logprob: -5.7533369064331055
    3. ' self' → logprob: -9.378336906433105
    4. '   ' → logprob: -10.378336906433105
    5. '```' → logprob: -11.378336906433105
    6. '<|end|>' → logprob: -11.378336906433105
    7. '	self' → logprob: -12.128336906433105
    8. '	' → logprob: -12.253336906433105
    9. '[' → logprob: -13.003336906433105
    10. ',' → logprob: -13.378336906433105

Token 573: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012367760064080358
    2. '       ' → logprob: -6.751236915588379
    3. ' self' → logprob: -9.626236915588379
    4. '	self' → logprob: -14.751236915588379
    5. '   ' → logprob: -15.626236915588379
    6. '(self' → logprob: -17.376235961914062
    7. '
' → logprob: -18.001235961914062
    8. '        
' → logprob: -18.376235961914062
    9. ',self' → logprob: -19.001235961914062
    10. '[self' → logprob: -19.001235961914062

Token 574: '.ready' (ID: 65119)
  Prédit: '.ready'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ready' → logprob: -0.000643095700070262
    2. 'ready' → logprob: -7.375643253326416
    3. ' ready' → logprob: -11.375642776489258
    4. '.' → logprob: -13.000642776489258
    5. ' .' → logprob: -13.000642776489258
    6. '_ready' → logprob: -14.875642776489258
    7. 'Ready' → logprob: -16.375642776489258
    8. '
' → logprob: -17.250642776489258
    9. '   ' → logprob: -18.500642776489258
    10. ').' → logprob: -19.000642776489258

Token 575: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -9.877503907773644e-05
    2. '_ready' → logprob: -9.250099182128906
    3. '_' → logprob: -14.500099182128906
    4. 'heap' → logprob: -14.500099182128906
    5. '_queue' → logprob: -14.625099182128906
    6. 'Heap' → logprob: -15.000099182128906
    7. '_stack' → logprob: -15.125099182128906
    8. '   ' → logprob: -16.375099182128906
    9. '\' → logprob: -16.375099182128906
    10. '.heap' → logprob: -16.750099182128906

Token 576: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269282102584839
    2. ' =' → logprob: -2.1269283294677734
    3. '.=' → logprob: -16.126928329467773
    4. '＝' → logprob: -16.626928329467773
    5. '[:]' → logprob: -17.501928329467773
    6. '=
' → logprob: -18.001928329467773
    7. '=

' → logprob: -18.001928329467773
    8. ' =
' → logprob: -18.376928329467773
    9. ',' → logprob: -18.626928329467773
    10. ' ' → logprob: -19.126928329467773

Token 577: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.0001584850688232109
    2. ' new' → logprob: -8.750158309936523
    3. '	new' → logprob: -21.125158309936523
    4. '_new' → logprob: -21.250158309936523
    5. '   ' → logprob: -21.750158309936523
    6. '
' → logprob: -22.000158309936523
    7. 'New' → logprob: -22.250158309936523
    8. '[new' → logprob: -22.375158309936523
    9. '`' → logprob: -23.000158309936523
    10. 'ne' → logprob: -23.125158309936523

Token 578: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -6.480199954239652e-05
    2. '_' → logprob: -10.500064849853516
    3. '_ready' → logprob: -10.750064849853516
    4. 'heap' → logprob: -12.125064849853516
    5. 'e' → logprob: -12.625064849853516
    6. 'w' → logprob: -13.000064849853516
    7. '_stack' → logprob: -14.000064849853516
    8. 'ew' → logprob: -14.250064849853516
    9. '.heap' → logprob: -14.375064849853516
    10. 'eep' → logprob: -14.875064849853516

Token 579: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 580: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03591466322541237
    2. 'def' → logprob: -3.410914659500122
    3. '<|end|>' → logprob: -7.035914897918701
    4. '    
' → logprob: -7.285914897918701
    5. ' def' → logprob: -7.910914897918701
    6. '```' → logprob: -9.285914421081543
    7. '
' → logprob: -9.660914421081543
    8. '<|end|>' → logprob: -10.035914421081543
    9. ' 
' → logprob: -10.910914421081543
    10. '	def' → logprob: -11.035914421081543

Token 581: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009912852197885513
    2. ' def' → logprob: -5.259912967681885
    3. '   ' → logprob: -5.384912967681885
    4. '
' → logprob: -9.634912490844727
    5. '	def' → logprob: -11.509912490844727
    6. '```' → logprob: -12.384912490844727
    7. '    
' → logprob: -13.134912490844727
    8. '@' → logprob: -15.509912490844727
    9. ' ' → logprob: -15.634912490844727
    10. 'ndef' → logprob: -15.759912490844727

Token 582: ' _' (ID: 1175)
  Prédit: ' run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.17845121026039124
    2. 'run' → logprob: -2.5534512996673584
    3. ' schedule' → logprob: -3.0534512996673584
    4. ' execute' → logprob: -4.178451061248779
    5. 'schedule' → logprob: -4.553451061248779
    6. 'execute' → logprob: -5.428451061248779
    7. ' pop' → logprob: -6.428451061248779
    8. ' process' → logprob: -6.553451061248779
    9. ' next' → logprob: -6.678451061248779
    10. '_run' → logprob: -7.053451061248779

Token 583: 'check' (ID: 3416)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.9885460138320923
    2. 'prepare' → logprob: -1.6135460138320923
    3. 'advance' → logprob: -1.7385460138320923
    4. 'execute' → logprob: -2.4885458946228027
    5. 'process' → logprob: -2.6135458946228027
    6. 'try' → logprob: -2.8635458946228027
    7. 'can' → logprob: -3.8635458946228027
    8. 'initialize' → logprob: -5.613545894622803
    9. 'update' → logprob: -5.738545894622803
    10. 'push' → logprob: -6.238545894622803

Token 584: '_order' (ID: 17446)
  Prédit: '_and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.7727553248405457
    2. '_change' → logprob: -1.6477553844451904
    3. '_next' → logprob: -2.1477553844451904
    4. '_order' → logprob: -2.5227553844451904
    5. '_changes' → logprob: -2.5227553844451904
    6. '_for' → logprob: -3.0227553844451904
    7. '_schedule' → logprob: -5.272755146026611
    8. '_' → logprob: -5.647755146026611
    9. '_ready' → logprob: -5.772755146026611
    10. '_eval' → logprob: -6.397755146026611

Token 585: '_change' (ID: 36082)
  Prédit: '_change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.032316286116838455
    2. '_changes' → logprob: -3.657316207885742
    3. '()' → logprob: -5.407316207885742
    4. 'change' → logprob: -8.157316207885742
    5. '_' → logprob: -8.282316207885742
    6. '_update' → logprob: -8.407316207885742
    7. '_points' → logprob: -8.657316207885742
    8. '(self' → logprob: -8.907316207885742
    9. '(' → logprob: -9.032316207885742
    10. 's' → logprob: -9.782316207885742

Token 586: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007847334491088986
    2. '(' → logprob: -7.375784873962402
    3. 'self' → logprob: -9.000784873962402
    4. ' (' → logprob: -11.125784873962402
    5. '   ' → logprob: -12.125784873962402
    6. '()' → logprob: -12.125784873962402
    7. 's' → logprob: -12.625784873962402
    8. '(s' → logprob: -13.250784873962402
    9. '(
' → logprob: -13.750784873962402
    10. '       ' → logprob: -14.750784873962402

Token 587: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.015140647068619728
    2. 'self' → logprob: -4.390140533447266
    3. ',' → logprob: -6.765140533447266
    4. '):' → logprob: -7.765140533447266
    5. '):
' → logprob: -7.890140533447266
    6. '   ' → logprob: -8.140140533447266
    7. '       ' → logprob: -9.015140533447266
    8. ' (' → logprob: -9.640140533447266
    9. ')(' → logprob: -9.890140533447266
    10. '(' → logprob: -10.140140533447266

Token 588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010235115041723475
    2. 'if' → logprob: -9.875102043151855
    3. ' if' → logprob: -10.000102043151855
    4. '   ' → logprob: -13.500102043151855
    5. ':' → logprob: -14.250102043151855
    6. ',' → logprob: -14.250102043151855
    7. '	' → logprob: -14.375102043151855
    8. '      ' → logprob: -14.625102043151855
    9. '#' → logprob: -14.750102043151855
    10. '    ' → logprob: -15.375102043151855

Token 589: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24093618988990784
    2. 'if' → logprob: -1.7409361600875854
    3. 'while' → logprob: -3.365936279296875
    4. ' if' → logprob: -5.615936279296875
    5. ' while' → logprob: -7.490936279296875
    6. '   ' → logprob: -12.240936279296875
    7. 'self' → logprob: -12.490936279296875
    8. '```' → logprob: -12.490936279296875
    9. '#' (adapté à ' #') → logprob: -12.865936279296875
    10. '           ' → logprob: -13.865936279296875

Token 590: ' If' (ID: 1843)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5764594674110413
    2. 'if' → logprob: -0.8264594674110413
    3. '       ' → logprob: -8.076459884643555
    4. ' while' → logprob: -8.826459884643555
    5. ' if' → logprob: -10.076459884643555
    6. '   ' → logprob: -11.201459884643555
    7. 'count' → logprob: -12.326459884643555
    8. '#' → logprob: -14.576459884643555
    9. '	while' → logprob: -14.576459884643555
    10. 'current' → logprob: -14.701459884643555

Token 591: ' current' (ID: 2208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10021961480379105
    2. ' self' → logprob: -2.3502197265625
    3. '(self' → logprob: -12.1002197265625
    4. ' ' → logprob: -13.1002197265625
    5. ' not' → logprob: -13.2252197265625
    6. '   ' → logprob: -13.7252197265625
    7. 'not' → logprob: -13.7252197265625
    8. ' (' → logprob: -14.1002197265625
    9. '  ' → logprob: -15.1002197265625
    10. '(' → logprob: -16.4752197265625

Token 592: ' executed' (ID: 30830)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6745343804359436
    2. '_count' → logprob: -1.2995343208312988
    3. ' executed' → logprob: -2.924534320831299
    4. 'execut' → logprob: -2.924534320831299
    5. ' self' → logprob: -3.049534320831299
    6. 'count' → logprob: -3.924534320831299
    7. '_ex' → logprob: -4.174534320831299
    8. '   ' → logprob: -5.049534320831299
    9. '==' → logprob: -5.299534320831299
    10. ' ==' → logprob: -5.924534320831299

Token 593: ' count' (ID: 3605)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0007880675257183611
    2. '==' → logprob: -8.000787734985352
    3. '_' → logprob: -8.125787734985352
    4. 'count' → logprob: -10.000787734985352
    5. '>=' → logprob: -10.250787734985352
    6. ' ==' → logprob: -10.375787734985352
    7. ' _' → logprob: -11.625787734985352
    8. '```' → logprob: -12.375787734985352
    9. '_tasks' → logprob: -12.375787734985352
    10. ' ' → logprob: -12.500787734985352

Token 594: ' matches' (ID: 15248)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4054494798183441
    2. ' ==' → logprob: -1.4054495096206665
    3. '>=' → logprob: -2.530449390411377
    4. ' >=' → logprob: -4.780449390411377
    5. '   ' → logprob: -10.780449867248535
    6. '>' → logprob: -11.780449867248535
    7. '=' → logprob: -11.905449867248535
    8. '+' → logprob: -12.405449867248535
    9. ' ' → logprob: -12.780449867248535
    10. '==
' → logprob: -12.905449867248535

Token 595: ' next' (ID: 2613)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009407619945704937
    2. ' self' → logprob: -7.250940799713135
    3. '       ' → logprob: -9.125940322875977
    4. '(self' → logprob: -9.125940322875977
    5. '=self' → logprob: -12.375940322875977
    6. '   ' → logprob: -12.500940322875977
    7. 'the' → logprob: -12.875940322875977
    8. 'next' → logprob: -13.875940322875977
    9. '
' → logprob: -14.250940322875977
    10. 'if' → logprob: -14.750940322875977

Token 596: ' change' (ID: 3343)
  Prédit: '_change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.02345498837530613
    2. ' change' → logprob: -4.1484551429748535
    3. 'change' → logprob: -5.3984551429748535
    4. 'self' → logprob: -6.6484551429748535
    5. '_' → logprob: -7.6484551429748535
    6. '   ' → logprob: -7.8984551429748535
    7. ' self' → logprob: -8.398454666137695
    8. '_order' → logprob: -9.023454666137695
    9. '(self' → logprob: -9.898454666137695
    10. ' _' → logprob: -10.148454666137695

Token 597: ' point' (ID: 2438)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4004223346710205
    2. 'and' → logprob: -1.2754223346710205
    3. '_count' → logprob: -3.5254223346710205
    4. '_' → logprob: -5.275422096252441
    5. ' is' → logprob: -6.025422096252441
    6. ':' → logprob: -6.025422096252441
    7. '   ' → logprob: -6.150422096252441
    8. ' ==' → logprob: -6.275422096252441
    9. '==' → logprob: -6.275422096252441
    10. ',' → logprob: -6.400422096252441

Token 598: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.109116330742836
    2. 'and' → logprob: -2.609116315841675
    3. ':' → logprob: -4.484116554260254
    4. ',' → logprob: -4.734116554260254
    5. '==' → logprob: -5.234116554260254
    6. ' ==' → logprob: -6.109116554260254
    7. '       ' → logprob: -6.609116554260254
    8. '   ' → logprob: -7.984116554260254
    9. '           ' → logprob: -8.859116554260254
    10. ':
' → logprob: -8.859116554260254

Token 599: ' update' (ID: 4027)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36493831872940063
    2. 'return' → logprob: -2.489938259124756
    3. ' return' → logprob: -2.614938259124756
    4. 'if' → logprob: -2.864938259124756
    5. ' if' → logprob: -3.114938259124756
    6. 'self' → logprob: -3.364938259124756
    7. '       ' → logprob: -4.989938259124756
    8. ' self' → logprob: -5.364938259124756
    9. 'while' → logprob: -6.864938259124756
    10. ' while' → logprob: -8.239938735961914

Token 600: ' order' (ID: 2569)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1604764759540558
    2. '(self' → logprob: -3.0354764461517334
    3. '   ' → logprob: -3.6604764461517334
    4. '       ' → logprob: -3.9104764461517334
    5. '(
' → logprob: -3.9104764461517334
    6. 'eval' → logprob: -4.2854766845703125
    7. 'the' → logprob: -5.1604766845703125
    8. 'if' → logprob: -5.7854766845703125
    9. ' self' → logprob: -5.7854766845703125
    10. '           ' → logprob: -5.7854766845703125

Token 601: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014376122271642089
    2. ' and' → logprob: -7.501437664031982
    3. ',' → logprob: -7.751437664031982
    4. ':' → logprob: -8.376437187194824
    5. ' if' → logprob: -9.251437187194824
    6. '(' → logprob: -10.126437187194824
    7. 'if' → logprob: -11.001437187194824
    8. '   ' → logprob: -11.126437187194824
    9. 'and' → logprob: -11.501437187194824
    10. '           ' → logprob: -11.501437187194824

Token 602: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000644764571916312
    2. '   ' → logprob: -8.25064468383789
    3. '(' → logprob: -8.75064468383789
    4. ':' → logprob: -9.75064468383789
    5. ',' → logprob: -9.87564468383789
    6. ' and' → logprob: -10.75064468383789
    7. '(self' → logprob: -10.75064468383789
    8. 'if' → logprob: -11.12564468383789
    9. ' if' → logprob: -11.50064468383789
    10. '           ' → logprob: -12.00064468383789

Token 603: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07020628452301025
    2. 'if' (adapté à ' if') → logprob: -2.9452061653137207
    3. ' if' → logprob: -4.195206165313721
    4. '   ' → logprob: -9.320206642150879
    5. 'while' → logprob: -10.445206642150879
    6. ' while' → logprob: -11.945206642150879
    7. '    ' → logprob: -12.695206642150879
    8. ',' → logprob: -13.320206642150879
    9. ' ' → logprob: -13.320206642150879
    10. '      ' → logprob: -13.570206642150879

Token 604: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20147453248500824
    2. ' self' → logprob: -1.7014745473861694
    3. '       ' → logprob: -9.9514741897583
    4. '(self' → logprob: -11.5764741897583
    5. '   ' → logprob: -12.8264741897583
    6. '           ' → logprob: -13.9514741897583
    7. '    ' → logprob: -15.9514741897583
    8. '	self' → logprob: -15.9514741897583
    9. '        ' → logprob: -16.201475143432617
    10. ' ' → logprob: -16.826475143432617

Token 605: '.next' (ID: 6689)
  Prédit: '.execut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.execut' → logprob: -0.004173491150140762
    2. '.next' → logprob: -5.504173278808594
    3. 'execut' → logprob: -9.754173278808594
    4. '.' → logprob: -10.504173278808594
    5. ' .' → logprob: -12.504173278808594
    6. 'next' → logprob: -13.379173278808594
    7. '   ' → logprob: -14.129173278808594
    8. '==' → logprob: -14.379173278808594
    9. ').' → logprob: -14.504173278808594
    10. '.exec' → logprob: -14.754173278808594

Token 606: '_change' (ID: 36082)
  Prédit: '_change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.0013603554107248783
    2. '_' → logprob: -7.3763604164123535
    3. ' is' → logprob: -8.376359939575195
    4. '[' → logprob: -8.376359939575195
    5. '
' → logprob: -10.126359939575195
    6. '._' → logprob: -10.251359939575195
    7. 'change' → logprob: -10.251359939575195
    8. 'Change' → logprob: -11.001359939575195
    9. '_changes' → logprob: -11.251359939575195
    10. '_count' → logprob: -11.251359939575195

Token 607: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5038521885871887
    2. ' is' → logprob: -1.503852128982544
    3. ' and' → logprob: -2.003852128982544
    4. 'is' → logprob: -3.253852128982544
    5. '[' → logprob: -9.753851890563965
    6. '   ' → logprob: -11.378851890563965
    7. '       ' → logprob: -12.628851890563965
    8. ' ' → logprob: -12.753851890563965
    9. '    ' → logprob: -13.003851890563965
    10. '!=' → logprob: -13.128851890563965

Token 608: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0038701395969837904
    2. ' self' → logprob: -5.628870010375977
    3. '           ' → logprob: -8.253870010375977
    4. '       ' → logprob: -11.878870010375977
    5. '   ' → logprob: -13.253870010375977
    6. '	self' → logprob: -15.003870010375977
    7. '(self' → logprob: -15.378870010375977
    8. '         ' → logprob: -15.878870010375977
    9. '               ' → logprob: -15.878870010375977
    10. '          ' → logprob: -16.753870010375977

Token 609: '.execut' (ID: 195634)
  Prédit: '.execut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.execut' → logprob: -0.0011377158807590604
    2. 'execut' → logprob: -6.876137733459473
    3. '.next' → logprob: -9.876137733459473
    4. '[' → logprob: -10.501137733459473
    5. ' .' → logprob: -11.501137733459473
    6. '.' → logprob: -11.751137733459473
    7. 'next' → logprob: -13.001137733459473
    8. '.Execut' → logprob: -13.626137733459473
    9. '   ' → logprob: -14.126137733459473
    10. ').' → logprob: -14.376137733459473

Token 610: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.04907814413309097
    2. 'uted' → logprob: -3.0490782260894775
    3. 'ut' → logprob: -8.174077987670898
    4. '_count' → logprob: -9.924077987670898
    5. 'ted' → logprob: -10.924077987670898
    6. '[' → logprob: -11.174077987670898
    7. '\' → logprob: -11.174077987670898
    8. '#' → logprob: -11.299077987670898
    9. '__' → logprob: -11.674077987670898
    10. '_' → logprob: -11.799077987670898

Token 611: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00042686203960329294
    2. '==' → logprob: -8.12542724609375
    3. '_' → logprob: -9.37542724609375
    4. ' ==' → logprob: -11.00042724609375
    5. 'count' → logprob: -11.50042724609375
    6. ' _' → logprob: -11.87542724609375
    7. '   ' → logprob: -12.37542724609375
    8. '
' → logprob: -14.12542724609375
    9. '>=' → logprob: -14.12542724609375
    10. '_counts' → logprob: -14.25042724609375

Token 612: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38790804147720337
    2. '==' → logprob: -1.1379079818725586
    3. ' >=' → logprob: -7.512907981872559
    4. '>=' → logprob: -7.637907981872559
    5. '=' → logprob: -12.137907981872559
    6. '[' → logprob: -13.762907981872559
    7. '==
' → logprob: -13.887907981872559
    8. ' ' → logprob: -14.637907981872559
    9. ' ==
' → logprob: -15.387907981872559
    10. ' =' → logprob: -15.887907981872559

Token 613: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000553151941858232
    2. ' self' → logprob: -7.500553131103516
    3. '(self' → logprob: -16.625553131103516
    4. '   ' → logprob: -17.125553131103516
    5. '[self' → logprob: -17.375553131103516
    6. '       ' → logprob: -17.750553131103516
    7. '
' → logprob: -17.875553131103516
    8. '           ' → logprob: -18.125553131103516
    9. '	self' → logprob: -18.125553131103516
    10. '=self' → logprob: -18.375553131103516

Token 614: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.000912774819880724
    2. 'next' → logprob: -7.000912666320801
    3. '_next' → logprob: -14.1259126663208
    4. '[next' → logprob: -15.3759126663208
    5. '.' → logprob: -16.125913619995117
    6. ' next' → logprob: -16.500913619995117
    7. '	next' → logprob: -17.625913619995117
    8. '.change' → logprob: -17.875913619995117
    9. '_change' → logprob: -18.000913619995117
    10. '
' → logprob: -18.375913619995117

Token 615: '_change' (ID: 36082)
  Prédit: '_change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -3.650518920039758e-06
    2. '.change' → logprob: -13.125003814697266
    3. 'change' → logprob: -13.750003814697266
    4. '.Change' → logprob: -16.250003814697266
    5. '_CHANGE' → logprob: -16.375003814697266
    6. 'next' → logprob: -16.625003814697266
    7. '.next' → logprob: -16.625003814697266
    8. '._' → logprob: -16.750003814697266
    9. 'Change' → logprob: -16.750003814697266
    10. 'self' → logprob: -17.125003814697266

Token 616: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.1782583391759545e-05
    2. ' [' → logprob: -10.500031471252441
    3. '   ' → logprob: -14.000031471252441
    4. '0' → logprob: -14.250031471252441
    5. '
' → logprob: -14.250031471252441
    6. ' ' → logprob: -14.375031471252441
    7. '[
' → logprob: -14.625031471252441
    8. '()[' → logprob: -15.375031471252441
    9. '```' → logprob: -15.625031471252441
    10. '1' → logprob: -16.250032424926758

Token 617: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.500005722045898
    3. '[' → logprob: -14.250005722045898
    4. '   ' → logprob: -15.312505722045898
    5. '00' → logprob: -15.625005722045898
    6. '
' → logprob: -15.625005722045898
    7. '1' → logprob: -16.3125057220459
    8. '```' → logprob: -16.6250057220459
    9. '۰' → logprob: -16.6875057220459
    10. '=' → logprob: -17.0000057220459

Token 618: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8270394802093506
    2. ':' → logprob: -1.0770394802093506
    3. '):' → logprob: -1.7020394802093506
    4. ':
' → logprob: -3.5770394802093506
    5. ']:' → logprob: -5.07703971862793
    6. ']:
' → logprob: -5.45203971862793
    7. ',' → logprob: -8.20203971862793
    8. ')' → logprob: -8.32703971862793
    9. '       ' → logprob: -8.45203971862793
    10. '):
' → logprob: -8.82703971862793

Token 619: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5576220750808716
    2. '           ' → logprob: -1.3076220750808716
    3. ':' → logprob: -2.307621955871582
    4. '       ' → logprob: -3.057621955871582
    5. '
' → logprob: -6.057621955871582
    6. 'self' → logprob: -6.057621955871582
    7. '```' → logprob: -6.307621955871582
    8. '):
' → logprob: -6.682621955871582
    9. '():
' → logprob: -7.057621955871582
    10. '(self' → logprob: -7.682621955871582

Token 620: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3230220377445221
    2. '           ' → logprob: -1.4480220079421997
    3. ' self' → logprob: -3.1980221271514893
    4. '               ' → logprob: -9.69802188873291
    5. '
' → logprob: -10.57302188873291
    6. '   ' → logprob: -10.94802188873291
    7. '(self' → logprob: -11.19802188873291
    8. '	self' → logprob: -11.57302188873291
    9. '       ' → logprob: -11.69802188873291
    10. ',self' → logprob: -12.07302188873291

Token 621: '.eval' (ID: 67829)
  Prédit: '.eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.eval' → logprob: -0.009838494472205639
    2. '.' → logprob: -4.634838581085205
    3. 'eval' → logprob: -10.009838104248047
    4. '.e' → logprob: -11.384838104248047
    5. '.exec' → logprob: -11.634838104248047
    6. '=' → logprob: -12.384838104248047
    7. ' .' → logprob: -12.634838104248047
    8. '.evaluate' → logprob: -12.634838104248047
    9. '.ev' → logprob: -13.884838104248047
    10. '
' → logprob: -14.259838104248047

Token 622: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -6.704273118884885e-07
    2. 'order' → logprob: -15.500000953674316
    3. 'Order' → logprob: -16.125
    4. '_' → logprob: -16.5
    5. '_orders' → logprob: -16.625
    6. '._' → logprob: -16.875
    7. '_ORDER' → logprob: -17.375
    8. '\' → logprob: -17.75
    9. ' _' → logprob: -18.125
    10. '   ' → logprob: -18.5

Token 623: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519296407699585
    2. ' =' → logprob: -1.5019296407699585
    3. ',' → logprob: -15.00192928314209
    4. '=self' → logprob: -15.50192928314209
    5. '=

' → logprob: -17.001930236816406
    6. '＝' → logprob: -17.376930236816406
    7. '   ' → logprob: -18.001930236816406
    8. '.=' → logprob: -18.251930236816406
    9. '=
' → logprob: -18.876930236816406
    10. ' ' → logprob: -19.126930236816406

Token 624: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00672566844150424
    2. ' self' → logprob: -5.006725788116455
    3. '           ' → logprob: -11.506725311279297
    4. '(self' → logprob: -16.131725311279297
    5. '[self' → logprob: -16.881725311279297
    6. '	self' → logprob: -16.881725311279297
    7. '               ' → logprob: -16.881725311279297
    8. '=self' → logprob: -17.631725311279297
    9. '       ' → logprob: -18.006725311279297
    10. 'Self' → logprob: -18.506725311279297

Token 625: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.018150877207517624
    2. 'next' → logprob: -4.018150806427002
    3. ' next' → logprob: -14.01815128326416
    4. '[next' → logprob: -15.76815128326416
    5. '	next' → logprob: -17.643150329589844
    6. '.' → logprob: -17.643150329589844
    7. '_next' → logprob: -17.893150329589844
    8. '(next' → logprob: -18.893150329589844
    9. 'eval' → logprob: -19.893150329589844
    10. ',next' → logprob: -20.018150329589844

Token 626: '_change' (ID: 36082)
  Prédit: '_change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -7.822646693966817e-06
    2. '.change' → logprob: -12.500007629394531
    3. 'Change' → logprob: -13.125007629394531
    4. 'change' → logprob: -13.750007629394531
    5. '.Change' → logprob: -14.875007629394531
    6. '._' → logprob: -15.125007629394531
    7. '_CHANGE' → logprob: -16.00000762939453
    8. '_changes' → logprob: -16.62500762939453
    9. '_check' → logprob: -17.25000762939453
    10. '_changed' → logprob: -17.37500762939453

Token 627: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '   ' → logprob: -18.625
    3. '           ' → logprob: -18.75
    4. ' [' → logprob: -18.875
    5. '       ' → logprob: -20.5
    6. ',' → logprob: -20.75
    7. '```' → logprob: -20.75
    8. '[
' → logprob: -20.875
    9. '(' → logprob: -21.125
    10. '()[' → logprob: -21.125

Token 628: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9743012671824545e-05
    2. '[' → logprob: -10.875020027160645
    3. '```' → logprob: -15.375020027160645
    4. ' ' → logprob: -16.125019073486328
    5. '
' → logprob: -16.250019073486328
    6. '][' → logprob: -16.250019073486328
    7. ',' → logprob: -16.625019073486328
    8. '   ' → logprob: -17.000019073486328
    9. '`' → logprob: -17.750019073486328
    10. '-' → logprob: -17.750019073486328

Token 629: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6915847659111023
    2. ')' → logprob: -0.8165847659111023
    3. ')
' → logprob: -3.316584825515747
    4. '<|end|>' → logprob: -4.191584587097168
    5. '
' → logprob: -5.566584587097168
    6. ']' → logprob: -7.316584587097168
    7. '<|end|>' → logprob: -7.816584587097168
    8. '       ' → logprob: -8.441584587097168
    9. ',' → logprob: -8.441584587097168
    10. '               ' → logprob: -8.816584587097168

Token 630: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012689977302215993
    2. 'self' → logprob: -9.125126838684082
    3. '
' → logprob: -11.625126838684082
    4. '       ' → logprob: -12.000126838684082
    5. '            
' → logprob: -13.875126838684082
    6. '               ' → logprob: -14.125126838684082
    7. '   ' → logprob: -14.875126838684082
    8. '```' → logprob: -15.250126838684082
    9. '          ' → logprob: -15.750126838684082
    10. ' self' → logprob: -16.5001277923584

Token 631: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.693684458732605
    2. 'self' (adapté à ' self') → logprob: -0.693684458732605
    3. ' self' → logprob: -7.5686845779418945
    4. '   ' → logprob: -11.568684577941895
    5. 'for' → logprob: -12.568684577941895
    6. '       ' → logprob: -13.193684577941895
    7. '	self' → logprob: -13.443684577941895
    8. '(self' → logprob: -13.693684577941895
    9. '          ' → logprob: -14.443684577941895
    10. '
' → logprob: -14.818684577941895

Token 632: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.004096208605915308
    2. '_update' → logprob: -5.504096031188965
    3. '.next' → logprob: -11.879096031188965
    4. '.update' → logprob: -12.254096031188965
    5. '_next' → logprob: -12.629096031188965
    6. '   ' → logprob: -13.504096031188965
    7. '.' → logprob: -13.754096031188965
    8. ' _' → logprob: -16.12909698486328
    9. 'next' → logprob: -17.00409698486328
    10. '_change' → logprob: -17.25409698486328

Token 633: 'update' (ID: 4076)
  Prédit: 'update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -2.1008713702030946e-06
    2. '_update' → logprob: -13.250001907348633
    3. ' update' → logprob: -16.250001907348633
    4. '.update' → logprob: -16.625001907348633
    5. '	update' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.000001907348633
    7. '_' → logprob: -18.250001907348633
    8. 'check' → logprob: -18.250001907348633
    9. '
' → logprob: -18.625001907348633
    10. 'push' → logprob: -18.875001907348633

Token 634: '_ready' (ID: 78121)
  Prédit: '_ready'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ready' → logprob: -0.00012356207298580557
    2. 'ready' → logprob: -9.000123977661133
    3. ' ready' → logprob: -17.250123977661133
    4. '_READY' → logprob: -17.375123977661133
    5. 'Ready' → logprob: -17.750123977661133
    6. '-ready' → logprob: -18.375123977661133
    7. '```' → logprob: -18.875123977661133
    8. 'READY' → logprob: -20.375123977661133
    9. '.ready' → logprob: -20.625123977661133
    10. '_available' → logprob: -20.625123977661133

Token 635: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -1.1160349458805285e-05
    2. 'heap' → logprob: -11.875011444091797
    3. '_ready' → logprob: -12.875011444091797
    4. '_order' → logprob: -13.500011444091797
    5. '```' → logprob: -16.625011444091797
    6. 'Heap' → logprob: -16.875011444091797
    7. '_stack' → logprob: -17.000011444091797
    8. '_queue' → logprob: -17.250011444091797
    9. '_' → logprob: -17.375011444091797
    10. '_hash' → logprob: -18.750011444091797

Token 636: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -1.4021237802808173e-05
    2. '()' → logprob: -12.500014305114746
    3. '_heap' → logprob: -12.750014305114746
    4. '(' → logprob: -13.375014305114746
    5. 'order' → logprob: -13.500014305114746
    6. '(_' → logprob: -14.250014305114746
    7. '(-' → logprob: -14.250014305114746
    8. '()
' → logprob: -15.000014305114746
    9. '(None' → logprob: -15.000014305114746
    10. '```' → logprob: -15.125014305114746

Token 637: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00044651966891251504
    2. '
' → logprob: -7.750446319580078
    3. 'self' → logprob: -12.000446319580078
    4. '            
' → logprob: -12.500446319580078
    5. '       ' → logprob: -13.125446319580078
    6. ',' → logprob: -13.500446319580078
    7. '               ' → logprob: -14.000446319580078
    8. '   ' → logprob: -14.500446319580078
    9. '          ' → logprob: -15.500446319580078
    10. '    
' → logprob: -15.625446319580078

Token 638: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022761584841646254
    2. 'self' → logprob: -8.625227928161621
    3. '       ' → logprob: -10.625227928161621
    4. '
' → logprob: -11.625227928161621
    5. '            
' → logprob: -11.750227928161621
    6. '```' → logprob: -13.000227928161621
    7. '   ' → logprob: -13.250227928161621
    8. '               ' → logprob: -14.250227928161621
    9. '    
' → logprob: -14.375227928161621
    10. '          ' → logprob: -15.125227928161621

Token 639: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.31379997730255127
    2. '           ' → logprob: -1.3137999773025513
    3. ' self' → logprob: -7.563799858093262
    4. '
' → logprob: -11.938799858093262
    5. 'import' → logprob: -12.938799858093262
    6. '       ' → logprob: -13.188799858093262
    7. '   ' → logprob: -13.563799858093262
    8. '            
' → logprob: -13.938799858093262
    9. '               ' → logprob: -14.063799858093262
    10. '(self' → logprob: -14.313799858093262

Token 640: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -2.3199920178740285e-05
    2. 'next' → logprob: -10.875022888183594
    3. '.' → logprob: -12.750022888183594
    4. '.change' → logprob: -13.875022888183594
    5. '       ' → logprob: -16.000022888183594
    6. '
' → logprob: -16.500022888183594
    7. '   ' → logprob: -17.500022888183594
    8. ' next' → logprob: -17.500022888183594
    9. '	next' → logprob: -17.500022888183594
    10. 'change' → logprob: -17.625022888183594

Token 641: '_change' (ID: 36082)
  Prédit: '_change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -4.60414821645827e-06
    2. 'Change' → logprob: -13.875004768371582
    3. 'change' → logprob: -14.000004768371582
    4. '_changed' → logprob: -14.625004768371582
    5. '=_' → logprob: -15.125004768371582
    6. '_CHANGE' → logprob: -15.250004768371582
    7. '       ' → logprob: -15.375004768371582
    8. '           ' → logprob: -15.375004768371582
    9. '_changes' → logprob: -15.500004768371582
    10. '   ' → logprob: -15.750004768371582

Token 642: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -9.615255839889869e-05
    2. ' =' → logprob: -9.250096321105957
    3. '＝' → logprob: -20.62509536743164
    4. '   ' → logprob: -21.37509536743164
    5. '.=' → logprob: -21.37509536743164
    6. '=
' → logprob: -21.37509536743164
    7. '=None' → logprob: -21.87509536743164
    8. '       ' → logprob: -22.25009536743164
    9. '           ' → logprob: -22.50009536743164
    10. ',' → logprob: -22.62509536743164

Token 643: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -7.493430894101039e-05
    2. ' next' → logprob: -9.500075340270996
    3. '(next' → logprob: -18.75007438659668
    4. '	next' → logprob: -21.62507438659668
    5. '.next' → logprob: -24.00007438659668
    6. '   ' → logprob: -24.25007438659668
    7. '
' → logprob: -24.37507438659668
    8. '_next' → logprob: -25.00007438659668
    9. 'self' → logprob: -25.37507438659668
    10. 'Next' → logprob: -25.37507438659668

Token 644: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.750000953674316
    3. 'self' → logprob: -15.750000953674316
    4. '(
' → logprob: -16.875
    5. '(this' → logprob: -19.875
    6. '[self' → logprob: -21.0
    7. ' (' → logprob: -21.75
    8. '()' → logprob: -21.75
    9. '<|end|>' → logprob: -22.75
    10. '```' → logprob: -22.875

Token 645: '.change' (ID: 34001)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.874882430769503e-05
    2. 'self' → logprob: -9.500079154968262
    3. '(' → logprob: -12.625079154968262
    4. '
' → logprob: -16.000078201293945
    5. '(
' → logprob: -16.000078201293945
    6. '[self' → logprob: -16.000078201293945
    7. ' (' → logprob: -16.250078201293945
    8. 's' → logprob: -17.250078201293945
    9. ',self' → logprob: -17.750078201293945
    10. ')(' → logprob: -17.875078201293945

Token 646: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -1.1472419600977446e-06
    2. 'iter' → logprob: -13.875000953674316
    3. 'Iter' → logprob: -16.625001907348633
    4. 'er' → logprob: -18.375001907348633
    5. '_change' → logprob: -18.375001907348633
    6. 'self' → logprob: -18.625001907348633
    7. '_it' → logprob: -18.625001907348633
    8. '_iterator' → logprob: -19.125001907348633
    9. '_iters' → logprob: -19.125001907348633
    10. 'it' → logprob: -19.500001907348633

Token 647: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012275351211428642
    2. ',None' → logprob: -4.512275218963623
    3. '(None' → logprob: -7.262275218963623
    4. 'None' → logprob: -8.137275695800781
    5. ' ,' → logprob: -8.637275695800781
    6. '(),' → logprob: -10.137275695800781
    7. ' None' → logprob: -11.512275695800781
    8. '(' → logprob: -12.762275695800781
    9. ')' → logprob: -13.262275695800781
    10. ',null' → logprob: -14.512275695800781

Token 648: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.805981972021982e-05
    2. ' None' → logprob: -9.25009822845459
    3. 'self' → logprob: -13.37509822845459
    4. '(None' → logprob: -15.00009822845459
    5. ',None' → logprob: -18.125097274780273
    6. '_None' → logprob: -18.250097274780273
    7. 'none' → logprob: -19.500097274780273
    8. ')' → logprob: -20.250097274780273
    9. '=None' → logprob: -20.750097274780273
    10. '_none' → logprob: -20.875097274780273

Token 649: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019376569252926856
    2. '<|end|>' → logprob: -8.87519359588623
    3. ')
' → logprob: -10.62519359588623
    4. '()' → logprob: -11.00019359588623
    5. '())' → logprob: -11.87519359588623
    6. ')return' → logprob: -13.12519359588623
    7. '       ' → logprob: -13.25019359588623
    8. ' )' → logprob: -14.62519359588623
    9. '   ' → logprob: -14.87519359588623
    10. ' ' → logprob: -15.12519359588623

Token 650: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028904031962156296
    2. 'def' → logprob: -3.9039039611816406
    3. '<|end|>' → logprob: -5.278903961181641
    4. '```' → logprob: -6.528903961181641
    5. '
' → logprob: -6.903903961181641
    6. '    
' → logprob: -7.903903961181641
    7. ' def' → logprob: -8.27890396118164
    8. '<|end|>' → logprob: -9.65390396118164
    9. '	def' → logprob: -11.65390396118164
    10. ' 
' → logprob: -12.15390396118164

Token 651: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00023202638840302825
    2. '   ' → logprob: -8.625231742858887
    3. ' def' → logprob: -9.875231742858887
    4. '
' → logprob: -14.375231742858887
    5. '	def' → logprob: -15.000231742858887
    6. '    
' → logprob: -16.500232696533203
    7. '```' → logprob: -17.625232696533203
    8. 'de' → logprob: -18.000232696533203
    9. '@' → logprob: -19.000232696533203
    10. '        
' → logprob: -19.375232696533203

Token 652: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.2813786268234253
    2. ' run' → logprob: -1.5313786268234253
    3. 'schedule' → logprob: -3.906378746032715
    4. ' schedule' → logprob: -5.656378746032715
    5. 'def' → logprob: -6.031378746032715
    6. 'execute' → logprob: -6.156378746032715
    7. ' execute' → logprob: -8.156378746032715
    8. ' def' → logprob: -8.281378746032715
    9. 'pop' → logprob: -8.531378746032715
    10. 'process' → logprob: -9.656378746032715

Token 653: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010629402240738273
    2. '(' → logprob: -6.876062870025635
    3. '(
' → logprob: -10.626063346862793
    4. 'self' → logprob: -12.251063346862793
    5. '()' → logprob: -14.751063346862793
    6. '(s' → logprob: -15.376063346862793
    7. '   ' → logprob: -16.126062393188477
    8. '_(' → logprob: -16.376062393188477
    9. '(sel' → logprob: -16.876062393188477
    10. ' (' → logprob: -17.126062393188477

Token 654: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2899896502494812
    2. '):
' → logprob: -2.539989709854126
    3. '(self' → logprob: -2.664989709854126
    4. ')' → logprob: -2.789989709854126
    5. 'self' → logprob: -3.539989709854126
    6. '_' → logprob: -5.539989471435547
    7. '():' → logprob: -5.539989471435547
    8. '()' → logprob: -6.039989471435547
    9. '():
' → logprob: -7.539989471435547
    10. '   ' → logprob: -7.539989471435547

Token 655: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.741137283621356e-05
    2. 'self' → logprob: -10.750057220458984
    3. '   ' → logprob: -11.375057220458984
    4. '       ' → logprob: -11.500057220458984
    5. '(' → logprob: -11.750057220458984
    6. '():
' → logprob: -13.125057220458984
    7. ':' → logprob: -13.750057220458984
    8. '(
' → logprob: -13.875057220458984
    9. ':
' → logprob: -14.250057220458984
    10. '():' → logprob: -14.375057220458984

Token 656: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00010711929644457996
    2. ' List' → logprob: -9.875106811523438
    3. 'None' → logprob: -9.875106811523438
    4. '[List' → logprob: -13.000106811523438
    5. 'int' → logprob: -13.750106811523438
    6. 'Iterator' → logprob: -14.250106811523438
    7. 'list' → logprob: -16.625106811523438
    8. 'Generator' → logprob: -16.625106811523438
    9. ' None' → logprob: -17.875106811523438
    10. '	List' → logprob: -18.750106811523438

Token 657: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.896309739408025e-07
    2. 'int' → logprob: -14.125000953674316
    3. '<int' → logprob: -17.625
    4. '[Int' → logprob: -17.875
    5. '[List' → logprob: -18.25
    6. '[' → logprob: -19.25
    7. '[
' → logprob: -19.875
    8. '
' → logprob: -20.0
    9. '[i' → logprob: -20.75
    10. '[in' → logprob: -21.0

Token 658: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.41209736466407776
    2. ']:' → logprob: -1.4120973348617554
    3. '):
' → logprob: -3.287097454071045
    4. ':
' → logprob: -3.787097454071045
    5. ':' → logprob: -5.037097454071045
    6. '():
' → logprob: -5.037097454071045
    7. '(self' → logprob: -5.412097454071045
    8. '   ' → logprob: -5.662097454071045
    9. ']' → logprob: -5.662097454071045
    10. '):' → logprob: -5.787097454071045

Token 659: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.684157026233152e-05
    2. '
' → logprob: -10.250077247619629
    3. '        
' → logprob: -11.000077247619629
    4. '```' → logprob: -11.375077247619629
    5. 'self' → logprob: -12.875077247619629
    6. '   ' → logprob: -13.000077247619629
    7. 'n' → logprob: -13.500077247619629
    8. 'result' → logprob: -13.625077247619629
    9. '(' → logprob: -14.000077247619629
    10. ' task' → logprob: -14.500077247619629

Token 660: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5266551971435547
    2. 'for' → logprob: -1.0266551971435547
    3. '#' (adapté à ' #') → logprob: -3.6516551971435547
    4. 'order' → logprob: -4.401655197143555
    5. 'res' → logprob: -5.526655197143555
    6. 'ready' → logprob: -5.776655197143555
    7. ' for' → logprob: -6.776655197143555
    8. '       ' → logprob: -6.776655197143555
    9. '   ' → logprob: -6.901655197143555
    10. 'available' → logprob: -7.276655197143555

Token 661: ' Initialize' (ID: 19496)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6661406755447388
    2. 'for' → logprob: -0.9161406755447388
    3. '#' → logprob: -3.541140556335449
    4. 'order' → logprob: -3.791140556335449
    5. 'res' → logprob: -4.541140556335449
    6. 'results' → logprob: -5.166140556335449
    7. 'from' → logprob: -5.166140556335449
    8. 'ready' → logprob: -5.541140556335449
    9. 'in' → logprob: -6.416140556335449
    10. 'ans' → logprob: -6.541140556335449

Token 662: ' ready' (ID: 6977)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011392860673367977
    2. 'queue' → logprob: -4.636393070220947
    3. '       ' → logprob: -7.761393070220947
    4. 'ready' → logprob: -7.886393070220947
    5. '   ' → logprob: -8.386392593383789
    6. 'zero' → logprob: -8.386392593383789
    7. 'from' → logprob: -8.511392593383789
    8. ' for' → logprob: -10.011392593383789
    9. 'deque' → logprob: -10.261392593383789
    10. 'available' → logprob: -10.386392593383789

Token 663: ' tasks' (ID: 13638)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.502807080745697
    2. '_tasks' → logprob: -1.0028071403503418
    3. '_queue' → logprob: -3.627807140350342
    4. '=' → logprob: -7.377807140350342
    5. '   ' → logprob: -8.127806663513184
    6. '_set' → logprob: -8.502806663513184
    7. 'tasks' → logprob: -8.502806663513184
    8. '_heap' → logprob: -8.627806663513184
    9. 'q' → logprob: -9.502806663513184
    10. 'queue' → logprob: -10.002806663513184

Token 664: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42051222920417786
    2. 'for' → logprob: -1.4205121994018555
    3. ' for' → logprob: -2.2955121994018555
    4. '
' → logprob: -7.4205121994018555
    5. ':' → logprob: -9.170512199401855
    6. ' =' → logprob: -9.420512199401855
    7. 'with' → logprob: -10.420512199401855
    8. '[' → logprob: -10.670512199401855
    9. 'task' → logprob: -10.795512199401855
    10. 'queue' → logprob: -10.920512199401855

Token 665: 'in' (ID: 258)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013435659930109978
    2. ' for' → logprob: -6.626343727111816
    3. '       ' → logprob: -11.626343727111816
    4. ')' → logprob: -12.876343727111816
    5. 'import' → logprob: -13.126343727111816
    6. '[i' → logprob: -13.626343727111816
    7. 'queue' → logprob: -14.251343727111816
    8. '
' → logprob: -14.251343727111816
    9. 'from' → logprob: -15.001343727111816
    10. '	for' → logprob: -15.126343727111816

Token 666: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.7237210273742676
    2. 'degree' → logprob: -1.0987210273742676
    3. 'range' → logprob: -2.5987210273742676
    4. 'for' → logprob: -2.8487210273742676
    5. 'deg' → logprob: -4.098721027374268
    6. '[' → logprob: -5.223721027374268
    7. '-degree' → logprob: -5.348721027374268
    8. '
' → logprob: -5.598721027374268
    9. 'i' → logprob: -5.723721027374268
    10. '_deg' → logprob: -5.723721027374268

Token 667: ' ==' (ID: 951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6203919053077698
    2. '==' → logprob: -0.8703919053077698
    3. ' ==' → logprob: -4.120391845703125
    4. '[i' → logprob: -4.995391845703125
    5. '=' → logprob: -5.245391845703125
    6. '```' → logprob: -5.745391845703125
    7. '[self' → logprob: -6.245391845703125
    8. '0' → logprob: -6.745391845703125
    9. 'zero' → logprob: -6.745391845703125
    10. 'for' → logprob: -6.870391845703125

Token 668: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '
' → logprob: -15.625001907348633
    4. '[' → logprob: -16.625001907348633
    5. '```' → logprob: -17.500001907348633
    6. ')' → logprob: -17.750001907348633
    7. '   ' → logprob: -17.750001907348633
    8. 'zero' → logprob: -18.375001907348633
    9. '1' → logprob: -19.250001907348633
    10. '=' → logprob: -19.875001907348633

Token 669: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.500001907348633
    3. '[' → logprob: -14.875001907348633
    4. '
' → logprob: -15.750001907348633
    5. '```' → logprob: -16.625001907348633
    6. '1' → logprob: -17.500001907348633
    7. '   ' → logprob: -17.625001907348633
    8. ')' → logprob: -18.500001907348633
    9. '=' → logprob: -19.000001907348633
    10. '{' → logprob: -19.250001907348633

Token 670: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.17545129358768463
    2. ')' → logprob: -2.1754512786865234
    3. 'for' → logprob: -3.4254512786865234
    4. '       ' → logprob: -4.925451278686523
    5. '):
' → logprob: -5.675451278686523
    6. ' for' → logprob: -6.050451278686523
    7. '):' → logprob: -6.550451278686523
    8. ')
' → logprob: -8.800451278686523
    9. '```' → logprob: -9.300451278686523
    10. ')

' → logprob: -10.425451278686523

Token 671: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010967610869556665
    2. ' for' → logprob: -7.251096725463867
    3. 'for' → logprob: -7.876096725463867
    4. '```' → logprob: -13.001096725463867
    5. ',' → logprob: -13.126096725463867
    6. '        
' → logprob: -14.251096725463867
    7. '
' → logprob: -14.501096725463867
    8. '   ' → logprob: -14.876096725463867
    9. ':' → logprob: -15.376096725463867
    10. '	for' → logprob: -15.501096725463867

Token 672: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009724920615553856
    2. '       ' → logprob: -5.509725093841553
    3. ' for' → logprob: -5.759725093841553
    4. 'result' → logprob: -6.009725093841553
    5. 'results' → logprob: -11.759724617004395
    6. ' result' → logprob: -12.384724617004395
    7. '   ' → logprob: -12.384724617004395
    8. 'queue' → logprob: -13.134724617004395
    9. '```' → logprob: -13.509724617004395
    10. 'res' → logprob: -13.634724617004395

Token 673: ' i' (ID: 575)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'task' → logprob: -0.13736708462238312
    2. 'i' → logprob: -2.137367010116577
    3. 'tid' → logprob: -4.637367248535156
    4. 't' → logprob: -8.137367248535156
    5. 'node' → logprob: -8.137367248535156
    6. ' task' → logprob: -9.512367248535156
    7. ' i' → logprob: -11.512367248535156
    8. 'nid' → logprob: -11.637367248535156
    9. 'u' → logprob: -12.012367248535156
    10. 'v' → logprob: -12.512367248535156

Token 674: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029854271560907364
    2. 'in' → logprob: -3.5298542976379395
    3. ',' → logprob: -9.404853820800781
    4. '1' → logprob: -11.154853820800781
    5. '
' → logprob: -13.529853820800781
    6. 'i' → logprob: -13.904853820800781
    7. ' ' → logprob: -14.154853820800781
    8. 'n' → logprob: -14.154853820800781
    9. '   ' → logprob: -14.529853820800781
    10. ' ,' → logprob: -14.654853820800781

Token 675: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0206720617134124e-05
    2. ' range' → logprob: -11.50001049041748
    3. '
' → logprob: -17.500009536743164
    4. '(range' → logprob: -19.125009536743164
    5. '   ' → logprob: -19.375009536743164
    6. '```' → logprob: -19.625009536743164
    7. '1' → logprob: -20.000009536743164
    8. '	range' → logprob: -20.250009536743164
    9. '

' → logprob: -21.375009536743164
    10. 'in' → logprob: -21.875009536743164

Token 676: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31326615810394287
    2. '(' → logprob: -1.3132661581039429
    3. '   ' → logprob: -13.188265800476074
    4. 'len' → logprob: -13.813265800476074
    5. 'self' → logprob: -13.938265800476074
    6. ' ' → logprob: -15.188265800476074
    7. '(self' → logprob: -16.06326675415039
    8. '
' → logprob: -16.56326675415039
    9. '```' → logprob: -16.81326675415039
    10. '(len' → logprob: -17.18826675415039

Token 677: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. 'self' → logprob: -14.500000953674316
    3. 'len' → logprob: -15.000000953674316
    4. ' ' → logprob: -15.125000953674316
    5. '   ' → logprob: -16.125001907348633
    6. '
' → logprob: -17.125001907348633
    7. '(' → logprob: -17.250001907348633
    8. '```' → logprob: -18.875001907348633
    9. '[' → logprob: -20.125001907348633
    10. 'n' → logprob: -20.687501907348633

Token 678: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.625866030342877e-05
    2. ' ,' → logprob: -9.875085830688477
    3. ',len' → logprob: -10.750085830688477
    4. ',self' → logprob: -12.000085830688477
    5. ',n' → logprob: -12.375085830688477
    6. ',
' → logprob: -14.125085830688477
    7. 'self' → logprob: -14.250085830688477
    8. '       ' → logprob: -15.250085830688477
    9. '(len' → logprob: -15.875085830688477
    10. '(self' → logprob: -15.875085830688477

Token 679: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00015943869948387146
    2. 'len' → logprob: -8.75015926361084
    3. ' self' → logprob: -14.50015926361084
    4. '
' → logprob: -14.75015926361084
    5. '(self' → logprob: -17.500160217285156
    6. '   ' → logprob: -17.625160217285156
    7. '```' → logprob: -18.125160217285156
    8. '           ' → logprob: -18.500160217285156
    9. '       ' → logprob: -18.875160217285156
    10. '[self' → logprob: -19.125160217285156

Token 680: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.2240472435951233
    2. '.n' → logprob: -1.8490471839904785
    3. '.scheduler' → logprob: -3.2240471839904785
    4. 'graph' → logprob: -6.2240471839904785
    5. 'n' → logprob: -7.3490471839904785
    6. 'scheduler' → logprob: -7.8490471839904785
    7. '.s' → logprob: -8.224047660827637
    8. '.' → logprob: -9.224047660827637
    9. '   ' → logprob: -10.849047660827637
    10. 'self' → logprob: -10.974047660827637

Token 681: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -2.7372048862162046e-05
    2. 'n' → logprob: -11.125027656555176
    3. '.' → logprob: -11.500027656555176
    4. '   ' → logprob: -13.875027656555176
    5. ').' → logprob: -14.500027656555176
    6. ' .' → logprob: -15.000027656555176
    7. '```' → logprob: -15.750027656555176
    8. '
' → logprob: -15.875027656555176
    9. '_n' → logprob: -16.50002670288086
    10. '	n' → logprob: -17.12502670288086

Token 682: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10020828247070312
    2. ' +' → logprob: -2.350208282470703
    3. '+
' → logprob: -14.600208282470703
    4. '
' → logprob: -14.850208282470703
    5. '()+' → logprob: -14.975208282470703
    6. '   ' → logprob: -16.225208282470703
    7. '):
' → logprob: -16.350208282470703
    8. ')+' → logprob: -16.600208282470703
    9. '＋' → logprob: -16.600208282470703
    10. ')' → logprob: -17.100208282470703

Token 683: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '
' → logprob: -17.500019073486328
    4. '   ' → logprob: -17.625019073486328
    5. '```' → logprob: -20.125019073486328
    6. ')' → logprob: -21.375019073486328
    7. '  ' → logprob: -21.500019073486328
    8. '    ' → logprob: -22.000019073486328
    9. '

' → logprob: -22.125019073486328
    10. 'self' → logprob: -22.250019073486328

Token 684: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '
' → logprob: -16.25000762939453
    4. '   ' → logprob: -17.75000762939453
    5. '```' → logprob: -19.00000762939453
    6. '

' → logprob: -20.00000762939453
    7. '(' → logprob: -20.25000762939453
    8. '0' → logprob: -21.00000762939453
    9. '  ' → logprob: -21.06250762939453
    10. '    ' → logprob: -21.18750762939453

Token 685: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0012572570703923702
    2. '):' → logprob: -6.751257419586182
    3. '):
' → logprob: -10.126256942749023
    4. '       ' → logprob: -10.501256942749023
    5. ':
' → logprob: -11.251256942749023
    6. '():
' → logprob: -12.751256942749023
    7. ':' → logprob: -13.251256942749023
    8. '           ' → logprob: -14.751256942749023
    9. ',' → logprob: -15.001256942749023
    10. ']:
' → logprob: -15.001256942749023

Token 686: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07467981427907944
    2. ' if' → logprob: -2.9496798515319824
    3. 'if' → logprob: -3.9496798515319824
    4. '   ' → logprob: -9.074679374694824
    5. '       ' → logprob: -9.824679374694824
    6. '<|end|>' → logprob: -10.199679374694824
    7. '```' → logprob: -10.574679374694824
    8. '	   ' → logprob: -10.699679374694824
    9. ' ' → logprob: -10.949679374694824
    10. ',' → logprob: -11.324679374694824

Token 687: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.038074664771556854
    2. ' if' → logprob: -3.2880747318267822
    3. '           ' → logprob: -10.413074493408203
    4. '       ' → logprob: -13.663074493408203
    5. '   ' → logprob: -13.913074493408203
    6. ' ' → logprob: -14.413074493408203
    7. 'If' → logprob: -15.288074493408203
    8. '	if' → logprob: -15.538074493408203
    9. ';if' → logprob: -17.163074493408203
    10. '  ' → logprob: -17.288074493408203

Token 688: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005235190503299236
    2. ' self' → logprob: -5.255235195159912
    3. '           ' → logprob: -13.880234718322754
    4. '(self' → logprob: -15.255234718322754
    5. '   ' → logprob: -16.25523567199707
    6. '
' → logprob: -16.75523567199707
    7. 'not' → logprob: -17.00523567199707
    8. '               ' → logprob: -17.38023567199707
    9. '0' → logprob: -17.88023567199707
    10. '	self' → logprob: -18.38023567199707

Token 689: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -2.935296834039036e-06
    2. 'graph' → logprob: -13.62500286102295
    3. '	graph' → logprob: -14.50000286102295
    4. '.' → logprob: -14.62500286102295
    5. ' .' → logprob: -15.87500286102295
    6. '.in' → logprob: -16.250003814697266
    7. '.graphics' → logprob: -16.875003814697266
    8. ').' → logprob: -17.250003814697266
    9. '..' → logprob: -17.500003814697266
    10. '
' → logprob: -17.750003814697266

Token 690: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -7.896309739408025e-07
    2. 'in' → logprob: -15.000000953674316
    3. ' .' → logprob: -15.875000953674316
    4. '   ' → logprob: -15.875000953674316
    5. '..' → logprob: -17.875
    6. '.' → logprob: -17.875
    7. '.has' → logprob: -17.875
    8. ').' → logprob: -18.0
    9. '.is' → logprob: -18.125
    10. '```' → logprob: -18.125

Token 691: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -4.127333340875339e-06
    2. 'degree' → logprob: -13.000003814697266
    3. '-degree' → logprob: -14.125003814697266
    4. '_de' → logprob: -14.250003814697266
    5. 'Degree' → logprob: -15.750003814697266
    6. 'd' → logprob: -16.625003814697266
    7. '_' → logprob: -17.000003814697266
    8. '_depth' → logprob: -17.375003814697266
    9. 'egree' → logprob: -17.500003814697266
    10. '```' → logprob: -17.500003814697266

Token 692: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -12.87500286102295
    3. '[
' → logprob: -17.875001907348633
    4. 'i' → logprob: -17.875001907348633
    5. '   ' → logprob: -18.750001907348633
    6. ' [' → logprob: -18.875001907348633
    7. '==' → logprob: -19.375001907348633
    8. '(i' → logprob: -20.000001907348633
    9. '
' → logprob: -20.250001907348633
    10. '```' → logprob: -20.250001907348633

Token 693: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3172440230846405
    2. '==' → logprob: -1.317244052886963
    3. ']==' → logprob: -5.942244052886963
    4. ']' → logprob: -7.317244052886963
    5. ')' → logprob: -7.567244052886963
    6. ')==' → logprob: -8.817243576049805
    7. '[' → logprob: -12.317243576049805
    8. '0' → logprob: -12.442243576049805
    9. '=' → logprob: -12.817243576049805
    10. ' ' → logprob: -13.192243576049805

Token 694: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2520551085472107
    2. ' ==' → logprob: -1.5020551681518555
    3. ']==' → logprob: -9.377055168151855
    4. ')==' → logprob: -11.252055168151855
    5. '==
' → logprob: -11.627055168151855
    6. '()==' → logprob: -12.002055168151855
    7. '[' → logprob: -12.252055168151855
    8. '=' → logprob: -12.752055168151855
    9. '===' → logprob: -12.877055168151855
    10. '0' → logprob: -13.627055168151855

Token 695: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -20.500003814697266
    4. '
' → logprob: -23.250003814697266
    5. '    ' → logprob: -24.125003814697266
    6. '  ' → logprob: -24.125003814697266
    7. '=' → logprob: -24.875003814697266
    8. '۰' → logprob: -24.875003814697266
    9. '```' → logprob: -25.250003814697266
    10. '       ' → logprob: -25.375003814697266

Token 696: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '
' → logprob: -20.875
    4. '   ' → logprob: -20.875
    5. '=' → logprob: -21.5
    6. '00' → logprob: -22.125
    7. 'zero' → logprob: -22.5
    8. '```' → logprob: -22.5
    9. '[' → logprob: -22.75
    10. '۰' → logprob: -23.0

Token 697: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3057175278663635
    2. ':' → logprob: -1.4307174682617188
    3. '):
' → logprob: -4.055717468261719
    4. '               ' → logprob: -5.430717468261719
    5. '           ' → logprob: -6.555717468261719
    6. '):' → logprob: -7.805717468261719
    7. ' and' → logprob: -7.930717468261719
    8. ')' → logprob: -8.430717468261719
    9. ',' → logprob: -10.055717468261719
    10. '():
' → logprob: -10.805717468261719

Token 698: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5811302661895752
    2. '               ' → logprob: -0.8311302661895752
    3. ' self' → logprob: -5.581130027770996
    4. 'self' → logprob: -7.331130027770996
    5. ':
' → logprob: -8.456130027770996
    6. '   ' → logprob: -8.956130027770996
    7. '	       ' → logprob: -9.456130027770996
    8. '):
' → logprob: -9.831130027770996
    9. ':' → logprob: -10.331130027770996
    10. ',' → logprob: -10.456130027770996

Token 699: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02977953851222992
    2. ' self' → logprob: -3.5297794342041016
    3. '               ' → logprob: -10.654779434204102
    4. '	self' → logprob: -12.404779434204102
    5. '                   ' → logprob: -14.029779434204102
    6. '_self' → logprob: -15.654779434204102
    7. '           ' → logprob: -15.904779434204102
    8. '(self' → logprob: -16.0297794342041
    9. '   ' → logprob: -16.7797794342041
    10. ' ' → logprob: -17.1547794342041

Token 700: '._' (ID: 2697)
  Prédit: '_push'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_push' → logprob: -0.576005756855011
    2. '._' → logprob: -0.826005756855011
    3. '.push' → logprob: -10.076005935668945
    4. '_ready' → logprob: -11.701005935668945
    5. '_p' → logprob: -12.326005935668945
    6. '_PUSH' → logprob: -12.701005935668945
    7. ' _' → logprob: -12.826005935668945
    8. '   ' → logprob: -13.201005935668945
    9. '.' → logprob: -13.326005935668945
    10. '.Push' → logprob: -15.076005935668945

Token 701: 'push' (ID: 18873)
  Prédit: 'push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -3.7697225252486533e-06
    2. '_push' → logprob: -12.750003814697266
    3. ' push' → logprob: -14.500003814697266
    4. '.push' → logprob: -15.625003814697266
    5. '	push' → logprob: -16.625003814697266
    6. 'Push' → logprob: -17.500003814697266
    7. 'pus' → logprob: -18.625003814697266
    8. '(push' → logprob: -18.750003814697266
    9. '```' → logprob: -19.250003814697266
    10. '`' → logprob: -19.750003814697266

Token 702: '_ready' (ID: 78121)
  Prédit: '_ready'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ready' → logprob: -0.3402584493160248
    2. '(i' → logprob: -1.8402584791183472
    3. 'ready' → logprob: -2.2152583599090576
    4. 'i' → logprob: -3.9652583599090576
    5. ' i' → logprob: -6.840258598327637
    6. 'Ready' → logprob: -8.965258598327637
    7. ' ready' → logprob: -9.715258598327637
    8. '(' → logprob: -9.840258598327637
    9. '{i' → logprob: -9.965258598327637
    10. '[i' → logprob: -10.715258598327637

Token 703: '_task' (ID: 27167)
  Prédit: '_task'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_task' → logprob: -0.0005425465060397983
    2. 'task' → logprob: -7.750542640686035
    3. '(i' → logprob: -9.250542640686035
    4. 'i' → logprob: -11.500542640686035
    5. 'Task' → logprob: -13.625542640686035
    6. ' task' → logprob: -14.125542640686035
    7. ' i' → logprob: -14.250542640686035
    8. '_tasks' → logprob: -14.250542640686035
    9. '_i' → logprob: -14.375542640686035
    10. '[i' → logprob: -14.500542640686035

Token 704: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -16.0
    4. '(
' → logprob: -16.375
    5. '   ' → logprob: -19.0
    6. 'i' → logprob: -19.875
    7. '[i' → logprob: -20.25
    8. '(I' → logprob: -20.5
    9. '((' → logprob: -20.75
    10. ' i' → logprob: -21.5

Token 705: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.480199954239652e-05
    2. ')
' → logprob: -10.375064849853516
    3. '       ' → logprob: -10.625064849853516
    4. ' )' → logprob: -12.750064849853516
    5. '<|end|>' → logprob: -12.750064849853516
    6. '())' → logprob: -13.750064849853516
    7. ')

' → logprob: -14.875064849853516
    8. '           ' → logprob: -15.500064849853516
    9. ')}' → logprob: -15.625064849853516
    10. '()' → logprob: -15.750064849853516

Token 706: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04742445796728134
    2. 'while' → logprob: -3.172424554824829
    3. '   ' → logprob: -6.17242431640625
    4. '```' → logprob: -6.54742431640625
    5. ' while' → logprob: -7.29742431640625
    6. '
' → logprob: -9.17242431640625
    7. '	while' → logprob: -9.79742431640625
    8. '        
' → logprob: -10.42242431640625
    9. 'task' → logprob: -12.29742431640625
    10. 'result' → logprob: -12.42242431640625

Token 707: ' execution' (ID: 20860)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3896762430667877
    2. 'while' → logprob: -1.1396762132644653
    3. 'results' → logprob: -6.639676094055176
    4. 'output' → logprob: -7.639676094055176
    5. 'res' → logprob: -8.014676094055176
    6. '       ' → logprob: -8.014676094055176
    7. 'order' → logprob: -8.139676094055176
    8. '   ' → logprob: -10.139676094055176
    9. ' while' → logprob: -12.014676094055176
    10. '
' → logprob: -12.889676094055176

Token 708: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.09889833629131317
    2. '_queue' → logprob: -2.973898410797119
    3. ' =' → logprob: -4.098898410797119
    4. '_list' → logprob: -4.848898410797119
    5. '_count' → logprob: -5.348898410797119
    6. '   ' → logprob: -5.473898410797119
    7. '=' → logprob: -5.723898410797119
    8. '_sequence' → logprob: -5.848898410797119
    9. '_stack' → logprob: -6.723898410797119
    10. '()' → logprob: -7.473898410797119

Token 709: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008999316021800041
    2. '=' → logprob: -4.758999347686768
    3. ':' → logprob: -8.50899887084961
    4. '=[]' → logprob: -8.88399887084961
    5. '   ' → logprob: -10.88399887084961
    6. '=[]
' → logprob: -11.13399887084961
    7. '[]' → logprob: -12.38399887084961
    8. '[:]' → logprob: -13.00899887084961
    9. '       ' → logprob: -13.13399887084961
    10. '_list' → logprob: -14.75899887084961

Token 710: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.41502249240875244
    2. '[]' → logprob: -1.4150224924087524
    3. ' List' → logprob: -2.415022373199463
    4. ' []' → logprob: -4.915022373199463
    5. '[List' → logprob: -10.040022850036621
    6. '[]
' → logprob: -11.915022850036621
    7. '=[]' → logprob: -13.290022850036621
    8. '[])' → logprob: -14.790022850036621
    9. 'list' → logprob: -15.040022850036621
    10. '[]}' → logprob: -15.540022850036621

Token 711: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.735893965815194e-05
    2. '[Int' → logprob: -12.250017166137695
    3. 'int' → logprob: -12.375017166137695
    4. ' =' → logprob: -12.750017166137695
    5. '=int' → logprob: -12.875017166137695
    6. '[]' → logprob: -14.500017166137695
    7. '=' → logprob: -14.625017166137695
    8. '<int' → logprob: -14.750017166137695
    9. '[' → logprob: -14.750017166137695
    10. '[List' → logprob: -14.750017166137695

Token 712: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062319666147232056
    2. ')' → logprob: -3.437319755554199
    3. ']' → logprob: -4.062319755554199
    4. ' =' → logprob: -4.562319755554199
    5. '=[]' → logprob: -8.1873197555542
    6. ']=' → logprob: -8.6873197555542
    7. ')=' → logprob: -8.9373197555542
    8. '[]' → logprob: -11.3123197555542
    9. '       ' → logprob: -11.8123197555542
    10. '>' → logprob: -12.8123197555542

Token 713: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03414294496178627
    2. ' =' → logprob: -3.4091429710388184
    3. '=[]' → logprob: -7.659142971038818
    4. '       ' → logprob: -10.90914249420166
    5. '        ' → logprob: -13.15914249420166
    6. '=[]
' → logprob: -13.40914249420166
    7. '[]' → logprob: -13.78414249420166
    8. ')' → logprob: -14.78414249420166
    9. '=
' → logprob: -14.78414249420166
    10. '<|end|>' → logprob: -14.90914249420166

Token 714: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0024842156562954187
    2. '[]
' → logprob: -6.002484321594238
    3. '[]

' → logprob: -11.752484321594238
    4. ' []' → logprob: -14.252484321594238
    5. '[]"' → logprob: -16.877483367919922
    6. '[' → logprob: -17.002483367919922
    7. '[])' → logprob: -17.002483367919922
    8. '[]}' → logprob: -18.502483367919922
    9. '([]' → logprob: -19.002483367919922
    10. '   ' → logprob: -19.127483367919922

Token 715: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023937787860631943
    2. 'while' → logprob: -3.773937702178955
    3. ' while' → logprob: -7.523937702178955
    4. '   ' → logprob: -9.148938179016113
    5. '```' → logprob: -10.398938179016113
    6. '	while' → logprob: -11.898938179016113
    7. '
' → logprob: -12.023938179016113
    8. '	' → logprob: -14.398938179016113
    9. '        
' → logprob: -14.523938179016113
    10. '           ' → logprob: -15.023938179016113

Token 716: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -1.5094070477061905e-05
    2. '       ' → logprob: -11.500015258789062
    3. ' while' → logprob: -12.250015258789062
    4. '
' → logprob: -16.000015258789062
    5. '   ' → logprob: -16.875015258789062
    6. '	while' → logprob: -17.500015258789062
    7. '```' → logprob: -18.625015258789062
    8. 'While' → logprob: -20.125015258789062
    9. '        
' → logprob: -20.625015258789062
    10. 'for' → logprob: -21.125015258789062

Token 717: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003221921855583787
    2. ' self' → logprob: -5.7532219886779785
    3. 'len' → logprob: -10.25322151184082
    4. '   ' → logprob: -12.50322151184082
    5. '       ' → logprob: -13.12822151184082
    6. 'True' → logprob: -13.50322151184082
    7. '           ' → logprob: -14.50322151184082
    8. '(self' → logprob: -14.75322151184082
    9. ' len' → logprob: -15.25322151184082
    10. 'not' → logprob: -15.50322151184082

Token 718: '.ready' (ID: 65119)
  Prédit: '.ready'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ready' → logprob: -0.000352266215486452
    2. 'ready' → logprob: -8.000351905822754
    3. '_ready' → logprob: -12.000351905822754
    4. '.' → logprob: -12.500351905822754
    5. ' .' → logprob: -13.625351905822754
    6. ' ready' → logprob: -13.625351905822754
    7. '   ' → logprob: -14.375351905822754
    8. ':' → logprob: -14.875351905822754
    9. ').' → logprob: -14.875351905822754
    10. '```' → logprob: -15.250351905822754

Token 719: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -8.061054359131958e-06
    2. 'heap' → logprob: -13.375007629394531
    3. '_' → logprob: -13.500007629394531
    4. '```' → logprob: -13.750007629394531
    5. '
' → logprob: -14.375007629394531
    6. 'Heap' → logprob: -14.500007629394531
    7. '-_' → logprob: -14.625007629394531
    8. '_queue' → logprob: -15.000007629394531
    9. '   ' → logprob: -15.125007629394531
    10. '_ready' → logprob: -15.125007629394531

Token 720: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06201395019888878
    2. ':
' → logprob: -2.812013864517212
    3. ' and' → logprob: -10.937013626098633
    4. '):' → logprob: -11.562013626098633
    5. ':
' → logprob: -12.437013626098633
    6. '):
' → logprob: -12.562013626098633
    7. '>:' → logprob: -13.062013626098633
    8. 'and' → logprob: -13.187013626098633
    9. '[' → logprob: -13.437013626098633
    10. ',' → logprob: -13.437013626098633

Token 721: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026528246235102415
    2. 'key' → logprob: -6.252652645111084
    3. '_,' → logprob: -8.377653121948242
    4. ',' → logprob: -8.377653121948242
    5. ' key' → logprob: -9.002653121948242
    6. '```' → logprob: -10.002653121948242
    7. '   ' → logprob: -10.252653121948242
    8. 'self' → logprob: -11.002653121948242
    9. '       ' → logprob: -11.377653121948242
    10. '`' → logprob: -12.502653121948242

Token 722: ' self' (ID: 1051)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.11157599836587906
    2. '_,' → logprob: -2.4865760803222656
    3. '_key' → logprob: -4.486576080322266
    4. ' key' → logprob: -5.361576080322266
    5. '   ' → logprob: -6.361576080322266
    6. '(key' → logprob: -6.611576080322266
    7. '           ' → logprob: -6.736576080322266
    8. '(_,' → logprob: -7.736576080322266
    9. '```' → logprob: -8.236576080322266
    10. '       ' → logprob: -8.486576080322266

Token 723: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.5569046139717102
    2. '_key' → logprob: -1.0569045543670654
    3. '_ready' → logprob: -3.3069045543670654
    4. '_' → logprob: -4.0569047927856445
    5. '.' → logprob: -5.0569047927856445
    6. '.key' → logprob: -6.6819047927856445
    7. ' _' → logprob: -6.8069047927856445
    8. '_next' → logprob: -6.9319047927856445
    9. '_space' → logprob: -6.9319047927856445
    10. ' =' → logprob: -7.0569047927856445

Token 724: 'check' (ID: 3416)
  Prédit: 'check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -2.3438327843905427e-05
    2. 'push' → logprob: -11.25002384185791
    3. '_check' → logprob: -11.62502384185791
    4. 'pop' → logprob: -14.12502384185791
    5. '_' → logprob: -16.000022888183594
    6. 'update' → logprob: -16.250022888183594
    7. '	check' → logprob: -16.375022888183594
    8. '.check' → logprob: -16.375022888183594
    9. ' check' → logprob: -16.500022888183594
    10. '
' → logprob: -16.875022888183594

Token 725: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -6.153795766294934e-06
    2. '_ready' → logprob: -12.875005722045898
    3. '
' → logprob: -13.750005722045898
    4. 'order' → logprob: -14.000005722045898
    5. 'Order' → logprob: -15.125005722045898
    6. '_change' → logprob: -15.125005722045898
    7. '```' → logprob: -15.375005722045898
    8. '   ' → logprob: -15.750005722045898
    9. '\' → logprob: -16.1250057220459
    10. '

' → logprob: -16.3750057220459

Token 726: '_change' (ID: 36082)
  Prédit: '_change'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_change' → logprob: -0.00030078491545282304
    2. 'change' → logprob: -8.500300407409668
    3. '()' → logprob: -10.500300407409668
    4. '(' → logprob: -10.875300407409668
    5. '_' → logprob: -11.000300407409668
    6. 'Change' → logprob: -11.000300407409668
    7. '```' → logprob: -12.625300407409668
    8. '_ready' → logprob: -13.000300407409668
    9. '_changes' → logprob: -13.000300407409668
    10. '   ' → logprob: -13.500300407409668

Token 727: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20677900314331055
    2. '       ' → logprob: -2.3317790031433105
    3. '
' → logprob: -2.9567790031433105
    4. ',' → logprob: -3.8317790031433105
    5. 'key' → logprob: -5.2067790031433105
    6. '            
' → logprob: -6.2067790031433105
    7. ' key' → logprob: -6.3317790031433105
    8. '(key' → logprob: -6.8317790031433105
    9. '
' → logprob: -6.9567790031433105
    10. '        
' → logprob: -6.9567790031433105

Token 728: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07894696295261383
    2. 'key' → logprob: -2.703947067260742
    3. '       ' → logprob: -5.453947067260742
    4. '_,' → logprob: -6.203947067260742
    5. ' key' → logprob: -6.578947067260742
    6. '```' → logprob: -7.328947067260742
    7. '(key' → logprob: -8.578947067260742
    8. ',' → logprob: -8.703947067260742
    9. '_key' → logprob: -9.078947067260742
    10. ',key' → logprob: -10.203947067260742

Token 729: ' _,' (ID: 18042)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.00938580185174942
    2. '_,' (adapté à ' _,') → logprob: -4.884385585784912
    3. '(key' → logprob: -6.759385585784912
    4. '_key' → logprob: -8.00938606262207
    5. '(_,' → logprob: -8.25938606262207
    6. '(' → logprob: -11.50938606262207
    7. ' key' → logprob: -11.88438606262207
    8. 'heap' → logprob: -13.25938606262207
    9. '```' → logprob: -13.50938606262207
    10. '_(' → logprob: -14.00938606262207

Token 730: ' tid' (ID: 8692)
  Prédit: 'task'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'task' → logprob: -0.009616543538868427
    2. 'tid' → logprob: -5.009616374969482
    3. ' task' → logprob: -6.009616374969482
    4. 'current' → logprob: -8.13461685180664
    5. 'curr' → logprob: -9.75961685180664
    6. 'cur' → logprob: -10.25961685180664
    7. ' tid' → logprob: -10.50961685180664
    8. ' current' → logprob: -11.50961685180664
    9. 't' → logprob: -12.13461685180664
    10. '   ' → logprob: -12.25961685180664

Token 731: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163863845169544
    2. ' =' → logprob: -4.264163970947266
    3. '=
' → logprob: -15.639163970947266
    4. '       ' → logprob: -16.764163970947266
    5. ')=' → logprob: -17.139163970947266
    6. '   ' → logprob: -17.139163970947266
    7. 'heap' → logprob: -17.139163970947266
    8. '           ' → logprob: -18.014163970947266
    9. '=_' → logprob: -18.764163970947266
    10. '＝' → logprob: -18.764163970947266

Token 732: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.00408053956925869
    2. ' heap' → logprob: -5.504080772399902
    3. '           ' → logprob: -13.504080772399902
    4. 'self' → logprob: -14.254080772399902
    5. 'he' → logprob: -15.629080772399902
    6. '(heap' → logprob: -19.004079818725586
    7. '.heap' → logprob: -19.254079818725586
    8. ' self' → logprob: -19.879079818725586
    9. '_heap' → logprob: -20.504079818725586
    10. 'Heap' → logprob: -20.629079818725586

Token 733: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. '.pop' → logprob: -17.0
    3. '       ' → logprob: -17.375
    4. '[' → logprob: -17.625
    5. '.he' → logprob: -17.875
    6. 'pop' → logprob: -18.5
    7. '.q' → logprob: -18.625
    8. 'qe' → logprob: -19.0
    9. '```' → logprob: -19.0
    10. 'queue' → logprob: -19.25

Token 734: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00023298001906368881
    2. 'he' → logprob: -8.375232696533203
    3. 'q' → logprob: -14.125232696533203
    4. '.heap' → logprob: -14.500232696533203
    5. ' he' → logprob: -15.125232696533203
    6. '```' → logprob: -15.500232696533203
    7. '_he' → logprob: -15.750232696533203
    8. '.' → logprob: -15.750232696533203
    9. '   ' → logprob: -16.500232696533203
    10. '
' → logprob: -16.625232696533203

Token 735: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.045823566731997e-05
    2. 'ap' → logprob: -11.125020027160645
    3. 'pp' → logprob: -12.375020027160645
    4. 'pop' → logprob: -14.125020027160645
    5. '```' → logprob: -15.250020027160645
    6. '[' → logprob: -15.500020027160645
    7. 'a' → logprob: -16.75002098083496
    8. 'p' → logprob: -17.00002098083496
    9. 'q' → logprob: -17.12502098083496
    10. '   ' → logprob: -17.25002098083496

Token 736: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0018223817460238934
    2. 'ush' → logprob: -6.376822471618652
    3. 'pop' → logprob: -9.751822471618652
    4. 'app' → logprob: -9.751822471618652
    5. 'e' → logprob: -13.751822471618652
    6. 'ap' → logprob: -14.376822471618652
    7. 'p' → logprob: -14.501822471618652
    8. 'pp' → logprob: -14.751822471618652
    9. 'opp' → logprob: -15.126822471618652
    10. '```' → logprob: -15.876822471618652

Token 737: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.636475493200123e-05
    2. 'self' → logprob: -9.500076293945312
    3. '(' → logprob: -13.500076293945312
    4. '(
' → logprob: -17.750076293945312
    5. '       ' → logprob: -18.000076293945312
    6. ' self' → logprob: -18.250076293945312
    7. '[self' → logprob: -19.625076293945312
    8. '```' → logprob: -19.750076293945312
    9. '	self' → logprob: -20.125076293945312
    10. '(this' → logprob: -20.125076293945312

Token 738: '.ready' (ID: 65119)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.030953682959079742
    2. '(self' → logprob: -3.5309536457061768
    3. ' self' → logprob: -7.780953884124756
    4. 'ready' → logprob: -7.905953884124756
    5. '.ready' → logprob: -8.030953407287598
    6. ')' → logprob: -9.780953407287598
    7. '[self' → logprob: -11.530953407287598
    8. '_ready' → logprob: -12.030953407287598
    9. '.self' → logprob: -12.405953407287598
    10. ' ready' → logprob: -12.405953407287598

Token 739: '_heap' (ID: 88741)
  Prédit: '_heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_heap' → logprob: -0.10312260687351227
    2. 'self' → logprob: -2.6031227111816406
    3. '_task' → logprob: -4.728122711181641
    4. 'heap' → logprob: -4.853122711181641
    5. 'task' → logprob: -5.103122711181641
    6. '(self' → logprob: -7.728122711181641
    7. ')' → logprob: -7.853122711181641
    8. '_tasks' → logprob: -9.97812271118164
    9. 's' → logprob: -10.10312271118164
    10. '[self' → logprob: -10.35312271118164

Token 740: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.042913999408483505
    2. ')
' → logprob: -3.5429139137268066
    3. '           ' → logprob: -4.417913913726807
    4. '
' → logprob: -7.417913913726807
    5. '<|end|>' → logprob: -8.042914390563965
    6. '            
' → logprob: -10.542914390563965
    7. '<|end|>' → logprob: -11.167914390563965
    8. '               ' → logprob: -11.792914390563965
    9. '       ' → logprob: -12.167914390563965
    10. '```' → logprob: -12.167914390563965

Token 741: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04262114688754082
    2. 'execution' → logprob: -3.29262113571167
    3. 'task' → logprob: -6.16762113571167
    4. '       ' → logprob: -6.29262113571167
    5. ' execution' → logprob: -8.292621612548828
    6. '
' → logprob: -8.542621612548828
    7. '```' → logprob: -9.542621612548828
    8. '   ' → logprob: -9.917621612548828
    9. ' task' → logprob: -10.792621612548828
    10. '            
' → logprob: -11.542621612548828

Token 742: ' execution' (ID: 20860)
  Prédit: 'execution'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'execution' (adapté à ' execution') → logprob: -0.008697769604623318
    2. 'task' → logprob: -4.758697986602783
    3. '           ' → logprob: -10.008697509765625
    4. 'self' → logprob: -10.508697509765625
    5. '       ' → logprob: -12.383697509765625
    6. ' execution' → logprob: -12.383697509765625
    7. 'execut' → logprob: -13.383697509765625
    8. '   ' → logprob: -15.133697509765625
    9. '               ' → logprob: -15.883697509765625
    10. 'executor' → logprob: -16.133697509765625

Token 743: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -3.869639476761222e-05
    2. 'Order' → logprob: -10.250039100646973
    3. 'order' → logprob: -12.750039100646973
    4. '_' → logprob: -16.250038146972656
    5. '_orders' → logprob: -16.250038146972656
    6. '_count' → logprob: -16.375038146972656
    7. '_ORDER' → logprob: -17.000038146972656
    8. '_execution' → logprob: -17.375038146972656
    9. '_sequence' → logprob: -17.750038146972656
    10. '_Order' → logprob: -18.250038146972656

Token 744: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00017362393555231392
    2. '.' → logprob: -8.750173568725586
    3. 'append' → logprob: -11.250173568725586
    4. '.app' → logprob: -13.625173568725586
    5. '_append' → logprob: -14.875173568725586
    6. '.ap' → logprob: -15.375173568725586
    7. ' .' → logprob: -16.000173568725586
    8. '.Append' → logprob: -17.125173568725586
    9. 'Append' → logprob: -17.125173568725586
    10. '.extend' → logprob: -17.375173568725586

Token 745: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0040830280631780624
    2. 'tid' → logprob: -5.504083156585693
    3. 't' → logprob: -12.754082679748535
    4. '(' → logprob: -14.379082679748535
    5. '(
' → logprob: -14.504082679748535
    6. '_tid' → logprob: -15.129082679748535
    7. ' tid' → logprob: -15.254082679748535
    8. '	t' → logprob: -16.62908363342285
    9. '(task' → logprob: -16.87908363342285
    10. 'ti' → logprob: -18.12908363342285

Token 746: 'id' (ID: 315)
  Prédit: 'id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -1.9361264946837764e-07
    2. '_id' → logprob: -16.5
    3. 'tid' → logprob: -16.625
    4. 'im' → logprob: -17.5
    5. 'od' → logprob: -17.875
    6. 'ид' → logprob: -19.375
    7. '(id' → logprob: -19.5
    8. 'i' → logprob: -19.875
    9. '[id' → logprob: -20.0
    10. 'ed' → logprob: -20.375

Token 747: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.0273741483688354
    2. '
' → logprob: -1.1523741483688354
    3. '           ' → logprob: -1.4023741483688354
    4. ')' → logprob: -2.527374267578125
    5. '            
' → logprob: -8.777374267578125
    6. '               ' → logprob: -10.402374267578125
    7. '       ' → logprob: -10.402374267578125
    8. ',' → logprob: -10.777374267578125
    9. '<|end|>' → logprob: -11.152374267578125
    10. '
' → logprob: -12.027374267578125

Token 748: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7900962233543396
    2. '
' → logprob: -1.4150962829589844
    3. '           ' → logprob: -1.4150962829589844
    4. '       ' → logprob: -2.9150962829589844
    5. '        
' → logprob: -6.040096282958984
    6. '```' → logprob: -6.540096282958984
    7. ' self' → logprob: -6.790096282958984
    8. 'for' → logprob: -7.165096282958984
    9. 'task' → logprob: -8.665096282958984
    10. '            
' → logprob: -8.665096282958984

Token 749: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0010562685783952475
    2. '           ' → logprob: -7.25105619430542
    3. 'for' → logprob: -8.251056671142578
    4. 'task' → logprob: -9.876056671142578
    5. ' self' → logprob: -10.501056671142578
    6. '
' → logprob: -12.626056671142578
    7. '       ' → logprob: -13.126056671142578
    8. '            
' → logprob: -14.501056671142578
    9. '   ' → logprob: -15.001056671142578
    10. ' for' → logprob: -16.126056671142578

Token 750: '.execut' (ID: 195634)
  Prédit: '.execut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.execut' → logprob: -5.3954463510308415e-05
    2. 'execut' → logprob: -10.000054359436035
    3. '.graph' → logprob: -12.250054359436035
    4. ' .' → logprob: -13.875054359436035
    5. '   ' → logprob: -14.250054359436035
    6. 'graph' → logprob: -14.500054359436035
    7. '.ex' → logprob: -14.750054359436035
    8. '.Execut' → logprob: -14.875054359436035
    9. '
' → logprob: -15.250054359436035
    10. '       ' → logprob: -15.875054359436035

Token 751: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0052360063418745995
    2. 'uted' → logprob: -5.2552361488342285
    3. 'ut' → logprob: -13.63023567199707
    4. 'eded' → logprob: -15.88023567199707
    5. '_ed' → logprob: -16.13023567199707
    6. '_' → logprob: -16.25523567199707
    7. 'ution' → logprob: -16.38023567199707
    8. 'ted' → logprob: -16.50523567199707
    9. '__' → logprob: -16.88023567199707
    10. 'eed' → logprob: -17.00523567199707

Token 752: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.9361264946837764e-07
    2. 'count' → logprob: -15.75
    3. '+=' → logprob: -19.0
    4. 'Count' → logprob: -19.125
    5. '+' → logprob: -19.625
    6. '_COUNT' → logprob: -19.75
    7. 's' → logprob: -21.0
    8. '=' → logprob: -21.0
    9. '++' → logprob: -21.0
    10. ' count' → logprob: -21.125

Token 753: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0485873706638813
    2. ' +=' → logprob: -3.0485873222351074
    3. '=' → logprob: -18.673587799072266
    4. ']+=' → logprob: -18.923587799072266
    5. '+' → logprob: -19.548587799072266
    6. '+=(' → logprob: -20.048587799072266
    7. '   ' → logprob: -20.673587799072266
    8. '+="' → logprob: -20.798587799072266
    9. '+='' → logprob: -21.048587799072266
    10. '```' → logprob: -23.423587799072266

Token 754: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '
' → logprob: -23.375
    4. '   ' → logprob: -24.25
    5. '```' → logprob: -25.125
    6. '１' → logprob: -26.25
    7. '۱' → logprob: -26.75
    8. '+' → logprob: -27.625
    9. '(' → logprob: -27.875
    10. '  ' → logprob: -27.875

Token 755: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.75
    3. '
' → logprob: -24.375
    4. '```' → logprob: -24.75
    5. '１' → logprob: -25.125
    6. '   ' → logprob: -27.125
    7. '۱' → logprob: -27.25
    8. '' → logprob: -27.875
    9. 'int' → logprob: -28.0
    10. 'one' → logprob: -28.0

Token 756: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0147892236709595
    2. '           ' → logprob: -1.0147892236709595
    3. 'for' → logprob: -1.5147892236709595
    4. ' for' → logprob: -3.63978910446167
    5. '```' → logprob: -3.63978910446167
    6. 'self' → logprob: -7.13978910446167
    7. 'task' → logprob: -7.26478910446167
    8. '
' → logprob: -7.26478910446167
    9. 'next' → logprob: -8.639789581298828
    10. 'prev' → logprob: -9.639789581298828

Token 757: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.310541033744812
    2. '       ' → logprob: -1.560541033744812
    3. '           ' → logprob: -3.3105411529541016
    4. '```' → logprob: -4.185541152954102
    5. ' for' → logprob: -5.810541152954102
    6. 'task' → logprob: -6.435541152954102
    7. '
' → logprob: -8.435541152954102
    8. 'self' → logprob: -8.685541152954102
    9. '   ' → logprob: -9.185541152954102
    10. 'next' → logprob: -9.810541152954102

Token 758: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.9361264946837764e-07
    2. '           ' → logprob: -16.5
    3. ' for' → logprob: -18.0
    4. '            
' → logprob: -19.75
    5. '       ' → logprob: -20.875
    6. '
' → logprob: -21.0
    7. '```' → logprob: -23.0
    8. '   ' → logprob: -23.125
    9. '#' → logprob: -23.25
    10. '               ' → logprob: -24.0

Token 759: ' nxt' (ID: 160200)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.009763529524207115
    2. 'nid' → logprob: -5.884763717651367
    3. 'nbr' → logprob: -6.009763717651367
    4. 'ne' → logprob: -6.884763717651367
    5. 'nei' → logprob: -7.009763717651367
    6. 'v' → logprob: -7.259763717651367
    7. 'dependent' → logprob: -7.384763717651367
    8. 'next' → logprob: -7.759763717651367
    9. 'n' → logprob: -8.134763717651367
    10. 'to' → logprob: -8.384763717651367

Token 760: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.029793307185173035
    2. ' in' → logprob: -3.5297932624816895
    3. 'n' → logprob: -10.779793739318848
    4. '_id' → logprob: -11.154793739318848
    5. 'id' → logprob: -12.029793739318848
    6. '	in' → logprob: -13.904793739318848
    7. '_in' → logprob: -14.779793739318848
    8. '
' → logprob: -16.52979278564453
    9. '_' → logprob: -16.90479278564453
    10. 't' → logprob: -17.02979278564453

Token 761: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007117166533134878
    2. ' self' → logprob: -7.250711917877197
    3. '(self' → logprob: -13.500711441040039
    4. '[self' → logprob: -14.625711441040039
    5. '=self' → logprob: -18.00071144104004
    6. 'graph' → logprob: -18.37571144104004
    7. '	self' → logprob: -18.50071144104004
    8. '
' → logprob: -18.50071144104004
    9. ':self' → logprob: -19.37571144104004
    10. '*self' → logprob: -19.75071144104004

Token 762: '.graph' (ID: 18104)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000739707553293556
    2. '[self' → logprob: -7.500739574432373
    3. ' self' → logprob: -8.750740051269531
    4. 'graph' → logprob: -10.750740051269531
    5. '.graph' → logprob: -12.750740051269531
    6. '(self' → logprob: -13.125740051269531
    7. '
' → logprob: -13.875740051269531
    8. '	self' → logprob: -15.250740051269531
    9. '=self' → logprob: -15.500740051269531
    10. '.self' → logprob: -15.625740051269531

Token 763: '.ad' (ID: 19775)
  Prédit: '.ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ad' → logprob: -0.018157554790377617
    2. '[' → logprob: -4.018157482147217
    3. '.t' → logprob: -12.518157958984375
    4. '[t' → logprob: -13.643157958984375
    5. '[self' → logprob: -13.893157958984375
    6. '.Ad' → logprob: -14.143157958984375
    7. '.' → logprob: -15.143157958984375
    8. 'adj' → logprob: -15.143157958984375
    9. ' .' → logprob: -15.893157958984375
    10. '   ' → logprob: -16.018157958984375

Token 764: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.320199877838604e-07
    2. 'jac' → logprob: -15.5
    3. '[j' → logprob: -16.0
    4. '[' → logprob: -17.875
    5. 'js' → logprob: -18.75
    6. '[self' → logprob: -20.375
    7. 'd' → logprob: -20.75
    8. 'jf' → logprob: -20.75
    9. 'dj' → logprob: -21.75
    10. ' j' → logprob: -22.0

Token 765: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.008129963040119e-06
    2. '[t' → logprob: -14.125003814697266
    3. '[
' → logprob: -14.250003814697266
    4. '```' → logprob: -14.375003814697266
    5. '[_' → logprob: -14.500003814697266
    6. '[self' → logprob: -15.125003814697266
    7. '       ' → logprob: -15.250003814697266
    8. '   ' → logprob: -15.375003814697266
    9. '[now' → logprob: -16.625003814697266
    10. '[[' → logprob: -16.625003814697266

Token 766: 'tid' (ID: 24066)
  Prédit: 'tid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tid' → logprob: -5.1689596148207784e-05
    2. '(t' → logprob: -10.375051498413086
    3. '_tid' → logprob: -11.375051498413086
    4. ' tid' → logprob: -12.125051498413086
    5. '[' → logprob: -12.750051498413086
    6. 't' → logprob: -15.375051498413086
    7. 'ted' → logprob: -16.000051498413086
    8. '[t' → logprob: -16.500051498413086
    9. 'ti' → logprob: -17.125051498413086
    10. 'td' → logprob: -17.250051498413086

Token 767: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.029868045821785927
    2. ']:
' → logprob: -3.5298681259155273
    3. ']:
' → logprob: -9.404868125915527
    4. ']' → logprob: -10.904868125915527
    5. ']:

' → logprob: -12.154868125915527
    6. ':' → logprob: -13.029868125915527
    7. '           ' → logprob: -13.404868125915527
    8. ']>' → logprob: -13.529868125915527
    9. '       ' → logprob: -13.654868125915527
    10. ']:


' → logprob: -13.779868125915527

Token 768: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39275985956192017
    2. 'self' → logprob: -1.1427597999572754
    3. '           ' → logprob: -5.267759799957275
    4. ' self' → logprob: -7.517759799957275
    5. '   ' → logprob: -8.892760276794434
    6. '                   ' → logprob: -11.892760276794434
    7. '
' → logprob: -12.142760276794434
    8. 'if' → logprob: -12.142760276794434
    9. '(self' → logprob: -12.142760276794434
    10. '                
' → logprob: -13.142760276794434

Token 769: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.3199920178740285e-05
    2. '               ' → logprob: -11.000022888183594
    3. ' self' → logprob: -12.000022888183594
    4. '           ' → logprob: -15.375022888183594
    5. '                   ' → logprob: -17.125022888183594
    6. '   ' → logprob: -18.000022888183594
    7. '
' → logprob: -18.375022888183594
    8. '	self' → logprob: -18.375022888183594
    9. '                
' → logprob: -18.875022888183594
    10. '[self' → logprob: -19.750022888183594

Token 770: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -0.5784451961517334
    2. '.in' → logprob: -0.8284451961517334
    3. 'self' → logprob: -6.9534454345703125
    4. 'in' → logprob: -7.8284454345703125
    5. 'graph' → logprob: -7.8284454345703125
    6. '.' → logprob: -8.703445434570312
    7. '].' → logprob: -8.953445434570312
    8. '
' → logprob: -9.953445434570312
    9. 'In' → logprob: -10.078445434570312
    10. '   ' → logprob: -10.328445434570312

Token 771: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -7.896309739408025e-07
    2. '].' → logprob: -15.500000953674316
    3. '[in' → logprob: -16.0
    4. '.' → logprob: -16.0
    5. 'in' → logprob: -16.125
    6. ' .' → logprob: -16.875
    7. '.In' → logprob: -17.5
    8. ').' → logprob: -17.75
    9. '```' → logprob: -17.75
    10. '_in' → logprob: -17.875

Token 772: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -1.6240566083070007e-06
    2. 'degree' → logprob: -14.125001907348633
    3. '-degree' → logprob: -15.125001907348633
    4. '_de' → logprob: -15.500001907348633
    5. 'egree' → logprob: -15.750001907348633
    6. '_depth' → logprob: -16.625001907348633
    7. 'Degree' → logprob: -17.000001907348633
    8. '```' → logprob: -19.125001907348633
    9. 'gree' → logprob: -19.500001907348633
    10. '[' → logprob: -19.500001907348633

Token 773: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.5
    3. 'n' → logprob: -17.25
    4. '[
' → logprob: -17.875
    5. '```' → logprob: -18.125
    6. '[next' → logprob: -18.625
    7. '	n' → logprob: -19.125
    8. '(n' → logprob: -19.75
    9. '   ' → logprob: -20.0
    10. '[t' → logprob: -20.75

Token 774: 'xt' (ID: 711)
  Prédit: '_degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -1.312686800956726
    2. ']' → logprob: -1.687686800956726
    3. '[next' → logprob: -1.812686800956726
    4. 'xt' → logprob: -2.4376869201660156
    5. '[n' → logprob: -2.5626869201660156
    6. 'ext' → logprob: -2.8126869201660156
    7. '```' → logprob: -3.3126869201660156
    8. '[' → logprob: -3.4376869201660156
    9. 'x' → logprob: -3.6876869201660156
    10. '   ' → logprob: -4.437686920166016

Token 775: ']' (ID: 60)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.2818649113178253
    2. ']' → logprob: -2.406864881515503
    3. '-=' → logprob: -2.531864881515503
    4. ' -=' → logprob: -3.281864881515503
    5. '-' → logprob: -3.656864881515503
    6. ']-' → logprob: -4.531865119934082
    7. '[' → logprob: -7.406865119934082
    8. '   ' → logprob: -8.156865119934082
    9. '```' → logprob: -8.156865119934082
    10. '[-' → logprob: -8.406865119934082

Token 776: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.02913018688559532
    2. ' -=' → logprob: -3.654130220413208
    3. '-' → logprob: -5.904129981994629
    4. '   ' → logprob: -9.779129981994629
    5. '[' → logprob: -11.279129981994629
    6. '[n' → logprob: -11.404129981994629
    7. '[-' → logprob: -11.904129981994629
    8. ']-' → logprob: -12.654129981994629
    9. ']' → logprob: -13.029129981994629
    10. '```' → logprob: -13.279129981994629

Token 777: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '   ' → logprob: -21.625
    4. '```' → logprob: -24.25
    5. '
' → logprob: -25.0
    6. '１' → logprob: -25.875
    7. '  ' → logprob: -26.125
    8. '       ' → logprob: -26.375
    9. '           ' → logprob: -26.5
    10. '۱' → logprob: -26.625

Token 778: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '   ' → logprob: -21.125
    4. '```' → logprob: -23.625
    5. '１' → logprob: -25.25
    6. '۱' → logprob: -25.375
    7. '       ' → logprob: -25.5
    8. '           ' → logprob: -26.0
    9. '
' → logprob: -26.125
    10. '<|end|>' → logprob: -26.125

Token 779: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0037765735760331154
    2. '
' → logprob: -6.003776550292969
    3. '           ' → logprob: -7.253776550292969
    4. '<|end|>' → logprob: -8.128776550292969
    5. ' 
' → logprob: -9.878776550292969
    6. '  
' → logprob: -10.003776550292969
    7. ' if' → logprob: -10.253776550292969
    8. '                
' → logprob: -10.378776550292969
    9. '                   ' → logprob: -10.503776550292969
    10. '       ' → logprob: -11.128776550292969

Token 780: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00031973462319001555
    2. '           ' → logprob: -8.625319480895996
    3. 'if' → logprob: -9.750319480895996
    4. ' if' → logprob: -10.750319480895996
    5. '                   ' → logprob: -11.500319480895996
    6. ' ' → logprob: -11.625319480895996
    7. '                
' → logprob: -11.750319480895996
    8. '              ' → logprob: -11.875319480895996
    9. '```' → logprob: -11.875319480895996
    10. '       ' → logprob: -12.250319480895996

Token 781: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -9.913265239447355e-05
    2. '               ' → logprob: -9.750099182128906
    3. ' if' → logprob: -10.125099182128906
    4. '           ' → logprob: -15.000099182128906
    5. '```' → logprob: -16.125099182128906
    6. 'If' → logprob: -16.500099182128906
    7. '                   ' → logprob: -18.250099182128906
    8. '	if' → logprob: -18.500099182128906
    9. '@if' → logprob: -18.750099182128906
    10. 'self' → logprob: -18.875099182128906

Token 782: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0040785204619169235
    2. ' self' → logprob: -5.504078388214111
    3. '(self' → logprob: -15.75407886505127
    4. '[self' → logprob: -18.879077911376953
    5. '               ' → logprob: -19.379077911376953
    6. '	self' → logprob: -19.504077911376953
    7. '   ' → logprob: -20.004077911376953
    8. '                   ' → logprob: -20.254077911376953
    9. ' ' → logprob: -20.379077911376953
    10. '0' → logprob: -20.504077911376953

Token 783: '.graph' (ID: 18104)
  Prédit: '.graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.graph' → logprob: -2.3915141355246305e-05
    2. 'graph' → logprob: -10.87502384185791
    3. '.' → logprob: -13.12502384185791
    4. '	graph' → logprob: -13.50002384185791
    5. 'self' → logprob: -14.87502384185791
    6. '.graphics' → logprob: -15.37502384185791
    7. '.g' → logprob: -15.75002384185791
    8. ' .' → logprob: -15.87502384185791
    9. '.system' → logprob: -16.000024795532227
    10. '.grid' → logprob: -16.125024795532227

Token 784: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -3.941161776310764e-05
    2. '.graph' → logprob: -10.375039100646973
    3. '[in' → logprob: -12.625039100646973
    4. 'in' → logprob: -12.625039100646973
    5. '.ad' → logprob: -14.250039100646973
    6. '_in' → logprob: -14.500039100646973
    7. '.n' → logprob: -16.25004005432129
    8. 'graph' → logprob: -16.25004005432129
    9. '   ' → logprob: -16.50004005432129
    10. '	in' → logprob: -16.75004005432129

Token 785: '_degree' (ID: 128654)
  Prédit: '_degree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_degree' → logprob: -0.0001884015218820423
    2. 'in' → logprob: -9.000188827514648
    3. '[n' → logprob: -11.375188827514648
    4. 'n' → logprob: -11.500188827514648
    5. 'degree' → logprob: -11.625188827514648
    6. '[in' → logprob: -11.750188827514648
    7. '_de' → logprob: -12.000188827514648
    8. 'Degree' → logprob: -12.125188827514648
    9. 'egree' → logprob: -12.125188827514648
    10. '-degree' → logprob: -12.500188827514648

Token 786: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.375
    3. '[next' → logprob: -16.375
    4. ' [' → logprob: -18.0
    5. '[now' → logprob: -18.125
    6. '```' → logprob: -18.375
    7. 'n' → logprob: -18.75
    8. '[
' → logprob: -19.375
    9. '(n' → logprob: -20.375
    10. '	n' → logprob: -20.5

Token 787: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.04000391811132431
    2. '[n' → logprob: -3.290004014968872
    3. 'ext' → logprob: -6.415003776550293
    4. '[next' → logprob: -9.165003776550293
    5. 'x' → logprob: -9.415003776550293
    6. 't' → logprob: -10.290003776550293
    7. '[' → logprob: -10.540003776550293
    8. '[x' → logprob: -10.540003776550293
    9. 'n' → logprob: -10.915003776550293
    10. ']' → logprob: -11.665003776550293

Token 788: ']' (ID: 60)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.10747244954109192
    2. ']' → logprob: -2.8574724197387695
    3. '==' → logprob: -3.4824724197387695
    4. ' ==' → logprob: -4.6074724197387695
    5. ']==' → logprob: -5.6074724197387695
    6. '[' → logprob: -10.48247241973877
    7. ')' → logprob: -10.85747241973877
    8. '[next' → logprob: -11.35747241973877
    9. '   ' → logprob: -11.48247241973877
    10. ')==' → logprob: -11.73247241973877

Token 789: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.019227880984544754
    2. ' ==' → logprob: -4.394227981567383
    3. '[n' → logprob: -5.019227981567383
    4. '[' → logprob: -9.769227981567383
    5. '=' → logprob: -11.269227981567383
    6. ']==' → logprob: -12.394227981567383
    7. '[next' → logprob: -13.019227981567383
    8. '[now' → logprob: -13.019227981567383
    9. '[i' → logprob: -13.144227981567383
    10. '==
' → logprob: -13.894227981567383

Token 790: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -20.000045776367188
    4. '
' → logprob: -21.625045776367188
    5. '                   ' → logprob: -22.375045776367188
    6. '               ' → logprob: -22.375045776367188
    7. '۰' → logprob: -22.875045776367188
    8. '=' → logprob: -23.000045776367188
    9. '```' → logprob: -23.250045776367188
    10. '           ' → logprob: -23.625045776367188

Token 791: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -20.25
    4. '
' → logprob: -22.25
    5. '```' → logprob: -22.375
    6. '=' → logprob: -23.125
    7. 'zero' → logprob: -23.5
    8. '[' → logprob: -23.625
    9. '  ' → logprob: -23.625
    10. '۰' → logprob: -24.5

Token 792: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47921639680862427
    2. ':
' → logprob: -0.9792163968086243
    3. '               ' → logprob: -5.354216575622559
    4. '                   ' → logprob: -8.604216575622559
    5. '):
' → logprob: -9.354216575622559
    6. '           ' → logprob: -9.604216575622559
    7. '):' → logprob: -11.229216575622559
    8. ':
' → logprob: -11.229216575622559
    9. '                       ' → logprob: -11.854216575622559
    10. ')' → logprob: -11.854216575622559

Token 793: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09780406951904297
    2. '               ' → logprob: -3.097804069519043
    3. ' self' → logprob: -3.222804069519043
    4. 'self' → logprob: -4.972804069519043
    5. '                       ' → logprob: -7.222804069519043
    6. '   ' → logprob: -8.222804069519043
    7. '(self' → logprob: -9.347804069519043
    8. '           ' → logprob: -9.722804069519043
    9. '                ' → logprob: -10.972804069519043
    10. '                  ' → logprob: -11.097804069519043

Token 794: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3154253661632538
    2. ' self' → logprob: -1.3154253959655762
    3. '                   ' → logprob: -6.190425395965576
    4. '	self' → logprob: -10.065424919128418
    5. '                       ' → logprob: -10.190424919128418
    6. '               ' → logprob: -11.065424919128418
    7. '   ' → logprob: -11.815424919128418
    8. '           ' → logprob: -12.690424919128418
    9. ' ' → logprob: -12.940424919128418
    10. '(self' → logprob: -13.315424919128418

Token 795: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.47597989439964294
    2. '_push' → logprob: -0.9759799242019653
    3. '.push' → logprob: -6.350979804992676
    4. '   ' → logprob: -10.225979804992676
    5. '_p' → logprob: -10.475979804992676
    6. '_ready' → logprob: -10.600979804992676
    7. '_PUSH' → logprob: -10.975979804992676
    8. ' _' → logprob: -11.600979804992676
    9. 'self' → logprob: -11.850979804992676
    10. '->_' → logprob: -12.600979804992676

Token 796: 'push' (ID: 18873)
  Prédit: 'push'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'push' → logprob: -1.3306015716807451e-05
    2. '_push' → logprob: -11.25001335144043
    3. ' push' → logprob: -15.75001335144043
    4. '.push' → logprob: -16.75001335144043
    5. '	push' → logprob: -17.00001335144043
    6. 'pus' → logprob: -17.87501335144043
    7. 'check' → logprob: -18.12501335144043
    8. 'Push' → logprob: -18.75001335144043
    9. '(push' → logprob: -19.00001335144043
    10. '   ' → logprob: -19.12501335144043

Token 797: '_ready' (ID: 78121)
  Prédit: '_ready'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ready' → logprob: -0.004207209218293428
    2. 'ready' → logprob: -5.629207134246826
    3. '(n' → logprob: -7.754207134246826
    4. 'n' → logprob: -8.754207611083984
    5. 'Ready' → logprob: -11.754207611083984
    6. '_READY' → logprob: -12.879207611083984
    7. '_n' → logprob: -13.129207611083984
    8. '_next' → logprob: -13.129207611083984
    9. ' ready' → logprob: -13.504207611083984
    10. '[n' → logprob: -13.754207611083984

Token 798: '_task' (ID: 27167)
  Prédit: '_task'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_task' → logprob: -8.375538163818419e-05
    2. 'task' → logprob: -9.750083923339844
    3. 'n' → logprob: -11.000083923339844
    4. '_ready' → logprob: -12.000083923339844
    5. 'ready' → logprob: -13.500083923339844
    6. '_tasks' → logprob: -15.500083923339844
    7. 'Task' → logprob: -15.875083923339844
    8. ' task' → logprob: -15.875083923339844
    9. '_' → logprob: -16.125083923339844
    10. '_n' → logprob: -16.250083923339844

Token 799: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.000000953674316
    3. 'n' → logprob: -16.125001907348633
    4. '(
' → logprob: -19.500001907348633
    5. '(next' → logprob: -19.625001907348633
    6. ' (' → logprob: -20.375001907348633
    7. '(nx' → logprob: -21.000001907348633
    8. '	n' → logprob: -21.500001907348633
    9. '
' → logprob: -21.875001907348633
    10. '<n' → logprob: -22.125001907348633

Token 800: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: 0.0
    2. 't' → logprob: -18.125
    3. '```' → logprob: -18.375
    4. '   ' → logprob: -18.75
    5. '(' → logprob: -19.75
    6. 'n' → logprob: -20.125
    7. '(n' → logprob: -20.25
    8. 'nt' → logprob: -21.375
    9. 'ext' → logprob: -21.375
    10. '``' → logprob: -21.375

Token 801: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011700649745762348
    2. '())' → logprob: -4.511700630187988
    3. '()' → logprob: -7.386700630187988
    4. ')
' → logprob: -11.011700630187988
    5. ' ())' → logprob: -12.261700630187988
    6. ' )' → logprob: -13.136700630187988
    7. '<|end|>' → logprob: -13.136700630187988
    8. '(' → logprob: -13.636700630187988
    9. '()
' → logprob: -13.761700630187988
    10. '())
' → logprob: -13.886700630187988

Token 802: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10279332101345062
    2. '           ' → logprob: -2.7277932167053223
    3. '<|end|>' → logprob: -3.8527932167053223
    4. 'return' → logprob: -4.727793216705322
    5. '
' → logprob: -7.102793216705322
    6. '```' → logprob: -7.352793216705322
    7. ' return' → logprob: -8.47779369354248
    8. '   ' → logprob: -8.60279369354248
    9. '        
' → logprob: -8.72779369354248
    10. '<|end|>' → logprob: -10.10279369354248

Token 803: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.018194308504462242
    2. '       ' → logprob: -4.018194198608398
    3. ' return' → logprob: -10.143194198608398
    4. '	return' → logprob: -13.143194198608398
    5. '
' → logprob: -14.018194198608398
    6. '   ' → logprob: -14.393194198608398
    7. '```' → logprob: -14.393194198608398
    8. '{return' → logprob: -14.643194198608398
    9. 'if' → logprob: -15.518194198608398
    10. '           ' → logprob: -15.768194198608398

Token 804: ' execution' (ID: 20860)
  Prédit: 'execution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'execution' → logprob: -0.0003370118502061814
    2. ' execution' → logprob: -8.000336647033691
    3. 'execut' → logprob: -13.750336647033691
    4. '[' → logprob: -14.875336647033691
    5. '[]' → logprob: -16.625337600708008
    6. 'exec' → logprob: -17.500337600708008
    7. '.execution' → logprob: -17.625337600708008
    8. ' [' → logprob: -18.125337600708008
    9. 'executor' → logprob: -18.875337600708008
    10. 'self' → logprob: -19.000337600708008

Token 805: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.003298078430816531
    2. 'tion' → logprob: -6.503298282623291
    3. 'ution' → logprob: -6.628298282623291
    4. 'ction' → logprob: -8.253297805786133
    5. 'ation' → logprob: -9.503297805786133
    6. 'order' → logprob: -9.878297805786133
    7. '_execution' → logprob: -9.878297805786133
    8. 't' → logprob: -11.628297805786133
    9. 'on' → logprob: -11.753297805786133
    10. 'execution' → logprob: -12.003297805786133

Token 806: '

' (ID: 279)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11210961639881134
    2. '<|end|>' → logprob: -2.737109661102295
    3. 'def' → logprob: -3.487109661102295
    4. 'if' → logprob: -5.112109661102295
    5. '```' → logprob: -5.487109661102295
    6. '<|end|>' → logprob: -8.737109184265137
    7. 'import' → logprob: -8.987109184265137
    8. ')' → logprob: -9.987109184265137
    9. 'n' → logprob: -10.612109184265137
    10. '
' → logprob: -10.987109184265137

Token 807: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.021484971046447754
    2. '<|end|>' → logprob: -4.146484851837158
    3. '```' → logprob: -5.396484851837158
    4. 'def' → logprob: -7.396484851837158
    5. '
' → logprob: -9.146485328674316
    6. ')' → logprob: -9.896485328674316
    7. '[' → logprob: -10.021485328674316
    8. '<|end|>' → logprob: -10.771485328674316
    9. '``' → logprob: -11.896485328674316
    10. ' ' → logprob: -12.146485328674316

Token 808: ' Input' (ID: 10090)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -0.7884687781333923
    2. ' Scheduler' → logprob: -1.538468837738037
    3. ' Task' → logprob: -2.538468837738037
    4. ' unittest' → logprob: -2.663468837738037
    5. 'Solution' → logprob: -3.663468837738037
    6. ' Test' → logprob: -3.663468837738037
    7. ' Main' → logprob: -3.788468837738037
    8. 'Scheduler' → logprob: -3.788468837738037
    9. ' Solver' → logprob: -4.288468837738037
    10. ' Priority' → logprob: -4.413468837738037

Token 809: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.7378713488578796
    2. 'Handler' → logprob: -1.4878714084625244
    3. 'Parser' → logprob: -1.4878714084625244
    4. ':' → logprob: -3.6128714084625244
    5. 'Data' → logprob: -4.362871170043945
    6. 'Processor' → logprob: -4.612871170043945
    7. '():' → logprob: -4.737871170043945
    8. 'Tokenizer' → logprob: -5.362871170043945
    9. '():
' → logprob: -6.237871170043945
    10. ':
' → logprob: -6.737871170043945

Token 810: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006732780486345291
    2. ':
' → logprob: -5.006732940673828
    3. '<|end|>' → logprob: -12.381732940673828
    4. '(object' → logprob: -12.631732940673828
    5. ':def' → logprob: -12.756732940673828
    6. '():' → logprob: -13.381732940673828
    7. ':

' → logprob: -13.506732940673828
    8. '():
' → logprob: -14.631732940673828
    9. '(' → logprob: -14.756732940673828
    10. '):' → logprob: -14.881732940673828

Token 811: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009179589338600636
    2. '<|end|>' → logprob: -4.759179592132568
    3. 'class' → logprob: -8.63417911529541
    4. '```' → logprob: -9.75917911529541
    5. '<|end|>' → logprob: -9.75917911529541
    6. '    
' → logprob: -9.88417911529541
    7. 'def' → logprob: -10.00917911529541
    8. ':' → logprob: -10.38417911529541
    9. ' def' → logprob: -10.50917911529541
    10. ' class' → logprob: -10.63417911529541

Token 812: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08246436715126038
    2. 'def' → logprob: -2.7074644565582275
    3. ' def' → logprob: -4.457464218139648
    4. 'class' → logprob: -7.582464218139648
    5. '@' (adapté à ' @') → logprob: -9.332464218139648
    6. ':' → logprob: -9.332464218139648
    7. '	def' → logprob: -9.707464218139648
    8. 'staticmethod' → logprob: -10.707464218139648
    9. ':def' → logprob: -10.957464218139648
    10. 'classmethod' → logprob: -11.207464218139648

Token 813: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -3.5954712075181305e-05
    2. 'classmethod' → logprob: -10.250036239624023
    3. 'static' → logprob: -14.500036239624023
    4. 'dat' → logprob: -17.750036239624023
    5. 'stat' → logprob: -22.000036239624023
    6. ' static' → logprob: -22.375036239624023
    7. 'st' → logprob: -23.625036239624023
    8. 'property' → logprob: -24.875036239624023
    9. 'sta' → logprob: -25.125036239624023
    10. 'typing' → logprob: -25.625036239624023

Token 814: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008709948509931564
    2. ' def' → logprob: -4.883709907531738
    3. '
' → logprob: -7.383709907531738
    4. '   ' → logprob: -7.883709907531738
    5. '(def' → logprob: -10.758709907531738
    6. '	def' → logprob: -11.008709907531738
    7. '(' → logprob: -11.133709907531738
    8. '  
' → logprob: -11.133709907531738
    9. '    
' → logprob: -11.258709907531738
    10. ':def' → logprob: -11.758709907531738

Token 815: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00040910433745011687
    2. '
' → logprob: -8.000409126281738
    3. ' def' → logprob: -9.625409126281738
    4. '   ' → logprob: -11.875409126281738
    5. '    
' → logprob: -15.125409126281738
    6. 'de' → logprob: -16.125408172607422
    7. '	def' → logprob: -17.125408172607422
    8. ' ' → logprob: -17.250408172607422
    9. ':def' → logprob: -17.250408172607422
    10. '  
' → logprob: -17.625408172607422

Token 816: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.0206720617134124e-05
    2. ' def' → logprob: -11.50001049041748
    3. 'classmethod' → logprob: -17.750009536743164
    4. '	def' → logprob: -18.125009536743164
    5. '   ' → logprob: -19.000009536743164
    6. '
' → logprob: -19.375009536743164
    7. 'staticmethod' → logprob: -19.375009536743164
    8. 'sys' → logprob: -20.125009536743164
    9. 'de' → logprob: -20.250009536743164
    10. 'read' → logprob: -20.375009536743164

Token 817: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.2611411511898041
    2. 'read' → logprob: -1.5111411809921265
    3. ' parse' → logprob: -4.886141300201416
    4. ' read' → logprob: -6.511141300201416
    5. 'def' → logprob: -9.636140823364258
    6. ' readline' → logprob: -10.386140823364258
    7. 'int' → logprob: -11.136140823364258
    8. ' def' → logprob: -11.761140823364258
    9. '_parse' → logprob: -12.761140823364258
    10. 'raw' → logprob: -13.386140823364258

Token 818: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01563837192952633
    2. '()' → logprob: -4.39063835144043
    3. '():
' → logprob: -6.01563835144043
    4. 'int' → logprob: -8.89063835144043
    5. '(sys' → logprob: -8.89063835144043
    6. '(int' → logprob: -9.14063835144043
    7. '(input' → logprob: -9.89063835144043
    8. '()(' → logprob: -10.14063835144043
    9. '(' → logprob: -10.39063835144043
    10. '(line' → logprob: -10.89063835144043

Token 819: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0317150242626667
    2. '():
' → logprob: -4.031714916229248
    3. '()' → logprob: -4.531714916229248
    4. '(input' → logprob: -6.406714916229248
    5. ':' → logprob: -7.781714916229248
    6. '(line' → logprob: -8.281715393066406
    7. '(' → logprob: -8.406715393066406
    8. '()->' → logprob: -10.156715393066406
    9. '(lines' → logprob: -10.531715393066406
    10. ' ->' → logprob: -11.031715393066406

Token 820: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.020582063123583794
    2. 'int' → logprob: -4.52058219909668
    3. ' Tuple' → logprob: -5.02058219909668
    4. 'tuple' → logprob: -6.27058219909668
    5. 'None' → logprob: -7.52058219909668
    6. ''' → logprob: -8.39558219909668
    7. 'List' → logprob: -9.27058219909668
    8. ''int' → logprob: -10.39558219909668
    9. '"' → logprob: -10.39558219909668
    10. 'Dict' → logprob: -11.14558219909668

Token 821: '[List' (ID: 113982)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12405350059270859
    2. '(int' → logprob: -2.624053478240967
    3. '[int' → logprob: -3.124053478240967
    4. 'List' → logprob: -9.124053955078125
    5. '   ' → logprob: -10.749053955078125
    6. ',int' → logprob: -10.874053955078125
    7. '[List' → logprob: -11.499053955078125
    8. ' int' → logprob: -11.874053955078125
    9. '(List' → logprob: -12.374053955078125
    10. ':int' → logprob: -12.749053955078125

Token 822: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7729658540920354e-05
    2. '[int' → logprob: -10.875027656555176
    3. '<Task' → logprob: -12.625027656555176
    4. ',' → logprob: -13.000027656555176
    5. '[
' → logprob: -13.000027656555176
    6. 'Task' → logprob: -15.250027656555176
    7. ']' → logprob: -15.625027656555176
    8. '[str' → logprob: -16.000028610229492
    9. '(Task' → logprob: -16.125028610229492
    10. '<|end|>' → logprob: -16.250028610229492

Token 823: 'Task' (ID: 5927)
  Prédit: 'Task'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Task' → logprob: -6.24179228907451e-05
    2. 'int' → logprob: -9.875061988830566
    3. 'Tuple' → logprob: -11.500061988830566
    4. 'str' → logprob: -15.250061988830566
    5. ' Task' → logprob: -15.250061988830566
    6. '[int' → logprob: -15.875061988830566
    7. '	Task' → logprob: -16.375062942504883
    8. 'Token' → logprob: -17.875062942504883
    9. '_Task' → logprob: -18.125062942504883
    10. '<Task' → logprob: -18.250062942504883

Token 824: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011765221133828163
    2. ',List' → logprob: -4.511765003204346
    3. '[List' → logprob: -7.511765003204346
    4. '[int' → logprob: -9.011765480041504
    5. ',int' → logprob: -10.761765480041504
    6. ' ,' → logprob: -10.761765480041504
    7. '   ' → logprob: -12.886765480041504
    8. '[' → logprob: -13.761765480041504
    9. ',
' → logprob: -14.011765480041504
    10. '],' → logprob: -15.261765480041504

Token 825: ' Dependency' (ID: 73162)
  Prédit: 'Dependency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dependency' → logprob: -0.01951632834970951
    2. 'int' → logprob: -4.019516468048096
    3. ' Dependency' → logprob: -7.394516468048096
    4. 'List' → logprob: -7.519516468048096
    5. ' int' → logprob: -8.769515991210938
    6. 'Depend' → logprob: -11.769515991210938
    7. 'Evaluation' → logprob: -11.894515991210938
    8. '
' → logprob: -12.019515991210938
    9. 'Dependent' → logprob: -12.269515991210938
    10. 'Graph' → logprob: -12.644515991210938

Token 826: 'Graph' (ID: 9922)
  Prédit: 'Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -5.438573680294212e-06
    2. 'List' → logprob: -13.125005722045898
    3. 'Graphs' → logprob: -13.125005722045898
    4. '
' → logprob: -15.250005722045898
    5. '```' → logprob: -15.875005722045898
    6. '[int' → logprob: -16.1250057220459
    7. 'Dict' → logprob: -16.3750057220459
    8. '[' → logprob: -16.5000057220459
    9. '_graph' → logprob: -16.6250057220459
    10. ']' → logprob: -16.6250057220459

Token 827: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000888471957296133
    2. ',int' → logprob: -7.625888347625732
    3. ',List' → logprob: -8.25088882446289
    4. ' ,' → logprob: -9.00088882446289
    5. '[int' → logprob: -11.75088882446289
    6. '   ' → logprob: -12.50088882446289
    7. ',
' → logprob: -12.75088882446289
    8. 'int' → logprob: -14.62588882446289
    9. '       ' → logprob: -14.87588882446289
    10. '[List' → logprob: -15.50088882446289

Token 828: ' Evaluation' (ID: 58680)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.33263346552848816
    2. 'Evaluation' → logprob: -1.3326334953308105
    3. 'int' → logprob: -4.0826334953308105
    4. ' List' → logprob: -6.7076334953308105
    5. 'Tuple' → logprob: -7.8326334953308105
    6. ' Evaluation' → logprob: -8.082633018493652
    7. 'Initial' → logprob: -8.457633018493652
    8. ' int' → logprob: -9.832633018493652
    9. 'Dict' → logprob: -10.832633018493652
    10. '   ' → logprob: -11.332633018493652

Token 829: 'Order' (ID: 4861)
  Prédit: 'Order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Order' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -16.125
    3. '	Order' → logprob: -16.125
    4. 'order' → logprob: -17.5
    5. 'Evaluation' → logprob: -17.5
    6. ' Order' → logprob: -17.625
    7. 'Orders' → logprob: -17.875
    8. 'List' → logprob: -18.0
    9. '_order' → logprob: -18.0
    10. '_Order' → logprob: -18.125

Token 830: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008189192740246654
    2. ',List' → logprob: -7.625818729400635
    3. ' ,' → logprob: -8.125819206237793
    4. '   ' → logprob: -11.125819206237793
    5. ']:
' → logprob: -11.875819206237793
    6. '       ' → logprob: -12.250819206237793
    7. ',
' → logprob: -13.125819206237793
    8. ']:' → logprob: -13.250819206237793
    9. ',int' → logprob: -13.500819206237793
    10. '[List' → logprob: -14.375819206237793

Token 831: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -9.698698704596609e-05
    2. ' List' → logprob: -9.250097274780273
    3. '   ' → logprob: -15.500097274780273
    4. '       ' → logprob: -15.625097274780273
    5. '           ' → logprob: -15.875097274780273
    6. '	List' → logprob: -16.125097274780273
    7. '                   ' → logprob: -17.375097274780273
    8. '               ' → logprob: -17.625097274780273
    9. '        ' → logprob: -17.625097274780273
    10. '[List' → logprob: -17.750097274780273

Token 832: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.5577775128767826e-06
    2. '[int' → logprob: -12.250005722045898
    3. '[
' → logprob: -14.375005722045898
    4. '<Tuple' → logprob: -16.5000057220459
    5. '[List' → logprob: -16.7500057220459
    6. '[(' → logprob: -17.5000057220459
    7. ']' → logprob: -18.2500057220459
    8. '```' → logprob: -18.7500057220459
    9. '[T' → logprob: -19.8750057220459
    10. '][' → logprob: -20.1250057220459

Token 833: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -7.159660890465602e-05
    2. '[' → logprob: -9.62507152557373
    3. ' Tuple' → logprob: -12.37507152557373
    4. '[int' → logprob: -14.50007152557373
    5. 'int' → logprob: -14.75007152557373
    6. '   ' → logprob: -16.125072479248047
    7. ']' → logprob: -17.000072479248047
    8. 'Tu' → logprob: -17.250072479248047
    9. '<Tuple' → logprob: -17.625072479248047
    10. ' ' → logprob: -17.750072479248047

Token 834: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0019293478690087795
    2. 'int' → logprob: -6.25192928314209
    3. ']int' → logprob: -14.87692928314209
    4. ',int' → logprob: -15.87692928314209
    5. '<int' → logprob: -16.001930236816406
    6. '(int' → logprob: -17.251930236816406
    7. ' int' → logprob: -17.501930236816406
    8. '[
' → logprob: -18.126930236816406
    9. '   ' → logprob: -18.376930236816406
    10. '	int' → logprob: -18.626930236816406

Token 835: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000517886015586555
    2. '[' → logprob: -7.750517845153809
    3. ',E' → logprob: -9.750517845153809
    4. '[int' → logprob: -11.375517845153809
    5. ' ,' → logprob: -12.125517845153809
    6. '[E' → logprob: -12.375517845153809
    7. ',int' → logprob: -13.000517845153809
    8. ',[' → logprob: -13.250517845153809
    9. 'Evaluation' → logprob: -13.625517845153809
    10. ',List' → logprob: -14.125517845153809

Token 836: ' Evaluation' (ID: 58680)
  Prédit: 'Evaluation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Evaluation' → logprob: -9.782141569303349e-05
    2. ' Evaluation' → logprob: -9.25009822845459
    3. 'List' → logprob: -14.00009822845459
    4. 'Eval' → logprob: -15.62509822845459
    5. '
' → logprob: -15.87509822845459
    6. 'evaluation' → logprob: -16.000097274780273
    7. 'Evaluator' → logprob: -16.125097274780273
    8. 'Evalu' → logprob: -16.375097274780273
    9. '   ' → logprob: -16.500097274780273
    10. ' ' → logprob: -16.875097274780273

Token 837: 'Order' (ID: 4861)
  Prédit: 'Order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Order' → logprob: -1.1472419600977446e-06
    2. 'Evaluation' → logprob: -14.125000953674316
    3. '[' → logprob: -16.375001907348633
    4. 'Orders' → logprob: -17.000001907348633
    5. ' Order' → logprob: -17.000001907348633
    6. 'order' → logprob: -17.375001907348633
    7. ']]' → logprob: -17.750001907348633
    8. ',' → logprob: -18.125001907348633
    9. '	Order' → logprob: -18.125001907348633
    10. 'Change' → logprob: -18.875001907348633

Token 838: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.20178821682929993
    2. ']]:
' → logprob: -1.7017881870269775
    3. ']]]' → logprob: -7.951788425445557
    4. ']])' → logprob: -11.326787948608398
    5. ']]
' → logprob: -12.326787948608398
    6. ']' → logprob: -13.326787948608398
    7. ']]

' → logprob: -13.951787948608398
    8. ']],' → logprob: -14.076787948608398
    9. ')]' → logprob: -14.201787948608398
    10. '```' → logprob: -14.826787948608398

Token 839: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.576197624206543
    2. ']:' → logprob: -1.451197624206543
    3. ',' → logprob: -1.826197624206543
    4. ':
' → logprob: -3.951197624206543
    5. ':' → logprob: -4.076197624206543
    6. '):
' → logprob: -5.826197624206543
    7. ']:
' → logprob: -6.576197624206543
    8. '():
' → logprob: -7.076197624206543
    9. '):' → logprob: -7.451197624206543
    10. '   ' → logprob: -8.201197624206543

Token 840: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018777087097987533
    2. 'newline' → logprob: -8.251877784729004
    3. 'input' → logprob: -8.501877784729004
    4. '```' → logprob: -8.626877784729004
    5. 'line' → logprob: -8.751877784729004
    6. 'n' → logprob: -8.876877784729004
    7. ' line' → logprob: -9.001877784729004
    8. ' lines' → logprob: -9.126877784729004
    9. '#' → logprob: -9.126877784729004
    10. '        
' → logprob: -9.251877784729004

Token 841: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12699824571609497
    2. ' n' → logprob: -2.12699818611145
    3. '       ' → logprob: -9.876997947692871
    4. '   ' → logprob: -11.626997947692871
    5. 'N' (adapté à ' N') → logprob: -11.876997947692871
    6. 'num' → logprob: -14.001997947692871
    7. ' N' → logprob: -14.626997947692871
    8. '	n' → logprob: -15.001997947692871
    9. '#' → logprob: -15.376997947692871
    10. '        ' → logprob: -15.501997947692871

Token 842: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021039631217718124
    2. ' =' → logprob: -4.2710394859313965
    3. '=' → logprob: -5.0210394859313965
    4. ' ,' → logprob: -8.396039962768555
    5. '=int' → logprob: -11.646039962768555
    6. ',N' → logprob: -12.146039962768555
    7. ',int' → logprob: -12.271039962768555
    8. ',
' → logprob: -13.396039962768555
    9. ')' → logprob: -13.646039962768555
    10. '<|end|>' → logprob: -14.146039962768555

Token 843: ' K' (ID: 658)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.709097146987915
    2. ' M' → logprob: -0.709097146987915
    3. ' K' → logprob: -5.209096908569336
    4. ' ' → logprob: -5.334096908569336
    5. 'K' → logprob: -5.459096908569336
    6. ' =' → logprob: -8.209096908569336
    7. '=' → logprob: -8.334096908569336
    8. 'm' → logprob: -8.459096908569336
    9. 'k' → logprob: -8.584096908569336
    10. ' 
' → logprob: -9.834096908569336

Token 844: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3283277750015259
    2. '=' → logprob: -1.3283277750015259
    3. ',' → logprob: -4.203327655792236
    4. ' ,' → logprob: -12.078328132629395
    5. ' ' → logprob: -14.328328132629395
    6. '=input' → logprob: -14.828328132629395
    7. '=int' → logprob: -15.578328132629395
    8. ')' → logprob: -16.078327178955078
    9. '   ' → logprob: -16.453327178955078
    10. '[' → logprob: -16.703327178955078

Token 845: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03804194927215576
    2. 'map' → logprob: -3.2880420684814453
    3. ' ' → logprob: -14.788042068481445
    4. '	map' → logprob: -16.288042068481445
    5. '(map' → logprob: -17.163042068481445
    6. '_map' → logprob: -18.163042068481445
    7. ' list' → logprob: -18.538042068481445
    8. 'm' → logprob: -18.538042068481445
    9. ' mapa' → logprob: -18.538042068481445
    10. '.map' → logprob: -19.913042068481445

Token 846: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -3.4285862057004124e-05
    2. '(' → logprob: -11.00003433227539
    3. 'int' → logprob: -11.00003433227539
    4. '(str' → logprob: -15.37503433227539
    5. '(
' → logprob: -15.75003433227539
    6. '[int' → logprob: -15.87503433227539
    7. '(map' → logprob: -16.87503433227539
    8. '()' → logprob: -16.87503433227539
    9. '(input' → logprob: -16.87503433227539
    10. '(list' → logprob: -17.00003433227539

Token 847: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04808327928185463
    2. 'input' → logprob: -3.7980833053588867
    3. ',input' → logprob: -4.423083305358887
    4. '(),' → logprob: -5.673083305358887
    5. '()' → logprob: -5.923083305358887
    6. '(sys' → logprob: -6.173083305358887
    7. '(' → logprob: -6.298083305358887
    8. ',' → logprob: -6.423083305358887
    9. '().' → logprob: -7.798083305358887
    10. ')' → logprob: -8.673083305358887

Token 848: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002619318547658622
    2. ' input' → logprob: -8.250262260437012
    3. 'sys' → logprob: -14.375262260437012
    4. '(input' → logprob: -18.750261306762695
    5. '=input' → logprob: -18.875261306762695
    6. ',input' → logprob: -19.375261306762695
    7. ' sys' → logprob: -20.250261306762695
    8. '<input' → logprob: -20.375261306762695
    9. ')' → logprob: -20.500261306762695
    10. '_input' → logprob: -20.625261306762695

Token 849: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00039492646465077996
    2. '()' → logprob: -8.000394821166992
    3. '())' → logprob: -9.750394821166992
    4. '(' → logprob: -14.625394821166992
    5. '()[' → logprob: -14.750394821166992
    6. '()
' → logprob: -15.000394821166992
    7. ' ().' → logprob: -17.750394821166992
    8. '().__' → logprob: -17.875394821166992
    9. '()]' → logprob: -18.125394821166992
    10. '().
' → logprob: -18.375394821166992

Token 850: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.08057920634746552
    2. 'strip' → logprob: -2.5805792808532715
    3. 'rstrip' → logprob: -6.4555792808532715
    4. 'read' → logprob: -9.080578804016113
    5. 'decode' → logprob: -14.705578804016113
    6. ' split' → logprob: -14.705578804016113
    7. '(split' → logprob: -14.955578804016113
    8. ' strip' → logprob: -15.580578804016113
    9. '_split' → logprob: -15.705578804016113
    10. 'spl' → logprob: -15.830578804016113

Token 851: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1337144821882248
    2. '())' → logprob: -2.133714437484741
    3. '()' → logprob: -5.00871467590332
    4. '(' → logprob: -10.00871467590332
    5. '())
' → logprob: -11.13371467590332
    6. ')
' → logprob: -11.38371467590332
    7. '(),' → logprob: -12.25871467590332
    8. ' )' → logprob: -13.00871467590332
    9. '))' → logprob: -13.13371467590332
    10. ')`' → logprob: -13.88371467590332

Token 852: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2940199375152588
    2. '        
' → logprob: -2.044019937515259
    3. 'tasks' → logprob: -3.294019937515259
    4. 'tokens' → logprob: -3.794019937515259
    5. 'attributes' → logprob: -4.29401969909668
    6. '<|end|>' → logprob: -4.41901969909668
    7. ' 
' → logprob: -4.91901969909668
    8. 'task' → logprob: -5.04401969909668
    9. ' attributes' → logprob: -5.41901969909668
    10. ',' → logprob: -5.54401969909668

Token 853: ' tasks' (ID: 13638)
  Prédit: 'attributes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attributes' → logprob: -0.1839974969625473
    2. 'tasks' (adapté à ' tasks') → logprob: -2.183997392654419
    3. ' attributes' → logprob: -3.683997392654419
    4. 'attrs' → logprob: -3.808997392654419
    5. ' tasks' → logprob: -5.558997631072998
    6. 'attr' → logprob: -6.308997631072998
    7. ' attrs' → logprob: -6.433997631072998
    8. 'A' → logprob: -7.683997631072998
    9. ' attr' → logprob: -9.93399715423584
    10. 'atts' → logprob: -9.93399715423584

Token 854: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0791071206331253
    2. ' =' → logprob: -2.5791070461273193
    3. '=[]' → logprob: -8.454107284545898
    4. '[]' → logprob: -13.954107284545898
    5. '=[]
' → logprob: -14.079107284545898
    6. ':' → logprob: -14.204107284545898
    7. ',' → logprob: -14.579107284545898
    8. '[' → logprob: -14.704107284545898
    9. '[:]' → logprob: -15.204107284545898
    10. '=[' → logprob: -15.204107284545898

Token 855: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4807973802089691
    2. '[' → logprob: -0.9807974100112915
    3. '[]
' → logprob: -6.730797290802002
    4. '[N' → logprob: -6.980797290802002
    5. ' []' → logprob: -7.230797290802002
    6. '[n' → logprob: -7.230797290802002
    7. ' [' → logprob: -7.230797290802002
    8. '[int' → logprob: -7.480797290802002
    9. '[t' → logprob: -7.980797290802002
    10. '[class' → logprob: -8.23079776763916

Token 856: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40483376383781433
    2. 'for' → logprob: -1.5298337936401367
    3. ' for' → logprob: -2.1548337936401367
    4. '        
' → logprob: -9.029833793640137
    5. '	for' → logprob: -9.154833793640137
    6. '   ' → logprob: -9.279833793640137
    7. '	' → logprob: -10.279833793640137
    8. '
' → logprob: -10.529833793640137
    9. ' 
' → logprob: -12.154833793640137
    10. '	   ' → logprob: -12.154833793640137

Token 857: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.038066282868385315
    2. ' for' → logprob: -3.2880663871765137
    3. '       ' → logprob: -10.788065910339355
    4. 'attributes' → logprob: -13.163065910339355
    5. ' attributes' → logprob: -13.913065910339355
    6. '
' → logprob: -14.038065910339355
    7. 'attrs' → logprob: -15.538065910339355
    8. '	for' → logprob: -16.038066864013672
    9. '        
' → logprob: -17.038066864013672
    10. ' attrs' → logprob: -17.288066864013672

Token 858: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -3.054500666621607e-06
    2. '_i' → logprob: -13.50000286102295
    3. ' _' → logprob: -13.87500286102295
    4. '_
' → logprob: -14.50000286102295
    5. 'i' → logprob: -17.000003814697266
    6. '_=' → logprob: -17.250003814697266
    7. '_
' → logprob: -17.875003814697266
    8. '_range' → logprob: -18.250003814697266
    9. '
' → logprob: -18.250003814697266
    10. '_id' → logprob: -18.750003814697266

Token 859: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011161833070218563
    2. 'in' → logprob: -4.511161804199219
    3. '_' → logprob: -9.261161804199219
    4. '1' → logprob: -12.886161804199219
    5. 'n' → logprob: -12.886161804199219
    6. ' ' → logprob: -13.136161804199219
    7. ' _' → logprob: -13.261161804199219
    8. '   ' → logprob: -13.386161804199219
    9. 's' → logprob: -13.386161804199219
    10. 'range' → logprob: -13.636161804199219

Token 860: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019288709154352546
    2. ' range' → logprob: -6.251928806304932
    3. 'in' → logprob: -16.251928329467773
    4. '_' → logprob: -17.126928329467773
    5. '	range' → logprob: -17.751928329467773
    6. '   ' → logprob: -18.126928329467773
    7. '(range' → logprob: -18.376928329467773
    8. ' in' → logprob: -18.876928329467773
    9. ' ' → logprob: -18.876928329467773
    10. '  ' → logprob: -19.626928329467773

Token 861: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2671593427658081
    2. '(' → logprob: -1.517159342765808
    3. '(K' → logprob: -4.267159461975098
    4. '1' → logprob: -7.267159461975098
    5. 'N' → logprob: -7.892159461975098
    6. 'K' → logprob: -10.767159461975098
    7. '(
' → logprob: -15.767159461975098
    8. '   ' → logprob: -16.26715850830078
    9. ' ' → logprob: -16.39215850830078
    10. ' N' → logprob: -16.89215850830078

Token 862: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.33031171560287476
    2. 'K' → logprob: -1.3303117752075195
    3. '1' → logprob: -4.0803117752075195
    4. ' K' → logprob: -13.45531177520752
    5. ' N' → logprob: -13.45531177520752
    6. '0' → logprob: -16.205310821533203
    7. ' ' → logprob: -16.580310821533203
    8. '(N' → logprob: -16.830310821533203
    9. '(K' → logprob: -17.455310821533203
    10. '   ' → logprob: -17.580310821533203

Token 863: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002343300264328718
    2. ' ,' → logprob: -6.25234317779541
    3. ',N' → logprob: -8.00234317779541
    4. '(N' → logprob: -10.37734317779541
    5. '(' → logprob: -11.50234317779541
    6. '(),' → logprob: -11.75234317779541
    7. 'N' → logprob: -12.25234317779541
    8. ',i' → logprob: -12.50234317779541
    9. ',n' → logprob: -12.62734317779541
    10. '   ' → logprob: -12.75234317779541

Token 864: ' N' (ID: 478)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0015297401696443558
    2. ' K' → logprob: -6.626529693603516
    3. 'N' → logprob: -8.501529693603516
    4. ' N' → logprob: -15.251529693603516
    5. ')' → logprob: -15.876529693603516
    6. '   ' → logprob: -17.251529693603516
    7. ' ' → logprob: -17.376529693603516
    8. '(K' → logprob: -17.376529693603516
    9. ',' → logprob: -17.501529693603516
    10. '1' → logprob: -17.751529693603516

Token 865: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10892253369092941
    2. ' +' → logprob: -2.3589224815368652
    3. '):
' → logprob: -4.858922481536865
    4. '):' → logprob: -7.108922481536865
    5. ',' → logprob: -10.858922958374023
    6. '*' → logprob: -10.858922958374023
    7. '1' → logprob: -11.108922958374023
    8. '=' → logprob: -11.233922958374023
    9. '**' → logprob: -11.733922958374023
    10. ')' → logprob: -12.233922958374023

Token 866: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '=' → logprob: -17.0000057220459
    4. ')' → logprob: -17.8750057220459
    5. '
' → logprob: -18.3750057220459
    6. '   ' → logprob: -18.6250057220459
    7. '2' → logprob: -19.8750057220459
    8. '):
' → logprob: -20.1250057220459
    9. '```' → logprob: -20.3750057220459
    10. 'i' → logprob: -20.3750057220459

Token 867: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12315244227647781
    2. '):' → logprob: -2.498152494430542
    3. ':' → logprob: -4.248152256011963
    4. ':
' → logprob: -4.373152256011963
    5. ',' → logprob: -5.123152256011963
    6. '():
' → logprob: -7.748152256011963
    7. '):
' → logprob: -8.748152732849121
    8. '       ' → logprob: -8.873152732849121
    9. ')' → logprob: -11.248152732849121
    10. '   ' → logprob: -11.748152732849121

Token 868: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23464255034923553
    2. ' line' → logprob: -2.359642505645752
    3. ' attributes' → logprob: -2.484642505645752
    4. ' attrs' → logprob: -4.484642505645752
    5. 'attributes' → logprob: -4.734642505645752
    6. 'line' → logprob: -6.359642505645752
    7. ' data' → logprob: -6.609642505645752
    8. 'tokens' → logprob: -6.609642505645752
    9. 'attrs' → logprob: -6.609642505645752
    10. ' tokens' → logprob: -6.859642505645752

Token 869: ' attributes' (ID: 15187)
  Prédit: ' attrs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' attrs' → logprob: -0.9051458835601807
    2. 'attrs' → logprob: -0.9051458835601807
    3. 'attr' → logprob: -2.2801458835601807
    4. 'attributes' (adapté à ' attributes') → logprob: -3.2801458835601807
    5. ' attributes' → logprob: -3.9051458835601807
    6. ' attr' → logprob: -4.030145645141602
    7. '           ' → logprob: -5.405145645141602
    8. 'atts' → logprob: -5.655145645141602
    9. 'attrib' → logprob: -5.780145645141602
    10. 'a' → logprob: -7.780145645141602

Token 870: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020861029624939
    2. ' =' → logprob: -2.3502085208892822
    3. ',' → logprob: -14.350208282470703
    4. '=line' → logprob: -15.225208282470703
    5. '＝' → logprob: -15.350208282470703
    6. '=
' → logprob: -15.850208282470703
    7. ')' → logprob: -15.975208282470703
    8. '   ' → logprob: -16.350208282470703
    9. ')=' → logprob: -16.350208282470703
    10. '=int' → logprob: -16.850208282470703

Token 871: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004078401252627373
    2. ' list' → logprob: -5.504078388214111
    3. 'tuple' → logprob: -19.879077911376953
    4. '[list' → logprob: -20.004077911376953
    5. '	list' → logprob: -20.504077911376953
    6. '=list' → logprob: -21.254077911376953
    7. '[' → logprob: -21.379077911376953
    8. 'List' → logprob: -21.379077911376953
    9. 'li' → logprob: -21.629077911376953
    10. 'l' → logprob: -21.629077911376953

Token 872: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -7.541112427134067e-05
    2. 'map' → logprob: -9.500075340270996
    3. '(' → logprob: -14.500075340270996
    4. ' map' → logprob: -19.125076293945312
    5. '(int' → logprob: -19.250076293945312
    6. '	map' → logprob: -19.375076293945312
    7. '(m' → logprob: -19.875076293945312
    8. '(
' → logprob: -20.125076293945312
    9. '.map' → logprob: -20.250076293945312
    10. '_map' → logprob: -20.500076293945312

Token 873: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.061980124562978745
    2. 'int' → logprob: -2.8119800090789795
    3. '(' → logprob: -11.811980247497559
    4. '[int' → logprob: -13.311980247497559
    5. ',int' → logprob: -13.811980247497559
    6. '<int' → logprob: -14.186980247497559
    7. '=int' → logprob: -14.561980247497559
    8. ' int' → logprob: -14.811980247497559
    9. ']int' → logprob: -14.936980247497559
    10. ')' → logprob: -15.436980247497559

Token 874: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.016191909089684486
    2. '(' → logprob: -5.0161919593811035
    3. ',input' → logprob: -5.2661919593811035
    4. 'input' → logprob: -5.5161919593811035
    5. ',' → logprob: -8.891191482543945
    6. '(int' → logprob: -10.016191482543945
    7. '(
' → logprob: -10.891191482543945
    8. '=input' → logprob: -11.016191482543945
    9. '[input' → logprob: -11.641191482543945
    10. ')' → logprob: -12.391191482543945

Token 875: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -5.836499985889532e-05
    2. ' input' → logprob: -9.7500581741333
    3. '(input' → logprob: -21.875059127807617
    4. '	input' → logprob: -22.000059127807617
    5. '<input' → logprob: -22.000059127807617
    6. '=input' → logprob: -22.250059127807617
    7. ',input' → logprob: -22.500059127807617
    8. '_input' → logprob: -23.125059127807617
    9. '
' → logprob: -24.000059127807617
    10. '[input' → logprob: -24.625059127807617

Token 876: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.537868779967539e-06
    2. '()' → logprob: -11.750008583068848
    3. '(' → logprob: -15.875008583068848
    4. '()
' → logprob: -16.37500762939453
    5. '.readline' → logprob: -16.50000762939453
    6. '.split' → logprob: -16.62500762939453
    7. '()[' → logprob: -16.87500762939453
    8. ' ().' → logprob: -17.25000762939453
    9. '()))' → logprob: -18.00000762939453
    10. '().__' → logprob: -18.87500762939453

Token 877: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008737838827073574
    2. 'strip' → logprob: -4.758738040924072
    3. 'rstrip' → logprob: -9.133737564086914
    4. 'read' → logprob: -12.008737564086914
    5. '(split' → logprob: -12.008737564086914
    6. '().' → logprob: -13.758737564086914
    7. ')' → logprob: -14.008737564086914
    8. ' split' → logprob: -14.133737564086914
    9. '.split' → logprob: -16.258737564086914
    10. '.readline' → logprob: -16.508737564086914

Token 878: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0049030776135623455
    2. '()' → logprob: -5.8799028396606445
    3. '))' → logprob: -6.7549028396606445
    4. '()))
' → logprob: -7.2549028396606445
    5. '(' → logprob: -8.754902839660645
    6. '())' → logprob: -10.129902839660645
    7. '()));' → logprob: -11.254902839660645
    8. '().' → logprob: -12.379902839660645
    9. '()))

' → logprob: -12.754902839660645
    10. '(),' → logprob: -13.129902839660645

Token 879: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00028386167832650244
    2. ')' → logprob: -9.000284194946289
    3. '<|end|>' → logprob: -9.125284194946289
    4. '       ' → logprob: -11.000284194946289
    5. '
' → logprob: -11.500284194946289
    6. '          ' → logprob: -11.625284194946289
    7. '            
' → logprob: -12.375284194946289
    8. '<|end|>' → logprob: -13.000284194946289
    9. ',' → logprob: -13.375284194946289
    10. '	       ' → logprob: -13.500284194946289

Token 880: ' tasks' (ID: 13638)
  Prédit: 'tasks'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tasks' (adapté à ' tasks') → logprob: -0.028385763987898827
    2. ' tasks' → logprob: -3.903385877609253
    3. 'task' → logprob: -5.153385639190674
    4. '           ' → logprob: -6.403385639190674
    5. 't' → logprob: -8.528386116027832
    6. ' task' → logprob: -9.153386116027832
    7. '       ' → logprob: -9.778386116027832
    8. '   ' → logprob: -11.903386116027832
    9. '
' → logprob: -12.153386116027832
    10. '.tasks' → logprob: -13.778386116027832

Token 881: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000915039679966867
    2. '.' → logprob: -7.000915050506592
    3. '.app' → logprob: -12.875914573669434
    4. 'append' → logprob: -14.625914573669434
    5. '.ap' → logprob: -15.250914573669434
    6. '.Append' → logprob: -16.00091552734375
    7. ' .' → logprob: -18.50091552734375
    8. '.APP' → logprob: -18.62591552734375
    9. '​.' → logprob: -18.75091552734375
    10. '.extend' → logprob: -18.75091552734375

Token 882: '(Task' (ID: 85812)
  Prédit: '(Task'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Task' → logprob: -0.0019316127290949225
    2. 'Task' → logprob: -6.251931667327881
    3. ' Task' → logprob: -12.751931190490723
    4. '	Task' → logprob: -16.50193214416504
    5. '(' → logprob: -17.87693214416504
    6. '<Task' → logprob: -19.37693214416504
    7. '_Task' → logprob: -19.50193214416504
    8. '.Task' → logprob: -19.75193214416504
    9. '(
' → logprob: -20.25193214416504
    10. 'Tasks' → logprob: -21.12693214416504

Token 883: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.06198651343584061
    2. 'i' → logprob: -2.8119864463806152
    3. '(' → logprob: -11.311986923217773
    4. '(
' → logprob: -12.061986923217773
    5. ' i' → logprob: -14.686986923217773
    6. ')' → logprob: -16.186986923217773
    7. ')i' → logprob: -16.186986923217773
    8. '	i' → logprob: -16.936986923217773
    9. '   ' → logprob: -17.436986923217773
    10. '
' → logprob: -17.561986923217773

Token 884: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.35706390615087e-05
    2. ',
' → logprob: -10.500033378601074
    3. ' ,' → logprob: -12.125033378601074
    4. ',[' → logprob: -15.750033378601074
    5. 'attributes' → logprob: -16.12503433227539
    6. '<|end|>' → logprob: -16.50003433227539
    7. ',exports' → logprob: -16.87503433227539
    8. ',

' → logprob: -16.87503433227539
    9. '‌,' → logprob: -17.00003433227539
    10. ',{
' → logprob: -17.00003433227539

Token 885: ' attributes' (ID: 15187)
  Prédit: 'attributes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attributes' → logprob: -0.0009115827269852161
    2. ' attributes' → logprob: -7.000911712646484
    3. '(attributes' → logprob: -17.750911712646484
    4. 'attribute' → logprob: -18.250911712646484
    5. '   ' → logprob: -18.625911712646484
    6. '
' → logprob: -19.000911712646484
    7. '.attributes' → logprob: -19.000911712646484
    8. ' ' → logprob: -19.375911712646484
    9. '[' → logprob: -19.625911712646484
    10. '           ' → logprob: -20.500911712646484

Token 886: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009041957673616707
    2. '))
' → logprob: -7.500904083251953
    3. ')' → logprob: -8.000904083251953
    4. '       ' → logprob: -11.500904083251953
    5. '           ' → logprob: -12.375904083251953
    6. ')))' → logprob: -14.250904083251953
    7. ')
' → logprob: -14.875904083251953
    8. '   ' → logprob: -15.500904083251953
    9. ' ))' → logprob: -16.375904083251953
    10. '))

' → logprob: -16.375904083251953

Token 887: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21870240569114685
    2. 'change' → logprob: -2.9687023162841797
    3. '```' → logprob: -3.2187023162841797
    4. 'order' → logprob: -3.5937023162841797
    5. ' change' → logprob: -3.5937023162841797
    6. 'graph' → logprob: -4.09370231628418
    7. ' order' → logprob: -5.21870231628418
    8. ' M' → logprob: -5.46870231628418
    9. ' graph' → logprob: -5.71870231628418
    10. '   ' → logprob: -5.84370231628418

Token 888: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.5086427330970764
    2. 'M' → logprob: -1.0086426734924316
    3. 'G' → logprob: -4.383642673492432
    4. 'D' → logprob: -4.883642673492432
    5. 'initial' → logprob: -5.258642673492432
    6. 'order' → logprob: -5.633642673492432
    7. 'eval' → logprob: -6.508642673492432
    8. 'DG' → logprob: -6.758642673492432
    9. 'dep' → logprob: -7.508642673492432
    10. 'dg' → logprob: -8.00864315032959

Token 889: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014147937297821
    2. '=' → logprob: -1.7014148235321045
    3. ' =
' → logprob: -13.826415061950684
    4. '=
' → logprob: -15.451415061950684
    5. ' ' → logprob: -16.076414108276367
    6. ')' → logprob: -16.201414108276367
    7. ',' → logprob: -16.576414108276367
    8. '.' → logprob: -17.451414108276367
    9. '   ' → logprob: -17.451414108276367
    10. ':' → logprob: -17.576414108276367

Token 890: ' Dependency' (ID: 73162)
  Prédit: 'Dependency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dependency' → logprob: -0.0031777136027812958
    2. ' Dependency' → logprob: -5.753177642822266
    3. '       ' → logprob: -18.378177642822266
    4. '   ' → logprob: -18.878177642822266
    5. '.Dependency' → logprob: -19.878177642822266
    6. ' ' → logprob: -20.253177642822266
    7. ' dependency' → logprob: -20.378177642822266
    8. '           ' → logprob: -21.003177642822266
    9. 'Dependent' → logprob: -21.378177642822266
    10. '_dependency' → logprob: -21.753177642822266

Token 891: 'Graph' (ID: 9922)
  Prédit: 'Graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Graph' → logprob: -9.088346359931165e-07
    2. 'graph' → logprob: -14.125000953674316
    3. 'raph' → logprob: -15.625000953674316
    4. '(Graph' → logprob: -18.875
    5. ' Graph' → logprob: -19.375
    6. ' graph' → logprob: -19.625
    7. '_graph' → logprob: -20.875
    8. '
' → logprob: -20.875
    9. 'Graphs' → logprob: -21.25
    10. 'GRAPH' → logprob: -21.625

Token 892: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -9.078839502763003e-05
    2. 'N' → logprob: -9.750090599060059
    3. '(
' → logprob: -10.750090599060059
    4. '(K' → logprob: -11.875090599060059
    5. '(' → logprob: -12.750090599060059
    6. '(n' → logprob: -14.375090599060059
    7. ' (' → logprob: -15.250090599060059
    8. '   ' → logprob: -16.625091552734375
    9. '((' → logprob: -17.000091552734375
    10. 'K' → logprob: -17.125091552734375

Token 893: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07898706197738647
    2. ')
' → logprob: -2.5789871215820312
    3. '       ' → logprob: -9.328987121582031
    4. ')
' → logprob: -12.078987121582031
    5. '   ' → logprob: -13.578987121582031
    6. ')

' → logprob: -14.578987121582031
    7. ' )' → logprob: -14.703987121582031
    8. ')`
' → logprob: -15.703987121582031
    9. ')`' → logprob: -16.07898712158203
    10. ' )
' → logprob: -16.32898712158203

Token 894: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8567962050437927
    2. 'for' → logprob: -0.9817962050437927
    3. ' for' → logprob: -1.6067962646484375
    4. '        
' → logprob: -9.981796264648438
    5. 'M' → logprob: -10.356796264648438
    6. 'Q' → logprob: -10.356796264648438
    7. 'K' → logprob: -10.356796264648438
    8. ' M' → logprob: -10.481796264648438
    9. '
' → logprob: -10.856796264648438
    10. 'm' → logprob: -10.856796264648438

Token 895: ' D' (ID: 415)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016671013145241886
    2. ' for' → logprob: -8.750166893005371
    3. '       ' → logprob: -11.750166893005371
    4. '
' → logprob: -15.875166893005371
    5. '	for' → logprob: -16.500165939331055
    6. '        
' → logprob: -17.750165939331055
    7. '```' → logprob: -17.875165939331055
    8. '   ' → logprob: -19.500165939331055
    9. '``' → logprob: -20.250165939331055
    10. 'For' → logprob: -21.375165939331055

Token 896: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17120662331581116
    2. '=' → logprob: -1.9212065935134888
    3. 'for' → logprob: -5.171206474304199
    4. ',' → logprob: -5.546206474304199
    5. '=int' → logprob: -7.546206474304199
    6. ' for' → logprob: -8.0462064743042
    7. 'ef' → logprob: -8.9212064743042
    8. 'or' → logprob: -9.1712064743042
    9. '   ' → logprob: -9.7962064743042
    10. ')' → logprob: -10.2962064743042

Token 897: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005575587856583297
    2. ' int' → logprob: -7.5005574226379395
    3. 'K' → logprob: -12.375557899475098
    4. '  ' → logprob: -16.00055694580078
    5. '[int' → logprob: -16.37555694580078
    6. ' K' → logprob: -16.50055694580078
    7. '(int' → logprob: -17.25055694580078
    8. '=int' → logprob: -17.50055694580078
    9. 'in' → logprob: -17.62555694580078
    10. ' ' → logprob: -17.75055694580078

Token 898: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0002639582962729037
    2. 'input' → logprob: -8.250264167785645
    3. '(
' → logprob: -13.375264167785645
    4. '(' → logprob: -14.375264167785645
    5. ' input' → logprob: -15.375264167785645
    6. ' (' → logprob: -15.625264167785645
    7. '=input' → logprob: -16.125263214111328
    8. '(sys' → logprob: -17.500263214111328
    9. ',input' → logprob: -17.500263214111328
    10. '	input' → logprob: -19.250263214111328

Token 899: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.09592542797327042
    2. '()' → logprob: -2.5959253311157227
    3. '())
' → logprob: -4.095925331115723
    4. '()
' → logprob: -8.720925331115723
    5. '().' → logprob: -10.095925331115723
    6. ')' → logprob: -10.470925331115723
    7. '(' → logprob: -11.595925331115723
    8. '())
' → logprob: -12.095925331115723
    9. '())

' → logprob: -13.845925331115723
    10. '();)' → logprob: -14.220925331115723

Token 900: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08034810423851013
    2. ' for' → logprob: -2.955348014831543
    3. '       ' → logprob: -3.705348014831543
    4. '	for' → logprob: -8.080348014831543
    5. '<|end|>' → logprob: -8.455348014831543
    6. '	' → logprob: -11.205348014831543
    7. '
' → logprob: -12.080348014831543
    8. '   ' → logprob: -12.580348014831543
    9. '<|end|>' → logprob: -13.705348014831543
    10. '```' → logprob: -13.830348014831543

Token 901: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.372294698550832e-06
    2. '       ' → logprob: -11.750009536743164
    3. ' for' → logprob: -13.500009536743164
    4. '	for' → logprob: -18.625009536743164
    5. '
' → logprob: -20.000009536743164
    6. '   ' → logprob: -20.875009536743164
    7. '```' → logprob: -21.750009536743164
    8. '        
' → logprob: -21.875009536743164
    9. 'For' → logprob: -22.375009536743164
    10. 'while' → logprob: -24.125009536743164

Token 902: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00018149138486478478
    2. ' _' → logprob: -8.625181198120117
    3. '_d' → logprob: -13.750181198120117
    4. '_range' → logprob: -14.625181198120117
    5. '_=' → logprob: -16.125181198120117
    6. '_i' → logprob: -16.750181198120117
    7. '_
' → logprob: -16.750181198120117
    8. '_j' → logprob: -16.875181198120117
    9. '_in' → logprob: -16.875181198120117
    10. '_
' → logprob: -17.625181198120117

Token 903: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -6.146429223008454e-05
    2. ' range' → logprob: -9.75006103515625
    3. '_' → logprob: -13.00006103515625
    4. '_range' → logprob: -14.25006103515625
    5. 'in' → logprob: -16.62506103515625
    6. '(range' → logprob: -18.62506103515625
    7. '	range' → logprob: -18.75006103515625
    8. '0' → logprob: -19.62506103515625
    9. ' in' → logprob: -19.87506103515625
    10. 'r' → logprob: -19.87506103515625

Token 904: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002613358374219388
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -18.500261306762695
    4. '0' → logprob: -19.875261306762695
    5. '
' → logprob: -20.125261306762695
    6. 'r' → logprob: -20.250261306762695
    7. '	range' → logprob: -20.250261306762695
    8. 'input' → logprob: -20.375261306762695
    9. 'ange' → logprob: -20.500261306762695
    10. '```' → logprob: -20.500261306762695

Token 905: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -1.5048530030981055e-06
    2. '(' → logprob: -13.625001907348633
    3. 'D' → logprob: -16.125001907348633
    4. ' (' → logprob: -16.375001907348633
    5. '(int' → logprob: -17.875001907348633
    6. '(
' → logprob: -18.875001907348633
    7. '((' → logprob: -19.000001907348633
    8. '   ' → logprob: -20.125001907348633
    9. ' D' → logprob: -20.375001907348633
    10. '(d' → logprob: -20.375001907348633

Token 906: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14715351164340973
    2. '):' → logprob: -2.022153615951538
    3. ',' → logprob: -5.772153377532959
    4. '       ' → logprob: -7.772153377532959
    5. '   ' → logprob: -8.272153854370117
    6. ':' → logprob: -8.522153854370117
    7. ')' → logprob: -8.647153854370117
    8. '):
' → logprob: -9.147153854370117
    9. ':
' → logprob: -10.022153854370117
    10. '():
' → logprob: -10.272153854370117

Token 907: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22324217855930328
    2. 'frm' → logprob: -1.973242163658142
    3. ' frm' → logprob: -3.3482422828674316
    4. ' line' → logprob: -5.098242282867432
    5. 'line' → logprob: -5.473242282867432
    6. '       ' → logprob: -5.723242282867432
    7. 'fr' → logprob: -5.723242282867432
    8. '```' → logprob: -5.973242282867432
    9. '   ' → logprob: -6.598242282867432
    10. '	       ' → logprob: -7.848242282867432

Token 908: ' a' (ID: 261)
  Prédit: 'frm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frm' → logprob: -0.1724209487438202
    2. 'u' → logprob: -2.2974209785461426
    3. ' frm' → logprob: -3.1724209785461426
    4. ' u' → logprob: -4.922420978546143
    5. 'a' (adapté à ' a') → logprob: -5.172420978546143
    6. 'f' → logprob: -6.422420978546143
    7. 'fr' → logprob: -7.422420978546143
    8. ' a' → logprob: -8.172420501708984
    9. 'x' → logprob: -9.047420501708984
    10. '       ' → logprob: -9.047420501708984

Token 909: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06151234731078148
    2. ' ,' → logprob: -2.9365122318267822
    3. ',b' → logprob: -5.061512470245361
    4. 'b' → logprob: -9.311511993408203
    5. ',int' → logprob: -10.061511993408203
    6. ',n' → logprob: -10.311511993408203
    7. '_,' → logprob: -10.436511993408203
    8. ',p' → logprob: -11.186511993408203
    9. ',_' → logprob: -11.561511993408203
    10. ',input' → logprob: -11.811511993408203

Token 910: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.493430894101039e-05
    2. ' b' → logprob: -9.500075340270996
    3. '_b' → logprob: -21.37507438659668
    4. 'bb' → logprob: -22.00007438659668
    5. '	b' → logprob: -22.12507438659668
    6. '>b' → logprob: -22.25007438659668
    7. '_' → logprob: -22.25007438659668
    8. ')b' → logprob: -23.12507438659668
    9. ',b' → logprob: -23.62507438659668
    10. ' ' → logprob: -23.62507438659668

Token 911: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693041563034058
    2. ' =' → logprob: -2.1269304752349854
    3. '=line' → logprob: -14.001930236816406
    4. '=input' → logprob: -14.501930236816406
    5. '=int' → logprob: -15.251930236816406
    6. ',' → logprob: -15.751930236816406
    7. ')=' → logprob: -15.876930236816406
    8. '=
' → logprob: -15.876930236816406
    9. '<|end|>' → logprob: -16.251930236816406
    10. ')' → logprob: -16.251930236816406

Token 912: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0380416102707386
    2. ' map' → logprob: -3.288041591644287
    3. '	map' → logprob: -16.913042068481445
    4. 'm' → logprob: -17.413042068481445
    5. 'ma' → logprob: -19.663042068481445
    6. '_map' → logprob: -21.038042068481445
    7. ' ' → logprob: -21.038042068481445
    8. '    ' → logprob: -21.288042068481445
    9. '   ' → logprob: -21.663042068481445
    10. '(map' → logprob: -21.663042068481445

Token 913: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000260382192209363
    2. 'int' → logprob: -8.500260353088379
    3. '(map' → logprob: -10.250260353088379
    4. 'map' → logprob: -11.875260353088379
    5. '[int' → logprob: -12.000260353088379
    6. '(' → logprob: -13.125260353088379
    7. '(lambda' → logprob: -13.625260353088379
    8. '(str' → logprob: -13.750260353088379
    9. '(list' → logprob: -13.875260353088379
    10. '=int' → logprob: -13.875260353088379

Token 914: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.21897576749324799
    2. 'int' → logprob: -2.718975782394409
    3. ',' → logprob: -2.843975782394409
    4. 'input' → logprob: -3.468975782394409
    5. ',int' → logprob: -3.968975782394409
    6. '(input' → logprob: -4.71897554397583
    7. '(),' → logprob: -4.96897554397583
    8. ',input' → logprob: -5.34397554397583
    9. '=int' → logprob: -7.46897554397583
    10. ')' → logprob: -7.84397554397583

Token 915: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00030686063109897077
    2. ' input' → logprob: -8.250307083129883
    3. 'map' → logprob: -10.000307083129883
    4. ' map' → logprob: -16.250307083129883
    5. 'int' → logprob: -17.875307083129883
    6. 'list' → logprob: -19.125307083129883
    7. '(input' → logprob: -19.750307083129883
    8. 'sys' → logprob: -20.625307083129883
    9. '=input' → logprob: -21.250307083129883
    10. '[input' → logprob: -21.250307083129883

Token 916: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.3120038501219824e-05
    2. '()' → logprob: -9.875053405761719
    3. '.split' → logprob: -14.500053405761719
    4. '()
' → logprob: -14.750053405761719
    5. '(' → logprob: -15.875053405761719
    6. ')' → logprob: -16.00005340576172
    7. '())' → logprob: -16.25005340576172
    8. '.' → logprob: -16.37505340576172
    9. ' ().' → logprob: -16.50005340576172
    10. '.readline' → logprob: -17.25005340576172

Token 917: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.060365608893335e-05
    2. 'strip' → logprob: -10.125041007995605
    3. ' split' → logprob: -16.25004005432129
    4. 'rstrip' → logprob: -16.25004005432129
    5. 'read' → logprob: -16.75004005432129
    6. ')' → logprob: -16.87504005432129
    7. '(split' → logprob: -17.00004005432129
    8. '.split' → logprob: -17.00004005432129
    9. '().' → logprob: -17.87504005432129
    10. 'spl' → logprob: -18.37504005432129

Token 918: '())
' (ID: 4574)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.7135937213897705
    2. '())
' → logprob: -0.7135937213897705
    3. ')' → logprob: -4.213593482971191
    4. '()' → logprob: -5.963593482971191
    5. '())' → logprob: -6.338593482971191
    6. '()
' → logprob: -6.963593482971191
    7. ')
' → logprob: -9.338593482971191
    8. '())
' → logprob: -10.088593482971191
    9. '(' → logprob: -11.463593482971191
    10. ')`
' → logprob: -12.338593482971191

Token 919: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.633853652398102e-05
    2. 'graph' → logprob: -10.875056266784668
    3. '       ' → logprob: -11.125056266784668
    4. '               ' → logprob: -11.500056266784668
    5. '   ' → logprob: -12.500056266784668
    6. '		' → logprob: -13.625056266784668
    7. '          ' → logprob: -13.625056266784668
    8. ' graph' → logprob: -13.875056266784668
    9. '<|end|>' → logprob: -13.875056266784668
    10. '(graph' → logprob: -14.125056266784668

Token 920: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.012858527712523937
    2. ' graph' → logprob: -4.3878583908081055
    3. '           ' → logprob: -8.012858390808105
    4. '	graph' → logprob: -11.262858390808105
    5. '(graph' → logprob: -13.137858390808105
    6. '       ' → logprob: -13.137858390808105
    7. '   ' → logprob: -15.262858390808105
    8. '.graph' → logprob: -15.512858390808105
    9. '               ' → logprob: -16.012859344482422
    10. '_graph' → logprob: -16.012859344482422

Token 921: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.1875571544806007e-05
    2. '.' → logprob: -11.500011444091797
    3. '.ad' → logprob: -14.250011444091797
    4. '   ' → logprob: -14.375011444091797
    5. ').' → logprob: -15.375011444091797
    6. ' .' → logprob: -16.125011444091797
    7. '.
' → logprob: -17.125011444091797
    8. 'add' → logprob: -17.250011444091797
    9. '].' → logprob: -17.750011444091797
    10. '>.' → logprob: -18.125011444091797

Token 922: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.014227439649403095
    2. '(a' → logprob: -4.264227390289307
    3. 'edge' → logprob: -10.139227867126465
    4. '(b' → logprob: -11.514227867126465
    5. 'Edge' → logprob: -11.764227867126465
    6. '(' → logprob: -13.139227867126465
    7. '_EDGE' → logprob: -14.014227867126465
    8. '(_' → logprob: -14.389227867126465
    9. '_' → logprob: -14.639227867126465
    10. '_ed' → logprob: -14.889227867126465

Token 923: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.000000953674316
    3. 'a' → logprob: -15.125000953674316
    4. '(
' → logprob: -17.625001907348633
    5. '(ab' → logprob: -21.375001907348633
    6. '(b' → logprob: -21.750001907348633
    7. '((' → logprob: -22.375001907348633
    8. '(A' → logprob: -22.500001907348633
    9. '(i' → logprob: -22.625001907348633
    10. ' (' → logprob: -23.125001907348633

Token 924: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019532525911927223
    2. ',b' → logprob: -6.251953125
    3. ' ,' → logprob: -10.876953125
    4. 'b' → logprob: -12.501953125
    5. ',
' → logprob: -13.376953125
    6. ',a' → logprob: -15.751953125
    7. '),' → logprob: -16.501953125
    8. ')' → logprob: -17.126953125
    9. '(),' → logprob: -17.126953125
    10. '   ' → logprob: -17.626953125

Token 925: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. ')b' → logprob: -18.626928329467773
    4. '	b' → logprob: -20.126928329467773
    5. '   ' → logprob: -21.751928329467773
    6. '>b' → logprob: -22.501928329467773
    7. ' ' → logprob: -22.876928329467773
    8. '       ' → logprob: -23.001928329467773
    9. ' б' → logprob: -23.376928329467773
    10. '    ' → logprob: -23.376928329467773

Token 926: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003373694489710033
    2. ')
' → logprob: -8.000337600708008
    3. '       ' → logprob: -13.625337600708008
    4. ')return' → logprob: -15.750337600708008
    5. ' )' → logprob: -15.875337600708008
    6. '<|end|>' → logprob: -15.875337600708008
    7. ')

' → logprob: -16.125337600708008
    8. ')
' → logprob: -16.375337600708008
    9. '
' → logprob: -17.000337600708008
    10. '),' → logprob: -17.250337600708008

Token 927: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12948207557201385
    2. 'order' → logprob: -2.7544820308685303
    3. 'change' → logprob: -4.004482269287109
    4. 'eval' → logprob: -4.379482269287109
    5. ' order' → logprob: -5.504482269287109
    6. ' change' → logprob: -5.754482269287109
    7. 'initial' → logprob: -5.754482269287109
    8. 'next' → logprob: -6.129482269287109
    9. ' eval' → logprob: -6.504482269287109
    10. ' M' → logprob: -6.629482269287109

Token 928: ' initial' (ID: 4871)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.7459123730659485
    2. 'initial' (adapté à ' initial') → logprob: -1.3709123134613037
    3. 'order' → logprob: -1.6209123134613037
    4. 'change' → logprob: -3.7459123134613037
    5. 'eval' → logprob: -3.8709123134613037
    6. 'C' → logprob: -4.995912551879883
    7. 'Q' → logprob: -5.245912551879883
    8. 'changes' → logprob: -5.370912551879883
    9. 'm' → logprob: -5.745912551879883
    10. 'init' → logprob: -6.245912551879883

Token 929: '_order' (ID: 17446)
  Prédit: '_eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eval' → logprob: -7.624555291840807e-05
    2. '_e' → logprob: -10.125076293945312
    3. 'eval' → logprob: -11.000076293945312
    4. '_order' → logprob: -11.125076293945312
    5. 'Eval' → logprob: -12.625076293945312
    6. '=' → logprob: -14.125076293945312
    7. '_ev' → logprob: -15.875076293945312
    8. 'Evaluation' → logprob: -16.125076293945312
    9. '=_' → logprob: -16.375076293945312
    10. ' =' → logprob: -16.375076293945312

Token 930: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.201456218957901
    2. '=' → logprob: -1.7014561891555786
    3. ',' → logprob: -10.951456069946289
    4. '_order' → logprob: -11.701456069946289
    5. '_line' → logprob: -12.201456069946289
    6. '_indices' → logprob: -13.076456069946289
    7. '_idx' → logprob: -13.326456069946289
    8. '   ' → logprob: -13.701456069946289
    9. ':' → logprob: -13.826456069946289
    10. '_' → logprob: -13.951456069946289

Token 931: ' list' (ID: 1562)
  Prédit: 'Evaluation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Evaluation' → logprob: -0.0015247372211888433
    2. ' Evaluation' → logprob: -6.751524925231934
    3. 'list' → logprob: -8.001524925231934
    4. 'List' → logprob: -11.626524925231934
    5. 'input' → logprob: -12.626524925231934
    6. ' list' → logprob: -12.751524925231934
    7. 'Input' → logprob: -12.876524925231934
    8. 'tuple' → logprob: -14.876524925231934
    9. 'eval' → logprob: -15.001524925231934
    10. '  ' → logprob: -15.376524925231934

Token 932: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0005666146171279252
    2. 'map' → logprob: -7.500566482543945
    3. '(' → logprob: -11.625566482543945
    4. '(range' → logprob: -12.375566482543945
    5. '(int' → logprob: -16.125566482543945
    6. ' map' → logprob: -16.250566482543945
    7. '.map' → logprob: -16.375566482543945
    8. '()' → logprob: -17.125566482543945
    9. '	map' → logprob: -17.250566482543945
    10. '1' → logprob: -17.500566482543945

Token 933: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.048696376383304596
    2. 'int' → logprob: -3.048696279525757
    3. '[int' → logprob: -9.423696517944336
    4. ',int' → logprob: -11.673696517944336
    5. '=int' → logprob: -11.923696517944336
    6. '(' → logprob: -11.923696517944336
    7. ')' → logprob: -12.923696517944336
    8. '<int' → logprob: -13.548696517944336
    9. ']int' → logprob: -13.923696517944336
    10. ' int' → logprob: -14.798696517944336

Token 934: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07991084456443787
    2. ',input' → logprob: -2.5799107551574707
    3. ',' → logprob: -7.079910755157471
    4. 'input' → logprob: -9.704911231994629
    5. '=input' → logprob: -10.079911231994629
    6. '(' → logprob: -10.079911231994629
    7. ' (' → logprob: -10.704911231994629
    8. '[input' → logprob: -12.204911231994629
    9. ' input' → logprob: -13.204911231994629
    10. ')' → logprob: -13.454911231994629

Token 935: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001584850688232109
    2. ' input' → logprob: -8.750158309936523
    3. '[input' → logprob: -18.625158309936523
    4. '(input' → logprob: -18.875158309936523
    5. ',input' → logprob: -18.875158309936523
    6. '<input' → logprob: -19.375158309936523
    7. ' ' → logprob: -19.500158309936523
    8. '=input' → logprob: -20.625158309936523
    9. '	input' → logprob: -20.750158309936523
    10. '   ' → logprob: -21.750158309936523

Token 936: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.2378600735682994e-05
    2. '()' → logprob: -10.375032424926758
    3. '()))' → logprob: -14.250032424926758
    4. '()[' → logprob: -15.375032424926758
    5. ' ().' → logprob: -15.625032424926758
    6. '())' → logprob: -17.375032424926758
    7. '()));' → logprob: -17.750032424926758
    8. '().__' → logprob: -19.500032424926758
    9. '().'' → logprob: -20.000032424926758
    10. '.split' → logprob: -20.250032424926758

Token 937: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.624555291840807e-05
    2. 'strip' → logprob: -9.500076293945312
    3. ' split' → logprob: -13.750076293945312
    4. '(split' → logprob: -15.375076293945312
    5. 'rstrip' → logprob: -17.625076293945312
    6. '.split' → logprob: -17.750076293945312
    7. ')' → logprob: -18.250076293945312
    8. 'read' → logprob: -18.750076293945312
    9. 'spl' → logprob: -19.000076293945312
    10. 'plit' → logprob: -19.625076293945312

Token 938: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.015505515038967133
    2. '()))' → logprob: -4.265505313873291
    3. ')' → logprob: -7.640505313873291
    4. '()' → logprob: -7.640505313873291
    5. '())
' → logprob: -8.26550579071045
    6. '))' → logprob: -9.26550579071045
    7. '()))
' → logprob: -10.76550579071045
    8. '(' → logprob: -13.01550579071045
    9. '()));' → logprob: -13.64050579071045
    10. '       ' → logprob: -13.76550579071045

Token 939: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00112426420673728
    2. 'return' → logprob: -7.001124382019043
    3. ' return' → logprob: -8.751124382019043
    4. '
' → logprob: -10.126124382019043
    5. '        
' → logprob: -11.876124382019043
    6. '   ' → logprob: -13.501124382019043
    7. '```' → logprob: -13.876124382019043
    8. '        ' → logprob: -14.001124382019043
    9. 'order' → logprob: -14.376124382019043
    10. '	' → logprob: -14.751124382019043

Token 940: ' initial' (ID: 4871)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.06635787338018417
    2. 'initial' (adapté à ' initial') → logprob: -3.4413578510284424
    3. 'eval' → logprob: -4.1913580894470215
    4. 'change' → logprob: -4.9413580894470215
    5. 'return' → logprob: -4.9413580894470215
    6. 'changes' → logprob: -6.0663580894470215
    7. '   ' → logprob: -8.941357612609863
    8. '       ' → logprob: -9.191357612609863
    9. ' order' → logprob: -9.441357612609863
    10. 'evaluation' → logprob: -10.316357612609863

Token 941: '_eval' (ID: 60420)
  Prédit: '_eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eval' → logprob: -0.38780516386032104
    2. '_order' → logprob: -1.1378052234649658
    3. 'eval' → logprob: -7.637804985046387
    4. 'order' → logprob: -8.387804985046387
    5. ' =' → logprob: -9.637804985046387
    6. 'return' → logprob: -10.262804985046387
    7. '_e' → logprob: -10.262804985046387
    8. 'Order' → logprob: -10.637804985046387
    9. 'Eval' → logprob: -10.762804985046387
    10. '=' → logprob: -11.137804985046387

Token 942: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.0001664717128733173
    2. 'Order' → logprob: -8.750166893005371
    3. '_' → logprob: -12.125166893005371
    4. ' =' → logprob: -14.125166893005371
    5. 'order' → logprob: -14.250166893005371
    6. '=' → logprob: -14.875166893005371
    7. '_Order' → logprob: -14.875166893005371
    8. '=_' → logprob: -15.250166893005371
    9. '_ORDER' → logprob: -16.625165939331055
    10. ' _' → logprob: -16.750165939331055

Token 943: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. '=
' → logprob: -16.828889846801758
    4. '=

' → logprob: -17.703889846801758
    5. ' ' → logprob: -19.578889846801758
    6. '＝' → logprob: -19.703889846801758
    7. ' =
' → logprob: -19.703889846801758
    8. '=None' → logprob: -19.828889846801758
    9. '=}' → logprob: -20.078889846801758
    10. '=create' → logprob: -20.328889846801758

Token 944: ' Evaluation' (ID: 58680)
  Prédit: 'Evaluation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Evaluation' → logprob: -0.005233882926404476
    2. ' Evaluation' → logprob: -5.2552337646484375
    3. 'evaluation' → logprob: -17.880233764648438
    4. 'Evalu' → logprob: -18.255233764648438
    5. '   ' → logprob: -19.130233764648438
    6. ' evaluation' → logprob: -19.380233764648438
    7. 'Evaluator' → logprob: -19.630233764648438
    8. ' ' → logprob: -19.755233764648438
    9. 'Eval' → logprob: -19.755233764648438
    10. 'Assessment' → logprob: -20.755233764648438

Token 945: 'Order' (ID: 4861)
  Prédit: 'Order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Order' → logprob: -1.9361264946837764e-07
    2. 'order' → logprob: -16.0
    3. '_order' → logprob: -17.375
    4. 'Or' → logprob: -18.25
    5. '	Order' → logprob: -18.375
    6. 'Evaluation' → logprob: -18.75
    7. ' Order' → logprob: -18.875
    8. '_Order' → logprob: -19.125
    9. 'ORDER' → logprob: -19.375
    10. '_ORDER' → logprob: -19.5

Token 946: '(initial' (ID: 63456)
  Prédit: '(initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -3.2855416066013277e-05
    2. 'initial' → logprob: -10.375032424926758
    3. '([' → logprob: -13.875032424926758
    4. '(' → logprob: -14.375032424926758
    5. '((' → logprob: -16.625032424926758
    6. ' (' → logprob: -16.875032424926758
    7. '(
' → logprob: -17.500032424926758
    8. '(list' → logprob: -18.000032424926758
    9. ' initial' → logprob: -18.375032424926758
    10. '(existing' → logprob: -18.750032424926758

Token 947: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -5.776898251497187e-05
    2. 'order' → logprob: -9.8750581741333
    3. '(initial' → logprob: -12.8750581741333
    4. 'initial' → logprob: -13.3750581741333
    5. 'Order' → logprob: -13.6250581741333
    6. '=' → logprob: -15.0000581741333
    7. ')' → logprob: -15.3750581741333
    8. '_initial' → logprob: -15.5000581741333
    9. '_' → logprob: -16.375057220458984
    10. '(order' → logprob: -17.500057220458984

Token 948: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008644147892482579
    2. '       ' → logprob: -7.750864505767822
    3. ')
' → logprob: -7.750864505767822
    4. '<|end|>' → logprob: -14.000864028930664
    5. '
' → logprob: -14.625864028930664
    6. '   ' → logprob: -14.875864028930664
    7. ' )' → logprob: -15.000864028930664
    8. '),' → logprob: -15.250864028930664
    9. ')return' → logprob: -15.250864028930664
    10. ',' → logprob: -15.375864028930664

Token 949: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5628611445426941
    2. 'M' → logprob: -1.1878612041473389
    3. 'change' → logprob: -2.687861204147339
    4. 'order' → logprob: -3.187861204147339
    5. 'C' → logprob: -5.56286096572876
    6. 'L' → logprob: -5.68786096572876
    7. 'Q' → logprob: -5.93786096572876
    8. 'num' → logprob: -6.43786096572876
    9. 'm' → logprob: -6.93786096572876
    10. ' M' → logprob: -7.68786096572876

Token 950: ' R' (ID: 460)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0758565366268158
    2. 'Q' → logprob: -3.0758564472198486
    3. 'order' → logprob: -4.700856685638428
    4. 'change' → logprob: -4.825856685638428
    5. 'C' → logprob: -5.075856685638428
    6. 'm' → logprob: -7.075856685638428
    7. '   ' → logprob: -7.450856685638428
    8. 'O' → logprob: -7.825856685638428
    9. 'L' → logprob: -7.950856685638428
    10. ' M' → logprob: -8.32585620880127

Token 951: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693152129650116
    2. ' =' → logprob: -0.693152129650116
    3. '=int' → logprob: -13.06815242767334
    4. ',' → logprob: -13.31815242767334
    5. '   ' → logprob: -14.56815242767334
    6. '=
' → logprob: -15.81815242767334
    7. ' ' → logprob: -15.94315242767334
    8. ':' → logprob: -16.943151473999023
    9. ' =
' → logprob: -16.943151473999023
    10. '＝' → logprob: -17.068151473999023

Token 952: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03804149478673935
    2. ' int' → logprob: -3.288041591644287
    3. '<int' → logprob: -20.163042068481445
    4. '(int' → logprob: -20.413042068481445
    5. '=int' → logprob: -20.538042068481445
    6. '	int' → logprob: -20.788042068481445
    7. '[int' → logprob: -20.788042068481445
    8. 'in' → logprob: -21.913042068481445
    9. '0' → logprob: -22.288042068481445
    10. ':int' → logprob: -22.663042068481445

Token 953: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.4974866644479334e-05
    2. 'input' → logprob: -11.250015258789062
    3. '(' → logprob: -13.250015258789062
    4. '(
' → logprob: -16.125015258789062
    5. '=input' → logprob: -16.875015258789062
    6. ' (' → logprob: -17.250015258789062
    7. '()' → logprob: -18.000015258789062
    8. ',input' → logprob: -19.250015258789062
    9. ' input' → logprob: -19.375015258789062
    10. '<input' → logprob: -21.000015258789062

Token 954: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1437311172485352
    2. '())
' → logprob: -1.2687311172485352
    3. ')
' → logprob: -1.5187311172485352
    4. '()' → logprob: -2.268731117248535
    5. '())' → logprob: -2.643731117248535
    6. '()
' → logprob: -5.018731117248535
    7. '())
' → logprob: -11.643731117248535
    8. '(' → logprob: -11.893731117248535
    9. '(
' → logprob: -12.393731117248535
    10. ')
' → logprob: -12.768731117248535

Token 955: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41457489132881165
    2. 'order' → logprob: -1.1645748615264893
    3. ' order' → logprob: -4.664575099945068
    4. 'change' → logprob: -5.164575099945068
    5. '	order' → logprob: -5.414575099945068
    6. 'changes' → logprob: -6.039575099945068
    7. '	' → logprob: -6.289575099945068
    8. ' changes' → logprob: -6.664575099945068
    9. '
' → logprob: -7.039575099945068
    10. ' change' → logprob: -8.03957462310791

Token 956: ' changes' (ID: 6629)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.022032620385289192
    2. '       ' → logprob: -4.522032737731934
    3. 'change' → logprob: -5.397032737731934
    4. 'changes' (adapté à ' changes') → logprob: -5.397032737731934
    5. ' order' → logprob: -6.397032737731934
    6. ' changes' → logprob: -8.897032737731934
    7. ' change' → logprob: -10.772032737731934
    8. 'orders' → logprob: -11.522032737731934
    9. '   ' → logprob: -11.647032737731934
    10. '	order' → logprob: -11.772032737731934

Token 957: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804401680827141
    2. '=' → logprob: -3.288043975830078
    3. '=[]' → logprob: -13.288043975830078
    4. '=[]
' → logprob: -14.788043975830078
    5. ' =[' → logprob: -15.788043975830078
    6. ':' → logprob: -16.038043975830078
    7. '   ' → logprob: -16.788043975830078
    8. ' =
' → logprob: -17.038043975830078
    9. '＝' → logprob: -17.663043975830078
    10. ' ' → logprob: -17.788043975830078

Token 958: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.16497378051280975
    2. '[]
' → logprob: -2.164973735809326
    3. ' []' → logprob: -3.414973735809326
    4. ' []
' → logprob: -5.414973735809326
    5. '[]

' → logprob: -12.789974212646484
    6. '[' → logprob: -13.664974212646484
    7. ' []
' → logprob: -16.164974212646484
    8. '[
' → logprob: -16.289974212646484
    9. '[])
' → logprob: -16.414974212646484
    10. '[])' → logprob: -16.664974212646484

Token 959: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7209204435348511
    2. 'for' → logprob: -1.345920443534851
    3. ' for' → logprob: -1.470920443534851
    4. '	for' → logprob: -4.220920562744141
    5. '<|end|>' → logprob: -5.345920562744141
    6. '	' → logprob: -6.595920562744141
    7. '	   ' → logprob: -6.720920562744141
    8. '   ' → logprob: -6.845920562744141
    9. '	       ' → logprob: -9.09592056274414
    10. '<|end|>' → logprob: -9.34592056274414

Token 960: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0023789771366864443
    2. ' for' → logprob: -6.252378940582275
    3. '       ' → logprob: -7.752378940582275
    4. '	for' → logprob: -10.877379417419434
    5. '	' → logprob: -13.877379417419434
    6. '   ' → logprob: -14.502379417419434
    7. '
' → logprob: -17.002378463745117
    8. '	   ' → logprob: -17.627378463745117
    9. '_for' → logprob: -17.752378463745117
    10. '        
' → logprob: -19.127378463745117

Token 961: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -7.660315895918757e-05
    2. ' _' → logprob: -9.500076293945312
    3. '_
' → logprob: -13.375076293945312
    4. '_range' → logprob: -16.875076293945312
    5. '_i' → logprob: -17.125076293945312
    6. '_r' → logprob: -18.125076293945312
    7. '_
' → logprob: -18.250076293945312
    8. '   ' → logprob: -18.375076293945312
    9. '_

' → logprob: -18.500076293945312
    10. '_=' → logprob: -18.875076293945312

Token 962: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09508460760116577
    2. 'in' → logprob: -3.0950846672058105
    3. ' in' → logprob: -3.0950846672058105
    4. 'i' → logprob: -8.970084190368652
    5. 'range' → logprob: -10.970084190368652
    6. ' _' → logprob: -12.595084190368652
    7. '_range' → logprob: -12.720084190368652
    8. ' ' → logprob: -12.970084190368652
    9. '
' → logprob: -13.470084190368652
    10. ' range' → logprob: -13.720084190368652

Token 963: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0016455493168905377
    2. ' range' → logprob: -6.501645565032959
    3. '_' → logprob: -8.8766450881958
    4. 'in' → logprob: -13.5016450881958
    5. '_range' → logprob: -13.5016450881958
    6. ' in' → logprob: -15.2516450881958
    7. '(range' → logprob: -15.8766450881958
    8. 'R' → logprob: -16.626646041870117
    9. '	range' → logprob: -16.876646041870117
    10. 'r' → logprob: -16.876646041870117

Token 964: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.00020413640595506877
    2. 'R' → logprob: -8.500204086303711
    3. '(' → logprob: -14.750204086303711
    4. '(int' → logprob: -17.00020408630371
    5. ' R' → logprob: -17.25020408630371
    6. ' (' → logprob: -17.50020408630371
    7. '   ' → logprob: -17.62520408630371
    8. '(r' → logprob: -18.37520408630371
    9. '(
' → logprob: -18.87520408630371
    10. '	R' → logprob: -18.87520408630371

Token 965: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030429601669311523
    2. '):
' → logprob: -3.9054296016693115
    3. '       ' → logprob: -6.155429840087891
    4. '):' → logprob: -6.530429840087891
    5. '():
' → logprob: -6.655429840087891
    6. ' ,' → logprob: -6.780429840087891
    7. ':' → logprob: -7.280429840087891
    8. '           ' → logprob: -7.405429840087891
    9. ',int' → logprob: -7.530429840087891
    10. ':
' → logprob: -7.780429840087891

Token 966: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01260889321565628
    2. '       ' → logprob: -5.012609004974365
    3. 'line' → logprob: -6.387609004974365
    4. ' line' → logprob: -6.762609004974365
    5. '	       ' → logprob: -6.887609004974365
    6. '   ' → logprob: -7.262609004974365
    7. 't' → logprob: -8.262608528137207
    8. '(line' → logprob: -8.637608528137207
    9. '	   ' → logprob: -9.012608528137207
    10. '```' → logprob: -9.012608528137207

Token 967: ' data' (ID: 1238)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.5201412439346313
    2. 't' → logprob: -1.6451412439346313
    3. 'x' → logprob: -1.7701412439346313
    4. 'c' → logprob: -1.8951412439346313
    5. 'cnt' → logprob: -2.145141124725342
    6. 'idx' → logprob: -3.020141124725342
    7. 'm' → logprob: -3.645141124725342
    8. 'pos' → logprob: -3.895141124725342
    9. 'time' → logprob: -4.520141124725342
    10. 'step' → logprob: -4.770141124725342

Token 968: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2017914205789566
    2. ' =' → logprob: -1.7017914056777954
    3. '=line' → logprob: -8.701791763305664
    4. '_line' → logprob: -9.451791763305664
    5. '[' → logprob: -10.701791763305664
    6. 'line' → logprob: -10.951791763305664
    7. '   ' → logprob: -11.326791763305664
    8. '(' → logprob: -11.326791763305664
    9. '=
' → logprob: -11.951791763305664
    10. ' ' → logprob: -11.951791763305664

Token 969: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.07963092625141144
    2. 'input' → logprob: -2.5796308517456055
    3. 'tuple' → logprob: -7.8296308517456055
    4. ' list' → logprob: -8.079630851745605
    5. ' input' → logprob: -10.454630851745605
    6. ' tuple' → logprob: -13.204630851745605
    7. 'line' → logprob: -14.204630851745605
    8. 'int' → logprob: -14.454630851745605
    9. '=list' → logprob: -14.829630851745605
    10. '   ' → logprob: -15.704630851745605

Token 970: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -9.014684110297821e-06
    2. 'map' → logprob: -11.750008583068848
    3. '(' → logprob: -13.875008583068848
    4. '(int' → logprob: -16.500009536743164
    5. '(
' → logprob: -18.125009536743164
    6. '(input' → logprob: -18.250009536743164
    7. ' map' → logprob: -18.500009536743164
    8. '	map' → logprob: -18.500009536743164
    9. '.map' → logprob: -19.500009536743164
    10. ',map' → logprob: -19.750009536743164

Token 971: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5760123133659363
    2. '(int' → logprob: -0.8260123133659363
    3. '[int' → logprob: -9.82601261138916
    4. ',int' → logprob: -11.95101261138916
    5. 'input' → logprob: -12.45101261138916
    6. '=int' → logprob: -12.70101261138916
    7. '(' → logprob: -13.57601261138916
    8. ']int' → logprob: -13.57601261138916
    9. '<int' → logprob: -13.70101261138916
    10. '   ' → logprob: -14.95101261138916

Token 972: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006701396778225899
    2. ',input' → logprob: -5.506701469421387
    3. 'input' → logprob: -6.006701469421387
    4. '(int' → logprob: -9.381701469421387
    5. ',' → logprob: -10.506701469421387
    6. '(' → logprob: -10.881701469421387
    7. '=input' → logprob: -11.131701469421387
    8. '(
' → logprob: -12.756701469421387
    9. ' input' → logprob: -12.881701469421387
    10. '(),' → logprob: -13.881701469421387

Token 973: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0206720617134124e-05
    2. ' input' → logprob: -11.50001049041748
    3. '(input' → logprob: -18.750009536743164
    4. '<input' → logprob: -20.125009536743164
    5. ',input' → logprob: -20.625009536743164
    6. '=input' → logprob: -20.750009536743164
    7. '
' → logprob: -21.375009536743164
    8. 'int' → logprob: -21.875009536743164
    9. '           ' → logprob: -22.125009536743164
    10. '   ' → logprob: -22.125009536743164

Token 974: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008473869529552758
    2. '()' → logprob: -7.250847339630127
    3. '()))' → logprob: -9.500847816467285
    4. '())' → logprob: -10.500847816467285
    5. '()
' → logprob: -11.250847816467285
    6. '()[' → logprob: -11.375847816467285
    7. '()));' → logprob: -12.625847816467285
    8. '());' → logprob: -13.125847816467285
    9. '()))
' → logprob: -13.500847816467285
    10. '().
' → logprob: -14.250847816467285

Token 975: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00017720005416776985
    2. 'strip' → logprob: -9.000177383422852
    3. 'read' → logprob: -10.500177383422852
    4. ')' → logprob: -12.000177383422852
    5. '(split' → logprob: -12.375177383422852
    6. 'rstrip' → logprob: -12.375177383422852
    7. 'input' → logprob: -12.500177383422852
    8. 'parse' → logprob: -13.500177383422852
    9. ' split' → logprob: -13.625177383422852
    10. 'decode' → logprob: -13.750177383422852

Token 976: '()))
' (ID: 24521)
  Prédit: '())
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.21373465657234192
    2. '()))
' → logprob: -2.0887346267700195
    3. '())' → logprob: -3.0887346267700195
    4. '()))' → logprob: -4.4637346267700195
    5. '()' → logprob: -4.7137346267700195
    6. '))
' → logprob: -6.7137346267700195
    7. '()
' → logprob: -7.9637346267700195
    8. ')' → logprob: -8.33873462677002
    9. ')
' → logprob: -8.33873462677002
    10. '))' → logprob: -8.83873462677002

Token 977: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17310646176338196
    2. '       ' → logprob: -1.9231064319610596
    3. ' if' → logprob: -6.173106670379639
    4. ',' → logprob: -6.298106670379639
    5. '[' → logprob: -6.298106670379639
    6. '(' → logprob: -6.798106670379639
    7. 'if' → logprob: -7.173106670379639
    8. 'time' → logprob: -7.423106670379639
    9. '```' → logprob: -7.798106670379639
    10. '(n' → logprob: -8.04810619354248

Token 978: ' m' (ID: 284)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5079578161239624
    2. 'm' (adapté à ' m') → logprob: -1.8829578161239624
    3. 'idx' → logprob: -2.757957935333252
    4. 'x' → logprob: -3.007957935333252
    5. 'change' → logprob: -3.507957935333252
    6. 'cnt' → logprob: -3.757957935333252
    7. ' count' → logprob: -4.757957935333252
    8. 'point' → logprob: -4.882957935333252
    9. 'pos' → logprob: -5.007957935333252
    10. '       ' → logprob: -5.007957935333252

Token 979: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.719844400882721
    2. ' =' → logprob: -0.969844400882721
    3. ' ,' → logprob: -2.469844341278076
    4. '=' → logprob: -3.094844341278076
    5. '_idx' → logprob: -6.344844341278076
    6. '_index' → logprob: -8.094844818115234
    7. '   ' → logprob: -8.219844818115234
    8. '[' → logprob: -8.344844818115234
    9. '_,' → logprob: -8.469844818115234
    10. '.append' → logprob: -8.469844818115234

Token 980: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.0009115827269852161
    2. ' data' → logprob: -7.000911712646484
    3. '   ' → logprob: -17.375911712646484
    4. '           ' → logprob: -18.000911712646484
    5. '(data' → logprob: -18.000911712646484
    6. '	data' → logprob: -18.500911712646484
    7. 'len' → logprob: -18.750911712646484
    8. 'int' → logprob: -19.250911712646484
    9. 'dat' → logprob: -19.875911712646484
    10. '0' → logprob: -20.000911712646484

Token 981: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.455048449221067e-05
    2. '[m' → logprob: -10.750054359436035
    3. '0' → logprob: -11.250054359436035
    4. '[len' → logprob: -12.000054359436035
    5. '[data' → logprob: -12.250054359436035
    6. '   ' → logprob: -13.000054359436035
    7. ' [' → logprob: -13.000054359436035
    8. '[
' → logprob: -13.125054359436035
    9. '.pop' → logprob: -14.250054359436035
    10. '[_' → logprob: -14.375054359436035

Token 982: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.796184723294573e-06
    2. '1' → logprob: -12.500005722045898
    3. '[' → logprob: -13.250005722045898
    4. ' ' → logprob: -16.1250057220459
    5. '
' → logprob: -16.6250057220459
    6. '   ' → logprob: -17.7500057220459
    7. '2' → logprob: -18.5000057220459
    8. '#' → logprob: -18.5000057220459
    9. '(' → logprob: -18.8750057220459
    10. '           ' → logprob: -19.3125057220459

Token 983: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7689998149871826
    2. ',' → logprob: -1.0189998149871826
    3. ')
' → logprob: -1.7689998149871826
    4. ',
' → logprob: -6.019000053405762
    5. '           ' → logprob: -6.644000053405762
    6. ']' → logprob: -8.144000053405762
    7. ',)
' → logprob: -8.269000053405762
    8. ',)' → logprob: -8.519000053405762
    9. '       ' → logprob: -8.894000053405762
    10. '),' → logprob: -9.644000053405762

Token 984: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1258875131607056
    2. '           ' → logprob: -1.2508875131607056
    3. 'order' → logprob: -2.000887393951416
    4. ',' → logprob: -2.625887393951416
    5. ' new' → logprob: -2.750887393951416
    6. ' order' → logprob: -3.125887393951416
    7. 'new' → logprob: -3.750887393951416
    8. ' changes' → logprob: -4.250887393951416
    9. 'rest' → logprob: -4.500887393951416
    10. ' rest' → logprob: -4.500887393951416

Token 985: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' (adapté à ' order') → logprob: -0.07189398258924484
    2. 'new' → logprob: -2.6968939304351807
    3. 'eval' → logprob: -7.07189416885376
    4. 'seq' → logprob: -7.94689416885376
    5. 'ord' → logprob: -8.446893692016602
    6. 'change' → logprob: -8.821893692016602
    7. 'attr' → logprob: -9.321893692016602
    8. 'rest' → logprob: -9.946893692016602
    9. 'arr' → logprob: -10.071893692016602
    10. 'attrs' → logprob: -10.071893692016602

Token 986: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869296610355377
    2. '=' → logprob: -1.1369296312332153
    3. '=
' → logprob: -10.761929512023926
    4. '_tokens' → logprob: -10.761929512023926
    5. ',' → logprob: -12.261929512023926
    6. ' =
' → logprob: -12.761929512023926
    7. 's' → logprob: -13.261929512023926
    8. 'tokens' → logprob: -14.011929512023926
    9. '_indices' → logprob: -14.136929512023926
    10. '=[' → logprob: -14.261929512023926

Token 987: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3151599168777466
    2. 'Evaluation' → logprob: -1.3151599168777466
    3. ' data' → logprob: -6.440159797668457
    4. ' Evaluation' → logprob: -8.440159797668457
    5. 'Data' → logprob: -10.190159797668457
    6. 'evaluation' → logprob: -10.315159797668457
    7. 'list' → logprob: -12.065159797668457
    8. 'tuple' → logprob: -13.440159797668457
    9. 'Evaluator' → logprob: -14.065159797668457
    10. '(data' → logprob: -14.440159797668457

Token 988: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006908706855028868
    2. '=' → logprob: -7.625690937042236
    3. '1' → logprob: -8.875690460205078
    4. 'data' → logprob: -10.625690460205078
    5. ' =' → logprob: -11.500690460205078
    6. '=[' → logprob: -12.000690460205078
    7. '=data' → logprob: -12.125690460205078
    8. '[data' → logprob: -12.375690460205078
    9. ':' → logprob: -12.625690460205078
    10. '```' → logprob: -13.000690460205078

Token 989: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -13.250005722045898
    3. '```' → logprob: -14.000005722045898
    4. '2' → logprob: -14.500005722045898
    5. ':]' → logprob: -14.750005722045898
    6. ']' → logprob: -14.875005722045898
    7. 'slice' → logprob: -15.187505722045898
    8. ':]
' → logprob: -15.187505722045898
    9. ' ' → logprob: -15.375005722045898
    10. '
' → logprob: -15.500005722045898

Token 990: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0011829655850306153
    2. ':]
' → logprob: -6.876183032989502
    3. ':],' → logprob: -9.501182556152344
    4. ':' → logprob: -9.626182556152344
    5. ' :]' → logprob: -12.126182556152344
    6. ']' → logprob: -13.001182556152344
    7. ':]

' → logprob: -13.626182556152344
    8. '-' → logprob: -15.751182556152344
    9. ':].' → logprob: -15.751182556152344
    10. ',' → logprob: -16.626182556152344

Token 991: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00043519894825294614
    2. ' changes' → logprob: -8.750434875488281
    3. '		' → logprob: -9.125434875488281
    4. '	       ' → logprob: -9.875434875488281
    5. '       ' → logprob: -10.250434875488281
    6. '<|end|>' → logprob: -10.500434875488281
    7. ',' → logprob: -11.000434875488281
    8. '   ' → logprob: -11.375434875488281
    9. 'changes' → logprob: -11.500434875488281
    10. '
' → logprob: -12.625434875488281

Token 992: ' changes' (ID: 6629)
  Prédit: 'changes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changes' (adapté à ' changes') → logprob: -0.01430618017911911
    2. '           ' → logprob: -4.63930606842041
    3. 'eval' → logprob: -6.13930606842041
    4. ' changes' → logprob: -6.38930606842041
    5. 'change' → logprob: -7.88930606842041
    6. 'e' → logprob: -9.26430606842041
    7. 'evaluation' → logprob: -9.51430606842041
    8. '               ' → logprob: -10.26430606842041
    9. 'ch' → logprob: -10.63930606842041
    10. '       ' → logprob: -10.88930606842041

Token 993: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002493729814887047
    2. '.' → logprob: -6.002493858337402
    3. '           ' → logprob: -11.502493858337402
    4. '.app' → logprob: -12.502493858337402
    5. '       ' → logprob: -13.502493858337402
    6. ' .' → logprob: -13.752493858337402
    7. '.extend' → logprob: -14.752493858337402
    8. '.ap' → logprob: -15.252493858337402
    9. '.py' → logprob: -15.627493858337402
    10. 'append' → logprob: -15.627493858337402

Token 994: '((' (ID: 2054)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0019180490635335445
    2. ' (' → logprob: -6.501917839050293
    3. '(' → logprob: -8.001917839050293
    4. '((' → logprob: -9.626917839050293
    5. '(M' → logprob: -11.876917839050293
    6. '   ' → logprob: -12.626917839050293
    7. '           ' → logprob: -13.251917839050293
    8. '(
' → logprob: -13.501917839050293
    9. '(tuple' → logprob: -13.876917839050293
    10. '       ' → logprob: -15.501917839050293

Token 995: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -1.9361264946837764e-07
    2. ' m' → logprob: -16.125
    3. '(m' → logprob: -16.875
    4. ')m' → logprob: -19.5
    5. '
' → logprob: -21.625
    6. '	m' → logprob: -21.75
    7. '   ' → logprob: -22.0
    8. '[m' → logprob: -22.5
    9. '(
' → logprob: -23.25
    10. ',m' → logprob: -24.375

Token 996: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.842555426876061e-06
    2. ',
' → logprob: -12.750004768371582
    3. ' ,' → logprob: -13.750004768371582
    4. ',E' → logprob: -14.250004768371582
    5. '),' → logprob: -16.2500057220459
    6. '   ' → logprob: -16.6250057220459
    7. 'import' → logprob: -17.2500057220459
    8. '
' → logprob: -17.6250057220459
    9. ',(' → logprob: -18.0000057220459
    10. '```' → logprob: -18.0000057220459

Token 997: ' Evaluation' (ID: 58680)
  Prédit: 'Evaluation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Evaluation' → logprob: -9.615255839889869e-05
    2. ' Evaluation' → logprob: -9.250096321105957
    3. 'evaluation' → logprob: -18.87509536743164
    4. 'Evolution' → logprob: -21.00009536743164
    5. 'Evalu' → logprob: -21.62509536743164
    6. 'Evaluator' → logprob: -21.62509536743164
    7. 'Eval' → logprob: -21.62509536743164
    8. 'Assessment' → logprob: -21.87509536743164
    9. '   ' → logprob: -22.00009536743164
    10. '
' → logprob: -22.50009536743164

Token 998: 'Order' (ID: 4861)
  Prédit: 'Order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Order' → logprob: -3.650518920039758e-06
    2. 'Evaluation' → logprob: -12.625003814697266
    3. 'order' → logprob: -15.625003814697266
    4. '_order' → logprob: -16.750003814697266
    5. ' Order' → logprob: -17.500003814697266
    6. '	Order' → logprob: -18.125003814697266
    7. '_ORDER' → logprob: -18.375003814697266
    8. '[' → logprob: -18.625003814697266
    9. '_Order' → logprob: -19.000003814697266
    10. '(Order' → logprob: -19.375003814697266

Token 999: '(order' (ID: 33050)
  Prédit: '(order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(order' → logprob: -0.12711697816848755
    2. 'order' → logprob: -2.1271169185638428
    3. ' order' → logprob: -8.627117156982422
    4. ' (' → logprob: -12.252117156982422
    5. ')' → logprob: -13.002117156982422
    6. '(
' → logprob: -13.877117156982422
    7. '(' → logprob: -14.002117156982422
    8. '
' → logprob: -15.127117156982422
    9. '$order' → logprob: -15.252117156982422
    10. '	order' → logprob: -16.377117156982422

Token 1000: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0015160536859184504
    2. '))
' → logprob: -6.501515865325928
    3. ')))' → logprob: -11.376516342163086
    4. '))

' → logprob: -14.001516342163086
    5. '       ' → logprob: -14.501516342163086
    6. ')' → logprob: -14.626516342163086
    7. ' ))' → logprob: -15.751516342163086
    8. '()))' → logprob: -16.251516342163086
    9. '   ' → logprob: -16.376516342163086
    10. '))
' → logprob: -17.001516342163086

Token 1001: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004799988120794296
    2. 'return' → logprob: -5.379799842834473
    3. '   ' → logprob: -9.629799842834473
    4. '<|end|>' → logprob: -9.879799842834473
    5. ' return' → logprob: -10.754799842834473
    6. '
' → logprob: -10.879799842834473
    7. '        
' → logprob: -11.504799842834473
    8. '```' → logprob: -12.504799842834473
    9. '	return' → logprob: -13.129799842834473
    10. '           ' → logprob: -13.129799842834473

Token 1002: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02326923981308937
    2. '       ' → logprob: -3.7732691764831543
    3. ' return' → logprob: -10.898269653320312
    4. '	return' → logprob: -12.773269653320312
    5. '
' → logprob: -13.898269653320312
    6. '{return' → logprob: -14.523269653320312
    7. '        
' → logprob: -14.898269653320312
    8. '@return' → logprob: -15.273269653320312
    9. '   ' → logprob: -16.273269653320312
    10. '```' → logprob: -16.523269653320312

Token 1003: ' tasks' (ID: 13638)
  Prédit: 'tasks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tasks' → logprob: -0.0015034328680485487
    2. '(tasks' → logprob: -6.5015034675598145
    3. ' tasks' → logprob: -13.751502990722656
    4. '   ' → logprob: -17.251502990722656
    5. '(t' → logprob: -18.376502990722656
    6. '(' → logprob: -18.376502990722656
    7. '
' → logprob: -21.126502990722656
    8. '.tasks' → logprob: -21.126502990722656
    9. ' (' → logprob: -21.126502990722656
    10. '       ' → logprob: -21.626502990722656

Token 1004: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2113979209971149e-05
    2. ',
' → logprob: -12.250012397766113
    3. ' ,' → logprob: -12.625012397766113
    4. 'graph' → logprob: -12.750012397766113
    5. '(graph' → logprob: -14.500012397766113
    6. '       ' → logprob: -15.625012397766113
    7. '<|end|>' → logprob: -16.500011444091797
    8. ',None' → logprob: -17.000011444091797
    9. '`,' → logprob: -17.125011444091797
    10. '```' → logprob: -17.375011444091797

Token 1005: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0024763736873865128
    2. ' graph' → logprob: -6.002476215362549
    3. '	graph' → logprob: -15.002476692199707
    4. '
' → logprob: -15.502476692199707
    5. '(graph' → logprob: -16.37747573852539
    6. '       ' → logprob: -18.12747573852539
    7. '           ' → logprob: -19.00247573852539
    8. '   ' → logprob: -19.12747573852539
    9. 'Graph' → logprob: -19.37747573852539
    10. '```' → logprob: -19.62747573852539

Token 1006: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000297685619443655
    2. ' ,' → logprob: -8.750297546386719
    3. '       ' → logprob: -9.500297546386719
    4. '        ' → logprob: -10.750297546386719
    5. ',input' → logprob: -11.250297546386719
    6. '`,' → logprob: -11.500297546386719
    7. '_,' → logprob: -12.750297546386719
    8. ',
' → logprob: -12.875297546386719
    9. ',\
' → logprob: -13.125297546386719
    10. '   ' → logprob: -13.125297546386719

Token 1007: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.003940194379538298
    2. 'Input' → logprob: -6.253940105438232
    3. ' initial' → logprob: -6.503940105438232
    4. 'Initial' → logprob: -8.00394058227539
    5. 'input' → logprob: -10.00394058227539
    6. 'Evaluation' → logprob: -10.25394058227539
    7. '       ' → logprob: -10.50394058227539
    8. '   ' → logprob: -11.62894058227539
    9. '(initial' → logprob: -11.62894058227539
    10. '
' → logprob: -11.62894058227539

Token 1008: '_eval' (ID: 60420)
  Prédit: '_eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eval' → logprob: -0.0005124026210978627
    2. 'eval' → logprob: -7.750512599945068
    3. '_order' → logprob: -9.75051212310791
    4. 'Eval' → logprob: -11.25051212310791
    5. 'order' → logprob: -11.75051212310791
    6. '```' → logprob: -14.37551212310791
    7. '.eval' → logprob: -14.50051212310791
    8. '_e' → logprob: -14.87551212310791
    9. '(eval' → logprob: -16.125513076782227
    10. '_ev' → logprob: -16.250513076782227

Token 1009: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.0024924222379922867
    2. 'Order' → logprob: -6.002492427825928
    3. 'order' → logprob: -11.00249195098877
    4. '_ORDER' → logprob: -16.502492904663086
    5. '_' → logprob: -18.002492904663086
    6. '_Order' → logprob: -18.002492904663086
    7. '_orders' → logprob: -18.127492904663086
    8. 'ORDER' → logprob: -18.127492904663086
    9. ' Order' → logprob: -19.127492904663086
    10. ' order' → logprob: -19.127492904663086

Token 1010: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017274183919653296
    2. 'changes' → logprob: -6.50172758102417
    3. ' changes' → logprob: -8.876727104187012
    4. ' ,' → logprob: -10.501727104187012
    5. '<|end|>' → logprob: -10.876727104187012
    6. '```' → logprob: -11.251727104187012
    7. ',ch' → logprob: -11.751727104187012
    8. '_,' → logprob: -12.126727104187012
    9. '       ' → logprob: -12.876727104187012
    10. '   ' → logprob: -13.001727104187012

Token 1011: ' changes' (ID: 6629)
  Prédit: 'changes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changes' → logprob: -0.011047935113310814
    2. ' changes' → logprob: -4.511047840118408
    3. 'change' → logprob: -16.63604736328125
    4. '   ' → logprob: -18.01104736328125
    5. '       ' → logprob: -20.01104736328125
    6. 'changed' → logprob: -20.26104736328125
    7. '_changes' → logprob: -20.63604736328125
    8. '           ' → logprob: -21.01104736328125
    9. 'Changes' → logprob: -21.13604736328125
    10. ' cambios' → logprob: -21.26104736328125

Token 1012: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019574785605072975
    2. 'if' → logprob: -4.0195746421813965
    3. '<|end|>' → logprob: -6.6445746421813965
    4. '```' → logprob: -9.144575119018555
    5. '
' → logprob: -12.144575119018555
    6. 'import' → logprob: -12.394575119018555
    7. '#' → logprob: -12.644575119018555
    8. ' if' → logprob: -14.019575119018555
    9. '  
' → logprob: -14.519575119018555
    10. '<|end|>' → logprob: -14.644575119018555

Token 1013: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011048408225178719
    2. 'if' → logprob: -4.511048316955566
    3. '```' → logprob: -14.261048316955566
    4. ' def' → logprob: -17.386049270629883
    5. ' if' → logprob: -18.761049270629883
    6. 'import' → logprob: -20.011049270629883
    7. 'from' → logprob: -21.261049270629883
    8. '``' → logprob: -21.386049270629883
    9. '
' → logprob: -21.636049270629883
    10. '#' → logprob: -21.886049270629883

Token 1014: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.07890113443136215
    2. 'main' → logprob: -2.5789010524749756
    3. 'def' → logprob: -12.078901290893555
    4. '
' → logprob: -12.828901290893555
    5. '_main' → logprob: -13.328901290893555
    6. ' def' → logprob: -13.953901290893555
    7. ' run' → logprob: -14.953901290893555
    8. '	main' → logprob: -15.828901290893555
    9. '```' → logprob: -17.578901290893555
    10. ' 
' → logprob: -18.203901290893555

Token 1015: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -4.370294846012257e-05
    2. '():
' → logprob: -10.375043869018555
    3. '()' → logprob: -11.500043869018555
    4. ' ():' → logprob: -13.375043869018555
    5. '(' → logprob: -14.625043869018555
    6. '():
' → logprob: -16.250043869018555
    7. '().' → logprob: -16.250043869018555
    8. '_' → logprob: -17.250043869018555
    9. ':' → logprob: -17.375043869018555
    10. '();' → logprob: -17.625043869018555

Token 1016: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0389755442738533
    2. 'tasks' → logprob: -3.288975477218628
    3. ' tasks' → logprob: -7.288975715637207
    4. '(tasks' → logprob: -9.038975715637207
    5. '    
' → logprob: -9.788975715637207
    6. '	t' → logprob: -9.913975715637207
    7. '
' → logprob: -12.288975715637207
    8. 'def' → logprob: -12.413975715637207
    9. '\t' → logprob: -12.413975715637207
    10. '```' → logprob: -12.913975715637207

Token 1017: ' tasks' (ID: 13638)
  Prédit: 'tasks'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tasks' (adapté à ' tasks') → logprob: -0.011752143502235413
    2. '   ' → logprob: -4.511752128601074
    3. ' tasks' → logprob: -7.261752128601074
    4. '(tasks' → logprob: -13.636752128601074
    5. '       ' → logprob: -14.886752128601074
    6. '    
' → logprob: -15.886752128601074
    7. '
' → logprob: -16.26175308227539
    8. '.tasks' → logprob: -16.38675308227539
    9. 't' → logprob: -16.38675308227539
    10. '  ' → logprob: -16.76175308227539

Token 1018: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.051649149507284164
    2. ' =' → logprob: -3.5516490936279297
    3. '=' → logprob: -3.9266490936279297
    4. '<|end|>' → logprob: -7.05164909362793
    5. '   ' → logprob: -7.30164909362793
    6. '<|end|>' → logprob: -9.17664909362793
    7. ')' → logprob: -9.30164909362793
    8. '.' → logprob: -10.67664909362793
    9. ' ,' → logprob: -10.80164909362793
    10. 'def' → logprob: -10.92664909362793

Token 1019: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.06196846812963486
    2. ' graph' → logprob: -2.8119685649871826
    3. '	graph' → logprob: -14.186968803405762
    4. '   ' → logprob: -16.061967849731445
    5. '(graph' → logprob: -17.311967849731445
    6. '_graph' → logprob: -18.811967849731445
    7. 'graphs' → logprob: -18.811967849731445
    8. '    ' → logprob: -19.811967849731445
    9. 'Graph' → logprob: -20.186967849731445
    10. '.graph' → logprob: -20.311967849731445

Token 1020: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.751746746478602e-05
    2. '=' → logprob: -10.12504768371582
    3. '   ' → logprob: -12.37504768371582
    4. ',
' → logprob: -13.00004768371582
    5. ' ,' → logprob: -14.37504768371582
    6. '‌,' → logprob: -16.25004768371582
    7. ' =' → logprob: -16.37504768371582
    8. '       ' → logprob: -16.62504768371582
    9. ',\
' → logprob: -16.75004768371582
    10. '<|end|>' → logprob: -17.37504768371582

Token 1021: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.002821158617734909
    2. ' initial' → logprob: -5.87782096862793
    3. 'eval' → logprob: -11.75282096862793
    4. 'init' → logprob: -11.87782096862793
    5. ' eval' → logprob: -15.00282096862793
    6. '   ' → logprob: -15.12782096862793
    7. '	initial' → logprob: -15.37782096862793
    8. '    
' → logprob: -15.87782096862793
    9. 'evaluation' → logprob: -16.00282096862793
    10. ' ' → logprob: -16.12782096862793

Token 1022: '_eval' (ID: 60420)
  Prédit: '_eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eval' → logprob: -0.00029470553272403777
    2. '_e' → logprob: -8.25029468536377
    3. '_order' → logprob: -10.37529468536377
    4. '_' → logprob: -14.00029468536377
    5. 'eval' → logprob: -14.37529468536377
    6. '_ev' → logprob: -14.62529468536377
    7. '=_' → logprob: -15.87529468536377
    8. 'Eval' → logprob: -17.125295639038086
    9. ' _' → logprob: -17.250295639038086
    10. '_val' → logprob: -17.375295639038086

Token 1023: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -4.096126576769166e-05
    2. 'order' → logprob: -10.125041007995605
    3. 'Order' → logprob: -14.625041007995605
    4. 'ord' → logprob: -16.12504005432129
    5. '_ord' → logprob: -16.62504005432129
    6. '_ORDER' → logprob: -16.75004005432129
    7. ' order' → logprob: -16.87504005432129
    8. '_orders' → logprob: -17.00004005432129
    9. 'ort' → logprob: -18.00004005432129
    10. '_' → logprob: -18.25004005432129

Token 1024: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.584239938296378e-06
    2. ' ,' → logprob: -12.500007629394531
    3. '   ' → logprob: -13.000007629394531
    4. '_,' → logprob: -14.375007629394531
    5. ',\
' → logprob: -15.000007629394531
    6. ',
' → logprob: -15.750007629394531
    7. ',r' → logprob: -16.00000762939453
    8. '‌,' → logprob: -16.75000762939453
    9. '=' → logprob: -16.87500762939453
    10. ',user' → logprob: -17.37500762939453

Token 1025: ' changes' (ID: 6629)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.2132503092288971
    2. ' order' → logprob: -2.3382503986358643
    3. 'changes' → logprob: -2.7132503986358643
    4. ' changes' → logprob: -3.5882503986358643
    5. 'eval' → logprob: -7.338250160217285
    6. 'change' → logprob: -7.463250160217285
    7. ' eval' → logprob: -8.838250160217285
    8. '   ' → logprob: -9.088250160217285
    9. ' change' → logprob: -10.213250160217285
    10. 'orders' → logprob: -11.088250160217285

Token 1026: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5771598815917969
    2. '=' → logprob: -0.8271598815917969
    3. '   ' → logprob: -6.827159881591797
    4. ',' → logprob: -9.827159881591797
    5. '<|end|>' → logprob: -10.327159881591797
    6. ')' → logprob: -11.202159881591797
    7. '    ' → logprob: -11.827159881591797
    8. '=
' → logprob: -12.577159881591797
    9. '    
' → logprob: -12.702159881591797
    10. ')=' → logprob: -12.827159881591797

Token 1027: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -3.547789674485102e-05
    2. ' Input' → logprob: -10.250035285949707
    3. '	Input' → logprob: -20.875036239624023
    4. '   ' → logprob: -21.625036239624023
    5. 'input' → logprob: -21.875036239624023
    6. '\Input' → logprob: -22.375036239624023
    7. ' input' → logprob: -22.625036239624023
    8. '_input' → logprob: -22.875036239624023
    9. '<Input' → logprob: -23.375036239624023
    10. '_Input' → logprob: -23.375036239624023

Token 1028: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -9.729906196298543e-06
    2. '().' → logprob: -12.125009536743164
    3. 'Parse' → logprob: -13.875009536743164
    4. 'parser' → logprob: -14.000009536743164
    5. '()' → logprob: -14.125009536743164
    6. '(Parser' → logprob: -14.125009536743164
    7. '.Parser' → logprob: -15.250009536743164
    8. '.parse' → logprob: -16.000009536743164
    9. '_parser' → logprob: -16.125009536743164
    10. '()
' → logprob: -16.250009536743164

Token 1029: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -5.133198283147067e-05
    2. '.' → logprob: -10.000051498413086
    3. 'parse' → logprob: -13.125051498413086
    4. '   ' → logprob: -13.750051498413086
    5. '=parse' → logprob: -13.875051498413086
    6. ' .' → logprob: -14.250051498413086
    7. '```' → logprob: -15.125051498413086
    8. '().' → logprob: -15.250051498413086
    9. '{}.' → logprob: -15.625051498413086
    10. '.Parse' → logprob: -16.000051498413086

Token 1030: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11434417963027954
    2. '
' → logprob: -2.2393441200256348
    3. '    
' → logprob: -7.239344120025635
    4. 'scheduler' → logprob: -7.239344120025635
    5. 's' → logprob: -9.864344596862793
    6. '_scheduler' → logprob: -11.364344596862793
    7. 'Scheduler' → logprob: -12.239344596862793
    8. '	s' → logprob: -12.489344596862793
    9. ' scheduler' → logprob: -12.614344596862793
    10. '
' → logprob: -13.489344596862793

Token 1031: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6938742995262146
    2. 'scheduler' → logprob: -0.6938742995262146
    3. 's' → logprob: -8.19387435913086
    4. ' scheduler' → logprob: -8.81887435913086
    5. '```' → logprob: -8.94387435913086
    6. '
' → logprob: -9.06887435913086
    7. 'sched' → logprob: -10.19387435913086
    8. '    
' → logprob: -11.81887435913086
    9. 'schedule' → logprob: -12.31887435913086
    10. '	s' → logprob: -13.31887435913086

Token 1032: ' scheduler' (ID: 59732)
  Prédit: 'scheduler'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scheduler' (adapté à ' scheduler') → logprob: -3.6312321753939614e-05
    2. 'sched' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.750036239624023
    4. ' scheduler' → logprob: -15.375036239624023
    5. 's' → logprob: -15.875036239624023
    6. 'sch' → logprob: -16.750036239624023
    7. '
' → logprob: -18.375036239624023
    8. 'schedule' → logprob: -18.375036239624023
    9. '    
' → logprob: -19.875036239624023
    10. 'solver' → logprob: -20.000036239624023

Token 1033: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858873412013054
    2. '=' → logprob: -3.048588752746582
    3. '   ' → logprob: -14.798588752746582
    4. '=
' → logprob: -15.673588752746582
    5. 'Scheduler' → logprob: -15.798588752746582
    6. 's' → logprob: -15.798588752746582
    7. ' ' → logprob: -16.173587799072266
    8. ' =
' → logprob: -16.173587799072266
    9. '_scheduler' → logprob: -16.298587799072266
    10. 'scheduler' → logprob: -16.548587799072266

Token 1034: ' Scheduler' (ID: 94229)
  Prédit: 'Scheduler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Scheduler' → logprob: -1.8624639324116288e-06
    2. ' Scheduler' → logprob: -13.250001907348633
    3. '   ' → logprob: -20.250001907348633
    4. 'Schedulers' → logprob: -21.500001907348633
    5. 'Scheduling' → logprob: -22.125001907348633
    6. 'Sched' → logprob: -22.125001907348633
    7. 'Schedule' → logprob: -22.125001907348633
    8. 'Scheduled' → logprob: -23.000001907348633
    9. 'Task' → logprob: -23.125001907348633
    10. '_scheduler' → logprob: -24.000001907348633

Token 1035: '(tasks' (ID: 148979)
  Prédit: '(tasks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tasks' → logprob: -0.00043233807082287967
    2. 'tasks' → logprob: -7.75043249130249
    3. '(
' → logprob: -13.875432014465332
    4. '(' → logprob: -15.000432014465332
    5. ' tasks' → logprob: -15.625432014465332
    6. '(t' → logprob: -16.12543296813965
    7. '   ' → logprob: -16.75043296813965
    8. '/tasks' → logprob: -17.25043296813965
    9. '.tasks' → logprob: -17.50043296813965
    10. '(task' → logprob: -17.87543296813965

Token 1036: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.652451464906335e-05
    2. '   ' → logprob: -11.875016212463379
    3. ',
' → logprob: -12.000016212463379
    4. '(graph' → logprob: -13.375016212463379
    5. ' ,' → logprob: -13.375016212463379
    6. ')' → logprob: -16.500017166137695
    7. '=' → logprob: -16.875017166137695
    8. 'graph' → logprob: -16.875017166137695
    9. '‌,' → logprob: -18.125017166137695
    10. ',s' → logprob: -18.125017166137695

Token 1037: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.04860270395874977
    2. ' graph' → logprob: -3.048602819442749
    3. '	graph' → logprob: -11.298603057861328
    4. '(graph' → logprob: -13.298603057861328
    5. '   ' → logprob: -14.048603057861328
    6. '
' → logprob: -16.423603057861328
    7. '```' → logprob: -16.423603057861328
    8. 'graphql' → logprob: -16.673603057861328
    9. '.graph' → logprob: -16.798603057861328
    10. 'graphs' → logprob: -17.173603057861328

Token 1038: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.165027217415627e-05
    2. ',
' → logprob: -11.000021934509277
    3. ' ,' → logprob: -12.750021934509277
    4. '   ' → logprob: -13.250021934509277
    5. ')' → logprob: -16.62502098083496
    6. ',
' → logprob: -18.12502098083496
    7. '
' → logprob: -18.12502098083496
    8. '=' → logprob: -18.25002098083496
    9. '‌,' → logprob: -18.37502098083496
    10. '),' → logprob: -18.75002098083496

Token 1039: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.0040835049003362656
    2. ' initial' → logprob: -5.504083633422852
    3. '   ' → logprob: -13.254083633422852
    4. '
' → logprob: -13.504083633422852
    5. '	initial' → logprob: -13.629083633422852
    6. '(initial' → logprob: -15.879083633422852
    7. '```' → logprob: -16.00408363342285
    8. '    ' → logprob: -16.12908363342285
    9. '.initial' → logprob: -16.50408363342285
    10. ' ' → logprob: -16.75408363342285

Token 1040: '_eval' (ID: 60420)
  Prédit: '_eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eval' → logprob: -0.3875139355659485
    2. '_order' → logprob: -1.1375138759613037
    3. 'order' → logprob: -7.512514114379883
    4. 'eval' → logprob: -9.512514114379883
    5. '_e' → logprob: -11.762514114379883
    6. '_ord' → logprob: -12.137514114379883
    7. 'Order' → logprob: -12.512514114379883
    8. '_ev' → logprob: -13.637514114379883
    9. 'Eval' → logprob: -13.637514114379883
    10. '=' → logprob: -14.012514114379883

Token 1041: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.0027367589063942432
    2. 'order' → logprob: -6.002736568450928
    3. 'Order' → logprob: -8.252737045288086
    4. ' order' → logprob: -15.877737045288086
    5. 'ord' → logprob: -16.127737045288086
    6. '_ord' → logprob: -16.502737045288086
    7. '_orders' → logprob: -17.377737045288086
    8. 'o' → logprob: -17.752737045288086
    9. '_ORDER' → logprob: -18.127737045288086
    10. '   ' → logprob: -18.127737045288086

Token 1042: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.504040356958285e-05
    2. ',
' → logprob: -9.875064849853516
    3. '   ' → logprob: -11.625064849853516
    4. ' ,' → logprob: -12.375064849853516
    5. '       ' → logprob: -16.250064849853516
    6. ')' → logprob: -16.375064849853516
    7. ',ch' → logprob: -17.000064849853516
    8. '<|end|>' → logprob: -17.125064849853516
    9. ',
' → logprob: -17.250064849853516
    10. '_,' → logprob: -17.500064849853516

Token 1043: ' changes' (ID: 6629)
  Prédit: 'changes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changes' → logprob: -0.00317783304490149
    2. ' changes' → logprob: -5.753177642822266
    3. 'change' → logprob: -16.378177642822266
    4. '   ' → logprob: -18.878177642822266
    5. 'changed' → logprob: -20.378177642822266
    6. '_changes' → logprob: -20.878177642822266
    7. '
' → logprob: -22.253177642822266
    8. ' cambios' → logprob: -22.753177642822266
    9. 'Changes' → logprob: -23.253177642822266
    10. ' ' → logprob: -23.253177642822266

Token 1044: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021363403648138046
    2. '   ' → logprob: -6.37713623046875
    3. ')
' → logprob: -7.75213623046875
    4. '<|end|>' → logprob: -13.87713623046875
    5. '()' → logprob: -14.00213623046875
    6. ').' → logprob: -15.00213623046875
    7. '       ' → logprob: -15.12713623046875
    8. ' )' → logprob: -15.25213623046875
    9. ')
' → logprob: -15.37713623046875
    10. '
' → logprob: -15.50213623046875

Token 1045: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12902922928333282
    2. 'execution' → logprob: -2.5040292739868164
    3. 'print' → logprob: -3.8790292739868164
    4. 'order' → logprob: -5.129029273986816
    5. '   ' → logprob: -5.129029273986816
    6. 'res' → logprob: -5.254029273986816
    7. 'output' → logprob: -7.254029273986816
    8. 'results' → logprob: -8.754029273986816
    9. ' result' → logprob: -8.879029273986816
    10. 'for' → logprob: -9.004029273986816

Token 1046: ' result' (ID: 1534)
  Prédit: 'execution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'execution' → logprob: -0.598736047744751
    2. 'result' (adapté à ' result') → logprob: -1.098736047744751
    3. 'order' → logprob: -2.348736047744751
    4. 'res' → logprob: -3.848736047744751
    5. 'exec' → logprob: -8.098735809326172
    6. 'ans' → logprob: -10.598735809326172
    7. '   ' → logprob: -10.848735809326172
    8. 'output' → logprob: -10.848735809326172
    9. 'results' → logprob: -11.723735809326172
    10. 'print' → logprob: -11.848735809326172

Token 1047: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5252265334129333
    2. ' =' → logprob: -0.9002265334129333
    3. '.' → logprob: -6.275226593017578
    4. '_' → logprob: -9.775226593017578
    5. '[:]' → logprob: -10.525226593017578
    6. ')' → logprob: -10.650226593017578
    7. '.append' → logprob: -10.775226593017578
    8. '.=' → logprob: -11.025226593017578
    9. '   ' → logprob: -11.275226593017578
    10. ' ' → logprob: -11.775226593017578

Token 1048: ' scheduler' (ID: 59732)
  Prédit: 'scheduler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scheduler' → logprob: -0.0031777136027812958
    2. ' scheduler' → logprob: -5.753177642822266
    3. '.scheduler' → logprob: -18.753177642822266
    4. '   ' → logprob: -19.378177642822266
    5. '_scheduler' → logprob: -20.503177642822266
    6. 'schedule' → logprob: -21.253177642822266
    7. 'solver' → logprob: -21.253177642822266
    8. '[s' → logprob: -21.378177642822266
    9. 's' → logprob: -21.503177642822266
    10. 'sched' → logprob: -21.503177642822266

Token 1049: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -5.466968650580384e-05
    2. '.' → logprob: -9.875054359436035
    3. ' .' → logprob: -14.000054359436035
    4. '
' → logprob: -14.125054359436035
    5. 'run' → logprob: -14.125054359436035
    6. '.
' → logprob: -14.375054359436035
    7. '   ' → logprob: -17.00005531311035
    8. '```' → logprob: -17.12505531311035
    9. ' run' → logprob: -17.75005531311035
    10. ').' → logprob: -17.75005531311035

Token 1050: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019779451191425323
    2. 'print' → logprob: -4.519779682159424
    3. '
' → logprob: -4.769779682159424
    4. '    
' → logprob: -9.269779205322266
    5. 'for' → logprob: -9.519779205322266
    6. ' print' → logprob: -11.269779205322266
    7. '```' → logprob: -11.519779205322266
    8. '(print' → logprob: -12.269779205322266
    9. '[
' → logprob: -12.894779205322266
    10. ' for' → logprob: -13.144779205322266

Token 1051: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6131689548492432
    2. 'for' → logprob: -1.3631689548492432
    3. '   ' → logprob: -1.6131689548492432
    4. '
' → logprob: -5.863168716430664
    5. '```' → logprob: -8.488168716430664
    6. ' for' → logprob: -8.738168716430664
    7. '    
' → logprob: -10.113168716430664
    8. ' print' → logprob: -11.988168716430664
    9. '
' → logprob: -13.113168716430664
    10. '  
' → logprob: -13.238168716430664

Token 1052: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0019305398454889655
    2. 'for' → logprob: -6.2519307136535645
    3. '   ' → logprob: -13.251930236816406
    4. '```' → logprob: -16.001930236816406
    5. ' print' → logprob: -18.626930236816406
    6. ' for' → logprob: -20.501930236816406
    7. '    
' → logprob: -21.501930236816406
    8. '
' → logprob: -21.626930236816406
    9. '``' → logprob: -22.001930236816406
    10. '       ' → logprob: -23.001930236816406

Token 1053: '('\' (ID: 24345)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.11756083369255066
    2. '(*' → logprob: -2.367560863494873
    3. '("' → logprob: -4.117560863494873
    4. '('\' → logprob: -7.117560863494873
    5. '(' → logprob: -9.242560386657715
    6. '(*(' → logprob: -11.617560386657715
    7. '("\' → logprob: -12.867560386657715
    8. '()' → logprob: -14.367560386657715
    9. '(*)' → logprob: -15.492560386657715
    10. '(
' → logprob: -15.992560386657715

Token 1054: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.981667537620524e-06
    2. ''' → logprob: -13.500001907348633
    3. 's' → logprob: -16.000001907348633
    4. '\n' → logprob: -16.375001907348633
    5. ''.' → logprob: -16.875001907348633
    6. ''n' → logprob: -17.125001907348633
    7. 'nl' → logprob: -17.250001907348633
    8. '20' → logprob: -17.375001907348633
    9. 'newline' → logprob: -17.500001907348633
    10. ' n' → logprob: -17.875001907348633

Token 1055: ''.' (ID: 6120)
  Prédit: '.join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.5084985494613647
    2. ''.' → logprob: -1.0084985494613647
    3. '.' → logprob: -3.5084986686706543
    4. 'join' → logprob: -5.883498668670654
    5. '".' → logprob: -7.508498668670654
    6. ' .' → logprob: -8.383498191833496
    7. ').' → logprob: -8.508498191833496
    8. '''.' → logprob: -10.258498191833496
    9. '.j' → logprob: -10.633498191833496
    10. ' join' → logprob: -10.883498191833496

Token 1056: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.5048530030981055e-06
    2. 'print' → logprob: -14.125001907348633
    3. 'j' → logprob: -14.500001907348633
    4. ' join' → logprob: -16.250001907348633
    5. 'jo' → logprob: -16.375001907348633
    6. '```' → logprob: -16.875001907348633
    7. 'write' → logprob: -19.000001907348633
    8. 'strip' → logprob: -19.875001907348633
    9. '.join' → logprob: -20.125001907348633
    10. '(join' → logprob: -20.250001907348633

Token 1057: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.6053261756896973
    2. 'map' → logprob: -0.8553261756896973
    3. '(str' → logprob: -3.8553261756896973
    4. 'str' → logprob: -4.855326175689697
    5. ' map' → logprob: -12.605325698852539
    6. '[str' → logprob: -13.230325698852539
    7. '	map' → logprob: -15.355325698852539
    8. ',map' → logprob: -16.35532569885254
    9. '   ' → logprob: -16.60532569885254
    10. '.map' → logprob: -16.73032569885254

Token 1058: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.12697504460811615
    2. 'str' → logprob: -2.1269750595092773
    3. '```' → logprob: -10.501975059509277
    4. '=str' → logprob: -11.876975059509277
    5. '[str' → logprob: -12.126975059509277
    6. '	str' → logprob: -12.501975059509277
    7. ' str' → logprob: -13.501975059509277
    8. '   ' → logprob: -14.501975059509277
    9. ',str' → logprob: -14.751975059509277
    10. ')' → logprob: -14.876975059509277

Token 1059: ',' (ID: 11)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.002911146730184555
    2. ',result' → logprob: -6.00291109085083
    3. '(' → logprob: -8.002911567687988
    4. ',' → logprob: -10.127911567687988
    5. '(
' → logprob: -10.752911567687988
    6. '(results' → logprob: -11.002911567687988
    7. 'result' → logprob: -11.377911567687988
    8. ')' → logprob: -12.627911567687988
    9. '=result' → logprob: -13.002911567687988
    10. ' (' → logprob: -13.377911567687988

Token 1060: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -7.896309739408025e-07
    2. ' result' → logprob: -14.750000953674316
    3. '(result' → logprob: -15.000000953674316
    4. '[result' → logprob: -21.625
    5. ',result' → logprob: -22.875
    6. '	result' → logprob: -23.25
    7. '
' → logprob: -23.5
    8. '$result' → logprob: -23.625
    9. '=result' → logprob: -23.75
    10. '   ' → logprob: -24.5

Token 1061: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -1.7954958821064793e-05
    2. ')))' → logprob: -11.625018119812012
    3. ')' → logprob: -12.000018119812012
    4. '))
' → logprob: -13.000018119812012
    5. '()))' → logprob: -14.625018119812012
    6. ' ))' → logprob: -17.750017166137695
    7. '()' → logprob: -18.500017166137695
    8. '   ' → logprob: -19.500017166137695
    9. '));' → logprob: -19.625017166137695
    10. '(' → logprob: -20.000017166137695

Token 1062: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.506661833962426e-05
    2. '```' → logprob: -9.62508487701416
    3. ' if' → logprob: -11.00008487701416
    4. '
' → logprob: -13.75008487701416
    5. '``' → logprob: -14.75008487701416
    6. '__' → logprob: -15.00008487701416
    7. '#' → logprob: -15.62508487701416
    8. '\' → logprob: -16.500085830688477
    9. 'main' → logprob: -16.750085830688477
    10. '<|end|>' → logprob: -17.125085830688477

Token 1063: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.07889804989099503
    2. ' __' → logprob: -2.5788979530334473
    3. '___' → logprob: -12.453898429870605
    4. '_' → logprob: -12.953898429870605
    5. '_name' → logprob: -13.828898429870605
    6. '____' → logprob: -14.828898429870605
    7. 'name' → logprob: -15.453898429870605
    8. ''' → logprob: -15.578898429870605
    9. '.__' → logprob: -16.32889747619629
    10. ' _' → logprob: -17.45389747619629

Token 1064: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009561522863805294
    2. '==' → logprob: -5.009561538696289
    3. ' ==' → logprob: -6.259561538696289
    4. '.__' → logprob: -7.509561538696289
    5. '__.__' → logprob: -9.134561538696289
    6. '=="' → logprob: -9.509561538696289
    7. 'if' → logprob: -10.134561538696289
    8. '=='' → logprob: -10.259561538696289
    9. '[' → logprob: -10.509561538696289
    10. ' __' → logprob: -10.634561538696289

Token 1065: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -7.922563963802531e-05
    2. '__.__' → logprob: -9.750079154968262
    3. '==' → logprob: -11.000079154968262
    4. ' ==' → logprob: -13.750079154968262
    5. '__.' → logprob: -13.750079154968262
    6. '=="' → logprob: -14.500079154968262
    7. '__
' → logprob: -14.625079154968262
    8. '___' → logprob: -15.250079154968262
    9. '____' → logprob: -15.375079154968262
    10. '__('' → logprob: -15.625079154968262

Token 1066: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6071923971176147
    2. '==' → logprob: -0.8571923971176147
    3. ' ==' → logprob: -3.7321925163269043
    4. '=="' → logprob: -5.107192516326904
    5. '=='' → logprob: -7.232192516326904
    6. '__.__' → logprob: -11.232192039489746
    7. '===' → logprob: -11.482192039489746
    8. '=' → logprob: -11.857192039489746
    9. '.__' → logprob: -12.107192039489746
    10. '==
' → logprob: -12.357192039489746

Token 1067: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.25194650888442993
    2. ''' → logprob: -1.5019464492797852
    3. '__' → logprob: -11.001946449279785
    4. ' "__' → logprob: -14.751946449279785
    5. '"name' → logprob: -15.876946449279785
    6. ''name' → logprob: -16.6269474029541
    7. ' '__' → logprob: -16.7519474029541
    8. '   ' → logprob: -17.3769474029541
    9. '"user' → logprob: -17.5019474029541
    10. ''post' → logprob: -17.7519474029541

Token 1068: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.43066492676734924
    2. 'main' → logprob: -1.0556648969650269
    3. '"' → logprob: -6.305665016174316
    4. ''' → logprob: -9.680665016174316
    5. '__":
' → logprob: -10.555665016174316
    6. '```' → logprob: -11.305665016174316
    7. 'python' → logprob: -11.805665016174316
    8. '_main' → logprob: -12.055665016174316
    9. 'if' → logprob: -12.430665016174316
    10. '__
' → logprob: -12.555665016174316

Token 1069: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.07239196449518204
    2. '__' → logprob: -2.697391986846924
    3. '__':
' → logprob: -6.322391986846924
    4. '__.__' → logprob: -8.197391510009766
    5. '__.' → logprob: -8.697391510009766
    6. '__["' → logprob: -8.947391510009766
    7. '__
' → logprob: -9.947391510009766
    8. '__
' → logprob: -11.572391510009766
    9. '__);
' → logprob: -12.072391510009766
    10. '.' → logprob: -12.322391510009766

Token 1070: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0025764903984963894
    2. '__' → logprob: -6.3775763511657715
    3. '   ' → logprob: -7.3775763511657715
    4. '"' → logprob: -9.12757682800293
    5. ''' → logprob: -10.00257682800293
    6. '	main' → logprob: -10.50257682800293
    7. ' main' → logprob: -10.87757682800293
    8. '    
' → logprob: -10.87757682800293
    9. 'run' → logprob: -11.62757682800293
    10. '_main' → logprob: -12.25257682800293

Token 1071: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -20.5
    3. '	main' → logprob: -23.0
    4. '   ' → logprob: -26.625
    5. '_main' → logprob: -26.875
    6. '.main' → logprob: -27.375
    7. '(main' → logprob: -27.625
    8. 'mai' → logprob: -27.875
    9. 'ma' → logprob: -29.375
    10. 'mainwindow' → logprob: -29.5

Token 1072: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1070
Tokens correctement prédits (1ère position, stricte): 486
Tokens correctement prédits (1ère position, avec adaptation): 540
Tokens correctement prédits (top 10): 928
Précision stricte (1ère position): 45.42%
Précision adaptée (1ère position): 50.47%
Précision (top 10): 86.73%
================================================================================
