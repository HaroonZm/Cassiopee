================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:57:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def parse_input():
    datasets = []
    lines = sys.stdin.read().strip().split('\n')
    idx = 0
    while True:
        if idx >= len(lines):
            break
        X, Y, n = map(int, lines[idx].split())
        idx += 1
        if X == 0 and Y == 0 and n == 0:
            break
        buyers = []
        for _ in range(n):
            b, k = map(int, lines[idx].split())
            buyers.append((b, k))
            idx += 1
        s = []
        for _ in range(Y):
            row = list(map(int, lines[idx].split()))
            s.append(row)
            idx += 1
        datasets.append((X, Y, n, buyers, s))
    return datasets

def check_rectangle_area(x1, y1, x2, y2, lx, ly):
    return (x2 - x1 + 1) * (y2 - y1 + 1) == lx * ly

def solve_dataset(X, Y, n, buyers, s):
    # buyers: list of (b_i, k_i)
    # s: Y rows x X cols matrix (row major)
    # Need to assign rectangles for each buyer so that:
    # - The union is the whole field
    # - Each rectangle is rectangular (normal rectangle)
    # - rectangle area == k_i for buyer i
    # - rectangle contains the positions of the buyer's boards (s_ij == b_i)
    # - no overlap, cover whole area
    
    # We try to find all rectangles for each buyer consistent with all boards placed
    
    # For each buyer b_i, locate positions of its boards
    boards_pos = {b: [] for b,k in buyers}
    for y in range(Y):
        for x in range(X):
            cell = s[y][x]
            if cell != 0:
                if cell in boards_pos:
                    boards_pos[cell].append( (x,y) )
                else:
                    # board number not in buyers? ignore, problem says buyer numbers from 1 to n
                    pass

    # For any buyer, check if #boards > 0, then the rectangle must contain all boards
    # possible rectangle candidates must:
    # - cover all board positions assigned to that buyer
    # - have area == k_i
    
    candidate_rectangles = {}
    for b,k in buyers:
        pos = boards_pos[b]
        if len(pos) == 0:
            # buyer with no boards, can be any rectangle with area k
            # we will try all rectangles of area k inside grid later
            candidate_rectangles[b] = []
            continue
        # determine min/max bounding box to find candidates
        xs = [p[0] for p in pos]
        ys = [p[1] for p in pos]
        minx, maxx = min(xs), max(xs)
        miny, maxy = min(ys), max(ys)
        # The rectangle must contain (minx,miny) to (maxx,maxy)
        base_area = (maxx - minx + 1) * (maxy - miny + 1)
        # area must be k
        candidates = []
        # Try to expand rectangle around minx,maxx,miny,maxy to achieve area k
        # We try all rectangles containing the min bounding box with area k
        # So rectangle must have area k and contain bounding box
        for x1 in range(0, minx+1):
            for y1 in range(0, miny+1):
                for x2 in range(maxx, X):
                    for y2 in range(maxy, Y):
                        w = x2 - x1 + 1
                        h = y2 - y1 + 1
                        area = w*h
                        if area == k:
                            # check contains all boards
                            # (already guaranteed minx,maxx,miny,maxy inside)
                            candidates.append( (x1,y1,x2,y2) )
        candidate_rectangles[b] = candidates

    # For buyers with no boards, try all rectangles of area k anywhere
    for b,k in buyers:
        if len(boards_pos[b]) == 0:
            candidates = []
            for x1 in range(X):
                for y1 in range(Y):
                    for x2 in range(x1, X):
                        for y2 in range(y1, Y):
                            w = x2 - x1 + 1
                            h = y2 - y1 + 1
                            if w*h == k:
                                candidates.append((x1,y1,x2,y2))
            candidate_rectangles[b] = candidates

    # Now we have a set of candidate rectangles per buyer
    # Problem: assign one candidate rectangle per buyer with no overlap and cover all area
    # Also check if assigned rectangle contains all boards for that buyer

    # Because X,Y <=10, n<=15, we can DFS over buyers and try to assign rectangles
    # If multiple solutions found -> print NA
    # If no solution -> NA
    # If one solution -> output that

    # The whole field must be covered exactly by these rectangles, no overlaps

    # Prepare some helper functions
    def rect_cells(rect):
        x1,y1,x2,y2 = rect
        cells = []
        for y in range(y1,y2+1):
            for x in range(x1,x2+1):
                cells.append((x,y))
        return cells

    solutions = []
    used_area = [[False]*X for _ in range(Y)]

    def is_valid(rect,used):
        x1,y1,x2,y2 = rect
        for y in range(y1,y2+1):
            for x in range(x1,x2+1):
                if used[y][x]:
                    return False
        return True

    def set_used(rect,used,val):
        x1,y1,x2,y2=rect
        for y in range(y1,y2+1):
            for x in range(x1,x2+1):
                used[y][x] = val

    buyer_list = [b for b,k in buyers]

    assigned_rects = [None]*len(buyer_list)

    def dfs(i):
        if len(solutions) > 1:
            return
        if i == len(buyer_list):
            # check if covered all area
            # used_area after assignment must be full True
            # actually used_area is to track coverage
            # but currently used_area reflects only last assignment, we need full coverage check
            # Instead, we check all cells covered by assigned_rects:
            cover_check = [[False]*X for _ in range(Y)]
            for r in assigned_rects:
                if r is None:
                    return
                x1,y1,x2,y2 = r
                for y in range(y1,y2+1):
                    for x in range(x1,x2+1):
                        if cover_check[y][x]:
                            # overlap
                            return
                        cover_check[y][x] = True
            # check full coverage
            for y in range(Y):
                for x in range(X):
                    if not cover_check[y][x]:
                        return
            # check if for each buyer all its boards are inside assigned rectangle
            for idx,b in enumerate(buyer_list):
                r = assigned_rects[idx]
                x1,y1,x2,y2 = r
                for (bx,by) in boards_pos[b]:
                    if not (x1 <= bx <= x2 and y1 <= by <= y2):
                        return
                # also area matches k
                area = (x2 - x1 + 1)*(y2 - y1 + 1)
                k = 0
                for bb,kk in buyers:
                    if bb==b:
                        k=kk
                        break
                if k != area:
                    return
            # valid solution
            solutions.append( list(assigned_rects) )
            return
        b = buyer_list[i]
        for rect in candidate_rectangles[b]:
            if not is_valid(rect, used_area):
                continue
            # assign
            set_used(rect, used_area, True)
            assigned_rects[i] = rect
            dfs(i+1)
            assigned_rects[i] = None
            set_used(rect, used_area, False)

    dfs(0)

    if len(solutions) != 1:
        return None

    # Build output grid; for each buyer fill cells with buyer number
    grid = [[0]*X for _ in range(Y)]
    sol = solutions[0]
    for idx,b in enumerate(buyer_list):
        x1,y1,x2,y2 = sol[idx]
        for y in range(y1,y2+1):
            for x in range(x1,x2+1):
                grid[y][x] = b
    return grid

def main():
    datasets = parse_input()
    for data in datasets:
        X,Y,n,buyers,s = data
        res = solve_dataset(X,Y,n,buyers,s)
        if res is None:
            print("NA")
        else:
            for y in range(Y):
                print(" ".join(str(res[y][x]) for x in range(X)))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' parse' (ID: 8420)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.27202650904655457
    2. ' process' → logprob: -2.647026538848877
    3. ' read' → logprob: -3.022026538848877
    4. ' space' → logprob: -3.397026538848877
    5. ' main' → logprob: -3.772026538848877
    6. ' calculate' → logprob: -4.772026538848877
    7. ' my' → logprob: -5.022026538848877
    8. ' sys' → logprob: -5.272026538848877
    9. ' ' → logprob: -5.522026538848877
    10. ' def' → logprob: -5.772026538848877

Token 5: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5264995694160461
    2. '(' → logprob: -0.9014995694160461
    3. '_:' → logprob: -6.7764997482299805
    4. '_line' → logprob: -7.1514997482299805
    5. '_token' → logprob: -7.9014997482299805
    6. '_name' → logprob: -8.90149974822998
    7. '_input' → logprob: -9.27649974822998
    8. ':' → logprob: -9.40149974822998
    9. '```' → logprob: -9.52649974822998
    10. ' (' → logprob: -9.65149974822998

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004194505978375673
    2. '_' → logprob: -5.629194736480713
    3. '(_' → logprob: -8.879194259643555
    4. '(_:' → logprob: -9.879194259643555
    5. '(input' → logprob: -10.379194259643555
    6. '_input' → logprob: -10.379194259643555
    7. '```' → logprob: -10.379194259643555
    8. '("("' → logprob: -10.504194259643555
    9. '_parent' → logprob: -10.504194259643555
    10. '_line' → logprob: -10.879194259643555

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48703575134277344
    2. '(' → logprob: -2.1120357513427734
    3. ' ' → logprob: -2.1120357513427734
    4. '    ' → logprob: -2.3620357513427734
    5. ' return' → logprob: -4.737035751342773
    6. '\' → logprob: -4.862035751342773
    7. '    
' → logprob: -5.112035751342773
    8. ' (' → logprob: -5.737035751342773
    9. ' 
' → logprob: -5.737035751342773
    10. '[' → logprob: -5.862035751342773

Token 8: ' datasets' (ID: 57711)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.254812628030777
    2. 'pass' → logprob: -2.879812717437744
    3. 'data' → logprob: -3.004812717437744
    4. 'return' → logprob: -3.379812717437744
    5. 'input' → logprob: -3.879812717437744
    6. ' line' → logprob: -4.129812717437744
    7. 'user' → logprob: -4.504812717437744
    8. ' ' → logprob: -4.754812717437744
    9. ' pass' → logprob: -4.879812717437744
    10. ' return' → logprob: -5.379812717437744

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36927375197410583
    2. '=' → logprob: -1.6192737817764282
    3. '[' → logprob: -2.4942736625671387
    4. '.' → logprob: -3.9942736625671387
    5. '_' → logprob: -5.994273662567139
    6. ')' → logprob: -6.244273662567139
    7. '[:]' → logprob: -6.369273662567139
    8. '   ' → logprob: -7.119273662567139
    9. '['' → logprob: -7.119273662567139
    10. ' ' → logprob: -8.119274139404297

Token 10: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.057187262922525406
    2. '[]' → logprob: -3.68218731880188
    3. ' {}' → logprob: -3.80718731880188
    4. '{}' → logprob: -4.807187080383301
    5. ' ' → logprob: -10.9321870803833
    6. '   ' → logprob: -11.6821870803833
    7. '  ' → logprob: -13.8071870803833
    8. ' [' → logprob: -13.9321870803833
    9. 'dict' → logprob: -14.1821870803833
    10. '[' → logprob: -14.3071870803833

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19210335612297058
    2. '    
' → logprob: -2.067103385925293
    3. '    ' → logprob: -4.442103385925293
    4. '\n' → logprob: -4.567103385925293
    5. '\' → logprob: -4.817103385925293
    6. '     
' → logprob: -4.942103385925293
    7. '
' → logprob: -5.817103385925293
    8. '```' → logprob: -5.942103385925293
    9. ' 
' → logprob: -6.567103385925293
    10. '    
    
' → logprob: -7.692103385925293

Token 12: ' lines' (ID: 8698)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03140789270401001
    2. ' for' → logprob: -4.156407833099365
    3. '   ' → logprob: -4.281407833099365
    4. 'data' → logprob: -7.406407833099365
    5. 'n' → logprob: -8.156408309936523
    6. 'input' → logprob: -8.656408309936523
    7. '```' → logprob: -9.406408309936523
    8. '    ' → logprob: -10.031408309936523
    9. ' ' → logprob: -10.281408309936523
    10. 'dataset' → logprob: -10.406408309936523

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007530473521910608
    2. '=' → logprob: -7.375752925872803
    3. '.' → logprob: -9.500753402709961
    4. '   ' → logprob: -11.500753402709961
    5. '.append' → logprob: -11.625753402709961
    6. ')' → logprob: -12.000753402709961
    7. '[' → logprob: -12.625753402709961
    8. ' ' → logprob: -12.875753402709961
    9. ' .' → logprob: -13.000753402709961
    10. '.extend' → logprob: -13.000753402709961

Token 14: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10066822916269302
    2. 'sys' → logprob: -2.35066819190979
    3. ' []' → logprob: -8.225667953491211
    4. '[]' → logprob: -9.350667953491211
    5. ' ' → logprob: -9.975667953491211
    6. '=sys' → logprob: -10.725667953491211
    7. '	sys' → logprob: -11.225667953491211
    8. '   ' → logprob: -12.100667953491211
    9. ' input' → logprob: -12.350667953491211
    10. 'input' → logprob: -12.725667953491211

Token 15: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.38896259665489197
    2. '.' → logprob: -1.1389626264572144
    3. '.argv' → logprob: -6.638962745666504
    4. '.stdout' → logprob: -7.638962745666504
    5. '.readline' → logprob: -8.513962745666504
    6. '.std' → logprob: -10.388962745666504
    7. '.input' → logprob: -10.763962745666504
    8. ' .' → logprob: -11.513962745666504
    9. '.path' → logprob: -11.888962745666504
    10. '.import' → logprob: -12.513962745666504

Token 16: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.34186795353889465
    2. '.readlines' → logprob: -1.3418679237365723
    3. '.' → logprob: -3.5918679237365723
    4. '.read' → logprob: -7.341867923736572
    5. ' .' → logprob: -12.71686840057373
    6. '```' → logprob: -13.71686840057373
    7. ' readline' → logprob: -14.34186840057373
    8. 'read' → logprob: -15.21686840057373
    9. '.write' → logprob: -15.84186840057373
    10. '.rstrip' → logprob: -15.96686840057373

Token 17: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.100935198366642
    2. '(' → logprob: -2.350935220718384
    3. '().' → logprob: -7.350934982299805
    4. ' ()' → logprob: -10.975934982299805
    5. '()(' → logprob: -11.225934982299805
    6. '())' → logprob: -11.600934982299805
    7. '(

' → logprob: -11.725934982299805
    8. '(
' → logprob: -11.975934982299805
    9. 'line' → logprob: -12.350934982299805
    10. '('' → logprob: -12.475934982299805

Token 18: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.38694268465042114
    2. 'strip' → logprob: -1.1369426250457764
    3. 'rstrip' → logprob: -9.886942863464355
    4. 'decode' → logprob: -11.136942863464355
    5. 'read' → logprob: -12.636942863464355
    6. '```' → logprob: -13.386942863464355
    7. ' split' → logprob: -14.136942863464355
    8. 'replace' → logprob: -14.511942863464355
    9. ' strip' → logprob: -16.76194190979004
    10. '(split' → logprob: -16.76194190979004

Token 19: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6778551936149597
    2. '().' → logprob: -1.0528552532196045
    3. '('' → logprob: -2.1778552532196045
    4. '(' → logprob: -3.6778552532196045
    5. ''' → logprob: -6.427855014801025
    6. '("' → logprob: -6.677855014801025
    7. '"' → logprob: -7.052855014801025
    8. '("("' → logprob: -7.427855014801025
    9. '(()' → logprob: -9.302855491638184
    10. 'split' → logprob: -9.802855491638184

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.128163257315464e-07
    2. ' split' → logprob: -15.5
    3. 'spl' → logprob: -18.125
    4. 'sp' → logprob: -19.25
    5. '(split' → logprob: -19.375
    6. 'plit' → logprob: -19.5
    7. 'rstrip' → logprob: -20.875
    8. '.split' → logprob: -21.0
    9. '_split' → logprob: -21.375
    10. '```' → logprob: -21.875

Token 21: '('\' (ID: 24345)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1046062707901001
    2. 'lines' → logprob: -3.1046061515808105
    3. '('\' → logprob: -3.7296061515808105
    4. '(' → logprob: -4.1046061515808105
    5. '("("' → logprob: -4.8546061515808105
    6. '()' → logprob: -5.3546061515808105
    7. ''' → logprob: -7.2296061515808105
    8. '('(' → logprob: -7.9796061515808105
    9. ' '('' → logprob: -9.729606628417969
    10. 'line' → logprob: -9.979606628417969

Token 22: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004307884373702109
    2. '\n' → logprob: -7.750430583953857
    3. ' n' → logprob: -17.250431060791016
    4. '\' → logprob: -17.750431060791016
    5. 'newline' → logprob: -18.000431060791016
    6. '```' → logprob: -18.500431060791016
    7. '
' → logprob: -18.625431060791016
    8. '_n' → logprob: -19.125431060791016
    9. ''n' → logprob: -19.375431060791016
    10. ')n' → logprob: -19.625431060791016

Token 23: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.16033704578876495
    2. ')' → logprob: -1.9103370904922485
    3. '")' → logprob: -9.660337448120117
    4. ''' → logprob: -11.035337448120117
    5. '`)' → logprob: -11.285337448120117
    6. ']' → logprob: -11.910337448120117
    7. '')
' → logprob: -12.410337448120117
    8. '']' → logprob: -12.785337448120117
    9. '   ' → logprob: -13.160337448120117
    10. '```' → logprob: -13.785337448120117

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11541646718978882
    2. ' for' → logprob: -2.7404165267944336
    3. 'for' → logprob: -3.1154165267944336
    4. '    ' → logprob: -10.365416526794434
    5. '```' → logprob: -10.990416526794434
    6. ' ' → logprob: -11.740416526794434
    7. '	for' → logprob: -11.865416526794434
    8. '  ' → logprob: -11.990416526794434
    9. '    
' → logprob: -11.990416526794434
    10. 'i' → logprob: -11.990416526794434

Token 25: ' idx' (ID: 14016)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8977599143981934
    2. 'for' → logprob: -1.2727599143981934
    3. '   ' → logprob: -1.8977599143981934
    4. 'i' → logprob: -2.0227599143981934
    5. ' i' → logprob: -4.147759914398193
    6. '    ' → logprob: -5.272759914398193
    7. 'idx' (adapté à ' idx') → logprob: -6.022759914398193
    8. 'current' → logprob: -6.397759914398193
    9. ' ' → logprob: -6.647759914398193
    10. 'index' → logprob: -6.897759914398193

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09841207414865494
    2. '=' → logprob: -2.598412036895752
    3. ' +=' → logprob: -4.098412036895752
    4. ' ' → logprob: -6.723412036895752
    5. '+=' → logprob: -7.223412036895752
    6. '+' → logprob: -7.723412036895752
    7. ')' → logprob: -8.84841251373291
    8. '<|end|>' → logprob: -9.34841251373291
    9. ' =)' → logprob: -10.47341251373291
    10. '  ' → logprob: -10.84841251373291

Token 27: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020741695538163185
    2. ' ' → logprob: -3.8957417011260986
    3. '1' → logprob: -8.52074146270752
    4. '2' → logprob: -14.77074146270752
    5. '```' → logprob: -16.270742416381836
    6. 'len' → logprob: -17.395742416381836
    7. '3' → logprob: -17.520742416381836
    8. ' ' → logprob: -17.708242416381836
    9. '`' → logprob: -17.895742416381836
    10. '   ' → logprob: -17.958242416381836

Token 28: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2723104848410003e-05
    2. ' ' → logprob: -10.750022888183594
    3. '1' → logprob: -13.750022888183594
    4. '```' → logprob: -17.312522888183594
    5. '   ' → logprob: -17.375022888183594
    6. 'len' → logprob: -18.250022888183594
    7. '۰' → logprob: -18.375022888183594
    8. '2' → logprob: -18.750022888183594
    9. '=' → logprob: -19.062522888183594
    10. 'int' → logprob: -19.187522888183594

Token 29: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2086997628211975
    2. '<|end|>' → logprob: -2.0836997032165527
    3. 'while' → logprob: -4.208699703216553
    4. ' while' → logprob: -4.333699703216553
    5. ' ' → logprob: -4.583699703216553
    6. '
' → logprob: -4.958699703216553
    7. '    
' → logprob: -5.333699703216553
    8. '  ' → logprob: -5.458699703216553
    9. '```' → logprob: -6.083699703216553
    10. '<|end|>' → logprob: -6.083699703216553

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007900939672254026
    2. 'while' → logprob: -8.250789642333984
    3. ' while' → logprob: -8.250789642333984
    4. '    
' → logprob: -9.250789642333984
    5. '```' → logprob: -9.625789642333984
    6. '	while' → logprob: -10.375789642333984
    7. '
' → logprob: -10.625789642333984
    8. '<|end|>' → logprob: -11.250789642333984
    9. '    ' → logprob: -11.875789642333984
    10. 'While' → logprob: -12.000789642333984

Token 31: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.25673654675483704
    2. '   ' → logprob: -1.6317365169525146
    3. ' while' → logprob: -3.5067365169525146
    4. '```' → logprob: -7.881736755371094
    5. '	while' → logprob: -8.256736755371094
    6. '<|end|>' → logprob: -9.631736755371094
    7. 'n' → logprob: -10.381736755371094
    8. '  ' → logprob: -10.506736755371094
    9. 'While' → logprob: -10.756736755371094
    10. ' ' → logprob: -10.881736755371094

Token 32: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.002476135268807411
    2. 'idx' → logprob: -6.002476215362549
    3. '	idx' → logprob: -15.25247573852539
    4. '(idx' → logprob: -16.00247573852539
    5. '_idx' → logprob: -17.37747573852539
    6. ' True' → logprob: -18.25247573852539
    7. '[idx' → logprob: -19.00247573852539
    8. '   ' → logprob: -19.50247573852539
    9. '.idx' → logprob: -19.62747573852539
    10. 'Idx' → logprob: -19.75247573852539

Token 33: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005266997031867504
    2. '       ' → logprob: -7.8755269050598145
    3. '   ' → logprob: -10.000526428222656
    4. ':
' → logprob: -10.000526428222656
    5. '):' → logprob: -10.750526428222656
    6. ':**' → logprob: -11.250526428222656
    7. ' :' → logprob: -11.875526428222656
    8. '():' → logprob: -12.250526428222656
    9. ',' → logprob: -13.125526428222656
    10. '<|end|>' → logprob: -13.375526428222656

Token 34: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009092651307582855
    2. '    ' → logprob: -5.509092807769775
    3. '   ' → logprob: -5.509092807769775
    4. ' ' → logprob: -7.509092807769775
    5. ' if' → logprob: -9.634092330932617
    6. '```' → logprob: -9.884092330932617
    7. '        
' → logprob: -10.009092330932617
    8. '      ' → logprob: -10.134092330932617
    9. '  ' → logprob: -10.509092330932617
    10. 'if' → logprob: -10.634092330932617

Token 35: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7732945680618286
    2. '       ' → logprob: -1.5232945680618286
    3. 'if' (adapté à ' if') → logprob: -1.7732945680618286
    4. '   ' → logprob: -1.8982945680618286
    5. ' ' → logprob: -8.023294448852539
    6. '    ' → logprob: -8.398294448852539
    7. '```' → logprob: -8.773294448852539
    8. '  ' → logprob: -9.398294448852539
    9. 'n' → logprob: -10.273294448852539
    10. ' try' → logprob: -10.648294448852539

Token 36: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.004099058452993631
    2. 'idx' → logprob: -5.504098892211914
    3. '	idx' → logprob: -11.129098892211914
    4. '   ' → logprob: -12.504098892211914
    5. '(idx' → logprob: -14.004098892211914
    6. '[idx' → logprob: -14.379098892211914
    7. '_idx' → logprob: -15.004098892211914
    8. '    ' → logprob: -16.004098892211914
    9. 'Idx' → logprob: -16.254098892211914
    10. '.idx' → logprob: -16.754098892211914

Token 37: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.08924926817417145
    2. '>=' → logprob: -2.4642493724823
    3. ' ' → logprob: -8.839249610900879
    4. '+' → logprob: -8.964249610900879
    5. ']>=' → logprob: -11.464249610900879
    6. ' ==' → logprob: -11.589249610900879
    7. '==' → logprob: -11.714249610900879
    8. ')>=' → logprob: -12.339249610900879
    9. '   ' → logprob: -14.214249610900879
    10. '=' → logprob: -14.464249610900879

Token 38: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.03804149478673935
    2. ' len' → logprob: -3.288041591644287
    3. '(len' → logprob: -17.288042068481445
    4. '   ' → logprob: -17.788042068481445
    5. '	len' → logprob: -18.038042068481445
    6. '[len' → logprob: -19.038042068481445
    7. '<len' → logprob: -19.038042068481445
    8. '=len' → logprob: -19.413042068481445
    9. ',len' → logprob: -19.538042068481445
    10. 'length' → logprob: -19.663042068481445

Token 39: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -4.513339445111342e-05
    2. ' lines' → logprob: -10.375044822692871
    3. 'lines' → logprob: -11.250044822692871
    4. '(' → logprob: -14.625044822692871
    5. '	lines' → logprob: -15.125044822692871
    6. ' (' → logprob: -17.625045776367188
    7. ')' → logprob: -18.000045776367188
    8. '(line' → logprob: -18.375045776367188
    9. '_lines' → logprob: -18.375045776367188
    10. '.lines' → logprob: -18.500045776367188

Token 40: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5024836659431458
    2. ')' → logprob: -1.127483606338501
    3. '):
' → logprob: -3.127483606338501
    4. ' or' → logprob: -3.627483606338501
    5. '   ' → logprob: -8.502483367919922
    6. '       ' → logprob: -8.752483367919922
    7. 'or' → logprob: -9.002483367919922
    8. ' ):' → logprob: -9.752483367919922
    9. ':' → logprob: -9.877483367919922
    10. ' )' → logprob: -10.002483367919922

Token 41: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012296605564188212
    2. '       ' → logprob: -9.375123023986816
    3. '   ' → logprob: -11.250123023986816
    4. ':' → logprob: -11.500123023986816
    5. '          ' → logprob: -12.500123023986816
    6. ' ' → logprob: -13.250123023986816
    7. '10' → logprob: -13.375123023986816
    8. ' break' → logprob: -13.500123023986816
    9. '               ' → logprob: -14.125123023986816
    10. '```' → logprob: -14.250123023986816

Token 42: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02331896498799324
    2. ' break' → logprob: -4.523318767547607
    3. 'break' (adapté à ' break') → logprob: -4.773318767547607
    4. '       ' → logprob: -5.648318767547607
    5. 'return' → logprob: -9.398319244384766
    6. '               ' → logprob: -10.023319244384766
    7. '   ' → logprob: -10.398319244384766
    8. '```' → logprob: -10.523319244384766
    9. ' return' → logprob: -11.523319244384766
    10. '	break' → logprob: -11.648319244384766

Token 43: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00400491151958704
    2. '        
' → logprob: -6.254004955291748
    3. '\n' → logprob: -6.879004955291748
    4. '
' → logprob: -8.25400447845459
    5. '   ' → logprob: -9.00400447845459
    6. '    
' → logprob: -9.00400447845459
    7. '```' → logprob: -9.12900447845459
    8. '\' → logprob: -9.25400447845459
    9. '<|end|>' → logprob: -9.37900447845459
    10. '  
' → logprob: -9.75400447845459

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005576890893280506
    2. '
' → logprob: -6.130577087402344
    3. '\n' → logprob: -6.630577087402344
    4. '        
' → logprob: -6.755577087402344
    5. '   ' → logprob: -8.505577087402344
    6. '    
' → logprob: -8.630577087402344
    7. '```' → logprob: -8.630577087402344
    8. '  
' → logprob: -9.380577087402344
    9. '<|end|>' → logprob: -9.880577087402344
    10. '\' → logprob: -10.005577087402344

Token 45: ' X' (ID: 2127)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10969485342502594
    2. 'n' → logprob: -2.4846949577331543
    3. '   ' → logprob: -5.234694957733154
    4. ' ' → logprob: -5.359694957733154
    5. ' line' → logprob: -5.734694957733154
    6. 'line' → logprob: -6.359694957733154
    7. '```' → logprob: -6.984694957733154
    8. '    ' → logprob: -7.609694957733154
    9. '        
' → logprob: -7.734694957733154
    10. 'newline' → logprob: -7.734694957733154

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10866612195968628
    2. ' =' → logprob: -2.983666181564331
    3. ' ,' → logprob: -3.108666181564331
    4. '=' → logprob: -6.108665943145752
    5. ',Y' → logprob: -6.733665943145752
    6. '   ' → logprob: -6.983665943145752
    7. ',_' → logprob: -7.483665943145752
    8. '_size' → logprob: -7.858665943145752
    9. '_,' → logprob: -7.983665943145752
    10. '=int' → logprob: -8.35866641998291

Token 47: ' Y' (ID: 865)
  Prédit: ' Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.6544427275657654
    2. 'Y' → logprob: -1.0294427871704102
    3. ' ' → logprob: -3.27944278717041
    4. '<|end|>' → logprob: -3.40444278717041
    5. ' =' → logprob: -4.02944278717041
    6. 'y' → logprob: -4.15444278717041
    7. ' y' → logprob: -4.52944278717041
    8. '  ' → logprob: -6.65444278717041
    9. '=' → logprob: -6.65444278717041
    10. '<|end|>' → logprob: -6.77944278717041

Token 48: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6954707503318787
    2. ' =' → logprob: -0.6954707503318787
    3. ',' → logprob: -6.070470809936523
    4. ')' → logprob: -12.070470809936523
    5. ' ,' → logprob: -13.570470809936523
    6. '=line' → logprob: -14.195470809936523
    7. '   ' → logprob: -14.695470809936523
    8. ' ' → logprob: -15.070470809936523
    9. '=int' → logprob: -15.195470809936523
    10. '=input' → logprob: -15.195470809936523

Token 49: ' n' (ID: 297)
  Prédit: 'Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Z' → logprob: -0.44292327761650085
    2. 'N' → logprob: -1.5679233074188232
    3. '=' → logprob: -2.5679233074188232
    4. ' =' → logprob: -3.0679233074188232
    5. ' Z' → logprob: -4.692923069000244
    6. 'T' → logprob: -6.067923069000244
    7. ' N' → logprob: -6.192923069000244
    8. 'n' → logprob: -6.442923069000244
    9. 'M' → logprob: -6.692923069000244
    10. ' ' → logprob: -6.942923069000244

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012525777332484722
    2. '=' → logprob: -4.38752555847168
    3. '   ' → logprob: -11.76252555847168
    4. ' ' → logprob: -13.01252555847168
    5. '    ' → logprob: -13.38752555847168
    6. ')' → logprob: -13.51252555847168
    7. '  ' → logprob: -13.63752555847168
    8. ',' → logprob: -14.63752555847168
    9. '=line' → logprob: -14.76252555847168
    10. '```' → logprob: -15.13752555847168

Token 51: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0024854077491909266
    2. 'map' → logprob: -6.002485275268555
    3. ' lines' → logprob: -12.002485275268555
    4. ' [' → logprob: -13.752485275268555
    5. '(map' → logprob: -14.377485275268555
    6. '[' → logprob: -14.377485275268555
    7. ' list' → logprob: -14.752485275268555
    8. '	map' → logprob: -15.002485275268555
    9. '   ' → logprob: -15.377485275268555
    10. ' ' → logprob: -16.002485275268555

Token 52: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.045293234288692474
    2. '(int' → logprob: -3.2952933311462402
    3. '(lambda' → logprob: -5.29529333114624
    4. '<|end|>' → logprob: -6.92029333114624
    5. '(str' → logprob: -7.17029333114624
    6. '(
' → logprob: -8.670292854309082
    7. '()' → logprob: -9.420292854309082
    8. '(list' → logprob: -10.420292854309082
    9. '(tuple' → logprob: -10.670292854309082
    10. ' (' → logprob: -10.795292854309082

Token 53: ',' (ID: 11)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.009725512936711311
    2. ')' → logprob: -4.884725570678711
    3. '(' → logprob: -6.384725570678711
    4. ')(' → logprob: -8.384725570678711
    5. 'lines' → logprob: -8.884725570678711
    6. ' lines' → logprob: -10.259725570678711
    7. '	lines' → logprob: -11.509725570678711
    8. '(line' → logprob: -12.259725570678711
    9. '(tokens' → logprob: -12.884725570678711
    10. ',' → logprob: -13.384725570678711

Token 54: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.19624538719654083
    2. 'lines' → logprob: -1.8212454319000244
    3. '(lines' → logprob: -4.321245193481445
    4. ')' → logprob: -5.821245193481445
    5. '	lines' → logprob: -9.571245193481445
    6. ' )' → logprob: -10.196245193481445
    7. ' ' → logprob: -12.321245193481445
    8. ' ' → logprob: -13.321245193481445
    9. '.lines' → logprob: -13.571245193481445
    10. '-lines' → logprob: -14.446245193481445

Token 55: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.062097758054733276
    2. '[' → logprob: -2.8120977878570557
    3. ')[' → logprob: -9.437097549438477
    4. ' [' → logprob: -11.312097549438477
    5. '[token' → logprob: -11.812097549438477
    6. '[id' → logprob: -11.812097549438477
    7. '[
' → logprob: -12.187097549438477
    8. '```' → logprob: -12.812097549438477
    9. '[line' → logprob: -13.562097549438477
    10. '[index' → logprob: -13.562097549438477

Token 56: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00018446780450176448
    2. '])' → logprob: -9.375184059143066
    3. ']' → logprob: -9.750184059143066
    4. '.split' → logprob: -11.125184059143066
    5. ' ].' → logprob: -11.375184059143066
    6. ''].' → logprob: -11.750184059143066
    7. ').' → logprob: -12.375184059143066
    8. '][' → logprob: -13.625184059143066
    9. '"].' → logprob: -15.000184059143066
    10. '   ' → logprob: -15.125184059143066

Token 57: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.018156850710511208
    2. 'strip' → logprob: -4.018157005310059
    3. 'rstrip' → logprob: -12.018157005310059
    4. ' split' → logprob: -14.768157005310059
    5. '(split' → logprob: -14.893157005310059
    6. '.split' → logprob: -17.143156051635742
    7. '```' → logprob: -17.893156051635742
    8. ' strip' → logprob: -18.143156051635742
    9. 'spl' → logprob: -18.518156051635742
    10. 'plit' → logprob: -19.268156051635742

Token 58: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.38971275091171265
    2. '('' → logprob: -1.1397128105163574
    3. '()' → logprob: -6.139712810516357
    4. '(' → logprob: -8.0147123336792
    5. ')' → logprob: -9.1397123336792
    6. '()))' → logprob: -9.1397123336792
    7. '(','' → logprob: -9.3897123336792
    8. '())
' → logprob: -11.1397123336792
    9. '("' → logprob: -11.3897123336792
    10. ' ())' → logprob: -11.8897123336792

Token 59: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: ' idx' (ID: 14016)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.05380607768893242
    2. '+' → logprob: -3.1788060665130615
    3. '+=' → logprob: -4.553806304931641
    4. ' +' → logprob: -9.05380630493164
    5. ' ' → logprob: -9.55380630493164
    6. '++' → logprob: -10.92880630493164
    7. '<|end|>' → logprob: -11.92880630493164
    8. '+++' → logprob: -13.05380630493164
    9. ' ' → logprob: -13.30380630493164
    10. ')' → logprob: -13.67880630493164

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '3' → logprob: -20.125335693359375
    4. ' ' → logprob: -20.250335693359375
    5. '```' → logprob: -20.750335693359375
    6. '１' → logprob: -21.250335693359375
    7. '0' → logprob: -22.750335693359375
    8. '   ' → logprob: -23.125335693359375
    9. '۱' → logprob: -23.125335693359375
    10. '`' → logprob: -23.375335693359375

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '3' → logprob: -18.000001907348633
    4. '```' → logprob: -18.375001907348633
    5. '１' → logprob: -19.500001907348633
    6. '`' → logprob: -20.937501907348633
    7. '0' → logprob: -21.000001907348633
    8. '

' → logprob: -21.250001907348633
    9. '   ' → logprob: -21.312501907348633
    10. '۱' → logprob: -21.500001907348633

Token 64: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7778236865997314
    2. ' if' → logprob: -0.9028236865997314
    3. ' data' → logprob: -3.2778236865997314
    4. ' points' → logprob: -3.2778236865997314
    5. 'if' (adapté à ' if') → logprob: -4.277823448181152
    6. ' dataset' → logprob: -4.402823448181152
    7. 'points' → logprob: -4.652823448181152
    8. 'data' → logprob: -4.902823448181152
    9. 'dataset' → logprob: -5.277823448181152
    10. ' datasets' → logprob: -5.777823448181152

Token 67: ' X' (ID: 2127)
  Prédit: ' X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' X' → logprob: -0.2015080600976944
    2. 'X' → logprob: -1.7015080451965332
    3. ' ' → logprob: -9.951508522033691
    4. ' n' → logprob: -10.951508522033691
    5. 'n' → logprob: -11.201508522033691
    6. ' not' → logprob: -12.326508522033691
    7. ' (' → logprob: -12.576508522033691
    8. '(' → logprob: -12.826508522033691
    9. '(X' → logprob: -13.201508522033691
    10. '  ' → logprob: -13.326508522033691

Token 68: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25243210792541504
    2. ' ==' → logprob: -1.502432107925415
    3. '<' → logprob: -8.502431869506836
    4. '<=' → logprob: -8.627431869506836
    5. ' <=' → logprob: -10.002431869506836
    6. ' <' → logprob: -10.752431869506836
    7. '=' → logprob: -10.877431869506836
    8. '===' → logprob: -11.627431869506836
    9. ' ' → logprob: -12.502431869506836
    10. '<|end|>' → logprob: -12.502431869506836

Token 69: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.129796102643013
    2. ' ' → logprob: -2.129796028137207
    3. ' Y' → logprob: -6.504796028137207
    4. 'Y' → logprob: -6.629796028137207
    5. '	Y' → logprob: -11.504796028137207
    6. '-' → logprob: -11.817296028137207
    7. '   ' → logprob: -12.442296028137207
    8. '```' → logprob: -12.567296028137207
    9. '  ' → logprob: -12.629796028137207
    10. ' -' → logprob: -12.817296028137207

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002102440921589732
    2. 'Y' → logprob: -6.752102375030518
    3. ' ' → logprob: -7.127102375030518
    4. ' Y' → logprob: -9.377102851867676
    5. '-' → logprob: -10.502102851867676
    6. '	Y' → logprob: -12.877102851867676
    7. ' -' → logprob: -13.127102851867676
    8. '```' → logprob: -13.252102851867676
    9. '

' → logprob: -14.189602851867676
    10. 'y' → logprob: -14.252102851867676

Token 71: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06197306513786316
    2. 'and' → logprob: -2.8119730949401855
    3. ' ' → logprob: -12.561972618103027
    4. ' or' → logprob: -14.311972618103027
    5. '	and' → logprob: -14.561972618103027
    6. '   ' → logprob: -15.061972618103027
    7. '  ' → logprob: -16.436973571777344
    8. '<|end|>' → logprob: -16.436973571777344
    9. '    ' → logprob: -16.561973571777344
    10. ' ' → logprob: -17.061973571777344

Token 72: ' Y' (ID: 865)
  Prédit: ' Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.25193992257118225
    2. 'Y' → logprob: -1.5019398927688599
    3. ' ' → logprob: -11.62693977355957
    4. '	Y' → logprob: -13.87693977355957
    5. ' ' → logprob: -14.37693977355957
    6. '   ' → logprob: -15.37693977355957
    7. '  ' → logprob: -15.50193977355957
    8. 'X' → logprob: -17.62693977355957
    9. ' X' → logprob: -18.50193977355957
    10. '    ' → logprob: -19.06443977355957

Token 73: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.281332403421402
    2. '==' → logprob: -1.4063323736190796
    3. '<|end|>' → logprob: -8.781332015991211
    4. '<|end|>' → logprob: -11.156332015991211
    5. '=' → logprob: -12.906332015991211
    6. ' ' → logprob: -12.906332015991211
    7. '===' → logprob: -13.281332015991211
    8. '0' → logprob: -13.531332015991211
    9. ' =' → logprob: -13.781332015991211
    10. ')==' → logprob: -13.781332015991211

Token 74: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.251930832862854
    2. '0' → logprob: -1.501930832862854
    3. '  ' → logprob: -14.251931190490723
    4. '<|end|>' → logprob: -14.751931190490723
    5. ' ' → logprob: -15.251931190490723
    6. '<|end|>' → logprob: -15.564431190490723
    7. '   ' → logprob: -15.876931190490723
    8. ' and' → logprob: -16.564430236816406
    9. '```' → logprob: -17.064430236816406
    10. '=' → logprob: -17.564430236816406

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009757505729794502
    2. ' ' → logprob: -4.6347575187683105
    3. '<|end|>' → logprob: -14.134757041931152
    4. '  ' → logprob: -14.759757041931152
    5. '   ' → logprob: -15.134757041931152
    6. '<|end|>' → logprob: -17.07225799560547
    7. '۰' → logprob: -17.57225799560547
    8. ' and' → logprob: -17.69725799560547
    9. '    ' → logprob: -17.69725799560547
    10. 'and' → logprob: -18.19725799560547

Token 76: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0019959660712629557
    2. 'and' → logprob: -6.251996040344238
    3. '<|end|>' → logprob: -10.126996040344238
    4. '<|end|>' → logprob: -11.251996040344238
    5. ' ' → logprob: -11.751996040344238
    6. '0' → logprob: -12.376996040344238
    7. '	and' → logprob: -13.376996040344238
    8. ' ' → logprob: -15.251996040344238
    9. 'a' → logprob: -16.001995086669922
    10. ' и' → logprob: -16.376995086669922

Token 77: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08146888762712479
    2. 'n' → logprob: -2.5814688205718994
    3. '0' → logprob: -6.4564690589904785
    4. ' ' → logprob: -6.9564690589904785
    5. '	n' → logprob: -10.20646858215332
    6. '<|end|>' → logprob: -11.83146858215332
    7. '<|end|>' → logprob: -12.33146858215332
    8. ' ' → logprob: -12.95646858215332
    9. ' н' → logprob: -14.33146858215332
    10. '  ' → logprob: -14.70646858215332

Token 78: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1128949299454689
    2. ' ==' → logprob: -2.2378950119018555
    3. '=' → logprob: -10.862895011901855
    4. '<|end|>' → logprob: -11.112895011901855
    5. '0' → logprob: -11.612895011901855
    6. ')==' → logprob: -11.987895011901855
    7. '<|end|>' → logprob: -11.987895011901855
    8. '===' → logprob: -12.362895011901855
    9. ')' → logprob: -12.612895011901855
    10. ' ' → logprob: -13.362895011901855

Token 79: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004621422383934259
    2. ' ' → logprob: -5.379621505737305
    3. '  ' → logprob: -14.629621505737305
    4. '   ' → logprob: -14.754621505737305
    5. ' ' → logprob: -15.504621505737305
    6. '```' → logprob: -17.192121505737305
    7. '۰' → logprob: -17.817121505737305
    8. '    ' → logprob: -18.504621505737305
    9. '	' → logprob: -18.567121505737305
    10. '٠' → logprob: -19.129621505737305

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '  ' → logprob: -17.375158309936523
    4. '   ' → logprob: -17.875158309936523
    5. '۰' → logprob: -18.687658309936523
    6. ' ' → logprob: -18.937658309936523
    7. '```' → logprob: -19.500158309936523
    8. ')' → logprob: -19.875158309936523
    9. '০' → logprob: -20.125158309936523
    10. '-' → logprob: -20.187658309936523

Token 81: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005355193745344877
    2. '       ' → logprob: -5.505355358123779
    3. '   ' → logprob: -7.255355358123779
    4. ':
' → logprob: -8.255354881286621
    5. '           ' → logprob: -8.255354881286621
    6. '<|end|>' → logprob: -11.130354881286621
    7. ':return' → logprob: -11.630354881286621
    8. '	break' → logprob: -12.380354881286621
    9. '.' → logprob: -12.380354881286621
    10. ' :' → logprob: -12.755354881286621

Token 82: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008598887361586094
    2. '       ' → logprob: -7.12585973739624
    3. ' break' → logprob: -11.375860214233398
    4. ':' → logprob: -11.500860214233398
    5. '		' → logprob: -11.750860214233398
    6. '   ' → logprob: -11.750860214233398
    7. '	       ' → logprob: -12.125860214233398
    8. '          ' → logprob: -12.750860214233398
    9. '               ' → logprob: -12.875860214233398
    10. '	break' → logprob: -13.625860214233398

Token 83: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5185175538063049
    2. ' break' → logprob: -1.0185174942016602
    3. 'break' (adapté à ' break') → logprob: -3.14351749420166
    4. '	break' → logprob: -8.64351749420166
    5. '       ' → logprob: -9.76851749420166
    6. '   ' → logprob: -10.01851749420166
    7. '               ' → logprob: -10.39351749420166
    8. 'return' → logprob: -11.64351749420166
    9. ' return' → logprob: -12.26851749420166
    10. '_break' → logprob: -12.51851749420166

Token 84: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032191623002290726
    2. '        ' → logprob: -4.657191753387451
    3. '<|end|>' → logprob: -4.657191753387451
    4. '        
' → logprob: -5.032191753387451
    5. '    ' → logprob: -5.907191753387451
    6. '   ' → logprob: -6.907191753387451
    7. '```' → logprob: -8.157191276550293
    8. '
' → logprob: -8.282191276550293
    9. '    
' → logprob: -8.532191276550293
    10. '      ' → logprob: -8.657191276550293

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012517773546278477
    2. '        ' → logprob: -5.012517929077148
    3. '    ' → logprob: -6.262517929077148
    4. '<|end|>' → logprob: -6.512517929077148
    5. '        
' → logprob: -7.137517929077148
    6. '   ' → logprob: -7.262517929077148
    7. '      ' → logprob: -8.637517929077148
    8. '[' → logprob: -8.887517929077148
    9. '```' → logprob: -9.012517929077148
    10. '    ' → logprob: -9.637517929077148

Token 86: ' buyers' (ID: 25359)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.8434111475944519
    2. '       ' → logprob: -1.3434112071990967
    3. ' dataset' → logprob: -2.0934112071990967
    4. ' data' → logprob: -3.0934112071990967
    5. ' coordinates' → logprob: -3.2184112071990967
    6. ' positions' → logprob: -4.093410968780518
    7. ' spaces' → logprob: -4.218410968780518
    8. '    ' → logprob: -4.343410968780518
    9. 'dataset' → logprob: -4.968410968780518
    10. 'points' → logprob: -5.093410968780518

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021869030315428972
    2. '=' → logprob: -6.1271867752075195
    3. ',' → logprob: -14.37718677520752
    4. '=[]' → logprob: -15.00218677520752
    5. '_' → logprob: -15.87718677520752
    6. 's' → logprob: -16.252187728881836
    7. '.' → logprob: -16.252187728881836
    8. ' ' → logprob: -16.627187728881836
    9. ' =
' → logprob: -16.752187728881836
    10. '[]' → logprob: -16.752187728881836

Token 88: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.10116081684827805
    2. ' []' → logprob: -2.351160764694214
    3. '[' → logprob: -7.476161003112793
    4. ' [' → logprob: -8.101161003112793
    5. '{}' → logprob: -10.351161003112793
    6. '[int' → logprob: -11.601161003112793
    7. 'set' → logprob: -12.101161003112793
    8. '[line' → logprob: -12.101161003112793
    9. '[]
' → logprob: -12.226161003112793
    10. '[]}' → logprob: -12.476161003112793

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17494194209575653
    2. '<|end|>' → logprob: -2.5499420166015625
    3. ' for' → logprob: -3.2999420166015625
    4. '	' → logprob: -3.9249420166015625
    5. 'for' → logprob: -4.5499420166015625
    6. '	for' → logprob: -5.0499420166015625
    7. '<|end|>' → logprob: -5.7999420166015625
    8. '	   ' → logprob: -6.7999420166015625
    9. '	       ' → logprob: -6.9249420166015625
    10. '		
' → logprob: -7.2999420166015625

Token 90: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4437503516674042
    2. ' for' → logprob: -1.1937503814697266
    3. '       ' → logprob: -3.0687503814697266
    4. '	for' → logprob: -4.818750381469727
    5. '   ' → logprob: -7.568750381469727
    6. '	   ' → logprob: -9.318750381469727
    7. '	' → logprob: -9.318750381469727
    8. '<|end|>' → logprob: -11.193750381469727
    9. ' ' → logprob: -11.568750381469727
    10. '	       ' → logprob: -12.693750381469727

Token 91: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.00041327282087877393
    2. '_' → logprob: -8.000412940979004
    3. ' i' → logprob: -9.625412940979004
    4. ' ' → logprob: -11.625412940979004
    5. ' ' → logprob: -13.125412940979004
    6. '_i' → logprob: -14.750412940979004
    7. ' __' → logprob: -15.375412940979004
    8. ' ‌' → logprob: -15.500412940979004
    9. 'i' → logprob: -15.750412940979004
    10. ' ▁' → logprob: -17.87541389465332

Token 92: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023653510957956314
    2. ' i' → logprob: -4.148653507232666
    3. ' range' → logprob: -5.648653507232666
    4. ' ' → logprob: -6.648653507232666
    5. ' buyer' → logprob: -6.773653507232666
    6. ' buyers' → logprob: -7.773653507232666
    7. ' _' → logprob: -8.148653984069824
    8. 'i' → logprob: -8.148653984069824
    9. 'in' → logprob: -8.398653984069824
    10. 'range' → logprob: -8.398653984069824

Token 93: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47412145137786865
    2. 'range' → logprob: -0.9741214513778687
    3. ' xrange' → logprob: -10.84912109375
    4. '	range' → logprob: -11.09912109375
    5. '(range' → logprob: -13.09912109375
    6. ' ' → logprob: -13.34912109375
    7. 'ange' → logprob: -13.59912109375
    8. '```' → logprob: -13.72412109375
    9. 'rang' → logprob: -13.97412109375
    10. '_range' → logprob: -13.97412109375

Token 94: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.20696385204792023
    2. '(' → logprob: -2.0819637775421143
    3. ' n' → logprob: -3.2069637775421143
    4. ' (' → logprob: -4.081964015960693
    5. ' range' → logprob: -5.831964015960693
    6. 'n' → logprob: -6.706964015960693
    7. '(range' → logprob: -7.456964015960693
    8. ' ' → logprob: -9.081963539123535
    9. ' in' → logprob: -10.956963539123535
    10. 'range' → logprob: -11.206963539123535

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003058873349800706
    2. ')' → logprob: -6.253058910369873
    3. ' ):' → logprob: -7.128058910369873
    4. '):
' → logprob: -8.753058433532715
    5. ':' → logprob: -9.628058433532715
    6. '   ' → logprob: -10.253058433532715
    7. '       ' → logprob: -10.628058433532715
    8. ',' → logprob: -10.878058433532715
    9. ' )' → logprob: -11.503058433532715
    10. '):
' → logprob: -13.253058433532715

Token 96: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.60829758644104
    2. '       ' → logprob: -1.10829758644104
    3. '<|end|>' → logprob: -3.10829758644104
    4. '    ' → logprob: -3.48329758644104
    5. ':' → logprob: -3.73329758644104
    6. '        ' → logprob: -5.483297348022461
    7. '<|end|>' → logprob: -5.483297348022461
    8. '           ' → logprob: -5.608297348022461
    9. ' ' → logprob: -5.983297348022461
    10. '    
' → logprob: -6.483297348022461

Token 97: ' b' (ID: 287)
  Prédit: ' buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' buyers' → logprob: -0.019817205145955086
    2. 'buyers' → logprob: -4.644817352294922
    3. ' line' → logprob: -4.894817352294922
    4. ' buy' → logprob: -7.769817352294922
    5. ' x' → logprob: -7.894817352294922
    6. ' buyer' → logprob: -8.144817352294922
    7. ' lines' → logprob: -8.519817352294922
    8. ' 
' → logprob: -8.644817352294922
    9. ' sellers' → logprob: -8.894817352294922
    10. '           ' → logprob: -8.894817352294922

Token 98: ',' (ID: 11)
  Prédit: 'uy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uy' → logprob: -0.11194538325071335
    2. 'uyer' → logprob: -2.361945390701294
    3. 'y' → logprob: -5.236945152282715
    4. '_line' → logprob: -6.486945152282715
    5. ' =' → logprob: -7.111945152282715
    6. '_' → logprob: -7.111945152282715
    7. 'u' → logprob: -7.236945152282715
    8. '_buy' → logprob: -7.361945152282715
    9. 'buyers' → logprob: -8.111945152282715
    10. ',' → logprob: -8.611945152282715

Token 99: ' k' (ID: 372)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.7804248332977295
    2. 'p' → logprob: -1.1554248332977295
    3. ' s' → logprob: -2.7804248332977295
    4. ' d' → logprob: -3.0304248332977295
    5. 'd' → logprob: -3.4054248332977295
    6. 's' → logprob: -3.6554248332977295
    7. 'a' → logprob: -4.530425071716309
    8. ' w' → logprob: -4.655425071716309
    9. 'w' → logprob: -5.030425071716309
    10. ' t' → logprob: -5.280425071716309

Token 100: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6519428491592407
    2. ' =' → logprob: -0.7769428491592407
    3. '=' → logprob: -4.276942729949951
    4. ' ,' → logprob: -5.401942729949951
    5. ' ' → logprob: -8.40194320678711
    6. '   ' → logprob: -8.65194320678711
    7. '  ' → logprob: -9.40194320678711
    8. '    ' → logprob: -10.02694320678711
    9. 'e' → logprob: -10.40194320678711
    10. '	' → logprob: -10.40194320678711

Token 101: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0038265567272901535
    2. 'map' → logprob: -5.62882661819458
    3. ' ' → logprob: -8.628826141357422
    4. ' lines' → logprob: -10.628826141357422
    5. '    ' → logprob: -12.003826141357422
    6. '	map' → logprob: -12.128826141357422
    7. ' [' → logprob: -12.628826141357422
    8. '[' → logprob: -12.878826141357422
    9. '(map' → logprob: -13.628826141357422
    10. '  ' → logprob: -14.128826141357422

Token 102: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0046249874867498875
    2. '(' → logprob: -5.379624843597412
    3. ' (' → logprob: -13.75462532043457
    4. '=int' → logprob: -14.00462532043457
    5. '<int' → logprob: -14.37962532043457
    6. '(in' → logprob: -14.50462532043457
    7. ',int' → logprob: -15.00462532043457
    8. '(lambda' → logprob: -15.00462532043457
    9. '[int' → logprob: -15.12962532043457
    10. '(str' → logprob: -15.25462532043457

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025983719155192375
    2. '(lines' → logprob: -3.7759838104248047
    3. '(' → logprob: -6.150983810424805
    4. ' ,' → logprob: -8.150983810424805
    5. ')' → logprob: -9.025983810424805
    6. '(),' → logprob: -9.275983810424805
    7. ' lines' → logprob: -10.775983810424805
    8. '<|end|>' → logprob: -10.900983810424805
    9. ',(' → logprob: -11.150983810424805
    10. '	lines' → logprob: -11.275983810424805

Token 104: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.10024506598711014
    2. 'lines' → logprob: -2.3502449989318848
    3. '(lines' → logprob: -10.475245475769043
    4. ')' → logprob: -12.350245475769043
    5. '	lines' → logprob: -12.350245475769043
    6. ' )' → logprob: -14.350245475769043
    7. ' ' → logprob: -14.975245475769043
    8. '.lines' → logprob: -15.600245475769043
    9. ' ' → logprob: -16.100244522094727
    10. '_lines' → logprob: -16.225244522094727

Token 105: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.005961510818451643
    2. '[' → logprob: -5.1309614181518555
    3. ' [' → logprob: -11.255961418151855
    4. '   ' → logprob: -12.130961418151855
    5. '[index' → logprob: -12.755961418151855
    6. ')[' → logprob: -12.880961418151855
    7. '[id' → logprob: -13.505961418151855
    8. '```' → logprob: -13.505961418151855
    9. '[
' → logprob: -13.755961418151855
    10. 'idx' → logprob: -13.755961418151855

Token 106: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0009164590737782419
    2. '.split' → logprob: -8.000916481018066
    3. ').' → logprob: -8.750916481018066
    4. '[idx' → logprob: -8.750916481018066
    5. ']' → logprob: -9.000916481018066
    6. '][' → logprob: -10.000916481018066
    7. ''].' → logprob: -10.250916481018066
    8. '[' → logprob: -11.125916481018066
    9. ' ].' → logprob: -11.625916481018066
    10. '       ' → logprob: -11.625916481018066

Token 107: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.723352049040841e-06
    2. 'strip' → logprob: -12.375004768371582
    3. ' split' → logprob: -14.500004768371582
    4. 'rstrip' → logprob: -17.625003814697266
    5. '(split' → logprob: -18.250003814697266
    6. 'spl' → logprob: -18.500003814697266
    7. '.split' → logprob: -18.875003814697266
    8. 'plit' → logprob: -19.625003814697266
    9. 's' → logprob: -20.250003814697266
    10. ' ' → logprob: -20.875003814697266

Token 108: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.16161462664604187
    2. '()' → logprob: -2.5366146564483643
    3. ')' → logprob: -2.6616146564483643
    4. '())
' → logprob: -8.536614418029785
    5. '(' → logprob: -10.286614418029785
    6. '()
' → logprob: -12.036614418029785
    7. ' ())' → logprob: -12.536614418029785
    8. ' )' → logprob: -12.661614418029785
    9. '('' → logprob: -12.786614418029785
    10. ')
' → logprob: -13.036614418029785

Token 109: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14473429322242737
    2. '<|end|>' → logprob: -2.6447343826293945
    3. '       ' → logprob: -2.8947343826293945
    4. '<|end|>' → logprob: -6.3947343826293945
    5. ' ' → logprob: -6.5197343826293945
    6. '		' → logprob: -7.0197343826293945
    7. '   ' → logprob: -7.2697343826293945
    8. '               ' → logprob: -7.6447343826293945
    9. '            
' → logprob: -7.7697343826293945
    10. ' 
' → logprob: -7.8947343826293945

Token 110: ' buyers' (ID: 25359)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5680445432662964
    2. '<|end|>' → logprob: -1.0680445432662964
    3. 'idx' → logprob: -3.693044662475586
    4. '           ' → logprob: -3.693044662475586
    5. ' ' → logprob: -4.068044662475586
    6. '<|end|>' → logprob: -5.193044662475586
    7. '   ' → logprob: -5.818044662475586
    8. ' idx' → logprob: -5.943044662475586
    9. ' 
' → logprob: -5.943044662475586
    10. '	idx' → logprob: -6.193044662475586

Token 111: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0822640135884285
    2. '       ' → logprob: -3.457263946533203
    3. '<|end|>' → logprob: -3.832263946533203
    4. '.' → logprob: -4.457263946533203
    5. '<|end|>' → logprob: -6.082263946533203
    6. '        ' → logprob: -6.457263946533203
    7. '.extend' → logprob: -6.457263946533203
    8. '.setdefault' → logprob: -6.582263946533203
    9. '[idx' → logprob: -6.707263946533203
    10. '           ' → logprob: -6.707263946533203

Token 112: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.38691604137420654
    2. '(' → logprob: -1.1369160413742065
    3. ' (' → logprob: -10.636916160583496
    4. '(b' → logprob: -11.886916160583496
    5. '(
' → logprob: -12.386916160583496
    6. ' ((' → logprob: -12.636916160583496
    7. '(('' → logprob: -13.136916160583496
    8. '(((' → logprob: -13.886916160583496
    9. '([' → logprob: -14.011916160583496
    10. '((_' → logprob: -14.386916160583496

Token 113: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0031777136027812958
    2. ' b' → logprob: -5.753177642822266
    3. '	b' → logprob: -18.128177642822266
    4. ')b' → logprob: -18.503177642822266
    5. ' ' → logprob: -19.128177642822266
    6. '   ' → logprob: -19.628177642822266
    7. ' ' → logprob: -20.003177642822266
    8. '    ' → logprob: -21.003177642822266
    9. '_b' → logprob: -21.378177642822266
    10. '(b' → logprob: -21.503177642822266

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.7888184528565034e-05
    2. ',k' → logprob: -10.2500581741333
    3. ' ,' → logprob: -10.7500581741333
    4. ')' → logprob: -15.3750581741333
    5. ',)' → logprob: -15.3750581741333
    6. ',
' → logprob: -15.8750581741333
    7. ',b' → logprob: -16.000057220458984
    8. '),' → logprob: -16.625057220458984
    9. ' ' → logprob: -17.375057220458984
    10. ',n' → logprob: -17.500057220458984

Token 115: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.693148672580719
    2. ' k' → logprob: -0.693148672580719
    3. ' ' → logprob: -14.068148612976074
    4. ' 
' → logprob: -15.443148612976074
    5. ' ' → logprob: -15.568148612976074
    6. '	k' → logprob: -15.568148612976074
    7. ',k' → logprob: -16.94314956665039
    8. ')' → logprob: -17.06814956665039
    9. '(k' → logprob: -17.69314956665039
    10. '"k' → logprob: -17.94314956665039

Token 116: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.13135391473770142
    2. '))
' → logprob: -2.1313538551330566
    3. ')' → logprob: -5.506353855133057
    4. ',' → logprob: -8.381354331970215
    5. ')
' → logprob: -9.881354331970215
    6. '           ' → logprob: -10.881354331970215
    7. '))
' → logprob: -11.006354331970215
    8. '       ' → logprob: -11.881354331970215
    9. ' ))' → logprob: -11.881354331970215
    10. '))

' → logprob: -12.131354331970215

Token 117: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16415075957775116
    2. '       ' → logprob: -2.1641507148742676
    3. '
' → logprob: -3.5391507148742676
    4. '   ' → logprob: -5.414150714874268
    5. '<|end|>' → logprob: -7.039150714874268
    6. '```' → logprob: -7.664150714874268
    7. '\n' → logprob: -7.789150714874268
    8. 'idx' → logprob: -7.914150714874268
    9. '	       ' → logprob: -8.914151191711426
    10. '               ' → logprob: -9.289151191711426

Token 118: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.10147741436958313
    2. ' idx' → logprob: -2.3514773845672607
    3. '	idx' → logprob: -7.35147762298584
    4. '       ' → logprob: -7.97647762298584
    5. '           ' → logprob: -8.47647762298584
    6. '_idx' → logprob: -10.72647762298584
    7. '[idx' → logprob: -10.97647762298584
    8. '   ' → logprob: -10.97647762298584
    9. '
' → logprob: -12.10147762298584
    10. '        
' → logprob: -12.85147762298584

Token 119: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31617268919944763
    2. '+=' → logprob: -1.31617271900177
    3. '+' → logprob: -6.3161725997924805
    4. '++' → logprob: -7.3161725997924805
    5. '```' → logprob: -8.06617259979248
    6. ' +' → logprob: -9.69117259979248
    7. ' ++' → logprob: -10.56617259979248
    8. '`' → logprob: -11.94117259979248
    9. '<|end|>' → logprob: -12.31617259979248
    10. ' ' → logprob: -12.56617259979248

Token 120: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.020542122423648834
    2. ' ' → logprob: -3.8955421447753906
    3. ' ' → logprob: -16.14554214477539
    4. '```' → logprob: -16.77054214477539
    5. '１' → logprob: -17.89554214477539
    6. '   ' → logprob: -19.08304214477539
    7. '۱' → logprob: -19.27054214477539
    8. '​' → logprob: -19.77054214477539
    9. '`' → logprob: -19.83304214477539
    10. '2' → logprob: -20.08304214477539

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -18.375001907348633
    4. '１' → logprob: -19.437501907348633
    5. '۱' → logprob: -20.125001907348633
    6. '   ' → logprob: -20.437501907348633
    7. '0' → logprob: -20.687501907348633
    8. '' → logprob: -20.875001907348633
    9. '2' → logprob: -20.937501907348633
    10. ' ' → logprob: -21.000001907348633

Token 122: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018365412252023816
    2. '<|end|>' → logprob: -6.626836776733398
    3. 'datasets' → logprob: -8.626836776733398
    4. '   ' → logprob: -8.751836776733398
    5. '        
' → logprob: -10.376836776733398
    6. ',' → logprob: -10.626836776733398
    7. '      ' → logprob: -11.001836776733398
    8. '           ' → logprob: -11.001836776733398
    9. '```' → logprob: -11.001836776733398
    10. ')' → logprob: -11.126836776733398

Token 123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003710411721840501
    2. '   ' → logprob: -6.2537102699279785
    3. '<|end|>' → logprob: -7.5037102699279785
    4. 'datasets' → logprob: -7.6287102699279785
    5. ')' → logprob: -8.378710746765137
    6. '           ' → logprob: -9.378710746765137
    7. '[' → logprob: -9.878710746765137
    8. '```' → logprob: -9.878710746765137
    9. ',' → logprob: -10.003710746765137
    10. '	' → logprob: -10.003710746765137

Token 124: ' s' (ID: 265)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -0.043886393308639526
    2. '       ' → logprob: -3.418886423110962
    3. ' datasets' → logprob: -5.168886184692383
    4. '   ' → logprob: -6.668886184692383
    5. 'd' → logprob: -6.793886184692383
    6. 'data' → logprob: -7.168886184692383
    7. 'dataset' → logprob: -7.918886184692383
    8. '        
' → logprob: -9.668886184692383
    9. '<|end|>' → logprob: -9.668886184692383
    10. ' data' → logprob: -9.793886184692383

Token 125: ' =' (ID: 314)
  Prédit: 'ets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -1.0468178987503052
    2. 'ales' → logprob: -1.4218178987503052
    3. 'ellers' → logprob: -1.6718178987503052
    4. 't' → logprob: -2.9218177795410156
    5. ' =' → logprob: -3.5468177795410156
    6. 'old' → logprob: -3.7968177795410156
    7. 'et' → logprob: -4.046817779541016
    8. 'ources' → logprob: -4.546817779541016
    9. 'ell' → logprob: -4.671817779541016
    10. 'paces' → logprob: -4.671817779541016

Token 126: ' []
' (ID: 8911)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.1593439280986786
    2. 'lines' → logprob: -2.034343957901001
    3. ' list' → logprob: -4.909343719482422
    4. ' int' → logprob: -5.909343719482422
    5. 'list' → logprob: -6.534343719482422
    6. 'int' → logprob: -6.534343719482422
    7. ' [' → logprob: -7.034343719482422
    8. ' sys' → logprob: -7.409343719482422
    9. ' set' → logprob: -8.034343719482422
    10. ' ' → logprob: -8.409343719482422

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016395384445786476
    2. '<|end|>' → logprob: -4.141395568847656
    3. '<|end|>' → logprob: -8.891395568847656
    4. '   ' → logprob: -9.891395568847656
    5. ' for' → logprob: -10.141395568847656
    6. '	' → logprob: -10.641395568847656
    7. 'for' → logprob: -10.641395568847656
    8. '	   ' → logprob: -10.766395568847656
    9. ' ' → logprob: -11.141395568847656
    10. '	       ' → logprob: -11.641395568847656

Token 128: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16607607901096344
    2. '       ' → logprob: -2.416076183319092
    3. ' for' → logprob: -2.791076183319092
    4. '   ' → logprob: -7.041076183319092
    5. '<|end|>' → logprob: -7.166076183319092
    6. '	for' → logprob: -7.916076183319092
    7. 'while' → logprob: -9.541075706481934
    8. ')' → logprob: -10.291075706481934
    9. '	' → logprob: -10.416075706481934
    10. '<|end|>' → logprob: -10.666075706481934

Token 129: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.48128774762153625
    2. '_' → logprob: -0.9812877178192139
    3. ' i' → logprob: -4.981287956237793
    4. 'i' → logprob: -8.981287956237793
    5. ' in' → logprob: -9.606287956237793
    6. ' y' → logprob: -10.481287956237793
    7. ' ' → logprob: -10.606287956237793
    8. '_i' → logprob: -10.856287956237793
    9. ' j' → logprob: -11.606287956237793
    10. ' b' → logprob: -12.481287956237793

Token 130: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02378564514219761
    2. '_' → logprob: -4.023785591125488
    3. ' range' → logprob: -5.273785591125488
    4. ' in' → logprob: -8.523785591125488
    5. ' _' → logprob: -9.523785591125488
    6. '_range' → logprob: -9.523785591125488
    7. 'in' → logprob: -9.648785591125488
    8. '(range' → logprob: -10.398785591125488
    9. 's' → logprob: -10.773785591125488
    10. ' xrange' → logprob: -11.398785591125488

Token 131: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010516269830986857
    2. ' range' → logprob: -6.876051425933838
    3. 's' → logprob: -11.626051902770996
    4. '(range' → logprob: -12.751051902770996
    5. ')' → logprob: -13.501051902770996
    6. 'buyers' → logprob: -13.501051902770996
    7. 'r' → logprob: -13.626051902770996
    8. '(' → logprob: -14.376051902770996
    9. 'lines' → logprob: -14.626051902770996
    10. 'rang' → logprob: -15.126051902770996

Token 132: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.5898213386535645
    2. '(n' → logprob: -1.4648213386535645
    3. '(X' → logprob: -1.7148213386535645
    4. '(' → logprob: -3.5898213386535645
    5. '(k' → logprob: -5.2148213386535645
    6. '(s' → logprob: -8.214820861816406
    7. '((' → logprob: -8.339820861816406
    8. '(y' → logprob: -8.339820861816406
    9. 'Y' → logprob: -8.464820861816406
    10. 'n' → logprob: -8.839820861816406

Token 133: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006988536333665252
    2. '):
' → logprob: -7.750699043273926
    3. ')' → logprob: -9.000699043273926
    4. ' ):' → logprob: -9.375699043273926
    5. '+' → logprob: -10.750699043273926
    6. '   ' → logprob: -10.875699043273926
    7. ':' → logprob: -11.875699043273926
    8. '*' → logprob: -12.250699043273926
    9. '       ' → logprob: -13.125699043273926
    10. ',' → logprob: -13.875699043273926

Token 134: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16083775460720062
    2. '           ' → logprob: -2.4108376502990723
    3. ' s' → logprob: -3.2858376502990723
    4. 's' → logprob: -4.285837650299072
    5. '   ' → logprob: -5.785837650299072
    6. '<|end|>' → logprob: -6.785837650299072
    7. '
' → logprob: -7.535837650299072
    8. '               ' → logprob: -7.535837650299072
    9. ',' → logprob: -7.910837650299072
    10. '(s' → logprob: -8.16083812713623

Token 135: ' row' (ID: 5225)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2548304498195648
    2. 's' → logprob: -1.5048304796218872
    3. ' row' → logprob: -6.504830360412598
    4. ' line' → logprob: -7.379830360412598
    5. 'row' (adapté à ' row') → logprob: -8.129830360412598
    6. 'line' → logprob: -8.379830360412598
    7. ' parts' → logprob: -9.754830360412598
    8. '_s' → logprob: -10.379830360412598
    9. '           ' → logprob: -10.754830360412598
    10. ' ' → logprob: -11.317330360412598

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5809734463691711
    2. '=' → logprob: -0.8309734463691711
    3. '.append' → logprob: -5.5809736251831055
    4. '=[]' → logprob: -7.2059736251831055
    5. '_' → logprob: -9.205973625183105
    6. '=line' → logprob: -9.830973625183105
    7. '.extend' → logprob: -10.080973625183105
    8. '_line' → logprob: -10.205973625183105
    9. ')' → logprob: -10.330973625183105
    10. '   ' → logprob: -10.330973625183105

Token 137: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.017243579030036926
    2. ' list' → logprob: -4.142243385314941
    3. 'lines' → logprob: -6.767243385314941
    4. ' lines' → logprob: -9.892243385314941
    5. '[' → logprob: -12.642243385314941
    6. '[list' → logprob: -13.642243385314941
    7. 'sys' → logprob: -14.267243385314941
    8. ' [' → logprob: -14.517243385314941
    9. 'tuple' → logprob: -15.142243385314941
    10. '[]' → logprob: -15.392243385314941

Token 138: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.1054253011243418e-05
    2. 'map' → logprob: -11.375020980834961
    3. '(' → logprob: -11.625020980834961
    4. '(int' → logprob: -16.37502098083496
    5. ' map' → logprob: -16.50002098083496
    6. '()' → logprob: -16.75002098083496
    7. ' (' → logprob: -17.25002098083496
    8. '	map' → logprob: -17.62502098083496
    9. '(lines' → logprob: -17.62502098083496
    10. ',map' → logprob: -17.87502098083496

Token 139: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006353547796607018
    2. '(' → logprob: -7.500635147094727
    3. 'int' → logprob: -9.625635147094727
    4. '(lambda' → logprob: -12.500635147094727
    5. '[int' → logprob: -12.625635147094727
    6. ',int' → logprob: -12.875635147094727
    7. '=int' → logprob: -13.375635147094727
    8. '<int' → logprob: -13.375635147094727
    9. ')' → logprob: -13.625635147094727
    10. ' (' → logprob: -13.750635147094727

Token 140: ',' (ID: 11)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.22747689485549927
    2. ',' → logprob: -1.6024768352508545
    3. '(' → logprob: -6.602477073669434
    4. '<|end|>' → logprob: -7.602477073669434
    5. ' lines' → logprob: -9.727477073669434
    6. ' ,' → logprob: -9.977477073669434
    7. '	lines' → logprob: -10.977477073669434
    8. ',line' → logprob: -11.352477073669434
    9. '(tokens' → logprob: -11.727477073669434
    10. '(parts' → logprob: -11.852477073669434

Token 141: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.47527405619621277
    2. ' lines' → logprob: -0.9752740859985352
    3. '(lines' → logprob: -6.850274085998535
    4. 'sys' → logprob: -10.225274085998535
    5. '	lines' → logprob: -10.600274085998535
    6. ' sys' → logprob: -10.600274085998535
    7. '   ' → logprob: -10.725274085998535
    8. ')' → logprob: -11.225274085998535
    9. ' ' → logprob: -12.100274085998535
    10. ',' → logprob: -12.225274085998535

Token 142: '[idx' (ID: 25582)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.00029852005536668
    2. ' lines' → logprob: -9.250298500061035
    3. '[' → logprob: -9.375298500061035
    4. 'lines' → logprob: -10.000298500061035
    5. '[idx' → logprob: -10.875298500061035
    6. ')' → logprob: -11.250298500061035
    7. '	lines' → logprob: -11.500298500061035
    8. '(' → logprob: -11.625298500061035
    9. ',' → logprob: -11.750298500061035
    10. '(idx' → logprob: -12.375298500061035

Token 143: '].' (ID: 1651)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01903105527162552
    2. '.split' → logprob: -4.019031047821045
    3. '.strip' → logprob: -7.769031047821045
    4. ')' → logprob: -9.394031524658203
    5. '()' → logprob: -9.394031524658203
    6. '].' → logprob: -9.519031524658203
    7. '.readline' → logprob: -9.769031524658203
    8. ' .' → logprob: -10.144031524658203
    9. '.' → logprob: -10.394031524658203
    10. ']))' → logprob: -11.144031524658203

Token 144: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009172935388050973
    2. 'strip' → logprob: -7.000917434692383
    3. ' split' → logprob: -12.500917434692383
    4. 'rstrip' → logprob: -13.250917434692383
    5. '(split' → logprob: -15.875917434692383
    6. ')' → logprob: -16.875917434692383
    7. '.split' → logprob: -16.875917434692383
    8. 's' → logprob: -17.500917434692383
    9. ' strip' → logprob: -17.625917434692383
    10. 'replace' → logprob: -18.625917434692383

Token 145: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.010046463459730148
    2. '()' → logprob: -5.260046482086182
    3. '))' → logprob: -5.510046482086182
    4. '()))
' → logprob: -7.635046482086182
    5. '())' → logprob: -8.385046005249023
    6. '()));' → logprob: -11.260046005249023
    7. '()))

' → logprob: -11.635046005249023
    8. '(' → logprob: -11.635046005249023
    9. '(),' → logprob: -13.135046005249023
    10. ')' → logprob: -13.510046005249023

Token 146: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12015851587057114
    2. '       ' → logprob: -2.8701584339141846
    3. ')' → logprob: -3.4951584339141846
    4. '<|end|>' → logprob: -4.370158672332764
    5. 'idx' → logprob: -5.620158672332764
    6. 's' → logprob: -5.870158672332764
    7. ' lines' → logprob: -6.495158672332764
    8. '            
' → logprob: -6.495158672332764
    9. '<|end|>' → logprob: -7.120158672332764
    10. 'lines' → logprob: -7.495158672332764

Token 147: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.2624392509460449
    2. '       ' → logprob: -2.262439250946045
    3. 'idx' → logprob: -2.637439250946045
    4. '           ' → logprob: -3.637439250946045
    5. ' s' → logprob: -3.762439250946045
    6. ' idx' → logprob: -6.637439250946045
    7. ' lines' → logprob: -6.637439250946045
    8. '<|end|>' → logprob: -7.512439250946045
    9. '   ' → logprob: -7.887439250946045
    10. 'lines' → logprob: -8.262439727783203

Token 148: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005062076961621642
    2. '.extend' → logprob: -8.250506401062012
    3. '.' → logprob: -8.375506401062012
    4. '.app' → logprob: -11.375506401062012
    5. '.ap' → logprob: -13.500506401062012
    6. 'append' → logprob: -14.500506401062012
    7. ' .' → logprob: -14.875506401062012
    8. ' +=' → logprob: -15.625506401062012
    9. '.Append' → logprob: -15.875506401062012
    10. '.add' → logprob: -16.750505447387695

Token 149: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.10021809488534927
    2. '(' → logprob: -2.3502180576324463
    3. '(line' → logprob: -12.100217819213867
    4. '(
' → logprob: -13.100217819213867
    5. ' (' → logprob: -13.600217819213867
    6. '(rows' → logprob: -14.225217819213867
    7. 'row' → logprob: -14.850217819213867
    8. '((' → logprob: -14.850217819213867
    9. '(list' → logprob: -14.850217819213867
    10. '(tuple' → logprob: -15.475217819213867

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31368088722229004
    2. ')
' → logprob: -1.31368088722229
    3. '           ' → logprob: -8.688680648803711
    4. '       ' → logprob: -9.313680648803711
    5. ')
' → logprob: -9.313680648803711
    6. '   ' → logprob: -10.313680648803711
    7. '<|end|>' → logprob: -11.438680648803711
    8. '               ' → logprob: -11.813680648803711
    9. '
' → logprob: -12.688680648803711
    10. ' ' → logprob: -13.313680648803711

Token 151: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002175719942897558
    2. '       ' → logprob: -6.252175807952881
    3. 'idx' → logprob: -9.127175331115723
    4. '	       ' → logprob: -10.127175331115723
    5. '   ' → logprob: -10.752175331115723
    6. '<|end|>' → logprob: -11.127175331115723
    7. '
' → logprob: -11.252175331115723
    8. '	   ' → logprob: -11.252175331115723
    9. '		' → logprob: -11.627175331115723
    10. '               ' → logprob: -12.377175331115723

Token 152: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.007413651328533888
    2. ' idx' → logprob: -5.007413864135742
    3. '   ' → logprob: -7.882413864135742
    4. '       ' → logprob: -8.507413864135742
    5. '	idx' → logprob: -9.257413864135742
    6. '           ' → logprob: -11.507413864135742
    7. '[idx' → logprob: -11.882413864135742
    8. '_idx' → logprob: -12.382413864135742
    9. '.idx' → logprob: -14.507413864135742
    10. '(idx' → logprob: -14.757413864135742

Token 153: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0076234228909015656
    2. ' +=' → logprob: -5.007623195648193
    3. '+' → logprob: -7.007623195648193
    4. '++' → logprob: -13.632623672485352
    5. ']+=' → logprob: -14.507623672485352
    6. '```' → logprob: -14.632623672485352
    7. '+++' → logprob: -16.25762367248535
    8. '+='' → logprob: -16.63262367248535
    9. '+="' → logprob: -16.88262367248535
    10. '=' → logprob: -16.88262367248535

Token 154: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011049000546336174
    2. ' ' → logprob: -4.511048793792725
    3. '```' → logprob: -14.511049270629883
    4. ' ' → logprob: -14.886049270629883
    5. '   ' → logprob: -16.511049270629883
    6. '１' → logprob: -16.698549270629883
    7. '​' → logprob: -17.136049270629883
    8. '0' → logprob: -17.198549270629883
    9. '۱' → logprob: -17.636049270629883
    10. '(' → logprob: -17.698549270629883

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.627176768844947e-05
    2. ' ' → logprob: -9.250096321105957
    3. '```' → logprob: -16.00009536743164
    4. '   ' → logprob: -18.18759536743164
    5. '１' → logprob: -18.43759536743164
    6. ' ' → logprob: -18.50009536743164
    7. 'len' → logprob: -18.68759536743164
    8. '
' → logprob: -19.62509536743164
    9. '۱' → logprob: -19.81259536743164
    10. ')' → logprob: -20.12509536743164

Token 156: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03632146492600441
    2. '   ' → logprob: -3.4113214015960693
    3. 'datasets' → logprob: -6.411321640014648
    4. '<|end|>' → logprob: -7.161321640014648
    5. 'd' → logprob: -9.661321640014648
    6. ' datasets' → logprob: -9.661321640014648
    7. ',d' → logprob: -11.286321640014648
    8. '```' → logprob: -11.411321640014648
    9. '        
' → logprob: -11.536321640014648
    10. '
' → logprob: -11.536321640014648

Token 157: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02668178454041481
    2. '       ' → logprob: -3.651681900024414
    3. '<|end|>' → logprob: -8.776681900024414
    4. ' return' → logprob: -9.901681900024414
    5. ')' → logprob: -10.276681900024414
    6. 'datasets' → logprob: -10.401681900024414
    7. '    
' → logprob: -11.151681900024414
    8. 'return' → logprob: -11.276681900024414
    9. '    ' → logprob: -11.276681900024414
    10. ' datasets' → logprob: -11.526681900024414

Token 158: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' (adapté à ' datasets') → logprob: -0.04827333986759186
    2. '       ' → logprob: -3.2982733249664307
    3. '   ' → logprob: -4.79827356338501
    4. 'd' → logprob: -6.54827356338501
    5. '
' → logprob: -8.298273086547852
    6. ' datasets' → logprob: -9.048273086547852
    7. 'data' → logprob: -9.798273086547852
    8. ' ' → logprob: -11.173273086547852
    9. '        
' → logprob: -11.298273086547852
    10. '	d' → logprob: -11.548273086547852

Token 159: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008116515236906707
    2. '.' → logprob: -7.125811576843262
    3. '.extend' → logprob: -13.250811576843262
    4. '.add' → logprob: -13.375811576843262
    5. '.push' → logprob: -13.750811576843262
    6. ' .' → logprob: -14.250811576843262
    7. '.app' → logprob: -14.375811576843262
    8. '.setdefault' → logprob: -14.500811576843262
    9. '.Append' → logprob: -14.875811576843262
    10. '.ap' → logprob: -15.250811576843262

Token 160: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00033879990223795176
    2. '(' → logprob: -8.000338554382324
    3. '(((' → logprob: -12.875338554382324
    4. ' ((' → logprob: -14.500338554382324
    5. '(
' → logprob: -15.375338554382324
    6. ' ' → logprob: -17.50033950805664
    7. '(X' → logprob: -18.00033950805664
    8. '([' → logprob: -18.25033950805664
    9. '([(' → logprob: -18.37533950805664
    10. ' (' → logprob: -18.62533950805664

Token 161: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0002680112374946475
    2. '(X' → logprob: -8.25026798248291
    3. ' X' → logprob: -12.00026798248291
    4. ' (' → logprob: -15.75026798248291
    5. 'datasets' → logprob: -15.87526798248291
    6. '(' → logprob: -16.000268936157227
    7. '   ' → logprob: -17.375268936157227
    8. ')' → logprob: -18.500268936157227
    9. '[X' → logprob: -18.500268936157227
    10. ',X' → logprob: -18.875268936157227

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.674858301877975e-05
    2. ',Y' → logprob: -9.500096321105957
    3. ' ,' → logprob: -11.250096321105957
    4. ',
' → logprob: -11.750096321105957
    5. ',

' → logprob: -15.125096321105957
    6. ',y' → logprob: -15.250096321105957
    7. ',X' → logprob: -15.875096321105957
    8. 'Y' → logprob: -16.375097274780273
    9. ',
' → logprob: -16.750097274780273
    10. '‌,' → logprob: -17.875097274780273

Token 163: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.02324792370200157
    2. ' Y' → logprob: -3.7732479572296143
    3. ' buyers' → logprob: -14.023247718811035
    4. '   ' → logprob: -14.398247718811035
    5. 'buyers' → logprob: -14.523247718811035
    6. 'y' → logprob: -15.648247718811035
    7. ' ' → logprob: -16.39824867248535
    8. '	Y' → logprob: -16.52324867248535
    9. 'X' → logprob: -17.02324867248535
    10. ')' → logprob: -17.02324867248535

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.664371848164592e-05
    2. ',b' → logprob: -11.750016212463379
    3. ' ,' → logprob: -11.875016212463379
    4. ',
' → logprob: -13.625016212463379
    5. ',n' → logprob: -14.625016212463379
    6. ',

' → logprob: -17.750017166137695
    7. ',y' → logprob: -18.000017166137695
    8. 'buyers' → logprob: -18.875017166137695
    9. ' buyers' → logprob: -19.250017166137695
    10. '),' → logprob: -19.250017166137695

Token 165: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16311095654964447
    2. 'buyers' → logprob: -2.0381109714508057
    3. ' buyers' → logprob: -4.538110733032227
    4. ' n' → logprob: -4.663110733032227
    5. 'b' → logprob: -9.538110733032227
    6. 'buyer' → logprob: -11.538110733032227
    7. 'buy' → logprob: -12.163110733032227
    8. '   ' → logprob: -13.038110733032227
    9. '	n' → logprob: -13.413110733032227
    10. ' ' → logprob: -14.038110733032227

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.054500666621607e-06
    2. ',b' → logprob: -13.12500286102295
    3. ' ,' → logprob: -14.62500286102295
    4. ',
' → logprob: -15.25000286102295
    5. ')' → logprob: -15.62500286102295
    6. ',

' → logprob: -16.125003814697266
    7. '),' → logprob: -19.000003814697266
    8. '‌,' → logprob: -19.375003814697266
    9. ',y' → logprob: -19.875003814697266
    10. '

' → logprob: -19.875003814697266

Token 167: ' buyers' (ID: 25359)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.06200835481286049
    2. ' buyers' → logprob: -2.8120083808898926
    3. 'buy' → logprob: -10.312007904052734
    4. 'b' → logprob: -12.312007904052734
    5. 'buyer' → logprob: -12.937007904052734
    6. ' buy' → logprob: -15.937007904052734
    7. '   ' → logprob: -16.062007904052734
    8. '-buy' → logprob: -17.062007904052734
    9. 'boys' → logprob: -17.187007904052734
    10. 'bu' → logprob: -17.187007904052734

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.465036105713807e-06
    2. ',s' → logprob: -12.000007629394531
    3. ' ,' → logprob: -13.750007629394531
    4. ',
' → logprob: -16.12500762939453
    5. ')' → logprob: -17.00000762939453
    6. 's' → logprob: -17.12500762939453
    7. ',)' → logprob: -19.25000762939453
    8. '),' → logprob: -19.37500762939453
    9. '))' → logprob: -19.37500762939453
    10. ',n' → logprob: -19.62500762939453

Token 169: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0067154900170862675
    2. ' s' → logprob: -5.006715297698975
    3. '`s' → logprob: -16.756715774536133
    4. '   ' → logprob: -17.006715774536133
    5. '	s' → logprob: -17.131715774536133
    6. ' ' → logprob: -17.131715774536133
    7. ''s' → logprob: -17.631715774536133
    8. ' ' → logprob: -17.881715774536133
    9. '_s' → logprob: -18.631715774536133
    10. ')' → logprob: -19.256715774536133

Token 170: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1002294272184372
    2. '))' → logprob: -2.350229501724243
    3. ')
' → logprob: -11.350229263305664
    4. '))
' → logprob: -11.475229263305664
    5. ')))' → logprob: -15.100229263305664
    6. ')`' → logprob: -16.475229263305664
    7. ' )' → logprob: -16.600229263305664
    8. '),' → logprob: -17.225229263305664
    9. ')

' → logprob: -17.600229263305664
    10. '))

' → logprob: -17.725229263305664

Token 171: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003960616886615753
    2. ' return' → logprob: -6.628960609436035
    3. '    
' → logprob: -6.878960609436035
    4. 'return' → logprob: -6.878960609436035
    5. '       ' → logprob: -9.003960609436035
    6. '
' → logprob: -9.003960609436035
    7. ' 
' → logprob: -9.378960609436035
    8. '	return' → logprob: -9.628960609436035
    9. ' ' → logprob: -9.878960609436035
    10. '<|end|>' → logprob: -10.128960609436035

Token 172: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3380643129348755
    2. 'return' (adapté à ' return') → logprob: -1.3380643129348755
    3. ' return' → logprob: -3.713064193725586
    4. '	return' → logprob: -9.713064193725586
    5. '    
' → logprob: -11.338064193725586
    6. ':return' → logprob: -11.713064193725586
    7. ' ' → logprob: -12.213064193725586
    8. '       ' → logprob: -12.838064193725586
    9. '    ' → logprob: -13.588064193725586
    10. '<|end|>' → logprob: -13.713064193725586

Token 173: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -0.01416398212313652
    2. ' datasets' → logprob: -4.264163970947266
    3. 'dataset' → logprob: -15.014163970947266
    4. '.datasets' → logprob: -16.764163970947266
    5. 'datas' → logprob: -16.889163970947266
    6. 'dat' → logprob: -17.389163970947266
    7. 'd' → logprob: -17.639163970947266
    8. 'data' → logprob: -18.639163970947266
    9. ' dataset' → logprob: -19.014163970947266
    10. ' datas' → logprob: -19.639163970947266

Token 174: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 175: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006251106387935579
    2. '
' → logprob: -7.625625133514404
    3. '<|end|>' → logprob: -9.750624656677246
    4. 'for' → logprob: -9.875624656677246
    5. '```' → logprob: -11.250624656677246
    6. 'import' → logprob: -12.250624656677246
    7. '#' → logprob: -12.875624656677246
    8. 'data' → logprob: -13.750624656677246
    9. ' def' → logprob: -13.750624656677246
    10. '<|end|>' → logprob: -14.000624656677246

Token 176: ' check' (ID: 2371)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.10149065405130386
    2. ' solve' → logprob: -2.7264907360076904
    3. ' max' → logprob: -4.726490497589111
    4. 'main' → logprob: -4.851490497589111
    5. ' maximize' → logprob: -5.351490497589111
    6. 'solve' → logprob: -5.476490497589111
    7. ' process' → logprob: -6.101490497589111
    8. ' calculate' → logprob: -7.351490497589111
    9. 'max' → logprob: -7.601490497589111
    10. ' find' → logprob: -7.851490497589111

Token 177: '_rectangle' (ID: 166619)
  Prédit: '_space'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_space' → logprob: -0.9969717264175415
    2. '_' → logprob: -1.3719717264175415
    3. '(' → logprob: -2.246971607208252
    4. '_constraints' → logprob: -3.496971607208252
    5. '_balance' → logprob: -3.871971607208252
    6. '_profit' → logprob: -3.996971607208252
    7. '_valid' → logprob: -4.121971607208252
    8. '_s' → logprob: -4.246971607208252
    9. '_possible' → logprob: -4.246971607208252
    10. '_buy' → logprob: -4.371971607208252

Token 178: '_area' (ID: 34097)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7418993711471558
    2. '(X' → logprob: -0.7418993711471558
    3. '(x' → logprob: -3.6168994903564453
    4. '_area' → logprob: -4.241899490356445
    5. '(s' → logprob: -6.366899490356445
    6. '_size' → logprob: -7.366899490356445
    7. '():' → logprob: -7.491899490356445
    8. '_sum' → logprob: -7.491899490356445
    9. 's' → logprob: -7.991899490356445
    10. '(rect' → logprob: -7.991899490356445

Token 179: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03495391085743904
    2. '(X' → logprob: -3.5349538326263428
    3. '(x' → logprob: -6.284954071044922
    4. '():' → logprob: -6.534954071044922
    5. '(rect' → logprob: -6.909954071044922
    6. '(area' → logprob: -7.909954071044922
    7. ' (' → logprob: -8.909954071044922
    8. '(s' → logprob: -9.409954071044922
    9. '(space' → logprob: -9.659954071044922
    10. '(size' → logprob: -9.909954071044922

Token 180: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014415462501347065
    2. ' ,' → logprob: -4.639415264129639
    3. ',y' → logprob: -5.639415264129639
    4. '+' → logprob: -8.389415740966797
    5. ',x' → logprob: -8.889415740966797
    6. 's' → logprob: -8.889415740966797
    7. '):' → logprob: -9.514415740966797
    8. '   ' → logprob: -9.514415740966797
    9. '_,' → logprob: -9.639415740966797
    10. '1' → logprob: -9.764415740966797

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012802376877516508
    2. ' ,' → logprob: -6.751280307769775
    3. ',x' → logprob: -9.376279830932617
    4. ',y' → logprob: -10.751279830932617
    5. '1' → logprob: -14.251279830932617
    6. '_,' → logprob: -14.376279830932617
    7. ',int' → logprob: -15.001279830932617
    8. ',
' → logprob: -15.001279830932617
    9. ')' → logprob: -15.376279830932617
    10. '   ' → logprob: -15.376279830932617

Token 182: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.10046889632940292
    2. ' y' → logprob: -2.600468873977661
    3. 'x' → logprob: -3.850468873977661
    4. ' x' → logprob: -9.475468635559082
    5. '	y' → logprob: -14.225468635559082
    6. '   ' → logprob: -14.975468635559082
    7. '```' → logprob: -15.975468635559082
    8. ',y' → logprob: -16.6004695892334
    9. ',' → logprob: -16.8504695892334
    10. ' ' → logprob: -16.9754695892334

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0386212058365345
    2. ',' → logprob: -3.288621187210083
    3. ' ,' → logprob: -8.038620948791504
    4. ')' → logprob: -8.788620948791504
    5. ',x' → logprob: -10.413620948791504
    6. '2' → logprob: -10.413620948791504
    7. '_' → logprob: -11.038620948791504
    8. '_,' → logprob: -12.288620948791504
    9. ' ' → logprob: -12.288620948791504
    10. ',
' → logprob: -12.788620948791504

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.35706390615087e-05
    2. ' ,' → logprob: -10.375033378601074
    3. ',x' → logprob: -13.750033378601074
    4. ',
' → logprob: -14.250033378601074
    5. '_,' → logprob: -15.375033378601074
    6. ')' → logprob: -15.750033378601074
    7. '   ' → logprob: -16.12503433227539
    8. '),' → logprob: -17.00003433227539
    9. '‌,' → logprob: -18.25003433227539
    10. ',
' → logprob: -18.25003433227539

Token 185: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2519298195838928
    2. ' x' → logprob: -1.501929759979248
    3. ')' → logprob: -15.376930236816406
    4. ' ' → logprob: -15.876930236816406
    5. ',' → logprob: -16.001930236816406
    6. ',x' → logprob: -16.626930236816406
    7. '	x' → logprob: -16.626930236816406
    8. '   ' → logprob: -17.251930236816406
    9. ' )' → logprob: -17.751930236816406
    10. 'X' → logprob: -17.876930236816406

Token 186: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5237995982170105
    2. '1' → logprob: -0.8987995982170105
    3. ',' → logprob: -7.398799419403076
    4. ')' → logprob: -10.023799896240234
    5. ' ,' → logprob: -11.523799896240234
    6. '```' → logprob: -12.773799896240234
    7. ' ' → logprob: -13.648799896240234
    8. '₂' → logprob: -13.898799896240234
    9. '_,' → logprob: -14.273799896240234
    10. ' )' → logprob: -14.398799896240234

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.670925358776003e-05
    2. ' ,' → logprob: -9.875066757202148
    3. '_,' → logprob: -11.875066757202148
    4. '1' → logprob: -12.750066757202148
    5. ')' → logprob: -12.875066757202148
    6. ',y' → logprob: -14.125066757202148
    7. '<|end|>' → logprob: -14.625066757202148
    8. '```' → logprob: -14.750066757202148
    9. ',x' → logprob: -15.000066757202148
    10. ' ' → logprob: -15.625066757202148

Token 188: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.20146265625953674
    2. 'y' → logprob: -1.7014626264572144
    3. '<|end|>' → logprob: -10.326462745666504
    4. 'x' → logprob: -11.701462745666504
    5. ' x' → logprob: -12.451462745666504
    6. ' ' → logprob: -13.076462745666504
    7. ')' → logprob: -13.576462745666504
    8. ',' → logprob: -14.951462745666504
    9. ' )' → logprob: -15.701462745666504
    10. ',y' → logprob: -15.951462745666504

Token 189: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029873713850975037
    2. '1' → logprob: -3.5298736095428467
    3. ',' → logprob: -9.279873847961426
    4. ')' → logprob: -10.904873847961426
    5. ' ' → logprob: -12.154873847961426
    6. ' ,' → logprob: -13.029873847961426
    7. '```' → logprob: -13.279873847961426
    8. ' )' → logprob: -14.279873847961426
    9. '₂' → logprob: -14.404873847961426
    10. '3' → logprob: -15.404873847961426

Token 190: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006773988250643015
    2. ',' → logprob: -5.006773948669434
    3. ')' → logprob: -10.631773948669434
    4. ' ):' → logprob: -10.756773948669434
    5. '):
' → logprob: -11.506773948669434
    6. ':' → logprob: -13.506773948669434
    7. '   ' → logprob: -14.381773948669434
    8. ']:' → logprob: -15.631773948669434
    9. '():' → logprob: -15.756773948669434
    10. '}:' → logprob: -15.881773948669434

Token 191: ' lx' (ID: 153863)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19550026953220367
    2. ' s' → logprob: -2.195500373840332
    3. 'X' → logprob: -3.945500373840332
    4. ' X' → logprob: -4.820500373840332
    5. 'buyers' → logprob: -5.570500373840332
    6. 'S' → logprob: -5.945500373840332
    7. 'prices' → logprob: -5.945500373840332
    8. 'matrix' → logprob: -6.320500373840332
    9. ' buyers' → logprob: -6.445500373840332
    10. ')' → logprob: -6.445500373840332

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018058042973279953
    2. ' ,' → logprob: -4.643057823181152
    3. ')' → logprob: -6.268057823181152
    4. '_,' → logprob: -6.268057823181152
    5. '1' → logprob: -6.518057823181152
    6. 'x' → logprob: -6.893057823181152
    7. '_' → logprob: -7.268057823181152
    8. '):' → logprob: -7.893057823181152
    9. '_x' → logprob: -8.268057823181152
    10. ' )' → logprob: -8.768057823181152

Token 193: ' ly' (ID: 15280)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.089009590446949
    2. ' ly' → logprob: -2.4640095233917236
    3. 'l' → logprob: -10.964009284973145
    4. 'y' → logprob: -11.464009284973145
    5. 'lyph' → logprob: -11.964009284973145
    6. '   ' → logprob: -12.714009284973145
    7. ' lly' → logprob: -12.839009284973145
    8. ' ' → logprob: -12.839009284973145
    9. ' ' → logprob: -12.964009284973145
    10. 'yl' → logprob: -13.089009284973145

Token 194: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05731920152902603
    2. ',' → logprob: -2.932319164276123
    3. ')' → logprob: -6.557319164276123
    4. ' ):' → logprob: -7.057319164276123
    5. '):
' → logprob: -9.182319641113281
    6. ' ,' → logprob: -10.807319641113281
    7. ' )' → logprob: -12.057319641113281
    8. '   ' → logprob: -12.557319641113281
    9. '):

' → logprob: -12.557319641113281
    10. '):
' → logprob: -13.057319641113281

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022149110212922096
    2. ':' → logprob: -4.772149085998535
    3. '    ' → logprob: -5.522149085998535
    4. ' ' → logprob: -6.147149085998535
    5. ' 
' → logprob: -6.147149085998535
    6. '<|end|>' → logprob: -6.397149085998535
    7. ' return' → logprob: -6.522149085998535
    8. ' if' → logprob: -7.772149085998535
    9. '    
' → logprob: -8.272149085998535
    10. ',' → logprob: -9.022149085998535

Token 196: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7465344071388245
    2. ' if' → logprob: -1.2465343475341797
    3. '   ' → logprob: -1.8715343475341797
    4. 'return' (adapté à ' return') → logprob: -3.2465343475341797
    5. ' 
' → logprob: -3.7465343475341797
    6. 'if' → logprob: -5.12153434753418
    7. '    ' → logprob: -5.37153434753418
    8. ' ' → logprob: -5.37153434753418
    9. ' area' → logprob: -5.99653434753418
    10. ' ' → logprob: -7.12153434753418

Token 197: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5408228039741516
    2. ' (' → logprob: -1.0408227443695068
    3. '(abs' → logprob: -3.790822744369507
    4. 'abs' → logprob: -4.540822982788086
    5. '(max' → logprob: -4.665822982788086
    6. ' abs' → logprob: -5.040822982788086
    7. ' max' → logprob: -5.165822982788086
    8. 'max' → logprob: -5.665822982788086
    9. '(' → logprob: -6.290822982788086
    10. 'x' → logprob: -6.665822982788086

Token 198: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07488643378019333
    2. '(x' → logprob: -3.0748863220214844
    3. 'abs' → logprob: -3.9498863220214844
    4. 'lx' → logprob: -5.699886322021484
    5. '(abs' → logprob: -6.574886322021484
    6. ' x' → logprob: -7.199886322021484
    7. ' (' → logprob: -7.699886322021484
    8. ' abs' → logprob: -8.699886322021484
    9. 'max' → logprob: -8.699886322021484
    10. ' lx' → logprob: -9.324886322021484

Token 199: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00046570412814617157
    2. '1' → logprob: -8.625465393066406
    3. ')' → logprob: -9.500465393066406
    4. ' -' → logprob: -10.000465393066406
    5. '```' → logprob: -10.625465393066406
    6. '[' → logprob: -11.000465393066406
    7. 'x' → logprob: -11.125465393066406
    8. '>' → logprob: -11.250465393066406
    9. ',' → logprob: -11.375465393066406
    10. '-' → logprob: -11.500465393066406

Token 200: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.12724894285202026
    2. '-' → logprob: -2.127249002456665
    3. '+' → logprob: -8.127248764038086
    4. ' +' → logprob: -11.377248764038086
    5. '-x' → logprob: -11.752248764038086
    6. ' ' → logprob: -13.127248764038086
    7. '   ' → logprob: -14.252248764038086
    8. ' -
' → logprob: -14.752248764038086
    9. '-l' → logprob: -14.877248764038086
    10. '-xl' → logprob: -15.064748764038086

Token 201: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04300376772880554
    2. ' x' → logprob: -3.168003797531128
    3. '<|end|>' → logprob: -13.168004035949707
    4. '(x' → logprob: -14.168004035949707
    5. ')x' → logprob: -14.168004035949707
    6. '	x' → logprob: -14.668004035949707
    7. ' ' → logprob: -14.918004035949707
    8. '1' → logprob: -15.293004035949707
    9. '<|end|>' → logprob: -16.66800308227539
    10. ')' → logprob: -16.79300308227539

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007482872344553471
    2. 'x' → logprob: -5.507483005523682
    3. ')' → logprob: -6.382483005523682
    4. ' +' → logprob: -7.507483005523682
    5. '+' → logprob: -7.632483005523682
    6. ' x' → logprob: -8.257482528686523
    7. ' ' → logprob: -9.257482528686523
    8. '[' → logprob: -9.507482528686523
    9. ' )' → logprob: -10.132482528686523
    10. '<|end|>' → logprob: -10.382482528686523

Token 203: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7159191370010376
    2. ' +' → logprob: -0.9659191370010376
    3. '+' → logprob: -2.090919017791748
    4. ' )' → logprob: -4.965919017791748
    5. ')*(' → logprob: -10.090919494628906
    6. ')*' → logprob: -11.465919494628906
    7. '   ' → logprob: -12.090919494628906
    8. '+)' → logprob: -12.340919494628906
    9. ' ' → logprob: -12.840919494628906
    10. ' -' → logprob: -13.340919494628906

Token 204: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03807671740651131
    2. ' ' → logprob: -3.288076639175415
    3. ')' → logprob: -10.413076400756836
    4. ' lx' → logprob: -13.538076400756836
    5. ' )' → logprob: -13.788076400756836
    6. ' ' → logprob: -14.413076400756836
    7. 'lx' → logprob: -14.475576400756836
    8. '0' → logprob: -14.663076400756836
    9. '2' → logprob: -15.225576400756836
    10. 'l' → logprob: -15.788076400756836

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007087402627803385
    2. 'lx' → logprob: -7.87570858001709
    3. ' ' → logprob: -8.12570858001709
    4. ' lx' → logprob: -10.62570858001709
    5. ')' → logprob: -12.37570858001709
    6. '2' → logprob: -14.37570858001709
    7. 'l' → logprob: -14.62570858001709
    8. '0' → logprob: -14.68820858001709
    9. '```' → logprob: -15.00070858001709
    10. 'ly' → logprob: -15.00070858001709

Token 206: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009722061222419143
    2. ' )' → logprob: -7.125972270965576
    3. ')*' → logprob: -9.500971794128418
    4. ')*(' → logprob: -9.500971794128418
    5. '*' → logprob: -11.750971794128418
    6. ' *' → logprob: -13.000971794128418
    7. '>=' → logprob: -13.000971794128418
    8. ' >=' → logprob: -14.000971794128418
    9. ' <=' → logprob: -14.125971794128418
    10. '<=' → logprob: -14.250971794128418

Token 207: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.25201183557510376
    2. '*' → logprob: -1.502011775970459
    3. '*(' → logprob: -9.502012252807617
    4. ')' → logprob: -13.252012252807617
    5. ' *
' → logprob: -13.502012252807617
    6. ' ' → logprob: -13.877012252807617
    7. ',' → logprob: -14.002012252807617
    8. ' ' → logprob: -14.127012252807617
    9. '   ' → logprob: -14.502012252807617
    10. '*

' → logprob: -14.752012252807617

Token 208: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2976610064506531
    2. ' (' → logprob: -1.7976610660552979
    3. '(y' → logprob: -2.422661066055298
    4. '(l' → logprob: -5.797660827636719
    5. ' ly' → logprob: -10.922660827636719
    6. '(L' → logprob: -12.172660827636719
    7. ' ' → logprob: -12.547660827636719
    8. '(x' → logprob: -12.672660827636719
    9. '<|end|>' → logprob: -12.672660827636719
    10. '((' → logprob: -13.672660827636719

Token 209: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2405610978603363
    2. 'ly' → logprob: -1.9905611276626587
    3. '(y' → logprob: -2.865561008453369
    4. '(' → logprob: -4.115561008453369
    5. ' y' → logprob: -6.115561008453369
    6. ' (' → logprob: -7.490561008453369
    7. ' ly' → logprob: -7.865561008453369
    8. 'yl' → logprob: -7.990561008453369
    9. 'yly' → logprob: -9.240561485290527
    10. '   ' → logprob: -9.615561485290527

Token 210: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.129266067640856e-05
    2. ' ' → logprob: -11.375020980834961
    3. ' -' → logprob: -12.375020980834961
    4. '<|end|>' → logprob: -12.375020980834961
    5. ')' → logprob: -14.500020980834961
    6. '```' → logprob: -15.875020980834961
    7. '<|end|>' → logprob: -16.12502098083496
    8. '1' → logprob: -16.25002098083496
    9. '-' → logprob: -16.25002098083496
    10. '
' → logprob: -16.62502098083496

Token 211: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005234002135694027
    2. '-' → logprob: -5.2552337646484375
    3. ' ' → logprob: -15.755233764648438
    4. '<|end|>' → logprob: -17.505233764648438
    5. ' ' → logprob: -17.755233764648438
    6. ')' → logprob: -18.255233764648438
    7. '```' → logprob: -18.880233764648438
    8. '_' → logprob: -19.130233764648438
    9. 'def' → logprob: -19.255233764648438
    10. '−' → logprob: -19.755233764648438

Token 212: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.036999259144067764
    2. ' y' → logprob: -3.536999225616455
    3. '1' → logprob: -5.036999225616455
    4. 'ly' → logprob: -7.661999225616455
    5. ' ly' → logprob: -8.411999702453613
    6. ' ' → logprob: -11.411999702453613
    7. 'x' → logprob: -11.411999702453613
    8. 'yl' → logprob: -12.786999702453613
    9. 'l' → logprob: -13.286999702453613
    10. '(y' → logprob: -13.536999702453613

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8312570318812504e-05
    2. 'ly' → logprob: -11.375018119812012
    3. ' ' → logprob: -13.375018119812012
    4. ' ly' → logprob: -13.500018119812012
    5. 'y' → logprob: -14.250018119812012
    6. '-' → logprob: -14.500018119812012
    7. '_' → logprob: -14.625018119812012
    8. ' -' → logprob: -14.750018119812012
    9. '+' → logprob: -14.875018119812012
    10. ')' → logprob: -15.000018119812012

Token 214: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12695971131324768
    2. '+' → logprob: -2.126959800720215
    3. ')' → logprob: -10.626959800720215
    4. ' +
' → logprob: -13.376959800720215
    5. ' ' → logprob: -13.501959800720215
    6. ' )' → logprob: -14.126959800720215
    7. '<|end|>' → logprob: -14.251959800720215
    8. ')+' → logprob: -14.376959800720215
    9. '1' → logprob: -14.376959800720215
    10. '```' → logprob: -14.626959800720215

Token 215: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029790647327899933
    2. ' ' → logprob: -3.5297906398773193
    3. ')' → logprob: -10.154790878295898
    4. '2' → logprob: -15.029790878295898
    5. ' )' → logprob: -15.029790878295898
    6. '0' → logprob: -15.154790878295898
    7. ' ' → logprob: -16.5297908782959
    8. '```' → logprob: -16.6547908782959
    9. '   ' → logprob: -16.9047908782959
    10. '4' → logprob: -16.9047908782959

Token 216: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.791440293658525e-05
    2. ' ' → logprob: -9.500078201293945
    3. ')' → logprob: -13.250078201293945
    4. '0' → logprob: -13.625078201293945
    5. '-' → logprob: -17.125078201293945
    6. '```' → logprob: -18.000078201293945
    7. '2' → logprob: -18.500078201293945
    8. '   ' → logprob: -19.125078201293945
    9. ' )' → logprob: -19.375078201293945
    10. '(' → logprob: -19.625078201293945

Token 217: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020677002146840096
    2. ' )' → logprob: -4.770677089691162
    3. ' <=' → logprob: -4.895677089691162
    4. ' >=' → logprob: -6.520677089691162
    5. '<=' → logprob: -6.645677089691162
    6. '>=' → logprob: -7.520677089691162
    7. ')<=' → logprob: -7.520677089691162
    8. ')>=' → logprob: -8.145676612854004
    9. '==' → logprob: -9.270676612854004
    10. ' ==' → logprob: -9.270676612854004

Token 218: ' ==' (ID: 951)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 219: ' lx' (ID: 153863)
  Prédit: ' lx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lx' → logprob: -0.07307088375091553
    2. 'lx' → logprob: -2.698071002960205
    3. ' (' → logprob: -6.698071002960205
    4. ' ly' → logprob: -7.073071002960205
    5. '(' → logprob: -7.823071002960205
    6. '(l' → logprob: -7.948071002960205
    7. ' ' → logprob: -9.198070526123047
    8. 'ly' → logprob: -9.448070526123047
    9. '   ' → logprob: -10.323070526123047
    10. 'l' → logprob: -11.198070526123047

Token 220: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.38726815581321716
    2. '*' → logprob: -1.1372681856155396
    3. ' ' → logprob: -8.63726806640625
    4. ' ly' → logprob: -9.38726806640625
    5. ' ' → logprob: -9.88726806640625
    6. ' *
' → logprob: -10.26226806640625
    7. 'ly' → logprob: -11.13726806640625
    8. 'y' → logprob: -11.51226806640625
    9. '*
' → logprob: -12.51226806640625
    10. '   ' → logprob: -12.51226806640625

Token 221: ' ly' (ID: 15280)
  Prédit: 'ly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ly' → logprob: -0.054909929633140564
    2. ' ly' → logprob: -2.9299099445343018
    3. ' ' → logprob: -11.429909706115723
    4. '.ly' → logprob: -12.554909706115723
    5. ' ' → logprob: -12.679909706115723
    6. 'lyph' → logprob: -13.929909706115723
    7. '```' → logprob: -13.929909706115723
    8. 'lys' → logprob: -14.179909706115723
    9. ' 
' → logprob: -14.304909706115723
    10. 'iy' → logprob: -14.304909706115723

Token 222: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7006390690803528
    2. '
' → logprob: -1.325639009475708
    3. '<|end|>' → logprob: -1.450639009475708
    4. '

' → logprob: -6.575639247894287
    5. '<|end|>' → logprob: -7.075639247894287
    6. '\n' → logprob: -7.825639247894287
    7. ' def' → logprob: -8.075638771057129
    8. '```' → logprob: -8.950638771057129
    9. '  
' → logprob: -9.325638771057129
    10. 'newline' → logprob: -9.450638771057129

Token 223: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 224: ' solve' (ID: 17722)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.5829298496246338
    2. ' check' → logprob: -1.8329298496246338
    3. ' can' → logprob: -2.582929849624634
    4. ' max' → logprob: -3.707929849624634
    5. 'find' → logprob: -3.832929849624634
    6. ' valid' → logprob: -4.207929611206055
    7. 'max' → logprob: -4.207929611206055
    8. ' maximize' → logprob: -4.207929611206055
    9. ' calculate' → logprob: -4.332929611206055
    10. 'check' → logprob: -4.457929611206055

Token 225: '_dataset' (ID: 40568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.044917430728673935
    2. '():' → logprob: -3.419917345046997
    3. '_' → logprob: -5.794917583465576
    4. '(_' → logprob: -5.919917583465576
    5. '(X' → logprob: -5.919917583465576
    6. '(x' → logprob: -6.669917583465576
    7. '_(' → logprob: -6.794917583465576
    8. '_:' → logprob: -9.044917106628418
    9. '(_:' → logprob: -9.919917106628418
    10. '(:' → logprob: -10.169917106628418

Token 226: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.2137828916311264
    2. '(dataset' → logprob: -1.9637829065322876
    3. '(' → logprob: -2.963782787322998
    4. '(d' → logprob: -8.588783264160156
    5. '(data' → logprob: -8.963783264160156
    6. '(x' → logprob: -9.338783264160156
    7. '():' → logprob: -9.713783264160156
    8. '((' → logprob: -10.463783264160156
    9. '(ds' → logprob: -11.463783264160156
    10. '(D' → logprob: -12.213783264160156

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012154294381616637
    2. ' ,' → logprob: -9.125121116638184
    3. ',Y' → logprob: -11.500121116638184
    4. '‌,' → logprob: -13.625121116638184
    5. ',X' → logprob: -14.125121116638184
    6. '_,' → logprob: -15.875121116638184
    7. ',
' → logprob: -16.2501220703125
    8. ',y' → logprob: -16.6251220703125
    9. '<|end|>' → logprob: -17.0001220703125
    10. ',n' → logprob: -17.3751220703125

Token 228: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.048590436577796936
    2. ' Y' → logprob: -3.0485904216766357
    3. '	Y' → logprob: -13.923590660095215
    4. '   ' → logprob: -14.048590660095215
    5. '<|end|>' → logprob: -14.673590660095215
    6. ' ' → logprob: -15.048590660095215
    7. 'X' → logprob: -15.798590660095215
    8. '    ' → logprob: -16.2985897064209
    9. ' ' → logprob: -16.5485897064209
    10. '<|end|>' → logprob: -16.6735897064209

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.173704271830502e-06
    2. ' ,' → logprob: -13.25000286102295
    3. ',n' → logprob: -14.12500286102295
    4. ',
' → logprob: -14.62500286102295
    5. '‌,' → logprob: -16.625003814697266
    6. ',y' → logprob: -17.625003814697266
    7. ',

' → logprob: -17.625003814697266
    8. ',x' → logprob: -18.125003814697266
    9. ',Y' → logprob: -18.375003814697266
    10. '   ' → logprob: -18.625003814697266

Token 230: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01197337917983532
    2. ' n' → logprob: -4.5119733810424805
    3. 'buyers' → logprob: -7.2619733810424805
    4. ' buyers' → logprob: -8.63697338104248
    5. '   ' → logprob: -10.88697338104248
    6. 'b' → logprob: -11.76197338104248
    7. 'buyer' → logprob: -12.51197338104248
    8. ' ' → logprob: -12.76197338104248
    9. '```' → logprob: -13.01197338104248
    10. '	n' → logprob: -13.19947338104248

Token 231: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -13.25000286102295
    3. ',b' → logprob: -14.75000286102295
    4. ',
' → logprob: -16.125001907348633
    5. '‌,' → logprob: -16.125001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '_,' → logprob: -18.625001907348633
    8. ',n' → logprob: -18.750001907348633
    9. ',s' → logprob: -19.000001907348633
    10. ',

' → logprob: -19.000001907348633

Token 232: ' buyers' (ID: 25359)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.0024870727211236954
    2. ' buyers' → logprob: -6.0024871826171875
    3. 'buy' → logprob: -11.502487182617188
    4. 'buyer' → logprob: -14.127487182617188
    5. 'b' → logprob: -15.127487182617188
    6. '   ' → logprob: -16.127487182617188
    7. 'boys' → logprob: -16.877487182617188
    8. '```' → logprob: -17.377487182617188
    9. ' ' → logprob: -17.502487182617188
    10. 'borrow' → logprob: -18.252487182617188

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.306760805164231e-05
    2. ' ,' → logprob: -11.50001335144043
    3. ',b' → logprob: -13.25001335144043
    4. ',
' → logprob: -14.87501335144043
    5. '‌,' → logprob: -15.00001335144043
    6. ',s' → logprob: -15.75001335144043
    7. '):' → logprob: -16.00001335144043
    8. '   ' → logprob: -17.25001335144043
    9. '_,' → logprob: -17.37501335144043
    10. ',y' → logprob: -17.50001335144043

Token 234: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06197541579604149
    2. ' s' → logprob: -2.8119754791259766
    3. ')' → logprob: -13.061975479125977
    4. ' ' → logprob: -13.311975479125977
    5. '   ' → logprob: -14.374475479125977
    6. '	s' → logprob: -14.811975479125977
    7. '`s' → logprob: -14.811975479125977
    8. ')s' → logprob: -14.874475479125977
    9. 'sales' → logprob: -14.999475479125977
    10. 'S' → logprob: -15.124475479125977

Token 235: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006746663711965084
    2. ')' → logprob: -8.0006742477417
    3. ',' → logprob: -8.3756742477417
    4. '):
' → logprob: -9.2506742477417
    5. ' ):' → logprob: -11.6256742477417
    6. '):
' → logprob: -13.6256742477417
    7. ':' → logprob: -14.5006742477417
    8. '):

' → logprob: -14.8756742477417
    9. ')):' → logprob: -15.1256742477417
    10. '[]):' → logprob: -15.3756742477417

Token 236: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022731589153409004
    2. '    ' → logprob: -4.272731781005859
    3. '
' → logprob: -5.397731781005859
    4. ' for' → logprob: -6.772731781005859
    5. ' 
' → logprob: -7.147731781005859
    6. '    
' → logprob: -7.897731781005859
    7. ' max' → logprob: -8.14773178100586
    8. '```' → logprob: -8.52273178100586
    9. ' result' → logprob: -8.64773178100586
    10. ' ' → logprob: -9.02273178100586

Token 237: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.408207893371582
    2. 'prefix' → logprob: -1.908207893371582
    3. 'max' → logprob: -2.533207893371582
    4. '   ' → logprob: -3.158207893371582
    5. ' dp' → logprob: -3.158207893371582
    6. 'best' → logprob: -3.283207893371582
    7. 'result' → logprob: -3.283207893371582
    8. '#' (adapté à ' #') → logprob: -3.408207893371582
    9. ' prefix' → logprob: -3.533207893371582
    10. 'from' → logprob: -3.533207893371582

Token 238: ' buyers' (ID: 25359)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9243078231811523
    2. '#' → logprob: -2.5493078231811523
    3. 'max' → logprob: -2.6743078231811523
    4. 'import' → logprob: -2.6743078231811523
    5. 'prefix' → logprob: -2.7993078231811523
    6. 'best' → logprob: -3.1743078231811523
    7. 'from' → logprob: -3.2993078231811523
    8. ' dp' → logprob: -3.4243078231811523
    9. ' best' → logprob: -3.5493078231811523
    10. ' max' → logprob: -3.5493078231811523

Token 239: ':' (ID: 25)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.11989652365446091
    2. '=' → logprob: -2.869896411895752
    3. '_sorted' → logprob: -3.369896411895752
    4. ' =' → logprob: -3.994896411895752
    5. '.' → logprob: -6.619896411895752
    6. ',' → logprob: -7.619896411895752
    7. '_prices' → logprob: -8.24489688873291
    8. ')' → logprob: -8.36989688873291
    9. 'sorted' → logprob: -8.49489688873291
    10. 'sort' → logprob: -9.11989688873291

Token 240: ' list' (ID: 1562)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -1.1515228748321533
    2. 'list' → logprob: -1.1515228748321533
    3. ' list' → logprob: -1.2765228748321533
    4. '[(' → logprob: -3.1515228748321533
    5. ' List' → logprob: -3.2765228748321533
    6. ' [(' → logprob: -5.151522636413574
    7. ' sorted' → logprob: -7.151522636413574
    8. 'sorted' → logprob: -7.651522636413574
    9. '[' → logprob: -8.276522636413574
    10. '   ' → logprob: -8.401522636413574

Token 241: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.2029370814561844
    2. '   ' → logprob: -2.827937126159668
    3. ',' → logprob: -3.202937126159668
    4. 'of' → logprob: -3.452937126159668
    5. '[' → logprob: -4.327937126159668
    6. ')' → logprob: -4.452937126159668
    7. '<|end|>' → logprob: -4.702937126159668
    8. ' =' → logprob: -5.202937126159668
    9. '(
' → logprob: -5.952937126159668
    10. '(' → logprob: -6.327937126159668

Token 242: ' (' (ID: 350)
  Prédit: ' tuples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuples' → logprob: -0.8048217296600342
    2. '(int' → logprob: -1.4298217296600342
    3. 'tu' → logprob: -1.8048217296600342
    4. '(b' → logprob: -2.554821729660034
    5. ' (' → logprob: -2.929821729660034
    6. '(tuple' → logprob: -4.929821968078613
    7. 'tuple' → logprob: -5.054821968078613
    8. '(' → logprob: -5.554821968078613
    9. '(t' → logprob: -9.054821968078613
    10. ' tuple' → logprob: -9.554821968078613

Token 243: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006730287801474333
    2. 'price' → logprob: -6.256730079650879
    3. 'budget' → logprob: -6.256730079650879
    4. ' b' → logprob: -6.631730079650879
    5. 'buyer' → logprob: -7.256730079650879
    6. 'min' → logprob: -8.506730079650879
    7. 'bid' → logprob: -9.381730079650879
    8. 'start' → logprob: -9.381730079650879
    9. 'buy' → logprob: -9.631730079650879
    10. 'desired' → logprob: -9.631730079650879

Token 244: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006516746943816543
    2. 'uyer' → logprob: -8.125651359558105
    3. ' ,' → logprob: -8.875651359558105
    4. ')' → logprob: -9.625651359558105
    5. ',size' → logprob: -10.000651359558105
    6. 'size' → logprob: -10.875651359558105
    7. 'uy' → logprob: -11.000651359558105
    8. ',k' → logprob: -11.125651359558105
    9. ',int' → logprob: -11.750651359558105
    10. ',b' → logprob: -12.375651359558105

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011946328449994326
    2. ',k' → logprob: -7.001194477081299
    3. ' ,' → logprob: -8.251194953918457
    4. ',b' → logprob: -12.376194953918457
    5. ',
' → logprob: -12.751194953918457
    6. ',size' → logprob: -12.876194953918457
    7. ',n' → logprob: -13.001194953918457
    8. ')' → logprob: -13.251194953918457
    9. ',count' → logprob: -13.626194953918457
    10. ',int' → logprob: -13.876194953918457

Token 246: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.25195688009262085
    2. ' k' → logprob: -1.5019569396972656
    3. ')' → logprob: -10.751956939697266
    4. ',' → logprob: -12.876956939697266
    5. ',k' → logprob: -13.501956939697266
    6. ' ' → logprob: -14.376956939697266
    7. ' )' → logprob: -15.126956939697266
    8. '   ' → logprob: -15.751956939697266
    9. '    ' → logprob: -16.126956939697266
    10. ' ' → logprob: -16.126956939697266

Token 247: '_i' (ID: 10853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016181467100977898
    2. ',' → logprob: -4.141181468963623
    3. '),' → logprob: -9.266180992126465
    4. ',)' → logprob: -10.891180992126465
    5. 's' → logprob: -12.016180992126465
    6. ' )' → logprob: -12.141180992126465
    7. '<|end|>' → logprob: -12.516180992126465
    8. '   ' → logprob: -13.266180992126465
    9. ')
' → logprob: -13.391180992126465
    10. '[' → logprob: -13.516180992126465

Token 248: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.68153518543113e-05
    2. ',' → logprob: -10.250057220458984
    3. '),' → logprob: -10.875057220458984
    4. ')
' → logprob: -13.125057220458984
    5. ' )' → logprob: -15.250057220458984
    6. ')

' → logprob: -15.875057220458984
    7. '   ' → logprob: -17.125057220458984
    8. ').' → logprob: -17.375057220458984
    9. ',)' → logprob: -17.750057220458984
    10. '):' → logprob: -17.875057220458984

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2075907289981842
    2. '
' → logprob: -2.2075908184051514
    3. ',' → logprob: -3.5825908184051514
    4. '<|end|>' → logprob: -4.457590579986572
    5. '    
' → logprob: -4.957590579986572
    6. ' 
' → logprob: -5.457590579986572
    7. '#' → logprob: -5.457590579986572
    8. '    ' → logprob: -5.582590579986572
    9. ':' → logprob: -5.832590579986572
    10. ' ' → logprob: -5.832590579986572

Token 250: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.500255823135376
    2. ' dp' → logprob: -1.875255823135376
    3. 'dp' → logprob: -2.000255823135376
    4. ' max' → logprob: -2.000255823135376
    5. ' result' → logprob: -2.625255823135376
    6. ' best' → logprob: -3.625255823135376
    7. 'result' → logprob: -3.625255823135376
    8. ' results' → logprob: -3.875255823135376
    9. 'max' → logprob: -4.000255584716797
    10. ' res' → logprob: -4.500255584716797

Token 251: ' s' (ID: 265)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9892511963844299
    2. 'prefix' → logprob: -1.2392511367797852
    3. '#' → logprob: -2.614251136779785
    4. ' prefix' → logprob: -3.489251136779785
    5. 'result' → logprob: -3.489251136779785
    6. 'import' → logprob: -3.489251136779785
    7. 'res' → logprob: -3.739251136779785
    8. 'from' → logprob: -3.989251136779785
    9. 'total' → logprob: -4.364251136779785
    10. ' dp' → logprob: -4.614251136779785

Token 252: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14612825214862823
    2. '=' → logprob: -2.2711281776428223
    3. ':' → logprob: -4.021128177642822
    4. ',' → logprob: -5.146128177642822
    5. ')' → logprob: -6.271128177642822
    6. '_sum' → logprob: -6.521128177642822
    7. '   ' → logprob: -6.771128177642822
    8. '[' → logprob: -7.146128177642822
    9. '_values' → logprob: -8.27112865447998
    10. 'sum' → logprob: -8.27112865447998

Token 253: ' Y' (ID: 865)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8393108248710632
    2. '[' → logprob: -0.9643108248710632
    3. '[]' → logprob: -2.839310884475708
    4. 's' → logprob: -3.089310884475708
    5. ' s' → logprob: -3.464310884475708
    6. '[s' → logprob: -4.089310646057129
    7. '[[' → logprob: -4.714310646057129
    8. ' [[' → logprob: -4.714310646057129
    9. ' []' → logprob: -5.339310646057129
    10. '[
' → logprob: -5.589310646057129

Token 254: ' rows' (ID: 13585)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20639124512672424
    2. '   ' → logprob: -3.0813913345336914
    3. ' ' → logprob: -3.3313913345336914
    4. '[' → logprob: -3.7063913345336914
    5. ' rows' → logprob: -3.8313913345336914
    6. ')' → logprob: -4.456391334533691
    7. ' ×' → logprob: -4.956391334533691
    8. 'x' → logprob: -5.206391334533691
    9. ',' → logprob: -5.331391334533691
    10. '][' → logprob: -5.581391334533691

Token 255: ' x' (ID: 1215)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37857770919799805
    2. '   ' → logprob: -1.378577709197998
    3. ' of' → logprob: -3.753577709197998
    4. '<|end|>' → logprob: -4.003577709197998
    5. 'def' → logprob: -4.878577709197998
    6. ')' → logprob: -5.628577709197998
    7. '[' → logprob: -6.128577709197998
    8. '
' → logprob: -6.628577709197998
    9. '<|end|>' → logprob: -6.753577709197998
    10. ' ,' → logprob: -7.253577709197998

Token 256: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.20151226222515106
    2. ' X' → logprob: -1.7015122175216675
    3. ' (' → logprob: -10.201512336730957
    4. '(' → logprob: -10.576512336730957
    5. ' ' → logprob: -11.576512336730957
    6. '(X' → logprob: -11.826512336730957
    7. '`' → logprob: -12.701512336730957
    8. '   ' → logprob: -12.701512336730957
    9. '[' → logprob: -12.826512336730957
    10. 'x' → logprob: -13.201512336730957

Token 257: ' cols' (ID: 37134)
  Prédit: ' matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matrix' → logprob: -0.8914830684661865
    2. ' columns' → logprob: -1.7664830684661865
    3. '   ' → logprob: -2.0164830684661865
    4. 'columns' → logprob: -2.7664830684661865
    5. ' grid' → logprob: -3.3914830684661865
    6. ' rows' → logprob: -3.3914830684661865
    7. 'def' → logprob: -3.6414830684661865
    8. 'matrix' → logprob: -3.7664830684661865
    9. ' cols' → logprob: -4.141483306884766
    10. '<|end|>' → logprob: -4.516483306884766

Token 258: ' matrix' (ID: 12248)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23363129794597626
    2. '   ' → logprob: -1.9836312532424927
    3. '<|end|>' → logprob: -3.4836313724517822
    4. ',' → logprob: -4.108631134033203
    5. ':' → logprob: -4.858631134033203
    6. '    
' → logprob: -5.483631134033203
    7. 'def' → logprob: -5.983631134033203
    8. ',
' → logprob: -6.233631134033203
    9. '<|end|>' → logprob: -7.108631134033203
    10. ':
' → logprob: -7.108631134033203

Token 259: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30699196457862854
    2. '
' → logprob: -1.8069919347763062
    3. ',' → logprob: -2.5569920539855957
    4. ':' → logprob: -5.056992053985596
    5. '    
' → logprob: -5.431992053985596
    6. ',
' → logprob: -5.806992053985596
    7. '<|end|>' → logprob: -5.806992053985596
    8. '```' → logprob: -6.681992053985596
    9. 'def' → logprob: -7.181992053985596
    10. ' ,' → logprob: -7.556992053985596

Token 260: 'row' (ID: 843)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024270255118608475
    2. 'int' → logprob: -4.649270057678223
    3. ' )' → logprob: -5.024270057678223
    4. ' int' → logprob: -6.524270057678223
    5. 'List' → logprob: -6.524270057678223
    6. ' List' → logprob: -6.774270057678223
    7. ' list' → logprob: -7.024270057678223
    8. '#' → logprob: -7.399270057678223
    9. 'list' → logprob: -7.774270057678223
    10. '[int' → logprob: -7.899270057678223

Token 261: ' major' (ID: 5035)
  Prédit: '-major'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-major' → logprob: -0.459672212600708
    2. ',' → logprob: -2.334672212600708
    3. 'major' → logprob: -3.084672212600708
    4. '   ' → logprob: -3.084672212600708
    5. ' major' → logprob: -3.209672212600708
    6. ')' → logprob: -3.334672212600708
    7. '=' → logprob: -3.459672212600708
    8. '-wise' → logprob: -3.709672212600708
    9. 's' → logprob: -3.834672212600708
    10. ' ' → logprob: -5.334671974182129

Token 262: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009136945940554142
    2. ' order' → logprob: -4.884137153625488
    3. 'order' → logprob: -7.384137153625488
    4. ',' → logprob: -7.634137153625488
    5. '),' → logprob: -8.009137153625488
    6. ' )' → logprob: -9.884137153625488
    7. ')
' → logprob: -11.134137153625488
    8. '_order' → logprob: -12.509137153625488
    9. ')

' → logprob: -13.009137153625488
    10. '):' → logprob: -13.134137153625488

Token 263: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12384508550167084
    2. '
' → logprob: -2.498845100402832
    3. ':' → logprob: -4.498845100402832
    4. ' 
' → logprob: -5.248845100402832
    5. '    
' → logprob: -5.373845100402832
    6. '    ' → logprob: -5.623845100402832
    7. ',' → logprob: -5.998845100402832
    8. '<|end|>' → logprob: -6.498845100402832
    9. ' ' → logprob: -6.748845100402832
    10. ' for' → logprob: -7.248845100402832

Token 264: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0751635804772377
    2. '
' → logprob: -3.3251636028289795
    3. '    
' → logprob: -5.0751633644104
    4. ' result' → logprob: -5.5751633644104
    5. 'result' → logprob: -5.9501633644104
    6. 'dp' → logprob: -6.2001633644104
    7. ' prefix' → logprob: -6.2001633644104
    8. ' res' → logprob: -6.3251633644104
    9. 'prefix' → logprob: -6.3251633644104
    10. ' total' → logprob: -6.7001633644104

Token 265: ' Need' (ID: 19792)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.2037649154663086
    2. 'dp' → logprob: -1.5787649154663086
    3. 'results' → logprob: -1.9537649154663086
    4. 'res' → logprob: -2.0787649154663086
    5. 'import' → logprob: -3.4537649154663086
    6. '#' → logprob: -3.5787649154663086
    7. 'prefix' → logprob: -3.5787649154663086
    8. 'max' → logprob: -3.8287649154663086
    9. 'for' → logprob: -4.328764915466309
    10. 'answer' → logprob: -4.328764915466309

Token 266: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2078225165605545
    2. 'to' → logprob: -1.707822561264038
    3. '    ' → logprob: -6.082822322845459
    4. '   ' → logprob: -6.207822322845459
    5. 'def' → logprob: -7.457822322845459
    6. 's' → logprob: -7.832822322845459
    7. '_to' → logprob: -8.707822799682617
    8. 'space' → logprob: -8.832822799682617
    9. ':' → logprob: -8.957822799682617
    10. '_' → logprob: -9.082822799682617

Token 267: ' assign' (ID: 14975)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.7230185270309448
    2. 'find' → logprob: -0.8480185270309448
    3. 'det' → logprob: -2.9730186462402344
    4. ' determine' → logprob: -4.473018646240234
    5. 'maximize' → logprob: -5.098018646240234
    6. 'return' → logprob: -6.223018646240234
    7. '...' → logprob: -6.473018646240234
    8. 'identify' → logprob: -6.598018646240234
    9. 'select' → logprob: -6.723018646240234
    10. ' return' → logprob: -6.723018646240234

Token 268: ' rectangles' (ID: 164265)
  Prédit: ' rectangles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rectangles' → logprob: -0.7291973233222961
    2. ' buyers' → logprob: -1.2291972637176514
    3. ' each' → logprob: -3.2291972637176514
    4. ' areas' → logprob: -3.3541972637176514
    5. 'buyers' → logprob: -4.3541975021362305
    6. 'each' → logprob: -4.6041975021362305
    7. ' rectangle' → logprob: -4.7291975021362305
    8. ' regions' → logprob: -4.8541975021362305
    9. ' tokens' → logprob: -4.8541975021362305
    10. ' parcels' → logprob: -4.8541975021362305

Token 269: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.3606894910335541
    2. ' each' → logprob: -1.2356895208358765
    3. ' buyers' → logprob: -5.235689640045166
    4. 'buyers' → logprob: -5.985689640045166
    5. ' all' → logprob: -6.485689640045166
    6. 'i' → logprob: -7.110689640045166
    7. 'all' → logprob: -7.235689640045166
    8. ' buyer' → logprob: -7.860689640045166
    9. 'buyer' → logprob: -7.860689640045166
    10. ' i' → logprob: -8.110689163208008

Token 271: ' buyer' (ID: 28061)
  Prédit: ' buyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buyer' → logprob: -0.16051118075847626
    2. 'buyer' → logprob: -1.9105111360549927
    3. 'b' → logprob: -9.410511016845703
    4. 'buy' → logprob: -10.160511016845703
    5. 'token' → logprob: -10.285511016845703
    6. ' buyers' → logprob: -10.410511016845703
    7. 'buyers' → logprob: -11.410511016845703
    8. ' b' → logprob: -11.660511016845703
    9. ' token' → logprob: -11.660511016845703
    10. ' purchaser' → logprob: -11.785511016845703

Token 272: ' so' (ID: 813)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.765143096446991
    2. ':' → logprob: -1.3901431560516357
    3. ',' → logprob: -2.0151431560516357
    4. '
' → logprob: -2.2651431560516357
    5. '<|end|>' → logprob: -4.015142917633057
    6. ':
' → logprob: -5.390142917633057
    7. 'def' → logprob: -5.390142917633057
    8. '.' → logprob: -5.515142917633057
    9. '#' → logprob: -6.015142917633057
    10. ' for' → logprob: -6.265142917633057

Token 273: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.2813945412635803
    2. 'that' → logprob: -1.4063944816589355
    3. '   ' → logprob: -9.031394958496094
    4. 'def' → logprob: -9.531394958496094
    5. '<|end|>' → logprob: -10.531394958496094
    6. '	that' → logprob: -12.031394958496094
    7. ' thata' → logprob: -12.281394958496094
    8. 'That' → logprob: -12.656394958496094
    9. '_that' → logprob: -13.031394958496094
    10. '...' → logprob: -13.406394958496094

Token 274: ':
' (ID: 734)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.2510524094104767
    2. 'all' → logprob: -1.8760523796081543
    3. 'buyers' → logprob: -4.376052379608154
    4. 'the' → logprob: -4.751052379608154
    5. ' buyers' → logprob: -5.126052379608154
    6. 'b' → logprob: -5.126052379608154
    7. ' the' → logprob: -5.376052379608154
    8. 'each' → logprob: -5.626052379608154
    9. 'their' → logprob: -5.876052379608154
    10. 'total' → logprob: -6.001052379608154

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8277930021286011
    2. '    ' → logprob: -1.452793002128601
    3. '<|end|>' → logprob: -1.952793002128601
    4. ' ' → logprob: -2.4527931213378906
    5. '       ' → logprob: -2.8277931213378906
    6. ' #' → logprob: -4.202793121337891
    7. '#' → logprob: -5.202793121337891
    8. ' pass' → logprob: -5.452793121337891
    9. '    
' → logprob: -6.077793121337891
    10. ' ...' → logprob: -6.577793121337891

Token 276: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.078182578086853
    2. ' #' → logprob: -1.453182578086853
    3. ' ' → logprob: -1.828182578086853
    4. '#' (adapté à ' #') → logprob: -2.4531826972961426
    5. '       ' → logprob: -2.7031826972961426
    6. '    ' → logprob: -2.7031826972961426
    7. ' pass' → logprob: -3.7031826972961426
    8. 'pass' → logprob: -4.703182697296143
    9. ' 
' → logprob: -6.078182697296143
    10. ' ' → logprob: -6.578182697296143

Token 277: ' -' (ID: 533)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.64639413356781
    2. '#' → logprob: -1.89639413356781
    3. '   ' → logprob: -2.1463942527770996
    4. ' assigned' → logprob: -2.2713942527770996
    5. ' total' → logprob: -2.3963942527770996
    6. 'total' → logprob: -2.7713942527770996
    7. 'for' → logprob: -2.8963942527770996
    8. ' #' → logprob: -2.8963942527770996
    9. 'assigned' → logprob: -3.5213942527770996
    10. 'b' → logprob: -3.5213942527770996

Token 278: ' The' (ID: 623)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.114992380142212
    2. ' buyers' → logprob: -1.989992380142212
    3. ' for' → logprob: -2.114992380142212
    4. ' each' → logprob: -2.489992380142212
    5. 'for' → logprob: -3.239992380142212
    6. ' sum' → logprob: -3.489992380142212
    7. ' rectangles' → logprob: -3.489992380142212
    8. ' assigned' → logprob: -3.864992380142212
    9. 'b' → logprob: -3.989992380142212
    10. 'all' → logprob: -3.989992380142212

Token 279: ' union' (ID: 22208)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.3576273918151855
    2. ' area' → logprob: -1.9826273918151855
    3. ' areas' → logprob: -2.3576273918151855
    4. ' sum' → logprob: -2.4826273918151855
    5. ' assigned' → logprob: -2.6076273918151855
    6. 'total' → logprob: -2.6076273918151855
    7. ' code' → logprob: -3.3576273918151855
    8. ' rectangles' → logprob: -3.3576273918151855
    9. 'ir' → logprob: -3.4826273918151855
    10. 'sum' → logprob: -3.6076273918151855

Token 280: ' is' (ID: 382)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0837261974811554
    2. 'of' → logprob: -2.583726167678833
    3. ' covers' → logprob: -5.833726406097412
    4. ' is' → logprob: -6.708726406097412
    5. 'is' → logprob: -8.958725929260254
    6. '   ' → logprob: -9.083725929260254
    7. '=' → logprob: -9.458725929260254
    8. ' ' → logprob: -9.958725929260254
    9. 'covers' → logprob: -9.958725929260254
    10. ' =' → logprob: -10.208725929260254

Token 281: ' the' (ID: 290)
  Prédit: ' dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dis' → logprob: -1.247148871421814
    2. 'dis' → logprob: -1.747148871421814
    3. ' complete' → logprob: -1.997148871421814
    4. ' exactly' → logprob: -2.1221489906311035
    5. ' equal' → logprob: -2.8721489906311035
    6. 'exact' → logprob: -2.8721489906311035
    7. ' a' → logprob: -3.4971489906311035
    8. ' rectangular' → logprob: -4.1221489906311035
    9. 'complete' → logprob: -4.2471489906311035
    10. 'rect' → logprob: -4.3721489906311035

Token 282: ' whole' (ID: 6062)
  Prédit: ' entire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entire' → logprob: -1.0237230062484741
    2. 'ent' → logprob: -1.2737230062484741
    3. 'whole' → logprob: -1.5237230062484741
    4. ' whole' → logprob: -2.0237231254577637
    5. ' same' → logprob: -5.398723125457764
    6. 'same' → logprob: -6.023723125457764
    7. 'full' → logprob: -7.273723125457764
    8. 'complete' → logprob: -7.398723125457764
    9. ' complete' → logprob: -7.648723125457764
    10. ' full' → logprob: -8.023722648620605

Token 283: ' field' (ID: 3259)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.48182082176208496
    2. ' grid' → logprob: -1.981820821762085
    3. 'area' → logprob: -2.731820821762085
    4. ' field' → logprob: -2.981820821762085
    5. ' rectangle' → logprob: -4.106821060180664
    6. ' X' → logprob: -4.231821060180664
    7. ' farm' → logprob: -4.606821060180664
    8. 'grid' → logprob: -4.606821060180664
    9. ' matrix' → logprob: -4.731821060180664
    10. 'field' → logprob: -4.731821060180664

Token 284: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47849634289741516
    2. '#' → logprob: -1.3534963130950928
    3. ',' → logprob: -2.4784963130950928
    4. '<|end|>' → logprob: -3.8534963130950928
    5. ' #' → logprob: -5.478496551513672
    6. '
' → logprob: -5.603496551513672
    7. '.' → logprob: -5.853496551513672
    8. '<|end|>' → logprob: -6.228496551513672
    9. ',
' → logprob: -6.478496551513672
    10. ' (' → logprob: -6.853496551513672

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1818763017654419
    2. '#' → logprob: -1.806876301765442
    3. '<|end|>' → logprob: -7.181876182556152
    4. ' #' → logprob: -7.806876182556152
    5. ',' → logprob: -8.181876182556152
    6. '
' → logprob: -8.806876182556152
    7. ' ' → logprob: -9.306876182556152
    8. 'def' → logprob: -9.306876182556152
    9. '```' → logprob: -9.556876182556152
    10. '    
' → logprob: -10.056876182556152

Token 286: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39151036739349365
    2. '#' (adapté à ' #') → logprob: -1.1415103673934937
    3. ' #' → logprob: -5.891510486602783
    4. 'def' → logprob: -6.766510486602783
    5. '
' → logprob: -8.891510009765625
    6. '<|end|>' → logprob: -9.016510009765625
    7. ' ' → logprob: -9.141510009765625
    8. '```' → logprob: -9.641510009765625
    9. '...' → logprob: -9.766510009765625
    10. 'import' → logprob: -9.891510009765625

Token 287: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.36390766501426697
    2. '   ' → logprob: -1.3639076948165894
    3. 'def' → logprob: -3.7389075756073
    4. ' #' → logprob: -3.8639075756073
    5. 'import' → logprob: -6.363907814025879
    6. 'for' → logprob: -7.238907814025879
    7. '-' → logprob: -7.488907814025879
    8. '
' → logprob: -7.863907814025879
    9. ' for' → logprob: -8.363907814025879
    10. 'return' → logprob: -8.613907814025879

Token 288: ' Each' (ID: 11555)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5247642993927002
    2. ' #' → logprob: -1.6497642993927002
    3. '   ' → logprob: -2.1497642993927
    4. ' ' → logprob: -2.6497642993927
    5. ' ' → logprob: -5.149764060974121
    6. '    ' → logprob: -5.274764060974121
    7. '<|end|>' → logprob: -5.774764060974121
    8. ' The' → logprob: -6.024764060974121
    9. 'Each' → logprob: -6.399764060974121
    10. '       ' → logprob: -6.524764060974121

Token 289: ' rectangle' (ID: 45808)
  Prédit: ' buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buyer' → logprob: -0.05933424457907677
    2. 'buyer' → logprob: -3.0593342781066895
    3. ' rectangle' → logprob: -4.9343342781066895
    4. ' b' → logprob: -7.0593342781066895
    5. ' buyers' → logprob: -7.8093342781066895
    6. '_' → logprob: -8.059333801269531
    7. 'b' → logprob: -8.184333801269531
    8. ' (' → logprob: -8.559333801269531
    9. 'rectangle' → logprob: -8.559333801269531
    10. ' buy' → logprob: -8.809333801269531

Token 290: ' is' (ID: 382)
  Prédit: ' covers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' covers' → logprob: -0.17179909348487854
    2. ' is' → logprob: -2.4217991828918457
    3. ''s' → logprob: -3.7967991828918457
    4. ' has' → logprob: -3.7967991828918457
    5. ' occupies' → logprob: -4.296799182891846
    6. ' assigned' → logprob: -6.046799182891846
    7. ' #' → logprob: -6.421799182891846
    8. '#' → logprob: -6.671799182891846
    9. ' contains' → logprob: -7.171799182891846
    10. ' consists' → logprob: -7.421799182891846

Token 291: ' rectangular' (ID: 79707)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cont' → logprob: -1.3063875436782837
    2. 'a' → logprob: -2.056387424468994
    3. 'dis' → logprob: -2.556387424468994
    4. 'axis' → logprob: -2.556387424468994
    5. ' axis' → logprob: -2.681387424468994
    6. ' contiguous' → logprob: -2.681387424468994
    7. 'unique' → logprob: -3.306387424468994
    8. 'connected' → logprob: -3.556387424468994
    9. 'continuous' → logprob: -3.681387424468994
    10. 'rect' → logprob: -3.681387424468994

Token 292: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: 'normal' (ID: 14559)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4088091552257538
    2. ' and' → logprob: -1.1588091850280762
    3. 'and' → logprob: -4.408809185028076
    4. ',' → logprob: -5.408809185028076
    5. '   ' → logprob: -6.283809185028076
    6. '#' → logprob: -6.658809185028076
    7. ')
' → logprob: -7.658809185028076
    8. ' )' → logprob: -8.533808708190918
    9. 'def' → logprob: -8.658808708190918
    10. '
' → logprob: -8.783808708190918

Token 294: ' rectangle' (ID: 45808)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10321357101202011
    2. ' )' → logprob: -2.4782135486602783
    3. ' and' → logprob: -4.853213787078857
    4. ',' → logprob: -5.728213787078857
    5. ' rectangle' → logprob: -7.353213787078857
    6. '),' → logprob: -7.728213787078857
    7. ')
' → logprob: -7.853213787078857
    8. 'ly' → logprob: -8.1032133102417
    9. 'rectangle' → logprob: -8.3532133102417
    10. 'and' → logprob: -8.7282133102417

Token 295: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018164223060011864
    2. ',' → logprob: -4.643164157867432
    3. ' and' → logprob: -5.143164157867432
    4. ' )' → logprob: -6.643164157867432
    5. '<|end|>' → logprob: -7.893164157867432
    6. ' with' → logprob: -8.64316463470459
    7. ')
' → logprob: -8.64316463470459
    8. '),' → logprob: -8.76816463470459
    9. 'and' → logprob: -9.51816463470459
    10. ')#' → logprob: -10.26816463470459

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03409317508339882
    2. '<|end|>' → logprob: -3.784093141555786
    3. ',' → logprob: -5.784093379974365
    4. '#' → logprob: -5.784093379974365
    5. ' and' → logprob: -7.034093379974365
    6. ')' → logprob: -7.284093379974365
    7. '
' → logprob: -7.284093379974365
    8. 'def' → logprob: -7.659093379974365
    9. '    
' → logprob: -8.034092903137207
    10. ' ' → logprob: -8.409092903137207

Token 297: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06253513693809509
    2. '
' → logprob: -3.437535047531128
    3. '#' (adapté à ' #') → logprob: -4.437535285949707
    4. ',' → logprob: -5.312535285949707
    5. '    
' → logprob: -5.437535285949707
    6. '<|end|>' → logprob: -6.062535285949707
    7. 'def' → logprob: -6.312535285949707
    8. ' and' → logprob: -7.437535285949707
    9. ':' → logprob: -8.312535285949707
    10. ' #' → logprob: -8.437535285949707

Token 298: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7030764222145081
    2. '#' → logprob: -2.2030763626098633
    3. ' assigned' → logprob: -2.2030763626098633
    4. '
' → logprob: -2.5780763626098633
    5. ' result' → logprob: -3.0780763626098633
    6. ' #' → logprob: -3.5780763626098633
    7. 'result' → logprob: -3.7030763626098633
    8. 'assigned' → logprob: -4.453076362609863
    9. '    
' → logprob: -4.578076362609863
    10. ' assignments' → logprob: -4.703076362609863

Token 299: ' rectangle' (ID: 45808)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.900992214679718
    2. ' #' → logprob: -1.7759921550750732
    3. ' for' → logprob: -1.9009921550750732
    4. '   ' → logprob: -2.7759921550750732
    5. ' buyers' → logprob: -3.2759921550750732
    6. 'Each' → logprob: -3.4009921550750732
    7. 'def' → logprob: -3.7759921550750732
    8. ' each' → logprob: -3.9009921550750732
    9. 'for' → logprob: -4.400992393493652
    10. ' b' → logprob: -4.900992393493652

Token 300: ' area' (ID: 3624)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.015598589554429054
    2. ' =' → logprob: -5.640598773956299
    3. '_area' → logprob: -6.015598773956299
    4. ' areas' → logprob: -6.140598773956299
    5. 'areas' → logprob: -6.390598773956299
    6. ' s' → logprob: -6.515598773956299
    7. ' area' → logprob: -6.890598773956299
    8. ' is' → logprob: -7.640598773956299
    9. 'area' → logprob: -7.890598773956299
    10. ' coordinates' → logprob: -8.51559829711914

Token 301: ' ==' (ID: 951)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2663680613040924
    2. 's' → logprob: -2.5163681507110596
    3. '<=' → logprob: -2.6413681507110596
    4. '<|end|>' → logprob: -3.6413681507110596
    5. ' ==' → logprob: -3.8913681507110596
    6. ' >=' → logprob: -4.3913679122924805
    7. '=' → logprob: -5.1413679122924805
    8. '==' → logprob: -5.5163679122924805
    9. ' =' → logprob: -5.7663679122924805
    10. '>=' → logprob: -6.1413679122924805

Token 302: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.41235852241516113
    2. 'b' → logprob: -1.9123585224151611
    3. 'buyers' → logprob: -2.287358522415161
    4. ' k' → logprob: -3.037358522415161
    5. ' buyers' → logprob: -3.412358522415161
    6. ' b' → logprob: -5.537358283996582
    7. 'buyer' → logprob: -5.912358283996582
    8. ' buyer' → logprob: -8.037358283996582
    9. 'buy' → logprob: -8.537358283996582
    10. '```' → logprob: -8.662358283996582

Token 303: '_i' (ID: 10853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0976059436798096
    2. '
' → logprob: -1.3476059436798096
    3. ' buyers' → logprob: -1.5976059436798096
    4. '<|end|>' → logprob: -2.8476059436798096
    5. 'buyers' → logprob: -3.5976059436798096
    6. 'def' → logprob: -3.7226059436798096
    7. ',' → logprob: -4.0976057052612305
    8. '    
' → logprob: -4.0976057052612305
    9. '#' → logprob: -4.5976057052612305
    10. 'import' → logprob: -4.8476057052612305

Token 304: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033580806106328964
    2. '
' → logprob: -4.408580780029297
    3. ' buyers' → logprob: -5.033580780029297
    4. 'def' → logprob: -6.158580780029297
    5. ' buyer' → logprob: -6.283580780029297
    6. '#' → logprob: -6.783580780029297
    7. '    
' → logprob: -6.908580780029297
    8. 'buyers' → logprob: -6.908580780029297
    9. ' rectangles' → logprob: -6.908580780029297
    10. 'dp' → logprob: -7.158580780029297

Token 305: ' buyer' (ID: 28061)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.6887919306755066
    2. 'buyer' → logprob: -1.1887919902801514
    3. 'buyers' → logprob: -2.8137919902801514
    4. ' each' → logprob: -2.8137919902801514
    5. ' buyer' → logprob: -3.1887919902801514
    6. 'b' → logprob: -4.188791751861572
    7. ' buyers' → logprob: -4.813791751861572
    8. 'the' → logprob: -5.188791751861572
    9. 'i' → logprob: -6.688791751861572
    10. ' the' → logprob: -7.438791751861572

Token 306: ' i' (ID: 575)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01933477073907852
    2. '<|end|>' → logprob: -5.14433479309082
    3. '
' → logprob: -5.26933479309082
    4. 'def' → logprob: -5.89433479309082
    5. '    
' → logprob: -5.89433479309082
    6. ',' → logprob: -7.01933479309082
    7. '#' → logprob: -8.14433479309082
    8. 'from' → logprob: -8.26933479309082
    9. '...' → logprob: -8.64433479309082
    10. ' rectangles' → logprob: -9.14433479309082

Token 307: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13299359381198883
    2. '
' → logprob: -2.632993698120117
    3. '<|end|>' → logprob: -3.382993698120117
    4. ',' → logprob: -5.007993698120117
    5. '    
' → logprob: -5.132993698120117
    6. '#' → logprob: -6.632993698120117
    7. 'def' → logprob: -6.632993698120117
    8. '    ' → logprob: -7.257993698120117
    9. '<|end|>' → logprob: -7.882993698120117
    10. ':' → logprob: -7.882993698120117

Token 308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06076304242014885
    2. '
' → logprob: -3.435763120651245
    3. '<|end|>' → logprob: -4.935762882232666
    4. '    
' → logprob: -5.060762882232666
    5. 'def' → logprob: -5.685762882232666
    6. '#' → logprob: -5.935762882232666
    7. '```' → logprob: -6.560762882232666
    8. ',' → logprob: -7.310762882232666
    9. ' rectangles' → logprob: -7.435762882232666
    10. ' 
' → logprob: -7.810762882232666

Token 309: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1557276248931885
    2. 'assigned' → logprob: -2.1557276248931885
    3. 'rect' → logprob: -2.7807276248931885
    4. '#' (adapté à ' #') → logprob: -2.7807276248931885
    5. 'prefix' → logprob: -2.9057276248931885
    6. 'dp' → logprob: -3.0307276248931885
    7. 'res' → logprob: -3.1557276248931885
    8. ' assigned' → logprob: -3.1557276248931885
    9. 'def' → logprob: -3.1557276248931885
    10. 'import' → logprob: -3.2807276248931885

Token 310: ' -' (ID: 533)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -1.5587447881698608
    2. 'dp' → logprob: -1.8087447881698608
    3. 'prefix' → logprob: -2.0587449073791504
    4. '#' → logprob: -2.0587449073791504
    5. 'rect' → logprob: -2.3087449073791504
    6. 'assign' → logprob: -3.3087449073791504
    7. 'import' → logprob: -3.4337449073791504
    8. '   ' → logprob: -3.6837449073791504
    9. 'res' → logprob: -3.9337449073791504
    10. 'from' → logprob: -3.9337449073791504

Token 311: ' rectangle' (ID: 45808)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3273082673549652
    2. 'return' → logprob: -2.702308177947998
    3. ' #' → logprob: -3.202308177947998
    4. 'def' → logprob: -3.577308177947998
    5. 'rect' → logprob: -4.077308177947998
    6. ' return' → logprob: -4.327308177947998
    7. 'dp' → logprob: -4.452308177947998
    8. 'prefix' → logprob: -4.952308177947998
    9. 'import' → logprob: -5.077308177947998
    10. ' assigned' → logprob: -5.202308177947998

Token 312: ' contains' (ID: 8895)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01849113218486309
    2. ' is' → logprob: -5.143491268157959
    3. ' coordinates' → logprob: -5.893491268157959
    4. ' area' → logprob: -6.018491268157959
    5. ' areas' → logprob: -6.143491268157959
    6. ' are' → logprob: -6.518491268157959
    7. ' positions' → logprob: -7.393491268157959
    8. ''s' → logprob: -8.1434907913208
    9. ' covers' → logprob: -8.2684907913208
    10. ' s' → logprob: -8.5184907913208

Token 313: ' the' (ID: 290)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.9664110541343689
    2. ' all' → logprob: -1.4664111137390137
    3. ' at' → logprob: -2.3414111137390137
    4. ' the' → logprob: -2.4664111137390137
    5. ' s' → logprob: -2.7164111137390137
    6. ' buyers' → logprob: -3.4664111137390137
    7. 'only' → logprob: -3.5914111137390137
    8. ' buyer' → logprob: -3.8414111137390137
    9. 's' → logprob: -4.216411113739014
    10. 'all' → logprob: -4.216411113739014

Token 314: ' positions' (ID: 15897)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.439246416091919
    2. ' buyer' → logprob: -1.939246416091919
    3. 'buyer' → logprob: -1.939246416091919
    4. 'same' → logprob: -2.314246416091919
    5. 'b' → logprob: -2.564246416091919
    6. ' s' → logprob: -2.689246416091919
    7. 'value' → logprob: -2.939246416091919
    8. ' same' → logprob: -3.689246416091919
    9. ' value' → logprob: -4.31424617767334
    10. 'i' → logprob: -4.31424617767334

Token 315: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47574958205223083
    2. ' of' → logprob: -1.6007496118545532
    3. ' for' → logprob: -2.9757494926452637
    4. ' buyers' → logprob: -3.7257494926452637
    5. ',' → logprob: -4.225749492645264
    6. ' that' → logprob: -4.475749492645264
    7. 'def' → logprob: -4.600749492645264
    8. ' (' → logprob: -4.850749492645264
    9. ' ' → logprob: -5.225749492645264
    10. '    ' → logprob: -5.225749492645264

Token 316: ' the' (ID: 290)
  Prédit: 'buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buyer' → logprob: -1.3471300601959229
    2. 'all' → logprob: -1.8471300601959229
    3. 'buyers' → logprob: -1.8471300601959229
    4. 'the' → logprob: -1.8471300601959229
    5. '1' → logprob: -2.972130060195923
    6. ' buyer' → logprob: -2.972130060195923
    7. 'b' → logprob: -3.347130060195923
    8. ' all' → logprob: -3.722130060195923
    9. 'their' → logprob: -3.847130060195923
    10. ' buyers' → logprob: -4.347129821777344

Token 317: ' buyer' (ID: 28061)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.7582572102546692
    2. 'buyer' → logprob: -1.0082571506500244
    3. 'i' → logprob: -2.0082571506500244
    4. 'buy' → logprob: -4.5082573890686035
    5. ' buyer' → logprob: -4.8832573890686035
    6. 'b' → logprob: -5.2582573890686035
    7. ' buyers' → logprob: -5.5082573890686035
    8. 's' → logprob: -6.6332573890686035
    9. ' i' → logprob: -6.8832573890686035
    10. 'current' → logprob: -7.5082573890686035

Token 318: ''s' (ID: 885)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9418224692344666
    2. '<|end|>' → logprob: -1.0668225288391113
    3. 'def' → logprob: -2.1918225288391113
    4. '#' → logprob: -2.5668225288391113
    5. '
' → logprob: -3.8168225288391113
    6. ' ' → logprob: -4.816822528839111
    7. '    
' → logprob: -5.191822528839111
    8. ',' → logprob: -5.191822528839111
    9. '...' → logprob: -5.191822528839111
    10. 'import' → logprob: -5.566822528839111

Token 319: ' boards' (ID: 27531)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.8030859231948853
    2. 'points' → logprob: -1.8030859231948853
    3. '1' → logprob: -2.5530858039855957
    4. 'tokens' → logprob: -2.6780858039855957
    5. 'c' → logprob: -3.0530858039855957
    6. 'stones' → logprob: -3.0530858039855957
    7. 'positions' → logprob: -3.4280858039855957
    8. 'marks' → logprob: -3.6780858039855957
    9. 'number' → logprob: -3.8030858039855957
    10. 'markers' → logprob: -3.8030858039855957

Token 320: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06737140566110611
    2. '<|end|>' → logprob: -3.442371368408203
    3. '
' → logprob: -4.067371368408203
    4. '    
' → logprob: -5.442371368408203
    5. '#' → logprob: -5.942371368408203
    6. 'def' → logprob: -6.317371368408203
    7. '    ' → logprob: -6.442371368408203
    8. ',' → logprob: -6.817371368408203
    9. 'from' → logprob: -7.442371368408203
    10. ' ' → logprob: -7.442371368408203

Token 321: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.757529079914093
    2. 'b' → logprob: -1.1325290203094482
    3. ' b' → logprob: -2.7575290203094482
    4. 'def' → logprob: -4.382529258728027
    5. ' )' → logprob: -4.507529258728027
    6. '0' → logprob: -4.507529258728027
    7. ' all' → logprob: -4.632529258728027
    8. ',' → logprob: -4.632529258728027
    9. ' and' → logprob: -4.757529258728027
    10. ' if' → logprob: -4.882529258728027

Token 322: '_' (ID: 62)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8239431977272034
    2. '[y' → logprob: -1.8239431381225586
    3. '==' → logprob: -2.0739431381225586
    4. '[i' → logprob: -2.3239431381225586
    5. ' ==' → logprob: -3.1989431381225586
    6. ',' → logprob: -3.4489431381225586
    7. 'positions' → logprob: -4.573943138122559
    8. '[x' → logprob: -4.948943138122559
    9. ' positions' → logprob: -4.948943138122559
    10. '[row' → logprob: -5.323943138122559

Token 323: 'ij' (ID: 681)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.05167824402451515
    2. ')' → logprob: -3.92667818069458
    3. '[b' → logprob: -4.67667818069458
    4. '[i' → logprob: -4.67667818069458
    5. '[' → logprob: -6.05167818069458
    6. '[x' → logprob: -6.17667818069458
    7. 'y' → logprob: -6.30167818069458
    8. '[s' → logprob: -6.92667818069458
    9. '==' → logprob: -7.42667818069458
    10. ' ==' → logprob: -7.67667818069458

Token 324: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21350887417793274
    2. ' contains' → logprob: -2.7135088443756104
    3. '==' → logprob: -3.2135088443756104
    4. ' ==' → logprob: -3.8385088443756104
    5. ' positions' → logprob: -4.0885090827941895
    6. ' )' → logprob: -5.2135090827941895
    7. ' that' → logprob: -5.5885090827941895
    8. 'positions' → logprob: -5.5885090827941895
    9. 'contains' → logprob: -5.7135090827941895
    10. ' must' → logprob: -5.8385090827941895

Token 325: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.08165401965379715
    2. ' b' → logprob: -2.9566540718078613
    3. '1' → logprob: -3.7066540718078613
    4. ' ' → logprob: -7.331654071807861
    5. 'buyers' → logprob: -8.081653594970703
    6. ' buyers' → logprob: -8.206653594970703
    7. 's' → logprob: -9.081653594970703
    8. 'i' → logprob: -9.081653594970703
    9. ' s' → logprob: -9.831653594970703
    10. '   ' → logprob: -9.956653594970703

Token 326: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.01772795431315899
    2. ')' → logprob: -4.892727851867676
    3. 'i' → logprob: -5.392727851867676
    4. ')_' → logprob: -6.267727851867676
    5. '_' → logprob: -6.392727851867676
    6. '_j' → logprob: -7.767727851867676
    7. '[i' → logprob: -8.267727851867676
    8. 's' → logprob: -8.517727851867676
    9. '_b' → logprob: -8.642727851867676
    10. '_)' → logprob: -8.892727851867676

Token 327: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03307567536830902
    2. '   ' → logprob: -4.40807580947876
    3. ' )' → logprob: -5.03307580947876
    4. '_' → logprob: -5.65807580947876
    5. ')
' → logprob: -6.15807580947876
    6. ' for' → logprob: -6.53307580947876
    7. '):' → logprob: -6.53307580947876
    8. '_)' → logprob: -6.78307580947876
    9. ',' → logprob: -7.53307580947876
    10. 'def' → logprob: -7.65807580947876

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03324219584465027
    2. '#' → logprob: -3.6582422256469727
    3. 'def' → logprob: -5.783242225646973
    4. ' #' → logprob: -7.283242225646973
    5. 'from' → logprob: -7.533242225646973
    6. 'import' → logprob: -7.658242225646973
    7. '    
' → logprob: -8.408242225646973
    8. '    ' → logprob: -8.408242225646973
    9. '
' → logprob: -8.533242225646973
    10. '<|end|>' → logprob: -8.533242225646973

Token 329: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6444501280784607
    2. '   ' → logprob: -1.6444501876831055
    3. '<|end|>' → logprob: -2.1444501876831055
    4. '    
' → logprob: -3.2694501876831055
    5. '    ' → logprob: -3.3944501876831055
    6. ' 
' → logprob: -3.5194501876831055
    7. ' ' → logprob: -3.6444501876831055
    8. ':' → logprob: -4.5194501876831055
    9. '#' (adapté à ' #') → logprob: -5.2694501876831055
    10. 'def' → logprob: -5.5194501876831055

Token 330: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33766111731529236
    2. '#' → logprob: -3.087661027908325
    3. ' assigned' → logprob: -3.087661027908325
    4. 'def' → logprob: -3.337661027908325
    5. ' buyers' → logprob: -3.712661027908325
    6. '
' → logprob: -3.712661027908325
    7. ' from' → logprob: -4.212661266326904
    8. 'from' → logprob: -4.462661266326904
    9. ' def' → logprob: -4.587661266326904
    10. ' buyer' → logprob: -4.837661266326904

Token 331: ' no' (ID: 860)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3261902332305908
    2. ' #' → logprob: -2.826190233230591
    3. ' pass' → logprob: -3.201190233230591
    4. ' return' → logprob: -3.326190233230591
    5. '   ' → logprob: -3.326190233230591
    6. 'return' → logprob: -3.826190233230591
    7. ' result' → logprob: -3.951190233230591
    8. ' for' → logprob: -4.701189994812012
    9. 'pass' → logprob: -4.826189994812012
    10. 'def' → logprob: -4.951189994812012

Token 332: ' overlap' (ID: 56631)
  Prédit: ' overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.24581700563430786
    2. ' space' → logprob: -2.370816946029663
    3. ' ' → logprob: -3.245816946029663
    4. ' overlaps' → logprob: -3.620816946029663
    5. 't' → logprob: -3.995816946029663
    6. ' overlapping' → logprob: -4.745817184448242
    7. ' t' → logprob: -4.870817184448242
    8. ' two' → logprob: -4.870817184448242
    9. 'n' → logprob: -5.995817184448242
    10. '_overlap' → logprob: -5.995817184448242

Token 333: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7556458115577698
    2. '   ' → logprob: -1.505645751953125
    3. 'from' → logprob: -2.630645751953125
    4. 'import' → logprob: -2.755645751953125
    5. 'dp' → logprob: -3.005645751953125
    6. 'def' → logprob: -3.505645751953125
    7. 'assigned' → logprob: -4.130645751953125
    8. 'buyers' → logprob: -4.755645751953125
    9. 'pass' → logprob: -4.880645751953125
    10. ' buyers' → logprob: -5.130645751953125

Token 334: ' cover' (ID: 4321)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8185239434242249
    2. '   ' → logprob: -1.44352388381958
    3. '#' → logprob: -1.69352388381958
    4. 'def' → logprob: -3.44352388381958
    5. ' return' → logprob: -3.81852388381958
    6. 'and' → logprob: -3.81852388381958
    7. 'return' → logprob: -4.31852388381958
    8. ' but' → logprob: -4.69352388381958
    9. ' #' → logprob: -4.69352388381958
    10. '
' → logprob: -4.81852388381958

Token 335: ' whole' (ID: 6062)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.09237361699342728
    2. 'ing' → logprob: -2.4673736095428467
    3. ' all' → logprob: -6.717373847961426
    4. ' the' → logprob: -6.842373847961426
    5. '   ' → logprob: -7.342373847961426
    6. '  ' → logprob: -9.467373847961426
    7. ' entire' → logprob: -9.467373847961426
    8. 'all' → logprob: -10.092373847961426
    9. ' ' → logprob: -10.342373847961426
    10. 'e' → logprob: -10.592373847961426

Token 336: ' area' (ID: 3624)
  Prédit: ' field'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' field' → logprob: -0.24103614687919617
    2. '   ' → logprob: -2.4910361766815186
    3. 'field' → logprob: -2.4910361766815186
    4. ' area' → logprob: -3.7410361766815186
    5. 'def' → logprob: -4.2410359382629395
    6. '
' → logprob: -5.9910359382629395
    7. 'area' → logprob: -6.1160359382629395
    8. '#' → logprob: -6.4910359382629395
    9. ' #' → logprob: -7.3660359382629395
    10. ' 
' → logprob: -7.3660359382629395

Token 337: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1649610549211502
    2. '#' → logprob: -3.039961099624634
    3. '
' → logprob: -3.414961099624634
    4. 'def' → logprob: -3.914961099624634
    5. '    
' → logprob: -4.414960861206055
    6. ' #' → logprob: -4.914960861206055
    7. ' buyers' → logprob: -5.289960861206055
    8. 'import' → logprob: -5.789960861206055
    9. ' 
' → logprob: -6.039960861206055
    10. ' rectangles' → logprob: -6.039960861206055

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4021385908126831
    2. '    ' → logprob: -1.902138590812683
    3. ' ' → logprob: -2.2771387100219727
    4. ' 
' → logprob: -3.7771387100219727
    5. '#' → logprob: -3.9021387100219727
    6. '    
' → logprob: -4.402138710021973
    7. ' #' → logprob: -4.527138710021973
    8. '<|end|>' → logprob: -5.902138710021973
    9. ' pass' → logprob: -6.152138710021973
    10. '
' → logprob: -6.152138710021973

Token 339: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.8851745128631592
    2. 'prefix' → logprob: -2.010174512863159
    3. 'assigned' → logprob: -2.635174512863159
    4. 'assign' → logprob: -2.885174512863159
    5. 'rect' → logprob: -2.885174512863159
    6. 'from' → logprob: -3.010174512863159
    7. 'pass' → logprob: -3.385174512863159
    8. 'dp' → logprob: -3.385174512863159
    9. 'import' → logprob: -3.760174512863159
    10. 'height' → logprob: -4.010174751281738

Token 340: ' We' (ID: 1416)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.4841196537017822
    2. '#' → logprob: -1.6091196537017822
    3. 'import' → logprob: -2.4841196537017822
    4. 'def' → logprob: -2.6091196537017822
    5. 'prefix' → logprob: -2.6091196537017822
    6. 'dp' → logprob: -2.6091196537017822
    7. '   ' → logprob: -3.3591196537017822
    8. 'field' → logprob: -3.7341196537017822
    9. 'assigned' → logprob: -3.7341196537017822
    10. 'height' → logprob: -3.9841196537017822

Token 341: ' try' (ID: 2075)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4822566509246826
    2. ' need' → logprob: -1.9822566509246826
    3. 'def' → logprob: -2.2322566509246826
    4. ' visited' → logprob: -3.3572566509246826
    5. 'visited' → logprob: -3.4822566509246826
    6. ' can' → logprob: -3.8572566509246826
    7. ' =' → logprob: -4.232256889343262
    8. 'import' → logprob: -4.982256889343262
    9. ' should' → logprob: -5.107256889343262
    10. ' def' → logprob: -5.482256889343262

Token 342: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4878392219543457
    2. 'to' → logprob: -1.3628392219543457
    3. ':' → logprob: -2.4878392219543457
    4. 'all' → logprob: -4.112839221954346
    5. ' all' → logprob: -4.362839221954346
    6. '   ' → logprob: -4.737839221954346
    7. 'def' → logprob: -5.862839221954346
    8. 'ing' → logprob: -5.987839221954346
    9. 'from' → logprob: -7.487839221954346
    10. ':
' → logprob: -7.737839221954346

Token 343: ' find' (ID: 1646)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.4736798405647278
    2. 'find' → logprob: -1.848679780960083
    3. ' find' → logprob: -1.973679780960083
    4. ' assign' → logprob: -2.973679780960083
    5. ' use' → logprob: -4.973680019378662
    6. 'use' → logprob: -5.473680019378662
    7. 'import' → logprob: -5.723680019378662
    8. 'dfs' → logprob: -5.848680019378662
    9. 'implement' → logprob: -5.848680019378662
    10. ' implement' → logprob: -5.973680019378662

Token 344: ' all' (ID: 722)
  Prédit: ' rectangles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rectangles' → logprob: -0.47044306993484497
    2. 'def' → logprob: -1.8454430103302002
    3. 'rect' → logprob: -2.5954430103302
    4. ' a' → logprob: -3.3454430103302
    5. 'the' → logprob: -3.4704430103302
    6. 'a' → logprob: -3.7204430103302
    7. ' the' → logprob: -4.220443248748779
    8. 'x' → logprob: -5.095443248748779
    9. '<|end|>' → logprob: -5.345443248748779
    10. 'for' → logprob: -5.720443248748779

Token 345: ' rectangles' (ID: 164265)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.22798249125480652
    2. ' possible' → logprob: -2.477982521057129
    3. ' rectangles' → logprob: -3.102982521057129
    4. 'rect' → logprob: -3.977982521057129
    5. 'buyers' → logprob: -4.102982521057129
    6. 'positions' → logprob: -4.352982521057129
    7. ' buyers' → logprob: -4.602982521057129
    8. 'poss' → logprob: -6.102982521057129
    9. '<|end|>' → logprob: -6.352982521057129
    10. '_possible' → logprob: -6.602982521057129

Token 346: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 347: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.36540961265563965
    2. 'buyer' → logprob: -2.2404096126556396
    3. 'the' → logprob: -2.4904096126556396
    4. ' each' → logprob: -3.1154096126556396
    5. 'buyers' → logprob: -3.6154096126556396
    6. 'i' → logprob: -4.240409851074219
    7. ' buyer' → logprob: -4.240409851074219
    8. 'all' → logprob: -4.990409851074219
    9. ' the' → logprob: -5.990409851074219
    10. 'b' → logprob: -6.240409851074219

Token 348: ' buyer' (ID: 28061)
  Prédit: ' buyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buyer' → logprob: -0.39138302206993103
    2. 'buyer' → logprob: -1.1413830518722534
    3. 'i' → logprob: -6.391383171081543
    4. ' i' → logprob: -7.016383171081543
    5. 'b' → logprob: -7.016383171081543
    6. 'buyers' → logprob: -8.391383171081543
    7. ' buyers' → logprob: -8.516383171081543
    8. 'def' → logprob: -8.641383171081543
    9. 'buy' → logprob: -9.141383171081543
    10. '_i' → logprob: -9.766383171081543

Token 349: ' consistent' (ID: 20434)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.07236647605896
    2. '   ' → logprob: -1.19736647605896
    3. '<|end|>' → logprob: -1.69736647605896
    4. ':' → logprob: -2.82236647605896
    5. 'def' → logprob: -3.07236647605896
    6. '.' → logprob: -4.072366714477539
    7. '#' → logprob: -4.697366714477539
    8. '
' → logprob: -4.697366714477539
    9. '<|end|>' → logprob: -4.697366714477539
    10. 'import' → logprob: -5.197366714477539

Token 350: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.6332221627235413
    2. 'with' → logprob: -0.7582221627235413
    3. ',' → logprob: -8.383222579956055
    4. '   ' → logprob: -9.258222579956055
    5. '<|end|>' → logprob: -9.383222579956055
    6. '.' → logprob: -9.633222579956055
    7. 'def' → logprob: -10.633222579956055
    8. '#' → logprob: -10.883222579956055
    9. '<|end|>' → logprob: -11.008222579956055
    10. '    ' → logprob: -11.133222579956055

Token 351: ' all' (ID: 722)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.504956841468811
    2. 'their' → logprob: -1.879956841468811
    3. ' the' → logprob: -2.0049567222595215
    4. ' their' → logprob: -3.0049567222595215
    5. 'buyers' → logprob: -3.7549567222595215
    6. 's' → logprob: -4.6299567222595215
    7. ' s' → logprob: -4.8799567222595215
    8. 'b' → logprob: -5.2549567222595215
    9. 'positions' → logprob: -5.8799567222595215
    10. ' buyers' → logprob: -5.8799567222595215

Token 352: ' boards' (ID: 27531)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.5765495896339417
    2. 'boards' → logprob: -1.0765495300292969
    3. 'buyers' → logprob: -3.076549530029297
    4. 'constraints' → logprob: -4.201549530029297
    5. ' positions' → logprob: -4.701549530029297
    6. 'possible' → logprob: -5.201549530029297
    7. ' boards' → logprob: -5.826549530029297
    8. ' constraints' → logprob: -6.201549530029297
    9. ' buyers' → logprob: -6.326549530029297
    10. 'b' → logprob: -6.326549530029297

Token 353: ' placed' (ID: 12989)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 354: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1460241079330444
    2. ',' → logprob: -1.3960241079330444
    3. '<|end|>' → logprob: -1.6460241079330444
    4. ':' → logprob: -2.396024227142334
    5. 'def' → logprob: -3.146024227142334
    6. '
' → logprob: -3.521024227142334
    7. '<|end|>' → logprob: -3.771024227142334
    8. '.' → logprob: -3.771024227142334
    9. '    
' → logprob: -5.021024227142334
    10. '#' → logprob: -5.771024227142334

Token 355: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01141406875103712
    2. ' ' → logprob: -5.886414051055908
    3. '<|end|>' → logprob: -5.886414051055908
    4. '    ' → logprob: -6.261414051055908
    5. ',' → logprob: -6.636414051055908
    6. '    
' → logprob: -7.011414051055908
    7. ':' → logprob: -8.011414527893066
    8. ' for' → logprob: -8.761414527893066
    9. 'def' → logprob: -8.886414527893066
    10. ')' → logprob: -9.011414527893066

Token 356: ' #' (ID: 1069)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -1.3497354984283447
    2. '   ' → logprob: -1.5997354984283447
    3. 'from' → logprob: -2.2247354984283447
    4. 'assigned' → logprob: -3.3497354984283447
    5. '#' (adapté à ' #') → logprob: -3.4747354984283447
    6. 'res' → logprob: -3.5997354984283447
    7. 'assign' → logprob: -3.5997354984283447
    8. ' from' → logprob: -3.7247354984283447
    9. 'possible' → logprob: -3.7247354984283447
    10. ' buyer' → logprob: -3.8497354984283447

Token 357: ' For' (ID: 2214)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.301427960395813
    2. 'rect' → logprob: -1.676427960395813
    3. 'possible' → logprob: -2.1764278411865234
    4. 'buyer' → logprob: -2.8014278411865234
    5. 'import' → logprob: -3.3014278411865234
    6. '   ' → logprob: -3.3014278411865234
    7. 'assigned' → logprob: -3.3014278411865234
    8. '#' → logprob: -3.4264278411865234
    9. 'res' → logprob: -3.6764278411865234
    10. 'buyers' → logprob: -3.6764278411865234

Token 358: ' each' (ID: 2454)
  Prédit: ' buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buyer' → logprob: -0.8188454508781433
    2. ' b' → logprob: -1.818845510482788
    3. 'b' → logprob: -2.068845510482788
    4. ' i' → logprob: -2.318845510482788
    5. 'buyer' → logprob: -2.568845510482788
    6. ' y' → logprob: -3.568845510482788
    7. 'i' → logprob: -3.818845510482788
    8. 'y' → logprob: -4.443845272064209
    9. ' each' → logprob: -4.693845272064209
    10. 'each' → logprob: -4.693845272064209

Token 359: ' buyer' (ID: 28061)
  Prédit: ' buyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buyer' → logprob: -0.47651708126068115
    2. 'buyer' → logprob: -1.6015170812606812
    3. 'b' → logprob: -2.6015172004699707
    4. ' b' → logprob: -2.6015172004699707
    5. 'i' → logprob: -4.101517200469971
    6. ' i' → logprob: -4.476517200469971
    7. 'buy' → logprob: -8.226516723632812
    8. 'def' → logprob: -8.351516723632812
    9. ' (' → logprob: -9.726516723632812
    10. '_i' → logprob: -9.726516723632812

Token 360: ' b' (ID: 287)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19026519358158112
    2. '_i' → logprob: -2.94026517868042
    3. 'i' → logprob: -3.19026517868042
    4. 'b' → logprob: -3.69026517868042
    5. ' i' → logprob: -3.94026517868042
    6. ':' → logprob: -4.56526517868042
    7. ' b' → logprob: -5.31526517868042
    8. '_,' → logprob: -5.31526517868042
    9. ' ,' → logprob: -5.44026517868042
    10. ',i' → logprob: -5.81526517868042

Token 361: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.6770057082176208
    2. ',' → logprob: -1.1770057678222656
    3. ' in' → logprob: -1.8020057678222656
    4. 'in' → logprob: -4.927005767822266
    5. '_id' → logprob: -5.052005767822266
    6. 'i' → logprob: -6.177005767822266
    7. ',_' → logprob: -6.927005767822266
    8. '_idx' → logprob: -7.177005767822266
    9. '_,' → logprob: -8.302005767822266
    10. '_' → logprob: -8.302005767822266

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034412842243909836
    2. ' in' → logprob: -3.9094128608703613
    3. ',b' → logprob: -5.659412860870361
    4. 'in' → logprob: -5.784412860870361
    5. '_i' → logprob: -6.534412860870361
    6. '_idx' → logprob: -6.659412860870361
    7. 'b' → logprob: -6.909412860870361
    8. ' ,' → logprob: -7.534412860870361
    9. ',_' → logprob: -8.034412384033203
    10. ':' → logprob: -8.159412384033203

Token 363: ' locate' (ID: 29006)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0695806741714478
    2. 'x' → logprob: -2.069580554962158
    3. '   ' → logprob: -2.194580554962158
    4. 'boards' → logprob: -2.319580554962158
    5. 'min' → logprob: -2.444580554962158
    6. 'positions' → logprob: -2.569580554962158
    7. 'xs' → logprob: -3.819580554962158
    8. 'bx' → logprob: -3.944580554962158
    9. '#' → logprob: -4.194580554962158
    10. ' b' → logprob: -4.444580554962158

Token 364: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.7714896202087402
    2. 'all' → logprob: -1.5214896202087402
    3. 'boards' → logprob: -1.8964896202087402
    4. 'the' → logprob: -2.7714896202087402
    5. ' all' → logprob: -3.1464896202087402
    6. 'their' → logprob: -3.6464896202087402
    7. ' their' → logprob: -4.89648962020874
    8. ' positions' → logprob: -5.02148962020874
    9. ' the' → logprob: -5.02148962020874
    10. 'b' → logprob: -5.64648962020874

Token 365: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1745186448097229
    2. '=' → logprob: -1.9245185852050781
    3. 'positions' → logprob: -5.424518585205078
    4. '_positions' → logprob: -5.924518585205078
    5. 'of' → logprob: -6.549518585205078
    6. ' of' → logprob: -6.924518585205078
    7. 'b' → logprob: -7.424518585205078
    8. 's' → logprob: -7.674518585205078
    9. 'in' → logprob: -7.799518585205078
    10. ' in' → logprob: -7.799518585205078

Token 366: ' its' (ID: 1617)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004430589731782675
    2. ' b' → logprob: -5.754430770874023
    3. 'boards' → logprob: -7.504430770874023
    4. 'their' → logprob: -7.754430770874023
    5. 'the' → logprob: -9.629430770874023
    6. ' their' → logprob: -9.879430770874023
    7. 'all' → logprob: -11.129430770874023
    8. 'that' → logprob: -11.129430770874023
    9. 'his' → logprob: -11.129430770874023
    10. 'i' → logprob: -11.129430770874023

Token 367: ' boards' (ID: 27531)
  Prédit: 'boards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boards' → logprob: -0.011519195511937141
    2. ' boards' → logprob: -4.511519432067871
    3. 'board' → logprob: -8.636519432067871
    4. 'b' → logprob: -8.886519432067871
    5. 'positions' → logprob: -10.011519432067871
    6. 'indices' → logprob: -11.136519432067871
    7. 'indexes' → logprob: -11.136519432067871
    8. 'cells' → logprob: -11.136519432067871
    9. 'tiles' → logprob: -11.386519432067871
    10. 'boats' → logprob: -11.761519432067871

Token 368: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8754027485847473
    2. ':' → logprob: -1.3754026889801025
    3. 'positions' → logprob: -1.7504026889801025
    4. ' positions' → logprob: -2.5004026889801025
    5. ',' → logprob: -3.6254026889801025
    6. '    
' → logprob: -4.500402927398682
    7. ' in' → logprob: -4.500402927398682
    8. '_positions' → logprob: -5.500402927398682
    9. ' for' → logprob: -5.750402927398682
    10. ':
' → logprob: -6.000402927398682

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4085393249988556
    2. ':' → logprob: -1.7835392951965332
    3. ',' → logprob: -2.533539295196533
    4. ' and' → logprob: -4.283539295196533
    5. '    
' → logprob: -4.408539295196533
    6. '_' → logprob: -4.658539295196533
    7. '.' → logprob: -4.908539295196533
    8. ' for' → logprob: -5.033539295196533
    9. ' positions' → logprob: -5.408539295196533
    10. ' in' → logprob: -5.533539295196533

Token 370: ' boards' (ID: 27531)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43039366602897644
    2. ' positions' → logprob: -2.180393695831299
    3. 'positions' → logprob: -2.805393695831299
    4. ' buyers' → logprob: -2.805393695831299
    5. 'buyers' → logprob: -3.305393695831299
    6. ' buyer' → logprob: -3.555393695831299
    7. 'def' → logprob: -4.430393695831299
    8. '    
' → logprob: -4.805393695831299
    9. 'buyer' → logprob: -4.930393695831299
    10. 'from' → logprob: -5.305393695831299

Token 371: '_pos' (ID: 14692)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1858944594860077
    2. '=' → logprob: -1.93589448928833
    3. '_positions' → logprob: -3.68589448928833
    4. '=[]' → logprob: -9.560894012451172
    5. '_' → logprob: -9.685894012451172
    6. 'positions' → logprob: -9.935894012451172
    7. '_pos' → logprob: -10.560894012451172
    8. '_for' → logprob: -11.435894012451172
    9. 'Positions' → logprob: -11.685894012451172
    10. '_by' → logprob: -12.310894012451172

Token 372: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38728928565979004
    2. ' =' → logprob: -1.13728928565979
    3. '=[]' → logprob: -7.887289047241211
    4. 's' → logprob: -10.512289047241211
    5. '=[]
' → logprob: -11.637289047241211
    6. '   ' → logprob: -13.637289047241211
    7. '=[' → logprob: -13.762289047241211
    8. ' ' → logprob: -14.387289047241211
    9. 'for' → logprob: -14.637289047241211
    10. '=b' → logprob: -15.012289047241211

Token 373: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.4754183888435364
    2. '{' → logprob: -0.9754183888435364
    3. '[' → logprob: -7.850418567657471
    4. ' {' → logprob: -8.225418090820312
    5. ' {}' → logprob: -8.225418090820312
    6. '{}
' → logprob: -8.475418090820312
    7. ' [[]' → logprob: -9.350418090820312
    8. 'dict' → logprob: -9.725418090820312
    9. '[]' → logprob: -10.225418090820312
    10. '   ' → logprob: -12.725418090820312

Token 374: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02090327814221382
    2. '}' → logprob: -4.02090311050415
    3. 'i' → logprob: -6.02090311050415
    4. ' b' → logprob: -9.020903587341309
    5. 'buyer' → logprob: -9.270903587341309
    6. '   ' → logprob: -10.520903587341309
    7. 'k' → logprob: -10.770903587341309
    8. 'bi' → logprob: -10.895903587341309
    9. 'bid' → logprob: -11.895903587341309
    10. '       ' → logprob: -12.145903587341309

Token 375: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4512255787849426
    2. '_i' → logprob: -1.0762255191802979
    3. ':i' → logprob: -4.326225757598877
    4. ':{}' → logprob: -5.451225757598877
    5. ':_' → logprob: -6.451225757598877
    6. 'i' → logprob: -6.951225757598877
    7. ' :' → logprob: -7.326225757598877
    8. ':b' → logprob: -7.326225757598877
    9. '_:' → logprob: -8.201225280761719
    10. ':[' → logprob: -8.326225280761719

Token 376: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0011953481007367373
    2. '[]}' → logprob: -6.751195430755615
    3. '[(' → logprob: -11.626194953918457
    4. ' []' → logprob: -12.126194953918457
    5. '[]
' → logprob: -12.626194953918457
    6. '[' → logprob: -12.876194953918457
    7. '(' → logprob: -13.001194953918457
    8. 'set' → logprob: -13.376194953918457
    9. '([]' → logprob: -15.001194953918457
    10. '[]

' → logprob: -15.126194953918457

Token 377: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25226178765296936
    2. ' for' → logprob: -1.502261757850647
    3. '   ' → logprob: -8.627262115478516
    4. ' ' → logprob: -10.002262115478516
    5. '()' → logprob: -10.752262115478516
    6. '       ' → logprob: -10.752262115478516
    7. '}' → logprob: -11.127262115478516
    8. '	for' → logprob: -11.252262115478516
    9. '    ' → logprob: -11.377262115478516
    10. '  ' → logprob: -11.627262115478516

Token 378: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003090963000431657
    2. '(b' → logprob: -6.128090858459473
    3. ' b' → logprob: -7.128090858459473
    4. '_,' → logprob: -10.378090858459473
    5. ' (' → logprob: -10.753090858459473
    6. 'buyer' → logprob: -11.253090858459473
    7. '[b' → logprob: -11.503090858459473
    8. 'buyers' → logprob: -11.878090858459473
    9. '(_,' → logprob: -12.253090858459473
    10. '_b' → logprob: -12.253090858459473

Token 379: ',k' (ID: 35155)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3942905366420746
    2. ',' → logprob: -1.644290566444397
    3. ' in' → logprob: -2.1442904472351074
    4. ',b' → logprob: -4.269290447235107
    5. 'b' → logprob: -7.269290447235107
    6. ',_' → logprob: -7.894290447235107
    7. ' ,' → logprob: -8.894290924072266
    8. '   ' → logprob: -9.019290924072266
    9. ',in' → logprob: -9.769290924072266
    10. ',i' → logprob: -10.644290924072266

Token 380: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5762063264846802
    2. ' in' → logprob: -0.8262063264846802
    3. ',' → logprob: -8.82620620727539
    4. ',b' → logprob: -10.82620620727539
    5. '_in' → logprob: -11.07620620727539
    6. 'b' → logprob: -11.07620620727539
    7. ' ' → logprob: -11.32620620727539
    8. 'buyers' → logprob: -11.57620620727539
    9. '   ' → logprob: -11.82620620727539
    10. ')' → logprob: -11.82620620727539

Token 381: ' buyers' (ID: 25359)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.003179855877533555
    2. ' buyers' → logprob: -5.753180027008057
    3. 'buy' → logprob: -13.628179550170898
    4. 'buyer' → logprob: -14.378179550170898
    5. 'b' → logprob: -15.003179550170898
    6. 'enumer' → logprob: -17.2531795501709
    7. ' ' → logprob: -17.6281795501709
    8. 'boys' → logprob: -17.6281795501709
    9. '[' → logprob: -17.7531795501709
    10. '(b' → logprob: -19.0031795501709

Token 382: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0007167232106439769
    2. '}
' → logprob: -7.625716686248779
    3. '   ' → logprob: -8.875717163085938
    4. ' }' → logprob: -9.375717163085938
    5. '}
' → logprob: -13.500717163085938
    6. '}

' → logprob: -13.875717163085938
    7. '    ' → logprob: -14.750717163085938
    8. ' ' → logprob: -15.000717163085938
    9. ' }
' → logprob: -15.625717163085938
    10. '       ' → logprob: -15.625717163085938

Token 383: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4961067736148834
    2. 'for' → logprob: -1.871106743812561
    3. '   ' → logprob: -2.4961068630218506
    4. ' for' → logprob: -2.9961068630218506
    5. '  
' → logprob: -2.9961068630218506
    6. '    
' → logprob: -3.6211068630218506
    7. ':' → logprob: -4.8711066246032715
    8. ' 
' → logprob: -5.1211066246032715
    9. '
' → logprob: -5.8711066246032715
    10. '<|end|>' → logprob: -5.9961066246032715

Token 384: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2997637093067169
    2. ' for' → logprob: -1.7997636795043945
    3. '
' → logprob: -2.4247636795043945
    4. '  
' → logprob: -6.5497636795043945
    5. '   ' → logprob: -6.9247636795043945
    6. ':' → logprob: -7.2997636795043945
    7. '<|end|>' → logprob: -7.7997636795043945
    8. '    
' → logprob: -7.9247636795043945
    9. ' ' → logprob: -8.799763679504395
    10. ':
' → logprob: -8.799763679504395

Token 385: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0035353288985788822
    2. ' y' → logprob: -6.128535270690918
    3. 'i' → logprob: -6.628535270690918
    4. 'row' → logprob: -11.753535270690918
    5. 'yi' → logprob: -12.128535270690918
    6. 'j' → logprob: -12.503535270690918
    7. 'b' → logprob: -12.628535270690918
    8. ' i' → logprob: -13.128535270690918
    9. '_y' → logprob: -13.503535270690918
    10. 'r' → logprob: -13.503535270690918

Token 386: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011528628878295422
    2. 'in' → logprob: -4.886528491973877
    3. ',' → logprob: -5.761528491973877
    4. ' ,' → logprob: -7.886528491973877
    5. ' ' → logprob: -7.886528491973877
    6. '	in' → logprob: -13.011528968811035
    7. ',y' → logprob: -13.136528968811035
    8. '_' → logprob: -13.136528968811035
    9. '0' → logprob: -13.386528968811035
    10. '_in' → logprob: -13.386528968811035

Token 387: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.15310683415737e-05
    2. ' range' → logprob: -10.750021934509277
    3. '0' → logprob: -20.50002098083496
    4. '
' → logprob: -20.87502098083496
    5. '	range' → logprob: -21.62502098083496
    6. '

' → logprob: -22.25002098083496
    7. ')' → logprob: -22.37502098083496
    8. '(range' → logprob: -22.50002098083496
    9. 'rang' → logprob: -23.25002098083496
    10. '```' → logprob: -23.25002098083496

Token 388: '(Y' (ID: 44341)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0008177272975444794
    2. ' Y' → logprob: -7.500817775726318
    3. '(Y' → logprob: -8.25081729888916
    4. '   ' → logprob: -12.87581729888916
    5. '0' → logprob: -14.50081729888916
    6. '	Y' → logprob: -15.12581729888916
    7. '1' → logprob: -15.87581729888916
    8. '(' → logprob: -17.125818252563477
    9. ',Y' → logprob: -17.375818252563477
    10. '[Y' → logprob: -17.500818252563477

Token 389: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3134711980819702
    2. '):' → logprob: -1.3134711980819702
    3. '   ' → logprob: -8.813470840454102
    4. '):
' → logprob: -10.188470840454102
    5. ':' → logprob: -11.438470840454102
    6. '+' → logprob: -12.813470840454102
    7. ' ):
' → logprob: -12.938470840454102
    8. ':
' → logprob: -13.188470840454102
    9. ' ):' → logprob: -13.438470840454102
    10. ' ' → logprob: -14.063470840454102

Token 390: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01708960346877575
    2. ' for' → logprob: -4.517089366912842
    3. '       ' → logprob: -5.267089366912842
    4. ':' → logprob: -7.267089366912842
    5. 'for' → logprob: -9.39208984375
    6. ' ' → logprob: -10.26708984375
    7. ':
' → logprob: -10.39208984375
    8. '	for' → logprob: -11.39208984375
    9. ',' → logprob: -13.51708984375
    10. '    ' → logprob: -13.76708984375

Token 391: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3150827884674072
    2. ' for' → logprob: -1.3150827884674072
    3. '   ' → logprob: -6.315082550048828
    4. ' ' → logprob: -12.440082550048828
    5. ' range' → logprob: -13.065082550048828
    6. '       ' → logprob: -13.315082550048828
    7. 'range' → logprob: -13.690082550048828
    8. 'x' → logprob: -14.065082550048828
    9. '	for' → logprob: -14.440082550048828
    10. ' x' → logprob: -15.690082550048828

Token 392: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.018160710111260414
    2. ' x' → logprob: -4.018160820007324
    3. 'X' → logprob: -11.518160820007324
    4. ' ' → logprob: -15.268160820007324
    5. '0' → logprob: -15.393160820007324
    6. ' X' → logprob: -15.643160820007324
    7. '   ' → logprob: -15.768160820007324
    8. '	x' → logprob: -16.393159866333008
    9. '    ' → logprob: -17.893159866333008
    10. '  ' → logprob: -18.268159866333008

Token 393: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029819343239068985
    2. 'in' → logprob: -3.5298192501068115
    3. ' ' → logprob: -10.65481948852539
    4. '   ' → logprob: -11.65481948852539
    5. '<|end|>' → logprob: -11.65481948852539
    6. '	in' → logprob: -11.90481948852539
    7. '    ' → logprob: -12.15481948852539
    8. '        ' → logprob: -12.77981948852539
    9. '=' → logprob: -12.77981948852539
    10. 'import' → logprob: -13.15481948852539

Token 394: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.8763291835784912
    2. 'X' → logprob: -1.1263291835784912
    3. ' range' → logprob: -1.3763291835784912
    4. ' X' → logprob: -5.00132942199707
    5. '(X' → logprob: -9.12632942199707
    6. '0' → logprob: -9.12632942199707
    7. '(range' → logprob: -12.25132942199707
    8. ' ' → logprob: -12.37632942199707
    9. '[X' → logprob: -12.87632942199707
    10. ' xrange' → logprob: -13.00132942199707

Token 395: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.5759885907173157
    2. 'X' → logprob: -0.8259885907173157
    3. ' X' → logprob: -10.32598876953125
    4. '(' → logprob: -12.20098876953125
    5. '   ' → logprob: -12.45098876953125
    6. ' (' → logprob: -13.20098876953125
    7. ')' → logprob: -13.70098876953125
    8. '       ' → logprob: -14.20098876953125
    9. '[X' → logprob: -14.20098876953125
    10. '	X' → logprob: -14.57598876953125

Token 396: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2014867216348648
    2. '):
' → logprob: -1.7014867067337036
    3. '):
' → logprob: -10.701486587524414
    4. ')' → logprob: -11.076486587524414
    5. ':' → logprob: -11.201486587524414
    6. '):

' → logprob: -11.451486587524414
    7. '       ' → logprob: -12.701486587524414
    8. ',' → logprob: -13.201486587524414
    9. '   ' → logprob: -13.201486587524414
    10. ' ):' → logprob: -13.701486587524414

Token 397: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017630017828196287
    2. ' if' → logprob: -6.626762866973877
    3. ',' → logprob: -8.626763343811035
    4. ':' → logprob: -8.751763343811035
    5. '          ' → logprob: -10.501763343811035
    6. '       ' → logprob: -10.876763343811035
    7. '	       ' → logprob: -11.501763343811035
    8. ':
' → logprob: -11.751763343811035
    9. '         ' → logprob: -11.876763343811035
    10. 'if' → logprob: -12.501763343811035

Token 398: ' cell' (ID: 4206)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9214023351669312
    2. ' if' → logprob: -1.5464023351669312
    3. 'b' → logprob: -1.6714023351669312
    4. 'if' → logprob: -3.2964024543762207
    5. 'board' → logprob: -3.5464024543762207
    6. ' b' → logprob: -3.5464024543762207
    7. 'cell' (adapté à ' cell') → logprob: -3.5464024543762207
    8. ' cell' → logprob: -3.6714024543762207
    9. 'pos' → logprob: -4.421402454376221
    10. 'val' → logprob: -4.921402454376221

Token 399: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.608546257019043
    2. ' =' → logprob: -0.858546257019043
    3. '_b' → logprob: -4.108546257019043
    4. '_val' → logprob: -4.858546257019043
    5. '_' → logprob: -5.608546257019043
    6. '_value' → logprob: -6.233546257019043
    7. '   ' → logprob: -7.233546257019043
    8. ' ' → logprob: -7.983546257019043
    9. 'b' → logprob: -8.233546257019043
    10. 's' → logprob: -8.858546257019043

Token 400: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12692894041538239
    2. ' s' → logprob: -2.1269290447235107
    3. '   ' → logprob: -16.001928329467773
    4. '_s' → logprob: -16.126928329467773
    5. '`s' → logprob: -16.126928329467773
    6. '(s' → logprob: -16.251928329467773
    7. '{s' → logprob: -16.376928329467773
    8. '           ' → logprob: -16.501928329467773
    9. '	s' → logprob: -17.251928329467773
    10. ')' → logprob: -17.251928329467773

Token 401: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0016273368382826447
    2. ')' → logprob: -7.376627445220947
    3. '           ' → logprob: -8.251626968383789
    4. '(y' → logprob: -8.751626968383789
    5. ',y' → logprob: -9.001626968383789
    6. '<|end|>' → logprob: -9.501626968383789
    7. ',' → logprob: -9.751626968383789
    8. 'y' → logprob: -9.876626968383789
    9. '       ' → logprob: -10.126626968383789
    10. '][' → logprob: -10.376626968383789

Token 402: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.054413869976997375
    2. '[x' → logprob: -3.4294137954711914
    3. ']' → logprob: -4.554413795471191
    4. ')' → logprob: -5.429413795471191
    5. ']==' → logprob: -6.179413795471191
    6. ')[' → logprob: -6.429413795471191
    7. '[y' → logprob: -7.304413795471191
    8. '           ' → logprob: -8.429413795471191
    9. '==' → logprob: -8.929413795471191
    10. ')==' → logprob: -9.054413795471191

Token 403: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.696889623621246e-06
    2. ' x' → logprob: -12.87500286102295
    3. ')x' → logprob: -17.250001907348633
    4. '	x' → logprob: -19.500001907348633
    5. '"x' → logprob: -19.500001907348633
    6. ']' → logprob: -19.750001907348633
    7. '(x' → logprob: -19.750001907348633
    8. '[x' → logprob: -21.250001907348633
    9. '```' → logprob: -21.250001907348633
    10. ''x' → logprob: -21.250001907348633

Token 404: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.22580038011074066
    2. ')' → logprob: -1.6008003950119019
    3. ']
' → logprob: -9.225800514221191
    4. '           ' → logprob: -9.475800514221191
    5. ']' → logprob: -9.725800514221191
    6. '       ' → logprob: -10.100800514221191
    7. '])' → logprob: -10.725800514221191
    8. '])
' → logprob: -10.850800514221191
    9. ' )
' → logprob: -11.100800514221191
    10. '   ' → logprob: -11.350800514221191

Token 405: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001745775662129745
    2. '            
' → logprob: -9.375174522399902
    3. ' if' → logprob: -10.125174522399902
    4. '<|end|>' → logprob: -11.500174522399902
    5. '
' → logprob: -11.625174522399902
    6. '       ' → logprob: -12.000174522399902
    7. 'if' → logprob: -12.125174522399902
    8. ' 
' → logprob: -12.750174522399902
    9. '          ' → logprob: -13.125174522399902
    10. ',' → logprob: -13.125174522399902

Token 406: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1179172694683075
    2. ' if' → logprob: -2.61791729927063
    3. '           ' → logprob: -3.36791729927063
    4. 'boards' → logprob: -5.617917060852051
    5. '   ' → logprob: -9.61791706085205
    6. '       ' → logprob: -10.24291706085205
    7. ' boards' → logprob: -10.61791706085205
    8. 'for' → logprob: -11.61791706085205
    9. '               ' → logprob: -11.74291706085205
    10. '            ' → logprob: -11.86791706085205

Token 407: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.004774241708219051
    2. ' cell' → logprob: -5.62977409362793
    3. '(cell' → logprob: -6.75477409362793
    4. '[cell' → logprob: -13.25477409362793
    5. ' (' → logprob: -13.37977409362793
    6. 'any' → logprob: -13.50477409362793
    7. 'cel' → logprob: -13.75477409362793
    8. '	cell' → logprob: -13.87977409362793
    9. ' any' → logprob: -14.62977409362793
    10. '(' → logprob: -15.12977409362793

Token 408: ' !=' (ID: 1666)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08384963124990463
    2. '!=' → logprob: -3.0838496685028076
    3. ' !=' → logprob: -4.0838494300842285
    4. 'in' → logprob: -4.0838494300842285
    5. ' not' → logprob: -7.4588494300842285
    6. 'not' → logprob: -9.208849906921387
    7. '>' → logprob: -9.458849906921387
    8. ' ' → logprob: -10.083849906921387
    9. ')!=' → logprob: -10.083849906921387
    10. ':' → logprob: -10.208849906921387

Token 409: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3484534025192261
    2. ' ' → logprob: -1.223453402519226
    3. ' -' → logprob: -12.473453521728516
    4. '.' → logprob: -13.223453521728516
    5. '-' → logprob: -13.535953521728516
    6. 'None' → logprob: -15.160953521728516
    7. ' .' → logprob: -15.473453521728516
    8. '  ' → logprob: -15.660953521728516
    9. ''' → logprob: -15.785953521728516
    10. ' None' → logprob: -16.098453521728516

Token 410: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00046022076276130974
    2. ' ' → logprob: -7.750460147857666
    3. '-' → logprob: -10.625460624694824
    4. ' -' → logprob: -13.500460624694824
    5. 'None' → logprob: -14.000460624694824
    6. '.' → logprob: -14.500460624694824
    7. ''' → logprob: -14.812960624694824
    8. '   ' → logprob: -14.937960624694824
    9. 'b' → logprob: -15.062960624694824
    10. '  ' → logprob: -15.750460624694824

Token 411: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20672112703323364
    2. ':
' → logprob: -1.7067210674285889
    3. ':' → logprob: -5.831721305847168
    4. 'and' → logprob: -6.206721305847168
    5. '           ' → logprob: -8.456721305847168
    6. '               ' → logprob: -9.581721305847168
    7. '):
' → logprob: -10.206721305847168
    8. ':
' → logprob: -11.956721305847168
    9. ':

' → logprob: -12.456721305847168
    10. ',' → logprob: -12.456721305847168

Token 412: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017199289053678513
    2. 'boards' → logprob: -4.642199516296387
    3. ' boards' → logprob: -5.517199516296387
    4. '           ' → logprob: -6.017199516296387
    5. ' and' → logprob: -7.517199516296387
    6. ',' → logprob: -9.517199516296387
    7. '):
' → logprob: -9.642199516296387
    8. '                
' → logprob: -9.642199516296387
    9. ':
' → logprob: -10.142199516296387
    10. '                   ' → logprob: -10.767199516296387

Token 413: ' if' (ID: 538)
  Prédit: ' boards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boards' → logprob: -0.5231871008872986
    2. 'boards' → logprob: -0.8981871008872986
    3. ' if' → logprob: -10.273186683654785
    4. 'board' → logprob: -11.898186683654785
    5. 'Boards' → logprob: -12.023186683654785
    6. 'if' (adapté à ' if') → logprob: -12.398186683654785
    7. '               ' → logprob: -12.523186683654785
    8. '           ' → logprob: -12.898186683654785
    9. ' board' → logprob: -13.773186683654785
    10. 'b' → logprob: -14.148186683654785

Token 414: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.01208480354398489
    2. ' cell' → logprob: -4.5120849609375
    3. '(cell' → logprob: -6.8870849609375
    4. ' (' → logprob: -11.7620849609375
    5. '(' → logprob: -12.8870849609375
    6. '	cell' → logprob: -13.1370849609375
    7. '[cell' → logprob: -13.7620849609375
    8. 'cells' → logprob: -14.3870849609375
    9. '_cell' → logprob: -15.1370849609375
    10. 'boards' → logprob: -15.3870849609375

Token 415: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011776883155107498
    2. 'in' → logprob: -4.636776924133301
    3. ' not' → logprob: -6.261776924133301
    4. 'not' → logprob: -9.2617769241333
    5. ')' → logprob: -11.8867769241333
    6. ' ' → logprob: -12.2617769241333
    7. '!=' → logprob: -14.2617769241333
    8. '==' → logprob: -14.5117769241333
    9. ' ==' → logprob: -14.6367769241333
    10. ' !=' → logprob: -14.6367769241333

Token 416: ' boards' (ID: 27531)
  Prédit: 'boards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boards' → logprob: -2.696889623621246e-06
    2. ' boards' → logprob: -13.25000286102295
    3. 'buyers' → logprob: -14.25000286102295
    4. 'board' → logprob: -16.000001907348633
    5. 'boats' → logprob: -16.875001907348633
    6. 'books' → logprob: -17.000001907348633
    7. 'b' → logprob: -17.125001907348633
    8. '[' → logprob: -18.875001907348633
    9. 'banks' → logprob: -19.750001907348633
    10. 'boxes' → logprob: -20.000001907348633

Token 417: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.310693111619912e-05
    2. 'pos' → logprob: -10.250042915344238
    3. '[pos' → logprob: -12.125042915344238
    4. 's' → logprob: -14.250042915344238
    5. '_positions' → logprob: -14.500042915344238
    6. ':' → logprob: -14.750042915344238
    7. '_' → logprob: -15.000042915344238
    8. '[' → logprob: -16.375043869018555
    9. 'Pos' → logprob: -16.875043869018555
    10. '_POS' → logprob: -17.625043869018555

Token 418: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002299301093444228
    2. ':
' → logprob: -6.7522993087768555
    3. ' and' → logprob: -7.7522993087768555
    4. '[cell' → logprob: -7.7522993087768555
    5. ']:' → logprob: -8.502299308776855
    6. 'and' → logprob: -10.252299308776855
    7. '):' → logprob: -12.002299308776855
    8. '[' → logprob: -12.127299308776855
    9. ']' → logprob: -12.377299308776855
    10. ':
' → logprob: -12.502299308776855

Token 419: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10409238934516907
    2. ' boards' → logprob: -2.6040923595428467
    3. 'boards' → logprob: -3.7290923595428467
    4. '               ' → logprob: -8.104092597961426
    5. '                       ' → logprob: -8.479092597961426
    6. '                    
' → logprob: -9.229092597961426
    7. '   ' → logprob: -10.354092597961426
    8. ',' → logprob: -10.604092597961426
    9. '                    ' → logprob: -10.729092597961426
    10. '                ' → logprob: -10.854092597961426

Token 420: ' boards' (ID: 27531)
  Prédit: ' boards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boards' → logprob: -0.10250985622406006
    2. 'boards' (adapté à ' boards') → logprob: -2.3525099754333496
    3. '                   ' → logprob: -6.10250997543335
    4. '                       ' → logprob: -9.852509498596191
    5. 'Boards' → logprob: -11.727509498596191
    6. '                    ' → logprob: -14.352509498596191
    7. ' Boards' → logprob: -14.977509498596191
    8. '               ' → logprob: -15.102509498596191
    9. '           ' → logprob: -15.477509498596191
    10. '   ' → logprob: -15.477509498596191

Token 421: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -4.0484450437361374e-05
    2. 'pos' → logprob: -10.625040054321289
    3. '[cell' → logprob: -11.250040054321289
    4. '[pos' → logprob: -12.875040054321289
    5. '[' → logprob: -15.250040054321289
    6. 'Pos' → logprob: -15.500040054321289
    7. '	pos' → logprob: -18.62504005432129
    8. '```' → logprob: -18.75004005432129
    9. '[b' → logprob: -18.87504005432129
    10. '-pos' → logprob: -18.87504005432129

Token 422: '[cell' (ID: 192385)
  Prédit: '[cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cell' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.625
    3. 'cell' → logprob: -17.375
    4. '                   ' → logprob: -20.0
    5. '[c' → logprob: -20.375
    6. '.setdefault' → logprob: -20.5
    7. '(cell' → logprob: -20.75
    8. '[channel' → logprob: -20.875
    9. '[col' → logprob: -21.5
    10. '<Cell' → logprob: -21.625

Token 423: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0001182052365038544
    2. '.append' → logprob: -9.125118255615234
    3. ').' → logprob: -12.250118255615234
    4. ' ].' → logprob: -12.750118255615234
    5. ']' → logprob: -14.125118255615234
    6. '.' → logprob: -15.000118255615234
    7. '                   ' → logprob: -15.875118255615234
    8. ''].' → logprob: -16.000118255615234
    9. '           ' → logprob: -16.750118255615234
    10. 'append' → logprob: -17.000118255615234

Token 424: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.704273118884885e-07
    2. '.append' → logprob: -14.750000953674316
    3. ' append' → logprob: -15.500000953674316
    4. '_append' → logprob: -19.625
    5. 'app' → logprob: -19.75
    6. 'appen' → logprob: -20.125
    7. '	append' → logprob: -21.625
    8. 'Append' → logprob: -21.75
    9. ' Append' → logprob: -24.5
    10. 'add' → logprob: -24.75

Token 425: '(' (ID: 7)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6961790323257446
    2. '(' → logprob: -0.9461790323257446
    3. '((' → logprob: -2.196178913116455
    4. '(y' → logprob: -6.196178913116455
    5. ' (' → logprob: -10.571179389953613
    6. ')' → logprob: -14.696179389953613
    7. ' ' → logprob: -14.821179389953613
    8. '(
' → logprob: -14.821179389953613
    9. '[(' → logprob: -16.071178436279297
    10. '([' → logprob: -16.321178436279297

Token 426: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0015704454854130745
    2. '(y' → logprob: -6.501570224761963
    3. '(' → logprob: -9.876570701599121
    4. ' (' → logprob: -11.001570701599121
    5. ')' → logprob: -16.376569747924805
    6. '   ' → logprob: -17.251569747924805
    7. '[x' → logprob: -17.501569747924805
    8. '((' → logprob: -18.501569747924805
    9. ' ' → logprob: -19.251569747924805
    10. '{x' → logprob: -20.126569747924805

Token 427: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00029637437546625733
    2. ' x' → logprob: -8.125296592712402
    3. ')x' → logprob: -15.500296592712402
    4. '(x' → logprob: -16.250295639038086
    5. '	x' → logprob: -17.875295639038086
    6. ')' → logprob: -18.125295639038086
    7. 'y' → logprob: -18.125295639038086
    8. '   ' → logprob: -18.375295639038086
    9. '"x' → logprob: -19.000295639038086
    10. '
' → logprob: -19.375295639038086

Token 428: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004731652792543173
    2. ',y' → logprob: -5.37973165512085
    3. ' ,' → logprob: -9.129731178283691
    4. ',
' → logprob: -13.254731178283691
    5. ')' → logprob: -14.254731178283691
    6. '<|end|>' → logprob: -15.754731178283691
    7. ',user' → logprob: -16.504732131958008
    8. ',Y' → logprob: -16.754732131958008
    9. '‌,' → logprob: -16.879732131958008
    10. ',x' → logprob: -17.254732131958008

Token 429: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.081584716506768e-05
    2. '))' → logprob: -11.125020980834961
    3. ' )' → logprob: -12.125020980834961
    4. ')
' → logprob: -15.625020980834961
    5. ')}' → logprob: -16.25002098083496
    6. '                   ' → logprob: -16.37502098083496
    7. '               ' → logprob: -16.50002098083496
    8. '           ' → logprob: -17.37502098083496
    9. '   ' → logprob: -17.50002098083496
    10. '),' → logprob: -17.62502098083496

Token 430: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004599823441822082
    2. ' )' → logprob: -7.750460147857666
    3. ')
' → logprob: -11.250459671020508
    4. '               ' → logprob: -11.500459671020508
    5. '                   ' → logprob: -12.375459671020508
    6. '       ' → logprob: -14.500459671020508
    7. '           ' → logprob: -14.500459671020508
    8. '))' → logprob: -15.625459671020508
    9. '                       ' → logprob: -15.875459671020508
    10. ')}' → logprob: -15.875459671020508

Token 431: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1337922811508179
    2. '   ' → logprob: -1.6337922811508179
    3. '<|end|>' → logprob: -2.1337924003601074
    4. '
' → logprob: -2.2587924003601074
    5. '       ' → logprob: -2.3837924003601074
    6. '    
' → logprob: -2.5087924003601074
    7. '  
' → logprob: -3.3837924003601074
    8. '           ' → logprob: -4.633792400360107
    9. ')' → logprob: -4.758792400360107
    10. '    ' → logprob: -5.383792400360107

Token 432: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5993741154670715
    2. 'else' (adapté à ' else') → logprob: -1.4743740558624268
    3. '           ' → logprob: -2.0993740558624268
    4. '               ' → logprob: -3.3493740558624268
    5. '       ' → logprob: -3.9743740558624268
    6. '
' → logprob: -3.9743740558624268
    7. '            ' → logprob: -4.849374294281006
    8. '        ' → logprob: -4.849374294281006
    9. '    
' → logprob: -6.224374294281006
    10. ' 
' → logprob: -6.474374294281006

Token 433: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36322876811027527
    2. ':
' → logprob: -1.2382287979125977
    3. '                   ' → logprob: -4.363228797912598
    4. '               ' → logprob: -7.613228797912598
    5. '{' → logprob: -7.738228797912598
    6. ' :' → logprob: -8.363228797912598
    7. '{
' → logprob: -9.113228797912598
    8. '                ' → logprob: -9.113228797912598
    9. ' :
' → logprob: -9.113228797912598
    10. '                    ' → logprob: -9.363228797912598

Token 434: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08015073090791702
    2. ' boards' → logprob: -2.830150842666626
    3. ' pass' → logprob: -4.705150604248047
    4. 'boards' → logprob: -5.330150604248047
    5. '               ' → logprob: -7.330150604248047
    6. '#' → logprob: -7.330150604248047
    7. '                    ' → logprob: -7.705150604248047
    8. '   ' → logprob: -7.705150604248047
    9. ' None' → logprob: -7.830150604248047
    10. ' continue' → logprob: -7.955150604248047

Token 435: ' #' (ID: 1069)
  Prédit: 'boards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boards' → logprob: -0.024037761613726616
    2. 'pass' → logprob: -4.274037837982178
    3. ' boards' → logprob: -5.274037837982178
    4. ' pass' → logprob: -5.774037837982178
    5. '#' (adapté à ' #') → logprob: -7.274037837982178
    6. '                   ' → logprob: -7.774037837982178
    7. 'continue' → logprob: -9.14903736114502
    8. 'break' → logprob: -9.39903736114502
    9. 'return' → logprob: -9.64903736114502
    10. '   ' → logprob: -10.14903736114502

Token 436: ' board' (ID: 6796)
  Prédit: 'boards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'boards' → logprob: -0.1796916425228119
    2. 'pass' → logprob: -2.0546915531158447
    3. '#' → logprob: -3.5546915531158447
    4. ' pass' → logprob: -5.304691791534424
    5. ' boards' → logprob: -6.929691791534424
    6. 'continue' → logprob: -7.304691791534424
    7. 'break' → logprob: -8.054691314697266
    8. 'return' → logprob: -8.429691314697266
    9. 'buyers' → logprob: -8.554691314697266
    10. ' #' → logprob: -9.429691314697266

Token 437: ' number' (ID: 2086)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5890175700187683
    2. ' =' → logprob: -1.089017629623413
    3. 's' → logprob: -2.589017629623413
    4. ' positions' → logprob: -4.464017391204834
    5. '_positions' → logprob: -5.339017391204834
    6. ' ' → logprob: -5.964017391204834
    7. ' cell' → logprob: -5.964017391204834
    8. 'positions' → logprob: -6.464017391204834
    9. ' s' → logprob: -6.589017391204834
    10. ' is' → logprob: -7.089017391204834

Token 438: ' not' (ID: 625)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24642746150493622
    2. '=' → logprob: -1.8714274168014526
    3. '0' → logprob: -3.246427536010742
    4. ' ' → logprob: -3.746427536010742
    5. ' not' → logprob: -7.996427536010742
    6. 's' → logprob: -8.246427536010742
    7. ' +=' → logprob: -8.246427536010742
    8. ' cell' → logprob: -8.871427536010742
    9. ':' → logprob: -9.121427536010742
    10. ' =
' → logprob: -9.496427536010742

Token 439: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25576430559158325
    2. 'in' → logprob: -1.5057642459869385
    3. ' found' → logprob: -6.880764484405518
    4. 'recognized' → logprob: -7.005764484405518
    5. ' recognized' → logprob: -7.255764484405518
    6. 'found' → logprob: -7.255764484405518
    7. ' known' → logprob: -8.63076400756836
    8. ' assigned' → logprob: -10.25576400756836
    9. 'known' → logprob: -10.38076400756836
    10. 'assigned' → logprob: -10.63076400756836

Token 440: ' buyers' (ID: 25359)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.0026913441251963377
    2. 'boards' → logprob: -6.502691268920898
    3. ' buyers' → logprob: -6.752691268920898
    4. 'b' → logprob: -11.502691268920898
    5. 'buy' → logprob: -11.627691268920898
    6. 'board' → logprob: -14.877691268920898
    7. '[' → logprob: -14.877691268920898
    8. ' boards' → logprob: -15.127691268920898
    9. 'buyer' → logprob: -15.377691268920898
    10. '{' → logprob: -15.752691268920898

Token 441: '?' (ID: 30)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.41522741317749023
    2. ' =' → logprob: -2.0402274131774902
    3. ':' → logprob: -3.1652274131774902
    4. ')' → logprob: -3.1652274131774902
    5. '=' → logprob: -3.4152274131774902
    6. '<|end|>' → logprob: -3.6652274131774902
    7. '                    
' → logprob: -4.41522741317749
    8. '               ' → logprob: -4.41522741317749
    9. '
' → logprob: -4.66522741317749
    10. '           ' → logprob: -5.54022741317749

Token 442: ' ignore' (ID: 17887)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0125915901735425
    2. '
' → logprob: -5.637591361999512
    3. '                    
' → logprob: -5.887591361999512
    4. '\n' → logprob: -6.387591361999512
    5. '           ' → logprob: -6.512591361999512
    6. ' pass' → logprob: -7.512591361999512
    7. '               ' → logprob: -7.762591361999512
    8. '    
' → logprob: -8.137591361999512
    9. '                       ' → logprob: -8.512591361999512
    10. ' continue' → logprob: -8.512591361999512

Token 443: ',' (ID: 11)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.18455664813518524
    2. '<|end|>' → logprob: -2.559556722640991
    3. '                   ' → logprob: -3.809556722640991
    4. '               ' → logprob: -4.059556484222412
    5. '
' → logprob: -4.809556484222412
    6. '```' → logprob: -5.184556484222412
    7. ' 
' → logprob: -5.309556484222412
    8. ')' → logprob: -5.559556484222412
    9. '           ' → logprob: -5.684556484222412
    10. '                    
' → logprob: -6.184556484222412

Token 444: ' problem' (ID: 4792)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.18342548608779907
    2. ' continue' → logprob: -2.3084254264831543
    3. '<|end|>' → logprob: -3.4334254264831543
    4. 'continue' → logprob: -4.683425426483154
    5. '           ' → logprob: -5.058425426483154
    6. '               ' → logprob: -5.058425426483154
    7. ')' → logprob: -6.183425426483154
    8. ' pass' → logprob: -6.308425426483154
    9. '                    
' → logprob: -6.308425426483154
    10. ' ' → logprob: -6.683425426483154

Token 445: ' says' (ID: 5003)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 446: ' buyer' (ID: 28061)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.16904892027378082
    2. ' pass' → logprob: -2.544049024581909
    3. ' ' → logprob: -3.169049024581909
    4. 'continue' → logprob: -3.669049024581909
    5. ' ' → logprob: -5.91904878616333
    6. '               ' → logprob: -6.54404878616333
    7. '                ' → logprob: -6.66904878616333
    8. 'pass' → logprob: -7.54404878616333
    9. ' 
' → logprob: -7.54404878616333
    10. ')' → logprob: -7.54404878616333

Token 447: ' numbers' (ID: 8663)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.46687498688697815
    2. '_' → logprob: -1.2168749570846558
    3. ''s' → logprob: -4.091875076293945
    4. ')' → logprob: -4.841875076293945
    5. '<|end|>' → logprob: -4.841875076293945
    6. ':' → logprob: -4.966875076293945
    7. '.' → logprob: -5.091875076293945
    8. ' continues' → logprob: -5.716875076293945
    9. '=' → logprob: -5.841875076293945
    10. ' ' → logprob: -5.966875076293945

Token 448: ' from' (ID: 591)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9935183525085449
    2. '<|end|>' → logprob: -1.868518352508545
    3. '               ' → logprob: -1.993518352508545
    4. '                   ' → logprob: -2.368518352508545
    5. '           ' → logprob: -2.743518352508545
    6. 'continue' → logprob: -3.743518352508545
    7. ' ' → logprob: -3.868518352508545
    8. ',' → logprob: -4.368518352508545
    9. '.' → logprob: -4.368518352508545
    10. '                ' → logprob: -4.493518352508545

Token 449: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019071293994784355
    2. 'input' → logprob: -4.769071102142334
    3. 'the' → logprob: -5.769071102142334
    4. '0' → logprob: -6.269071102142334
    5. ' ' → logprob: -6.519071102142334
    6. 'buyers' → logprob: -6.519071102142334
    7. 'previous' → logprob: -7.394071102142334
    8. ' input' → logprob: -7.894071102142334
    9. 'inputs' → logprob: -8.019071578979492
    10. '{' → logprob: -8.394071578979492

Token 450: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011211452074348927
    2. 'input' → logprob: -4.761211395263672
    3. 'the' → logprob: -7.011211395263672
    4. 'previous' → logprob: -7.886211395263672
    5. '0' → logprob: -8.011211395263672
    6. 'problem' → logprob: -8.261211395263672
    7. 'inputs' → logprob: -8.511211395263672
    8. 'buyers' → logprob: -9.636211395263672
    9. 'boards' → logprob: -9.886211395263672
    10. '[' → logprob: -10.011211395263672

Token 451: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.16889476776123047
    2. '           ' → logprob: -3.5438947677612305
    3. '<|end|>' → logprob: -3.7938947677612305
    4. ',' → logprob: -4.0438947677612305
    5. '               ' → logprob: -4.1688947677612305
    6. ' ' → logprob: -4.4188947677612305
    7. 'to' → logprob: -4.4188947677612305
    8. ' continue' → logprob: -5.0438947677612305
    9. '                   ' → logprob: -5.0438947677612305
    10. '            ' → logprob: -5.2938947677612305

Token 452: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009078874718397856
    2. 'max' → logprob: -7.250907897949219
    3. '100' → logprob: -9.125907897949219
    4. '10' → logprob: -10.250907897949219
    5. 'len' → logprob: -10.875907897949219
    6. '999' → logprob: -11.625907897949219
    7. '20' → logprob: -12.750907897949219
    8. 'sum' → logprob: -13.000907897949219
    9. '50' → logprob: -13.125907897949219
    10. 'X' → logprob: -13.375907897949219

Token 453: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9726395010948181
    2. '                   ' → logprob: -1.347639560699463
    3. '               ' → logprob: -1.597639560699463
    4. '       ' → logprob: -2.097639560699463
    5. '\n' → logprob: -4.597639560699463
    6. '<|end|>' → logprob: -5.097639560699463
    7. 'continue' → logprob: -5.847639560699463
    8. ' continue' → logprob: -5.847639560699463
    9. '
' → logprob: -6.222639560699463
    10. '                ' → logprob: -6.472639560699463

Token 454: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17418497800827026
    2. '           ' → logprob: -2.424185037612915
    3. '               ' → logprob: -3.174185037612915
    4. '<|end|>' → logprob: -4.174184799194336
    5. '       ' → logprob: -4.924184799194336
    6. '\n' → logprob: -6.549184799194336
    7. ' ' → logprob: -7.049184799194336
    8. ')' → logprob: -7.674184799194336
    9. '                       ' → logprob: -7.799184799194336
    10. '   ' → logprob: -7.799184799194336

Token 455: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.5054073333740234
    2. 'pass' (adapté à ' pass') → logprob: -1.2554073333740234
    3. 'continue' → logprob: -2.5054073333740234
    4. ' continue' → logprob: -3.5054073333740234
    5. '   ' → logprob: -9.630407333374023
    6. '           ' → logprob: -11.130407333374023
    7. 'return' → logprob: -11.755407333374023
    8. '               ' → logprob: -12.005407333374023
    9. '                   ' → logprob: -12.130407333374023
    10. '       ' → logprob: -13.880407333374023

Token 456: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 457: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6951514482498169
    2. '<|end|>' → logprob: -0.8201514482498169
    3. '   ' → logprob: -2.9451513290405273
    4. '    
' → logprob: -5.445151329040527
    5. ')' → logprob: -6.820151329040527
    6. '  
' → logprob: -7.195151329040527
    7. '<|end|>' → logprob: -7.195151329040527
    8. 'def' → logprob: -8.195151329040527
    9. ' 
' → logprob: -8.695151329040527
    10. '```' → logprob: -8.695151329040527

Token 458: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7602962851524353
    2. 'rect' → logprob: -2.01029634475708
    3. 'buyers' → logprob: -2.76029634475708
    4. 'min' → logprob: -3.01029634475708
    5. 'buyer' → logprob: -3.26029634475708
    6. '#' (adapté à ' #') → logprob: -3.26029634475708
    7. 'def' → logprob: -3.38529634475708
    8. 'for' → logprob: -3.38529634475708
    9. 'possible' → logprob: -3.63529634475708
    10. ' for' → logprob: -4.01029634475708

Token 459: ' For' (ID: 2214)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -1.0532654523849487
    2. 'for' → logprob: -1.3032654523849487
    3. 'possible' → logprob: -1.6782654523849487
    4. '#' → logprob: -2.9282655715942383
    5. 'buyer' → logprob: -3.5532655715942383
    6. 'min' → logprob: -3.6782655715942383
    7. 'buyers' → logprob: -4.053265571594238
    8. 'from' → logprob: -4.428265571594238
    9. 'candidate' → logprob: -4.428265571594238
    10. 'ranges' → logprob: -5.053265571594238

Token 460: ' any' (ID: 1062)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.269258052110672
    2. 'b' → logprob: -1.6442580223083496
    3. ' buyer' → logprob: -3.3942580223083496
    4. ' each' → logprob: -5.14425802230835
    5. 'buyer' → logprob: -6.14425802230835
    6. 'each' → logprob: -7.01925802230835
    7. ' i' → logprob: -9.644258499145508
    8. 'bid' → logprob: -9.769258499145508
    9. ' bx' → logprob: -9.894258499145508
    10. ' all' → logprob: -10.144258499145508

Token 461: ' buyer' (ID: 28061)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2620828449726105
    2. 'b' → logprob: -1.762082815170288
    3. ' buyer' → logprob: -2.887082815170288
    4. 'buyer' → logprob: -6.012083053588867
    5. ' for' → logprob: -7.512083053588867
    6. 'for' → logprob: -9.512083053588867
    7. ' buy' → logprob: -12.137083053588867
    8. ' ' → logprob: -12.137083053588867
    9. ' #' → logprob: -12.637083053588867
    10. 'buy' → logprob: -12.637083053588867

Token 462: ',' (ID: 11)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.27886390686035156
    2. 'b' → logprob: -1.7788639068603516
    3. ',' → logprob: -2.9038639068603516
    4. ' in' → logprob: -5.153863906860352
    5. ' ,' → logprob: -5.278863906860352
    6. '_b' → logprob: -5.403863906860352
    7. ' for' → logprob: -6.903863906860352
    8. '_,' → logprob: -6.903863906860352
    9. ',b' → logprob: -7.278863906860352
    10. '   ' → logprob: -8.153863906860352

Token 463: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6546364426612854
    2. ' for' → logprob: -0.9046364426612854
    3. ' if' → logprob: -4.279636383056641
    4. '   ' → logprob: -4.279636383056641
    5. 'if' → logprob: -4.404636383056641
    6. '#' → logprob: -4.529636383056641
    7. 'possible' → logprob: -5.029636383056641
    8. ' possible' → logprob: -5.529636383056641
    9. ' all' → logprob: -5.654636383056641
    10. 'all' → logprob: -5.904636383056641

Token 464: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13291585445404053
    2. 'if' → logprob: -2.63291597366333
    3. 'len' → logprob: -3.88291597366333
    4. 'boards' → logprob: -4.50791597366333
    5. ' len' → logprob: -5.13291597366333
    6. 'positions' → logprob: -5.50791597366333
    7. ' all' → logprob: -5.63291597366333
    8. 'all' → logprob: -6.38291597366333
    9. ' not' → logprob: -6.50791597366333
    10. 'b' → logprob: -7.13291597366333

Token 465: ' #' (ID: 1069)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.46282753348350525
    2. 'not' → logprob: -1.3378275632858276
    3. 'boards' → logprob: -2.962827444076538
    4. ' not' → logprob: -3.837827444076538
    5. 'all' → logprob: -4.337827682495117
    6. 'the' → logprob: -4.837827682495117
    7. 'any' → logprob: -4.962827682495117
    8. ' len' → logprob: -6.337827682495117
    9. 'buyers' → logprob: -6.587827682495117
    10. 'there' → logprob: -6.837827682495117

Token 466: 'boards' (ID: 28976)
  Prédit: 'boards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boards' → logprob: -0.03910945728421211
    2. 'len' → logprob: -3.539109468460083
    3. ' boards' → logprob: -5.039109230041504
    4. ' len' → logprob: -6.539109230041504
    5. 'positions' → logprob: -7.289109230041504
    6. ' positions' → logprob: -8.789109230041504
    7. ' their' → logprob: -8.914109230041504
    8. '(len' → logprob: -9.539109230041504
    9. ' the' → logprob: -9.789109230041504
    10. 'their' → logprob: -9.914109230041504

Token 467: ' >' (ID: 1424)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.067878007888794
    2. 's' → logprob: -1.567878007888794
    3. '[b' → logprob: -2.067878007888794
    4. '[cell' → logprob: -2.442878007888794
    5. '>' → logprob: -2.942878007888794
    6. ' <=' → logprob: -3.942878007888794
    7. '_positions' → logprob: -4.067877769470215
    8. '<=' → logprob: -4.192877769470215
    9. '(b' → logprob: -4.317877769470215
    10. '[' → logprob: -4.442877769470215

Token 468: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5594573020935059
    2. 'k' → logprob: -1.6844573020935059
    3. 'boards' → logprob: -2.309457302093506
    4. 'buyers' → logprob: -2.559457302093506
    5. '1' → logprob: -3.059457302093506
    6. 'check' → logprob: -5.559457302093506
    7. ' ' → logprob: -5.684457302093506
    8. 'board' → logprob: -5.809457302093506
    9. 'len' → logprob: -5.809457302093506
    10. 'b' → logprob: -6.809457302093506

Token 469: '0' (ID: 15)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.6273036003112793
    2. 'boards' → logprob: -1.7523036003112793
    3. '0' → logprob: -2.0023036003112793
    4. 'k' → logprob: -2.2523036003112793
    5. '1' → logprob: -3.6273036003112793
    6. 'b' → logprob: -5.377303600311279
    7. 'buy' → logprob: -5.627303600311279
    8. 'board' → logprob: -5.752303600311279
    9. ' buyers' → logprob: -5.752303600311279
    10. 's' → logprob: -6.252303600311279

Token 470: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5469440221786499
    2. '   ' → logprob: -1.17194402217865
    3. ' and' → logprob: -2.9219441413879395
    4. ' for' → logprob: -3.6719441413879395
    5. 'for' → logprob: -4.1719441413879395
    6. 'and' → logprob: -5.0469441413879395
    7. ',' → logprob: -5.5469441413879395
    8. ' or' → logprob: -6.5469441413879395
    9. '<|end|>' → logprob: -6.7969441413879395
    10. ':
' → logprob: -6.7969441413879395

Token 471: ' then' (ID: 1815)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5191761255264282
    2. ' if' → logprob: -2.7691760063171387
    3. ' min' → logprob: -2.8941760063171387
    4. ' we' → logprob: -3.0191760063171387
    5. ' then' → logprob: -3.2691760063171387
    6. ' for' → logprob: -3.5191760063171387
    7. 'continue' → logprob: -3.5191760063171387
    8. ' all' → logprob: -3.6441760063171387
    9. ' and' → logprob: -4.269176006317139
    10. ' positions' → logprob: -4.269176006317139

Token 472: ' the' (ID: 290)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7066613435745239
    2. '   ' → logprob: -1.956661343574524
    3. 'x' → logprob: -2.7066612243652344
    4. 'all' → logprob: -2.9566612243652344
    5. ' min' → logprob: -3.3316612243652344
    6. '#' → logprob: -3.4566612243652344
    7. 'boards' → logprob: -4.081661224365234
    8. 'xmin' → logprob: -4.081661224365234
    9. 'possible' → logprob: -4.331661224365234
    10. ' find' → logprob: -4.581661224365234

Token 473: ' rectangle' (ID: 45808)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5224066972732544
    2. 'x' → logprob: -2.147406578063965
    3. ' min' → logprob: -2.272406578063965
    4. 'positions' → logprob: -2.647406578063965
    5. 'boards' → logprob: -3.397406578063965
    6. '#' → logprob: -3.772406578063965
    7. 'xs' → logprob: -4.397406578063965
    8. 'xmin' → logprob: -4.397406578063965
    9. 'rect' → logprob: -4.897406578063965
    10. ' positions' → logprob: -5.022406578063965

Token 474: ' must' (ID: 2804)
  Prédit: 'must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'must' → logprob: -0.7522271871566772
    2. ' must' → logprob: -1.5022271871566772
    3. 's' → logprob: -2.502227306365967
    4. 'should' → logprob: -3.127227306365967
    5. ' should' → logprob: -3.627227306365967
    6. ' can' → logprob: -3.752227306365967
    7. '<|end|>' → logprob: -3.752227306365967
    8. 'for' → logprob: -4.127227306365967
    9. 'can' → logprob: -4.377227306365967
    10. 'cannot' → logprob: -4.627227306365967

Token 475: ' contain' (ID: 10232)
  Prédit: 'include'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'include' → logprob: -0.7746621966362
    2. 'contain' → logprob: -1.3996622562408447
    3. ' at' → logprob: -2.2746622562408447
    4. 'cover' → logprob: -2.5246622562408447
    5. ' include' → logprob: -3.1496622562408447
    6. ' cover' → logprob: -3.5246622562408447
    7. ' contain' → logprob: -4.274662017822266
    8. 'at' → logprob: -4.399662017822266
    9. 'en' → logprob: -5.024662017822266
    10. ' encompass' → logprob: -6.149662017822266

Token 476: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6579710841178894
    2. 'min' → logprob: -0.9079710841178894
    3. ' all' → logprob: -2.657971143722534
    4. ' min' → logprob: -4.782970905303955
    5. '   ' → logprob: -9.157971382141113
    6. 'boards' → logprob: -10.032971382141113
    7. 'max' → logprob: -10.157971382141113
    8. 'the' → logprob: -10.282971382141113
    9. 'minimum' → logprob: -10.657971382141113
    10. ' ' → logprob: -11.907971382141113

Token 477: ' boards' (ID: 27531)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.422732949256897
    2. 'their' → logprob: -2.4227328300476074
    3. 'boards' → logprob: -2.5477328300476074
    4. ' their' → logprob: -2.6727328300476074
    5. ' positions' → logprob: -3.6727328300476074
    6. ' of' → logprob: -3.6727328300476074
    7. 'the' → logprob: -3.9227328300476074
    8. ' the' → logprob: -4.047732830047607
    9. ' boards' → logprob: -5.297732830047607
    10. ' its' → logprob: -5.797732830047607

Token 478: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040586505085229874
    2. '
' → logprob: -4.040586471557617
    3. ' for' → logprob: -4.290586471557617
    4. '    
' → logprob: -5.540586471557617
    5. 'for' → logprob: -6.165586471557617
    6. '<|end|>' → logprob: -7.415586471557617
    7. '.' → logprob: -7.665586471557617
    8. ' and' → logprob: -7.915586471557617
    9. ',' → logprob: -8.540586471557617
    10. 'def' → logprob: -8.665586471557617

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013323633931577206
    2. '
' → logprob: -4.888323783874512
    3. ' for' → logprob: -6.138323783874512
    4. '    
' → logprob: -6.388323783874512
    5. '<|end|>' → logprob: -7.013323783874512
    6. ' and' → logprob: -8.263323783874512
    7. 'for' → logprob: -8.638323783874512
    8. '  
' → logprob: -9.263323783874512
    9. ',' → logprob: -9.263323783874512
    10. 'def' → logprob: -9.388323783874512

Token 480: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0812910795211792
    2. ' for' → logprob: -3.4562911987304688
    3. 'for' → logprob: -4.206291198730469
    4. '    
' → logprob: -4.206291198730469
    5. '
' → logprob: -4.831291198730469
    6. ' buyers' → logprob: -5.956291198730469
    7. 'def' → logprob: -6.831291198730469
    8. ' 
' → logprob: -7.081291198730469
    9. '    ' → logprob: -7.581291198730469
    10. '  
' → logprob: -7.831291198730469

Token 481: ' possible' (ID: 4149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3059532642364502
    2. 'for' → logprob: -2.43095326423645
    3. ' for' → logprob: -2.55595326423645
    4. 'possible' → logprob: -3.05595326423645
    5. 'rect' → logprob: -3.93095326423645
    6. ' possible' → logprob: -5.305953025817871
    7. 'min' → logprob: -5.555953025817871
    8. 'c' → logprob: -5.805953025817871
    9. 'buyers' → logprob: -5.930953025817871
    10. '#' → logprob: -6.305953025817871

Token 482: ' rectangle' (ID: 45808)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1957588642835617
    2. ' for' → logprob: -2.695758819580078
    3. 'def' → logprob: -3.320758819580078
    4. '<|end|>' → logprob: -3.445758819580078
    5. '    
' → logprob: -4.445758819580078
    6. '
' → logprob: -4.570758819580078
    7. 'for' → logprob: -4.820758819580078
    8. '.' → logprob: -6.445758819580078
    9. ',' → logprob: -6.820758819580078
    10. '#' → logprob: -6.820758819580078

Token 483: ' candidates' (ID: 18116)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03256025165319443
    2. '_candidates' → logprob: -4.657560348510742
    3. '_ranges' → logprob: -4.782560348510742
    4. '_s' → logprob: -5.407560348510742
    5. '_positions' → logprob: -6.532560348510742
    6. 'ranges' → logprob: -6.782560348510742
    7. ' =' → logprob: -6.907560348510742
    8. 'for' → logprob: -7.157560348510742
    9. '_bounds' → logprob: -7.532560348510742
    10. ' candidates' → logprob: -7.532560348510742

Token 484: ' must' (ID: 2804)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 485: ':
' (ID: 734)
  Prédit: 'contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contain' → logprob: -0.8461416363716125
    2. ' cover' → logprob: -1.4711415767669678
    3. ' contain' → logprob: -1.9711415767669678
    4. 'cover' → logprob: -2.2211415767669678
    5. 'include' → logprob: -3.0961415767669678
    6. ' include' → logprob: -3.8461415767669678
    7. ' encompass' → logprob: -4.846141815185547
    8. 'en' → logprob: -4.971141815185547
    9. ' have' → logprob: -5.596141815185547
    10. 'have' → logprob: -6.221141815185547

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6746988892555237
    2. ' for' → logprob: -1.424698829650879
    3. ' have' → logprob: -2.674698829650879
    4. ' be' → logprob: -3.049698829650879
    5. '       ' → logprob: -3.174698829650879
    6. ' continue' → logprob: -3.174698829650879
    7. '    ' → logprob: -4.174698829650879
    8. ' #' → logprob: -4.549698829650879
    9. '#' → logprob: -5.424698829650879
    10. 'for' → logprob: -5.549698829650879

Token 487: ' #' (ID: 1069)
  Prédit: ' contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contain' → logprob: -0.7553748488426208
    2. ' cover' → logprob: -1.1303749084472656
    3. ' include' → logprob: -2.3803749084472656
    4. 'contain' → logprob: -2.6303749084472656
    5. 'cover' → logprob: -4.005374908447266
    6. 'include' → logprob: -4.755374908447266
    7. ' for' → logprob: -5.505374908447266
    8. ' be' → logprob: -6.255374908447266
    9. 'for' → logprob: -6.255374908447266
    10. '#' (adapté à ' #') → logprob: -6.505374908447266

Token 488: ' -' (ID: 533)
  Prédit: ' contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contain' → logprob: -1.1638069152832031
    2. 'contain' → logprob: -1.6638069152832031
    3. ' cover' → logprob: -1.7888069152832031
    4. 'cover' → logprob: -1.7888069152832031
    5. 'include' → logprob: -3.038806915283203
    6. ' include' → logprob: -3.038806915283203
    7. '#' → logprob: -3.913806915283203
    8. 'for' → logprob: -4.288806915283203
    9. ' for' → logprob: -5.038806915283203
    10. 'x' → logprob: -5.038806915283203

Token 489: ' cover' (ID: 4321)
  Prédit: ' contain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contain' → logprob: -1.277050495147705
    2. 'include' → logprob: -1.652050495147705
    3. 'contain' → logprob: -1.652050495147705
    4. ' include' → logprob: -2.402050495147705
    5. ' cover' → logprob: -2.527050495147705
    6. 'cover' → logprob: -2.652050495147705
    7. ' en' → logprob: -4.152050495147705
    8. 'en' → logprob: -4.402050495147705
    9. ' have' → logprob: -4.527050495147705
    10. 'x' → logprob: -4.652050495147705

Token 490: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.43258413672447205
    2. ' all' → logprob: -1.0575841665267944
    3. ' at' → logprob: -6.182584285736084
    4. 'at' → logprob: -7.057584285736084
    5. 'the' → logprob: -7.432584285736084
    6. ' the' → logprob: -8.432583808898926
    7. 'boards' → logprob: -10.182583808898926
    8. 'x' → logprob: -11.182583808898926
    9. 'from' → logprob: -11.432583808898926
    10. '_all' → logprob: -11.557583808898926

Token 491: ' board' (ID: 6796)
  Prédit: ' boards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boards' → logprob: -0.5724323391914368
    2. ' positions' → logprob: -1.947432279586792
    3. 'boards' → logprob: -2.072432279586792
    4. ' the' → logprob: -2.322432279586792
    5. ' buyers' → logprob: -3.322432279586792
    6. 'positions' → logprob: -4.197432518005371
    7. ' buyer' → logprob: -5.447432518005371
    8. ' board' → logprob: -5.822432518005371
    9. ' (' → logprob: -6.197432518005371
    10. 'buyers' → logprob: -6.572432518005371

Token 492: ' positions' (ID: 15897)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.019961055368185043
    2. ' positions' → logprob: -4.269960880279541
    3. 'positions' → logprob: -5.519960880279541
    4. '_positions' → logprob: -6.519960880279541
    5. ' cells' → logprob: -10.1449613571167
    6. '_s' → logprob: -10.1449613571167
    7. ' s' → logprob: -10.2699613571167
    8. ',' → logprob: -10.6449613571167
    9. 'cells' → logprob: -10.6449613571167
    10. ')' → logprob: -10.7699613571167

Token 493: ' assigned' (ID: 21482)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29249638319015503
    2. '<|end|>' → logprob: -2.1674964427948
    3. ' for' → logprob: -2.4174964427948
    4. ',' → logprob: -4.042496204376221
    5. '
' → logprob: -4.792496204376221
    6. '    
' → logprob: -4.917496204376221
    7. 'for' → logprob: -5.167496204376221
    8. '  
' → logprob: -6.292496204376221
    9. ')' → logprob: -6.417496204376221
    10. '.' → logprob: -6.542496204376221

Token 494: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19806040823459625
    2. '   ' → logprob: -2.5730605125427246
    3. 'for' → logprob: -2.6980605125427246
    4. '<|end|>' → logprob: -4.698060512542725
    5. ',' → logprob: -5.198060512542725
    6. ' to' → logprob: -5.323060512542725
    7. ' of' → logprob: -5.323060512542725
    8. ')' → logprob: -6.323060512542725
    9. '    
' → logprob: -6.323060512542725
    10. '
' → logprob: -6.448060512542725

Token 495: ' that' (ID: 484)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8711135387420654
    2. 'buyer' → logprob: -1.6211135387420654
    3. ' buyer' → logprob: -2.1211135387420654
    4. ' the' → logprob: -2.3711135387420654
    5. 'the' → logprob: -2.6211135387420654
    6. ' that' → logprob: -2.9961135387420654
    7. ' b' → logprob: -3.4961135387420654
    8. 'that' → logprob: -4.1211137771606445
    9. 'buyers' → logprob: -7.6211137771606445
    10. ' ' → logprob: -8.621113777160645

Token 496: ' buyer' (ID: 28061)
  Prédit: 'buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyer' → logprob: -0.5760173797607422
    2. ' buyer' → logprob: -0.8260173797607422
    3. 'buy' → logprob: -10.201017379760742
    4. 'b' → logprob: -10.326017379760742
    5. 'buyers' → logprob: -13.076017379760742
    6. ' buy' → logprob: -13.451017379760742
    7. ' b' → logprob: -13.951017379760742
    8. ' buyers' → logprob: -14.076017379760742
    9. ' purchaser' → logprob: -14.451017379760742
    10. 'Buyer' → logprob: -14.576017379760742

Token 497: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 498: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08747173845767975
    2. '<|end|>' → logprob: -3.2124717235565186
    3. '    
' → logprob: -3.9624717235565186
    4. '
' → logprob: -4.462471961975098
    5. '  
' → logprob: -5.587471961975098
    6. '#' → logprob: -6.087471961975098
    7. ',' → logprob: -6.837471961975098
    8. ')' → logprob: -6.962471961975098
    9. ' for' → logprob: -7.212471961975098
    10. '   
' → logprob: -7.462471961975098

Token 499: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23537971079349518
    2. '<|end|>' → logprob: -2.610379695892334
    3. '
' → logprob: -3.110379695892334
    4. ' for' → logprob: -3.610379695892334
    5. '#' (adapté à ' #') → logprob: -3.860379695892334
    6. '    
' → logprob: -4.735379695892334
    7. 'for' → logprob: -4.860379695892334
    8. ' ' → logprob: -5.235379695892334
    9. '  
' → logprob: -5.485379695892334
    10. ' 
' → logprob: -5.735379695892334

Token 500: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6152216792106628
    2. 'for' → logprob: -2.2402217388153076
    3. ' for' → logprob: -2.8652217388153076
    4. '#' → logprob: -2.9902217388153076
    5. 'min' → logprob: -3.1152217388153076
    6. 'def' → logprob: -3.2402217388153076
    7. 'from' → logprob: -3.4902217388153076
    8. 'import' → logprob: -3.7402217388153076
    9. 'possible' → logprob: -4.1152215003967285
    10. 'buyers' → logprob: -4.1152215003967285

Token 501: ' have' (ID: 679)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2962634563446045
    2. 'min' → logprob: -1.4212634563446045
    3. 'x' → logprob: -1.9212634563446045
    4. '
' → logprob: -2.6712634563446045
    5. ' min' → logprob: -2.7962634563446045
    6. 'for' → logprob: -3.1712634563446045
    7. 'import' → logprob: -3.4212634563446045
    8. ' x' → logprob: -3.9212634563446045
    9. ' #' → logprob: -4.046263694763184
    10. 'xmin' → logprob: -4.296263694763184

Token 502: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.5005057454109192
    2. 'area' → logprob: -1.0005056858062744
    3. ' at' → logprob: -5.1255059242248535
    4. 'x' → logprob: -5.3755059242248535
    5. ' lx' → logprob: -5.7505059242248535
    6. 'at' → logprob: -6.1255059242248535
    7. ' x' → logprob: -6.3755059242248535
    8. 'width' → logprob: -6.6255059242248535
    9. ' width' → logprob: -6.6255059242248535
    10. 'lx' → logprob: -7.1255059242248535

Token 503: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.33071252703666687
    2. '>=' → logprob: -1.3307125568389893
    3. ' <=' → logprob: -5.58071231842041
    4. '==' → logprob: -5.70571231842041
    5. ' ==' → logprob: -5.83071231842041
    6. '>' → logprob: -6.45571231842041
    7. '<=' → logprob: -6.45571231842041
    8. '=' → logprob: -6.70571231842041
    9. ' at' → logprob: -7.33071231842041
    10. 's' → logprob: -7.70571231842041

Token 504: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.599496066570282
    2. 'buyers' → logprob: -1.4744961261749268
    3. ' buyers' → logprob: -1.9744961261749268
    4. ' k' → logprob: -2.5994961261749268
    5. 'b' → logprob: -5.099495887756348
    6. 'buyer' → logprob: -7.724495887756348
    7. 'n' → logprob: -7.974495887756348
    8. ' n' → logprob: -7.974495887756348
    9. ' b' → logprob: -7.974495887756348
    10. 'buy' → logprob: -8.224495887756348

Token 505: '_i' (ID: 10853)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6029787063598633
    2. '
' → logprob: -1.2279787063598633
    3. '<|end|>' → logprob: -2.8529787063598633
    4. '    
' → logprob: -3.6029787063598633
    5. '  
' → logprob: -4.102978706359863
    6. '_' → logprob: -4.102978706359863
    7. ',' → logprob: -4.852978706359863
    8. ' ' → logprob: -4.977978706359863
    9. ' for' → logprob: -5.477978706359863
    10. 'for' → logprob: -5.477978706359863

Token 506: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23458193242549896
    2. '   ' → logprob: -2.48458194732666
    3. '    
' → logprob: -3.35958194732666
    4. '<|end|>' → logprob: -3.35958194732666
    5. ' for' → logprob: -4.73458194732666
    6. 'def' → logprob: -4.85958194732666
    7. '#' → logprob: -4.85958194732666
    8. 'for' → logprob: -4.85958194732666
    9. '<|end|>' → logprob: -5.35958194732666
    10. '  
' → logprob: -5.35958194732666

Token 507: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31557849049568176
    2. '
' → logprob: -1.5655784606933594
    3. '<|end|>' → logprob: -3.8155784606933594
    4. '    
' → logprob: -4.065578460693359
    5. ' for' → logprob: -5.440578460693359
    6. 'for' → logprob: -5.690578460693359
    7. '  
' → logprob: -5.815578460693359
    8. ' 
' → logprob: -5.940578460693359
    9. '#' → logprob: -5.940578460693359
    10. 'def' → logprob: -6.065578460693359

Token 508: ' candidate' (ID: 17098)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.28114405274391174
    2. 'rect' → logprob: -2.281144142150879
    3. 'for' → logprob: -3.281144142150879
    4. '   ' → logprob: -3.406144142150879
    5. 'buyers' → logprob: -4.281144142150879
    6. ' candidates' → logprob: -4.656144142150879
    7. 'possible' → logprob: -4.781144142150879
    8. 'from' → logprob: -5.031144142150879
    9. 'results' → logprob: -5.281144142150879
    10. 'def' → logprob: -5.531144142150879

Token 509: '_rect' (ID: 39269)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006823951378464699
    2. '_rect' → logprob: -5.631824016571045
    3. '_s' → logprob: -6.006824016571045
    4. '_' → logprob: -7.256824016571045
    5. '_candidates' → logprob: -11.006823539733887
    6. '_rectangle' → logprob: -11.631823539733887
    7. ' s' → logprob: -11.881823539733887
    8. '_ranges' → logprob: -12.131823539733887
    9. '_positions' → logprob: -12.131823539733887
    10. '_sets' → logprob: -13.506823539733887

Token 510: 'angles' (ID: 34011)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03808017447590828
    2. 'angles' → logprob: -3.2880802154541016
    3. 'angle' → logprob: -10.288080215454102
    4. 'ANGLES' → logprob: -13.538080215454102
    5. '_angles' → logprob: -14.538080215454102
    6. ' s' → logprob: -14.538080215454102
    7. 'ang' → logprob: -14.788080215454102
    8. 'angular' → logprob: -15.038080215454102
    9. 'ranges' → logprob: -15.038080215454102
    10. ' =' → logprob: -15.538080215454102

Token 511: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22679203748703003
    2. 's' → logprob: -1.7267920970916748
    3. '=' → logprob: -3.726792097091675
    4. '_' → logprob: -7.101791858673096
    5. '[' → logprob: -9.476792335510254
    6. '=[]' → logprob: -11.101792335510254
    7. 'es' → logprob: -11.226792335510254
    8. '_list' → logprob: -11.601792335510254
    9. ',' → logprob: -12.351792335510254
    10. '_for' → logprob: -12.351792335510254

Token 512: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0855657160282135
    2. '{' → logprob: -2.5855658054351807
    3. '[]' → logprob: -5.085565567016602
    4. ' {}' → logprob: -8.210565567016602
    5. ' {' → logprob: -8.835565567016602
    6. ' []' → logprob: -10.085565567016602
    7. '[' → logprob: -12.835565567016602
    8. 'dict' → logprob: -12.960565567016602
    9. '{}
' → logprob: -13.460565567016602
    10. '   ' → logprob: -14.085565567016602

Token 513: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6179744005203247
    2. 'for' → logprob: -0.8679744005203247
    3. '   ' → logprob: -4.367974281311035
    4. ':' → logprob: -4.617974281311035
    5. '
' → logprob: -5.117974281311035
    6. ' 
' → logprob: -5.867974281311035
    7. '<|end|>' → logprob: -6.367974281311035
    8. '  
' → logprob: -6.617974281311035
    9. '[' → logprob: -7.117974281311035
    10. ' =' → logprob: -7.117974281311035

Token 514: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011075885966420174
    2. ' for' → logprob: -4.511075973510742
    3. '   ' → logprob: -10.511075973510742
    4. 'from' → logprob: -15.011075973510742
    5. '    
' → logprob: -16.261075973510742
    6. ' 
' → logprob: -16.511075973510742
    7. '	for' → logprob: -17.011075973510742
    8. ')' → logprob: -17.261075973510742
    9. '```' → logprob: -17.386075973510742
    10. 'buyers' → logprob: -17.386075973510742

Token 515: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.09999894350767136
    2. ' b' → logprob: -2.474998950958252
    3. 'i' → logprob: -5.474998950958252
    4. '(b' → logprob: -5.849998950958252
    5. ' i' → logprob: -6.349998950958252
    6. ' (' → logprob: -6.474998950958252
    7. 'buyer' → logprob: -8.599998474121094
    8. ' buyer' → logprob: -8.724998474121094
    9. 'idx' → logprob: -9.099998474121094
    10. '(' → logprob: -9.849998474121094

Token 516: ',k' (ID: 35155)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03205275908112526
    2. 'in' → logprob: -3.782052755355835
    3. ',' → logprob: -4.782052993774414
    4. ' ,' → logprob: -8.032052993774414
    5. ' _' → logprob: -10.907052993774414
    6. '_in' → logprob: -11.532052993774414
    7. '_' → logprob: -11.532052993774414
    8. ' ' → logprob: -11.907052993774414
    9. ',b' → logprob: -12.407052993774414
    10. ',_' → logprob: -12.782052993774414

Token 517: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.411703497171402
    2. ',' → logprob: -1.7867034673690796
    3. 'in' → logprob: -1.7867034673690796
    4. ' ,' → logprob: -6.161703586578369
    5. ' ' → logprob: -8.786703109741211
    6. ',b' → logprob: -9.786703109741211
    7. ',in' → logprob: -10.161703109741211
    8. '_in' → logprob: -11.536703109741211
    9. '   ' → logprob: -11.536703109741211
    10. 'i' → logprob: -11.661703109741211

Token 518: ' buyers' (ID: 25359)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.0036239505279809237
    2. ' buyers' → logprob: -5.628623962402344
    3. 'buy' → logprob: -11.253623962402344
    4. 'b' → logprob: -12.753623962402344
    5. 'buyer' → logprob: -13.003623962402344
    6. '[' → logprob: -13.003623962402344
    7. 'enumer' → logprob: -14.253623962402344
    8. '(b' → logprob: -14.628623962402344
    9. '[(' → logprob: -15.128623962402344
    10. 'dict' → logprob: -15.503623962402344

Token 519: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000656081538181752
    2. ':
' → logprob: -7.5006561279296875
    3. ',' → logprob: -9.375656127929688
    4. '=' → logprob: -12.375656127929688
    5. '):' → logprob: -12.375656127929688
    6. '   ' → logprob: -12.375656127929688
    7. ' :' → logprob: -12.875656127929688
    8. ' =' → logprob: -14.500656127929688
    9. '[' → logprob: -14.625656127929688
    10. '):
' → logprob: -15.000656127929688

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034451425075531006
    2. '   ' → logprob: -3.409451484680176
    3. ':' → logprob: -8.284451484680176
    4. '    
' → logprob: -9.034451484680176
    5. '<|end|>' → logprob: -9.034451484680176
    6. '        
' → logprob: -9.409451484680176
    7. ',' → logprob: -9.784451484680176
    8. '```' → logprob: -10.034451484680176
    9. '
' → logprob: -10.784451484680176
    10. '):
' → logprob: -10.784451484680176

Token 521: ' pos' (ID: 1253)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.3349093794822693
    2. 'boards' → logprob: -2.459909439086914
    3. 'pos' (adapté à ' pos') → logprob: -2.709909439086914
    4. '   ' → logprob: -3.209909439086914
    5. 'points' → logprob: -3.459909439086914
    6. ' positions' → logprob: -3.584909439086914
    7. 'min' → logprob: -4.459909439086914
    8. 'poss' → logprob: -5.584909439086914
    9. 'board' → logprob: -5.959909439086914
    10. 'candidate' → logprob: -6.209909439086914

Token 522: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11761053651571274
    2. ' =' → logprob: -2.492610454559326
    3. 'itions' → logprob: -4.117610454559326
    4. '=' → logprob: -4.867610454559326
    5. '_list' → logprob: -6.492610454559326
    6. 'sible' → logprob: -6.742610454559326
    7. '_positions' → logprob: -7.242610454559326
    8. '   ' → logprob: -7.992610454559326
    9. '_s' → logprob: -9.367610931396484
    10. '=s' → logprob: -9.492610931396484

Token 523: ' boards' (ID: 27531)
  Prédit: 'boards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boards' → logprob: -0.014227912761271
    2. ' boards' → logprob: -4.264227867126465
    3. 'board' → logprob: -10.514227867126465
    4. 'buyers' → logprob: -10.764227867126465
    5. 'boxes' → logprob: -12.264227867126465
    6. 'b' → logprob: -12.889227867126465
    7. '[]' → logprob: -13.139227867126465
    8. 'boats' → logprob: -13.389227867126465
    9. ' buyers' → logprob: -14.139227867126465
    10. '[' → logprob: -14.139227867126465

Token 524: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -5.3954463510308415e-05
    2. 'pos' → logprob: -10.500054359436035
    3. '[b' → logprob: -10.875054359436035
    4. '_positions' → logprob: -12.125054359436035
    5. 'Pos' → logprob: -13.625054359436035
    6. 'b' → logprob: -15.000054359436035
    7. 's' → logprob: -15.750054359436035
    8. '_b' → logprob: -16.62505340576172
    9. 'positions' → logprob: -17.00005340576172
    10. '[pos' → logprob: -17.25005340576172

Token 525: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.003208372974768281
    2. 'b' → logprob: -5.753208160400391
    3. '=b' → logprob: -11.37820816040039
    4. '(b' → logprob: -11.50320816040039
    5. '.get' → logprob: -12.25320816040039
    6. 'get' → logprob: -12.87820816040039
    7. ' =' → logprob: -14.75320816040039
    8. '	b' → logprob: -15.00320816040039
    9. '_b' → logprob: -15.62820816040039
    10. ' b' → logprob: -16.00320816040039

Token 526: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4775325059890747
    2. ']
' → logprob: -0.9775325059890747
    3. '       ' → logprob: -5.852532386779785
    4. ']
' → logprob: -7.727532386779785
    5. ')' → logprob: -9.852532386779785
    6. ']

' → logprob: -10.227532386779785
    7. ')
' → logprob: -11.227532386779785
    8. ' ]' → logprob: -11.352532386779785
    9. ' ]
' → logprob: -12.102532386779785
    10. ')]' → logprob: -12.227532386779785

Token 527: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008670372189953923
    2. '        
' → logprob: -8.125866889953613
    3. '
' → logprob: -8.625866889953613
    4. '   ' → logprob: -9.250866889953613
    5. ',' → logprob: -9.625866889953613
    6. ':' → logprob: -10.000866889953613
    7. 'if' → logprob: -10.125866889953613
    8. ' if' → logprob: -10.125866889953613
    9. '<|end|>' → logprob: -11.250866889953613
    10. '```' → logprob: -11.250866889953613

Token 528: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4322112202644348
    2. 'min' → logprob: -1.18221116065979
    3. '       ' → logprob: -3.43221116065979
    4. ' if' → logprob: -5.432211399078369
    5. 'x' → logprob: -5.682211399078369
    6. 'xmin' → logprob: -6.432211399078369
    7. 'xs' → logprob: -6.682211399078369
    8. ' min' → logprob: -7.182211399078369
    9. '   ' → logprob: -8.682210922241211
    10. '#' → logprob: -8.932210922241211

Token 529: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20619046688079834
    2. 'not' → logprob: -2.456190586090088
    3. 'pos' → logprob: -2.831190586090088
    4. ' not' → logprob: -3.581190586090088
    5. ' len' → logprob: -4.331190586090088
    6. ' pos' → logprob: -7.456190586090088
    7. ' ' → logprob: -10.45619010925293
    8. '   ' → logprob: -11.45619010925293
    9. '(len' → logprob: -13.45619010925293
    10. '	len' → logprob: -13.70619010925293

Token 530: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0025074053555727005
    2. 'pos' → logprob: -6.002507209777832
    3. '(' → logprob: -10.502507209777832
    4. '[pos' → logprob: -13.127507209777832
    5. ' pos' → logprob: -13.877507209777832
    6. ' (' → logprob: -14.502507209777832
    7. '	pos' → logprob: -14.627507209777832
    8. ',pos' → logprob: -15.877507209777832
    9. '_pos' → logprob: -16.25250816345215
    10. '(
' → logprob: -16.37750816345215

Token 531: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5432760119438171
    2. '==' → logprob: -1.668276071548462
    3. ')' → logprob: -1.918276071548462
    4. ' >' → logprob: -2.793276071548462
    5. '>' → logprob: -4.043275833129883
    6. ')==' → logprob: -5.918275833129883
    7. ')>' → logprob: -6.293275833129883
    8. ' )' → logprob: -8.543275833129883
    9. ' <' → logprob: -9.293275833129883
    10. '=' → logprob: -10.293275833129883

Token 532: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4179883301258087
    2. '==' → logprob: -1.2929883003234863
    3. ' >' → logprob: -3.2929883003234863
    4. '>' → logprob: -3.5429883003234863
    5. ' <' → logprob: -7.167988300323486
    6. '=' → logprob: -8.917988777160645
    7. '<' → logprob: -9.167988777160645
    8. ' ' → logprob: -10.792988777160645
    9. ':' → logprob: -11.292988777160645
    10. '0' → logprob: -11.292988777160645

Token 533: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015024791937321424
    2. ' ' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.126502990722656
    4. '  ' → logprob: -17.626502990722656
    5. '>' → logprob: -18.251502990722656
    6. '1' → logprob: -18.251502990722656
    7. '    ' → logprob: -18.439002990722656
    8. ')' → logprob: -18.564002990722656
    9. '=' → logprob: -18.814002990722656
    10. '۰' → logprob: -18.876502990722656

Token 534: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '1' → logprob: -17.375030517578125
    4. '>' → logprob: -17.500030517578125
    5. '   ' → logprob: -19.250030517578125
    6. ')' → logprob: -19.500030517578125
    7. '۰' → logprob: -20.375030517578125
    8. '  ' → logprob: -20.562530517578125
    9. '```' → logprob: -20.562530517578125
    10. '=' → logprob: -20.562530517578125

Token 535: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.062427863478660583
    2. ':
' → logprob: -2.8124277591705322
    3. '       ' → logprob: -8.687427520751953
    4. '           ' → logprob: -8.812427520751953
    5. ' or' → logprob: -9.437427520751953
    6. ':return' → logprob: -11.187427520751953
    7. 'continue' → logprob: -11.187427520751953
    8. ',' → logprob: -11.437427520751953
    9. ' continue' → logprob: -12.187427520751953
    10. '   ' → logprob: -12.437427520751953

Token 536: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005031540524214506
    2. '       ' → logprob: -5.880031585693359
    3. ':
' → logprob: -7.130031585693359
    4. ' continue' → logprob: -8.00503158569336
    5. ':' → logprob: -8.13003158569336
    6. '
' → logprob: -8.38003158569336
    7. ',' → logprob: -8.75503158569336
    8. 'continue' → logprob: -9.00503158569336
    9. '   ' → logprob: -9.13003158569336
    10. '#' → logprob: -10.25503158569336

Token 537: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.869739830493927
    2. 'candidate' → logprob: -0.869739830493927
    3. '           ' → logprob: -2.3697397708892822
    4. '#' (adapté à ' #') → logprob: -3.6197397708892822
    5. 'possible' → logprob: -3.6197397708892822
    6. 'continue' → logprob: -5.369740009307861
    7. 'from' → logprob: -5.869740009307861
    8. ' candidate' → logprob: -6.494740009307861
    9. 'import' → logprob: -6.869740009307861
    10. 'min' → logprob: -6.869740009307861

Token 538: ' buyer' (ID: 28061)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.1308061182498932
    2. '#' → logprob: -3.0058062076568604
    3. 'possible' → logprob: -3.1308062076568604
    4. '           ' → logprob: -4.505805969238281
    5. '       ' → logprob: -4.755805969238281
    6. ' candidate' → logprob: -6.005805969238281
    7. 'from' → logprob: -6.505805969238281
    8. 'min' → logprob: -6.755805969238281
    9. 'continue' → logprob: -6.755805969238281
    10. 'import' → logprob: -7.130805969238281

Token 539: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6341173052787781
    2. ' has' → logprob: -1.3841173648834229
    3. ' can' → logprob: -2.384117364883423
    4. ' must' → logprob: -3.759117364883423
    5. '_rect' → logprob: -3.884117364883423
    6. ',' → logprob: -4.009117126464844
    7. ' continues' → logprob: -4.509117126464844
    8. ' cannot' → logprob: -5.009117126464844
    9. ' needs' → logprob: -5.259117126464844
    10. '   ' → logprob: -5.259117126464844

Token 540: ' no' (ID: 860)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.38206204771995544
    2. '0' → logprob: -2.2570619583129883
    3. 'no' → logprob: -2.2570619583129883
    4. ' no' → logprob: -2.8820619583129883
    5. 'out' → logprob: -4.507061958312988
    6. 'unknown' → logprob: -4.507061958312988
    7. '(' → logprob: -4.632061958312988
    8. 'possible' → logprob: -5.507061958312988
    9. ' k' → logprob: -5.757061958312988
    10. ' ' → logprob: -5.882061958312988

Token 541: ' boards' (ID: 27531)
  Prédit: 'boards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boards' → logprob: -0.15206526219844818
    2. ' boards' → logprob: -2.0270652770996094
    3. 'board' → logprob: -5.402065277099609
    4. 'assigned' → logprob: -6.277065277099609
    5. ' assigned' → logprob: -6.652065277099609
    6. 'positions' → logprob: -7.402065277099609
    7. ' board' → logprob: -7.402065277099609
    8. ' positions' → logprob: -8.90206527709961
    9. ' rectangles' → logprob: -9.65206527709961
    10. ' constraints' → logprob: -9.90206527709961

Token 542: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3949585556983948
    2. '           ' → logprob: -1.51995849609375
    3. ':
' → logprob: -2.51995849609375
    4. ',' → logprob: -4.14495849609375
    5. '       ' → logprob: -5.64495849609375
    6. ' must' → logprob: -6.26995849609375
    7. ' continues' → logprob: -6.89495849609375
    8. ' has' → logprob: -7.39495849609375
    9. ' can' → logprob: -7.51995849609375
    10. ' continue' → logprob: -7.51995849609375

Token 543: ' can' (ID: 665)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.13793718814849854
    2. '           ' → logprob: -2.887937068939209
    3. '#' → logprob: -3.137937068939209
    4. 'continue' → logprob: -4.512937068939209
    5. 'possible' → logprob: -4.637937068939209
    6. ' candidate' → logprob: -5.012937068939209
    7. '       ' → logprob: -7.762937068939209
    8. 'found' → logprob: -7.762937068939209
    9. 'pass' → logprob: -8.387937545776367
    10. ' continue' → logprob: -8.637937545776367

Token 544: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.286027431488037
    2. 'be' → logprob: -1.411027431488037
    3. 'choose' → logprob: -1.661027431488037
    4. 'cover' → logprob: -1.911027431488037
    5. ' cover' → logprob: -3.411027431488037
    6. 'have' → logprob: -3.411027431488037
    7. 'occup' → logprob: -4.036027431488037
    8. ' have' → logprob: -4.161027431488037
    9. 'expand' → logprob: -4.286027431488037
    10. ' choose' → logprob: -4.786027431488037

Token 545: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.09354081004858017
    2. 'placed' → logprob: -2.718540906906128
    3. ' anywhere' → logprob: -4.218540668487549
    4. 'assigned' → logprob: -5.468540668487549
    5. ' placed' → logprob: -6.468540668487549
    6. ' any' → logprob: -7.343540668487549
    7. 'anything' → logprob: -7.343540668487549
    8. '(' → logprob: -7.593540668487549
    9. 'located' → logprob: -8.218541145324707
    10. '[' → logprob: -9.093541145324707

Token 546: ' rectangle' (ID: 45808)
  Prédit: ' rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rectangle' → logprob: -0.26421117782592773
    2. 'rectangle' → logprob: -1.5142111778259277
    3. 'rect' → logprob: -5.764211177825928
    4. '_rectangle' → logprob: -5.889211177825928
    5. '   ' → logprob: -6.514211177825928
    6. ' (' → logprob: -6.639211177825928
    7. '(' → logprob: -7.139211177825928
    8. ' ' → logprob: -7.139211177825928
    9. ' rectangular' → logprob: -8.389211654663086
    10. ' valid' → logprob: -8.514211654663086

Token 547: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05604817718267441
    2. '           ' → logprob: -3.6810481548309326
    3. ',' → logprob: -4.056048393249512
    4. '<|end|>' → logprob: -5.056048393249512
    5. '        
' → logprob: -6.431048393249512
    6. ' (' → logprob: -7.306048393249512
    7. ' with' → logprob: -7.681048393249512
    8. ' that' → logprob: -7.806048393249512
    9. '<|end|>' → logprob: -7.806048393249512
    10. '.' → logprob: -7.931048393249512

Token 548: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.030537482351064682
    2. ' area' → logprob: -3.5305373668670654
    3. 'k' → logprob: -7.6555376052856445
    4. 'size' → logprob: -8.405537605285645
    5. 'lx' → logprob: -10.655537605285645
    6. '面积' → logprob: -11.280537605285645
    7. 'kx' → logprob: -11.530537605285645
    8. ' k' → logprob: -11.655537605285645
    9. ')' → logprob: -12.030537605285645
    10. 'areas' → logprob: -12.530537605285645

Token 549: ' k' (ID: 372)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4303663372993469
    2. '==' → logprob: -1.0553662776947021
    3. '=' → logprob: -8.055366516113281
    4. ' >=' → logprob: -8.180366516113281
    5. ' <=' → logprob: -8.930366516113281
    6. '>=' → logprob: -8.930366516113281
    7. 'k' → logprob: -9.055366516113281
    8. ' ' → logprob: -9.180366516113281
    9. ' =' → logprob: -9.430366516113281
    10. ',' → logprob: -9.555366516113281

Token 550: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14112097024917603
    2. '           ' → logprob: -2.7661209106445312
    3. ',' → logprob: -3.3911209106445312
    4. '        
' → logprob: -4.641120910644531
    5. '.' → logprob: -4.891120910644531
    6. ':' → logprob: -5.141120910644531
    7. '   ' → logprob: -6.016120910644531
    8. ':
' → logprob: -6.766120910644531
    9. ',
' → logprob: -7.016120910644531
    10. ' for' → logprob: -7.141120910644531

Token 551: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3895694315433502
    2. '       ' → logprob: -1.1395694017410278
    3. ' continue' → logprob: -6.639569282531738
    4. ',' → logprob: -7.514569282531738
    5. 'continue' → logprob: -8.389569282531738
    6. '   ' → logprob: -8.764569282531738
    7. '        
' → logprob: -9.264569282531738
    8. '
' → logprob: -9.889569282531738
    9. '<|end|>' → logprob: -9.889569282531738
    10. '            
' → logprob: -10.389569282531738

Token 552: ' #' (ID: 1069)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.037135276943445206
    2. 'continue' → logprob: -4.412135124206543
    3. 'possible' → logprob: -5.037135124206543
    4. 'found' → logprob: -5.037135124206543
    5. '#' (adapté à ' #') → logprob: -5.537135124206543
    6. 'pass' → logprob: -5.662135124206543
    7. 'c' → logprob: -6.912135124206543
    8. 'for' → logprob: -7.162135124206543
    9. '   ' → logprob: -7.912135124206543
    10. ' candidate' → logprob: -8.037135124206543

Token 553: ' we' (ID: 581)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.1263984590768814
    2. '#' → logprob: -3.5013985633850098
    3. '           ' → logprob: -3.6263985633850098
    4. 'possible' → logprob: -3.7513985633850098
    5. 'continue' → logprob: -3.8763985633850098
    6. ' candidate' → logprob: -5.12639856338501
    7. '       ' → logprob: -5.50139856338501
    8. 'found' → logprob: -6.12639856338501
    9. 'c' → logprob: -6.75139856338501
    10. 'pass' → logprob: -6.87639856338501

Token 554: ' will' (ID: 738)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1910456418991089
    2. 'continue' → logprob: -2.5660457611083984
    3. '           ' → logprob: -3.0660457611083984
    4. '   ' → logprob: -3.8160457611083984
    5. '       ' → logprob: -4.316045761108398
    6. 'for' → logprob: -5.566045761108398
    7. ' for' → logprob: -6.316045761108398
    8. ' can' → logprob: -6.316045761108398
    9. ' need' → logprob: -6.816045761108398
    10. ' will' → logprob: -6.941045761108398

Token 555: ' try' (ID: 2075)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5239443778991699
    2. 'try' → logprob: -1.77394437789917
    3. 'search' → logprob: -2.39894437789917
    4. 'generate' → logprob: -3.14894437789917
    5. 'find' → logprob: -3.27394437789917
    6. ' try' → logprob: -3.77394437789917
    7. ' continue' → logprob: -4.39894437789917
    8. 'fill' → logprob: -4.64894437789917
    9. 'enumer' → logprob: -5.52394437789917
    10. 'assign' → logprob: -6.14894437789917

Token 556: ' all' (ID: 722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7947184443473816
    2. ' to' → logprob: -1.4197185039520264
    3. '       ' → logprob: -2.2947185039520264
    4. 'to' → logprob: -2.9197185039520264
    5. ':' → logprob: -3.0447185039520264
    6. ' all' → logprob: -3.4197185039520264
    7. '           ' → logprob: -3.6697185039520264
    8. '               ' → logprob: -4.544718265533447
    9. 'all' → logprob: -4.794718265533447
    10. '    ' → logprob: -5.044718265533447

Token 557: ' rectangles' (ID: 164265)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.33046847581863403
    2. 'possible' → logprob: -2.4554684162139893
    3. ' rectangles' → logprob: -2.7054684162139893
    4. ' possibilities' → logprob: -2.9554684162139893
    5. ' x' → logprob: -3.3304684162139893
    6. 'poss' → logprob: -4.830468654632568
    7. ' positions' → logprob: -5.080468654632568
    8. ' valid' → logprob: -5.205468654632568
    9. ' (' → logprob: -5.455468654632568
    10. 'positions' → logprob: -5.830468654632568

Token 558: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14441357553005219
    2. ' for' → logprob: -2.519413471221924
    3. ' with' → logprob: -3.644413471221924
    4. '<|end|>' → logprob: -4.519413471221924
    5. ',' → logprob: -5.644413471221924
    6. 'for' → logprob: -6.019413471221924
    7. '        
' → logprob: -6.144413471221924
    8. '        ' → logprob: -6.894413471221924
    9. '           ' → logprob: -7.019413471221924
    10. ' possible' → logprob: -7.144413471221924

Token 559: ' area' (ID: 3624)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.9491139054298401
    2. 'X' → logprob: -1.0741138458251953
    3. 'area' → logprob: -2.1991138458251953
    4. ' area' → logprob: -2.3241138458251953
    5. ' size' → logprob: -3.4491138458251953
    6. 'dimensions' → logprob: -4.449113845825195
    7. ' X' → logprob: -5.324113845825195
    8. 'possible' → logprob: -5.449113845825195
    9. 'sizes' → logprob: -6.074113845825195
    10. 'width' → logprob: -6.324113845825195

Token 560: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.2519598603248596
    2. ' k' → logprob: -1.5019598007202148
    3. '_k' → logprob: -11.251959800720215
    4. '{k' → logprob: -11.751959800720215
    5. '```' → logprob: -12.376959800720215
    6. '=k' → logprob: -13.251959800720215
    7. '`' → logprob: -14.126959800720215
    8. '(k' → logprob: -14.126959800720215
    9. ' ' → logprob: -14.251959800720215
    10. ',k' → logprob: -14.876959800720215

Token 561: ' inside' (ID: 6772)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007924818433821201
    2. '           ' → logprob: -5.882925033569336
    3. ',' → logprob: -6.257925033569336
    4. '
' → logprob: -6.882925033569336
    5. '        
' → logprob: -6.882925033569336
    6. ' for' → logprob: -7.632925033569336
    7. 'import' → logprob: -9.132925033569336
    8. ' and' → logprob: -9.507925033569336
    9. 'for' → logprob: -10.007925033569336
    10. '<|end|>' → logprob: -10.007925033569336

Token 562: ' grid' (ID: 10586)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.5737708806991577
    2. ' X' → logprob: -2.1987709999084473
    3. ' (' → logprob: -2.3237709999084473
    4. '(X' → logprob: -2.5737709999084473
    5. ' range' → logprob: -2.9487709999084473
    6. '(' → logprob: -3.5737709999084473
    7. 'range' → logprob: -3.6987709999084473
    8. ' the' → logprob: -3.8237709999084473
    9. 'the' → logprob: -4.323770999908447
    10. 's' → logprob: -5.323770999908447

Token 563: ' later' (ID: 4849)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6963636875152588
    2. '           ' → logprob: -0.6963636875152588
    3. ',' → logprob: -6.82136344909668
    4. ' for' → logprob: -7.44636344909668
    5. '
' → logprob: -7.69636344909668
    6. '        
' → logprob: -7.69636344909668
    7. 'import' → logprob: -9.57136344909668
    8. ' (' → logprob: -9.57136344909668
    9. 'for' → logprob: -9.82136344909668
    10. '   ' → logprob: -9.94636344909668

Token 564: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018389543518424034
    2. ' continue' → logprob: -4.893389701843262
    3. '           ' → logprob: -5.518389701843262
    4. 'continue' → logprob: -5.768389701843262
    5. '   ' → logprob: -6.018389701843262
    6. '
' → logprob: -7.768389701843262
    7. '<|end|>' → logprob: -8.518389701843262
    8. ' continues' → logprob: -8.768389701843262
    9. ',' → logprob: -8.893389701843262
    10. '_continue' → logprob: -10.143389701843262

Token 565: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06347892433404922
    2. '           ' → logprob: -3.063478946685791
    3. ' continue' → logprob: -4.563478946685791
    4. 'continue' → logprob: -5.813478946685791
    5. '   ' → logprob: -7.063478946685791
    6. '<|end|>' → logprob: -8.938478469848633
    7. '_continue' → logprob: -9.438478469848633
    8. '	continue' → logprob: -9.563478469848633
    9. ' continues' → logprob: -9.813478469848633
    10. 'Continue' → logprob: -10.563478469848633

Token 566: ' candidate' (ID: 17098)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9345811009407043
    2. '       ' → logprob: -1.3095810413360596
    3. ' continue' → logprob: -1.9345810413360596
    4. '           ' → logprob: -2.4345810413360596
    5. 'candidate' (adapté à ' candidate') → logprob: -2.4345810413360596
    6. ' candidate' → logprob: -4.684581279754639
    7. '   ' → logprob: -5.059581279754639
    8. 'pass' → logprob: -7.059581279754639
    9. '
' → logprob: -8.30958080291748
    10. 'for' → logprob: -8.68458080291748

Token 567: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.0017396744806319475
    2. '_' → logprob: -6.376739501953125
    3. '_rectangle' → logprob: -10.501739501953125
    4. '_Rect' → logprob: -12.876739501953125
    5. 'rect' → logprob: -13.126739501953125
    6. '_rec' → logprob: -13.501739501953125
    7. '[' → logprob: -14.376739501953125
    8. '_
' → logprob: -14.501739501953125
    9. '_

' → logprob: -14.751739501953125
    10. ' _' → logprob: -14.751739501953125

Token 568: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -5.228561349213123e-05
    2. 'anges' → logprob: -10.625052452087402
    3. 's' → logprob: -11.125052452087402
    4. '_angles' → logprob: -12.000052452087402
    5. 'ANGLES' → logprob: -13.375052452087402
    6. 'ang' → logprob: -13.625052452087402
    7. 'angle' → logprob: -13.625052452087402
    8. 'ates' → logprob: -14.125052452087402
    9. 'ranges' → logprob: -14.250052452087402
    10. 'es' → logprob: -15.000052452087402

Token 569: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0011940367985516787
    2. ' =' → logprob: -7.376194000244141
    3. '=' → logprob: -7.876194000244141
    4. '=b' → logprob: -9.00119400024414
    5. 'b' → logprob: -10.12619400024414
    6. '=[' → logprob: -12.00119400024414
    7. '.setdefault' → logprob: -12.62619400024414
    8. ']' → logprob: -12.75119400024414
    9. '\b' → logprob: -13.37619400024414
    10. '[c' → logprob: -13.50119400024414

Token 570: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002659847668837756
    2. ']=' → logprob: -8.250266075134277
    3. ' ]' → logprob: -12.500266075134277
    4. '=' → logprob: -14.750266075134277
    5. ']={' → logprob: -15.375266075134277
    6. '].' → logprob: -16.00026512145996
    7. ')' → logprob: -16.75026512145996
    8. '[' → logprob: -17.00026512145996
    9. '][' → logprob: -17.50026512145996
    10. '])' → logprob: -17.62526512145996

Token 571: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0052492949180305
    2. ' =' → logprob: -5.255249500274658
    3. '=[]' → logprob: -11.1302490234375
    4. '=None' → logprob: -15.1302490234375
    5. '=set' → logprob: -15.1302490234375
    6. '={}' → logprob: -16.2552490234375
    7. ']' → logprob: -17.6302490234375
    8. '=[' → logprob: -17.6302490234375
    9. '＝' → logprob: -17.7552490234375
    10. ']=' → logprob: -17.8802490234375

Token 572: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.0206720617134124e-05
    2. 'None' → logprob: -12.12501049041748
    3. '[(' → logprob: -13.25001049041748
    4. '[' → logprob: -14.00001049041748
    5. '[]
' → logprob: -14.25001049041748
    6. '[]}' → logprob: -14.37501049041748
    7. ' []' → logprob: -15.00001049041748
    8. '[])' → logprob: -15.50001049041748
    9. 'set' → logprob: -16.250009536743164
    10. '[]

' → logprob: -16.375009536743164

Token 573: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13798080384731293
    2. '<|end|>' → logprob: -2.1379806995391846
    3. '   ' → logprob: -5.262980937957764
    4. '           ' → logprob: -6.512980937957764
    5. '<|end|>' → logprob: -7.387980937957764
    6. 'continue' → logprob: -7.387980937957764
    7. '
' → logprob: -7.637980937957764
    8. ' continue' → logprob: -7.762980937957764
    9. ' ' → logprob: -7.887980937957764
    10. ' for' → logprob: -8.012980461120605

Token 574: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2931920289993286
    2. '       ' → logprob: -1.5431920289993286
    3. 'continue' (adapté à ' continue') → logprob: -3.418191909790039
    4. ' continue' → logprob: -4.918191909790039
    5. '   ' → logprob: -8.418191909790039
    6. 'else' → logprob: -10.668191909790039
    7. 'for' → logprob: -10.918191909790039
    8. '	continue' → logprob: -11.043191909790039
    9. '               ' → logprob: -11.418191909790039
    10. 'contin' → logprob: -11.668191909790039

Token 575: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013239304535090923
    2. '        
' → logprob: -7.501323699951172
    3. '<|end|>' → logprob: -8.376323699951172
    4. '   ' → logprob: -8.751323699951172
    5. '
' → logprob: -8.876323699951172
    6. '	' → logprob: -10.126323699951172
    7. ')' → logprob: -10.251323699951172
    8. '           ' → logprob: -10.251323699951172
    9. '    
' → logprob: -11.001323699951172
    10. '```' → logprob: -11.001323699951172

Token 576: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007721390575170517
    2. '   ' → logprob: -5.257721424102783
    3. 'for' → logprob: -6.507721424102783
    4. ' for' → logprob: -7.632721424102783
    5. 'continue' → logprob: -9.257720947265625
    6. '```' → logprob: -9.257720947265625
    7. '           ' → logprob: -9.507720947265625
    8. '	' → logprob: -10.257720947265625
    9. ' continue' → logprob: -10.632720947265625
    10. '	for' → logprob: -10.882720947265625

Token 577: ' #' (ID: 1069)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.09479926526546478
    2. 'x' → logprob: -2.969799280166626
    3. '       ' → logprob: -3.969799280166626
    4. 'xmin' → logprob: -4.719799041748047
    5. ' min' → logprob: -4.969799041748047
    6. 'from' → logprob: -6.969799041748047
    7. '   ' → logprob: -6.969799041748047
    8. '#' (adapté à ' #') → logprob: -7.469799041748047
    9. 'for' → logprob: -7.469799041748047
    10. 'xs' → logprob: -8.469799041748047

Token 578: ' determine' (ID: 11433)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.25643375515937805
    2. 'xs' → logprob: -1.5064337253570557
    3. ' min' → logprob: -6.506433963775635
    4. ' xs' → logprob: -7.006433963775635
    5. 'x' → logprob: -7.381433963775635
    6. 'xmin' → logprob: -7.756433963775635
    7. '#' → logprob: -8.131433486938477
    8. 'mx' → logprob: -8.256433486938477
    9. '       ' → logprob: -8.506433486938477
    10. '   ' → logprob: -8.506433486938477

Token 579: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.6995694041252136
    2. 'min' → logprob: -0.6995694041252136
    3. 'xmin' → logprob: -5.574569225311279
    4. ' xmin' → logprob: -6.449569225311279
    5. 'x' → logprob: -7.449569225311279
    6. '   ' → logprob: -8.074569702148438
    7. '(min' → logprob: -10.574569702148438
    8. ' x' → logprob: -10.949569702148438
    9. 'the' → logprob: -10.949569702148438
    10. ' the' → logprob: -11.199569702148438

Token 580: '/max' (ID: 141080)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0067201098427176476
    2. 'x' → logprob: -5.006720066070557
    3. '_' → logprob: -12.881720542907715
    4. ' x' → logprob: -14.506720542907715
    5. '_pos' → logprob: -14.756720542907715
    6. 'X' → logprob: -14.881720542907715
    7. ' _' → logprob: -15.131720542907715
    8. '(x' → logprob: -15.506720542907715
    9. '_xlim' → logprob: -15.881720542907715
    10. '```' → logprob: -16.3817195892334

Token 581: ' bounding' (ID: 70758)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16041401028633118
    2. '_x' → logprob: -1.9104139804840088
    3. ' x' → logprob: -9.16041374206543
    4. '_' → logprob: -10.03541374206543
    5. '(x' → logprob: -10.41041374206543
    6. '```' → logprob: -12.78541374206543
    7. ' _' → logprob: -13.41041374206543
    8. '(' → logprob: -13.53541374206543
    9. '_pos' → logprob: -14.16041374206543
    10. '	x' → logprob: -14.41041374206543

Token 582: ' box' (ID: 5506)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.015586500987410545
    2. 'x' → logprob: -4.3905863761901855
    3. '_box' → logprob: -6.0155863761901855
    4. '_' → logprob: -8.515586853027344
    5. '_rect' → logprob: -8.515586853027344
    6. '_rectangle' → logprob: -8.765586853027344
    7. '_bbox' → logprob: -10.640586853027344
    8. ' box' → logprob: -11.265586853027344
    9. 'box' → logprob: -11.390586853027344
    10. '_coords' → logprob: -12.140586853027344

Token 583: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02622493915259838
    2. 'x' → logprob: -3.9012248516082764
    3. 'xmin' → logprob: -6.1512250900268555
    4. '_x' → logprob: -6.6512250900268555
    5. ' x' → logprob: -7.2762250900268555
    6. '(x' → logprob: -7.9012250900268555
    7. ',' → logprob: -8.151225090026855
    8. ' xmin' → logprob: -8.526225090026855
    9. '        
' → logprob: -9.401225090026855
    10. '   ' → logprob: -9.526225090026855

Token 584: ' find' (ID: 1646)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9708360433578491
    2. 'include' → logprob: -1.5958360433578491
    3. 'cover' → logprob: -2.0958361625671387
    4. ' cover' → logprob: -2.0958361625671387
    5. ' include' → logprob: -2.5958361625671387
    6. ' encompass' → logprob: -3.0958361625671387
    7. 'en' → logprob: -4.345836162567139
    8. 'contain' → logprob: -4.470836162567139
    9. ' x' → logprob: -5.220836162567139
    10. 'min' → logprob: -5.470836162567139

Token 585: ' candidates' (ID: 18116)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.45223405957221985
    2. ' min' → logprob: -2.3272340297698975
    3. 'min' → logprob: -2.4522340297698975
    4. ' x' → logprob: -3.3272340297698975
    5. 'xmin' → logprob: -3.3272340297698975
    6. ' xmin' → logprob: -3.7022340297698975
    7. ' all' → logprob: -3.8272340297698975
    8. '_x' → logprob: -4.202234268188477
    9. 'possible' → logprob: -4.202234268188477
    10. 'all' → logprob: -4.702234268188477

Token 586: '
' (ID: 198)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9210610389709473
    2. '       ' → logprob: -1.0460610389709473
    3. 'min' → logprob: -2.4210610389709473
    4. ' min' → logprob: -3.2960610389709473
    5. 'xmin' → logprob: -3.2960610389709473
    6. ' x' → logprob: -3.4210610389709473
    7. ' xmin' → logprob: -4.046061038970947
    8. '_min' → logprob: -4.046061038970947
    9. '_x' → logprob: -4.546061038970947
    10. '_' → logprob: -5.546061038970947

Token 587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07107947766780853
    2. '_min' → logprob: -3.9460794925689697
    3. 'min' → logprob: -4.196079254150391
    4. 'x' → logprob: -4.821079254150391
    5. ' min' → logprob: -5.321079254150391
    6. '```' → logprob: -5.446079254150391
    7. '(min' → logprob: -5.696079254150391
    8. ' x' → logprob: -6.071079254150391
    9. 'xmin' → logprob: -6.196079254150391
    10. '   ' → logprob: -6.571079254150391

Token 588: ' xs' (ID: 26642)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.246052548289299
    2. 'min' → logprob: -2.3710525035858154
    3. 'x' → logprob: -3.1210525035858154
    4. ' x' → logprob: -3.2460525035858154
    5. ' xmin' → logprob: -4.1210527420043945
    6. 'xmin' → logprob: -4.7460527420043945
    7. '       ' → logprob: -4.8710527420043945
    8. ' xs' → logprob: -4.9960527420043945
    9. 'xs' (adapté à ' xs') → logprob: -6.4960527420043945
    10. '   ' → logprob: -8.496052742004395

Token 589: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5839340686798096
    2. ' =' → logprob: -0.8339340686798096
    3. '_min' → logprob: -5.2089338302612305
    4. 'min' → logprob: -6.9589338302612305
    5. '=min' → logprob: -7.4589338302612305
    6. '_' → logprob: -7.8339338302612305
    7. ',' → logprob: -7.9589338302612305
    8. '_pos' → logprob: -9.83393383026123
    9. '_=' → logprob: -9.95893383026123
    10. ')' → logprob: -10.33393383026123

Token 590: ' [' (ID: 723)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.5220670700073242
    2. '[min' → logprob: -1.2720670700073242
    3. ' [' → logprob: -2.772067070007324
    4. '[' → logprob: -2.772067070007324
    5. '[t' → logprob: -7.772067070007324
    6. '[b' → logprob: -8.397067070007324
    7. '[i' → logprob: -8.647067070007324
    8. '[item' → logprob: -9.022067070007324
    9. '[list' → logprob: -9.022067070007324
    10. '[m' → logprob: -9.397067070007324

Token 591: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.129266067640856e-05
    2. 'x' → logprob: -11.250020980834961
    3. 'px' → logprob: -11.750020980834961
    4. 'pos' → logprob: -15.625020980834961
    5. ' p' → logprob: -16.50002098083496
    6. 'xy' → logprob: -17.87502098083496
    7. 'pz' → logprob: -18.00002098083496
    8. 'pt' → logprob: -18.12502098083496
    9. 'pq' → logprob: -20.50002098083496
    10. 'pp' → logprob: -20.75002098083496

Token 592: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1637164789135568e-05
    2. 'x' → logprob: -12.125011444091797
    3. '[x' → logprob: -12.500011444091797
    4. ' for' → logprob: -14.125011444091797
    5. '][' → logprob: -14.250011444091797
    6. 'for' → logprob: -14.375011444091797
    7. '.x' → logprob: -15.750011444091797
    8. ' [' → logprob: -16.375011444091797
    9. '[i' → logprob: -17.125011444091797
    10. '```' → logprob: -17.250011444091797

Token 593: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.60414821645827e-06
    2. 'x' → logprob: -12.750004768371582
    3. '[' → logprob: -14.375004768371582
    4. ' ' → logprob: -14.750004768371582
    5. '
' → logprob: -15.500004768371582
    6. 'i' → logprob: -15.625004768371582
    7. '```' → logprob: -15.875004768371582
    8. '   ' → logprob: -16.375003814697266
    9. 'p' → logprob: -17.812503814697266
    10. '۰' → logprob: -18.000003814697266

Token 594: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28370705246925354
    2. 'for' → logprob: -1.4087070226669312
    3. ']' → logprob: -6.033707141876221
    4. ')' → logprob: -9.658706665039062
    5. '       ' → logprob: -10.533706665039062
    6. '()' → logprob: -11.158706665039062
    7. ' ' → logprob: -11.283706665039062
    8. '   ' → logprob: -11.283706665039062
    9. '	for' → logprob: -11.658706665039062
    10. '```' → logprob: -12.533706665039062

Token 595: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3869507908821106
    2. 'for' → logprob: -1.1369507312774658
    3. '       ' → logprob: -9.761950492858887
    4. ' ' → logprob: -12.386950492858887
    5. '   ' → logprob: -12.511950492858887
    6. '        ' → logprob: -12.761950492858887
    7. '           ' → logprob: -12.886950492858887
    8. '         ' → logprob: -13.136950492858887
    9. '	for' → logprob: -13.136950492858887
    10. '          ' → logprob: -14.011950492858887

Token 596: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.062443092465400696
    2. 'pos' → logprob: -2.9374430179595947
    3. ' p' → logprob: -4.937443256378174
    4. ' pos' → logprob: -7.937443256378174
    5. '_pos' → logprob: -14.937442779541016
    6. ' ' → logprob: -15.437442779541016
    7. '
' → logprob: -15.749942779541016
    8. '	pos' → logprob: -15.812442779541016
    9. '	p' → logprob: -15.874942779541016
    10. ')p' → logprob: -16.124942779541016

Token 597: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4004071056842804
    2. 'p' → logprob: -1.775407075881958
    3. 'in' → logprob: -1.900407075881958
    4. ' p' → logprob: -4.525407314300537
    5. 'b' → logprob: -9.525406837463379
    6. 'pos' → logprob: -10.525406837463379
    7. ' ' → logprob: -10.775406837463379
    8. '_' → logprob: -10.900406837463379
    9. ' _' → logprob: -11.400406837463379
    10. '_p' → logprob: -11.650406837463379

Token 598: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -3.4121114822482923e-06
    2. ' pos' → logprob: -12.625003814697266
    3. 'positions' → logprob: -18.250003814697266
    4. 'position' → logprob: -19.625003814697266
    5. 'boards' → logprob: -19.625003814697266
    6. 'p' → logprob: -20.500003814697266
    7. '[pos' → logprob: -21.875003814697266
    8. '	pos' → logprob: -22.125003814697266
    9. '(pos' → logprob: -22.625003814697266
    10. 'px' → logprob: -23.500003814697266

Token 599: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.11612804979085922
    2. ']' → logprob: -2.2411279678344727
    3. ']
' → logprob: -6.116127967834473
    4. '       ' → logprob: -6.866127967834473
    5. ' ]
' → logprob: -10.616127967834473
    6. ' ]' → logprob: -12.241127967834473
    7. '   ' → logprob: -12.366127967834473
    8. ']

' → logprob: -12.616127967834473
    9. '];' → logprob: -12.741127967834473
    10. '           ' → logprob: -13.741127967834473

Token 600: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5703980326652527
    2. '       ' → logprob: -1.6953980922698975
    3. ' ys' → logprob: -1.6953980922698975
    4. ' ymin' → logprob: -3.9453980922698975
    5. 'ys' → logprob: -4.195397853851318
    6. ' ymax' → logprob: -4.695397853851318
    7. 'y' → logprob: -4.945397853851318
    8. ',y' → logprob: -4.945397853851318
    9. 'max' → logprob: -6.070397853851318
    10. 'min' → logprob: -6.570397853851318

Token 601: ' ys' (ID: 67301)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' (adapté à ' ys') → logprob: -0.03376268967986107
    2. ' ys' → logprob: -3.4087626934051514
    3. '       ' → logprob: -9.78376293182373
    4. '   ' → logprob: -9.78376293182373
    5. ' ' → logprob: -14.15876293182373
    6. 'xs' → logprob: -14.53376293182373
    7. '``' → logprob: -14.90876293182373
    8. 'min' → logprob: -15.03376293182373
    9. '```' → logprob: -15.15876293182373
    10. '     ' → logprob: -15.15876293182373

Token 602: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14274945855140686
    2. ' =' → logprob: -2.017749547958374
    3. '=[' → logprob: -10.392749786376953
    4. ')' → logprob: -11.267749786376953
    5. ']' → logprob: -11.392749786376953
    6. '=p' → logprob: -12.642749786376953
    7. ' =[' → logprob: -12.892749786376953
    8. '=[]' → logprob: -13.017749786376953
    9. '.append' → logprob: -13.392749786376953
    10. '[' → logprob: -13.392749786376953

Token 603: ' [' (ID: 723)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.25197169184684753
    2. ' [' → logprob: -1.50197172164917
    3. '[' → logprob: -10.251971244812012
    4. '[pos' → logprob: -12.501971244812012
    5. ' p' → logprob: -13.126971244812012
    6. 'p' → logprob: -13.501971244812012
    7. '   ' → logprob: -16.501972198486328
    8. '(p' → logprob: -16.876972198486328
    9. '[s' → logprob: -17.626972198486328
    10. '[y' → logprob: -17.626972198486328

Token 604: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06231115385890007
    2. '[p' → logprob: -2.8123111724853516
    3. ' p' → logprob: -8.437311172485352
    4. ' [' → logprob: -9.312311172485352
    5. '(p' → logprob: -10.312311172485352
    6. '[' → logprob: -13.187311172485352
    7. '   ' → logprob: -14.687311172485352
    8. '	p' → logprob: -16.06231117248535
    9. '{' → logprob: -16.18731117248535
    10. '<p' → logprob: -16.31231117248535

Token 605: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2787255346775055
    2. '[p' → logprob: -1.778725504875183
    3. '(p' → logprob: -3.1537256240844727
    4. 'p' → logprob: -3.9037256240844727
    5. ' for' → logprob: -5.778725624084473
    6. 'for' → logprob: -6.153725624084473
    7. '       ' → logprob: -6.653725624084473
    8. ':' → logprob: -7.028725624084473
    9. '[y' → logprob: -7.403725624084473
    10. ':p' → logprob: -7.528725624084473

Token 606: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.19093652069568634
    2. '1' → logprob: -1.81593656539917
    3. '0' → logprob: -4.69093656539917
    4. 'i' → logprob: -7.19093656539917
    5. 'y' → logprob: -7.19093656539917
    6. ' p' → logprob: -8.440936088562012
    7. '[' → logprob: -9.315936088562012
    8. '(p' → logprob: -10.815936088562012
    9. '-' → logprob: -10.940936088562012
    10. ']' → logprob: -11.065936088562012

Token 607: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11644662916660309
    2. 'for' → logprob: -2.4914467334747314
    3. ']' → logprob: -3.6164467334747314
    4. ')' → logprob: -8.616446495056152
    5. '       ' → logprob: -10.866446495056152
    6. ' ]' → logprob: -11.116446495056152
    7. ' ' → logprob: -11.241446495056152
    8. '   ' → logprob: -11.491446495056152
    9. '        ' → logprob: -12.366446495056152
    10. '	for' → logprob: -12.866446495056152

Token 608: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.40788039565086365
    2. ']' → logprob: -1.657880425453186
    3. 'for' → logprob: -2.0328803062438965
    4. '       ' → logprob: -4.6578803062438965
    5. ']
' → logprob: -5.6578803062438965
    6. ' ]' → logprob: -8.782880783081055
    7. ')' → logprob: -9.407880783081055
    8. '        ' → logprob: -10.032880783081055
    9. '   ' → logprob: -10.907880783081055
    10. '[' → logprob: -11.157880783081055

Token 609: ' p' (ID: 275)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.005234594456851482
    2. ' pos' → logprob: -5.255234718322754
    3. 'xs' → logprob: -15.005234718322754
    4. 'p' → logprob: -15.880234718322754
    5. 'ys' → logprob: -16.005233764648438
    6. '[pos' → logprob: -16.255233764648438
    7. '(pos' → logprob: -16.505233764648438
    8. ' ys' → logprob: -17.380233764648438
    9. ' xs' → logprob: -19.380233764648438
    10. ' p' → logprob: -19.880233764648438

Token 610: ' in' (ID: 306)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3214811086654663
    2. '1' → logprob: -1.5714811086654663
    3. ']' → logprob: -3.696481227874756
    4. ' in' → logprob: -4.071481227874756
    5. 'in' → logprob: -4.446481227874756
    6. 'range' → logprob: -5.571481227874756
    7. ':' → logprob: -5.696481227874756
    8. '       ' → logprob: -7.196481227874756
    9. '   ' → logprob: -7.321481227874756
    10. ' ' → logprob: -7.446481227874756

Token 611: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.001503313542343676
    2. ' pos' → logprob: -6.5015034675598145
    3. '[pos' → logprob: -14.876502990722656
    4. '(pos' → logprob: -15.376502990722656
    5. 'range' → logprob: -16.376502990722656
    6. 'ys' → logprob: -16.501502990722656
    7. 'xs' → logprob: -16.626502990722656
    8. '[' → logprob: -16.876502990722656
    9. '   ' → logprob: -17.876502990722656
    10. ' range' → logprob: -18.251502990722656

Token 612: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5860695838928223
    2. ']' → logprob: -0.8360695838928223
    3. '       ' → logprob: -4.711069583892822
    4. ']
' → logprob: -7.086069583892822
    5. ']

' → logprob: -9.586069107055664
    6. ' ]' → logprob: -10.211069107055664
    7. ' ]
' → logprob: -10.586069107055664
    8. ')' → logprob: -10.836069107055664
    9. '']' → logprob: -11.586069107055664
    10. '];' → logprob: -11.586069107055664

Token 613: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08639378100633621
    2. '_min' → logprob: -3.2113938331604004
    3. 'min' → logprob: -3.5863938331604004
    4. ' min' → logprob: -4.7113938331604
    5. '```' → logprob: -6.4613938331604
    6. ',' → logprob: -7.3363938331604
    7. '[min' → logprob: -7.5863938331604
    8. ',min' → logprob: -7.7113938331604
    9. 'xmin' → logprob: -7.7113938331604
    10. '	min' → logprob: -7.9613938331604

Token 614: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.4871690273284912
    2. 'min' (adapté à ' min') → logprob: -1.2371690273284912
    3. ' xmin' → logprob: -3.237169027328491
    4. ' x' → logprob: -3.487169027328491
    5. 'xmin' → logprob: -4.48716926574707
    6. 'x' → logprob: -4.73716926574707
    7. '       ' → logprob: -5.23716926574707
    8. 'import' → logprob: -9.73716926574707
    9. '_min' → logprob: -10.36216926574707
    10. 'mx' → logprob: -11.11216926574707

Token 615: 'x' (ID: 87)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.008783683180809021
    2. 'x' → logprob: -4.75878381729126
    3. 'X' → logprob: -9.258783340454102
    4. '_' → logprob: -9.633783340454102
    5. '(min' → logprob: -13.008783340454102
    6. 'xmin' → logprob: -13.258783340454102
    7. ' x' → logprob: -13.758783340454102
    8. '(x' → logprob: -13.758783340454102
    9. '_xlim' → logprob: -14.133783340454102
    10. '(' → logprob: -14.383783340454102

Token 616: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25480949878692627
    2. ' =' → logprob: -1.5048094987869263
    3. ',' → logprob: -6.379809379577637
    4. '=min' → logprob: -6.754809379577637
    5. ',min' → logprob: -12.129809379577637
    6. '_=' → logprob: -12.754809379577637
    7. '=max' → logprob: -13.129809379577637
    8. '   ' → logprob: -14.129809379577637
    9. '_' → logprob: -14.129809379577637
    10. ' ,' → logprob: -14.254809379577637

Token 617: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3649706542491913
    2. 'max' → logprob: -1.3649706840515137
    3. ' min' → logprob: -3.1149706840515137
    4. ' max' → logprob: -5.114970684051514
    5. '=min' → logprob: -11.989970207214355
    6. ' =' → logprob: -13.739970207214355
    7. '=' → logprob: -13.989970207214355
    8. '=max' → logprob: -14.614970207214355
    9. '_min' → logprob: -16.114971160888672
    10. '(min' → logprob: -16.989971160888672

Token 618: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005854414775967598
    2. '_x' → logprob: -7.500585556030273
    3. '=' → logprob: -11.125585556030273
    4. '_' → logprob: -11.750585556030273
    5. 'xs' → logprob: -12.375585556030273
    6. '(x' → logprob: -13.000585556030273
    7. ' =' → logprob: -13.250585556030273
    8. '_=' → logprob: -13.750585556030273
    9. '(xs' → logprob: -15.125585556030273
    10. '(' → logprob: -16.000585556030273

Token 619: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10029012709856033
    2. ' =' → logprob: -2.350290060043335
    3. '=min' → logprob: -9.725290298461914
    4. ',' → logprob: -10.725290298461914
    5. '=max' → logprob: -14.100290298461914
    6. ')' → logprob: -15.725290298461914
    7. '=
' → logprob: -15.850290298461914
    8. '```' → logprob: -15.975290298461914
    9. '=}' → logprob: -16.100290298461914
    10. '=

' → logprob: -16.225290298461914

Token 620: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3869049549102783
    2. ' min' → logprob: -1.1369049549102783
    3. '(min' → logprob: -10.5119047164917
    4. '	min' → logprob: -13.1369047164917
    5. '=min' → logprob: -13.1369047164917
    6. '[min' → logprob: -13.7619047164917
    7. ',min' → logprob: -13.7619047164917
    8. 'max' → logprob: -15.3869047164917
    9. '_min' → logprob: -15.8869047164917
    10. '   ' → logprob: -16.011905670166016

Token 621: '(xs' (ID: 132690)
  Prédit: '(xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.008617646060883999
    2. 'xs' → logprob: -4.758617877960205
    3. ' xs' → logprob: -13.383617401123047
    4. '(' → logprob: -14.133617401123047
    5. ' (' → logprob: -15.383617401123047
    6. '_x' → logprob: -16.008617401123047
    7. '(x' → logprob: -16.008617401123047
    8. '   ' → logprob: -16.008617401123047
    9. '(
' → logprob: -16.508617401123047
    10. '```' → logprob: -17.633617401123047

Token 622: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.14395029842853546
    2. ',' → logprob: -2.0189502239227295
    3. ',min' → logprob: -7.143950462341309
    4. ' ,' → logprob: -8.643950462341309
    5. ')' → logprob: -9.018950462341309
    6. ' ),' → logprob: -9.393950462341309
    7. ',max' → logprob: -10.643950462341309
    8. 'min' → logprob: -10.768950462341309
    9. '(min' → logprob: -11.643950462341309
    10. '-' → logprob: -11.893950462341309

Token 623: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1269282102584839
    2. ' max' → logprob: -2.1269283294677734
    3. '(max' → logprob: -16.376928329467773
    4. '	max' → logprob: -18.251928329467773
    5. ',max' → logprob: -19.126928329467773
    6. '_max' → logprob: -19.126928329467773
    7. 'min' → logprob: -19.876928329467773
    8. '.max' → logprob: -20.001928329467773
    9. 'Max' → logprob: -20.376928329467773
    10. ' ' → logprob: -20.626928329467773

Token 624: '(xs' (ID: 132690)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.13476631045341492
    2. 'y' → logprob: -2.5097663402557373
    3. 'max' → logprob: -4.134766101837158
    4. ' ys' → logprob: -4.259766101837158
    5. '(max' → logprob: -4.384766101837158
    6. ' max' → logprob: -6.884766101837158
    7. 'x' → logprob: -8.009766578674316
    8. 'xs' → logprob: -8.509766578674316
    9. '(y' → logprob: -8.759766578674316
    10. '(xs' → logprob: -9.259766578674316

Token 625: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24928095936775208
    2. ')
' → logprob: -1.6242809295654297
    3. '+' → logprob: -3.9992809295654297
    4. '),' → logprob: -5.62428092956543
    5. '       ' → logprob: -7.49928092956543
    6. ')+' → logprob: -7.74928092956543
    7. ' +' → logprob: -7.74928092956543
    8. ',' → logprob: -9.37428092956543
    9. '<|end|>' → logprob: -9.62428092956543
    10. '
' → logprob: -10.99928092956543

Token 626: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00353627884760499
    2. ',' → logprob: -7.003536224365234
    3. '```' → logprob: -7.378536224365234
    4. '+' → logprob: -7.503536224365234
    5. ' max' → logprob: -7.753536224365234
    6. ' min' → logprob: -8.253536224365234
    7. 'max' → logprob: -8.503536224365234
    8. 'min' → logprob: -8.628536224365234
    9. '
' → logprob: -9.253536224365234
    10. ' ' → logprob: -9.753536224365234

Token 627: ' min' (ID: 1349)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0500799417495728
    2. ' min' → logprob: -1.3000799417495728
    3. ' max' → logprob: -1.5500799417495728
    4. 'min' (adapté à ' min') → logprob: -1.8000799417495728
    5. '       ' → logprob: -9.925080299377441
    6. '_min' → logprob: -12.675080299377441
    7. '        ' → logprob: -12.800080299377441
    8. '_max' → logprob: -13.050080299377441
    9. ',' → logprob: -13.425080299377441
    10. ',min' → logprob: -14.050080299377441

Token 628: 'y' (ID: 88)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000565541791729629
    2. 'y' → logprob: -7.500565528869629
    3. '(' → logprob: -12.000565528869629
    4. '(x' → logprob: -13.125565528869629
    5. '_x' → logprob: -13.250565528869629
    6. ' x' → logprob: -14.625565528869629
    7. '(min' → logprob: -14.750565528869629
    8. '(max' → logprob: -15.000565528869629
    9. ' y' → logprob: -15.375565528869629
    10. '(
' → logprob: -15.375565528869629

Token 629: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01576627977192402
    2. '=' → logprob: -4.765766143798828
    3. ' =' → logprob: -5.515766143798828
    4. ' ,' → logprob: -6.015766143798828
    5. ',y' → logprob: -7.640766143798828
    6. ',min' → logprob: -9.515766143798828
    7. '=min' → logprob: -10.140766143798828
    8. ',p' → logprob: -11.265766143798828
    9. '(y' → logprob: -11.765766143798828
    10. ' ' → logprob: -11.890766143798828

Token 630: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.3868713676929474
    2. 'max' → logprob: -1.136871337890625
    3. 'min' → logprob: -16.011871337890625
    4. ' min' → logprob: -16.136871337890625
    5. '(max' → logprob: -16.636871337890625
    6. '_max' → logprob: -17.136871337890625
    7. '	max' → logprob: -18.136871337890625
    8. ',max' → logprob: -18.136871337890625
    9. '[max' → logprob: -18.761871337890625
    10. '=max' → logprob: -19.511871337890625

Token 631: 'y' (ID: 88)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.47437164187431335
    2. 'y' → logprob: -0.9743716716766357
    3. ' ys' → logprob: -9.599371910095215
    4. 'x' → logprob: -9.724371910095215
    5. 'max' → logprob: -9.974371910095215
    6. '[' → logprob: -10.474371910095215
    7. 'min' → logprob: -10.599371910095215
    8. 'yst' → logprob: -10.724371910095215
    9. 'yl' → logprob: -11.224371910095215
    10. '0' → logprob: -11.474371910095215

Token 632: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014208436012268
    2. '=' → logprob: -1.701420783996582
    3. ',' → logprob: -11.951420783996582
    4. ' ' → logprob: -14.201420783996582
    5. ')' → logprob: -15.826420783996582
    6. '   ' → logprob: -16.4514217376709
    7. ' ,' → logprob: -17.0764217376709
    8. '    ' → logprob: -17.3264217376709
    9. ' =
' → logprob: -17.5764217376709
    10. ' ' → logprob: -17.7014217376709

Token 633: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.4576971232891083
    2. 'max' → logprob: -1.4576971530914307
    3. ' min' → logprob: -2.2076971530914307
    4. ' max' → logprob: -3.7076971530914307
    5. '	min' → logprob: -14.082696914672852
    6. '(min' → logprob: -14.207696914672852
    7. '(max' → logprob: -15.957696914672852
    8. '	max' → logprob: -16.33269691467285
    9. '[min' → logprob: -16.83269691467285
    10. '_min' → logprob: -17.20769691467285

Token 634: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.690834273584187e-05
    2. 'ys' → logprob: -10.25003719329834
    3. '[' → logprob: -14.00003719329834
    4. ' (' → logprob: -14.87503719329834
    5. ' ys' → logprob: -15.25003719329834
    6. '(xs' → logprob: -17.375036239624023
    7. '   ' → logprob: -17.625036239624023
    8. '(
' → logprob: -18.000036239624023
    9. '```' → logprob: -18.125036239624023
    10. '(min' → logprob: -18.875036239624023

Token 635: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -7.314625690924004e-05
    2. '(' → logprob: -9.750073432922363
    3. '[' → logprob: -11.500073432922363
    4. ' ys' → logprob: -12.375073432922363
    5. '
' → logprob: -16.750072479248047
    6. '0' → logprob: -17.000072479248047
    7. ')' → logprob: -17.000072479248047
    8. 'yses' → logprob: -17.125072479248047
    9. '   ' → logprob: -17.125072479248047
    10. '{' → logprob: -17.625072479248047

Token 636: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.14869554340839386
    2. ',' → logprob: -2.023695468902588
    3. ')' → logprob: -5.148695468902588
    4. ' ,' → logprob: -10.023695945739746
    5. ',min' → logprob: -10.148695945739746
    6. ',),' → logprob: -11.023695945739746
    7. ',y' → logprob: -11.148695945739746
    8. ' ),' → logprob: -11.273695945739746
    9. '],' → logprob: -11.398695945739746
    10. ')
' → logprob: -11.523695945739746

Token 637: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07888989895582199
    2. ' max' → logprob: -2.578889846801758
    3. '(max' → logprob: -15.828889846801758
    4. '	max' → logprob: -19.203889846801758
    5. '[max' → logprob: -19.578889846801758
    6. '_max' → logprob: -19.828889846801758
    7. '=max' → logprob: -20.703889846801758
    8. ',max' → logprob: -20.703889846801758
    9. 'Max' → logprob: -20.828889846801758
    10. '.max' → logprob: -21.328889846801758

Token 638: '(' (ID: 7)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3538050353527069
    2. 'ys' → logprob: -1.2288050651550293
    3. '(' → logprob: -6.103805065155029
    4. 'max' → logprob: -6.103805065155029
    5. '(max' → logprob: -7.853805065155029
    6. 'x' → logprob: -8.728804588317871
    7. 'yst' → logprob: -9.603804588317871
    8. '(y' → logprob: -9.728804588317871
    9. ' ys' → logprob: -10.103804588317871
    10. 'yl' → logprob: -10.353804588317871

Token 639: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.041277993470430374
    2. 'max' → logprob: -3.2912778854370117
    3. 'y' → logprob: -5.791277885437012
    4. 'ym' → logprob: -9.166277885437012
    5. ' ys' → logprob: -11.291277885437012
    6. '[max' → logprob: -11.666277885437012
    7. '   ' → logprob: -11.916277885437012
    8. ')' → logprob: -12.041277885437012
    9. ' max' → logprob: -12.166277885437012
    10. 'yl' → logprob: -12.166277885437012

Token 640: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02176576852798462
    2. '+' → logprob: -4.64676570892334
    3. ')+' → logprob: -4.77176570892334
    4. ')
' → logprob: -5.77176570892334
    5. ' +' → logprob: -8.14676570892334
    6. ']' → logprob: -10.77176570892334
    7. ']+' → logprob: -11.77176570892334
    8. '       ' → logprob: -11.89676570892334
    9. '<|end|>' → logprob: -11.89676570892334
    10. ' )' → logprob: -12.02176570892334

Token 641: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006164124351926148
    2. '        
' → logprob: -8.500616073608398
    3. ' for' → logprob: -8.875616073608398
    4. '```' → logprob: -9.625616073608398
    5. '   ' → logprob: -10.250616073608398
    6. ',' → logprob: -10.625616073608398
    7. 'for' → logprob: -10.625616073608398
    8. ' if' → logprob: -11.125616073608398
    9. '<|end|>' → logprob: -11.125616073608398
    10. '	' → logprob: -11.250616073608398

Token 642: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5481857061386108
    2. '       ' → logprob: -1.9231857061386108
    3. 'found' → logprob: -2.5481858253479004
    4. 'possible' → logprob: -2.9231858253479004
    5. ' for' → logprob: -3.1731858253479004
    6. 'width' → logprob: -4.0481858253479
    7. 'w' → logprob: -4.4231858253479
    8. ' found' → logprob: -4.5481858253479
    9. 'area' → logprob: -4.6731858253479
    10. ' possible' → logprob: -4.7981858253479

Token 643: ' The' (ID: 623)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'found' → logprob: -1.3226176500320435
    2. 'if' → logprob: -2.072617530822754
    3. 'possible' → logprob: -2.322617530822754
    4. 'width' → logprob: -2.322617530822754
    5. 'lx' → logprob: -2.447617530822754
    6. 'area' → logprob: -2.947617530822754
    7. 'w' → logprob: -2.947617530822754
    8. 'min' → logprob: -3.072617530822754
    9. 'for' → logprob: -3.197617530822754
    10. '#' → logprob: -3.322617530822754

Token 644: ' rectangle' (ID: 45808)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.7576181888580322
    2. ' width' → logprob: -1.7576181888580322
    3. 'min' → logprob: -2.1326181888580322
    4. ' min' → logprob: -2.3826181888580322
    5. 'w' → logprob: -3.5076181888580322
    6. 'for' → logprob: -3.5076181888580322
    7. 'area' → logprob: -3.7576181888580322
    8. '#' → logprob: -4.632617950439453
    9. ' area' → logprob: -4.632617950439453
    10. 'dx' → logprob: -5.007617950439453

Token 645: ' must' (ID: 2804)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -1.2597424983978271
    2. 's' → logprob: -2.009742498397827
    3. 'can' → logprob: -2.009742498397827
    4. ' can' → logprob: -2.259742498397827
    5. 'must' → logprob: -2.634742498397827
    6. 'c' → logprob: -2.759742498397827
    7. ' must' → logprob: -3.134742498397827
    8. '_width' → logprob: -3.634742498397827
    9. 'for' → logprob: -4.009742736816406
    10. '_candidates' → logprob: -4.134742736816406

Token 646: ' contain' (ID: 10232)
  Prédit: 'cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cover' → logprob: -0.9720107316970825
    2. ' cover' → logprob: -1.8470107316970825
    3. 'have' → logprob: -2.097010612487793
    4. ' at' → logprob: -2.222010612487793
    5. 'at' → logprob: -2.722010612487793
    6. 'expand' → logprob: -3.222010612487793
    7. ' be' → logprob: -3.347010612487793
    8. ' have' → logprob: -3.847010612487793
    9. 'be' → logprob: -3.972010612487793
    10. 'en' → logprob: -4.722010612487793

Token 647: ' (' (ID: 350)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.3880167603492737
    2. 'all' → logprob: -1.138016700744629
    3. ' the' → logprob: -8.138016700744629
    4. ' at' → logprob: -8.138016700744629
    5. 'the' → logprob: -8.263016700744629
    6. 'min' → logprob: -8.888016700744629
    7. 'at' → logprob: -9.513016700744629
    8. ' min' → logprob: -9.763016700744629
    9. '(min' → logprob: -12.388016700744629
    10. 'every' → logprob: -12.513016700744629

Token 648: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.016874775290489197
    2. ' min' → logprob: -4.26687479019165
    3. 'all' → logprob: -6.14187479019165
    4. ' all' → logprob: -8.266874313354492
    5. 'max' → logprob: -9.391874313354492
    6. '(min' → logprob: -10.016874313354492
    7. ')' → logprob: -10.141874313354492
    8. '           ' → logprob: -10.266874313354492
    9. '   ' → logprob: -11.391874313354492
    10. 'x' → logprob: -11.391874313354492

Token 649: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.60414821645827e-06
    2. ',' → logprob: -13.375004768371582
    3. 'y' → logprob: -13.375004768371582
    4. ' x' → logprob: -14.750004768371582
    5. ' ,' → logprob: -15.250004768371582
    6. '_x' → logprob: -15.375004768371582
    7. '```' → logprob: -15.625004768371582
    8. '(x' → logprob: -16.125003814697266
    9. ')x' → logprob: -16.125003814697266
    10. ')' → logprob: -16.125003814697266

Token 650: ',min' (ID: 129117)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029196305200457573
    2. ' ,' → logprob: -4.529196262359619
    3. ')' → logprob: -4.779196262359619
    4. ',min' → logprob: -5.029196262359619
    5. '),' → logprob: -6.404196262359619
    6. '-' → logprob: -7.779196262359619
    7. ' -' → logprob: -8.029196739196777
    8. ',max' → logprob: -8.404196739196777
    9. ' and' → logprob: -9.404196739196777
    10. ')-' → logprob: -9.779196739196777

Token 651: 'y' (ID: 88)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000719818810466677
    2. 'y' → logprob: -7.625720024108887
    3. ',' → logprob: -8.875720024108887
    4. ')x' → logprob: -9.750720024108887
    5. '),' → logprob: -10.875720024108887
    6. ')' → logprob: -11.500720024108887
    7. ' x' → logprob: -13.875720024108887
    8. ',x' → logprob: -14.250720024108887
    9. ',y' → logprob: -14.250720024108887
    10. ' ,' → logprob: -14.375720024108887

Token 652: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3437626361846924
    2. ',' → logprob: -1.3437626361846924
    3. '),' → logprob: -3.7187626361846924
    4. ' ,' → logprob: -5.968762397766113
    5. ' )' → logprob: -7.093762397766113
    6. ')
' → logprob: -7.218762397766113
    7. ',min' → logprob: -7.468762397766113
    8. '),(' → logprob: -7.593762397766113
    9. ',max' → logprob: -8.593762397766113
    10. ' and' → logprob: -9.468762397766113

Token 653: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11376494914293289
    2. ' and' → logprob: -2.613765001296997
    3. ' to' → logprob: -4.113764762878418
    4. '       ' → logprob: -5.113764762878418
    5. ' ,' → logprob: -5.488764762878418
    6. 'and' → logprob: -5.988764762878418
    7. ')' → logprob: -6.238764762878418
    8. ',max' → logprob: -6.863764762878418
    9. 'to' → logprob: -7.488764762878418
    10. '<|end|>' → logprob: -8.488764762878418

Token 654: ' (' (ID: 350)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.31358879804611206
    2. 'max' → logprob: -1.3135888576507568
    3. '(max' → logprob: -8.063589096069336
    4. ',max' → logprob: -11.688589096069336
    5. '	max' → logprob: -13.188589096069336
    6. '[max' → logprob: -14.688589096069336
    7. ' (' → logprob: -14.938589096069336
    8. '_max' → logprob: -15.313589096069336
    9. ' min' → logprob: -15.563589096069336
    10. ' maximal' → logprob: -15.938589096069336

Token 655: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.65101717156358e-05
    2. ' max' → logprob: -9.250096321105957
    3. '	max' → logprob: -16.375097274780273
    4. '(max' → logprob: -16.625097274780273
    5. 'min' → logprob: -16.875097274780273
    6. '   ' → logprob: -17.250097274780273
    7. ',max' → logprob: -17.500097274780273
    8. '_max' → logprob: -17.875097274780273
    9. '[max' → logprob: -18.000097274780273
    10. '           ' → logprob: -18.625097274780273

Token 656: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.054500666621607e-06
    2. 'max' → logprob: -13.50000286102295
    3. 'y' → logprob: -13.87500286102295
    4. ' x' → logprob: -15.00000286102295
    5. ')x' → logprob: -15.62500286102295
    6. '_x' → logprob: -16.000003814697266
    7. ',' → logprob: -16.750003814697266
    8. ',max' → logprob: -17.000003814697266
    9. '```' → logprob: -17.250003814697266
    10. '
' → logprob: -17.875003814697266

Token 657: ',max' (ID: 81466)
  Prédit: ',max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',max' → logprob: -0.10809718072414398
    2. ',' → logprob: -2.8580970764160156
    3. ',min' → logprob: -3.1080970764160156
    4. 'max' → logprob: -8.233097076416016
    5. '+' → logprob: -9.233097076416016
    6. ' ,' → logprob: -11.483097076416016
    7. 'min' → logprob: -11.733097076416016
    8. '_max' → logprob: -12.483097076416016
    9. ',m' → logprob: -12.983097076416016
    10. ',
' → logprob: -13.108097076416016

Token 658: 'y' (ID: 88)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.012127326801419258
    2. 'y' → logprob: -4.51212739944458
    3. 'x' → logprob: -7.01212739944458
    4. ',max' → logprob: -9.512126922607422
    5. ' max' → logprob: -10.262126922607422
    6. '(max' → logprob: -10.637126922607422
    7. ')' → logprob: -11.637126922607422
    8. '=max' → logprob: -11.637126922607422
    9. '_max' → logprob: -11.637126922607422
    10. '	max' → logprob: -11.887126922607422

Token 659: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016655096784234047
    2. ')
' → logprob: -4.766654968261719
    3. '       ' → logprob: -4.891654968261719
    4. '),' → logprob: -8.641654968261719
    5. ').' → logprob: -9.266654968261719
    6. ' )' → logprob: -10.141654968261719
    7. ',' → logprob: -10.141654968261719
    8. '```' → logprob: -10.266654968261719
    9. ')+' → logprob: -10.391654968261719
    10. '   ' → logprob: -11.266654968261719

Token 660: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007789624389261007
    2. ',' → logprob: -5.757789611816406
    3. ' for' → logprob: -6.507789611816406
    4. ' and' → logprob: -6.882789611816406
    5. '        
' → logprob: -7.757789611816406
    6. '.' → logprob: -8.132789611816406
    7. '<|end|>' → logprob: -8.132789611816406
    8. ' if' → logprob: -9.132789611816406
    9. ' while' → logprob: -9.382789611816406
    10. ' (' → logprob: -9.632789611816406

Token 661: ' base' (ID: 3611)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1284780502319336
    2. ' for' → logprob: -2.3784780502319336
    3. 'for' → logprob: -4.753478050231934
    4. '        
' → logprob: -5.378478050231934
    5. ' possible' → logprob: -5.753478050231934
    6. '
' → logprob: -6.128478050231934
    7. ' found' → logprob: -6.253478050231934
    8. ' if' → logprob: -6.378478050231934
    9. ' width' → logprob: -7.003478050231934
    10. ',' → logprob: -7.628478050231934

Token 662: '_area' (ID: 34097)
  Prédit: '_width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.6560402512550354
    2. '_area' → logprob: -1.6560401916503906
    3. '_w' → logprob: -1.7810401916503906
    4. '_x' → logprob: -2.5310401916503906
    5. '_min' → logprob: -3.5310401916503906
    6. 'width' → logprob: -5.781040191650391
    7. '_rect' → logprob: -6.281040191650391
    8. 'area' → logprob: -6.406040191650391
    9. '_l' → logprob: -6.656040191650391
    10. 'w' → logprob: -6.906040191650391

Token 663: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12697377800941467
    2. '=' → logprob: -2.126973867416382
    3. '_' → logprob: -11.251974105834961
    4. ' ' → logprob: -11.501974105834961
    5. ' ' → logprob: -12.376974105834961
    6. ' ==' → logprob: -12.751974105834961
    7. '	' → logprob: -13.001974105834961
    8. '_size' → logprob: -13.251974105834961
    9. '_area' → logprob: -13.501974105834961
    10. '   ' → logprob: -13.501974105834961

Token 664: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5761535167694092
    2. '(max' → logprob: -0.8261535167694092
    3. '(' → logprob: -9.951153755187988
    4. ' ' → logprob: -10.326153755187988
    5. '   ' → logprob: -10.701153755187988
    6. '(x' → logprob: -10.826153755187988
    7. '(min' → logprob: -10.826153755187988
    8. '(check' → logprob: -10.951153755187988
    9. '(mx' → logprob: -11.201153755187988
    10. '(len' → logprob: -11.451153755187988

Token 665: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0006133131100796163
    2. '(max' → logprob: -7.750613212585449
    3. ' max' → logprob: -8.62561321258545
    4. '   ' → logprob: -12.87561321258545
    5. '	max' → logprob: -15.62561321258545
    6. '           ' → logprob: -16.000614166259766
    7. '=max' → logprob: -16.750614166259766
    8. '(' → logprob: -16.875614166259766
    9. '       ' → logprob: -17.000614166259766
    10. '
' → logprob: -17.125614166259766

Token 666: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00015681622608099133
    2. '_x' → logprob: -9.12515640258789
    3. 'max' → logprob: -10.87515640258789
    4. '(max' → logprob: -11.25015640258789
    5. ' -' → logprob: -11.37515640258789
    6. 'y' → logprob: -13.25015640258789
    7. '```' → logprob: -14.25015640258789
    8. ' ' → logprob: -15.25015640258789
    9. '_' → logprob: -15.25015640258789
    10. '-' → logprob: -15.25015640258789

Token 667: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009119579568505287
    2. '-' → logprob: -4.884119510650635
    3. '-min' → logprob: -6.509119510650635
    4. '+' → logprob: -11.134119987487793
    5. ' +' → logprob: -12.759119987487793
    6. ' ' → logprob: -13.634119987487793
    7. ' -
' → logprob: -14.134119987487793
    8. '-Min' → logprob: -14.384119987487793
    9. '-max' → logprob: -14.384119987487793
    10. '-x' → logprob: -14.634119987487793

Token 668: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.07889066636562347
    2. ' min' → logprob: -2.578890562057495
    3. '_min' → logprob: -15.328890800476074
    4. '	min' → logprob: -15.578890800476074
    5. ' ' → logprob: -15.828890800476074
    6. '(min' → logprob: -15.953890800476074
    7. '[min' → logprob: -16.328889846801758
    8. 'max' → logprob: -17.203889846801758
    9. ':min' → logprob: -17.953889846801758
    10. ',min' → logprob: -17.953889846801758

Token 669: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00010998018842656165
    2. 'min' → logprob: -9.875109672546387
    3. ' min' → logprob: -9.875109672546387
    4. '(min' → logprob: -12.625109672546387
    5. ' x' → logprob: -12.750109672546387
    6. '[min' → logprob: -14.375109672546387
    7. 'xmin' → logprob: -15.500109672546387
    8. '_x' → logprob: -16.875110626220703
    9. '+' → logprob: -17.250110626220703
    10. '=min' → logprob: -17.375110626220703

Token 670: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519317865371704
    2. '+' → logprob: -1.5019317865371704
    3. ')' → logprob: -13.626932144165039
    4. ' +
' → logprob: -14.876932144165039
    5. '[' → logprob: -15.251932144165039
    6. ' ' → logprob: -15.501932144165039
    7. ')+' → logprob: -15.876932144165039
    8. '```' → logprob: -16.00193214416504
    9. '+
' → logprob: -16.12693214416504
    10. '1' → logprob: -16.12693214416504

Token 671: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010332842357456684
    2. ' ' → logprob: -6.876033306121826
    3. ')' → logprob: -15.501032829284668
    4. '```' → logprob: -15.751032829284668
    5. '   ' → logprob: -16.876033782958984
    6. ' ' → logprob: -19.126033782958984
    7. '１' → logprob: -19.563533782958984
    8. '
' → logprob: -19.938533782958984
    9. '-' → logprob: -19.938533782958984
    10. '0' → logprob: -20.188533782958984

Token 672: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. ')' → logprob: -16.000051498413086
    4. '```' → logprob: -16.375051498413086
    5. '
' → logprob: -16.750051498413086
    6. '   ' → logprob: -18.125051498413086
    7. '0' → logprob: -19.562551498413086
    8. '=' → logprob: -19.687551498413086
    9. '2' → logprob: -19.937551498413086
    10. '

' → logprob: -20.000051498413086

Token 673: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003144896763842553
    2. ' )' → logprob: -9.250314712524414
    3. ')*' → logprob: -9.375314712524414
    4. '+' → logprob: -9.375314712524414
    5. ' +' → logprob: -10.750314712524414
    6. ')
' → logprob: -11.750314712524414
    7. '```' → logprob: -12.500314712524414
    8. '*' → logprob: -12.625314712524414
    9. ')*(' → logprob: -12.875314712524414
    10. '       ' → logprob: -13.250314712524414

Token 674: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3890485465526581
    2. '*' → logprob: -1.1390485763549805
    3. '*(' → logprob: -6.2640485763549805
    4. ')' → logprob: -9.26404857635498
    5. '<|end|>' → logprob: -9.26404857635498
    6. ',' → logprob: -10.63904857635498
    7. '#' → logprob: -11.63904857635498
    8. ' ' → logprob: -11.88904857635498
    9. 'def' → logprob: -11.88904857635498
    10. ')*(' → logprob: -12.26404857635498

Token 675: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.011099227704107761
    2. ' (' → logprob: -4.511099338531494
    3. '(' → logprob: -10.136098861694336
    4. '(base' → logprob: -11.636098861694336
    5. '   ' → logprob: -13.636098861694336
    6. ' ' → logprob: -14.386098861694336
    7. '[max' → logprob: -14.636098861694336
    8. '(min' → logprob: -16.511098861694336
    9. '(Max' → logprob: -16.511098861694336
    10. '  ' → logprob: -16.761098861694336

Token 676: 'max' (ID: 3228)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.00011725161311915144
    2. ' (' → logprob: -9.125117301940918
    3. '(' → logprob: -12.375117301940918
    4. '[max' → logprob: -13.625117301940918
    5. 'max' → logprob: -13.875117301940918
    6. '   ' → logprob: -14.375117301940918
    7. '       ' → logprob: -15.125117301940918
    8. '
' → logprob: -15.500117301940918
    9. '=max' → logprob: -15.500117301940918
    10. '           ' → logprob: -16.1251163482666

Token 677: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.580929347255733e-05
    2. 'max' → logprob: -11.250016212463379
    3. 'x' → logprob: -13.625016212463379
    4. ' y' → logprob: -15.125016212463379
    5. ' -' → logprob: -15.250016212463379
    6. '(max' → logprob: -15.375016212463379
    7. ' ' → logprob: -16.125015258789062
    8. '1' → logprob: -16.125015258789062
    9. '_y' → logprob: -16.250015258789062
    10. '0' → logprob: -16.875015258789062

Token 678: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5878269076347351
    2. '+' → logprob: -0.8378269076347351
    3. ' -' → logprob: -4.462826728820801
    4. '-' → logprob: -8.2128267288208
    5. '```' → logprob: -11.9628267288208
    6. 'y' → logprob: -12.9628267288208
    7. '+y' → logprob: -13.2128267288208
    8. ')' → logprob: -13.8378267288208
    9. '[' → logprob: -13.9628267288208
    10. 'def' → logprob: -14.0878267288208

Token 679: ' min' (ID: 1349)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011934272944927216
    2. '1' → logprob: -5.011934280395508
    3. ' max' → logprob: -5.636934280395508
    4. '(max' → logprob: -6.886934280395508
    5. 'min' → logprob: -8.511934280395508
    6. ' ' → logprob: -8.636934280395508
    7. 'y' → logprob: -9.636934280395508
    8. '0' → logprob: -9.886934280395508
    9. ' ymax' → logprob: -10.136934280395508
    10. 'm' → logprob: -10.636934280395508

Token 680: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -9.65101717156358e-05
    2. 'x' → logprob: -9.500096321105957
    3. '1' → logprob: -11.875096321105957
    4. ')' → logprob: -12.500096321105957
    5. ' ' → logprob: -13.125096321105957
    6. '   ' → logprob: -13.375096321105957
    7. ' y' → logprob: -13.875096321105957
    8. 'ay' → logprob: -14.000096321105957
    9. '```' → logprob: -14.500096321105957
    10. 'py' → logprob: -14.625096321105957

Token 681: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026326078921556473
    2. ' +' → logprob: -3.6513261795043945
    3. ')' → logprob: -11.276326179504395
    4. '1' → logprob: -11.526326179504395
    5. '```' → logprob: -13.401326179504395
    6. ')+' → logprob: -13.901326179504395
    7. '()+' → logprob: -15.151326179504395
    8. '[' → logprob: -16.026325225830078
    9. '+)' → logprob: -16.276325225830078
    10. '   ' → logprob: -16.776325225830078

Token 682: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003851517685689032
    2. ' ' → logprob: -7.875385284423828
    3. ')' → logprob: -12.250385284423828
    4. '```' → logprob: -16.625385284423828
    5. '
' → logprob: -17.250385284423828
    6. '+' → logprob: -17.375385284423828
    7. '0' → logprob: -18.125385284423828
    8. '`' → logprob: -18.562885284423828
    9. '   ' → logprob: -18.625385284423828
    10. '2' → logprob: -18.625385284423828

Token 683: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. ')' → logprob: -15.875027656555176
    4. '
' → logprob: -16.000028610229492
    5. '+' → logprob: -17.375028610229492
    6. '   ' → logprob: -17.875028610229492
    7. 'max' → logprob: -17.875028610229492
    8. '0' → logprob: -18.125028610229492
    9. '```' → logprob: -18.187528610229492
    10. '(' → logprob: -18.187528610229492

Token 684: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019517067121341825
    2. '<|end|>' → logprob: -6.626951694488525
    3. '       ' → logprob: -8.501952171325684
    4. '+' → logprob: -9.251952171325684
    5. ')
' → logprob: -9.251952171325684
    6. ' )' → logprob: -9.251952171325684
    7. '   ' → logprob: -11.251952171325684
    8. ')==' → logprob: -11.501952171325684
    9. ' +' → logprob: -11.501952171325684
    10. ')+' → logprob: -11.626952171325684

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001175820711068809
    2. '<|end|>' → logprob: -7.876175880432129
    3. ' if' → logprob: -8.001175880432129
    4. '```' → logprob: -8.251175880432129
    5. ',' → logprob: -9.876175880432129
    6. '           ' → logprob: -10.626175880432129
    7. '        
' → logprob: -10.751175880432129
    8. '        ' → logprob: -11.251175880432129
    9. 'if' → logprob: -11.626175880432129
    10. '.' → logprob: -11.751175880432129

Token 686: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6993792653083801
    2. ' if' → logprob: -1.0743792057037354
    3. 'if' → logprob: -1.8243792057037354
    4. '   ' → logprob: -9.574378967285156
    5. '
' → logprob: -10.199378967285156
    6. '        
' → logprob: -10.199378967285156
    7. '#' (adapté à ' #') → logprob: -10.324378967285156
    8. '```' → logprob: -10.574378967285156
    9. '           ' → logprob: -11.074378967285156
    10. 'If' → logprob: -11.574378967285156

Token 687: ' area' (ID: 3624)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0178743414580822
    2. ' if' → logprob: -4.767874240875244
    3. 'for' → logprob: -5.017874240875244
    4. '       ' → logprob: -6.892874240875244
    5. '#' → logprob: -7.392874240875244
    6. 'If' → logprob: -7.767874240875244
    7. 'import' → logprob: -8.892874717712402
    8. 'from' → logprob: -9.142874717712402
    9. 'possible' → logprob: -9.517874717712402
    10. ' for' → logprob: -9.642874717712402

Token 688: ' must' (ID: 2804)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.0632444620132446
    2. '_needed' → logprob: -1.8132444620132446
    3. '<=' → logprob: -1.9382444620132446
    4. '=' → logprob: -2.438244342803955
    5. '==' → logprob: -2.563244342803955
    6. ' ==' → logprob: -2.813244342803955
    7. ' =' → logprob: -2.813244342803955
    8. ' >=' → logprob: -4.188244342803955
    9. '_required' → logprob: -4.563244342803955
    10. '>' → logprob: -4.688244342803955

Token 689: ' be' (ID: 413)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6395116448402405
    2. '>=' → logprob: -1.2645115852355957
    3. ' be' → logprob: -1.8895115852355957
    4. '==' → logprob: -4.514511585235596
    5. ' <=' → logprob: -4.639511585235596
    6. 'be' → logprob: -4.764511585235596
    7. ' >=' → logprob: -5.014511585235596
    8. '=' → logprob: -6.889511585235596
    9. 'not' → logprob: -7.014511585235596
    10. ' not' → logprob: -7.514511585235596

Token 690: ' k' (ID: 372)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.07406354695558548
    2. '<=' → logprob: -3.199063539505005
    3. 'k' → logprob: -3.574063539505005
    4. '==' → logprob: -6.699063777923584
    5. ' >=' → logprob: -7.324063777923584
    6. '=' → logprob: -8.074063301086426
    7. '=k' → logprob: -8.824063301086426
    8. '≥' → logprob: -9.699063301086426
    9. ' <=' → logprob: -10.824063301086426
    10. 'b' → logprob: -11.074063301086426

Token 691: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14461207389831543
    2. ' if' → logprob: -2.1446120738983154
    3. ',' → logprob: -4.5196123123168945
    4. 'if' → logprob: -5.3946123123168945
    5. '.' → logprob: -7.2696123123168945
    6. ' or' → logprob: -8.144612312316895
    7. ' and' → logprob: -8.269612312316895
    8. '
' → logprob: -9.269612312316895
    9. '        
' → logprob: -9.394612312316895
    10. '<|end|>' → logprob: -9.394612312316895

Token 692: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006023245397955179
    2. '
' → logprob: -5.631023406982422
    3. '<|end|>' → logprob: -6.381023406982422
    4. '        
' → logprob: -8.131023406982422
    5. ',' → logprob: -8.631023406982422
    6. ' if' → logprob: -9.131023406982422
    7. '<|end|>' → logprob: -10.131023406982422
    8. '           ' → logprob: -11.256023406982422
    9. '#' → logprob: -11.381023406982422
    10. ' for' → logprob: -11.631023406982422

Token 693: ' candidates' (ID: 18116)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7624982595443726
    2. ' if' → logprob: -0.7624982595443726
    3. 'if' → logprob: -2.762498378753662
    4. ' for' → logprob: -6.137498378753662
    5. ' possible' → logprob: -7.137498378753662
    6. 'for' → logprob: -7.637498378753662
    7. 'possible' → logprob: -9.012497901916504
    8. '        
' → logprob: -10.262497901916504
    9. '   ' → logprob: -10.387497901916504
    10. '#' → logprob: -10.512497901916504

Token 694: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07022040337324142
    2. '=' → logprob: -2.695220470428467
    3. '=[]' → logprob: -8.445219993591309
    4. '   ' → logprob: -10.945219993591309
    5. ':' → logprob: -11.195219993591309
    6. '_' → logprob: -12.070219993591309
    7. 's' → logprob: -12.195219993591309
    8. 'for' → logprob: -12.195219993591309
    9. '[]' → logprob: -12.320219993591309
    10. '[' → logprob: -12.820219993591309

Token 695: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5759584307670593
    2. ' []' → logprob: -0.8259584307670593
    3. '[]
' → logprob: -11.450958251953125
    4. ' []
' → logprob: -12.325958251953125
    5. ' [' → logprob: -13.700958251953125
    6. ' set' → logprob: -13.950958251953125
    7. '[' → logprob: -14.325958251953125
    8. 'set' → logprob: -14.450958251953125
    9. '[]}' → logprob: -14.950958251953125
    10. '   ' → logprob: -16.200958251953125

Token 696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004830361343920231
    2. ' for' → logprob: -5.629830360412598
    3. 'for' → logprob: -7.379830360412598
    4. '
' → logprob: -7.754830360412598
    5. '```' → logprob: -9.504830360412598
    6. '        
' → logprob: -9.754830360412598
    7. ',' → logprob: -11.254830360412598
    8. '   ' → logprob: -11.629830360412598
    9. '           ' → logprob: -11.754830360412598
    10. '	for' → logprob: -13.254830360412598

Token 697: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0016050786944106221
    2. 'min' → logprob: -7.626605033874512
    3. 'h' → logprob: -8.376605033874512
    4. 'height' → logprob: -8.376605033874512
    5. ' for' → logprob: -8.501605033874512
    6. 'width' → logprob: -9.126605033874512
    7. 'if' → logprob: -9.251605033874512
    8. '       ' → logprob: -9.376605033874512
    9. 'w' → logprob: -10.251605033874512
    10. '#' (adapté à ' #') → logprob: -10.251605033874512

Token 698: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007051372434943914
    2. 'min' → logprob: -5.882051467895508
    3. 'max' → logprob: -6.507051467895508
    4. 'h' → logprob: -7.007051467895508
    5. 'height' → logprob: -7.132051467895508
    6. '#' → logprob: -8.257051467895508
    7. 'lx' → logprob: -8.507051467895508
    8. 'width' → logprob: -9.007051467895508
    9. 'found' → logprob: -9.007051467895508
    10. 'w' → logprob: -9.257051467895508

Token 699: ' to' (ID: 316)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.1268583536148071
    2. 'w' → logprob: -1.2518583536148071
    3. 'width' → logprob: -1.7518583536148071
    4. ' width' → logprob: -2.7518582344055176
    5. 'for' → logprob: -3.0018582344055176
    6. ' for' → logprob: -3.6268582344055176
    7. ' h' → logprob: -4.126858234405518
    8. ' lx' → logprob: -4.251858234405518
    9. '       ' → logprob: -4.501858234405518
    10. 'h' → logprob: -4.626858234405518

Token 700: ' expand' (ID: 10791)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20392084121704102
    2. 'expand' → logprob: -2.078920841217041
    3. ' for' → logprob: -3.578920841217041
    4. 'range' → logprob: -4.703920841217041
    5. 'y' → logprob: -5.328920841217041
    6. 'w' → logprob: -5.453920841217041
    7. 'extend' → logprob: -5.703920841217041
    8. 'x' → logprob: -6.453920841217041
    9. ' expand' → logprob: -6.578920841217041
    10. 'width' → logprob: -6.703920841217041

Token 701: ' rectangle' (ID: 45808)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0799399614334106
    2. 'x' → logprob: -1.8299399614334106
    3. ' x' → logprob: -1.8299399614334106
    4. ' in' → logprob: -2.329939842224121
    5. 'for' → logprob: -2.954939842224121
    6. ' max' → logprob: -3.204939842224121
    7. 'w' → logprob: -3.954939842224121
    8. ' min' → logprob: -4.079939842224121
    9. ' from' → logprob: -4.204939842224121
    10. 'max' → logprob: -4.204939842224121

Token 702: ' around' (ID: 2846)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6917554140090942
    2. 'for' → logprob: -1.5667554140090942
    3. '       ' → logprob: -1.8167554140090942
    4. ' in' → logprob: -2.9417552947998047
    5. 'from' → logprob: -4.941755294799805
    6. ' x' → logprob: -4.941755294799805
    7. 'x' → logprob: -4.941755294799805
    8. ' around' → logprob: -5.066755294799805
    9. 'down' → logprob: -5.191755294799805
    10. ' to' → logprob: -5.316755294799805

Token 703: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.002844579517841339
    2. 'max' → logprob: -6.25284481048584
    3. ' min' → logprob: -7.00284481048584
    4. '(min' → logprob: -12.62784481048584
    5. ' max' → logprob: -13.12784481048584
    6. 'b' → logprob: -15.62784481048584
    7. '[min' → logprob: -15.62784481048584
    8. '
' → logprob: -15.87784481048584
    9. '   ' → logprob: -15.87784481048584
    10. '	min' → logprob: -15.87784481048584

Token 704: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.2200749754119897e-06
    2. 'y' → logprob: -13.250001907348633
    3. 'min' → logprob: -15.375001907348633
    4. 'max' → logprob: -17.000001907348633
    5. '```' → logprob: -17.125001907348633
    6. '(x' → logprob: -18.125001907348633
    7. '_x' → logprob: -18.250001907348633
    8. '(min' → logprob: -18.250001907348633
    9. 'xmin' → logprob: -18.812501907348633
    10. ' x' → logprob: -19.062501907348633

Token 705: ',max' (ID: 81466)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02163686975836754
    2. ',min' → logprob: -4.021636962890625
    3. '-' → logprob: -6.771636962890625
    4. ' ,' → logprob: -6.896636962890625
    5. ',max' → logprob: -7.396636962890625
    6. ' -' → logprob: -8.396636962890625
    7. '<|end|>' → logprob: -9.021636962890625
    8. 'min' → logprob: -9.146636962890625
    9. '<|end|>' → logprob: -9.146636962890625
    10. ',
' → logprob: -10.271636962890625

Token 706: 'x' (ID: 87)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2919241786003113
    2. 'y' → logprob: -1.916924238204956
    3. ',' → logprob: -2.541924238204956
    4. ',min' → logprob: -3.666924238204956
    5. 'x' → logprob: -6.416923999786377
    6. ' min' → logprob: -9.416924476623535
    7. '(min' → logprob: -10.041924476623535
    8. '=min' → logprob: -10.291924476623535
    9. '	min' → logprob: -11.416924476623535
    10. ',y' → logprob: -11.541924476623535

Token 707: ',min' (ID: 129117)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06676720082759857
    2. ' ,' → logprob: -3.9417672157287598
    3. 'for' → logprob: -4.06676721572876
    4. ',
' → logprob: -4.56676721572876
    5. ' for' → logprob: -5.44176721572876
    6. '_' → logprob: -6.19176721572876
    7. 'x' → logprob: -6.31676721572876
    8. ')' → logprob: -6.69176721572876
    9. '       ' → logprob: -6.94176721572876
    10. '<|end|>' → logprob: -6.94176721572876

Token 708: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3132641315460205
    2. 'x' → logprob: -1.3132641315460205
    3. 'min' → logprob: -13.313263893127441
    4. ',' → logprob: -15.063263893127441
    5. ' y' → logprob: -15.438263893127441
    6. '```' → logprob: -15.813263893127441
    7. ' ' → logprob: -17.688264846801758
    8. '(min' → logprob: -17.813264846801758
    9. ' x' → logprob: -17.938264846801758
    10. ',y' → logprob: -18.313264846801758

Token 709: ',max' (ID: 81466)
  Prédit: ',min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',min' → logprob: -0.07905899733304977
    2. ',' → logprob: -2.579058885574341
    3. ',max' → logprob: -9.204058647155762
    4. 'min' → logprob: -9.704058647155762
    5. ' ,' → logprob: -12.329058647155762
    6. ',
' → logprob: -13.829058647155762
    7. ',m' → logprob: -14.954058647155762
    8. '_min' → logprob: -15.329058647155762
    9. '```' → logprob: -15.579058647155762
    10. '(min' → logprob: -15.954058647155762

Token 710: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.106736039626412e-05
    2. 'x' → logprob: -10.750031471252441
    3. ',' → logprob: -11.750031471252441
    4. '```' → logprob: -14.625031471252441
    5. ' ' → logprob: -15.125031471252441
    6. ' y' → logprob: -15.375031471252441
    7. ',y' → logprob: -15.875031471252441
    8. '
' → logprob: -16.125030517578125
    9. '``' → logprob: -16.125030517578125
    10. '+' → logprob: -16.250030517578125

Token 711: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5942090749740601
    2. '       ' → logprob: -0.9692090749740601
    3. 'for' → logprob: -2.7192091941833496
    4. ',' → logprob: -6.46920919418335
    5. '        
' → logprob: -8.844208717346191
    6. ' in' → logprob: -8.969208717346191
    7. '        ' → logprob: -9.344208717346191
    8. ' (' → logprob: -9.344208717346191
    9. ':' → logprob: -9.719208717346191
    10. '           ' → logprob: -9.719208717346191

Token 712: ' achieve' (ID: 12998)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.8137224912643433
    2. ' find' → logprob: -1.9387224912643433
    3. 'include' → logprob: -2.188722610473633
    4. ' cover' → logprob: -2.688722610473633
    5. 'match' → logprob: -2.688722610473633
    6. 'cover' → logprob: -2.938722610473633
    7. 'possible' → logprob: -3.063722610473633
    8. 'the' → logprob: -3.063722610473633
    9. ' include' → logprob: -3.188722610473633
    10. ' the' → logprob: -3.563722610473633

Token 713: ' area' (ID: 3624)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05882105603814125
    2. ' k' → logprob: -3.308820962905884
    3. 'area' → logprob: -4.933821201324463
    4. ' area' → logprob: -5.933821201324463
    5. 'all' → logprob: -6.433821201324463
    6. 'possible' → logprob: -6.433821201324463
    7. ' all' → logprob: -6.808821201324463
    8. 'the' → logprob: -6.808821201324463
    9. 'c' → logprob: -7.183821201324463
    10. 'max' → logprob: -7.433821201324463

Token 714: ' k' (ID: 372)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1492860317230225
    2. 'for' → logprob: -1.7742860317230225
    3. '(' → logprob: -2.2742860317230225
    4. '       ' → logprob: -2.7742860317230225
    5. ' for' → logprob: -2.8992860317230225
    6. 'while' → logprob: -3.0242860317230225
    7. ' (' → logprob: -3.1492860317230225
    8. '+' → logprob: -3.3992860317230225
    9. ' =' → logprob: -3.5242860317230225
    10. '(
' → logprob: -3.6492860317230225

Token 715: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10359247773885727
    2. '
' → logprob: -2.7285923957824707
    3. ' for' → logprob: -4.103592395782471
    4. 'for' → logprob: -4.603592395782471
    5. '        
' → logprob: -5.728592395782471
    6. ',' → logprob: -6.728592395782471
    7. '
' → logprob: -7.853592395782471
    8. '   ' → logprob: -8.853592872619629
    9. '    
' → logprob: -8.978592872619629
    10. '           ' → logprob: -9.103592872619629

Token 716: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005979158449918032
    2. ' for' → logprob: -5.755979061126709
    3. 'for' → logprob: -6.755979061126709
    4. '
' → logprob: -7.255979061126709
    5. '```' → logprob: -8.005979537963867
    6. '        
' → logprob: -8.380979537963867
    7. ',' → logprob: -8.880979537963867
    8. '           ' → logprob: -9.630979537963867
    9. '   ' → logprob: -10.255979537963867
    10. '	' → logprob: -11.005979537963867

Token 717: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5199321508407593
    2. '       ' → logprob: -1.6449321508407593
    3. 'for' → logprob: -1.7699321508407593
    4. '
' → logprob: -3.394932270050049
    5. '        
' → logprob: -5.519932270050049
    6. ' 
' → logprob: -5.769932270050049
    7. '```' → logprob: -8.01993179321289
    8. '        ' → logprob: -9.14493179321289
    9. '    
' → logprob: -9.39493179321289
    10. '   ' → logprob: -9.76993179321289

Token 718: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5260743498802185
    2. ' for' → logprob: -0.9010743498802185
    3. '       ' → logprob: -6.276074409484863
    4. 'x' → logprob: -9.026074409484863
    5. 'from' → logprob: -9.151074409484863
    6. 'h' → logprob: -9.276074409484863
    7. '
' → logprob: -9.401074409484863
    8. 'w' → logprob: -9.651074409484863
    9. 'min' → logprob: -9.776074409484863
    10. 'height' → logprob: -9.776074409484863

Token 719: ' try' (ID: 2075)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16424138844013214
    2. ' for' → logprob: -3.164241313934326
    3. 'for' → logprob: -3.414241313934326
    4. ' continue' → logprob: -3.539241313934326
    5. ' =' → logprob: -5.164241313934326
    6. ' ' → logprob: -5.289241313934326
    7. ' ,' → logprob: -5.664241313934326
    8. ' can' → logprob: -5.664241313934326
    9. ' 
' → logprob: -6.039241313934326
    10. ' will' → logprob: -6.039241313934326

Token 720: ' all' (ID: 722)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.3217796087265015
    2. 'w' → logprob: -1.6967796087265015
    3. ' dx' → logprob: -2.196779727935791
    4. ' x' → logprob: -2.321779727935791
    5. ' width' → logprob: -2.446779727935791
    6. 'width' → logprob: -2.571779727935791
    7. 'x' → logprob: -3.321779727935791
    8. 'dx' → logprob: -3.446779727935791
    9. ' h' → logprob: -3.946779727935791
    10. ' for' → logprob: -3.946779727935791

Token 721: ' rectangles' (ID: 164265)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -1.5223373174667358
    2. 'w' → logprob: -1.6473373174667358
    3. 'width' → logprob: -1.6473373174667358
    4. 'x' → logprob: -2.5223374366760254
    5. ' dx' → logprob: -2.5223374366760254
    6. ' width' → logprob: -3.2723374366760254
    7. ' possible' → logprob: -3.3973374366760254
    8. 'for' → logprob: -3.3973374366760254
    9. ' x' → logprob: -3.3973374366760254
    10. ' w' → logprob: -3.8973374366760254

Token 722: ' containing' (ID: 15683)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.172608733177185
    2. 'w' → logprob: -1.297608733177185
    3. ' with' → logprob: -1.922608733177185
    4. '       ' → logprob: -2.4226088523864746
    5. 'for' → logprob: -2.7976088523864746
    6. ' for' → logprob: -3.1726088523864746
    7. ' w' → logprob: -4.047608852386475
    8. 'width' → logprob: -4.297608852386475
    9. 'x' → logprob: -4.422608852386475
    10. 'from' → logprob: -5.422608852386475

Token 723: ' the' (ID: 290)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01672050915658474
    2. 'max' → logprob: -4.641720294952393
    3. ' min' → logprob: -5.266720294952393
    4. '(min' → logprob: -6.391720294952393
    5. ' max' → logprob: -10.01672077178955
    6. '[min' → logprob: -10.26672077178955
    7. '(max' → logprob: -11.26672077178955
    8. 'the' → logprob: -12.51672077178955
    9. ' (' → logprob: -13.39172077178955
    10. '
' → logprob: -13.64172077178955

Token 724: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.021787699311971664
    2. ' min' → logprob: -4.021787643432617
    3. 'max' → logprob: -5.896787643432617
    4. '(min' → logprob: -7.146787643432617
    5. ' max' → logprob: -10.396787643432617
    6. '
' → logprob: -10.771787643432617
    7. '[min' → logprob: -11.146787643432617
    8. ' (' → logprob: -11.521787643432617
    9. 'x' → logprob: -12.521787643432617
    10. ' ' → logprob: -12.896787643432617

Token 725: ' bounding' (ID: 70758)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0280383548888494e-06
    2. ' x' → logprob: -14.250000953674316
    3. 'y' → logprob: -16.375001907348633
    4. 'min' → logprob: -16.875001907348633
    5. '
' → logprob: -17.000001907348633
    6. '```' → logprob: -17.375001907348633
    7. '_x' → logprob: -17.625001907348633
    8. ' ' → logprob: -18.625001907348633
    9. 'xmin' → logprob: -18.750001907348633
    10. '[' → logprob: -18.750001907348633

Token 726: ' box' (ID: 5506)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5605774521827698
    2. ' ' → logprob: -2.060577392578125
    3. ' box' → logprob: -2.435577392578125
    4. '_box' → logprob: -2.810577392578125
    5. ' _' → logprob: -2.935577392578125
    6. 'x' → logprob: -3.060577392578125
    7. 'box' → logprob: -3.060577392578125
    8. '[' → logprob: -6.060577392578125
    9. ' 
' → logprob: -6.560577392578125
    10. '_x' → logprob: -6.935577392578125

Token 727: ' with' (ID: 483)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38767024874687195
    2. '       ' → logprob: -1.2626702785491943
    3. 'for' → logprob: -3.5126702785491943
    4. ',' → logprob: -5.512670040130615
    5. ' x' → logprob: -6.762670040130615
    6. ' (' → logprob: -6.887670040130615
    7. ' and' → logprob: -7.887670040130615
    8. 'x' → logprob: -8.387670516967773
    9. ' with' → logprob: -8.387670516967773
    10. '        
' → logprob: -8.762670516967773

Token 728: ' area' (ID: 3624)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.7866598963737488
    2. 'top' → logprob: -0.9116598963737488
    3. 'min' → logprob: -3.5366599559783936
    4. ' width' → logprob: -3.7866599559783936
    5. ' top' → logprob: -4.1616597175598145
    6. 'x' → logprob: -4.4116597175598145
    7. 'the' → logprob: -4.7866597175598145
    8. 'bottom' → logprob: -4.7866597175598145
    9. 'same' → logprob: -5.0366597175598145
    10. 'fixed' → logprob: -5.0366597175598145

Token 729: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.47528544068336487
    2. 'k' → logprob: -0.9752854108810425
    3. ' ==' → logprob: -7.975285530090332
    4. ' <=' → logprob: -8.475285530090332
    5. '==' → logprob: -8.600285530090332
    6. '=k' → logprob: -8.975285530090332
    7. ' =' → logprob: -9.350285530090332
    8. ' ' → logprob: -9.350285530090332
    9. '<=' → logprob: -9.725285530090332
    10. '=' → logprob: -9.975285530090332

Token 730: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08726876974105835
    2. ' for' → logprob: -2.962268829345703
    3. 'for' → logprob: -4.462268829345703
    4. '
' → logprob: -4.712268829345703
    5. '        
' → logprob: -4.962268829345703
    6. ',' → logprob: -6.462268829345703
    7. ' 
' → logprob: -7.587268829345703
    8. '\n' → logprob: -8.087268829345703
    9. '  
' → logprob: -8.087268829345703
    10. ',
' → logprob: -8.712268829345703

Token 731: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002573163714259863
    2. ' for' → logprob: -6.752573013305664
    3. '        
' → logprob: -7.627573013305664
    4. 'for' → logprob: -8.502573013305664
    5. '           ' → logprob: -8.877573013305664
    6. ',' → logprob: -9.127573013305664
    7. '  
' → logprob: -9.502573013305664
    8. '
' → logprob: -9.627573013305664
    9. '        ' → logprob: -10.127573013305664
    10. '   ' → logprob: -10.252573013305664

Token 732: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27152857184410095
    2. ' for' → logprob: -1.7715286016464233
    3. 'for' → logprob: -3.146528482437134
    4. '
' → logprob: -3.771528482437134
    5. '        
' → logprob: -6.771528720855713
    6. ' 
' → logprob: -9.146528244018555
    7. '   ' → logprob: -9.271528244018555
    8. '```' → logprob: -9.271528244018555
    9. '           ' → logprob: -9.896528244018555
    10. '  
' → logprob: -10.271528244018555

Token 733: ' So' (ID: 2632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.433544784784317
    2. ' for' → logprob: -1.0585447549819946
    3. '       ' → logprob: -5.433544635772705
    4. '
' → logprob: -8.308545112609863
    5. 'x' → logprob: -9.308545112609863
    6. 'y' → logprob: -11.183545112609863
    7. '```' → logprob: -11.183545112609863
    8. ' x' → logprob: -11.433545112609863
    9. '        
' → logprob: -11.558545112609863
    10. 'w' → logprob: -11.683545112609863

Token 734: ' rectangle' (ID: 45808)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23397503793239594
    2. ' for' → logprob: -1.6089750528335571
    3. 'height' → logprob: -5.733974933624268
    4. 'h' → logprob: -6.108974933624268
    5. 'width' → logprob: -6.858974933624268
    6. ' h' → logprob: -7.858974933624268
    7. ' height' → logprob: -8.233975410461426
    8. ' width' → logprob: -8.233975410461426
    9. 'w' → logprob: -8.358975410461426
    10. 'min' → logprob: -8.733975410461426

Token 735: ' must' (ID: 2804)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15659961104393005
    2. '_x' → logprob: -2.781599521636963
    3. '_width' → logprob: -3.781599521636963
    4. 'width' → logprob: -4.781599521636963
    5. '_candidates' → logprob: -4.781599521636963
    6. '_' → logprob: -5.031599521636963
    7. ' can' → logprob: -5.031599521636963
    8. 'x' → logprob: -5.281599521636963
    9. 'for' → logprob: -6.031599521636963
    10. ' =' → logprob: -6.531599521636963

Token 736: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.8975016474723816
    2. 'expand' → logprob: -1.5225017070770264
    3. ' have' → logprob: -1.6475017070770264
    4. 'start' → logprob: -2.3975017070770264
    5. ' start' → logprob: -4.272501468658447
    6. 'x' → logprob: -4.647501468658447
    7. 'extend' → logprob: -4.647501468658447
    8. 'cover' → logprob: -4.772501468658447
    9. ' cover' → logprob: -4.772501468658447
    10. ' be' → logprob: -4.772501468658447

Token 737: ' area' (ID: 3624)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.04235391691327095
    2. 'x' → logprob: -3.792353868484497
    3. 'lx' → logprob: -4.917354106903076
    4. ' width' → logprob: -5.542354106903076
    5. 'left' → logprob: -5.667354106903076
    6. 'height' → logprob: -6.417354106903076
    7. 'top' → logprob: -6.542354106903076
    8. 'w' → logprob: -8.042353630065918
    9. '
' → logprob: -8.167353630065918
    10. 'bottom' → logprob: -9.042353630065918

Token 738: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.48128741979599
    2. '>=' → logprob: -1.1062874794006348
    3. ' >=' → logprob: -3.3562874794006348
    4. ' k' → logprob: -4.356287479400635
    5. ' at' → logprob: -6.606287479400635
    6. '==' → logprob: -7.481287479400635
    7. '=k' → logprob: -7.856287479400635
    8. '=' → logprob: -8.106287002563477
    9. 'at' → logprob: -8.606287002563477
    10. 'greater' → logprob: -8.731287002563477

Token 739: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6881444454193115
    2. '
' → logprob: -0.8131444454193115
    3. ' for' → logprob: -3.4381444454193115
    4. '        
' → logprob: -5.188144683837891
    5. ',' → logprob: -5.313144683837891
    6. 'for' → logprob: -5.563144683837891
    7. '\n' → logprob: -6.688144683837891
    8. ' 
' → logprob: -6.688144683837891
    9. '  
' → logprob: -6.688144683837891
    10. ' and' → logprob: -6.813144683837891

Token 740: ' contain' (ID: 10232)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.3221735656261444
    2. 'cover' → logprob: -1.5721735954284668
    3. ' cover' → logprob: -4.447173595428467
    4. '(width' → logprob: -4.447173595428467
    5. 'height' → logprob: -4.697173595428467
    6. ' width' → logprob: -4.822173595428467
    7. 'en' → logprob: -5.572173595428467
    8. 'x' → logprob: -5.822173595428467
    9. 'w' → logprob: -5.822173595428467
    10. '(' → logprob: -5.947173595428467

Token 741: ' bounding' (ID: 70758)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.8761963248252869
    2. 'min' → logprob: -1.1261963844299316
    3. '(min' → logprob: -1.3761963844299316
    4. ' (' → logprob: -5.251196384429932
    5. ' the' → logprob: -7.376196384429932
    6. 'max' → logprob: -7.751196384429932
    7. '[min' → logprob: -8.751195907592773
    8. ' max' → logprob: -8.751195907592773
    9. '(max' → logprob: -9.126195907592773
    10. '(' → logprob: -10.001195907592773

Token 742: ' box' (ID: 5506)
  Prédit: '_box'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_box' → logprob: -0.3449247479438782
    2. ' box' → logprob: -1.4699246883392334
    3. ' _' → logprob: -3.4699246883392334
    4. '_' → logprob: -4.0949249267578125
    5. 'box' → logprob: -4.5949249267578125
    6. ' ' → logprob: -7.0949249267578125
    7. '_x' → logprob: -7.0949249267578125
    8. '[' → logprob: -7.5949249267578125
    9. '_boxes' → logprob: -8.094924926757812
    10. 'x' → logprob: -8.219924926757812

Token 743: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028793318197131157
    2. ' for' → logprob: -4.2787933349609375
    3. '
' → logprob: -4.6537933349609375
    4. 'for' → logprob: -6.0287933349609375
    5. '        
' → logprob: -6.2787933349609375
    6. ',' → logprob: -8.278793334960938
    7. '  
' → logprob: -9.153793334960938
    8. '\n' → logprob: -9.278793334960938
    9. '           ' → logprob: -10.028793334960938
    10. '   ' → logprob: -10.528793334960938

Token 744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08745621144771576
    2. ' for' → logprob: -3.462456226348877
    3. 'for' → logprob: -3.837456226348877
    4. '        
' → logprob: -4.962456226348877
    5. '\n' → logprob: -5.087456226348877
    6. ' 
' → logprob: -5.337456226348877
    7. '  
' → logprob: -5.712456226348877
    8. '\' → logprob: -6.087456226348877
    9. '
' → logprob: -6.587456226348877
    10. ',' → logprob: -6.712456226348877

Token 745: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2510630786418915
    2. ' for' → logprob: -1.8760631084442139
    3. '       ' → logprob: -3.001063108444214
    4. '
' → logprob: -4.001062870025635
    5. ' 
' → logprob: -8.876063346862793
    6. '```' → logprob: -8.876063346862793
    7. '        
' → logprob: -9.001063346862793
    8. '   ' → logprob: -9.126063346862793
    9. 'x' → logprob: -10.376063346862793
    10. '``' → logprob: -10.626063346862793

Token 746: ' x' (ID: 1215)
  Prédit: 'lx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lx' → logprob: -0.9205658435821533
    2. 'x' → logprob: -1.2955658435821533
    3. 'height' → logprob: -2.4205658435821533
    4. 'width' → logprob: -2.5455658435821533
    5. 'h' → logprob: -3.4205658435821533
    6. 'w' → logprob: -3.4205658435821533
    7. 'y' → logprob: -4.045565605163574
    8. 'top' → logprob: -4.170565605163574
    9. 'ly' → logprob: -4.295565605163574
    10. 'left' → logprob: -4.295565605163574

Token 747: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7036577463150024
    2. '1' → logprob: -0.9536577463150024
    3. '_start' → logprob: -2.703657627105713
    4. 'min' → logprob: -3.953657627105713
    5. '_min' → logprob: -4.578657627105713
    6. '=min' → logprob: -5.078657627105713
    7. 'start' → logprob: -5.453657627105713
    8. 'in' → logprob: -5.578657627105713
    9. '_' → logprob: -5.703657627105713
    10. '=' → logprob: -6.078657627105713

Token 748: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2519353926181793
    2. 'in' → logprob: -1.501935362815857
    3. '=' → logprob: -13.376935005187988
    4. ' ' → logprob: -13.376935005187988
    5. '	in' → logprob: -13.876935005187988
    6. ',' → logprob: -14.626935005187988
    7. ' =' → logprob: -15.126935005187988
    8. '_in' → logprob: -15.126935005187988
    9. ')' → logprob: -16.001935958862305
    10. '```' → logprob: -16.251935958862305

Token 749: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.032100897282361984
    2. '0' → logprob: -3.7821009159088135
    3. ' range' → logprob: -4.782100677490234
    4. 'min' → logprob: -7.782100677490234
    5. 'max' → logprob: -11.532100677490234
    6. ' ' → logprob: -12.282100677490234
    7. ' min' → logprob: -12.532100677490234
    8. '[min' → logprob: -13.282100677490234
    9. '[' → logprob: -15.157100677490234
    10. '(range' → logprob: -15.282100677490234

Token 750: '(' (ID: 7)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023278558626770973
    2. 'min' → logprob: -4.023278713226318
    3. 'max' → logprob: -5.398278713226318
    4. '(min' → logprob: -8.14827823638916
    5. '(' → logprob: -8.64827823638916
    6. ' ' → logprob: -9.89827823638916
    7. ' min' → logprob: -10.39827823638916
    8. '(max' → logprob: -10.52327823638916
    9. ' max' → logprob: -11.27327823638916
    10. '   ' → logprob: -13.14827823638916

Token 751: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04457707330584526
    2. 'min' → logprob: -3.294577121734619
    3. 'max' → logprob: -5.044577121734619
    4. ' ' → logprob: -10.419576644897461
    5. ' min' → logprob: -10.669576644897461
    6. ' max' → logprob: -12.419576644897461
    7. '(min' → logprob: -12.419576644897461
    8. '   ' → logprob: -12.669576644897461
    9. '[min' → logprob: -13.794576644897461
    10. '(' → logprob: -14.294576644897461

Token 752: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12586358189582825
    2. ' ,' → logprob: -2.250863552093506
    3. ',min' → logprob: -4.625863552093506
    4. ',max' → logprob: -6.250863552093506
    5. 'min' → logprob: -7.750863552093506
    6. '(min' → logprob: -8.500864028930664
    7. ',
' → logprob: -9.000864028930664
    8. 'max' → logprob: -9.375864028930664
    9. '           ' → logprob: -9.625864028930664
    10. '[min' → logprob: -9.750864028930664

Token 753: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -6.360996485454962e-05
    2. ' min' → logprob: -9.7500638961792
    3. 'max' → logprob: -12.7500638961792
    4. '=min' → logprob: -13.7500638961792
    5. '(min' → logprob: -14.6250638961792
    6. '	min' → logprob: -14.7500638961792
    7. '   ' → logprob: -15.7500638961792
    8. '[min' → logprob: -16.625062942504883
    9. '_min' → logprob: -16.875062942504883
    10. ',min' → logprob: -17.000062942504883

Token 754: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.034592388459714e-06
    2. '(min' → logprob: -13.625005722045898
    3. ' x' → logprob: -13.875005722045898
    4. ')' → logprob: -13.875005722045898
    5. 'X' → logprob: -14.000005722045898
    6. '(x' → logprob: -14.500005722045898
    7. 'min' → logprob: -14.625005722045898
    8. '1' → logprob: -15.500005722045898
    9. 'max' → logprob: -15.750005722045898
    10. '[' → logprob: -15.750005722045898

Token 755: '+' (ID: 10)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04739467054605484
    2. '):
' → logprob: -3.2973947525024414
    3. ' ):' → logprob: -5.172394752502441
    4. ')' → logprob: -6.172394752502441
    5. '+' → logprob: -7.547394752502441
    6. ',' → logprob: -7.672394752502441
    7. ' ):
' → logprob: -9.172394752502441
    8. '   ' → logprob: -9.547394752502441
    9. '       ' → logprob: -9.672394752502441
    10. '):
' → logprob: -10.172394752502441

Token 756: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023488728038500994
    2. ' ' → logprob: -8.375234603881836
    3. ')' → logprob: -14.125234603881836
    4. '+' → logprob: -14.500234603881836
    5. '
' → logprob: -14.500234603881836
    6. 'min' → logprob: -14.750234603881836
    7. '=' → logprob: -14.875234603881836
    8. '   ' → logprob: -15.250234603881836
    9. '):
' → logprob: -15.375234603881836
    10. '(' → logprob: -15.750234603881836

Token 757: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0701495036482811
    2. '):' → logprob: -2.6951494216918945
    3. '):
' → logprob: -9.195149421691895
    4. '       ' → logprob: -9.695149421691895
    5. ')' → logprob: -10.945149421691895
    6. '   ' → logprob: -11.445149421691895
    7. ' ):
' → logprob: -11.820149421691895
    8. '):

' → logprob: -12.445149421691895
    9. '           ' → logprob: -12.570149421691895
    10. ':' → logprob: -13.445149421691895

Token 758: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06798849999904633
    2. '	' → logprob: -3.817988395690918
    3. ' 	' → logprob: -4.317988395690918
    4. ':' → logprob: -4.692988395690918
    5. ' ' → logprob: -5.192988395690918
    6. ' for' → logprob: -5.567988395690918
    7. '<|end|>' → logprob: -6.317988395690918
    8. '[' → logprob: -6.442988395690918
    9. ' :' → logprob: -6.692988395690918
    10. ' ' → logprob: -7.067988395690918

Token 759: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.33756670355796814
    2. 'for' (adapté à ' for') → logprob: -1.3375667333602905
    3. '           ' → logprob: -3.962566614151001
    4. '       ' → logprob: -5.46256685256958
    5. '               ' → logprob: -7.46256685256958
    6. '   ' → logprob: -9.212566375732422
    7. ' x' → logprob: -10.087566375732422
    8. ' ' → logprob: -11.712566375732422
    9. ' if' → logprob: -11.712566375732422
    10. '	for' → logprob: -12.337566375732422

Token 760: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.020366692915558815
    2. ' y' → logprob: -4.020366668701172
    3. 'x' → logprob: -6.145366668701172
    4. '   ' → logprob: -10.270366668701172
    5. ' x' → logprob: -11.020366668701172
    6. ' ' → logprob: -12.645366668701172
    7. '       ' → logprob: -13.020366668701172
    8. '           ' → logprob: -13.145366668701172
    9. '               ' → logprob: -13.270366668701172
    10. '    ' → logprob: -13.645366668701172

Token 761: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00019030878320336342
    2. '0' → logprob: -9.375190734863281
    3. ' in' → logprob: -9.625190734863281
    4. ' ' → logprob: -10.250190734863281
    5. 'in' → logprob: -12.625190734863281
    6. '<|end|>' → logprob: -15.625190734863281
    7. '(' → logprob: -15.875190734863281
    8. ',' → logprob: -16.12519073486328
    9. '=' → logprob: -16.37519073486328
    10. '```' → logprob: -16.75019073486328

Token 762: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04858941584825516
    2. 'in' → logprob: -3.0485894680023193
    3. ' ' → logprob: -14.048589706420898
    4. '0' → logprob: -14.173589706420898
    5. 'int' → logprob: -16.7985897064209
    6. 'n' → logprob: -16.7985897064209
    7. 'range' → logprob: -17.0485897064209
    8. '	in' → logprob: -17.0485897064209
    9. ' 
' → logprob: -17.1735897064209
    10. '
' → logprob: -17.5485897064209

Token 763: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001577832386828959
    2. ' range' → logprob: -6.501577854156494
    3. '0' → logprob: -9.501577377319336
    4. ' ' → logprob: -15.126577377319336
    5. '(range' → logprob: -15.126577377319336
    6. '(' → logprob: -15.376577377319336
    7. '	range' → logprob: -17.751577377319336
    8. '<|end|>' → logprob: -18.876577377319336
    9. '_range' → logprob: -19.626577377319336
    10. '   ' → logprob: -19.876577377319336

Token 764: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008620958775281906
    2. '0' → logprob: -4.758620738983154
    3. ' (' → logprob: -13.008621215820312
    4. 'range' → logprob: -13.383621215820312
    5. '=' → logprob: -13.633621215820312
    6. ' ' → logprob: -14.633621215820312
    7. '(
' → logprob: -15.008621215820312
    8. ',' → logprob: -15.633621215820312
    9. '(range' → logprob: -16.383621215820312
    10. ' range' → logprob: -16.508621215820312

Token 765: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001475220051361248
    2. ' ' → logprob: -9.375147819519043
    3. 'max' → logprob: -9.875147819519043
    4. '(' → logprob: -12.625147819519043
    5. '   ' → logprob: -13.000147819519043
    6. 'range' → logprob: -13.125147819519043
    7. 'min' → logprob: -13.750147819519043
    8. '(max' → logprob: -14.250147819519043
    9. ' max' → logprob: -14.625147819519043
    10. '       ' → logprob: -15.500147819519043

Token 766: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6185036897659302
    2. '0' → logprob: -1.2435036897659302
    3. '(' → logprob: -1.8685036897659302
    4. ' ' → logprob: -4.493503570556641
    5. '1' → logprob: -5.618503570556641
    6. '+' → logprob: -6.493503570556641
    7. 'for' → logprob: -7.243503570556641
    8. ' (' → logprob: -7.493503570556641
    9. 'y' → logprob: -8.74350357055664
    10. '   ' → logprob: -8.86850357055664

Token 767: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.014397954568266869
    2. 'max' → logprob: -4.264398097991943
    3. ' min' → logprob: -8.514397621154785
    4. 'm' → logprob: -11.514397621154785
    5. ' max' → logprob: -11.639397621154785
    6. '   ' → logprob: -13.264397621154785
    7. '(min' → logprob: -13.264397621154785
    8. ' ' → logprob: -13.389397621154785
    9. 'mine' → logprob: -13.639397621154785
    10. '0' → logprob: -13.764397621154785

Token 768: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.522638169466518e-05
    2. '1' → logprob: -10.750024795532227
    3. 'x' → logprob: -13.000024795532227
    4. '(y' → logprob: -14.000024795532227
    5. ' y' → logprob: -15.625024795532227
    6. '+' → logprob: -16.125024795532227
    7. '```' → logprob: -16.250024795532227
    8. '``' → logprob: -16.875024795532227
    9. '(' → logprob: -17.000024795532227
    10. 'i' → logprob: -17.375024795532227

Token 769: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00024870390188880265
    2. ' +' → logprob: -8.750248908996582
    3. '):' → logprob: -9.750248908996582
    4. '1' → logprob: -11.375248908996582
    5. '):
' → logprob: -11.375248908996582
    6. '()+' → logprob: -13.125248908996582
    7. ')+' → logprob: -13.500248908996582
    8. '-' → logprob: -14.000248908996582
    9. '           ' → logprob: -14.000248908996582
    10. ')' → logprob: -14.000248908996582

Token 770: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.250000953674316
    3. '+' → logprob: -14.750000953674316
    4. 'y' → logprob: -17.375001907348633
    5. ')' → logprob: -17.875001907348633
    6. '0' → logprob: -18.750001907348633
    7. '2' → logprob: -18.875001907348633
    8. '```' → logprob: -18.875001907348633
    9. '۱' → logprob: -18.875001907348633
    10. '   ' → logprob: -19.187501907348633

Token 771: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05567469075322151
    2. '):
' → logprob: -2.9306747913360596
    3. '           ' → logprob: -7.6806745529174805
    4. '               ' → logprob: -9.43067455291748
    5. ':' → logprob: -9.55567455291748
    6. '):
' → logprob: -9.68067455291748
    7. ')' → logprob: -10.05567455291748
    8. '       ' → logprob: -10.18067455291748
    9. '):

' → logprob: -11.05567455291748
    10. '                       ' → logprob: -12.68067455291748

Token 772: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004967135842889547
    2. '                ' → logprob: -6.379967212677002
    3. '            ' → logprob: -6.504967212677002
    4. ' for' → logprob: -7.004967212677002
    5. '           ' → logprob: -9.004966735839844
    6. '[' → logprob: -9.004966735839844
    7. ' ' → logprob: -9.129966735839844
    8. ' ' → logprob: -9.504966735839844
    9. '             ' → logprob: -9.754966735839844
    10. '<|end|>' → logprob: -9.754966735839844

Token 773: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5766399502754211
    2. ' for' → logprob: -0.8266399502754211
    3. '                   ' → logprob: -7.5766401290893555
    4. '               ' → logprob: -9.451640129089355
    5. '                               ' → logprob: -10.201640129089355
    6. '                ' → logprob: -11.076640129089355
    7. ' if' → logprob: -11.826640129089355
    8. '                                   ' → logprob: -11.826640129089355
    9. '[' → logprob: -11.951640129089355
    10. ' x' → logprob: -12.201640129089355

Token 774: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.11996734328568e-05
    2. ' x' → logprob: -10.125041007995605
    3. 'y' → logprob: -14.250041007995605
    4. '   ' → logprob: -14.750041007995605
    5. '_x' → logprob: -17.500041961669922
    6. '	x' → logprob: -17.500041961669922
    7. '(x' → logprob: -17.750041961669922
    8. 'max' → logprob: -18.000041961669922
    9. '$x' → logprob: -18.750041961669922
    10. ''x' → logprob: -18.875041961669922

Token 775: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003068026155233383
    2. 'x' → logprob: -6.003067970275879
    3. ' in' → logprob: -8.253067970275879
    4. 'in' → logprob: -8.503067970275879
    5. '1' → logprob: -10.003067970275879
    6. '(x' → logprob: -10.503067970275879
    7. 'max' → logprob: -10.753067970275879
    8. '(max' → logprob: -11.503067970275879
    9. '=' → logprob: -12.628067970275879
    10. '_' → logprob: -12.878067970275879

Token 776: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931516528129578
    2. ' in' → logprob: -0.6931516528129578
    3. ' ' → logprob: -13.818151473999023
    4. 'x' → logprob: -14.068151473999023
    5. 'range' → logprob: -14.443151473999023
    6. '```' → logprob: -14.443151473999023
    7. 'int' → logprob: -14.693151473999023
    8. 'i' → logprob: -15.693151473999023
    9. 'In' → logprob: -15.693151473999023
    10. '   ' → logprob: -15.943151473999023

Token 777: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078401252627373
    2. ' range' → logprob: -5.504078388214111
    3. '(range' → logprob: -18.129077911376953
    4. 'x' → logprob: -18.629077911376953
    5. '   ' → logprob: -19.629077911376953
    6. '	range' → logprob: -19.754077911376953
    7. 'min' → logprob: -19.879077911376953
    8. 'in' → logprob: -20.379077911376953
    9. ' in' → logprob: -21.629077911376953
    10. '
' → logprob: -21.629077911376953

Token 778: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.04925462231040001
    2. '(min' → logprob: -3.0492546558380127
    3. '(' → logprob: -7.924254417419434
    4. '(x' → logprob: -8.299254417419434
    5. 'max' → logprob: -9.924254417419434
    6. '(y' → logprob: -12.174254417419434
    7. 'min' → logprob: -14.049254417419434
    8. '=max' → logprob: -14.174254417419434
    9. 'x' → logprob: -15.424254417419434
    10. ' (' → logprob: -15.799254417419434

Token 779: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.11996734328568e-05
    2. 'y' → logprob: -10.875041007995605
    3. '(max' → logprob: -11.125041007995605
    4. '(x' → logprob: -12.750041007995605
    5. 'max' → logprob: -13.125041007995605
    6. '[max' → logprob: -14.625041007995605
    7. '_x' → logprob: -14.750041007995605
    8. ')' → logprob: -15.125041007995605
    9. '(min' → logprob: -15.375041007995605
    10. 'X' → logprob: -15.375041007995605

Token 780: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034176815301179886
    2. '+' → logprob: -3.409176826477051
    3. ' +' → logprob: -7.659176826477051
    4. ' ,' → logprob: -10.03417682647705
    5. ',max' → logprob: -11.53417682647705
    6. ',x' → logprob: -13.40917682647705
    7. '```' → logprob: -14.40917682647705
    8. 'x' → logprob: -14.78417682647705
    9. ',X' → logprob: -14.78417682647705
    10. ',min' → logprob: -15.15917682647705

Token 781: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.009488782845437527
    2. 'max' → logprob: -4.884488582611084
    3. 'min' → logprob: -6.759488582611084
    4. ' X' → logprob: -7.509488582611084
    5. 'x' → logprob: -9.134489059448242
    6. ' max' → logprob: -10.259489059448242
    7. ' min' → logprob: -11.009489059448242
    8. 'Y' → logprob: -12.384489059448242
    9. '   ' → logprob: -13.509489059448242
    10. '
' → logprob: -13.509489059448242

Token 782: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.028965875506401062
    2. ')' → logprob: -4.278965950012207
    3. '):' → logprob: -4.528965950012207
    4. ' +' → logprob: -6.028965950012207
    5. '):
' → logprob: -6.778965950012207
    6. ')+' → logprob: -8.903965950012207
    7. '```' → logprob: -9.653965950012207
    8. '       ' → logprob: -10.153965950012207
    9. '   ' → logprob: -10.278965950012207
    10. ' ' → logprob: -11.653965950012207

Token 783: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05513320863246918
    2. '                               ' → logprob: -4.05513334274292
    3. '               ' → logprob: -4.55513334274292
    4. '                       ' → logprob: -5.05513334274292
    5. '                           ' → logprob: -5.68013334274292
    6. '<|end|>' → logprob: -5.68013334274292
    7. '                ' → logprob: -5.93013334274292
    8. '                                           ' → logprob: -6.05513334274292
    9. ' ' → logprob: -6.68013334274292
    10. '```' → logprob: -7.05513334274292

Token 784: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35382288694381714
    2. '<|end|>' → logprob: -1.978822946548462
    3. '                       ' → logprob: -2.353822946548462
    4. ' ' → logprob: -4.728822708129883
    5. '                   ' → logprob: -4.728822708129883
    6. ' if' → logprob: -4.978822708129883
    7. ':' → logprob: -5.103822708129883
    8. ' 
' → logprob: -5.228822708129883
    9. '                               ' → logprob: -5.853822708129883
    10. ' :' → logprob: -6.103822708129883

Token 785: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0013842822518199682
    2. ' y' → logprob: -6.626384258270264
    3. 'range' → logprob: -10.376384735107422
    4. 'max' → logprob: -10.751384735107422
    5. '(y' → logprob: -13.626384735107422
    6. '   ' → logprob: -13.751384735107422
    7. 'min' → logprob: -14.001384735107422
    8. ' ymax' → logprob: -14.001384735107422
    9. '                   ' → logprob: -15.501384735107422
    10. ' range' → logprob: -15.751384735107422

Token 786: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005933052161708474
    2. 'y' → logprob: -8.125593185424805
    3. '(max' → logprob: -8.625593185424805
    4. 'max' → logprob: -9.125593185424805
    5. '(y' → logprob: -12.250593185424805
    6. '(' → logprob: -13.625593185424805
    7. '1' → logprob: -14.125593185424805
    8. '+' → logprob: -14.375593185424805
    9. '_max' → logprob: -15.000593185424805
    10. '=' → logprob: -15.875593185424805

Token 787: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010025808587670326
    2. 'in' → logprob: -4.635025978088379
    3. '                   ' → logprob: -8.510025978088379
    4. '                    ' → logprob: -10.635025978088379
    5. '                       ' → logprob: -10.635025978088379
    6. '                        ' → logprob: -12.760025978088379
    7. ' (' → logprob: -12.885025978088379
    8. '=' → logprob: -13.010025978088379
    9. 'range' → logprob: -13.135025978088379
    10. ',' → logprob: -13.885025978088379

Token 788: ' range' (ID: 3352)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8701064586639404
    2. 'range' → logprob: -1.1201064586639404
    3. '(max' → logprob: -1.3701064586639404
    4. ' max' → logprob: -7.8701066970825195
    5. ' range' → logprob: -7.9951066970825195
    6. '(range' → logprob: -10.24510669708252
    7. '(y' → logprob: -12.49510669708252
    8. '(' → logprob: -13.12010669708252
    9. '[max' → logprob: -13.24510669708252
    10. 'Range' → logprob: -13.37010669708252

Token 789: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.008481602184474468
    2. 'max' → logprob: -4.883481502532959
    3. '(min' → logprob: -7.508481502532959
    4. '(' → logprob: -8.258481979370117
    5. '(y' → logprob: -10.008481979370117
    6. ' max' → logprob: -11.008481979370117
    7. ',max' → logprob: -12.883481979370117
    8. '(m' → logprob: -14.258481979370117
    9. 'min' → logprob: -14.383481979370117
    10. '   ' → logprob: -14.383481979370117

Token 790: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0018090566154569387
    2. '(max' → logprob: -7.251809120178223
    3. 'max' → logprob: -7.251809120178223
    4. '=max' → logprob: -9.126809120178223
    5. ' max' → logprob: -9.626809120178223
    6. '[max' → logprob: -10.251809120178223
    7. 'x' → logprob: -10.376809120178223
    8. ' -' → logprob: -10.501809120178223
    9. ',max' → logprob: -10.501809120178223
    10. '=' → logprob: -10.876809120178223

Token 791: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5850920677185059
    2. ',' → logprob: -0.8350920677185059
    3. ' +' → logprob: -4.710092067718506
    4. '                   ' → logprob: -9.960092544555664
    5. '+,' → logprob: -10.335092544555664
    6. ' ,' → logprob: -11.335092544555664
    7. ',y' → logprob: -12.585092544555664
    8. '                       ' → logprob: -13.210092544555664
    9. '```' → logprob: -13.210092544555664
    10. ',
' → logprob: -13.460092544555664

Token 792: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.007066516671329737
    2. ' Y' → logprob: -5.00706672668457
    3. 'y' → logprob: -8.00706672668457
    4. ' y' → logprob: -11.00706672668457
    5. '   ' → logprob: -13.75706672668457
    6. '	Y' → logprob: -16.00706672668457
    7. '(Y' → logprob: -16.38206672668457
    8. '(y' → logprob: -16.50706672668457
    9. ' ' → logprob: -17.25706672668457
    10. '    ' → logprob: -17.88206672668457

Token 793: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03551654517650604
    2. '):
' → logprob: -3.4105165004730225
    3. '+' → logprob: -6.535516738891602
    4. ')' → logprob: -8.285516738891602
    5. '                   ' → logprob: -9.535516738891602
    6. '                       ' → logprob: -10.410516738891602
    7. ':' → logprob: -10.910516738891602
    8. '):

' → logprob: -11.160516738891602
    9. '):
' → logprob: -11.785516738891602
    10. ' +' → logprob: -12.660516738891602

Token 794: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00036667886888608336
    2. '                           ' → logprob: -8.8753662109375
    3. '                   ' → logprob: -9.3753662109375
    4. '                               ' → logprob: -9.5003662109375
    5. '                        ' → logprob: -10.8753662109375
    6. '	                   ' → logprob: -11.6253662109375
    7. '                        
' → logprob: -11.8753662109375
    8. '		               ' → logprob: -12.2503662109375
    9. ' if' → logprob: -12.3753662109375
    10. '                    ' → logprob: -12.7503662109375

Token 795: ' w' (ID: 286)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0027852654457092285
    2. ' if' → logprob: -6.0027852058410645
    3. 'if' → logprob: -8.877785682678223
    4. '                               ' → logprob: -9.252785682678223
    5. '                            ' → logprob: -10.377785682678223
    6. '                       ' → logprob: -11.127785682678223
    7. '                          ' → logprob: -12.252785682678223
    8. '						' → logprob: -12.502785682678223
    9. '                                   ' → logprob: -12.627785682678223
    10. '                   ' → logprob: -12.627785682678223

Token 796: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07965889573097229
    2. ' =' → logprob: -2.5796589851379395
    3. '=(' → logprob: -8.579658508300781
    4. '==' → logprob: -8.829658508300781
    5. '<|end|>' → logprob: -9.204658508300781
    6. 'idth' → logprob: -10.079658508300781
    7. '=x' → logprob: -10.204658508300781
    8. ',' → logprob: -10.329658508300781
    9. 'hile' → logprob: -10.829658508300781
    10. '```' → logprob: -10.954658508300781

Token 797: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009180181659758091
    2. ' x' → logprob: -5.009180068969727
    3. '(x' → logprob: -6.009180068969727
    4. ' (' → logprob: -12.259180068969727
    5. '	x' → logprob: -15.009180068969727
    6. '(' → logprob: -15.509180068969727
    7. '{x' → logprob: -16.009180068969727
    8. '"x' → logprob: -16.009180068969727
    9. '```' → logprob: -17.134180068969727
    10. ')x' → logprob: -17.384180068969727

Token 798: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.7888184528565034e-05
    2. '₂' → logprob: -10.7500581741333
    3. '_' → logprob: -10.8750581741333
    4. '```' → logprob: -11.8750581741333
    5. '1' → logprob: -12.1250581741333
    6. '[' → logprob: -14.0000581741333
    7. '`' → logprob: -14.5000581741333
    8. ')' → logprob: -14.8750581741333
    9. '   ' → logprob: -14.8750581741333
    10. ' ' → logprob: -15.0000581741333

Token 799: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06235494464635849
    2. '-' → logprob: -2.8123550415039062
    3. '+' → logprob: -8.062355041503906
    4. ' +' → logprob: -9.562355041503906
    5. ' -
' → logprob: -14.687355041503906
    6. ' ' → logprob: -15.062355041503906
    7. '-
' → logprob: -15.687355041503906
    8. '<|end|>' → logprob: -15.687355041503906
    9. '```' → logprob: -15.812355041503906
    10. ')' → logprob: -16.187355041503906

Token 800: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00010926496179308742
    2. ' x' → logprob: -9.125109672546387
    3. '1' → logprob: -16.25010871887207
    4. '(x' → logprob: -16.37510871887207
    5. '	x' → logprob: -16.75010871887207
    6. '{x' → logprob: -17.12510871887207
    7. '[x' → logprob: -18.12510871887207
    8. '_x' → logprob: -18.62510871887207
    9. '[' → logprob: -19.12510871887207
    10. '$x' → logprob: -19.25010871887207

Token 801: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007852102862671018
    2. 'x' → logprob: -7.5007853507995605
    3. '2' → logprob: -8.500784873962402
    4. '+' → logprob: -11.375784873962402
    5. ' ' → logprob: -11.875784873962402
    6. '```' → logprob: -12.625784873962402
    7. ' x' → logprob: -12.875784873962402
    8. '_' → logprob: -13.750784873962402
    9. '[' → logprob: -14.500784873962402
    10. '`' → logprob: -14.625784873962402

Token 802: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12692831456661224
    2. ' +' → logprob: -2.1269283294677734
    3. '+
' → logprob: -15.876928329467773
    4. ' +
' → logprob: -17.001928329467773
    5. '1' → logprob: -17.376928329467773
    6. '()+' → logprob: -18.126928329467773
    7. '＋' → logprob: -18.126928329467773
    8. '```' → logprob: -18.251928329467773
    9. '[' → logprob: -18.376928329467773
    10. ' ' → logprob: -19.751928329467773

Token 803: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '```' → logprob: -15.375066757202148
    4. '`' → logprob: -20.62506675720215
    5. '   ' → logprob: -20.75006675720215
    6. '=' → logprob: -21.00006675720215
    7. '0' → logprob: -21.87506675720215
    8. '``' → logprob: -22.56256675720215
    9. '[' → logprob: -22.62506675720215
    10. '>' → logprob: -22.87506675720215

Token 804: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -17.25
    4. '`' → logprob: -22.0
    5. '   ' → logprob: -22.25
    6. '۱' → logprob: -22.625
    7. '１' → logprob: -22.8125
    8. '' → logprob: -23.1875
    9. '0' → logprob: -23.5
    10. '১' → logprob: -23.625

Token 805: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.2538607120513916
    2. '<|end|>' → logprob: -1.7538607120513916
    3. '*' → logprob: -4.5038604736328125
    4. ' *' → logprob: -4.6288604736328125
    5. ')' → logprob: -4.7538604736328125
    6. '                        ' → logprob: -5.2538604736328125
    7. '       ' → logprob: -5.8788604736328125
    8. '                        
' → logprob: -6.0038604736328125
    9. '           ' → logprob: -6.3788604736328125
    10. '               ' → logprob: -6.5038604736328125

Token 806: '                       ' (ID: 968)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 807: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.02632874622941017
    2. ' h' → logprob: -3.6513288021087646
    3. '                               ' → logprob: -11.151329040527344
    4. '	h' → logprob: -12.526329040527344
    5. '```' → logprob: -13.026329040527344
    6. '                       ' → logprob: -13.526329040527344
    7. 'd' → logprob: -13.776329040527344
    8. 'for' → logprob: -14.026329040527344
    9. '                           ' → logprob: -14.276329040527344
    10. '                                   ' → logprob: -14.276329040527344

Token 808: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09349727630615234
    2. ' =' → logprob: -2.4684972763061523
    3. '<|end|>' → logprob: -5.468497276306152
    4. ')' → logprob: -8.718497276306152
    5. '==' → logprob: -9.593497276306152
    6. '<|end|>' → logprob: -10.468497276306152
    7. ' ==' → logprob: -10.843497276306152
    8. '```' → logprob: -11.343497276306152
    9. '=True' → logprob: -12.343497276306152
    10. ' ' → logprob: -12.718497276306152

Token 809: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001382241171086207
    2. ' y' → logprob: -9.000138282775879
    3. '(y' → logprob: -11.125138282775879
    4. '	y' → logprob: -17.125137329101562
    5. ''y' → logprob: -18.750137329101562
    6. '[y' → logprob: -19.250137329101562
    7. '`' → logprob: -20.000137329101562
    8. '‘y' → logprob: -20.000137329101562
    9. ')y' → logprob: -20.125137329101562
    10. '*y' → logprob: -20.375137329101562

Token 810: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008461985853500664
    2. '-' → logprob: -8.000845909118652
    3. '1' → logprob: -8.250845909118652
    4. ' -' → logprob: -8.625845909118652
    5. ' ' → logprob: -9.750845909118652
    6. '#' → logprob: -12.875845909118652
    7. '```' → logprob: -12.875845909118652
    8. '   ' → logprob: -13.625845909118652
    9. '+' → logprob: -13.750845909118652
    10. '=' → logprob: -14.000845909118652

Token 811: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4740838408470154
    2. '+' → logprob: -0.9740838408470154
    3. '=' → logprob: -13.22408390045166
    4. '-' → logprob: -13.47408390045166
    5. ' -' → logprob: -14.22408390045166
    6. '<|end|>' → logprob: -14.22408390045166
    7. ' ' → logprob: -14.47408390045166
    8. '```' → logprob: -14.84908390045166
    9. '+=' → logprob: -15.47408390045166
    10. '()+' → logprob: -15.47408390045166

Token 812: ' y' (ID: 342)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001817297888919711
    2. 'y' → logprob: -8.625182151794434
    3. ' y' → logprob: -13.125182151794434
    4. ' ' → logprob: -15.875182151794434
    5. '`' → logprob: -20.500181198120117
    6. '```' → logprob: -20.750181198120117
    7. '(y' → logprob: -20.875181198120117
    8. ''y' → logprob: -20.875181198120117
    9. '	y' → logprob: -21.000181198120117
    10. ')y' → logprob: -21.125181198120117

Token 813: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '2' → logprob: -14.750000953674316
    3. ' ' → logprob: -16.5
    4. '+' → logprob: -17.625
    5. '-' → logprob: -18.625
    6. '```' → logprob: -19.625
    7. ' -' → logprob: -20.125
    8. '１' → logprob: -20.625
    9. '   ' → logprob: -21.0
    10. '_' → logprob: -21.75

Token 814: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25192973017692566
    2. ' +' → logprob: -1.501929759979248
    3. '```' → logprob: -15.25192928314209
    4. '+
' → logprob: -15.87692928314209
    5. '1' → logprob: -16.126930236816406
    6. ' +
' → logprob: -16.626930236816406
    7. '()+' → logprob: -17.001930236816406
    8. '                       ' → logprob: -17.501930236816406
    9. '＋' → logprob: -17.501930236816406
    10. ' ' → logprob: -17.876930236816406

Token 815: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '```' → logprob: -17.125139236450195
    4. '2' → logprob: -18.500139236450195
    5. '`' → logprob: -18.625139236450195
    6. '0' → logprob: -19.000139236450195
    7. '<|end|>' → logprob: -20.000139236450195
    8. ')' → logprob: -20.750139236450195
    9. '4' → logprob: -20.750139236450195
    10. ' ' → logprob: -20.875139236450195

Token 816: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -17.000001907348633
    4. '<|end|>' → logprob: -18.375001907348633
    5. '0' → logprob: -19.125001907348633
    6. '۱' → logprob: -19.375001907348633
    7. '   ' → logprob: -20.500001907348633
    8. '`' → logprob: -20.812501907348633
    9. '2' → logprob: -20.875001907348633
    10. '１' → logprob: -21.062501907348633

Token 817: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.019970523193478584
    2. '                        
' → logprob: -5.019970417022705
    3. '<|end|>' → logprob: -5.519970417022705
    4. '                           ' → logprob: -6.269970417022705
    5. '                        ' → logprob: -6.519970417022705
    6. ' if' → logprob: -6.519970417022705
    7. '                               ' → logprob: -6.769970417022705
    8. '					' → logprob: -7.144970417022705
    9. '						
' → logprob: -8.519970893859863
    10. '	                       ' → logprob: -8.644970893859863

Token 818: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.000329386442899704
    2. '                           ' → logprob: -8.37532901763916
    3. '                        ' → logprob: -11.00032901763916
    4. '<|end|>' → logprob: -11.00032901763916
    5. '```' → logprob: -11.12532901763916
    6. '                               ' → logprob: -11.75032901763916
    7. '           ' → logprob: -11.87532901763916
    8. '                        
' → logprob: -12.00032901763916
    9. '                   ' → logprob: -12.12532901763916
    10. ' if' → logprob: -12.12532901763916

Token 819: ' area' (ID: 3624)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17498727142810822
    2. ' if' → logprob: -1.9249873161315918
    3. '                       ' → logprob: -4.299987316131592
    4. '                           ' → logprob: -6.924987316131592
    5. '                               ' → logprob: -9.799986839294434
    6. '                        ' → logprob: -10.799986839294434
    7. '                        
' → logprob: -12.424986839294434
    8. '   ' → logprob: -12.674986839294434
    9. '                         ' → logprob: -12.924986839294434
    10. '                   ' → logprob: -12.924986839294434

Token 820: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.056660350412130356
    2. '==' → logprob: -2.9316604137420654
    3. '=' → logprob: -7.056660175323486
    4. '<|end|>' → logprob: -7.681660175323486
    5. ' =' → logprob: -8.181660652160645
    6. ')' → logprob: -9.556660652160645
    7. ')==' → logprob: -10.306660652160645
    8. '===' → logprob: -10.681660652160645
    9. '```' → logprob: -11.181660652160645
    10. ' <=' → logprob: -12.181660652160645

Token 821: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1269727349281311
    2. ' w' → logprob: -2.1269726753234863
    3. 'x' → logprob: -10.126973152160645
    4. ' x' → logprob: -13.251973152160645
    5. 'k' → logprob: -13.501973152160645
    6. ' ' → logprob: -14.626973152160645
    7. '	w' → logprob: -15.001973152160645
    8. '   ' → logprob: -15.626973152160645
    9. ' ' → logprob: -15.876973152160645
    10. '​' → logprob: -16.376972198486328

Token 822: '*h' (ID: 139295)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 823: '
' (ID: 198)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9520113468170166
    2. '<|end|>' → logprob: -0.9520113468170166
    3. ' ==' → logprob: -1.7020113468170166
    4. '                       ' → logprob: -4.0770111083984375
    5. '<|end|>' → logprob: -4.3270111083984375
    6. '<=' → logprob: -5.7020111083984375
    7. '=' → logprob: -5.9520111083984375
    8. ' <=' → logprob: -6.2020111083984375
    9. '                        ' → logprob: -6.5770111083984375
    10. ' if' → logprob: -6.5770111083984375

Token 824: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00041279601282440126
    2. '<|end|>' → logprob: -9.250412940979004
    3. '                        
' → logprob: -9.625412940979004
    4. ' if' → logprob: -9.625412940979004
    5. '                        ' → logprob: -9.750412940979004
    6. '                           ' → logprob: -9.875412940979004
    7. '                               ' → logprob: -10.875412940979004
    8. '					' → logprob: -11.500412940979004
    9. '```' → logprob: -12.000412940979004
    10. '               ' → logprob: -12.375412940979004

Token 825: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009232515469193459
    2. ' if' → logprob: -5.384232521057129
    3. '                       ' → logprob: -5.384232521057129
    4. '                           ' → logprob: -11.759232521057129
    5. '                               ' → logprob: -13.509232521057129
    6. '                        ' → logprob: -14.259232521057129
    7. '           ' → logprob: -14.259232521057129
    8. '               ' → logprob: -14.509232521057129
    9. '                        
' → logprob: -14.509232521057129
    10. '```' → logprob: -14.509232521057129

Token 826: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.5759395360946655
    2. 'area' → logprob: -0.8259395360946655
    3. '(area' → logprob: -16.325939178466797
    4. '                           ' → logprob: -17.325939178466797
    5. '                       ' → logprob: -19.325939178466797
    6. '   ' → logprob: -19.575939178466797
    7. '                               ' → logprob: -20.200939178466797
    8. ' ' → logprob: -20.200939178466797
    9. 'Area' → logprob: -20.450939178466797
    10. 'AREA' → logprob: -20.825939178466797

Token 827: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3371582329273224
    2. ' ==' → logprob: -1.337158203125
    3. '<' → logprob: -4.212158203125
    4. ' <' → logprob: -5.712158203125
    5. '!=' → logprob: -5.837158203125
    6. '>=' → logprob: -6.712158203125
    7. ' !=' → logprob: -7.462158203125
    8. '>' → logprob: -7.962158203125
    9. ' >=' → logprob: -8.212158203125
    10. ' >' → logprob: -9.837158203125

Token 828: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.004620472434908152
    2. ' k' → logprob: -5.379620552062988
    3. '	k' → logprob: -16.629619598388672
    4. '[k' → logprob: -17.004619598388672
    5. '{k' → logprob: -17.004619598388672
    6. ' ' → logprob: -17.254619598388672
    7. '_k' → logprob: -17.504619598388672
    8. ' ' → logprob: -17.879619598388672
    9. '```' → logprob: -18.004619598388672
    10. '=k' → logprob: -18.254619598388672

Token 829: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05063960328698158
    2. ':' → logprob: -3.1756396293640137
    3. 'and' → logprob: -5.800639629364014
    4. '                           ' → logprob: -5.800639629364014
    5. ':
' → logprob: -6.925639629364014
    6. '                       ' → logprob: -7.800639629364014
    7. '                               ' → logprob: -10.050639152526855
    8. '           ' → logprob: -10.550639152526855
    9. '                            ' → logprob: -11.050639152526855
    10. '<|end|>' → logprob: -11.175639152526855

Token 830: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.07463568449020386
    2. ' and' → logprob: -2.6996357440948486
    3. '                               ' → logprob: -6.1996355056762695
    4. ':' → logprob: -7.1996355056762695
    5. '                       ' → logprob: -7.1996355056762695
    6. '                            
' → logprob: -7.5746355056762695
    7. '                            ' → logprob: -8.44963550567627
    8. '                                   ' → logprob: -9.07463550567627
    9. ':
' → logprob: -9.57463550567627
    10. '                             ' → logprob: -10.44963550567627

Token 831: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.060257911682129
    2. 'all' → logprob: -1.560257911682129
    3. 'if' → logprob: -1.685257911682129
    4. 'valid' → logprob: -2.185257911682129
    5. 'boards' → logprob: -2.935257911682129
    6. 'contains' → logprob: -4.060257911682129
    7. '                       ' → logprob: -4.185257911682129
    8. 'min' → logprob: -4.310257911682129
    9. 'board' → logprob: -4.935257911682129
    10. 'inside' → logprob: -5.060257911682129

Token 832: ' check' (ID: 2371)
  Prédit: 'boards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'boards' → logprob: -0.8196802735328674
    2. '#' → logprob: -0.9446802735328674
    3. 'all' → logprob: -2.6946802139282227
    4. 'valid' → logprob: -3.3196802139282227
    5. 'board' → logprob: -4.194680213928223
    6. 'if' → logprob: -4.444680213928223
    7. 'positions' → logprob: -4.819680213928223
    8. 'contains' → logprob: -4.944680213928223
    9. 'points' → logprob: -5.319680213928223
    10. 'cells' → logprob: -5.319680213928223

Token 833: ' contains' (ID: 8895)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.1292710304260254
    2. ' if' → logprob: -2.7542710304260254
    3. 'all' → logprob: -3.6292710304260254
    4. 'boards' → logprob: -3.7542710304260254
    5. 'if' → logprob: -6.754271030426025
    6. '#' → logprob: -6.879271030426025
    7. 'candidate' → logprob: -6.879271030426025
    8. ' boards' → logprob: -6.879271030426025
    9. ' candidate' → logprob: -7.254271030426025
    10. '                           ' → logprob: -7.879271030426025

Token 834: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.6656742095947266
    2. 'all' → logprob: -0.7906742095947266
    3. 'for' → logprob: -5.040674209594727
    4. ' (' → logprob: -5.165674209594727
    5. 'any' → logprob: -5.165674209594727
    6. 'pos' → logprob: -5.790674209594727
    7. ' any' → logprob: -5.790674209594727
    8. '(' → logprob: -5.790674209594727
    9. ' for' → logprob: -6.290674209594727
    10. '(min' → logprob: -7.415674209594727

Token 835: ' boards' (ID: 27531)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.059701189398765564
    2. 'b' → logprob: -3.8097012042999268
    3. ' pos' → logprob: -5.184700965881348
    4. 'boards' → logprob: -5.184700965881348
    5. 'p' → logprob: -5.559700965881348
    6. 'all' → logprob: -5.684700965881348
    7. '(p' → logprob: -5.684700965881348
    8. ' (' → logprob: -5.809700965881348
    9. 'positions' → logprob: -5.809700965881348
    10. '_pos' → logprob: -6.559700965881348

Token 836: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.32698923349380493
    2. ' and' → logprob: -2.07698917388916
    3. '                               ' → logprob: -2.07698917388916
    4. ':' → logprob: -4.82698917388916
    5. '<|end|>' → logprob: -5.20198917388916
    6. ' if' → logprob: -5.32698917388916
    7. '                            ' → logprob: -5.95198917388916
    8. '                            
' → logprob: -6.20198917388916
    9. '                       ' → logprob: -7.32698917388916
    10. '                                   ' → logprob: -7.57698917388916

Token 837: '                           ' (ID: 1686)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7703430652618408
    2. '                               ' → logprob: -0.8953430652618408
    3. '                           ' → logprob: -2.145343065261841
    4. ':' → logprob: -5.270342826843262
    5. ' if' → logprob: -6.270342826843262
    6. '                                   ' → logprob: -7.145342826843262
    7. ' for' → logprob: -7.145342826843262
    8. 'and' → logprob: -7.895342826843262
    9. '                            ' → logprob: -8.020342826843262
    10. '                             ' → logprob: -8.145342826843262

Token 838: ' #' (ID: 1069)
  Prédit: ' contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' contains' → logprob: -1.4226659536361694
    2. 'all' → logprob: -1.5476659536361694
    3. ' all' → logprob: -1.7976659536361694
    4. 'if' → logprob: -2.047666072845459
    5. 'contains' → logprob: -2.172666072845459
    6. ' if' → logprob: -2.172666072845459
    7. '                           ' → logprob: -5.422666072845459
    8. 'contain' → logprob: -5.422666072845459
    9. 'contained' → logprob: -5.922666072845459
    10. ' contained' → logprob: -5.922666072845459

Token 839: ' (' (ID: 350)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.8783403038978577
    2. 'contains' → logprob: -1.128340244293213
    3. 'if' → logprob: -1.503340244293213
    4. '                           ' → logprob: -4.128340244293213
    5. 'valid' → logprob: -5.128340244293213
    6. 'contained' → logprob: -5.628340244293213
    7. 'contain' → logprob: -5.753340244293213
    8. ' contains' → logprob: -6.003340244293213
    9. 'inside' → logprob: -6.253340244293213
    10. 'for' → logprob: -6.503340244293213

Token 840: 'already' (ID: 89136)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5260821580886841
    2. ' all' → logprob: -0.9010821580886841
    3. ')' → logprob: -6.7760820388793945
    4. 'x' → logprob: -8.151082038879395
    5. ' (' → logprob: -8.526082038879395
    6. '(x' → logprob: -8.526082038879395
    7. '                           ' → logprob: -8.651082038879395
    8. ' x' → logprob: -8.901082038879395
    9. 'pos' → logprob: -9.026082038879395
    10. ' True' → logprob: -9.151082038879395

Token 841: ' guaranteed' (ID: 21862)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.781687617301941
    2. ')' → logprob: -2.1566877365112305
    3. ' known' → logprob: -2.4066877365112305
    4. '                           ' → logprob: -2.7816877365112305
    5. 'known' → logprob: -2.9066877365112305
    6. ' know' → logprob: -3.2816877365112305
    7. ' contains' → logprob: -3.2816877365112305
    8. 'contains' → logprob: -3.5316877365112305
    9. 'contained' → logprob: -3.6566877365112305
    10. ' covered' → logprob: -3.7816877365112305

Token 842: ' min' (ID: 1349)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5179380178451538
    2. ' if' → logprob: -1.6429380178451538
    3. ' by' → logprob: -2.5179381370544434
    4. ' because' → logprob: -2.7679381370544434
    5. ' since' → logprob: -3.0179381370544434
    6. 'if' → logprob: -6.017938137054443
    7. ',' → logprob: -6.142938137054443
    8. 'since' → logprob: -6.142938137054443
    9. '),' → logprob: -6.267938137054443
    10. ' as' → logprob: -6.267938137054443

Token 843: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.392202976712724e-06
    2. ')' → logprob: -13.500006675720215
    3. ' x' → logprob: -13.750006675720215
    4. '```' → logprob: -14.000006675720215
    5. '(x' → logprob: -14.125006675720215
    6. '_x' → logprob: -15.000006675720215
    7. 'bounding' → logprob: -15.125006675720215
    8. '{x' → logprob: -15.250006675720215
    9. ',' → logprob: -15.375006675720215
    10. ' bounding' → logprob: -15.500006675720215

Token 844: ',max' (ID: 81466)
  Prédit: ',min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',min' → logprob: -0.7830199003219604
    2. '<=' → logprob: -1.1580199003219604
    3. ',' → logprob: -1.6580199003219604
    4. ' <=' → logprob: -3.78302001953125
    5. ',y' → logprob: -5.28302001953125
    6. ',max' → logprob: -5.90802001953125
    7. 'min' → logprob: -6.15802001953125
    8. 'and' → logprob: -6.15802001953125
    9. '>=' → logprob: -7.03302001953125
    10. ')' → logprob: -7.03302001953125

Token 845: 'x' (ID: 87)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.44890013337135315
    2. ',' → logprob: -1.0739001035690308
    3. 'x' → logprob: -4.82390022277832
    4. ',y' → logprob: -5.07390022277832
    5. ',min' → logprob: -5.82390022277832
    6. 'min' → logprob: -6.94890022277832
    7. ',max' → logprob: -7.44890022277832
    8. ')' → logprob: -8.19890022277832
    9. '<|end|>' → logprob: -8.57390022277832
    10. '<|end|>' → logprob: -8.82390022277832

Token 846: ',min' (ID: 129117)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.412477046251297
    2. ')' → logprob: -1.6624770164489746
    3. ',' → logprob: -2.6624770164489746
    4. 'and' → logprob: -2.9124770164489746
    5. '+' → logprob: -4.537477016448975
    6. '                           ' → logprob: -5.287477016448975
    7. ' <=' → logprob: -6.662477016448975
    8. ' ,' → logprob: -7.037477016448975
    9. '```' → logprob: -7.162477016448975
    10. ' )' → logprob: -7.412477016448975

Token 847: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00016623330884613097
    2. 'min' → logprob: -9.625165939331055
    3. 'x' → logprob: -10.125165939331055
    4. ',' → logprob: -10.375165939331055
    5. '```' → logprob: -11.625165939331055
    6. ')' → logprob: -11.875165939331055
    7. ',y' → logprob: -12.375165939331055
    8. 'ny' → logprob: -13.875165939331055
    9. ',min' → logprob: -14.375165939331055
    10. 'max' → logprob: -14.625165939331055

Token 848: ',max' (ID: 81466)
  Prédit: ',min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',min' → logprob: -0.0003246183041483164
    2. ',' → logprob: -8.625324249267578
    3. ',max' → logprob: -9.250324249267578
    4. 'min' → logprob: -10.250324249267578
    5. ',m' → logprob: -12.125324249267578
    6. ',y' → logprob: -12.500324249267578
    7. ',my' → logprob: -13.250324249267578
    8. ',and' → logprob: -14.000324249267578
    9. '_min' → logprob: -15.125324249267578
    10. 'and' → logprob: -15.250324249267578

Token 849: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.660315895918757e-05
    2. '1' → logprob: -9.750076293945312
    3. 'x' → logprob: -12.250076293945312
    4. '```' → logprob: -12.250076293945312
    5. 'ay' → logprob: -12.625076293945312
    6. '
' → logprob: -13.500076293945312
    7. ' y' → logprob: -14.000076293945312
    8. ',' → logprob: -14.250076293945312
    9. 'iy' → logprob: -15.000076293945312
    10. ')' → logprob: -15.250076293945312

Token 850: ' inside' (ID: 6772)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0924726277589798
    2. ' )' → logprob: -3.717472553253174
    3. ' must' → logprob: -4.342472553253174
    4. ' to' → logprob: -4.342472553253174
    5. ',' → logprob: -4.967472553253174
    6. ' is' → logprob: -5.217472553253174
    7. ' contains' → logprob: -5.342472553253174
    8. ')
' → logprob: -5.592472553253174
    9. ' because' → logprob: -5.717472553253174
    10. ' are' → logprob: -6.342472553253174

Token 851: ')
' (ID: 446)
  Prédit: ' rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rectangle' → logprob: -1.1801159381866455
    2. ')' → logprob: -1.4301159381866455
    3. 'rectangle' → logprob: -1.5551159381866455
    4. ' (' → logprob: -2.3051159381866455
    5. 'x' → logprob: -3.1801159381866455
    6. ' )' → logprob: -3.6801159381866455
    7. ' x' → logprob: -3.8051159381866455
    8. '(x' → logprob: -4.055115699768066
    9. ' the' → logprob: -4.430115699768066
    10. 'the' → logprob: -5.305115699768066

Token 852: '                           ' (ID: 1686)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4942910373210907
    2. '                           ' → logprob: -1.119291067123413
    3. ' all' → logprob: -3.994291067123413
    4. ' valid' → logprob: -4.244290828704834
    5. '                               ' → logprob: -5.119290828704834
    6. 'if' → logprob: -5.369290828704834
    7. ' found' → logprob: -5.744290828704834
    8. ' for' → logprob: -5.994290828704834
    9. '                                   ' → logprob: -6.369290828704834
    10. '   ' → logprob: -6.744290828704834

Token 853: ' candidates' (ID: 18116)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.776947557926178
    2. 'valid' → logprob: -1.0269474983215332
    3. 'if' → logprob: -2.276947498321533
    4. '                           ' → logprob: -3.651947498321533
    5. 'inside' → logprob: -4.276947498321533
    6. 'contains' → logprob: -4.401947498321533
    7. 'ok' → logprob: -5.151947498321533
    8. 'flag' → logprob: -5.276947498321533
    9. 'boards' → logprob: -5.526947498321533
    10. 'contained' → logprob: -6.151947498321533

Token 854: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0024989673402160406
    2. '.' → logprob: -6.002499103546143
    3. '.app' → logprob: -11.752498626708984
    4. ' .' → logprob: -11.877498626708984
    5. '.extend' → logprob: -12.627498626708984
    6. '.setdefault' → logprob: -13.377498626708984
    7. 'append' → logprob: -14.002498626708984
    8. '_append' → logprob: -14.627498626708984
    9. '.add' → logprob: -14.752498626708984
    10. ').' → logprob: -14.877498626708984

Token 855: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.011051236651837826
    2. '(' → logprob: -4.511051177978516
    3. '(((' → logprob: -12.636051177978516
    4. ' ((' → logprob: -16.386051177978516
    5. '(
' → logprob: -17.136051177978516
    6. '([' → logprob: -17.761051177978516
    7. '   ' → logprob: -17.761051177978516
    8. ' (' → logprob: -17.886051177978516
    9. '[(' → logprob: -19.511051177978516
    10. ' ' → logprob: -19.511051177978516

Token 856: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00011009939044015482
    2. '(' → logprob: -9.250109672546387
    3. ' (' → logprob: -11.625109672546387
    4. '   ' → logprob: -13.000109672546387
    5. '((' → logprob: -13.000109672546387
    6. '[x' → logprob: -14.875109672546387
    7. '[(' → logprob: -16.875110626220703
    8. ')' → logprob: -17.375110626220703
    9. 'x' → logprob: -18.250110626220703
    10. '{x' → logprob: -18.375110626220703

Token 857: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.45848218582978e-06
    2. ' x' → logprob: -13.25000286102295
    3. '(x' → logprob: -14.37500286102295
    4. 'b' → logprob: -18.125001907348633
    5. '   ' → logprob: -18.750001907348633
    6. ')x' → logprob: -18.875001907348633
    7. '{x' → logprob: -19.125001907348633
    8. '[x' → logprob: -19.375001907348633
    9. '	x' → logprob: -20.375001907348633
    10. '```' → logprob: -20.500001907348633

Token 858: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ',' → logprob: -12.87500286102295
    3. '```' → logprob: -15.87500286102295
    4. '_' → logprob: -17.125001907348633
    5. '[' → logprob: -17.500001907348633
    6. '<|end|>' → logprob: -18.000001907348633
    7. '{' → logprob: -18.500001907348633
    8. 'x' → logprob: -18.750001907348633
    9. ' ' → logprob: -18.875001907348633
    10. 's' → logprob: -19.000001907348633

Token 859: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029822008684277534
    2. ',y' → logprob: -3.5298221111297607
    3. ',
' → logprob: -10.52982234954834
    4. ' ,' → logprob: -10.65482234954834
    5. ',x' → logprob: -12.02982234954834
    6. ',Y' → logprob: -12.65482234954834
    7. ')' → logprob: -13.40482234954834
    8. ',user' → logprob: -13.90482234954834
    9. '<|end|>' → logprob: -14.02982234954834
    10. ',)' → logprob: -14.27982234954834

Token 860: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -17.0
    3. ')' → logprob: -18.625
    4. ',' → logprob: -19.375
    5. ' ' → logprob: -19.625
    6. '2' → logprob: -19.75
    7. '```' → logprob: -19.875
    8. '
' → logprob: -20.25
    9. '``' → logprob: -21.5625
    10. '`' → logprob: -21.5625

Token 861: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.2519715130329132
    2. ',' → logprob: -1.5019714832305908
    3. ',y' → logprob: -10.626971244812012
    4. ' ,' → logprob: -11.126971244812012
    5. ',
' → logprob: -13.126971244812012
    6. 'x' → logprob: -13.876971244812012
    7. '   ' → logprob: -16.876972198486328
    8. '`,`' → logprob: -17.001972198486328
    9. ',z' → logprob: -17.251972198486328
    10. ',b' → logprob: -17.501972198486328

Token 862: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. 'x' → logprob: -14.500000953674316
    3. '₂' → logprob: -18.125
    4. '```' → logprob: -18.625
    5. ' ' → logprob: -18.875
    6. ',' → logprob: -19.375
    7. '۲' → logprob: -19.625
    8. ',x' → logprob: -20.375
    9. '1' → logprob: -20.5
    10. '２' → logprob: -20.875

Token 863: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.002188925864174962
    2. ',' → logprob: -6.1271891593933105
    3. ' ,' → logprob: -13.127188682556152
    4. ',
' → logprob: -14.127188682556152
    5. ',x' → logprob: -15.127188682556152
    6. 'y' → logprob: -15.877188682556152
    7. ',w' → logprob: -16.12718963623047
    8. ',b' → logprob: -16.62718963623047
    9. ',Y' → logprob: -16.75218963623047
    10. ',z' → logprob: -16.75218963623047

Token 864: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '```' → logprob: -18.625
    3. '۲' → logprob: -18.875
    4. '₂' → logprob: -19.625
    5. ' ' → logprob: -19.875
    6. ')' → logprob: -20.0
    7. 'y' → logprob: -20.25
    8. '1' → logprob: -20.875
    9. '２' → logprob: -21.625
    10. ',' → logprob: -21.75

Token 865: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.953082341467962e-05
    2. ' )' → logprob: -10.875039100646973
    3. ',' → logprob: -11.375039100646973
    4. ')
' → logprob: -12.625039100646973
    5. '                           ' → logprob: -12.625039100646973
    6. ',)' → logprob: -14.500039100646973
    7. ')}' → logprob: -14.500039100646973
    8. '))' → logprob: -14.625039100646973
    9. '),' → logprob: -15.375039100646973
    10. '                               ' → logprob: -15.875039100646973

Token 866: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019224369898438454
    2. '<|end|>' → logprob: -4.519224166870117
    3. '                           ' → logprob: -5.144224166870117
    4. '                               ' → logprob: -6.894224166870117
    5. '                       ' → logprob: -8.019224166870117
    6. ' )' → logprob: -8.019224166870117
    7. '                            ' → logprob: -9.019224166870117
    8. '
' → logprob: -9.519224166870117
    9. '                            
' → logprob: -9.769224166870117
    10. ',' → logprob: -9.769224166870117

Token 867: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 868: ' candidate' (ID: 17098)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003238793695345521
    2. '                           ' → logprob: -6.378238677978516
    3. '        
' → logprob: -8.253238677978516
    4. '           ' → logprob: -8.253238677978516
    5. '                       ' → logprob: -8.753238677978516
    6. '<|end|>' → logprob: -8.878238677978516
    7. '                            ' → logprob: -9.003238677978516
    8. '   ' → logprob: -9.253238677978516
    9. '                               ' → logprob: -9.378238677978516
    10. '        ' → logprob: -9.378238677978516

Token 869: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.007247264496982098
    2. 's' → logprob: -5.382247447967529
    3. '_s' → logprob: -6.132247447967529
    4. '_' → logprob: -7.757247447967529
    5. '_candidates' → logprob: -12.382246971130371
    6. '_rectangle' → logprob: -12.632246971130371
    7. '_res' → logprob: -13.382246971130371
    8. '_rec' → logprob: -13.757246971130371
    9. '_text' → logprob: -13.882246971130371
    10. '_rel' → logprob: -14.132246971130371

Token 870: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -5.438573680294212e-06
    2. 'angle' → logprob: -12.625005722045898
    3. '_angles' → logprob: -14.125005722045898
    4. 'anges' → logprob: -14.625005722045898
    5. 'ANGLES' → logprob: -15.000005722045898
    6. 's' → logprob: -15.375005722045898
    7. 'ang' → logprob: -15.375005722045898
    8. 'angular' → logprob: -18.0000057220459
    9. 'gles' → logprob: -18.3750057220459
    10. 'ables' → logprob: -18.6250057220459

Token 871: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.060053952038288116
    2. '[' → logprob: -2.935054063796997
    3. '[c' → logprob: -5.685053825378418
    4. '=' → logprob: -6.685053825378418
    5. ']' → logprob: -8.935053825378418
    6. ' =' → logprob: -9.435053825378418
    7. '\[' → logprob: -9.560053825378418
    8. '```' → logprob: -9.810053825378418
    9. '.' → logprob: -10.560053825378418
    10. '[...]' → logprob: -10.685053825378418

Token 872: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02260642684996128
    2. '=' → logprob: -4.022606372833252
    3. ']=' → logprob: -5.647606372833252
    4. ' =' → logprob: -7.147606372833252
    5. '[' → logprob: -9.39760684967041
    6. ')' → logprob: -11.27260684967041
    7. ' ]' → logprob: -11.52260684967041
    8. '].' → logprob: -11.77260684967041
    9. '.append' → logprob: -12.02260684967041
    10. '=[]' → logprob: -12.77260684967041

Token 873: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869090974330902
    2. ' =' → logprob: -1.1369091272354126
    3. '=[]' → logprob: -11.136909484863281
    4. '.append' → logprob: -11.261909484863281
    5. '[' → logprob: -12.636909484863281
    6. '=[' → logprob: -13.261909484863281
    7. '.setdefault' → logprob: -13.886909484863281
    8. '.' → logprob: -14.136909484863281
    9. '.=' → logprob: -14.261909484863281
    10. '[:]' → logprob: -14.511909484863281

Token 874: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06661039590835571
    2. '[]' → logprob: -3.191610336303711
    3. ' candidates' → logprob: -3.941610336303711
    4. '[c' → logprob: -6.441610336303711
    5. ' []' → logprob: -6.691610336303711
    6. 'candidate' → logprob: -7.441610336303711
    7. '[' → logprob: -8.316610336303711
    8. '_candidates' → logprob: -9.566610336303711
    9. '[(' → logprob: -9.816610336303711
    10. ' c' → logprob: -9.941610336303711

Token 875: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 876: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05363773927092552
    2. '
' → logprob: -3.928637742996216
    3. '<|end|>' → logprob: -3.928637742996216
    4. '   ' → logprob: -5.178637504577637
    5. '    
' → logprob: -6.178637504577637
    6. 'from' → logprob: -6.803637504577637
    7. 'for' → logprob: -7.178637504577637
    8. '```' → logprob: -7.428637504577637
    9. '<|end|>' → logprob: -7.678637504577637
    10. ' def' → logprob: -7.928637504577637

Token 877: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25200581550598145
    2. 'from' → logprob: -1.6270058155059814
    3. 'import' → logprob: -4.252005577087402
    4. '#' (adapté à ' #') → logprob: -5.502005577087402
    5. 'return' → logprob: -6.252005577087402
    6. 'visited' → logprob: -7.002005577087402
    7. 'b' → logprob: -7.127005577087402
    8. 'buyers' → logprob: -7.127005577087402
    9. 'for' → logprob: -7.252005577087402
    10. 'stack' → logprob: -7.752005577087402

Token 878: ' For' (ID: 2214)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8082138895988464
    2. 'from' → logprob: -0.9332138895988464
    3. 'def' → logprob: -2.183213949203491
    4. 'import' → logprob: -3.933213949203491
    5. 'return' → logprob: -4.183213710784912
    6. 'all' → logprob: -5.433213710784912
    7. 'empty' → logprob: -6.683213710784912
    8. 'assigned' → logprob: -6.683213710784912
    9. 'for' → logprob: -6.933213710784912
    10. 'dp' → logprob: -7.058213710784912

Token 879: ' buyers' (ID: 25359)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5045028328895569
    2. ' b' → logprob: -1.379502773284912
    3. ' buyer' → logprob: -2.754502773284912
    4. ' buyers' → logprob: -3.379502773284912
    5. 'all' → logprob: -4.379502773284912
    6. ' all' → logprob: -4.879502773284912
    7. 'buyer' → logprob: -5.004502773284912
    8. 'buyers' → logprob: -5.129502773284912
    9. 'def' → logprob: -5.629502773284912
    10. ' def' → logprob: -6.004502773284912

Token 880: ' with' (ID: 483)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8651162981987
    2. ' in' → logprob: -1.6151163578033447
    3. ' with' → logprob: -1.7401163578033447
    4. ' b' → logprob: -2.7401163578033447
    5. ' =' → logprob: -2.9901163578033447
    6. ',' → logprob: -3.7401163578033447
    7. 'with' → logprob: -3.7401163578033447
    8. '_with' → logprob: -3.9901163578033447
    9. '_b' → logprob: -4.865116119384766
    10. ' not' → logprob: -5.865116119384766

Token 881: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.03962072357535362
    2. ' no' → logprob: -3.2896206378936768
    3. '[]' → logprob: -7.289620876312256
    4. 'len' → logprob: -8.289620399475098
    5. '0' → logprob: -8.539620399475098
    6. 'candidate' → logprob: -8.789620399475098
    7. 'empty' → logprob: -9.039620399475098
    8. 'b' → logprob: -9.164620399475098
    9. '#' → logprob: -11.414620399475098
    10. 'k' → logprob: -11.414620399475098

Token 882: ' boards' (ID: 27531)
  Prédit: 'boards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boards' → logprob: -0.3103179931640625
    2. ' boards' → logprob: -1.4353179931640625
    3. 'c' → logprob: -4.3103179931640625
    4. 'candidate' → logprob: -4.8103179931640625
    5. ' candidate' → logprob: -6.3103179931640625
    6. ' rectangles' → logprob: -6.4353179931640625
    7. ' candidates' → logprob: -6.8103179931640625
    8. '_rect' → logprob: -7.0603179931640625
    9. 'rect' → logprob: -7.3103179931640625
    10. '_' → logprob: -7.9353179931640625

Token 883: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45874547958374023
    2. ':' → logprob: -1.0837454795837402
    3. '   ' → logprob: -3.8337454795837402
    4. 'b' → logprob: -5.70874547958374
    5. ' for' → logprob: -6.70874547958374
    6. 'for' → logprob: -7.20874547958374
    7. ',b' → logprob: -7.33374547958374
    8. '[' → logprob: -7.83374547958374
    9. ' ,' → logprob: -8.333745956420898
    10. '#' → logprob: -8.458745956420898

Token 884: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6664708852767944
    2. ' for' → logprob: -1.0414708852767944
    3. '#' → logprob: -2.791471004486084
    4. '   ' → logprob: -3.416471004486084
    5. ' #' → logprob: -4.041471004486084
    6. ' continue' → logprob: -5.541471004486084
    7. 'all' → logprob: -6.041471004486084
    8. ' all' → logprob: -6.416471004486084
    9. 'empty' → logprob: -6.416471004486084
    10. 'possible' → logprob: -6.541471004486084

Token 885: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0328853614628315
    2. ' all' → logprob: -3.5328853130340576
    3. 'candidate' → logprob: -7.407885551452637
    4. ':' → logprob: -7.532885551452637
    5. '_rect' → logprob: -7.782885551452637
    6. 'possible' → logprob: -8.532885551452637
    7. 'rect' → logprob: -8.657885551452637
    8. '_all' → logprob: -8.782885551452637
    9. 'for' → logprob: -8.907885551452637
    10. '[]' → logprob: -9.032885551452637

Token 886: ' rectangles' (ID: 164265)
  Prédit: ' rectangles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rectangles' → logprob: -0.7100576758384705
    2. 'rect' → logprob: -1.5850577354431152
    3. 'x' → logprob: -2.0850577354431152
    4. 'possible' → logprob: -2.8350577354431152
    5. ' x' → logprob: -2.9600577354431152
    6. ' possible' → logprob: -3.5850577354431152
    7. 'for' → logprob: -4.085057735443115
    8. ' for' → logprob: -4.210057735443115
    9. 'candidate' → logprob: -6.710057735443115
    10. 'rectangle' → logprob: -6.710057735443115

Token 887: ' of' (ID: 328)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28665027022361755
    2. ' for' → logprob: -1.53665030002594
    3. '   ' → logprob: -4.16165018081665
    4. 'b' → logprob: -4.41165018081665
    5. '
' → logprob: -6.28665018081665
    6. ' of' → logprob: -6.78665018081665
    7. 'with' → logprob: -6.91165018081665
    8. 'of' → logprob: -7.78665018081665
    9. ' b' → logprob: -8.161650657653809
    10. ' with' → logprob: -8.286650657653809

Token 888: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.7098303437232971
    2. 'X' → logprob: -1.8348302841186523
    3. ' area' → logprob: -2.3348302841186523
    4. 'width' → logprob: -2.7098302841186523
    5. 'size' → logprob: -2.7098302841186523
    6. 'x' → logprob: -3.4598302841186523
    7. '1' → logprob: -3.4598302841186523
    8. 'b' → logprob: -4.959830284118652
    9. 'appropriate' → logprob: -4.959830284118652
    10. 'sizes' → logprob: -5.334830284118652

Token 889: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10559678822755814
    2. ' k' → logprob: -2.3555967807769775
    3. '1' → logprob: -5.605597019195557
    4. 'b' → logprob: -7.230597019195557
    5. ' ' → logprob: -8.105596542358398
    6. ' b' → logprob: -8.730596542358398
    7. '```' → logprob: -8.855596542358398
    8. 'for' → logprob: -10.105596542358398
    9. '=' → logprob: -10.230596542358398
    10. 'i' → logprob: -10.480596542358398

Token 890: ' anywhere' (ID: 15907)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.509175181388855
    2. 'for' → logprob: -1.009175181388855
    3. '   ' → logprob: -3.6341753005981445
    4. '
' → logprob: -4.8841753005981445
    5. 'b' → logprob: -9.009175300598145
    6. 'import' → logprob: -9.759175300598145
    7. ',' → logprob: -9.759175300598145
    8. 'from' → logprob: -10.259175300598145
    9. ' (' → logprob: -10.259175300598145
    10. 'area' → logprob: -10.884175300598145

Token 891: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4778011441230774
    2. ' for' → logprob: -1.4778010845184326
    3. 'for' → logprob: -1.9778010845184326
    4. '
' → logprob: -4.352801322937012
    5. ',' → logprob: -8.977801322937012
    6. '    
' → logprob: -9.102801322937012
    7. '	for' → logprob: -10.102801322937012
    8. '       ' → logprob: -10.227801322937012
    9. '  
' → logprob: -10.727801322937012
    10. ' ' → logprob: -11.102801322937012

Token 892: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.555034339427948
    2. ' for' → logprob: -1.4300343990325928
    3. '   ' → logprob: -1.6800343990325928
    4. '
' → logprob: -8.930034637451172
    5. '	for' → logprob: -10.055034637451172
    6. '       ' → logprob: -10.180034637451172
    7. '    
' → logprob: -11.180034637451172
    8. '```' → logprob: -11.180034637451172
    9. 'import' → logprob: -11.555034637451172
    10. ' ' → logprob: -12.180034637451172

Token 893: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00016682932619005442
    2. '   ' → logprob: -9.125166893005371
    3. ' for' → logprob: -9.875166893005371
    4. 'from' → logprob: -12.375166893005371
    5. '
' → logprob: -14.375166893005371
    6. 'import' → logprob: -14.500166893005371
    7. '```' → logprob: -14.500166893005371
    8. 'b' → logprob: -15.125166893005371
    9. '	for' → logprob: -16.500165939331055
    10. 'all' → logprob: -16.625165939331055

Token 894: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.020558468997478485
    2. ' b' → logprob: -3.8955583572387695
    3. '(b' → logprob: -11.77055835723877
    4. 'i' → logprob: -13.14555835723877
    5. '_b' → logprob: -13.39555835723877
    6. ' (' → logprob: -13.77055835723877
    7. 'x' → logprob: -13.77055835723877
    8. '	b' → logprob: -14.39555835723877
    9. '   ' → logprob: -14.52055835723877
    10. ' ' → logprob: -14.77055835723877

Token 895: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8385912179946899
    2. ',k' → logprob: -0.9635912179946899
    3. ' in' → logprob: -1.83859121799469
    4. ' ,' → logprob: -4.3385910987854
    5. 'in' → logprob: -4.7135910987854
    6. ',b' → logprob: -5.8385910987854
    7. ',n' → logprob: -7.7135910987854
    8. ',c' → logprob: -8.213591575622559
    9. ',i' → logprob: -8.213591575622559
    10. ',(' → logprob: -8.338591575622559

Token 896: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14271235466003418
    2. 'in' → logprob: -2.017712354660034
    3. ',' → logprob: -10.767712593078613
    4. ' ' → logprob: -11.517712593078613
    5. '   ' → logprob: -12.517712593078613
    6. '	in' → logprob: -13.767712593078613
    7. '  ' → logprob: -14.642712593078613
    8. ' ,' → logprob: -15.017712593078613
    9. '```' → logprob: -15.517712593078613
    10. '[' → logprob: -15.642712593078613

Token 897: ' buyers' (ID: 25359)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.02325223572552204
    2. ' buyers' → logprob: -3.773252248764038
    3. 'buyer' → logprob: -12.523252487182617
    4. 'buy' → logprob: -13.773252487182617
    5. '[' → logprob: -13.898252487182617
    6. '[b' → logprob: -14.648252487182617
    7. '[(' → logprob: -15.023252487182617
    8. '(b' → logprob: -15.773252487182617
    9. '[c' → logprob: -15.898252487182617
    10. 'b' → logprob: -17.148252487182617

Token 898: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008637731894850731
    2. ':
' → logprob: -4.75863790512085
    3. '   ' → logprob: -11.508637428283691
    4. '[' → logprob: -12.883637428283691
    5. ' :' → logprob: -13.133637428283691
    6. ',' → logprob: -13.258637428283691
    7. '       ' → logprob: -13.508637428283691
    8. '):' → logprob: -13.758637428283691
    9. ':
' → logprob: -13.883637428283691
    10. ' in' → logprob: -14.008637428283691

Token 899: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07182774692773819
    2. '   ' → logprob: -3.1968276500701904
    3. ':' → logprob: -3.8218276500701904
    4. ':
' → logprob: -5.3218278884887695
    5. '[' → logprob: -7.5718278884887695
    6. '```' → logprob: -8.19682788848877
    7. ',' → logprob: -8.44682788848877
    8. ' if' → logprob: -8.69682788848877
    9. '    
' → logprob: -8.82182788848877
    10. '        
' → logprob: -10.19682788848877

Token 900: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10363966226577759
    2. ' if' → logprob: -2.353639602661133
    3. '   ' → logprob: -5.728639602661133
    4. '       ' → logprob: -8.853639602661133
    5. '           ' → logprob: -10.978639602661133
    6. '
' → logprob: -11.603639602661133
    7. ' ' → logprob: -12.853639602661133
    8. '	if' → logprob: -13.103639602661133
    9. 'pos' → logprob: -13.853639602661133
    10. '  ' → logprob: -14.728639602661133

Token 901: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.5985022783279419
    2. 'len' → logprob: -1.223502278327942
    3. ' not' → logprob: -3.0985021591186523
    4. 'b' → logprob: -3.0985021591186523
    5. 'candidate' → logprob: -3.5985021591186523
    6. ' candidate' → logprob: -3.7235021591186523
    7. ' b' → logprob: -5.223502159118652
    8. 'boards' → logprob: -5.473502159118652
    9. ' boards' → logprob: -6.098502159118652
    10. 'not' → logprob: -6.098502159118652

Token 902: '(' (ID: 7)
  Prédit: '(candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(candidate' → logprob: -0.4022042751312256
    2. '(' → logprob: -1.1522042751312256
    3. 'candidate' → logprob: -4.277204513549805
    4. 'boards' → logprob: -7.152204513549805
    5. '(c' → logprob: -7.652204513549805
    6. '(board' → logprob: -10.527204513549805
    7. '(b' → logprob: -11.027204513549805
    8. ' (' → logprob: -11.402204513549805
    9. 'cand' → logprob: -11.902204513549805
    10. 'c' → logprob: -12.152204513549805

Token 903: 'boards' (ID: 28976)
  Prédit: 'boards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boards' → logprob: -0.0018762783147394657
    2. 'candidate' → logprob: -6.501876354217529
    3. ' boards' → logprob: -8.376875877380371
    4. '[' → logprob: -9.751875877380371
    5. 'c' → logprob: -10.001875877380371
    6. 'board' → logprob: -11.501875877380371
    7. '[]' → logprob: -12.126875877380371
    8. ' candidate' → logprob: -12.251875877380371
    9. 'buyers' → logprob: -12.251875877380371
    10. 'b' → logprob: -13.001875877380371

Token 904: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0003258103388361633
    2. 'pos' → logprob: -8.250326156616211
    3. '[b' → logprob: -9.875326156616211
    4. 'b' → logprob: -12.375326156616211
    5. 'Pos' → logprob: -12.500326156616211
    6. '[pos' → logprob: -12.875326156616211
    7. '[' → logprob: -14.625326156616211
    8. '_positions' → logprob: -14.625326156616211
    9. 's' → logprob: -14.750326156616211
    10. 'positions' → logprob: -15.750326156616211

Token 905: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.0445127372804563e-05
    2. 'b' → logprob: -11.50001049041748
    3. ' [' → logprob: -15.75001049041748
    4. '[' → logprob: -17.500009536743164
    5. ')' → logprob: -17.625009536743164
    6. ')[' → logprob: -18.375009536743164
    7. '[c' → logprob: -19.375009536743164
    8. '	b' → logprob: -19.875009536743164
    9. ')b' → logprob: -19.875009536743164
    10. '```' → logprob: -20.125009536743164

Token 906: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.005917065776884556
    2. ')' → logprob: -5.380917072296143
    3. '[b' → logprob: -7.255917072296143
    4. ']==' → logprob: -7.880917072296143
    5. ']' → logprob: -9.630916595458984
    6. ')==' → logprob: -9.755916595458984
    7. '[' → logprob: -10.255916595458984
    8. ' ])' → logprob: -11.130916595458984
    9. ')]' → logprob: -11.630916595458984
    10. 'b' → logprob: -11.755916595458984

Token 907: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31327006220817566
    2. '==' → logprob: -1.313270092010498
    3. ')==' → logprob: -12.68826961517334
    4. ')' → logprob: -13.18826961517334
    5. ']==' → logprob: -13.56326961517334
    6. '()==' → logprob: -14.18826961517334
    7. '[' → logprob: -14.68826961517334
    8. '=' → logprob: -15.06326961517334
    9. '[]' → logprob: -15.56326961517334
    10. '>' → logprob: -15.81326961517334

Token 908: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. '=' → logprob: -20.000911712646484
    4. '   ' → logprob: -21.125911712646484
    5. '۰' → logprob: -21.375911712646484
    6. ' ' → logprob: -21.625911712646484
    7. '```' → logprob: -21.625911712646484
    8. '  ' → logprob: -21.875911712646484
    9. '>' → logprob: -22.125911712646484
    10. ')' → logprob: -22.250911712646484

Token 909: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -22.250003814697266
    4. '```' → logprob: -22.875003814697266
    5. '۰' → logprob: -23.250003814697266
    6. '=' → logprob: -23.250003814697266
    7. '>' → logprob: -23.625003814697266
    8. '  ' → logprob: -23.875003814697266
    9. '０' → logprob: -24.375003814697266
    10. 'zero' → logprob: -24.500003814697266

Token 910: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07148586958646774
    2. ':
' → logprob: -2.696485757827759
    3. '           ' → logprob: -6.821485996246338
    4. '       ' → logprob: -7.821485996246338
    5. '   ' → logprob: -10.19648551940918
    6. ' and' → logprob: -12.32148551940918
    7. ':

' → logprob: -12.44648551940918
    8. '=' → logprob: -12.69648551940918
    9. ' :' → logprob: -13.44648551940918
    10. ':
' → logprob: -13.44648551940918

Token 911: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038746579084545374
    2. '       ' → logprob: -6.003874778747559
    3. ':' → logprob: -7.003874778747559
    4. '   ' → logprob: -8.503874778747559
    5. ' for' → logprob: -9.503874778747559
    6. '```' → logprob: -9.628874778747559
    7. ':
' → logprob: -10.003874778747559
    8. '#' → logprob: -10.878874778747559
    9. '	       ' → logprob: -11.003874778747559
    10. '
' → logprob: -11.003874778747559

Token 912: ' candidates' (ID: 18116)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.5578915476799011
    2. ' candidate' → logprob: -1.432891607284546
    3. ' candidates' → logprob: -2.807891607284546
    4. 'c' → logprob: -3.057891607284546
    5. 'for' → logprob: -3.682891607284546
    6. ' for' → logprob: -3.932891607284546
    7. '           ' → logprob: -4.057891368865967
    8. '       ' → logprob: -5.057891368865967
    9. 'cand' → logprob: -5.432891368865967
    10. '   ' → logprob: -6.182891368865967

Token 913: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016909122467041016
    2. '=' → logprob: -4.141909122467041
    3. ' +=' → logprob: -8.141908645629883
    4. '[' → logprob: -9.016908645629883
    5. '[b' → logprob: -9.141908645629883
    6. '=b' → logprob: -9.141908645629883
    7. '.append' → logprob: -9.391908645629883
    8. '[:]' → logprob: -10.516908645629883
    9. '   ' → logprob: -10.641908645629883
    10. '+=' → logprob: -11.141908645629883

Token 914: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.011048762127757072
    2. '[]' → logprob: -4.511048793792725
    3. '[]

' → logprob: -14.261048316955566
    4. '[' → logprob: -15.261048316955566
    5. '[
' → logprob: -16.261049270629883
    6. '[])
' → logprob: -17.636049270629883
    7. '[(' → logprob: -18.761049270629883
    8. '[c' → logprob: -19.636049270629883
    9. ' []
' → logprob: -19.761049270629883
    10. '   ' → logprob: -20.511049270629883

Token 915: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010891393758356571
    2. ' for' → logprob: -7.626089096069336
    3. 'for' → logprob: -8.126089096069336
    4. '   ' → logprob: -8.501089096069336
    5. '       ' → logprob: -9.501089096069336
    6. '               ' → logprob: -11.126089096069336
    7. '	       ' → logprob: -12.126089096069336
    8. ' ' → logprob: -13.501089096069336
    9. '```' → logprob: -13.501089096069336
    10. '		' → logprob: -13.501089096069336

Token 916: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001637300301808864
    2. '           ' → logprob: -9.125164031982422
    3. ' for' → logprob: -10.500164031982422
    4. 'w' → logprob: -11.250164031982422
    5. 'h' → logprob: -12.125164031982422
    6. 'max' → logprob: -12.375164031982422
    7. 'width' → logprob: -13.375164031982422
    8. 'height' → logprob: -13.375164031982422
    9. 'area' → logprob: -14.375164031982422
    10. '```' → logprob: -15.375164031982422

Token 917: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.022171614691615105
    2. 'y' → logprob: -4.022171497344971
    3. 'h' → logprob: -5.897171497344971
    4. 'w' → logprob: -7.022171497344971
    5. ' x' → logprob: -8.147171974182129
    6. ' y' → logprob: -10.022171974182129
    7. 'height' → logprob: -10.647171974182129
    8. 'width' → logprob: -11.897171974182129
    9. 'hx' → logprob: -13.147171974182129
    10. ' h' → logprob: -13.272171974182129

Token 918: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02854808419942856
    2. '0' → logprob: -3.653548002243042
    3. ' in' → logprob: -6.278548240661621
    4. '_' → logprob: -8.403548240661621
    5. '=' → logprob: -9.528548240661621
    6. ' ' → logprob: -9.903548240661621
    7. 'in' → logprob: -12.028548240661621
    8. '(' → logprob: -12.528548240661621
    9. ' =' → logprob: -12.653548240661621
    10. 'from' → logprob: -13.653548240661621

Token 919: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006723891478031874
    2. 'in' → logprob: -5.006723880767822
    3. 'range' → logprob: -12.50672435760498
    4. ' ' → logprob: -13.88172435760498
    5. 'n' → logprob: -14.00672435760498
    6. '0' → logprob: -14.00672435760498
    7. '```' → logprob: -14.13172435760498
    8. 'In' → logprob: -15.75672435760498
    9. '1' → logprob: -15.88172435760498
    10. 'x' → logprob: -15.88172435760498

Token 920: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10391201078891754
    2. '0' → logprob: -2.353912115097046
    3. ' range' → logprob: -5.603911876678467
    4. ' ' → logprob: -11.103912353515625
    5. 'x' → logprob: -17.353912353515625
    6. ' in' → logprob: -18.103912353515625
    7. 'r' → logprob: -18.103912353515625
    8. 'in' → logprob: -18.228912353515625
    9. '
' → logprob: -18.478912353515625
    10. ' xrange' → logprob: -18.728912353515625

Token 921: '(X' (ID: 17061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03812158480286598
    2. '0' → logprob: -3.5381217002868652
    3. '(X' → logprob: -4.788121700286865
    4. ' (' → logprob: -12.788121223449707
    5. ' ' → logprob: -13.038121223449707
    6. 'X' → logprob: -13.163121223449707
    7. '(x' → logprob: -14.288121223449707
    8. '(
' → logprob: -14.663121223449707
    9. '   ' → logprob: -16.413122177124023
    10. ',' → logprob: -17.788122177124023

Token 922: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2557176947593689
    2. '):' → logprob: -1.5057177543640137
    3. '-' → logprob: -5.880717754364014
    4. '   ' → logprob: -7.630717754364014
    5. ' -' → logprob: -7.880717754364014
    6. '):
' → logprob: -10.130717277526855
    7. ')' → logprob: -10.380717277526855
    8. '       ' → logprob: -11.505717277526855
    9. ' ):
' → logprob: -11.755717277526855
    10. ' ):' → logprob: -12.005717277526855

Token 923: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20048828423023224
    2. ' for' → logprob: -2.325488328933716
    3. 'for' → logprob: -2.575488328933716
    4. '	       ' → logprob: -6.575488090515137
    5. '           ' → logprob: -6.700488090515137
    6. '			' → logprob: -6.825488090515137
    7. '	           ' → logprob: -6.825488090515137
    8. '   ' → logprob: -7.325488090515137
    9. '	for' → logprob: -7.450488090515137
    10. '       ' → logprob: -7.575488090515137

Token 924: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16042925417423248
    2. ' for' → logprob: -1.9104292392730713
    3. '               ' → logprob: -9.160429000854492
    4. 'x' → logprob: -10.160429000854492
    5. '           ' → logprob: -11.035429000854492
    6. '                   ' → logprob: -11.160429000854492
    7. '	for' → logprob: -11.535429000854492
    8. '   ' → logprob: -11.785429000854492
    9. '```' → logprob: -11.910429000854492
    10. '1' → logprob: -13.285429000854492

Token 925: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08780829608440399
    2. ' y' → logprob: -2.71280837059021
    3. 'x' → logprob: -4.087808132171631
    4. '0' → logprob: -7.212808132171631
    5. ' x' → logprob: -8.587808609008789
    6. ' ' → logprob: -11.837808609008789
    7. '1' → logprob: -12.212808609008789
    8. 'Y' → logprob: -14.962808609008789
    9. '	y' → logprob: -14.962808609008789
    10. '   ' → logprob: -15.587808609008789

Token 926: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. 'y' → logprob: -15.750000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '0' → logprob: -16.375
    5. ' y' → logprob: -16.625
    6. '=' → logprob: -16.625
    7. ' in' → logprob: -18.625
    8. '_' → logprob: -18.75
    9. '   ' → logprob: -18.75
    10. ')' → logprob: -19.25

Token 927: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011048528365790844
    2. 'in' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.886048316955566
    4. 'range' → logprob: -16.261049270629883
    5. '	in' → logprob: -16.636049270629883
    6. '```' → logprob: -16.636049270629883
    7. '               ' → logprob: -16.636049270629883
    8. 'In' → logprob: -17.011049270629883
    9. '(' → logprob: -17.136049270629883
    10. '0' → logprob: -17.261049270629883

Token 928: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011289720423519611
    2. ' range' → logprob: -4.511289596557617
    3. '0' → logprob: -9.136289596557617
    4. '(range' → logprob: -9.261289596557617
    5. 'Y' → logprob: -10.386289596557617
    6. '(Y' → logprob: -12.136289596557617
    7. 'Range' → logprob: -13.261289596557617
    8. '_range' → logprob: -15.011289596557617
    9. '	range' → logprob: -15.011289596557617
    10. '(' → logprob: -15.136289596557617

Token 929: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.16024646162986755
    2. 'Y' → logprob: -1.91024649143219
    3. '(' → logprob: -11.410246849060059
    4. '                   ' → logprob: -13.035246849060059
    5. '           ' → logprob: -13.535246849060059
    6. '               ' → logprob: -13.535246849060059
    7. '(X' → logprob: -13.660246849060059
    8. '[Y' → logprob: -13.660246849060059
    9. ' Y' → logprob: -14.285246849060059
    10. '   ' → logprob: -14.285246849060059

Token 930: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03516523540019989
    2. '):' → logprob: -4.035165309906006
    3. '                   ' → logprob: -4.785165309906006
    4. '               ' → logprob: -5.285165309906006
    5. ':' → logprob: -6.785165309906006
    6. ',' → logprob: -7.035165309906006
    7. ':
' → logprob: -7.410165309906006
    8. '                       ' → logprob: -8.285164833068848
    9. '           ' → logprob: -9.410164833068848
    10. '):
' → logprob: -9.535164833068848

Token 931: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0008824035176075995
    2. ' for' → logprob: -8.500882148742676
    3. 'for' → logprob: -8.625882148742676
    4. '		           ' → logprob: -8.625882148742676
    5. '                           ' → logprob: -9.375882148742676
    6. '                       ' → logprob: -9.875882148742676
    7. '   ' → logprob: -10.125882148742676
    8. '               ' → logprob: -10.500882148742676
    9. '```' → logprob: -10.625882148742676
    10. '			       ' → logprob: -11.250882148742676

Token 932: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6895055174827576
    2. 'for' (adapté à ' for') → logprob: -1.1895055770874023
    3. '                   ' → logprob: -1.6895055770874023
    4. '               ' → logprob: -5.564505577087402
    5. '                       ' → logprob: -6.314505577087402
    6. ' x' → logprob: -6.939505577087402
    7. 'x' → logprob: -7.064505577087402
    8. '```' → logprob: -7.189505577087402
    9. '                    ' → logprob: -8.189505577087402
    10. '	for' → logprob: -9.314505577087402

Token 933: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006198130082339048
    2. ' x' → logprob: -5.131197929382324
    3. 'w' → logprob: -8.256197929382324
    4. 'width' → logprob: -12.381197929382324
    5. '_x' → logprob: -13.131197929382324
    6. ' w' → logprob: -13.631197929382324
    7. 'h' → logprob: -14.381197929382324
    8. '	x' → logprob: -14.381197929382324
    9. '(x' → logprob: -15.381197929382324
    10. ',x' → logprob: -15.881197929382324

Token 934: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008052219054661691
    2. '1' → logprob: -7.125805377960205
    3. '```' → logprob: -14.375804901123047
    4. '₂' → logprob: -16.875804901123047
    5. '``' → logprob: -17.500804901123047
    6. '_' → logprob: -17.750804901123047
    7. 'range' → logprob: -18.375804901123047
    8. '
' → logprob: -19.000804901123047
    9. ' in' → logprob: -19.063304901123047
    10. '   ' → logprob: -19.313304901123047

Token 935: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00975998304784298
    2. 'in' → logprob: -4.634759902954102
    3. 'range' → logprob: -13.259759902954102
    4. 'x' → logprob: -14.009759902954102
    5. ' ' → logprob: -14.259759902954102
    6. 'In' → logprob: -14.509759902954102
    7. '<|end|>' → logprob: -16.6347599029541
    8. '```' → logprob: -17.2597599029541
    9. 'y' → logprob: -17.6347599029541
    10. 's' → logprob: -17.6347599029541

Token 936: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031777136027812958
    2. ' range' → logprob: -5.753177642822266
    3. '(range' → logprob: -17.003177642822266
    4. 'x' → logprob: -19.503177642822266
    5. 'in' → logprob: -21.378177642822266
    6. '	range' → logprob: -22.003177642822266
    7. 'ran' → logprob: -22.378177642822266
    8. '(x' → logprob: -23.128177642822266
    9. 'rang' → logprob: -23.128177642822266
    10. '[x' → logprob: -23.128177642822266

Token 937: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.018240200355648994
    2. 'x' → logprob: -4.018239974975586
    3. '(y' → logprob: -10.018239974975586
    4. '(' → logprob: -11.018239974975586
    5. 'range' → logprob: -11.143239974975586
    6. ' x' → logprob: -12.018239974975586
    7. ' (' → logprob: -12.268239974975586
    8. '(range' → logprob: -13.643239974975586
    9. '[x' → logprob: -14.143239974975586
    10. '=x' → logprob: -14.518239974975586

Token 938: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. '2' → logprob: -11.375012397766113
    3. '```' → logprob: -14.500012397766113
    4. 'range' → logprob: -16.625011444091797
    5. '``' → logprob: -17.000011444091797
    6. '[x' → logprob: -17.625011444091797
    7. ')' → logprob: -17.812511444091797
    8. '[' → logprob: -18.062511444091797
    9. '[y' → logprob: -18.187511444091797
    10. '`' → logprob: -18.375011444091797

Token 939: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010096615180373192
    2. ',X' → logprob: -4.635096549987793
    3. ' ,' → logprob: -9.135096549987793
    4. ',x' → logprob: -9.135096549987793
    5. ',Y' → logprob: -9.260096549987793
    6. '+' → logprob: -11.135096549987793
    7. '   ' → logprob: -12.385096549987793
    8. '```' → logprob: -12.635096549987793
    9. ',y' → logprob: -12.885096549987793
    10. '       ' → logprob: -14.260096549987793

Token 940: ' X' (ID: 2127)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.0010998494690284133
    2. 'X' → logprob: -7.126100063323975
    3. 'y' → logprob: -8.626099586486816
    4. ' Y' → logprob: -9.501099586486816
    5. 'x' → logprob: -10.126099586486816
    6. ' y' → logprob: -14.001099586486816
    7. '0' → logprob: -16.126100540161133
    8. '	Y' → logprob: -16.501100540161133
    9. ')' → logprob: -17.001100540161133
    10. ' X' → logprob: -17.126100540161133

Token 941: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6332077383995056
    2. '):' → logprob: -0.7582077383995056
    3. '):
' → logprob: -7.88320779800415
    4. '   ' → logprob: -9.758207321166992
    5. '):

' → logprob: -10.133207321166992
    6. ')' → logprob: -10.258207321166992
    7. '                           ' → logprob: -10.883207321166992
    8. '                       ' → logprob: -10.883207321166992
    9. '                   ' → logprob: -11.133207321166992
    10. '       ' → logprob: -11.508207321166992

Token 942: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00563402846455574
    2. '                           ' → logprob: -6.50563383102417
    3. '                               ' → logprob: -6.75563383102417
    4. '                        ' → logprob: -7.13063383102417
    5. '                        
' → logprob: -8.005634307861328
    6. '                   ' → logprob: -8.380634307861328
    7. '<|end|>' → logprob: -8.380634307861328
    8. '					' → logprob: -9.005634307861328
    9. '               ' → logprob: -9.130634307861328
    10. '       ' → logprob: -9.130634307861328

Token 943: ' for' (ID: 395)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3605169951915741
    2. 'for' (adapté à ' for') → logprob: -1.4855170249938965
    3. ' for' → logprob: -2.7355170249938965
    4. '                               ' → logprob: -5.2355170249938965
    5. 'if' → logprob: -5.8605170249938965
    6. ' if' → logprob: -6.1105170249938965
    7. '                            ' → logprob: -8.110516548156738
    8. '                       ' → logprob: -8.235516548156738
    9. '           ' → logprob: -9.360516548156738
    10. ' ' → logprob: -9.360516548156738

Token 944: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011047935113310814
    2. ' y' → logprob: -4.511047840118408
    3. '	y' → logprob: -16.38604736328125
    4. 'x' → logprob: -17.26104736328125
    5. '_y' → logprob: -18.26104736328125
    6. ''y' → logprob: -19.01104736328125
    7. '(y' → logprob: -19.51104736328125
    8. ',y' → logprob: -19.76104736328125
    9. '```' → logprob: -20.13604736328125
    10. ')y' → logprob: -20.13604736328125

Token 945: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. '1' → logprob: -12.500006675720215
    3. '₂' → logprob: -13.250006675720215
    4. '```' → logprob: -14.625006675720215
    5. '=' → logprob: -16.2500057220459
    6. 'in' → logprob: -16.6250057220459
    7. '   ' → logprob: -16.8750057220459
    8. ' in' → logprob: -17.0000057220459
    9. 'def' → logprob: -17.7500057220459
    10. '<|end|>' → logprob: -18.0000057220459

Token 946: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693031132221222
    2. 'in' → logprob: -2.1269302368164062
    3. '```' → logprob: -13.876930236816406
    4. 'In' → logprob: -14.501930236816406
    5. 'y' → logprob: -15.501930236816406
    6. 'n' → logprob: -16.376930236816406
    7. ' ' → logprob: -16.501930236816406
    8. 'int' → logprob: -17.126930236816406
    9. '	in' → logprob: -17.126930236816406
    10. 'range' → logprob: -17.251930236816406

Token 947: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015584280481562018
    2. ' range' → logprob: -6.501558303833008
    3. 'y' → logprob: -10.251558303833008
    4. '(y' → logprob: -11.001558303833008
    5. '(range' → logprob: -12.876558303833008
    6. ' y' → logprob: -13.376558303833008
    7. '[y' → logprob: -18.251558303833008
    8. '_range' → logprob: -18.251558303833008
    9. 'Range' → logprob: -18.251558303833008
    10. '	range' → logprob: -18.876558303833008

Token 948: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0032392668072134256
    2. 'y' → logprob: -5.753239154815674
    3. '                       ' → logprob: -10.628239631652832
    4. '(' → logprob: -11.378239631652832
    5. ' y' → logprob: -11.628239631652832
    6. '[y' → logprob: -12.628239631652832
    7. '(x' → logprob: -12.753239631652832
    8. '                   ' → logprob: -13.378239631652832
    9. '=y' → logprob: -13.503239631652832
    10. 'x' → logprob: -13.628239631652832

Token 949: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5759493708610535
    2. '2' → logprob: -0.8259493708610535
    3. '```' → logprob: -12.325949668884277
    4. '=y' → logprob: -13.325949668884277
    5. ')' → logprob: -13.450949668884277
    6. '=' → logprob: -15.075949668884277
    7. 'Let's' → logprob: -15.513449668884277
    8. '   ' → logprob: -15.638449668884277
    9. '``' → logprob: -15.700949668884277
    10. '₂' → logprob: -15.825949668884277

Token 950: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.935296834039036e-06
    2. ',Y' → logprob: -13.00000286102295
    3. ' ,' → logprob: -15.00000286102295
    4. ',X' → logprob: -15.25000286102295
    5. 'Y' → logprob: -17.625003814697266
    6. '2' → logprob: -17.750003814697266
    7. ',y' → logprob: -18.125003814697266
    8. '_,' → logprob: -18.625003814697266
    9. '',' → logprob: -19.125003814697266
    10. ')' → logprob: -19.500003814697266

Token 951: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -3.130576806142926e-05
    2. ' Y' → logprob: -10.375031471252441
    3. '	Y' → logprob: -17.000030517578125
    4. '                       ' → logprob: -18.000030517578125
    5. ',Y' → logprob: -18.375030517578125
    6. 'y' → logprob: -18.500030517578125
    7. '0' → logprob: -18.500030517578125
    8. '                   ' → logprob: -18.625030517578125
    9. '```' → logprob: -18.750030517578125
    10. '(Y' → logprob: -19.000030517578125

Token 952: '):
' (ID: 1883)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.045580167323350906
    2. '):
' → logprob: -4.0455803871154785
    3. '):' → logprob: -4.4205803871154785
    4. ':' → logprob: -4.4205803871154785
    5. ':
' → logprob: -6.5455803871154785
    6. '                               ' → logprob: -7.6705803871154785
    7. '                       ' → logprob: -8.17057991027832
    8. '                            ' → logprob: -8.54557991027832
    9. '           ' → logprob: -8.79557991027832
    10. '						' → logprob: -9.79557991027832

Token 953: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.002342469524592161
    2. '                               ' → logprob: -6.377342700958252
    3. '                            ' → logprob: -8.252342224121094
    4. '						' → logprob: -8.502342224121094
    5. '                             ' → logprob: -9.752342224121094
    6. '             ' → logprob: -11.002342224121094
    7. '	                       ' → logprob: -11.127342224121094
    8. '                          ' → logprob: -11.502342224121094
    9. '                         ' → logprob: -11.502342224121094
    10. '							' → logprob: -11.752342224121094

Token 954: ' w' (ID: 286)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.5685716867446899
    2. ' w' → logprob: -1.44357168674469
    3. 'w' (adapté à ' w') → logprob: -2.0685715675354004
    4. ' if' → logprob: -3.4435715675354004
    5. '                           ' → logprob: -3.4435715675354004
    6. '							' → logprob: -6.3185715675354
    7. '                            ' → logprob: -6.6935715675354
    8. 'if' → logprob: -6.8185715675354
    9. '               ' → logprob: -7.1935715675354
    10. '                                   ' → logprob: -7.3185715675354

Token 955: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020546091720461845
    2. '=' → logprob: -3.8955461978912354
    3. '=w' → logprob: -12.520545959472656
    4. ' ' → logprob: -15.145545959472656
    5. 'w' → logprob: -16.020545959472656
    6. '	' → logprob: -16.270545959472656
    7. ',' → logprob: -17.645545959472656
    8. '```' → logprob: -17.770545959472656
    9. ' =
' → logprob: -17.895545959472656
    10. ')' → logprob: -17.895545959472656

Token 956: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0015239100903272629
    2. ' x' → logprob: -6.501523971557617
    3. '(x' → logprob: -10.751523971557617
    4. ' (' → logprob: -16.751523971557617
    5. '	x' → logprob: -17.251523971557617
    6. '"x' → logprob: -17.876523971557617
    7. '{x' → logprob: -18.376523971557617
    8. '```' → logprob: -19.501523971557617
    9. 'y' → logprob: -19.626523971557617
    10. ''x' → logprob: -19.751523971557617

Token 957: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5094070477061905e-05
    2. '₂' → logprob: -11.625015258789062
    3. '_' → logprob: -12.625015258789062
    4. '```' → logprob: -13.375015258789062
    5. '۲' → logprob: -15.375015258789062
    6. '[' → logprob: -15.500015258789062
    7. ' ' → logprob: -15.500015258789062
    8. '' → logprob: -16.000015258789062
    9. '`' → logprob: -16.000015258789062
    10. 'x' → logprob: -16.000015258789062

Token 958: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10020667314529419
    2. '-' → logprob: -2.3502066135406494
    3. ' -
' → logprob: -17.35020637512207
    4. '-
' → logprob: -18.22520637512207
    5. '-w' → logprob: -18.97520637512207
    6. '−' → logprob: -19.10020637512207
    7. ' ' → logprob: -19.22520637512207
    8. ' ' → logprob: -19.47520637512207
    9. '-x' → logprob: -19.60020637512207
    10. '	' → logprob: -19.85020637512207

Token 959: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001398929744027555
    2. ' x' → logprob: -8.875140190124512
    3. '	x' → logprob: -18.375139236450195
    4. '"x' → logprob: -18.500139236450195
    5. '{x' → logprob: -18.875139236450195
    6. ')x' → logprob: -19.250139236450195
    7. '$x' → logprob: -19.625139236450195
    8. '1' → logprob: -19.625139236450195
    9. '(x' → logprob: -20.250139236450195
    10. '<|end|>' → logprob: -20.250139236450195

Token 960: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001655898173339665
    2. '2' → logprob: -6.5016560554504395
    3. ' ' → logprob: -8.876655578613281
    4. '```' → logprob: -11.501655578613281
    5. '_' → logprob: -13.876655578613281
    6. '+' → logprob: -14.251655578613281
    7. '{' → logprob: -14.501655578613281
    8. '`' → logprob: -15.001655578613281
    9. 'x' → logprob: -15.126655578613281
    10. '   ' → logprob: -15.376655578613281

Token 961: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.575939953327179
    2. '+' → logprob: -0.825939953327179
    3. ' +
' → logprob: -14.950940132141113
    4. '+
' → logprob: -15.700940132141113
    5. '＋' → logprob: -17.450939178466797
    6. ' ' → logprob: -18.575939178466797
    7. ' plus' → logprob: -18.575939178466797
    8. ' ' → logprob: -18.700939178466797
    9. '1' → logprob: -18.825939178466797
    10. '()+' → logprob: -19.075939178466797

Token 962: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '```' → logprob: -18.625024795532227
    4. '<|end|>' → logprob: -20.625024795532227
    5. '`' → logprob: -21.500024795532227
    6. '+' → logprob: -21.500024795532227
    7. '۱' → logprob: -21.750024795532227
    8. '' → logprob: -21.875024795532227
    9. '0' → logprob: -22.375024795532227
    10. '   ' → logprob: -23.562524795532227

Token 963: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -18.375
    4. '+' → logprob: -19.875
    5. '<|end|>' → logprob: -19.875
    6. '0' → logprob: -20.875
    7. '`' → logprob: -22.0
    8. '۱' → logprob: -22.25
    9. '' → logprob: -23.125
    10. '=' → logprob: -23.125

Token 964: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0026315422728657722
    2. '                               ' → logprob: -6.877631664276123
    3. '                            ' → logprob: -7.127631664276123
    4. '<|end|>' → logprob: -8.502631187438965
    5. '                       ' → logprob: -8.877631187438965
    6. '```' → logprob: -9.377631187438965
    7. 'if' → logprob: -9.627631187438965
    8. '           ' → logprob: -9.877631187438965
    9. '                            
' → logprob: -10.377631187438965
    10. '                             ' → logprob: -10.502631187438965

Token 965: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0006445261533372104
    2. '                               ' → logprob: -8.12564468383789
    3. '                            ' → logprob: -8.87564468383789
    4. ' if' → logprob: -9.37564468383789
    5. 'if' → logprob: -10.37564468383789
    6. '                       ' → logprob: -10.75064468383789
    7. '						' → logprob: -11.25064468383789
    8. '```' → logprob: -11.50064468383789
    9. '	                       ' → logprob: -11.62564468383789
    10. '           ' → logprob: -11.75064468383789

Token 966: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -1.259079363080673e-05
    2. ' h' → logprob: -11.875012397766113
    3. '                           ' → logprob: -12.500012397766113
    4. '                               ' → logprob: -14.000012397766113
    5. '                                   ' → logprob: -14.500012397766113
    6. '```' → logprob: -14.875012397766113
    7. '	h' → logprob: -16.37501335144043
    8. '                            ' → logprob: -17.50001335144043
    9. 'if' → logprob: -17.87501335144043
    10. 'area' → logprob: -18.00001335144043

Token 967: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4753057658672333
    2. ' =' → logprob: -0.9753057956695557
    3. '<|end|>' → logprob: -7.850305557250977
    4. '```' → logprob: -7.975305557250977
    5. '                           ' → logprob: -8.725305557250977
    6. '==' → logprob: -10.100305557250977
    7. 'for' → logprob: -10.100305557250977
    8. ' ==' → logprob: -10.100305557250977
    9. ' in' → logprob: -10.225305557250977
    10. ')' → logprob: -10.475305557250977

Token 968: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.000553151941858232
    2. ' y' → logprob: -7.500553131103516
    3. '(y' → logprob: -16.375553131103516
    4. '	y' → logprob: -16.500553131103516
    5. ''y' → logprob: -18.750553131103516
    6. '‘y' → logprob: -19.250553131103516
    7. '[y' → logprob: -19.750553131103516
    8. 'yj' → logprob: -20.125553131103516
    9. '*y' → logprob: -20.375553131103516
    10. '=y' → logprob: -20.500553131103516

Token 969: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '₂' → logprob: -16.375
    3. '```' → logprob: -17.0
    4. ' ' → logprob: -17.0
    5. '-' → logprob: -17.5
    6. '[y' → logprob: -17.5
    7. 'y' → logprob: -17.625
    8. '(y' → logprob: -18.625
    9. '   ' → logprob: -18.875
    10. '[' → logprob: -19.25

Token 970: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16022665798664093
    2. '-' → logprob: -1.9102267026901245
    3. '[' → logprob: -14.035226821899414
    4. '```' → logprob: -14.535226821899414
    5. '<|end|>' → logprob: -15.285226821899414
    6. '+' → logprob: -15.410226821899414
    7. ' ' → logprob: -15.785226821899414
    8. '–' → logprob: -16.285226821899414
    9. '==' → logprob: -16.660226821899414
    10. ' ' → logprob: -16.910226821899414

Token 971: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.623244553338736e-05
    2. ' y' → logprob: -9.625065803527832
    3. '	y' → logprob: -17.25006675720215
    4. '(y' → logprob: -18.25006675720215
    5. ''y' → logprob: -18.25006675720215
    6. ')y' → logprob: -18.87506675720215
    7. '=y' → logprob: -19.12506675720215
    8. '1' → logprob: -19.25006675720215
    9. 'yj' → logprob: -19.25006675720215
    10. '‘y' → logprob: -19.50006675720215

Token 972: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016038941219449043
    2. '2' → logprob: -4.14103889465332
    3. '+' → logprob: -12.26603889465332
    4. '-' → logprob: -17.14103889465332
    5. '0' → logprob: -17.89103889465332
    6. '```' → logprob: -17.89103889465332
    7. ' ' → logprob: -18.51603889465332
    8. '
' → logprob: -19.14103889465332
    9. '   ' → logprob: -19.89103889465332
    10. '9' → logprob: -20.07853889465332

Token 973: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931480169296265
    2. ' +' → logprob: -0.6931480169296265
    3. ' +
' → logprob: -15.318147659301758
    4. ' ' → logprob: -15.568147659301758
    5. '+
' → logprob: -16.068147659301758
    6. ' ' → logprob: -16.568147659301758
    7. '1' → logprob: -16.943147659301758
    8. '-' → logprob: -16.943147659301758
    9. '```' → logprob: -16.943147659301758
    10. '+=' → logprob: -17.193147659301758

Token 974: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009591046255081892
    2. ' ' → logprob: -7.0009589195251465
    3. 'h' → logprob: -10.000959396362305
    4. ' h' → logprob: -13.375959396362305
    5. 'y' → logprob: -15.375959396362305
    6. '0' → logprob: -15.500959396362305
    7. '(' → logprob: -15.750959396362305
    8. '(h' → logprob: -17.000959396362305
    9. ' y' → logprob: -17.375959396362305
    10. '(y' → logprob: -17.750959396362305

Token 975: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '2' → logprob: -13.750000953674316
    3. ' ' → logprob: -16.375001907348633
    4. '0' → logprob: -17.500001907348633
    5. 'y' → logprob: -19.000001907348633
    6. '```' → logprob: -19.500001907348633
    7. 'h' → logprob: -20.500001907348633
    8. '
' → logprob: -20.625001907348633
    9. '(' → logprob: -20.750001907348633
    10. 'x' → logprob: -20.875001907348633

Token 976: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.4034551680088043
    2. '                               ' → logprob: -1.153455138206482
    3. '                            ' → logprob: -5.2784552574157715
    4. ' if' → logprob: -6.4034552574157715
    5. ' ' → logprob: -6.5284552574157715
    6. '                             ' → logprob: -6.6534552574157715
    7. '               ' → logprob: -6.7784552574157715
    8. '                       ' → logprob: -6.9034552574157715
    9. 'if' → logprob: -7.2784552574157715
    10. '                              ' → logprob: -7.5284552574157715

Token 977: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.005409372970461845
    2. '                               ' → logprob: -5.380409240722656
    3. '                            ' → logprob: -7.630409240722656
    4. ' if' → logprob: -8.630409240722656
    5. '                             ' → logprob: -10.630409240722656
    6. '                       ' → logprob: -10.755409240722656
    7. '           ' → logprob: -10.880409240722656
    8. '						' → logprob: -11.380409240722656
    9. 'if' → logprob: -12.005409240722656
    10. '                          ' → logprob: -12.130409240722656

Token 978: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3163143992424011
    2. 'if' (adapté à ' if') → logprob: -2.066314458847046
    3. '                               ' → logprob: -2.191314458847046
    4. '                           ' → logprob: -3.566314458847046
    5. '                            ' → logprob: -6.441314220428467
    6. '                             ' → logprob: -6.941314220428467
    7. '                                   ' → logprob: -7.191314220428467
    8. '                              ' → logprob: -8.441314697265625
    9. '```' → logprob: -8.566314697265625
    10. '               ' → logprob: -9.066314697265625

Token 979: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005234475247561932
    2. ' w' → logprob: -5.255234241485596
    3. '	w' → logprob: -15.005234718322754
    4. '(w' → logprob: -15.255234718322754
    5. '   ' → logprob: -16.755233764648438
    6. '(' → logprob: -16.755233764648438
    7. ' ' → logprob: -18.130233764648438
    8. ' ' → logprob: -18.380233764648438
    9. '_w' → logprob: -19.005233764648438
    10. '    ' → logprob: -19.005233764648438

Token 980: '*h' (ID: 139295)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8621730804443359
    2. ' *' → logprob: -0.8621730804443359
    3. '*h' → logprob: -1.862173080444336
    4. '*w' → logprob: -9.487173080444336
    5. '*v' → logprob: -10.612173080444336
    6. '*y' → logprob: -10.987173080444336
    7. '**' → logprob: -11.237173080444336
    8. '*u' → logprob: -11.987173080444336
    9. '*p' → logprob: -12.112173080444336
    10. '*s' → logprob: -12.362173080444336

Token 981: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03804333135485649
    2. ' ==' → logprob: -3.288043260574341
    3. '=' → logprob: -13.413043022155762
    4. '==
' → logprob: -15.788043022155762
    5. ')==' → logprob: -16.288043975830078
    6. '===' → logprob: -16.413043975830078
    7. ']==' → logprob: -17.163043975830078
    8. '!=' → logprob: -18.288043975830078
    9. '()==' → logprob: -18.413043975830078
    10. '<=' → logprob: -18.538043975830078

Token 982: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015023599844425917
    2. ' k' → logprob: -6.501502513885498
    3. '	k' → logprob: -18.501502990722656
    4. '{k' → logprob: -20.126502990722656
    5. ' ' → logprob: -20.376502990722656
    6. '=k' → logprob: -21.251502990722656
    7. '"k' → logprob: -21.251502990722656
    8. '_k' → logprob: -21.251502990722656
    9. '   ' → logprob: -21.376502990722656
    10. '```' → logprob: -21.376502990722656

Token 983: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014020462520420551
    2. ':
' → logprob: -4.8890204429626465
    3. ' and' → logprob: -5.2640204429626465
    4. '                           ' → logprob: -7.2640204429626465
    5. '                               ' → logprob: -7.7640204429626465
    6. '):' → logprob: -10.264020919799805
    7. 'and' → logprob: -10.764020919799805
    8. ' :' → logprob: -11.264020919799805
    9. '                                   ' → logprob: -12.639020919799805
    10. ':
' → logprob: -12.764020919799805

Token 984: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.004811492282897234
    2. ':' → logprob: -5.6298112869262695
    3. '                           ' → logprob: -7.1298112869262695
    4. ':
' → logprob: -9.25481128692627
    5. ',' → logprob: -9.50481128692627
    6. '                                   ' → logprob: -9.62981128692627
    7. '                                
' → logprob: -10.00481128692627
    8. '                              ' → logprob: -10.62981128692627
    9. '               ' → logprob: -10.75481128692627
    10. ' and' → logprob: -11.00481128692627

Token 985: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03000803105533123
    2. ' candidates' → logprob: -3.53000807762146
    3. '                               ' → logprob: -8.530008316040039
    4. '                                   ' → logprob: -10.280008316040039
    5. '   ' → logprob: -11.280008316040039
    6. '                           ' → logprob: -12.405008316040039
    7. '_candidates' → logprob: -13.155008316040039
    8. 'candidate' → logprob: -13.530008316040039
    9. '               ' → logprob: -14.030008316040039
    10. '	c' → logprob: -14.155008316040039

Token 986: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014181245118379593
    2. '.' → logprob: -4.264181137084961
    3. '.app' → logprob: -11.764181137084961
    4. ' .' → logprob: -12.139181137084961
    5. '.ap' → logprob: -13.139181137084961
    6. '.Append' → logprob: -14.389181137084961
    7. '.add' → logprob: -14.389181137084961
    8. '                                   ' → logprob: -14.764181137084961
    9. '                               ' → logprob: -14.889181137084961
    10. 'append' → logprob: -15.389181137084961

Token 987: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009301604703068733
    2. '((' → logprob: -5.259301662445068
    3. ' (' → logprob: -5.509301662445068
    4. ' ((' → logprob: -11.50930118560791
    5. '(x' → logprob: -14.38430118560791
    6. '(
' → logprob: -18.759302139282227
    7. '```' → logprob: -20.009302139282227
    8. '   ' → logprob: -20.759302139282227
    9. ',' → logprob: -20.884302139282227
    10. ' ' → logprob: -21.384302139282227

Token 988: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.988221684878226e-06
    2. ' x' → logprob: -11.875006675720215
    3. ')x' → logprob: -18.62500762939453
    4. '	x' → logprob: -20.37500762939453
    5. '(x' → logprob: -20.75000762939453
    6. '"x' → logprob: -21.12500762939453
    7. '{x' → logprob: -21.75000762939453
    8. '_x' → logprob: -22.37500762939453
    9. '```' → logprob: -22.37500762939453
    10. ',x' → logprob: -22.75000762939453

Token 989: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ',' → logprob: -15.250000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '<|end|>' → logprob: -16.25
    5. '```' → logprob: -16.625
    6. '_' → logprob: -17.0
    7. '{' → logprob: -18.875
    8. '[' → logprob: -19.0
    9. 'x' → logprob: -19.0625
    10. '   ' → logprob: -19.25

Token 990: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.011079183779656887
    2. ',' → logprob: -4.51107931137085
    3. ' ,' → logprob: -10.386078834533691
    4. ',
' → logprob: -15.011078834533691
    5. ',Y' → logprob: -17.636079788208008
    6. ',user' → logprob: -17.636079788208008
    7. ',b' → logprob: -17.761079788208008
    8. ',v' → logprob: -18.011079788208008
    9. ',w' → logprob: -18.136079788208008
    10. 'y' → logprob: -18.386079788208008

Token 991: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. 'y' → logprob: -13.375001907348633
    3. '2' → logprob: -15.250001907348633
    4. ',y' → logprob: -15.375001907348633
    5. '<|end|>' → logprob: -16.125001907348633
    6. ',' → logprob: -17.000001907348633
    7. '```' → logprob: -17.500001907348633
    8. ')' → logprob: -18.500001907348633
    9. '[' → logprob: -18.875001907348633
    10. ')y' → logprob: -19.000001907348633

Token 992: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.0006340435356833041
    2. ',' → logprob: -7.37563419342041
    3. ' ,' → logprob: -12.12563419342041
    4. 'x' → logprob: -13.37563419342041
    5. ',
' → logprob: -14.75063419342041
    6. ',y' → logprob: -17.000633239746094
    7. ',c' → logprob: -17.625633239746094
    8. '
' → logprob: -19.125633239746094
    9. ',\
' → logprob: -19.125633239746094
    10. ',t' → logprob: -19.375633239746094

Token 993: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.625
    3. '```' → logprob: -16.875
    4. ',x' → logprob: -18.5
    5. '₂' → logprob: -18.5
    6. 't' → logprob: -18.75
    7. '۲' → logprob: -19.0625
    8. 'w' → logprob: -19.25
    9. 'x' → logprob: -19.25
    10. ',' → logprob: -19.5

Token 994: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -1.4021237802808173e-05
    2. ',' → logprob: -11.250014305114746
    3. 'y' → logprob: -14.125014305114746
    4. ',
' → logprob: -15.500014305114746
    5. ' ,' → logprob: -16.37501335144043
    6. ',b' → logprob: -19.87501335144043
    7. '```' → logprob: -20.25001335144043
    8. ',x' → logprob: -20.62501335144043
    9. ',Y' → logprob: -20.62501335144043
    10. '	y' → logprob: -20.75001335144043

Token 995: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -14.750000953674316
    3. '```' → logprob: -16.625
    4. '۲' → logprob: -16.875
    5. ' ' → logprob: -17.0
    6. 'y' → logprob: -17.25
    7. '₂' → logprob: -17.375
    8. '২' → logprob: -18.5625
    9. '２' → logprob: -18.8125
    10. '
' → logprob: -19.0

Token 996: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10022662580013275
    2. ')' → logprob: -2.350226640701294
    3. '))
' → logprob: -10.975226402282715
    4. ')
' → logprob: -13.225226402282715
    5. ')))' → logprob: -14.975226402282715
    6. ' ))' → logprob: -15.225226402282715
    7. ')}' → logprob: -15.850226402282715
    8. ' )' → logprob: -16.47522735595703
    9. '})' → logprob: -17.10022735595703
    10. '),' → logprob: -17.10022735595703

Token 997: '           ' (ID: 352)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.691954493522644
    2. '   ' → logprob: -0.816954493522644
    3. ' candidate' → logprob: -3.6919546127319336
    4. '           ' → logprob: -4.441954612731934
    5. '```' → logprob: -4.566954612731934
    6. '       ' → logprob: -5.816954612731934
    7. '
' → logprob: -6.191954612731934
    8. '                           ' → logprob: -6.691954612731934
    9. '               ' → logprob: -6.941954612731934
    10. ')' → logprob: -7.066954612731934

Token 998: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' (adapté à ' candidate') → logprob: -0.00013131031300872564
    2. '           ' → logprob: -9.625131607055664
    3. '   ' → logprob: -10.250131607055664
    4. ' candidate' → logprob: -10.500131607055664
    5. 'for' → logprob: -13.625131607055664
    6. '       ' → logprob: -14.125131607055664
    7. '(candidate' → logprob: -16.250131607055664
    8. '
' → logprob: -16.875131607055664
    9. '```' → logprob: -17.125131607055664
    10. '               ' → logprob: -17.375131607055664

Token 999: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -7.994086627149954e-05
    2. 's' → logprob: -9.625080108642578
    3. '_s' → logprob: -11.750080108642578
    4. '_' → logprob: -12.750080108642578
    5. '_rectangle' → logprob: -13.375080108642578
    6. '_candidates' → logprob: -15.000080108642578
    7. '_rec' → logprob: -15.500080108642578
    8. 'rect' → logprob: -15.625080108642578
    9. '_res' → logprob: -16.500080108642578
    10. '```' → logprob: -16.875080108642578

Token 1000: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -3.845798710244708e-05
    2. 'ang' → logprob: -10.500038146972656
    3. 'anges' → logprob: -12.375038146972656
    4. 'angle' → logprob: -12.750038146972656
    5. '_angles' → logprob: -13.500038146972656
    6. 'ANGLES' → logprob: -14.375038146972656
    7. 's' → logprob: -14.875038146972656
    8. 'les' → logprob: -15.000038146972656
    9. 'ables' → logprob: -15.750038146972656
    10. 'icles' → logprob: -15.750038146972656

Token 1001: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0014799826312810183
    2. '[' → logprob: -7.0014801025390625
    3. '[c' → logprob: -8.126480102539062
    4. 'b' → logprob: -8.751480102539062
    5. '[user' → logprob: -10.626480102539062
    6. '.setdefault' → logprob: -10.751480102539062
    7. '```' → logprob: -11.001480102539062
    8. ')[' → logprob: -12.251480102539062
    9. '][' → logprob: -12.626480102539062
    10. '<|end|>' → logprob: -12.626480102539062

Token 1002: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18290838599205017
    2. ']=' → logprob: -2.557908296585083
    3. '=' → logprob: -3.182908296585083
    4. '[b' → logprob: -3.557908296585083
    5. ')' → logprob: -4.557908535003662
    6. '=b' → logprob: -4.932908535003662
    7. ')=' → logprob: -6.932908535003662
    8. '[' → logprob: -7.682908535003662
    9. ' =' → logprob: -7.682908535003662
    10. '[c' → logprob: -10.057908058166504

Token 1003: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029788913205266
    2. ' =' → logprob: -3.5297889709472656
    3. '=b' → logprob: -10.404788970947266
    4. '[' → logprob: -13.279788970947266
    5. '[:]' → logprob: -13.279788970947266
    6. '.=' → logprob: -13.404788970947266
    7. '+=' → logprob: -14.654788970947266
    8. '=c' → logprob: -14.654788970947266
    9. '=[]' → logprob: -15.029788970947266
    10. '=
' → logprob: -15.279788970947266

Token 1004: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002100298646837473
    2. 'candidate' → logprob: -6.627100467681885
    3. ' candidates' → logprob: -7.252100467681885
    4. '[c' → logprob: -10.127099990844727
    5. '[]' → logprob: -10.752099990844727
    6. '[' → logprob: -13.502099990844727
    7. ' candidate' → logprob: -13.752099990844727
    8. '_candidates' → logprob: -14.627099990844727
    9. '[(' → logprob: -15.002099990844727
    10. '[]
' → logprob: -15.627099990844727

Token 1005: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17977041006088257
    2. '<|end|>' → logprob: -2.4297704696655273
    3. 'def' → logprob: -3.5547704696655273
    4. '   ' → logprob: -3.9297704696655273
    5. 'from' → logprob: -4.679770469665527
    6. '    
' → logprob: -5.304770469665527
    7. '```' → logprob: -5.304770469665527
    8. 'import' → logprob: -6.554770469665527
    9. ')' → logprob: -6.804770469665527
    10. ',' → logprob: -6.929770469665527

Token 1006: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7788936495780945
    2. 'from' → logprob: -0.9038936495780945
    3. '   ' → logprob: -2.2788937091827393
    4. 'import' → logprob: -3.5288937091827393
    5. '#' → logprob: -6.15389347076416
    6. 'return' → logprob: -7.40389347076416
    7. ' from' → logprob: -7.40389347076416
    8. 'visited' → logprob: -8.52889347076416
    9. '    
' → logprob: -8.65389347076416
    10. 'buyer' → logprob: -9.15389347076416

Token 1007: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21061979234218597
    2. 'from' → logprob: -2.0856196880340576
    3. 'return' → logprob: -3.9606196880340576
    4. 'import' → logprob: -4.335619926452637
    5. '#' (adapté à ' #') → logprob: -4.710619926452637
    6. 'used' → logprob: -5.085619926452637
    7. 'buyer' → logprob: -5.460619926452637
    8. 'order' → logprob: -5.710619926452637
    9. '   ' → logprob: -5.835619926452637
    10. 'assigned' → logprob: -5.960619926452637

Token 1008: ' Now' (ID: 6549)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.48196136951446533
    2. 'def' → logprob: -1.7319613695144653
    3. '#' → logprob: -2.356961250305176
    4. 'import' → logprob: -2.981961250305176
    5. 'used' → logprob: -4.106961250305176
    6. 'return' → logprob: -4.106961250305176
    7. 'assigned' → logprob: -4.481961250305176
    8. 'order' → logprob: -5.231961250305176
    9. 'assign' → logprob: -5.481961250305176
    10. 'assignment' → logprob: -5.606961250305176

Token 1009: ' we' (ID: 581)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.040044903755188
    2. 'from' → logprob: -1.290044903755188
    3. '#' → logprob: -2.4150447845458984
    4. '   ' → logprob: -2.9150447845458984
    5. ' buyers' → logprob: -2.9150447845458984
    6. ' import' → logprob: -3.5400447845458984
    7. 'def' → logprob: -3.5400447845458984
    8. 'import' → logprob: -3.5400447845458984
    9. ' buyer' → logprob: -3.6650447845458984
    10. ' def' → logprob: -4.165044784545898

Token 1010: ' have' (ID: 679)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -1.0443511009216309
    2. ' import' → logprob: -1.5443511009216309
    3. ' def' → logprob: -1.9193511009216309
    4. '   ' → logprob: -2.169351100921631
    5. 'import' → logprob: -2.794351100921631
    6. 'def' → logprob: -2.919351100921631
    7. ' have' → logprob: -4.294351100921631
    8. ' can' → logprob: -4.544351100921631
    9. ' want' → logprob: -4.669351100921631
    10. ' indent' → logprob: -5.794351100921631

Token 1011: ' a' (ID: 261)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.6837232112884521
    2. 'buyer' → logprob: -0.9337232112884521
    3. ' buyers' → logprob: -3.308723211288452
    4. ' buyer' → logprob: -3.683723211288452
    5. 'b' → logprob: -4.058723449707031
    6. '[]' → logprob: -4.933723449707031
    7. 'all' → logprob: -5.058723449707031
    8. 'candidate' → logprob: -5.308723449707031
    9. 'def' → logprob: -6.933723449707031
    10. 'the' → logprob: -7.058723449707031

Token 1012: ' set' (ID: 920)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3955913484096527
    2. 'll' → logprob: -1.520591378211975
    3. ' list' → logprob: -3.6455912590026855
    4. 'buyers' → logprob: -4.2705912590026855
    5. 'list' → logprob: -4.3955912590026855
    6. 'buyer' → logprob: -4.5205912590026855
    7. ' def' → logprob: -4.7705912590026855
    8. '#' → logprob: -4.8955912590026855
    9. 'b' → logprob: -4.8955912590026855
    10. ' buyer' → logprob: -5.1455912590026855

Token 1013: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.13067463040351868
    2. 'of' → logprob: -2.8806746006011963
    3. '   ' → logprob: -3.1306746006011963
    4. ' ' → logprob: -4.880674839019775
    5. '_' → logprob: -5.380674839019775
    6. ',' → logprob: -5.755674839019775
    7. '    ' → logprob: -6.755674839019775
    8. 'import' → logprob: -7.005674839019775
    9. 'from' → logprob: -7.005674839019775
    10. ')' → logprob: -7.255674839019775

Token 1014: ' candidate' (ID: 17098)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.7483896613121033
    2. ' buyers' → logprob: -1.873389720916748
    3. 'buyer' → logprob: -2.623389720916748
    4. ' buyer' → logprob: -2.623389720916748
    5. 'c' → logprob: -2.873389720916748
    6. 'candidate' → logprob: -2.873389720916748
    7. ' candidate' → logprob: -3.123389720916748
    8. 'b' → logprob: -3.373389720916748
    9. ' candidates' → logprob: -4.873389720916748
    10. 'possible' → logprob: -4.873389720916748

Token 1015: ' rectangles' (ID: 164265)
  Prédit: '_rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.951551616191864
    2. ' buyers' → logprob: -1.0765516757965088
    3. 'buyers' → logprob: -1.9515516757965088
    4. ' rectangles' → logprob: -2.451551675796509
    5. ' assignments' → logprob: -4.45155143737793
    6. ' buyer' → logprob: -5.07655143737793
    7. 's' → logprob: -5.20155143737793
    8. 'buyer' → logprob: -5.32655143737793
    9. 'rect' → logprob: -5.57655143737793
    10. 'assign' → logprob: -5.82655143737793

Token 1016: ' per' (ID: 777)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17023126780986786
    2. 'from' → logprob: -3.170231342315674
    3. 'def' → logprob: -3.295231342315674
    4. 'import' → logprob: -4.170231342315674
    5. 'for' → logprob: -4.420231342315674
    6. '    
' → logprob: -4.545231342315674
    7. '
' → logprob: -4.670231342315674
    8. ' for' → logprob: -4.670231342315674
    9. ',' → logprob: -4.920231342315674
    10. '#' → logprob: -4.920231342315674

Token 1017: ' buyer' (ID: 28061)
  Prédit: ' buyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buyer' → logprob: -0.3941405415534973
    2. 'buyer' → logprob: -1.3941404819488525
    3. 'b' → logprob: -2.6441404819488525
    4. ' b' → logprob: -5.019140720367432
    5. 'buyers' → logprob: -11.894140243530273
    6. ' buyers' → logprob: -12.394140243530273
    7. 'buy' → logprob: -13.144140243530273
    8. ' purchaser' → logprob: -13.519140243530273
    9. '	b' → logprob: -13.894140243530273
    10. 'Buyer' → logprob: -14.769140243530273

Token 1018: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49246931076049805
    2. '   ' → logprob: -1.117469310760498
    3. 'def' → logprob: -3.117469310760498
    4. '    
' → logprob: -4.742469310760498
    5. 'from' → logprob: -5.117469310760498
    6. 'import' → logprob: -6.117469310760498
    7. '#' → logprob: -8.867469787597656
    8. ',' → logprob: -9.117469787597656
    9. ' def' → logprob: -9.242469787597656
    10. '```' → logprob: -9.492469787597656

Token 1019: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04397137463092804
    2. 'def' → logprob: -3.918971300125122
    3. 'from' → logprob: -4.793971538543701
    4. '
' → logprob: -4.918971538543701
    5. '```' → logprob: -5.168971538543701
    6. 'import' → logprob: -7.043971538543701
    7. '    
' → logprob: -7.918971538543701
    8. '#' → logprob: -8.418971061706543
    9. ' from' → logprob: -8.543971061706543
    10. ' def' → logprob: -8.668971061706543

Token 1020: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13711455464363098
    2. 'def' → logprob: -2.8871145248413086
    3. 'from' → logprob: -3.3871145248413086
    4. 'import' → logprob: -4.262114524841309
    5. '
' → logprob: -4.512114524841309
    6. '    
' → logprob: -5.262114524841309
    7. 'assigned' → logprob: -6.387114524841309
    8. ' from' → logprob: -6.637114524841309
    9. 'used' → logprob: -6.762114524841309
    10. ' used' → logprob: -6.887114524841309

Token 1021: ' Problem' (ID: 26113)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5637322068214417
    2. '   ' → logprob: -1.6887321472167969
    3. 'def' → logprob: -2.813732147216797
    4. ' from' → logprob: -2.813732147216797
    5. 'import' → logprob: -3.063732147216797
    6. ' used' → logprob: -4.063732147216797
    7. '#' → logprob: -4.063732147216797
    8. ' import' → logprob: -4.688732147216797
    9. ' return' → logprob: -4.938732147216797
    10. ' def' → logprob: -4.938732147216797

Token 1022: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9436387419700623
    2. ':' → logprob: -1.193638801574707
    3. '#' → logprob: -2.193638801574707
    4. ' is' → logprob: -2.318638801574707
    5. 'import' → logprob: -3.068638801574707
    6. ',' → logprob: -3.818638801574707
    7. 'def' → logprob: -4.943638801574707
    8. '.' → logprob: -6.068638801574707
    9. '
' → logprob: -6.193638801574707
    10. ' ' → logprob: -6.193638801574707

Token 1023: ' assign' (ID: 14975)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.49363845586776733
    2. 'from' → logprob: -1.618638515472412
    3. ' from' → logprob: -2.493638515472412
    4. 'import' → logprob: -3.368638515472412
    5. ' #' → logprob: -3.618638515472412
    6. 'def' → logprob: -3.993638515472412
    7. 'We' → logprob: -3.993638515472412
    8. ' def' → logprob: -5.243638515472412
    9. '   ' → logprob: -6.243638515472412
    10. ' import' → logprob: -6.618638515472412

Token 1024: ' one' (ID: 1001)
  Prédit: ' rectangles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rectangles' → logprob: -0.6075605750083923
    2. '_rect' → logprob: -0.8575605750083923
    3. '_' → logprob: -4.232560634613037
    4. '_rectangle' → logprob: -5.107560634613037
    5. 'rect' → logprob: -5.857560634613037
    6. ' candidate' → logprob: -5.857560634613037
    7. 'candidate' → logprob: -5.982560634613037
    8. ' to' → logprob: -7.982560634613037
    9. ' one' → logprob: -7.982560634613037
    10. ' candidates' → logprob: -7.982560634613037

Token 1025: ' candidate' (ID: 17098)
  Prédit: ' rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rectangle' → logprob: -0.14249084889888763
    2. 'rectangle' → logprob: -2.767490863800049
    3. ' candidate' → logprob: -3.142490863800049
    4. 'candidate' → logprob: -3.892490863800049
    5. ' for' → logprob: -6.017490863800049
    6. '_rectangle' → logprob: -6.392490863800049
    7. '   ' → logprob: -6.767490863800049
    8. 'for' → logprob: -7.517490863800049
    9. ' of' → logprob: -8.89249038696289
    10. 'rect' → logprob: -9.01749038696289

Token 1026: ' rectangle' (ID: 45808)
  Prédit: '_rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rectangle' → logprob: -0.6478342413902283
    2. '_' → logprob: -1.272834300994873
    3. ' for' → logprob: -2.522834300994873
    4. ' ' → logprob: -3.272834300994873
    5. ',' → logprob: -3.522834300994873
    6. '_rect' → logprob: -4.147834300994873
    7. 's' → logprob: -5.022834300994873
    8. '   ' → logprob: -5.647834300994873
    9. '<|end|>' → logprob: -6.022834300994873
    10. ')' → logprob: -6.022834300994873

Token 1027: ' per' (ID: 777)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6957215070724487
    2. ' for' → logprob: -1.5707215070724487
    3. ' per' → logprob: -2.3207216262817383
    4. 'to' → logprob: -2.4457216262817383
    5. ',' → logprob: -3.5707216262817383
    6. 's' → logprob: -3.6957216262817383
    7. 'per' → logprob: -3.8207216262817383
    8. 'for' → logprob: -4.070721626281738
    9. '<|end|>' → logprob: -4.570721626281738
    10. '[' → logprob: -6.570721626281738

Token 1028: ' buyer' (ID: 28061)
  Prédit: ' buyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buyer' → logprob: -0.3136519491672516
    2. 'buyer' → logprob: -1.3136519193649292
    3. 'b' → logprob: -7.938652038574219
    4. ' b' → logprob: -10.438652038574219
    5. ' purchaser' → logprob: -13.313652038574219
    6. 'buy' → logprob: -14.313652038574219
    7. ' buyers' → logprob: -14.688652038574219
    8. 'Buyer' → logprob: -14.938652038574219
    9. 'buyers' → logprob: -15.063652038574219
    10. '	b' → logprob: -15.688652038574219

Token 1029: ' with' (ID: 483)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7105567455291748
    2. '   ' → logprob: -0.7105567455291748
    3. '    
' → logprob: -4.335556983947754
    4. ',' → logprob: -6.460556983947754
    5. 'import' → logprob: -7.210556983947754
    6. '<|end|>' → logprob: -7.710556983947754
    7. 'def' → logprob: -7.835556983947754
    8. '.' → logprob: -7.960556983947754
    9. 'from' → logprob: -8.585556983947754
    10. '
' → logprob: -9.585556983947754

Token 1030: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.5515075922012329
    2. 'no' → logprob: -1.176507592201233
    3. 'out' → logprob: -2.1765074729919434
    4. ' rectangles' → logprob: -7.426507472991943
    5. '	no' → logprob: -7.801507472991943
    6. '#' → logprob: -8.301507949829102
    7. 'dis' → logprob: -8.801507949829102
    8. 'def' → logprob: -9.426507949829102
    9. '   ' → logprob: -9.676507949829102
    10. '```' → logprob: -9.801507949829102

Token 1031: ' overlap' (ID: 56631)
  Prédit: ' overlap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.12506315112113953
    2. 'over' → logprob: -2.250063180923462
    3. ' overlaps' → logprob: -4.500062942504883
    4. ' overlapping' → logprob: -7.000062942504883
    5. '_overlap' → logprob: -9.125062942504883
    6. '-over' → logprob: -10.625062942504883
    7. ' over' → logprob: -12.000062942504883
    8. '(over' → logprob: -13.375062942504883
    9. ' conflicts' → logprob: -13.625062942504883
    10. ' overl' → logprob: -13.750062942504883

Token 1032: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23874716460704803
    2. '
' → logprob: -1.9887471199035645
    3. 'def' → logprob: -3.1137471199035645
    4. 'import' → logprob: -4.1137471199035645
    5. 'from' → logprob: -4.7387471199035645
    6. '    
' → logprob: -5.6137471199035645
    7. ' def' → logprob: -7.4887471199035645
    8. '#' → logprob: -7.4887471199035645
    9. ' from' → logprob: -8.113747596740723
    10. '```' → logprob: -8.238747596740723

Token 1033: ' cover' (ID: 4321)
  Prédit: 'cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cover' → logprob: -0.7796775698661804
    2. ' cover' → logprob: -1.5296776294708252
    3. ' full' → logprob: -1.6546776294708252
    4. 'full' → logprob: -3.529677629470825
    5. ' coverage' → logprob: -3.904677629470825
    6. ' complete' → logprob: -4.154677391052246
    7. 'union' → logprob: -4.404677391052246
    8. ' all' → logprob: -4.529677391052246
    9. 'coverage' → logprob: -4.779677391052246
    10. ' union' → logprob: -4.779677391052246

Token 1034: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.12957778573036194
    2. ' whole' → logprob: -3.004577875137329
    3. ' the' → logprob: -3.379577875137329
    4. ' entire' → logprob: -3.879577875137329
    5. 'all' → logprob: -4.87957763671875
    6. '   ' → logprob: -5.25457763671875
    7. ' full' → logprob: -6.62957763671875
    8. 'ing' → logprob: -7.00457763671875
    9. '  ' → logprob: -7.50457763671875
    10. ' ' → logprob: -7.87957763671875

Token 1035: ' area' (ID: 3624)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16963714361190796
    2. '
' → logprob: -2.1696372032165527
    3. '    
' → logprob: -4.169637203216553
    4. 'import' → logprob: -4.294637203216553
    5. ' buyers' → logprob: -5.544637203216553
    6. ',' → logprob: -6.169637203216553
    7. 'def' → logprob: -6.294637203216553
    8. '    ' → logprob: -6.919637203216553
    9. '#' → logprob: -7.169637203216553
    10. 'from' → logprob: -7.294637203216553

Token 1036: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5070263147354126
    2. '   ' → logprob: -1.0070263147354126
    3. '    
' → logprob: -3.507026195526123
    4. 'import' → logprob: -7.382026195526123
    5. '<|end|>' → logprob: -7.507026195526123
    6. 'def' → logprob: -7.757026195526123
    7. '   
' → logprob: -8.757026672363281
    8. ',' → logprob: -9.257026672363281
    9. ' 
' → logprob: -9.257026672363281
    10. 'from' → logprob: -9.382026672363281

Token 1037: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03025972470641136
    2. '
' → logprob: -3.905259609222412
    3. 'def' → logprob: -5.280259609222412
    4. 'import' → logprob: -6.405259609222412
    5. 'from' → logprob: -6.405259609222412
    6. '    
' → logprob: -7.405259609222412
    7. ' def' → logprob: -7.905259609222412
    8. ' from' → logprob: -8.53026008605957
    9. '```' → logprob: -10.15526008605957
    10. ' 
' → logprob: -10.78026008605957

Token 1038: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37322548031806946
    2. '
' → logprob: -1.248225450515747
    3. 'def' → logprob: -4.623225688934326
    4. 'import' → logprob: -5.373225688934326
    5. 'from' → logprob: -5.873225688934326
    6. ' def' → logprob: -5.873225688934326
    7. ' from' → logprob: -6.123225688934326
    8. '    
' → logprob: -6.623225688934326
    9. ' buyers' → logprob: -8.373225212097168
    10. ' import' → logprob: -8.873225212097168

Token 1039: ' Also' (ID: 8820)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17997416853904724
    2. 'from' → logprob: -2.55497407913208
    3. 'import' → logprob: -3.17997407913208
    4. 'def' → logprob: -3.55497407913208
    5. '
' → logprob: -4.92997407913208
    6. '    
' → logprob: -5.05497407913208
    7. ' from' → logprob: -6.80497407913208
    8. 'assigned' → logprob: -7.67997407913208
    9. 'buyers' → logprob: -7.67997407913208
    10. 'visited' → logprob: -8.429974555969238

Token 1040: ' check' (ID: 2371)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6968500018119812
    2. ' #' → logprob: -2.071850061416626
    3. '#' → logprob: -2.196850061416626
    4. '
' → logprob: -2.446850061416626
    5. ' return' → logprob: -2.821850061416626
    6. ' buyers' → logprob: -3.696850061416626
    7. 'def' → logprob: -3.821850061416626
    8. ' def' → logprob: -4.446849822998047
    9. ' buyer' → logprob: -4.571849822998047
    10. 'return' → logprob: -4.571849822998047

Token 1041: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.404561996459961
    2. ' used' → logprob: -1.904561996459961
    3. ' buyers' → logprob: -2.529561996459961
    4. 'import' → logprob: -2.654561996459961
    5. ' def' → logprob: -2.779561996459961
    6. ' import' → logprob: -2.904561996459961
    7. 'def' → logprob: -2.904561996459961
    8. 'from' → logprob: -2.904561996459961
    9. ' from' → logprob: -3.404561996459961
    10. ' for' → logprob: -3.654561996459961

Token 1042: ' assigned' (ID: 21482)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1931360512971878
    2. ' len' → logprob: -2.693135976791382
    3. 'all' → logprob: -2.943135976791382
    4. ' all' → logprob: -4.068136215209961
    5. 'sum' → logprob: -4.193136215209961
    6. 'the' → logprob: -4.193136215209961
    7. 'set' → logprob: -6.568136215209961
    8. ' the' → logprob: -6.693136215209961
    9. ' sum' → logprob: -7.318136215209961
    10. 'n' → logprob: -7.443136215209961

Token 1043: ' rectangle' (ID: 45808)
  Prédit: ' rectangles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rectangles' → logprob: -0.8467477560043335
    2. '_' → logprob: -1.9717477560043335
    3. '   ' → logprob: -1.9717477560043335
    4. ' buyers' → logprob: -2.846747875213623
    5. '_rect' → logprob: -3.221747875213623
    6. ' for' → logprob: -3.221747875213623
    7. ' ' → logprob: -3.471747875213623
    8. 'for' → logprob: -3.971747875213623
    9. 'b' → logprob: -4.346747875213623
    10. 'rect' → logprob: -4.471747875213623

Token 1044: ' contains' (ID: 8895)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04717659577727318
    2. '_' → logprob: -3.1721765995025635
    3. ' for' → logprob: -6.672176361083984
    4. ' ' → logprob: -7.297176361083984
    5. ' s' → logprob: -7.922176361083984
    6. '_s' → logprob: -8.047176361083984
    7. ' _' → logprob: -8.047176361083984
    8. '(s' → logprob: -8.672176361083984
    9. '   ' → logprob: -8.672176361083984
    10. ',' → logprob: -8.797176361083984

Token 1045: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.18857558071613312
    2. 'all' → logprob: -2.563575506210327
    3. ' buyer' → logprob: -3.563575506210327
    4. ' buyers' → logprob: -3.688575506210327
    5. ' each' → logprob: -4.688575744628906
    6. ' any' → logprob: -5.063575744628906
    7. ' a' → logprob: -5.438575744628906
    8. ' the' → logprob: -5.688575744628906
    9. 'b' → logprob: -5.938575744628906
    10. 'each' → logprob: -6.313575744628906

Token 1046: ' boards' (ID: 27531)
  Prédit: ' buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buyers' → logprob: -0.3304557204246521
    2. ' boards' → logprob: -2.455455780029297
    3. 'boards' → logprob: -2.580455780029297
    4. ' buyer' → logprob: -3.205455780029297
    5. 'buyers' → logprob: -3.580455780029297
    6. 'b' → logprob: -3.705455780029297
    7. ' b' → logprob: -4.455455780029297
    8. ' (' → logprob: -5.455455780029297
    9. ' positions' → logprob: -6.080455780029297
    10. ' the' → logprob: -6.580455780029297

Token 1047: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06258384883403778
    2. 'from' → logprob: -3.3125839233398438
    3. 'def' → logprob: -4.062583923339844
    4. ' from' → logprob: -5.937583923339844
    5. 'import' → logprob: -6.187583923339844
    6. '#' → logprob: -7.687583923339844
    7. ',' → logprob: -7.937583923339844
    8. ')' → logprob: -8.187583923339844
    9. ' def' → logprob: -8.187583923339844
    10. '    
' → logprob: -8.437583923339844

Token 1048: ' that' (ID: 484)
  Prédit: ' buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buyer' → logprob: -1.2527354955673218
    2. ' that' → logprob: -1.3777354955673218
    3. 'buyer' → logprob: -1.5027354955673218
    4. 'that' → logprob: -1.6277354955673218
    5. 'the' → logprob: -3.8777356147766113
    6. 'b' → logprob: -4.502735614776611
    7. ' the' → logprob: -5.252735614776611
    8. ' each' → logprob: -6.002735614776611
    9. 'each' → logprob: -6.377735614776611
    10. ' b' → logprob: -7.002735614776611

Token 1049: ' buyer' (ID: 28061)
  Prédit: 'buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyer' → logprob: -0.14464528858661652
    2. ' buyer' → logprob: -2.3946452140808105
    3. 'b' → logprob: -3.1446452140808105
    4. ' b' → logprob: -8.269645690917969
    5. 'token' → logprob: -10.644645690917969
    6. 'user' → logprob: -10.644645690917969
    7. '```' → logprob: -10.769645690917969
    8. 'buy' → logprob: -11.019645690917969
    9. ' purchaser' → logprob: -11.769645690917969
    10. ' user' → logprob: -12.394645690917969

Token 1050: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48683980107307434
    2. 'from' → logprob: -1.611839771270752
    3. '   ' → logprob: -2.236839771270752
    4. ' from' → logprob: -3.486839771270752
    5. 'import' → logprob: -3.736839771270752
    6. ' def' → logprob: -4.736839771270752
    7. '#' → logprob: -4.861839771270752
    8. ' buyers' → logprob: -5.986839771270752
    9. 'b' → logprob: -6.486839771270752
    10. '
' → logprob: -6.611839771270752

Token 1051: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14006388187408447
    2. '
' → logprob: -2.515063762664795
    3. 'from' → logprob: -3.140063762664795
    4. 'def' → logprob: -5.765063762664795
    5. 'import' → logprob: -6.640063762664795
    6. '    
' → logprob: -6.640063762664795
    7. ' from' → logprob: -7.515063762664795
    8. ' 
' → logprob: -9.515064239501953
    9. ',' → logprob: -10.265064239501953
    10. '```' → logprob: -10.265064239501953

Token 1052: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5017740726470947
    2. 'from' → logprob: -1.2517740726470947
    3. 'def' → logprob: -2.3767740726470947
    4. 'import' → logprob: -4.751773834228516
    5. '
' → logprob: -5.251773834228516
    6. ' from' → logprob: -6.751773834228516
    7. '    
' → logprob: -7.751773834228516
    8. 'visited' → logprob: -10.001773834228516
    9. ' def' → logprob: -10.126773834228516
    10. '```' → logprob: -10.501773834228516

Token 1053: ' Because' (ID: 13602)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.5895236134529114
    2. 'from' → logprob: -1.4645235538482666
    3. 'used' → logprob: -2.8395235538482666
    4. 'assign' → logprob: -3.0895235538482666
    5. 'assignment' → logprob: -3.2145235538482666
    6. 'import' → logprob: -3.5895235538482666
    7. 'def' → logprob: -3.5895235538482666
    8. '#' → logprob: -4.589523792266846
    9. '   ' → logprob: -6.339523792266846
    10. 'result' → logprob: -7.339523792266846

Token 1054: ' X' (ID: 2127)
  Prédit: ' buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buyers' → logprob: -0.2210511416196823
    2. ' n' → logprob: -2.3460512161254883
    3. 'n' → logprob: -3.4710512161254883
    4. '   ' → logprob: -4.096051216125488
    5. ' import' → logprob: -4.721051216125488
    6. ' X' → logprob: -5.221051216125488
    7. 'import' → logprob: -5.221051216125488
    8. ' buyer' → logprob: -5.221051216125488
    9. 'buyers' → logprob: -5.346051216125488
    10. 'b' → logprob: -5.596051216125488

Token 1055: ',Y' (ID: 71464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.0583466291427612
    2. ',' → logprob: -1.3083466291427612
    3. '   ' → logprob: -1.4333466291427612
    4. ' and' → logprob: -2.683346748352051
    5. ' is' → logprob: -3.683346748352051
    6. ' =' → logprob: -4.433346748352051
    7. ' ,' → logprob: -4.558346748352051
    8. '    ' → logprob: -4.683346748352051
    9. ' ' → logprob: -5.183346748352051
    10. '=' → logprob: -5.683346748352051

Token 1056: ' <=' (ID: 5017)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.5423474311828613
    2. ' can' → logprob: -1.9173474311828613
    3. ' <=' → logprob: -2.0423474311828613
    4. ' is' → logprob: -2.1673474311828613
    5. ' may' → logprob: -5.542347431182861
    6. ' might' → logprob: -5.542347431182861
    7. '<=' → logprob: -5.917347431182861
    8. 'are' → logprob: -6.167347431182861
    9. ' space' → logprob: -6.292347431182861
    10. ' and' → logprob: -6.292347431182861

Token 1057: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.1571656465530396
    2. '20' → logprob: -1.2821656465530396
    3. '15' → logprob: -1.4071656465530396
    4. '12' → logprob: -2.28216552734375
    5. '16' → logprob: -3.40716552734375
    6. '8' → logprob: -4.40716552734375
    7. '50' → logprob: -5.40716552734375
    8. '30' → logprob: -5.90716552734375
    9. '14' → logprob: -6.28216552734375
    10. '100' → logprob: -6.53216552734375

Token 1058: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7923316955566406
    2. ',' → logprob: -1.7923316955566406
    3. '
' → logprob: -2.0423316955566406
    4. 'import' → logprob: -2.1673316955566406
    5. ':' → logprob: -2.2923316955566406
    6. 'from' → logprob: -4.542331695556641
    7. 'def' → logprob: -4.792331695556641
    8. ' from' → logprob: -5.042331695556641
    9. ' import' → logprob: -6.042331695556641
    10. '    
' → logprob: -6.292331695556641

Token 1059: ' n' (ID: 297)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.743450403213501
    2. ' from' → logprob: -1.493450403213501
    3. 'import' → logprob: -1.618450403213501
    4. '   ' → logprob: -3.493450403213501
    5. ' import' → logprob: -3.493450403213501
    6. '#' → logprob: -3.993450403213501
    7. 'def' → logprob: -4.743450164794922
    8. ' buyers' → logprob: -5.118450164794922
    9. ' #' → logprob: -5.618450164794922
    10. '
' → logprob: -6.743450164794922

Token 1060: '<=' (ID: 16672)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.04907326027750969
    2. ' =' → logprob: -3.4240732192993164
    3. '<=' → logprob: -5.674073219299316
    4. ' ≤' → logprob: -5.799073219299316
    5. '   ' → logprob: -5.799073219299316
    6. '=' → logprob: -6.424073219299316
    7. ' ' → logprob: -6.799073219299316
    8. '    ' → logprob: -7.549073219299316
    9. ' is' → logprob: -7.674073219299316
    10. ' \' → logprob: -7.674073219299316

Token 1061: '15' (ID: 1055)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2598995864391327
    2. '5' → logprob: -1.884899616241455
    3. '8' → logprob: -3.759899616241455
    4. '9' → logprob: -3.884899616241455
    5. '6' → logprob: -4.134899616241455
    6. '7' → logprob: -4.509899616241455
    7. '20' → logprob: -6.134899616241455
    8. '15' → logprob: -6.634899616241455
    9. '12' → logprob: -6.634899616241455
    10. '4' → logprob: -7.009899616241455

Token 1062: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5525121092796326
    2. '
' → logprob: -1.1775121688842773
    3. 'import' → logprob: -2.5525121688842773
    4. 'from' → logprob: -3.8025121688842773
    5. 'def' → logprob: -5.052512168884277
    6. '    
' → logprob: -5.552512168884277
    7. ',' → logprob: -6.552512168884277
    8. ' from' → logprob: -6.552512168884277
    9. '#' → logprob: -7.052512168884277
    10. 'buyer' → logprob: -8.177512168884277

Token 1063: ' we' (ID: 581)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.1063309907913208
    2. 'import' → logprob: -1.4813309907913208
    3. '#' → logprob: -1.8563309907913208
    4. '   ' → logprob: -2.1063308715820312
    5. ' from' → logprob: -2.6063308715820312
    6. 'def' → logprob: -3.7313308715820312
    7. '
' → logprob: -3.8563308715820312
    8. ' import' → logprob: -3.8563308715820312
    9. ' #' → logprob: -4.106330871582031
    10. ' used' → logprob: -6.481330871582031

Token 1064: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.2417801320552826
    2. ' import' → logprob: -2.3667800426483154
    3. ' continue' → logprob: -2.9917800426483154
    4. 'import' → logprob: -3.6167800426483154
    5. ' need' → logprob: -3.9917800426483154
    6. ' def' → logprob: -5.4917802810668945
    7. ' 
' → logprob: -5.7417802810668945
    8. ' have' → logprob: -5.7417802810668945
    9. ' will' → logprob: -5.7417802810668945
    10. ' ' → logprob: -6.3667802810668945

Token 1065: ' DFS' (ID: 115767)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' try' → logprob: -1.1531779766082764
    2. 'import' → logprob: -1.4031779766082764
    3. ' use' → logprob: -1.5281779766082764
    4. 'def' → logprob: -1.9031779766082764
    5. 'try' → logprob: -3.5281779766082764
    6. ' import' → logprob: -4.2781782150268555
    7. 'use' → logprob: -4.4031782150268555
    8. '   ' → logprob: -5.6531782150268555
    9. 'from' → logprob: -5.9031782150268555
    10. '```' → logprob: -6.1531782150268555

Token 1066: ' over' (ID: 1072)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2932766079902649
    2. 'def' → logprob: -2.29327654838562
    3. '
' → logprob: -2.91827654838562
    4. ' def' → logprob: -3.16827654838562
    5. 'import' → logprob: -3.66827654838562
    6. '    
' → logprob: -4.418276786804199
    7. ' import' → logprob: -4.918276786804199
    8. ' 
' → logprob: -5.668276786804199
    9. ':' → logprob: -6.043276786804199
    10. ' buyers' → logprob: -7.043276786804199

Token 1067: ' buyers' (ID: 25359)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.0968051329255104
    2. ' buyers' → logprob: -3.0968050956726074
    3. 'b' → logprob: -3.3468050956726074
    4. 'buyer' → logprob: -4.846805095672607
    5. 'candidate' → logprob: -6.096805095672607
    6. ' buyer' → logprob: -7.721805095672607
    7. 'c' → logprob: -8.096805572509766
    8. ' candidates' → logprob: -8.471805572509766
    9. ' candidate' → logprob: -8.596805572509766
    10. '[]' → logprob: -8.846805572509766

Token 1068: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4775809645652771
    2. 'def' → logprob: -1.6025810241699219
    3. '
' → logprob: -2.102581024169922
    4. ' def' → logprob: -3.352581024169922
    5. '    
' → logprob: -4.727581024169922
    6. 'import' → logprob: -5.102581024169922
    7. ':' → logprob: -5.727581024169922
    8. ' buyers' → logprob: -7.227581024169922
    9. ',' → logprob: -7.352581024169922
    10. ' buyer' → logprob: -7.977581024169922

Token 1069: ' try' (ID: 2075)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6140649914741516
    2. 'from' → logprob: -1.7390649318695068
    3. 'import' → logprob: -1.8640649318695068
    4. ' assigned' → logprob: -3.489064931869507
    5. ' def' → logprob: -3.864064931869507
    6. ' from' → logprob: -3.989064931869507
    7. ' import' → logprob: -4.239065170288086
    8. ' back' → logprob: -5.114065170288086
    9. 'assigned' → logprob: -5.114065170288086
    10. ' candidates' → logprob: -5.739065170288086

Token 1070: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7242688536643982
    2. '   ' → logprob: -0.7242688536643982
    3. ' to' → logprob: -4.599268913269043
    4. 'def' → logprob: -4.599268913269043
    5. 'import' → logprob: -5.974268913269043
    6. ':
' → logprob: -5.974268913269043
    7. ' candidates' → logprob: -6.599268913269043
    8. '):' → logprob: -7.349268913269043
    9. '```' → logprob: -7.474268913269043
    10. 'from' → logprob: -7.474268913269043

Token 1071: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.9008862972259521
    2. 'import' → logprob: -2.275886297225952
    3. 'find' → logprob: -2.275886297225952
    4. '```' → logprob: -2.400886297225952
    5. 'choose' → logprob: -3.150886297225952
    6. 'select' → logprob: -3.525886297225952
    7. 'back' → logprob: -3.525886297225952
    8. 'def' → logprob: -3.525886297225952
    9. 'place' → logprob: -3.525886297225952
    10. 'pr' → logprob: -3.650886297225952

Token 1072: ' rectangles' (ID: 164265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10682826489210129
    2. '
' → logprob: -3.231828212738037
    3. '   ' → logprob: -3.481828212738037
    4. ' def' → logprob: -4.606828212738037
    5. 'import' → logprob: -5.106828212738037
    6. 'visited' → logprob: -5.731828212738037
    7. 'from' → logprob: -5.981828212738037
    8. 'assigned' → logprob: -6.106828212738037
    9. ' assigned' → logprob: -6.356828212738037
    10. ' visited' → logprob: -6.981828212738037

Token 1073: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0218315124511719
    2. '
' → logprob: -1.2718315124511719
    3. ' 
' → logprob: -2.521831512451172
    4. 'def' → logprob: -2.771831512451172
    5. '\' → logprob: -2.896831512451172
    6. '(
' → logprob: -3.271831512451172
    7. ' (' → logprob: -3.646831512451172
    8. ':' → logprob: -3.646831512451172
    9. ' def' → logprob: -4.021831512451172
    10. ',' → logprob: -5.146831512451172

Token 1074: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18551130592823029
    2. '
' → logprob: -2.560511350631714
    3. 'def' → logprob: -2.560511350631714
    4. ':' → logprob: -5.435511112213135
    5. 'visited' → logprob: -5.435511112213135
    6. ' def' → logprob: -6.310511112213135
    7. ' visited' → logprob: -6.435511112213135
    8. '    
' → logprob: -7.435511112213135
    9. 'assigned' → logprob: -7.810511112213135
    10. 'import' → logprob: -8.060511589050293

Token 1075: ' #' (ID: 1069)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.43803665041923523
    2. 'used' → logprob: -1.8130366802215576
    3. '
' → logprob: -2.8130366802215576
    4. 'def' → logprob: -2.9380366802215576
    5. '   ' → logprob: -3.3130366802215576
    6. 'from' → logprob: -4.3130364418029785
    7. '    
' → logprob: -4.8130364418029785
    8. 'visited' → logprob: -5.3130364418029785
    9. 'import' → logprob: -5.4380364418029785
    10. ' used' → logprob: -5.6880364418029785

Token 1076: ' If' (ID: 1843)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5484666228294373
    2. 'assigned' → logprob: -1.048466682434082
    3. 'used' → logprob: -3.173466682434082
    4. '
' → logprob: -5.173466682434082
    5. 'visited' → logprob: -5.173466682434082
    6. 'from' → logprob: -5.298466682434082
    7. ' used' → logprob: -5.548466682434082
    8. ' assigned' → logprob: -5.548466682434082
    9. 'import' → logprob: -6.423466682434082
    10. '   ' → logprob: -6.548466682434082

Token 1077: ' multiple' (ID: 7598)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8464019894599915
    2. ' len' → logprob: -1.8464019298553467
    3. 'n' → logprob: -2.3464019298553467
    4. 'b' → logprob: -2.8464019298553467
    5. ' idx' → logprob: -2.8464019298553467
    6. ' b' → logprob: -3.2214019298553467
    7. 'idx' → logprob: -3.4714019298553467
    8. ' not' → logprob: -3.5964019298553467
    9. 'len' → logprob: -3.9714019298553467
    10. ' True' → logprob: -4.096402168273926

Token 1078: ' solutions' (ID: 9368)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18548280000686646
    2. '   ' → logprob: -2.8104827404022217
    3. ' def' → logprob: -3.1854827404022217
    4. 'import' → logprob: -3.5604827404022217
    5. ')' → logprob: -4.060482978820801
    6. ' buyers' → logprob: -4.310482978820801
    7. ' spaces' → logprob: -6.935482978820801
    8. '
' → logprob: -7.060482978820801
    9. 'from' → logprob: -7.310482978820801
    10. ' import' → logprob: -7.435482978820801

Token 1079: ' found' (ID: 2491)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43411752581596375
    2. 'def' → logprob: -1.1841175556182861
    3. ' def' → logprob: -4.559117317199707
    4. ',' → logprob: -4.559117317199707
    5. '<|end|>' → logprob: -5.059117317199707
    6. '.' → logprob: -5.434117317199707
    7. 'import' → logprob: -5.434117317199707
    8. '_' → logprob: -6.059117317199707
    9. '=' → logprob: -6.309117317199707
    10. '<|end|>' → logprob: -6.434117317199707

Token 1080: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27217090129852295
    2. ',' → logprob: -1.647170901298523
    3. 'def' → logprob: -3.2721710205078125
    4. ' :' → logprob: -6.3971710205078125
    5. '   ' → logprob: -6.3971710205078125
    6. '_' → logprob: -7.2721710205078125
    7. ' def' → logprob: -7.6471710205078125
    8. '():' → logprob: -7.6471710205078125
    9. '):' → logprob: -7.6471710205078125
    10. '.' → logprob: -7.8971710205078125

Token 1081: ' print' (ID: 2123)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1636756807565689
    2. 'return' → logprob: -1.9136756658554077
    3. ' None' → logprob: -7.038675785064697
    4. '   ' → logprob: -7.538675785064697
    5. ' possible' → logprob: -7.788675785064697
    6. ' print' → logprob: -7.913675785064697
    7. ' pass' → logprob: -8.788675308227539
    8. ' ' → logprob: -9.288675308227539
    9. ' multiple' → logprob: -9.288675308227539
    10. 'None' → logprob: -9.288675308227539

Token 1082: ' NA' (ID: 24259)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6145625114440918
    2. '
' → logprob: -1.1145625114440918
    3. 'import' → logprob: -2.989562511444092
    4. 'from' → logprob: -3.364562511444092
    5. ' def' → logprob: -3.864562511444092
    6. '   ' → logprob: -4.739562511444092
    7. ' from' → logprob: -5.114562511444092
    8. '```' → logprob: -5.739562511444092
    9. 'visited' → logprob: -6.114562511444092
    10. ' visited' → logprob: -6.239562511444092

Token 1083: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39396435022354126
    2. '   ' → logprob: -1.8939642906188965
    3. '
' → logprob: -2.0189642906188965
    4. 'assigned' → logprob: -4.0189642906188965
    5. ' assigned' → logprob: -5.0189642906188965
    6. ':' → logprob: -5.1439642906188965
    7. 'import' → logprob: -5.3939642906188965
    8. ' def' → logprob: -5.7689642906188965
    9. 'visited' → logprob: -6.2689642906188965
    10. 'from' → logprob: -7.5189642906188965

Token 1084: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6024857759475708
    2. '
' → logprob: -1.2274857759475708
    3. 'def' → logprob: -2.1024856567382812
    4. '```' → logprob: -4.102485656738281
    5. ' def' → logprob: -5.477485656738281
    6. 'b' → logprob: -5.852485656738281
    7. ')' → logprob: -5.977485656738281
    8. ' 
' → logprob: -6.102485656738281
    9. '\' → logprob: -6.227485656738281
    10. ',' → logprob: -6.852485656738281

Token 1085: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8387763500213623
    2. '
' → logprob: -0.9637763500213623
    3. '   ' → logprob: -2.5887763500213623
    4. 'import' → logprob: -3.2137763500213623
    5. 'visited' → logprob: -3.2137763500213623
    6. 'from' → logprob: -4.213776588439941
    7. 'assigned' → logprob: -4.588776588439941
    8. '    
' → logprob: -5.963776588439941
    9. ' 
' → logprob: -7.588776588439941
    10. 'used' → logprob: -7.838776588439941

Token 1086: ' If' (ID: 1843)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.5388020873069763
    2. 'def' → logprob: -1.413802146911621
    3. 'from' → logprob: -2.413802146911621
    4. 'used' → logprob: -3.663802146911621
    5. 'import' → logprob: -3.788802146911621
    6. '
' → logprob: -4.163802146911621
    7. 'visited' → logprob: -4.288802146911621
    8. 'result' → logprob: -6.163802146911621
    9. 'assignment' → logprob: -6.538802146911621
    10. 'assign' → logprob: -7.663802146911621

Token 1087: ' no' (ID: 860)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5236736536026001
    2. ' not' → logprob: -2.0236735343933105
    3. ' ' → logprob: -2.1486735343933105
    4. ' False' → logprob: -3.2736735343933105
    5. 'True' → logprob: -3.6486735343933105
    6. '_' → logprob: -4.1486735343933105
    7. ' single' → logprob: -4.2736735343933105
    8. ' None' → logprob: -5.0236735343933105
    9. ' only' → logprob: -5.1486735343933105
    10. ' _' → logprob: -5.1486735343933105

Token 1088: ' solution' (ID: 7578)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8024513125419617
    2. ' solution' → logprob: -1.1774513721466064
    3. '_solution' → logprob: -1.6774513721466064
    4. 'solution' → logprob: -3.8024513721466064
    5. ' solutions' → logprob: -4.552451133728027
    6. ' _' → logprob: -5.177451133728027
    7. '(solution' → logprob: -5.802451133728027
    8. '_answer' → logprob: -5.802451133728027
    9. ' ' → logprob: -6.302451133728027
    10. 'solutions' → logprob: -6.927451133728027

Token 1089: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13199667632579803
    2. '_found' → logprob: -2.7569966316223145
    3. ' found' → logprob: -3.3819966316223145
    4. ',' → logprob: -4.7569966316223145
    5. 'found' → logprob: -5.2569966316223145
    6. '_' → logprob: -6.0069966316223145
    7. ':
' → logprob: -6.6319966316223145
    8. ' ' → logprob: -6.8819966316223145
    9. '   ' → logprob: -7.0069966316223145
    10. '=' → logprob: -7.1319966316223145

Token 1090: ' NA' (ID: 24259)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.4101996421813965
    2. 'print' → logprob: -1.2851996421813965
    3. ' return' → logprob: -3.2851996421813965
    4. 'return' → logprob: -3.9101996421813965
    5. 'None' → logprob: -7.0351996421813965
    6. ' None' → logprob: -7.2851996421813965
    7. '   ' → logprob: -7.6601996421813965
    8. 'Print' → logprob: -9.285200119018555
    9. '```' → logprob: -9.535200119018555
    10. 'No' → logprob: -9.785200119018555

Token 1091: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19463026523590088
    2. 'def' → logprob: -1.8196302652359009
    3. '   ' → logprob: -4.569630146026611
    4. 'import' → logprob: -6.319630146026611
    5. '    
' → logprob: -7.194630146026611
    6. 'visited' → logprob: -7.319630146026611
    7. 'assigned' → logprob: -7.694630146026611
    8. 'from' → logprob: -8.44463062286377
    9. ' 
' → logprob: -9.19463062286377
    10. '  
' → logprob: -9.31963062286377

Token 1092: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15896086394786835
    2. 'def' → logprob: -2.4089608192443848
    3. '   ' → logprob: -3.0339608192443848
    4. 'import' → logprob: -5.783960819244385
    5. 'visited' → logprob: -5.908960819244385
    6. '    
' → logprob: -7.158960819244385
    7. ' 
' → logprob: -7.783960819244385
    8. 'from' → logprob: -7.908960819244385
    9. ' visited' → logprob: -7.908960819244385
    10. ' def' → logprob: -8.033961296081543

Token 1093: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2337932139635086
    2. '
' → logprob: -1.9837932586669922
    3. 'assigned' → logprob: -3.108793258666992
    4. 'from' → logprob: -4.483793258666992
    5. 'import' → logprob: -5.233793258666992
    6. 'used' → logprob: -5.608793258666992
    7. '   ' → logprob: -5.983793258666992
    8. 'visited' → logprob: -6.233793258666992
    9. 'selected' → logprob: -7.483793258666992
    10. '    
' → logprob: -8.108793258666992

Token 1094: ' If' (ID: 1843)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27988049387931824
    2. 'from' → logprob: -2.2798805236816406
    3. 'assigned' → logprob: -2.9048805236816406
    4. '
' → logprob: -3.5298805236816406
    5. 'import' → logprob: -3.7798805236816406
    6. 'used' → logprob: -3.9048805236816406
    7. 'visited' → logprob: -4.654880523681641
    8. '   ' → logprob: -5.654880523681641
    9. 'selected' → logprob: -8.27988052368164
    10. '    
' → logprob: -8.40488052368164

Token 1095: ' one' (ID: 1001)
  Prédit: ' unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' unique' → logprob: -1.164056658744812
    2. ' only' → logprob: -1.914056658744812
    3. ' single' → logprob: -2.0390567779541016
    4. ' len' → logprob: -2.4140567779541016
    5. ' True' → logprob: -2.6640567779541016
    6. ' solution' → logprob: -3.0390567779541016
    7. 'unique' → logprob: -3.4140567779541016
    8. ' ' → logprob: -3.5390567779541016
    9. 'len' → logprob: -3.6640567779541016
    10. ' ' → logprob: -4.164056777954102

Token 1096: ' solution' (ID: 7578)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3134888708591461
    2. ' _' → logprob: -2.4384889602661133
    3. '
' → logprob: -3.1884889602661133
    4. ' ' → logprob: -3.4384889602661133
    5. '   ' → logprob: -3.5634889602661133
    6. '_unique' → logprob: -4.313488960266113
    7. '_solution' → logprob: -4.313488960266113
    8. '```' → logprob: -4.438488960266113
    9. '_space' → logprob: -4.688488960266113
    10. 'def' → logprob: -5.938488960266113

Token 1097: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011698678135871887
    2. ':
' → logprob: -7.001169681549072
    3. '   ' → logprob: -9.12617015838623
    4. ' :' → logprob: -9.50117015838623
    5. ',' → logprob: -10.87617015838623
    6. ':return' → logprob: -11.37617015838623
    7. '<|end|>' → logprob: -12.25117015838623
    8. '):' → logprob: -12.25117015838623
    9. '():' → logprob: -12.37617015838623
    10. '    ' → logprob: -12.50117015838623

Token 1098: ' output' (ID: 4733)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0894053727388382
    2. 'return' → logprob: -2.5894052982330322
    3. '
' → logprob: -5.964405536651611
    4. 'Return' → logprob: -6.589405536651611
    5. 'def' → logprob: -7.214405536651611
    6. '   ' → logprob: -7.714405536651611
    7. ' assigned' → logprob: -7.839405536651611
    8. ' pass' → logprob: -7.839405536651611
    9. ' result' → logprob: -8.089405059814453
    10. ' found' → logprob: -8.089405059814453

Token 1099: ' that' (ID: 484)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7045189738273621
    2. '   ' → logprob: -0.9545189738273621
    3. ' def' → logprob: -2.204519033432007
    4. '
' → logprob: -5.079518795013428
    5. ' buyers' → logprob: -6.329518795013428
    6. '    
' → logprob: -7.579518795013428
    7. ':' → logprob: -7.704518795013428
    8. 'import' → logprob: -8.204519271850586
    9. '```' → logprob: -8.454519271850586
    10. 'buyers' → logprob: -8.579519271850586

Token 1100: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36800122261047363
    2. 'def' → logprob: -1.3680012226104736
    3. '   ' → logprob: -3.4930012226104736
    4. 'import' → logprob: -3.9930012226104736
    5. 'from' → logprob: -5.7430009841918945
    6. 'assigned' → logprob: -7.8680009841918945
    7. '    
' → logprob: -7.9930009841918945
    8. ' def' → logprob: -8.743000984191895
    9. '```' → logprob: -9.118000984191895
    10. ' assigned' → logprob: -9.868000984191895

Token 1101: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34817296266555786
    2. '   ' → logprob: -1.473172903060913
    3. '    
' → logprob: -3.348172903060913
    4. '
' → logprob: -3.723172903060913
    5. 'assigned' → logprob: -6.098173141479492
    6. 'import' → logprob: -6.348173141479492
    7. 'visited' → logprob: -7.348173141479492
    8. 'buyers' → logprob: -7.973173141479492
    9. 'from' → logprob: -9.098173141479492
    10. '        
' → logprob: -9.473173141479492

Token 1102: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09980552643537521
    2. 'assigned' → logprob: -2.5998055934906006
    3. '   ' → logprob: -4.9748053550720215
    4. 'used' → logprob: -5.0998053550720215
    5. 'import' → logprob: -5.7248053550720215
    6. 'from' → logprob: -6.0998053550720215
    7. 'visited' → logprob: -6.7248053550720215
    8. '
' → logprob: -7.3498053550720215
    9. 'buyer' → logprob: -9.97480583190918
    10. 'assignment' → logprob: -10.09980583190918

Token 1103: ' The' (ID: 623)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12641610205173492
    2. 'assigned' → logprob: -2.5014162063598633
    3. 'used' → logprob: -4.626416206359863
    4. 'import' → logprob: -4.626416206359863
    5. 'from' → logprob: -4.876416206359863
    6. '   ' → logprob: -5.001416206359863
    7. 'visited' → logprob: -6.251416206359863
    8. 'buyer' → logprob: -8.376416206359863
    9. 'buyers' → logprob: -8.376416206359863
    10. '
' → logprob: -9.001416206359863

Token 1104: ' whole' (ID: 6062)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5917744040489197
    2. 'def' → logprob: -1.3417744636535645
    3. ' visited' → logprob: -2.5917744636535645
    4. ' field' → logprob: -3.3417744636535645
    5. 'visited' → logprob: -4.0917744636535645
    6. ' import' → logprob: -4.2167744636535645
    7. ' used' → logprob: -4.2167744636535645
    8. ' assigned' → logprob: -4.8417744636535645
    9. 'import' → logprob: -5.4667744636535645
    10. '
' → logprob: -5.7167744636535645

Token 1105: ' field' (ID: 3259)
  Prédit: ' field'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' field' → logprob: -0.7290055155754089
    2. 'field' → logprob: -0.8540055155754089
    3. ' area' → logprob: -3.4790055751800537
    4. '
' → logprob: -4.354005336761475
    5. '   ' → logprob: -4.479005336761475
    6. 'area' → logprob: -4.604005336761475
    7. 'def' → logprob: -4.604005336761475
    8. ' used' → logprob: -5.229005336761475
    9. ' visited' → logprob: -5.979005336761475
    10. 'visited' → logprob: -6.229005336761475

Token 1106: ' must' (ID: 2804)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -1.0402016639709473
    2. ' area' → logprob: -2.2902016639709473
    3. ' is' → logprob: -2.4152016639709473
    4. 'size' → logprob: -2.5402016639709473
    5. 'is' → logprob: -2.6652016639709473
    6. 'cells' → logprob: -2.6652016639709473
    7. 'coverage' → logprob: -3.2902016639709473
    8. ' =' → logprob: -3.6652016639709473
    9. 'covered' → logprob: -3.9152016639709473
    10. '_cells' → logprob: -4.040201663970947

Token 1107: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.25210559368133545
    2. ' be' → logprob: -1.5021055936813354
    3. '	be' → logprob: -10.377105712890625
    4. '```' → logprob: -10.752105712890625
    5. ' ' → logprob: -11.002105712890625
    6. '
' → logprob: -11.002105712890625
    7. '   ' → logprob: -11.252105712890625
    8. '=' → logprob: -11.377105712890625
    9. '_be' → logprob: -11.377105712890625
    10. 'covered' → logprob: -11.502105712890625

Token 1108: ' covered' (ID: 13083)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.005166873801499605
    2. ' covered' → logprob: -5.380167007446289
    3. '(' → logprob: -8.505167007446289
    4. 'com' → logprob: -9.130167007446289
    5. '[' → logprob: -9.755167007446289
    6. '
' → logprob: -10.255167007446289
    7. 'filled' → logprob: -10.380167007446289
    8. 'fully' → logprob: -11.005167007446289
    9. 'assigned' → logprob: -11.005167007446289
    10. '1' → logprob: -11.130167007446289

Token 1109: ' exactly' (ID: 9707)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17136189341545105
    2. '   ' → logprob: -1.9213619232177734
    3. '    
' → logprob: -5.671361923217773
    4. 'def' → logprob: -6.046361923217773
    5. ' used' → logprob: -6.796361923217773
    6. 'visited' → logprob: -7.171361923217773
    7. ' visited' → logprob: -7.171361923217773
    8. ' assigned' → logprob: -7.296361923217773
    9. 'assigned' → logprob: -8.046361923217773
    10. ' 
' → logprob: -8.296361923217773

Token 1110: ' by' (ID: 656)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9955448508262634
    2. '
' → logprob: -1.2455449104309082
    3. '   ' → logprob: -1.3705449104309082
    4. '    
' → logprob: -3.870544910430908
    5. 'assigned' → logprob: -3.870544910430908
    6. ' used' → logprob: -4.120544910430908
    7. ' assigned' → logprob: -4.495544910430908
    8. 'used' → logprob: -4.745544910430908
    9. ' def' → logprob: -5.495544910430908
    10. 'visited' → logprob: -6.120544910430908

Token 1111: ' these' (ID: 1879)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9792314767837524
    2. 'rect' → logprob: -1.2292314767837524
    3. 'assigned' → logprob: -1.4792314767837524
    4. 'buyer' → logprob: -3.354231357574463
    5. 'buyers' → logprob: -3.479231357574463
    6. 'all' → logprob: -3.479231357574463
    7. 'assign' → logprob: -6.354231357574463
    8. ' rectangles' → logprob: -6.854231357574463
    9. 'one' → logprob: -6.979231357574463
    10. 'non' → logprob: -6.979231357574463

Token 1112: ' rectangles' (ID: 164265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.31988877058029175
    2. '
' → logprob: -1.9448888301849365
    3. '   ' → logprob: -2.5698888301849365
    4. '    
' → logprob: -4.319888591766357
    5. ' used' → logprob: -4.319888591766357
    6. 'used' → logprob: -5.069888591766357
    7. 'assigned' → logprob: -5.444888591766357
    8. ' def' → logprob: -5.819888591766357
    9. 'area' → logprob: -6.069888591766357
    10. ' area' → logprob: -6.069888591766357

Token 1113: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7415975332260132
    2. '   ' → logprob: -1.2415975332260132
    3. 'def' → logprob: -1.7415975332260132
    4. '    
' → logprob: -3.4915976524353027
    5. 'assigned' → logprob: -4.241597652435303
    6. 'visited' → logprob: -5.491597652435303
    7. 'import' → logprob: -5.741597652435303
    8. 'used' → logprob: -5.741597652435303
    9. ' assigned' → logprob: -7.241597652435303
    10. ' used' → logprob: -7.616597652435303

Token 1114: ' no' (ID: 860)
  Prédit: ' no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.45472824573516846
    2. ' so' → logprob: -1.8297282457351685
    3. ' with' → logprob: -2.704728126525879
    4. '   ' → logprob: -3.204728126525879
    5. '#' → logprob: -3.954728126525879
    6. 'no' → logprob: -4.079728126525879
    7. 'with' → logprob: -4.704728126525879
    8. ' #' → logprob: -4.704728126525879
    9. ' visited' → logprob: -4.829728126525879
    10. ' without' → logprob: -5.079728126525879

Token 1115: ' overlaps' (ID: 173439)
  Prédit: ' overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.16212807595729828
    2. ' overlaps' → logprob: -1.9121280908584595
    3. ' overlapping' → logprob: -7.16212797164917
    4. ' gaps' → logprob: -7.41212797164917
    5. '_overlap' → logprob: -7.91212797164917
    6. 'over' → logprob: -9.662128448486328
    7. ' space' → logprob: -10.787128448486328
    8. ' gap' → logprob: -10.912128448486328
    9. ' overl' → logprob: -11.662128448486328
    10. 'n' → logprob: -11.787128448486328

Token 1116: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14800502359867096
    2. '   ' → logprob: -2.7730050086975098
    3. 'def' → logprob: -3.2730050086975098
    4. '    
' → logprob: -3.6480050086975098
    5. 'import' → logprob: -5.64800500869751
    6. ',' → logprob: -6.52300500869751
    7. '

' → logprob: -6.64800500869751
    8. '  
' → logprob: -7.27300500869751
    9. ':' → logprob: -7.52300500869751
    10. 'visited' → logprob: -7.52300500869751

Token 1117: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1617226600646973
    2. 'def' → logprob: -1.1617226600646973
    3. 'used' → logprob: -1.9117226600646973
    4. '   ' → logprob: -2.4117226600646973
    5. 'assigned' → logprob: -2.5367226600646973
    6. '    
' → logprob: -3.7867226600646973
    7. 'visited' → logprob: -4.036722660064697
    8. 'import' → logprob: -4.786722660064697
    9. 'field' → logprob: -5.411722660064697
    10. 'from' → logprob: -6.911722660064697

Token 1118: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25434213876724243
    2. 'used' → logprob: -2.1293420791625977
    3. 'assigned' → logprob: -2.7543420791625977
    4. '   ' → logprob: -4.004342079162598
    5. 'visited' → logprob: -4.379342079162598
    6. 'from' → logprob: -5.129342079162598
    7. 'import' → logprob: -5.879342079162598
    8. '
' → logprob: -7.004342079162598
    9. 'field' → logprob: -7.754342079162598
    10. '    
' → logprob: -7.754342079162598

Token 1119: ' Prepare' (ID: 49102)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.8232965469360352
    2. 'def' → logprob: -1.3232965469360352
    3. 'assigned' → logprob: -1.5732965469360352
    4. '   ' → logprob: -3.323296546936035
    5. 'visited' → logprob: -3.823296546936035
    6. 'field' → logprob: -4.823296546936035
    7. 'from' → logprob: -4.948296546936035
    8. 'import' → logprob: -5.073296546936035
    9. '
' → logprob: -5.573296546936035
    10. 'chosen' → logprob: -6.823296546936035

Token 1120: ' some' (ID: 1236)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -1.7682572603225708
    2. ' assigned' → logprob: -2.0182571411132812
    3. 'assigned' → logprob: -2.0182571411132812
    4. 'used' → logprob: -2.3932571411132812
    5. ' buyers' → logprob: -2.6432571411132812
    6. ' buyer' → logprob: -3.0182571411132812
    7. ' field' → logprob: -3.0182571411132812
    8. 'buyers' → logprob: -3.2682571411132812
    9. 'visited' → logprob: -3.3932571411132812
    10. ' from' → logprob: -3.5182571411132812

Token 1121: ' helper' (ID: 25246)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3738497495651245
    2. '   ' → logprob: -1.7488497495651245
    3. 'visited' → logprob: -1.9988497495651245
    4. ' code' → logprob: -2.123849868774414
    5. ' arrays' → logprob: -3.123849868774414
    6. '```' → logprob: -3.123849868774414
    7. 'def' → logprob: -3.623849868774414
    8. 'used' → logprob: -3.623849868774414
    9. ' indentation' → logprob: -3.748849868774414
    10. 'from' → logprob: -4.248849868774414

Token 1122: ' functions' (ID: 9964)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.38042551279067993
    2. '
' → logprob: -1.6304254531860352
    3. ' def' → logprob: -2.255425453186035
    4. ' 
' → logprob: -6.255425453186035
    5. 'import' → logprob: -6.255425453186035
    6. ' visited' → logprob: -6.755425453186035
    7. 'board' → logprob: -6.755425453186035
    8. ' grid' → logprob: -6.880425453186035
    9. ' import' → logprob: -7.505425453186035
    10. ' occupied' → logprob: -7.505425453186035

Token 1123: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2541264593601227
    2. 'def' → logprob: -1.5041264295578003
    3. '

' → logprob: -7.37912654876709
    4. ' 
' → logprob: -7.87912654876709
    5. 'visited' → logprob: -8.00412654876709
    6. '
' → logprob: -8.50412654876709
    7. '    
' → logprob: -8.87912654876709
    8. '  
' → logprob: -9.00412654876709
    9. ' def' → logprob: -9.37912654876709
    10. '\' → logprob: -9.62912654876709

Token 1124: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16146978735923767
    2. 'def' → logprob: -1.91146981716156
    3. '```' → logprob: -7.66146993637085
    4. '

' → logprob: -7.91146993637085
    5. '    
' → logprob: -9.036469459533691
    6. '  
' → logprob: -9.411469459533691
    7. ' 
' → logprob: -9.536469459533691
    8. '
' → logprob: -10.411469459533691
    9. '``' → logprob: -10.911469459533691
    10. 'import' → logprob: -10.911469459533691

Token 1125: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6360863447189331
    2. '
' → logprob: -0.7610863447189331
    3. ' 
' → logprob: -6.636086463928223
    4. '    
' → logprob: -7.136086463928223
    5. '```' → logprob: -7.386086463928223
    6. ' def' → logprob: -8.136086463928223
    7. '   ' → logprob: -8.386086463928223
    8. '  
' → logprob: -9.011086463928223
    9. 'import' → logprob: -10.386086463928223
    10. '``' → logprob: -10.636086463928223

Token 1126: ' rect' (ID: 13107)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.267016887664795
    2. 'can' → logprob: -1.392016887664795
    3. ' can' → logprob: -1.642016887664795
    4. 'dfs' → logprob: -2.142016887664795
    5. ' is' → logprob: -2.892016887664795
    6. 'over' → logprob: -3.392016887664795
    7. 'valid' → logprob: -3.767016887664795
    8. 'back' → logprob: -4.392016887664795
    9. 'possible' → logprob: -5.142016887664795
    10. ' dfs' → logprob: -5.392016887664795

Token 1127: '_cells' (ID: 93468)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.43884074687957764
    2. 'angles' → logprob: -2.188840866088867
    3. '_' → logprob: -2.438840866088867
    4. '_area' → logprob: -2.688840866088867
    5. '_contains' → logprob: -3.688840866088867
    6. 's' → logprob: -3.813840866088867
    7. '_angles' → logprob: -4.813840866088867
    8. '_angle' → logprob: -5.438840866088867
    9. '_overlap' → logprob: -5.438840866088867
    10. '_c' → logprob: -5.813840866088867

Token 1128: '(rect' (ID: 68123)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2613246440887451
    2. '(x' → logprob: -1.6363246440887451
    3. '((' → logprob: -4.386324882507324
    4. '(b' → logprob: -5.136324882507324
    5. ' (' → logprob: -5.386324882507324
    6. ':' → logprob: -5.386324882507324
    7. '(rect' → logprob: -6.011324882507324
    8. '):' → logprob: -6.761324882507324
    9. '(a' → logprob: -7.136324882507324
    10. '(
' → logprob: -7.511324882507324

Token 1129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.28890135884284973
    2. '):
' → logprob: -1.4139013290405273
    3. '   ' → logprob: -5.788901329040527
    4. '[' → logprob: -6.538901329040527
    5. ':' → logprob: -6.663901329040527
    6. '):
' → logprob: -7.538901329040527
    7. ')' → logprob: -7.663901329040527
    8. ',' → logprob: -7.788901329040527
    9. ' ):' → logprob: -8.163901329040527
    10. ' ):
' → logprob: -10.163901329040527

Token 1130: '       ' (ID: 309)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.07124955952167511
    2. '   ' → logprob: -3.446249485015869
    3. '(' → logprob: -3.946249485015869
    4. '       ' → logprob: -4.821249485015869
    5. ':' → logprob: -5.571249485015869
    6. ' (' → logprob: -5.696249485015869
    7. ',' → logprob: -7.821249485015869
    8. '```' → logprob: -8.071249961853027
    9. 'x' → logprob: -8.196249961853027
    10. ':
' → logprob: -8.446249961853027

Token 1131: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0073061916045844555
    2. ' x' → logprob: -5.382306098937988
    3. '(x' → logprob: -6.257306098937988
    4. '   ' → logprob: -7.882306098937988
    5. '
' → logprob: -8.382306098937988
    6. '    
' → logprob: -9.382306098937988
    7. '	x' → logprob: -10.382306098937988
    8. '       ' → logprob: -11.507306098937988
    9. '        
' → logprob: -12.007306098937988
    10. 'return' → logprob: -12.132306098937988

Token 1132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003063630312681198
    2. ',' → logprob: -6.128063678741455
    3. '_' → logprob: -8.753063201904297
    4. ',y' → logprob: -8.753063201904297
    5. 's' → logprob: -9.003063201904297
    6. ',_' → logprob: -9.003063201904297
    7. ' _' → logprob: -9.253063201904297
    8. ' ,' → logprob: -9.753063201904297
    9. '_,' → logprob: -10.003063201904297
    10. ' ' → logprob: -10.753063201904297

Token 1133: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11182993650436401
    2. ',x' → logprob: -2.361829996109009
    3. ',y' → logprob: -4.61182975769043
    4. ' ,' → logprob: -7.23682975769043
    5. ',
' → logprob: -7.73682975769043
    6. '<|end|>' → logprob: -9.11182975769043
    7. ',n' → logprob: -9.73682975769043
    8. ',w' → logprob: -9.86182975769043
    9. ',v' → logprob: -10.48682975769043
    10. ',k' → logprob: -10.73682975769043

Token 1134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003667413955554366
    2. ',' → logprob: -5.62866735458374
    3. ' ' → logprob: -10.003667831420898
    4. ',x' → logprob: -11.753667831420898
    5. ' ,' → logprob: -11.753667831420898
    6. ',
' → logprob: -13.003667831420898
    7. '
' → logprob: -13.753667831420898
    8. '   ' → logprob: -14.003667831420898
    9. '	' → logprob: -15.003667831420898
    10. ',y' → logprob: -15.378667831420898

Token 1135: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1449608951807022
    2. ',x' → logprob: -2.019960880279541
    3. ' ,' → logprob: -6.644960880279541
    4. ',
' → logprob: -7.769960880279541
    5. ',y' → logprob: -8.2699613571167
    6. ',w' → logprob: -9.3949613571167
    7. ',user' → logprob: -10.5199613571167
    8. ',k' → logprob: -10.8949613571167
    9. '=' → logprob: -11.0199613571167
    10. ',t' → logprob: -11.1449613571167

Token 1136: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09051501750946045
    2. '1' → logprob: -2.46551513671875
    3. ',' → logprob: -7.09051513671875
    4. ',x' → logprob: -8.09051513671875
    5. '0' → logprob: -8.59051513671875
    6. '=' → logprob: -9.46551513671875
    7. 'x' → logprob: -9.59051513671875
    8. ',y' → logprob: -9.96551513671875
    9. '```' → logprob: -11.46551513671875
    10. '<|end|>' → logprob: -11.71551513671875

Token 1137: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2419516146183014
    2. ',y' → logprob: -1.866951584815979
    3. ',x' → logprob: -2.9919517040252686
    4. ' ,' → logprob: -4.7419514656066895
    5. ',
' → logprob: -8.116951942443848
    6. '<|end|>' → logprob: -8.241951942443848
    7. '+' → logprob: -8.366951942443848
    8. '=' → logprob: -9.366951942443848
    9. ',user' → logprob: -9.741951942443848
    10. ',w' → logprob: -9.741951942443848

Token 1138: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004632572643458843
    2. '1' → logprob: -5.379632472991943
    3. '```' → logprob: -12.379632949829102
    4. '
' → logprob: -12.504632949829102
    5. '   ' → logprob: -13.004632949829102
    6. ' ' → logprob: -13.879632949829102
    7. '<|end|>' → logprob: -15.004632949829102
    8. ',' → logprob: -15.504632949829102
    9. '<|end|>' → logprob: -15.879632949829102
    10. '₂' → logprob: -16.2546329498291

Token 1139: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06491518765687943
    2. ' =' → logprob: -2.814915180206299
    3. ',' → logprob: -7.064915180206299
    4. '):
' → logprob: -7.439915180206299
    5. '   ' → logprob: -7.814915180206299
    6. ')' → logprob: -8.064915657043457
    7. ':' → logprob: -8.439915657043457
    8. '       ' → logprob: -9.189915657043457
    9. '):' → logprob: -9.189915657043457
    10. ')=' → logprob: -9.189915657043457

Token 1140: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.0015030752401798964
    2. ' rect' → logprob: -6.501502990722656
    3. '	rect' → logprob: -15.126502990722656
    4. '(rect' → logprob: -15.376502990722656
    5. '_rect' → logprob: -17.126502990722656
    6. '[' → logprob: -17.376502990722656
    7. 'rest' → logprob: -17.376502990722656
    8. '   ' → logprob: -17.501502990722656
    9. '0' → logprob: -17.751502990722656
    10. '
' → logprob: -18.001502990722656

Token 1141: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.496427059173584
    2. ':' → logprob: -1.121427059173584
    3. '   ' → logprob: -3.496427059173584
    4. '
' → logprob: -3.996427059173584
    5. '       ' → logprob: -4.996427059173584
    6. ':return' → logprob: -5.621427059173584
    7. '           ' → logprob: -6.246427059173584
    8. '=' → logprob: -7.121427059173584
    9. ':
' → logprob: -7.746427059173584
    10. '):
' → logprob: -8.121427536010742

Token 1142: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13077548146247864
    2. '
' → logprob: -2.1307754516601562
    3. '   ' → logprob: -6.255775451660156
    4. '           ' → logprob: -7.380775451660156
    5. '	   ' → logprob: -8.005775451660156
    6. 'return' → logprob: -8.255775451660156
    7. '	       ' → logprob: -8.880775451660156
    8. ':
' → logprob: -8.880775451660156
    9. '
' → logprob: -9.380775451660156
    10. '    
' → logprob: -9.880775451660156

Token 1143: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' (adapté à ' cells') → logprob: -0.3805515468120575
    2. '       ' → logprob: -2.00555157661438
    3. '   ' → logprob: -2.50555157661438
    4. ' cells' → logprob: -3.00555157661438
    5. 'for' → logprob: -3.50555157661438
    6. ' for' → logprob: -4.380551338195801
    7. 'res' → logprob: -5.755551338195801
    8. ' res' → logprob: -6.755551338195801
    9. 'return' → logprob: -6.880551338195801
    10. 'result' → logprob: -7.005551338195801

Token 1144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0337165892124176
    2. ' =' → logprob: -3.4087166786193848
    3. '   ' → logprob: -9.908716201782227
    4. '       ' → logprob: -11.033716201782227
    5. '=
' → logprob: -14.033716201782227
    6. 'for' → logprob: -14.283716201782227
    7. ' ' → logprob: -14.408716201782227
    8. '           ' → logprob: -14.408716201782227
    9. '    ' → logprob: -14.658716201782227
    10. '=[]' → logprob: -15.033716201782227

Token 1145: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.2280946671962738
    2. '[(' → logprob: -1.9780946969985962
    3. '[]' → logprob: -2.7280945777893066
    4. ' []
' → logprob: -8.978095054626465
    5. 'set' → logprob: -9.978095054626465
    6. '[
' → logprob: -10.103095054626465
    7. ' [(' → logprob: -10.603095054626465
    8. '[' → logprob: -10.853095054626465
    9. ' []' → logprob: -11.353095054626465
    10. '[]

' → logprob: -13.603095054626465

Token 1146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07014760375022888
    2. '
' → logprob: -3.1951475143432617
    3. ' for' → logprob: -4.320147514343262
    4. '           ' → logprob: -4.820147514343262
    5. 'for' → logprob: -5.570147514343262
    6. '   ' → logprob: -7.820147514343262
    7. '        
' → logprob: -8.195147514343262
    8. '  
' → logprob: -8.570147514343262
    9. '\n' → logprob: -9.070147514343262
    10. ' 
' → logprob: -9.195147514343262

Token 1147: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3872876763343811
    2. 'for' (adapté à ' for') → logprob: -1.1372876167297363
    3. '	for' → logprob: -8.512288093566895
    4. '       ' → logprob: -9.012288093566895
    5. '   ' → logprob: -10.012288093566895
    6. '
' → logprob: -10.137288093566895
    7. '```' → logprob: -12.387288093566895
    8. '           ' → logprob: -13.387288093566895
    9. '	   ' → logprob: -14.137288093566895
    10. ' ' → logprob: -14.637288093566895

Token 1148: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.030020182952284813
    2. ' y' → logprob: -4.155020236968994
    3. 'x' → logprob: -4.280020236968994
    4. ' x' → logprob: -10.280019760131836
    5. '	y' → logprob: -11.655019760131836
    6. '_y' → logprob: -14.030019760131836
    7. '   ' → logprob: -14.780019760131836
    8. '```' → logprob: -15.155019760131836
    9. 'yy' → logprob: -15.405019760131836
    10. ''y' → logprob: -15.530019760131836

Token 1149: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12918701767921448
    2. 'in' → logprob: -2.1291871070861816
    3. '1' → logprob: -6.379187107086182
    4. '=' → logprob: -8.754186630249023
    5. ',y' → logprob: -9.504186630249023
    6. ',' → logprob: -9.879186630249023
    7. '	in' → logprob: -10.379186630249023
    8. 'y' → logprob: -10.379186630249023
    9. '	' → logprob: -10.754186630249023
    10. '```' → logprob: -10.879186630249023

Token 1150: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10905081778764725
    2. 'y' → logprob: -2.859050750732422
    3. ' range' → logprob: -3.109050750732422
    4. ' y' → logprob: -6.609050750732422
    5. ' in' → logprob: -16.109050750732422
    6. '	range' → logprob: -16.359050750732422
    7. '(range' → logprob: -16.359050750732422
    8. '	y' → logprob: -16.859050750732422
    9. ',y' → logprob: -17.234050750732422
    10. ' ' → logprob: -17.484050750732422

Token 1151: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0007123126997612417
    2. ' y' → logprob: -7.2507123947143555
    3. '(y' → logprob: -13.500712394714355
    4. '	y' → logprob: -14.125712394714355
    5. ')y' → logprob: -16.25071144104004
    6. '=y' → logprob: -16.62571144104004
    7. ',y' → logprob: -16.87571144104004
    8. '   ' → logprob: -18.12571144104004
    9. 'Y' → logprob: -18.25071144104004
    10. ''y' → logprob: -18.37571144104004

Token 1152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ',' → logprob: -12.875011444091797
    3. '2' → logprob: -13.125011444091797
    4. ',y' → logprob: -13.500011444091797
    5. '   ' → logprob: -13.625011444091797
    6. 'y' → logprob: -14.125011444091797
    7. '
' → logprob: -14.250011444091797
    8. '+' → logprob: -14.250011444091797
    9. '=y' → logprob: -14.750011444091797
    10. '```' → logprob: -15.000011444091797

Token 1153: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6964160799980164
    2. ',y' → logprob: -0.6964160799980164
    3. ' ,' → logprob: -5.821415901184082
    4. ',x' → logprob: -9.196415901184082
    5. '):
' → logprob: -10.071415901184082
    6. 'y' → logprob: -10.071415901184082
    7. '       ' → logprob: -10.321415901184082
    8. ',
' → logprob: -10.946415901184082
    9. '   ' → logprob: -11.071415901184082
    10. ' y' → logprob: -11.571415901184082

Token 1154: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6949480175971985
    2. '2' → logprob: -0.6949480175971985
    3. 'y' → logprob: -6.819948196411133
    4. '+' → logprob: -7.819948196411133
    5. '```' → logprob: -8.444948196411133
    6. ' y' → logprob: -9.694948196411133
    7. '``' → logprob: -11.944948196411133
    8. '   ' → logprob: -12.819948196411133
    9. '4' → logprob: -13.069948196411133
    10. ',' → logprob: -13.194948196411133

Token 1155: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005361463874578476
    2. ' +' → logprob: -5.255361557006836
    3. ',' → logprob: -9.255361557006836
    4. ',y' → logprob: -11.005361557006836
    5. '1' → logprob: -11.755361557006836
    6. '
' → logprob: -13.380361557006836
    7. '```' → logprob: -14.005361557006836
    8. '+
' → logprob: -14.130361557006836
    9. '+y' → logprob: -14.380361557006836
    10. ' ,' → logprob: -14.505361557006836

Token 1156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. ')' → logprob: -16.00002098083496
    4. '
' → logprob: -17.12502098083496
    5. '```' → logprob: -17.62502098083496
    6. '   ' → logprob: -19.62502098083496
    7. ',' → logprob: -19.87502098083496
    8. '2' → logprob: -20.00002098083496
    9. '<|end|>' → logprob: -20.12502098083496
    10. 'y' → logprob: -20.12502098083496

Token 1157: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3134624660015106
    2. '):' → logprob: -1.313462495803833
    3. ',' → logprob: -9.063462257385254
    4. ')' → logprob: -10.063462257385254
    5. '):
' → logprob: -11.438462257385254
    6. ':' → logprob: -11.813462257385254
    7. '```' → logprob: -12.188462257385254
    8. ':
' → logprob: -12.438462257385254
    9. '):

' → logprob: -12.438462257385254
    10. '       ' → logprob: -12.813462257385254

Token 1158: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004258730914443731
    2. '               ' → logprob: -7.129258632659912
    3. '
' → logprob: -7.504258632659912
    4. '   ' → logprob: -7.754258632659912
    5. '```' → logprob: -7.754258632659912
    6. ':
' → logprob: -8.00425910949707
    7. '                           ' → logprob: -8.00425910949707
    8. ' for' → logprob: -8.00425910949707
    9. '       ' → logprob: -8.37925910949707
    10. '                               ' → logprob: -8.50425910949707

Token 1159: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06589213013648987
    2. 'for' (adapté à ' for') → logprob: -2.815892219543457
    3. '               ' → logprob: -6.565892219543457
    4. '                ' → logprob: -7.690892219543457
    5. ' 
' → logprob: -7.690892219543457
    6. ' ' → logprob: -7.815892219543457
    7. '            ' → logprob: -7.940892219543457
    8. ' ' → logprob: -8.565892219543457
    9. ' x' → logprob: -8.815892219543457
    10. '```' → logprob: -9.315892219543457

Token 1160: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804149478673935
    2. ' x' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.038042068481445
    4. '_x' → logprob: -19.288042068481445
    5. '`' → logprob: -19.788042068481445
    6. '	x' → logprob: -19.788042068481445
    7. ' 
' → logprob: -20.288042068481445
    8. '```' → logprob: -20.913042068481445
    9. ' ' → logprob: -21.163042068481445
    10. ')' → logprob: -21.538042068481445

Token 1161: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06994910538196564
    2. 'in' → logprob: -2.694949150085449
    3. '	in' → logprob: -11.94494915008545
    4. '		' → logprob: -13.56994915008545
    5. ' ' → logprob: -13.69494915008545
    6. '	' → logprob: -14.56994915008545
    7. '_in' → logprob: -14.56994915008545
    8. '			' → logprob: -14.81994915008545
    9. '            ' → logprob: -14.94494915008545
    10. 'x' → logprob: -15.19494915008545

Token 1162: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4294617772102356
    2. 'range' → logprob: -1.1794617176055908
    3. 'x' → logprob: -3.429461717605591
    4. ' x' → logprob: -4.67946195602417
    5. '(x' → logprob: -13.179461479187012
    6. ' xrange' → logprob: -13.554461479187012
    7. '(range' → logprob: -13.804461479187012
    8. '	range' → logprob: -13.804461479187012
    9. ' ' → logprob: -14.304461479187012
    10. ' in' → logprob: -14.429461479187012

Token 1163: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1605595201253891
    2. '(x' → logprob: -1.9105595350265503
    3. 'range' → logprob: -8.03555965423584
    4. ' x' → logprob: -12.03555965423584
    5. ' range' → logprob: -13.16055965423584
    6. '(range' → logprob: -13.28555965423584
    7. ' (' → logprob: -14.03555965423584
    8. '[x' → logprob: -14.41055965423584
    9. ',x' → logprob: -15.66055965423584
    10. 'rect' → logprob: -16.035558700561523

Token 1164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5796562433242798
    2. 'x' → logprob: -0.8296562433242798
    3. ',x' → logprob: -6.45465612411499
    4. ' x' → logprob: -7.07965612411499
    5. ',' → logprob: -7.95465612411499
    6. '<x' → logprob: -8.704656600952148
    7. '+x' → logprob: -9.329656600952148
    8. '(x' → logprob: -9.454656600952148
    9. '{x' → logprob: -9.454656600952148
    10. ')x' → logprob: -9.579656600952148

Token 1165: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.048784706741571426
    2. ',' → logprob: -3.0487847328186035
    3. ',y' → logprob: -8.923784255981445
    4. ' ,' → logprob: -9.798784255981445
    5. ',
' → logprob: -13.548784255981445
    6. '+' → logprob: -13.673784255981445
    7. ',len' → logprob: -13.798784255981445
    8. '(x' → logprob: -13.923784255981445
    9. ',n' → logprob: -14.548784255981445
    10. 'x' → logprob: -14.548784255981445

Token 1166: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05649644508957863
    2. 'x' → logprob: -2.9314963817596436
    3. '+' → logprob: -7.056496620178223
    4. '1' → logprob: -7.806496620178223
    5. ' x' → logprob: -9.806496620178223
    6. '```' → logprob: -9.806496620178223
    7. ',x' → logprob: -10.056496620178223
    8. ')' → logprob: -10.556496620178223
    9. '+x' → logprob: -10.806496620178223
    10. '{x' → logprob: -10.931496620178223

Token 1167: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0047228685580194
    2. ' +' → logprob: -5.379723072052002
    3. '1' → logprob: -9.379722595214844
    4. ',' → logprob: -11.629722595214844
    5. ')+' → logprob: -12.379722595214844
    6. '2' → logprob: -13.504722595214844
    7. '```' → logprob: -14.004722595214844
    8. '+
' → logprob: -14.254722595214844
    9. ')' → logprob: -14.754722595214844
    10. '+x' → logprob: -15.129722595214844

Token 1168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.00000286102295
    3. '2' → logprob: -14.62500286102295
    4. 'x' → logprob: -15.25000286102295
    5. '0' → logprob: -17.125003814697266
    6. '
' → logprob: -18.625003814697266
    7. 'y' → logprob: -18.750003814697266
    8. ')' → logprob: -19.000003814697266
    9. '+' → logprob: -19.000003814697266
    10. '```' → logprob: -20.250003814697266

Token 1169: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.26477155089378357
    2. '):' → logprob: -1.764771580696106
    3. '               ' → logprob: -3.0147714614868164
    4. ')' → logprob: -5.514771461486816
    5. '           ' → logprob: -5.514771461486816
    6. '                               ' → logprob: -6.389771461486816
    7. '                           ' → logprob: -7.514771461486816
    8. '                   ' → logprob: -7.639771461486816
    9. ',' → logprob: -8.014771461486816
    10. ':
' → logprob: -8.264771461486816

Token 1170: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0022404235787689686
    2. '                               ' → logprob: -6.7522406578063965
    3. '           ' → logprob: -8.127240180969238
    4. '	           ' → logprob: -8.377240180969238
    5. '	       ' → logprob: -8.502240180969238
    6. '                   ' → logprob: -9.127240180969238
    7. '		       ' → logprob: -9.877240180969238
    8. '			' → logprob: -9.877240180969238
    9. '                           ' → logprob: -10.002240180969238
    10. '                       ' → logprob: -10.877240180969238

Token 1171: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' (adapté à ' cells') → logprob: -0.2322697937488556
    2. ' cells' → logprob: -1.6072697639465332
    3. '               ' → logprob: -5.107269763946533
    4. '	c' → logprob: -7.982269763946533
    5. '                ' → logprob: -8.607270240783691
    6. '                   ' → logprob: -9.107270240783691
    7. '.cells' → logprob: -10.357270240783691
    8. '			' → logprob: -10.857270240783691
    9. '_cells' → logprob: -11.232270240783691
    10. ' ' → logprob: -11.232270240783691

Token 1172: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0027298596687614918
    2. '.' → logprob: -6.252729892730713
    3. '                   ' → logprob: -7.752729892730713
    4. '               ' → logprob: -8.752729415893555
    5. ' .' → logprob: -10.002729415893555
    6. '                       ' → logprob: -10.502729415893555
    7. '                               ' → logprob: -10.877729415893555
    8. 'append' → logprob: -11.002729415893555
    9. '                ' → logprob: -11.252729415893555
    10. ')' → logprob: -11.752729415893555

Token 1173: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.059493180364370346
    2. ' (' → logprob: -3.059493064880371
    3. '(x' → logprob: -4.559493064880371
    4. '((' → logprob: -8.059493064880371
    5. '(
' → logprob: -9.684493064880371
    6. ' ' → logprob: -15.684493064880371
    7. ' ((' → logprob: -16.059494018554688
    8. '(n' → logprob: -16.434494018554688
    9. ' (
' → logprob: -16.434494018554688
    10. '('' → logprob: -16.809494018554688

Token 1174: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0325924449716695e-05
    2. ' x' → logprob: -11.50001049041748
    3. ')x' → logprob: -16.375009536743164
    4. '	x' → logprob: -18.125009536743164
    5. '"x' → logprob: -21.000009536743164
    6. ')' → logprob: -21.250009536743164
    7. '
' → logprob: -21.500009536743164
    8. ',x' → logprob: -22.000009536743164
    9. '(x' → logprob: -22.125009536743164
    10. '_x' → logprob: -22.375009536743164

Token 1175: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.20244532823562622
    2. ',' → logprob: -1.7024452686309814
    3. ',
' → logprob: -7.0774455070495605
    4. ' ,' → logprob: -9.452445030212402
    5. ',n' → logprob: -10.077445030212402
    6. ',user' → logprob: -10.952445030212402
    7. ',x' → logprob: -11.577445030212402
    8. ')' → logprob: -11.577445030212402
    9. ',w' → logprob: -12.827445030212402
    10. ',p' → logprob: -13.077445030212402

Token 1176: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017055326607078314
    2. '))
' → logprob: -6.626705646514893
    3. ')' → logprob: -8.251705169677734
    4. ',' → logprob: -9.376705169677734
    5. '               ' → logprob: -11.626705169677734
    6. ')))' → logprob: -11.626705169677734
    7. '),' → logprob: -12.626705169677734
    8. '                   ' → logprob: -12.626705169677734
    9. '))}
' → logprob: -13.501705169677734
    10. ' ))' → logprob: -13.626705169677734

Token 1177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4518567621707916
    2. '               ' → logprob: -1.3268567323684692
    3. ')' → logprob: -2.701856851577759
    4. '           ' → logprob: -3.826856851577759
    5. '
' → logprob: -5.82685661315918
    6. ')
' → logprob: -6.95185661315918
    7. '<|end|>' → logprob: -6.95185661315918
    8. '```' → logprob: -7.20185661315918
    9. '	' → logprob: -7.45185661315918
    10. '   ' → logprob: -8.07685661315918

Token 1178: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.568142831325531
    2. ')' → logprob: -1.0681428909301758
    3. '   ' → logprob: -3.443142890930176
    4. '           ' → logprob: -3.943142890930176
    5. '
' → logprob: -4.443142890930176
    6. 'return' (adapté à ' return') → logprob: -4.568142890930176
    7. '```' → logprob: -5.068142890930176
    8. ')
' → logprob: -6.318142890930176
    9. ' return' → logprob: -6.693142890930176
    10. ':return' → logprob: -6.818142890930176

Token 1179: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.0067156096920371056
    2. ' cells' → logprob: -5.006715774536133
    3. '[]' → logprob: -16.631715774536133
    4. 'cell' → logprob: -16.756715774536133
    5. 'cel' → logprob: -16.756715774536133
    6. '_cells' → logprob: -17.131715774536133
    7. '.cells' → logprob: -17.131715774536133
    8. '[' → logprob: -17.506715774536133
    9. '   ' → logprob: -19.006715774536133
    10. '[(' → logprob: -19.131715774536133

Token 1180: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46045413613319397
    2. '   ' → logprob: -1.0854541063308716
    3. '<|end|>' → logprob: -4.710453987121582
    4. 'def' → logprob: -4.835453987121582
    5. '```' → logprob: -4.835453987121582
    6. '    
' → logprob: -5.335453987121582
    7. '  
' → logprob: -7.210453987121582
    8. ')' → logprob: -8.960453987121582
    9. '

' → logprob: -9.085453987121582
    10. '<|end|>' → logprob: -9.460453987121582

Token 1181: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05318005010485649
    2. '   ' → logprob: -3.053179979324341
    3. 'def' → logprob: -6.05318021774292
    4. '    
' → logprob: -6.80318021774292
    5. '```' → logprob: -7.05318021774292
    6. '

' → logprob: -10.053179740905762
    7. '  
' → logprob: -10.303179740905762
    8. ' def' → logprob: -10.428179740905762
    9. '
' → logprob: -10.928179740905762
    10. ' buyer' → logprob: -11.053179740905762

Token 1182: ' solutions' (ID: 9368)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23266218602657318
    2. '   ' → logprob: -1.6076622009277344
    3. '
' → logprob: -5.857662200927734
    4. '```' → logprob: -6.607662200927734
    5. 'buyers' → logprob: -6.857662200927734
    6. ' def' → logprob: -7.107662200927734
    7. 'buyer' → logprob: -8.232662200927734
    8. 'b' → logprob: -8.357662200927734
    9. '    
' → logprob: -8.857662200927734
    10. 'used' → logprob: -9.107662200927734

Token 1183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026847874745726585
    2. '=' → logprob: -3.6518478393554688
    3. '_count' → logprob: -8.401847839355469
    4. '=[]' → logprob: -8.651847839355469
    5. ':' → logprob: -10.151847839355469
    6. '_' → logprob: -10.276847839355469
    7. 's' → logprob: -10.776847839355469
    8. ',' → logprob: -11.151847839355469
    9. '_found' → logprob: -11.151847839355469
    10. 'count' → logprob: -11.901847839355469

Token 1184: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00012511172099038959
    2. ' []' → logprob: -9.25012493133545
    3. '[]
' → logprob: -11.00012493133545
    4. '{}' → logprob: -11.87512493133545
    5. 'set' → logprob: -12.50012493133545
    6. '[]}' → logprob: -14.12512493133545
    7. '0' → logprob: -14.75012493133545
    8. '[' → logprob: -15.37512493133545
    9. '[],' → logprob: -15.75012493133545
    10. '[])' → logprob: -16.500125885009766

Token 1185: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.19975179433822632
    2. '   ' → logprob: -2.324751853942871
    3. '
' → logprob: -2.574751853942871
    4. '```' → logprob: -5.199751853942871
    5. '    
' → logprob: -7.699751853942871
    6. 'b' → logprob: -7.949751853942871
    7. ' def' → logprob: -8.074751853942871
    8. 'buyers' → logprob: -8.324751853942871
    9. 'buyer' → logprob: -9.199751853942871
    10. '`' → logprob: -10.449751853942871

Token 1186: ' used' (ID: 2061)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007493165787309408
    2. 'assigned' → logprob: -5.632493019104004
    3. 'used' (adapté à ' used') → logprob: -6.132493019104004
    4. 'buyer' → logprob: -7.507493019104004
    5. 'visited' → logprob: -7.757493019104004
    6. 'buyers' → logprob: -7.882493019104004
    7. '
' → logprob: -9.007493019104004
    8. 'b' → logprob: -9.507493019104004
    9. 'from' → logprob: -10.257493019104004
    10. 'import' → logprob: -10.632493019104004

Token 1187: '_area' (ID: 34097)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.30408185720443726
    2. ' =' → logprob: -1.804081916809082
    3. '_' → logprob: -2.429081916809082
    4. '=' → logprob: -5.054081916809082
    5. '_positions' → logprob: -6.929081916809082
    6. '_spaces' → logprob: -7.804081916809082
    7. ' _' → logprob: -7.929081916809082
    8. '_rect' → logprob: -8.554081916809082
    9. '_tiles' → logprob: -8.679081916809082
    10. '```' → logprob: -9.054081916809082

Token 1188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132871389389038
    2. ' =' → logprob: -1.3132871389389038
    3. '=set' → logprob: -11.313286781311035
    4. ',' → logprob: -12.813286781311035
    5. '=[]' → logprob: -13.063286781311035
    6. '[' → logprob: -13.313286781311035
    7. '_' → logprob: -13.563286781311035
    8. 's' → logprob: -13.563286781311035
    9. ' ' → logprob: -14.063286781311035
    10. '[]' → logprob: -14.188286781311035

Token 1189: ' [[' (ID: 9237)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.3710249364376068
    2. '[[' → logprob: -1.3710249662399292
    3. '[' → logprob: -3.8710248470306396
    4. ' [[' → logprob: -3.9960248470306396
    5. ' set' → logprob: -4.121025085449219
    6. ' [' → logprob: -8.121025085449219
    7. '0' → logprob: -8.246025085449219
    8. '[]' → logprob: -9.621025085449219
    9. '{' → logprob: -11.371025085449219
    10. '{}' → logprob: -11.496025085449219

Token 1190: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00010413920972496271
    2. '0' → logprob: -9.250103950500488
    3. ' False' → logprob: -11.750103950500488
    4. 'None' → logprob: -16.375104904174805
    5. '(False' → logprob: -19.000104904174805
    6. '-' → logprob: -20.000104904174805
    7. '[' → logprob: -21.500104904174805
    8. '   ' → logprob: -21.875104904174805
    9. '=False' → logprob: -22.000104904174805
    10. 'false' → logprob: -22.500104904174805

Token 1191: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0806794986128807
    2. 'for' → logprob: -2.580679416656494
    3. ']' → logprob: -6.830679416656494
    4. ']*' → logprob: -7.330679416656494
    5. '   ' → logprob: -10.330679893493652
    6. '	for' → logprob: -12.205679893493652
    7. '           ' → logprob: -12.330679893493652
    8. ' ' → logprob: -12.330679893493652
    9. ' ]' → logprob: -13.080679893493652
    10. '               ' → logprob: -13.705679893493652

Token 1192: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -4.7994282795116305e-05
    2. '(X' → logprob: -10.12504768371582
    3. ' X' → logprob: -11.87504768371582
    4. '(' → logprob: -15.12504768371582
    5. '   ' → logprob: -15.37504768371582
    6. 'Y' → logprob: -16.00004768371582
    7. '
' → logprob: -16.37504768371582
    8. '10' → logprob: -16.37504768371582
    9. '```' → logprob: -16.87504768371582
    10. '[X' → logprob: -18.50004768371582

Token 1193: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47409942746162415
    2. 'for' → logprob: -0.9740993976593018
    3. '   ' → logprob: -11.349099159240723
    4. ']' → logprob: -11.849099159240723
    5. '	for' → logprob: -13.224099159240723
    6. '       ' → logprob: -14.724099159240723
    7. ')' → logprob: -14.724099159240723
    8. '           ' → logprob: -15.099099159240723
    9. ' ' → logprob: -15.474099159240723
    10. '```' → logprob: -15.724099159240723

Token 1194: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.19916176795959473
    2. '_' → logprob: -1.9491617679595947
    3. 'range' → logprob: -3.4491617679595947
    4. ' y' → logprob: -5.824161529541016
    5. 'y' → logprob: -6.574161529541016
    6. '_y' → logprob: -7.074161529541016
    7. ' _' → logprob: -7.449161529541016
    8. '_Y' → logprob: -8.449161529541016
    9. '_range' → logprob: -8.824161529541016
    10. ' in' → logprob: -8.824161529541016

Token 1195: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00038562860572710633
    2. ' range' → logprob: -7.875385761260986
    3. '(range' → logprob: -12.875385284423828
    4. '_range' → logprob: -13.250385284423828
    5. '0' → logprob: -14.875385284423828
    6. '_' → logprob: -14.875385284423828
    7. '	range' → logprob: -15.625385284423828
    8. 'x' → logprob: -16.750385284423828
    9. 'in' → logprob: -16.750385284423828
    10. '[' → logprob: -17.000385284423828

Token 1196: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10022833943367004
    2. ' range' → logprob: -2.3502283096313477
    3. '(range' → logprob: -11.725228309631348
    4. '[' → logprob: -11.975228309631348
    5. '_range' → logprob: -12.975228309631348
    6. '	range' → logprob: -13.725228309631348
    7. 'Y' → logprob: -13.975228309631348
    8. '
' → logprob: -14.100228309631348
    9. 'Range' → logprob: -14.475228309631348
    10. '.range' → logprob: -14.725228309631348

Token 1197: '(Y' (ID: 44341)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -3.893480243277736e-05
    2. ' Y' → logprob: -10.250039100646973
    3. '   ' → logprob: -13.125039100646973
    4. '(Y' → logprob: -14.000039100646973
    5. '	Y' → logprob: -14.875039100646973
    6. '           ' → logprob: -16.625038146972656
    7. '[Y' → logprob: -16.750038146972656
    8. '
' → logprob: -17.000038146972656
    9. '       ' → logprob: -17.125038146972656
    10. '0' → logprob: -17.625038146972656

Token 1198: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00015395533409900963
    2. ')]
' → logprob: -9.500153541564941
    3. ')' → logprob: -10.250153541564941
    4. ']' → logprob: -10.375153541564941
    5. '   ' → logprob: -11.500153541564941
    6. '       ' → logprob: -14.250153541564941
    7. ' )' → logprob: -14.875153541564941
    8. '])]' → logprob: -15.250153541564941
    9. ')]
' → logprob: -15.875153541564941
    10. '])' → logprob: -16.000154495239258

Token 1199: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06645681709051132
    2. '
' → logprob: -3.1914567947387695
    3. '   ' → logprob: -3.9414567947387695
    4. 'buyers' → logprob: -6.3164567947387695
    5. '    
' → logprob: -6.9414567947387695
    6. 'buyer' → logprob: -7.1914567947387695
    7. ' def' → logprob: -9.56645679473877
    8. '```' → logprob: -9.56645679473877
    9. 'b' → logprob: -9.94145679473877
    10. ' buyers' → logprob: -10.94145679473877

Token 1200: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.004951120354235172
    2. 'buyers' → logprob: -5.504951000213623
    3. 'buyer' → logprob: -7.504951000213623
    4. 'from' → logprob: -9.004951477050781
    5. '   ' → logprob: -9.254951477050781
    6. 'b' → logprob: -9.754951477050781
    7. ' def' → logprob: -10.754951477050781
    8. 'import' → logprob: -11.879951477050781
    9. '
' → logprob: -12.254951477050781
    10. 'idx' → logprob: -12.754951477050781

Token 1201: ' is' (ID: 382)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.3440399467945099
    2. 'dfs' → logprob: -1.3440399169921875
    3. ' back' → logprob: -3.8440399169921875
    4. ' search' → logprob: -5.0940399169921875
    5. 'search' → logprob: -6.5940399169921875
    6. 'back' → logprob: -6.5940399169921875
    7. ' try' → logprob: -11.469039916992188
    8. 'assign' → logprob: -12.219039916992188
    9. 'd' → logprob: -12.469039916992188
    10. 'def' → logprob: -12.844039916992188

Token 1202: '_valid' (ID: 23321)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.750532329082489
    2. '_valid' → logprob: -1.1255323886871338
    3. '_rectangle' → logprob: -2.750532388687134
    4. '_space' → logprob: -3.000532388687134
    5. '_safe' → logprob: -3.375532388687134
    6. ' _' → logprob: -4.250532150268555
    7. '_possible' → logprob: -4.875532150268555
    8. '_available' → logprob: -5.000532150268555
    9. '_overlap' → logprob: -5.250532150268555
    10. '_area' → logprob: -5.250532150268555

Token 1203: '(rect' (ID: 68123)
  Prédit: '(rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: -0.4360142946243286
    2. '(' → logprob: -1.1860142946243286
    3. '_' → logprob: -3.936014175415039
    4. '_rect' → logprob: -4.186014175415039
    5. '_rectangle' → logprob: -5.061014175415039
    6. '(x' → logprob: -6.686014175415039
    7. '(cell' → logprob: -6.811014175415039
    8. '_token' → logprob: -7.186014175415039
    9. '(_' → logprob: -7.311014175415039
    10. '((' → logprob: -7.436014175415039

Token 1204: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09958207607269287
    2. ',' → logprob: -2.7245821952819824
    3. '):
' → logprob: -3.7245821952819824
    4. ')' → logprob: -5.974582195281982
    5. '   ' → logprob: -6.599582195281982
    6. '[' → logprob: -7.724582195281982
    7. '(' → logprob: -8.724581718444824
    8. ' ):' → logprob: -9.474581718444824
    9. '_' → logprob: -9.599581718444824
    10. ':' → logprob: -9.849581718444824

Token 1205: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.062206536531448364
    2. ' used' → logprob: -2.812206506729126
    3. 'cells' → logprob: -9.062206268310547
    4. ' cells' → logprob: -10.062206268310547
    5. '   ' → logprob: -10.312206268310547
    6. ' ' → logprob: -11.437206268310547
    7. '):' → logprob: -11.687206268310547
    8. ')' → logprob: -11.937206268310547
    9. 'lambda' → logprob: -12.687206268310547
    10. '):
' → logprob: -12.812206268310547

Token 1206: '):
' (ID: 1883)
  Prédit: '_area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.01973631978034973
    2. '):' → logprob: -4.269736289978027
    3. '_' → logprob: -6.144736289978027
    4. '):
' → logprob: -6.644736289978027
    5. '_cells' → logprob: -7.019736289978027
    6. ',' → logprob: -8.144736289978027
    7. ')' → logprob: -8.144736289978027
    8. 'area' → logprob: -8.894736289978027
    9. 'Area' → logprob: -9.019736289978027
    10. '   ' → logprob: -9.394736289978027

Token 1207: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3076272010803223
    2. '[' → logprob: -1.8076272010803223
    3. '(' → logprob: -2.1826272010803223
    4. '  
' → logprob: -2.1826272010803223
    5. '        
' → logprob: -2.5576272010803223
    6. ' 
' → logprob: -3.1826272010803223
    7. ' (' → logprob: -3.4326272010803223
    8. '   
' → logprob: -3.4326272010803223
    9. '    
' → logprob: -3.8076272010803223
    10. '    ' → logprob: -3.9326272010803223

Token 1208: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.18445982038974762
    2. 'x' (adapté à ' x') → logprob: -2.434459924697876
    3. '       ' → logprob: -2.684459924697876
    4. ' for' → logprob: -4.559459686279297
    5. 'for' → logprob: -6.809459686279297
    6. '(x' → logprob: -7.934459686279297
    7. '   ' → logprob: -8.059459686279297
    8. '    ' → logprob: -9.434459686279297
    9. '           ' → logprob: -9.809459686279297
    10. '        ' → logprob: -10.559459686279297

Token 1209: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008957499638199806
    2. '_' → logprob: -5.383957386016846
    3. '2' → logprob: -6.883957386016846
    4. ',' → logprob: -6.883957386016846
    5. '```' → logprob: -7.508957386016846
    6. '_,' → logprob: -8.008957862854004
    7. ')' → logprob: -8.133957862854004
    8. '<|end|>' → logprob: -8.258957862854004
    9. '[' → logprob: -8.758957862854004
    10. '=' → logprob: -9.133957862854004

Token 1210: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37978747487068176
    2. ',x' → logprob: -1.6297874450683594
    3. ',y' → logprob: -2.7547874450683594
    4. '<|end|>' → logprob: -3.7547874450683594
    5. ' ,' → logprob: -4.129787445068359
    6. ' <=' → logprob: -5.004787445068359
    7. '<=' → logprob: -5.504787445068359
    8. ',
' → logprob: -7.004787445068359
    9. '==' → logprob: -7.379787445068359
    10. '<|end|>' → logprob: -7.504787445068359

Token 1211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001383805531077087
    2. ',' → logprob: -6.6263837814331055
    3. ' ,' → logprob: -10.876383781433105
    4. ',x' → logprob: -11.376383781433105
    5. ',y' → logprob: -11.501383781433105
    6. ' ' → logprob: -12.126383781433105
    7. ',
' → logprob: -12.626383781433105
    8. '```' → logprob: -12.751383781433105
    9. '
' → logprob: -13.501383781433105
    10. '   ' → logprob: -14.251383781433105

Token 1212: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38547059893608093
    2. ',x' → logprob: -1.5104706287384033
    3. ',y' → logprob: -2.3854706287384033
    4. ' ,' → logprob: -6.010470390319824
    5. '<|end|>' → logprob: -6.635470390319824
    6. ',
' → logprob: -7.010470390319824
    7. '<=' → logprob: -7.260470390319824
    8. ' <=' → logprob: -7.885470390319824
    9. '
' → logprob: -8.510470390319824
    10. '>=' → logprob: -9.010470390319824

Token 1213: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007861185818910599
    2. ',' → logprob: -5.757861137390137
    3. ',x' → logprob: -5.882861137390137
    4. '1' → logprob: -8.132861137390137
    5. ' ' → logprob: -8.257861137390137
    6. '=' → logprob: -8.507861137390137
    7. '```' → logprob: -8.507861137390137
    8. '<|end|>' → logprob: -8.507861137390137
    9. 'x' → logprob: -9.132861137390137
    10. '₂' → logprob: -9.132861137390137

Token 1214: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3105887472629547
    2. ',y' → logprob: -1.5605887174606323
    3. ',x' → logprob: -2.935588836669922
    4. ' ,' → logprob: -6.435588836669922
    5. '<=' → logprob: -6.935588836669922
    6. ' <=' → logprob: -7.435588836669922
    7. '```' → logprob: -8.560588836669922
    8. ',
' → logprob: -9.435588836669922
    9. '1' → logprob: -9.435588836669922
    10. '
' → logprob: -10.185588836669922

Token 1215: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44438987970352173
    2. '2' → logprob: -1.069389820098877
    3. '```' → logprob: -5.069389820098877
    4. '   ' → logprob: -5.944389820098877
    5. '<|end|>' → logprob: -6.194389820098877
    6. ',' → logprob: -6.694389820098877
    7. '...' → logprob: -7.194389820098877
    8. '+' → logprob: -7.319389820098877
    9. '<|end|>' → logprob: -7.694389820098877
    10. '_' → logprob: -8.319390296936035

Token 1216: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2956160008907318
    2. ')' → logprob: -2.4206159114837646
    3. '=' → logprob: -3.0456159114837646
    4. ' =' → logprob: -3.1706159114837646
    5. '       ' → logprob: -3.5456159114837646
    6. '<|end|>' → logprob: -4.795616149902344
    7. ':' → logprob: -5.045616149902344
    8. '        ' → logprob: -5.295616149902344
    9. '):
' → logprob: -5.420616149902344
    10. ' in' → logprob: -5.420616149902344

Token 1217: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.03804333135485649
    2. ' rect' → logprob: -3.288043260574341
    3. '	rect' → logprob: -13.288043022155762
    4. '(rect' → logprob: -15.663043022155762
    5. '_rect' → logprob: -17.663043975830078
    6. 'rec' → logprob: -18.288043975830078
    7. '   ' → logprob: -18.288043975830078
    8. 'rest' → logprob: -19.288043975830078
    9. '.rect' → logprob: -19.288043975830078
    10. 'x' → logprob: -19.538043975830078

Token 1218: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0297234058380127
    2. ':' → logprob: -1.1547234058380127
    3. '       ' → logprob: -1.7797234058380127
    4. '
' → logprob: -2.0297234058380127
    5. '<|end|>' → logprob: -5.154723167419434
    6. '   ' → logprob: -5.279723167419434
    7. '  
' → logprob: -5.404723167419434
    8. '        
' → logprob: -6.154723167419434
    9. '    
' → logprob: -6.279723167419434
    10. '           ' → logprob: -6.404723167419434

Token 1219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027112893760204315
    2. '
' → logprob: -3.6521129608154297
    3. ' for' → logprob: -8.02711296081543
    4. '           ' → logprob: -8.77711296081543
    5. '   ' → logprob: -8.77711296081543
    6. '	   ' → logprob: -9.77711296081543
    7. 'for' → logprob: -10.52711296081543
    8. '        
' → logprob: -11.02711296081543
    9. '	       ' → logprob: -11.02711296081543
    10. '
' → logprob: -11.15211296081543

Token 1220: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5825958847999573
    2. ' for' → logprob: -0.8325958847999573
    3. '       ' → logprob: -5.3325958251953125
    4. '   ' → logprob: -6.3325958251953125
    5. '
' → logprob: -11.582595825195312
    6. '	for' → logprob: -11.582595825195312
    7. '```' → logprob: -12.582595825195312
    8. '           ' → logprob: -13.707595825195312
    9. ' ' → logprob: -13.707595825195312
    10. '``' → logprob: -14.582595825195312

Token 1221: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.18278010189533234
    2. 'x' → logprob: -1.807780146598816
    3. 'yy' → logprob: -6.3077802658081055
    4. ' y' → logprob: -7.0577802658081055
    5. '_y' → logprob: -8.807780265808105
    6. '_x' → logprob: -10.557780265808105
    7. ' x' → logprob: -11.057780265808105
    8. '	y' → logprob: -11.057780265808105
    9. 'dy' → logprob: -11.182780265808105
    10. 'ny' → logprob: -11.307780265808105

Token 1222: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6337714791297913
    2. 'in' → logprob: -0.7587714791297913
    3. '=' → logprob: -7.5087714195251465
    4. ')' → logprob: -8.258771896362305
    5. '1' → logprob: -9.383771896362305
    6. ' =' → logprob: -9.883771896362305
    7. ',' → logprob: -10.008771896362305
    8. '<|end|>' → logprob: -10.508771896362305
    9. ',y' → logprob: -11.133771896362305
    10. '       ' → logprob: -11.133771896362305

Token 1223: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0040269880555570126
    2. ' range' → logprob: -6.004026889801025
    3. 'in' → logprob: -6.504026889801025
    4. ' in' → logprob: -9.879027366638184
    5. '   ' → logprob: -14.004027366638184
    6. '(range' → logprob: -15.004027366638184
    7. 'y' → logprob: -16.379026412963867
    8. ' ' → logprob: -17.129026412963867
    9. '
' → logprob: -17.254026412963867
    10. ' y' → logprob: -17.504026412963867

Token 1224: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0010016091400757432
    2. ' y' → logprob: -7.626001834869385
    3. '(y' → logprob: -7.626001834869385
    4. ',y' → logprob: -11.501001358032227
    5. '=y' → logprob: -12.001001358032227
    6. ',' → logprob: -12.626001358032227
    7. '	y' → logprob: -13.001001358032227
    8. '[y' → logprob: -13.126001358032227
    9. ')y' → logprob: -14.001001358032227
    10. '@y' → logprob: -14.876001358032227

Token 1225: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014808070845901966
    2. ',' → logprob: -5.014808177947998
    3. ',y' → logprob: -5.764808177947998
    4. ' y' → logprob: -6.139808177947998
    5. 'y' → logprob: -6.264808177947998
    6. '=y' → logprob: -8.13980770111084
    7. '   ' → logprob: -8.38980770111084
    8. '```' → logprob: -9.76480770111084
    9. ')' → logprob: -9.88980770111084
    10. '=' → logprob: -10.13980770111084

Token 1226: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.011109835468232632
    2. ',' → logprob: -4.511109828948975
    3. ' ,' → logprob: -10.261110305786133
    4. ',x' → logprob: -11.011110305786133
    5. '       ' → logprob: -12.136110305786133
    6. ',Y' → logprob: -13.136110305786133
    7. ',len' → logprob: -13.761110305786133
    8. '           ' → logprob: -14.886110305786133
    9. ',
' → logprob: -15.261110305786133
    10. ',v' → logprob: -15.636110305786133

Token 1227: '2' (ID: 17)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.588498592376709
    2. ',' → logprob: -0.963498592376709
    3. '2' → logprob: -3.338498592376709
    4. '1' → logprob: -4.338498592376709
    5. ',x' → logprob: -4.338498592376709
    6. ' ,' → logprob: -7.713498592376709
    7. 'y' → logprob: -7.713498592376709
    8. '```' → logprob: -8.713499069213867
    9. ',
' → logprob: -9.088499069213867
    10. '       ' → logprob: -9.838499069213867

Token 1228: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1204942911863327
    2. ',y' → logprob: -2.3704943656921387
    3. ',' → logprob: -3.9954943656921387
    4. ' +' → logprob: -6.870494365692139
    5. ',x' → logprob: -7.620494365692139
    6. '1' → logprob: -10.62049388885498
    7. ' ,' → logprob: -10.74549388885498
    8. '+y' → logprob: -10.87049388885498
    9. ',len' → logprob: -10.99549388885498
    10. '       ' → logprob: -11.74549388885498

Token 1229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00032712158281356096
    2. 'y' → logprob: -8.250327110290527
    3. '0' → logprob: -10.625327110290527
    4. '2' → logprob: -10.875327110290527
    5. '+' → logprob: -11.750327110290527
    6. ' ' → logprob: -12.375327110290527
    7. ' y' → logprob: -12.875327110290527
    8. '   ' → logprob: -13.000327110290527
    9. '
' → logprob: -13.500327110290527
    10. '(y' → logprob: -13.750327110290527

Token 1230: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4614114761352539
    2. '       ' → logprob: -1.836411476135254
    3. ',' → logprob: -2.086411476135254
    4. '           ' → logprob: -3.086411476135254
    5. '):' → logprob: -3.461411476135254
    6. '               ' → logprob: -5.461411476135254
    7. '```' → logprob: -6.711411476135254
    8. '                   ' → logprob: -7.461411476135254
    9. '                       ' → logprob: -7.586411476135254
    10. '   ' → logprob: -7.836411476135254

Token 1231: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13821391761302948
    2. '       ' → logprob: -2.263213872909546
    3. ' for' → logprob: -4.138214111328125
    4. '	       ' → logprob: -5.763214111328125
    5. '               ' → logprob: -6.013214111328125
    6. '[' → logprob: -7.013214111328125
    7. '<|end|>' → logprob: -7.763214111328125
    8. '   ' → logprob: -7.888214111328125
    9. 'for' → logprob: -8.263214111328125
    10. '```' → logprob: -8.513214111328125

Token 1232: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.016245150938630104
    2. 'for' (adapté à ' for') → logprob: -4.391245365142822
    3. '       ' → logprob: -6.266245365142822
    4. '           ' → logprob: -7.516245365142822
    5. '        ' → logprob: -7.641245365142822
    6. ' ' → logprob: -8.266244888305664
    7. '               ' → logprob: -8.391244888305664
    8. '	for' → logprob: -9.641244888305664
    9. '	       ' → logprob: -9.641244888305664
    10. '```' → logprob: -10.266244888305664

Token 1233: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006716555915772915
    2. ' x' → logprob: -5.006716728210449
    3. '0' → logprob: -13.63171672821045
    4. '(x' → logprob: -18.381715774536133
    5. '	x' → logprob: -18.506715774536133
    6. '_x' → logprob: -19.506715774536133
    7. '$x' → logprob: -19.756715774536133
    8. ' in' → logprob: -20.256715774536133
    9. ',x' → logprob: -20.381715774536133
    10. 'for' → logprob: -20.506715774536133

Token 1234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14277426898479462
    2. 'in' → logprob: -2.0177743434906006
    3. '1' → logprob: -9.89277458190918
    4. '           ' → logprob: -11.89277458190918
    5. '(x' → logprob: -12.01777458190918
    6. ',' → logprob: -12.14277458190918
    7. '```' → logprob: -12.14277458190918
    8. ' (' → logprob: -12.39277458190918
    9. ')' → logprob: -12.64277458190918
    10. 'In' → logprob: -13.01777458190918

Token 1235: ' range' (ID: 3352)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.045596908777952194
    2. 'range' → logprob: -3.5455968379974365
    3. '(x' → logprob: -4.920597076416016
    4. ' x' → logprob: -5.170597076416016
    5. ' range' → logprob: -5.920597076416016
    6. 'used' → logprob: -11.045597076416016
    7. '0' → logprob: -11.420597076416016
    8. '(range' → logprob: -11.545597076416016
    9. ' (' → logprob: -11.795597076416016
    10. ' used' → logprob: -11.920597076416016

Token 1236: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0012290386948734522
    2. 'x' → logprob: -6.7512288093566895
    3. ' (' → logprob: -10.376229286193848
    4. '(' → logprob: -11.626229286193848
    5. '[x' → logprob: -12.376229286193848
    6. '           ' → logprob: -12.501229286193848
    7. ',x' → logprob: -12.626229286193848
    8. '       ' → logprob: -13.001229286193848
    9. ' x' → logprob: -13.626229286193848
    10. '   ' → logprob: -14.376229286193848

Token 1237: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.27709001302719116
    2. 'x' → logprob: -2.027090072631836
    3. ',x' → logprob: -2.527090072631836
    4. ',' → logprob: -3.902090072631836
    5. ',y' → logprob: -5.777090072631836
    6. ' x' → logprob: -6.402090072631836
    7. '           ' → logprob: -6.777090072631836
    8. ' ,' → logprob: -7.152090072631836
    9. '       ' → logprob: -7.652090072631836
    10. ')' → logprob: -7.652090072631836

Token 1238: ',x' (ID: 29748)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.13737156987190247
    2. ',x' → logprob: -2.63737154006958
    3. ',' → logprob: -2.88737154006958
    4. ' ,' → logprob: -7.01237154006958
    5. ',len' → logprob: -10.262372016906738
    6. ',user' → logprob: -10.387372016906738
    7. '1' → logprob: -10.762372016906738
    8. '           ' → logprob: -10.887372016906738
    9. '+' → logprob: -10.887372016906738
    10. ',
' → logprob: -11.637372016906738

Token 1239: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28273293375968933
    2. '2' → logprob: -1.5327329635620117
    3. '+' → logprob: -4.032732963562012
    4. 'x' → logprob: -5.157732963562012
    5. '0' → logprob: -6.282732963562012
    6. ')' → logprob: -6.532732963562012
    7. '```' → logprob: -6.907732963562012
    8. ',x' → logprob: -7.532732963562012
    9. '<|end|>' → logprob: -7.532732963562012
    10. '<x' → logprob: -8.657732963562012

Token 1240: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007072316948324442
    2. ' +' → logprob: -5.007072448730469
    3. '1' → logprob: -8.132072448730469
    4. '2' → logprob: -10.382072448730469
    5. '+x' → logprob: -11.757072448730469
    6. ')' → logprob: -12.007072448730469
    7. ')+' → logprob: -12.257072448730469
    8. '```' → logprob: -12.757072448730469
    9. ' ' → logprob: -13.132072448730469
    10. ',' → logprob: -13.257072448730469

Token 1241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. '+' → logprob: -12.37501049041748
    3. ' ' → logprob: -12.75001049041748
    4. ')' → logprob: -13.62501049041748
    5. '2' → logprob: -14.25001049041748
    6. '0' → logprob: -14.93751049041748
    7. '```' → logprob: -15.81251049041748
    8. '
' → logprob: -15.93751049041748
    9. '   ' → logprob: -15.93751049041748
    10. ',' → logprob: -16.250009536743164

Token 1242: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.15546929836273193
    2. '               ' → logprob: -2.6554694175720215
    3. '):' → logprob: -2.6554694175720215
    4. '           ' → logprob: -6.7804694175720215
    5. ')' → logprob: -7.5304694175720215
    6. '                   ' → logprob: -8.405468940734863
    7. ',' → logprob: -8.530468940734863
    8. ':
' → logprob: -8.530468940734863
    9. '<|end|>' → logprob: -8.530468940734863
    10. '                               ' → logprob: -8.905468940734863

Token 1243: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001106755924411118
    2. '           ' → logprob: -7.5011067390441895
    3. '                               ' → logprob: -8.501107215881348
    4. '                   ' → logprob: -9.751107215881348
    5. '	           ' → logprob: -9.876107215881348
    6. ' if' → logprob: -9.876107215881348
    7. '                           ' → logprob: -10.001107215881348
    8. '<|end|>' → logprob: -10.251107215881348
    9. '              ' → logprob: -10.876107215881348
    10. '                       ' → logprob: -11.001107215881348

Token 1244: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3496962785720825
    2. 'if' (adapté à ' if') → logprob: -1.3496962785720825
    3. '                   ' → logprob: -3.349696159362793
    4. '               ' → logprob: -7.474696159362793
    5. '                       ' → logprob: -9.849696159362793
    6. '
' → logprob: -10.599696159362793
    7. '           ' → logprob: -10.849696159362793
    8. '                           ' → logprob: -12.349696159362793
    9. '   ' → logprob: -12.724696159362793
    10. '	if' → logprob: -12.974696159362793

Token 1245: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.5759438872337341
    2. 'used' → logprob: -0.8259438872337341
    3. '   ' → logprob: -12.450943946838379
    4. '.used' → logprob: -15.325943946838379
    5. '           ' → logprob: -15.450943946838379
    6. '    ' → logprob: -17.075942993164062
    7. '               ' → logprob: -17.200942993164062
    8. '_used' → logprob: -17.325942993164062
    9. 'Used' → logprob: -18.075942993164062
    10. ' ' → logprob: -18.200942993164062

Token 1246: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.00015955790877342224
    2. '[x' → logprob: -8.75015926361084
    3. '[' → logprob: -14.50015926361084
    4. ' [' → logprob: -15.12515926361084
    5. '```' → logprob: -16.875160217285156
    6. '][' → logprob: -17.375160217285156
    7. 'y' → logprob: -17.625160217285156
    8. '   ' → logprob: -17.625160217285156
    9. '
' → logprob: -17.750160217285156
    10. '[u' → logprob: -18.875160217285156

Token 1247: '][' (ID: 2696)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.39886340498924255
    2. '][' → logprob: -1.273863434791565
    3. '[y' → logprob: -3.0238633155822754
    4. '[' → logprob: -8.023863792419434
    5. ']==' → logprob: -9.648863792419434
    6. ']' → logprob: -10.148863792419434
    7. '==' → logprob: -11.273863792419434
    8. ' ][' → logprob: -11.398863792419434
    9. '
' → logprob: -11.648863792419434
    10. 'x' → logprob: -11.648863792419434

Token 1248: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.9361264946837764e-07
    2. ' x' → logprob: -16.375
    3. '	x' → logprob: -19.75
    4. '
' → logprob: -20.125
    5. ']' → logprob: -20.125
    6. '][' → logprob: -20.625
    7. '[x' → logprob: -20.875
    8. '"x' → logprob: -21.5
    9. '(x' → logprob: -21.75
    10. '```' → logprob: -22.375

Token 1249: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.35461369156837463
    2. ']:' → logprob: -1.4796136617660522
    3. ']==' → logprob: -2.729613780975342
    4. ']' → logprob: -5.354613780975342
    5. '==' → logprob: -8.229613304138184
    6. ']:

' → logprob: -9.104613304138184
    7. '                   ' → logprob: -9.354613304138184
    8. ' ]' → logprob: -9.729613304138184
    9. ']:
' → logprob: -9.979613304138184
    10. '           ' → logprob: -10.104613304138184

Token 1250: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009256363846361637
    2. '                       ' → logprob: -5.509256362915039
    3. '                           ' → logprob: -5.634256362915039
    4. ':
' → logprob: -7.884256362915039
    5. '                               ' → logprob: -8.134256362915039
    6. ' return' → logprob: -8.384256362915039
    7. '               ' → logprob: -8.384256362915039
    8. '                  ' → logprob: -9.634256362915039
    9. ':' → logprob: -9.759256362915039
    10. 'return' → logprob: -10.009256362915039

Token 1251: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2970762550830841
    2. '                       ' → logprob: -2.1720762252807617
    3. 'return' (adapté à ' return') → logprob: -2.5470762252807617
    4. '                   ' → logprob: -3.5470762252807617
    5. '                               ' → logprob: -3.6720762252807617
    6. '                           ' → logprob: -5.422076225280762
    7. ' 
' → logprob: -5.547076225280762
    8. '                    ' → logprob: -7.422076225280762
    9. '                                   ' → logprob: -7.672076225280762
    10. '                        ' → logprob: -8.297076225280762

Token 1252: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.048640280961990356
    2. ' False' → logprob: -3.048640251159668
    3. 'True' → logprob: -10.048640251159668
    4. ' True' → logprob: -11.548640251159668
    5. '(False' → logprob: -17.298641204833984
    6. '
' → logprob: -18.048641204833984
    7. '=False' → logprob: -20.298641204833984
    8. '                   ' → logprob: -20.923641204833984
    9. '   ' → logprob: -21.298641204833984
    10. ' 
' → logprob: -21.923641204833984

Token 1253: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20891956984996796
    2. '<|end|>' → logprob: -2.3339195251464844
    3. '\n' → logprob: -3.5839195251464844
    4. '.' → logprob: -4.208919525146484
    5. '                ' → logprob: -4.583919525146484
    6. ')' → logprob: -5.208919525146484
    7. '           ' → logprob: -5.708919525146484
    8. '                       ' → logprob: -5.833919525146484
    9. '                   ' → logprob: -5.958919525146484
    10. '[' → logprob: -5.958919525146484

Token 1254: '       ' (ID: 309)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015248550102114677
    2. '                
' → logprob: -5.265248775482178
    3. '
' → logprob: -5.890248775482178
    4. '       ' → logprob: -6.890248775482178
    5. '                ' → logprob: -7.265248775482178
    6. '           ' → logprob: -7.265248775482178
    7. '\n' → logprob: -7.640248775482178
    8. '                        
' → logprob: -7.640248775482178
    9. '                    
' → logprob: -7.765248775482178
    10. '                       ' → logprob: -7.765248775482178

Token 1255: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05930177494883537
    2. '               ' → logprob: -3.0593018531799316
    3. '
' → logprob: -4.809301853179932
    4. '	' → logprob: -7.559301853179932
    5. ' return' → logprob: -7.809301853179932
    6. '           ' → logprob: -7.809301853179932
    7. '   ' → logprob: -8.434301376342773
    8. '                   ' → logprob: -8.434301376342773
    9. ' 
' → logprob: -8.934301376342773
    10. 'return' (adapté à ' return') → logprob: -9.059301376342773

Token 1256: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0009115827269852161
    2. ' True' → logprob: -7.000911712646484
    3. '   ' → logprob: -18.500911712646484
    4. '(True' → logprob: -18.875911712646484
    5. 'False' → logprob: -19.000911712646484
    6. '
' → logprob: -20.500911712646484
    7. '=True' → logprob: -21.375911712646484
    8. ' ' → logprob: -22.000911712646484
    9. 'true' → logprob: -23.250911712646484
    10. 'Tr' → logprob: -23.500911712646484

Token 1257: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1258: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6513163447380066
    2. '
' → logprob: -0.7763163447380066
    3. '    
' → logprob: -4.401316165924072
    4. 'def' → logprob: -5.651316165924072
    5. '```' → logprob: -6.151316165924072
    6. ' def' → logprob: -8.52631664276123
    7. ' 
' → logprob: -9.15131664276123
    8. '        
' → logprob: -9.27631664276123
    9. '  
' → logprob: -9.27631664276123
    10. '       ' → logprob: -9.77631664276123

Token 1259: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6965972781181335
    2. 'def' (adapté à ' def') → logprob: -0.6965972781181335
    3. 'buyer' → logprob: -6.696597099304199
    4. 'buyers' → logprob: -7.446597099304199
    5. '
' → logprob: -7.571597099304199
    6. ' def' → logprob: -7.696597099304199
    7. 'from' → logprob: -8.1965970993042
    8. '    
' → logprob: -9.1965970993042
    9. 'for' → logprob: -9.4465970993042
    10. 'import' → logprob: -9.6965970993042

Token 1260: ' set' (ID: 920)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.20399415493011475
    2. ' dfs' → logprob: -1.9539941549301147
    3. 'back' → logprob: -3.9539942741394043
    4. ' back' → logprob: -3.9539942741394043
    5. 'search' → logprob: -5.578994274139404
    6. ' search' → logprob: -7.453994274139404
    7. 'assign' → logprob: -10.078993797302246
    8. 'solve' → logprob: -10.453993797302246
    9. 'def' → logprob: -11.078993797302246
    10. 'try' → logprob: -11.453993797302246

Token 1261: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.1157078817486763
    2. '_' → logprob: -2.3657078742980957
    3. '_area' → logprob: -4.240707874298096
    4. ' _' → logprob: -8.615708351135254
    5. '_valid' → logprob: -8.615708351135254
    6. '_usage' → logprob: -9.365708351135254
    7. 'used' → logprob: -9.490708351135254
    8. '_t' → logprob: -9.740708351135254
    9. '_cells' → logprob: -9.990708351135254
    10. '_cell' → logprob: -9.990708351135254

Token 1262: '(rect' (ID: 68123)
  Prédit: '(rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: -0.07040873169898987
    2. '(' → logprob: -2.695408821105957
    3. ' (' → logprob: -8.195408821105957
    4. '(x' → logprob: -9.695408821105957
    5. '(True' → logprob: -10.445408821105957
    6. '(arr' → logprob: -10.445408821105957
    7. '(row' → logprob: -11.445408821105957
    8. '_rect' → logprob: -12.195408821105957
    9. '   ' → logprob: -12.320408821105957
    10. '(layer' → logprob: -12.320408821105957

Token 1263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.955703818472102e-05
    2. '(rect' → logprob: -10.500059127807617
    3. ' ,' → logprob: -10.875059127807617
    4. '       ' → logprob: -12.500059127807617
    5. '   ' → logprob: -12.750059127807617
    6. ',x' → logprob: -13.250059127807617
    7. 'rect' → logprob: -13.875059127807617
    8. ',(' → logprob: -14.125059127807617
    9. ',true' → logprob: -14.125059127807617
    10. '           ' → logprob: -14.375059127807617

Token 1264: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.000492268183734268
    2. ' used' → logprob: -7.625492095947266
    3. '   ' → logprob: -12.875492095947266
    4. 'True' → logprob: -13.375492095947266
    5. 'true' → logprob: -16.875492095947266
    6. '    
' → logprob: -17.250492095947266
    7. ' True' → logprob: -18.000492095947266
    8. 'Used' → logprob: -18.000492095947266
    9. '    ' → logprob: -18.375492095947266
    10. 'visited' → logprob: -18.500492095947266

Token 1265: ',val' (ID: 126054)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -8.232493564719334e-05
    2. ',x' → logprob: -10.250082015991211
    3. ' ,' → logprob: -10.375082015991211
    4. '   ' → logprob: -12.250082015991211
    5. ',true' → logprob: -12.625082015991211
    6. ',y' → logprob: -13.125082015991211
    7. '       ' → logprob: -13.375082015991211
    8. ',value' → logprob: -14.375082015991211
    9. ',row' → logprob: -14.375082015991211
    10. ',
' → logprob: -14.625082015991211

Token 1266: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5760573148727417
    2. '):
' → logprob: -0.8260573148727417
    3. '   ' → logprob: -9.826057434082031
    4. '):
' → logprob: -10.076057434082031
    5. ')' → logprob: -12.201057434082031
    6. '):

' → logprob: -12.576057434082031
    7. '[' → logprob: -12.701057434082031
    8. ',' → logprob: -13.201057434082031
    9. ':' → logprob: -13.201057434082031
    10. '       ' → logprob: -13.201057434082031

Token 1267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003875958500429988
    2. '(x' → logprob: -5.878875732421875
    3. '   ' → logprob: -7.253875732421875
    4. 'x' → logprob: -8.503875732421875
    5. '```' → logprob: -9.878875732421875
    6. '(' → logprob: -10.253875732421875
    7. ' x' → logprob: -10.378875732421875
    8. ' (' → logprob: -11.753875732421875
    9. '
' → logprob: -12.003875732421875
    10. '	x' → logprob: -12.253875732421875

Token 1268: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04977115988731384
    2. 'x' (adapté à ' x') → logprob: -3.0497710704803467
    3. ' x' → logprob: -6.799771308898926
    4. '       ' → logprob: -10.299771308898926
    5. '	x' → logprob: -10.674771308898926
    6. 'for' → logprob: -11.549771308898926
    7. '```' → logprob: -13.299771308898926
    8. ' for' → logprob: -14.424771308898926
    9. '(x' → logprob: -15.799771308898926
    10. ' ' → logprob: -16.54977035522461

Token 1269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000317231344524771
    2. ',y' → logprob: -8.750317573547363
    3. '=' → logprob: -10.125317573547363
    4. ',' → logprob: -10.125317573547363
    5. '   ' → logprob: -10.375317573547363
    6. '```' → logprob: -11.000317573547363
    7. '
' → logprob: -11.625317573547363
    8. ' ' → logprob: -12.250317573547363
    9. '_' → logprob: -12.500317573547363
    10. ')' → logprob: -13.250317573547363

Token 1270: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0007166040013544261
    2. ',' → logprob: -7.250716686248779
    3. ' ,' → logprob: -12.000716209411621
    4. '   ' → logprob: -15.625716209411621
    5. ',
' → logprob: -16.125717163085938
    6. ',x' → logprob: -16.625717163085938
    7. ',Y' → logprob: -17.125717163085938
    8. '```' → logprob: -17.500717163085938
    9. ',int' → logprob: -18.375717163085938
    10. ',v' → logprob: -18.375717163085938

Token 1271: '1' (ID: 16)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.40976616740226746
    2. '1' → logprob: -1.2847661972045898
    3. ',' → logprob: -2.90976619720459
    4. ',set' → logprob: -6.65976619720459
    5. ',x' → logprob: -6.78476619720459
    6. ' ,' → logprob: -7.28476619720459
    7. ',val' → logprob: -7.40976619720459
    8. '=' → logprob: -8.15976619720459
    9. '```' → logprob: -8.40976619720459
    10. ',user' → logprob: -8.53476619720459

Token 1272: ',x' (ID: 29748)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0008121283026412129
    2. ',' → logprob: -7.12581205368042
    3. ' ,' → logprob: -12.375812530517578
    4. ',val' → logprob: -13.375812530517578
    5. ',x' → logprob: -13.750812530517578
    6. ',
' → logprob: -15.750812530517578
    7. '=' → logprob: -16.000812530517578
    8. ',v' → logprob: -16.125812530517578
    9. '   ' → logprob: -16.250812530517578
    10. 'y' → logprob: -16.500812530517578

Token 1273: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001977764768525958
    2. '1' → logprob: -6.251977920532227
    3. '=' → logprob: -11.626977920532227
    4. '   ' → logprob: -11.626977920532227
    5. 'set' → logprob: -11.751977920532227
    6. ',' → logprob: -11.876977920532227
    7. '```' → logprob: -12.626977920532227
    8. '       ' → logprob: -13.126977920532227
    9. '_' → logprob: -13.376977920532227
    10. '₂' → logprob: -13.501977920532227

Token 1274: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0004960790392942727
    2. ',' → logprob: -7.625495910644531
    3. ' ,' → logprob: -11.875495910644531
    4. ',
' → logprob: -14.625495910644531
    5. ',x' → logprob: -15.000495910644531
    6. ',val' → logprob: -15.500495910644531
    7. '+' → logprob: -17.12549591064453
    8. ',
' → logprob: -17.50049591064453
    9. '```' → logprob: -17.62549591064453
    10. 'y' → logprob: -17.87549591064453

Token 1275: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03415538743138313
    2. '2' → logprob: -3.4091553688049316
    3. '=' → logprob: -7.909155368804932
    4. '```' → logprob: -10.03415584564209
    5. '   ' → logprob: -10.65915584564209
    6. 'y' → logprob: -10.90915584564209
    7. ' ' → logprob: -11.65915584564209
    8. ',' → logprob: -11.65915584564209
    9. 'set' → logprob: -11.78415584564209
    10. ',y' → logprob: -12.28415584564209

Token 1276: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0620805099606514
    2. '=' → logprob: -3.3120806217193604
    3. ' =' → logprob: -4.312080383300781
    4. ',val' → logprob: -5.437080383300781
    5. ',x' → logprob: -6.187080383300781
    6. ' ,' → logprob: -6.812080383300781
    7. ')' → logprob: -7.687080383300781
    8. ',
' → logprob: -7.812080383300781
    9. '   ' → logprob: -8.062080383300781
    10. '       ' → logprob: -8.062080383300781

Token 1277: 'rect' (ID: 4104)
  Prédit: 'rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.0007102862582542002
    2. ' rect' → logprob: -7.250710487365723
    3. '(rect' → logprob: -15.250710487365723
    4. '	rect' → logprob: -16.875709533691406
    5. 'rest' → logprob: -18.125709533691406
    6. '_rect' → logprob: -18.750709533691406
    7. '   ' → logprob: -19.125709533691406
    8. 'rec' → logprob: -20.125709533691406
    9. '.rect' → logprob: -20.375709533691406
    10. 'x' → logprob: -20.375709533691406

Token 1278: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05091789364814758
    2. '   ' → logprob: -3.050917863845825
    3. '
' → logprob: -7.050918102264404
    4. '           ' → logprob: -7.550918102264404
    5. 'for' → logprob: -8.300917625427246
    6. ' for' → logprob: -8.425917625427246
    7. ',' → logprob: -9.175917625427246
    8. '    
' → logprob: -9.300917625427246
    9. ':
' → logprob: -9.800917625427246
    10. '	for' → logprob: -10.050917625427246

Token 1279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00157437555026263
    2. '   ' → logprob: -6.626574516296387
    3. '
' → logprob: -8.626574516296387
    4. ' for' → logprob: -10.251574516296387
    5. '```' → logprob: -11.126574516296387
    6. '           ' → logprob: -11.751574516296387
    7. '	   ' → logprob: -12.376574516296387
    8. '	for' → logprob: -13.501574516296387
    9. 'for' → logprob: -14.001574516296387
    10. '    
' → logprob: -14.126574516296387

Token 1280: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4516375660896301
    2. '   ' → logprob: -1.9516375064849854
    3. 'for' (adapté à ' for') → logprob: -1.9516375064849854
    4. '       ' → logprob: -2.5766375064849854
    5. '
' → logprob: -6.2016377449035645
    6. '	for' → logprob: -6.9516377449035645
    7. '           ' → logprob: -8.451637268066406
    8. '	   ' → logprob: -10.201637268066406
    9. ' ' → logprob: -10.326637268066406
    10. '     ' → logprob: -11.826637268066406

Token 1281: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005234713666141033
    2. ' y' → logprob: -5.255234718322754
    3. '	y' → logprob: -14.505234718322754
    4. 'x' → logprob: -14.755234718322754
    5. ''y' → logprob: -18.005233764648438
    6. '   ' → logprob: -18.880233764648438
    7. '_y' → logprob: -19.755233764648438
    8. '[y' → logprob: -20.130233764648438
    9. ')y' → logprob: -20.380233764648438
    10. ' ' → logprob: -20.505233764648438

Token 1282: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4741249680519104
    2. 'in' → logprob: -0.9741249680519104
    3. '1' → logprob: -10.599124908447266
    4. '=' → logprob: -11.224124908447266
    5. '```' → logprob: -12.099124908447266
    6. ' =' → logprob: -13.849124908447266
    7. '=y' → logprob: -14.224124908447266
    8. '   ' → logprob: -14.974124908447266
    9. '       ' → logprob: -15.099124908447266
    10. 'y' → logprob: -15.099124908447266

Token 1283: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0797727108001709
    2. 'y' → logprob: -2.579772710800171
    3. ' range' → logprob: -7.07977294921875
    4. ' y' → logprob: -10.20477294921875
    5. '(y' → logprob: -13.32977294921875
    6. '(range' → logprob: -13.70477294921875
    7. 'in' → logprob: -15.32977294921875
    8. '   ' → logprob: -15.45477294921875
    9. '[y' → logprob: -16.20477294921875
    10. '
' → logprob: -16.32977294921875

Token 1284: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0005626845522783697
    2. '(y' → logprob: -7.50056266784668
    3. ' y' → logprob: -11.87556266784668
    4. 'range' → logprob: -13.50056266784668
    5. '=y' → logprob: -14.50056266784668
    6. '   ' → logprob: -15.25056266784668
    7. '	y' → logprob: -15.50056266784668
    8. '[y' → logprob: -15.50056266784668
    9. ',y' → logprob: -16.50056266784668
    10. 'x' → logprob: -16.50056266784668

Token 1285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001617035741219297
    2. 'y' → logprob: -9.000162124633789
    3. '(y' → logprob: -11.625162124633789
    4. '   ' → logprob: -12.125162124633789
    5. ',y' → logprob: -12.250162124633789
    6. '=y' → logprob: -12.750162124633789
    7. ',' → logprob: -12.875162124633789
    8. '
' → logprob: -13.000162124633789
    9. '```' → logprob: -13.000162124633789
    10. ' y' → logprob: -13.125162124633789

Token 1286: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0069210343062877655
    2. ',x' → logprob: -5.63192081451416
    3. ',' → logprob: -5.75692081451416
    4. '       ' → logprob: -9.38192081451416
    5. ' ,' → logprob: -10.25692081451416
    6. ';y' → logprob: -12.25692081451416
    7. '+' → logprob: -12.38192081451416
    8. '   ' → logprob: -12.38192081451416
    9. '
' → logprob: -12.63192081451416
    10. '           ' → logprob: -12.75692081451416

Token 1287: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007945986464619637
    2. '1' → logprob: -5.382946014404297
    3. '```' → logprob: -6.257946014404297
    4. 'x' → logprob: -7.132946014404297
    5. '       ' → logprob: -8.882946014404297
    6. '...' → logprob: -9.507946014404297
    7. ',x' → logprob: -9.757946014404297
    8. 'range' → logprob: -9.757946014404297
    9. '   ' → logprob: -9.882946014404297
    10. '+' → logprob: -10.007946014404297

Token 1288: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004124823026359081
    2. ',' → logprob: -5.754124641418457
    3. ',y' → logprob: -7.129124641418457
    4. ',x' → logprob: -9.754124641418457
    5. ' +' → logprob: -9.879124641418457
    6. '       ' → logprob: -11.879124641418457
    7. '2' → logprob: -12.504124641418457
    8. '```' → logprob: -12.754124641418457
    9. '
' → logprob: -12.879124641418457
    10. ' ,' → logprob: -13.129124641418457

Token 1289: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -12.125007629394531
    3. '+' → logprob: -14.250007629394531
    4. '```' → logprob: -14.750007629394531
    5. '   ' → logprob: -15.000007629394531
    6. '
' → logprob: -15.750007629394531
    7. '2' → logprob: -16.12500762939453
    8. 'range' → logprob: -16.62500762939453
    9. '       ' → logprob: -17.25000762939453
    10. 'val' → logprob: -17.37500762939453

Token 1290: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13929495215415955
    2. ':
' → logprob: -2.5142948627471924
    3. '           ' → logprob: -3.5142948627471924
    4. '       ' → logprob: -4.8892951011657715
    5. ':' → logprob: -5.3892951011657715
    6. '```' → logprob: -5.7642951011657715
    7. '):' → logprob: -6.0142951011657715
    8. '   ' → logprob: -7.3892951011657715
    9. '               ' → logprob: -7.7642951011657715
    10. ',' → logprob: -8.764294624328613

Token 1291: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10683812201023102
    2. '       ' → logprob: -2.3568382263183594
    3. '               ' → logprob: -5.606838226318359
    4. '   ' → logprob: -6.356838226318359
    5. ' for' → logprob: -7.606838226318359
    6. 'for' → logprob: -8.23183822631836
    7. '```' → logprob: -8.48183822631836
    8. '	       ' → logprob: -9.48183822631836
    9. '[' → logprob: -9.85683822631836
    10. '                   ' → logprob: -10.73183822631836

Token 1292: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2848578691482544
    2. ' for' → logprob: -1.9098578691482544
    3. '           ' → logprob: -3.034857749938965
    4. '       ' → logprob: -3.159857749938965
    5. '   ' → logprob: -5.284857749938965
    6. '               ' → logprob: -5.534857749938965
    7. '```' → logprob: -8.909857749938965
    8. '	for' → logprob: -9.784857749938965
    9. ' ' → logprob: -11.409857749938965
    10. '                   ' → logprob: -11.534857749938965

Token 1293: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001170225441455841
    2. ' x' → logprob: -6.7511701583862305
    3. '	x' → logprob: -17.501171112060547
    4. '```' → logprob: -20.001171112060547
    5. '$x' → logprob: -20.251171112060547
    6. '(x' → logprob: -20.501171112060547
    7. ')x' → logprob: -20.751171112060547
    8. '[x' → logprob: -20.751171112060547
    9. '   ' → logprob: -21.501171112060547
    10. '"x' → logprob: -21.751171112060547

Token 1294: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4352593719959259
    2. ' in' → logprob: -1.0602593421936035
    3. '<|end|>' → logprob: -5.9352593421936035
    4. '=' → logprob: -6.9352593421936035
    5. '```' → logprob: -7.6852593421936035
    6. '[' → logprob: -7.8102593421936035
    7. ' =' → logprob: -7.8102593421936035
    8. '(x' → logprob: -8.435259819030762
    9. '=x' → logprob: -8.560259819030762
    10. 'In' → logprob: -8.685259819030762

Token 1295: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20167918503284454
    2. ' range' → logprob: -2.451679229736328
    3. '(x' → logprob: -2.826679229736328
    4. 'x' → logprob: -3.326679229736328
    5. ' x' → logprob: -6.701679229736328
    6. '[x' → logprob: -9.826679229736328
    7. ' (' → logprob: -10.076679229736328
    8. '(range' → logprob: -10.451679229736328
    9. '=x' → logprob: -12.701679229736328
    10. ',x' → logprob: -12.951679229736328

Token 1296: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12695781886577606
    2. 'x' → logprob: -2.126957893371582
    3. '=x' → logprob: -11.751957893371582
    4. ' x' → logprob: -12.001957893371582
    5. ',x' → logprob: -13.001957893371582
    6. '```' → logprob: -13.001957893371582
    7. '           ' → logprob: -13.126957893371582
    8. ' (' → logprob: -13.251957893371582
    9. '       ' → logprob: -13.626957893371582
    10. '<x' → logprob: -14.001957893371582

Token 1297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008006958523765206
    2. 'x' → logprob: -7.375800609588623
    3. '[x' → logprob: -9.500801086425781
    4. '+' → logprob: -11.250801086425781
    5. ',x' → logprob: -11.750801086425781
    6. '(x' → logprob: -11.750801086425781
    7. '```' → logprob: -11.750801086425781
    8. '   ' → logprob: -11.875801086425781
    9. '       ' → logprob: -12.375801086425781
    10. '=x' → logprob: -12.375801086425781

Token 1298: ',x' (ID: 29748)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.29270848631858826
    2. ',x' → logprob: -1.4177085161209106
    3. ',' → logprob: -4.792708396911621
    4. '][' → logprob: -6.542708396911621
    5. ',val' → logprob: -7.542708396911621
    6. '[x' → logprob: -7.917708396911621
    7. 'x' → logprob: -8.542708396911621
    8. '[y' → logprob: -9.042708396911621
    9. '```' → logprob: -9.167708396911621
    10. ' ,' → logprob: -9.167708396911621

Token 1299: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8281576633453369
    2. '2' → logprob: -1.078157663345337
    3. 'x' → logprob: -1.703157663345337
    4. '+' → logprob: -3.328157663345337
    5. ',x' → logprob: -6.828157424926758
    6. '```' → logprob: -6.828157424926758
    7. '0' → logprob: -7.828157424926758
    8. ',' → logprob: -8.203157424926758
    9. '+x' → logprob: -8.328157424926758
    10. '<x' → logprob: -8.578157424926758

Token 1300: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006392885115928948
    2. '[' → logprob: -8.875638961791992
    3. ',x' → logprob: -9.375638961791992
    4. ',' → logprob: -9.500638961791992
    5. '1' → logprob: -9.625638961791992
    6. '+x' → logprob: -9.750638961791992
    7. ',y' → logprob: -10.125638961791992
    8. ' +' → logprob: -10.375638961791992
    9. '       ' → logprob: -10.875638961791992
    10. '][' → logprob: -10.875638961791992

Token 1301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008164160535670817
    2. 'x' → logprob: -7.125816345214844
    3. '2' → logprob: -12.125816345214844
    4. 'rect' → logprob: -13.250816345214844
    5. 'val' → logprob: -14.250816345214844
    6. ' x' → logprob: -14.375816345214844
    7. ' ' → logprob: -14.750816345214844
    8. '(x' → logprob: -14.875816345214844
    9. '4' → logprob: -15.000816345214844
    10. '
' → logprob: -15.125816345214844

Token 1302: '):
' (ID: 1883)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5178089141845703
    2. '):
' → logprob: -1.0178089141845703
    3. '           ' → logprob: -4.51780891418457
    4. ']:
' → logprob: -4.51780891418457
    5. '):' → logprob: -5.14280891418457
    6. ',' → logprob: -5.26780891418457
    7. '                   ' → logprob: -6.26780891418457
    8. ':
' → logprob: -6.26780891418457
    9. '       ' → logprob: -6.26780891418457
    10. '][' → logprob: -6.64280891418457

Token 1303: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07173377275466919
    2. ' used' → logprob: -2.6967337131500244
    3. '           ' → logprob: -6.5717339515686035
    4. '                   ' → logprob: -8.696733474731445
    5. 'used' → logprob: -9.196733474731445
    6. '```' → logprob: -9.571733474731445
    7. '   ' → logprob: -11.196733474731445
    8. '                               ' → logprob: -11.571733474731445
    9. '       ' → logprob: -11.946733474731445
    10. ' set' → logprob: -12.071733474731445

Token 1304: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.01819641888141632
    2. ' used' → logprob: -4.0181965827941895
    3. '               ' → logprob: -10.268196105957031
    4. '   ' → logprob: -12.268196105957031
    5. '                   ' → logprob: -12.393196105957031
    6. '           ' → logprob: -12.893196105957031
    7. '.used' → logprob: -16.14319610595703
    8. '```' → logprob: -16.14319610595703
    9. '_used' → logprob: -16.26819610595703
    10. 'Used' → logprob: -16.64319610595703

Token 1305: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -6.704273118884885e-07
    2. '[user' → logprob: -15.750000953674316
    3. 'y' → logprob: -15.875000953674316
    4. '[' → logprob: -16.125
    5. '][' → logprob: -17.0
    6. '[u' → logprob: -17.125
    7. '```' → logprob: -17.125
    8. '[x' → logprob: -17.25
    9. ' [' → logprob: -18.0
    10. '[t' → logprob: -18.5

Token 1306: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04414921998977661
    2. '[y' → logprob: -3.169149160385132
    3. ']' → logprob: -7.544149398803711
    4. '[' → logprob: -7.794149398803711
    5. ']==' → logprob: -9.919149398803711
    6. ']=' → logprob: -10.794149398803711
    7. '=' → logprob: -10.919149398803711
    8. '           ' → logprob: -10.919149398803711
    9. '```' → logprob: -11.044149398803711
    10. '[x' → logprob: -11.419149398803711

Token 1307: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.6240566083070007e-06
    2. ' x' → logprob: -14.250001907348633
    3. '[x' → logprob: -15.625001907348633
    4. ']' → logprob: -15.625001907348633
    5. '{x' → logprob: -15.750001907348633
    6. ')x' → logprob: -15.875001907348633
    7. '
' → logprob: -16.625001907348633
    8. 'val' → logprob: -17.250001907348633
    9. '][' → logprob: -17.250001907348633
    10. 'y' → logprob: -17.500001907348633

Token 1308: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23828324675559998
    2. ']=' → logprob: -1.7382832765579224
    3. ']' → logprob: -3.363283157348633
    4. ' =' → logprob: -6.488283157348633
    5. '[val' → logprob: -10.488283157348633
    6. '=
' → logprob: -11.738283157348633
    7. ' ]' → logprob: -11.988283157348633
    8. '=v' → logprob: -12.738283157348633
    9. '=True' → logprob: -13.488283157348633
    10. '][' → logprob: -13.863283157348633

Token 1309: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009118211455643177
    2. ' =' → logprob: -7.000911712646484
    3. '=
' → logprob: -15.375911712646484
    4. '[val' → logprob: -16.500911712646484
    5. '[' → logprob: -18.375911712646484
    6. '=True' → logprob: -18.625911712646484
    7. '=

' → logprob: -19.250911712646484
    8. '           ' → logprob: -19.375911712646484
    9. '=v' → logprob: -19.375911712646484
    10. '   ' → logprob: -19.500911712646484

Token 1310: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.306760805164231e-05
    2. ' val' → logprob: -11.25001335144043
    3. '	val' → logprob: -18.75001335144043
    4. '[val' → logprob: -20.75001335144043
    5. '_val' → logprob: -21.50001335144043
    6. '(val' → logprob: -22.50001335144043
    7. '.val' → logprob: -23.12501335144043
    8. 'Val' → logprob: -23.25001335144043
    9. ',val' → logprob: -23.25001335144043
    10. 'valu' → logprob: -23.25001335144043

Token 1311: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08619891107082367
    2. '
' → logprob: -2.8361988067626953
    3. 'def' → logprob: -3.9611988067626953
    4. '    
' → logprob: -6.711198806762695
    5. ' buyers' → logprob: -6.711198806762695
    6. 'buyers' → logprob: -6.711198806762695
    7. ' def' → logprob: -8.211198806762695
    8. 'buyer' → logprob: -8.336198806762695
    9. '```' → logprob: -8.336198806762695
    10. ' buyer' → logprob: -8.586198806762695

Token 1313: ' buyer' (ID: 28061)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0028620585799217224
    2. '   ' → logprob: -6.752861976623535
    3. '
' → logprob: -7.502861976623535
    4. 'buyers' → logprob: -7.752861976623535
    5. 'from' → logprob: -7.877861976623535
    6. 'import' → logprob: -8.877861976623535
    7. ' def' → logprob: -9.377861976623535
    8. 'buyer' (adapté à ' buyer') → logprob: -9.502861976623535
    9. '    
' → logprob: -10.877861976623535
    10. 'b' → logprob: -11.877861976623535

Token 1314: '_list' (ID: 4162)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.5260623693466187
    2. 's' → logprob: -1.6510623693466187
    3. '_index' → logprob: -1.6510623693466187
    4. '_' → logprob: -4.151062488555908
    5. '_i' → logprob: -5.776062488555908
    6. ',' → logprob: -6.026062488555908
    7. '_list' → logprob: -6.901062488555908
    8. '_id' → logprob: -7.151062488555908
    9. '_idxs' → logprob: -8.15106201171875
    10. '_ids' → logprob: -8.40106201171875

Token 1315: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39178022742271423
    2. '[' → logprob: -1.6417802572250366
    3. '[b' → logprob: -3.016780138015747
    4. '=' → logprob: -3.391780138015747
    5. '[:]' → logprob: -4.141780376434326
    6. ':' → logprob: -4.641780376434326
    7. '<|end|>' → logprob: -6.016780376434326
    8. '=[' → logprob: -6.266780376434326
    9. '[:' → logprob: -6.516780376434326
    10. '```' → logprob: -6.516780376434326

Token 1316: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.29353129863739014
    2. '[b' → logprob: -1.5435312986373901
    3. ' [' → logprob: -3.4185314178466797
    4. '[list' → logprob: -5.66853141784668
    5. '[n' → logprob: -5.79353141784668
    6. 'buyers' → logprob: -7.41853141784668
    7. '[(' → logprob: -8.16853141784668
    8. 'list' → logprob: -8.54353141784668
    9. ' list' → logprob: -9.16853141784668
    10. ' buyers' → logprob: -9.29353141784668

Token 1317: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.5716304410016164e-05
    2. ' b' → logprob: -10.250035285949707
    3. 'k' → logprob: -16.375036239624023
    4. '[b' → logprob: -16.625036239624023
    5. '```' → logprob: -16.875036239624023
    6. '   ' → logprob: -17.000036239624023
    7. '(b' → logprob: -17.125036239624023
    8. 'i' → logprob: -17.750036239624023
    9. ')b' → logprob: -18.000036239624023
    10. '`' → logprob: -18.125036239624023

Token 1318: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0055555556900799274
    2. ' for' → logprob: -6.255555629730225
    3. 'for' → logprob: -6.630555629730225
    4. ',
' → logprob: -7.755555629730225
    5. '[' → logprob: -7.880555629730225
    6. ',i' → logprob: -8.380555152893066
    7. ']' → logprob: -8.505555152893066
    8. ',[' → logprob: -8.880555152893066
    9. ',b' → logprob: -9.130555152893066
    10. ' ,' → logprob: -9.130555152893066

Token 1319: ' b' (ID: 287)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6939490437507629
    2. 'b' → logprob: -0.9439490437507629
    3. ' b' → logprob: -3.318948984146118
    4. ',b' → logprob: -3.318948984146118
    5. ' ,' → logprob: -3.318948984146118
    6. ',k' → logprob: -6.568949222564697
    7. ',_' → logprob: -7.818949222564697
    8. '_,' → logprob: -8.068948745727539
    9. ' _,' → logprob: -8.568948745727539
    10. 'k' → logprob: -8.943948745727539

Token 1320: ',k' (ID: 35155)
  Prédit: ',k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.1403886079788208
    2. ',_' → logprob: -2.5153884887695312
    3. ',' → logprob: -3.0153884887695312
    4. ',n' → logprob: -6.890388488769531
    5. ' in' → logprob: -10.515388488769531
    6. ' ,' → logprob: -10.765388488769531
    7. ',c' → logprob: -11.390388488769531
    8. ',v' → logprob: -11.515388488769531
    9. ',x' → logprob: -12.015388488769531
    10. '_,' → logprob: -12.640388488769531

Token 1321: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.35160619020462036
    2. ' in' → logprob: -1.2266061305999756
    3. ',' → logprob: -5.851606369018555
    4. ',_' → logprob: -8.851606369018555
    5. ',b' → logprob: -9.601606369018555
    6. ',in' → logprob: -10.851606369018555
    7. '
' → logprob: -11.351606369018555
    8. ' ,' → logprob: -11.851606369018555
    9. '```' → logprob: -11.976606369018555
    10. '_in' → logprob: -11.976606369018555

Token 1322: ' buyers' (ID: 25359)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.00030709904967807233
    2. ' buyers' → logprob: -8.125307083129883
    3. 'buyer' → logprob: -12.000307083129883
    4. 'c' → logprob: -13.000307083129883
    5. 'buy' → logprob: -13.750307083129883
    6. 'b' → logprob: -14.250307083129883
    7. '[' → logprob: -14.875307083129883
    8. 'users' → logprob: -16.000307083129883
    9. ')' → logprob: -16.250307083129883
    10. '[]' → logprob: -16.375307083129883

Token 1323: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00502382917329669
    2. '   ' → logprob: -5.880023956298828
    3. ' ]' → logprob: -6.630023956298828
    4. '[' → logprob: -8.505023956298828
    5. ']
' → logprob: -8.880023956298828
    6. ')' → logprob: -9.130023956298828
    7. ',' → logprob: -9.380023956298828
    8. '][' → logprob: -10.130023956298828
    9. '<|end|>' → logprob: -10.130023956298828
    10. ')]' → logprob: -10.255023956298828

Token 1324: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.432221382856369
    2. '
' → logprob: -1.1822214126586914
    3. ' def' → logprob: -3.8072214126586914
    4. '   ' → logprob: -4.932221412658691
    5. 'index' → logprob: -5.557221412658691
    6. 'idx' → logprob: -5.682221412658691
    7. '    
' → logprob: -5.932221412658691
    8. ',' → logprob: -6.807221412658691
    9. 'i' → logprob: -7.432221412658691
    10. ',
' → logprob: -7.557221412658691

Token 1325: ' assigned' (ID: 21482)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.968934758333489e-05
    2. '
' → logprob: -10.125069618225098
    3. '   ' → logprob: -11.000069618225098
    4. 'index' → logprob: -12.125069618225098
    5. 'idx' → logprob: -12.500069618225098
    6. ' def' → logprob: -13.125069618225098
    7. '    
' → logprob: -14.500069618225098
    8. 'buyer' → logprob: -14.625069618225098
    9. 'i' → logprob: -15.875069618225098
    10. 'current' → logprob: -16.000070571899414

Token 1326: '_rect' (ID: 39269)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3482367694377899
    2. '_rect' → logprob: -2.0982367992401123
    3. ' =' → logprob: -2.2232367992401123
    4. '=' → logprob: -3.0982367992401123
    5. '[' → logprob: -4.848236560821533
    6. '=[]' → logprob: -5.348236560821533
    7. '_=' → logprob: -7.098236560821533
    8. '_positions' → logprob: -7.223236560821533
    9. '_tokens' → logprob: -7.223236560821533
    10. '```' → logprob: -7.973236560821533

Token 1327: 's' (ID: 82)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.34013625979423523
    2. 's' → logprob: -1.3401362895965576
    3. '=' → logprob: -3.7151362895965576
    4. '[]' → logprob: -7.4651360511779785
    5. '[' → logprob: -7.4651360511779785
    6. '=[]' → logprob: -7.7151360511779785
    7. 'angle' → logprob: -8.840136528015137
    8. ' =' → logprob: -8.840136528015137
    9. '[]=' → logprob: -9.340136528015137
    10. '=[]
' → logprob: -9.840136528015137

Token 1328: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31353121995925903
    2. ' =' → logprob: -1.3135311603546143
    3. '=[]' → logprob: -8.938530921936035
    4. '={}' → logprob: -9.313530921936035
    5. '[' → logprob: -10.313530921936035
    6. '=[' → logprob: -12.313530921936035
    7. ',' → logprob: -13.313530921936035
    8. '={' → logprob: -13.313530921936035
    9. '[:]' → logprob: -13.438530921936035
    10. '=[]
' → logprob: -13.938530921936035

Token 1329: ' [' (ID: 723)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -6.027225754223764e-05
    2. '[' → logprob: -10.500060081481934
    3. '[]' → logprob: -10.500060081481934
    4. ' {}' → logprob: -12.750060081481934
    5. '{' → logprob: -13.375060081481934
    6. '{}
' → logprob: -15.250060081481934
    7. '{}

' → logprob: -15.750060081481934
    8. 'dict' → logprob: -15.875060081481934
    9. '[-' → logprob: -16.25006103515625
    10. '{})' → logprob: -17.00006103515625

Token 1330: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0003022153687197715
    2. ' None' → logprob: -9.0003023147583
    3. ']' → logprob: -9.3753023147583
    4. '(None' → logprob: -9.7503023147583
    5. '(' → logprob: -10.6253023147583
    6. '()]' → logprob: -12.5003023147583
    7. '   ' → logprob: -12.8753023147583
    8. '()' → logprob: -13.6253023147583
    9. '(-' → logprob: -13.7503023147583
    10. '[]' → logprob: -13.8753023147583

Token 1331: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0030018275137990713
    2. ' for' → logprob: -6.628001689910889
    3. 'for' → logprob: -6.878001689910889
    4. ' ]' → logprob: -8.003002166748047
    5. '   ' → logprob: -8.503002166748047
    6. ']*' → logprob: -10.253002166748047
    7. ',' → logprob: -11.003002166748047
    8. ']
' → logprob: -11.253002166748047
    9. ')' → logprob: -11.253002166748047
    10. '<|end|>' → logprob: -11.378002166748047

Token 1332: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5791191458702087
    2. 'n' → logprob: -0.8291191458702087
    3. '15' → logprob: -5.8291192054748535
    4. '(len' → logprob: -8.454118728637695
    5. '(n' → logprob: -11.704118728637695
    6. '```' → logprob: -12.829118728637695
    7. ' len' → logprob: -13.079118728637695
    8. '(' → logprob: -13.329118728637695
    9. '
' → logprob: -13.829118728637695
    10. ' n' → logprob: -14.079118728637695

Token 1333: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0025710216723382473
    2. 'buyers' → logprob: -6.127571105957031
    3. 'buyer' → logprob: -8.377571105957031
    4. '(' → logprob: -9.002571105957031
    5. 'b' → logprob: -11.127571105957031
    6. ' buyers' → logprob: -12.002571105957031
    7. 'buy' → logprob: -12.002571105957031
    8. '(candidate' → logprob: -12.627571105957031
    9. '(assign' → logprob: -13.877571105957031
    10. ' buyer' → logprob: -14.627571105957031

Token 1334: 'uyer' (ID: 78614)
  Prédit: 'uyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uyer' → logprob: -0.259921133518219
    2. 'uy' → logprob: -1.5099210739135742
    3. 'buyers' → logprob: -5.509921073913574
    4. 'buyer' → logprob: -6.009921073913574
    5. ')' → logprob: -8.259921073913574
    6. ']' → logprob: -8.634921073913574
    7. '[' → logprob: -8.634921073913574
    8. 'u' → logprob: -9.009921073913574
    9. '```' → logprob: -9.009921073913574
    10. 'ayers' → logprob: -9.134921073913574

Token 1335: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6388973593711853
    2. '_list' → logprob: -0.7638973593711853
    3. '_s' → logprob: -5.51389741897583
    4. ')' → logprob: -6.38889741897583
    5. ')s' → logprob: -9.138896942138672
    6. ')_' → logprob: -9.263896942138672
    7. ']' → logprob: -9.388896942138672
    8. '   ' → logprob: -10.138896942138672
    9. ' s' → logprob: -10.513896942138672
    10. '
' → logprob: -10.513896942138672

Token 1336: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030424181022681296
    2. ']' → logprob: -8.875304222106934
    3. '   ' → logprob: -9.625304222106934
    4. ')]' → logprob: -9.625304222106934
    5. ')
' → logprob: -11.375304222106934
    6. ' )' → logprob: -11.500304222106934
    7. '])' → logprob: -12.500304222106934
    8. ')])' → logprob: -12.500304222106934
    9. '[' → logprob: -13.375304222106934
    10. '))' → logprob: -15.875304222106934

Token 1337: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11634710431098938
    2. 'def' → logprob: -2.241347074508667
    3. '   ' → logprob: -5.991347312927246
    4. '    
' → logprob: -7.116347312927246
    5. ' def' → logprob: -8.741347312927246
    6. '

' → logprob: -11.491347312927246
    7. '  
' → logprob: -11.866347312927246
    8. '
' → logprob: -11.991347312927246
    9. '```' → logprob: -12.116347312927246
    10. '	
' → logprob: -12.491347312927246

Token 1338: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.463036435074173e-05
    2. '
' → logprob: -10.750024795532227
    3. ' def' → logprob: -13.625024795532227
    4. '   ' → logprob: -14.000024795532227
    5. 'import' → logprob: -14.125024795532227
    6. 'from' → logprob: -16.125024795532227
    7. 'stack' → logprob: -16.500024795532227
    8. 'idx' → logprob: -16.875024795532227
    9. '    
' → logprob: -17.125024795532227
    10. 'index' → logprob: -17.625024795532227

Token 1339: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.2541314661502838
    2. 'dfs' → logprob: -1.5041314363479614
    3. ' back' → logprob: -6.254131317138672
    4. ' search' → logprob: -8.879131317138672
    5. 'back' → logprob: -9.754131317138672
    6. 'search' → logprob: -9.879131317138672
    7. ' solve' → logprob: -11.379131317138672
    8. 'def' → logprob: -11.629131317138672
    9. 'solve' → logprob: -12.379131317138672
    10. 'df' → logprob: -13.754131317138672

Token 1340: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.27168959379196167
    2. '(b' → logprob: -2.6466896533966064
    3. '(depth' → logprob: -2.7716896533966064
    4. '(' → logprob: -2.8966896533966064
    5. '(idx' → logprob: -3.1466896533966064
    6. '(index' → logprob: -5.646689414978027
    7. '(_' → logprob: -7.271689414978027
    8. ' (' → logprob: -7.396689414978027
    9. '(d' → logprob: -7.646689414978027
    10. '(pos' → logprob: -8.021689414978027

Token 1341: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4238474667072296
    2. '(i' → logprob: -1.7988474369049072
    3. '):' → logprob: -2.1738474369049072
    4. ' ,' → logprob: -3.9238474369049072
    5. '   ' → logprob: -4.423847675323486
    6. '(' → logprob: -4.673847675323486
    7. ' (' → logprob: -5.048847675323486
    8. '):
' → logprob: -5.423847675323486
    9. ' ):' → logprob: -5.548847675323486
    10. ',i' → logprob: -5.923847675323486

Token 1342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03041757084429264
    2. '   ' → logprob: -3.9054176807403564
    3. '    ' → logprob: -5.905417442321777
    4. ' 
' → logprob: -6.030417442321777
    5. '        
' → logprob: -6.405417442321777
    6. ' if' → logprob: -6.655417442321777
    7. '    
' → logprob: -7.280417442321777
    8. '```' → logprob: -8.905417442321777
    9. '  
' → logprob: -9.280417442321777
    10. '
' → logprob: -9.405417442321777

Token 1343: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5347490310668945
    2. '   ' → logprob: -1.2847490310668945
    3. '       ' → logprob: -2.4097490310668945
    4. 'if' (adapté à ' if') → logprob: -3.9097490310668945
    5. ' 
' → logprob: -4.6597490310668945
    6. '    ' → logprob: -5.1597490310668945
    7. ' ' → logprob: -5.5347490310668945
    8. ' ' → logprob: -5.7847490310668945
    9. ' for' → logprob: -6.7847490310668945
    10. ' None' → logprob: -7.1597490310668945

Token 1344: ' len' (ID: 4631)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.054896268993616104
    2. 'i' → logprob: -2.929896354675293
    3. ' ' → logprob: -11.554896354675293
    4. ')' → logprob: -14.054896354675293
    5. ' ' → logprob: -14.554896354675293
    6. '(i' → logprob: -14.554896354675293
    7. ' (' → logprob: -14.554896354675293
    8. '    ' → logprob: -15.054896354675293
    9. '   ' → logprob: -15.054896354675293
    10. ' True' → logprob: -15.304896354675293

Token 1345: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7017112970352173
    2. '(b' → logprob: -0.7017112970352173
    3. 'assigned' → logprob: -5.576711177825928
    4. 'buyer' → logprob: -6.201711177825928
    5. '(
' → logprob: -7.826711177825928
    6. '(_)' → logprob: -7.951711177825928
    7. '(s' → logprob: -8.201711654663086
    8. '_' → logprob: -8.701711654663086
    9. ' (' → logprob: -8.951711654663086
    10. '(i' → logprob: -9.076711654663086

Token 1346: 'olutions' (ID: 83919)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4695124328136444
    2. ')' → logprob: -1.8445124626159668
    3. ' ==' → logprob: -2.219512462615967
    4. '[i' → logprob: -2.719512462615967
    5. ')==' → logprob: -4.969512462615967
    6. '[' → logprob: -5.344512462615967
    7. '(i' → logprob: -5.469512462615967
    8. '   ' → logprob: -5.719512462615967
    9. '<=' → logprob: -5.844512462615967
    10. ' ' → logprob: -6.094512462615967

Token 1347: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6028037071228027
    2. ' ==' → logprob: -1.4778037071228027
    3. ')' → logprob: -1.6028037071228027
    4. ')==' → logprob: -4.477803707122803
    5. ' <=' → logprob: -5.352803707122803
    6. '<=' → logprob: -5.352803707122803
    7. '[i' → logprob: -7.227803707122803
    8. '[' → logprob: -7.602803707122803
    9. '>' → logprob: -7.727803707122803
    10. ' >' → logprob: -9.102804183959961

Token 1348: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9780826568603516
    2. '==' → logprob: -1.3530826568603516
    3. ' >=' → logprob: -1.6030826568603516
    4. '>=' → logprob: -2.1030826568603516
    5. '>' → logprob: -4.228082656860352
    6. '<' → logprob: -4.353082656860352
    7. ' <' → logprob: -4.603082656860352
    8. ' >' → logprob: -5.603082656860352
    9. ')' → logprob: -8.228082656860352
    10. '[' → logprob: -8.603082656860352

Token 1349: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011999329581158236
    2. '0' → logprob: -9.750120162963867
    3. ' ' → logprob: -10.125120162963867
    4. '=' → logprob: -11.250120162963867
    5. '
' → logprob: -11.750120162963867
    6. '10' → logprob: -15.250120162963867
    7. '>' → logprob: -15.750120162963867
    8. '```' → logprob: -16.000120162963867
    9. '100' → logprob: -17.000120162963867
    10. '  
' → logprob: -17.125120162963867

Token 1350: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7491250875755213e-05
    2. '0' → logprob: -11.375027656555176
    3. '
' → logprob: -11.375027656555176
    4. ' ' → logprob: -12.500027656555176
    5. '=' → logprob: -15.375027656555176
    6. '10' → logprob: -15.375027656555176
    7. '```' → logprob: -16.00002670288086
    8. '>' → logprob: -16.87502670288086
    9. '2' → logprob: -17.25002670288086
    10. '

' → logprob: -17.37502670288086

Token 1351: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006213170010596514
    2. ':
' → logprob: -5.756213188171387
    3. ':return' → logprob: -5.881213188171387
    4. ' or' → logprob: -9.381213188171387
    5. '):' → logprob: -10.006213188171387
    6. '       ' → logprob: -10.006213188171387
    7. '           ' → logprob: -11.006213188171387
    8. ')' → logprob: -11.506213188171387
    9. '<|end|>' → logprob: -12.006213188171387
    10. '   ' → logprob: -12.006213188171387

Token 1352: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04867241531610489
    2. '       ' → logprob: -3.1736724376678467
    3. ':
' → logprob: -6.173672199249268
    4. '
' → logprob: -6.298672199249268
    5. 'return' → logprob: -8.048672676086426
    6. ':' → logprob: -8.048672676086426
    7. '               ' → logprob: -8.298672676086426
    8. ' return' → logprob: -8.423672676086426
    9. '   ' → logprob: -8.548672676086426
    10. '        
' → logprob: -9.423672676086426

Token 1353: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12405907362699509
    2. '           ' → logprob: -2.374058961868286
    3. ' return' → logprob: -3.874058961868286
    4. '       ' → logprob: -6.124059200286865
    5. '
' → logprob: -7.749059200286865
    6. '               ' → logprob: -9.249058723449707
    7. '   ' → logprob: -10.374058723449707
    8. ':return' → logprob: -10.999058723449707
    9. '	return' → logprob: -11.874058723449707
    10. '```' → logprob: -12.249058723449707

Token 1354: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.10345792770385742
    2. '       ' → logprob: -3.4784579277038574
    3. ' 
' → logprob: -3.9784579277038574
    4. '  
' → logprob: -4.478457927703857
    5. '
' → logprob: -4.853457927703857
    6. '    
' → logprob: -4.853457927703857
    7. '        
' → logprob: -5.353457927703857
    8. '\' → logprob: -5.603457927703857
    9. '' → logprob: -5.978457927703857
    10. '\t' → logprob: -6.103457927703857

Token 1355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05624687671661377
    2. '
' → logprob: -3.181246757507324
    3. '```' → logprob: -4.681246757507324
    4. '   ' → logprob: -6.431246757507324
    5. '        
' → logprob: -6.681246757507324
    6. '           ' → logprob: -7.806246757507324
    7. '    
' → logprob: -8.681246757507324
    8. '\n' → logprob: -9.431246757507324
    9. '``' → logprob: -9.556246757507324
    10. ' 
' → logprob: -9.681246757507324

Token 1356: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7290383577346802
    2. ' if' → logprob: -1.4790383577346802
    3. 'b' → logprob: -1.9790383577346802
    4. '       ' → logprob: -2.2290382385253906
    5. '   ' → logprob: -3.3540382385253906
    6. 'buyer' → logprob: -5.354038238525391
    7. ' b' → logprob: -5.854038238525391
    8. ' buyer' → logprob: -7.479038238525391
    9. 'buyers' → logprob: -8.47903823852539
    10. 'for' → logprob: -8.47903823852539

Token 1357: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38687145709991455
    2. ' i' → logprob: -1.1368714570999146
    3. '	i' → logprob: -15.761871337890625
    4. '   ' → logprob: -15.761871337890625
    5. ' ' → logprob: -17.011871337890625
    6. ' ' → logprob: -17.636871337890625
    7. '       ' → logprob: -17.636871337890625
    8. '_i' → logprob: -18.636871337890625
    9. '    ' → logprob: -19.011871337890625
    10. '  ' → logprob: -19.136871337890625

Token 1358: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1318630427122116
    2. '==' → logprob: -2.1318631172180176
    3. ' >=' → logprob: -5.506863117218018
    4. '>=' → logprob: -7.131863117218018
    5. '===' → logprob: -11.25686264038086
    6. ' <' → logprob: -11.38186264038086
    7. ' ==
' → logprob: -12.00686264038086
    8. '=' → logprob: -12.25686264038086
    9. ' ===' → logprob: -12.38186264038086
    10. '<|end|>' → logprob: -12.63186264038086

Token 1359: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00011546355381142348
    2. 'n' → logprob: -9.500115394592285
    3. ' len' → logprob: -10.125115394592285
    4. '(len' → logprob: -16.3751163482666
    5. '15' → logprob: -16.6251163482666
    6. '[len' → logprob: -16.7501163482666
    7. ' n' → logprob: -17.0001163482666
    8. '0' → logprob: -17.1251163482666
    9. '	len' → logprob: -17.5001163482666
    10. '<len' → logprob: -17.7501163482666

Token 1360: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.06399019062519073
    2. '(' → logprob: -2.8139901161193848
    3. '(
' → logprob: -6.813990116119385
    4. 'buyer' → logprob: -7.438990116119385
    5. '(s' → logprob: -8.438990592956543
    6. ' buyer' → logprob: -9.938990592956543
    7. ' (' → logprob: -10.063990592956543
    8. 'b' → logprob: -12.438990592956543
    9. '('' → logprob: -12.438990592956543
    10. 'Buyer' → logprob: -13.063990592956543

Token 1361: 'uyer' (ID: 78614)
  Prédit: 'uyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uyer' → logprob: -0.00034845535992644727
    2. 'buyer' → logprob: -8.500348091125488
    3. 'uy' → logprob: -9.000348091125488
    4. '[u' → logprob: -11.500348091125488
    5. 'uye' → logprob: -12.500348091125488
    6. '(u' → logprob: -13.000348091125488
    7. 'u' → logprob: -13.500348091125488
    8. '[' → logprob: -13.875348091125488
    9. 'ayer' → logprob: -14.125348091125488
    10. ')' → logprob: -14.500348091125488

Token 1362: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.1160349458805285e-05
    2. ')_' → logprob: -11.625011444091797
    3. 'List' → logprob: -14.125011444091797
    4. ')' → logprob: -14.375011444091797
    5. '[_' → logprob: -15.875011444091797
    6. '\' → logprob: -15.875011444091797
    7. '
' → logprob: -15.875011444091797
    8. '```' → logprob: -16.500011444091797
    9. '_LIST' → logprob: -16.875011444091797
    10. ' _' → logprob: -17.000011444091797

Token 1363: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018210697919130325
    2. '):' → logprob: -4.0182108879089355
    3. '       ' → logprob: -10.893210411071777
    4. ':
' → logprob: -10.893210411071777
    5. '   ' → logprob: -11.143210411071777
    6. ')' → logprob: -12.768210411071777
    7. ':' → logprob: -12.768210411071777
    8. '):

' → logprob: -13.768210411071777
    9. ' ):
' → logprob: -14.393210411071777
    10. '):
' → logprob: -14.643210411071777

Token 1364: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18181806802749634
    2. '           ' → logprob: -1.8068180084228516
    3. '        
' → logprob: -6.681818008422852
    4. '
' → logprob: -8.806818008422852
    5. '```' → logprob: -8.931818008422852
    6. '   ' → logprob: -9.306818008422852
    7. '    
' → logprob: -9.431818008422852
    8. '{
' → logprob: -9.681818008422852
    9. '{' → logprob: -9.806818008422852
    10. '  
' → logprob: -10.056818008422852

Token 1365: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6214554309844971
    2. 'for' → logprob: -1.496455430984497
    3. '#' (adapté à ' #') → logprob: -2.246455430984497
    4. '       ' → logprob: -2.871455430984497
    5. ' for' → logprob: -2.996455430984497
    6. '   ' → logprob: -5.621455192565918
    7. 'if' → logprob: -5.871455192565918
    8. '
' → logprob: -5.996455192565918
    9. ' used' → logprob: -5.996455192565918
    10. ' #' → logprob: -6.121455192565918

Token 1366: ' check' (ID: 2371)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14397858083248138
    2. 'for' → logprob: -2.3939785957336426
    3. 'area' → logprob: -4.768978595733643
    4. '       ' → logprob: -4.893978595733643
    5. 'if' → logprob: -4.893978595733643
    6. 'total' → logprob: -5.018978595733643
    7. '   ' → logprob: -5.393978595733643
    8. '           ' → logprob: -5.768978595733643
    9. 'all' → logprob: -6.393978595733643
    10. 'used' → logprob: -6.768978595733643

Token 1367: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46484214067459106
    2. 'for' → logprob: -1.8398420810699463
    3. '
' → logprob: -2.7148420810699463
    4. 'all' → logprob: -2.9648420810699463
    5. ' for' → logprob: -3.2148420810699463
    6. ' all' → logprob: -3.4648420810699463
    7. '       ' → logprob: -4.839842319488525
    8. '           ' → logprob: -5.214842319488525
    9. ' if' → logprob: -5.839842319488525
    10. 'if' → logprob: -5.964842319488525

Token 1368: ' covered' (ID: 13083)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -3.547789674485102e-05
    2. ' all' → logprob: -10.500035285949707
    3. '   ' → logprob: -12.250035285949707
    4. '
' → logprob: -13.500035285949707
    5. ' ' → logprob: -14.125035285949707
    6. 'any' → logprob: -15.250035285949707
    7. 'used' → logprob: -15.250035285949707
    8. 'not' → logprob: -16.500036239624023
    9. '	all' → logprob: -16.625036239624023
    10. '  ' → logprob: -17.000036239624023

Token 1369: ' all' (ID: 722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.364850252866745
    2. '           ' → logprob: -1.7398502826690674
    3. ' for' → logprob: -2.6148502826690674
    4. 'for' → logprob: -3.2398502826690674
    5. '   ' → logprob: -4.364850044250488
    6. '               ' → logprob: -6.614850044250488
    7. ':' → logprob: -7.114850044250488
    8. ':
' → logprob: -7.114850044250488
    9. 'all' → logprob: -7.114850044250488
    10. ' all' → logprob: -7.489850044250488

Token 1370: ' area' (ID: 3624)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5550064444541931
    2. 'True' → logprob: -1.555006504058838
    3. 'for' → logprob: -2.305006504058838
    4. '   ' → logprob: -3.055006504058838
    5. 'cells' → logprob: -3.555006504058838
    6. ' True' → logprob: -4.930006504058838
    7. '       ' → logprob: -5.180006504058838
    8. 'area' → logprob: -5.430006504058838
    9. '=True' → logprob: -5.680006504058838
    10. '               ' → logprob: -5.805006504058838

Token 1371: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005035852082073689
    2. ' for' → logprob: -7.8755035400390625
    3. '       ' → logprob: -9.750503540039062
    4. 'for' → logprob: -10.625503540039062
    5. '               ' → logprob: -11.000503540039062
    6. ',' → logprob: -11.625503540039062
    7. '
' → logprob: -12.375503540039062
    8. '   ' → logprob: -12.750503540039062
    9. '	       ' → logprob: -13.000503540039062
    10. '	   ' → logprob: -13.500503540039062

Token 1372: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03620811179280281
    2. '       ' → logprob: -3.661208152770996
    3. '               ' → logprob: -4.786208152770996
    4. ' for' → logprob: -7.661208152770996
    5. '
' → logprob: -8.036208152770996
    6. '   ' → logprob: -8.161208152770996
    7. 'for' → logprob: -8.536208152770996
    8. '```' → logprob: -8.536208152770996
    9. ',' → logprob: -11.411208152770996
    10. '    
' → logprob: -12.286208152770996

Token 1373: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7373982071876526
    2. ' for' → logprob: -0.9873982071876526
    3. 'for' → logprob: -2.237398147583008
    4. '       ' → logprob: -3.612398147583008
    5. '   ' → logprob: -4.362398147583008
    6. ' total' → logprob: -7.112398147583008
    7. 'total' → logprob: -7.612398147583008
    8. '               ' → logprob: -8.862398147583008
    9. ' ' → logprob: -8.987398147583008
    10. 'all' → logprob: -8.987398147583008

Token 1374: ' used' (ID: 2061)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3241065442562103
    2. '           ' → logprob: -1.3241065740585327
    3. ' for' → logprob: -5.199106693267822
    4. '       ' → logprob: -6.449106693267822
    5. '   ' → logprob: -6.824106693267822
    6. 'if' → logprob: -7.074106693267822
    7. 'all' → logprob: -7.199106693267822
    8. 'total' → logprob: -7.574106693267822
    9. 'area' → logprob: -8.949106216430664
    10. '               ' → logprob: -9.074106216430664

Token 1375: '_area' (ID: 34097)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9456600546836853
    2. '=' → logprob: -1.69566011428833
    3. '_cells' → logprob: -1.94566011428833
    4. '_area' → logprob: -2.69566011428833
    5. 'cells' → logprob: -2.69566011428833
    6. 'area' → logprob: -3.19566011428833
    7. 'all' → logprob: -3.32066011428833
    8. '   ' → logprob: -4.82066011428833
    9. '_all' → logprob: -4.94566011428833
    10. 'areas' → logprob: -5.07066011428833

Token 1376: ' after' (ID: 1934)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5453824996948242
    2. ' =' → logprob: -1.2953824996948242
    3. 'all' → logprob: -3.420382499694824
    4. '==' → logprob: -3.795382499694824
    5. 'for' → logprob: -3.795382499694824
    6. '
' → logprob: -4.545382499694824
    7. 'full' → logprob: -4.795382499694824
    8. '_full' → logprob: -5.045382499694824
    9. 'is' → logprob: -5.545382499694824
    10. 'cells' → logprob: -5.670382499694824

Token 1377: ' assignment' (ID: 24618)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.3020191490650177
    2. 'set' → logprob: -2.0520191192626953
    3. 'all' → logprob: -2.5520191192626953
    4. ' dfs' → logprob: -4.427019119262695
    5. '
' → logprob: -4.677019119262695
    6. ' all' → logprob: -5.052019119262695
    7. '   ' → logprob: -5.552019119262695
    8. 'def' → logprob: -5.802019119262695
    9. 'this' → logprob: -5.927019119262695
    10. 'for' → logprob: -6.052019119262695

Token 1378: ' must' (ID: 2804)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9422091245651245
    2. ' =' → logprob: -1.4422091245651245
    3. ' for' → logprob: -1.6922091245651245
    4. '           ' → logprob: -2.692209243774414
    5. '=' → logprob: -2.942209243774414
    6. '
' → logprob: -3.942209243774414
    7. 'all' → logprob: -4.317209243774414
    8. ' is' → logprob: -4.442209243774414
    9. '       ' → logprob: -6.067209243774414
    10. 'is' → logprob: -6.317209243774414

Token 1379: ' be' (ID: 413)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.6809624433517456
    2. 'all' → logprob: -0.8059624433517456
    3. '
' → logprob: -4.430962562561035
    4. 'return' → logprob: -4.555962562561035
    5. ' be' → logprob: -4.805962562561035
    6. 'for' → logprob: -5.430962562561035
    7. '==' → logprob: -5.805962562561035
    8. '```' → logprob: -5.805962562561035
    9. ' all' → logprob: -6.430962562561035
    10. 'equal' → logprob: -6.930962562561035

Token 1380: ' full' (ID: 3149)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.13160914182662964
    2. 'True' → logprob: -2.7566092014312744
    3. '[[' → logprob: -3.0066092014312744
    4. ' all' → logprob: -4.756608963012695
    5. '
' → logprob: -7.006608963012695
    6. ' True' → logprob: -8.506608963012695
    7. ' [[' → logprob: -8.631608963012695
    8. 'full' → logprob: -9.131608963012695
    9. 'fully' → logprob: -9.506608963012695
    10. '[' → logprob: -9.506608963012695

Token 1381: ' True' (ID: 6432)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04254472628235817
    2. ' for' → logprob: -3.5425448417663574
    3. '
' → logprob: -4.667544841766357
    4. '       ' → logprob: -6.167544841766357
    5. 'for' → logprob: -7.167544841766357
    6. '   ' → logprob: -8.5425443649292
    7. '               ' → logprob: -9.1675443649292
    8. '```' → logprob: -10.0425443649292
    9. '    
' → logprob: -11.2925443649292
    10. '
' → logprob: -11.2925443649292

Token 1382: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010429323883727193
    2. '
' → logprob: -7.62604284286499
    3. ' for' → logprob: -8.001043319702148
    4. '       ' → logprob: -8.876043319702148
    5. 'for' → logprob: -11.251043319702148
    6. ',' → logprob: -11.376043319702148
    7. '               ' → logprob: -11.501043319702148
    8. '    
' → logprob: -11.626043319702148
    9. '            
' → logprob: -11.876043319702148
    10. '```' → logprob: -12.001043319702148

Token 1383: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002445317804813385
    2. '       ' → logprob: -8.375244140625
    3. '               ' → logprob: -11.750244140625
    4. '```' → logprob: -12.875244140625
    5. '   ' → logprob: -13.500244140625
    6. '
' → logprob: -13.625244140625
    7. ' for' → logprob: -14.500244140625
    8. 'for' → logprob: -15.625244140625
    9. '                   ' → logprob: -16.375244140625
    10. '          ' → logprob: -16.875244140625

Token 1384: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1840323954820633
    2. ' for' → logprob: -2.184032440185547
    3. ' if' → logprob: -3.559032440185547
    4. 'for' → logprob: -4.059032440185547
    5. 'if' → logprob: -5.684032440185547
    6. '       ' → logprob: -5.809032440185547
    7. ' return' → logprob: -6.559032440185547
    8. '   ' → logprob: -6.684032440185547
    9. 'return' → logprob: -8.059032440185547
    10. '
' → logprob: -9.309032440185547

Token 1385: ' actually' (ID: 4771)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2788182497024536
    2. ' for' → logprob: -2.153818130493164
    3. 'for' → logprob: -2.653818130493164
    4. ' if' → logprob: -3.528818130493164
    5. 'if' → logprob: -4.153818130493164
    6. '       ' → logprob: -5.028818130493164
    7. '   ' → logprob: -5.403818130493164
    8. 'return' → logprob: -7.778818130493164
    9. ' return' → logprob: -8.403818130493164
    10. ' ' → logprob: -10.153818130493164

Token 1386: ' used' (ID: 2061)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4588358700275421
    2. ' for' → logprob: -1.3338358402252197
    3. 'for' → logprob: -2.3338358402252197
    4. '
' → logprob: -6.083836078643799
    5. 'return' → logprob: -6.583836078643799
    6. ' return' → logprob: -6.958836078643799
    7. ' if' → logprob: -7.333836078643799
    8. '   ' → logprob: -7.333836078643799
    9. ' used' → logprob: -7.708836078643799
    10. 'all' → logprob: -8.20883560180664

Token 1387: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.00023441045777872205
    2. 'area' → logprob: -9.750234603881836
    3. ':' → logprob: -10.000234603881836
    4. '_' → logprob: -10.500234603881836
    5. ' =' → logprob: -11.000234603881836
    6. '```' → logprob: -11.250234603881836
    7. '_cells' → logprob: -11.250234603881836
    8. '   ' → logprob: -11.375234603881836
    9. 'Area' → logprob: -11.500234603881836
    10. '\' → logprob: -12.500234603881836

Token 1388: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.5624496936798096
    2. '==' → logprob: -1.6874496936798096
    3. '[:]' → logprob: -1.9374496936798096
    4. ' =' → logprob: -2.1874496936798096
    5. '[y' → logprob: -2.5624496936798096
    6. '           ' → logprob: -2.8124496936798096
    7. ' must' → logprob: -3.3124496936798096
    8. ' is' → logprob: -3.5624496936798096
    9. '       ' → logprob: -3.8124496936798096
    10. '=' → logprob: -4.0624494552612305

Token 1389: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7767911553382874
    2. 'all' → logprob: -0.7767911553382874
    3. 'True' → logprob: -3.4017910957336426
    4. '
' → logprob: -4.276791095733643
    5. ' all' → logprob: -4.401791095733643
    6. '[x' → logprob: -5.401791095733643
    7. ' [' → logprob: -5.651791095733643
    8. '[[' → logprob: -5.901791095733643
    9. '[
' → logprob: -6.026791095733643
    10. '[len' → logprob: -6.151791095733643

Token 1390: ' track' (ID: 5290)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.24596671760082245
    2. 'be' → logprob: -2.620966672897339
    3. 'r' → logprob: -2.870966672897339
    4. 'check' → logprob: -3.495966672897339
    5. ' all' → logprob: -4.870966911315918
    6. 'return' → logprob: -4.870966911315918
    7. ' be' → logprob: -4.995966911315918
    8. '
' → logprob: -5.495966911315918
    9. 'def' → logprob: -5.995966911315918
    10. 'urn' → logprob: -5.995966911315918

Token 1391: ' coverage' (ID: 13422)
  Prédit: 'coverage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coverage' → logprob: -0.9849021434783936
    2. ' coverage' → logprob: -1.3599021434783936
    3. 'which' → logprob: -2.8599021434783936
    4. 'all' → logprob: -3.2349021434783936
    5. 'that' → logprob: -3.2349021434783936
    6. 'assigned' → logprob: -3.6099021434783936
    7. 'True' → logprob: -3.8599021434783936
    8. ' which' → logprob: -3.8599021434783936
    9. 'the' → logprob: -4.109902381896973
    10. 'if' → logprob: -4.109902381896973

Token 1392: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002613355638459325
    2. ' for' → logprob: -6.502613544464111
    3. '
' → logprob: -7.627613544464111
    4. '       ' → logprob: -7.877613544464111
    5. ',' → logprob: -9.377613067626953
    6. 'for' → logprob: -9.502613067626953
    7. '   ' → logprob: -10.627613067626953
    8. ' and' → logprob: -12.002613067626953
    9. '\n' → logprob: -12.127613067626953
    10. '               ' → logprob: -12.252613067626953

Token 1393: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0048555186949670315
    2. '
' → logprob: -6.254855632781982
    3. '               ' → logprob: -6.629855632781982
    4. '```' → logprob: -6.754855632781982
    5. '       ' → logprob: -7.879855632781982
    6. '            
' → logprob: -10.879855155944824
    7. '``' → logprob: -11.379855155944824
    8. '   ' → logprob: -12.254855155944824
    9. '    
' → logprob: -12.379855155944824
    10. ' for' → logprob: -12.629855155944824

Token 1394: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22095739841461182
    2. ' for' → logprob: -1.9709573984146118
    3. 'for' → logprob: -3.3459572792053223
    4. '       ' → logprob: -4.220957279205322
    5. '   ' → logprob: -4.845957279205322
    6. '
' → logprob: -8.34595775604248
    7. ' return' → logprob: -8.72095775604248
    8. ' if' → logprob: -8.84595775604248
    9. '               ' → logprob: -8.97095775604248
    10. 'return' → logprob: -9.22095775604248

Token 1395: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9638893008232117
    2. 'for' → logprob: -1.3388893604278564
    3. ' for' → logprob: -1.3388893604278564
    4. '   ' → logprob: -2.8388893604278564
    5. '       ' → logprob: -3.4638893604278564
    6. 'return' → logprob: -6.588889122009277
    7. ' return' → logprob: -7.088889122009277
    8. '	for' → logprob: -7.713889122009277
    9. ' ' → logprob: -7.963889122009277
    10. '
' → logprob: -8.088889122009277

Token 1396: ' currently' (ID: 6821)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5023154020309448
    2. ' not' → logprob: -1.6273154020309448
    3. 'all' → logprob: -2.3773155212402344
    4. 'not' → logprob: -3.0023155212402344
    5. '
' → logprob: -4.002315521240234
    6. ' return' → logprob: -4.627315521240234
    7. 'return' → logprob: -4.752315521240234
    8. ' for' → logprob: -5.377315521240234
    9. 'for' → logprob: -5.377315521240234
    10. ' any' → logprob: -5.502315521240234

Token 1397: ' used' (ID: 2061)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.19479893147945404
    2. '
' → logprob: -2.5697989463806152
    3. 'all' → logprob: -2.8197989463806152
    4. ' return' → logprob: -4.319798946380615
    5. ' not' → logprob: -4.944798946380615
    6. 'return' → logprob: -5.444798946380615
    7. ' True' → logprob: -5.569798946380615
    8. ' for' → logprob: -5.694798946380615
    9. 'for' → logprob: -6.069798946380615
    10. 'True' → logprob: -6.194798946380615

Token 1398: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -0.005536708049476147
    2. 'area' → logprob: -6.0055365562438965
    3. ' =' → logprob: -7.0055365562438965
    4. '   ' → logprob: -7.7555365562438965
    5. ')' → logprob: -8.130537033081055
    6. '```' → logprob: -8.630537033081055
    7. 'Area' → logprob: -8.755537033081055
    8. 'for' → logprob: -9.005537033081055
    9. '=' → logprob: -9.005537033081055
    10. ':' → logprob: -9.255537033081055

Token 1399: ' reflects' (ID: 40519)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6369901895523071
    2. ' ==' → logprob: -2.0119900703430176
    3. ' is' → logprob: -2.2619900703430176
    4. '[y' → logprob: -2.5119900703430176
    5. 'is' → logprob: -3.7619900703430176
    6. ' must' → logprob: -3.7619900703430176
    7. ')' → logprob: -4.011990070343018
    8. 'must' → logprob: -4.136990070343018
    9. '[' → logprob: -4.261990070343018
    10. ' =' → logprob: -4.386990070343018

Token 1400: ' only' (ID: 1606)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.17770646512508392
    2. ' all' → logprob: -3.052706480026245
    3. ' True' → logprob: -3.177706480026245
    4. 'all' → logprob: -3.427706480026245
    5. 'False' → logprob: -3.802706480026245
    6. 'the' → logprob: -4.677706241607666
    7. ' the' → logprob: -5.302706241607666
    8. ' not' → logprob: -7.427706241607666
    9. ' coverage' → logprob: -7.427706241607666
    10. 'not' → logprob: -7.677706241607666

Token 1401: ' last' (ID: 2174)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.14989542961120605
    2. ' True' → logprob: -2.899895429611206
    3. 'assigned' → logprob: -3.774895429611206
    4. 'the' → logprob: -4.524895668029785
    5. ' all' → logprob: -4.649895668029785
    6. ' coverage' → logprob: -4.649895668029785
    7. ' assigned' → logprob: -4.774895668029785
    8. 'all' → logprob: -5.149895668029785
    9. ' the' → logprob: -5.274895668029785
    10. 'coverage' → logprob: -5.524895668029785

Token 1402: ' assignment' (ID: 24618)
  Prédit: ' assignment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assignment' → logprob: -0.9799672961235046
    2. 'assigned' → logprob: -1.3549673557281494
    3. ' assigned' → logprob: -1.7299673557281494
    4. 'assignment' → logprob: -2.3549673557281494
    5. ' set' → logprob: -3.7299673557281494
    6. '_ass' → logprob: -4.35496711730957
    7. 'rect' → logprob: -4.85496711730957
    8. 'set' → logprob: -5.10496711730957
    9. '
' → logprob: -5.22996711730957
    10. '_assignment' → logprob: -5.47996711730957

Token 1403: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5126386284828186
    2. '           ' → logprob: -1.7626385688781738
    3. '       ' → logprob: -2.137638568878174
    4. '\n' → logprob: -3.262638568878174
    5. '   ' → logprob: -4.387638568878174
    6. ':
' → logprob: -4.387638568878174
    7. '    
' → logprob: -4.887638568878174
    8. '```' → logprob: -5.012638568878174
    9. ':' → logprob: -5.262638568878174
    10. '        
' → logprob: -5.387638568878174

Token 1404: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2516763508319855
    2. '#' → logprob: -2.251676321029663
    3. ' so' → logprob: -3.001676321029663
    4. 'return' → logprob: -3.251676321029663
    5. 'so' → logprob: -4.626676559448242
    6. ' return' → logprob: -5.251676559448242
    7. 'not' → logprob: -6.126676559448242
    8. 'for' → logprob: -6.251676559448242
    9. ' #' → logprob: -6.251676559448242
    10. '       ' → logprob: -6.376676559448242

Token 1405: ' need' (ID: 1309)
  Prédit: ' need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -1.0530198812484741
    2. ' continue' → logprob: -1.0530198812484741
    3. 'continue' → logprob: -2.4280200004577637
    4. ' should' → logprob: -2.9280200004577637
    5. ' can' → logprob: -3.1780200004577637
    6. 'need' → logprob: -3.6780200004577637
    7. '       ' → logprob: -3.8030200004577637
    8. ' have' → logprob: -4.303020000457764
    9. ' must' → logprob: -5.053020000457764
    10. 'should' → logprob: -5.053020000457764

Token 1406: ' full' (ID: 3149)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.34177201986312866
    2. 'to' → logprob: -1.3417720794677734
    3. 'all' → logprob: -4.966772079467773
    4. ' all' → logprob: -5.341772079467773
    5. 'return' → logprob: -5.591772079467773
    6. '
' → logprob: -5.716772079467773
    7. 'True' → logprob: -5.716772079467773
    8. ' True' → logprob: -6.591772079467773
    9. 'def' → logprob: -6.716772079467773
    10. '           ' → logprob: -7.216772079467773

Token 1407: ' coverage' (ID: 13422)
  Prédit: ' coverage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coverage' → logprob: -0.5410337448120117
    2. ' used' → logprob: -2.2910337448120117
    3. 'coverage' → logprob: -2.4160337448120117
    4. 'used' → logprob: -2.6660337448120117
    5. '
' → logprob: -2.9160337448120117
    6. ' True' → logprob: -3.2910337448120117
    7. 'True' → logprob: -3.4160337448120117
    8. ' area' → logprob: -4.416033744812012
    9. '_used' → logprob: -4.541033744812012
    10. '_area' → logprob: -6.041033744812012

Token 1408: ' check' (ID: 2371)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008251317776739597
    2. '
' → logprob: -5.758251190185547
    3. '       ' → logprob: -6.133251190185547
    4. '.' → logprob: -7.258251190185547
    5. ',' → logprob: -7.383251190185547
    6. ' for' → logprob: -8.383251190185547
    7. ':
' → logprob: -8.508251190185547
    8. ' to' → logprob: -8.758251190185547
    9. '   ' → logprob: -9.258251190185547
    10. '<|end|>' → logprob: -9.258251190185547

Token 1409: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019794292747974396
    2. '
' → logprob: -4.019794464111328
    3. '       ' → logprob: -6.519794464111328
    4. '            
' → logprob: -10.144794464111328
    5. '        
' → logprob: -10.394794464111328
    6. '    
' → logprob: -10.769794464111328
    7. '\n' → logprob: -11.269794464111328
    8. '   ' → logprob: -11.269794464111328
    9. '<|end|>' → logprob: -11.519794464111328
    10. ',' → logprob: -12.019794464111328

Token 1410: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15008556842803955
    2. '
' → logprob: -2.02508544921875
    3. '       ' → logprob: -5.15008544921875
    4. '\n' → logprob: -7.15008544921875
    5. '```' → logprob: -8.90008544921875
    6. '        
' → logprob: -9.02508544921875
    7. '            
' → logprob: -9.15008544921875
    8. '               ' → logprob: -9.40008544921875
    9. '    
' → logprob: -9.77508544921875
    10. '   ' → logprob: -9.90008544921875

Token 1411: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05887186527252197
    2. '       ' → logprob: -3.1838717460632324
    3. '
' → logprob: -4.183871746063232
    4. ' for' → logprob: -8.43387222290039
    5. '   ' → logprob: -8.55887222290039
    6. '               ' → logprob: -10.68387222290039
    7. '        
' → logprob: -10.93387222290039
    8. 'for' → logprob: -11.05887222290039
    9. '            
' → logprob: -11.68387222290039
    10. ' if' → logprob: -12.18387222290039

Token 1412: ' Instead' (ID: 21050)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1375463306903839
    2. '       ' → logprob: -2.1375463008880615
    3. ' for' → logprob: -5.637546539306641
    4. '               ' → logprob: -6.137546539306641
    5. '   ' → logprob: -6.512546539306641
    6. 'for' → logprob: -7.262546539306641
    7. '
' → logprob: -7.387546539306641
    8. ' ' → logprob: -7.512546539306641
    9. ' if' → logprob: -8.01254653930664
    10. ' return' → logprob: -8.63754653930664

Token 1413: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07469640672206879
    2. '       ' → logprob: -3.0746963024139404
    3. ',' → logprob: -4.4496965408325195
    4. '
' → logprob: -5.0746965408325195
    5. ' for' → logprob: -5.9496965408325195
    6. ':' → logprob: -6.4496965408325195
    7. '   ' → logprob: -7.0746965408325195
    8. ':
' → logprob: -7.9496965408325195
    9. ' we' → logprob: -7.9496965408325195
    10. ' if' → logprob: -8.07469654083252

Token 1414: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.30873441696167
    2. ' used' → logprob: -1.43373441696167
    3. ' return' → logprob: -1.55873441696167
    4. ' full' → logprob: -2.43373441696167
    5. ' total' → logprob: -3.05873441696167
    6. ' all' → logprob: -3.43373441696167
    7. ' #' → logprob: -3.93373441696167
    8. '           ' → logprob: -4.18373441696167
    9. ' if' → logprob: -4.55873441696167
    10. ' covered' → logprob: -4.55873441696167

Token 1415: ' check' (ID: 2371)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.8257775902748108
    2. ' need' → logprob: -2.200777530670166
    3. '           ' → logprob: -2.450777530670166
    4. '       ' → logprob: -2.950777530670166
    5. 'continue' → logprob: -2.950777530670166
    6. 'return' → logprob: -3.075777530670166
    7. 'can' → logprob: -3.200777530670166
    8. ' continue' → logprob: -3.575777530670166
    9. ' return' → logprob: -3.700777530670166
    10. 'need' → logprob: -3.825777530670166

Token 1416: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.14804409444332123
    2. ' all' → logprob: -2.0230441093444824
    3. '           ' → logprob: -6.398044109344482
    4. '   ' → logprob: -6.523044109344482
    5. 'if' → logprob: -7.273044109344482
    6. '
' → logprob: -7.523044109344482
    7. 'used' → logprob: -7.898044109344482
    8. 'for' → logprob: -8.648043632507324
    9. ' if' → logprob: -8.898043632507324
    10. ' used' → logprob: -9.148043632507324

Token 1417: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.8592096567153931
    2. 'used' → logprob: -0.9842096567153931
    3. 'True' → logprob: -2.8592095375061035
    4. '[x' → logprob: -2.8592095375061035
    5. 'cell' → logprob: -4.2342095375061035
    6. ' used' → logprob: -4.8592095375061035
    7. '[' → logprob: -4.9842095375061035
    8. '   ' → logprob: -5.1092095375061035
    9. '[y' → logprob: -5.1092095375061035
    10. ' cells' → logprob: -5.2342095375061035

Token 1418: ' covered' (ID: 13083)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017050234600901604
    2. ' for' → logprob: -4.267050266265869
    3. '       ' → logprob: -7.017050266265869
    4. '               ' → logprob: -7.392050266265869
    5. '   ' → logprob: -8.517049789428711
    6. ':
' → logprob: -8.517049789428711
    7. 'for' → logprob: -8.892049789428711
    8. ':' → logprob: -8.892049789428711
    9. '                   ' → logprob: -9.392049789428711
    10. '
' → logprob: -9.392049789428711

Token 1419: ' by' (ID: 656)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06489451974630356
    2. ' for' → logprob: -3.064894437789917
    3. ' by' → logprob: -4.814894676208496
    4. '       ' → logprob: -5.814894676208496
    5. 'for' → logprob: -5.939894676208496
    6. ' at' → logprob: -7.314894676208496
    7. '   ' → logprob: -8.064894676208496
    8. ':
' → logprob: -8.189894676208496
    9. ' if' → logprob: -8.439894676208496
    10. '               ' → logprob: -8.564894676208496

Token 1420: ' assigned' (ID: 21482)
  Prédit: 'solutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solutions' → logprob: -1.3327583074569702
    2. ' used' → logprob: -1.9577583074569702
    3. 'used' → logprob: -1.9577583074569702
    4. ' solutions' → logprob: -2.0827584266662598
    5. 'assigned' → logprob: -2.4577584266662598
    6. 'all' → logprob: -2.9577584266662598
    7. ' assigned' → logprob: -3.0827584266662598
    8. ' all' → logprob: -3.0827584266662598
    9. ' any' → logprob: -3.2077584266662598
    10. 'any' → logprob: -3.7077584266662598

Token 1421: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.0003314129135105759
    2. '_' → logprob: -8.37533187866211
    3. '_cells' → logprob: -10.37533187866211
    4. 'rect' → logprob: -10.50033187866211
    5. '_area' → logprob: -10.62533187866211
    6. '_rectangle' → logprob: -12.87533187866211
    7. '```' → logprob: -13.25033187866211
    8. 'Rects' → logprob: -13.37533187866211
    9. '_rec' → logprob: -13.50033187866211
    10. '
' → logprob: -13.87533187866211

Token 1422: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0019245869480073452
    2. 'angles' → logprob: -6.501924514770508
    3. '[' → logprob: -8.626924514770508
    4. '[s' → logprob: -9.001924514770508
    5. '[
' → logprob: -10.251924514770508
    6. '_s' → logprob: -10.501924514770508
    7. '_rect' → logprob: -11.126924514770508
    8. '[i' → logprob: -12.126924514770508
    9. 'rect' → logprob: -12.251924514770508
    10. '[(' → logprob: -12.376924514770508

Token 1423: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2898221015930176
    2. '           ' → logprob: -1.2898221015930176
    3. ':
' → logprob: -1.5398221015930176
    4. ':' → logprob: -2.5398221015930176
    5. '   ' → logprob: -2.6648221015930176
    6. '
' → logprob: -3.0398221015930176
    7. '[' → logprob: -5.289822101593018
    8. '               ' → logprob: -5.414822101593018
    9. '\n' → logprob: -5.789822101593018
    10. '.' → logprob: -5.914822101593018

Token 1424: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009504135698080063
    2. '
' → logprob: -5.009504318237305
    3. '\n' → logprob: -7.009504318237305
    4. ' 
' → logprob: -7.509504318237305
    5. '       ' → logprob: -7.884504318237305
    6. '            
' → logprob: -8.384504318237305
    7. '               ' → logprob: -8.634504318237305
    8. '            ' → logprob: -9.509504318237305
    9. '```' → logprob: -9.634504318237305
    10. ' for' → logprob: -9.759504318237305

Token 1425: ' cover' (ID: 4321)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6675017476081848
    2. ' full' → logprob: -1.91750168800354
    3. '       ' → logprob: -2.54250168800354
    4. ' covered' → logprob: -2.66750168800354
    5. ' total' → logprob: -3.66750168800354
    6. 'covered' → logprob: -3.79250168800354
    7. '   ' → logprob: -3.91750168800354
    8. 'all' → logprob: -3.91750168800354
    9. 'total' → logprob: -4.042501926422119
    10. ' coverage' → logprob: -4.042501926422119

Token 1426: '_check' (ID: 15847)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.4328099489212036
    2. 'age' → logprob: -1.0578099489212036
    3. ' =' → logprob: -6.182809829711914
    4. '=' → logprob: -6.807809829711914
    5. 'd' → logprob: -7.182809829711914
    6. 'e' → logprob: -9.807809829711914
    7. '   ' → logprob: -10.432809829711914
    8. '_cells' → logprob: -10.807809829711914
    9. 'a' → logprob: -10.932809829711914
    10. ' ' → logprob: -11.682809829711914

Token 1427: ' =' (ID: 314)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.5743504166603088
    2. ' =' → logprob: -1.699350357055664
    3. '=' → logprob: -1.949350357055664
    4. 'd' → logprob: -2.199350357055664
    5. '_' → logprob: -7.949350357055664
    6. '_cells' → logprob: -9.449350357055664
    7. '[' → logprob: -9.824350357055664
    8. '   ' → logprob: -9.824350357055664
    9. ' ' → logprob: -10.324350357055664
    10. '=[]
' → logprob: -10.324350357055664

Token 1428: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.02304339036345482
    2. 'set' → logprob: -4.273043155670166
    3. '[' → logprob: -5.398043155670166
    4. ' [[' → logprob: -5.523043155670166
    5. 'True' → logprob: -9.148043632507324
    6. ' set' → logprob: -9.148043632507324
    7. '   ' → logprob: -10.148043632507324
    8. '{' → logprob: -10.398043632507324
    9. ' [' → logprob: -10.523043632507324
    10. '[(' → logprob: -12.898043632507324

Token 1429: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.10022822767496109
    2. 'True' → logprob: -2.3502283096313477
    3. ' False' → logprob: -11.100228309631348
    4. ' True' → logprob: -12.350228309631348
    5. '0' → logprob: -13.475228309631348
    6. '   ' → logprob: -14.600228309631348
    7. '1' → logprob: -16.47522735595703
    8. '[' → logprob: -16.72522735595703
    9. '           ' → logprob: -17.22522735595703
    10. '
' → logprob: -17.60022735595703

Token 1430: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.5058115124702454
    2. ' for' → logprob: -1.5058114528656006
    3. 'for' → logprob: -1.7558114528656006
    4. ']' → logprob: -6.38081169128418
    5. '	for' → logprob: -8.13081169128418
    6. ']*(' → logprob: -9.13081169128418
    7. '               ' → logprob: -9.50581169128418
    8. '                   ' → logprob: -10.00581169128418
    9. '   ' → logprob: -10.00581169128418
    10. '           ' → logprob: -10.13081169128418

Token 1431: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -4.0126840758603066e-05
    2. ' X' → logprob: -10.375040054321289
    3. 'Y' → logprob: -12.250040054321289
    4. '(X' → logprob: -13.500040054321289
    5. '
' → logprob: -13.875040054321289
    6. '   ' → logprob: -14.000040054321289
    7. '```' → logprob: -15.125040054321289
    8. ' ' → logprob: -16.50004005432129
    9. 'len' → logprob: -16.75004005432129
    10. '`' → logprob: -16.75004005432129

Token 1432: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4742269515991211
    2. 'for' → logprob: -0.9742269515991211
    3. '           ' → logprob: -9.724226951599121
    4. '               ' → logprob: -10.349226951599121
    5. '   ' → logprob: -10.974226951599121
    6. '	for' → logprob: -11.349226951599121
    7. '                   ' → logprob: -11.974226951599121
    8. '       ' → logprob: -12.099226951599121
    9. '                ' → logprob: -12.474226951599121
    10. '            ' → logprob: -12.599226951599121

Token 1433: ' _' (ID: 1175)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02980441227555275
    2. ' range' → logprob: -3.5298044681549072
    3. '(range' → logprob: -10.404804229736328
    4. 'Y' → logprob: -11.154804229736328
    5. '   ' → logprob: -11.904804229736328
    6. '(Y' → logprob: -13.654804229736328
    7. '_range' → logprob: -14.779804229736328
    8. 'Range' → logprob: -15.654804229736328
    9. '
' → logprob: -16.154804229736328
    10. '           ' → logprob: -16.154804229736328

Token 1434: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006839334033429623
    2. ' range' → logprob: -5.006839275360107
    3. '(range' → logprob: -9.006839752197266
    4. '	range' → logprob: -14.756839752197266
    5. '_range' → logprob: -14.881839752197266
    6. '   ' → logprob: -16.256839752197266
    7. '(Y' → logprob: -16.506839752197266
    8. 'Y' → logprob: -16.631839752197266
    9. '.range' → logprob: -16.756839752197266
    10. '(' → logprob: -16.756839752197266

Token 1435: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18566110730171204
    2. 'Y' → logprob: -1.9356610774993896
    3. ' range' → logprob: -3.6856610774993896
    4. '(Y' → logprob: -11.185661315917969
    5. ' Y' → logprob: -11.810661315917969
    6. '(range' → logprob: -12.185661315917969
    7. 'X' → logprob: -13.060661315917969
    8. '[Y' → logprob: -13.185661315917969
    9. '
' → logprob: -13.435661315917969
    10. 'for' → logprob: -13.435661315917969

Token 1436: '(Y' (ID: 44341)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -1.580929347255733e-05
    2. '(Y' → logprob: -11.875016212463379
    3. ' Y' → logprob: -12.250016212463379
    4. '   ' → logprob: -13.500016212463379
    5. 'range' → logprob: -14.000016212463379
    6. '
' → logprob: -14.875016212463379
    7. '(' → logprob: -15.375016212463379
    8. '           ' → logprob: -15.375016212463379
    9. '       ' → logprob: -15.750016212463379
    10. '0' → logprob: -15.875016212463379

Token 1437: ')]
' (ID: 11587)
  Prédit: ')]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]
' → logprob: -0.7167894840240479
    2. ')]' → logprob: -0.7167894840240479
    3. '           ' → logprob: -4.591789245605469
    4. ']' → logprob: -4.841789245605469
    5. ')' → logprob: -5.591789245605469
    6. ']
' → logprob: -6.841789245605469
    7. '       ' → logprob: -8.716789245605469
    8. ')]
' → logprob: -8.841789245605469
    9. '               ' → logprob: -9.216789245605469
    10. ']]
' → logprob: -10.216789245605469

Token 1438: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003672748862300068
    2. '       ' → logprob: -8.375367164611816
    3. '               ' → logprob: -9.625367164611816
    4. '```' → logprob: -10.000367164611816
    5. ' for' → logprob: -11.500367164611816
    6. '                   ' → logprob: -12.500367164611816
    7. '   ' → logprob: -12.500367164611816
    8. 'for' → logprob: -13.000367164611816
    9. '                       ' → logprob: -13.625367164611816
    10. '
' → logprob: -13.625367164611816

Token 1439: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030355941504240036
    2. 'for' (adapté à ' for') → logprob: -3.530355930328369
    3. ' for' → logprob: -8.530356407165527
    4. '       ' → logprob: -8.530356407165527
    5. '   ' → logprob: -9.155356407165527
    6. '               ' → logprob: -9.280356407165527
    7. '                   ' → logprob: -11.655356407165527
    8. '```' → logprob: -13.530356407165527
    9. '                       ' → logprob: -14.280356407165527
    10. '                           ' → logprob: -14.905356407165527

Token 1440: ' r' (ID: 428)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.2372828722000122
    2. 'b' → logprob: -1.6122828722000122
    3. 'rect' → logprob: -1.6122828722000122
    4. 'j' → logprob: -1.9872828722000122
    5. 'r' → logprob: -2.2372827529907227
    6. 'buyer' → logprob: -2.9872827529907227
    7. 'bid' → logprob: -4.862282752990723
    8. 'bi' → logprob: -5.862282752990723
    9. ' buyer' → logprob: -6.987282752990723
    10. '_j' → logprob: -7.237282752990723

Token 1441: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06398594379425049
    2. 'in' → logprob: -3.313985824584961
    3. 'ect' → logprob: -3.938985824584961
    4. 'ct' → logprob: -6.188985824584961
    5. 'idx' → logprob: -6.813985824584961
    6. 'ec' → logprob: -6.938985824584961
    7. 'e' → logprob: -7.438985824584961
    8. 'i' → logprob: -8.063985824584961
    9. 'ects' → logprob: -8.563985824584961
    10. 'c' → logprob: -8.688985824584961

Token 1442: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.03869563713669777
    2. 'range' → logprob: -3.2886955738067627
    3. 'ange' → logprob: -8.288695335388184
    4. ' assigned' → logprob: -8.663695335388184
    5. ' range' → logprob: -9.288695335388184
    6. '[' → logprob: -9.538695335388184
    7. 'anged' → logprob: -11.288695335388184
    8. 'buyer' → logprob: -11.538695335388184
    9. '
' → logprob: -11.663695335388184
    10. 'anges' → logprob: -12.163695335388184

Token 1443: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.0016722070286050439
    2. 'rect' → logprob: -6.876672267913818
    3. 'Rects' → logprob: -8.50167179107666
    4. '_list' → logprob: -8.87667179107666
    5. 's' → logprob: -9.62667179107666
    6. '[i' → logprob: -9.87667179107666
    7. '[' → logprob: -10.00167179107666
    8. '
' → logprob: -10.50167179107666
    9. '```' → logprob: -10.87667179107666
    10. '_' → logprob: -11.62667179107666

Token 1444: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008147508488036692
    2. '[i' → logprob: -7.500814914703369
    3. 'rect' → logprob: -9.500814437866211
    4. 'ects' → logprob: -10.375814437866211
    5. '[s' → logprob: -10.500814437866211
    6. '[' → logprob: -11.125814437866211
    7. 'Rects' → logprob: -11.125814437866211
    8. 'r' → logprob: -11.250814437866211
    9. '_rect' → logprob: -11.375814437866211
    10. 'angles' → logprob: -11.375814437866211

Token 1445: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7098549008369446
    2. ':
' → logprob: -1.0848548412322998
    3. '[i' → logprob: -1.9598548412322998
    4. '[r' → logprob: -4.084855079650879
    5. '[' → logprob: -4.834855079650879
    6. '           ' → logprob: -7.209855079650879
    7. '):' → logprob: -7.709855079650879
    8. '               ' → logprob: -7.834855079650879
    9. '   ' → logprob: -7.959855079650879
    10. '):
' → logprob: -8.334855079650879

Token 1446: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009282566024921834
    2. '[' → logprob: -8.750927925109863
    3. '                               ' → logprob: -8.875927925109863
    4. '                       ' → logprob: -9.125927925109863
    5. '                   ' → logprob: -9.125927925109863
    6. ' in' → logprob: -9.625927925109863
    7. ' for' → logprob: -9.875927925109863
    8. '                           ' → logprob: -9.875927925109863
    9. '                ' → logprob: -10.500927925109863
    10. '   ' → logprob: -10.500927925109863

Token 1447: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009205694310367107
    2. ' for' → logprob: -5.5092058181762695
    3. 'for' → logprob: -5.5092058181762695
    4. 'x' → logprob: -7.6342058181762695
    5. ' x' → logprob: -8.50920581817627
    6. '   ' → logprob: -8.75920581817627
    7. '                       ' → logprob: -9.75920581817627
    8. '           ' → logprob: -10.50920581817627
    9. '               ' → logprob: -10.63420581817627
    10. ' if' → logprob: -10.63420581817627

Token 1448: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00014978687977418303
    2. ' r' → logprob: -8.875149726867676
    3. 'None' → logprob: -11.875149726867676
    4. 'not' → logprob: -13.500149726867676
    5. ' not' → logprob: -13.750149726867676
    6. ' None' → logprob: -15.125149726867676
    7. '   ' → logprob: -15.500149726867676
    8. 'rect' → logprob: -17.875150680541992
    9. '(r' → logprob: -18.250150680541992
    10. ' is' → logprob: -18.500150680541992

Token 1449: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.014002588577568531
    2. 'is' → logprob: -4.389002799987793
    3. '==' → logprob: -6.889002799987793
    4. ' ==' → logprob: -8.264002799987793
    5. '[' → logprob: -9.139002799987793
    6. ')' → logprob: -9.764002799987793
    7. '):
' → logprob: -11.639002799987793
    8. ':
' → logprob: -11.889002799987793
    9. 'None' → logprob: -12.014002799987793
    10. ')is' → logprob: -12.264002799987793

Token 1450: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.817902173381299e-05
    2. ' None' → logprob: -9.25009822845459
    3. 'not' → logprob: -13.50009822845459
    4. '(None' → logprob: -15.62509822845459
    5. '   ' → logprob: -15.87509822845459
    6. '_None' → logprob: -16.375097274780273
    7. 'none' → logprob: -16.625097274780273
    8. ' not' → logprob: -17.125097274780273
    9. '=None' → logprob: -18.000097274780273
    10. '0' → logprob: -18.125097274780273

Token 1451: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2530902922153473
    2. '                   ' → logprob: -1.628090262413025
    3. ':' → logprob: -3.7530903816223145
    4. '               ' → logprob: -6.2530903816223145
    5. '):
' → logprob: -7.5030903816223145
    6. '                           ' → logprob: -7.6280903816223145
    7. '                       ' → logprob: -8.253089904785156
    8. ' or' → logprob: -8.753089904785156
    9. '[' → logprob: -9.378089904785156
    10. '           ' → logprob: -9.628089904785156

Token 1452: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -6.408677290892228e-05
    2. ':
' → logprob: -11.1250638961792
    3. '               ' → logprob: -11.6250638961792
    4. '                       ' → logprob: -11.8750638961792
    5. ' for' → logprob: -12.2500638961792
    6. '```' → logprob: -12.2500638961792
    7. ' continue' → logprob: -12.5000638961792
    8. '                  ' → logprob: -12.7500638961792
    9. '                 ' → logprob: -12.8750638961792
    10. ',' → logprob: -13.2500638961792

Token 1453: ' return' (ID: 622)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01009047869592905
    2. 'return' (adapté à ' return') → logprob: -5.385090351104736
    3. ' return' → logprob: -6.010090351104736
    4. '                       ' → logprob: -6.635090351104736
    5. 'for' → logprob: -7.135090351104736
    6. ' for' → logprob: -7.885090351104736
    7. 'continue' → logprob: -8.510090827941895
    8. '               ' → logprob: -8.885090827941895
    9. ' continue' → logprob: -9.635090827941895
    10. '           ' → logprob: -10.635090827941895

Token 1454: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5523770451545715
    2. '
' → logprob: -0.9273770451545715
    3. '\n' → logprob: -3.6773769855499268
    4. '                   ' → logprob: -6.802377223968506
    5. '           ' → logprob: -7.427377223968506
    6. ' 
' → logprob: -7.552377223968506
    7. '                
' → logprob: -7.802377223968506
    8. '  
' → logprob: -8.677376747131348
    9. '
' → logprob: -8.802376747131348
    10. '                       ' → logprob: -9.302376747131348

Token 1455: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008625074988231063
    2. '           ' → logprob: -8.250862121582031
    3. '                   ' → logprob: -8.500862121582031
    4. '\n' → logprob: -9.500862121582031
    5. '			' → logprob: -9.625862121582031
    6. '
' → logprob: -9.750862121582031
    7. '       ' → logprob: -9.875862121582031
    8. '\t' → logprob: -10.250862121582031
    9. '                       ' → logprob: -10.750862121582031
    10. '                
' → logprob: -10.750862121582031

Token 1456: ' x' (ID: 1215)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2064603865146637
    2. '                   ' → logprob: -1.9564603567123413
    3. ' for' → logprob: -4.331460475921631
    4. 'for' → logprob: -4.331460475921631
    5. '       ' → logprob: -4.831460475921631
    6. '           ' → logprob: -5.456460475921631
    7. 'x' (adapté à ' x') → logprob: -6.081460475921631
    8. '```' → logprob: -6.081460475921631
    9. '   ' → logprob: -6.831460475921631
    10. ' x' → logprob: -7.581460475921631

Token 1457: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01866080053150654
    2. ',' → logprob: -4.143661022186279
    3. '=' → logprob: -6.768661022186279
    4. '<|end|>' → logprob: -8.643660545349121
    5. ' ' → logprob: -9.018660545349121
    6. '   ' → logprob: -9.018660545349121
    7. '[' → logprob: -9.143660545349121
    8. 'def' → logprob: -9.143660545349121
    9. '```' → logprob: -9.268660545349121
    10. '	' → logprob: -9.268660545349121

Token 1458: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.005379484035074711
    2. ',' → logprob: -5.255379676818848
    3. ' ,' → logprob: -9.255379676818848
    4. ',
' → logprob: -10.255379676818848
    5. ',x' → logprob: -12.380379676818848
    6. '+' → logprob: -12.880379676818848
    7. ',n' → logprob: -13.130379676818848
    8. ',Y' → logprob: -13.880379676818848
    9. '<|end|>' → logprob: -13.880379676818848
    10. ',r' → logprob: -14.130379676818848

Token 1459: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.466968650580384e-05
    2. ',' → logprob: -9.875054359436035
    3. '<|end|>' → logprob: -13.500054359436035
    4. '<|end|>' → logprob: -14.125054359436035
    5. '```' → logprob: -15.000054359436035
    6. ' ' → logprob: -15.125054359436035
    7. '   ' → logprob: -15.875054359436035
    8. '[' → logprob: -17.12505531311035
    9. '
' → logprob: -17.25005531311035
    10. 'def' → logprob: -17.50005531311035

Token 1460: ',x' (ID: 29748)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.024544818326830864
    2. ',x' → logprob: -4.149544715881348
    3. ',' → logprob: -4.774544715881348
    4. ' ,' → logprob: -10.524544715881348
    5. ',
' → logprob: -13.024544715881348
    6. '```' → logprob: -14.024544715881348
    7. '<|end|>' → logprob: -14.274544715881348
    8. 'y' → logprob: -14.649544715881348
    9. ',z' → logprob: -15.524544715881348
    10. '       ' → logprob: -15.649544715881348

Token 1461: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000877039332408458
    2. '1' → logprob: -7.5008769035339355
    3. '0' → logprob: -8.250877380371094
    4. ',x' → logprob: -10.500877380371094
    5. 'x' → logprob: -11.125877380371094
    6. ',' → logprob: -11.125877380371094
    7. '=' → logprob: -13.125877380371094
    8. '```' → logprob: -13.625877380371094
    9. ' ' → logprob: -14.000877380371094
    10. ',y' → logprob: -14.500877380371094

Token 1462: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0370902419090271
    2. ',x' → logprob: -3.537090301513672
    3. ',' → logprob: -5.037090301513672
    4. ',r' → logprob: -7.537090301513672
    5. ' ,' → logprob: -8.662090301513672
    6. '+' → logprob: -9.537090301513672
    7. ',z' → logprob: -10.912090301513672
    8. ',
' → logprob: -12.162090301513672
    9. ',v' → logprob: -12.287090301513672
    10. ',b' → logprob: -13.412090301513672

Token 1463: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. '1' → logprob: -12.875005722045898
    3. '```' → logprob: -14.000005722045898
    4. '
' → logprob: -14.250005722045898
    5. 'x' → logprob: -14.375005722045898
    6. '   ' → logprob: -15.125005722045898
    7. ' ' → logprob: -15.875005722045898
    8. '                   ' → logprob: -16.6250057220459
    9. 'r' → logprob: -16.7500057220459
    10. ',' → logprob: -16.7500057220459

Token 1464: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17695099115371704
    2. '               ' → logprob: -2.4269509315490723
    3. ' =' → logprob: -3.3019509315490723
    4. '=' → logprob: -4.676950931549072
    5. '                   ' → logprob: -5.301950931549072
    6. ' ,' → logprob: -5.551950931549072
    7. ' for' → logprob: -5.926950931549072
    8. 'for' → logprob: -6.051950931549072
    9. '                ' → logprob: -6.176950931549072
    10. '+' → logprob: -6.301950931549072

Token 1465: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006719759665429592
    2. ' r' → logprob: -5.006719589233398
    3. '0' → logprob: -12.506719589233398
    4. 'x' → logprob: -15.256719589233398
    5. 'assigned' → logprob: -16.1317195892334
    6. ' assigned' → logprob: -16.6317195892334
    7. '(' → logprob: -16.7567195892334
    8. '
' → logprob: -17.0067195892334
    9. ' x' → logprob: -17.1317195892334
    10. '   ' → logprob: -17.2567195892334

Token 1466: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17829452455043793
    2. '               ' → logprob: -2.5532944202423096
    3. '                   ' → logprob: -3.1782944202423096
    4. '<|end|>' → logprob: -4.178294658660889
    5. ':
' → logprob: -5.303294658660889
    6. '```' → logprob: -5.553294658660889
    7. ' for' → logprob: -5.803294658660889
    8. ',' → logprob: -6.178294658660889
    9. 'for' → logprob: -6.303294658660889
    10. '  
' → logprob: -6.303294658660889

Token 1467: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01813332550227642
    2. '                   ' → logprob: -4.393133163452148
    3. '           ' → logprob: -6.143133163452148
    4. '```' → logprob: -6.268133163452148
    5. ' for' → logprob: -7.393133163452148
    6. '                       ' → logprob: -8.143133163452148
    7. '
' → logprob: -8.393133163452148
    8. '                               ' → logprob: -8.893133163452148
    9. 'for' → logprob: -9.143133163452148
    10. '       ' → logprob: -9.518133163452148

Token 1468: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3153921365737915
    2. ' for' → logprob: -2.190392017364502
    3. 'for' (adapté à ' for') → logprob: -2.190392017364502
    4. '                   ' → logprob: -3.565392017364502
    5. '           ' → logprob: -4.815392017364502
    6. '```' → logprob: -5.065392017364502
    7. '   ' → logprob: -6.190392017364502
    8. '	for' → logprob: -7.190392017364502
    9. ' ' → logprob: -7.815392017364502
    10. '                       ' → logprob: -8.69039249420166

Token 1469: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.05792485177516937
    2. ' y' → logprob: -2.932924747467041
    3. 'x' → logprob: -5.807924747467041
    4. ' x' → logprob: -10.6829252243042
    5. '	y' → logprob: -11.5579252243042
    6. ')y' → logprob: -14.3079252243042
    7. '```' → logprob: -15.0579252243042
    8. ' ' → logprob: -15.9329252243042
    9. '<|end|>' → logprob: -15.9329252243042
    10. '_y' → logprob: -15.9329252243042

Token 1470: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02354651503264904
    2. 'in' → logprob: -3.7735464572906494
    3. 'y' → logprob: -9.52354621887207
    4. '1' → logprob: -9.77354621887207
    5. ' y' → logprob: -10.27354621887207
    6. '=y' → logprob: -10.27354621887207
    7. '```' → logprob: -11.02354621887207
    8. '=' → logprob: -11.02354621887207
    9. ')' → logprob: -11.52354621887207
    10. 'In' → logprob: -11.77354621887207

Token 1471: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001960393972694874
    2. ' range' → logprob: -6.251960277557373
    3. 'y' → logprob: -10.501960754394531
    4. '(range' → logprob: -12.501960754394531
    5. ' y' → logprob: -15.001960754394531
    6. '(y' → logprob: -15.751960754394531
    7. 'in' → logprob: -16.62696075439453
    8. '	range' → logprob: -16.87696075439453
    9. 'rang' → logprob: -17.12696075439453
    10. 'r' → logprob: -17.25196075439453

Token 1472: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00021152703266125172
    2. ' y' → logprob: -8.625211715698242
    3. '(y' → logprob: -10.375211715698242
    4. '=y' → logprob: -15.375211715698242
    5. '	y' → logprob: -15.750211715698242
    6. '[y' → logprob: -15.750211715698242
    7. ',y' → logprob: -16.500211715698242
    8. ')y' → logprob: -17.125211715698242
    9. '0' → logprob: -17.375211715698242
    10. '
' → logprob: -17.625211715698242

Token 1473: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6361704468727112
    2. '1' → logprob: -0.7611704468727112
    3. ' y' → logprob: -6.261170387268066
    4. '(y' → logprob: -7.261170387268066
    5. '=y' → logprob: -8.261170387268066
    6. 'r' → logprob: -9.011170387268066
    7. ',y' → logprob: -9.386170387268066
    8. 'from' → logprob: -9.511170387268066
    9. '[y' → logprob: -9.511170387268066
    10. '2' → logprob: -9.636170387268066

Token 1474: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.10577621310949326
    2. ',x' → logprob: -2.730776309967041
    3. ',' → logprob: -3.355776309967041
    4. ' ,' → logprob: -8.480775833129883
    5. ',r' → logprob: -9.605775833129883
    6. ',
' → logprob: -10.980775833129883
    7. '               ' → logprob: -12.230775833129883
    8. ',v' → logprob: -12.605775833129883
    9. ',n' → logprob: -12.980775833129883
    10. '           ' → logprob: -13.105775833129883

Token 1475: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.263011578586884e-05
    2. '+' → logprob: -10.250042915344238
    3. '```' → logprob: -12.375042915344238
    4. 'y' → logprob: -14.500042915344238
    5. ' ' → logprob: -14.875042915344238
    6. '1' → logprob: -14.875042915344238
    7. 'r' → logprob: -15.000042915344238
    8. '...' → logprob: -15.125042915344238
    9. ',' → logprob: -15.500042915344238
    10. '
' → logprob: -16.250041961669922

Token 1476: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.022916285321116447
    2. ',' → logprob: -4.647916316986084
    3. ',x' → logprob: -4.897916316986084
    4. ',y' → logprob: -6.147916316986084
    5. '1' → logprob: -7.022916316986084
    6. ' +' → logprob: -7.272916316986084
    7. '(x' → logprob: -7.647916316986084
    8. 'x' → logprob: -7.647916316986084
    9. '2' → logprob: -8.647915840148926
    10. 'y' → logprob: -9.272915840148926

Token 1477: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. '0' → logprob: -12.875005722045898
    3. ' ' → logprob: -13.125005722045898
    4. '+' → logprob: -14.375005722045898
    5. '2' → logprob: -14.625005722045898
    6. '
' → logprob: -15.750005722045898
    7. 'x' → logprob: -16.1250057220459
    8. '```' → logprob: -16.1250057220459
    9. '(' → logprob: -18.0625057220459
    10. ')' → logprob: -18.1250057220459

Token 1478: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.34566351771354675
    2. '                   ' → logprob: -1.8456635475158691
    3. '):' → logprob: -2.220663547515869
    4. ':' → logprob: -4.970663547515869
    5. '                       ' → logprob: -5.095663547515869
    6. '               ' → logprob: -5.470663547515869
    7. ':
' → logprob: -5.720663547515869
    8. '```' → logprob: -6.095663547515869
    9. '                           ' → logprob: -7.345663547515869
    10. '           ' → logprob: -7.470663547515869

Token 1479: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1512005776166916
    2. '                   ' → logprob: -2.026200532913208
    3. ' for' → logprob: -5.151200771331787
    4. 'for' → logprob: -6.276200771331787
    5. '           ' → logprob: -8.151200294494629
    6. '```' → logprob: -8.401200294494629
    7. '                       ' → logprob: -9.151200294494629
    8. '                ' → logprob: -9.901200294494629
    9. '                               ' → logprob: -10.276200294494629
    10. '		           ' → logprob: -11.151200294494629

Token 1480: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6945831179618835
    2. 'for' (adapté à ' for') → logprob: -0.6945831179618835
    3. '```' → logprob: -7.194582939147949
    4. '                   ' → logprob: -8.06958293914795
    5. '                       ' → logprob: -8.19458293914795
    6. '                               ' → logprob: -10.19458293914795
    7. '               ' → logprob: -10.19458293914795
    8. '                           ' → logprob: -11.94458293914795
    9. '	for' → logprob: -12.56958293914795
    10. 'For' → logprob: -13.19458293914795

Token 1481: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.011048054322600365
    2. ' x' → logprob: -4.511047840118408
    3. '```' → logprob: -15.511048316955566
    4. '	x' → logprob: -17.26104736328125
    5. '0' → logprob: -17.38604736328125
    6. '(x' → logprob: -17.63604736328125
    7. '[x' → logprob: -19.63604736328125
    8. '{x' → logprob: -20.13604736328125
    9. '   ' → logprob: -20.51104736328125
    10. ' ' → logprob: -20.88604736328125

Token 1482: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026310397312045097
    2. 'in' → logprob: -3.651310443878174
    3. '(x' → logprob: -12.901309967041016
    4. '```' → logprob: -12.901309967041016
    5. '1' → logprob: -13.401309967041016
    6. '=' → logprob: -14.151309967041016
    7. ' (' → logprob: -14.526309967041016
    8. 'x' → logprob: -14.776309967041016
    9. '0' → logprob: -15.026309967041016
    10. '                   ' → logprob: -15.151309967041016

Token 1483: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023642463609576225
    2. ' range' → logprob: -3.7736425399780273
    3. 'x' → logprob: -8.023642539978027
    4. '(x' → logprob: -10.023642539978027
    5. '(range' → logprob: -10.898642539978027
    6. ' x' → logprob: -12.023642539978027
    7. '[x' → logprob: -14.898642539978027
    8. ' xrange' → logprob: -16.89864158630371
    9. '	range' → logprob: -17.02364158630371
    10. '(' → logprob: -18.27364158630371

Token 1484: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0011714138090610504
    2. 'x' → logprob: -6.751171588897705
    3. '(' → logprob: -14.501171112060547
    4. 'range' → logprob: -15.126171112060547
    5. '[x' → logprob: -16.126171112060547
    6. '0' → logprob: -16.501171112060547
    7. ' x' → logprob: -16.626171112060547
    8. ' (' → logprob: -17.251171112060547
    9. '=x' → logprob: -17.501171112060547
    10. '(range' → logprob: -18.251171112060547

Token 1485: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0049111428670585155
    2. 'x' → logprob: -5.379910945892334
    3. ',x' → logprob: -10.004911422729492
    4. '<x' → logprob: -10.504911422729492
    5. '+' → logprob: -10.629911422729492
    6. '(x' → logprob: -10.754911422729492
    7. '2' → logprob: -10.879911422729492
    8. '[x' → logprob: -10.879911422729492
    9. '+x' → logprob: -10.879911422729492
    10. '=x' → logprob: -11.254911422729492

Token 1486: ',x' (ID: 29748)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.5761845111846924
    2. ',x' → logprob: -0.8261845111846924
    3. ',' → logprob: -8.326184272766113
    4. ' ,' → logprob: -13.326184272766113
    5. 'x' → logprob: -14.076184272766113
    6. '(x' → logprob: -16.45118522644043
    7. 'y' → logprob: -16.57618522644043
    8. ',z' → logprob: -16.95118522644043
    9. '```' → logprob: -17.32618522644043
    10. ';x' → logprob: -17.57618522644043

Token 1487: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3413040041923523
    2. '1' → logprob: -1.716304063796997
    3. '+' → logprob: -2.216304063796997
    4. '0' → logprob: -8.841303825378418
    5. ',' → logprob: -9.216303825378418
    6. '+
' → logprob: -10.216303825378418
    7. ' ' → logprob: -10.466303825378418
    8. ']+' → logprob: -11.091303825378418
    9. '```' → logprob: -11.091303825378418
    10. ' +' → logprob: -11.216303825378418

Token 1488: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.729906196298543e-06
    2. ' +' → logprob: -11.875009536743164
    3. '1' → logprob: -13.750009536743164
    4. '2' → logprob: -14.375009536743164
    5. '+
' → logprob: -14.500009536743164
    6. ',' → logprob: -15.250009536743164
    7. '```' → logprob: -15.875009536743164
    8. '+,' → logprob: -16.750009536743164
    9. '+x' → logprob: -17.125009536743164
    10. '()+' → logprob: -17.625009536743164

Token 1489: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017019602237269282
    2. 'x' → logprob: -6.626701831817627
    3. '2' → logprob: -8.376702308654785
    4. '+' → logprob: -8.876702308654785
    5. '
' → logprob: -13.376702308654785
    6. '+x' → logprob: -14.001702308654785
    7. ' ' → logprob: -14.126702308654785
    8. 'X' → logprob: -14.126702308654785
    9. ')' → logprob: -14.876702308654785
    10. 'range' → logprob: -15.251702308654785

Token 1490: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.812655508518219
    2. '                       ' → logprob: -1.5626554489135742
    3. ':
' → logprob: -1.9376554489135742
    4. ':' → logprob: -2.437655448913574
    5. '):' → logprob: -2.437655448913574
    6. '                   ' → logprob: -3.687655448913574
    7. '                           ' → logprob: -7.062655448913574
    8. '               ' → logprob: -7.437655448913574
    9. '                      ' → logprob: -7.937655448913574
    10. '():
' → logprob: -8.187655448913574

Token 1491: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.004237242974340916
    2. '                           ' → logprob: -5.754237174987793
    3. '                   ' → logprob: -7.504237174987793
    4. '                               ' → logprob: -8.379237174987793
    5. '                        ' → logprob: -10.004237174987793
    6. '                        
' → logprob: -10.004237174987793
    7. '                      ' → logprob: -10.629237174987793
    8. '                                   ' → logprob: -10.754237174987793
    9. '                                           ' → logprob: -10.879237174987793
    10. '                    ' → logprob: -10.879237174987793

Token 1492: ' if' (ID: 538)
  Prédit: ' cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cover' → logprob: -0.04999662935733795
    2. 'cover' → logprob: -3.0499966144561768
    3. '                           ' → logprob: -6.674996852874756
    4. '                       ' → logprob: -9.549996376037598
    5. '                               ' → logprob: -10.174996376037598
    6. '                   ' → logprob: -11.549996376037598
    7. '                                   ' → logprob: -12.174996376037598
    8. '```' → logprob: -12.174996376037598
    9. ' coverage' → logprob: -12.674996376037598
    10. '           ' → logprob: -12.924996376037598

Token 1493: ' cover' (ID: 4321)
  Prédit: 'cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cover' → logprob: -0.003181159496307373
    2. ' cover' → logprob: -5.753180980682373
    3. 'coverage' → logprob: -14.253181457519531
    4. '           ' → logprob: -14.628181457519531
    5. 'not' → logprob: -14.628181457519531
    6. '                   ' → logprob: -14.628181457519531
    7. '   ' → logprob: -14.753181457519531
    8. '                       ' → logprob: -15.253181457519531
    9. '               ' → logprob: -15.503181457519531
    10. '
' → logprob: -15.628181457519531

Token 1494: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -0.004544288385659456
    2. '[' → logprob: -5.879544258117676
    3. '_cover' → logprob: -7.629544258117676
    4. '                       ' → logprob: -8.129544258117676
    5. '_' → logprob: -8.379544258117676
    6. '_checks' → logprob: -8.879544258117676
    7. '[_' → logprob: -9.379544258117676
    8. 'cover' → logprob: -9.504544258117676
    9. '[y' → logprob: -10.004544258117676
    10. 'check' → logprob: -10.004544258117676

Token 1495: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.939851037808694e-05
    2. '[x' → logprob: -10.500029563903809
    3. '[' → logprob: -14.375029563903809
    4. 'y' → logprob: -15.000029563903809
    5. '                       ' → logprob: -15.500029563903809
    6. ' [' → logprob: -15.875029563903809
    7. '][' → logprob: -16.000028610229492
    8. '                   ' → logprob: -16.125028610229492
    9. '```' → logprob: -16.375028610229492
    10. '           ' → logprob: -16.750028610229492

Token 1496: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002947393571957946
    2. '[y' → logprob: -5.8779473304748535
    3. '[x' → logprob: -9.002947807312012
    4. '[' → logprob: -12.127947807312012
    5. '```' → logprob: -12.877947807312012
    6. ' ][' → logprob: -13.002947807312012
    7. ']' → logprob: -13.127947807312012
    8. '==' → logprob: -13.877947807312012
    9. '           ' → logprob: -14.002947807312012
    10. '
' → logprob: -14.127947807312012

Token 1497: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. ' x' → logprob: -15.125
    3. '][' → logprob: -19.125
    4. '[x' → logprob: -20.125
    5. '```' → logprob: -20.125
    6. ' ' → logprob: -21.0
    7. '	x' → logprob: -21.125
    8. '{x' → logprob: -21.375
    9. '
' → logprob: -21.625
    10. '   ' → logprob: -22.25

Token 1498: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.23578576743602753
    2. ']==' → logprob: -1.735785722732544
    3. ']' → logprob: -4.360785961151123
    4. '                       ' → logprob: -4.985785961151123
    5. '                           ' → logprob: -5.235785961151123
    6. ']=' → logprob: -5.735785961151123
    7. ']:' → logprob: -6.110785961151123
    8. '==' → logprob: -6.360785961151123
    9. '][' → logprob: -7.860785961151123
    10. '                   ' → logprob: -7.985785961151123

Token 1499: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.007237075362354517
    2. ' return' → logprob: -5.132236957550049
    3. '```' → logprob: -7.382236957550049
    4. '                               ' → logprob: -8.007237434387207
    5. '                       ' → logprob: -8.882237434387207
    6. 'return' → logprob: -9.132237434387207
    7. '                            ' → logprob: -10.257237434387207
    8. '``' → logprob: -11.007237434387207
    9. '                          ' → logprob: -11.632237434387207
    10. '                         ' → logprob: -12.007237434387207

Token 1500: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1580805778503418
    2. '                               ' → logprob: -2.783080577850342
    3. ' return' → logprob: -3.033080577850342
    4. '                           ' → logprob: -3.408080577850342
    5. '```' → logprob: -6.158080577850342
    6. '                                   ' → logprob: -7.283080577850342
    7. '``' → logprob: -9.2830810546875
    8. '                                       ' → logprob: -9.7830810546875
    9. '                            ' → logprob: -10.7830810546875
    10. '                       ' → logprob: -10.9080810546875

Token 1501: ' overlap' (ID: 56631)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07173987478017807
    2. ' return' → logprob: -2.821739912033081
    3. '                               ' → logprob: -4.696739673614502
    4. '                           ' → logprob: -7.946739673614502
    5. '                                   ' → logprob: -8.57174015045166
    6. '```' → logprob: -10.69674015045166
    7. '                       ' → logprob: -12.19674015045166
    8. '                                       ' → logprob: -12.44674015045166
    9. '           ' → logprob: -12.44674015045166
    10. '               ' → logprob: -12.57174015045166

Token 1502: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.39709576964378357
    2. '                               ' → logprob: -1.772095799446106
    3. '\n' → logprob: -2.5220956802368164
    4. '
' → logprob: -3.5220956802368164
    5. ' return' → logprob: -3.7720956802368164
    6. 'return' → logprob: -3.8970956802368164
    7. '                                   ' → logprob: -6.647095680236816
    8. '```' → logprob: -7.272095680236816
    9. '                            ' → logprob: -7.647095680236816
    10. '                       ' → logprob: -7.772095680236816

Token 1503: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.3272991478443146
    2. '
' → logprob: -1.4522991180419922
    3. '                               ' → logprob: -3.327299118041992
    4. '\n' → logprob: -5.077299118041992
    5. ' return' → logprob: -7.202299118041992
    6. 'return' → logprob: -7.327299118041992
    7. '                                   ' → logprob: -8.077299118041992
    8. '                            ' → logprob: -8.202299118041992
    9. '                       ' → logprob: -8.702299118041992
    10. '
' → logprob: -8.952299118041992

Token 1504: ' return' (ID: 622)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.20260527729988098
    2. 'return' (adapté à ' return') → logprob: -1.7026052474975586
    3. ' return' → logprob: -7.077605247497559
    4. '                           ' → logprob: -8.952605247497559
    5. '                                   ' → logprob: -9.202605247497559
    6. '```' → logprob: -9.577605247497559
    7. '                                       ' → logprob: -11.452605247497559
    8. '                              ' → logprob: -11.952605247497559
    9. '                             ' → logprob: -12.077605247497559
    10. '                       ' → logprob: -12.577605247497559

Token 1505: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.049686774611473083
    2. '
' → logprob: -3.6746866703033447
    3. '```' → logprob: -4.674686908721924
    4. '                               ' → logprob: -4.799686908721924
    5. '                           ' → logprob: -6.174686908721924
    6. '\n' → logprob: -6.549686908721924
    7. '\x' → logprob: -7.174686908721924
    8. '                        
' → logprob: -8.049686431884766
    9. '               ' → logprob: -8.174686431884766
    10. '                   ' → logprob: -9.174686431884766

Token 1506: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.015194651670753956
    2. '
' → logprob: -4.265194416046143
    3. '```' → logprob: -7.390194416046143
    4. '               ' → logprob: -8.8901948928833
    5. '           ' → logprob: -9.0151948928833
    6. '                        
' → logprob: -9.7651948928833
    7. '                           ' → logprob: -10.2651948928833
    8. '       ' → logprob: -10.6401948928833
    9. '                   ' → logprob: -10.8901948928833
    10. '                        ' → logprob: -12.2651948928833

Token 1507: ' cover' (ID: 4321)
  Prédit: ' cover'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cover' → logprob: -0.48059067130088806
    2. '                       ' → logprob: -1.1055907011032104
    3. '                           ' → logprob: -3.980590581893921
    4. 'cover' (adapté à ' cover') → logprob: -4.4805908203125
    5. '
' → logprob: -4.6055908203125
    6. '                        ' → logprob: -5.9805908203125
    7. '                        
' → logprob: -6.2305908203125
    8. '                               ' → logprob: -6.6055908203125
    9. '\x' → logprob: -7.2305908203125
    10. ' return' → logprob: -7.2305908203125

Token 1508: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -2.935296834039036e-06
    2. '[y' → logprob: -13.75000286102295
    3. 'Check' → logprob: -14.50000286102295
    4. '_checks' → logprob: -15.37500286102295
    5. '```' → logprob: -15.37500286102295
    6. 'check' → logprob: -16.000003814697266
    7. '\' → logprob: -16.250003814697266
    8. '_Check' → logprob: -16.250003814697266
    9. '[_' → logprob: -16.375003814697266
    10. '_' → logprob: -16.375003814697266

Token 1509: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.868328920158092e-05
    2. '[' → logprob: -11.750028610229492
    3. '][' → logprob: -12.125028610229492
    4. '[user' → logprob: -12.250028610229492
    5. '                       ' → logprob: -12.375028610229492
    6. ' [' → logprob: -12.750028610229492
    7. '```' → logprob: -14.625028610229492
    8. '           ' → logprob: -14.625028610229492
    9. ')[' → logprob: -14.750028610229492
    10. '                           ' → logprob: -15.000028610229492

Token 1510: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -8.268254896393046e-05
    2. '1' → logprob: -10.625082969665527
    3. '[' → logprob: -11.000082969665527
    4. '[y' → logprob: -11.500082969665527
    5. '[x' → logprob: -11.500082969665527
    6. ']' → logprob: -12.250082969665527
    7. '           ' → logprob: -12.625082969665527
    8. '=' → logprob: -12.875082969665527
    9. '       ' → logprob: -13.000082969665527
    10. ')[' → logprob: -13.500082969665527

Token 1511: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.054500666621607e-06
    2. ' x' → logprob: -12.87500286102295
    3. '[' → logprob: -15.87500286102295
    4. '[x' → logprob: -16.750003814697266
    5. ']' → logprob: -16.875003814697266
    6. '```' → logprob: -16.875003814697266
    7. '<|end|>' → logprob: -17.625003814697266
    8. '][' → logprob: -17.625003814697266
    9. '{x' → logprob: -18.000003814697266
    10. 'y' → logprob: -18.250003814697266

Token 1512: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.40273603796958923
    2. '][' → logprob: -1.9027360677719116
    3. '[y' → logprob: -2.027735948562622
    4. ']=' → logprob: -3.027735948562622
    5. '                       ' → logprob: -6.902736186981201
    6. '=' → logprob: -7.777736186981201
    7. ']==' → logprob: -8.152735710144043
    8. '                           ' → logprob: -8.277735710144043
    9. '[x' → logprob: -9.652735710144043
    10. '                   ' → logprob: -10.152735710144043

Token 1513: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02360764890909195
    2. ' =' → logprob: -3.7736077308654785
    3. '=True' → logprob: -8.27360725402832
    4. '=
' → logprob: -9.77360725402832
    5. '=False' → logprob: -10.77360725402832
    6. '                           ' → logprob: -10.89860725402832
    7. ' =
' → logprob: -12.39860725402832
    8. '                               ' → logprob: -13.27360725402832
    9. '                            ' → logprob: -13.64860725402832
    10. ']=' → logprob: -14.02360725402832

Token 1514: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -4.5491004129871726e-05
    2. ' True' → logprob: -10.000045776367188
    3. '(True' → logprob: -20.250045776367188
    4. 'False' → logprob: -20.750045776367188
    5. '
' → logprob: -21.500045776367188
    6. '   ' → logprob: -22.125045776367188
    7. '1' → logprob: -22.375045776367188
    8. 'true' → logprob: -22.750045776367188
    9. '=True' → logprob: -23.000045776367188
    10. '`' → logprob: -24.125045776367188

Token 1515: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04956823214888573
    2. '
' → logprob: -3.0495681762695312
    3. '                       ' → logprob: -7.924568176269531
    4. '               ' → logprob: -8.174568176269531
    5. '                        
' → logprob: -9.049568176269531
    6. '```' → logprob: -9.424568176269531
    7. '            
' → logprob: -10.299568176269531
    8. '		' → logprob: -10.549568176269531
    9. '                   ' → logprob: -10.799568176269531
    10. '                           ' → logprob: -11.049568176269531

Token 1516: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06243569776415825
    2. '
' → logprob: -2.8124356269836426
    3. '                       ' → logprob: -8.1874361038208
    4. '```' → logprob: -9.0624361038208
    5. '               ' → logprob: -10.0624361038208
    6. '                        
' → logprob: -11.8124361038208
    7. '		' → logprob: -12.3124361038208
    8. '            
' → logprob: -12.4374361038208
    9. '                   ' → logprob: -12.6874361038208
    10. '``' → logprob: -13.0624361038208

Token 1517: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030392741318792105
    2. '
' → logprob: -5.878039360046387
    3. '                       ' → logprob: -9.753039360046387
    4. 'for' → logprob: -9.753039360046387
    5. '```' → logprob: -10.253039360046387
    6. '                           ' → logprob: -10.628039360046387
    7. ' for' → logprob: -10.878039360046387
    8. '       ' → logprob: -11.378039360046387
    9. '               ' → logprob: -11.503039360046387
    10. '                        
' → logprob: -12.378039360046387

Token 1518: ' check' (ID: 2371)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002218415029346943
    2. 'for' → logprob: -6.752218246459961
    3. ' for' → logprob: -8.002218246459961
    4. 'if' → logprob: -8.127218246459961
    5. '   ' → logprob: -8.877218246459961
    6. '       ' → logprob: -9.127218246459961
    7. ' if' → logprob: -9.252218246459961
    8. '
' → logprob: -10.002218246459961
    9. 'all' → logprob: -11.627218246459961
    10. '                       ' → logprob: -11.877218246459961

Token 1519: ' full' (ID: 3149)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.4094007611274719
    2. ' all' → logprob: -1.4094007015228271
    3. 'any' → logprob: -2.659400701522827
    4. ' any' → logprob: -3.909400701522827
    5. '           ' → logprob: -7.034400939941406
    6. 'if' → logprob: -7.784400939941406
    7. 'for' → logprob: -8.534400939941406
    8. ' not' → logprob: -10.159400939941406
    9. 'not' → logprob: -10.409400939941406
    10. ' ' → logprob: -10.909400939941406

Token 1520: ' coverage' (ID: 13422)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7478402853012085
    2. 'if' → logprob: -1.8728402853012085
    3. 'for' → logprob: -2.122840404510498
    4. 'all' → logprob: -2.247840404510498
    5. '
' → logprob: -2.497840404510498
    6. ' if' → logprob: -3.747840404510498
    7. ' all' → logprob: -3.997840404510498
    8. ' for' → logprob: -4.247840404510498
    9. '               ' → logprob: -6.372840404510498
    10. 'return' → logprob: -6.497840404510498

Token 1521: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00016074994346126914
    2. ' for' → logprob: -9.000161170959473
    3. '
' → logprob: -10.875161170959473
    4. 'for' → logprob: -11.250161170959473
    5. '       ' → logprob: -12.875161170959473
    6. '   ' → logprob: -13.750161170959473
    7. '               ' → logprob: -14.250161170959473
    8. ',' → logprob: -14.875161170959473
    9. '                   ' → logprob: -15.750161170959473
    10. '                       ' → logprob: -15.875161170959473

Token 1522: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00029065259150229394
    2. ' for' → logprob: -8.750290870666504
    3. '       ' → logprob: -10.250290870666504
    4. 'for' → logprob: -10.375290870666504
    5. '   ' → logprob: -11.000290870666504
    6. '```' → logprob: -11.000290870666504
    7. '
' → logprob: -11.125290870666504
    8. '                       ' → logprob: -11.750290870666504
    9. '               ' → logprob: -12.375290870666504
    10. '                           ' → logprob: -13.125290870666504

Token 1523: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020984768867492676
    2. ' for' → logprob: -3.895984649658203
    3. 'for' (adapté à ' for') → logprob: -7.895984649658203
    4. '   ' → logprob: -10.020984649658203
    5. '       ' → logprob: -11.020984649658203
    6. '               ' → logprob: -12.645984649658203
    7. ' ' → logprob: -13.145984649658203
    8. ' if' → logprob: -13.395984649658203
    9. '                       ' → logprob: -13.895984649658203
    10. '                   ' → logprob: -14.270984649658203

Token 1524: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08924229443073273
    2. ' y' → logprob: -2.4642422199249268
    3. 'range' → logprob: -9.214241981506348
    4. ' range' → logprob: -9.339241981506348
    5. ' in' → logprob: -9.464241981506348
    6. '   ' → logprob: -11.714241981506348
    7. 'x' → logprob: -11.714241981506348
    8. 'Y' → logprob: -11.714241981506348
    9. '0' → logprob: -12.964241981506348
    10. '_y' → logprob: -13.089241981506348

Token 1525: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011050650849938393
    2. 'in' → logprob: -4.511050701141357
    3. 'range' → logprob: -14.1360502243042
    4. ' ' → logprob: -14.6360502243042
    5. ')' → logprob: -15.3860502243042
    6. '[' → logprob: -15.5110502243042
    7. '0' → logprob: -15.6360502243042
    8. ' range' → logprob: -15.8860502243042
    9. '   ' → logprob: -15.8860502243042
    10. '
' → logprob: -16.136051177978516

Token 1526: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00043221889063715935
    2. ' range' → logprob: -7.750432014465332
    3. '
' → logprob: -13.625432014465332
    4. '0' → logprob: -15.500432014465332
    5. '(range' → logprob: -16.75043296813965
    6. '   ' → logprob: -16.87543296813965
    7. '[' → logprob: -17.00043296813965
    8. '```' → logprob: -17.75043296813965
    9. 'in' → logprob: -18.12543296813965
    10. '	range' → logprob: -18.25043296813965

Token 1527: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.7264090776443481
    2. 'range' → logprob: -0.9764090776443481
    3. 'Y' → logprob: -1.9764090776443481
    4. ' range' → logprob: -7.351408958435059
    5. '           ' → logprob: -8.976408958435059
    6. '0' → logprob: -8.976408958435059
    7. '(' → logprob: -9.726408958435059
    8. '(range' → logprob: -10.101408958435059
    9. '   ' → logprob: -10.226408958435059
    10. '       ' → logprob: -10.351408958435059

Token 1528: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12708307802677155
    2. '):' → logprob: -2.1270830631256104
    3. '   ' → logprob: -10.252082824707031
    4. ')' → logprob: -10.377082824707031
    5. '           ' → logprob: -11.002082824707031
    6. '):
' → logprob: -11.002082824707031
    7. '       ' → logprob: -11.002082824707031
    8. ':' → logprob: -11.502082824707031
    9. ':
' → logprob: -12.377082824707031
    10. ' ' → logprob: -12.377082824707031

Token 1529: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004149868618696928
    2. '```' → logprob: -5.504149913787842
    3. ' for' → logprob: -10.879149436950684
    4. '           ' → logprob: -11.254149436950684
    5. '                   ' → logprob: -11.629149436950684
    6. 'for' → logprob: -11.754149436950684
    7. '                       ' → logprob: -12.129149436950684
    8. '   ' → logprob: -12.504149436950684
    9. '``' → logprob: -12.504149436950684
    10. '<|end|>' → logprob: -12.879149436950684

Token 1530: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43705669045448303
    2. 'for' (adapté à ' for') → logprob: -1.0620566606521606
    3. '                   ' → logprob: -4.812056541442871
    4. 'if' → logprob: -9.562056541442871
    5. ' if' → logprob: -9.937056541442871
    6. '               ' → logprob: -10.437056541442871
    7. '```' → logprob: -11.562056541442871
    8. '	for' → logprob: -11.812056541442871
    9. '                       ' → logprob: -11.812056541442871
    10. '   ' → logprob: -11.812056541442871

Token 1531: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002572865632828325
    2. ' x' → logprob: -8.50025749206543
    3. '0' → logprob: -10.00025749206543
    4. 'range' → logprob: -11.87525749206543
    5. ' range' → logprob: -14.12525749206543
    6. '                   ' → logprob: -14.87525749206543
    7. '               ' → logprob: -15.62525749206543
    8. '[x' → logprob: -17.25025749206543
    9. 'X' → logprob: -17.62525749206543
    10. '(x' → logprob: -17.75025749206543

Token 1532: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31326979398727417
    2. 'in' → logprob: -1.313269853591919
    3. '                   ' → logprob: -13.18826961517334
    4. '               ' → logprob: -13.81326961517334
    5. 'In' → logprob: -13.93826961517334
    6. '0' → logprob: -14.18826961517334
    7. '[' → logprob: -14.18826961517334
    8. ',' → logprob: -14.31326961517334
    9. '```' → logprob: -14.81326961517334
    10. '                       ' → logprob: -14.93826961517334

Token 1533: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018188457936048508
    2. ' range' → logprob: -4.0181884765625
    3. '(range' → logprob: -10.5181884765625
    4. '(X' → logprob: -11.6431884765625
    5. '0' → logprob: -13.6431884765625
    6. '(' → logprob: -14.1431884765625
    7. 'X' → logprob: -15.7681884765625
    8. '	range' → logprob: -15.8931884765625
    9. 'in' → logprob: -16.2681884765625
    10. ')' → logprob: -16.3931884765625

Token 1534: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0006665678229182959
    2. 'X' → logprob: -7.500666618347168
    3. '               ' → logprob: -10.000666618347168
    4. '(' → logprob: -10.875666618347168
    5. '                   ' → logprob: -10.875666618347168
    6. '           ' → logprob: -11.375666618347168
    7. ')' → logprob: -12.000666618347168
    8. 'range' → logprob: -12.500666618347168
    9. '0' → logprob: -12.750666618347168
    10. '                       ' → logprob: -13.125666618347168

Token 1535: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.012941618449985981
    2. '                   ' → logprob: -4.637941837310791
    3. '                       ' → logprob: -6.887941837310791
    4. '):' → logprob: -7.012941837310791
    5. ':
' → logprob: -7.387941837310791
    6. '               ' → logprob: -8.637941360473633
    7. '==' → logprob: -9.387941360473633
    8. ':' → logprob: -9.512941360473633
    9. '():
' → logprob: -9.512941360473633
    10. '                           ' → logprob: -10.387941360473633

Token 1536: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002541872672736645
    2. '                       ' → logprob: -9.25025463104248
    3. '```' → logprob: -10.00025463104248
    4. '               ' → logprob: -10.25025463104248
    5. '                           ' → logprob: -10.62525463104248
    6. ' if' → logprob: -11.62525463104248
    7. 'if' → logprob: -11.87525463104248
    8. '           ' → logprob: -12.00025463104248
    9. '		           ' → logprob: -12.00025463104248
    10. '<|end|>' → logprob: -12.12525463104248

Token 1537: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.012030500918626785
    2. '                   ' → logprob: -5.012030601501465
    3. 'if' (adapté à ' if') → logprob: -5.512030601501465
    4. ' if' → logprob: -7.512030601501465
    5. '                           ' → logprob: -8.262030601501465
    6. '               ' → logprob: -8.512030601501465
    7. '           ' → logprob: -9.762030601501465
    8. '       ' → logprob: -10.137030601501465
    9. '	                   ' → logprob: -10.387030601501465
    10. '                               ' → logprob: -10.387030601501465

Token 1538: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.06196970492601395
    2. 'not' → logprob: -2.811969757080078
    3. '!' → logprob: -14.311969757080078
    4. '(not' → logprob: -14.561969757080078
    5. '                   ' → logprob: -14.811969757080078
    6. ' cover' → logprob: -15.061969757080078
    7. '               ' → logprob: -15.936969757080078
    8. '
' → logprob: -16.186969757080078
    9. 'cover' → logprob: -16.686969757080078
    10. '                       ' → logprob: -16.686969757080078

Token 1539: ' cover' (ID: 4321)
  Prédit: 'cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cover' → logprob: -0.011048408225178719
    2. ' cover' → logprob: -4.511048316955566
    3. 'coverage' → logprob: -14.636048316955566
    4. 'covered' → logprob: -16.636049270629883
    5. '.cover' → logprob: -17.511049270629883
    6. '
' → logprob: -19.261049270629883
    7. '   ' → logprob: -19.386049270629883
    8. 'covers' → logprob: -19.511049270629883
    9. '_cover' → logprob: -19.761049270629883
    10. '0' → logprob: -19.886049270629883

Token 1540: '_check' (ID: 15847)
  Prédit: '_check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_check' → logprob: -4.906711546937004e-05
    2. '[y' → logprob: -10.625048637390137
    3. '[x' → logprob: -11.875048637390137
    4. '_cover' → logprob: -12.250048637390137
    5. 'check' → logprob: -12.875048637390137
    6. '_' → logprob: -12.875048637390137
    7. '_checked' → logprob: -13.500048637390137
    8. 'ed' → logprob: -13.500048637390137
    9. '   ' → logprob: -13.625048637390137
    10. 'd' → logprob: -14.250048637390137

Token 1541: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -4.60414821645827e-06
    2. '[x' → logprob: -12.750004768371582
    3. '[' → logprob: -13.625004768371582
    4. ' [' → logprob: -16.000003814697266
    5. 'y' → logprob: -16.250003814697266
    6. '           ' → logprob: -16.625003814697266
    7. '                   ' → logprob: -16.875003814697266
    8. '                       ' → logprob: -17.000003814697266
    9. '   ' → logprob: -17.625003814697266
    10. '               ' → logprob: -17.750003814697266

Token 1542: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.013339038006961346
    2. '[x' → logprob: -4.388339042663574
    3. ']:
' → logprob: -7.513339042663574
    4. '[' → logprob: -9.013339042663574
    5. '[y' → logprob: -10.138339042663574
    6. ']' → logprob: -10.513339042663574
    7. '                   ' → logprob: -10.888339042663574
    8. '                       ' → logprob: -10.888339042663574
    9. ']:' → logprob: -11.513339042663574
    10. '(x' → logprob: -11.888339042663574

Token 1543: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.2664456789934775e-06
    2. ' x' → logprob: -13.625000953674316
    3. '(x' → logprob: -18.000001907348633
    4. '[x' → logprob: -18.125001907348633
    5. '{x' → logprob: -19.750001907348633
    6. '0' → logprob: -19.750001907348633
    7. ']' → logprob: -20.375001907348633
    8. '	x' → logprob: -20.625001907348633
    9. '
' → logprob: -21.000001907348633
    10. '   ' → logprob: -21.375001907348633

Token 1544: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1617707908153534
    2. ':' → logprob: -2.411770820617676
    3. '                       ' → logprob: -3.161770820617676
    4. ']:
' → logprob: -4.411770820617676
    5. '                   ' → logprob: -6.661770820617676
    6. '                           ' → logprob: -6.786770820617676
    7. '):
' → logprob: -6.786770820617676
    8. '():
' → logprob: -7.411770820617676
    9. ':return' → logprob: -7.536770820617676
    10. ']:' → logprob: -9.161770820617676

Token 1545: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -7.052377623040229e-05
    2. 'return' → logprob: -10.625070571899414
    3. ' return' → logprob: -10.875070571899414
    4. '                           ' → logprob: -11.250070571899414
    5. '                   ' → logprob: -12.250070571899414
    6. '```' → logprob: -13.000070571899414
    7. '                      ' → logprob: -13.125070571899414
    8. '                        
' → logprob: -13.500070571899414
    9. ':return' → logprob: -13.500070571899414
    10. '                        ' → logprob: -14.625070571899414

Token 1546: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08486465364694595
    2. ' return' → logprob: -3.209864616394043
    3. '                       ' → logprob: -3.334864616394043
    4. '                           ' → logprob: -5.334864616394043
    5. '                               ' → logprob: -7.709864616394043
    6. '                   ' → logprob: -10.459864616394043
    7. '	return' → logprob: -10.709864616394043
    8. '               ' → logprob: -11.209864616394043
    9. '```' → logprob: -11.459864616394043
    10. '           ' → logprob: -11.834864616394043

Token 1547: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04427661374211311
    2. '
' → logprob: -3.294276714324951
    3. '                       ' → logprob: -5.794276714324951
    4. '               ' → logprob: -6.919276714324951
    5. '                   ' → logprob: -7.294276714324951
    6. '                           ' → logprob: -7.294276714324951
    7. '       ' → logprob: -8.419276237487793
    8. '                        
' → logprob: -8.544276237487793
    9. '                               ' → logprob: -8.919276237487793
    10. 'return' → logprob: -9.294276237487793

Token 1548: '           ' (ID: 352)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.019479384645819664
    2. '                   ' → logprob: -4.894479274749756
    3. '```' → logprob: -5.519479274749756
    4. '
' → logprob: -6.144479274749756
    5. '                           ' → logprob: -6.144479274749756
    6. '               ' → logprob: -6.894479274749756
    7. '                               ' → logprob: -7.144479274749756
    8. '           ' → logprob: -7.269479274749756
    9. '                        
' → logprob: -7.644479274749756
    10. '       ' → logprob: -8.269479751586914

Token 1549: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028164643794298172
    2. '       ' → logprob: -3.9031646251678467
    3. '
' → logprob: -5.528164863586426
    4. '   ' → logprob: -5.653164863586426
    5. 'solutions' → logprob: -9.778164863586426
    6. 'solution' → logprob: -10.903164863586426
    7. '               ' → logprob: -11.153164863586426
    8. '    
' → logprob: -11.903164863586426
    9. '            
' → logprob: -12.528164863586426
    10. '                   ' → logprob: -13.403164863586426

Token 1550: ' check' (ID: 2371)
  Prédit: 'solutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solutions' → logprob: -0.04327206313610077
    2. '   ' → logprob: -4.043272018432617
    3. '       ' → logprob: -4.168272018432617
    4. '           ' → logprob: -4.918272018432617
    5. '#' → logprob: -7.418272018432617
    6. ' solutions' → logprob: -8.043272018432617
    7. 's' → logprob: -8.168272018432617
    8. 'for' → logprob: -8.418272018432617
    9. 'if' → logprob: -8.418272018432617
    10. 'sol' → logprob: -8.668272018432617

Token 1551: ' if' (ID: 538)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.2946643531322479
    2. 'boards' → logprob: -1.6696643829345703
    3. ' all' → logprob: -4.41966438293457
    4. '   ' → logprob: -4.66966438293457
    5. 'b' → logprob: -4.79466438293457
    6. 'len' → logprob: -5.04466438293457
    7. 'any' → logprob: -5.16966438293457
    8. 'buyers' → logprob: -5.16966438293457
    9. '#' → logprob: -5.29466438293457
    10. 'True' → logprob: -6.16966438293457

Token 1552: ' for' (ID: 395)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.07920162379741669
    2. 'assigned' → logprob: -3.4542016983032227
    3. 'any' → logprob: -4.204201698303223
    4. ' all' → logprob: -4.329201698303223
    5. 'boards' → logprob: -5.579201698303223
    6. 's' → logprob: -6.079201698303223
    7. '#' → logprob: -6.204201698303223
    8. 'candidate' → logprob: -6.454201698303223
    9. 'b' → logprob: -6.954201698303223
    10. '   ' → logprob: -7.204201698303223

Token 1553: ' each' (ID: 2454)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.01126229763031
    2. 'b' → logprob: -1.26126229763031
    3. ' b' → logprob: -1.88626229763031
    4. ' r' → logprob: -2.1362624168395996
    5. ' buyer' → logprob: -3.6362624168395996
    6. ' all' → logprob: -4.0112624168396
    7. 'all' → logprob: -4.2612624168396
    8. 'buyer' → logprob: -4.3862624168396
    9. 'each' → logprob: -5.3862624168396
    10. ' each' → logprob: -5.7612624168396

Token 1554: ' buyer' (ID: 28061)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.40175536274909973
    2. 'i' → logprob: -2.0267553329467773
    3. ' b' → logprob: -2.5267553329467773
    4. 'buyer' → logprob: -3.1517553329467773
    5. ' buyer' → logprob: -3.2767553329467773
    6. ' i' → logprob: -3.4017553329467773
    7. 'r' → logprob: -6.151755332946777
    8. ' assigned' → logprob: -7.401755332946777
    9. 'assigned' → logprob: -7.776755332946777
    10. 'idx' → logprob: -7.901755332946777

Token 1555: ' all' (ID: 722)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.586193561553955
    2. 'b' → logprob: -1.586193561553955
    3. ':
' → logprob: -1.586193561553955
    4. '           ' → logprob: -2.836193561553955
    5. ' assigned' → logprob: -3.086193561553955
    6. ' in' → logprob: -3.461193561553955
    7. ' for' → logprob: -3.461193561553955
    8. '               ' → logprob: -3.586193561553955
    9. 'assigned' → logprob: -3.586193561553955
    10. ':' → logprob: -3.586193561553955

Token 1556: ' its' (ID: 1617)
  Prédit: 'boards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'boards' → logprob: -0.021089358255267143
    2. ' boards' → logprob: -4.646089553833008
    3. 'b' → logprob: -4.771089553833008
    4. 'r' → logprob: -7.521089553833008
    5. 'positions' → logprob: -7.646089553833008
    6. 'board' → logprob: -7.771089553833008
    7. 'cells' → logprob: -7.896089553833008
    8. ' b' → logprob: -8.146089553833008
    9. 'their' → logprob: -9.146089553833008
    10. ' their' → logprob: -9.396089553833008

Token 1557: ' boards' (ID: 27531)
  Prédit: 'boards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boards' → logprob: -0.0002728985855355859
    2. ' boards' → logprob: -9.000272750854492
    3. 'board' → logprob: -9.500272750854492
    4. 'positions' → logprob: -10.375272750854492
    5. 'b' → logprob: -10.625272750854492
    6. 'cells' → logprob: -11.125272750854492
    7. '#' → logprob: -13.500272750854492
    8. 'buyers' → logprob: -14.125272750854492
    9. '```' → logprob: -14.250272750854492
    10. 'assigned' → logprob: -14.500272750854492

Token 1558: ' are' (ID: 553)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.896065354347229
    2. ' are' → logprob: -1.021065354347229
    3. 'in' → logprob: -1.771065354347229
    4. 'are' → logprob: -4.1460652351379395
    5. '```' → logprob: -4.6460652351379395
    6. ' have' → logprob: -4.8960652351379395
    7. '           ' → logprob: -5.0210652351379395
    8. ' positions' → logprob: -5.2710652351379395
    9. '                   ' → logprob: -6.3960652351379395
    10. '_positions' → logprob: -6.5210652351379395

Token 1559: ' inside' (ID: 6772)
  Prédit: 'contained'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contained' → logprob: -0.4225301444530487
    2. 'covered' → logprob: -1.297530174255371
    3. 'inside' → logprob: -3.047530174255371
    4. 'included' → logprob: -4.422530174255371
    5. 'in' → logprob: -4.547530174255371
    6. 'within' → logprob: -7.172530174255371
    7. '```' → logprob: -8.922530174255371
    8. ' covered' → logprob: -9.297530174255371
    9. 'located' → logprob: -9.797530174255371
    10. ' contained' → logprob: -9.797530174255371

Token 1560: ' assigned' (ID: 21482)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00806176383048296
    2. '
' → logprob: -5.25806188583374
    3. ' for' → logprob: -6.50806188583374
    4. 'for' → logprob: -7.25806188583374
    5. '                       ' → logprob: -8.883061408996582
    6. '               ' → logprob: -9.008061408996582
    7. '                   ' → logprob: -9.133061408996582
    8. '```' → logprob: -9.633061408996582
    9. '       ' → logprob: -10.133061408996582
    10. ',' → logprob: -10.258061408996582

Token 1561: ' rectangle' (ID: 45808)
  Prédit: '_rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.00348781980574131
    2. 'rect' → logprob: -6.003487586975098
    3. '_rectangle' → logprob: -7.628487586975098
    4. '_r' → logprob: -8.253487586975098
    5. 'rectangle' → logprob: -9.253487586975098
    6. 'r' → logprob: -9.253487586975098
    7. '_' → logprob: -11.128487586975098
    8. '```' → logprob: -11.628487586975098
    9. '   ' → logprob: -11.753487586975098
    10. '
' → logprob: -11.878487586975098

Token 1562: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025382055900990963
    2. '
' → logprob: -6.127538204193115
    3. '                   ' → logprob: -9.252538681030273
    4. '                       ' → logprob: -9.752538681030273
    5. ',' → logprob: -10.127538681030273
    6. ' for' → logprob: -10.252538681030273
    7. '               ' → logprob: -10.252538681030273
    8. ':
' → logprob: -10.877538681030273
    9. '                           ' → logprob: -11.002538681030273
    10. '            
' → logprob: -11.877538681030273

Token 1563: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6033467650413513
    2. '                       ' → logprob: -1.103346824645996
    3. '                   ' → logprob: -2.228346824645996
    4. '                           ' → logprob: -5.103346824645996
    5. '
' → logprob: -5.603346824645996
    6. '               ' → logprob: -5.728346824645996
    7. '       ' → logprob: -8.978346824645996
    8. ',' → logprob: -9.353346824645996
    9. '                               ' → logprob: -9.603346824645996
    10. '```' → logprob: -9.978346824645996

Token 1564: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022515513002872467
    2. '       ' → logprob: -4.647515296936035
    3. '                       ' → logprob: -5.147515296936035
    4. '                   ' → logprob: -5.647515296936035
    5. '               ' → logprob: -6.147515296936035
    6. '   ' → logprob: -7.147515296936035
    7. '
' → logprob: -8.522515296936035
    8. '                           ' → logprob: -8.897515296936035
    9. 'for' (adapté à ' for') → logprob: -10.397515296936035
    10. ' for' → logprob: -10.522515296936035

Token 1565: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.546237587928772
    2. 'b' → logprob: -1.171237587928772
    3. 'i' → logprob: -2.9212374687194824
    4. ' idx' → logprob: -3.5462374687194824
    5. ' b' → logprob: -4.296237468719482
    6. '(b' → logprob: -5.171237468719482
    7. 'j' → logprob: -5.921237468719482
    8. 'bi' → logprob: -6.421237468719482
    9. 'bid' → logprob: -6.546237468719482
    10. 'range' → logprob: -7.671237468719482

Token 1566: ',b' (ID: 17568)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47786641120910645
    2. ' in' → logprob: -0.9778664112091064
    3. ',' → logprob: -5.852866172790527
    4. '[' → logprob: -8.852866172790527
    5. '[in' → logprob: -9.352866172790527
    6. ')' → logprob: -9.352866172790527
    7. '[b' → logprob: -9.477866172790527
    8. ',b' → logprob: -9.602866172790527
    9. '```' → logprob: -9.602866172790527
    10. '[idx' → logprob: -9.977866172790527

Token 1567: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7489815354347229
    2. ' in' → logprob: -1.1239814758300781
    3. 'in' → logprob: -2.373981475830078
    4. ']' → logprob: -3.873981475830078
    5. ' =' → logprob: -4.123981475830078
    6. ',' → logprob: -4.373981475830078
    7. '=' → logprob: -4.748981475830078
    8. '_' → logprob: -5.248981475830078
    9. '_i' → logprob: -5.373981475830078
    10. ')_' → logprob: -5.498981475830078

Token 1568: ' enumerate' (ID: 29671)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019534912426024675
    2. ' range' → logprob: -6.251953601837158
    3. 'in' → logprob: -11.876953125
    4. '(range' → logprob: -12.001953125
    5. '   ' → logprob: -12.126953125
    6. '  ' → logprob: -13.501953125
    7. 'ange' → logprob: -13.501953125
    8. 'buyer' → logprob: -13.626953125
    9. 'enumer' → logprob: -14.501953125
    10. '	range' → logprob: -15.001953125

Token 1569: '(b' (ID: 3229)
  Prédit: 'buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyer' → logprob: -0.012285470962524414
    2. 'buyers' → logprob: -4.637285232543945
    3. ' buyer' → logprob: -6.762285232543945
    4. '(b' → logprob: -7.512285232543945
    5. 'assigned' → logprob: -8.137285232543945
    6. 'range' → logprob: -8.137285232543945
    7. 'b' → logprob: -9.137285232543945
    8. 'candidate' → logprob: -10.762285232543945
    9. '[' → logprob: -10.887285232543945
    10. ' buyers' → logprob: -10.887285232543945

Token 1570: 'uyer' (ID: 78614)
  Prédit: 'uyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uyer' → logprob: -8.506661833962426e-05
    2. 'buyer' → logprob: -9.50008487701416
    3. 'uy' → logprob: -11.87508487701416
    4. '[' → logprob: -13.75008487701416
    5. 'ayer' → logprob: -13.75008487701416
    6. 'yer' → logprob: -14.87508487701416
    7. '```' → logprob: -16.125085830688477
    8. 'uer' → logprob: -16.625085830688477
    9. '{' → logprob: -16.625085830688477
    10. '#' → logprob: -16.750085830688477

Token 1571: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0008110555354505777
    2. 's' → logprob: -7.2508111000061035
    3. '[_' → logprob: -10.375810623168945
    4. ']_' → logprob: -11.125810623168945
    5. '
' → logprob: -11.875810623168945
    6. '[' → logprob: -11.875810623168945
    7. '_lists' → logprob: -12.250810623168945
    8. ')_' → logprob: -12.250810623168945
    9. '[
' → logprob: -12.500810623168945
    10. ']' → logprob: -12.500810623168945

Token 1572: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4725356996059418
    2. '):
' → logprob: -1.4725357294082642
    3. '       ' → logprob: -2.0975356101989746
    4. ':' → logprob: -4.222535610198975
    5. '               ' → logprob: -5.722535610198975
    6. '):' → logprob: -6.097535610198975
    7. '           ' → logprob: -6.347535610198975
    8. '                       ' → logprob: -7.347535610198975
    9. '():
' → logprob: -7.472535610198975
    10. ',' → logprob: -7.597535610198975

Token 1573: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012554510496556759
    2. '       ' → logprob: -4.88755464553833
    3. '```' → logprob: -6.01255464553833
    4. '                       ' → logprob: -6.38755464553833
    5. '           ' → logprob: -8.262554168701172
    6. '<|end|>' → logprob: -8.762554168701172
    7. ' if' → logprob: -9.387554168701172
    8. '
' → logprob: -9.887554168701172
    9. '                   ' → logprob: -10.012554168701172
    10. ',' → logprob: -10.137554168701172

Token 1574: ' r' (ID: 428)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.9050247073173523
    2. 'r' (adapté à ' r') → logprob: -1.405024766921997
    3. '               ' → logprob: -2.405024766921997
    4. ' rect' → logprob: -2.530024766921997
    5. ' r' → logprob: -2.780024766921997
    6. '       ' → logprob: -3.280024766921997
    7. '                   ' → logprob: -3.655024766921997
    8. 'pos' → logprob: -3.905024766921997
    9. 'x' → logprob: -4.405024528503418
    10. 'b' → logprob: -4.905024528503418

Token 1575: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.616260290145874
    2. '=' → logprob: -0.866260290145874
    3. 'x' → logprob: -3.241260290145874
    4. '=x' → logprob: -8.366260528564453
    5. '_x' → logprob: -9.616260528564453
    6. '       ' → logprob: -9.866260528564453
    7. '           ' → logprob: -10.866260528564453
    8. '=
' → logprob: -11.491260528564453
    9. '   ' → logprob: -11.866260528564453
    10. '               ' → logprob: -13.366260528564453

Token 1576: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.0017158739501610398
    2. ' assigned' → logprob: -6.626715660095215
    3. 'candidate' → logprob: -7.876715660095215
    4. '   ' → logprob: -11.876715660095215
    5. ' candidate' → logprob: -13.126715660095215
    6. '                   ' → logprob: -14.376715660095215
    7. '               ' → logprob: -14.876715660095215
    8. '           ' → logprob: -15.501715660095215
    9. 'assign' → logprob: -16.00171661376953
    10. 'rect' → logprob: -17.50171661376953

Token 1577: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.000649529043585062
    2. 'rect' → logprob: -8.000649452209473
    3. 's' → logprob: -8.125649452209473
    4. 'Rects' → logprob: -11.750649452209473
    5. 'r' → logprob: -12.750649452209473
    6. '
' → logprob: -13.125649452209473
    7. '(rect' → logprob: -13.625649452209473
    8. '[' → logprob: -13.875649452209473
    9. '_r' → logprob: -14.875649452209473
    10. 't' → logprob: -14.875649452209473

Token 1578: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0008190384833142161
    2. '[idx' → logprob: -8.125819206237793
    3. 'cts' → logprob: -8.500819206237793
    4. '_rect' → logprob: -9.125819206237793
    5. '[s' → logprob: -9.750819206237793
    6. '[' → logprob: -9.875819206237793
    7. 'rect' → logprob: -10.625819206237793
    8. 'ects' → logprob: -10.625819206237793
    9. 'Rects' → logprob: -11.000819206237793
    10. 'ts' → logprob: -11.500819206237793

Token 1579: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.4855663721391466e-05
    2. 'idx' → logprob: -11.500015258789062
    3. '(idx' → logprob: -13.000015258789062
    4. '```' → logprob: -14.125015258789062
    5. '[' → logprob: -14.500015258789062
    6. '
' → logprob: -15.000015258789062
    7. '[
' → logprob: -15.750015258789062
    8. '    
' → logprob: -15.875015258789062
    9. '[i' → logprob: -16.250015258789062
    10. '[b' → logprob: -16.625015258789062

Token 1580: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6309607625007629
    2. ')' → logprob: -1.5059607028961182
    3. '               ' → logprob: -2.130960702896118
    4. '[' → logprob: -3.130960702896118
    5. '                   ' → logprob: -3.380960702896118
    6. ']
' → logprob: -3.755960702896118
    7. ']' → logprob: -4.505960941314697
    8. '           ' → logprob: -5.505960941314697
    9. '):
' → logprob: -6.130960941314697
    10. '][' → logprob: -6.505960941314697

Token 1581: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04349282383918762
    2. '               ' → logprob: -3.2934927940368652
    3. '                       ' → logprob: -6.293492794036865
    4. '```' → logprob: -7.043492794036865
    5. '   ' → logprob: -7.793492794036865
    6. '           ' → logprob: -7.918492794036865
    7. '	               ' → logprob: -7.918492794036865
    8. '       ' → logprob: -8.043493270874023
    9. '		           ' → logprob: -8.168493270874023
    10. '			       ' → logprob: -8.668493270874023

Token 1582: ' x' (ID: 1215)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6416526436805725
    2. 'pos' → logprob: -1.6416525840759277
    3. 'bx' → logprob: -2.5166525840759277
    4. 'x' (adapté à ' x') → logprob: -2.8916525840759277
    5. 'positions' → logprob: -3.3916525840759277
    6. ' bx' → logprob: -3.6416525840759277
    7. '                   ' → logprob: -4.016652584075928
    8. 'xs' → logprob: -4.016652584075928
    9. 'b' → logprob: -4.891652584075928
    10. ' positions' → logprob: -5.391652584075928

Token 1583: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001976215047761798
    2. '2' → logprob: -7.001976013183594
    3. '_' → logprob: -7.751976013183594
    4. 'r' → logprob: -8.626976013183594
    5. '=' → logprob: -9.251976013183594
    6. ',' → logprob: -9.626976013183594
    7. '[' → logprob: -9.751976013183594
    8. '```' → logprob: -10.501976013183594
    9. '_min' → logprob: -10.876976013183594
    10. '<|end|>' → logprob: -11.001976013183594

Token 1584: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.5529634356498718
    2. ',' → logprob: -0.9279634356498718
    3. ',x' → logprob: -4.4279632568359375
    4. '<=' → logprob: -5.6779632568359375
    5. ',r' → logprob: -5.6779632568359375
    6. ' ,' → logprob: -6.0529632568359375
    7. '==' → logprob: -6.1779632568359375
    8. ' <=' → logprob: -6.4279632568359375
    9. '+' → logprob: -6.8029632568359375
    10. ',
' → logprob: -7.1779632568359375

Token 1585: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. ',' → logprob: -11.500014305114746
    3. 'r' → logprob: -14.375014305114746
    4. ',r' → logprob: -14.500014305114746
    5. ' ' → logprob: -14.500014305114746
    6. '
' → logprob: -14.750014305114746
    7. ',y' → logprob: -15.125014305114746
    8. '```' → logprob: -15.500014305114746
    9. '=' → logprob: -15.750014305114746
    10. '0' → logprob: -15.875014305114746

Token 1586: ',x' (ID: 29748)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.8406181931495667
    2. ',' → logprob: -1.0906181335449219
    3. ' <=' → logprob: -2.215618133544922
    4. ',r' → logprob: -3.090618133544922
    5. ',y' → logprob: -3.590618133544922
    6. ',x' → logprob: -4.090618133544922
    7. '==' → logprob: -4.465618133544922
    8. '>=' → logprob: -4.465618133544922
    9. ' >=' → logprob: -6.465618133544922
    10. '<|end|>' → logprob: -6.465618133544922

Token 1587: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016063899965956807
    2. '2' → logprob: -7.376606464385986
    3. '<|end|>' → logprob: -8.126605987548828
    4. '0' → logprob: -8.376605987548828
    5. '```' → logprob: -9.251605987548828
    6. ',' → logprob: -9.376605987548828
    7. 'r' → logprob: -9.376605987548828
    8. '[' → logprob: -10.126605987548828
    9. '=' → logprob: -10.376605987548828
    10. '<|end|>' → logprob: -10.626605987548828

Token 1588: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3658406734466553
    2. ',y' → logprob: -2.1158406734466553
    3. ',r' → logprob: -2.3658406734466553
    4. ',x' → logprob: -2.9908406734466553
    5. ' ,' → logprob: -3.9908406734466553
    6. '==' → logprob: -5.365840911865234
    7. ',k' → logprob: -5.865840911865234
    8. ',b' → logprob: -6.115840911865234
    9. '```' → logprob: -6.365840911865234
    10. ' ==' → logprob: -6.615840911865234

Token 1589: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17980168759822845
    2. '1' → logprob: -1.8048017024993896
    3. '=' → logprob: -11.054801940917969
    4. '```' → logprob: -11.429801940917969
    5. '<|end|>' → logprob: -11.679801940917969
    6. 'y' → logprob: -11.929801940917969
    7. ',' → logprob: -12.804801940917969
    8. '[' → logprob: -13.054801940917969
    9. '+' → logprob: -13.179801940917969
    10. '0' → logprob: -13.179801940917969

Token 1590: ' =' (ID: 314)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.9028084874153137
    2. ' ==' → logprob: -1.027808427810669
    3. '==' → logprob: -2.027808427810669
    4. '<|end|>' → logprob: -2.777808427810669
    5. '<=' → logprob: -3.902808427810669
    6. '[' → logprob: -5.152808666229248
    7. ')' → logprob: -5.652808666229248
    8. '```' → logprob: -6.152808666229248
    9. ' =' → logprob: -6.402808666229248
    10. '=' → logprob: -6.777808666229248

Token 1591: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0011714138090610504
    2. ' r' → logprob: -6.751171588897705
    3. 'candidate' → logprob: -14.501171112060547
    4. '   ' → logprob: -15.626171112060547
    5. '
' → logprob: -16.001171112060547
    6. 'b' → logprob: -17.001171112060547
    7. '[r' → logprob: -17.001171112060547
    8. '	r' → logprob: -17.126171112060547
    9. '0' → logprob: -17.251171112060547
    10. '(r' → logprob: -17.376171112060547

Token 1592: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11564002186059952
    2. '
' → logprob: -2.7406399250030518
    3. '                   ' → logprob: -3.3656399250030518
    4. ' if' → logprob: -5.240640163421631
    5. ',' → logprob: -7.365640163421631
    6. ':
' → logprob: -7.740640163421631
    7. '[' → logprob: -8.240639686584473
    8. ' <=' → logprob: -8.240639686584473
    9. '<x' → logprob: -8.240639686584473
    10. 'if' → logprob: -8.365639686584473

Token 1593: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014760562917217612
    2. '                   ' → logprob: -6.626476287841797
    3. '```' → logprob: -10.001476287841797
    4. ' for' → logprob: -10.251476287841797
    5. '   ' → logprob: -11.251476287841797
    6. '                       ' → logprob: -11.626476287841797
    7. '           ' → logprob: -11.751476287841797
    8. ' if' → logprob: -12.001476287841797
    9. '	               ' → logprob: -12.126476287841797
    10. '       ' → logprob: -12.126476287841797

Token 1594: ' for' (ID: 395)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.07080507278442383
    2. 'px' → logprob: -3.570805072784424
    3. 'if' → logprob: -3.945805072784424
    4. 'for' (adapté à ' for') → logprob: -4.320805072784424
    5. 'positions' → logprob: -5.945805072784424
    6. 'boards' → logprob: -6.195805072784424
    7. 'bx' → logprob: -6.570805072784424
    8. ' if' → logprob: -7.945805072784424
    9. ' pos' → logprob: -8.570804595947266
    10. ' for' → logprob: -8.820804595947266

Token 1595: ' (' (ID: 350)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.31542065739631653
    2. 'px' → logprob: -1.8154206275939941
    3. '(px' → logprob: -3.065420627593994
    4. '(b' → logprob: -3.315420627593994
    5. '(p' → logprob: -4.815420627593994
    6. 'xb' → logprob: -4.940420627593994
    7. '(x' → logprob: -5.190420627593994
    8. 'p' → logprob: -6.440420627593994
    9. '(' → logprob: -7.565420627593994
    10. 'board' → logprob: -7.815420627593994

Token 1596: 'bx' (ID: 34802)
  Prédit: 'bx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.038568783551454544
    2. 'px' → logprob: -3.5385687351226807
    3. 'xb' → logprob: -5.28856897354126
    4. 'x' → logprob: -5.78856897354126
    5. 'xx' → logprob: -7.91356897354126
    6. 'xp' → logprob: -9.163568496704102
    7. '(x' → logprob: -9.538568496704102
    8. '(px' → logprob: -9.913568496704102
    9. 'cx' → logprob: -10.788568496704102
    10. ' bx' → logprob: -11.038568496704102

Token 1597: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3443708121776581
    2. ',x' → logprob: -1.3443708419799805
    3. '0' → logprob: -3.9693708419799805
    4. ')' → logprob: -5.5943708419799805
    5. ',b' → logprob: -5.5943708419799805
    6. ' ,' → logprob: -7.0943708419799805
    7. ',y' → logprob: -7.0943708419799805
    8. '[' → logprob: -7.4693708419799805
    9. 'x' → logprob: -7.4693708419799805
    10. '),' → logprob: -8.09437084197998

Token 1598: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.0001238004770129919
    2. ' by' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.375123977661133
    4. ',' → logprob: -16.500123977661133
    5. '
' → logprob: -16.500123977661133
    6. 'b' → logprob: -17.000123977661133
    7. '    ' → logprob: -18.000123977661133
    8. 'bx' → logprob: -18.375123977661133
    9. 'by's' → logprob: -18.500123977661133
    10. '```' → logprob: -18.750123977661133

Token 1599: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.412610233994201e-05
    2. 'in' → logprob: -9.375094413757324
    3. ' )' → logprob: -11.875094413757324
    4. ')
' → logprob: -13.875094413757324
    5. ',)' → logprob: -15.250094413757324
    6. '),' → logprob: -15.500094413757324
    7. ' in' → logprob: -15.500094413757324
    8. '_in' → logprob: -15.625094413757324
    9. ',' → logprob: -15.875094413757324
    10. 'b' → logprob: -16.375093460083008

Token 1600: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5807377099990845
    2. 'in' → logprob: -0.8307377099990845
    3. ')' → logprob: -5.455737590789795
    4. ',' → logprob: -8.455738067626953
    5. '_in' → logprob: -8.830738067626953
    6. '<|end|>' → logprob: -10.705738067626953
    7. '	in' → logprob: -10.830738067626953
    8. '                   ' → logprob: -11.580738067626953
    9. ',b' → logprob: -11.580738067626953
    10. ')==' → logprob: -11.830738067626953

Token 1601: ' boards' (ID: 27531)
  Prédit: 'boards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'boards' → logprob: -0.00044496997725218534
    2. ' boards' → logprob: -7.7504448890686035
    3. 'candidate' → logprob: -11.750445365905762
    4. 'positions' → logprob: -13.375445365905762
    5. 'board' → logprob: -13.500445365905762
    6. 'buyers' → logprob: -13.750445365905762
    7. 'pos' → logprob: -14.500445365905762
    8. 'buyer' → logprob: -14.625445365905762
    9. 'b' → logprob: -15.000445365905762
    10. '
' → logprob: -15.250445365905762

Token 1602: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.016359737142920494
    2. '[b' → logprob: -5.141359806060791
    3. '[idx' → logprob: -5.266359806060791
    4. 'pos' → logprob: -5.516359806060791
    5. 'Pos' → logprob: -8.141359329223633
    6. 'b' → logprob: -8.141359329223633
    7. '[' → logprob: -8.266359329223633
    8. '_positions' → logprob: -9.516359329223633
    9. '
' → logprob: -9.891359329223633
    10. '_idx' → logprob: -10.016359329223633

Token 1603: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0015046248445287347
    2. 'b' → logprob: -6.501504421234131
    3. '               ' → logprob: -13.876504898071289
    4. '                   ' → logprob: -15.126504898071289
    5. '[' → logprob: -15.376504898071289
    6. '           ' → logprob: -16.00150489807129
    7. '	b' → logprob: -16.12650489807129
    8. '   ' → logprob: -16.37650489807129
    9. '[r' → logprob: -16.37650489807129
    10. '(b' → logprob: -16.37650489807129

Token 1604: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5751127004623413
    2. '):
' → logprob: -1.2001127004623413
    3. '                   ' → logprob: -3.200112819671631
    4. '               ' → logprob: -3.575112819671631
    5. ':' → logprob: -3.950112819671631
    6. '[idx' → logprob: -3.950112819671631
    7. ']:
' → logprob: -4.200112819671631
    8. '):' → logprob: -5.450112819671631
    9. '                       ' → logprob: -6.325112819671631
    10. '[' → logprob: -6.575112819671631

Token 1605: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00039528406341560185
    2. '		           ' → logprob: -9.125394821166992
    3. '```' → logprob: -9.875394821166992
    4. '<|end|>' → logprob: -10.250394821166992
    5. ' if' → logprob: -10.375394821166992
    6. 'if' → logprob: -10.750394821166992
    7. ':
' → logprob: -10.875394821166992
    8. '                       ' → logprob: -10.875394821166992
    9. '                  ' → logprob: -11.125394821166992
    10. '				' → logprob: -11.125394821166992

Token 1606: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.32308563590049744
    2. '                       ' → logprob: -1.9480856657028198
    3. '                   ' → logprob: -2.1980855464935303
    4. ' if' → logprob: -3.8230855464935303
    5. '	                   ' → logprob: -8.94808578491211
    6. '```' → logprob: -8.94808578491211
    7. '                           ' → logprob: -9.57308578491211
    8. '					' → logprob: -9.94808578491211
    9. 'assert' → logprob: -10.32308578491211
    10. '#' → logprob: -10.57308578491211

Token 1607: ' not' (ID: 625)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bx' → logprob: -0.5375216007232666
    2. 'not' → logprob: -0.9125216007232666
    3. ' not' → logprob: -4.5375213623046875
    4. 'x' → logprob: -6.4125213623046875
    5. ' bx' → logprob: -6.4125213623046875
    6. '   ' → logprob: -9.037521362304688
    7. '(not' → logprob: -9.412521362304688
    8. '```' → logprob: -10.662521362304688
    9. '(b' → logprob: -11.162521362304688
    10. '``' → logprob: -11.537521362304688

Token 1608: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -3.869639476761222e-05
    2. '(' → logprob: -10.875039100646973
    3. ' (' → logprob: -10.875039100646973
    4. '((' → logprob: -14.375039100646973
    5. 'x' → logprob: -16.125038146972656
    6. '   ' → logprob: -17.375038146972656
    7. '(
' → logprob: -18.500038146972656
    8. '(min' → logprob: -19.000038146972656
    9. '(X' → logprob: -19.125038146972656
    10. '(value' → logprob: -20.000038146972656

Token 1609: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001664717128733173
    2. ' x' → logprob: -8.750166893005371
    3. '(x' → logprob: -11.750166893005371
    4. '   ' → logprob: -16.625165939331055
    5. ' (' → logprob: -17.500165939331055
    6. ')x' → logprob: -18.000165939331055
    7. '
' → logprob: -20.250165939331055
    8. '(' → logprob: -20.625165939331055
    9. ' ' → logprob: -20.750165939331055
    10. '_x' → logprob: -20.875165939331055

Token 1610: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0025974188465625048
    2. '>=' → logprob: -6.002597332000732
    3. 'x' → logprob: -9.87759780883789
    4. '```' → logprob: -10.12759780883789
    5. '<=' → logprob: -11.37759780883789
    6. ' >=' → logprob: -11.50259780883789
    7. '[' → logprob: -13.00259780883789
    8. '``' → logprob: -13.62759780883789
    9. ']>=' → logprob: -14.00259780883789
    10. ')>=' → logprob: -14.12759780883789

Token 1611: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.018154270946979523
    2. ' <=' → logprob: -4.018154144287109
    3. ')<=' → logprob: -12.89315414428711
    4. '```' → logprob: -14.26815414428711
    5. ')' → logprob: -14.39315414428711
    6. '≤' → logprob: -16.01815414428711
    7. ']<=' → logprob: -16.26815414428711
    8. '[' → logprob: -16.64315414428711
    9. ' ' → logprob: -16.76815414428711
    10. 'x' → logprob: -16.89315414428711

Token 1612: ' bx' (ID: 93853)
  Prédit: 'bx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bx' → logprob: -2.463036435074173e-05
    2. ' bx' → logprob: -10.625024795532227
    3. '
' → logprob: -15.750024795532227
    4. '(b' → logprob: -17.750024795532227
    5. '
' → logprob: -17.750024795532227
    6. 'b' → logprob: -18.250024795532227
    7. '```' → logprob: -18.250024795532227
    8. '   ' → logprob: -18.625024795532227
    9. 'Bx' → logprob: -18.625024795532227
    10. 'x' → logprob: -19.125024795532227

Token 1613: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3284115791320801
    2. 'and' → logprob: -1.95341157913208
    3. '<=' → logprob: -2.32841157913208
    4. ' <=' → logprob: -3.20341157913208
    5. ')' → logprob: -10.453411102294922
    6. '                       ' → logprob: -11.328411102294922
    7. '```' → logprob: -11.953411102294922
    8. '                           ' → logprob: -12.328411102294922
    9. '                   ' → logprob: -12.578411102294922
    10. '                        ' → logprob: -13.078411102294922

Token 1614: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -6.704273118884885e-07
    2. ' x' → logprob: -14.250000953674316
    3. '   ' → logprob: -20.0
    4. '
' → logprob: -22.125
    5. '	x' → logprob: -22.125
    6. ')x' → logprob: -23.5
    7. '                   ' → logprob: -23.625
    8. ' ' → logprob: -24.375
    9. '"x' → logprob: -24.5
    10. '```' → logprob: -25.0

Token 1615: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. 'y' → logprob: -14.625000953674316
    3. '```' → logprob: -15.500000953674316
    4. '   ' → logprob: -16.125001907348633
    5. ' ' → logprob: -16.500001907348633
    6. '       ' → logprob: -17.125001907348633
    7. 'x' → logprob: -17.250001907348633
    8. '
' → logprob: -17.500001907348633
    9. '``' → logprob: -17.750001907348633
    10. '_' → logprob: -18.375001907348633

Token 1616: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03816221281886101
    2. 'and' → logprob: -3.2881622314453125
    3. '                       ' → logprob: -9.788162231445312
    4. ')' → logprob: -10.913162231445312
    5. '                   ' → logprob: -11.163162231445312
    6. '                           ' → logprob: -11.538162231445312
    7. '                        ' → logprob: -11.788162231445312
    8. '                    ' → logprob: -11.913162231445312
    9. ' ' → logprob: -12.913162231445312
    10. '                     ' → logprob: -13.663162231445312

Token 1617: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00317783304490149
    2. ' y' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.128177642822266
    4. '	y' → logprob: -18.378177642822266
    5. '                   ' → logprob: -19.128177642822266
    6. '           ' → logprob: -19.503177642822266
    7. ''y' → logprob: -19.878177642822266
    8. '(y' → logprob: -20.003177642822266
    9. '
' → logprob: -20.128177642822266
    10. '     ' → logprob: -20.253177642822266

Token 1618: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006840797723270953
    2. '<=' → logprob: -7.5006842613220215
    3. ' <=' → logprob: -9.750683784484863
    4. '>=' → logprob: -10.500683784484863
    5. '```' → logprob: -10.625683784484863
    6. 'y' → logprob: -12.125683784484863
    7. '   ' → logprob: -12.875683784484863
    8. ')' → logprob: -13.000683784484863
    9. ' >=' → logprob: -13.000683784484863
    10. '_' → logprob: -13.750683784484863

Token 1619: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.12695226073265076
    2. '<=' → logprob: -2.1269521713256836
    3. ' >=' → logprob: -11.376952171325684
    4. '```' → logprob: -12.376952171325684
    5. '>=' → logprob: -12.376952171325684
    6. '<|end|>' → logprob: -13.376952171325684
    7. ')<=' → logprob: -13.501952171325684
    8. ' ≤' → logprob: -14.876952171325684
    9. ')' → logprob: -14.876952171325684
    10. '[' → logprob: -15.501952171325684

Token 1620: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.00317783304490149
    2. ' by' → logprob: -5.753177642822266
    3. '
' → logprob: -17.253177642822266
    4. '   ' → logprob: -17.253177642822266
    5. '(by' → logprob: -17.503177642822266
    6. 'bys' → logprob: -17.628177642822266
    7. 'by's' → logprob: -18.003177642822266
    8. ' ' → logprob: -18.003177642822266
    9. 'By' → logprob: -18.503177642822266
    10. '_by' → logprob: -18.753177642822266

Token 1621: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.16045179963111877
    2. ' <=' → logprob: -1.9104517698287964
    3. 'y' → logprob: -8.410451889038086
    4. ' y' → logprob: -13.035451889038086
    5. '```' → logprob: -13.660451889038086
    6. '>=' → logprob: -14.285451889038086
    7. ')<=' → logprob: -15.160451889038086
    8. '≤' → logprob: -15.410451889038086
    9. '                   ' → logprob: -16.285451889038086
    10. '0' → logprob: -16.410451889038086

Token 1622: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00043567578541114926
    2. ' y' → logprob: -7.750435829162598
    3. 'by' → logprob: -12.625435829162598
    4. '   ' → logprob: -14.000435829162598
    5. '
' → logprob: -15.125435829162598
    6. '	y' → logprob: -15.375435829162598
    7. '       ' → logprob: -15.750435829162598
    8. '     ' → logprob: -17.50043487548828
    9. ' ' → logprob: -17.62543487548828
    10. '(y' → logprob: -17.75043487548828

Token 1623: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.4849443838757e-06
    2. '1' → logprob: -12.375004768371582
    3. '```' → logprob: -15.750004768371582
    4. ' ' → logprob: -17.250003814697266
    5. '   ' → logprob: -17.625003814697266
    6. '<=' → logprob: -18.125003814697266
    7. 'y' → logprob: -18.250003814697266
    8. '``' → logprob: -18.500003814697266
    9. ' <=' → logprob: -18.812503814697266
    10. 'r' → logprob: -19.062503814697266

Token 1624: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.003235228592529893
    2. '                   ' → logprob: -6.628235340118408
    3. '):' → logprob: -6.753235340118408
    4. '                       ' → logprob: -7.503235340118408
    5. ' and' → logprob: -9.12823486328125
    6. '):

' → logprob: -10.50323486328125
    7. ')' → logprob: -10.87823486328125
    8. ' ):
' → logprob: -11.50323486328125
    9. ':
' → logprob: -12.00323486328125
    10. 'and' → logprob: -12.62823486328125

Token 1625: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0012788071762770414
    2. ':
' → logprob: -7.001278877258301
    3. '                           ' → logprob: -8.8762788772583
    4. '                   ' → logprob: -9.3762788772583
    5. '):
' → logprob: -9.8762788772583
    6. ':' → logprob: -10.7512788772583
    7. '                      ' → logprob: -11.1262788772583
    8. '                        ' → logprob: -11.5012788772583
    9. '                               ' → logprob: -11.8762788772583
    10. ' and' → logprob: -11.8762788772583

Token 1626: ' return' (ID: 622)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.048284247517585754
    2. 'return' (adapté à ' return') → logprob: -3.5482842922210693
    3. ' return' → logprob: -4.54828405380249
    4. '                               ' → logprob: -5.29828405380249
    5. '                       ' → logprob: -5.92328405380249
    6. '           ' → logprob: -10.548284530639648
    7. '
' → logprob: -10.923284530639648
    8. '                            ' → logprob: -11.423284530639648
    9. '                   ' → logprob: -11.548284530639648
    10. '               ' → logprob: -11.798284530639648

Token 1627: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05249378830194473
    2. '
' → logprob: -3.0524938106536865
    3. '            
' → logprob: -6.427493572235107
    4. '               ' → logprob: -7.552493572235107
    5. '                        
' → logprob: -7.677493572235107
    6. '    
' → logprob: -8.052494049072266
    7. '                   ' → logprob: -8.427494049072266
    8. '        
' → logprob: -8.927494049072266
    9. '       ' → logprob: -9.177494049072266
    10. '  
' → logprob: -9.302494049072266

Token 1628: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09605007618665695
    2. '
' → logprob: -3.0960500240325928
    3. '               ' → logprob: -3.7210500240325928
    4. '                   ' → logprob: -4.221050262451172
    5. '       ' → logprob: -5.846050262451172
    6. '                        
' → logprob: -6.346050262451172
    7. '```' → logprob: -6.846050262451172
    8. '                       ' → logprob: -7.471050262451172
    9. '   ' → logprob: -8.471050262451172
    10. '            
' → logprob: -8.471050262451172

Token 1629: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004119616060052067
    2. '       ' → logprob: -9.250411987304688
    3. '               ' → logprob: -9.250411987304688
    4. '
' → logprob: -9.375411987304688
    5. '                       ' → logprob: -9.375411987304688
    6. '                   ' → logprob: -10.625411987304688
    7. '   ' → logprob: -11.625411987304688
    8. '                           ' → logprob: -11.875411987304688
    9. 'return' → logprob: -13.500411987304688
    10. '                        
' → logprob: -13.500411987304688

Token 1630: ' also' (ID: 1217)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030481180176138878
    2. '
' → logprob: -3.9054811000823975
    3. '#' → logprob: -5.405481338500977
    4. 'return' → logprob: -6.155481338500977
    5. 'continue' → logprob: -7.030481338500977
    6. 'if' → logprob: -7.280481338500977
    7. '               ' → logprob: -7.655481338500977
    8. '   ' → logprob: -7.780481338500977
    9. 'for' → logprob: -8.155481338500977
    10. '       ' → logprob: -9.280481338500977

Token 1631: ' area' (ID: 3624)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3636196851730347
    2. '           ' → logprob: -1.4886196851730347
    3. ' if' → logprob: -1.4886196851730347
    4. '
' → logprob: -2.113619804382324
    5. '               ' → logprob: -2.488619804382324
    6. '#' → logprob: -3.613619804382324
    7. 'for' → logprob: -3.988619804382324
    8. ' for' → logprob: -4.613619804382324
    9. 'x' → logprob: -4.863619804382324
    10. '                   ' → logprob: -5.363619804382324

Token 1632: ' matches' (ID: 15248)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7293915152549744
    2. '==' → logprob: -1.3543915748596191
    3. '           ' → logprob: -2.479391574859619
    4. '                   ' → logprob: -2.604391574859619
    5. '               ' → logprob: -3.354391574859619
    6. 'if' → logprob: -3.854391574859619
    7. '                       ' → logprob: -4.229391574859619
    8. '```' → logprob: -4.729391574859619
    9. ' if' → logprob: -4.979391574859619
    10. '
' → logprob: -5.854391574859619

Token 1633: ' k' (ID: 372)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023456037044525146
    2. '           ' → logprob: -4.14845609664917
    3. '
' → logprob: -5.77345609664917
    4. '                   ' → logprob: -6.27345609664917
    5. ' if' → logprob: -6.77345609664917
    6. '       ' → logprob: -8.023455619812012
    7. 'if' → logprob: -8.273455619812012
    8. '```' → logprob: -8.273455619812012
    9. ' for' → logprob: -9.523455619812012
    10. ',' → logprob: -9.773455619812012

Token 1634: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.020389942452311516
    2. '           ' → logprob: -4.145390033721924
    3. ' if' → logprob: -6.645390033721924
    4. '                   ' → logprob: -7.520390033721924
    5. 'if' → logprob: -7.645390033721924
    6. '       ' → logprob: -7.770390033721924
    7. '
' → logprob: -8.145389556884766
    8. 'for' → logprob: -8.520389556884766
    9. '<|end|>' → logprob: -8.520389556884766
    10. ',' → logprob: -8.645389556884766

Token 1635: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009624576196074486
    2. '           ' → logprob: -5.759624481201172
    3. '                   ' → logprob: -5.884624481201172
    4. '
' → logprob: -6.134624481201172
    5. '                       ' → logprob: -7.884624481201172
    6. '       ' → logprob: -8.009624481201172
    7. '```' → logprob: -8.384624481201172
    8. ' if' → logprob: -8.759624481201172
    9. ',' → logprob: -8.884624481201172
    10. '                ' → logprob: -10.509624481201172

Token 1636: ' area' (ID: 3624)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.49922704696655273
    2. '               ' → logprob: -1.9992270469665527
    3. 'if' → logprob: -2.1242270469665527
    4. '                   ' → logprob: -2.4992270469665527
    5. '
' → logprob: -3.7492270469665527
    6. '                       ' → logprob: -4.999227046966553
    7. '```' → logprob: -4.999227046966553
    8. '           ' → logprob: -5.124227046966553
    9. ' area' → logprob: -5.874227046966553
    10. '       ' → logprob: -6.499227046966553

Token 1637: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23539505898952484
    2. '==' → logprob: -1.985395073890686
    3. ' =' → logprob: -3.1103949546813965
    4. '=' → logprob: -3.7353949546813965
    5. '==(' → logprob: -6.6103949546813965
    6. '(x' → logprob: -7.2353949546813965
    7. ')==' → logprob: -7.9853949546813965
    8. '()==' → logprob: -8.610395431518555
    9. '```' → logprob: -8.610395431518555
    10. ')' → logprob: -8.985395431518555

Token 1638: ' (' (ID: 350)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.3074921667575836
    2. '(x' → logprob: -1.9324921369552612
    3. 'k' → logprob: -2.557492256164551
    4. 'x' → logprob: -3.932492256164551
    5. ' assigned' → logprob: -5.182492256164551
    6. ' (' → logprob: -5.432492256164551
    7. 'candidate' → logprob: -5.432492256164551
    8. 'b' → logprob: -5.932492256164551
    9. '(k' → logprob: -6.807492256164551
    10. '(' → logprob: -7.057492256164551

Token 1639: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0012504660990089178
    2. 'r' → logprob: -7.251250267028809
    3. 'assigned' → logprob: -7.876250267028809
    4. ' x' → logprob: -9.251250267028809
    5. '(x' → logprob: -9.876250267028809
    6. ' assigned' → logprob: -12.251250267028809
    7. ')x' → logprob: -13.501250267028809
    8. '```' → logprob: -13.876250267028809
    9. '
' → logprob: -14.001250267028809
    10. '   ' → logprob: -14.001250267028809

Token 1640: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.869017852295656e-06
    2. '1' → logprob: -13.125006675720215
    3. ' ' → logprob: -14.125006675720215
    4. '[' → logprob: -14.250006675720215
    5. '
' → logprob: -14.250006675720215
    6. '```' → logprob: -14.500006675720215
    7. 'assigned' → logprob: -14.625006675720215
    8. 'x' → logprob: -14.625006675720215
    9. ')' → logprob: -15.687506675720215
    10. '   ' → logprob: -15.812506675720215

Token 1641: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16022899746894836
    2. '-' → logprob: -1.910228967666626
    3. '-x' → logprob: -12.410228729248047
    4. ' ' → logprob: -15.660228729248047
    5. ' -
' → logprob: -15.910228729248047
    6. '-
' → logprob: -16.035228729248047
    7. '```' → logprob: -16.035228729248047
    8. ',' → logprob: -16.535228729248047
    9. '-y' → logprob: -17.160228729248047
    10. '−' → logprob: -17.285228729248047

Token 1642: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.157039049663581e-05
    2. ' x' → logprob: -9.875051498413086
    3. '1' → logprob: -18.375051498413086
    4. ')x' → logprob: -18.750051498413086
    5. '	x' → logprob: -19.375051498413086
    6. '(x' → logprob: -19.750051498413086
    7. '"x' → logprob: -20.500051498413086
    8. ' ' → logprob: -21.125051498413086
    9. '{x' → logprob: -21.125051498413086
    10. '_x' → logprob: -21.375051498413086

Token 1643: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.084206375409849e-05
    2. 'x' → logprob: -10.625041007995605
    3. '0' → logprob: -12.250041007995605
    4. 'y' → logprob: -12.375041007995605
    5. ' ' → logprob: -12.875041007995605
    6. '```' → logprob: -13.000041007995605
    7. '`' → logprob: -14.875041007995605
    8. '[' → logprob: -15.000041007995605
    9. ' x' → logprob: -15.500041007995605
    10. '   ' → logprob: -15.500041007995605

Token 1644: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759409070014954
    2. ' +' → logprob: -0.8259409070014954
    3. '+
' → logprob: -14.70094108581543
    4. '```' → logprob: -14.82594108581543
    5. ' +
' → logprob: -14.95094108581543
    6. '1' → logprob: -15.45094108581543
    7. '＋' → logprob: -16.32594108581543
    8. '   ' → logprob: -17.57594108581543
    9. '
' → logprob: -18.32594108581543
    10. ')' → logprob: -18.57594108581543

Token 1645: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.625085830688477
    4. '```' → logprob: -18.250085830688477
    5. 'y' → logprob: -18.875085830688477
    6. '
' → logprob: -19.625085830688477
    7. ' y' → logprob: -20.375085830688477
    8. '0' → logprob: -20.625085830688477
    9. '１' → logprob: -20.875085830688477
    10. ')' → logprob: -21.062585830688477

Token 1646: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.500019073486328
    4. '2' → logprob: -16.500019073486328
    5. '```' → logprob: -16.750019073486328
    6. '
' → logprob: -17.375019073486328
    7. '

' → logprob: -18.250019073486328
    8. '...' → logprob: -18.875019073486328
    9. '0' → logprob: -19.187519073486328
    10. ')' → logprob: -19.625019073486328

Token 1647: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020070301834493876
    2. ')*' → logprob: -6.252007007598877
    3. '*' → logprob: -10.002007484436035
    4. ' )' → logprob: -11.377007484436035
    5. ')*(' → logprob: -11.377007484436035
    6. ' *' → logprob: -12.627007484436035
    7. '```' → logprob: -12.877007484436035
    8. '*)' → logprob: -13.002007484436035
    9. '#' → logprob: -14.377007484436035
    10. '           ' → logprob: -15.377007484436035

Token 1648: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0001005630983854644
    2. ' y' → logprob: -9.750100135803223
    3. '(y' → logprob: -10.125100135803223
    4. '	y' → logprob: -14.250100135803223
    5. '   ' → logprob: -14.875100135803223
    6. 'x' → logprob: -15.125100135803223
    7. ' (' → logprob: -15.500100135803223
    8. ''y' → logprob: -15.500100135803223
    9. '
' → logprob: -15.750100135803223
    10. ')y' → logprob: -16.25010108947754

Token 1649: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.453737710718997e-05
    2. '1' → logprob: -10.500044822692871
    3. ' ' → logprob: -11.500044822692871
    4. '   ' → logprob: -13.125044822692871
    5. '-' → logprob: -13.375044822692871
    6. 'y' → logprob: -13.750044822692871
    7. ')' → logprob: -14.250044822692871
    8. '```' → logprob: -14.875044822692871
    9. '<|end|>' → logprob: -15.250044822692871
    10. '[' → logprob: -15.625044822692871

Token 1650: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3868725001811981
    2. '-' → logprob: -1.1368725299835205
    3. '-y' → logprob: -14.636872291564941
    4. '   ' → logprob: -14.886872291564941
    5. '-
' → logprob: -15.761872291564941
    6. '```' → logprob: -16.011873245239258
    7. '−' → logprob: -16.511873245239258
    8. ' ' → logprob: -16.636873245239258
    9. '	' → logprob: -16.636873245239258
    10. ' -
' → logprob: -17.386873245239258

Token 1651: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4742400050163269
    2. '1' → logprob: -0.9742400050163269
    3. ' y' → logprob: -8.97424030303955
    4. '(y' → logprob: -10.47424030303955
    5. ' ' → logprob: -12.84924030303955
    6. '(' → logprob: -13.47424030303955
    7. '   ' → logprob: -13.72424030303955
    8. 'x' → logprob: -13.97424030303955
    9. '	y' → logprob: -14.09924030303955
    10. ''y' → logprob: -15.09924030303955

Token 1652: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. '2' → logprob: -13.875001907348633
    3. '   ' → logprob: -15.250001907348633
    4. ' ' → logprob: -16.250001907348633
    5. 'y' → logprob: -16.375001907348633
    6. '```' → logprob: -16.375001907348633
    7. '
' → logprob: -17.000001907348633
    8. 'idx' → logprob: -17.125001907348633
    9. '
' → logprob: -18.125001907348633
    10. '-' → logprob: -18.562501907348633

Token 1653: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931555271148682
    2. ' +' → logprob: -0.6931555271148682
    3. '1' → logprob: -12.568155288696289
    4. '```' → logprob: -13.068155288696289
    5. '[' → logprob: -14.193155288696289
    6. ' +
' → logprob: -14.568155288696289
    7. '   ' → logprob: -14.943155288696289
    8. '()+' → logprob: -14.943155288696289
    9. '＋' → logprob: -15.693155288696289
    10. '+
' → logprob: -15.693155288696289

Token 1654: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '   ' → logprob: -18.75
    4. '+' → logprob: -19.375
    5. '
' → logprob: -19.5
    6. '0' → logprob: -19.75
    7. ')' → logprob: -20.375
    8. '```' → logprob: -21.375
    9. '-' → logprob: -22.75
    10. '2' → logprob: -23.0

Token 1655: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '   ' → logprob: -19.5
    4. '0' → logprob: -19.5
    5. '
' → logprob: -20.625
    6. ')' → logprob: -20.75
    7. '2' → logprob: -20.875
    8. '+' → logprob: -21.5
    9. '```' → logprob: -21.75
    10. '-' → logprob: -22.0

Token 1656: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09267691522836685
    2. ' ==' → logprob: -2.717676877975464
    3. '==' → logprob: -4.342677116394043
    4. ')==' → logprob: -4.717677116394043
    5. ' )' → logprob: -8.092677116394043
    6. ')
' → logprob: -9.842677116394043
    7. '```' → logprob: -9.842677116394043
    8. '                               ' → logprob: -10.717677116394043
    9. '                           ' → logprob: -11.092677116394043
    10. '           ' → logprob: -11.342677116394043

Token 1657: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1306004822254181
    2. '                       ' → logprob: -2.5056004524230957
    3. '                   ' → logprob: -4.255600452423096
    4. ' ==' → logprob: -4.880600452423096
    5. '           ' → logprob: -5.255600452423096
    6. '==' → logprob: -5.380600452423096
    7. '```' → logprob: -5.630600452423096
    8. '                               ' → logprob: -6.005600452423096
    9. '
' → logprob: -6.755600452423096
    10. '                           ' → logprob: -7.630600452423096

Token 1658: ' k' (ID: 372)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9626082181930542
    2. ' if' → logprob: -1.0876082181930542
    3. 'if' → logprob: -1.3376082181930542
    4. '==' → logprob: -4.462608337402344
    5. ' ==' → logprob: -5.587608337402344
    6. '                   ' → logprob: -6.337608337402344
    7. '           ' → logprob: -7.712608337402344
    8. '```' → logprob: -7.962608337402344
    9. '                               ' → logprob: -8.462608337402344
    10. '                       ' → logprob: -8.712608337402344

Token 1659: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06499450653791428
    2. '==' → logprob: -3.3149945735931396
    3. '<|end|>' → logprob: -4.5649943351745605
    4. ' =' → logprob: -5.1899943351745605
    5. '[' → logprob: -5.9399943351745605
    6. '=' → logprob: -5.9399943351745605
    7. '<|end|>' → logprob: -6.0649943351745605
    8. '[idx' → logprob: -6.8149943351745605
    9. ')' → logprob: -7.1899943351745605
    10. ')==' → logprob: -8.564994812011719

Token 1660: ' ' (ID: 220)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.12705063819885254
    2. ' buyers' → logprob: -2.1270506381988525
    3. 'buyer' → logprob: -9.377050399780273
    4. 'k' → logprob: -10.877050399780273
    5. 'buy' → logprob: -11.877050399780273
    6. ' buyer' → logprob: -13.127050399780273
    7. ' candidates' → logprob: -13.127050399780273
    8. 'b' → logprob: -13.502050399780273
    9. '   ' → logprob: -13.502050399780273
    10. '[' → logprob: -13.627050399780273

Token 1661: '0' (ID: 15)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -5.919942486798391e-05
    2. ' buyers' → logprob: -10.500059127807617
    3. '[' → logprob: -11.250059127807617
    4. 'k' → logprob: -11.375059127807617
    5. 'buyer' → logprob: -12.750059127807617
    6. 'buy' → logprob: -13.125059127807617
    7. '[k' → logprob: -13.625059127807617
    8. '[b' → logprob: -15.375059127807617
    9. 'next' → logprob: -15.750059127807617
    10. 'b' → logprob: -15.875059127807617

Token 1662: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7324965596199036
    2. '=' → logprob: -1.3574965000152588
    3. '[' → logprob: -2.732496500015259
    4. '[k' → logprob: -2.857496500015259
    5. ',k' → logprob: -3.607496500015259
    6. '[b' → logprob: -3.732496500015259
    7. 'for' → logprob: -4.107496738433838
    8. ',b' → logprob: -4.482496738433838
    9. ',' → logprob: -4.482496738433838
    10. ' for' → logprob: -4.857496738433838

Token 1663: '               ' (ID: 506)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740631580352783
    2. '=' → logprob: -1.7240631580352783
    3. ',k' → logprob: -2.8490631580352783
    4. '[' → logprob: -3.2240631580352783
    5. ',' → logprob: -3.7240631580352783
    6. '[k' → logprob: -3.8490631580352783
    7. ',b' → logprob: -4.099062919616699
    8. 'for' → logprob: -4.974062919616699
    9. '[b' → logprob: -5.224062919616699
    10. ' for' → logprob: -5.349062919616699

Token 1664: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.173277735710144
    2. 'b' → logprob: -1.298277735710144
    3. 'k' → logprob: -1.423277735710144
    4. ' for' → logprob: -2.1732778549194336
    5. ',b' → logprob: -3.4232778549194336
    6. ',k' → logprob: -4.548277854919434
    7. '_,' → logprob: -4.923277854919434
    8. ' b' → logprob: -5.798277854919434
    9. ' k' → logprob: -6.048277854919434
    10. ' buyers' → logprob: -6.423277854919434

Token 1665: ' bb' (ID: 32433)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.5778077840805054
    2. 'j' → logprob: -1.4528077840805054
    3. 'b' → logprob: -2.202807903289795
    4. ' idx' → logprob: -3.452807903289795
    5. ' j' → logprob: -3.952807903289795
    6. ' b' → logprob: -4.952807903289795
    7. '_,' → logprob: -5.702807903289795
    8. 't' → logprob: -5.827807903289795
    9. 'jj' → logprob: -5.952807903289795
    10. 'i' → logprob: -5.952807903289795

Token 1666: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8525104522705078
    2. ' in' → logprob: -2.227510452270508
    3. '_idx' → logprob: -2.227510452270508
    4. ',k' → logprob: -2.227510452270508
    5. '[' → logprob: -2.602510452270508
    6. '_' → logprob: -3.352510452270508
    7. '_i' → logprob: -3.852510452270508
    8. 'in' → logprob: -4.102510452270508
    9. ',_' → logprob: -4.477510452270508
    10. '_k' → logprob: -4.602510452270508

Token 1667: 'kk' (ID: 8701)
  Prédit: 'kk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.6611183881759644
    2. 'k' → logprob: -0.7861183881759644
    3. 'kv' → logprob: -4.536118507385254
    4. 'kb' → logprob: -4.911118507385254
    5. 'bk' → logprob: -5.286118507385254
    6. '_k' → logprob: -6.536118507385254
    7. ' kk' → logprob: -7.036118507385254
    8. 'kkkk' → logprob: -7.536118507385254
    9. 'ki' → logprob: -7.911118507385254
    10. 'kc' → logprob: -8.286118507385254

Token 1668: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4493105113506317
    2. 'in' → logprob: -1.199310541152954
    3. ',' → logprob: -3.324310541152954
    4. ',k' → logprob: -3.824310541152954
    5. 'k' → logprob: -7.199310302734375
    6. ' ,' → logprob: -7.574310302734375
    7. '[' → logprob: -8.699310302734375
    8. '<|end|>' → logprob: -8.949310302734375
    9. ',b' → logprob: -9.074310302734375
    10. ',user' → logprob: -9.324310302734375

Token 1669: ' buyers' (ID: 25359)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.00016301481809932739
    2. ' buyers' → logprob: -8.750163078308105
    3. 'buy' → logprob: -12.500163078308105
    4. 'buyer' → logprob: -14.875163078308105
    5. 'b' → logprob: -15.250163078308105
    6. '(b' → logprob: -16.87516212463379
    7. 'k' → logprob: -18.00016212463379
    8. '[b' → logprob: -18.62516212463379
    9. 'range' → logprob: -19.00016212463379
    10. '   ' → logprob: -19.50016212463379

Token 1670: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8197380304336548
    2. ':' → logprob: -1.1947380304336548
    3. ' in' → logprob: -2.0697379112243652
    4. 'in' → logprob: -2.8197379112243652
    5. ',' → logprob: -4.569737911224365
    6. '<|end|>' → logprob: -4.569737911224365
    7. '                   ' → logprob: -4.944737911224365
    8. '[' → logprob: -5.069737911224365
    9. '               ' → logprob: -5.319737911224365
    10. '           ' → logprob: -5.319737911224365

Token 1671: '                   ' (ID: 699)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5458551049232483
    2. '+=' → logprob: -2.0458550453186035
    3. ' in' → logprob: -3.4208550453186035
    4. '[' → logprob: -3.4208550453186035
    5. ' =' → logprob: -3.9208550453186035
    6. 'in' → logprob: -3.9208550453186035
    7. '==' → logprob: -4.0458550453186035
    8. '=b' → logprob: -4.0458550453186035
    9. '                   ' → logprob: -4.2958550453186035
    10. '[k' → logprob: -4.4208550453186035

Token 1672: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7201563119888306
    2. 'if' (adapté à ' if') → logprob: -1.0951563119888306
    3. '                   ' → logprob: -3.095156192779541
    4. '                    ' → logprob: -3.345156192779541
    5. ' b' → logprob: -4.095156192779541
    6. '<|end|>' → logprob: -4.220156192779541
    7. '    ' → logprob: -4.595156192779541
    8. 'b' → logprob: -4.720156192779541
    9. '                ' → logprob: -4.845156192779541
    10. '                               ' → logprob: -5.095156192779541

Token 1673: ' bb' (ID: 32433)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -2.8325677703833207e-05
    2. ' bb' → logprob: -10.500028610229492
    3. 'b' → logprob: -14.250028610229492
    4. '(bb' → logprob: -16.875028610229492
    5. '_bb' → logprob: -19.375028610229492
    6. '.bb' → logprob: -20.000028610229492
    7. '   ' → logprob: -20.250028610229492
    8. '           ' → logprob: -20.875028610229492
    9. 'bbb' → logprob: -21.125028610229492
    10. 'bbbb' → logprob: -21.750028610229492

Token 1674: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.055050864815711975
    2. '==' → logprob: -2.930050849914551
    3. ' !=' → logprob: -9.55505084991455
    4. '[' → logprob: -10.18005084991455
    5. ' ==
' → logprob: -10.68005084991455
    6. ' ' → logprob: -11.80505084991455
    7. ' ===' → logprob: -12.05505084991455
    8. ')==' → logprob: -12.93005084991455
    9. '==
' → logprob: -12.93005084991455
    10. '<|end|>' → logprob: -13.05505084991455

Token 1675: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00033546582562848926
    2. ' b' → logprob: -8.000335693359375
    3. ')b' → logprob: -18.625335693359375
    4. '	b' → logprob: -18.750335693359375
    5. '```' → logprob: -18.750335693359375
    6. '=b' → logprob: -19.375335693359375
    7. '>b' → logprob: -19.500335693359375
    8. '[b' → logprob: -20.000335693359375
    9. '                   ' → logprob: -20.125335693359375
    10. '`' → logprob: -20.250335693359375

Token 1676: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5423166751861572
    2. '                       ' → logprob: -1.6673166751861572
    3. '=k' → logprob: -2.4173166751861572
    4. ':' → logprob: -3.1673166751861572
    5. '=' → logprob: -3.5423166751861572
    6. ' =' → logprob: -3.7923166751861572
    7. '                               ' → logprob: -3.9173166751861572
    8. '                   ' → logprob: -5.292316436767578
    9. ',k' → logprob: -5.292316436767578
    10. '                           ' → logprob: -5.417316436767578

Token 1677: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.004788834135979414
    2. ' k' → logprob: -5.879788875579834
    3. 'k' → logprob: -7.629788875579834
    4. '                               ' → logprob: -7.754788875579834
    5. '                   ' → logprob: -8.004788398742676
    6. '                           ' → logprob: -8.129788398742676
    7. '                        ' → logprob: -9.129788398742676
    8. '       ' → logprob: -10.004788398742676
    9. '                      ' → logprob: -10.379788398742676
    10. '=k' → logprob: -10.379788398742676

Token 1678: ' k' (ID: 372)
  Prédit: 'kk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.7015212774276733
    2. 'k' (adapté à ' k') → logprob: -1.3265212774276733
    3. ' kk' → logprob: -2.201521396636963
    4. '                           ' → logprob: -2.201521396636963
    5. '                               ' → logprob: -5.076521396636963
    6. 'kkkk' → logprob: -5.701521396636963
    7. '                       ' → logprob: -5.701521396636963
    8. '++' → logprob: -6.701521396636963
    9. '=k' → logprob: -7.826521396636963
    10. '=' → logprob: -8.201520919799805

Token 1679: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.034535735845565796
    2. '=k' → logprob: -3.9095356464385986
    3. ' =' → logprob: -4.409535884857178
    4. '+=' → logprob: -6.534535884857178
    5. 'k' → logprob: -9.03453540802002
    6. ' +=' → logprob: -9.40953540802002
    7. '=
' → logprob: -9.90953540802002
    8. '==' → logprob: -11.03453540802002
    9. ' kk' → logprob: -12.65953540802002
    10. 'kk' → logprob: -13.03453540802002

Token 1680: 'kk' (ID: 8701)
  Prédit: 'kk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kk' → logprob: -0.0011708177626132965
    2. ' kk' → logprob: -6.751170635223389
    3. 'k' → logprob: -14.501171112060547
    4. '                              ' → logprob: -16.751171112060547
    5. '                           ' → logprob: -17.001171112060547
    6. 'kkkk' → logprob: -17.376171112060547
    7. '                          ' → logprob: -18.126171112060547
    8. '                               ' → logprob: -18.251171112060547
    9. ' k' → logprob: -18.626171112060547
    10. '          ' → logprob: -19.001171112060547

Token 1681: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04364723712205887
    2. '                           ' → logprob: -3.293647289276123
    3. '                               ' → logprob: -5.793647289276123
    4. '<|end|>' → logprob: -7.418647289276123
    5. '<|end|>' → logprob: -7.918647289276123
    6. '                        
' → logprob: -8.043646812438965
    7. '           ' → logprob: -8.418646812438965
    8. ':
' → logprob: -8.793646812438965
    9. '                   ' → logprob: -8.793646812438965
    10. '                        ' → logprob: -8.793646812438965

Token 1682: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0025203691329807043
    2. '                               ' → logprob: -6.627520561218262
    3. '                           ' → logprob: -7.377520561218262
    4. '                        ' → logprob: -9.252520561218262
    5. '                        
' → logprob: -9.252520561218262
    6. '                   ' → logprob: -9.752520561218262
    7. '```' → logprob: -9.877520561218262
    8. '               ' → logprob: -9.877520561218262
    9. '                                               ' → logprob: -10.252520561218262
    10. '           ' → logprob: -10.252520561218262

Token 1683: ' break' (ID: 2338)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.24160714447498322
    2. '                           ' → logprob: -1.8666071891784668
    3. '                               ' → logprob: -3.616607189178467
    4. ' break' → logprob: -4.241607189178467
    5. 'break' (adapté à ' break') → logprob: -4.241607189178467
    6. '           ' → logprob: -6.866607189178467
    7. '                                               ' → logprob: -7.116607189178467
    8. '                                       ' → logprob: -7.741607189178467
    9. '               ' → logprob: -8.116606712341309
    10. '	break' → logprob: -8.366606712341309

Token 1684: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7640618681907654
    2. '
' → logprob: -1.1390619277954102
    3. '                               ' → logprob: -2.63906192779541
    4. '                       ' → logprob: -2.88906192779541
    5. '                           ' → logprob: -2.88906192779541
    6. '           ' → logprob: -4.13906192779541
    7. '                   ' → logprob: -4.76406192779541
    8. '```' → logprob: -6.51406192779541
    9. '\n' → logprob: -6.63906192779541
    10. '       ' → logprob: -6.76406192779541

Token 1685: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7477191686630249
    2. '                       ' → logprob: -1.247719168663025
    3. '
' → logprob: -2.7477192878723145
    4. '           ' → logprob: -2.7477192878723145
    5. '```' → logprob: -3.2477192878723145
    6. '                   ' → logprob: -3.8727192878723145
    7. '                           ' → logprob: -3.9977192878723145
    8. '                               ' → logprob: -4.6227192878723145
    9. '       ' → logprob: -4.8727192878723145
    10. '\n' → logprob: -5.6227192878723145

Token 1686: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3892551064491272
    2. '       ' → logprob: -2.2642550468444824
    3. '           ' → logprob: -2.3892550468444824
    4. '                       ' → logprob: -2.6392550468444824
    5. ' if' → logprob: -3.8892550468444824
    6. '                   ' → logprob: -4.014255046844482
    7. 'if' (adapté à ' if') → logprob: -5.014255046844482
    8. '```' → logprob: -5.639255046844482
    9. '                               ' → logprob: -5.764255046844482
    10. '   ' → logprob: -6.514255046844482

Token 1687: ' k' (ID: 372)
  Prédit: ' area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.5759798884391785
    2. 'area' → logprob: -0.8259798884391785
    3. '                   ' → logprob: -10.825980186462402
    4. '(area' → logprob: -12.200980186462402
    5. '                       ' → logprob: -12.450980186462402
    6. ' not' → logprob: -12.450980186462402
    7. '               ' → logprob: -12.575980186462402
    8. '           ' → logprob: -13.575980186462402
    9. 'not' → logprob: -13.950980186462402
    10. '   ' → logprob: -14.325980186462402

Token 1688: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3548376262187958
    2. ' !=' → logprob: -1.2298376560211182
    3. '==' → logprob: -5.229837417602539
    4. ' ==' → logprob: -6.979837417602539
    5. ')!=' → logprob: -10.479837417602539
    6. '=' → logprob: -10.979837417602539
    7. '!==' → logprob: -11.604837417602539
    8. '!=(' → logprob: -11.604837417602539
    9. ')' → logprob: -12.604837417602539
    10. '```' → logprob: -12.604837417602539

Token 1689: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.002829484874382615
    2. ' area' → logprob: -5.877829551696777
    3. '(area' → logprob: -11.377829551696777
    4. ' (' → logprob: -11.752829551696777
    5. '(' → logprob: -13.252829551696777
    6. '   ' → logprob: -13.502829551696777
    7. '
' → logprob: -13.877829551696777
    8. ' ' → logprob: -14.627829551696777
    9. '(x' → logprob: -16.12782859802246
    10. '           ' → logprob: -16.62782859802246

Token 1690: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14496852457523346
    2. '                           ' → logprob: -3.0199685096740723
    3. ':' → logprob: -3.1449685096740723
    4. '                   ' → logprob: -3.2699685096740723
    5. '                       ' → logprob: -6.269968509674072
    6. ':return' → logprob: -6.394968509674072
    7. '                               ' → logprob: -7.019968509674072
    8. '           ' → logprob: -8.64496898651123
    9. '               ' → logprob: -8.89496898651123
    10. '                                   ' → logprob: -9.01996898651123

Token 1691: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003305784775875509
    2. 'return' → logprob: -8.250330924987793
    3. ' return' → logprob: -10.125330924987793
    4. '                       ' → logprob: -11.375330924987793
    5. '               ' → logprob: -12.000330924987793
    6. '                           ' → logprob: -12.250330924987793
    7. '           ' → logprob: -12.500330924987793
    8. '
' → logprob: -13.875330924987793
    9. '```' → logprob: -14.000330924987793
    10. '   ' → logprob: -14.875330924987793

Token 1692: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.18837802112102509
    2. '                   ' → logprob: -1.9383779764175415
    3. '                       ' → logprob: -4.313377857208252
    4. ' return' → logprob: -4.563377857208252
    5. '                           ' → logprob: -6.438377857208252
    6. 'continue' → logprob: -6.813377857208252
    7. '                               ' → logprob: -7.313377857208252
    8. '               ' → logprob: -8.18837833404541
    9. ':return' → logprob: -9.68837833404541
    10. '           ' → logprob: -9.68837833404541

Token 1693: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8689903616905212
    2. '           ' → logprob: -1.368990421295166
    3. '       ' → logprob: -1.993990421295166
    4. '
' → logprob: -2.493990421295166
    5. '               ' → logprob: -2.868990421295166
    6. '                           ' → logprob: -4.618990421295166
    7. '  
' → logprob: -4.993990421295166
    8. '                               ' → logprob: -5.118990421295166
    9. '    
' → logprob: -5.243990421295166
    10. '```' → logprob: -5.493990421295166

Token 1694: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.021359920501709
    2. '           ' → logprob: -1.021359920501709
    3. '       ' → logprob: -2.021359920501709
    4. '               ' → logprob: -3.021359920501709
    5. '```' → logprob: -3.521359920501709
    6. '                       ' → logprob: -4.021359920501709
    7. '\n' → logprob: -4.146359920501709
    8. '                   ' → logprob: -4.896359920501709
    9. '                           ' → logprob: -5.271359920501709
    10. '    
' → logprob: -5.896359920501709

Token 1695: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10136033594608307
    2. '
' → logprob: -2.351360321044922
    3. '        
' → logprob: -7.351360321044922
    4. '           ' → logprob: -8.601360321044922
    5. '
' → logprob: -9.726360321044922
    6. '   ' → logprob: -9.976360321044922
    7. '	' → logprob: -9.976360321044922
    8. '    
' → logprob: -10.226360321044922
    9. '\n' → logprob: -10.226360321044922
    10. '' → logprob: -10.601360321044922

Token 1696: ' valid' (ID: 4529)
  Prédit: 'solutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solutions' → logprob: -0.7037384510040283
    2. '       ' → logprob: -0.9537384510040283
    3. '   ' → logprob: -2.2037384510040283
    4. '           ' → logprob: -4.703738212585449
    5. ' solutions' → logprob: -8.45373821258545
    6. 'sol' → logprob: -8.82873821258545
    7. '               ' → logprob: -9.20373821258545
    8. '                   ' → logprob: -11.32873821258545
    9. '```' → logprob: -11.45373821258545
    10. '     ' → logprob: -11.45373821258545

Token 1697: ' solution' (ID: 7578)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9669985771179199
    2. '           ' → logprob: -0.9669985771179199
    3. '       ' → logprob: -1.71699857711792
    4. ')' → logprob: -3.71699857711792
    5. '               ' → logprob: -3.84199857711792
    6. '[' → logprob: -6.21699857711792
    7. ',' → logprob: -6.59199857711792
    8. ':
' → logprob: -6.59199857711792
    9. '    
' → logprob: -6.71699857711792
    10. '                   ' → logprob: -6.84199857711792

Token 1698: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0046515571884810925
    2. '       ' → logprob: -5.3796515464782715
    3. '               ' → logprob: -10.75465202331543
    4. '   ' → logprob: -12.50465202331543
    5. ',' → logprob: -13.37965202331543
    6. '		' → logprob: -14.12965202331543
    7. '
' → logprob: -14.25465202331543
    8. '                       ' → logprob: -14.37965202331543
    9. '                   ' → logprob: -14.62965202331543
    10. '```' → logprob: -14.62965202331543

Token 1699: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01108731608837843
    2. '           ' → logprob: -4.511087417602539
    3. '               ' → logprob: -10.511087417602539
    4. '   ' → logprob: -11.511087417602539
    5. '```' → logprob: -14.386087417602539
    6. '                   ' → logprob: -15.011087417602539
    7. '        
' → logprob: -15.011087417602539
    8. '     ' → logprob: -15.136087417602539
    9. '                       ' → logprob: -15.136087417602539
    10. ',' → logprob: -16.26108741760254

Token 1700: ' solutions' (ID: 9368)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045528460294008255
    2. 'solutions' (adapté à ' solutions') → logprob: -3.2955284118652344
    3. '           ' → logprob: -5.545528411865234
    4. '               ' → logprob: -6.420528411865234
    5. '   ' → logprob: -6.420528411865234
    6. ' solutions' → logprob: -8.420528411865234
    7. '                   ' → logprob: -10.170528411865234
    8. '```' → logprob: -11.045528411865234
    9. '                       ' → logprob: -11.170528411865234
    10. 'sol' → logprob: -13.045528411865234

Token 1701: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019337546546012163
    2. '.' → logprob: -6.251933574676514
    3. '.Append' → logprob: -13.626934051513672
    4. '_append' → logprob: -13.751934051513672
    5. '.app' → logprob: -14.001934051513672
    6. 'Append' → logprob: -14.126934051513672
    7. 'append' → logprob: -14.126934051513672
    8. '.extend' → logprob: -15.001934051513672
    9. '.add' → logprob: -16.001934051513672
    10. '.push' → logprob: -16.876934051513672

Token 1702: '(' (ID: 7)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.3953530490398407
    2. '(' → logprob: -1.145353078842163
    3. '((' → logprob: -5.395352840423584
    4. '(rect' → logprob: -6.270352840423584
    5. 'assigned' → logprob: -7.270352840423584
    6. '([]' → logprob: -7.520352840423584
    7. '([' → logprob: -7.895352840423584
    8. '(list' → logprob: -8.895353317260742
    9. 'r' → logprob: -9.270353317260742
    10. '(tuple' → logprob: -9.520353317260742

Token 1703: ' list' (ID: 1562)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.00357262697070837
    2. 'list' → logprob: -6.003572463989258
    3. '[' → logprob: -6.878572463989258
    4. '[(' → logprob: -10.628572463989258
    5. 'tuple' → logprob: -10.628572463989258
    6. ' assigned' → logprob: -11.128572463989258
    7. '[list' → logprob: -13.253572463989258
    8. ' list' → logprob: -15.128572463989258
    9. 'assignment' → logprob: -15.253572463989258
    10. ' [' → logprob: -15.378572463989258

Token 1704: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008635254576802254
    2. 'assigned' → logprob: -4.7586350440979
    3. '(
' → logprob: -12.258635520935059
    4. '(map' → logprob: -12.383635520935059
    5. '([' → logprob: -12.633635520935059
    6. 'ass' → logprob: -13.133635520935059
    7. '(range' → logprob: -13.633635520935059
    8. '((' → logprob: -13.758635520935059
    9. '[' → logprob: -14.008635520935059
    10. '(zip' → logprob: -14.133635520935059

Token 1705: 'assigned' (ID: 81593)
  Prédit: 'assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.50001049041748
    3. ' assigned' → logprob: -16.125009536743164
    4. ')' → logprob: -17.250009536743164
    5. 'ass' → logprob: -17.625009536743164
    6. 'r' → logprob: -18.375009536743164
    7. '[' → logprob: -18.375009536743164
    8. '
' → logprob: -18.500009536743164
    9. 'map' → logprob: -18.500009536743164
    10. '(r' → logprob: -19.250009536743164

Token 1706: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -9.968312951968983e-06
    2. 'rect' → logprob: -12.000009536743164
    3. '_' → logprob: -13.750009536743164
    4. ')' → logprob: -14.500009536743164
    5. '```' → logprob: -14.500009536743164
    6. '_r' → logprob: -14.875009536743164
    7. ')_' → logprob: -15.250009536743164
    8. '(rect' → logprob: -15.375009536743164
    9. '\' → logprob: -15.500009536743164
    10. '_)' → logprob: -16.125009536743164

Token 1707: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2896102964878082
    2. '_rect' → logprob: -1.4146102666854858
    3. 'ects' → logprob: -5.789610385894775
    4. 'cts' → logprob: -6.539610385894775
    5. 'Rects' → logprob: -6.539610385894775
    6. 'rect' → logprob: -7.289610385894775
    7. '[' → logprob: -7.539610385894775
    8. '_' → logprob: -7.914610385894775
    9. ')' → logprob: -8.664609909057617
    10. '```' → logprob: -9.039609909057617

Token 1708: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0068610054440796375
    2. '))' → logprob: -5.131861209869385
    3. '())' → logprob: -7.006861209869385
    4. '()' → logprob: -11.256860733032227
    5. ' )' → logprob: -12.381860733032227
    6. '])' → logprob: -13.006860733032227
    7. '.copy' → logprob: -13.506860733032227
    8. '()))' → logprob: -13.631860733032227
    9. ')))' → logprob: -14.006860733032227
    10. ')]' → logprob: -14.506860733032227

Token 1709: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12566037476062775
    2. '       ' → logprob: -2.3756604194641113
    3. '<|end|>' → logprob: -4.500660419464111
    4. '
' → logprob: -5.250660419464111
    5. '   ' → logprob: -5.750660419464111
    6. '           ' → logprob: -6.250660419464111
    7. '()' → logprob: -6.500660419464111
    8. '<|end|>' → logprob: -7.875660419464111
    9. '    
' → logprob: -8.125659942626953
    10. ')return' → logprob: -8.125659942626953

Token 1710: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029550008475780487
    2. '   ' → logprob: -6.252954959869385
    3. '```' → logprob: -7.752954959869385
    4. '           ' → logprob: -7.877954959869385
    5. '        
' → logprob: -9.627955436706543
    6. '
' → logprob: -10.002955436706543
    7. '\n' → logprob: -10.127955436706543
    8. '    
' → logprob: -11.377955436706543
    9. '' → logprob: -11.377955436706543
    10. '\' → logprob: -11.752955436706543

Token 1711: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003981993068009615
    2. '   ' → logprob: -6.253982067108154
    3. '
' → logprob: -6.628982067108154
    4. '           ' → logprob: -7.878982067108154
    5. '    
' → logprob: -8.628981590270996
    6. '        
' → logprob: -8.878981590270996
    7. 'return' (adapté à ' return') → logprob: -11.128981590270996
    8. '               ' → logprob: -12.503981590270996
    9. '\n' → logprob: -12.503981590270996
    10. '```' → logprob: -12.628981590270996

Token 1712: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03182738274335861
    2. '
' → logprob: -3.531827449798584
    3. '   ' → logprob: -6.906827449798584
    4. 'for' → logprob: -7.531827449798584
    5. ' for' → logprob: -8.156826972961426
    6. '        
' → logprob: -8.906826972961426
    7. '    
' → logprob: -9.656826972961426
    8. '
' → logprob: -10.531826972961426
    9. '  
' → logprob: -11.531826972961426
    10. '```' → logprob: -11.781826972961426

Token 1713: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.304395467042923
    2. '   ' → logprob: -1.4293954372406006
    3. '
' → logprob: -4.17939567565918
    4. '    
' → logprob: -5.80439567565918
    5. '        
' → logprob: -5.92939567565918
    6. '```' → logprob: -6.80439567565918
    7. '  
' → logprob: -8.42939567565918
    8. 'for' → logprob: -8.80439567565918
    9. '' → logprob: -9.55439567565918
    10. ' for' → logprob: -9.67939567565918

Token 1714: ' b' (ID: 287)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6504052877426147
    2. '       ' → logprob: -1.2754052877426147
    3. ' for' → logprob: -1.9004052877426147
    4. 'b' (adapté à ' b') → logprob: -3.5254054069519043
    5. 'for' → logprob: -4.150405406951904
    6. ' b' → logprob: -6.400405406951904
    7. ' candidates' → logprob: -7.275405406951904
    8. ' buyers' → logprob: -7.525405406951904
    9. 'buyers' → logprob: -8.025404930114746
    10. '	for' → logprob: -8.900404930114746

Token 1715: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10055244714021683
    2. '=' → logprob: -2.350552558898926
    3. ',' → logprob: -8.350552558898926
    4. '_candidates' → logprob: -10.475552558898926
    5. '   ' → logprob: -11.100552558898926
    6. '    ' → logprob: -11.100552558898926
    7. 'candidate' → logprob: -11.350552558898926
    8. '=b' → logprob: -11.975552558898926
    9. '_candidate' → logprob: -11.975552558898926
    10. ' candidates' → logprob: -12.225552558898926

Token 1716: ' buyer' (ID: 28061)
  Prédit: 'buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyer' → logprob: -5.080963092041202e-06
    2. ' buyer' → logprob: -12.250004768371582
    3. 'b' → logprob: -16.6250057220459
    4. 'buyers' → logprob: -16.7500057220459
    5. '   ' → logprob: -18.8750057220459
    6. 'buy' → logprob: -19.3750057220459
    7. 'boy' → logprob: -21.2500057220459
    8. 'seller' → logprob: -22.2500057220459
    9. 'builder' → logprob: -22.6250057220459
    10. '  ' → logprob: -23.2500057220459

Token 1717: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.8444881536415778e-05
    2. '_' → logprob: -11.875028610229492
    3. '_lst' → logprob: -12.125028610229492
    4. 's' → logprob: -12.500028610229492
    5. 'ist' → logprob: -13.375028610229492
    6. '[_' → logprob: -13.625028610229492
    7. ',_' → logprob: -13.625028610229492
    8. 'list' → logprob: -13.625028610229492
    9. 'List' → logprob: -13.625028610229492
    10. ' =' → logprob: -14.125028610229492

Token 1718: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.13809867203235626
    2. '[' → logprob: -2.26309871673584
    3. '[
' → logprob: -4.63809871673584
    4. ',' → logprob: -5.63809871673584
    5. '[s' → logprob: -6.51309871673584
    6. '[]' → logprob: -6.51309871673584
    7. '
' → logprob: -6.76309871673584
    8. '<|end|>' → logprob: -6.88809871673584
    9. '   ' → logprob: -7.38809871673584
    10. '```' → logprob: -7.51309871673584

Token 1719: ']
' (ID: 1592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06277889758348465
    2. 'candidate' → logprob: -3.812778949737549
    3. '_candidates' → logprob: -4.312778949737549
    4. ' candidates' → logprob: -4.562778949737549
    5. ')' → logprob: -5.562778949737549
    6. ',' → logprob: -5.937778949737549
    7. '_candidate' → logprob: -6.062778949737549
    8. ' candidate' → logprob: -6.312778949737549
    9. 'for' → logprob: -6.812778949737549
    10. '    
' → logprob: -7.437778949737549

Token 1720: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45147204399108887
    2. 'for' → logprob: -1.4514720439910889
    3. '   ' → logprob: -2.076472043991089
    4. 'c' → logprob: -5.826472282409668
    5. ' candidates' → logprob: -7.701472282409668
    6. '```' → logprob: -8.451472282409668
    7. '       ' → logprob: -10.201472282409668
    8. ' c' → logprob: -10.701472282409668
    9. '	for' → logprob: -11.701472282409668
    10. 'tokens' → logprob: -12.326472282409668

Token 1721: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.2603901015827432e-05
    2. '   ' → logprob: -11.750022888183594
    3. ' for' → logprob: -11.750022888183594
    4. 'c' → logprob: -12.000022888183594
    5. '       ' → logprob: -14.875022888183594
    6. '	for' → logprob: -16.625022888183594
    7. '```' → logprob: -17.375022888183594
    8. 'rect' → logprob: -17.750022888183594
    9. 'candidate' → logprob: -18.125022888183594
    10. 'cand' → logprob: -18.500022888183594

Token 1722: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.0019394654082134366
    2. ' rect' → logprob: -6.251939296722412
    3. 'candidate' → logprob: -11.62693977355957
    4. 'cand' → logprob: -13.50193977355957
    5. 'r' → logprob: -14.75193977355957
    6. ' candidate' → logprob: -15.37693977355957
    7. '	rect' → logprob: -16.75193977355957
    8. '(rect' → logprob: -18.12693977355957
    9. 'c' → logprob: -18.37693977355957
    10. '   ' → logprob: -18.62693977355957

Token 1723: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.38689208030700684
    2. ' in' → logprob: -1.1368920803070068
    3. '	in' → logprob: -11.511892318725586
    4. '_in' → logprob: -12.511892318725586
    5. 's' → logprob: -13.261892318725586
    6. ',' → logprob: -14.011892318725586
    7. '
' → logprob: -14.136892318725586
    8. ',in' → logprob: -14.511892318725586
    9. ' ' → logprob: -14.636892318725586
    10. ')' → logprob: -14.636892318725586

Token 1724: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -1.306760805164231e-05
    2. ' candidate' → logprob: -11.25001335144043
    3. '(candidate' → logprob: -17.37501335144043
    4. 'c' → logprob: -20.37501335144043
    5. '   ' → logprob: -20.62501335144043
    6. 'customer' → logprob: -22.87501335144043
    7. '_candidate' → logprob: -23.25001335144043
    8. 'category' → logprob: -24.37501335144043
    9. '```' → logprob: -24.50001335144043
    10. 'cand' → logprob: -24.50001335144043

Token 1725: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -9.968312951968983e-06
    2. 'rect' → logprob: -11.625009536743164
    3. '_rectangle' → logprob: -14.500009536743164
    4. 's' → logprob: -14.750009536743164
    5. '```' → logprob: -17.625009536743164
    6. '[' → logprob: -18.375009536743164
    7. '_positions' → logprob: -18.500009536743164
    8. '_rec' → logprob: -18.625009536743164
    9. '_Rect' → logprob: -18.750009536743164
    10. '_' → logprob: -19.250009536743164

Token 1726: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.000263481488218531
    2. '_rect' → logprob: -8.625263214111328
    3. 'rect' → logprob: -10.000263214111328
    4. 'angle' → logprob: -11.000263214111328
    5. 's' → logprob: -12.000263214111328
    6. '_angles' → logprob: -12.250263214111328
    7. 'anges' → logprob: -12.500263214111328
    8. 'ANGLES' → logprob: -13.000263214111328
    9. ' rectangles' → logprob: -13.375263214111328
    10. 'ates' → logprob: -14.000263214111328

Token 1727: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.339278580620885e-06
    2. 'b' → logprob: -13.000001907348633
    3. '[
' → logprob: -20.000001907348633
    4. ' [' → logprob: -20.250001907348633
    5. '	b' → logprob: -20.250001907348633
    6. '[' → logprob: -20.750001907348633
    7. '\b' → logprob: -21.000001907348633
    8. '(b' → logprob: -21.250001907348633
    9. '```' → logprob: -21.250001907348633
    10. '[c' → logprob: -21.750001907348633

Token 1728: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.684345543384552
    2. ']:
' → logprob: -1.3093454837799072
    3. ':' → logprob: -2.5593454837799072
    4. ':
' → logprob: -2.9343454837799072
    5. '[b' → logprob: -3.3093454837799072
    6. '):
' → logprob: -4.184345722198486
    7. '[i' → logprob: -4.434345722198486
    8. '       ' → logprob: -4.434345722198486
    9. '):' → logprob: -4.684345722198486
    10. '[' → logprob: -5.684345722198486

Token 1729: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016687925904989243
    2. '       ' → logprob: -4.391687870025635
    3. ' if' → logprob: -6.141687870025635
    4. '        
' → logprob: -7.516687870025635
    5. 'if' → logprob: -7.641687870025635
    6. '```' → logprob: -8.516688346862793
    7. '	       ' → logprob: -8.766688346862793
    8. '            
' → logprob: -9.141688346862793
    9. ':
' → logprob: -9.391688346862793
    10. '[' → logprob: -9.766688346862793

Token 1730: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007876326330006123
    2. '           ' → logprob: -5.132876396179199
    3. ' if' → logprob: -6.257876396179199
    4. 'x' → logprob: -10.8828763961792
    5. '               ' → logprob: -12.0078763961792
    6. '       ' → logprob: -13.2578763961792
    7. '```' → logprob: -13.6328763961792
    8. '            
' → logprob: -14.1328763961792
    9. 'If' → logprob: -14.3828763961792
    10. '
' → logprob: -14.7578763961792

Token 1731: ' not' (ID: 625)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.004114730749279261
    2. ' is' → logprob: -5.504114627838135
    3. 'not' → logprob: -10.504115104675293
    4. ' not' → logprob: -12.004115104675293
    5. 'all' → logprob: -13.754115104675293
    6. 'rect' → logprob: -14.629115104675293
    7. ' all' → logprob: -14.629115104675293
    8. '           ' → logprob: -15.004115104675293
    9. '   ' → logprob: -15.379115104675293
    10. '       ' → logprob: -16.379114151000977

Token 1732: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -5.598092684522271e-05
    2. 'any' → logprob: -11.000056266784668
    3. ' is' → logprob: -11.000056266784668
    4. 'rect' → logprob: -11.125056266784668
    5. 'all' → logprob: -12.000056266784668
    6. 'dfs' → logprob: -14.500056266784668
    7. '```' → logprob: -15.375056266784668
    8. 'set' → logprob: -16.00005531311035
    9. 'valid' → logprob: -16.12505531311035
    10. '(is' → logprob: -16.62505531311035

Token 1733: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -3.5120287066092715e-05
    2. '_used' → logprob: -10.750035285949707
    3. 'valid' → logprob: -11.250035285949707
    4. 'Valid' → logprob: -14.500035285949707
    5. '_safe' → logprob: -17.12503433227539
    6. '_' → logprob: -17.87503433227539
    7. '\' → logprob: -18.12503433227539
    8. '_possible' → logprob: -18.37503433227539
    9. '	valid' → logprob: -18.50003433227539
    10. 'used' → logprob: -18.50003433227539

Token 1734: '(rect' (ID: 68123)
  Prédit: '(rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: -0.0002887490263674408
    2. '(' → logprob: -8.500288963317871
    3. ' (' → logprob: -9.375288963317871
    4. '(
' → logprob: -15.375288963317871
    5. '(Rect' → logprob: -16.125288009643555
    6. '(rec' → logprob: -17.625288009643555
    7. '(ret' → logprob: -18.375288009643555
    8. '(rest' → logprob: -18.875288009643555
    9. '((' → logprob: -18.875288009643555
    10. '(

' → logprob: -19.000288009643555

Token 1735: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015562419139314443
    2. ' ,' → logprob: -8.875155448913574
    3. '   ' → logprob: -11.750155448913574
    4. '           ' → logprob: -12.875155448913574
    5. 'used' → logprob: -13.125155448913574
    6. ' used' → logprob: -13.625155448913574
    7. ',
' → logprob: -15.125155448913574
    8. ',use' → logprob: -15.375155448913574
    9. '```' → logprob: -15.500155448913574
    10. ',[' → logprob: -16.00015640258789

Token 1736: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.5048530030981055e-06
    2. ' used' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.375001907348633
    4. '
' → logprob: -19.875001907348633
    5. '.used' → logprob: -20.250001907348633
    6. '
' → logprob: -21.125001907348633
    7. '_used' → logprob: -21.625001907348633
    8. '    
' → logprob: -22.375001907348633
    9. '-used' → logprob: -22.500001907348633
    10. 'assigned' → logprob: -22.625001907348633

Token 1737: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -2.629921436891891e-05
    2. ')' → logprob: -11.87502670288086
    3. '):' → logprob: -12.75002670288086
    4. '
' → logprob: -12.75002670288086
    5. '_' → logprob: -12.87502670288086
    6. ')_' → logprob: -12.87502670288086
    7. '):
' → logprob: -13.12502670288086
    8. 'area' → logprob: -13.12502670288086
    9. '_AREA' → logprob: -13.87502670288086
    10. '_
' → logprob: -14.25002670288086

Token 1738: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002000842709094286
    2. '):' → logprob: -6.25200080871582
    3. '           ' → logprob: -9.87700080871582
    4. '):
' → logprob: -11.87700080871582
    5. '               ' → logprob: -12.00200080871582
    6. '       ' → logprob: -13.12700080871582
    7. ' ):
' → logprob: -13.25200080871582
    8. ':
' → logprob: -13.50200080871582
    9. '):

' → logprob: -14.12700080871582
    10. ')' → logprob: -14.75200080871582

Token 1739: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002028446411713958
    2. '                
' → logprob: -6.877028465270996
    3. '           ' → logprob: -7.877028465270996
    4. ' set' → logprob: -9.127028465270996
    5. '			' → logprob: -9.252028465270996
    6. '            
' → logprob: -9.252028465270996
    7. ':
' → logprob: -10.377028465270996
    8. '	           ' → logprob: -10.752028465270996
    9. 'set' → logprob: -10.877028465270996
    10. '		' → logprob: -11.002028465270996

Token 1740: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16437317430973053
    2. 'set' → logprob: -2.5393731594085693
    3. ' set' → logprob: -3.2893731594085693
    4. 'continue' (adapté à ' continue') → logprob: -3.9143731594085693
    5. ' continue' → logprob: -4.664373397827148
    6. '           ' → logprob: -5.414373397827148
    7. '			' → logprob: -7.289373397827148
    8. '```' → logprob: -9.039373397827148
    9. '	           ' → logprob: -9.039373397827148
    10. '	set' → logprob: -9.289373397827148

Token 1741: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5932068824768066
    2. '
' → logprob: -0.9682068824768066
    3. '            
' → logprob: -4.093206882476807
    4. ' set' → logprob: -4.343206882476807
    5. 'set' → logprob: -4.343206882476807
    6. ' 
' → logprob: -4.968206882476807
    7. '       ' → logprob: -5.468206882476807
    8. '		' → logprob: -5.968206882476807
    9. '    
' → logprob: -6.343206882476807
    10. '        
' → logprob: -6.468206882476807

Token 1742: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0246823001652956
    2. ' set' → logprob: -4.649682521820068
    3. 'set' → logprob: -4.899682521820068
    4. '```' → logprob: -5.649682521820068
    5. '               ' → logprob: -5.899682521820068
    6. '       ' → logprob: -7.274682521820068
    7. '``' → logprob: -9.14968204498291
    8. '   ' → logprob: -9.27468204498291
    9. '            
' → logprob: -9.89968204498291
    10. '
' → logprob: -10.14968204498291

Token 1743: ' #' (ID: 1069)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.2829175591468811
    2. '           ' → logprob: -1.5329174995422363
    3. ' set' → logprob: -3.5329174995422363
    4. '       ' → logprob: -6.907917499542236
    5. '   ' → logprob: -8.532917976379395
    6. '               ' → logprob: -9.407917976379395
    7. '```' → logprob: -12.032917976379395
    8. '	set' → logprob: -12.907917976379395
    9. '
' → logprob: -13.532917976379395
    10. '                   ' → logprob: -13.907917976379395

Token 1744: ' assign' (ID: 14975)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0006508402875624597
    2. '           ' → logprob: -7.500650882720947
    3. ' set' → logprob: -10.000650405883789
    4. '   ' → logprob: -10.000650405883789
    5. '       ' → logprob: -12.250650405883789
    6. '               ' → logprob: -13.125650405883789
    7. '                   ' → logprob: -16.00065040588379
    8. 'assigned' → logprob: -16.37565040588379
    9. ' ' → logprob: -16.87565040588379
    10. '
' → logprob: -17.25065040588379

Token 1745: '
' (ID: 198)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.41740882396698
    2. '           ' → logprob: -1.66740882396698
    3. 'assigned' → logprob: -1.91740882396698
    4. 'rect' → logprob: -5.6674089431762695
    5. '   ' → logprob: -6.7924089431762695
    6. '_set' → logprob: -7.9174089431762695
    7. '
' → logprob: -8.66740894317627
    8. '(rect' → logprob: -8.79240894317627
    9. '       ' → logprob: -9.54240894317627
    10. '               ' → logprob: -10.04240894317627

Token 1746: '           ' (ID: 352)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -1.025305986404419
    2. 'rect' → logprob: -1.275305986404419
    3. '           ' → logprob: -1.650305986404419
    4. '(rect' → logprob: -2.275305986404419
    5. '   ' → logprob: -3.275305986404419
    6. 'used' → logprob: -4.40030574798584
    7. 'assigned' → logprob: -4.90030574798584
    8. '
' → logprob: -5.90030574798584
    9. '       ' → logprob: -6.40030574798584
    10. '               ' → logprob: -6.90030574798584

Token 1747: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.0002222516923211515
    2. '           ' → logprob: -8.750222206115723
    3. '   ' → logprob: -10.250222206115723
    4. ' set' → logprob: -10.500222206115723
    5. '       ' → logprob: -14.375222206115723
    6. '               ' → logprob: -16.62522315979004
    7. 'for' → logprob: -16.87522315979004
    8. '```' → logprob: -17.12522315979004
    9. '	set' → logprob: -17.37522315979004
    10. ')set' → logprob: -18.75022315979004

Token 1748: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -7.3458322731312364e-06
    2. '```' → logprob: -13.000007629394531
    3. '_' → logprob: -13.250007629394531
    4. 'used' → logprob: -13.750007629394531
    5. '_USED' → logprob: -14.500007629394531
    6. '_unused' → logprob: -14.500007629394531
    7. '(rect' → logprob: -15.125007629394531
    8. 'Used' → logprob: -15.625007629394531
    9. '(_' → logprob: -16.25000762939453
    10. '(' → logprob: -16.25000762939453

Token 1749: '(rect' (ID: 68123)
  Prédit: '(rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: 0.0
    2. '(' → logprob: -17.0
    3. ' (' → logprob: -18.875
    4. '(Rect' → logprob: -19.0
    5. '(rec' → logprob: -19.625
    6. 'rect' → logprob: -20.375
    7. '	rect' → logprob: -21.625
    8. '(ret' → logprob: -21.75
    9. '(
' → logprob: -22.0
    10. '.rect' → logprob: -22.125

Token 1750: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.9650025428272784e-05
    2. '           ' → logprob: -10.750040054321289
    3. '(rect' → logprob: -11.500040054321289
    4. ' ,' → logprob: -12.250040054321289
    5. ',set' → logprob: -14.500040054321289
    6. '   ' → logprob: -14.625040054321289
    7. '```' → logprob: -14.750040054321289
    8. '(' → logprob: -16.00004005432129
    9. ',user' → logprob: -16.00004005432129
    10. 'used' → logprob: -16.00004005432129

Token 1751: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -2.339278580620885e-06
    2. ' used' → logprob: -13.000001907348633
    3. '.used' → logprob: -20.875001907348633
    4. '_used' → logprob: -22.000001907348633
    5. 'Used' → logprob: -22.750001907348633
    6. '-used' → logprob: -23.500001907348633
    7. 'USED' → logprob: -24.000001907348633
    8. '   ' → logprob: -24.750001907348633
    9. '```' → logprob: -25.625001907348633
    10. 'unused' → logprob: -25.875001907348633

Token 1752: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -2.45848218582978e-06
    2. 'area' → logprob: -13.12500286102295
    3. '_AREA' → logprob: -16.750001907348633
    4. 'Area' → logprob: -17.000001907348633
    5. '```' → logprob: -17.000001907348633
    6. '_' → logprob: -18.000001907348633
    7. '_
' → logprob: -18.250001907348633
    8. '
' → logprob: -18.375001907348633
    9. ')' → logprob: -18.500001907348633
    10. '   ' → logprob: -18.750001907348633

Token 1753: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4391956685576588e-05
    2. 'True' → logprob: -11.125024795532227
    3. ' ,' → logprob: -11.625024795532227
    4. '(True' → logprob: -14.625024795532227
    5. ' True' → logprob: -16.500024795532227
    6. ',true' → logprob: -17.000024795532227
    7. ',
' → logprob: -17.500024795532227
    8. '=True' → logprob: -18.000024795532227
    9. '   ' → logprob: -19.125024795532227
    10. ',None' → logprob: -20.125024795532227

Token 1754: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.7697225252486533e-06
    2. ' True' → logprob: -12.500003814697266
    3. '   ' → logprob: -19.500003814697266
    4. '           ' → logprob: -19.875003814697266
    5. '(True' → logprob: -20.375003814697266
    6. '=True' → logprob: -22.000003814697266
    7. '               ' → logprob: -22.125003814697266
    8. '1' → logprob: -22.375003814697266
    9. '                   ' → logprob: -23.000003814697266
    10. 'true' → logprob: -23.125003814697266

Token 1755: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1474991887807846
    2. ')' → logprob: -2.0224990844726562
    3. '
' → logprob: -6.147499084472656
    4. ')
' → logprob: -6.272499084472656
    5. '<|end|>' → logprob: -7.522499084472656
    6. '       ' → logprob: -10.022499084472656
    7. '		' → logprob: -10.522499084472656
    8. ',' → logprob: -10.647499084472656
    9. '            
' → logprob: -10.647499084472656
    10. '   ' → logprob: -11.272499084472656

Token 1756: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005133562372066081
    2. '       ' → logprob: -8.750513076782227
    3. '		' → logprob: -8.750513076782227
    4. '	       ' → logprob: -9.000513076782227
    5. '
' → logprob: -10.375513076782227
    6. '   ' → logprob: -10.750513076782227
    7. 'assigned' → logprob: -12.250513076782227
    8. '		   ' → logprob: -12.500513076782227
    9. '               ' → logprob: -13.000513076782227
    10. '	   ' → logprob: -13.125513076782227

Token 1757: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' (adapté à ' assigned') → logprob: -0.005238975863903761
    2. '           ' → logprob: -5.255239009857178
    3. '   ' → logprob: -12.63023853302002
    4. '       ' → logprob: -13.88023853302002
    5. ' assigned' → logprob: -14.00523853302002
    6. '               ' → logprob: -16.630239486694336
    7. '```' → logprob: -17.630239486694336
    8. 'allocated' → logprob: -18.505239486694336
    9. '          ' → logprob: -19.255239486694336
    10. '         ' → logprob: -19.880239486694336

Token 1758: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -2.1008713702030946e-06
    2. 'rect' → logprob: -14.000001907348633
    3. '\' → logprob: -15.375001907348633
    4. '```' → logprob: -15.625001907348633
    5. 's' → logprob: -16.375001907348633
    6. '_rec' → logprob: -16.500001907348633
    7. '_' → logprob: -16.625001907348633
    8. '_r' → logprob: -16.750001907348633
    9. '_rest' → logprob: -16.875001907348633
    10. '_rel' → logprob: -17.125001907348633

Token 1759: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1472419600977446e-06
    2. '_rect' → logprob: -14.000000953674316
    3. 'rect' → logprob: -16.375001907348633
    4. 'Rects' → logprob: -16.500001907348633
    5. '[' → logprob: -18.000001907348633
    6. '[s' → logprob: -18.125001907348633
    7. 'ects' → logprob: -18.375001907348633
    8. 'cts' → logprob: -18.875001907348633
    9. 'с' → logprob: -19.000001907348633
    10. 'ed' → logprob: -20.500001907348633

Token 1760: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.347765181795694e-05
    2. '[' → logprob: -9.875053405761719
    3. '[I' → logprob: -14.625053405761719
    4. '[idx' → logprob: -15.125053405761719
    5. '\[' → logprob: -15.250053405761719
    6. ' [' → logprob: -15.250053405761719
    7. '[
' → logprob: -16.25005340576172
    8. '[j' → logprob: -16.25005340576172
    9. '[index' → logprob: -16.37505340576172
    10. '
' → logprob: -16.87505340576172

Token 1761: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.045392684638500214
    2. ']' → logprob: -3.9203927516937256
    3. ']=' → logprob: -4.2953925132751465
    4. ' =' → logprob: -4.5453925132751465
    5. ')' → logprob: -8.920392990112305
    6. ')=' → logprob: -9.545392990112305
    7. '[' → logprob: -9.795392990112305
    8. '=
' → logprob: -10.795392990112305
    9. ' ]' → logprob: -12.920392990112305
    10. '=

' → logprob: -13.295392990112305

Token 1762: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005533903022296727
    2. ' =' → logprob: -7.500553607940674
    3. '=
' → logprob: -15.000553131103516
    4. '=

' → logprob: -17.500553131103516
    5. '.=' → logprob: -17.625553131103516
    6. ')=' → logprob: -17.625553131103516
    7. '＝' → logprob: -18.375553131103516
    8. '=True' → logprob: -18.750553131103516
    9. ']=' → logprob: -19.125553131103516
    10. '_=' → logprob: -19.250553131103516

Token 1763: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -1.306760805164231e-05
    2. ' rect' → logprob: -11.25001335144043
    3. '(rect' → logprob: -18.75001335144043
    4. '	rect' → logprob: -21.25001335144043
    5. 'rec' → logprob: -23.00001335144043
    6. '.rect' → logprob: -23.12501335144043
    7. 'rectangle' → logprob: -23.25001335144043
    8. '_rect' → logprob: -23.87501335144043
    9. 'rest' → logprob: -24.50001335144043
    10. '```' → logprob: -25.00001335144043

Token 1764: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5934908390045166
    2. '
' → logprob: -1.0934908390045166
    3. '<|end|>' → logprob: -2.5934908390045166
    4. '<|end|>' → logprob: -4.0934906005859375
    5. '  
' → logprob: -5.0934906005859375
    6. '            
' → logprob: -5.2184906005859375
    7. '    
' → logprob: -5.8434906005859375
    8. '
' → logprob: -7.0934906005859375
    9. '```' → logprob: -7.2184906005859375
    10. '        
' → logprob: -7.2184906005859375

Token 1765: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32005366683006287
    2. '
' → logprob: -1.3200536966323853
    3. '		' → logprob: -5.820053577423096
    4. '<|end|>' → logprob: -7.070053577423096
    5. '            
' → logprob: -7.445053577423096
    6. '       ' → logprob: -8.445054054260254
    7. '```' → logprob: -8.445054054260254
    8. '<|end|>' → logprob: -8.445054054260254
    9. '    
' → logprob: -8.570054054260254
    10. '
' → logprob: -8.570054054260254

Token 1766: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.05007338896393776
    2. '           ' → logprob: -3.0500733852386475
    3. ' dfs' → logprob: -6.675073623657227
    4. 'if' → logprob: -8.550073623657227
    5. 'd' → logprob: -11.675073623657227
    6. '```' → logprob: -12.175073623657227
    7. ' if' → logprob: -12.175073623657227
    8. '       ' → logprob: -12.425073623657227
    9. '
' → logprob: -12.925073623657227
    10. 'df' → logprob: -13.800073623657227

Token 1767: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.23917081207037e-05
    2. 'i' → logprob: -10.125041961669922
    3. '(' → logprob: -13.000041961669922
    4. ' (' → logprob: -17.750041961669922
    5. '   ' → logprob: -18.250041961669922
    6. ' i' → logprob: -18.375041961669922
    7. '`' → logprob: -18.875041961669922
    8. '(
' → logprob: -18.875041961669922
    9. '```' → logprob: -18.875041961669922
    10. '	i' → logprob: -19.125041961669922

Token 1768: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00861468818038702
    2. ' +' → logprob: -4.758614540100098
    3. '+
' → logprob: -16.383615493774414
    4. '＋' → logprob: -17.133615493774414
    5. '+i' → logprob: -18.008615493774414
    6. '+[' → logprob: -19.133615493774414
    7. '()+' → logprob: -19.508615493774414
    8. ' +
' → logprob: -19.633615493774414
    9. '1' → logprob: -20.133615493774414
    10. '   ' → logprob: -20.883615493774414

Token 1769: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '
' → logprob: -18.125001907348633
    4. '```' → logprob: -18.125001907348633
    5. ')' → logprob: -18.750001907348633
    6. '   ' → logprob: -19.125001907348633
    7. '{
' → logprob: -20.125001907348633
    8. '``' → logprob: -20.250001907348633
    9. '+' → logprob: -20.375001907348633
    10. '{' → logprob: -20.875001907348633

Token 1770: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31359419226646423
    2. ')' → logprob: -1.3135942220687866
    3. '()' → logprob: -8.688593864440918
    4. '   ' → logprob: -9.563593864440918
    5. '())
' → logprob: -10.188593864440918
    6. '()
' → logprob: -10.563593864440918
    7. '           ' → logprob: -11.563593864440918
    8. ')
' → logprob: -11.938593864440918
    9. '())' → logprob: -12.188593864440918
    10. '       ' → logprob: -12.813593864440918

Token 1771: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004966750275343657
    2. 'set' → logprob: -8.125496864318848
    3. '```' → logprob: -8.750496864318848
    4. '		' → logprob: -11.250496864318848
    5. ' set' → logprob: -11.250496864318848
    6. '       ' → logprob: -12.375496864318848
    7. '
' → logprob: -13.625496864318848
    8. '               ' → logprob: -13.750496864318848
    9. '            
' → logprob: -13.750496864318848
    10. '``' → logprob: -13.750496864318848

Token 1772: ' assigned' (ID: 21482)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5764766931533813
    2. 'set' → logprob: -0.8264766931533813
    3. ' set' → logprob: -7.576476573944092
    4. '       ' → logprob: -10.70147705078125
    5. '   ' → logprob: -13.57647705078125
    6. '          ' → logprob: -14.57647705078125
    7. '         ' → logprob: -15.32647705078125
    8. '
' → logprob: -16.07647705078125
    9. '               ' → logprob: -16.20147705078125
    10. '```' → logprob: -17.32647705078125

Token 1773: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.0010317382402718067
    2. 'rect' → logprob: -7.626031875610352
    3. 'ed' → logprob: -7.876031875610352
    4. 's' → logprob: -9.251031875610352
    5. 'Rects' → logprob: -10.501031875610352
    6. '_' → logprob: -11.126031875610352
    7. 'Rect' → logprob: -12.376031875610352
    8. '_regs' → logprob: -13.001031875610352
    9. '	rect' → logprob: -13.376031875610352
    10. '=' → logprob: -13.376031875610352

Token 1774: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -3.9888433093437925e-05
    2. '_rect' → logprob: -10.250040054321289
    3. 'Rects' → logprob: -13.125040054321289
    4. 'rect' → logprob: -14.500040054321289
    5. 'cts' → logprob: -14.625040054321289
    6. 'ds' → logprob: -14.625040054321289
    7. 'ects' → logprob: -15.000040054321289
    8. '[' → logprob: -15.125040054321289
    9. 'ts' → logprob: -15.500040054321289
    10. 'eds' → logprob: -16.50004005432129

Token 1775: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.625004768371582
    3. '=' → logprob: -14.125004768371582
    4. '[I' → logprob: -15.000004768371582
    5. '=[' → logprob: -16.625003814697266
    6. '[-' → logprob: -17.375003814697266
    7. '    
' → logprob: -17.375003814697266
    8. '	' → logprob: -17.375003814697266
    9. '```' → logprob: -17.375003814697266
    10. '
' → logprob: -17.500003814697266

Token 1776: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003272541332989931
    2. ']' → logprob: -5.878272533416748
    3. '=' → logprob: -8.003273010253906
    4. ']=' → logprob: -9.128273010253906
    5. '][' → logprob: -11.753273010253906
    6. '=i' → logprob: -12.378273010253906
    7. '[' → logprob: -12.503273010253906
    8. 'i' → logprob: -12.628273010253906
    9. ' =' → logprob: -13.378273010253906
    10. '(i' → logprob: -13.878273010253906

Token 1777: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003416607796680182
    2. ' =' → logprob: -8.375341415405273
    3. '=None' → logprob: -9.375341415405273
    4. '[i' → logprob: -10.875341415405273
    5. '[' → logprob: -12.125341415405273
    6. 'None' → logprob: -14.375341415405273
    7. '=
' → logprob: -14.625341415405273
    8. '```' → logprob: -15.625341415405273
    9. ']' → logprob: -15.875341415405273
    10. '=[' → logprob: -16.375341415405273

Token 1778: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0001234428636962548
    2. ' None' → logprob: -9.000123023986816
    3. '(None' → logprob: -18.625123977661133
    4. '_None' → logprob: -19.250123977661133
    5. '=None' → logprob: -19.875123977661133
    6. '[' → logprob: -20.125123977661133
    7. ',None' → logprob: -21.875123977661133
    8. 'none' → logprob: -22.250123977661133
    9. '.None' → logprob: -22.875123977661133
    10. '```' → logprob: -23.500123977661133

Token 1779: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02524610236287117
    2. 'set' → logprob: -3.7752461433410645
    3. '
' → logprob: -6.6502461433410645
    4. '```' → logprob: -8.025245666503906
    5. ' set' → logprob: -8.650245666503906
    6. '(set' → logprob: -9.400245666503906
    7. '#set' → logprob: -11.025245666503906
    8. '            
' → logprob: -11.025245666503906
    9. '   ' → logprob: -11.275245666503906
    10. '	set' → logprob: -11.275245666503906

Token 1780: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.309382373117842e-05
    2. 'set' → logprob: -10.375033378601074
    3. '```' → logprob: -14.375033378601074
    4. '
' → logprob: -15.000033378601074
    5. '       ' → logprob: -15.250033378601074
    6. '   ' → logprob: -15.625033378601074
    7. '		' → logprob: -15.750033378601074
    8. ' set' → logprob: -15.875033378601074
    9. '          ' → logprob: -17.000032424926758
    10. '            
' → logprob: -17.375032424926758

Token 1781: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -1.4498052223643754e-05
    2. ' set' → logprob: -11.250014305114746
    3. '           ' → logprob: -13.625014305114746
    4. '```' → logprob: -16.125015258789062
    5. '   ' → logprob: -16.625015258789062
    6. '       ' → logprob: -17.250015258789062
    7. '	set' → logprob: -18.250015258789062
    8. '
' → logprob: -19.125015258789062
    9. '``' → logprob: -19.625015258789062
    10. '            
' → logprob: -19.625015258789062

Token 1782: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -5.512236498361744e-07
    2. '_unused' → logprob: -15.125000953674316
    3. '_USED' → logprob: -17.25
    4. 'used' → logprob: -17.375
    5. '_using' → logprob: -17.625
    6. '_usage' → logprob: -17.625
    7. '```' → logprob: -18.125
    8. '_needed' → logprob: -18.625
    9. '_' → logprob: -19.0
    10. '_us' → logprob: -19.625

Token 1783: '(rect' (ID: 68123)
  Prédit: '(rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.000000953674316
    3. 'rect' → logprob: -18.25
    4. '(rec' → logprob: -18.625
    5. '(Rect' → logprob: -19.375
    6. ' (' → logprob: -20.5
    7. '(ret' → logprob: -20.75
    8. '	rect' → logprob: -21.25
    9. '(dict' → logprob: -22.125
    10. '(
' → logprob: -22.25

Token 1784: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002632430987432599
    2. '(' → logprob: -8.375263214111328
    3. 'used' → logprob: -10.750263214111328
    4. ')' → logprob: -11.750263214111328
    5. ' used' → logprob: -13.500263214111328
    6. '```' → logprob: -13.500263214111328
    7. ' ,' → logprob: -14.875263214111328
    8. '   ' → logprob: -15.875263214111328
    9. ',use' → logprob: -17.750263214111328
    10. '),' → logprob: -17.875263214111328

Token 1785: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.5759395360946655
    2. 'used' → logprob: -0.8259395360946655
    3. '.used' → logprob: -16.700939178466797
    4. '_used' → logprob: -17.825939178466797
    5. 'Used' → logprob: -18.950939178466797
    6. 'unused' → logprob: -19.825939178466797
    7. '   ' → logprob: -20.325939178466797
    8. ' usado' → logprob: -20.825939178466797
    9. '```' → logprob: -20.825939178466797
    10. ' usados' → logprob: -21.075939178466797

Token 1786: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -1.4855663721391466e-05
    2. '_used' → logprob: -12.125015258789062
    3. 'used' → logprob: -12.625015258789062
    4. 'Area' → logprob: -13.000015258789062
    5. '   ' → logprob: -13.625015258789062
    6. 'area' → logprob: -13.750015258789062
    7. '_AREA' → logprob: -14.250015258789062
    8. '-area' → logprob: -15.875015258789062
    9. '(area' → logprob: -16.000015258789062
    10. 'ed' → logprob: -16.125015258789062

Token 1787: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.200166469876422e-06
    2. ' ,' → logprob: -13.000004768371582
    3. 'False' → logprob: -13.750004768371582
    4. ',
' → logprob: -13.875004768371582
    5. '(rect' → logprob: -14.375004768371582
    6. '[' → logprob: -16.6250057220459
    7. '   ' → logprob: -16.8750057220459
    8. '(False' → logprob: -16.8750057220459
    9. '           ' → logprob: -16.8750057220459
    10. 'rect' → logprob: -17.5000057220459

Token 1788: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.004078401252627373
    2. ' False' → logprob: -5.504078388214111
    3. '(False' → logprob: -17.004077911376953
    4. '=False' → logprob: -22.379077911376953
    5. '.False' → logprob: -22.879077911376953
    6. '_false' → logprob: -24.504077911376953
    7. 'F' → logprob: -25.629077911376953
    8. 'false' → logprob: -25.754077911376953
    9. 'True' → logprob: -26.379077911376953
    10. '_FALSE' → logprob: -27.129077911376953

Token 1789: ')

' (ID: 1029)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1790: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08496551215648651
    2. 'dfs' → logprob: -3.334965467453003
    3. 'return' → logprob: -3.584965467453003
    4. '
' → logprob: -4.584965705871582
    5. '<|end|>' → logprob: -5.084965705871582
    6. '	return' → logprob: -7.834965705871582
    7. '    
' → logprob: -7.959965705871582
    8. 'd' → logprob: -8.709965705871582
    9. '<|end|>' → logprob: -9.084965705871582
    10. ' ' → logprob: -9.209965705871582

Token 1791: ' dfs' (ID: 51252)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5791189074516296
    2. 'dfs' (adapté à ' dfs') → logprob: -0.8291189074516296
    3. 'return' → logprob: -6.204118728637695
    4. '
' → logprob: -6.954118728637695
    5. ' dfs' → logprob: -9.454118728637695
    6. '    
' → logprob: -9.954118728637695
    7. 'd' → logprob: -10.579118728637695
    8. '```' → logprob: -10.829118728637695
    9. 'def' → logprob: -11.204118728637695
    10. 'df' → logprob: -12.454118728637695

Token 1792: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006721876095980406
    2. '(i' → logprob: -5.0067219734191895
    3. '(
' → logprob: -13.006721496582031
    4. '(len' → logprob: -13.381721496582031
    5. '((' → logprob: -13.881721496582031
    6. ' (' → logprob: -14.756721496582031
    7. '(None' → logprob: -14.881721496582031
    8. '('' → logprob: -15.131721496582031
    9. '(ii' → logprob: -15.506721496582031
    10. '()' → logprob: -16.13172149658203

Token 1793: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. 'len' → logprob: -13.750001907348633
    3. ')' → logprob: -14.750001907348633
    4. ' ' → logprob: -16.875001907348633
    5. '(' → logprob: -18.875001907348633
    6. '(len' → logprob: -19.375001907348633
    7. ' len' → logprob: -20.750001907348633
    8. '1' → logprob: -20.750001907348633
    9. '   ' → logprob: -21.000001907348633
    10. '00' → logprob: -21.250001907348633

Token 1794: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.082895273109898e-05
    2. ' )' → logprob: -11.500030517578125
    3. '()' → logprob: -11.875030517578125
    4. ')
' → logprob: -12.375030517578125
    5. '<|end|>' → logprob: -12.500030517578125
    6. '())' → logprob: -13.375030517578125
    7. '
' → logprob: -13.375030517578125
    8. '   ' → logprob: -13.750030517578125
    9. ')return' → logprob: -14.750030517578125
    10. '```' → logprob: -15.625030517578125

Token 1795: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08834731578826904
    2. '```' → logprob: -3.0883474349975586
    3. 'return' → logprob: -3.8383474349975586
    4. 'def' → logprob: -4.713347434997559
    5. ' if' → logprob: -5.213347434997559
    6. '   ' → logprob: -6.088347434997559
    7. '``' → logprob: -7.838347434997559
    8. 'for' → logprob: -9.088347434997559
    9. '
' → logprob: -9.213347434997559
    10. '    
' → logprob: -9.963347434997559

Token 1796: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05056922882795334
    2. 'return' → logprob: -3.0505692958831787
    3. '```' → logprob: -6.5505690574646
    4. '   ' → logprob: -7.5505690574646
    5. ' if' → logprob: -10.800569534301758
    6. '``' → logprob: -12.800569534301758
    7. ' return' → logprob: -14.050569534301758
    8. '
' → logprob: -14.675569534301758
    9. '`' → logprob: -14.925569534301758
    10. '    
' → logprob: -17.550569534301758

Token 1797: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0031837786082178354
    2. 'len' → logprob: -5.753183841705322
    3. ' not' → logprob: -12.503183364868164
    4. ' solutions' → logprob: -13.253183364868164
    5. ' ' → logprob: -14.878183364868164
    6. '(len' → logprob: -15.503183364868164
    7. 'solutions' → logprob: -17.878183364868164
    8. '   ' → logprob: -18.753183364868164
    9. '  ' → logprob: -18.753183364868164
    10. 'not' → logprob: -19.253183364868164

Token 1798: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -8.590104698669165e-05
    2. '(' → logprob: -9.375085830688477
    3. ' (' → logprob: -14.250085830688477
    4. '(solution' → logprob: -16.125085830688477
    5. '==' → logprob: -16.250085830688477
    6. '>' → logprob: -18.125085830688477
    7. '(
' → logprob: -18.125085830688477
    8. '(`' → logprob: -18.375085830688477
    9. '(results' → logprob: -18.875085830688477
    10. '   ' → logprob: -19.000085830688477

Token 1799: 'olutions' (ID: 83919)
  Prédit: 'olutions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olutions' → logprob: -0.001873189932666719
    2. '(' → logprob: -6.876873016357422
    3. '(s' → logprob: -7.251873016357422
    4. 'solutions' → logprob: -9.126873016357422
    5. ' solutions' → logprob: -12.126873016357422
    6. '>' → logprob: -12.251873016357422
    7. 'Solutions' → logprob: -13.001873016357422
    8. 'ols' → logprob: -13.501873016357422
    9. '[' → logprob: -13.626873016357422
    10. 'o' → logprob: -13.751873016357422

Token 1800: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06585194915533066
    2. ')' → logprob: -2.940851926803589
    3. ' ==' → logprob: -4.815852165222168
    4. ')==' → logprob: -6.315852165222168
    5. '[' → logprob: -7.940852165222168
    6. '<' → logprob: -8.065852165222168
    7. '>' → logprob: -8.565852165222168
    8. '```' → logprob: -9.690852165222168
    9. '=' → logprob: -11.065852165222168
    10. '()==' → logprob: -11.190852165222168

Token 1801: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04865901172161102
    2. ' ==' → logprob: -3.048659086227417
    3. '=' → logprob: -10.673659324645996
    4. '>' → logprob: -11.048659324645996
    5. '<' → logprob: -11.548659324645996
    6. '```' → logprob: -11.673659324645996
    7. '!=' → logprob: -12.173659324645996
    8. '0' → logprob: -13.548659324645996
    9. '()==' → logprob: -13.673659324645996
    10. '==
' → logprob: -13.673659324645996

Token 1802: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011160651221871376
    2. ' ' → logprob: -4.511160850524902
    3. '0' → logprob: -9.886160850524902
    4. '=' → logprob: -10.011160850524902
    5. '```' → logprob: -11.761160850524902
    6. '==' → logprob: -12.011160850524902
    7. ' =' → logprob: -13.886160850524902
    8. '   ' → logprob: -14.511160850524902
    9. ' ' → logprob: -14.761160850524902
    10. '  ' → logprob: -15.511160850524902

Token 1803: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.191489642835222e-05
    2. '0' → logprob: -10.625041961669922
    3. ' ' → logprob: -11.500041961669922
    4. '```' → logprob: -12.250041961669922
    5. '=' → logprob: -13.375041961669922
    6. '==' → logprob: -14.875041961669922
    7. '
' → logprob: -15.125041961669922
    8. '   ' → logprob: -15.625041961669922
    9. 'exact' → logprob: -16.125041961669922
    10. '

' → logprob: -16.875041961669922

Token 1804: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06254006177186966
    2. ':
' → logprob: -2.812540054321289
    3. '       ' → logprob: -8.187540054321289
    4. ':return' → logprob: -8.187540054321289
    5. '   ' → logprob: -12.312540054321289
    6. ' or' → logprob: -12.437540054321289
    7. ':
' → logprob: -12.937540054321289
    8. '[' → logprob: -13.812540054321289
    9. ':

' → logprob: -13.937540054321289
    10. '==' → logprob: -14.062540054321289

Token 1805: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000683126098010689
    2. 'return' → logprob: -8.000682830810547
    3. ' return' → logprob: -9.000682830810547
    4. '   ' → logprob: -9.500682830810547
    5. '
' → logprob: -10.000682830810547
    6. '```' → logprob: -10.375682830810547
    7. '           ' → logprob: -11.250682830810547
    8. '        
' → logprob: -11.500682830810547
    9. ':
' → logprob: -11.500682830810547
    10. '	return' → logprob: -11.625682830810547

Token 1806: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5692890882492065
    2. 'return' (adapté à ' return') → logprob: -1.1942890882492065
    3. ' return' → logprob: -2.694289207458496
    4. '   ' → logprob: -2.944289207458496
    5. '
' → logprob: -5.319289207458496
    6. 'print' → logprob: -5.319289207458496
    7. '```' → logprob: -7.194289207458496
    8. ' print' → logprob: -8.569289207458496
    9. '	return' → logprob: -9.569289207458496
    10. '``' → logprob: -10.569289207458496

Token 1807: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.09355492889881134
    2. ' None' → logprob: -2.593554973602295
    3. '"' → logprob: -4.343554973602295
    4. ''' → logprob: -6.718554973602295
    5. '   ' → logprob: -8.593554496765137
    6. '[]' → logprob: -9.468554496765137
    7. '(None' → logprob: -10.343554496765137
    8. '
' → logprob: -11.093554496765137
    9. '[]
' → logprob: -11.218554496765137
    10. '`' → logprob: -11.843554496765137

Token 1808: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09277220815420151
    2. '   ' → logprob: -2.4677722454071045
    3. '    
' → logprob: -5.592772006988525
    4. '
' → logprob: -10.592772483825684
    5. '\n' → logprob: -10.717772483825684
    6. '  
' → logprob: -10.842772483825684
    7. 'return' → logprob: -11.717772483825684
    8. '
    
' → logprob: -12.342772483825684
    9. ' 
' → logprob: -12.467772483825684
    10. '```' → logprob: -12.842772483825684

Token 1809: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10447173565626144
    2. 'return' → logprob: -2.3544716835021973
    3. ' return' → logprob: -5.479471683502197
    4. '
' → logprob: -9.604472160339355
    5. '```' → logprob: -11.479472160339355
    6. '{return' → logprob: -13.104472160339355
    7. '	return' → logprob: -13.479472160339355
    8. '    
' → logprob: -13.604472160339355
    9. '@return' → logprob: -14.479472160339355
    10. ':return' → logprob: -15.354472160339355

Token 1810: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00249420665204525
    2. '   ' → logprob: -6.0024943351745605
    3. ' return' → logprob: -11.127493858337402
    4. '```' → logprob: -13.377493858337402
    5. '
' → logprob: -13.502493858337402
    6. 'result' → logprob: -14.627493858337402
    7. 'solution' → logprob: -15.377493858337402
    8. 'ret' → logprob: -16.62749481201172
    9. '	return' → logprob: -17.12749481201172
    10. '       ' → logprob: -18.12749481201172

Token 1811: ' Build' (ID: 10885)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0003995680599473417
    2. 'result' → logprob: -8.375399589538574
    3. '   ' → logprob: -9.375399589538574
    4. 'solution' → logprob: -9.750399589538574
    5. ' return' → logprob: -11.625399589538574
    6. 'rect' → logprob: -11.875399589538574
    7. 'res' → logprob: -12.250399589538574
    8. 'ret' → logprob: -13.250399589538574
    9. '#' → logprob: -13.625399589538574
    10. 'answer' → logprob: -13.875399589538574

Token 1812: ' output' (ID: 4733)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.08276060968637466
    2. 'solution' → logprob: -3.7077605724334717
    3. 'answer' → logprob: -4.082760810852051
    4. 'res' → logprob: -4.207760810852051
    5. 'output' → logprob: -4.832760810852051
    6. 'rect' → logprob: -5.082760810852051
    7. ' result' → logprob: -6.082760810852051
    8. 'assigned' → logprob: -6.207760810852051
    9. 'ans' → logprob: -6.707760810852051
    10. '   ' → logprob: -7.207760810852051

Token 1813: ' grid' (ID: 10586)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7717852592468262
    2. 'output' → logprob: -0.8967852592468262
    3. 'result' → logprob: -2.271785259246826
    4. 'out' → logprob: -4.646785259246826
    5. '
' → logprob: -5.271785259246826
    6. 'res' → logprob: -5.646785259246826
    7. 'area' → logprob: -6.396785259246826
    8. '``' → logprob: -6.646785259246826
    9. 'rect' → logprob: -6.771785259246826
    10. '```' → logprob: -7.021785259246826

Token 1814: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17565123736858368
    2. 'output' → logprob: -2.1756513118743896
    3. 'out' → logprob: -3.6756513118743896
    4. 'grid' → logprob: -4.5506510734558105
    5. '```' → logprob: -5.8006510734558105
    6. 'result' → logprob: -6.1756510734558105
    7. '    
' → logprob: -6.4256510734558105
    8. '
' → logprob: -6.5506510734558105
    9. '``' → logprob: -6.5506510734558105
    10. ' output' → logprob: -7.0506510734558105

Token 1815: ' for' (ID: 395)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.30425265431404114
    2. 'result' → logprob: -2.4292526245117188
    3. 'grid' → logprob: -2.4292526245117188
    4. 'out' → logprob: -2.8042526245117188
    5. 'res' → logprob: -4.054252624511719
    6. '   ' → logprob: -5.054252624511719
    7. 'field' → logprob: -7.304252624511719
    8. 'ans' → logprob: -7.429252624511719
    9. 'answer' → logprob: -7.804252624511719
    10. '    
' → logprob: -9.929252624511719

Token 1816: ' each' (ID: 2454)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.7874480485916138
    2. 'x' → logprob: -1.1624480485916138
    3. 'b' → logprob: -1.6624480485916138
    4. 'sol' → logprob: -4.537447929382324
    5. ' y' → logprob: -5.037447929382324
    6. 'r' → logprob: -5.787447929382324
    7. '_x' → logprob: -5.787447929382324
    8. '_y' → logprob: -5.912447929382324
    9. ' x' → logprob: -6.037447929382324
    10. 'res' → logprob: -6.287447929382324

Token 1817: ' buyer' (ID: 28061)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.029526563361287117
    2. 'b' → logprob: -4.279526710510254
    3. ' y' → logprob: -4.279526710510254
    4. 'buyer' → logprob: -7.904526710510254
    5. 'row' → logprob: -8.154526710510254
    6. '_y' → logprob: -8.529526710510254
    7. ' b' → logprob: -8.654526710510254
    8. ' buyer' → logprob: -9.404526710510254
    9. '   ' → logprob: -10.404526710510254
    10. '[y' → logprob: -10.404526710510254

Token 1818: ' fill' (ID: 6954)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24740342795848846
    2. 'b' → logprob: -2.622403383255005
    3. ':' → logprob: -2.872403383255005
    4. ',' → logprob: -3.372403383255005
    5. '```' → logprob: -4.747403621673584
    6. ':
' → logprob: -4.872403621673584
    7. ' in' → logprob: -5.247403621673584
    8. 'for' → logprob: -5.372403621673584
    9. '_' → logprob: -5.497403621673584
    10. ' =' → logprob: -5.997403621673584

Token 1819: ' cells' (ID: 11242)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0674548149108887
    2. 'range' → logprob: -1.3174548149108887
    3. '   ' → logprob: -1.5674548149108887
    4. ' for' → logprob: -2.3174548149108887
    5. 'with' → logprob: -4.067454814910889
    6. 'row' → logprob: -4.317454814910889
    7. 'b' → logprob: -4.442454814910889
    8. ' with' → logprob: -4.692454814910889
    9. ' range' → logprob: -4.942454814910889
    10. 'r' → logprob: -5.817454814910889

Token 1820: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08314616233110428
    2. '
' → logprob: -2.958146095275879
    3. '```' → logprob: -4.583146095275879
    4. '``' → logprob: -4.958146095275879
    5. ' for' → logprob: -5.833146095275879
    6. '    
' → logprob: -6.208146095275879
    7. 'for' → logprob: -6.708146095275879
    8. 'output' → logprob: -6.958146095275879
    9. '\n' → logprob: -7.333146095275879
    10. '`
' → logprob: -7.833146095275879

Token 1821: ' buyer' (ID: 28061)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.431330144405365
    2. 'str' → logprob: -1.1813302040100098
    3. 'buyer' → logprob: -3.9313302040100098
    4. 'buyers' → logprob: -4.18133020401001
    5. ''' → logprob: -5.55633020401001
    6. ''b' → logprob: -6.55633020401001
    7. ' str' → logprob: -7.18133020401001
    8. ' b' → logprob: -7.18133020401001
    9. '1' → logprob: -8.056329727172852
    10. '"' → logprob: -8.181329727172852

Token 1822: ' number' (ID: 2086)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21382293105125427
    2. 'output' → logprob: -2.838822841644287
    3. '
' → logprob: -3.088822841644287
    4. '``' → logprob: -3.713822841644287
    5. '```' → logprob: -3.838822841644287
    6. 'out' → logprob: -4.088822841644287
    7. 'grid' → logprob: -4.463822841644287
    8. 'result' → logprob: -5.588822841644287
    9. ' output' → logprob: -5.838822841644287
    10. '    
' → logprob: -6.088822841644287

Token 1823: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3862941563129425
    2. '
' → logprob: -1.5112941265106201
    3. 'output' → logprob: -2.76129412651062
    4. 'out' → logprob: -4.511294364929199
    5. '```' → logprob: -4.511294364929199
    6. 'grid' → logprob: -5.011294364929199
    7. '``' → logprob: -5.886294364929199
    8. 'result' → logprob: -5.886294364929199
    9. '    
' → logprob: -6.886294364929199
    10. ' output' → logprob: -7.261294364929199

Token 1824: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010618575848639011
    2. 'output' → logprob: -5.385618686676025
    3. 'grid' → logprob: -5.760618686676025
    4. '
' → logprob: -6.510618686676025
    5. '```' → logprob: -7.260618686676025
    6. 'out' → logprob: -8.135618209838867
    7. 'result' → logprob: -9.135618209838867
    8. '``' → logprob: -9.260618209838867
    9. '    
' → logprob: -9.385618209838867
    10. 'for' → logprob: -10.510618209838867

Token 1825: ' grid' (ID: 10586)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.49259480834007263
    2. '   ' → logprob: -1.867594838142395
    3. 'result' → logprob: -2.4925947189331055
    4. 'out' → logprob: -2.4925947189331055
    5. 'grid' (adapté à ' grid') → logprob: -2.7425947189331055
    6. '```' → logprob: -6.2425947189331055
    7. '``' → logprob: -7.1175947189331055
    8. '
' → logprob: -7.2425947189331055
    9. 'res' → logprob: -7.3675947189331055
    10. '    
' → logprob: -8.867594718933105

Token 1826: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13104361295700073
    2. '=' → logprob: -2.1310436725616455
    3. '   ' → logprob: -5.506043434143066
    4. '=[' → logprob: -11.131043434143066
    5. '```' → logprob: -11.506043434143066
    6. '=[]' → logprob: -12.381043434143066
    7. '=[[' → logprob: -12.631043434143066
    8. '=
' → logprob: -12.881043434143066
    9. ' =
' → logprob: -13.131043434143066
    10. ' ' → logprob: -13.131043434143066

Token 1827: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -9.543733904138207e-05
    2. '[' → logprob: -10.00009536743164
    3. ' [[' → logprob: -10.00009536743164
    4. '[['' → logprob: -12.50009536743164
    5. '   ' → logprob: -14.12509536743164
    6. '[
' → logprob: -17.75009536743164
    7. ' [' → logprob: -17.87509536743164
    8. '[]
' → logprob: -18.00009536743164
    9. '([[' → logprob: -18.62509536743164
    10. '[]' → logprob: -19.00009536743164

Token 1828: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.000003814697266
    4. '[' → logprob: -20.250003814697266
    5. '`' → logprob: -21.375003814697266
    6. ''' → logprob: -21.375003814697266
    7. 'None' → logprob: -21.500003814697266
    8. '  ' → logprob: -21.500003814697266
    9. '-' → logprob: -21.625003814697266
    10. '.' → logprob: -22.125003814697266

Token 1829: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08941169828176498
    2. 'for' → logprob: -2.464411735534668
    3. '   ' → logprob: -8.214411735534668
    4. ']*' → logprob: -9.214411735534668
    5. '	for' → logprob: -10.339411735534668
    6. ']' → logprob: -10.589411735534668
    7. '[y' → logprob: -11.464411735534668
    8. '][' → logprob: -11.464411735534668
    9. '[x' → logprob: -12.089411735534668
    10. ' ' → logprob: -12.464411735534668

Token 1830: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -4.842555426876061e-06
    2. ' X' → logprob: -12.500004768371582
    3. '(X' → logprob: -13.875004768371582
    4. 'import' → logprob: -15.875004768371582
    5. '
' → logprob: -16.8750057220459
    6. '[X' → logprob: -18.7500057220459
    7. '```' → logprob: -19.0000057220459
    8. '   ' → logprob: -19.1250057220459
    9. '`' → logprob: -20.5000057220459
    10. 'for' → logprob: -20.8750057220459

Token 1831: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25193288922309875
    2. 'for' → logprob: -1.5019328594207764
    3. '	for' → logprob: -13.001933097839355
    4. '   ' → logprob: -14.001933097839355
    5. ')' → logprob: -15.501933097839355
    6. ']' → logprob: -16.12693214416504
    7. ' ' → logprob: -16.12693214416504
    8. '       ' → logprob: -16.37693214416504
    9. '           ' → logprob: -17.00193214416504
    10. '[' → logprob: -17.12693214416504

Token 1832: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0538389682769775
    2. 'range' → logprob: -1.3038389682769775
    3. ' range' → logprob: -1.4288389682769775
    4. 'y' → logprob: -3.3038389682769775
    5. ' in' → logprob: -3.4288389682769775
    6. '_y' → logprob: -3.4288389682769775
    7. 'in' → logprob: -4.053838729858398
    8. ' y' → logprob: -4.803838729858398
    9. ' _' → logprob: -5.303838729858398
    10. '_range' → logprob: -5.428838729858398

Token 1833: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002481246367096901
    2. ' range' → logprob: -6.002481460571289
    3. 'in' → logprob: -12.252481460571289
    4. 'y' → logprob: -14.627481460571289
    5. ' in' → logprob: -15.752481460571289
    6. '_range' → logprob: -16.62748146057129
    7. '   ' → logprob: -16.75248146057129
    8. '_' → logprob: -18.37748146057129
    9. 'Y' → logprob: -18.50248146057129
    10. '0' → logprob: -18.62748146057129

Token 1834: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015035520773380995
    2. ' range' → logprob: -6.5015034675598145
    3. 'Y' → logprob: -13.751503944396973
    4. '(range' → logprob: -15.751503944396973
    5. '   ' → logprob: -17.251502990722656
    6. '0' → logprob: -17.501502990722656
    7. 'y' → logprob: -18.376502990722656
    8. '
' → logprob: -18.876502990722656
    9. '_range' → logprob: -19.626502990722656
    10. '[' → logprob: -20.626502990722656

Token 1835: '(Y' (ID: 44341)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.04002545401453972
    2. 'range' → logprob: -3.290025472640991
    3. '(Y' → logprob: -6.540025234222412
    4. ' range' → logprob: -7.790025234222412
    5. '   ' → logprob: -9.79002571105957
    6. '0' → logprob: -10.29002571105957
    7. '       ' → logprob: -10.79002571105957
    8. '           ' → logprob: -11.79002571105957
    9. ' Y' → logprob: -13.54002571105957
    10. 'for' → logprob: -14.16502571105957

Token 1836: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.08624014258384705
    2. ']' → logprob: -2.58624005317688
    3. '   ' → logprob: -5.211240291595459
    4. ')]
' → logprob: -6.836240291595459
    5. ')]' → logprob: -7.836240291595459
    6. ')' → logprob: -8.2112398147583
    7. ']
' → logprob: -9.8362398147583
    8. ')
' → logprob: -10.3362398147583
    9. '       ' → logprob: -10.4612398147583
    10. ']

' → logprob: -11.9612398147583

Token 1837: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3905241787433624
    2. 'for' → logprob: -1.14052414894104
    3. ' for' → logprob: -6.015524387359619
    4. '
' → logprob: -7.140524387359619
    5. '```' → logprob: -8.515523910522461
    6. '    
' → logprob: -9.265523910522461
    7. '	for' → logprob: -9.390523910522461
    8. '       ' → logprob: -11.265523910522461
    9. '``' → logprob: -11.390523910522461
    10. '  
' → logprob: -12.515523910522461

Token 1838: ' sol' (ID: 1887)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003368926409166306
    2. '   ' → logprob: -8.000336647033691
    3. ' for' → logprob: -14.000336647033691
    4. '```' → logprob: -14.250336647033691
    5. '
' → logprob: -17.000337600708008
    6. '``' → logprob: -18.250337600708008
    7. '	for' → logprob: -18.500337600708008
    8. '    
' → logprob: -20.875337600708008
    9. '       ' → logprob: -21.250337600708008
    10. '`' → logprob: -21.875337600708008

Token 1839: ' =' (ID: 314)
  Prédit: 'utions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utions' → logprob: -0.8162007331848145
    2. ' =' → logprob: -1.0662007331848145
    3. '=' → logprob: -1.9412007331848145
    4. 'ution' → logprob: -2.6912007331848145
    5. '   ' → logprob: -7.4412007331848145
    6. 's' → logprob: -7.8162007331848145
    7. '=[' → logprob: -7.9412007331848145
    8. 'for' → logprob: -8.066200256347656
    9. 'u' → logprob: -8.691200256347656
    10. 'ut' → logprob: -8.941200256347656

Token 1840: ' solutions' (ID: 9368)
  Prédit: 'solutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solutions' → logprob: -0.011048170737922192
    2. ' solutions' → logprob: -4.511048316955566
    3. 's' → logprob: -15.761048316955566
    4. 'solution' → logprob: -16.51104736328125
    5. '0' → logprob: -16.76104736328125
    6. 'olutions' → logprob: -17.38604736328125
    7. 'answers' → logprob: -17.76104736328125
    8. '   ' → logprob: -17.88604736328125
    9. 'results' → logprob: -18.13604736328125
    10. 'sol' → logprob: -18.38604736328125

Token 1841: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1398757123970427e-05
    2. 's' → logprob: -11.750011444091797
    3. '0' → logprob: -13.875011444091797
    4. ' [' → logprob: -13.875011444091797
    5. '][' → logprob: -14.375011444091797
    6. ')[' → logprob: -15.500011444091797
    7. '```' → logprob: -15.500011444091797
    8. '=' → logprob: -15.750011444091797
    9. '[
' → logprob: -15.750011444091797
    10. '   ' → logprob: -16.125011444091797

Token 1842: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.875
    3. '
' → logprob: -17.375
    4. '```' → logprob: -18.25
    5. ' ' → logprob: -18.5
    6. '-' → logprob: -19.0
    7. '#' → logprob: -20.0
    8. 's' → logprob: -20.125
    9. '``' → logprob: -20.75
    10. '1' → logprob: -20.75

Token 1843: ']
' (ID: 1592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4106760025024414
    2. ')
' → logprob: -1.5356760025024414
    3. ')' → logprob: -2.1606760025024414
    4. '
' → logprob: -5.910676002502441
    5. ']
' → logprob: -6.160676002502441
    6. ']' → logprob: -6.910676002502441
    7. 'for' → logprob: -8.910676002502441
    8. ')
' → logprob: -9.285676002502441
    9. '[' → logprob: -9.785676002502441
    10. '```' → logprob: -10.160676002502441

Token 1844: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1005038321018219
    2. 'for' → logprob: -2.350503921508789
    3. '```' → logprob: -8.475503921508789
    4. ' for' → logprob: -10.225503921508789
    5. '
' → logprob: -10.475503921508789
    6. '``' → logprob: -11.350503921508789
    7. '       ' → logprob: -12.225503921508789
    8. '	for' → logprob: -12.350503921508789
    9. '    
' → logprob: -12.975503921508789
    10. '`' → logprob: -14.225503921508789

Token 1845: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005248225759714842
    2. '   ' → logprob: -5.255248069763184
    3. '```' → logprob: -11.255248069763184
    4. ' for' → logprob: -13.505248069763184
    5. '``' → logprob: -15.880248069763184
    6. '	for' → logprob: -18.5052490234375
    7. '
' → logprob: -19.0052490234375
    8. '       ' → logprob: -19.8802490234375
    9. '    
' → logprob: -20.2552490234375
    10. '`' → logprob: -20.3802490234375

Token 1846: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.25303587317466736
    2. 'i' → logprob: -1.5030359029769897
    3. ' idx' → logprob: -7.503036022186279
    4. 'b' → logprob: -7.628036022186279
    5. ' i' → logprob: -9.753035545349121
    6. 'buyer' → logprob: -12.128035545349121
    7. '   ' → logprob: -13.003035545349121
    8. ' b' → logprob: -14.378035545349121
    9. 'bid' → logprob: -15.003035545349121
    10. '	idx' → logprob: -15.628035545349121

Token 1847: ',b' (ID: 17568)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31279125809669495
    2. 'in' → logprob: -1.6877912282943726
    3. ',b' → logprob: -3.187791347503662
    4. ',' → logprob: -3.187791347503662
    5. 'b' → logprob: -7.187791347503662
    6. ' ,' → logprob: -8.937790870666504
    7. '   ' → logprob: -8.937790870666504
    8. '```' → logprob: -10.562790870666504
    9. ' b' → logprob: -10.687790870666504
    10. ',in' → logprob: -11.187790870666504

Token 1848: ' in' (ID: 306)
  Prédit: 'uyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uyer' → logprob: -0.5146522521972656
    2. ' in' → logprob: -1.2646522521972656
    3. 'in' → logprob: -2.3896522521972656
    4. 'uy' → logprob: -4.139652252197266
    5. '=' → logprob: -5.014652252197266
    6. ' =' → logprob: -6.764652252197266
    7. 'buyer' → logprob: -7.139652252197266
    8. ',' → logprob: -7.264652252197266
    9. 'uer' → logprob: -7.639652252197266
    10. 'for' → logprob: -7.889652252197266

Token 1849: ' enumerate' (ID: 29671)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002175719942897558
    2. ' range' → logprob: -6.627175807952881
    3. 'buyer' → logprob: -7.252175807952881
    4. 'sol' → logprob: -9.752175331115723
    5. 'enumer' → logprob: -10.127175331115723
    6. '[' → logprob: -11.752175331115723
    7. '(range' → logprob: -11.877175331115723
    8. 'b' → logprob: -12.377175331115723
    9. 'solve' → logprob: -12.627175331115723
    10. 'buyers' → logprob: -12.752175331115723

Token 1850: '(b' (ID: 3229)
  Prédit: 'buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyer' → logprob: -0.00013131031300872564
    2. ' buyer' → logprob: -9.125131607055664
    3. 'buyers' → logprob: -11.625131607055664
    4. 'range' → logprob: -11.875131607055664
    5. '   ' → logprob: -12.625131607055664
    6. '(b' → logprob: -13.750131607055664
    7. 'b' → logprob: -14.000131607055664
    8. '[b' → logprob: -14.125131607055664
    9. '[' → logprob: -15.500131607055664
    10. 'seller' → logprob: -16.125131607055664

Token 1851: 'uyer' (ID: 78614)
  Prédit: 'uyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uyer' → logprob: -0.004818615037947893
    2. 'buyer' → logprob: -5.379818439483643
    3. 'uy' → logprob: -8.6298189163208
    4. 'user' → logprob: -12.2548189163208
    5. 'yer' → logprob: -12.5048189163208
    6. '```' → logprob: -12.6298189163208
    7. 'ayer' → logprob: -13.0048189163208
    8. '[' → logprob: -13.7548189163208
    9. '   ' → logprob: -14.5048189163208
    10. ']' → logprob: -14.5048189163208

Token 1852: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.542423165636137e-05
    2. 'ist' → logprob: -9.625085830688477
    3. 'list' → logprob: -11.250085830688477
    4. 's' → logprob: -12.875085830688477
    5. '   ' → logprob: -13.875085830688477
    6. ']' → logprob: -14.750085830688477
    7. '
' → logprob: -15.000085830688477
    8. '[' → logprob: -15.250085830688477
    9. 'List' → logprob: -15.250085830688477
    10. '][' → logprob: -15.375085830688477

Token 1853: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7130507230758667
    2. ':
' → logprob: -1.2130507230758667
    3. '       ' → logprob: -1.5880507230758667
    4. '   ' → logprob: -5.338050842285156
    5. ':' → logprob: -6.088050842285156
    6. '):' → logprob: -7.463050842285156
    7. ']:
' → logprob: -7.838050842285156
    8. ')' → logprob: -10.213050842285156
    9. '```' → logprob: -10.338050842285156
    10. '():
' → logprob: -10.588050842285156

Token 1854: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03434315696358681
    2. '       ' → logprob: -4.284343242645264
    3. 'x' → logprob: -4.909343242645264
    4. '```' → logprob: -5.159343242645264
    5. 'rect' → logprob: -5.784343242645264
    6. 'r' → logprob: -5.784343242645264
    7. '``' → logprob: -7.784343242645264
    8. '(x' → logprob: -9.409342765808105
    9. ' x' → logprob: -9.659342765808105
    10. '
' → logprob: -10.784342765808105

Token 1855: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.005441027693450451
    2. '   ' → logprob: -5.255441188812256
    3. 'rect' → logprob: -9.630440711975098
    4. '       ' → logprob: -9.755440711975098
    5. '(x' → logprob: -9.755440711975098
    6. ' x' → logprob: -10.755440711975098
    7. 'r' → logprob: -12.505440711975098
    8. '	x' → logprob: -15.755440711975098
    9. '```' → logprob: -16.130441665649414
    10. '           ' → logprob: -16.255441665649414

Token 1856: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.739826181321405e-05
    2. '_' → logprob: -10.25004768371582
    3. '=' → logprob: -12.75004768371582
    4. '0' → logprob: -13.00004768371582
    5. '```' → logprob: -13.12504768371582
    6. '   ' → logprob: -13.37504768371582
    7. ' ' → logprob: -14.25004768371582
    8. '[' → logprob: -14.25004768371582
    9. '
' → logprob: -14.37504768371582
    10. ',' → logprob: -15.50004768371582

Token 1857: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0053053852170705795
    2. ',' → logprob: -5.255305290222168
    3. ',x' → logprob: -10.505305290222168
    4. ' ,' → logprob: -10.755305290222168
    5. ',
' → logprob: -10.880305290222168
    6. '```' → logprob: -13.380305290222168
    7. '   ' → logprob: -14.255305290222168
    8. ',Y' → logprob: -15.005305290222168
    9. ',w' → logprob: -15.630305290222168
    10. ',user' → logprob: -15.755305290222168

Token 1858: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010293578961864114
    2. ',' → logprob: -7.0010294914245605
    3. '=' → logprob: -9.876029014587402
    4. ',y' → logprob: -10.501029014587402
    5. ',x' → logprob: -10.626029014587402
    6. '   ' → logprob: -12.751029014587402
    7. '       ' → logprob: -13.251029014587402
    8. '<|end|>' → logprob: -13.251029014587402
    9. '```' → logprob: -13.251029014587402
    10. ' ' → logprob: -13.376029014587402

Token 1859: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.05725166201591492
    2. ',' → logprob: -2.9322516918182373
    3. ',y' → logprob: -6.307251453399658
    4. ' ,' → logprob: -8.557251930236816
    5. '=' → logprob: -8.932251930236816
    6. ',
' → logprob: -9.182251930236816
    7. ',w' → logprob: -9.682251930236816
    8. ',v' → logprob: -11.432251930236816
    9. '```' → logprob: -12.432251930236816
    10. ',z' → logprob: -12.557251930236816

Token 1860: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1807166188955307
    2. '1' → logprob: -1.805716633796692
    3. 'x' → logprob: -7.430716514587402
    4. ',x' → logprob: -8.430716514587402
    5. '0' → logprob: -9.430716514587402
    6. '=' → logprob: -10.430716514587402
    7. ' ' → logprob: -10.805716514587402
    8. ',' → logprob: -11.555716514587402
    9. '```' → logprob: -12.055716514587402
    10. '   ' → logprob: -12.180716514587402

Token 1861: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.004122569225728512
    2. ',' → logprob: -5.504122734069824
    3. '+' → logprob: -10.879122734069824
    4. ' ,' → logprob: -11.129122734069824
    5. ',x' → logprob: -11.879122734069824
    6. ',
' → logprob: -13.379122734069824
    7. '+,' → logprob: -13.879122734069824
    8. ' +' → logprob: -15.254122734069824
    9. '```' → logprob: -15.879122734069824
    10. ',z' → logprob: -16.129121780395508

Token 1862: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006730407476425171
    2. '1' → logprob: -5.006730556488037
    3. '0' → logprob: -11.756730079650879
    4. '```' → logprob: -12.756730079650879
    5. 'x' → logprob: -13.131730079650879
    6. ' ' → logprob: -14.006730079650879
    7. '   ' → logprob: -14.506730079650879
    8. 'y' → logprob: -15.006730079650879
    9. '=' → logprob: -15.881730079650879
    10. '3' → logprob: -16.381731033325195

Token 1863: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14261603355407715
    2. ' =' → logprob: -2.267616033554077
    3. ' for' → logprob: -4.142616271972656
    4. 'for' → logprob: -4.767616271972656
    5. '       ' → logprob: -5.642616271972656
    6. ',' → logprob: -7.642616271972656
    7. '   ' → logprob: -8.142616271972656
    8. '           ' → logprob: -8.517616271972656
    9. ')' → logprob: -9.392616271972656
    10. '<|end|>' → logprob: -9.767616271972656

Token 1864: ' sol' (ID: 1887)
  Prédit: 'sol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sol' → logprob: -2.141186450899113e-05
    2. ' sol' → logprob: -10.875020980834961
    3. 'solutions' → logprob: -13.750020980834961
    4. '   ' → logprob: -13.875020980834961
    5. 'assigned' → logprob: -15.875020980834961
    6. 'solution' → logprob: -16.50002098083496
    7. '(sol' → logprob: -16.50002098083496
    8. 'sal' → logprob: -18.12502098083496
    9. ' sols' → logprob: -18.12502098083496
    10. '_sol' → logprob: -18.87502098083496

Token 1865: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.03411460295319557
    2. '[x' → logprob: -3.5341145992279053
    3. '[' → logprob: -6.534114837646484
    4. '(idx' → logprob: -7.284114837646484
    5. '(x' → logprob: -7.659114837646484
    6. 'x' → logprob: -8.159114837646484
    7. '       ' → logprob: -8.409114837646484
    8. ',x' → logprob: -8.409114837646484
    9. '[
' → logprob: -8.534114837646484
    10. '   ' → logprob: -8.534114837646484

Token 1866: ']
' (ID: 1592)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.31499001383781433
    2. ',' → logprob: -1.3149900436401367
    3. '       ' → logprob: -6.814990043640137
    4. ' ,' → logprob: -8.314990043640137
    5. ',y' → logprob: -8.689990043640137
    6. '
' → logprob: -9.814990043640137
    7. ',w' → logprob: -9.814990043640137
    8. '           ' → logprob: -11.064990043640137
    9. ',
' → logprob: -11.064990043640137
    10. '   ' → logprob: -11.314990043640137

Token 1867: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024527073837816715
    2. '   ' → logprob: -6.377452850341797
    3. '```' → logprob: -7.502452850341797
    4. ' for' → logprob: -8.752452850341797
    5. '           ' → logprob: -10.752452850341797
    6. '``' → logprob: -11.502452850341797
    7. 'for' → logprob: -12.002452850341797
    8. ' ' → logprob: -14.127452850341797
    9. '	for' → logprob: -14.752452850341797
    10. '     ' → logprob: -15.002452850341797

Token 1868: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5846105813980103
    2. 'for' (adapté à ' for') → logprob: -0.8346105813980103
    3. '   ' → logprob: -5.334610462188721
    4. ' for' → logprob: -5.709610462188721
    5. '```' → logprob: -7.709610462188721
    6. '	for' → logprob: -10.584610939025879
    7. '           ' → logprob: -11.209610939025879
    8. '``' → logprob: -11.584610939025879
    9. '	   ' → logprob: -14.459610939025879
    10. ' ' → logprob: -15.209610939025879

Token 1869: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.48089340329170227
    2. ' y' → logprob: -1.2308933734893799
    3. 'x' → logprob: -2.48089337348938
    4. ' x' → logprob: -5.105893611907959
    5. '	y' → logprob: -12.2308931350708
    6. '   ' → logprob: -13.3558931350708
    7. '```' → logprob: -14.8558931350708
    8. ' ' → logprob: -14.8558931350708
    9. '    ' → logprob: -15.4808931350708
    10. '	x' → logprob: -15.4808931350708

Token 1870: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.27954593300819397
    2. 'in' → logprob: -1.5295459032058716
    3. 'y' → logprob: -3.654546022415161
    4. ' y' → logprob: -7.654545783996582
    5. '(y' → logprob: -7.779545783996582
    6. 'range' → logprob: -8.029545783996582
    7. '=y' → logprob: -9.904545783996582
    8. ',y' → logprob: -10.154545783996582
    9. '[y' → logprob: -10.904545783996582
    10. '   ' → logprob: -11.529545783996582

Token 1871: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.021337123587727547
    2. ' range' → logprob: -4.021337032318115
    3. 'y' → logprob: -5.771337032318115
    4. ' y' → logprob: -9.646337509155273
    5. '(range' → logprob: -14.021337509155273
    6. 'in' → logprob: -15.021337509155273
    7. '(y' → logprob: -15.021337509155273
    8. ' in' → logprob: -15.396337509155273
    9. '   ' → logprob: -17.271337509155273
    10. '_range' → logprob: -17.521337509155273

Token 1872: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.282920129597187e-05
    2. '(y' → logprob: -12.125012397766113
    3. ' y' → logprob: -12.500012397766113
    4. '=y' → logprob: -12.875012397766113
    5. '	y' → logprob: -14.875012397766113
    6. '0' → logprob: -15.375012397766113
    7. '[y' → logprob: -15.875012397766113
    8. '@y' → logprob: -16.00001335144043
    9. ',y' → logprob: -16.62501335144043
    10. '   ' → logprob: -17.12501335144043

Token 1873: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00045545989996753633
    2. 'y' → logprob: -7.750455379486084
    3. '```' → logprob: -11.750455856323242
    4. '=y' → logprob: -12.250455856323242
    5. ' y' → logprob: -13.125455856323242
    6. '   ' → logprob: -13.375455856323242
    7. '=' → logprob: -13.500455856323242
    8. '(y' → logprob: -13.750455856323242
    9. ',y' → logprob: -13.875455856323242
    10. 's' → logprob: -14.375455856323242

Token 1874: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.004323183558881283
    2. ',' → logprob: -5.5043230056762695
    3. ',x' → logprob: -8.37932300567627
    4. '       ' → logprob: -12.00432300567627
    5. ' ,' → logprob: -12.37932300567627
    6. ',
' → logprob: -13.12932300567627
    7. '(y' → logprob: -13.75432300567627
    8. '   ' → logprob: -14.50432300567627
    9. '```' → logprob: -14.87932300567627
    10. 'y' → logprob: -15.00432300567627

Token 1875: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.14781233668327332
    2. '2' → logprob: -2.2728123664855957
    3. '(y' → logprob: -4.272812366485596
    4. ',y' → logprob: -5.022812366485596
    5. '0' → logprob: -5.147812366485596
    6. '```' → logprob: -5.772812366485596
    7. ',' → logprob: -6.522812366485596
    8. ' y' → logprob: -6.522812366485596
    9. 'x' → logprob: -6.897812366485596
    10. '[y' → logprob: -9.022811889648438

Token 1876: '+' (ID: 10)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.2740812301635742
    2. ',x' → logprob: -1.8990812301635742
    3. ',' → logprob: -2.649081230163574
    4. '+' → logprob: -4.024081230163574
    5. 'x' → logprob: -8.024081230163574
    6. '       ' → logprob: -8.149081230163574
    7. '(x' → logprob: -8.274081230163574
    8. '(y' → logprob: -8.524081230163574
    9. '           ' → logprob: -9.399081230163574
    10. '```' → logprob: -9.774081230163574

Token 1877: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0041797831654548645
    2. '1' → logprob: -5.629179954528809
    3. '0' → logprob: -8.129179954528809
    4. '(x' → logprob: -8.254179954528809
    5. 'y' → logprob: -10.879179954528809
    6. '+' → logprob: -13.129179954528809
    7. ' x' → logprob: -13.254179954528809
    8. '2' → logprob: -14.504179954528809
    9. '+x' → logprob: -15.004179954528809
    10. '(' → logprob: -15.504179954528809

Token 1878: '):
' (ID: 1883)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24466216564178467
    2. ':
' → logprob: -1.7446621656417847
    3. ':' → logprob: -3.619662284851074
    4. '):
' → logprob: -4.744662284851074
    5. '       ' → logprob: -5.744662284851074
    6. '               ' → logprob: -5.994662284851074
    7. ',' → logprob: -7.869662284851074
    8. '          ' → logprob: -8.369662284851074
    9. '   ' → logprob: -9.619662284851074
    10. '):' → logprob: -9.619662284851074

Token 1879: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018880647839978337
    2. '               ' → logprob: -7.251888275146484
    3. ' for' → logprob: -7.751888275146484
    4. '```' → logprob: -7.751888275146484
    5. '       ' → logprob: -8.126888275146484
    6. 'for' → logprob: -11.251888275146484
    7. '   ' → logprob: -12.251888275146484
    8. '	       ' → logprob: -13.501888275146484
    9. '		' → logprob: -13.751888275146484
    10. '                   ' → logprob: -14.126888275146484

Token 1880: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7887257933616638
    2. 'for' (adapté à ' for') → logprob: -0.7887257933616638
    3. '           ' → logprob: -2.5387258529663086
    4. '               ' → logprob: -5.163725852966309
    5. '       ' → logprob: -5.663725852966309
    6. '```' → logprob: -5.913725852966309
    7. '   ' → logprob: -8.413725852966309
    8. '	for' → logprob: -10.538725852966309
    9. '		' → logprob: -10.788725852966309
    10. '	       ' → logprob: -11.538725852966309

Token 1881: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001170225441455841
    2. ' x' → logprob: -6.7511701583862305
    3. '```' → logprob: -20.001171112060547
    4. '	x' → logprob: -20.126171112060547
    5. '   ' → logprob: -21.501171112060547
    6. '(x' → logprob: -22.626171112060547
    7. '$x' → logprob: -22.876171112060547
    8. '_x' → logprob: -23.126171112060547
    9. '"x' → logprob: -23.626171112060547
    10. ''x' → logprob: -23.751171112060547

Token 1882: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12782293558120728
    2. 'in' → logprob: -2.1278228759765625
    3. '(x' → logprob: -7.7528228759765625
    4. ' (' → logprob: -8.252822875976562
    5. '           ' → logprob: -10.002822875976562
    6. '               ' → logprob: -10.002822875976562
    7. '(' → logprob: -10.627822875976562
    8. '```' → logprob: -10.877822875976562
    9. '1' → logprob: -11.877822875976562
    10. 'In' → logprob: -12.002822875976562

Token 1883: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09837544709444046
    2. ' range' → logprob: -2.5983755588531494
    3. 'x' → logprob: -4.34837532043457
    4. '(x' → logprob: -5.09837532043457
    5. ' x' → logprob: -8.47337532043457
    6. '(range' → logprob: -10.34837532043457
    7. 'in' → logprob: -11.84837532043457
    8. ' in' → logprob: -11.97337532043457
    9. '0' → logprob: -12.34837532043457
    10. '=x' → logprob: -13.47337532043457

Token 1884: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3134538531303406
    2. '(x' → logprob: -1.3134539127349854
    3. ' x' → logprob: -9.313453674316406
    4. '=x' → logprob: -9.688453674316406
    5. '           ' → logprob: -11.563453674316406
    6. '[x' → logprob: -12.063453674316406
    7. ' (' → logprob: -12.063453674316406
    8. '<x' → logprob: -12.188453674316406
    9. '```' → logprob: -13.063453674316406
    10. '               ' → logprob: -13.188453674316406

Token 1885: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1658955216407776
    2. '(x' → logprob: -2.165895462036133
    3. ')x' → logprob: -4.665895462036133
    4. ',x' → logprob: -4.915895462036133
    5. '=x' → logprob: -5.165895462036133
    6. '{x' → logprob: -5.665895462036133
    7. ' x' → logprob: -5.915895462036133
    8. '+x' → logprob: -6.290895462036133
    9. '           ' → logprob: -6.665895462036133
    10. '1' → logprob: -6.790895462036133

Token 1886: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.019943993538618088
    2. ',y' → logprob: -4.144944190979004
    3. ',' → logprob: -5.644944190979004
    4. '+' → logprob: -8.769944190979004
    5. ' ,' → logprob: -9.269944190979004
    6. '(x' → logprob: -9.644944190979004
    7. '```' → logprob: -11.019944190979004
    8. 'x' → logprob: -11.644944190979004
    9. '       ' → logprob: -12.269944190979004
    10. '+x' → logprob: -12.394944190979004

Token 1887: '2' (ID: 17)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.3270608186721802
    2. '+' → logprob: -2.2020606994628906
    3. 'x' → logprob: -2.4520606994628906
    4. ',x' → logprob: -2.9520606994628906
    5. ',' → logprob: -4.452060699462891
    6. 'y' → logprob: -4.702060699462891
    7. '1' → logprob: -5.827060699462891
    8. '```' → logprob: -6.077060699462891
    9. '2' → logprob: -6.702060699462891
    10. '       ' → logprob: -7.327060699462891

Token 1888: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010700009443098679
    2. '1' → logprob: -10.125106811523438
    3. ' +' → logprob: -11.000106811523438
    4. ',' → logprob: -11.125106811523438
    5. ',y' → logprob: -11.875106811523438
    6. '```' → logprob: -11.875106811523438
    7. '+x' → logprob: -12.000106811523438
    8. 'x' → logprob: -12.125106811523438
    9. ',x' → logprob: -12.500106811523438
    10. '2' → logprob: -13.000106811523438

Token 1889: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5761350989341736
    2. '1' → logprob: -0.8261350989341736
    3. '0' → logprob: -8.95113468170166
    4. '+' → logprob: -10.70113468170166
    5. ' x' → logprob: -10.95113468170166
    6. ' ' → logprob: -11.70113468170166
    7. '+x' → logprob: -12.82613468170166
    8. '(x' → logprob: -13.07613468170166
    9. '<x' → logprob: -13.20113468170166
    10. '2' → logprob: -13.32613468170166

Token 1890: '):
' (ID: 1883)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4007743000984192
    2. '=' → logprob: -1.7757742404937744
    3. ':
' → logprob: -2.4007742404937744
    4. '):
' → logprob: -3.1507742404937744
    5. ':' → logprob: -4.9007744789123535
    6. ' =' → logprob: -5.0257744789123535
    7. '):' → logprob: -5.2757744789123535
    8. '[' → logprob: -6.4007744789123535
    9. '                       ' → logprob: -6.7757744789123535
    10. '                   ' → logprob: -6.9007744789123535

Token 1891: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000850009499117732
    2. '                   ' → logprob: -8.625849723815918
    3. '```' → logprob: -8.625849723815918
    4. '           ' → logprob: -9.250849723815918
    5. '                               ' → logprob: -9.250849723815918
    6. 'grid' → logprob: -10.000849723815918
    7. '                       ' → logprob: -10.000849723815918
    8. ' grid' → logprob: -10.125849723815918
    9. '	           ' → logprob: -10.250849723815918
    10. '                           ' → logprob: -10.250849723815918

Token 1892: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.0015362853882834315
    2. ' grid' → logprob: -6.5015363693237305
    3. '                   ' → logprob: -10.62653636932373
    4. '	grid' → logprob: -11.75153636932373
    5. '   ' → logprob: -14.00153636932373
    6. '                       ' → logprob: -14.62653636932373
    7. '_grid' → logprob: -15.87653636932373
    8. '(grid' → logprob: -15.87653636932373
    9. '.grid' → logprob: -16.126535415649414
    10. '               ' → logprob: -16.126535415649414

Token 1893: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.0006079599261283875
    2. '[x' → logprob: -7.500607967376709
    3. '][' → logprob: -9.87560749053955
    4. '[' → logprob: -13.62560749053955
    5. '```' → logprob: -14.62560749053955
    6. '           ' → logprob: -14.87560749053955
    7. '               ' → logprob: -15.25060749053955
    8. ' [' → logprob: -15.50060749053955
    9. '[row' → logprob: -15.50060749053955
    10. '[idx' → logprob: -15.62560749053955

Token 1894: '][' (ID: 2696)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0434601791203022
    2. '][' → logprob: -3.1684601306915283
    3. '[idx' → logprob: -7.793460369110107
    4. '[' → logprob: -10.79345989227295
    5. ')[' → logprob: -12.29345989227295
    6. '```' → logprob: -12.41845989227295
    7. '=' → logprob: -12.66845989227295
    8. '=x' → logprob: -12.66845989227295
    9. ']' → logprob: -12.79345989227295
    10. '[
' → logprob: -13.54345989227295

Token 1895: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.896309739408025e-07
    2. ' x' → logprob: -14.125000953674316
    3. '	x' → logprob: -19.0
    4. '{x' → logprob: -19.0
    5. '(x' → logprob: -19.125
    6. ')x' → logprob: -19.25
    7. 'idx' → logprob: -19.625
    8. '[x' → logprob: -20.5
    9. '$x' → logprob: -20.5
    10. '"x' → logprob: -20.875

Token 1896: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029899979010224342
    2. ']=' → logprob: -4.154900074005127
    3. ' =' → logprob: -4.529900074005127
    4. ']' → logprob: -5.904900074005127
    5. '=b' → logprob: -8.404899597167969
    6. ')=' → logprob: -11.154899597167969
    7. ')' → logprob: -11.779899597167969
    8. '=
' → logprob: -12.154899597167969
    9. '                   ' → logprob: -13.529899597167969
    10. '               ' → logprob: -13.779899597167969

Token 1897: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0014684381894767284
    2. ' =' → logprob: -7.001468658447266
    3. '=b' → logprob: -7.501468658447266
    4. '=user' → logprob: -13.251468658447266
    5. '=int' → logprob: -13.876468658447266
    6. '=
' → logprob: -14.251468658447266
    7. '=s' → logprob: -15.876468658447266
    8. '=x' → logprob: -16.001468658447266
    9. '=item' → logprob: -16.626468658447266
    10. ']=' → logprob: -16.626468658447266

Token 1898: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003637726651504636
    2. 'buyer' → logprob: -5.628637790679932
    3. ' b' → logprob: -10.503637313842773
    4. ' buyer' → logprob: -12.253637313842773
    5. 'buyers' → logprob: -12.253637313842773
    6. 'buy' → logprob: -15.003637313842773
    7. '   ' → logprob: -16.003637313842773
    8. '	b' → logprob: -16.128637313842773
    9. 'user' → logprob: -17.503637313842773
    10. ' buyers' → logprob: -17.878637313842773

Token 1899: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4137095808982849
    2. '
' → logprob: -1.2887096405029297
    3. 'return' → logprob: -2.7887096405029297
    4. '    
' → logprob: -7.41370964050293
    5. '```' → logprob: -7.53870964050293
    6. ' return' → logprob: -8.03870964050293
    7. '<|end|>' → logprob: -9.53870964050293
    8. '	return' → logprob: -10.16370964050293
    9. ':return' → logprob: -11.16370964050293
    10. '`' → logprob: -11.28870964050293

Token 1900: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3623915910720825
    2. '
' → logprob: -1.3623915910720825
    3. 'return' → logprob: -3.112391471862793
    4. '```' → logprob: -5.737391471862793
    5. '    
' → logprob: -8.987391471862793
    6. ' return' → logprob: -9.612391471862793
    7. '
' → logprob: -11.362391471862793
    8. '`' → logprob: -11.987391471862793
    9. '       ' → logprob: -12.362391471862793
    10. '``' → logprob: -12.737391471862793

Token 1901: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006721178535372019
    2. 'return' (adapté à ' return') → logprob: -5.006721019744873
    3. ' return' → logprob: -12.631721496582031
    4. '```' → logprob: -13.131721496582031
    5. '
' → logprob: -15.006721496582031
    6. '    
' → logprob: -16.13172149658203
    7. '	return' → logprob: -16.63172149658203
    8. '       ' → logprob: -17.00672149658203
    9. '`' → logprob: -18.50672149658203
    10. 'def' → logprob: -19.25672149658203

Token 1902: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.0040785204619169235
    2. ' grid' → logprob: -5.504078388214111
    3. '(grid' → logprob: -17.379077911376953
    4. '   ' → logprob: -18.629077911376953
    5. '	grid' → logprob: -19.004077911376953
    6. '```' → logprob: -19.254077911376953
    7. 'graph' → logprob: -19.754077911376953
    8. '`' → logprob: -19.879077911376953
    9. '.grid' → logprob: -20.254077911376953
    10. 'Grid' → logprob: -20.754077911376953

Token 1903: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04153544828295708
    2. '<|end|>' → logprob: -3.6665353775024414
    3. '```' → logprob: -4.541535377502441
    4. 'import' → logprob: -5.791535377502441
    5. '
' → logprob: -7.541535377502441
    6. '#' → logprob: -7.666535377502441
    7. 'if' → logprob: -8.791535377502441
    8. '<|end|>' → logprob: -9.666535377502441
    9. 'for' → logprob: -9.791535377502441
    10. '\n' → logprob: -10.791535377502441

Token 1904: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34142935276031494
    2. '<|end|>' → logprob: -1.591429352760315
    3. '```' → logprob: -2.5914292335510254
    4. 'import' → logprob: -5.341429233551025
    5. '<|end|>' → logprob: -6.216429233551025
    6. '\n' → logprob: -6.966429233551025
    7. '#' → logprob: -7.341429233551025
    8. '``' → logprob: -7.591429233551025
    9. '
' → logprob: -7.716429233551025
    10. '\' → logprob: -8.091429710388184

Token 1905: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.70501708984375
    2. 'main' → logprob: -0.70501708984375
    3. '_main' → logprob: -4.45501708984375
    4. 'process' → logprob: -9.83001708984375
    5. 'def' → logprob: -10.20501708984375
    6. '```' → logprob: -10.95501708984375
    7. '	main' → logprob: -11.45501708984375
    8. 'solve' → logprob: -11.58001708984375
    9. '_code' → logprob: -11.95501708984375
    10. 'print' → logprob: -12.08001708984375

Token 1906: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0006410692585632205
    2. '():
' → logprob: -7.375640869140625
    3. ' ():' → logprob: -11.625640869140625
    4. '()' → logprob: -12.750640869140625
    5. '_' → logprob: -14.000640869140625
    6. ':' → logprob: -14.375640869140625
    7. '():
' → logprob: -14.375640869140625
    8. '()>' → logprob: -15.625640869140625
    9. '():

' → logprob: -15.625640869140625
    10. '(' → logprob: -16.500640869140625

Token 1907: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014812415465712547
    2. '```' → logprob: -4.514812469482422
    3. '
' → logprob: -6.639812469482422
    4. '    
' → logprob: -7.014812469482422
    5. 'import' → logprob: -7.139812469482422
    6. 'def' → logprob: -7.639812469482422
    7. '``' → logprob: -9.139812469482422
    8. '(' → logprob: -10.514812469482422
    9. '  
' → logprob: -10.889812469482422
    10. '    ' → logprob: -11.389812469482422

Token 1908: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' (adapté à ' datasets') → logprob: -0.5388091206550598
    2. '   ' → logprob: -0.9138091206550598
    3. ' datasets' → logprob: -4.663809299468994
    4. 'data' → logprob: -5.413809299468994
    5. '```' → logprob: -6.913809299468994
    6. 'import' → logprob: -8.913808822631836
    7. ' lines' → logprob: -8.913808822631836
    8. 'lines' → logprob: -9.288808822631836
    9. 'd' → logprob: -9.288808822631836
    10. ' data' → logprob: -10.163808822631836

Token 1909: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001741935731843114
    2. ' =' → logprob: -7.376741886138916
    3. '=' → logprob: -8.001742362976074
    4. '[:]' → logprob: -8.126742362976074
    5. '()
' → logprob: -9.251742362976074
    6. '().' → logprob: -9.751742362976074
    7. '=[]' → logprob: -10.001742362976074
    8. ':' → logprob: -10.126742362976074
    9. '   ' → logprob: -10.126742362976074
    10. '():' → logprob: -10.126742362976074

Token 1910: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0002624086628202349
    2. ' parse' → logprob: -8.250262260437012
    3. '[]' → logprob: -14.250262260437012
    4. '(parse' → logprob: -15.125262260437012
    5. '=parse' → logprob: -16.250263214111328
    6. '	parse' → logprob: -16.500263214111328
    7. '.parse' → logprob: -17.750263214111328
    8. '[]
' → logprob: -18.875263214111328
    9. '   ' → logprob: -19.375263214111328
    10. 'datasets' → logprob: -19.500263214111328

Token 1911: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.961759259458631e-06
    2. '_inputs' → logprob: -13.000004768371582
    3. '_' → logprob: -13.375004768371582
    4. '_output' → logprob: -15.375004768371582
    5. '(_' → logprob: -15.500004768371582
    6. 'input' → logprob: -15.750004768371582
    7. '_in' → logprob: -16.2500057220459
    8. '_data' → logprob: -16.3750057220459
    9. '_d' → logprob: -16.7500057220459
    10. '(' → logprob: -16.8750057220459

Token 1912: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00013119110371917486
    2. '()
' → logprob: -9.000131607055664
    3. '[]' → logprob: -12.875131607055664
    4. '()[' → logprob: -13.250131607055664
    5. '()`' → logprob: -13.750131607055664
    6. '()

' → logprob: -14.625131607055664
    7. '();' → logprob: -14.750131607055664
    8. '()\' → logprob: -15.000131607055664
    9. '()
' → logprob: -15.375131607055664
    10. '()]' → logprob: -15.625131607055664

Token 1913: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004590922966599464
    2. 'for' → logprob: -5.50459098815918
    3. ' for' → logprob: -7.62959098815918
    4. '```' → logprob: -10.62959098815918
    5. '	for' → logprob: -13.87959098815918
    6. '    
' → logprob: -14.25459098815918
    7. '
' → logprob: -15.12959098815918
    8. '       ' → logprob: -16.12959098815918
    9. '``' → logprob: -16.25459098815918
    10. '<|end|>' → logprob: -16.62959098815918

Token 1914: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0013344056205824018
    2. '   ' → logprob: -6.751334190368652
    3. ' for' → logprob: -8.751334190368652
    4. '```' → logprob: -12.126334190368652
    5. '	for' → logprob: -15.126334190368652
    6. '
' → logprob: -15.501334190368652
    7. '``' → logprob: -16.62633514404297
    8. '    
' → logprob: -17.37633514404297
    9. ' ' → logprob: -17.75133514404297
    10. '`' → logprob: -19.75133514404297

Token 1915: ' data' (ID: 1238)
  Prédit: ' dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dataset' → logprob: -0.23324976861476898
    2. 'dataset' → logprob: -1.6082497835159302
    3. '(X' → logprob: -5.858249664306641
    4. ' X' → logprob: -6.233249664306641
    5. 'X' → logprob: -6.483249664306641
    6. '   ' → logprob: -7.358249664306641
    7. ' data' → logprob: -8.23324966430664
    8. ' (' → logprob: -8.98324966430664
    9. ' ' → logprob: -9.10824966430664
    10. 'data' → logprob: -9.23324966430664

Token 1916: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5581738948822021
    2. ' in' → logprob: -0.9331738948822021
    3. ':' → logprob: -4.683174133300781
    4. ',' → logprob: -5.308174133300781
    5. '   ' → logprob: -5.433174133300781
    6. '_in' → logprob: -5.683174133300781
    7. ':
' → logprob: -5.808174133300781
    8. '[' → logprob: -5.933174133300781
    9. '_' → logprob: -6.183174133300781
    10. '       ' → logprob: -6.433174133300781

Token 1917: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -0.00048143533058464527
    2. ' datasets' → logprob: -7.875481605529785
    3. 'data' → logprob: -9.375481605529785
    4. 'parse' → logprob: -12.500481605529785
    5. 'dataset' → logprob: -12.625481605529785
    6. '(d' → logprob: -13.250481605529785
    7. '(X' → logprob: -13.625481605529785
    8. '(' → logprob: -13.750481605529785
    9. '   ' → logprob: -14.250481605529785
    10. 'dat' → logprob: -14.250481605529785

Token 1918: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.0016939640045166
    2. ':' → logprob: -1.1266939640045166
    3. '       ' → logprob: -1.5016939640045166
    4. ',' → logprob: -3.5016939640045166
    5. '():
' → logprob: -3.6266939640045166
    6. '(' → logprob: -4.6266937255859375
    7. ' (' → logprob: -5.7516937255859375
    8. '   ' → logprob: -5.7516937255859375
    9. '[' → logprob: -6.0016937255859375
    10. '(
' → logprob: -6.0016937255859375

Token 1919: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07984591275453568
    2. '   ' → logprob: -2.704845905303955
    3. '```' → logprob: -4.954845905303955
    4. '        
' → logprob: -6.579845905303955
    5. '    
' → logprob: -7.954845905303955
    6. '`' → logprob: -8.204846382141113
    7. '(' → logprob: -8.454846382141113
    8. 'def' → logprob: -9.079846382141113
    9. '<|end|>' → logprob: -9.704846382141113
    10. '
' → logprob: -9.829846382141113

Token 1920: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.12051363289356232
    2. 'grid' → logprob: -2.995513677597046
    3. '       ' → logprob: -3.120513677597046
    4. 'result' → logprob: -4.370513439178467
    5. '(X' → logprob: -5.870513439178467
    6. ' X' → logprob: -6.370513439178467
    7. '   ' → logprob: -6.870513439178467
    8. 'res' → logprob: -7.495513439178467
    9. ' grid' → logprob: -8.245513916015625
    10. '```' → logprob: -8.620513916015625

Token 1921: ',Y' (ID: 71464)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012627330143004656
    2. ',Y' → logprob: -7.376262664794922
    3. ' ,' → logprob: -8.376262664794922
    4. ',X' → logprob: -9.251262664794922
    5. ',y' → logprob: -9.501262664794922
    6. '   ' → logprob: -9.876262664794922
    7. ',
' → logprob: -10.001262664794922
    8. ',n' → logprob: -10.501262664794922
    9. '       ' → logprob: -10.626262664794922
    10. ',k' → logprob: -11.251262664794922

Token 1922: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00853336974978447
    2. ',n' → logprob: -4.883533477783203
    3. ',k' → logprob: -8.008533477783203
    4. ' ,' → logprob: -9.133533477783203
    5. ',data' → logprob: -9.133533477783203
    6. ',w' → logprob: -9.383533477783203
    7. ',b' → logprob: -9.758533477783203
    8. ',user' → logprob: -10.258533477783203
    9. ',
' → logprob: -10.883533477783203
    10. ',x' → logprob: -11.008533477783203

Token 1923: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01953093893826008
    2. ',b' → logprob: -4.019530773162842
    3. ',k' → logprob: -7.519530773162842
    4. '=' → logprob: -8.39453125
    5. ',X' → logprob: -9.39453125
    6. ' ,' → logprob: -9.51953125
    7. ',n' → logprob: -9.64453125
    8. ',x' → logprob: -9.89453125
    9. ',data' → logprob: -10.01953125
    10. ',d' → logprob: -10.26953125

Token 1924: 'uy' (ID: 3731)
  Prédit: 'uy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uy' → logprob: -2.045823566731997e-05
    2. 'uyer' → logprob: -11.375020027160645
    3. 'buyers' → logprob: -11.750020027160645
    4. 'u' → logprob: -14.625020027160645
    5. 'yers' → logprob: -15.125020027160645
    6. 'uye' → logprob: -16.25002098083496
    7. 'ayers' → logprob: -16.25002098083496
    8. 'uyen' → logprob: -16.75002098083496
    9. '_buy' → logprob: -17.12502098083496
    10. 'uyi' → logprob: -18.87502098083496

Token 1925: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -2.3438327843905427e-05
    2. ',' → logprob: -11.00002384185791
    3. '```' → logprob: -12.75002384185791
    4. ' ers' → logprob: -14.37502384185791
    5. '[' → logprob: -14.62502384185791
    6. 'er' → logprob: -14.75002384185791
    7. '
' → logprob: -14.75002384185791
    8. '_' → logprob: -15.00002384185791
    9. 'ersa' → logprob: -15.12502384185791
    10. ' ' → logprob: -15.75002384185791

Token 1926: ',s' (ID: 20379)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027299558743834496
    2. '=' → logprob: -3.652299642562866
    3. ' =' → logprob: -7.777299404144287
    4. ',b' → logprob: -9.152299880981445
    5. '       ' → logprob: -9.402299880981445
    6. ',s' → logprob: -9.527299880981445
    7. '   ' → logprob: -10.027299880981445
    8. ',n' → logprob: -10.152299880981445
    9. ' ,' → logprob: -10.402299880981445
    10. ',x' → logprob: -11.277299880981445

Token 1927: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14298683404922485
    2. ' =' → logprob: -2.01798677444458
    3. ',' → logprob: -8.642987251281738
    4. '   ' → logprob: -9.767987251281738
    5. '       ' → logprob: -10.767987251281738
    6. '=
' → logprob: -11.392987251281738
    7. ')' → logprob: -12.142987251281738
    8. '        ' → logprob: -12.267987251281738
    9. '_' → logprob: -12.267987251281738
    10. '[' → logprob: -12.392987251281738

Token 1928: ' data' (ID: 1238)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0006229649879969656
    2. ' solve' → logprob: -7.625622749328613
    3. 'data' → logprob: -9.000622749328613
    4. '   ' → logprob: -12.000622749328613
    5. ' data' → logprob: -13.125622749328613
    6. '       ' → logprob: -13.125622749328613
    7. '.solve' → logprob: -14.375622749328613
    8. '(s' → logprob: -15.500622749328613
    9. 'parse' → logprob: -15.750622749328613
    10. 's' → logprob: -15.875622749328613

Token 1929: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00953223928809166
    2. '
' → logprob: -6.009532451629639
    3. '<|end|>' → logprob: -6.009532451629639
    4. '   ' → logprob: -6.384532451629639
    5. '        
' → logprob: -6.509532451629639
    6. ',' → logprob: -7.634532451629639
    7. '<|end|>' → logprob: -7.884532451629639
    8. ':
' → logprob: -8.38453197479248
    9. '    
' → logprob: -9.13453197479248
    10. ':' → logprob: -10.00953197479248

Token 1930: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012616653926670551
    2. '   ' → logprob: -4.3876166343688965
    3. '```' → logprob: -10.012617111206055
    4. '        
' → logprob: -10.637617111206055
    5. '<|end|>' → logprob: -11.512617111206055
    6. '
' → logprob: -11.762617111206055
    7. '    
' → logprob: -12.887617111206055
    8. '           ' → logprob: -12.887617111206055
    9. ',' → logprob: -13.012617111206055
    10. '`' → logprob: -13.262617111206055

Token 1931: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.30445796251296997
    2. 'res' (adapté à ' res') → logprob: -2.054457902908325
    3. 'grid' → logprob: -2.054457902908325
    4. '       ' → logprob: -5.179458141326904
    5. '   ' → logprob: -8.429457664489746
    6. 'solution' → logprob: -8.679457664489746
    7. 'ans' → logprob: -9.554457664489746
    8. ' result' → logprob: -11.304457664489746
    9. 'answer' → logprob: -11.304457664489746
    10. ' grid' → logprob: -11.429457664489746

Token 1932: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2386236935853958
    2. '=' → logprob: -1.6136237382888794
    3. 'ult' → logprob: -4.48862361907959
    4. 'ults' → logprob: -7.11362361907959
    5. '=res' → logprob: -7.23862361907959
    6. 's' → logprob: -8.36362361907959
    7. '   ' → logprob: -10.73862361907959
    8. 'ultat' → logprob: -11.48862361907959
    9. '```' → logprob: -11.73862361907959
    10. '​' → logprob: -11.98862361907959

Token 1933: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0031777136027812958
    2. ' solve' → logprob: -5.753177642822266
    3. '.solve' → logprob: -17.753177642822266
    4. '   ' → logprob: -18.003177642822266
    5. '```' → logprob: -20.378177642822266
    6. 'resolve' → logprob: -20.628177642822266
    7. '(s' → logprob: -20.628177642822266
    8. '
' → logprob: -21.003177642822266
    9. 'solver' → logprob: -21.128177642822266
    10. 'check' → logprob: -21.628177642822266

Token 1934: '_dataset' (ID: 40568)
  Prédit: '_dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dataset' → logprob: -7.3458322731312364e-06
    2. '(dataset' → logprob: -13.125007629394531
    3. '_' → logprob: -13.250007629394531
    4. 'Dataset' → logprob: -13.375007629394531
    5. 'dataset' → logprob: -13.875007629394531
    6. '_data' → logprob: -14.625007629394531
    7. '\' → logprob: -15.500007629394531
    8. 'res' → logprob: -16.37500762939453
    9. '(_' → logprob: -16.50000762939453
    10. 'ataset' → logprob: -16.87500762939453

Token 1935: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.03432749584317207
    2. '(' → logprob: -3.409327507019043
    3. '(
' → logprob: -8.034327507019043
    4. '(res' → logprob: -9.159327507019043
    5. '((' → logprob: -9.659327507019043
    6. '(data' → logprob: -9.784327507019043
    7. '(*' → logprob: -9.784327507019043
    8. ' (' → logprob: -10.159327507019043
    9. '(None' → logprob: -11.409327507019043
    10. '(x' → logprob: -12.159327507019043

Token 1936: ',Y' (ID: 71464)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.252081960439682
    2. ',Y' → logprob: -1.5020819902420044
    3. ' ,' → logprob: -9.002081871032715
    4. ',y' → logprob: -11.377081871032715
    5. '       ' → logprob: -11.627081871032715
    6. ',res' → logprob: -13.377081871032715
    7. '   ' → logprob: -13.627081871032715
    8. ',S' → logprob: -14.252081871032715
    9. ',Z' → logprob: -14.377081871032715
    10. ',
' → logprob: -14.502081871032715

Token 1937: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31395596265792847
    2. ',n' → logprob: -1.3139560222625732
    3. ',Y' → logprob: -7.313955783843994
    4. ' ,' → logprob: -11.063956260681152
    5. '       ' → logprob: -12.688956260681152
    6. ',N' → logprob: -13.063956260681152
    7. ',y' → logprob: -13.563956260681152
    8. 'n' → logprob: -13.563956260681152
    9. '   ' → logprob: -14.063956260681152
    10. ',
' → logprob: -14.313956260681152

Token 1938: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1827482283115387
    2. ',n' → logprob: -1.9327481985092163
    3. ',b' → logprob: -3.807748317718506
    4. ',res' → logprob: -9.932747840881348
    5. ',
' → logprob: -11.932747840881348
    6. ',s' → logprob: -12.182747840881348
    7. ' ,' → logprob: -12.432747840881348
    8. '       ' → logprob: -13.307747840881348
    9. ',user' → logprob: -13.557747840881348
    10. '`,' → logprob: -13.807747840881348

Token 1939: 'uy' (ID: 3731)
  Prédit: 'uy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uy' → logprob: -0.0007381578907370567
    2. 'yers' → logprob: -7.250738143920898
    3. 'uyer' → logprob: -11.125738143920898
    4. 'buyers' → logprob: -11.625738143920898
    5. 'ayers' → logprob: -13.750738143920898
    6. 'uers' → logprob: -13.875738143920898
    7. 'u' → logprob: -14.000738143920898
    8. 'yer' → logprob: -14.875738143920898
    9. 'users' → logprob: -15.375738143920898
    10. '   ' → logprob: -15.625738143920898

Token 1940: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.016059940680861473
    2. 'yers' → logprob: -4.141059875488281
    3. '```' → logprob: -11.016059875488281
    4. '[' → logprob: -13.516059875488281
    5. 'buyers' → logprob: -13.516059875488281
    6. 'sers' → logprob: -13.891059875488281
    7. '_' → logprob: -14.266059875488281
    8. 'ayers' → logprob: -14.516059875488281
    9. '{' → logprob: -14.766059875488281
    10. '``' → logprob: -14.766059875488281

Token 1941: ',s' (ID: 20379)
  Prédit: ',s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',s' → logprob: -0.10022328048944473
    2. ',' → logprob: -2.3502233028411865
    3. ',res' → logprob: -11.850223541259766
    4. ' ,' → logprob: -12.850223541259766
    5. '       ' → logprob: -13.475223541259766
    6. '   ' → logprob: -13.850223541259766
    7. ',n' → logprob: -14.475223541259766
    8. ',b' → logprob: -14.600223541259766
    9. ',",' → logprob: -15.100223541259766
    10. '```' → logprob: -15.100223541259766

Token 1942: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.11666794121265411
    2. '       ' → logprob: -2.3666679859161377
    3. ')' → logprob: -4.116667747497559
    4. ')
' → logprob: -11.366667747497559
    5. ',' → logprob: -12.366667747497559
    6. '
' → logprob: -12.741667747497559
    7. '   ' → logprob: -12.741667747497559
    8. '```' → logprob: -14.366667747497559
    9. '               ' → logprob: -14.491667747497559
    10. '	' → logprob: -14.616667747497559

Token 1943: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025379674043506384
    2. '   ' → logprob: -6.002538204193115
    3. ' if' → logprob: -10.377537727355957
    4. 'if' → logprob: -10.627537727355957
    5. '```' → logprob: -12.002537727355957
    6. '           ' → logprob: -14.877537727355957
    7. '<|end|>' → logprob: -16.502538681030273
    8. '	if' → logprob: -16.752538681030273
    9. '``' → logprob: -16.877538681030273
    10. '`' → logprob: -17.127538681030273

Token 1944: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0030314286705106497
    2. '       ' → logprob: -6.503031253814697
    3. ' if' → logprob: -6.503031253814697
    4. '   ' → logprob: -10.503031730651855
    5. '	if' → logprob: -13.503031730651855
    6. '```' → logprob: -16.50303077697754
    7. '
' → logprob: -17.37803077697754
    8. '	' → logprob: -17.62803077697754
    9. '           ' → logprob: -18.12803077697754
    10. 'If' → logprob: -18.50303077697754

Token 1945: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.06196959316730499
    2. 'res' → logprob: -2.811969518661499
    3. ' not' → logprob: -13.561969757080078
    4. '(res' → logprob: -14.936969757080078
    5. '_res' → logprob: -16.561969757080078
    6. '	res' → logprob: -16.561969757080078
    7. ' ' → logprob: -17.186969757080078
    8. '    ' → logprob: -17.186969757080078
    9. '   ' → logprob: -17.936969757080078
    10. 'not' → logprob: -18.186969757080078

Token 1946: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.006005232688039541
    2. 'is' → logprob: -5.38100528717041
    3. ' ==' → logprob: -7.00600528717041
    4. '==' → logprob: -8.00600528717041
    5. '[' → logprob: -9.25600528717041
    6. '```' → logprob: -11.13100528717041
    7. ')' → logprob: -12.00600528717041
    8. '	is' → logprob: -12.25600528717041
    9. '   ' → logprob: -12.50600528717041
    10. ':' → logprob: -12.88100528717041

Token 1947: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04156095162034035
    2. 'not' → logprob: -3.2915608882904053
    3. ' None' → logprob: -6.291561126708984
    4. ' not' → logprob: -6.416561126708984
    5. '   ' → logprob: -10.666561126708984
    6. '```' → logprob: -13.166561126708984
    7. 'Not' → logprob: -14.041561126708984
    8. '_None' → logprob: -14.916561126708984
    9. '``' → logprob: -15.791561126708984
    10. '(None' → logprob: -15.791561126708984

Token 1948: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1101626381278038
    2. ':
' → logprob: -2.8601627349853516
    3. ':' → logprob: -3.2351627349853516
    4. ' or' → logprob: -5.735162734985352
    5. '       ' → logprob: -6.235162734985352
    6. '               ' → logprob: -6.860162734985352
    7. 'print' → logprob: -7.360162734985352
    8. '                       ' → logprob: -8.985162734985352
    9. ' print' → logprob: -8.985162734985352
    10. '          ' → logprob: -9.235162734985352

Token 1949: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.3451433409936726e-05
    2. 'print' → logprob: -10.750033378601074
    3. '       ' → logprob: -11.625033378601074
    4. '               ' → logprob: -13.250033378601074
    5. '```' → logprob: -14.500033378601074
    6. ' print' → logprob: -14.875033378601074
    7. '	       ' → logprob: -15.625033378601074
    8. '		' → logprob: -16.25003433227539
    9. '   ' → logprob: -16.37503433227539
    10. '                   ' → logprob: -17.37503433227539

Token 1950: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0465083047747612
    2. '       ' → logprob: -3.796508312225342
    3. '           ' → logprob: -3.796508312225342
    4. ' print' → logprob: -7.546508312225342
    5. '   ' → logprob: -11.421507835388184
    6. '```' → logprob: -12.921507835388184
    7. '               ' → logprob: -13.171507835388184
    8. '	print' → logprob: -13.796507835388184
    9. 'continue' → logprob: -14.546507835388184
    10. '	       ' → logprob: -16.2965087890625

Token 1951: '("' (ID: 568)
  Prédit: 'NA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.028266875073313713
    2. '("' → logprob: -4.278266906738281
    3. '"' → logprob: -5.403266906738281
    4. '('' → logprob: -5.403266906738281
    5. 'No' → logprob: -6.403266906738281
    6. '(' → logprob: -6.903266906738281
    7. ''' → logprob: -7.403266906738281
    8. ' NA' → logprob: -7.653266906738281
    9. 'NO' → logprob: -7.778266906738281
    10. 'N' → logprob: -8.653266906738281

Token 1952: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -1.0683535037969705e-05
    2. 'No' → logprob: -12.37501049041748
    3. 'NO' → logprob: -12.50001049041748
    4. 'N' → logprob: -13.87501049041748
    5. ' NA' → logprob: -14.37501049041748
    6. 'None' → logprob: -15.37501049041748
    7. 'Na' → logprob: -15.50001049041748
    8. '"' → logprob: -15.50001049041748
    9. 'NONE' → logprob: -15.87501049041748
    10. 'na' → logprob: -16.250011444091797

Token 1953: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.003228098386898637
    2. '")
' → logprob: -5.753228187561035
    3. '")
' → logprob: -10.503228187561035
    4. ')")' → logprob: -11.378228187561035
    5. ')")
' → logprob: -11.878228187561035
    6. ')' → logprob: -12.503228187561035
    7. '"' → logprob: -14.128228187561035
    8. '");' → logprob: -17.37822723388672
    9. '")}
' → logprob: -17.37822723388672
    10. '}")' → logprob: -17.62822723388672

Token 1954: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019308974733576179
    2. '           ' → logprob: -6.2519307136535645
    3. '```' → logprob: -13.876931190490723
    4. 'else' → logprob: -14.126931190490723
    5. '   ' → logprob: -15.251931190490723
    6. ' else' → logprob: -16.251930236816406
    7. '	' → logprob: -16.251930236816406
    8. 'continue' → logprob: -16.376930236816406
    9. '               ' → logprob: -17.251930236816406
    10. '<|end|>' → logprob: -18.376930236816406

Token 1955: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007729397038929164
    2. '           ' → logprob: -7.500772953033447
    3. 'else' (adapté à ' else') → logprob: -8.625772476196289
    4. '   ' → logprob: -10.750772476196289
    5. '```' → logprob: -11.625772476196289
    6. ' else' → logprob: -11.750772476196289
    7. '	' → logprob: -14.000772476196289
    8. 'continue' → logprob: -14.625772476196289
    9. 'elif' → logprob: -15.250772476196289
    10. '               ' → logprob: -15.625772476196289

Token 1956: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001489388756453991
    2. ':
' → logprob: -6.876489162445068
    3. ':' → logprob: -7.876489162445068
    4. ' for' → logprob: -10.501489639282227
    5. '	       ' → logprob: -11.126489639282227
    6. '		' → logprob: -11.251489639282227
    7. '```' → logprob: -12.251489639282227
    8. '               ' → logprob: -12.626489639282227
    9. ',' → logprob: -12.626489639282227
    10. '       ' → logprob: -13.001489639282227

Token 1957: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007938655093312263
    2. '       ' → logprob: -5.007938861846924
    3. '   ' → logprob: -7.382938861846924
    4. ' for' → logprob: -7.507938861846924
    5. 'for' → logprob: -10.507938385009766
    6. '```' → logprob: -11.257938385009766
    7. '               ' → logprob: -11.882938385009766
    8. '	       ' → logprob: -13.257938385009766
    9. '         ' → logprob: -13.757938385009766
    10. '		' → logprob: -15.132938385009766

Token 1958: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.13495203852653503
    2. '           ' → logprob: -2.1349520683288574
    3. ' for' → logprob: -4.884952068328857
    4. '       ' → logprob: -8.6349515914917
    5. '               ' → logprob: -8.6349515914917
    6. '   ' → logprob: -9.5099515914917
    7. '	for' → logprob: -13.5099515914917
    8. '                   ' → logprob: -13.8849515914917
    9. ' ' → logprob: -15.6349515914917
    10. '                       ' → logprob: -16.384952545166016

Token 1959: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.8385668992996216
    2. 'y' → logprob: -1.5885668992996216
    3. ' row' → logprob: -1.5885668992996216
    4. 'row' → logprob: -1.8385668992996216
    5. '   ' → logprob: -8.588566780090332
    6. ' ' → logprob: -13.588566780090332
    7. 'line' → logprob: -14.838566780090332
    8. '       ' → logprob: -15.213566780090332
    9. '	row' → logprob: -15.338566780090332
    10. '    ' → logprob: -15.463566780090332

Token 1960: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01604093797504902
    2. 'in' → logprob: -4.141040802001953
    3. '```' → logprob: -13.766040802001953
    4. '   ' → logprob: -13.891040802001953
    5. '           ' → logprob: -14.391040802001953
    6. '       ' → logprob: -14.641040802001953
    7. ')' → logprob: -14.641040802001953
    8. ' ' → logprob: -14.766040802001953
    9. ',' → logprob: -14.766040802001953
    10. 'In' → logprob: -15.266040802001953

Token 1961: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019868058152496815
    2. ' range' → logprob: -6.251986980438232
    3. 'res' → logprob: -9.751986503601074
    4. '
' → logprob: -17.62698745727539
    5. '(range' → logprob: -18.25198745727539
    6. '   ' → logprob: -18.62698745727539
    7. ' res' → logprob: -19.12698745727539
    8. 'row' → logprob: -19.62698745727539
    9. '0' → logprob: -19.62698745727539
    10. '	range' → logprob: -20.12698745727539

Token 1962: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.014280211180448532
    2. 'Y' → logprob: -4.264280319213867
    3. '(' → logprob: -9.264280319213867
    4. ')' → logprob: -12.014280319213867
    5. '   ' → logprob: -12.639280319213867
    6. '(X' → logprob: -12.889280319213867
    7. '           ' → logprob: -13.014280319213867
    8. ' Y' → logprob: -13.264280319213867
    9. '0' → logprob: -13.639280319213867
    10. '
' → logprob: -13.764280319213867

Token 1963: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01000893022865057
    2. '):' → logprob: -4.635008811950684
    3. '   ' → logprob: -9.135008811950684
    4. '       ' → logprob: -10.135008811950684
    5. ':
' → logprob: -10.760008811950684
    6. '):
' → logprob: -10.760008811950684
    7. '           ' → logprob: -11.010008811950684
    8. ':' → logprob: -11.385008811950684
    9. '():
' → logprob: -11.885008811950684
    10. '+' → logprob: -11.885008811950684

Token 1964: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001373445731587708
    2. '```' → logprob: -6.876373291015625
    3. ' print' → logprob: -8.751373291015625
    4. '   ' → logprob: -9.251373291015625
    5. '	           ' → logprob: -10.626373291015625
    6. 'print' → logprob: -11.126373291015625
    7. '       ' → logprob: -11.501373291015625
    8. '           ' → logprob: -11.626373291015625
    9. '                   ' → logprob: -11.751373291015625
    10. '`' → logprob: -12.501373291015625

Token 1965: ' print' (ID: 2123)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8877487182617188
    2. ' print' → logprob: -1.2627487182617188
    3. 'print' (adapté à ' print') → logprob: -1.5127487182617188
    4. '   ' → logprob: -2.6377487182617188
    5. '                   ' → logprob: -4.762748718261719
    6. '           ' → logprob: -6.512748718261719
    7. '       ' → logprob: -6.637748718261719
    8. ' for' → logprob: -7.137748718261719
    9. ' ' → logprob: -7.137748718261719
    10. 'for' → logprob: -8.012748718261719

Token 1966: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.05760396271944046
    2. '("' → logprob: -3.0576040744781494
    3. '"' → logprob: -5.55760383605957
    4. ''' → logprob: -5.80760383605957
    5. '(' → logprob: -6.18260383605957
    6. '(*' → logprob: -10.68260383605957
    7. ' ('' → logprob: -11.43260383605957
    8. ' ("' → logprob: -11.80760383605957
    9. ' '' → logprob: -12.55760383605957
    10. '*' → logprob: -13.80760383605957

Token 1967: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3869839906692505
    2. ''' → logprob: -1.1369839906692505
    3. ' "' → logprob: -9.761983871459961
    4. ' '' → logprob: -10.011983871459961
    5. '('' → logprob: -12.386983871459961
    6. '''.' → logprob: -13.261983871459961
    7. '("' → logprob: -13.761983871459961
    8. ' "".' → logprob: -14.011983871459961
    9. '""' → logprob: -14.386983871459961
    10. ' ''.' → logprob: -15.011983871459961

Token 1968: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.00026848804554902017
    2. '.join' → logprob: -8.250268936157227
    3. '".' → logprob: -12.875268936157227
    4. ' join' → logprob: -13.000268936157227
    5. ''.' → logprob: -14.000268936157227
    6. '.' → logprob: -14.250268936157227
    7. 'res' → logprob: -14.625268936157227
    8. 'print' → logprob: -15.250268936157227
    9. '```' → logprob: -16.875268936157227
    10. 'jo' → logprob: -17.250268936157227

Token 1969: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.10277857631444931
    2. '(map' → logprob: -2.352778673171997
    3. 'str' → logprob: -6.352778434753418
    4. 'map' → logprob: -7.352778434753418
    5. '[str' → logprob: -8.602778434753418
    6. ' map' → logprob: -13.852778434753418
    7. '=str' → logprob: -14.852778434753418
    8. '(' → logprob: -14.977778434753418
    9. ' str' → logprob: -15.352778434753418
    10. '	str' → logprob: -15.602778434753418

Token 1970: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00010807292710524052
    2. '(cell' → logprob: -9.250107765197754
    3. '(x' → logprob: -12.375107765197754
    4. '(c' → logprob: -12.375107765197754
    5. '(grid' → logprob: -13.000107765197754
    6. '(' → logprob: -14.875107765197754
    7. 'res' → logprob: -14.875107765197754
    8. '(v' → logprob: -15.500107765197754
    9. '(e' → logprob: -16.37510871887207
    10. '(i' → logprob: -16.50010871887207

Token 1971: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -3.128163257315464e-07
    2. 'y' → logprob: -16.0
    3. '(y' → logprob: -16.875
    4. '[' → logprob: -17.375
    5. '[Y' → logprob: -17.5
    6. 'res' → logprob: -17.75
    7. '[x' → logprob: -18.25
    8. '[j' → logprob: -18.625
    9. '[u' → logprob: -18.875
    10. '```' → logprob: -19.5

Token 1972: '][' (ID: 2696)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.006770195439457893
    2. '][' → logprob: -5.006770133972168
    3. 'x' → logprob: -10.006770133972168
    4. '[' → logprob: -12.881770133972168
    5. ')[' → logprob: -13.256770133972168
    6. '   ' → logprob: -13.631770133972168
    7. ']' → logprob: -14.506770133972168
    8. '       ' → logprob: -14.631770133972168
    9. ')x' → logprob: -14.631770133972168
    10. '[y' → logprob: -14.631770133972168

Token 1973: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.512236498361744e-07
    2. ' x' → logprob: -15.125000953674316
    3. '0' → logprob: -16.125
    4. '[x' → logprob: -17.0
    5. '   ' → logprob: -17.375
    6. '{x' → logprob: -17.875
    7. ')x' → logprob: -18.0
    8. 'X' → logprob: -18.125
    9. '	x' → logprob: -18.75
    10. ' ' → logprob: -19.375

Token 1974: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7643670439720154
    2. '[x' → logprob: -1.0143671035766602
    3. '])' → logprob: -1.7643671035766602
    4. ']' → logprob: -9.26436710357666
    5. '[' → logprob: -9.38936710357666
    6. '(x' → logprob: -9.76436710357666
    7. '))' → logprob: -9.76436710357666
    8. '[y' → logprob: -10.01436710357666
    9. ' )' → logprob: -10.38936710357666
    10. 'x' → logprob: -10.51436710357666

Token 1975: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31453022360801697
    2. ' for' → logprob: -1.5645302534103394
    3. ')' → logprob: -2.81453013420105
    4. '[x' → logprob: -7.439530372619629
    5. '(x' → logprob: -10.064530372619629
    6. '```' → logprob: -10.564530372619629
    7. '))' → logprob: -10.939530372619629
    8. '[' → logprob: -11.064530372619629
    9. '[y' → logprob: -11.189530372619629
    10. '               ' → logprob: -11.814530372619629

Token 1976: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00033546582562848926
    2. ' x' → logprob: -8.000335693359375
    3. '	x' → logprob: -18.375335693359375
    4. 'range' → logprob: -18.625335693359375
    5. ')x' → logprob: -19.750335693359375
    6. ' in' → logprob: -20.500335693359375
    7. '_x' → logprob: -20.500335693359375
    8. '(x' → logprob: -20.750335693359375
    9. 'in' → logprob: -20.750335693359375
    10. ' range' → logprob: -21.250335693359375

Token 1977: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931552886962891
    2. ' in' → logprob: -0.6931552886962891
    3. 'x' → logprob: -11.943155288696289
    4. '	in' → logprob: -15.068155288696289
    5. ' x' → logprob: -15.068155288696289
    6. ')' → logprob: -15.193155288696289
    7. ' ' → logprob: -15.318155288696289
    8. '0' → logprob: -15.568155288696289
    9. '
' → logprob: -15.693155288696289
    10. '<|end|>' → logprob: -17.56815528869629

Token 1978: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. '(range' → logprob: -20.500123977661133
    4. '
' → logprob: -21.125123977661133
    5. '	range' → logprob: -21.625123977661133
    6. '   ' → logprob: -23.500123977661133
    7. '0' → logprob: -23.875123977661133
    8. '.range' → logprob: -23.875123977661133
    9. ')' → logprob: -24.000123977661133
    10. '_range' → logprob: -24.000123977661133

Token 1979: '(X' (ID: 17061)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.030685000121593475
    2. ' range' → logprob: -3.5306849479675293
    3. '(range' → logprob: -7.030684947967529
    4. 'in' → logprob: -10.155685424804688
    5. ' in' → logprob: -11.780685424804688
    6. '	range' → logprob: -13.030685424804688
    7. ' xrange' → logprob: -14.280685424804688
    8. '.range' → logprob: -15.655685424804688
    9. ')' → logprob: -15.905685424804688
    10. '   ' → logprob: -16.030685424804688

Token 1980: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00820354837924242
    2. ')))' → logprob: -4.883203506469727
    3. ')' → logprob: -7.508203506469727
    4. ' ))' → logprob: -11.133203506469727
    5. '))
' → logprob: -11.633203506469727
    6. '           ' → logprob: -12.508203506469727
    7. ']))' → logprob: -12.758203506469727
    8. 'if' → logprob: -12.883203506469727
    9. '))))' → logprob: -12.883203506469727
    10. '}))' → logprob: -13.133203506469727

Token 1981: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02134179323911667
    2. '```' → logprob: -4.396341800689697
    3. ' if' → logprob: -5.396341800689697
    4. '<|end|>' → logprob: -5.646341800689697
    5. '
' → logprob: -8.396341323852539
    6. '#' → logprob: -9.271341323852539
    7. '``' → logprob: -9.521341323852539
    8. '<|end|>' → logprob: -9.896341323852539
    9. ')' → logprob: -10.146341323852539
    10. '[' → logprob: -10.396341323852539

Token 1982: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16090373694896698
    2. '__' → logprob: -1.9109036922454834
    3. '_' → logprob: -7.7859039306640625
    4. '_name' → logprob: -9.410903930664062
    5. ' _' → logprob: -10.035903930664062
    6. '___' → logprob: -10.535903930664062
    7. '```' → logprob: -10.660903930664062
    8. ' ' → logprob: -10.660903930664062
    9. ' ' → logprob: -11.535903930664062
    10. ' main' → logprob: -11.660903930664062

Token 1983: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0021202845964580774
    2. '==' → logprob: -6.877120494842529
    3. '.__' → logprob: -8.252120018005371
    4. '__.__' → logprob: -8.252120018005371
    5. '[' → logprob: -8.877120018005371
    6. '__.' → logprob: -9.502120018005371
    7. '```' → logprob: -9.502120018005371
    8. ' ==' → logprob: -9.752120018005371
    9. 'if' → logprob: -10.502120018005371
    10. '__["' → logprob: -10.502120018005371

Token 1984: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006258221692405641
    2. '__.__' → logprob: -8.000625610351562
    3. '```' → logprob: -9.250625610351562
    4. '==' → logprob: -9.375625610351562
    5. '=="' → logprob: -10.250625610351562
    6. '__.' → logprob: -10.375625610351562
    7. '__":
' → logprob: -10.875625610351562
    8. '__["' → logprob: -12.375625610351562
    9. '__('' → logprob: -12.750625610351562
    10. '__
' → logprob: -12.750625610351562

Token 1985: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4700027406215668
    2. '==' → logprob: -1.0950027704238892
    3. ' ==' → logprob: -4.0950026512146
    4. '=="' → logprob: -4.0950026512146
    5. '=='' → logprob: -4.9700026512146
    6. '__.__' → logprob: -9.595003128051758
    7. '==
' → logprob: -10.095003128051758
    8. '```' → logprob: -11.095003128051758
    9. '.__' → logprob: -11.595003128051758
    10. '__.' → logprob: -11.845003128051758

Token 1986: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12695299088954926
    2. ''' → logprob: -2.126952886581421
    3. '__' → logprob: -10.626953125
    4. ' "__' → logprob: -14.876953125
    5. '"name' → logprob: -16.126953125
    6. ''name' → logprob: -17.251953125
    7. ' '__' → logprob: -17.876953125
    8. ''"' → logprob: -18.001953125
    9. '"class' → logprob: -18.126953125
    10. '"user' → logprob: -18.251953125

Token 1987: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.020145203918218613
    2. '__' → logprob: -4.020145416259766
    3. '__":
' → logprob: -7.270145416259766
    4. 'name' → logprob: -7.770145416259766
    5. '_main' → logprob: -7.895145416259766
    6. 'py' → logprob: -8.520145416259766
    7. 'python' → logprob: -10.020145416259766
    8. '__':
' → logprob: -10.520145416259766
    9. '__
' → logprob: -10.645145416259766
    10. 'print' → logprob: -10.770145416259766

Token 1988: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.06299562007188797
    2. '__' → logprob: -2.812995672225952
    3. '__':
' → logprob: -7.062995433807373
    4. '__["' → logprob: -9.312995910644531
    5. '__.' → logprob: -9.937995910644531
    6. '__.__' → logprob: -11.062995910644531
    7. '__
' → logprob: -12.312995910644531
    8. '__:' → logprob: -12.437995910644531
    9. '__("' → logprob: -13.187995910644531
    10. '__[' → logprob: -13.687995910644531

Token 1989: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00019853383128065616
    2. ' main' → logprob: -9.625198364257812
    3. '__' → logprob: -9.625198364257812
    4. '_main' → logprob: -10.375198364257812
    5. '	main' → logprob: -11.375198364257812
    6. '   ' → logprob: -12.250198364257812
    7. '(main' → logprob: -12.375198364257812
    8. 'run' → logprob: -12.500198364257812
    9. '
' → logprob: -12.875198364257812
    10. 'python' → logprob: -13.000198364257812

Token 1990: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.0
    3. '   ' → logprob: -17.25
    4. '	main' → logprob: -17.5
    5. '_main' → logprob: -22.625
    6. '.main' → logprob: -24.125
    7. '(main' → logprob: -24.25
    8. 'import' → logprob: -25.125
    9. '```' → logprob: -25.625
    10. 'mainwindow' → logprob: -27.0

Token 1991: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1989
Tokens correctement prédits (1ère position, stricte): 765
Tokens correctement prédits (1ère position, avec adaptation): 822
Tokens correctement prédits (top 10): 1595
Précision stricte (1ère position): 38.46%
Précision adaptée (1ère position): 41.33%
Précision (top 10): 80.19%
================================================================================
